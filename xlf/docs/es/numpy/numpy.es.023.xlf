<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="7f0e6c0ce58755cae988a618ed26819ae121acf3" translate="yes" xml:space="preserve">
          <source>The scipy implementation is recommended over this function: it is a proper ufunc written in C, and more than an order of magnitude faster.</source>
          <target state="translated">Se recomienda la implementación de la scipy sobre esta función:es una ufunc apropiada escrita en C,y más de un orden de magnitud más rápido.</target>
        </trans-unit>
        <trans-unit id="678645818896e353218894b08bcbb6e53102fa78" translate="yes" xml:space="preserve">
          <source>The scipy.org should be a PR at &lt;a href=&quot;https://github.com/scipy/scipy.org&quot;&gt;https://github.com/scipy/scipy.org&lt;/a&gt;. The file that needs modification is &lt;code&gt;www/index.rst&lt;/code&gt;. Search for &lt;code&gt;News&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076d96a74fdcb13373554cd33f5faa0a5c841024" translate="yes" xml:space="preserve">
          <source>The second argument passed in to the Py_InitModule function is a structure that makes it easy to to define functions in the module. In the example given above, the mymethods structure would have been defined earlier in the file (usually right before the init{name} subroutine) to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d1e93a16e6953d6dc31578f1bc0e4185a42885" translate="yes" xml:space="preserve">
          <source>The second element, &lt;em&gt;field_dtype&lt;/em&gt;, can be anything that can be interpreted as a data-type.</source>
          <target state="translated">El segundo elemento, &lt;em&gt;field_dtype&lt;/em&gt; , puede ser cualquier cosa que pueda interpretarse como un tipo de datos.</target>
        </trans-unit>
        <trans-unit id="4ebced32cc87e2c3435e9151b36d6b3c2cfaf845" translate="yes" xml:space="preserve">
          <source>The second is to set the error-handler to &amp;lsquo;log&amp;rsquo;, using &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt;&lt;code&gt;seterr&lt;/code&gt;&lt;/a&gt;. Floating-point errors then trigger a call to the &amp;lsquo;write&amp;rsquo; method of the provided object.</source>
          <target state="translated">El segundo es configurar el manejador de errores en 'log', usando &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt; &lt;code&gt;seterr&lt;/code&gt; &lt;/a&gt; . Los errores de punto flotante desencadenan una llamada al m&amp;eacute;todo 'escribir' del objeto proporcionado.</target>
        </trans-unit>
        <trans-unit id="6f31ccc451074791f12a3d0394615bd3d0e3cdd2" translate="yes" xml:space="preserve">
          <source>The second issue to understand is how indices correspond to the order the array is stored in memory. In Fortran the first index is the most rapidly varying index when moving through the elements of a two dimensional array as it is stored in memory. If you adopt the matrix convention for indexing, then this means the matrix is stored one column at a time (since the first index moves to the next row as it changes). Thus Fortran is considered a Column-major language. C has just the opposite convention. In C, the last index changes most rapidly as one moves through the array as stored in memory. Thus C is a Row-major language. The matrix is stored by rows. Note that in both cases it presumes that the matrix convention for indexing is being used, i.e., for both Fortran and C, the first index is the row. Note this convention implies that the indexing convention is invariant and that the data order changes to keep that so.</source>
          <target state="translated">La segunda cuestión que hay que entender es cómo los índices corresponden al orden en que la matriz se almacena en la memoria.En Fortran,el primer índice es el que varía más rápidamente cuando se mueve a través de los elementos de una matriz bidimensional,ya que se almacena en la memoria.Si se adopta la convención matricial para la indexación,esto significa que la matriz se almacena una columna a la vez (ya que el primer índice se mueve a la siguiente fila a medida que cambia).Por lo tanto,Fortran se considera un lenguaje de columnas.C tiene justo la convención opuesta.En C,el último índice cambia más rápidamente a medida que uno se mueve a través de la matriz como se almacena en la memoria.Por lo tanto,C es un lenguaje de Fila Mayor.La matriz se almacena por filas.Nótese que en ambos casos se presume que se está utilizando la convención de la matriz para la indexación,es decir,tanto para Fortran como para C,el primer índice es la fila.Nótese que esta convención implica que la convención de indexación es invariable y que el orden de los datos cambia para mantenerla así.</target>
        </trans-unit>
        <trans-unit id="453559558db2eb56414a46dbdb5de2376ea80083" translate="yes" xml:space="preserve">
          <source>The second rule of broadcasting ensures that arrays with a size of 1 along a particular dimension act as if they had the size of the array with the largest shape along that dimension. The value of the array element is assumed to be the same along that dimension for the &amp;ldquo;broadcast&amp;rdquo; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df98d64a8c2e83a203df1c7d9ac9de7f5c519eeb" translate="yes" xml:space="preserve">
          <source>The second through seventh row contain summary data that is of a different type than that which we are going to examine, so we will need to exclude that from the data with which we will work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0109b90f8697e3f57d897bca8c421d8285d2b1" translate="yes" xml:space="preserve">
          <source>The second way is to upload the PKG_INFO file inside the sdist dir in the web interface of PyPI. The source tarball can also be uploaded through this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aabd3a3162d932dde5dce5c1f8c9f863c647d1b" translate="yes" xml:space="preserve">
          <source>The second way of indexing with booleans is more similar to integer indexing; for each dimension of the array we give a 1D boolean array selecting the slices we want:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a3455570bd434e86d6f052ed9b9a1d4a2c4251" translate="yes" xml:space="preserve">
          <source>The sections of a function&amp;rsquo;s docstring are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb125eefbda7190ce972cb7d8270d5ae89dc7b7" translate="yes" xml:space="preserve">
          <source>The self.paths(&amp;hellip;) method is applied to all lists that may contain paths.</source>
          <target state="translated">El m&amp;eacute;todo self.paths (&amp;hellip;) se aplica a todas las listas que pueden contener rutas.</target>
        </trans-unit>
        <trans-unit id="8c7148486ba5b770e99fd7463ec63c216dee7366" translate="yes" xml:space="preserve">
          <source>The separation between elements for each dimension (the &amp;lsquo;stride&amp;rsquo;). This does not have to be a multiple of the element size</source>
          <target state="translated">La separaci&amp;oacute;n entre elementos para cada dimensi&amp;oacute;n (el 'paso'). No es necesario que sea un m&amp;uacute;ltiplo del tama&amp;ntilde;o del elemento.</target>
        </trans-unit>
        <trans-unit id="9cd2ff64b895aeb8d0b16f3694ac2aea08560437" translate="yes" xml:space="preserve">
          <source>The series in this context are finite sums of the corresponding polynomial basis functions multiplied by coefficients. For instance, a power series looks like</source>
          <target state="translated">Las series en este contexto son sumas finitas de las correspondientes funciones de base polinómica multiplicadas por coeficientes.Por ejemplo,una serie de potencia se ve como</target>
        </trans-unit>
        <trans-unit id="9285a776c2a659ee75e7938ac17b155070381205" translate="yes" xml:space="preserve">
          <source>The series instance to be converted.</source>
          <target state="translated">La instancia de la serie a ser convertida.</target>
        </trans-unit>
        <trans-unit id="89a518ad1f6d727d2464d8f222f198c518f126e6" translate="yes" xml:space="preserve">
          <source>The series is reduced to degree &lt;code&gt;deg&lt;/code&gt; by discarding the high order terms. The value of &lt;code&gt;deg&lt;/code&gt; must be a non-negative integer.</source>
          <target state="translated">La serie se reduce a grados &lt;code&gt;deg&lt;/code&gt; descartando los t&amp;eacute;rminos de orden superior. El valor de &lt;code&gt;deg&lt;/code&gt; debe ser un n&amp;uacute;mero entero no negativo.</target>
        </trans-unit>
        <trans-unit id="adbbacc122f5859d958a7eb7009d4955c1c2c537" translate="yes" xml:space="preserve">
          <source>The series is reduced to length &lt;code&gt;size&lt;/code&gt; by discarding the high degree terms. The value of &lt;code&gt;size&lt;/code&gt; must be a positive integer.</source>
          <target state="translated">La serie se reduce al &lt;code&gt;size&lt;/code&gt; longitud descartando los t&amp;eacute;rminos de alto grado. El valor de &lt;code&gt;size&lt;/code&gt; debe ser un n&amp;uacute;mero entero positivo.</target>
        </trans-unit>
        <trans-unit id="38262a9c7d66cebff5a42640a9df021a775761be" translate="yes" xml:space="preserve">
          <source>The set of available codecs comes from the Python standard library, and may be extended at runtime. For more information, see the &lt;a href=&quot;https://docs.python.org/dev/library/codecs.html#module-codecs&quot;&gt;&lt;code&gt;codecs&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">El conjunto de c&amp;oacute;decs disponibles proviene de la biblioteca est&amp;aacute;ndar de Python y se puede ampliar en tiempo de ejecuci&amp;oacute;n. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte el m&amp;oacute;dulo de &lt;a href=&quot;https://docs.python.org/dev/library/codecs.html#module-codecs&quot;&gt; &lt;code&gt;codecs&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a717e3302b8636b7790364bffe6b5a183f3f6e7f" translate="yes" xml:space="preserve">
          <source>The set of available codecs comes from the Python standard library, and may be extended at runtime. For more information, see the codecs module.</source>
          <target state="translated">El conjunto de códecs disponibles proviene de la biblioteca estándar de Python,y puede ser ampliado en tiempo de ejecución.Para obtener más información,consulte el módulo de códecs.</target>
        </trans-unit>
        <trans-unit id="f3119f479b7378be171f9e5461ebc7ae89470f50" translate="yes" xml:space="preserve">
          <source>The set of characters that the returned character is chosen from. The default set is &amp;lsquo;GDFgdf&amp;rsquo;.</source>
          <target state="translated">El conjunto de caracteres del que se elige el car&amp;aacute;cter devuelto. El conjunto predeterminado es 'GDFgdf'.</target>
        </trans-unit>
        <trans-unit id="a3a4541aef2e0618e33ebd5e18d9c022d28bcaa8" translate="yes" xml:space="preserve">
          <source>The set of functions that convert the data of a column to a value. The converters can also be used to provide a default value for missing data: &lt;code&gt;converters = {3: lambda s: float(s or 0)}&lt;/code&gt;.</source>
          <target state="translated">El conjunto de funciones que convierten los datos de una columna en un valor. Los convertidores tambi&amp;eacute;n se pueden utilizar para proporcionar un valor predeterminado para los datos faltantes: &lt;code&gt;converters = {3: lambda s: float(s or 0)}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e26f5391f4384da7c676eb1e9d468550abb0eb1" translate="yes" xml:space="preserve">
          <source>The set of int values is not a subset of the uint values for types with the same number of bits, something not reflected in &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt;&lt;code&gt;PyArray_MinScalarType&lt;/code&gt;&lt;/a&gt;, but handled as a special case in PyArray_ResultType.</source>
          <target state="translated">El conjunto de valores int no es un subconjunto de los valores uint para tipos con el mismo n&amp;uacute;mero de bits, algo que no se refleja en &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt; &lt;code&gt;PyArray_MinScalarType&lt;/code&gt; &lt;/a&gt; , pero se maneja como un caso especial en PyArray_ResultType.</target>
        </trans-unit>
        <trans-unit id="e76841686484db8628455fd162b8197749bc84c1" translate="yes" xml:space="preserve">
          <source>The set of int values is not a subset of the uint values for types with the same number of bits, something not reflected in &lt;a href=&quot;numpy.min_scalar_type#numpy.min_scalar_type&quot;&gt;&lt;code&gt;min_scalar_type&lt;/code&gt;&lt;/a&gt;, but handled as a special case in &lt;a href=&quot;#numpy.result_type&quot;&gt;&lt;code&gt;result_type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">El conjunto de valores int no es un subconjunto de los valores uint para tipos con el mismo n&amp;uacute;mero de bits, algo que no se refleja en &lt;a href=&quot;numpy.min_scalar_type#numpy.min_scalar_type&quot;&gt; &lt;code&gt;min_scalar_type&lt;/code&gt; &lt;/a&gt; , pero se maneja como un caso especial en &lt;a href=&quot;#numpy.result_type&quot;&gt; &lt;code&gt;result_type&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="561107923e2d5ef74733b059316312382b1f95e9" translate="yes" xml:space="preserve">
          <source>The set of strings corresponding to missing data.</source>
          <target state="translated">El conjunto de cadenas correspondientes a los datos que faltan.</target>
        </trans-unit>
        <trans-unit id="3c3fdff23bd130c5708b43d7769884cc7638d9dc" translate="yes" xml:space="preserve">
          <source>The set of values to be used as default when the data are missing.</source>
          <target state="translated">El conjunto de valores que se usará como predeterminado cuando falten los datos.</target>
        </trans-unit>
        <trans-unit id="40c5a46b247f5eb179525001f8ba092f80c0ed2a" translate="yes" xml:space="preserve">
          <source>The setup function for all three methods is &lt;code&gt;construct_reduce&lt;/code&gt;. This function creates a reducing loop object and fills it with parameters needed to complete the loop. All of the methods only work on ufuncs that take 2-inputs and return 1 output. Therefore, the underlying 1-D loop is selected assuming a signature of [ &lt;code&gt;otype&lt;/code&gt;, &lt;code&gt;otype&lt;/code&gt;, &lt;code&gt;otype&lt;/code&gt; ] where &lt;code&gt;otype&lt;/code&gt; is the requested reduction data-type. The buffer size and error handling is then retrieved from (per-thread) global storage. For small arrays that are mis-aligned or have incorrect data-type, a copy is made so that the un-buffered section of code is used. Then, the looping strategy is selected. If there is 1 element or 0 elements in the array, then a simple looping method is selected. If the array is not mis-aligned and has the correct data-type, then strided looping is selected. Otherwise, buffered looping must be performed. Looping parameters are then established, and the return array is constructed. The output array is of a different shape depending on whether the method is reduce, accumulate, or reduceat. If an output array is already provided, then it&amp;rsquo;s shape is checked. If the output array is not C-contiguous, aligned, and of the correct data type, then a temporary copy is made with the WRITEBACKIFCOPY flag set. In this way, the methods will be able to work with a well-behaved output array but the result will be copied back into the true output array when &lt;a href=&quot;c-api.array#c.PyArray_ResolveWritebackIfCopy&quot;&gt;&lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt;&lt;/a&gt; is called at function completion. Finally, iterators are set up to loop over the correct axis (depending on the value of axis provided to the method) and the setup routine returns to the actual computation routine.</source>
          <target state="translated">La funci&amp;oacute;n de configuraci&amp;oacute;n para los tres m&amp;eacute;todos es &lt;code&gt;construct_reduce&lt;/code&gt; . Esta funci&amp;oacute;n crea un objeto de bucle reductor y lo llena con los par&amp;aacute;metros necesarios para completar el bucle. Todos los m&amp;eacute;todos solo funcionan en ufuncs que toman 2 entradas y devuelven 1 salida. Por lo tanto, el bucle 1-D subyacente se selecciona asumiendo una firma de [ &lt;code&gt;otype&lt;/code&gt; , &lt;code&gt;otype&lt;/code&gt; , &lt;code&gt;otype&lt;/code&gt; ] donde &lt;code&gt;otype&lt;/code&gt; es el tipo de datos de reducci&amp;oacute;n solicitado. El tama&amp;ntilde;o del b&amp;uacute;fer y el manejo de errores se recuperan del almacenamiento global (por subproceso). Para arreglos peque&amp;ntilde;os que est&amp;aacute;n mal alineados o tienen un tipo de datos incorrecto, se realiza una copia para que se use la secci&amp;oacute;n de c&amp;oacute;digo sin b&amp;uacute;fer. Luego, se selecciona la estrategia de bucle. Si hay 1 elemento o 0 elementos en la matriz, se selecciona un m&amp;eacute;todo de bucle simple. Si la matriz no est&amp;aacute; desalineada y tiene el tipo de datos correcto, se selecciona el bucle escalonado. De lo contrario, se debe realizar un bucle en b&amp;uacute;fer. A continuaci&amp;oacute;n, se establecen los par&amp;aacute;metros de bucle y se construye la matriz de retorno. La matriz de salida tiene una forma diferente dependiendo de si el m&amp;eacute;todo es reducir, acumular o reducir. Si ya se proporciona una matriz de salida, se verifica su forma. Si la matriz de salida no es C-contigua, alineada,y del tipo de datos correcto, entonces se realiza una copia temporal con el indicador WRITEBACKIFCOPY establecido. De esta manera, los m&amp;eacute;todos podr&amp;aacute;n funcionar con una matriz de salida con buen comportamiento, pero el resultado se copiar&amp;aacute; de nuevo en la matriz de salida verdadera cuando&lt;a href=&quot;c-api.array#c.PyArray_ResolveWritebackIfCopy&quot;&gt; &lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt; &lt;/a&gt; se llama al finalizar la funci&amp;oacute;n. Por &amp;uacute;ltimo, los iteradores se configuran para recorrer el eje correcto (seg&amp;uacute;n el valor del eje proporcionado al m&amp;eacute;todo) y la rutina de configuraci&amp;oacute;n vuelve a la rutina de c&amp;aacute;lculo real.</target>
        </trans-unit>
        <trans-unit id="26040668927e88fa78277a9dd0406a200dc72c4f" translate="yes" xml:space="preserve">
          <source>The setup function for all three methods is &lt;code&gt;construct_reduce&lt;/code&gt;. This function creates a reducing loop object and fills it with parameters needed to complete the loop. All of the methods only work on ufuncs that take 2-inputs and return 1 output. Therefore, the underlying 1-D loop is selected assuming a signature of [ &lt;code&gt;otype&lt;/code&gt;, &lt;code&gt;otype&lt;/code&gt;, &lt;code&gt;otype&lt;/code&gt; ] where &lt;code&gt;otype&lt;/code&gt; is the requested reduction data-type. The buffer size and error handling is then retrieved from (per-thread) global storage. For small arrays that are mis-aligned or have incorrect data-type, a copy is made so that the un-buffered section of code is used. Then, the looping strategy is selected. If there is 1 element or 0 elements in the array, then a simple looping method is selected. If the array is not mis-aligned and has the correct data-type, then strided looping is selected. Otherwise, buffered looping must be performed. Looping parameters are then established, and the return array is constructed. The output array is of a different shape depending on whether the method is reduce, accumulate, or reduceat. If an output array is already provided, then it&amp;rsquo;s shape is checked. If the output array is not C-contiguous, aligned, and of the correct data type, then a temporary copy is made with the WRITEBACKIFCOPY flag set. In this way, the methods will be able to work with a well-behaved output array but the result will be copied back into the true output array when &lt;a href=&quot;c-api/array#c.PyArray_ResolveWritebackIfCopy&quot;&gt;&lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt;&lt;/a&gt; is called at function completion. Finally, iterators are set up to loop over the correct axis (depending on the value of axis provided to the method) and the setup routine returns to the actual computation routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780e857a060059f3e4636a17060f123b8f85b3b2" translate="yes" xml:space="preserve">
          <source>The shape (always C-style contiguous) of the sub-array as a Python tuple.</source>
          <target state="translated">La forma (siempre contigua en forma de C)del subconjunto como una tupla de Pitón.</target>
        </trans-unit>
        <trans-unit id="9bd591fada3b4117c12a2a1f4d689c069ec359b8" translate="yes" xml:space="preserve">
          <source>The shape and data-type of &lt;code&gt;a&lt;/code&gt; define these same attributes of the returned array.</source>
          <target state="translated">La forma y el tipo de datos de &lt;code&gt;a&lt;/code&gt; definen estos mismos atributos de la matriz devuelta.</target>
        </trans-unit>
        <trans-unit id="ea4fdc5d91eb3f313e977fbfd63ada0a25a66896" translate="yes" xml:space="preserve">
          <source>The shape and data-type of &lt;code&gt;prototype&lt;/code&gt; define these same attributes of the returned array.</source>
          <target state="translated">La forma y el tipo de datos del &lt;code&gt;prototype&lt;/code&gt; definen estos mismos atributos de la matriz devuelta.</target>
        </trans-unit>
        <trans-unit id="de0758f703e3713cedaff1b24e8618c254649ffe" translate="yes" xml:space="preserve">
          <source>The shape of an array can be changed with various commands. Note that the following three commands all return a modified array, but do not change the original array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cbdf85b9592ec5dbddfd31ccd2c86de9452ccc" translate="yes" xml:space="preserve">
          <source>The shape of array into which the indices from &lt;code&gt;multi_index&lt;/code&gt; apply.</source>
          <target state="translated">La forma de la matriz en la que se aplican los &amp;iacute;ndices de &lt;code&gt;multi_index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86ea4631bc5657813d3aa6a6102c3531d8908358" translate="yes" xml:space="preserve">
          <source>The shape of each output is determined from the loop dimensions plus the output&amp;rsquo;s core dimensions</source>
          <target state="translated">La forma de cada salida se determina a partir de las dimensiones del bucle m&amp;aacute;s las dimensiones del n&amp;uacute;cleo de la salida.</target>
        </trans-unit>
        <trans-unit id="345c4787e4fcac13ce0e228d7aa0f85b31312232" translate="yes" xml:space="preserve">
          <source>The shape of the array if we are creating a new file in &amp;ldquo;write&amp;rdquo; mode, in which case this parameter is required. Otherwise, this parameter is ignored and is thus optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432cd297e760e974a03d449cad5f33c7ccb0d645" translate="yes" xml:space="preserve">
          <source>The shape of the array is preserved, but the elements are reordered.</source>
          <target state="translated">La forma del conjunto se conserva,pero los elementos se reordenan.</target>
        </trans-unit>
        <trans-unit id="fb341212b6f41ae91b019292b043b6094616b784" translate="yes" xml:space="preserve">
          <source>The shape of the array to be iterated over.</source>
          <target state="translated">La forma de la matriz a ser iterada.</target>
        </trans-unit>
        <trans-unit id="a015ba13ffb4171bac494c802f272bfb87417c5d" translate="yes" xml:space="preserve">
          <source>The shape of the array to use for unraveling &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="translated">La forma de la matriz que se utilizar&amp;aacute; para desentra&amp;ntilde;ar &lt;code&gt;indices&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9865a6cbf282f8b0812325650b93441342efdd22" translate="yes" xml:space="preserve">
          <source>The shape of the array.</source>
          <target state="translated">La forma de la matriz.</target>
        </trans-unit>
        <trans-unit id="634c22963834ab0f96135fc087ba541ef29a9351" translate="yes" xml:space="preserve">
          <source>The shape of the broadcasted result (only &lt;code&gt;nd&lt;/code&gt; slots are used).</source>
          <target state="translated">La forma del resultado emitido (solo se utilizan &lt;code&gt;nd&lt;/code&gt; ranuras).</target>
        </trans-unit>
        <trans-unit id="b35ba9f7409c5e79b96888dfb9fe12c59d8276ca" translate="yes" xml:space="preserve">
          <source>The shape of the desired array.</source>
          <target state="translated">La forma del conjunto deseado.</target>
        </trans-unit>
        <trans-unit id="f8fd7f6a4e1f2e482a2f6d64364dd79594585ba9" translate="yes" xml:space="preserve">
          <source>The shape of the gamma distribution. Must be non-negative.</source>
          <target state="translated">La forma de la distribución gamma.Debe ser no negativa.</target>
        </trans-unit>
        <trans-unit id="40d55544c4b29b3e5cccb47aa9255a7413094e32" translate="yes" xml:space="preserve">
          <source>The shape of the grid.</source>
          <target state="translated">La forma de la red.</target>
        </trans-unit>
        <trans-unit id="666be679bea4cf4401944751286d85ef9bcbd1ab" translate="yes" xml:space="preserve">
          <source>The shape of the new array. Defaults to &lt;code&gt;x.shape&lt;/code&gt;.</source>
          <target state="translated">La forma de la nueva matriz. Por defecto es &lt;code&gt;x.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91c1116d9a62d56b653126b73ba2224a6c45b6f9" translate="yes" xml:space="preserve">
          <source>The shape of the output depends on the size of &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt;, and may be larger than &lt;a href=&quot;numpy.array#numpy.array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; (this happens if &lt;code&gt;len(indices) &amp;gt; array.shape[axis]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be82fcdcf7279745a92907a11f17b40fb49cfa8e" translate="yes" xml:space="preserve">
          <source>The shape of the output depends on the size of &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt;, and may be larger than &lt;code&gt;a&lt;/code&gt; (this happens if &lt;code&gt;len(indices) &amp;gt; a.shape[axis]&lt;/code&gt;).</source>
          <target state="translated">La forma de la salida depende del tama&amp;ntilde;o de los &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt; y puede ser mayor que &lt;code&gt;a&lt;/code&gt; (esto sucede si &lt;code&gt;len(indices) &amp;gt; a.shape[axis]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fed05fc9900417f6dd9d3b1246dc76a2025a600b" translate="yes" xml:space="preserve">
          <source>The shape of the result consists of the non-contracted axes of the first tensor, followed by the non-contracted axes of the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac69f494ba7fae89ed73806775a3c39622a5622" translate="yes" xml:space="preserve">
          <source>The shape of the return value is described above.</source>
          <target state="translated">La forma del valor de retorno se describe arriba.</target>
        </trans-unit>
        <trans-unit id="e988320cd7cc6c4a6c3dd57d84589dcf99664d33" translate="yes" xml:space="preserve">
          <source>The shape of the returned array is described above.</source>
          <target state="translated">La forma de la matriz devuelta se describe arriba.</target>
        </trans-unit>
        <trans-unit id="3b10de911cd8ce2a5b2b31e29ac9a30a0aac3857" translate="yes" xml:space="preserve">
          <source>The shape of the returned matrix is &lt;code&gt;x.shape + (order,)&lt;/code&gt;, where</source>
          <target state="translated">La forma de la matriz devuelta es &lt;code&gt;x.shape + (order,)&lt;/code&gt; , donde</target>
        </trans-unit>
        <trans-unit id="80077b48358a43ab7ec659d3d5fde9d46b95fb86" translate="yes" xml:space="preserve">
          <source>The shape parameter must be given if converting from a ctypes POINTER. The shape parameter is ignored if converting from a ctypes array</source>
          <target state="translated">El parámetro de la forma debe ser dado si se convierte de un tipo POINTER.El parámetro de forma se ignora si se convierte de una matriz ctypes</target>
        </trans-unit>
        <trans-unit id="fd56dfcd2507095f44b621f1654fe8bcd97f2720" translate="yes" xml:space="preserve">
          <source>The shape property is usually used to get the current shape of an array, but may also be used to reshape the array in-place by assigning a tuple of array dimensions to it. As with &lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt;&lt;code&gt;numpy.reshape&lt;/code&gt;&lt;/a&gt;, one of the new shape dimensions can be -1, in which case its value is inferred from the size of the array and the remaining dimensions. Reshaping an array in-place will fail if a copy is required.</source>
          <target state="translated">La propiedad de forma se usa generalmente para obtener la forma actual de una matriz, pero tambi&amp;eacute;n se puede usar para remodelar la matriz en el lugar asign&amp;aacute;ndole una tupla de dimensiones de matriz. Al igual que con &lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt; &lt;code&gt;numpy.reshape&lt;/code&gt; &lt;/a&gt; , una de las nuevas dimensiones de forma puede ser -1, en cuyo caso su valor se infiere del tama&amp;ntilde;o de la matriz y las dimensiones restantes. La remodelaci&amp;oacute;n de una matriz en el lugar fallar&amp;aacute; si se requiere una copia.</target>
        </trans-unit>
        <trans-unit id="80c5a27079e0e5c1026de7841cb52daa2c677404" translate="yes" xml:space="preserve">
          <source>The shapes of x, y, and the condition are broadcast together:</source>
          <target state="translated">Las formas de x,y,y la condición se transmiten juntas:</target>
        </trans-unit>
        <trans-unit id="052d67151c1ebcb6fedc9c36859ec35b9f5a3388" translate="yes" xml:space="preserve">
          <source>The shapes to be broadcast against each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b788b2f85a3ae45e9f183bcbf59e96d87edbee" translate="yes" xml:space="preserve">
          <source>The shifted array.</source>
          <target state="translated">La matriz cambiada.</target>
        </trans-unit>
        <trans-unit id="a03c5ad272b253bf040f55b1c50d0da307be8ac5" translate="yes" xml:space="preserve">
          <source>The sign of &lt;code&gt;x2&lt;/code&gt; is copied to &lt;code&gt;x1&lt;/code&gt;. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">El signo de &lt;code&gt;x2&lt;/code&gt; se copia en &lt;code&gt;x1&lt;/code&gt; . Si &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; , deben ser ampliables a una forma com&amp;uacute;n (que se convierte en la forma de la salida).</target>
        </trans-unit>
        <trans-unit id="9a96a866f0e16363f3d77343ed89edc57a089b06" translate="yes" xml:space="preserve">
          <source>The sign of &lt;code&gt;x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">El signo de &lt;code&gt;x&lt;/code&gt; . Este es un escalar si &lt;code&gt;x&lt;/code&gt; es un escalar.</target>
        </trans-unit>
        <trans-unit id="39e50e1c53e79cf4e2679a1929a8b236a790ceb1" translate="yes" xml:space="preserve">
          <source>The signature defines &amp;ldquo;core&amp;rdquo; dimensionality of input and output variables, and thereby also defines the contraction of the dimensions. The signature is represented by a string of the following format:</source>
          <target state="translated">La firma define la dimensionalidad &quot;central&quot; de las variables de entrada y salida y, por lo tanto, tambi&amp;eacute;n define la contracci&amp;oacute;n de las dimensiones. La firma est&amp;aacute; representada por una cadena con el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="077a1bbb529dbf66c684eb23b600d5d4d40598cf" translate="yes" xml:space="preserve">
          <source>The signature determines how the dimensions of each input/output array are split into core and loop dimensions:</source>
          <target state="translated">La firma determina cómo las dimensiones de cada matriz de entrada/salida se dividen en dimensiones de núcleo y bucle:</target>
        </trans-unit>
        <trans-unit id="b9b7ac7b939268ddc59ac1f05c9ebd5e07bf4b21" translate="yes" xml:space="preserve">
          <source>The signature file is saved to &lt;code&gt;fib1.pyf&lt;/code&gt; (see &lt;code&gt;-h&lt;/code&gt; flag) and its contents is shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03fcdecb4ad7904d6d08273575b7efc1ecd0bcc" translate="yes" xml:space="preserve">
          <source>The signature of &lt;code&gt;__array_finalize__&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51657129c6ecba9775cfcd86518eea063cc02856" translate="yes" xml:space="preserve">
          <source>The signature of &lt;code&gt;__array_ufunc__&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eceedf301ec9322c1f2e0e1b62bac4ce44cf0b3" translate="yes" xml:space="preserve">
          <source>The signature of a Fortran block data has the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cca1f52e338494fc6137e9ab73032ffedaab99" translate="yes" xml:space="preserve">
          <source>The signature of a Fortran routine has the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c6d5e035a62abf39bca07984559eb4c2eed470" translate="yes" xml:space="preserve">
          <source>The simplest and fastest estimator. Only takes into account the data size.</source>
          <target state="translated">El más simple y rápido estimador.Sólo tiene en cuenta el tamaño de los datos.</target>
        </trans-unit>
        <trans-unit id="f68339a598fdad0949b432ba0f071db76d4162b2" translate="yes" xml:space="preserve">
          <source>The simplest case of indexing with &lt;em&gt;N&lt;/em&gt; integers returns an &lt;a href=&quot;arrays.scalars#arrays-scalars&quot;&gt;array scalar&lt;/a&gt; representing the corresponding item. As in Python, all indices are zero-based: for the &lt;em&gt;i&lt;/em&gt;-th index</source>
          <target state="translated">El caso m&amp;aacute;s simple de indexaci&amp;oacute;n con &lt;em&gt;N&lt;/em&gt; n&amp;uacute;meros enteros devuelve una &lt;a href=&quot;arrays.scalars#arrays-scalars&quot;&gt;matriz escalar que&lt;/a&gt; representa el elemento correspondiente. Como en Python, todos los &amp;iacute;ndices est&amp;aacute;n basados ​​en cero: para el &lt;em&gt;i&lt;/em&gt; -&amp;eacute;simo &amp;iacute;ndice</target>
        </trans-unit>
        <trans-unit id="7ff2686b623caae27117f3c5885c7d6ae7623a3a" translate="yes" xml:space="preserve">
          <source>The simplest way to assign values to a structured array is using python tuples. Each assigned value should be a tuple of length equal to the number of fields in the array, and not a list or array as these will trigger numpy&amp;rsquo;s broadcasting rules. The tuple&amp;rsquo;s elements are assigned to the successive fields of the array, from left to right:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082b93c290be349a4bf83756ecca01f8d723b944" translate="yes" xml:space="preserve">
          <source>The simplest way to create a record array is with &lt;code&gt;numpy.rec.array&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47091f34475faaaa1ba4de46a8ad6549a8d5a1f2" translate="yes" xml:space="preserve">
          <source>The simulation of a C-style array is not complete for 2-d and 3-d arrays. For example, the simulated arrays of pointers cannot be passed to subroutines expecting specific, statically-defined 2-d and 3-d arrays. To pass to functions requiring those kind of inputs, you must statically define the required array and copy data.</source>
          <target state="translated">La simulación de una matriz de estilo C no está completa para las matrices de 2 y 3 dimensiones.Por ejemplo,las matrices simuladas de punteros no pueden ser pasadas a subrutinas que esperan matrices específicas y definidas estáticamente de 2 y 3 dimensiones.Para pasar a las funciones que requieren ese tipo de entradas,se debe definir estáticamente la matriz requerida y copiar los datos.</target>
        </trans-unit>
        <trans-unit id="51abf12252a4d92a90b52830906a8c2bd4002537" translate="yes" xml:space="preserve">
          <source>The sinc function is</source>
          <target state="translated">La función sincera es</target>
        </trans-unit>
        <trans-unit id="ca8287ab64739fe1883b42785585fd67081d297d" translate="yes" xml:space="preserve">
          <source>The sinc function is used in various signal processing applications, including in anti-aliasing, in the construction of a Lanczos resampling filter, and in interpolation.</source>
          <target state="translated">La función sinc se utiliza en diversas aplicaciones de procesamiento de señales,como el antialiasing,la construcción de un filtro de remuestreo Lanczos y la interpolación.</target>
        </trans-unit>
        <trans-unit id="237e09976f401d9a2f1baabe777a697734eddddd" translate="yes" xml:space="preserve">
          <source>The sine is one of the fundamental functions of trigonometry (the mathematical study of triangles). Consider a circle of radius 1 centered on the origin. A ray comes in from the</source>
          <target state="translated">El seno es una de las funciones fundamentales de la trigonometría (el estudio matemático de los triángulos).Consideremos un círculo de radio 1 centrado en el origen.Un rayo entra desde el</target>
        </trans-unit>
        <trans-unit id="eeee63a3a1e6205f2e90fb5ed65d351e3798fee5" translate="yes" xml:space="preserve">
          <source>The sine of each element of x. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">El seno de cada elemento de x. Este es un escalar si &lt;code&gt;x&lt;/code&gt; es un escalar.</target>
        </trans-unit>
        <trans-unit id="b9c09c4d5914f0dda5c0b150c5f3b90e766bd841" translate="yes" xml:space="preserve">
          <source>The single threaded call directly uses the BitGenerator.</source>
          <target state="translated">La llamada de un solo hilo utiliza directamente el BitGenerator.</target>
        </trans-unit>
        <trans-unit id="4e52363a0d1aff84bc0a45f224b49ba218e2396a" translate="yes" xml:space="preserve">
          <source>The situation with numpy makes this issue yet more complicated. The internal machinery of numpy arrays is flexible enough to accept any ordering of indices. One can simply reorder indices by manipulating the internal stride information for arrays without reordering the data at all. NumPy will know how to map the new index order to the data without moving the data.</source>
          <target state="translated">La situación con el numpy hace que este asunto sea aún más complicado.La maquinaria interna de las matrices de numpy es lo suficientemente flexible para aceptar cualquier orden de índices.Uno puede simplemente reordenar los índices manipulando la información de zancadas internas de los arreglos sin reordenar los datos en absoluto.NumPy sabrá cómo asignar el nuevo orden de los índices a los datos sin moverlos.</target>
        </trans-unit>
        <trans-unit id="6d5ab6e4dc0fec0528be17bc5d4e3ad5f3c1a900" translate="yes" xml:space="preserve">
          <source>The size in each dimension of the output shape is the maximum of all the input sizes in that dimension.</source>
          <target state="translated">El tamaño en cada dimensión de la forma de salida es el máximo de todos los tamaños de entrada en esa dimensión.</target>
        </trans-unit>
        <trans-unit id="9a3ff85912460f4dce83d9377238c987b64400fb" translate="yes" xml:space="preserve">
          <source>The size of each dimension of the array can be passed as individual parameters or as the elements of a tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f600bd12887e2a8896ddc5bed9d6833c21b9000" translate="yes" xml:space="preserve">
          <source>The size of each dimension of the array.</source>
          <target state="translated">El tamaño de cada dimensión del conjunto.</target>
        </trans-unit>
        <trans-unit id="53e85438a85fb68e962963fce436f922d4bad0ac" translate="yes" xml:space="preserve">
          <source>The size of each word. This should only be either &lt;a href=&quot;../../../arrays.scalars#numpy.uint32&quot;&gt;&lt;code&gt;uint32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../arrays.scalars#numpy.uint64&quot;&gt;&lt;code&gt;uint64&lt;/code&gt;&lt;/a&gt;. Strings (&lt;code&gt;&amp;lsquo;uint32&amp;rsquo;&lt;/code&gt;, &lt;code&gt;&amp;lsquo;uint64&amp;rsquo;&lt;/code&gt;) are fine. Note that requesting &lt;a href=&quot;../../../arrays.scalars#numpy.uint64&quot;&gt;&lt;code&gt;uint64&lt;/code&gt;&lt;/a&gt; will draw twice as many bits as &lt;a href=&quot;../../../arrays.scalars#numpy.uint32&quot;&gt;&lt;code&gt;uint32&lt;/code&gt;&lt;/a&gt; for the same &lt;code&gt;n_words&lt;/code&gt;. This is a convenience for &lt;code&gt;BitGenerator`s that express their states as `uint64&lt;/code&gt; arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfaa2928c38d19614d82820fec94f09b6747c0f" translate="yes" xml:space="preserve">
          <source>The size of each word. This should only be either &lt;code&gt;uint32&lt;/code&gt; or &lt;code&gt;uint64&lt;/code&gt;. Strings (&lt;code&gt;&amp;lsquo;uint32&amp;rsquo;&lt;/code&gt;, &lt;code&gt;&amp;lsquo;uint64&amp;rsquo;&lt;/code&gt;) are fine. Note that requesting &lt;code&gt;uint64&lt;/code&gt; will draw twice as many bits as &lt;code&gt;uint32&lt;/code&gt; for the same &lt;code&gt;n_words&lt;/code&gt;. This is a convenience for &lt;code&gt;BitGenerator`s that express their states as `uint64&lt;/code&gt; arrays.</source>
          <target state="translated">El tama&amp;ntilde;o de cada palabra. Esto solo deber&amp;iacute;a ser &lt;code&gt;uint32&lt;/code&gt; o &lt;code&gt;uint64&lt;/code&gt; . Las cadenas ( &lt;code&gt;&amp;lsquo;uint32&amp;rsquo;&lt;/code&gt; , &lt;code&gt;&amp;lsquo;uint64&amp;rsquo;&lt;/code&gt; ) est&amp;aacute;n bien. Tenga en cuenta que solicitar &lt;code&gt;uint64&lt;/code&gt; extraer&amp;aacute; el doble de bits que &lt;code&gt;uint32&lt;/code&gt; para las mismas &lt;code&gt;n_words&lt;/code&gt; . Esto es una conveniencia para &lt;code&gt;BitGenerator`s that express their states as `uint64&lt;/code&gt; matrices `uint64 .</target>
        </trans-unit>
        <trans-unit id="28a984c9bdd908f87770bb977436d6a66f4306a1" translate="yes" xml:space="preserve">
          <source>The size of the array minus 1 in each dimension.</source>
          <target state="translated">El tamaño de la matriz menos 1 en cada dimensión.</target>
        </trans-unit>
        <trans-unit id="c41c1278613c7ed690de9865ed90f9449e9899a0" translate="yes" xml:space="preserve">
          <source>The size of the arrays for which the returned indices will be valid.</source>
          <target state="translated">El tamaño de las matrices para las que los índices devueltos serán válidos.</target>
        </trans-unit>
        <trans-unit id="d186d8343ee709824ee3589500ce1f21e3851f01" translate="yes" xml:space="preserve">
          <source>The size of the dtype element in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0386b240ebd0571b8a05df9bc4fa0aef34289c1" translate="yes" xml:space="preserve">
          <source>The size, along each dimension, of the arrays for which the returned indices can be used.</source>
          <target state="translated">El tamaño,a lo largo de cada dimensión,de las matrices para las que se pueden utilizar los índices devueltos.</target>
        </trans-unit>
        <trans-unit id="14747cd54a2f3abe194636cc52acff3e4c5bb985" translate="yes" xml:space="preserve">
          <source>The slice is a &lt;em&gt;view&lt;/em&gt; onto the original &lt;code&gt;c_arr&lt;/code&gt; data. So, when we take a view from the ndarray, we return a new ndarray, of the same class, that points to the data in the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb79b94dc729ec0da33bab5d4cd377a2401e89f0" translate="yes" xml:space="preserve">
          <source>The smaller object to check.</source>
          <target state="translated">El objeto más pequeño para comprobar.</target>
        </trans-unit>
        <trans-unit id="ebb19de9c6970f0b74d4dc788893b77a8ab0bd68" translate="yes" xml:space="preserve">
          <source>The smallest positive floating point number with full precision (see Notes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b26e02affe13f7769ad145c9ef05f90265c054" translate="yes" xml:space="preserve">
          <source>The smallest positive power of the base (2) that causes overflow.</source>
          <target state="translated">La potencia positiva más pequeña de la base (2)que causa el desbordamiento.</target>
        </trans-unit>
        <trans-unit id="52e11ee8daa6593b3d750ee5dc32dda2fcbf193b" translate="yes" xml:space="preserve">
          <source>The smallest positive usable number. Type of &lt;code&gt;tiny&lt;/code&gt; is an appropriate floating point type.</source>
          <target state="translated">El n&amp;uacute;mero &amp;uacute;til positivo m&amp;aacute;s peque&amp;ntilde;o. El tipo de &lt;code&gt;tiny&lt;/code&gt; es un tipo de punto flotante apropiado.</target>
        </trans-unit>
        <trans-unit id="af2a8dd9510ac11ca6b963d4ee773dcefbea79aa" translate="yes" xml:space="preserve">
          <source>The smallest representable number, typically &lt;code&gt;-max&lt;/code&gt;.</source>
          <target state="translated">El n&amp;uacute;mero representable m&amp;aacute;s peque&amp;ntilde;o, t&amp;iacute;picamente &lt;code&gt;-max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a159db5ccf6a60aac5543438bfb54acff104da1e" translate="yes" xml:space="preserve">
          <source>The smallest representable positive number such that &lt;code&gt;1.0 + eps != 1.0&lt;/code&gt;. Type of &lt;code&gt;eps&lt;/code&gt; is an appropriate floating point type.</source>
          <target state="translated">El n&amp;uacute;mero positivo representable m&amp;aacute;s peque&amp;ntilde;o, tal que &lt;code&gt;1.0 + eps != 1.0&lt;/code&gt; . El tipo de &lt;code&gt;eps&lt;/code&gt; es un tipo de punto flotante apropiado.</target>
        </trans-unit>
        <trans-unit id="d9321ebdb39683114ce6992ea6b9cc620e5ef480" translate="yes" xml:space="preserve">
          <source>The smallest representable positive number such that &lt;code&gt;1.0 - epsneg != 1.0&lt;/code&gt;.</source>
          <target state="translated">El n&amp;uacute;mero positivo representable m&amp;aacute;s peque&amp;ntilde;o, tal que &lt;code&gt;1.0 - epsneg != 1.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="528bc510a2ddc52e9f705a28a08910ff17c4b364" translate="yes" xml:space="preserve">
          <source>The smart way</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf4e6a27441f2bc059f1e2263f51d77fbf6e55a" translate="yes" xml:space="preserve">
          <source>The so-called F2PY directives allow using F2PY signature file constructs also in Fortran 77/90 source codes. With this feature you can skip (almost) completely intermediate signature file generations and apply F2PY directly to Fortran source codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff36344b5ce01b9f9447846bf8f8d0ca8bf20cf" translate="yes" xml:space="preserve">
          <source>The solution is the coefficients of the Chebyshev series &lt;code&gt;p&lt;/code&gt; that minimizes the sum of the weighted squared errors</source>
          <target state="translated">La soluci&amp;oacute;n son los coeficientes de la serie &lt;code&gt;p&lt;/code&gt; de Chebyshev que minimiza la suma de los errores cuadrados ponderados</target>
        </trans-unit>
        <trans-unit id="d7b342b5e308288dae8bce1f9ff3a83bc7ae73a3" translate="yes" xml:space="preserve">
          <source>The solution is the coefficients of the Hermite series &lt;code&gt;p&lt;/code&gt; that minimizes the sum of the weighted squared errors</source>
          <target state="translated">La soluci&amp;oacute;n son los coeficientes de la serie de Hermite &lt;code&gt;p&lt;/code&gt; que minimizan la suma de los errores cuadrados ponderados</target>
        </trans-unit>
        <trans-unit id="e858f502931c190b84210ff73e4892a2231f8dea" translate="yes" xml:space="preserve">
          <source>The solution is the coefficients of the HermiteE series &lt;code&gt;p&lt;/code&gt; that minimizes the sum of the weighted squared errors</source>
          <target state="translated">La soluci&amp;oacute;n son los coeficientes de la serie &lt;code&gt;p&lt;/code&gt; de HermiteE que minimiza la suma de los errores cuadrados ponderados</target>
        </trans-unit>
        <trans-unit id="cac2b42634eddb5565b046dffc57149ff94fb5e5" translate="yes" xml:space="preserve">
          <source>The solution is the coefficients of the Laguerre series &lt;code&gt;p&lt;/code&gt; that minimizes the sum of the weighted squared errors</source>
          <target state="translated">La soluci&amp;oacute;n son los coeficientes de la serie de Laguerre &lt;code&gt;p&lt;/code&gt; que minimiza la suma de los errores cuadrados ponderados</target>
        </trans-unit>
        <trans-unit id="acc0f8a9120be725868622995211f9656fc88e64" translate="yes" xml:space="preserve">
          <source>The solution is the coefficients of the Legendre series &lt;code&gt;p&lt;/code&gt; that minimizes the sum of the weighted squared errors</source>
          <target state="translated">La soluci&amp;oacute;n son los coeficientes de la serie de Legendre &lt;code&gt;p&lt;/code&gt; que minimiza la suma de los errores cuadrados ponderados</target>
        </trans-unit>
        <trans-unit id="132408df155a153e982d44f873f2076aed312f9a" translate="yes" xml:space="preserve">
          <source>The solution is the coefficients of the polynomial &lt;code&gt;p&lt;/code&gt; that minimizes the sum of the weighted squared errors</source>
          <target state="translated">La soluci&amp;oacute;n son los coeficientes del polinomio &lt;code&gt;p&lt;/code&gt; que minimiza la suma de los errores cuadrados ponderados</target>
        </trans-unit>
        <trans-unit id="727489824facdfd8e793d7820b6d48d439e20ed1" translate="yes" xml:space="preserve">
          <source>The solution minimizes the squared error</source>
          <target state="translated">La solución minimiza el error al cuadrado</target>
        </trans-unit>
        <trans-unit id="905babbec7af7dc86acc47da182cc43822ce2de5" translate="yes" xml:space="preserve">
          <source>The solution will be to either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7110277074b52a752297c7e2a8351687eb1a36" translate="yes" xml:space="preserve">
          <source>The solutions are computed using LAPACK routine &lt;code&gt;_gesv&lt;/code&gt;.</source>
          <target state="translated">Las soluciones se calculan utilizando la rutina LAPACK &lt;code&gt;_gesv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2324f65c28650d2bb749a64e0d6878a8a423096e" translate="yes" xml:space="preserve">
          <source>The sort order for complex numbers is lexicographic. If both the real and imaginary parts are non-nan then the order is determined by the real parts except when they are equal, in which case the order is determined by the imaginary parts.</source>
          <target state="translated">El orden de clasificación de los números complejos es lexicográfico.Si tanto las partes reales como las imaginarias no son iguales,entonces el orden está determinado por las partes reales,excepto cuando son iguales,en cuyo caso el orden está determinado por las partes imaginarias.</target>
        </trans-unit>
        <trans-unit id="94fa27637cf0004fe36c14f580e547f6911b6110" translate="yes" xml:space="preserve">
          <source>The sorted unique values.</source>
          <target state="translated">Los valores únicos ordenados.</target>
        </trans-unit>
        <trans-unit id="c380c0b74f7e3ca7cbe5b2bb1b45003f6fb70837" translate="yes" xml:space="preserve">
          <source>The sorting algorithm used.</source>
          <target state="translated">El algoritmo de clasificación utilizado.</target>
        </trans-unit>
        <trans-unit id="e03d33ebb9f3232a066dd4b0991b32cb56211358" translate="yes" xml:space="preserve">
          <source>The source and destination arrays during assignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2132b1a1146e5e5ced071e842080bf9a009b6944" translate="yes" xml:space="preserve">
          <source>The source array.</source>
          <target state="translated">La matriz de la fuente.</target>
        </trans-unit>
        <trans-unit id="f3a4e63ab5a7b2b3732df5942d36a724d124f0ea" translate="yes" xml:space="preserve">
          <source>The source code is only returned for objects written in Python.</source>
          <target state="translated">El código fuente sólo se devuelve para los objetos escritos en Python.</target>
        </trans-unit>
        <trans-unit id="cf16b74745b78ed96effaeceb909805fb279ce98" translate="yes" xml:space="preserve">
          <source>The source code is only returned for objects written in Python. Many functions and classes are defined in C and will therefore not return useful information.</source>
          <target state="translated">El código fuente sólo se devuelve para los objetos escritos en Python.Muchas funciones y clases están definidas en C y por lo tanto no devuelven información útil.</target>
        </trans-unit>
        <trans-unit id="809a1cfd22069f38c46105c92eebf5c576bb4207" translate="yes" xml:space="preserve">
          <source>The source string can be any valid Fortran code. If you want to save the extension-module source code then a suitable file-name can be provided by the &lt;code&gt;source_fn&lt;/code&gt; keyword to the compile function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5904ef77ea8bffca88dd379e736043b3ab2537" translate="yes" xml:space="preserve">
          <source>The spacing between sample points when &lt;code&gt;x&lt;/code&gt; is None. The default is 1.</source>
          <target state="translated">El espaciado entre puntos muestrales cuando &lt;code&gt;x&lt;/code&gt; es Ninguno. El valor predeterminado es 1.</target>
        </trans-unit>
        <trans-unit id="f3c0291e43c18442ce997268f6d827c51450c140" translate="yes" xml:space="preserve">
          <source>The spacing of values of &lt;code&gt;x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">El espaciado de los valores de &lt;code&gt;x&lt;/code&gt; . Este es un escalar si &lt;code&gt;x&lt;/code&gt; es un escalar.</target>
        </trans-unit>
        <trans-unit id="90f7163cd42de5312873857f6e49d754d0181393" translate="yes" xml:space="preserve">
          <source>The specific algorithm used is as follows.</source>
          <target state="translated">El algoritmo específico utilizado es el siguiente.</target>
        </trans-unit>
        <trans-unit id="87dcde88b185fa2a9572c4ddf0c6760b6d6e72a4" translate="yes" xml:space="preserve">
          <source>The specified line is given by &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">La l&amp;iacute;nea especificada viene dada por &lt;code&gt;off + scl*x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80beaa85dfa05c582a58cbd93778b4e21b5c2873" translate="yes" xml:space="preserve">
          <source>The square root of &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; was a scalar, so is &lt;code&gt;out&lt;/code&gt;, otherwise an array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffe340425612aa0e424be1bcdd9b7a397555dd0" translate="yes" xml:space="preserve">
          <source>The stacked array has one more dimension than the input arrays.</source>
          <target state="translated">El conjunto apilado tiene una dimensión más que los conjuntos de entrada.</target>
        </trans-unit>
        <trans-unit id="b5df163136221ee565809e31a5ec5ce477690b37" translate="yes" xml:space="preserve">
          <source>The standard array can have 24 different data types (and has some support for adding your own types). These data types all have an enumerated type, an enumerated type-character, and a corresponding array scalar Python type object (placed in a hierarchy). There are also standard C typedefs to make it easier to manipulate elements of the given data type. For the numeric types, there are also bit-width equivalent C typedefs and named typenumbers that make it easier to select the precision desired.</source>
          <target state="translated">La matriz estándar puede tener 24 tipos de datos diferentes (y tiene cierto soporte para añadir sus propios tipos).Todos estos tipos de datos tienen un tipo enumerado,un tipo-carácter enumerado y un objeto correspondiente de tipo escalar Python de la matriz (colocado en una jerarquía).También hay tipedefs estándar C para facilitar la manipulación de los elementos del tipo de datos dado.En cuanto a los tipos numéricos,también hay tipedefs C equivalentes en anchura de bits y números de tipo nombrados que facilitan la selección de la precisión deseada.</target>
        </trans-unit>
        <trans-unit id="45b18b5cfbbed3fbae9c681cc6f3c1fa70483591" translate="yes" xml:space="preserve">
          <source>The standard casting rules ensure that a scalar cannot up-cast an array unless the scalar is of a fundamentally different kind of data (i.e. under a different hierarchy in the data type hierarchy) then the array:</source>
          <target state="translated">Las reglas estándar de fundición aseguran que un escalar no puede ascender un conjunto a menos que el escalar sea de un tipo de datos fundamentalmente diferente (es decir,bajo una jerarquía diferente en la jerarquía de tipos de datos)que el conjunto:</target>
        </trans-unit>
        <trans-unit id="3b087bfb5ae783fa5041fbcb80716e85b4cfcd9d" translate="yes" xml:space="preserve">
          <source>The standard deviation is the square root of the average of the squared deviations from the mean, i.e., &lt;code&gt;std = sqrt(mean(abs(x - x.mean())**2))&lt;/code&gt;.</source>
          <target state="translated">La desviaci&amp;oacute;n est&amp;aacute;ndar es la ra&amp;iacute;z cuadrada del promedio de las desviaciones al cuadrado de la media, es decir, &lt;code&gt;std = sqrt(mean(abs(x - x.mean())**2))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57c54b3c6804893f71da6c87373c7bbb983d07a9" translate="yes" xml:space="preserve">
          <source>The standard deviation is the square root of the average of the squared deviations from the mean, i.e., &lt;code&gt;std = sqrt(mean(x))&lt;/code&gt;, where &lt;code&gt;x = abs(a - a.mean())**2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f057ac9f65af78fe632de7c8031e6f6e2ae80dc" translate="yes" xml:space="preserve">
          <source>The standard deviation is the square root of the average of the squared deviations from the mean: &lt;code&gt;std = sqrt(mean(abs(x - x.mean())**2))&lt;/code&gt;.</source>
          <target state="translated">La desviaci&amp;oacute;n est&amp;aacute;ndar es la ra&amp;iacute;z cuadrada del promedio de las desviaciones al cuadrado de la media: &lt;code&gt;std = sqrt(mean(abs(x - x.mean())**2))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9194bef8dfee2642aab9789d8b2c457a98f783af" translate="yes" xml:space="preserve">
          <source>The standard rules of sequence slicing apply to basic slicing on a per-dimension basis (including using a step index). Some useful concepts to remember include:</source>
          <target state="translated">Las normas estándar de corte de secuencia se aplican al corte básico sobre una base por dimensión (incluyendo el uso de un índice de paso).Algunos conceptos útiles para recordar incluyen:</target>
        </trans-unit>
        <trans-unit id="903735d28aa358318c996f0fbe6f9bd887af58b8" translate="yes" xml:space="preserve">
          <source>The start of the data within the data buffer (an offset relative to the beginning of the data buffer).</source>
          <target state="translated">El inicio de los datos dentro del búfer de datos (un desplazamiento relativo al inicio del búfer de datos).</target>
        </trans-unit>
        <trans-unit id="df2af17caf9f66a81db3bc6a51eb1b52d78258be" translate="yes" xml:space="preserve">
          <source>The start of type numbers used for Custom Data types.</source>
          <target state="translated">El inicio de los números de tipo utilizados para los tipos de datos personalizados.</target>
        </trans-unit>
        <trans-unit id="e63c738294e147bc42d8454a2cacbd481d845725" translate="yes" xml:space="preserve">
          <source>The starting value for this product. See &lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">El valor inicial de este producto. Consulte &lt;a href=&quot;numpy.ufunc.reduce#numpy.ufunc.reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="b49e967087e1769cf1a280ea97d2d8fd93d40ef9" translate="yes" xml:space="preserve">
          <source>The starting value of the sequence.</source>
          <target state="translated">El valor inicial de la secuencia.</target>
        </trans-unit>
        <trans-unit id="be3a2f4f7af9d19db4503332628441741d474403" translate="yes" xml:space="preserve">
          <source>The state of the returned big generator is jumped as-if 2**(128 * jumps) random numbers have been generated.</source>
          <target state="translated">El estado del gran generador devuelto se salta como si se hubieran generado 2**(128*saltos)números aleatorios.</target>
        </trans-unit>
        <trans-unit id="9f0543dedf6d1409b4f87e0823027e644cab05a9" translate="yes" xml:space="preserve">
          <source>The step size is phi-1 when multiplied by 2**128 where phi is the golden ratio.</source>
          <target state="translated">El tamaño del paso es phi-1 cuando se multiplica por 2**128 donde phi es la proporción áurea.</target>
        </trans-unit>
        <trans-unit id="ed6404a00884e4a1c814b4fe32b4f8e4142164f0" translate="yes" xml:space="preserve">
          <source>The steps are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da99252ecc9a954c9ea523c42dd589060111b276" translate="yes" xml:space="preserve">
          <source>The strides of the array. How many bytes needed to jump to the next element in each dimension.</source>
          <target state="translated">Los pasos de la matriz.Cuántos bytes se necesitan para saltar al siguiente elemento en cada dimensión.</target>
        </trans-unit>
        <trans-unit id="6bea4f23f51bf1c5c1b134b3c31652eb62271512" translate="yes" xml:space="preserve">
          <source>The strides of the new array. Defaults to &lt;code&gt;x.strides&lt;/code&gt;.</source>
          <target state="translated">Los pasos de la nueva matriz. El valor predeterminado es &lt;code&gt;x.strides&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e7d4c32101a82d4a575c51fa47c579d84a90ccb" translate="yes" xml:space="preserve">
          <source>The string character corresponding to the scalar type.</source>
          <target state="translated">El carácter de la cadena correspondiente al tipo escalar.</target>
        </trans-unit>
        <trans-unit id="280cdfd9e5006321af13d97ed1dea840dc6157dc" translate="yes" xml:space="preserve">
          <source>The string representation of a structured datatype is shown in the &amp;ldquo;list of tuples&amp;rdquo; form if possible, otherwise numpy falls back to using the more general dictionary form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e3689374848f3f51b64947b16bec4c3ea61c9e" translate="yes" xml:space="preserve">
          <source>The string representation of an array.</source>
          <target state="translated">La representación en cadena de una matriz.</target>
        </trans-unit>
        <trans-unit id="3e6678ed1379ae4a29d74cf130ddd533a3d54faa" translate="yes" xml:space="preserve">
          <source>The string representation of the floating point value</source>
          <target state="translated">La representación en cadena del valor en coma flotante</target>
        </trans-unit>
        <trans-unit id="a73fe28c8757ab0f0da0e2f4243de7dc56a5b482" translate="yes" xml:space="preserve">
          <source>The string separating numbers in the data; extra whitespace between elements is also ignored.</source>
          <target state="translated">La cadena que separa los números en los datos;también se ignoran los espacios en blanco adicionales entre los elementos.</target>
        </trans-unit>
        <trans-unit id="3dd7799be74e76e0df59b70e60e88893f1e79944" translate="yes" xml:space="preserve">
          <source>The string to load.</source>
          <target state="translated">La cuerda para cargar.</target>
        </trans-unit>
        <trans-unit id="fe1a3737165141949913fff90aaf8e13cf8c53af" translate="yes" xml:space="preserve">
          <source>The string to test for equality against the expected string.</source>
          <target state="translated">La cuerda para probar la igualdad contra la cuerda esperada.</target>
        </trans-unit>
        <trans-unit id="abd4042bc9b171ded494b956ae5b9d9577f995c1" translate="yes" xml:space="preserve">
          <source>The string used to separate values. By default, any consecutive whitespaces act as delimiter. An integer or sequence of integers can also be provided as width(s) of each field.</source>
          <target state="translated">La cadena utilizada para separar los valores.Por defecto,cualquier espacio en blanco consecutivo actúa como delimitador.También se puede proporcionar un entero o secuencia de enteros como ancho(s)de cada campo.</target>
        </trans-unit>
        <trans-unit id="af52fb130d33fe69945cefb6f52e5cf4ca3f8766" translate="yes" xml:space="preserve">
          <source>The string used to separate values. For backwards compatibility, byte strings will be decoded as &amp;lsquo;latin1&amp;rsquo;. The default is whitespace.</source>
          <target state="translated">La cadena utilizada para separar valores. Para compatibilidad con versiones anteriores, las cadenas de bytes se decodificar&amp;aacute;n como 'latin1'. El valor predeterminado es el espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="9d54c543599ad13e3bb6b6bb26859ee068b06992" translate="yes" xml:space="preserve">
          <source>The strings produced by the Python float.hex method can be used as input for floats.</source>
          <target state="translated">Las cuerdas producidas por el método Python float.hex pueden utilizarse como entrada para los flotadores.</target>
        </trans-unit>
        <trans-unit id="4e980753b02b50913c2b5e0d5a5fa0dd49eac85d" translate="yes" xml:space="preserve">
          <source>The structured dtype of the output array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05daa592464e6166b985d1ccf981f505cab14119" translate="yes" xml:space="preserve">
          <source>The sub-arrays whose main diagonals we just obtained; note that each corresponds to fixing the right-most (column) axis, and that the diagonals are &amp;ldquo;packed&amp;rdquo; in rows.</source>
          <target state="translated">Las submatrices cuyas diagonales principales acabamos de obtener; tenga en cuenta que cada uno corresponde a la fijaci&amp;oacute;n del eje m&amp;aacute;s a la derecha (columna), y que las diagonales est&amp;aacute;n &quot;empaquetadas&quot; en filas.</target>
        </trans-unit>
        <trans-unit id="032fe52a10dbbb96d8d2155ebf017c5a37d540fb" translate="yes" xml:space="preserve">
          <source>The sub-diagonal at and below which the array is filled. &lt;code&gt;k&lt;/code&gt; = 0 is the main diagonal, while &lt;code&gt;k&lt;/code&gt; &amp;lt; 0 is below it, and &lt;code&gt;k&lt;/code&gt; &amp;gt; 0 is above. The default is 0.</source>
          <target state="translated">La sub-diagonal en y debajo de la cual se llena la matriz. &lt;code&gt;k&lt;/code&gt; = 0 es la diagonal principal, mientras que &lt;code&gt;k&lt;/code&gt; &amp;lt;0 est&amp;aacute; debajo de ella y &lt;code&gt;k&lt;/code&gt; &amp;gt; 0 est&amp;aacute; arriba. El valor predeterminado es 0.</target>
        </trans-unit>
        <trans-unit id="8e6c361139d8c7c0ac565e0bf2e23b72d7fed91d" translate="yes" xml:space="preserve">
          <source>The subarrays &lt;code&gt;grid[k]&lt;/code&gt; contains the N-D array of indices along the &lt;code&gt;k-th&lt;/code&gt; axis. Explicitly:</source>
          <target state="translated">La &lt;code&gt;grid[k]&lt;/code&gt; subarreglos [k] contiene el arreglo ND de &amp;iacute;ndices a lo largo del eje &lt;code&gt;k-th&lt;/code&gt; . Expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="c73621fe8c8d7b0663f28b8d7e7772440297f53c" translate="yes" xml:space="preserve">
          <source>The subscripts string is a comma-separated list of subscript labels, where each label refers to a dimension of the corresponding operand. Whenever a label is repeated it is summed, so &lt;code&gt;np.einsum('i,i', a, b)&lt;/code&gt; is equivalent to &lt;a href=&quot;numpy.inner#numpy.inner&quot;&gt;&lt;code&gt;np.inner(a,b)&lt;/code&gt;&lt;/a&gt;. If a label appears only once, it is not summed, so &lt;code&gt;np.einsum('i', a)&lt;/code&gt; produces a view of &lt;code&gt;a&lt;/code&gt; with no changes. A further example &lt;code&gt;np.einsum('ij,jk', a, b)&lt;/code&gt; describes traditional matrix multiplication and is equivalent to &lt;a href=&quot;numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;np.matmul(a,b)&lt;/code&gt;&lt;/a&gt;. Repeated subscript labels in one operand take the diagonal. For example, &lt;code&gt;np.einsum('ii', a)&lt;/code&gt; is equivalent to &lt;a href=&quot;numpy.trace#numpy.trace&quot;&gt;&lt;code&gt;np.trace(a)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La cadena de sub&amp;iacute;ndices es una lista separada por comas de etiquetas de sub&amp;iacute;ndices, donde cada etiqueta se refiere a una dimensi&amp;oacute;n del operando correspondiente. Siempre que se repite una etiqueta, se suma, por lo que &lt;code&gt;np.einsum('i,i', a, b)&lt;/code&gt; es equivalente a &lt;a href=&quot;numpy.inner#numpy.inner&quot;&gt; &lt;code&gt;np.inner(a,b)&lt;/code&gt; &lt;/a&gt; . Si una etiqueta aparece s&amp;oacute;lo una vez, no se resume, por lo &lt;code&gt;np.einsum('i', a)&lt;/code&gt; produce una vista de &lt;code&gt;a&lt;/code&gt; sin cambios. Otro ejemplo &lt;code&gt;np.einsum('ij,jk', a, b)&lt;/code&gt; describe la multiplicaci&amp;oacute;n de matrices tradicional y es equivalente a &lt;a href=&quot;numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;np.matmul(a,b)&lt;/code&gt; &lt;/a&gt; . Las etiquetas de sub&amp;iacute;ndice repetidas en un operando toman la diagonal. Por ejemplo, &lt;code&gt;np.einsum('ii', a)&lt;/code&gt; es equivalente a &lt;a href=&quot;numpy.trace#numpy.trace&quot;&gt; &lt;code&gt;np.trace(a)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67e5fbff128f593f5baf173c69fe839b3262add2" translate="yes" xml:space="preserve">
          <source>The substring to search for.</source>
          <target state="translated">La subcadena a buscar.</target>
        </trans-unit>
        <trans-unit id="965c999c4a333ea7538f32117fa173b48c1340d4" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;, element-wise. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">La suma de &lt;code&gt;x1&lt;/code&gt; y &lt;code&gt;x2&lt;/code&gt; , por elementos. Este es un escalar si tanto &lt;code&gt;x1&lt;/code&gt; como &lt;code&gt;x2&lt;/code&gt; son escalares.</target>
        </trans-unit>
        <trans-unit id="6ad40e475222ea9afc0452e8c7fd45129517c8c0" translate="yes" xml:space="preserve">
          <source>The sum of an empty array is the neutral element 0:</source>
          <target state="translated">La suma de una matriz vacía es el elemento neutro 0:</target>
        </trans-unit>
        <trans-unit id="d51acbb68e0ec9e47200775b381bf1325a23c32a" translate="yes" xml:space="preserve">
          <source>The sum of the inputs. If either input is a poly1d object, then the output is also a poly1d object. Otherwise, it is a 1D array of polynomial coefficients from highest to lowest degree.</source>
          <target state="translated">La suma de las entradas.Si cualquiera de las entradas es un objeto poly1d,entonces la salida es también un objeto poly1d.De lo contrario,es una matriz 1D de coeficientes polinómicos de mayor a menor grado.</target>
        </trans-unit>
        <trans-unit id="a83a6a324c47c50fcc7b05d36f9de3513626990f" translate="yes" xml:space="preserve">
          <source>The suppression behavior is selected with the &lt;code&gt;axis&lt;/code&gt; parameter.</source>
          <target state="translated">El comportamiento de supresi&amp;oacute;n se selecciona con el par&amp;aacute;metro de &lt;code&gt;axis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac5e9039faffaa312745861609180dbee345923d" translate="yes" xml:space="preserve">
          <source>The symbol suffix avoids the symbol name clashes between 32-bit and 64-bit BLAS/LAPACK libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22d2ca3e9d62707042d4e5eab8a754482cb7bf9" translate="yes" xml:space="preserve">
          <source>The syntax of signature files is presented below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc008fb51ab0096c0ab2810136d6a94b39d8b6ae" translate="yes" xml:space="preserve">
          <source>The syntax specification for signature files (.pyf files) is borrowed from the Fortran 90/95 language specification. Almost all Fortran 90/95 standard constructs are understood, both in free and fixed format (recall that Fortran 77 is a subset of Fortran 90/95). F2PY introduces also some extensions to Fortran 90/95 language specification that help designing Fortran to Python interface, make it more &amp;ldquo;Pythonic&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cac57b443c7e139444cef039c708d06cc974fbe" translate="yes" xml:space="preserve">
          <source>The t test is based on an assumption that the data come from a Normal distribution. The t test provides a way to test whether the sample mean (that is the mean calculated from the data) is a good estimate of the true mean.</source>
          <target state="translated">La prueba t se basa en la suposición de que los datos provienen de una distribución normal.La prueba t proporciona una forma de comprobar si la media de la muestra (es decir,la media calculada a partir de los datos)es una buena estimación de la verdadera media.</target>
        </trans-unit>
        <trans-unit id="09daeca7b9767c35345c4b41aa696722f6d0ab8e" translate="yes" xml:space="preserve">
          <source>The table below gives rough equivalents for some common MATLAB expressions. These are similar expressions, not equivalents. For details, see the &lt;a href=&quot;../reference/index#reference&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7fcb5dad38e6ecd0517ba513e487ccaccafb31" translate="yes" xml:space="preserve">
          <source>The table below gives rough equivalents for some common MATLAB&amp;reg; expressions. &lt;strong&gt;These are not exact equivalents&lt;/strong&gt;, but rather should be taken as hints to get you going in the right direction. For more detail read the built-in documentation on the NumPy functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1feedf873323b1df0d515f29065f1cceac91a5f6" translate="yes" xml:space="preserve">
          <source>The template language blocks are delimited by &lt;code&gt;/**begin repeat&lt;/code&gt; and &lt;code&gt;/**end repeat**/&lt;/code&gt; lines, which may also be nested using consecutively numbered delimiting lines such as &lt;code&gt;/**begin repeat1&lt;/code&gt; and &lt;code&gt;/**end repeat1**/&lt;/code&gt;:</source>
          <target state="translated">Los bloques de idioma de la plantilla est&amp;aacute;n delimitados por &lt;code&gt;/**begin repeat&lt;/code&gt; y &lt;code&gt;/**end repeat**/&lt;/code&gt; l&amp;iacute;neas, que tambi&amp;eacute;n se pueden anidar usando l&amp;iacute;neas delimitadas numeradas consecutivamente como &lt;code&gt;/**begin repeat1&lt;/code&gt; y &lt;code&gt;/**end repeat1**/&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2a419cbcd05b123b547d845ae2a3bfd3fd96fc50" translate="yes" xml:space="preserve">
          <source>The tensor dot product of the input.</source>
          <target state="translated">El punto tensor producto de la entrada.</target>
        </trans-unit>
        <trans-unit id="babafa633a1d5ffe1e85308352efa2b576e666e1" translate="yes" xml:space="preserve">
          <source>The term broadcasting describes how numpy treats arrays with different shapes during arithmetic operations. Subject to certain constraints, the smaller array is &amp;ldquo;broadcast&amp;rdquo; across the larger array so that they have compatible shapes. Broadcasting provides a means of vectorizing array operations so that looping occurs in C instead of Python. It does this without making needless copies of data and usually leads to efficient algorithm implementations. There are, however, cases where broadcasting is a bad idea because it leads to inefficient use of memory that slows computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0567674780e936db24c51c4154cb1e7bb19a5fb1" translate="yes" xml:space="preserve">
          <source>The test can also be inverted:</source>
          <target state="translated">La prueba también puede ser invertida:</target>
        </trans-unit>
        <trans-unit id="a043640318788c216d9c35c72474b86e64a58875" translate="yes" xml:space="preserve">
          <source>The test is equivalent to &lt;code&gt;allclose(actual, desired, rtol, atol)&lt;/code&gt; (note that &lt;code&gt;allclose&lt;/code&gt; has different default values). It compares the difference between &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;desired&lt;/code&gt; to &lt;code&gt;atol + rtol * abs(desired)&lt;/code&gt;.</source>
          <target state="translated">La prueba es equivalente a &lt;code&gt;allclose(actual, desired, rtol, atol)&lt;/code&gt; (tenga en cuenta que &lt;code&gt;allclose&lt;/code&gt; tiene diferentes valores predeterminados). Compara la diferencia entre lo &lt;code&gt;actual&lt;/code&gt; y lo &lt;code&gt;desired&lt;/code&gt; con &lt;code&gt;atol + rtol * abs(desired)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d949a99e166ed49b879032942f22bd239ac73b6e" translate="yes" xml:space="preserve">
          <source>The test is marked as skipped if &lt;code&gt;SkipMyTest&lt;/code&gt; evaluates to nonzero, and the message in verbose test output is the second argument given to &lt;code&gt;skipif&lt;/code&gt;. Similarly, a test can be marked as a known failure by using &lt;code&gt;xfail&lt;/code&gt;:</source>
          <target state="translated">La prueba se marca como omitida si &lt;code&gt;SkipMyTest&lt;/code&gt; se eval&amp;uacute;a como distinto de cero, y el mensaje en la salida de prueba detallada es el segundo argumento dado a &lt;code&gt;skipif&lt;/code&gt; . De manera similar, una prueba se puede marcar como falla conocida usando &lt;code&gt;xfail&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7223f3e04a5764585f35605ea5b6d016c41f2fa7" translate="yes" xml:space="preserve">
          <source>The test method may take two or more arguments; the first &lt;code&gt;label&lt;/code&gt; is a string specifying what should be tested and the second &lt;code&gt;verbose&lt;/code&gt; is an integer giving the level of output verbosity. See the docstring &lt;a href=&quot;#numpy.test&quot;&gt;&lt;code&gt;numpy.test&lt;/code&gt;&lt;/a&gt; for details. The default value for &lt;code&gt;label&lt;/code&gt; is &amp;lsquo;fast&amp;rsquo; - which will run the standard tests. The string &amp;lsquo;full&amp;rsquo; will run the full battery of tests, including those identified as being slow to run. If &lt;code&gt;verbose&lt;/code&gt; is 1 or less, the tests will just show information messages about the tests that are run; but if it is greater than 1, then the tests will also provide warnings on missing tests. So if you want to run every test and get messages about which modules don&amp;rsquo;t have tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bd6917449fe181340a2938e0dac494fbfea5fe" translate="yes" xml:space="preserve">
          <source>The test method may take two or more arguments; the first, &lt;code&gt;label&lt;/code&gt; is a string specifying what should be tested and the second, &lt;code&gt;verbose&lt;/code&gt; is an integer giving the level of output verbosity. See the docstring for numpy.test for details. The default value for &lt;code&gt;label&lt;/code&gt; is &amp;lsquo;fast&amp;rsquo; - which will run the standard tests. The string &amp;lsquo;full&amp;rsquo; will run the full battery of tests, including those identified as being slow to run. If &lt;code&gt;verbose&lt;/code&gt; is 1 or less, the tests will just show information messages about the tests that are run; but if it is greater than 1, then the tests will also provide warnings on missing tests. So if you want to run every test and get messages about which modules don&amp;rsquo;t have tests:</source>
          <target state="translated">El m&amp;eacute;todo de prueba puede tomar dos o m&amp;aacute;s argumentos; el primero, &lt;code&gt;label&lt;/code&gt; es una cadena que especifica lo que se debe probar y el segundo, &lt;code&gt;verbose&lt;/code&gt; es un n&amp;uacute;mero entero que da el nivel de verbosidad de salida. Consulte la cadena de documentos de numpy.test para obtener m&amp;aacute;s detalles. El valor predeterminado para la &lt;code&gt;label&lt;/code&gt; es &quot;r&amp;aacute;pido&quot;, que ejecutar&amp;aacute; las pruebas est&amp;aacute;ndar. La cadena 'full' ejecutar&amp;aacute; la bater&amp;iacute;a completa de pruebas, incluidas aquellas identificadas como lentas de ejecutar. Si &lt;code&gt;verbose&lt;/code&gt; es 1 o menos, las pruebas solo mostrar&amp;aacute;n mensajes de informaci&amp;oacute;n sobre las pruebas que se ejecutan; pero si es mayor que 1, las pruebas tambi&amp;eacute;n proporcionar&amp;aacute;n advertencias sobre las pruebas faltantes. Entonces, si desea ejecutar todas las pruebas y recibir mensajes sobre qu&amp;eacute; m&amp;oacute;dulos no tienen pruebas:</target>
        </trans-unit>
        <trans-unit id="03733f354e779af14d028cdbdf0476c16657d14e" translate="yes" xml:space="preserve">
          <source>The test to label as slow.</source>
          <target state="translated">La prueba para etiquetar como lenta.</target>
        </trans-unit>
        <trans-unit id="28bda9f13cb5fd35de4d1871d5d1a6b158a05b66" translate="yes" xml:space="preserve">
          <source>The test verifies identical shapes and that the elements of &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;desired&lt;/code&gt; satisfy.</source>
          <target state="translated">La prueba verifica formas id&amp;eacute;nticas y que los elementos &lt;code&gt;actual&lt;/code&gt; y &lt;code&gt;desired&lt;/code&gt; satisfacen.</target>
        </trans-unit>
        <trans-unit id="a7fabe2aaa71feebc60270bd4d75ad9164f05bed" translate="yes" xml:space="preserve">
          <source>The test verifies that the elements of &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;desired&lt;/code&gt; satisfy.</source>
          <target state="translated">La prueba verifica que los elementos de &lt;code&gt;actual&lt;/code&gt; y &lt;code&gt;desired&lt;/code&gt; satisfagan.</target>
        </trans-unit>
        <trans-unit id="bf9247f40709953bae5128ab011a3c6a23e1bb6b" translate="yes" xml:space="preserve">
          <source>The three dimensional series is evaluated at the points &lt;code&gt;(x, y, z)&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; must have the same shape. If any of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, or &lt;code&gt;z&lt;/code&gt; is a list or tuple, it is first converted to an ndarray, otherwise it is left unchanged and if it isn&amp;rsquo;t an ndarray it is treated as a scalar.</source>
          <target state="translated">La serie tridimensional se eval&amp;uacute;a en los puntos &lt;code&gt;(x, y, z)&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; deben tener la misma forma. Si alguno de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;z&lt;/code&gt; es una lista o tupla, primero se convierte en un ndarray, de lo contrario, no se modifica y si no es un ndarray, se trata como un escalar.</target>
        </trans-unit>
        <trans-unit id="ababec7c614f8cc809a5f4b9df993b70ee13a8f8" translate="yes" xml:space="preserve">
          <source>The three dimensional series is evaluated at the points in the Cartesian product of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt;,`y`, or &lt;code&gt;z&lt;/code&gt; is a list or tuple, it is first converted to an ndarray, otherwise it is left unchanged and, if it isn&amp;rsquo;t an ndarray, it is treated as a scalar.</source>
          <target state="translated">La serie tridimensional se eval&amp;uacute;a en los puntos del producto cartesiano de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; . Si &lt;code&gt;x&lt;/code&gt; , `y`, o &lt;code&gt;z&lt;/code&gt; es una lista o tupla, se convierte primero a una ndarray, de lo contrario se deja sin cambios y, si no es un ndarray, se trata como un escalar.</target>
        </trans-unit>
        <trans-unit id="3f792b485609224acbb4d7367551edb56b3d1d82" translate="yes" xml:space="preserve">
          <source>The three division operators are all defined; &lt;code&gt;div&lt;/code&gt; is active by default, &lt;code&gt;truediv&lt;/code&gt; is active when &lt;a href=&quot;https://docs.python.org/dev/library/__future__.html#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; division is in effect.</source>
          <target state="translated">Los tres operadores de divisi&amp;oacute;n est&amp;aacute;n todos definidos; &lt;code&gt;div&lt;/code&gt; est&amp;aacute; activo por defecto, &lt;code&gt;truediv&lt;/code&gt; est&amp;aacute; activo cuando la divisi&amp;oacute;n &lt;a href=&quot;https://docs.python.org/dev/library/__future__.html#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt; est&amp;aacute; en vigor.</target>
        </trans-unit>
        <trans-unit id="6953aff01d51815d13e09f72484f920fa7369db2" translate="yes" xml:space="preserve">
          <source>The thresholds above deal with floating point roundoff error in the calculation of the SVD. However, you may have more information about the sources of error in &lt;code&gt;M&lt;/code&gt; that would make you consider other tolerance values to detect &lt;em&gt;effective&lt;/em&gt; rank deficiency. The most useful measure of the tolerance depends on the operations you intend to use on your matrix. For example, if your data come from uncertain measurements with uncertainties greater than floating point epsilon, choosing a tolerance near that uncertainty may be preferable. The tolerance may be absolute if the uncertainties are absolute rather than relative.</source>
          <target state="translated">Los umbrales anteriores tratan con el error de redondeo de coma flotante en el c&amp;aacute;lculo de la SVD. Sin embargo, es posible que tenga m&amp;aacute;s informaci&amp;oacute;n sobre las fuentes de error en &lt;code&gt;M&lt;/code&gt; que le har&amp;iacute;a considerar otros valores de tolerancia para detectar &lt;em&gt;una&lt;/em&gt; deficiencia de rango &lt;em&gt;efectiva&lt;/em&gt; . La medida m&amp;aacute;s &amp;uacute;til de la tolerancia depende de las operaciones que pretenda utilizar en su matriz. Por ejemplo, si sus datos provienen de mediciones inciertas con incertidumbres mayores que la &amp;eacute;psilon de punto flotante, puede ser preferible elegir una tolerancia cercana a esa incertidumbre. La tolerancia puede ser absoluta si las incertidumbres son absolutas en lugar de relativas.</target>
        </trans-unit>
        <trans-unit id="64c20447e1e6f9694ec0f7bb75ec43f4f4cb6058" translate="yes" xml:space="preserve">
          <source>The tiled output array.</source>
          <target state="translated">La matriz de salida de azulejos.</target>
        </trans-unit>
        <trans-unit id="8bc4b16e1cf995efdf33020e8a2b8f7760d88f9e" translate="yes" xml:space="preserve">
          <source>The time required to produce using multiple threads can be compared to the time required to generate using a single thread.</source>
          <target state="translated">El tiempo necesario para producir utilizando múltiples hilos puede compararse con el tiempo necesario para generar utilizando un solo hilo.</target>
        </trans-unit>
        <trans-unit id="bcdefbec5fdfd59d604b41a08eaf1010ff1f9f3b" translate="yes" xml:space="preserve">
          <source>The timings below are the time in ns to produce 1 random value from a specific distribution. The original &lt;a href=&quot;bit_generators/mt19937#numpy.random.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; generator is much slower since it requires 2 32-bit values to equal the output of the faster generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343a5bcbcad72b541893cb8c8e45cc7f466bba8b" translate="yes" xml:space="preserve">
          <source>The timings below are the time in ns to produce 1 random value from a specific distribution. The original &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; generator is much slower since it requires 2 32-bit values to equal the output of the faster generators.</source>
          <target state="translated">Los siguientes tiempos son el tiempo en ns para producir 1 valor aleatorio de una distribuci&amp;oacute;n espec&amp;iacute;fica. El generador &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt; &lt;code&gt;MT19937&lt;/code&gt; &lt;/a&gt; original es mucho m&amp;aacute;s lento ya que requiere 2 valores de 32 bits para igualar la salida de los generadores m&amp;aacute;s r&amp;aacute;pidos.</target>
        </trans-unit>
        <trans-unit id="1d2c30ac9be07be723e9ef95eaf137f9bc73af0a" translate="yes" xml:space="preserve">
          <source>The tolerance values are positive, typically very small numbers. The relative difference (&lt;code&gt;rtol&lt;/code&gt; * abs(&lt;code&gt;b&lt;/code&gt;)) and the absolute difference &lt;code&gt;atol&lt;/code&gt; are added together to compare against the absolute difference between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Los valores de tolerancia son positivos, normalmente n&amp;uacute;meros muy peque&amp;ntilde;os. La diferencia relativa ( &lt;code&gt;rtol&lt;/code&gt; * abs ( &lt;code&gt;b&lt;/code&gt; )) y la diferencia absoluta &lt;code&gt;atol&lt;/code&gt; se suman para comparar contra la diferencia absoluta entre &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52a51aeadfd53cc309968068f2e1965d359a3909" translate="yes" xml:space="preserve">
          <source>The total broadcasted size.</source>
          <target state="translated">El tamaño total de la emisión.</target>
        </trans-unit>
        <trans-unit id="df3d0e81279bb92508eaea005084a0b02573f0f5" translate="yes" xml:space="preserve">
          <source>The total number of arguments (&lt;em&gt;nin&lt;/em&gt; + &lt;em&gt;nout&lt;/em&gt;). This must be less than &lt;a href=&quot;array#c.NPY_MAXARGS&quot;&gt;&lt;code&gt;NPY_MAXARGS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1470f5efa816c498ec2cdd99dd6bc7fe2a058b68" translate="yes" xml:space="preserve">
          <source>The total number of arguments (&lt;em&gt;nin&lt;/em&gt; + &lt;em&gt;nout&lt;/em&gt;). This must be less than &lt;code&gt;NPY_MAXARGS&lt;/code&gt;.</source>
          <target state="translated">El n&amp;uacute;mero total de argumentos ( &lt;em&gt;nin&lt;/em&gt; + &lt;em&gt;nout&lt;/em&gt; ). Debe ser inferior a &lt;code&gt;NPY_MAXARGS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af0d1953b87871e5f5c2cfb05eba9aaf99050200" translate="yes" xml:space="preserve">
          <source>The total number of built-in NumPy types. The enumeration covers the range from 0 to NPY_NTYPES-1.</source>
          <target state="translated">El número total de tipos de NumPy incorporados.La enumeración cubre el rango de 0 a NPY_NTYPES-1.</target>
        </trans-unit>
        <trans-unit id="abe92a5e4aa66a77153ec46749bbd30d898eb468" translate="yes" xml:space="preserve">
          <source>The total number of masked elements (axis=None) or the number of masked elements along each slice of the given axis.</source>
          <target state="translated">El número total de elementos enmascarados (eje=Ninguno)o el número de elementos enmascarados a lo largo de cada porción del eje dado.</target>
        </trans-unit>
        <trans-unit id="7423c677797c62eaba11c700e763c8330a87769e" translate="yes" xml:space="preserve">
          <source>The total payment is made up of payment against principal plus interest.</source>
          <target state="translated">El pago total está compuesto por el pago del principal más los intereses.</target>
        </trans-unit>
        <trans-unit id="b7226d44903c768f342634b37f3cd2cbe870d83c" translate="yes" xml:space="preserve">
          <source>The total size of the underlying array.</source>
          <target state="translated">El tamaño total del conjunto subyacente.</target>
        </trans-unit>
        <trans-unit id="b17ef49a2b827517f40e328c2cdae6675b6f65d6" translate="yes" xml:space="preserve">
          <source>The transform for real input is performed over the last transformation axis, as by &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt;&lt;code&gt;rfft&lt;/code&gt;&lt;/a&gt;, then the transform over the remaining axes is performed as by &lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt;&lt;code&gt;fftn&lt;/code&gt;&lt;/a&gt;. The order of the output is as for &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt;&lt;code&gt;rfft&lt;/code&gt;&lt;/a&gt; for the final transformation axis, and as for &lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt;&lt;code&gt;fftn&lt;/code&gt;&lt;/a&gt; for the remaining transformation axes.</source>
          <target state="translated">La transformaci&amp;oacute;n para la entrada real se realiza sobre el &amp;uacute;ltimo eje de transformaci&amp;oacute;n, como por &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt; &lt;code&gt;rfft&lt;/code&gt; &lt;/a&gt; , luego la transformaci&amp;oacute;n sobre los ejes restantes se realiza como por &lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt; &lt;code&gt;fftn&lt;/code&gt; &lt;/a&gt; . El orden de la salida es como para &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt; &lt;code&gt;rfft&lt;/code&gt; &lt;/a&gt; para el eje de transformaci&amp;oacute;n final y como para &lt;a href=&quot;numpy.fft.fftn#numpy.fft.fftn&quot;&gt; &lt;code&gt;fftn&lt;/code&gt; &lt;/a&gt; para los ejes de transformaci&amp;oacute;n restantes.</target>
        </trans-unit>
        <trans-unit id="85975e151b66ed8086ffe0edc17f692849490b8d" translate="yes" xml:space="preserve">
          <source>The transpose of a C-ordered array is a FORTRAN-ordered array.</source>
          <target state="translated">La transposición de una matriz ordenada por C es una matriz ordenada por FORTRAN.</target>
        </trans-unit>
        <trans-unit id="be8d0d980a1c43a49c10382a49da454ce905c4ef" translate="yes" xml:space="preserve">
          <source>The transposed array.</source>
          <target state="translated">La matriz transpuesta.</target>
        </trans-unit>
        <trans-unit id="ded8f77d9cba6691688303bd624c72d17c97324f" translate="yes" xml:space="preserve">
          <source>The tree in &lt;code&gt;numpy&lt;/code&gt; will now have the latest changes from the initial repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362e7b5f1deb8afe588bc61b11c57a486aa6b58d" translate="yes" xml:space="preserve">
          <source>The triangular distribution is a continuous probability distribution with lower limit left, peak at mode, and upper limit right. Unlike the other distributions, these parameters directly define the shape of the pdf.</source>
          <target state="translated">La distribución triangular es una distribución de probabilidad continua con un límite inferior a la izquierda,un pico en el modo y un límite superior a la derecha.A diferencia de las otras distribuciones,estos parámetros definen directamente la forma de la pdf.</target>
        </trans-unit>
        <trans-unit id="1d2039a815b5ec90474a824463e862d2894a1c82" translate="yes" xml:space="preserve">
          <source>The triangular distribution is often used in ill-defined problems where the underlying distribution is not known, but some knowledge of the limits and mode exists. Often it is used in simulations.</source>
          <target state="translated">La distribución triangular se utiliza a menudo en problemas mal definidos en los que se desconoce la distribución subyacente,pero existe cierto conocimiento de los límites y el modo.A menudo se utiliza en simulaciones.</target>
        </trans-unit>
        <trans-unit id="6a93dc1adb33729debf6e5480c2814c2157666fd" translate="yes" xml:space="preserve">
          <source>The triangular window, with the maximum value normalized to one (the value one appears only if the number of samples is odd), with the first and last samples equal to zero.</source>
          <target state="translated">La ventana triangular,con el valor máximo normalizado a uno (el valor uno aparece sólo si el número de muestras es impar),con la primera y la última muestra igual a cero.</target>
        </trans-unit>
        <trans-unit id="24e66129ed79808afe1e2c37f4c9f61c91ca2839" translate="yes" xml:space="preserve">
          <source>The true value of &lt;code&gt;exp(1e-10) - 1&lt;/code&gt; is &lt;code&gt;1.00000000005e-10&lt;/code&gt; to about 32 significant digits. This example shows the superiority of expm1 in this case.</source>
          <target state="translated">El valor real de &lt;code&gt;exp(1e-10) - 1&lt;/code&gt; es &lt;code&gt;1.00000000005e-10&lt;/code&gt; a aproximadamente 32 d&amp;iacute;gitos significativos. Este ejemplo muestra la superioridad de expm1 en este caso.</target>
        </trans-unit>
        <trans-unit id="973da8e077b17711228349d2b08c7d0d4f2d3661" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axes indicated by &lt;code&gt;axes&lt;/code&gt;, or by a combination of &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt;, as explained in the parameters section above.</source>
          <target state="translated">La entrada truncado o con relleno de ceros, transformado a lo largo de los ejes indicado por &lt;code&gt;axes&lt;/code&gt; , o por una combinaci&amp;oacute;n de &lt;code&gt;s&lt;/code&gt; y &lt;code&gt;a&lt;/code&gt; , como se explica en la secci&amp;oacute;n de par&amp;aacute;metros anteriormente.</target>
        </trans-unit>
        <trans-unit id="0cef9d8907fc4d88debbd9a6424b4425ec58e68f" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axes indicated by &lt;code&gt;axes&lt;/code&gt;, or by a combination of &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt;, as explained in the parameters section above. The length of the last axis transformed will be &lt;code&gt;s[-1]//2+1&lt;/code&gt;, while the remaining transformed axes will have lengths according to &lt;code&gt;s&lt;/code&gt;, or unchanged from the input.</source>
          <target state="translated">La entrada truncado o con relleno de ceros, transformado a lo largo de los ejes indicado por &lt;code&gt;axes&lt;/code&gt; , o por una combinaci&amp;oacute;n de &lt;code&gt;s&lt;/code&gt; y &lt;code&gt;a&lt;/code&gt; , como se explica en la secci&amp;oacute;n de par&amp;aacute;metros anteriormente. La longitud del &amp;uacute;ltimo eje transformado ser&amp;aacute; &lt;code&gt;s[-1]//2+1&lt;/code&gt; , mientras que los ejes transformados restantes tendr&amp;aacute;n longitudes de acuerdo con &lt;code&gt;s&lt;/code&gt; , o sin cambios desde la entrada.</target>
        </trans-unit>
        <trans-unit id="9c91d131105a38ed60b366938edb9bb82399cba7" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axes indicated by &lt;code&gt;axes&lt;/code&gt;, or by a combination of &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;a&lt;/code&gt;, as explained in the parameters section above.</source>
          <target state="translated">La entrada truncado o con relleno de ceros, transformado a lo largo de los ejes indicado por &lt;code&gt;axes&lt;/code&gt; , o por una combinaci&amp;oacute;n de &lt;code&gt;s&lt;/code&gt; o &lt;code&gt;a&lt;/code&gt; , como se explica en la secci&amp;oacute;n de par&amp;aacute;metros anteriormente.</target>
        </trans-unit>
        <trans-unit id="879b9a05c20a089a225b78254a5b2e292b149d60" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axes indicated by &lt;code&gt;axes&lt;/code&gt;, or by a combination of &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;a&lt;/code&gt;, as explained in the parameters section above. The length of each transformed axis is as given by the corresponding element of &lt;code&gt;s&lt;/code&gt;, or the length of the input in every axis except for the last one if &lt;code&gt;s&lt;/code&gt; is not given. In the final transformed axis the length of the output when &lt;code&gt;s&lt;/code&gt; is not given is &lt;code&gt;2*(m-1)&lt;/code&gt; where &lt;code&gt;m&lt;/code&gt; is the length of the final transformed axis of the input. To get an odd number of output points in the final axis, &lt;code&gt;s&lt;/code&gt; must be specified.</source>
          <target state="translated">La entrada truncado o con relleno de ceros, transformado a lo largo de los ejes indicado por &lt;code&gt;axes&lt;/code&gt; , o por una combinaci&amp;oacute;n de &lt;code&gt;s&lt;/code&gt; o &lt;code&gt;a&lt;/code&gt; , como se explica en la secci&amp;oacute;n de par&amp;aacute;metros anteriormente. La longitud de cada eje transformado es como se da por el elemento correspondiente de &lt;code&gt;s&lt;/code&gt; , o la longitud de la entrada en cada eje excepto el &amp;uacute;ltimo uno si &lt;code&gt;s&lt;/code&gt; no se da. En la final transformado eje de la longitud de la salida cuando &lt;code&gt;s&lt;/code&gt; no se da es &lt;code&gt;2*(m-1)&lt;/code&gt; donde &lt;code&gt;m&lt;/code&gt; es la longitud del eje transformado definitiva de la entrada. Para obtener un n&amp;uacute;mero impar de puntos de salida en el eje final, &lt;code&gt;s&lt;/code&gt; deben ser especificadas.</target>
        </trans-unit>
        <trans-unit id="933c6e0a0fb2fd7449c8d46cb7e6572b1c3279dd" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axes indicated by &lt;code&gt;axes&lt;/code&gt;, or the last two axes if &lt;code&gt;axes&lt;/code&gt; is not given.</source>
          <target state="translated">La entrada truncada o con relleno de ceros, transformada a lo largo de los ejes indicados por &lt;code&gt;axes&lt;/code&gt; , o los dos &amp;uacute;ltimos ejes si no se dan &lt;code&gt;axes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdca2715ebaff6edc1c47e7d7cb69eb535ec549b" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axis indicated by &lt;code&gt;axis&lt;/code&gt;, or the last one if &lt;code&gt;axis&lt;/code&gt; is not specified.</source>
          <target state="translated">La entrada truncada o con relleno de ceros, transformada a lo largo del eje indicado por el &lt;code&gt;axis&lt;/code&gt; , o la &amp;uacute;ltima si no se especifica el &lt;code&gt;axis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4095a8db5d8ecd4ba9c0d3227d91d6c6751102f" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axis indicated by &lt;code&gt;axis&lt;/code&gt;, or the last one if &lt;code&gt;axis&lt;/code&gt; is not specified. If &lt;code&gt;n&lt;/code&gt; is even, the length of the transformed axis is &lt;code&gt;(n/2)+1&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is odd, the length is &lt;code&gt;(n+1)/2&lt;/code&gt;.</source>
          <target state="translated">La entrada truncada o con relleno de ceros, transformada a lo largo del eje indicado por el &lt;code&gt;axis&lt;/code&gt; , o la &amp;uacute;ltima si no se especifica el &lt;code&gt;axis&lt;/code&gt; . Si &lt;code&gt;n&lt;/code&gt; es par, la longitud del eje transformado es &lt;code&gt;(n/2)+1&lt;/code&gt; . Si &lt;code&gt;n&lt;/code&gt; es impar, la longitud es &lt;code&gt;(n+1)/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="210fa87b6170797ddb3ab263d911a488e3f1f97e" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axis indicated by &lt;code&gt;axis&lt;/code&gt;, or the last one if &lt;code&gt;axis&lt;/code&gt; is not specified. The length of the transformed axis is &lt;code&gt;n//2 + 1&lt;/code&gt;.</source>
          <target state="translated">La entrada truncada o con relleno de ceros, transformada a lo largo del eje indicado por el &lt;code&gt;axis&lt;/code&gt; , o la &amp;uacute;ltima si no se especifica el &lt;code&gt;axis&lt;/code&gt; . La longitud del eje transformado es &lt;code&gt;n//2 + 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1026feb255ba9e4ae695f12a04d60bbc57c49ac5" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axis indicated by &lt;code&gt;axis&lt;/code&gt;, or the last one if &lt;code&gt;axis&lt;/code&gt; is not specified. The length of the transformed axis is &lt;code&gt;n&lt;/code&gt;, or, if &lt;code&gt;n&lt;/code&gt; is not given, &lt;code&gt;2*(m-1)&lt;/code&gt; where &lt;code&gt;m&lt;/code&gt; is the length of the transformed axis of the input. To get an odd number of output points, &lt;code&gt;n&lt;/code&gt; must be specified.</source>
          <target state="translated">La entrada truncada o con relleno de ceros, transformada a lo largo del eje indicado por el &lt;code&gt;axis&lt;/code&gt; , o la &amp;uacute;ltima si no se especifica el &lt;code&gt;axis&lt;/code&gt; . La longitud del eje transformado es &lt;code&gt;n&lt;/code&gt; o, si no se da &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;2*(m-1)&lt;/code&gt; donde &lt;code&gt;m&lt;/code&gt; es la longitud del eje transformado de la entrada. Para obtener un n&amp;uacute;mero impar de puntos de salida, se debe especificar &lt;code&gt;n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="785f913e97e6f2c077e366a11b3d02d03922b2c4" translate="yes" xml:space="preserve">
          <source>The truncated or zero-padded input, transformed along the axis indicated by &lt;code&gt;axis&lt;/code&gt;, or the last one if &lt;code&gt;axis&lt;/code&gt; is not specified. The length of the transformed axis is &lt;code&gt;n&lt;/code&gt;, or, if &lt;code&gt;n&lt;/code&gt; is not given, &lt;code&gt;2*m - 2&lt;/code&gt; where &lt;code&gt;m&lt;/code&gt; is the length of the transformed axis of the input. To get an odd number of output points, &lt;code&gt;n&lt;/code&gt; must be specified, for instance as &lt;code&gt;2*m - 1&lt;/code&gt; in the typical case,</source>
          <target state="translated">La entrada truncada o con relleno de ceros, transformada a lo largo del eje indicado por el &lt;code&gt;axis&lt;/code&gt; , o la &amp;uacute;ltima si no se especifica el &lt;code&gt;axis&lt;/code&gt; . La longitud del eje transformado es &lt;code&gt;n&lt;/code&gt; o, si no se da &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;2*m - 2&lt;/code&gt; donde &lt;code&gt;m&lt;/code&gt; es la longitud del eje transformado de la entrada. Para obtener un n&amp;uacute;mero impar de puntos de salida, se debe especificar &lt;code&gt;n&lt;/code&gt; , por ejemplo, como &lt;code&gt;2*m - 1&lt;/code&gt; en el caso t&amp;iacute;pico,</target>
        </trans-unit>
        <trans-unit id="890cb80542174800559555fcc8928d47ac767144" translate="yes" xml:space="preserve">
          <source>The truncated value of each element in &lt;code&gt;x&lt;/code&gt;. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">El valor truncado de cada elemento en &lt;code&gt;x&lt;/code&gt; . Este es un escalar si &lt;code&gt;x&lt;/code&gt; es un escalar.</target>
        </trans-unit>
        <trans-unit id="d225104697ad1c2e4adc5e266a19505669d514fa" translate="yes" xml:space="preserve">
          <source>The truncated value of the scalar &lt;code&gt;x&lt;/code&gt; is the nearest integer &lt;code&gt;i&lt;/code&gt; which is closer to zero than &lt;code&gt;x&lt;/code&gt; is. In short, the fractional part of the signed number &lt;code&gt;x&lt;/code&gt; is discarded.</source>
          <target state="translated">El valor truncado del escalar &lt;code&gt;x&lt;/code&gt; es el entero m&amp;aacute;s cercano &lt;code&gt;i&lt;/code&gt; que est&amp;aacute; m&amp;aacute;s cerca de cero que &lt;code&gt;x&lt;/code&gt; . En resumen, se descarta la parte fraccionaria del n&amp;uacute;mero con signo &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7473e98cdd8b9577d457a4ec3ae00062b1e0d1c1" translate="yes" xml:space="preserve">
          <source>The tuple &lt;code&gt;args&lt;/code&gt; and dict &lt;code&gt;kwargs&lt;/code&gt; are directly passed on from the original call.</source>
          <target state="translated">Las tuplas &lt;code&gt;args&lt;/code&gt; y dict &lt;code&gt;kwargs&lt;/code&gt; se pasan directamente desde la llamada original.</target>
        </trans-unit>
        <trans-unit id="8a95ef02498e39d8be9ecf72e13e2817e4a11b13" translate="yes" xml:space="preserve">
          <source>The tuple returned from &lt;code&gt;__array_interface__['data']&lt;/code&gt; used to be a hex-string (now it is an integer or a long integer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462bd3332737c1c0e3c136e2df99165ffa307b94" translate="yes" xml:space="preserve">
          <source>The tuple returned from __array_interface__[&amp;lsquo;data&amp;rsquo;] used to be a hex-string (now it is an integer or a long integer).</source>
          <target state="translated">La tupla devuelta desde __array_interface __ ['datos'] sol&amp;iacute;a ser una cadena hexadecimal (ahora es un entero o un entero largo).</target>
        </trans-unit>
        <trans-unit id="ac07e35413d52171420d0546afbc516e4675dfc6" translate="yes" xml:space="preserve">
          <source>The two arrays are of the same length, so there is only one position where they completely overlap:</source>
          <target state="translated">Los dos conjuntos tienen la misma longitud,por lo que sólo hay una posición en la que se superponen completamente:</target>
        </trans-unit>
        <trans-unit id="a1576896c14768083aa4b0494018f6de168f9aa6" translate="yes" xml:space="preserve">
          <source>The two dimensional series is evaluated at the points &lt;code&gt;(x, y)&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; must have the same shape. If &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is a list or tuple, it is first converted to an ndarray, otherwise it is left unchanged and if it isn&amp;rsquo;t an ndarray it is treated as a scalar.</source>
          <target state="translated">Las dos series dimensional se eval&amp;uacute;a en los puntos &lt;code&gt;(x, y)&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;y&lt;/code&gt; debe tener la misma forma. Si &lt;code&gt;x&lt;/code&gt; o &lt;code&gt;y&lt;/code&gt; es una lista o tupla, se convierte primero a una ndarray, de lo contrario se deja sin cambios y si no es un ndarray se trata como un escalar.</target>
        </trans-unit>
        <trans-unit id="2eba9ab6dc5fc4a672b7a559261dcf61c08663b7" translate="yes" xml:space="preserve">
          <source>The two dimensional series is evaluated at the points &lt;code&gt;(x, y)&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; must have the same shape. If &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is a list or tuple, it is first converted to an ndarray, otherwise it is left unchanged and, if it isn&amp;rsquo;t an ndarray, it is treated as a scalar.</source>
          <target state="translated">Las dos series dimensional se eval&amp;uacute;a en los puntos &lt;code&gt;(x, y)&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;y&lt;/code&gt; debe tener la misma forma. Si &lt;code&gt;x&lt;/code&gt; o &lt;code&gt;y&lt;/code&gt; es una lista o tupla, se convierte primero a una ndarray, de lo contrario se deja sin cambios y, si no es un ndarray, se trata como un escalar.</target>
        </trans-unit>
        <trans-unit id="0688b7907322e12f298dd8f02d187105297d15b2" translate="yes" xml:space="preserve">
          <source>The two dimensional series is evaluated at the points in the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is a list or tuple, it is first converted to an ndarray, otherwise it is left unchanged and, if it isn&amp;rsquo;t an ndarray, it is treated as a scalar.</source>
          <target state="translated">La serie bidimensional se eval&amp;uacute;a en los puntos del producto cartesiano de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; . Si &lt;code&gt;x&lt;/code&gt; o &lt;code&gt;y&lt;/code&gt; es una lista o tupla, se convierte primero a una ndarray, de lo contrario se deja sin cambios y, si no es un ndarray, se trata como un escalar.</target>
        </trans-unit>
        <trans-unit id="d4aa44f129ba54b421bffe3762821ce4945dce60" translate="yes" xml:space="preserve">
          <source>The two domains that determine the map. Each must (successfully) convert to 1-d arrays containing precisely two values.</source>
          <target state="translated">Los dos dominios que determinan el mapa.Cada uno debe (con éxito)convertirse en matrices 1-d que contengan precisamente dos valores.</target>
        </trans-unit>
        <trans-unit id="0027adc4d9c51b047c70705863099ef3efdd05ff" translate="yes" xml:space="preserve">
          <source>The two methods do not return the same sequence of variates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810d0511d5cc6182785b949cef8752429de415c1" translate="yes" xml:space="preserve">
          <source>The two&amp;rsquo;s complement is returned when the input number is negative and width is specified:</source>
          <target state="translated">El complemento a dos se devuelve cuando el n&amp;uacute;mero de entrada es negativo y se especifica el ancho:</target>
        </trans-unit>
        <trans-unit id="584450aea06b04e9037daf43c6af1e81a83e775a" translate="yes" xml:space="preserve">
          <source>The two-dimensional FFT of real input.</source>
          <target state="translated">La FFT bidimensional de la entrada real.</target>
        </trans-unit>
        <trans-unit id="9b11970984391ed9339a62d69846a84202600584" translate="yes" xml:space="preserve">
          <source>The two-dimensional FFT.</source>
          <target state="translated">El FFT bidimensional.</target>
        </trans-unit>
        <trans-unit id="93378f6188f826db256b9d6c37c0794ddd0149ba" translate="yes" xml:space="preserve">
          <source>The two-dimensional example we created using Fortran is just as easy to write in Cython:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc89089001cef3c7a737f8de3b95a6b67d11a175" translate="yes" xml:space="preserve">
          <source>The two-dimensional inverse FFT.</source>
          <target state="translated">El FFT inverso bidimensional.</target>
        </trans-unit>
        <trans-unit id="9f5faf584fb30081780464310b34017103e73128" translate="yes" xml:space="preserve">
          <source>The type above can either refer to an actual Python type (e.g. &lt;code&gt;int&lt;/code&gt;), or describe the type of the variable in more detail, e.g. &lt;code&gt;(N,) ndarray&lt;/code&gt; or &lt;code&gt;array_like&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cebb62b229032f20fef01d3cd3e2d8c08b92d1" translate="yes" xml:space="preserve">
          <source>The type object used to instantiate a scalar of this data-type.</source>
          <target state="translated">El tipo de objeto utilizado para instanciar un escalar de este tipo de datos.</target>
        </trans-unit>
        <trans-unit id="6e4f0a20a4e71ba4f55f61f65f81013f324f6ce9" translate="yes" xml:space="preserve">
          <source>The type of the array can also be explicitly specified at creation time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0bd68b05131d508a3464e6044d68f87729d81c" translate="yes" xml:space="preserve">
          <source>The type of the data can be accessed through the &lt;a href=&quot;#numpy.ma.MaskedArray.baseclass&quot;&gt;&lt;code&gt;baseclass&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">Se puede acceder al tipo de datos a trav&amp;eacute;s del atributo &lt;a href=&quot;#numpy.ma.MaskedArray.baseclass&quot;&gt; &lt;code&gt;baseclass&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e723834a8970a250a2a2d214449437cb2b1463f" translate="yes" xml:space="preserve">
          <source>The type of the data can be accessed through the &lt;a href=&quot;numpy.ma.masked_array.baseclass#numpy.ma.masked_array.baseclass&quot;&gt;&lt;code&gt;baseclass&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55666432b4662cbbcca855eedc915c8dbb074f43" translate="yes" xml:space="preserve">
          <source>The type of the data is described by the following &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; attributes:</source>
          <target state="translated">El tipo de datos se describe mediante los siguientes atributos &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7c7e8530225fc135f4d9b6eea552288840993321" translate="yes" xml:space="preserve">
          <source>The type of the input is checked, not the value. Even if the input has an imaginary part equal to zero, &lt;a href=&quot;#numpy.iscomplexobj&quot;&gt;&lt;code&gt;iscomplexobj&lt;/code&gt;&lt;/a&gt; evaluates to True.</source>
          <target state="translated">Se comprueba el tipo de entrada, no el valor. Incluso si la entrada tiene una parte imaginaria igual a cero, &lt;a href=&quot;#numpy.iscomplexobj&quot;&gt; &lt;code&gt;iscomplexobj&lt;/code&gt; se&lt;/a&gt; eval&amp;uacute;a como Verdadero.</target>
        </trans-unit>
        <trans-unit id="1a2c8e641184f0940417186c9bd1b40520bec6a6" translate="yes" xml:space="preserve">
          <source>The type of the input is checked, not the value. So even if the input has an imaginary part equal to zero, &lt;a href=&quot;#numpy.isrealobj&quot;&gt;&lt;code&gt;isrealobj&lt;/code&gt;&lt;/a&gt; evaluates to False if the data type is complex.</source>
          <target state="translated">Se comprueba el tipo de entrada, no el valor. Entonces, incluso si la entrada tiene una parte imaginaria igual a cero, &lt;a href=&quot;#numpy.isrealobj&quot;&gt; &lt;code&gt;isrealobj&lt;/code&gt; se&lt;/a&gt; eval&amp;uacute;a como Falso si el tipo de datos es complejo.</target>
        </trans-unit>
        <trans-unit id="ea61e4d42852a1b3d6a2054bbf717a4dcd45c615" translate="yes" xml:space="preserve">
          <source>The type of the output array. If &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is not given, infer the data type from the other input arguments.</source>
          <target state="translated">El tipo de matriz de salida. Si no se proporciona &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; , infiera el tipo de datos de los otros argumentos de entrada.</target>
        </trans-unit>
        <trans-unit id="32f8e95967dee5b6024af49a6833df8b96400b41" translate="yes" xml:space="preserve">
          <source>The type of the output array. If &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is not given, the data type is inferred from &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt;. The inferred dtype will never be an integer; &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; is chosen even if the arguments would produce an array of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f2b2af4ea00b9069f29f29630cfed5b29605d4" translate="yes" xml:space="preserve">
          <source>The type of the output array. If &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is not given, the data type is inferred from &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt;. The inferred type will never be an integer; &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; is chosen even if the arguments would produce an array of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c73d98907158f7fb67c4efa759cdbb5f806f2d4" translate="yes" xml:space="preserve">
          <source>The type of the output array. If &lt;code&gt;dtype&lt;/code&gt; is not given, infer the data type from the other input arguments.</source>
          <target state="translated">El tipo de matriz de salida. Si no se proporciona &lt;code&gt;dtype&lt;/code&gt; , infiera el tipo de datos de los otros argumentos de entrada.</target>
        </trans-unit>
        <trans-unit id="a61a6b8f22a17e9cfb7771cdc6f2f0f745c54b06" translate="yes" xml:space="preserve">
          <source>The type of the result will depend on the encoding specified.</source>
          <target state="translated">El tipo de resultado dependerá de la codificación especificada.</target>
        </trans-unit>
        <trans-unit id="9f964988f963b226cae3c6098e96762218b96f31" translate="yes" xml:space="preserve">
          <source>The type of the returned array and of the accumulator in which the elements are summed. By default, the dtype of &lt;code&gt;a&lt;/code&gt; is used. An exception is when &lt;code&gt;a&lt;/code&gt; has an integer type with less precision than the platform (u)intp. In that case, the default will be either (u)int32 or (u)int64 depending on whether the platform is 32 or 64 bits. For inexact inputs, dtype must be inexact.</source>
          <target state="translated">El tipo de la matriz devuelta y del acumulador en el que se suman los elementos. De forma predeterminada, se utiliza el tipo d de &lt;code&gt;a&lt;/code&gt; . Una excepci&amp;oacute;n es cuando &lt;code&gt;a&lt;/code&gt; tiene un tipo entero con menos precisi&amp;oacute;n que la plataforma (u) intp. En ese caso, el valor predeterminado ser&amp;aacute; (u) int32 o (u) int64 dependiendo de si la plataforma es de 32 o 64 bits. Para entradas inexactas, dtype debe ser inexacto.</target>
        </trans-unit>
        <trans-unit id="fae2388276bf4adee2baf6958155240f0239ec9b" translate="yes" xml:space="preserve">
          <source>The type of the returned array and of the accumulator in which the elements are summed. The dtype of &lt;code&gt;a&lt;/code&gt; is used by default unless &lt;code&gt;a&lt;/code&gt; has an integer dtype of less precision than the default platform integer. In that case, if &lt;code&gt;a&lt;/code&gt; is signed then the platform integer is used while if &lt;code&gt;a&lt;/code&gt; is unsigned then an unsigned integer of the same precision as the platform integer is used.</source>
          <target state="translated">El tipo de la matriz devuelta y del acumulador en el que se suman los elementos. El dtype de &lt;code&gt;a&lt;/code&gt; se usa por defecto a menos que &lt;code&gt;a&lt;/code&gt; tenga un dtype entero de menor precisi&amp;oacute;n que el entero de plataforma predeterminado. En ese caso, si &lt;code&gt;a&lt;/code&gt; est&amp;aacute; firmado, se usa el entero de plataforma, mientras que si &lt;code&gt;a&lt;/code&gt; no est&amp;aacute; firmado, se usa un entero sin signo de la misma precisi&amp;oacute;n que el entero de plataforma.</target>
        </trans-unit>
        <trans-unit id="bd79c4b3d3f0f1be1ec3ce5a1aa5d47271e61a5b" translate="yes" xml:space="preserve">
          <source>The type of the returned array, as well as of the accumulator in which the elements are multiplied. The dtype of &lt;code&gt;a&lt;/code&gt; is used by default unless &lt;code&gt;a&lt;/code&gt; has an integer dtype of less precision than the default platform integer. In that case, if &lt;code&gt;a&lt;/code&gt; is signed then the platform integer is used while if &lt;code&gt;a&lt;/code&gt; is unsigned then an unsigned integer of the same precision as the platform integer is used.</source>
          <target state="translated">El tipo de la matriz devuelta, as&amp;iacute; como del acumulador en el que se multiplican los elementos. El dtype de &lt;code&gt;a&lt;/code&gt; se usa por defecto a menos que &lt;code&gt;a&lt;/code&gt; tenga un dtype entero de menor precisi&amp;oacute;n que el entero de plataforma predeterminado. En ese caso, si &lt;code&gt;a&lt;/code&gt; est&amp;aacute; firmado, se usa el entero de plataforma, mientras que si &lt;code&gt;a&lt;/code&gt; no est&amp;aacute; firmado, se usa un entero sin signo de la misma precisi&amp;oacute;n que el entero de plataforma.</target>
        </trans-unit>
        <trans-unit id="e3a7bb2863553d52f83413fb23d739a7fea567ae" translate="yes" xml:space="preserve">
          <source>The type used to represent the intermediate results. Defaults to the data type of the output array if this is provided, or the data type of the input array if no output array is provided.</source>
          <target state="translated">El tipo utilizado para representar los resultados intermedios.El tipo de datos de la matriz de salida si se proporciona,o el tipo de datos de la matriz de entrada si no se proporciona ninguna matriz de salida.</target>
        </trans-unit>
        <trans-unit id="f46b668fbc5ae74dc471bbfdc9b1c8b2040c3ed5" translate="yes" xml:space="preserve">
          <source>The type used to represent the intermediate results. Defaults to the data-type of the output array if this is provided, or the data-type of the input array if no output array is provided.</source>
          <target state="translated">El tipo utilizado para representar los resultados intermedios.Por defecto,el tipo de datos de la matriz de salida si se proporciona,o el tipo de datos de la matriz de entrada si no se proporciona ninguna matriz de salida.</target>
        </trans-unit>
        <trans-unit id="3d1a1953424d5a7364adfc318f2ceeb8ef42f6ff" translate="yes" xml:space="preserve">
          <source>The typemap directives provided by &lt;code&gt;numpy.i&lt;/code&gt; for arrays of different data types, say &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;int&lt;/code&gt;, and dimensions of different types, say &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt;, are identical to one another except for the C and NumPy type specifications. The typemaps are therefore implemented (typically behind the scenes) via a macro:</source>
          <target state="translated">Las directivas typemap proporcionadas por &lt;code&gt;numpy.i&lt;/code&gt; para matrices de diferentes tipos de datos, digamos &lt;code&gt;double&lt;/code&gt; e &lt;code&gt;int&lt;/code&gt; , y dimensiones de diferentes tipos, digamos &lt;code&gt;int&lt;/code&gt; o &lt;code&gt;long&lt;/code&gt; , son id&amp;eacute;nticas entre s&amp;iacute; excepto por las especificaciones de tipo C y NumPy. Por lo tanto, los mapas de tipos se implementan (generalmente entre bastidores) a trav&amp;eacute;s de una macro:</target>
        </trans-unit>
        <trans-unit id="dff7b3c37fb51796f178f8cb67e96939e35d8847" translate="yes" xml:space="preserve">
          <source>The typemap signatures are largely differentiated on the name given to the buffer pointer. Names with &lt;code&gt;FARRAY&lt;/code&gt; are for Fortran-ordered arrays, and names with &lt;code&gt;ARRAY&lt;/code&gt; are for C-ordered (or 1D arrays).</source>
          <target state="translated">Las firmas del mapa de tipos se diferencian en gran medida por el nombre que se le da al puntero del b&amp;uacute;fer. Los nombres con &lt;code&gt;FARRAY&lt;/code&gt; son para matrices ordenadas en Fortran y los nombres con &lt;code&gt;ARRAY&lt;/code&gt; son para matrices ordenadas en C (o matrices 1D).</target>
        </trans-unit>
        <trans-unit id="d316f93b51d10bd2681fb7336deed9067a473d1a" translate="yes" xml:space="preserve">
          <source>The typemaps from &lt;code&gt;numpy.i&lt;/code&gt; are responsible for the following lines of code: 12&amp;ndash;20, 25 and 30. Line 10 parses the input to the &lt;code&gt;rms&lt;/code&gt; function. From the format string &lt;code&gt;&quot;O:rms&quot;&lt;/code&gt;, we can see that the argument list is expected to be a single Python object (specified by the &lt;code&gt;O&lt;/code&gt; before the colon) and whose pointer is stored in &lt;code&gt;obj0&lt;/code&gt;. A number of functions, supplied by &lt;code&gt;numpy.i&lt;/code&gt;, are called to make and check the (possible) conversion from a generic Python object to a NumPy array. These functions are explained in the section &lt;a href=&quot;#helper-functions&quot;&gt;Helper Functions&lt;/a&gt;, but hopefully their names are self-explanatory. At line 12 we use &lt;code&gt;obj0&lt;/code&gt; to construct a NumPy array. At line 17, we check the validity of the result: that it is non-null and that it has a single dimension of arbitrary length. Once these states are verified, we extract the data buffer and length in lines 19 and 20 so that we can call the underlying C function at line 22. Line 25 performs memory management for the case where we have created a new array that is no longer needed.</source>
          <target state="translated">Los mapas de tipos de &lt;code&gt;numpy.i&lt;/code&gt; son responsables de las siguientes l&amp;iacute;neas de c&amp;oacute;digo: 12-20, 25 y 30. La l&amp;iacute;nea 10 analiza la entrada a la funci&amp;oacute;n &lt;code&gt;rms&lt;/code&gt; . A partir de la cadena de formato &lt;code&gt;&quot;O:rms&quot;&lt;/code&gt; , podemos ver que se espera que la lista de argumentos sea un solo objeto de Python (especificado por la &lt;code&gt;O&lt;/code&gt; antes de los dos puntos) y cuyo puntero se almacena en &lt;code&gt;obj0&lt;/code&gt; . Se &lt;code&gt;numpy.i&lt;/code&gt; una serie de funciones, proporcionadas por numpy.i , para realizar y verificar la (posible) conversi&amp;oacute;n de un objeto Python gen&amp;eacute;rico a una matriz NumPy. Estas funciones se explican en la secci&amp;oacute;n &lt;a href=&quot;#helper-functions&quot;&gt;Funciones auxiliares&lt;/a&gt; , pero es de esperar que sus nombres se expliquen por s&amp;iacute; mismos. En la l&amp;iacute;nea 12 usamos &lt;code&gt;obj0&lt;/code&gt; para construir una matriz NumPy. En la l&amp;iacute;nea 17, verificamos la validez del resultado: que no sea nulo y que tenga una &amp;uacute;nica dimensi&amp;oacute;n de longitud arbitraria. Una vez que se verifican estos estados, extraemos el b&amp;uacute;fer de datos y la longitud en las l&amp;iacute;neas 19 y 20 para poder llamar a la funci&amp;oacute;n C subyacente en la l&amp;iacute;nea 22. La l&amp;iacute;nea 25 realiza la administraci&amp;oacute;n de la memoria para el caso en el que hemos creado una nueva matriz que ya no es necesario.</target>
        </trans-unit>
        <trans-unit id="94a9db34d902a4524ad7871b0441ea5be9c4a8b8" translate="yes" xml:space="preserve">
          <source>The typical looping construct is as follows.</source>
          <target state="translated">La típica construcción de bucle es la siguiente.</target>
        </trans-unit>
        <trans-unit id="93f339cfb377248f9f368c97945ac549c08d48eb" translate="yes" xml:space="preserve">
          <source>The ufunc object is implemented by creation of the &lt;a href=&quot;#c.PyUFunc_Type&quot;&gt;&lt;code&gt;PyUFunc_Type&lt;/code&gt;&lt;/a&gt;. It is a very simple type that implements only basic getattribute behavior, printing behavior, and has call behavior which allows these objects to act like functions. The basic idea behind the ufunc is to hold a reference to fast 1-dimensional (vector) loops for each data type that supports the operation. These one-dimensional loops all have the same signature and are the key to creating a new ufunc. They are called by the generic looping code as appropriate to implement the N-dimensional function. There are also some generic 1-d loops defined for floating and complexfloating arrays that allow you to define a ufunc using a single scalar function (&lt;em&gt;e.g.&lt;/em&gt; atanh).</source>
          <target state="translated">El objeto ufunc se implementa mediante la creaci&amp;oacute;n de &lt;a href=&quot;#c.PyUFunc_Type&quot;&gt; &lt;code&gt;PyUFunc_Type&lt;/code&gt; &lt;/a&gt; . Es un tipo muy simple que implementa solo el comportamiento b&amp;aacute;sico de getattribute, el comportamiento de impresi&amp;oacute;n y tiene un comportamiento de llamada que permite que estos objetos act&amp;uacute;en como funciones. La idea b&amp;aacute;sica detr&amp;aacute;s de ufunc es mantener una referencia a bucles unidimensionales r&amp;aacute;pidos (vectoriales) para cada tipo de datos que admita la operaci&amp;oacute;n. Todos estos bucles unidimensionales tienen la misma firma y son la clave para crear un nuevo ufunc. Son llamados por el c&amp;oacute;digo de bucle gen&amp;eacute;rico seg&amp;uacute;n corresponda para implementar la funci&amp;oacute;n N-dimensional. Tambi&amp;eacute;n hay algunos bucles 1-d gen&amp;eacute;ricos definidos para matrices flotantes y flotantes complejas que le permiten definir una ufunc utilizando una &amp;uacute;nica funci&amp;oacute;n escalar ( &lt;em&gt;por ejemplo,&lt;/em&gt; atanh).</target>
        </trans-unit>
        <trans-unit id="cf8db1044487cf17b16ec5dfd6f051754480a0fd" translate="yes" xml:space="preserve">
          <source>The ufunc still returns its output(s) even if you use the optional output argument(s).</source>
          <target state="translated">El ufunc sigue devolviendo su(s)salida(s)aunque use el(los)argumento(s)de salida opcional(es).</target>
        </trans-unit>
        <trans-unit id="a13b64ddac2c6f9c4757f678876470a35b9dd260" translate="yes" xml:space="preserve">
          <source>The umath module is a computer-generated C-module that creates many ufuncs. It provides a great many examples of how to create a universal function. Creating your own ufunc that will make use of the ufunc machinery is not difficult either. Suppose you have a function that you want to operate element-by-element over its inputs. By creating a new ufunc you will obtain a function that handles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59f16e305808090335d01a0996ae1722a21eee6" translate="yes" xml:space="preserve">
          <source>The unary &lt;code&gt;+&lt;/code&gt; operator can be used as a shorthand for &lt;code&gt;np.positive&lt;/code&gt; on ndarrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3520cc99bc38dec23789298886ad1bf0cd8d3a9e" translate="yes" xml:space="preserve">
          <source>The unary &lt;code&gt;-&lt;/code&gt; operator can be used as a shorthand for &lt;code&gt;np.negative&lt;/code&gt; on ndarrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d199d62fee4302579457e386e4a80ba73f82400" translate="yes" xml:space="preserve">
          <source>The underlying data of a masked array can be accessed in several ways:</source>
          <target state="translated">Se puede acceder a los datos subyacentes de un conjunto enmascarado de varias maneras:</target>
        </trans-unit>
        <trans-unit id="11e8796701c0b67707f7be52c1081d9ae533b8cd" translate="yes" xml:space="preserve">
          <source>The underlying file descriptor is closed when exiting the &amp;lsquo;with&amp;rsquo; block.</source>
          <target state="translated">El descriptor de archivo subyacente se cierra al salir del bloque 'con'.</target>
        </trans-unit>
        <trans-unit id="8a7d26eedaa6e3c6ca58f22a4d3a1445aae9ed58" translate="yes" xml:space="preserve">
          <source>The upper-triangular matrix.</source>
          <target state="translated">La matriz triangular superior.</target>
        </trans-unit>
        <trans-unit id="4d3a2d4644c583ea8315d7ff8cedb605a3b103a4" translate="yes" xml:space="preserve">
          <source>The usage of &lt;code&gt;fib1.fib&lt;/code&gt; in Python is very similar to using &lt;code&gt;FIB&lt;/code&gt; in Fortran. However, using &lt;em&gt;in situ&lt;/em&gt; output arguments in Python indicates a poor style as there is no safety mechanism in Python with respect to wrong argument types. When using Fortran or C, compilers naturally discover any type mismatches during compile time but in Python the types must be checked in runtime. So, using &lt;em&gt;in situ&lt;/em&gt; output arguments in Python may cause difficult to find bugs, not to mention that the codes will be less readable when all required type checks are implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cb9fef2603ca49b4b7d883decd87bdc8eb544d" translate="yes" xml:space="preserve">
          <source>The use of random number generation is an important part of the configuration and evaluation of many numerical and machine learning algorithms. Whether you need to randomly initialize weights in an artificial neural network, split data into random sets, or randomly shuffle your dataset, being able to generate random numbers (actually, repeatable pseudo-random numbers) is essential.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638520b9fcb56661a86b8addd734b2116df46c53" translate="yes" xml:space="preserve">
          <source>The use of this form of specification is discouraged, but documented here because older numpy code may use it. The keys of the dictionary are the field names and the values are tuples specifying type and offset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb07adf94a9c0d15c6277e214f78bd8de82a95e" translate="yes" xml:space="preserve">
          <source>The user always has the option of converting to a normal &lt;code&gt;numpy.ndarray&lt;/code&gt; with &lt;a href=&quot;../reference/generated/numpy.asarray#numpy.asarray&quot;&gt;&lt;code&gt;numpy.asarray&lt;/code&gt;&lt;/a&gt; and using standard numpy from there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c853de173592dd7ca97d9f29062998fe65a116cb" translate="yes" xml:space="preserve">
          <source>The user should always check the final report through the build log to verify the enabled features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd141d1c403551e053ceda2314596f85b55796" translate="yes" xml:space="preserve">
          <source>The usual caution for verifying equality with floating point numbers is advised.</source>
          <target state="translated">Se aconseja la cautela habitual para verificar la igualdad con los números de punto flotante.</target>
        </trans-unit>
        <trans-unit id="6f6231b1c986a1cae99123ebb4b0aec8cf8b789f" translate="yes" xml:space="preserve">
          <source>The usual companion matrix of the Laguerre polynomials is already symmetric when &lt;code&gt;c&lt;/code&gt; is a basis Laguerre polynomial, so no scaling is applied.</source>
          <target state="translated">La matriz acompa&amp;ntilde;ante habitual de los polinomios de Laguerre ya es sim&amp;eacute;trica cuando &lt;code&gt;c&lt;/code&gt; es un polinomio de Laguerre base, por lo que no se aplica ninguna escala.</target>
        </trans-unit>
        <trans-unit id="ab74e1cb912398a285a4b8e03a0b11ad44100129" translate="yes" xml:space="preserve">
          <source>The validation process for the requsted optimizations when it comes to &lt;code&gt;--cpu-baseline&lt;/code&gt; isn&amp;rsquo;t strict. For example, if the user requested &lt;code&gt;AVX2&lt;/code&gt; but the compiler doesn&amp;rsquo;t support it then we just skip it and return the maximum optimization that the compiler can handle depending on the implied features of &lt;code&gt;AVX2&lt;/code&gt;, let us assume &lt;code&gt;AVX&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1624b44eda9b54e7f0bf73b95d72ca30534e15ac" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;--cpu-baseline&lt;/code&gt; will be treated as &amp;ldquo;native&amp;rdquo; if compiler native flag &lt;code&gt;-march=native&lt;/code&gt; or &lt;code&gt;-xHost&lt;/code&gt; or &lt;code&gt;QxHost&lt;/code&gt; is enabled through environment variable &lt;code&gt;CFLAGS&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5374a35aef1f1111ab75965c88b8c317b197461" translate="yes" xml:space="preserve">
          <source>The value of &lt;em&gt;newendian&lt;/em&gt; is one of these macros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77acab0966818b5a377ef30b38be521ef7f7b59" translate="yes" xml:space="preserve">
          <source>The value of the function when x1 is 0. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">El valor de la funci&amp;oacute;n cuando x1 es 0. Si &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; , deben ser ampliables a una forma com&amp;uacute;n (que se convierte en la forma de la salida).</target>
        </trans-unit>
        <trans-unit id="03d358ce11030b4d51f9879722053df717a3fe53" translate="yes" xml:space="preserve">
          <source>The value of this argument is typically a dictionary with column indices or column names as keys and a conversion functions as values. These conversion functions can either be actual functions or lambda functions. In any case, they should accept only a string as input and output only a single element of the wanted type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e9e5da5ef1ee5aadaa824ae3c6fd2914c94c23" translate="yes" xml:space="preserve">
          <source>The value of this attribute is used to determine what type of object to return in situations where there is more than one possibility for the Python type of the returned object. Subclasses inherit a default value of 0.0 for this attribute.</source>
          <target state="translated">El valor de este atributo se utiliza para determinar qué tipo de objeto se debe devolver en situaciones en las que existe más de una posibilidad para el tipo de Python del objeto devuelto.Las subclases heredan un valor por defecto de 0.0 para este atributo.</target>
        </trans-unit>
        <trans-unit id="8bcc816a3b6323731b656c466ec0a5744f30e87e" translate="yes" xml:space="preserve">
          <source>The value to convert. Positive and negative values are handled.</source>
          <target state="translated">El valor a convertir.Se manejan valores positivos y negativos.</target>
        </trans-unit>
        <trans-unit id="32b4c5a64bc9a7f3fa379e6006c427acc72a2601" translate="yes" xml:space="preserve">
          <source>The value to use for invalid entries (None by default). If None, the &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt; attribute of the array is used instead.</source>
          <target state="translated">El valor que se utilizar&amp;aacute; para las entradas no v&amp;aacute;lidas (Ninguno de forma predeterminada). Si es None, en su lugar se &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;fill_value&lt;/code&gt; &lt;/a&gt; atributo fill_value de la matriz.</target>
        </trans-unit>
        <trans-unit id="de21d1a60175f56eb618a4e1b78157f5a0b80498" translate="yes" xml:space="preserve">
          <source>The value to use for invalid entries (None by default). If None, then this argument is inferred from the passed &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, or in its absence the original array, as discussed in the notes below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bea3445bf9a264b60905faf1d0effc77e2e249" translate="yes" xml:space="preserve">
          <source>The value to use for invalid entries (None by default). If None, then this argument is inferred from the passed &lt;a href=&quot;numpy.ma.masked_array.dtype#numpy.ma.masked_array.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, or in its absence the original array, as discussed in the notes below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8455fb8033504388eae171a33ad0ef930322f1e" translate="yes" xml:space="preserve">
          <source>The value to use for invalid entries (None by default). If None, then this argument is inferred from the passed &lt;a href=&quot;numpy.ma.maskedarray.dtype#numpy.ma.MaskedArray.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, or in its absence the original array, as discussed in the notes below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e873302c473555951f6bce102181f00086c301d" translate="yes" xml:space="preserve">
          <source>The value to use for invalid entries. Can be scalar or non-scalar. If non-scalar, the resulting ndarray must be broadcastable over input array. Default is None, in which case, the &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt; attribute of the array is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1880e242040c0aab4362eb1a0863297a32bd5f4b" translate="yes" xml:space="preserve">
          <source>The value to use for invalid entries. Can be scalar or non-scalar. If non-scalar, the resulting ndarray must be broadcastable over input array. Default is None, in which case, the &lt;a href=&quot;numpy.ma.masked_array.fill_value#numpy.ma.masked_array.fill_value&quot;&gt;&lt;code&gt;fill_value&lt;/code&gt;&lt;/a&gt; attribute of the array is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b1837d34a4ca9f6b2279399c10c60d4b55936a" translate="yes" xml:space="preserve">
          <source>The value to use for invalid entries. Default is None.</source>
          <target state="translated">El valor a utilizar para las entradas inválidas.El valor por defecto es Ninguno.</target>
        </trans-unit>
        <trans-unit id="54be798891264cab731a931b04ea9772cdab541c" translate="yes" xml:space="preserve">
          <source>The value to use for the &lt;a href=&quot;numpy.ufunc.identity#numpy.ufunc.identity&quot;&gt;&lt;code&gt;identity&lt;/code&gt;&lt;/a&gt; attribute of the resulting object. If specified, this is equivalent to setting the underlying C &lt;code&gt;identity&lt;/code&gt; field to &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt;. If omitted, the identity is set to &lt;code&gt;PyUFunc_None&lt;/code&gt;. Note that this is _not_ equivalent to setting the identity to &lt;code&gt;None&lt;/code&gt;, which implies the operation is reorderable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfb1baad553fefd1bd16dad3fa307f22463d54c" translate="yes" xml:space="preserve">
          <source>The value where the peak of the distribution occurs. The value must fulfill the condition &lt;code&gt;left &amp;lt;= mode &amp;lt;= right&lt;/code&gt;.</source>
          <target state="translated">El valor en el que se produce el pico de la distribuci&amp;oacute;n. El valor debe cumplir la condici&amp;oacute;n &lt;code&gt;left &amp;lt;= mode &amp;lt;= right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="686c0ef41d4f40d919659043042cba31d0a83ddd" translate="yes" xml:space="preserve">
          <source>The value whose minimal data type is to be found.</source>
          <target state="translated">El valor cuyo tipo de datos mínimo se encuentra.</target>
        </trans-unit>
        <trans-unit id="ec08073e01c06623c4f6388732ecfb40030e861d" translate="yes" xml:space="preserve">
          <source>The value with which to start the reduction. If the ufunc has no identity or the dtype is object, this defaults to None - otherwise it defaults to ufunc.identity. If &lt;code&gt;None&lt;/code&gt; is given, the first element of the reduction is used, and an error is thrown if the reduction is empty.</source>
          <target state="translated">El valor con el que comenzar la reducci&amp;oacute;n. Si ufunc no tiene identidad o el dtype es un objeto, este valor predeterminado es Ninguno; de lo contrario, el valor predeterminado es ufunc.identity. Si se da &lt;code&gt;None&lt;/code&gt; , se usa el primer elemento de la reducci&amp;oacute;n y se arroja un error si la reducci&amp;oacute;n est&amp;aacute; vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="c02e60b2cf88beea9b6213b9d1e3b2c17ab885eb" translate="yes" xml:space="preserve">
          <source>The value(s) whose arccos is (are) required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183fa270f0d1fa6f702a51a2364673ed5612bfd2" translate="yes" xml:space="preserve">
          <source>The value(s) whose arcsin is (are) required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4cd85936bff2c0840b52fb0d1f9b2b867275e7" translate="yes" xml:space="preserve">
          <source>The value(s) whose arctanh is (are) required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21864f90829a08fd0ce039dcaefd6c6c1041816" translate="yes" xml:space="preserve">
          <source>The value(s) whose log base 10 is (are) required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a56b30d194880ee472ad588027f66ef7c7510ff" translate="yes" xml:space="preserve">
          <source>The value(s) whose log base 2 is (are) required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb30aa30026604ddea308e1175db0c56c2dbb97" translate="yes" xml:space="preserve">
          <source>The value(s) whose log base &lt;code&gt;n&lt;/code&gt; is (are) required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2591ea528e39e4354f5f1d5877efb3bad7380af" translate="yes" xml:space="preserve">
          <source>The value(s) whose log is (are) required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930e3ad8c3851bb30a80a559ca4a2af60560b1ff" translate="yes" xml:space="preserve">
          <source>The values &lt;code&gt;ar1[in1d]&lt;/code&gt; are in &lt;code&gt;ar2&lt;/code&gt;.</source>
          <target state="translated">Los valores &lt;code&gt;ar1[in1d]&lt;/code&gt; est&amp;aacute;n en &lt;code&gt;ar2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4cb91abe1a0f589bcf1ee9ebaba06339dc294dc" translate="yes" xml:space="preserve">
          <source>The values against which to test each value of &lt;code&gt;ar1&lt;/code&gt;.</source>
          <target state="translated">Los valores contra los cuales probar cada valor de &lt;code&gt;ar1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55096101173292ac6a418aa55429cc3cfcc3d718" translate="yes" xml:space="preserve">
          <source>The values against which to test each value of &lt;code&gt;element&lt;/code&gt;. This argument is flattened if it is an array or array_like. See notes for behavior with non-array-like parameters.</source>
          <target state="translated">Los valores contra los cuales probar cada valor de &lt;code&gt;element&lt;/code&gt; o . Este argumento se aplana si es una matriz o array_like. Consulte las notas sobre el comportamiento con par&amp;aacute;metros no similares a matrices.</target>
        </trans-unit>
        <trans-unit id="10fa1bca5c63978c522a37d289203eb7633c9fb5" translate="yes" xml:space="preserve">
          <source>The values in the rank-1 array &lt;code&gt;p&lt;/code&gt; are coefficients of a polynomial. If the length of &lt;code&gt;p&lt;/code&gt; is n+1 then the polynomial is described by:</source>
          <target state="translated">Los valores de la matriz de rango 1 &lt;code&gt;p&lt;/code&gt; son coeficientes de un polinomio. Si la longitud de &lt;code&gt;p&lt;/code&gt; es n + 1, entonces el polinomio se describe mediante:</target>
        </trans-unit>
        <trans-unit id="427b2ca25633b731d69a885f7ebcb443f1d11f04" translate="yes" xml:space="preserve">
          <source>The values in the result follow so-called &amp;ldquo;standard&amp;rdquo; order: If &lt;code&gt;A =
fft(a, n)&lt;/code&gt;, then &lt;code&gt;A[0]&lt;/code&gt; contains the zero-frequency term (the sum of the signal), which is always purely real for real inputs. Then &lt;code&gt;A[1:n/2]&lt;/code&gt; contains the positive-frequency terms, and &lt;code&gt;A[n/2+1:]&lt;/code&gt; contains the negative-frequency terms, in order of decreasingly negative frequency. For an even number of input points, &lt;code&gt;A[n/2]&lt;/code&gt; represents both positive and negative Nyquist frequency, and is also purely real for real input. For an odd number of input points, &lt;code&gt;A[(n-1)/2]&lt;/code&gt; contains the largest positive frequency, while &lt;code&gt;A[(n+1)/2]&lt;/code&gt; contains the largest negative frequency. The routine &lt;code&gt;np.fft.fftfreq(n)&lt;/code&gt; returns an array giving the frequencies of corresponding elements in the output. The routine &lt;code&gt;np.fft.fftshift(A)&lt;/code&gt; shifts transforms and their frequencies to put the zero-frequency components in the middle, and &lt;code&gt;np.fft.ifftshift(A)&lt;/code&gt; undoes that shift.</source>
          <target state="translated">Los valores en el resultado siguen el llamado orden &quot;est&amp;aacute;ndar&quot;: si &lt;code&gt;A = fft(a, n)&lt;/code&gt; , entonces &lt;code&gt;A[0]&lt;/code&gt; contiene el t&amp;eacute;rmino de frecuencia cero (la suma de la se&amp;ntilde;al), que siempre es puramente real para real entradas. Entonces &lt;code&gt;A[1:n/2]&lt;/code&gt; contiene los t&amp;eacute;rminos de frecuencia positiva, y &lt;code&gt;A[n/2+1:]&lt;/code&gt; contiene los t&amp;eacute;rminos de frecuencia negativa, en orden decreciente de frecuencia negativa. Para un n&amp;uacute;mero par de puntos de entrada, &lt;code&gt;A[n/2]&lt;/code&gt; representa la frecuencia de Nyquist tanto positiva como negativa, y tambi&amp;eacute;n es puramente real para la entrada real. Para un n&amp;uacute;mero impar de puntos de entrada, &lt;code&gt;A[(n-1)/2]&lt;/code&gt; contiene la mayor frecuencia positiva, mientras que &lt;code&gt;A[(n+1)/2]&lt;/code&gt; contiene la mayor frecuencia negativa. La rutina &lt;code&gt;np.fft.fftfreq(n)&lt;/code&gt; devuelve una matriz que proporciona las frecuencias de los elementos correspondientes en la salida. La rutina &lt;code&gt;np.fft.fftshift(A)&lt;/code&gt; cambia las transformaciones y sus frecuencias para poner los componentes de frecuencia cero en el medio, y &lt;code&gt;np.fft.ifftshift(A)&lt;/code&gt; deshace ese cambio.</target>
        </trans-unit>
        <trans-unit id="049629d5662346c69d1da68173623b07fbd3ce2f" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;R&lt;/code&gt; are between -1 and 1, inclusive.</source>
          <target state="translated">Los valores de &lt;code&gt;R&lt;/code&gt; se encuentran entre -1 y 1, inclusive.</target>
        </trans-unit>
        <trans-unit id="9be1b3aaf13595cf59a1cfa63bbe9d63fd300725" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;x1&lt;/code&gt; with the sign of &lt;code&gt;x2&lt;/code&gt;. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">Los valores de &lt;code&gt;x1&lt;/code&gt; con el signo de &lt;code&gt;x2&lt;/code&gt; . Este es un escalar si tanto &lt;code&gt;x1&lt;/code&gt; como &lt;code&gt;x2&lt;/code&gt; son escalares.</target>
        </trans-unit>
        <trans-unit id="0b6f0a3f189dc33bd74c3b4b3649d7d6ee49f75c" translate="yes" xml:space="preserve">
          <source>The values of the histogram. See &lt;code&gt;density&lt;/code&gt; and &lt;code&gt;weights&lt;/code&gt; for a description of the possible semantics.</source>
          <target state="translated">Los valores del histograma. Consulte &lt;code&gt;density&lt;/code&gt; y &lt;code&gt;weights&lt;/code&gt; para obtener una descripci&amp;oacute;n de la posible sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="94c9275f5f339f7a7296146a88f4dacc4958d420" translate="yes" xml:space="preserve">
          <source>The values of the multidimension polynomial on points formed with triples of corresponding values from &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">Los valores del polinomio multidimensional en puntos formados con triples de valores correspondientes de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="000e1e6aea9b8f07ac10536f42598c0ea9bb0313" translate="yes" xml:space="preserve">
          <source>The values of the multidimensional polynomial on points formed with triples of corresponding values from &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">Los valores del polinomio multidimensional en puntos formados con triples de valores correspondientes de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04875120c52fa413c52d82fe0fc8626bcc9f10c7" translate="yes" xml:space="preserve">
          <source>The values of the time series of cash flows. The (fixed) time interval between cash flow &amp;ldquo;events&amp;rdquo; must be the same as that for which &lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt;&lt;code&gt;rate&lt;/code&gt;&lt;/a&gt; is given (i.e., if &lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt;&lt;code&gt;rate&lt;/code&gt;&lt;/a&gt; is per year, then precisely a year is understood to elapse between each cash flow event). By convention, investments or &amp;ldquo;deposits&amp;rdquo; are negative, income or &amp;ldquo;withdrawals&amp;rdquo; are positive; &lt;code&gt;values&lt;/code&gt; must begin with the initial investment, thus &lt;code&gt;values[0]&lt;/code&gt; will typically be negative.</source>
          <target state="translated">Los valores de la serie temporal de los flujos de efectivo. El intervalo de tiempo (fijo) entre los &amp;ldquo;eventos&amp;rdquo; de flujo de efectivo debe ser el mismo para el que se da la &lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt; &lt;code&gt;rate&lt;/code&gt; &lt;/a&gt; (es decir, si la &lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt; &lt;code&gt;rate&lt;/code&gt; &lt;/a&gt; es por a&amp;ntilde;o, se entiende que transcurre exactamente un a&amp;ntilde;o entre cada evento de flujo de efectivo). Por convenci&amp;oacute;n, las inversiones o &quot;dep&amp;oacute;sitos&quot; son negativos, los ingresos o los &quot;retiros&quot; son positivos; &lt;code&gt;values&lt;/code&gt; deben comenzar con la inversi&amp;oacute;n inicial, por lo que los &lt;code&gt;values[0]&lt;/code&gt; suelen ser negativos.</target>
        </trans-unit>
        <trans-unit id="1a3aeed326405c6ff97973ff76e3c1ac5b78c950" translate="yes" xml:space="preserve">
          <source>The values of the two dimensional Chebyshev series at points formed from pairs of corresponding values from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Los valores de la serie de Chebyshev bidimensional en puntos formados a partir de pares de valores correspondientes de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d500e0f26328b27b56cc6ea280ce335971a39a93" translate="yes" xml:space="preserve">
          <source>The values of the two dimensional Chebyshev series at points in the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Los valores de las dos series de Chebyshev dimensionales en los puntos en el producto cartesiano de &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="118ceee048eeb019cc7036790e58ad86a6694410" translate="yes" xml:space="preserve">
          <source>The values of the two dimensional Legendre series at points formed from pairs of corresponding values from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Los valores de las dos series de Legendre dimensionales en los puntos formados a partir de pares de valores de correspondiente &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75bce5c26e8d20f2a28b76fe4bee99ba20e34131" translate="yes" xml:space="preserve">
          <source>The values of the two dimensional polynomial at points formed with pairs of corresponding values from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Los valores del polinomio bidimensional en los puntos formados con pares de valores correspondientes de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb47214ec0ab61ed4f83b6664e41c0aa8a83d3ed" translate="yes" xml:space="preserve">
          <source>The values of the two dimensional polynomial at points in the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Los valores del polinomio bidimensional en los puntos del producto cartesiano de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d3e958b62535b85e2d7d32e34bc42123eb7d409" translate="yes" xml:space="preserve">
          <source>The values reported are normalized relative to the speed of MT19937 in each table. A value of 100 indicates that the performance matches the MT19937. Higher values indicate improved performance. These values cannot be compared across tables.</source>
          <target state="translated">Los valores notificados están normalizados en relación con la velocidad de MT19937 en cada cuadro.Un valor de 100 indica que el rendimiento coincide con el de MT19937.Los valores más altos indican un mejor rendimiento.Estos valores no pueden ser comparados entre las tablas.</target>
        </trans-unit>
        <trans-unit id="d8a3da63b70322018b836bf5f65f57d16d3ac651" translate="yes" xml:space="preserve">
          <source>The values whose cube-roots are required.</source>
          <target state="translated">Los valores cuyas raíces cúbicas se requieren.</target>
        </trans-unit>
        <trans-unit id="b42bae2bd42a8c9e82a7332d1979f8a09c759feb" translate="yes" xml:space="preserve">
          <source>The values whose square-roots are required.</source>
          <target state="translated">Los valores cuyas raíces cuadradas se requieren.</target>
        </trans-unit>
        <trans-unit id="187833930bd2cba800be6e8dd52776f374cc2f1c" translate="yes" xml:space="preserve">
          <source>The variable obtained by summing the squares of &lt;code&gt;df&lt;/code&gt; independent, standard normally distributed random variables:</source>
          <target state="translated">La variable obtenida sumando los cuadrados de las variables aleatorias est&amp;aacute;ndar independientes, distribuidas normalmente, &lt;code&gt;df&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fddb7e65a48e5500c69e424836450e7732656827" translate="yes" xml:space="preserve">
          <source>The variable used in the string representation of &lt;code&gt;p&lt;/code&gt; can be modified, using the &lt;a href=&quot;numpy.poly1d.variable#numpy.poly1d.variable&quot;&gt;&lt;code&gt;variable&lt;/code&gt;&lt;/a&gt; parameter:</source>
          <target state="translated">La variable utilizada en la representaci&amp;oacute;n de cadena de &lt;code&gt;p&lt;/code&gt; se puede modificar, utilizando el par&amp;aacute;metro &lt;a href=&quot;numpy.poly1d.variable#numpy.poly1d.variable&quot;&gt; &lt;code&gt;variable&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="032af5a223b6a82b2905b5c850f693e8fec137cd" translate="yes" xml:space="preserve">
          <source>The variance is the average of the squared deviations from the mean, i.e., &lt;code&gt;var = mean(abs(x - x.mean())**2)&lt;/code&gt;.</source>
          <target state="translated">La varianza es el promedio de las desviaciones al cuadrado de la media, es decir, &lt;code&gt;var = mean(abs(x - x.mean())**2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bc052e3f44988f0e29422c1a7d1c9ad7fd6f4a4" translate="yes" xml:space="preserve">
          <source>The variance is the average of the squared deviations from the mean, i.e., &lt;code&gt;var = mean(x)&lt;/code&gt;, where &lt;code&gt;x = abs(a - a.mean())**2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598bba43a5fa13ecb982a04e1ac2dcfa3fb5a79a" translate="yes" xml:space="preserve">
          <source>The various character codes indicating certain types are also part of an enumerated list. References to type characters (should they be needed at all) should always use these enumerations. The form of them is &lt;code&gt;NPY_{NAME}LTR&lt;/code&gt; where &lt;code&gt;{NAME}&lt;/code&gt; can be</source>
          <target state="translated">Los diversos c&amp;oacute;digos de caracteres que indican ciertos tipos tambi&amp;eacute;n forman parte de una lista enumerada. Las referencias a los caracteres tipogr&amp;aacute;ficos (en caso de que sean necesarios) siempre deben utilizar estas enumeraciones. La forma de ellos es &lt;code&gt;NPY_{NAME}LTR&lt;/code&gt; donde &lt;code&gt;{NAME}&lt;/code&gt; puede ser</target>
        </trans-unit>
        <trans-unit id="d2bf21ee585f4c470168bc467b8b8760de8826fd" translate="yes" xml:space="preserve">
          <source>The various routines in the Polynomial package all deal with series whose coefficients go from degree zero upward, which is the &lt;em&gt;reverse order&lt;/em&gt; of the Poly1d convention. The easy way to remember this is that indexes correspond to degree, i.e., coef[i] is the coefficient of the term of degree i.</source>
          <target state="translated">Todas las rutinas del paquete Polynomial tratan con series cuyos coeficientes van desde el grado cero hacia arriba, que es el &lt;em&gt;orden inverso&lt;/em&gt; de la convenci&amp;oacute;n Poly1d. La forma f&amp;aacute;cil de recordar esto es que los &amp;iacute;ndices corresponden al grado, es decir, coef [i] es el coeficiente del t&amp;eacute;rmino de grado i.</target>
        </trans-unit>
        <trans-unit id="40dcb2f33f2d122b10f89906b0fa578dee7f50c3" translate="yes" xml:space="preserve">
          <source>The various selection algorithms are characterized by their average speed, worst case performance, work space size, and whether they are stable. A stable sort keeps items with the same key in the same relative order. The available algorithms have the following properties:</source>
          <target state="translated">Los diversos algoritmos de selección se caracterizan por su velocidad media,el rendimiento en el peor de los casos,el tamaño del espacio de trabajo y si son estables.Una clasificación estable mantiene los elementos con la misma clave en el mismo orden relativo.Los algoritmos disponibles tienen las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="cc8322a9b3a11e0738c1dc848dd44452ebdc9f34" translate="yes" xml:space="preserve">
          <source>The various sorting algorithms are characterized by their average speed, worst case performance, work space size, and whether they are stable. A stable sort keeps items with the same key in the same relative order. The four algorithms implemented in NumPy have the following properties:</source>
          <target state="translated">Los diversos algoritmos de clasificación se caracterizan por su velocidad media,el peor de los casos,el tamaño del espacio de trabajo y si son estables.Una clasificación estable mantiene los artículos con la misma clave en el mismo orden relativo.Los cuatro algoritmos implementados en NumPy tienen las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="909b1eaadbbd85f2064b83f98f4324e7aba0802c" translate="yes" xml:space="preserve">
          <source>The vdot(&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;) function handles complex numbers differently than dot(&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;). If the first argument is complex the complex conjugate of the first argument is used for the calculation of the dot product.</source>
          <target state="translated">La funci&amp;oacute;n vdot ( &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; ) maneja n&amp;uacute;meros complejos de manera diferente a dot ( &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; ). Si el primer argumento es complejo, el conjugado complejo del primer argumento se utiliza para calcular el producto escalar.</target>
        </trans-unit>
        <trans-unit id="f8aeebbf639e209f314766460959c079ab13f5dd" translate="yes" xml:space="preserve">
          <source>The version 1.0 format only allowed the array header to have a total size of 65535 bytes. This can be exceeded by structured arrays with a large number of columns. The version 2.0 format extends the header size to 4 GiB. &lt;a href=&quot;numpy.save#numpy.save&quot;&gt;&lt;code&gt;numpy.save&lt;/code&gt;&lt;/a&gt; will automatically save in 2.0 format if the data requires it, else it will always use the more compatible 1.0 format.</source>
          <target state="translated">El formato de la versi&amp;oacute;n 1.0 solo permit&amp;iacute;a que el encabezado de la matriz tuviera un tama&amp;ntilde;o total de 65535 bytes. Esto puede superarse mediante matrices estructuradas con una gran cantidad de columnas. El formato de la versi&amp;oacute;n 2.0 ampl&amp;iacute;a el tama&amp;ntilde;o del encabezado a 4 GiB. &lt;a href=&quot;numpy.save#numpy.save&quot;&gt; &lt;code&gt;numpy.save&lt;/code&gt; &lt;/a&gt; se guardar&amp;aacute; autom&amp;aacute;ticamente en formato 2.0 si los datos lo requieren; de lo contrario, siempre usar&amp;aacute; el formato 1.0 m&amp;aacute;s compatible.</target>
        </trans-unit>
        <trans-unit id="7a92769f6aa86193f32ae6d12aa9581114703198" translate="yes" xml:space="preserve">
          <source>The version 2 interface was very similar. The differences were largely aesthetic. In particular:</source>
          <target state="translated">La interfaz de la versión 2 era muy similar.Las diferencias eran en gran parte estéticas.En particular:</target>
        </trans-unit>
        <trans-unit id="73bb55ce329b913976b213535f9642d82795177e" translate="yes" xml:space="preserve">
          <source>The version numbering of these formats is independent of NumPy version numbering. If the format is upgraded, the code in &lt;code&gt;numpy.io&lt;/code&gt; will still be able to read and write Version 1.0 files.</source>
          <target state="translated">La numeraci&amp;oacute;n de versiones de estos formatos es independiente de la numeraci&amp;oacute;n de versiones de NumPy. Si se actualiza el formato, el c&amp;oacute;digo en &lt;code&gt;numpy.io&lt;/code&gt; a&amp;uacute;n podr&amp;aacute; leer y escribir archivos de la Versi&amp;oacute;n 1.0.</target>
        </trans-unit>
        <trans-unit id="d465b2400649c410304e54f051f7d49aa970de97" translate="yes" xml:space="preserve">
          <source>The von Mises distribution (also known as the circular normal distribution) is a continuous probability distribution on the unit circle. It may be thought of as the circular analogue of the normal distribution.</source>
          <target state="translated">La distribución de von Mises (también conocida como la distribución circular normal)es una distribución de probabilidad continua en el círculo unitario.Puede pensarse que es el análogo circular de la distribución normal.</target>
        </trans-unit>
        <trans-unit id="08a316a93b85a841b11a6055717875d0502f2c60" translate="yes" xml:space="preserve">
          <source>The von Mises is named for Richard Edler von Mises, who was born in Austria-Hungary, in what is now the Ukraine. He fled to the United States in 1939 and became a professor at Harvard. He worked in probability theory, aerodynamics, fluid mechanics, and philosophy of science.</source>
          <target state="translated">Los von Mises se llaman así por Richard Edler von Mises,que nació en Austria-Hungría,en lo que ahora es Ucrania.Huyó a los Estados Unidos en 1939 y se convirtió en profesor de Harvard.Trabajó en teoría de la probabilidad,aerodinámica,mecánica de fluidos y filosofía de la ciencia.</target>
        </trans-unit>
        <trans-unit id="c66491ff606b4dc91911613d519dc8370dc0d225" translate="yes" xml:space="preserve">
          <source>The warnings can be turned off by</source>
          <target state="translated">Las advertencias pueden ser desactivadas por</target>
        </trans-unit>
        <trans-unit id="a3b6182c6d54b721f88f41929f57467a3fff8892" translate="yes" xml:space="preserve">
          <source>The weight function at &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">La funci&amp;oacute;n de peso en &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88ba21dce5f8f071e2673c0f1f06439caa2807d7" translate="yes" xml:space="preserve">
          <source>The weight function is</source>
          <target state="translated">La función de peso es</target>
        </trans-unit>
        <trans-unit id="308836c1d8a38528ab14ca4524532677c1153f22" translate="yes" xml:space="preserve">
          <source>The weight function of the Chebyshev polynomials.</source>
          <target state="translated">La función de peso de los polinomios de Chebyshev.</target>
        </trans-unit>
        <trans-unit id="adb5d593e92bd3e7a619595dc278c8d8865de5f1" translate="yes" xml:space="preserve">
          <source>The wheels and source should be uploaded to PyPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a75026ea8d79cfa948ad8144c46e90db33a682b" translate="yes" xml:space="preserve">
          <source>The wheels, once built, appear at &lt;a href=&quot;https://anaconda.org/multibuild-wheels-staging/numpy&quot;&gt;https://anaconda.org/multibuild-wheels-staging/numpy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b231b3ccfadec2079a40387b8d56e7ec8b9bb3d" translate="yes" xml:space="preserve">
          <source>The window of the converted series. If the value is None, the default window of &lt;code&gt;kind&lt;/code&gt; is used.</source>
          <target state="translated">La ventana de la serie convertida. Si el valor es Ninguno, se utiliza la ventana de &lt;code&gt;kind&lt;/code&gt; predeterminada .</target>
        </trans-unit>
        <trans-unit id="1da2fe6ad3abf125b431351fbdd12b7a74edc3f3" translate="yes" xml:space="preserve">
          <source>The window, with the maximum value normalized to one (the value one appears only if &lt;code&gt;M&lt;/code&gt; is odd).</source>
          <target state="translated">La ventana, con el valor m&amp;aacute;ximo normalizado a uno (el valor uno aparece solo si &lt;code&gt;M&lt;/code&gt; es impar).</target>
        </trans-unit>
        <trans-unit id="48ac736d93f8e7e8643c8e0f7b0c321855533edd" translate="yes" xml:space="preserve">
          <source>The window, with the maximum value normalized to one (the value one appears only if the number of samples is odd).</source>
          <target state="translated">La ventana,con el valor máximo normalizado a uno (el valor uno aparece sólo si el número de muestras es impar).</target>
        </trans-unit>
        <trans-unit id="523eb308fcdc8d9a4d1dacdeabc03bc7b0a18f42" translate="yes" xml:space="preserve">
          <source>The word &amp;ldquo;non-zero&amp;rdquo; is in reference to the Python 2.x built-in method &lt;code&gt;__nonzero__()&lt;/code&gt; (renamed &lt;code&gt;__bool__()&lt;/code&gt; in Python 3.x) of Python objects that tests an object&amp;rsquo;s &amp;ldquo;truthfulness&amp;rdquo;. For example, any number is considered truthful if it is nonzero, whereas any string is considered truthful if it is not the empty string. Thus, this function (recursively) counts how many elements in &lt;code&gt;a&lt;/code&gt; (and in sub-arrays thereof) have their &lt;code&gt;__nonzero__()&lt;/code&gt; or &lt;code&gt;__bool__()&lt;/code&gt; method evaluated to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">La palabra &quot;distinto de cero&quot; se refiere al m&amp;eacute;todo &lt;code&gt;__nonzero__()&lt;/code&gt; Python 2.x __nonzero __ () (renombrado como &lt;code&gt;__bool__()&lt;/code&gt; en Python 3.x) de objetos de Python que prueba la &quot;veracidad&quot; de un objeto. Por ejemplo, cualquier n&amp;uacute;mero se considera verdadero si no es cero, mientras que cualquier cadena se considera verdadera si no es la cadena vac&amp;iacute;a. Por lo tanto, esta funci&amp;oacute;n (recursivamente) cuenta cu&amp;aacute;ntos elementos en &lt;code&gt;a&lt;/code&gt; (y en &lt;code&gt;__nonzero__()&lt;/code&gt; mismos) tienen su m&amp;eacute;todo __nonzero __ () o &lt;code&gt;__bool__()&lt;/code&gt; evaluado como &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3f383c240aa5414ebaced6e3034416ca7d1b6af" translate="yes" xml:space="preserve">
          <source>The wrap option affects only tall matrices:</source>
          <target state="translated">La opción de envolver sólo afecta a las matrices altas:</target>
        </trans-unit>
        <trans-unit id="fc81c936c38ae025ba8146e1222f7da14b956b1d" translate="yes" xml:space="preserve">
          <source>The x-coordinate sequence is expected to be increasing, but this is not explicitly enforced. However, if the sequence &lt;code&gt;xp&lt;/code&gt; is non-increasing, interpolation results are meaningless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30f1b95441858e7d3037adb27c5185133726d2e" translate="yes" xml:space="preserve">
          <source>The x-coordinates at which to evaluate the interpolated values.</source>
          <target state="translated">Las coordenadas x para evaluar los valores interpolados.</target>
        </trans-unit>
        <trans-unit id="98e412a8d1f1dc441497184c5505f308bf594274" translate="yes" xml:space="preserve">
          <source>The x-coordinates of the data points, must be increasing if argument &lt;code&gt;period&lt;/code&gt; is not specified. Otherwise, &lt;code&gt;xp&lt;/code&gt; is internally sorted after normalizing the periodic boundaries with &lt;code&gt;xp = xp % period&lt;/code&gt;.</source>
          <target state="translated">Las coordenadas x de los puntos de datos deben aumentar si no se especifica el &lt;code&gt;period&lt;/code&gt; argumento . De lo contrario, &lt;code&gt;xp&lt;/code&gt; se ordena internamente despu&amp;eacute;s de normalizar los l&amp;iacute;mites peri&amp;oacute;dicos con &lt;code&gt;xp = xp % period&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fb42b6312c1e1cea4c01b6bb567b8d84d30c4b2" translate="yes" xml:space="preserve">
          <source>The y-coordinates of the data points, same length as &lt;code&gt;xp&lt;/code&gt;.</source>
          <target state="translated">Las coordenadas y de los puntos de datos, de la misma longitud que &lt;code&gt;xp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0716cf4800278ada150f876e9ddcae3c99250b13" translate="yes" xml:space="preserve">
          <source>Their are two basic approaches to calling compiled code: writing an extension module that is then imported to Python using the import command, or calling a shared-library subroutine directly from Python using the &lt;a href=&quot;https://docs.python.org/3/library/ctypes.html&quot;&gt;ctypes&lt;/a&gt; module. Writing an extension module is the most common method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13617ef6d1ed670620e3eee1fe6521faed558f33" translate="yes" xml:space="preserve">
          <source>Their contents are described below.</source>
          <target state="translated">Su contenido se describe a continuación.</target>
        </trans-unit>
        <trans-unit id="d67a14bba38674d133aa6326e1d56a5430227ffd" translate="yes" xml:space="preserve">
          <source>Then modify it as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629d9c8c7e969c90c99e3fcb123c3c923c445b2e" translate="yes" xml:space="preserve">
          <source>Then set your name and email:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18de376fec5af9b24c105e03578c15d330983aed" translate="yes" xml:space="preserve">
          <source>Then you can obtain a lot of useful information (first details about &lt;code&gt;a&lt;/code&gt; itself, followed by the docstring of &lt;code&gt;ndarray&lt;/code&gt; of which &lt;code&gt;a&lt;/code&gt; is an instance):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beca14a81e09ec62e1fbfc41746f56a23c04a2b2" translate="yes" xml:space="preserve">
          <source>Then, I can compile the extension module using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa5af99f0618068c146112b2487469ac95f27c4" translate="yes" xml:space="preserve">
          <source>Then, all the HTML files will be generated in &lt;code&gt;doc/build/html/&lt;/code&gt;. Since the documentation is based on docstrings, the appropriate version of numpy must be installed in the host python used to run sphinx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbaffa25ddeac5ba58545ce47397f8a88d6c19f" translate="yes" xml:space="preserve">
          <source>Then, create a new branch based on the master branch of the upstream repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64f3ff6d48531fcbe93b1b844e9cc7950b3eeb4" translate="yes" xml:space="preserve">
          <source>Then, go to your forked repository github page, say &lt;code&gt;https://github.com/your-user-name/numpy&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">Then:</target>
        </trans-unit>
        <trans-unit id="2a2d6eb0d79238cba7c8636b58f3ce6ad4b5b344" translate="yes" xml:space="preserve">
          <source>There are 4 relevant uses of the word &lt;code&gt;align&lt;/code&gt; used in numpy:</source>
          <target state="translated">Hay 4 usos relevantes de la palabra &lt;code&gt;align&lt;/code&gt; usada en numpy:</target>
        </trans-unit>
        <trans-unit id="d627a19c8c5bea4de4ec9dd15face492281b6f90" translate="yes" xml:space="preserve">
          <source>There are 5 basic numerical types representing booleans (bool), integers (int), unsigned integers (uint) floating point (float) and complex. Those with numbers in their name indicate the bitsize of the type (i.e. how many bits are needed to represent a single value in memory). Some types, such as &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;intp&lt;/code&gt;, have differing bitsizes, dependent on the platforms (e.g. 32-bit vs. 64-bit machines). This should be taken into account when interfacing with low-level code (such as C or Fortran) where the raw memory is addressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bb2653ac2aa7153e927fc1353ff32c9d0fadd9" translate="yes" xml:space="preserve">
          <source>There are 5 general mechanisms for creating arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7e737fa7ec2df18d82d046fe4547a421ecb3b7" translate="yes" xml:space="preserve">
          <source>There are 6 (binary) flags that describe the memory area used by the data buffer. These constants are defined in &lt;code&gt;arrayobject.h&lt;/code&gt; and determine the bit-position of the flag. Python exposes a nice attribute- based interface as well as a dictionary-like interface for getting (and, if appropriate, setting) these flags.</source>
          <target state="translated">Hay 6 indicadores (binarios) que describen el &amp;aacute;rea de memoria utilizada por el b&amp;uacute;fer de datos. Estas constantes se definen en &lt;code&gt;arrayobject.h&lt;/code&gt; y determinan la posici&amp;oacute;n de bit de la bandera. Python expone una interfaz agradable basada en atributos, as&amp;iacute; como una interfaz similar a un diccionario para obtener (y, si corresponde, configurar) estos indicadores.</target>
        </trans-unit>
        <trans-unit id="92880b58f6bd9442d0573770c5bcc16b810e1cdc" translate="yes" xml:space="preserve">
          <source>There are &lt;code&gt;num&lt;/code&gt; equally spaced samples in the closed interval &lt;code&gt;[start, stop]&lt;/code&gt; or the half-open interval &lt;code&gt;[start, stop)&lt;/code&gt; (depending on whether &lt;code&gt;endpoint&lt;/code&gt; is True or False).</source>
          <target state="translated">Hay un &lt;code&gt;num&lt;/code&gt; muestras igualmente espaciadas en el intervalo cerrado &lt;code&gt;[start, stop]&lt;/code&gt; o en el intervalo medio abierto &lt;code&gt;[start, stop)&lt;/code&gt; (dependiendo de si el &lt;code&gt;endpoint&lt;/code&gt; es Verdadero o Falso).</target>
        </trans-unit>
        <trans-unit id="8269e59da4433043c91490542198a44ae2a7bd22" translate="yes" xml:space="preserve">
          <source>There are a few commonly reported issues depending on your system/setup. If none of the following tips help you, please be sure to note the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1df47117b7e4e6ae3cadbfbaa9a3f7c95c99296" translate="yes" xml:space="preserve">
          <source>There are a few situations where masked arrays can be more useful than just eliminating the invalid entries of an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f20349ffc92d6259aa973ed6765d972938b14bd" translate="yes" xml:space="preserve">
          <source>There are a number of ways to assign values to a structured array: Using python tuples, using scalar values, or using other structured arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabadb6a5aa99979671de060b5cf5eb2bfdc73b8" translate="yes" xml:space="preserve">
          <source>There are a variety of approaches one can use. If the file has a relatively simple format then one can write a simple I/O library and use the numpy fromfile() function and .tofile() method to read and write numpy arrays directly (mind your byteorder though!) If a good C or C++ library exists that read the data, one can wrap that library with a variety of techniques though that certainly is much more work and requires significantly more advanced knowledge to interface with C or C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6009b813cfbdbc400ba73901cd26bc8dc165215e" translate="yes" xml:space="preserve">
          <source>There are also typedefs for signed integers, unsigned integers, floating point, and complex floating point types of specific bit- widths. The available type names are</source>
          <target state="translated">También hay tipedefs para enteros con signo,enteros sin signo,en coma flotante y tipos complejos de coma flotante de anchos de bits específicos.Los nombres de tipos disponibles son</target>
        </trans-unit>
        <trans-unit id="2cd3e7355c4c3985bff39b5837a16202e8c1540c" translate="yes" xml:space="preserve">
          <source>There are currently more than 60 universal functions defined in &lt;a href=&quot;index#module-numpy&quot;&gt;&lt;code&gt;numpy&lt;/code&gt;&lt;/a&gt; on one or more types, covering a wide variety of operations. Some of these ufuncs are called automatically on arrays when the relevant infix notation is used (&lt;em&gt;e.g.&lt;/em&gt;, &lt;a href=&quot;generated/numpy.add#numpy.add&quot;&gt;&lt;code&gt;add(a, b)&lt;/code&gt;&lt;/a&gt; is called internally when &lt;code&gt;a + b&lt;/code&gt; is written and &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt; is an &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;). Nevertheless, you may still want to use the ufunc call in order to use the optional output argument(s) to place the output(s) in an object (or objects) of your choice.</source>
          <target state="translated">Actualmente hay m&amp;aacute;s de 60 funciones universales definidas en &lt;a href=&quot;index#module-numpy&quot;&gt; &lt;code&gt;numpy&lt;/code&gt; &lt;/a&gt; en uno o m&amp;aacute;s tipos, que cubren una amplia variedad de operaciones. Algunos de estos ufuncs son llamados autom&amp;aacute;ticamente en matrices cuando se utiliza la notaci&amp;oacute;n infija relevante ( &lt;em&gt;por ejemplo&lt;/em&gt; , &lt;a href=&quot;generated/numpy.add#numpy.add&quot;&gt; &lt;code&gt;add(a, b)&lt;/code&gt; &lt;/a&gt; se llama internamente cuando &lt;code&gt;a + b&lt;/code&gt; es escrito y &lt;em&gt;una&lt;/em&gt; o &lt;em&gt;b&lt;/em&gt; es un &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; ). Sin embargo, es posible que a&amp;uacute;n desee usar la llamada a ufunc para usar los argumentos de salida opcionales para colocar la salida en un objeto (u objetos) de su elecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="775b5ff21441ff77356a90016945326f51981b32" translate="yes" xml:space="preserve">
          <source>There are fairly common issues when using PyCharm together with Anaconda, please see the &lt;a href=&quot;https://www.jetbrains.com/help/pycharm/conda-support-creating-conda-virtual-environment.html&quot;&gt;PyCharm support&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63abd249d8d4c496fdec07d0a25a5469a4e4f4df" translate="yes" xml:space="preserve">
          <source>There are formulas for writing useful documents, and four formulas cover nearly everything. There are four formulas because there are four categories of document &amp;ndash; &lt;code&gt;tutorial&lt;/code&gt;, &lt;code&gt;how-to guide&lt;/code&gt;, &lt;code&gt;explanation&lt;/code&gt;, and &lt;code&gt;reference&lt;/code&gt;. The insight that docs divide up this way belongs to Daniele Procida, who goes on &lt;a href=&quot;https://documentation.divio.com/&quot;&gt;in this short article&lt;/a&gt; to explain the differences and reveal the formulas. When you begin a document or propose one, have in mind which of these types it will be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3438358c09e82d3e17ac10e9485821f710c7159e" translate="yes" xml:space="preserve">
          <source>There are libraries that can be used to generate arrays for special purposes and it isn&amp;rsquo;t possible to enumerate all of them. The most common uses are use of the many array generation functions in random that can generate arrays of random values, and some utility functions to generate special matrices (e.g. diagonal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69a32040141b3969da2a2cbb310c56f38084713" translate="yes" xml:space="preserve">
          <source>There are lots of examples of how to use &lt;a href=&quot;https://docs.python.org/dev/c-api/arg.html#c.PyArg_ParseTuple&quot;&gt;&lt;code&gt;PyArg_ParseTuple&lt;/code&gt;&lt;/a&gt; throughout the NumPy source code. The standard usage is like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b9dbbab83df5d12e3f17adf9850959d4114286" translate="yes" xml:space="preserve">
          <source>There are many C or C++ array/NumPy array situations not covered by a simple &lt;code&gt;%include &quot;numpy.i&quot;&lt;/code&gt; and subsequent &lt;code&gt;%apply&lt;/code&gt; directives.</source>
          <target state="translated">Hay muchas situaciones de arreglos C o C ++ / arreglos NumPy que no est&amp;aacute;n cubiertos por un simple &lt;code&gt;%include &quot;numpy.i&quot;&lt;/code&gt; y las siguientes directivas &lt;code&gt;%apply&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db56cb5ed387c40b2bc60fa8c76803719afb40fe" translate="yes" xml:space="preserve">
          <source>There are many online tutorials to help you &lt;a href=&quot;https://try.github.io/&quot;&gt;learn git&lt;/a&gt;. For discussions of specific git workflows, see these discussions on &lt;a href=&quot;https://www.mail-archive.com/dri-devel@lists.sourceforge.net/msg39091.html&quot;&gt;linux git workflow&lt;/a&gt;, and &lt;a href=&quot;https://mail.python.org/pipermail/ipython-dev/2010-October/005632.html&quot;&gt;ipython git workflow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c7bbd8e8aff936bd091f138c70193c9efdefe3" translate="yes" xml:space="preserve">
          <source>There are many online tutorials to help you &lt;a href=&quot;https://www.atlassian.com/git/tutorials/&quot;&gt;learn git&lt;/a&gt;. For discussions of specific git workflows, see these discussions on &lt;a href=&quot;https://www.mail-archive.com/dri-devel@lists.sourceforge.net/msg39091.html&quot;&gt;linux git workflow&lt;/a&gt;, and &lt;a href=&quot;http://mail.python.org/pipermail/ipython-dev/2010-October/006746.html&quot;&gt;ipython git workflow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7a362f552d6539941413dc2279097986613078" translate="yes" xml:space="preserve">
          <source>There are many ways of working with &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;; here are some posts on the rules of thumb that other projects have come up with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850bf20dccfb45fbea5bb3bf4cc123a24de9ce74" translate="yes" xml:space="preserve">
          <source>There are many ways to define the DFT, varying in the sign of the exponent, normalization, etc. In this implementation, the DFT is defined as</source>
          <target state="translated">Hay muchas formas de definir el DFT,variando el signo del exponente,la normalización,etc.En esta implementación,el DFT se define como</target>
        </trans-unit>
        <trans-unit id="76da8844fec054fd5276e6ad85d740b68fcb82e8" translate="yes" xml:space="preserve">
          <source>There are no general requirements on the return value from &lt;code&gt;__array_function__&lt;/code&gt;, although most sensible implementations should probably return array(s) with the same type as one of the function&amp;rsquo;s arguments.</source>
          <target state="translated">No hay requisitos generales sobre el valor de retorno de &lt;code&gt;__array_function__&lt;/code&gt; , aunque las implementaciones m&amp;aacute;s sensatas probablemente deber&amp;iacute;an devolver matrices con el mismo tipo que uno de los argumentos de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="06faa5c6fcba06f9dd8ca92063029df6a41e4c58" translate="yes" xml:space="preserve">
          <source>There are often instances where we want NumPy to initialize the values of an array. NumPy offers functions like &lt;code&gt;ones()&lt;/code&gt; and &lt;code&gt;zeros()&lt;/code&gt;, and the &lt;code&gt;random.Generator&lt;/code&gt; class for random number generation for that. All you need to do is pass in the number of elements you want it to generate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95381d820ed4d179172c69e3a1efc8e39007df94" translate="yes" xml:space="preserve">
          <source>There are only integer array indices so that no subarray exists.</source>
          <target state="translated">Sólo hay índices de matrices enteras,por lo que no existe ninguna submatriz.</target>
        </trans-unit>
        <trans-unit id="115526010a225042aa40f787fc2f47f797982daf" translate="yes" xml:space="preserve">
          <source>There are other points in the use of ndarrays where we need such views, such as copying arrays (&lt;code&gt;c_arr.copy()&lt;/code&gt;), creating ufunc output arrays (see also &lt;a href=&quot;#array-wrap&quot;&gt;__array_wrap__ for ufuncs and other functions&lt;/a&gt;), and reducing methods (like &lt;code&gt;c_arr.mean()&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e1214b4766467e55cb3f8f030a4456afbf45a2" translate="yes" xml:space="preserve">
          <source>There are other wrapping situations in which &lt;code&gt;numpy.i&lt;/code&gt; may be helpful when you encounter them.</source>
          <target state="translated">Hay otras situaciones de envoltura en las que &lt;code&gt;numpy.i&lt;/code&gt; puede ser &amp;uacute;til cuando las encuentre.</target>
        </trans-unit>
        <trans-unit id="318856ec210de70f7b88df3c75c2a12aaa8c93b2" translate="yes" xml:space="preserve">
          <source>There are pros and cons to using both:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83bfa0078610ce5c1a2e851fa86300b3de47263" translate="yes" xml:space="preserve">
          <source>There are several disadvantages of using Cython:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c928426bd7e5582ef0057cd443cd0554ec0f93c" translate="yes" xml:space="preserve">
          <source>There are several examples of using the multi-iterator in the NumPy source code as it makes N-dimensional broadcasting-code very simple to write. Browse the source for more examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bf18c3e68f395d5dcf853e32e810c666f7a43d" translate="yes" xml:space="preserve">
          <source>There are several requirements for a shared library that can be used with ctypes that are platform specific. This guide assumes you have some familiarity with making a shared library on your system (or simply have a shared library available to you). Items to remember are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82ec3b39568bfec9a11840bdb7b6ec4c84323cc" translate="yes" xml:space="preserve">
          <source>There are several ways to construct a masked array.</source>
          <target state="translated">Hay varias maneras de construir un conjunto de máscaras.</target>
        </trans-unit>
        <trans-unit id="c4a7e4b025b48bc40d3703a29b57ae48e3043f29" translate="yes" xml:space="preserve">
          <source>There are several ways to create arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbc541dfd45825fd321c5ec3bdf633ecc4c702b" translate="yes" xml:space="preserve">
          <source>There are some informational attributes that universal functions possess. None of the attributes can be set.</source>
          <target state="translated">Hay algunos atributos informativos que las funciones universales poseen.Ninguno de los atributos puede ser establecido.</target>
        </trans-unit>
        <trans-unit id="25b081aeb44044a8abafdf90f986afb1775ac9ea" translate="yes" xml:space="preserve">
          <source>There are sometimes issues reported on Raspberry Pi setups when installing using &lt;code&gt;pip3 install&lt;/code&gt; (or &lt;code&gt;pip&lt;/code&gt; install). These will typically mention:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014e04d63bbb11cf7242b7931500c73711d0520d" translate="yes" xml:space="preserve">
          <source>There are standard variable types for each of the numeric data types and the bool data type. Some of these are already available in the C-specification. You can create variables in extension code with these types.</source>
          <target state="translated">Hay tipos de variables estándar para cada uno de los tipos de datos numéricos y el tipo de datos bool.Algunos de ellos ya están disponibles en la especificación C.Con estos tipos se pueden crear variables en código de extensión.</target>
        </trans-unit>
        <trans-unit id="d266f8d3fc00db82d70a1cf8a8ecaaaa80431033" translate="yes" xml:space="preserve">
          <source>There are three independent testing frameworks supported, for one-, two-, and three-dimensional arrays respectively. For one-dimensional arrays, there are two C++ files, a header and a source, named:</source>
          <target state="translated">Hay tres marcos de pruebas independientes que se apoyan,para conjuntos de una,dos y tres dimensiones respectivamente.Para las matrices unidimensionales,hay dos archivos C++,un encabezado y una fuente,llamados:</target>
        </trans-unit>
        <trans-unit id="a98d06ff6365cb9b94028f7c87529f8503c9281a" translate="yes" xml:space="preserve">
          <source>There are three methods of ufuncs that require calculation similar to the general-purpose ufuncs. These are reduce, accumulate, and reduceat. Each of these methods requires a setup command followed by a loop. There are four loop styles possible for the methods corresponding to no-elements, one-element, strided-loop, and buffered- loop. These are the same basic loop styles as implemented for the general purpose function call except for the no-element and one- element cases which are special-cases occurring when the input array objects have 0 and 1 elements respectively.</source>
          <target state="translated">Hay tres métodos de ufuncs que requieren un cálculo similar al de los ufuncs de uso general.Estos son reducir,acumular y reducir.Cada uno de estos métodos requiere un comando de configuración seguido de un bucle.Hay cuatro estilos de bucle posibles para los métodos que corresponden a los bucles sin elementos,de un solo elemento,de bucle con rayas y de bucle con búfer.Estos son los mismos estilos de bucle básicos que se implementan para la llamada de función de propósito general,excepto para los casos sin elementos y de un elemento,que son casos especiales que ocurren cuando los objetos de la matriz de entrada tienen 0 y 1 elementos respectivamente.</target>
        </trans-unit>
        <trans-unit id="79149af5bd80302b7d9a0d00bba8113083202d98" translate="yes" xml:space="preserve">
          <source>There are three steps to the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d692f23dd01af5033268a8ed1b02fd45c32c1c" translate="yes" xml:space="preserve">
          <source>There are three strategies implemented that can be used to produce repeatable pseudo-random numbers across multiple processes (local or distributed).</source>
          <target state="translated">Se han puesto en práctica tres estrategias que pueden utilizarse para producir números seudoaleatorios repetibles a través de múltiples procesos (locales o distribuidos).</target>
        </trans-unit>
        <trans-unit id="9dfb3a62923157363de4f21bfcb4cc89da91a3e2" translate="yes" xml:space="preserve">
          <source>There are three use-cases related to memory alignment in numpy (as of 1.14):</source>
          <target state="translated">Hay tres casos de uso relacionados con la alineación de la memoria en numpy (a partir de 1.14):</target>
        </trans-unit>
        <trans-unit id="1878e6ac9e299677e2b59b09c76f88c728c9412d" translate="yes" xml:space="preserve">
          <source>There are times when it is important to visit the elements of an array in a specific order, irrespective of the layout of the elements in memory. The &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object provides an &lt;code&gt;order&lt;/code&gt; parameter to control this aspect of iteration. The default, having the behavior described above, is order=&amp;rsquo;K&amp;rsquo; to keep the existing order. This can be overridden with order=&amp;rsquo;C&amp;rsquo; for C order and order=&amp;rsquo;F&amp;rsquo; for Fortran order.</source>
          <target state="translated">Hay ocasiones en las que es importante visitar los elementos de una matriz en un orden espec&amp;iacute;fico, independientemente del dise&amp;ntilde;o de los elementos en la memoria. El objeto &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt; proporciona un par&amp;aacute;metro de &lt;code&gt;order&lt;/code&gt; para controlar este aspecto de la iteraci&amp;oacute;n. El valor predeterminado, que tiene el comportamiento descrito anteriormente, es order = 'K' para mantener el orden existente. Esto se puede anular con order = 'C' para el pedido C y order = 'F' para el pedido Fortran.</target>
        </trans-unit>
        <trans-unit id="8bcb408782f4cab8808f9329f353388438a050d8" translate="yes" xml:space="preserve">
          <source>There are times when it is necessary to treat an array as a different data type than it is stored as. For instance, one may want to do all computations on 64-bit floats, even if the arrays being manipulated are 32-bit floats. Except when writing low-level C code, it&amp;rsquo;s generally better to let the iterator handle the copying or buffering instead of casting the data type yourself in the inner loop.</source>
          <target state="translated">Hay ocasiones en las que es necesario tratar una matriz como un tipo de datos diferente al que est&amp;aacute; almacenado. Por ejemplo, uno puede querer hacer todos los c&amp;aacute;lculos en flotantes de 64 bits, incluso si las matrices que se manipulan son flotantes de 32 bits. Excepto cuando se escribe c&amp;oacute;digo C de bajo nivel, generalmente es mejor dejar que el iterador maneje la copia o el almacenamiento en b&amp;uacute;fer en lugar de convertir el tipo de datos usted mismo en el bucle interno.</target>
        </trans-unit>
        <trans-unit id="49296589bf54025f71f98956452ad22438eb00b7" translate="yes" xml:space="preserve">
          <source>There are times when you might want to carry out an operation between an array and a single number (also called &lt;em&gt;an operation between a vector and a scalar&lt;/em&gt;) or between arrays of two different sizes. For example, your array (we&amp;rsquo;ll call it &amp;ldquo;data&amp;rdquo;) might contain information about distance in miles but you want to convert the information to kilometers. You can perform this operation with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cac18f5846d7a58eabeae3e5d687453dc981d9" translate="yes" xml:space="preserve">
          <source>There are two Timedelta units (&amp;lsquo;Y&amp;rsquo;, years and &amp;lsquo;M&amp;rsquo;, months) which are treated specially, because how much time they represent changes depending on when they are used. While a timedelta day unit is equivalent to 24 hours, there is no way to convert a month unit into days, because different months have different numbers of days.</source>
          <target state="translated">Hay dos unidades Timedelta ('Y', a&amp;ntilde;os y 'M', meses) que se tratan de manera especial, porque el tiempo que representan cambia dependiendo de cu&amp;aacute;ndo se utilicen. Si bien una unidad de d&amp;iacute;a timedelta equivale a 24 horas, no hay forma de convertir una unidad de mes en d&amp;iacute;as, porque los diferentes meses tienen diferentes n&amp;uacute;meros de d&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="47ec50226de8d5ba6a84cfb19309924a297ce7ae" translate="yes" xml:space="preserve">
          <source>There are two aspects to the machinery that ndarray uses to support views and new-from-template in subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced97d88ae2c849acfa28a2cee713cefa36672d2" translate="yes" xml:space="preserve">
          <source>There are two major new types: the ndarray ( &lt;a href=&quot;#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; ) and the ufunc ( &lt;a href=&quot;#c.PyUFunc_Type&quot;&gt;&lt;code&gt;PyUFunc_Type&lt;/code&gt;&lt;/a&gt; ). Additional types play a supportive role: the &lt;a href=&quot;#c.PyArrayIter_Type&quot;&gt;&lt;code&gt;PyArrayIter_Type&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#c.PyArrayMultiIter_Type&quot;&gt;&lt;code&gt;PyArrayMultiIter_Type&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;#c.PyArrayDescr_Type&quot;&gt;&lt;code&gt;PyArrayDescr_Type&lt;/code&gt;&lt;/a&gt; . The &lt;a href=&quot;#c.PyArrayIter_Type&quot;&gt;&lt;code&gt;PyArrayIter_Type&lt;/code&gt;&lt;/a&gt; is the type for a flat iterator for an ndarray (the object that is returned when getting the flat attribute). The &lt;a href=&quot;#c.PyArrayMultiIter_Type&quot;&gt;&lt;code&gt;PyArrayMultiIter_Type&lt;/code&gt;&lt;/a&gt; is the type of the object returned when calling &lt;code&gt;broadcast&lt;/code&gt; (). It handles iteration and broadcasting over a collection of nested sequences. Also, the &lt;a href=&quot;#c.PyArrayDescr_Type&quot;&gt;&lt;code&gt;PyArrayDescr_Type&lt;/code&gt;&lt;/a&gt; is the data-type-descriptor type whose instances describe the data. Finally, there are 21 new scalar-array types which are new Python scalars corresponding to each of the fundamental data types available for arrays. An additional 10 other types are place holders that allow the array scalars to fit into a hierarchy of actual Python types.</source>
          <target state="translated">Hay dos tipos nuevos principales: ndarray ( &lt;a href=&quot;#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt; ) y ufunc ( &lt;a href=&quot;#c.PyUFunc_Type&quot;&gt; &lt;code&gt;PyUFunc_Type&lt;/code&gt; &lt;/a&gt; ). Los tipos adicionales juegan un papel de apoyo: &lt;a href=&quot;#c.PyArrayIter_Type&quot;&gt; &lt;code&gt;PyArrayIter_Type&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.PyArrayMultiIter_Type&quot;&gt; &lt;code&gt;PyArrayMultiIter_Type&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#c.PyArrayDescr_Type&quot;&gt; &lt;code&gt;PyArrayDescr_Type&lt;/code&gt; &lt;/a&gt; . El &lt;a href=&quot;#c.PyArrayIter_Type&quot;&gt; &lt;code&gt;PyArrayIter_Type&lt;/code&gt; &lt;/a&gt; es el tipo para un iterador de piso en un ndarray (el objeto que se devuelve al conseguir el atributo plana). El &lt;a href=&quot;#c.PyArrayMultiIter_Type&quot;&gt; &lt;code&gt;PyArrayMultiIter_Type&lt;/code&gt; &lt;/a&gt; es el tipo de objeto devuelto al llamar &lt;code&gt;broadcast&lt;/code&gt; (). Maneja la iteraci&amp;oacute;n y la transmisi&amp;oacute;n sobre una colecci&amp;oacute;n de secuencias anidadas. Adem&amp;aacute;s, &lt;a href=&quot;#c.PyArrayDescr_Type&quot;&gt; &lt;code&gt;PyArrayDescr_Type&lt;/code&gt; &lt;/a&gt;es el tipo de descriptor de tipo de datos cuyas instancias describen los datos. Finalmente, hay 21 nuevos tipos de matrices escalares que son nuevos escalares de Python correspondientes a cada uno de los tipos de datos fundamentales disponibles para matrices. Otros 10 tipos adicionales son marcadores de posici&amp;oacute;n que permiten que los escalares de matriz encajen en una jerarqu&amp;iacute;a de tipos reales de Python.</target>
        </trans-unit>
        <trans-unit id="c37fba99ab33d4532607fe9319066dc8a4405878" translate="yes" xml:space="preserve">
          <source>There are two mechanisms which allow this to be done, temporary copies and buffering mode. With temporary copies, a copy of the entire array is made with the new data type, then iteration is done in the copy. Write access is permitted through a mode which updates the original array after all the iteration is complete. The major drawback of temporary copies is that the temporary copy may consume a large amount of memory, particularly if the iteration data type has a larger itemsize than the original one.</source>
          <target state="translated">Hay dos mecanismos que permiten hacer esto,las copias temporales y el modo de buffer.Con las copias temporales,se hace una copia de todo el conjunto con el nuevo tipo de datos,luego se hace una iteración en la copia.El acceso a la escritura se permite a través de un modo que actualiza la matriz original después de que toda la iteración se haya completado.El principal inconveniente de las copias temporales es que la copia temporal puede consumir una gran cantidad de memoria,sobre todo si el tipo de datos de la iteración tiene un tamaño de elementos mayor que el original.</target>
        </trans-unit>
        <trans-unit id="bbd0e93d84494368770e6b417effb4b358f4babd" translate="yes" xml:space="preserve">
          <source>There are two modes of creating an array using &lt;code&gt;__new__&lt;/code&gt;:</source>
          <target state="translated">Hay dos modos de crear una matriz usando &lt;code&gt;__new__&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e95a2d13ee09be4667ba99a7e23d783a62c61eb8" translate="yes" xml:space="preserve">
          <source>There are two popular ways to flatten an array: &lt;code&gt;.flatten()&lt;/code&gt; and &lt;code&gt;.ravel()&lt;/code&gt;. The primary difference between the two is that the new array created using &lt;code&gt;ravel()&lt;/code&gt; is actually a reference to the parent array (i.e., a &amp;ldquo;view&amp;rdquo;). This means that any changes to the new array will affect the parent array as well. Since &lt;code&gt;ravel&lt;/code&gt; does not create a copy, it&amp;rsquo;s memory efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97769fec67515ece6f805db56bd64883845242d0" translate="yes" xml:space="preserve">
          <source>There are two types of proper-contiguous NumPy arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0373fb682b5018f30be6571b2e08840bdbbdebff" translate="yes" xml:space="preserve">
          <source>There are two ways to capture floating-point error messages. The first is to set the error-handler to &amp;lsquo;call&amp;rsquo;, using &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt;&lt;code&gt;seterr&lt;/code&gt;&lt;/a&gt;. Then, set the function to call using this function.</source>
          <target state="translated">Hay dos formas de capturar mensajes de error de punto flotante. La primera es configurar el manejador de errores en 'llamar', usando &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt; &lt;code&gt;seterr&lt;/code&gt; &lt;/a&gt; . Luego, configure la funci&amp;oacute;n para llamar usando esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7822fba8682a2c5b4fec5101c082332701ec52bb" translate="yes" xml:space="preserve">
          <source>There are two ways to effectively define a new array scalar type (apart from composing structured types &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;dtypes&lt;/a&gt; from the built-in scalar types): One way is to simply subclass the &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; and overwrite the methods of interest. This will work to a degree, but internally certain behaviors are fixed by the data type of the array. To fully customize the data type of an array you need to define a new data-type, and register it with NumPy. Such new types can only be defined in C, using the &lt;a href=&quot;c-api#c-api&quot;&gt;NumPy C-API&lt;/a&gt;.</source>
          <target state="translated">Hay dos formas de definir eficazmente un nuevo tipo escalar de matriz (adem&amp;aacute;s de componer tipos estructurados &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;dtypes a&lt;/a&gt; partir de los tipos escalares integrados): una forma es simplemente subclasificar el &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; y sobrescribir los m&amp;eacute;todos de inter&amp;eacute;s. Esto funcionar&amp;aacute; hasta cierto punto, pero internamente ciertos comportamientos est&amp;aacute;n fijados por el tipo de datos de la matriz. Para personalizar completamente el tipo de datos de una matriz, debe definir un nuevo tipo de datos y registrarlo con NumPy. Estos nuevos tipos solo se pueden definir en C, utilizando &lt;a href=&quot;c-api#c-api&quot;&gt;NumPy C-API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c78474a57486cf4a85d9232cd27ee1937bd696d" translate="yes" xml:space="preserve">
          <source>There are two ways to effectively define a new array scalar type (apart from composing structured types &lt;a href=&quot;arrays.dtypes#arrays-dtypes&quot;&gt;dtypes&lt;/a&gt; from the built-in scalar types): One way is to simply subclass the &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; and overwrite the methods of interest. This will work to a degree, but internally certain behaviors are fixed by the data type of the array. To fully customize the data type of an array you need to define a new data-type, and register it with NumPy. Such new types can only be defined in C, using the &lt;a href=&quot;c-api/index#c-api&quot;&gt;NumPy C-API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedb91ab21e9adb6003c75e29f535939f4382660" translate="yes" xml:space="preserve">
          <source>There are two ways to update the source release on PyPI, the first one is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07256ff1dd075c50fc2daea66eb388157aacb269" translate="yes" xml:space="preserve">
          <source>There are two ways to use the interface: A Python side and a C-side. Both are separate attributes.</source>
          <target state="translated">Hay dos maneras de usar la interfaz:Un lado Python y un lado C.Ambos son atributos separados.</target>
        </trans-unit>
        <trans-unit id="b03a9c50082003b4ef01f90e63c960011178dda8" translate="yes" xml:space="preserve">
          <source>There has been no consistent prefix for NumPy public functions, but they all begin with a prefix of some sort, followed by an underscore, and are in camel case: &lt;code&gt;PyArray_DescrAlignConverter&lt;/code&gt;, &lt;code&gt;NpyIter_GetIterNext&lt;/code&gt;. In the future the names should be of the form &lt;code&gt;Npy*_PublicFunction&lt;/code&gt;, where the star is something appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde43af7d13c44f94f0d79c46e9390e7c8216335" translate="yes" xml:space="preserve">
          <source>There is a Python type for each of the different built-in data types that can be present in the array Most of these are simple wrappers around the corresponding data type in C. The C-names for these types are &lt;code&gt;Py{TYPE}ArrType_Type&lt;/code&gt; where &lt;code&gt;{TYPE}&lt;/code&gt; can be</source>
          <target state="translated">Hay un tipo de Python para cada uno de los diferentes tipos de datos incorporados que pueden estar presentes en la matriz. La mayor&amp;iacute;a de estos son envoltorios simples alrededor del tipo de datos correspondiente en C. Los nombres C para estos tipos son &lt;code&gt;Py{TYPE}ArrType_Type&lt;/code&gt; donde &lt;code&gt;{TYPE}&lt;/code&gt; puede ser</target>
        </trans-unit>
        <trans-unit id="07c5411b83a37216eb927b90741cd5630b9b2108" translate="yes" xml:space="preserve">
          <source>There is a clear distinction between element-wise operations and linear algebra operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d05d2bbb1d4347eb1dace6314a1a3b989e2daa" translate="yes" xml:space="preserve">
          <source>There is a fragment for converting a Python integer to a C &lt;code&gt;long&lt;/code&gt;. There is a different fragment that converts a Python integer to a C &lt;code&gt;int&lt;/code&gt;, that calls the routine defined in the &lt;code&gt;long&lt;/code&gt; fragment. We can make the changes we want here by changing the definition for the &lt;code&gt;long&lt;/code&gt; fragment. &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; determines the active definition for a fragment using a &amp;ldquo;first come, first served&amp;rdquo; system. That is, we need to define the fragment for &lt;code&gt;long&lt;/code&gt; conversions prior to &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; doing it internally. &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; allows us to do this by putting our fragment definitions in the file &lt;code&gt;pyfragments.swg&lt;/code&gt;. If we were to put the new fragment definitions in &lt;code&gt;numpy.i&lt;/code&gt;, they would be ignored.</source>
          <target state="translated">Hay un fragmento para convertir un entero de Python en un C &lt;code&gt;long&lt;/code&gt; . Hay un fragmento diferente que convierte un entero de Python en un C &lt;code&gt;int&lt;/code&gt; , que llama a la rutina definida en el fragmento &lt;code&gt;long&lt;/code&gt; . Podemos hacer los cambios que queramos aqu&amp;iacute; cambiando la definici&amp;oacute;n del fragmento &lt;code&gt;long&lt;/code&gt; . &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; determina la definici&amp;oacute;n activa de un fragmento utilizando un sistema de &quot;orden de llegada&quot;. Es decir, necesitamos definir el fragmento para conversiones &lt;code&gt;long&lt;/code&gt; antes de que &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG lo&lt;/a&gt; haga internamente. &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; nos permite hacer esto colocando nuestras definiciones de fragmentos en el archivo &lt;code&gt;pyfragments.swg&lt;/code&gt; . Si tuvi&amp;eacute;ramos que poner las nuevas definiciones de fragmentos en &lt;code&gt;numpy.i&lt;/code&gt; , ser&amp;iacute;an ignorados.</target>
        </trans-unit>
        <trans-unit id="d31593a379a881f2302877c7bf40c8ae65305ffb" translate="yes" xml:space="preserve">
          <source>There is a general need for looping over not only functions on scalars but also over functions on vectors (or arrays). This concept is realized in NumPy by generalizing the universal functions (ufuncs). In regular ufuncs, the elementary function is limited to element-by-element operations, whereas the generalized version (gufuncs) supports &amp;ldquo;sub-array&amp;rdquo; by &amp;ldquo;sub-array&amp;rdquo; operations. The Perl vector library PDL provides a similar functionality and its terms are re-used in the following.</source>
          <target state="translated">Existe una necesidad general de realizar un bucle no solo sobre funciones en escalares sino tambi&amp;eacute;n sobre funciones en vectores (o matrices). Este concepto se realiza en NumPy generalizando las funciones universales (ufuncs). En ufuncs regulares, la funci&amp;oacute;n elemental est&amp;aacute; limitada a operaciones elemento por elemento, mientras que la versi&amp;oacute;n generalizada (gufuncs) admite operaciones de &quot;submatriz&quot; por &quot;submatriz&quot;. La biblioteca de vectores de Perl PDL proporciona una funcionalidad similar y sus t&amp;eacute;rminos se reutilizan a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="16ce9fcfde9d0ef11eba9dffd6932b4fb7fe6e10" translate="yes" xml:space="preserve">
          <source>There is a list of enumerated types defined providing the basic 24 data types plus some useful generic names. Whenever the code requires a type number, one of these enumerated types is requested. The types are all called &lt;code&gt;NPY_{NAME}&lt;/code&gt;:</source>
          <target state="translated">Hay una lista de tipos enumerados definidos que proporciona los 24 tipos de datos b&amp;aacute;sicos m&amp;aacute;s algunos nombres gen&amp;eacute;ricos &amp;uacute;tiles. Siempre que el c&amp;oacute;digo requiera un n&amp;uacute;mero de tipo, se solicita uno de estos tipos enumerados. Todos los tipos se llaman &lt;code&gt;NPY_{NAME}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fd095b1a939a3168566a681ecc0b30a59e81e682" translate="yes" xml:space="preserve">
          <source>There is a small difference between &lt;a href=&quot;#numpy.ma.masked_array.mini&quot;&gt;&lt;code&gt;mini&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.ma.min#numpy.ma.min&quot;&gt;&lt;code&gt;min&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426d6a71d6ada6c4fe36711b0bf2acc4eb8a1d92" translate="yes" xml:space="preserve">
          <source>There is a subarray but it has exactly one element. This case can be handled as if there is no subarray, but needs some care during setup.</source>
          <target state="translated">Hay un subarreglo pero tiene exactamente un elemento.Este caso puede ser manejado como si no hubiera un subarreglado,pero necesita algo de cuidado durante la configuración.</target>
        </trans-unit>
        <trans-unit id="a1e2cb9284c447866f4fcfbd5e36a19034ca7940" translate="yes" xml:space="preserve">
          <source>There is also a &amp;ldquo;flat&amp;rdquo; in-place array for situations in which you would like to modify or process each element, regardless of the number of dimensions. One example is a &amp;ldquo;quantization&amp;rdquo; function that quantizes each element of an array in-place, be it 1D, 2D or whatever. This form checks for continuity but allows either C or Fortran ordering.</source>
          <target state="translated">Tambi&amp;eacute;n hay una matriz &quot;plana&quot; en el lugar para situaciones en las que le gustar&amp;iacute;a modificar o procesar cada elemento, independientemente del n&amp;uacute;mero de dimensiones. Un ejemplo es una funci&amp;oacute;n de &quot;cuantificaci&amp;oacute;n&quot; que cuantifica cada elemento de una matriz en el lugar, ya sea 1D, 2D o lo que sea. Este formulario comprueba la continuidad pero permite realizar pedidos en C o Fortran.</target>
        </trans-unit>
        <trans-unit id="42d7ce17e767848814f251a3d945724bdcad4394" translate="yes" xml:space="preserve">
          <source>There is an &lt;a href=&quot;../arrays.nditer#arrays-nditer&quot;&gt;introductory guide to array iteration&lt;/a&gt; which may be of interest for those using this C API. In many instances, testing out ideas by creating the iterator in Python is a good idea before writing the C iteration code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b73fe8185f285d3a10cd617f08eb8cadb40473" translate="yes" xml:space="preserve">
          <source>There is an &lt;a href=&quot;arrays.nditer#arrays-nditer&quot;&gt;introductory guide to array iteration&lt;/a&gt; which may be of interest for those using this C API. In many instances, testing out ideas by creating the iterator in Python is a good idea before writing the C iteration code.</source>
          <target state="translated">Hay una &lt;a href=&quot;arrays.nditer#arrays-nditer&quot;&gt;gu&amp;iacute;a introductoria a la iteraci&amp;oacute;n de matrices&lt;/a&gt; que puede ser de inter&amp;eacute;s para quienes usan esta API C. En muchos casos, probar ideas creando el iterador en Python es una buena idea antes de escribir el c&amp;oacute;digo de iteraci&amp;oacute;n C.</target>
        </trans-unit>
        <trans-unit id="606a479ef2292dc711e91c789c67dff3002d3e8e" translate="yes" xml:space="preserve">
          <source>There is an ongoing effort to improve the API. It is important in this effort to ensure that code that compiles for NumPy 1.X continues to compile for NumPy 1.X. At the same time, certain API&amp;rsquo;s will be marked as deprecated so that future-looking code can avoid these API&amp;rsquo;s and follow better practices.</source>
          <target state="translated">Hay un esfuerzo continuo para mejorar la API. Es importante en este esfuerzo asegurarse de que el c&amp;oacute;digo que se compila para NumPy 1.X contin&amp;uacute;e compil&amp;aacute;ndose para NumPy 1.X. Al mismo tiempo, ciertas API se marcar&amp;aacute;n como obsoletas para que el c&amp;oacute;digo con visi&amp;oacute;n de futuro pueda evitar estas API y seguir mejores pr&amp;aacute;cticas.</target>
        </trans-unit>
        <trans-unit id="2d9dbfa834497f6482a194ae6bc42d9b31e1c027" translate="yes" xml:space="preserve">
          <source>There is exactly one function that must be defined in your C-code in order for Python to use it as an extension module. The function must be called init{name} where {name} is the name of the module from Python. This function must be declared so that it is visible to code outside of the routine. Besides adding the methods and constants you desire, this subroutine must also contain calls like &lt;code&gt;import_array()&lt;/code&gt; and/or &lt;code&gt;import_ufunc()&lt;/code&gt; depending on which C-API is needed. Forgetting to place these commands will show itself as an ugly segmentation fault (crash) as soon as any C-API subroutine is actually called. It is actually possible to have multiple init{name} functions in a single file in which case multiple modules will be defined by that file. However, there are some tricks to get that to work correctly and it is not covered here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c951415e0655e2f1d542beb400e29df172840589" translate="yes" xml:space="preserve">
          <source>There is more than one definition of sign in common use for complex numbers. The definition used here is equivalent to</source>
          <target state="translated">Hay más de una definición de signo de uso común para los números complejos.La definición utilizada aquí es equivalente a</target>
        </trans-unit>
        <trans-unit id="81f07ae1e9b8a43b5991326dbec6dd373febf78b" translate="yes" xml:space="preserve">
          <source>There is no need to use &lt;code&gt;intent(c)&lt;/code&gt; for one-dimensional arrays, no matter if the wrapped function is either a Fortran or a C function. This is because the concepts of Fortran- and C contiguity overlap in one-dimensional cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c5400df70c93e783da6a5dac7fee87f2f1e727" translate="yes" xml:space="preserve">
          <source>There is no standard way in Python distutils to create a standard shared library (an extension module is a &amp;ldquo;special&amp;rdquo; shared library Python understands) in a cross-platform manner. Thus, a big disadvantage of ctypes at the time of writing this book is that it is difficult to distribute in a cross-platform manner a Python extension that uses ctypes and includes your own code which should be compiled as a shared library on the users system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b0268bf735345a9f64350e8e77b1a81c8688d9" translate="yes" xml:space="preserve">
          <source>There is one indexing array and it, as well as the assignment array, can be iterated trivially. For example they may be contiguous. Also the indexing array must be of &lt;a href=&quot;arrays.scalars#numpy.intp&quot;&gt;&lt;code&gt;intp&lt;/code&gt;&lt;/a&gt; type and the value array in assignments should be of the correct type. This is purely a fast path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23297908101e96f4ab7052c44ca172ce18526477" translate="yes" xml:space="preserve">
          <source>There is one indexing array and it, as well as the assignment array, can be iterated trivially. For example they may be contiguous. Also the indexing array must be of &lt;code&gt;intp&lt;/code&gt; type and the value array in assignments should be of the correct type. This is purely a fast path.</source>
          <target state="translated">Hay una matriz de indexaci&amp;oacute;n y, al igual que la matriz de asignaci&amp;oacute;n, se puede iterar trivialmente. Por ejemplo, pueden ser contiguos. Adem&amp;aacute;s, la matriz de indexaci&amp;oacute;n debe ser de tipo &lt;code&gt;intp&lt;/code&gt; y la matriz de valores en las asignaciones debe ser del tipo correcto. Este es un camino puramente r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="d8fac7ab155f3d88da854276783ffad458c19c82" translate="yes" xml:space="preserve">
          <source>There is one notable exception to this behavior: if the optional argument &lt;code&gt;names=True&lt;/code&gt;, the first commented line will be examined for names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9a641fbd94988d395fb4542afcc38f2bd13355" translate="yes" xml:space="preserve">
          <source>There must be at least 1 argument, and define the last argument as &lt;em&gt;item&lt;/em&gt;. Then, &lt;code&gt;a.itemset(*args)&lt;/code&gt; is equivalent to but faster than &lt;code&gt;a[args] = item&lt;/code&gt;. The item should be a scalar value and &lt;code&gt;args&lt;/code&gt; must select a single item in the array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Debe haber al menos 1 argumento y definir el &amp;uacute;ltimo argumento como &lt;em&gt;elemento&lt;/em&gt; . Entonces, &lt;code&gt;a.itemset(*args)&lt;/code&gt; es equivalente pero m&amp;aacute;s r&amp;aacute;pido que &lt;code&gt;a[args] = item&lt;/code&gt; . El elemento debe ser un valor escalar y los &lt;code&gt;args&lt;/code&gt; deben seleccionar un solo elemento en la matriz &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9bdbeac0f4a4a2c09a4382d5b665ee480b88e7d" translate="yes" xml:space="preserve">
          <source>There was no &lt;code&gt;__array_interface__&lt;/code&gt; attribute instead all of the keys (except for version) in the &lt;code&gt;__array_interface__&lt;/code&gt; dictionary were their own attribute: Thus to obtain the Python-side information you had to access separately the attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc33808ec0ca031cf8b9c1fdd7c9278c78f0db38" translate="yes" xml:space="preserve">
          <source>There was no __array_interface__ attribute instead all of the keys (except for version) in the __array_interface__ dictionary were their own attribute: Thus to obtain the Python-side information you had to access separately the attributes:</source>
          <target state="translated">No había ningún atributo __array_interface__,sino que todas las claves (excepto la versión)del diccionario __array_interface__eran su propio atributo:Así,para obtener la información del lado Python se tenía que acceder por separado a los atributos:</target>
        </trans-unit>
        <trans-unit id="1d3ca63c0d0c4fb92d45d132b89354f4e2a0e2fc" translate="yes" xml:space="preserve">
          <source>There will not be anything &lt;em&gt;wrong&lt;/em&gt; with the results, per se; even a seed of 0 is perfectly fine thanks to the processing that &lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; does. If you just need &lt;em&gt;some&lt;/em&gt; fixed value for unit tests or debugging, feel free to use whatever seed you like. But if you want to make inferences from the results or publish them, drawing from a larger set of seeds is good practice.</source>
          <target state="translated">No habr&amp;aacute; nada &lt;em&gt;malo&lt;/em&gt; con los resultados, per se; incluso una semilla de 0 est&amp;aacute; perfectamente bien gracias al procesamiento que realiza &lt;a href=&quot;generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt; . Si solo necesita &lt;em&gt;un&lt;/em&gt; valor fijo para las pruebas unitarias o la depuraci&amp;oacute;n, no dude en usar la semilla que desee. Pero si desea hacer inferencias a partir de los resultados o publicarlos, es una buena pr&amp;aacute;ctica extraer de un conjunto m&amp;aacute;s grande de semillas.</target>
        </trans-unit>
        <trans-unit id="1a33a5d0a80b8b553aad5ef6b8b9d3cf3a744293" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s an embarrassing typo in a commit you made? Or perhaps the you made several false starts you would like the posterity not to see.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7586899d52e7cb2e4afcaa41a1d9614a067b4661" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s an embarrassing typo in a commit you made? Or perhaps you made several false starts you would like the posterity not to see.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5a5e9111615649ff06d77b214a9aa4744c2e9e" translate="yes" xml:space="preserve">
          <source>These Boolean-valued flags affect how numpy interprets the memory area used by &lt;code&gt;a&lt;/code&gt; (see Notes below). The ALIGNED flag can only be set to True if the data is actually aligned according to the type. The WRITEBACKIFCOPY and (deprecated) UPDATEIFCOPY flags can never be set to True. The flag WRITEABLE can only be set to True if the array owns its own memory, or the ultimate owner of the memory exposes a writeable buffer interface, or is a string. (The exception for string is made so that unpickling can be done without copying memory.)</source>
          <target state="translated">Estos indicadores con valores booleanos afectan la forma en que numpy interpreta el &amp;aacute;rea de memoria utilizada por &lt;code&gt;a&lt;/code&gt; (consulte las Notas a continuaci&amp;oacute;n). La bandera ALIGNED solo se puede establecer en Verdadero si los datos est&amp;aacute;n realmente alineados seg&amp;uacute;n el tipo. Los indicadores WRITEBACKIFCOPY y UPDATEIFCOPY (en desuso) nunca se pueden establecer en True. El indicador WRITEABLE solo se puede establecer en True si la matriz posee su propia memoria, o si el propietario final de la memoria expone una interfaz de b&amp;uacute;fer escribible, o es una cadena. (La excepci&amp;oacute;n para la cadena se hace para que se pueda despegar sin copiar la memoria).</target>
        </trans-unit>
        <trans-unit id="a6788920c31464c6803c23f30203598688f71c50" translate="yes" xml:space="preserve">
          <source>These additional dependencies for building the documentation are listed in &lt;code&gt;doc_requirements.txt&lt;/code&gt; and can be conveniently installed with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faf38a4c03dd7b8b5f6a940a17e52f4253526ca" translate="yes" xml:space="preserve">
          <source>These all achieve the same result:</source>
          <target state="translated">Todos ellos logran el mismo resultado:</target>
        </trans-unit>
        <trans-unit id="ca33633bc8f8738d475e05fabdb7eda73e305c81" translate="yes" xml:space="preserve">
          <source>These are defined for &lt;code&gt;{bits}&lt;/code&gt; = 8, 16, 32, 64, 128, and 256 and provide the maximum (minimum) value of the corresponding (unsigned) integer type. Note: the actual integer type may not be available on all platforms (i.e. 128-bit and 256-bit integers are rare).</source>
          <target state="translated">Estos se definen para &lt;code&gt;{bits}&lt;/code&gt; = 8, 16, 32, 64, 128 y 256 y proporcionan el valor m&amp;aacute;ximo (m&amp;iacute;nimo) del tipo entero (sin signo) correspondiente. Nota: es posible que el tipo de entero real no est&amp;eacute; disponible en todas las plataformas (es decir, los enteros de 128 y 256 bits son raros).</target>
        </trans-unit>
        <trans-unit id="e68165dfdce046a2deae960fcc7bcd8c7c8919ea" translate="yes" xml:space="preserve">
          <source>These are enhanced arrays of either &lt;a href=&quot;arrays.scalars#numpy.str_&quot;&gt;&lt;code&gt;str_&lt;/code&gt;&lt;/a&gt; type or &lt;a href=&quot;arrays.scalars#numpy.bytes_&quot;&gt;&lt;code&gt;bytes_&lt;/code&gt;&lt;/a&gt; type. These arrays inherit from the &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, but specially-define the operations &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, and &lt;code&gt;%&lt;/code&gt; on a (broadcasting) element-by-element basis. These operations are not available on the standard &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; of character type. In addition, the &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt; has all of the standard &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;) methods, executing them on an element-by-element basis. Perhaps the easiest way to create a chararray is to use &lt;a href=&quot;generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt;&lt;code&gt;self.view(chararray)&lt;/code&gt;&lt;/a&gt; where &lt;em&gt;self&lt;/em&gt; is an ndarray of str or unicode data-type. However, a chararray can also be created using the &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;numpy.chararray&lt;/code&gt;&lt;/a&gt; constructor, or via the &lt;a href=&quot;generated/numpy.core.defchararray.array#numpy.core.defchararray.array&quot;&gt;&lt;code&gt;numpy.char.array&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddb00a13475a7300c7d1510545ce91de444184f" translate="yes" xml:space="preserve">
          <source>These are enhanced arrays of either &lt;code&gt;string_&lt;/code&gt; type or &lt;code&gt;unicode_&lt;/code&gt; type. These arrays inherit from the &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;, but specially-define the operations &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, and &lt;code&gt;%&lt;/code&gt; on a (broadcasting) element-by-element basis. These operations are not available on the standard &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; of character type. In addition, the &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt; has all of the standard &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; (and &lt;code&gt;unicode&lt;/code&gt;) methods, executing them on an element-by-element basis. Perhaps the easiest way to create a chararray is to use &lt;a href=&quot;generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt;&lt;code&gt;self.view(chararray)&lt;/code&gt;&lt;/a&gt; where &lt;em&gt;self&lt;/em&gt; is an ndarray of str or unicode data-type. However, a chararray can also be created using the &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt;&lt;code&gt;numpy.chararray&lt;/code&gt;&lt;/a&gt; constructor, or via the &lt;a href=&quot;generated/numpy.core.defchararray.array#numpy.core.defchararray.array&quot;&gt;&lt;code&gt;numpy.char.array&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Estos son matrices de ya sea mejorado &lt;code&gt;string_&lt;/code&gt; tipo o &lt;code&gt;unicode_&lt;/code&gt; tipo. Estas matrices heredan del &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; , pero definen especialmente las operaciones &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; y &lt;code&gt;%&lt;/code&gt; en una base (de difusi&amp;oacute;n) elemento por elemento. Estas operaciones no est&amp;aacute;n disponibles en el est&amp;aacute;ndar &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; de tipo de car&amp;aacute;cter. Adem&amp;aacute;s, el &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt; tiene todos los m&amp;eacute;todos de &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt; est&amp;aacute;ndar (y &lt;code&gt;unicode&lt;/code&gt; ), ejecut&amp;aacute;ndolos elemento por elemento. Quiz&amp;aacute;s la forma m&amp;aacute;s f&amp;aacute;cil de crear un chararray es usar &lt;a href=&quot;generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt; &lt;code&gt;self.view(chararray)&lt;/code&gt; &lt;/a&gt; donde &lt;em&gt;self&lt;/em&gt;es un ndarray de tipo de datos str o unicode. Sin embargo, tambi&amp;eacute;n se puede crear un chararray utilizando el constructor &lt;a href=&quot;generated/numpy.chararray#numpy.chararray&quot;&gt; &lt;code&gt;numpy.chararray&lt;/code&gt; &lt;/a&gt; , o mediante la funci&amp;oacute;n &lt;a href=&quot;generated/numpy.core.defchararray.array#numpy.core.defchararray.array&quot;&gt; &lt;code&gt;numpy.char.array&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5c5d09f4ce60946e76740852fd56ca7c8c49e5bd" translate="yes" xml:space="preserve">
          <source>These are roughly ordered from least-to-most precision.</source>
          <target state="translated">Estos están ordenados de forma aproximada de menor a mayor precisión.</target>
        </trans-unit>
        <trans-unit id="2ce5765c6141294e2d5121321badaf2a8b57c10d" translate="yes" xml:space="preserve">
          <source>These are some detailed notes, which are not of importance for day to day indexing (in no particular order):</source>
          <target state="translated">Estas son algunas notas detalladas,que no tienen importancia para la indización diaria (sin ningún orden en particular):</target>
        </trans-unit>
        <trans-unit id="3f20305498e715f2e7a95c2c0aa48306a2b1d79a" translate="yes" xml:space="preserve">
          <source>These are the arrays for the operation.</source>
          <target state="translated">Estos son los arreglos para la operación.</target>
        </trans-unit>
        <trans-unit id="7a1ac004102d237171aefc6abd621531cd490cc4" translate="yes" xml:space="preserve">
          <source>These are the constants and functions for accessing the ufunc C-API from extension modules in precisely the same way as the array C-API can be accessed. The &lt;code&gt;import_ufunc&lt;/code&gt; () function must always be called (in the initialization subroutine of the extension module). If your extension module is in one file then that is all that is required. The other two constants are useful if your extension module makes use of multiple files. In that case, define &lt;a href=&quot;#c.PY_UFUNC_UNIQUE_SYMBOL&quot;&gt;&lt;code&gt;PY_UFUNC_UNIQUE_SYMBOL&lt;/code&gt;&lt;/a&gt; to something unique to your code and then in source files that do not contain the module initialization function but still need access to the UFUNC API, define &lt;a href=&quot;#c.PY_UFUNC_UNIQUE_SYMBOL&quot;&gt;&lt;code&gt;PY_UFUNC_UNIQUE_SYMBOL&lt;/code&gt;&lt;/a&gt; to the same name used previously and also define &lt;a href=&quot;#c.NO_IMPORT_UFUNC&quot;&gt;&lt;code&gt;NO_IMPORT_UFUNC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Estas son las constantes y funciones para acceder a ufunc C-API desde m&amp;oacute;dulos de extensi&amp;oacute;n exactamente de la misma manera que se puede acceder a la matriz C-API. La funci&amp;oacute;n &lt;code&gt;import_ufunc&lt;/code&gt; () siempre se debe llamar (en la subrutina de inicializaci&amp;oacute;n del m&amp;oacute;dulo de extensi&amp;oacute;n). Si su m&amp;oacute;dulo de extensi&amp;oacute;n est&amp;aacute; en un archivo, eso es todo lo que necesita. Las otras dos constantes son &amp;uacute;tiles si su m&amp;oacute;dulo de extensi&amp;oacute;n utiliza varios archivos. En ese caso, defina &lt;a href=&quot;#c.PY_UFUNC_UNIQUE_SYMBOL&quot;&gt; &lt;code&gt;PY_UFUNC_UNIQUE_SYMBOL&lt;/code&gt; &lt;/a&gt; como algo &amp;uacute;nico para su c&amp;oacute;digo y luego en los archivos fuente que no contienen la funci&amp;oacute;n de inicializaci&amp;oacute;n del m&amp;oacute;dulo pero a&amp;uacute;n necesitan acceso a la API de UFUNC, defina &lt;a href=&quot;#c.PY_UFUNC_UNIQUE_SYMBOL&quot;&gt; &lt;code&gt;PY_UFUNC_UNIQUE_SYMBOL&lt;/code&gt; &lt;/a&gt; con el mismo nombre usado anteriormente y tambi&amp;eacute;n defina &lt;a href=&quot;#c.NO_IMPORT_UFUNC&quot;&gt; &lt;code&gt;NO_IMPORT_UFUNC&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0aaea1e5f2c4b6d0e0dc28a8aa40e102fa58beb" translate="yes" xml:space="preserve">
          <source>These are the indices that would allow you to access the upper triangular part of any 3x3 array:</source>
          <target state="translated">Estos son los índices que te permitirían acceder a la parte superior del triángulo de cualquier conjunto de 3x3:</target>
        </trans-unit>
        <trans-unit id="38bc2b8e25d17f4fb4231aea381549f2e431c561" translate="yes" xml:space="preserve">
          <source>These are the instructions if you just want to follow the latest &lt;em&gt;NumPy&lt;/em&gt; source, but you don&amp;rsquo;t need to do any development for now. If you do want to contribute a patch (excellent!) or do more extensive NumPy development, see &lt;a href=&quot;../development_workflow#development-workflow&quot;&gt;Development workflow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43efdc6f451764645e6025c80a5a83f304f68569" translate="yes" xml:space="preserve">
          <source>These are typically used in situations where in C/C++, you would allocate a(n) array(s) on the heap, and call the function to fill the array(s) values. In Python, the arrays are allocated for you and returned as new array objects.</source>
          <target state="translated">Se utilizan típicamente en situaciones en las que en C/C++,se asignaría una(n)matriz(s)en el montón,y se llamaría a la función para llenar los valores de la(s)matriz(s).En Python,los arreglos se asignan por ti y se devuelven como nuevos objetos de arreglos.</target>
        </trans-unit>
        <trans-unit id="f04a7bcc6ce293328ac2b1079d0f95ad7b19da67" translate="yes" xml:space="preserve">
          <source>These are written in doctest format, and should illustrate how to use the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93c5dc49de55891886f179425b788a1c6ad1b35" translate="yes" xml:space="preserve">
          <source>These arrays are views on the original arrays. They are typically not contiguous. Furthermore, more than one element of a broadcasted array may refer to a single memory location. If you need to write to the arrays, make copies first. While you can set the &lt;code&gt;writable&lt;/code&gt; flag True, writing to a single output value may end up changing more than one location in the output array.</source>
          <target state="translated">Estas matrices son vistas de las matrices originales. Por lo general, no son contiguos. Adem&amp;aacute;s, m&amp;aacute;s de un elemento de una matriz difundida puede referirse a una &amp;uacute;nica ubicaci&amp;oacute;n de memoria. Si necesita escribir en las matrices, primero haga copias. Si bien puede establecer el indicador de &lt;code&gt;writable&lt;/code&gt; Verdadero, escribir en un solo valor de salida puede terminar cambiando m&amp;aacute;s de una ubicaci&amp;oacute;n en la matriz de salida.</target>
        </trans-unit>
        <trans-unit id="95e5069d3636251c2ff01dcc947b04bbf8ba1923" translate="yes" xml:space="preserve">
          <source>These behaviors can be set for all kinds of errors or specific ones:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0acac4ec85b4b4bd7ae1e0ff5a3f9603fcfbc3" translate="yes" xml:space="preserve">
          <source>These constants are used in &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; (and its macro forms) to specify desired properties of the new array.</source>
          <target state="translated">Estas constantes se utilizan en &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; (y sus formas macro) para especificar las propiedades deseadas de la nueva matriz.</target>
        </trans-unit>
        <trans-unit id="3d245bb5214c903868626d468b5ef8607e3f9a4a" translate="yes" xml:space="preserve">
          <source>These cover almost the whole array (two diagonals right of the main one):</source>
          <target state="translated">Estos cubren casi todo el conjunto (dos diagonales a la derecha de la principal):</target>
        </trans-unit>
        <trans-unit id="f7e900132de2199b00f5d74615e0a1848ce14490" translate="yes" xml:space="preserve">
          <source>These cover only a small part of the whole array (two diagonals right of the main one):</source>
          <target state="translated">Estos cubren sólo una pequeña parte del conjunto (dos diagonales a la derecha de la principal):</target>
        </trans-unit>
        <trans-unit id="1adc6f5a53325e3aa2e7cccdff9469027b73b4ce" translate="yes" xml:space="preserve">
          <source>These documents are intended as an introductory overview of NumPy and its features. For detailed reference documentation of the functions and classes contained in the package, see the &lt;a href=&quot;../reference/index#reference&quot;&gt;API reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca02dca00e56b01dd5323ec3c2c51c9bba04e9a2" translate="yes" xml:space="preserve">
          <source>These documents are intended as recipes to common tasks using NumPy. For detailed reference documentation of the functions and classes contained in the package, see the &lt;a href=&quot;../reference/index#reference&quot;&gt;API reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1b854bfa000aee75512c8df139be2e2841e0fd" translate="yes" xml:space="preserve">
          <source>These documents are intended to explain in detail the concepts and techniques used in NumPy. For the reference documentation of the functions and classes contained in the package, see the &lt;a href=&quot;../reference/index#reference&quot;&gt;API reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63868acfbf699fe963e728a55308e7d3a9b22eb9" translate="yes" xml:space="preserve">
          <source>These examples illustrate the low-level &lt;a href=&quot;#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; constructor. Refer to the &lt;code&gt;See Also&lt;/code&gt; section above for easier ways of constructing an ndarray.</source>
          <target state="translated">Estos ejemplos ilustran el constructor &lt;a href=&quot;#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; de&lt;/a&gt; bajo nivel . Consulte la secci&amp;oacute;n &lt;code&gt;See Also&lt;/code&gt; anterior para conocer formas m&amp;aacute;s sencillas de construir un ndarray.</target>
        </trans-unit>
        <trans-unit id="8a348b17d2fb1b33a90b7baa8a557d9af808a018" translate="yes" xml:space="preserve">
          <source>These function all require integer arguments and they manipulate the bit-pattern of those arguments.</source>
          <target state="translated">Todas estas funciones requieren argumentos enteros y manipulan el patrón de bits de esos argumentos.</target>
        </trans-unit>
        <trans-unit id="d7e647d09c10f9f4521e851e5661f2624622c65e" translate="yes" xml:space="preserve">
          <source>These functions along with a minimal setup file are included in the examples folder.</source>
          <target state="translated">Estas funciones junto con un archivo de configuración mínimo se incluyen en la carpeta de ejemplos.</target>
        </trans-unit>
        <trans-unit id="47c8ad5dd0ea816b255a3666826ae66a37ff3a15" translate="yes" xml:space="preserve">
          <source>These functions and macros provide easy access to elements of the ndarray from C. These work for all arrays. You may need to take care when accessing the data in the array, however, if it is not in machine byte-order, misaligned, or not writeable. In other words, be sure to respect the state of the flags unless you know what you are doing, or have previously guaranteed an array that is writeable, aligned, and in machine byte-order using &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt;. If you wish to handle all types of arrays, the copyswap function for each type is useful for handling misbehaved arrays. Some platforms (e.g. Solaris) do not like misaligned data and will crash if you de-reference a misaligned pointer. Other platforms (e.g. x86 Linux) will just work more slowly with misaligned data.</source>
          <target state="translated">Estas funciones y macros proporcionan un f&amp;aacute;cil acceso a los elementos del ndarray de C. Estos funcionan para todos los arreglos. Sin embargo, es posible que deba tener cuidado al acceder a los datos de la matriz si no est&amp;aacute;n en el orden de bytes de la m&amp;aacute;quina, si no est&amp;aacute;n alineados o no se pueden escribir. En otras palabras, aseg&amp;uacute;rese de respetar el estado de las banderas a menos que sepa lo que est&amp;aacute; haciendo, o haya garantizado previamente una matriz que se pueda escribir, alinear y en el orden de bytes de la m&amp;aacute;quina usando &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; . Si desea manejar todo tipo de matrices, la funci&amp;oacute;n copyswap para cada tipo es &amp;uacute;til para manejar matrices con mal comportamiento. A algunas plataformas (por ejemplo, Solaris) no les gustan los datos desalineados y fallar&amp;aacute;n si quita la referencia a un puntero desalineado. Otras plataformas (por ejemplo, x86 Linux) funcionar&amp;aacute;n m&amp;aacute;s lentamente con datos desalineados.</target>
        </trans-unit>
        <trans-unit id="a0b164307df93568d43c0a9ad269b4dbe393e0e6" translate="yes" xml:space="preserve">
          <source>These functions are included here because they are used at least once in the array object&amp;rsquo;s methods. The function returns -1 (without setting a Python Error) if one of the objects being assigned is not callable.</source>
          <target state="translated">Estas funciones se incluyen aqu&amp;iacute; porque se utilizan al menos una vez en los m&amp;eacute;todos del objeto de matriz. La funci&amp;oacute;n devuelve -1 (sin establecer un error de Python) si uno de los objetos asignados no es invocable.</target>
        </trans-unit>
        <trans-unit id="8de7e7b6b1e1ede303832d725868059c022d2d0a" translate="yes" xml:space="preserve">
          <source>These functions are very similar to functions without keyword arguments. The only difference is that the function signature is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474e0e7c22745c37837977d2aed3d481ae32dc24" translate="yes" xml:space="preserve">
          <source>These identities allow a Chebyshev series to be expressed as a finite, symmetric Laurent series. In this module, this sort of Laurent series is referred to as a &amp;ldquo;z-series.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ed26c6390b302396f6eeab85800f1a745f670f" translate="yes" xml:space="preserve">
          <source>These macros access the &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt; structure members and are defined in &lt;code&gt;ndarraytypes.h&lt;/code&gt;. The input argument, &lt;em&gt;arr&lt;/em&gt;, can be any &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; that is directly interpretable as a &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject *&lt;/code&gt;&lt;/a&gt; (any instance of the &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; and its sub-types).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58240a1702d16b3630637ee0890f803946e53fd" translate="yes" xml:space="preserve">
          <source>These macros access the &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt; structure members and are defined in &lt;code&gt;ndarraytypes.h&lt;/code&gt;. The input argument, &lt;em&gt;arr&lt;/em&gt;, can be any &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; that is directly interpretable as a &lt;a href=&quot;types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject *&lt;/code&gt;&lt;/a&gt; (any instance of the &lt;a href=&quot;types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; and itssub-types).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b269cced89ab6392bc06c8030f96e4b737c057" translate="yes" xml:space="preserve">
          <source>These macros all access the &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject&lt;/code&gt;&lt;/a&gt; structure members. The input argument, arr, can be any &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject *&lt;/code&gt;&lt;/a&gt; that is directly interpretable as a &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt;&lt;code&gt;PyArrayObject *&lt;/code&gt;&lt;/a&gt; (any instance of the &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt;&lt;code&gt;PyArray_Type&lt;/code&gt;&lt;/a&gt; and its sub-types).</source>
          <target state="translated">Todas estas macros acceden a los miembros de la estructura &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject&lt;/code&gt; &lt;/a&gt; . El argumento de entrada, arr, puede ser cualquier &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject *&lt;/code&gt; &lt;/a&gt; que se pueda interpretar directamente como &lt;a href=&quot;c-api.types-and-structures#c.PyArrayObject&quot;&gt; &lt;code&gt;PyArrayObject *&lt;/code&gt; &lt;/a&gt; (cualquier instancia de &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Type&quot;&gt; &lt;code&gt;PyArray_Type&lt;/code&gt; &lt;/a&gt; y sus subtipos).</target>
        </trans-unit>
        <trans-unit id="11ea008c03805b7a8b457a794a3fc2be74133b50" translate="yes" xml:space="preserve">
          <source>These macros are only meaningful if &lt;a href=&quot;#c.NPY_ALLOW_THREADS&quot;&gt;&lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt;&lt;/a&gt; evaluates True during compilation of the extension module. Otherwise, these macros are equivalent to whitespace. Python uses a single Global Interpreter Lock (GIL) for each Python process so that only a single thread may execute at a time (even on multi-cpu machines). When calling out to a compiled function that may take time to compute (and does not have side-effects for other threads like updated global variables), the GIL should be released so that other Python threads can run while the time-consuming calculations are performed. This can be accomplished using two groups of macros. Typically, if one macro in a group is used in a code block, all of them must be used in the same code block. Currently, &lt;a href=&quot;#c.NPY_ALLOW_THREADS&quot;&gt;&lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt;&lt;/a&gt; is defined to the python-defined &lt;a href=&quot;#c.WITH_THREADS&quot;&gt;&lt;code&gt;WITH_THREADS&lt;/code&gt;&lt;/a&gt; constant unless the environment variable &lt;code&gt;NPY_NOSMP&lt;/code&gt; is set in which case &lt;a href=&quot;#c.NPY_ALLOW_THREADS&quot;&gt;&lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt;&lt;/a&gt; is defined to be 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b21dcbffd2b61b3d3ee30959d3bc33fc08a9c74" translate="yes" xml:space="preserve">
          <source>These macros are only meaningful if &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; evaluates True during compilation of the extension module. Otherwise, these macros are equivalent to whitespace. Python uses a single Global Interpreter Lock (GIL) for each Python process so that only a single thread may execute at a time (even on multi-cpu machines). When calling out to a compiled function that may take time to compute (and does not have side-effects for other threads like updated global variables), the GIL should be released so that other Python threads can run while the time-consuming calculations are performed. This can be accomplished using two groups of macros. Typically, if one macro in a group is used in a code block, all of them must be used in the same code block. Currently, &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; is defined to the python-defined &lt;code&gt;WITH_THREADS&lt;/code&gt; constant unless the environment variable &lt;code&gt;NPY_NOSMP&lt;/code&gt; is set in which case &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; is defined to be 0.</source>
          <target state="translated">Estas macros solo son significativas si &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; eval&amp;uacute;a True durante la compilaci&amp;oacute;n del m&amp;oacute;dulo de extensi&amp;oacute;n. De lo contrario, estas macros equivalen a espacios en blanco. Python utiliza un &amp;uacute;nico bloqueo de int&amp;eacute;rprete global (GIL) para cada proceso de Python, de modo que solo se puede ejecutar un &amp;uacute;nico hilo a la vez (incluso en m&amp;aacute;quinas con varias CPU). Al llamar a una funci&amp;oacute;n compilada que puede llevar tiempo calcular (y no tiene efectos secundarios para otros subprocesos como las variables globales actualizadas), el GIL debe liberarse para que otros subprocesos de Python puedan ejecutarse mientras se realizan los c&amp;aacute;lculos que requieren mucho tiempo. . Esto se puede lograr utilizando dos grupos de macros. Por lo general, si se usa una macro de un grupo en un bloque de c&amp;oacute;digo, todas ellas deben usarse en el mismo bloque de c&amp;oacute;digo. Actualmente, &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; se define en la constante &lt;code&gt;WITH_THREADS&lt;/code&gt; definida por Python a menos que se establezca la variable de entorno &lt;code&gt;NPY_NOSMP&lt;/code&gt; , en cuyo caso &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; se define como 0.</target>
        </trans-unit>
        <trans-unit id="729c9787f60d8418994cdb90a7bff93ed76bf569" translate="yes" xml:space="preserve">
          <source>These macros use different memory allocators, depending on the constant &lt;a href=&quot;#c.NPY_USE_PYMEM&quot;&gt;&lt;code&gt;NPY_USE_PYMEM&lt;/code&gt;&lt;/a&gt;. The system malloc is used when &lt;a href=&quot;#c.NPY_USE_PYMEM&quot;&gt;&lt;code&gt;NPY_USE_PYMEM&lt;/code&gt;&lt;/a&gt; is 0, if &lt;a href=&quot;#c.NPY_USE_PYMEM&quot;&gt;&lt;code&gt;NPY_USE_PYMEM&lt;/code&gt;&lt;/a&gt; is 1, then the Python memory allocator is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2fff533a172874c502697494e5cdbf3a7c39b3" translate="yes" xml:space="preserve">
          <source>These macros use different memory allocators, depending on the constant &lt;code&gt;NPY_USE_PYMEM&lt;/code&gt;. The system malloc is used when &lt;code&gt;NPY_USE_PYMEM&lt;/code&gt; is 0, if &lt;code&gt;NPY_USE_PYMEM&lt;/code&gt; is 1, then the Python memory allocator is used.</source>
          <target state="translated">Estas macros utilizan diferentes asignadores de memoria, seg&amp;uacute;n la constante &lt;code&gt;NPY_USE_PYMEM&lt;/code&gt; . El sistema malloc se usa cuando &lt;code&gt;NPY_USE_PYMEM&lt;/code&gt; es 0, si &lt;code&gt;NPY_USE_PYMEM&lt;/code&gt; es 1, entonces se usa el asignador de memoria de Python.</target>
        </trans-unit>
        <trans-unit id="512de4565bde2a4a800d6eb7f4ecd21ece637307" translate="yes" xml:space="preserve">
          <source>These members are both pointers to functions to copy data from &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; and &lt;em&gt;swap&lt;/em&gt; if indicated. The value of arr is only used for flexible ( &lt;a href=&quot;c-api.dtype#c.NPY_STRING&quot;&gt;&lt;code&gt;NPY_STRING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.dtype#c.NPY_UNICODE&quot;&gt;&lt;code&gt;NPY_UNICODE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;c-api.dtype#c.NPY_VOID&quot;&gt;&lt;code&gt;NPY_VOID&lt;/code&gt;&lt;/a&gt; ) arrays (and is obtained from &lt;code&gt;arr-&amp;gt;descr-&amp;gt;elsize&lt;/code&gt; ). The second function copies a single value, while the first loops over n values with the provided strides. These functions can deal with misbehaved &lt;em&gt;src&lt;/em&gt; data. If &lt;em&gt;src&lt;/em&gt; is NULL then no copy is performed. If &lt;em&gt;swap&lt;/em&gt; is 0, then no byteswapping occurs. It is assumed that &lt;em&gt;dest&lt;/em&gt; and &lt;em&gt;src&lt;/em&gt; do not overlap. If they overlap, then use &lt;code&gt;memmove&lt;/code&gt; (&amp;hellip;) first followed by &lt;code&gt;copyswap(n)&lt;/code&gt; with NULL valued &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">Estos miembros son punteros a funciones para copiar datos de &lt;em&gt;src&lt;/em&gt; a &lt;em&gt;dest&lt;/em&gt; e &lt;em&gt;intercambiar&lt;/em&gt; si se indica. El valor de arr solo se usa para &lt;a href=&quot;c-api.dtype#c.NPY_STRING&quot;&gt; &lt;code&gt;NPY_STRING&lt;/code&gt; &lt;/a&gt; flexibles ( NPY_STRING , &lt;a href=&quot;c-api.dtype#c.NPY_UNICODE&quot;&gt; &lt;code&gt;NPY_UNICODE&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;c-api.dtype#c.NPY_VOID&quot;&gt; &lt;code&gt;NPY_VOID&lt;/code&gt; &lt;/a&gt; ) (y se obtiene de &lt;code&gt;arr-&amp;gt;descr-&amp;gt;elsize&lt;/code&gt; ). La segunda funci&amp;oacute;n copia un solo valor, mientras que la primera recorre n valores con los pasos proporcionados. Estas funciones pueden lidiar con datos &lt;em&gt;src que se&lt;/em&gt; comportan mal . Si &lt;em&gt;src&lt;/em&gt; es NULL, no se realiza ninguna copia. Si &lt;em&gt;swap&lt;/em&gt; es 0, no se produce ning&amp;uacute;n cambio de bytes. Se supone que &lt;em&gt;dest&lt;/em&gt; y &lt;em&gt;src&lt;/em&gt;no se superpongan. Si se superponen, utilice &lt;code&gt;memmove&lt;/code&gt; (&amp;hellip;) seguido de &lt;code&gt;copyswap(n)&lt;/code&gt; con &lt;code&gt;src&lt;/code&gt; con valor NULL .</target>
        </trans-unit>
        <trans-unit id="6a72dfa72e903b9f6c19523d338aa7b21c3b5f83" translate="yes" xml:space="preserve">
          <source>These members are both pointers to functions to copy data from &lt;em&gt;src&lt;/em&gt; to &lt;em&gt;dest&lt;/em&gt; and &lt;em&gt;swap&lt;/em&gt; if indicated. The value of arr is only used for flexible ( &lt;a href=&quot;dtype#c.NPY_STRING&quot;&gt;&lt;code&gt;NPY_STRING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dtype#c.NPY_UNICODE&quot;&gt;&lt;code&gt;NPY_UNICODE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dtype#c.NPY_VOID&quot;&gt;&lt;code&gt;NPY_VOID&lt;/code&gt;&lt;/a&gt; ) arrays (and is obtained from &lt;code&gt;arr-&amp;gt;descr-&amp;gt;elsize&lt;/code&gt; ). The second function copies a single value, while the first loops over n values with the provided strides. These functions can deal with misbehaved &lt;em&gt;src&lt;/em&gt; data. If &lt;em&gt;src&lt;/em&gt; is NULL then no copy is performed. If &lt;em&gt;swap&lt;/em&gt; is 0, then no byteswapping occurs. It is assumed that &lt;em&gt;dest&lt;/em&gt; and &lt;em&gt;src&lt;/em&gt; do not overlap. If they overlap, then use &lt;code&gt;memmove&lt;/code&gt; (&amp;hellip;) first followed by &lt;code&gt;copyswap(n)&lt;/code&gt; with NULL valued &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6721252244f80ca68ee960086197a2ea6f31616" translate="yes" xml:space="preserve">
          <source>These numbers in the previous line represent (0, 0) to machine precision</source>
          <target state="translated">Estos números en la línea anterior representan (0,0)para la precisión de la máquina</target>
        </trans-unit>
        <trans-unit id="dc06d74801540c694b86fd1603123c1d29a31d44" translate="yes" xml:space="preserve">
          <source>These options determine the way floating point numbers, arrays and other NumPy objects are displayed.</source>
          <target state="translated">Estas opciones determinan la forma en que se muestran los números de punto flotante,las matrices y otros objetos NumPy.</target>
        </trans-unit>
        <trans-unit id="c7caafe15667a4da0d6093971259ebc7a46a9f78" translate="yes" xml:space="preserve">
          <source>These pages describe a general &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; and &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; workflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df150acba8d3f0417e81ddcccc29e42e2e807db8" translate="yes" xml:space="preserve">
          <source>These paths both use the same machinery. We make the distinction here, because they result in different input to your methods. Specifically, &lt;a href=&quot;#view-casting&quot;&gt;View casting&lt;/a&gt; means you have created a new instance of your array type from any potential subclass of ndarray. &lt;a href=&quot;#new-from-template&quot;&gt;Creating new from template&lt;/a&gt; means you have created a new instance of your class from a pre-existing instance, allowing you - for example - to copy across attributes that are particular to your subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcba0fcabfaea90dcbb4dedc9f83dbe704fc9440" translate="yes" xml:space="preserve">
          <source>These pointers are different from the pointers accepted by &lt;code&gt;NpyIter_ResetBasePointers&lt;/code&gt;, because the direction along some axes may have been reversed.</source>
          <target state="translated">Estos punteros son diferentes de los punteros aceptados por &lt;code&gt;NpyIter_ResetBasePointers&lt;/code&gt; , porque la direcci&amp;oacute;n a lo largo de algunos ejes puede haberse invertido.</target>
        </trans-unit>
        <trans-unit id="2936192ef68f1082cb1baded7a4cc1332510cdca" translate="yes" xml:space="preserve">
          <source>These properties together mean that we can safely mix together the usual user-provided seed with simple incrementing counters to get &lt;a href=&quot;bit_generators/generated/numpy.random.bitgenerator#numpy.random.BitGenerator&quot;&gt;&lt;code&gt;BitGenerator&lt;/code&gt;&lt;/a&gt; states that are (to very high probability) independent of each other. We can wrap this together into an API that is easy to use and difficult to misuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a8a14f212cc60aa00fe9447268d1975d32ef40" translate="yes" xml:space="preserve">
          <source>These properties together mean that we can safely mix together the usual user-provided seed with simple incrementing counters to get &lt;code&gt;BitGenerator&lt;/code&gt; states that are (to very high probability) independent of each other. We can wrap this together into an API that is easy to use and difficult to misuse.</source>
          <target state="translated">Estas propiedades juntas significan que podemos mezclar de manera segura la semilla proporcionada por el usuario habitual con contadores incrementales simples para obtener estados de &lt;code&gt;BitGenerator&lt;/code&gt; que son (con una probabilidad muy alta) independientes entre s&amp;iacute;. Podemos agrupar todo esto en una API que sea f&amp;aacute;cil de usar y dif&amp;iacute;cil de usar incorrectamente.</target>
        </trans-unit>
        <trans-unit id="a6a12c973c6b3912e3652bb2e3ed402ca4234700" translate="yes" xml:space="preserve">
          <source>These tools have been found useful by others using Python and so are included here. They are discussed separately because they are either older ways to do things now handled by f2py, Cython, or ctypes (SWIG, PyFort) or because I don&amp;rsquo;t know much about them (SIP, Boost). I have not added links to these methods because my experience is that you can find the most relevant link faster using Google or some other search engine, and any links provided here would be quickly dated. Do not assume that just because it is included in this list, I don&amp;rsquo;t think the package deserves your attention. I&amp;rsquo;m including information about these packages because many people have found them useful and I&amp;rsquo;d like to give you as many options as possible for tackling the problem of easily integrating your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fbc806872e828602fd0c760ad7240ac769262d" translate="yes" xml:space="preserve">
          <source>These two macros are similar and obtain the pointer to the data-buffer for the array. The first macro can (and should be) assigned to a particular pointer where the second is for generic processing. If you have not guaranteed a contiguous and/or aligned array then be sure you understand how to access the data in the array to avoid memory and/or alignment problems.</source>
          <target state="translated">Estas dos macros son similares y obtienen el puntero del buffer de datos para la matriz.La primera macro puede (y debe)ser asignada a un puntero particular donde la segunda es para el procesamiento genérico.Si no ha garantizado una matriz contigua y/o alineada,asegúrese de que entiende cómo acceder a los datos de la matriz para evitar problemas de memoria y/o alineación.</target>
        </trans-unit>
        <trans-unit id="e28f8dd7e1d385fa1bfc87cb75abfbb7c4a8ade7" translate="yes" xml:space="preserve">
          <source>These type names are part of the C-API and can therefore be created in extension C-code. There is also a &lt;code&gt;PyIntpArrType_Type&lt;/code&gt; and a &lt;code&gt;PyUIntpArrType_Type&lt;/code&gt; that are simple substitutes for one of the integer types that can hold a pointer on the platform. The structure of these scalar objects is not exposed to C-code. The function &lt;a href=&quot;array#c.PyArray_ScalarAsCtype&quot;&gt;&lt;code&gt;PyArray_ScalarAsCtype&lt;/code&gt;&lt;/a&gt; (..) can be used to extract the C-type value from the array scalar and the function &lt;a href=&quot;array#c.PyArray_Scalar&quot;&gt;&lt;code&gt;PyArray_Scalar&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) can be used to construct an array scalar from a C-value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4a900566749a67d476933d0258a41ade60543e" translate="yes" xml:space="preserve">
          <source>These type names are part of the C-API and can therefore be created in extension C-code. There is also a &lt;code&gt;PyIntpArrType_Type&lt;/code&gt; and a &lt;code&gt;PyUIntpArrType_Type&lt;/code&gt; that are simple substitutes for one of the integer types that can hold a pointer on the platform. The structure of these scalar objects is not exposed to C-code. The function &lt;a href=&quot;c-api.array#c.PyArray_ScalarAsCtype&quot;&gt;&lt;code&gt;PyArray_ScalarAsCtype&lt;/code&gt;&lt;/a&gt; (..) can be used to extract the C-type value from the array scalar and the function &lt;a href=&quot;c-api.array#c.PyArray_Scalar&quot;&gt;&lt;code&gt;PyArray_Scalar&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) can be used to construct an array scalar from a C-value.</source>
          <target state="translated">Estos nombres de tipo son parte de la C-API y, por lo tanto, se pueden crear en la extensi&amp;oacute;n C-code. Tambi&amp;eacute;n hay un &lt;code&gt;PyIntpArrType_Type&lt;/code&gt; y un &lt;code&gt;PyUIntpArrType_Type&lt;/code&gt; que son simples sustitutos de uno de los tipos enteros que pueden contener un puntero en la plataforma. La estructura de estos objetos escalares no est&amp;aacute; expuesta al c&amp;oacute;digo C. La funci&amp;oacute;n &lt;a href=&quot;c-api.array#c.PyArray_ScalarAsCtype&quot;&gt; &lt;code&gt;PyArray_ScalarAsCtype&lt;/code&gt; &lt;/a&gt; (..) se puede utilizar para extraer el valor de tipo C del escalar de matriz y la funci&amp;oacute;n &lt;a href=&quot;c-api.array#c.PyArray_Scalar&quot;&gt; &lt;code&gt;PyArray_Scalar&lt;/code&gt; &lt;/a&gt; (&amp;hellip;) se puede utilizar para construir un escalar de matriz a partir de un valor C.</target>
        </trans-unit>
        <trans-unit id="39c33e43ad465d1114668c2913272d120aead183" translate="yes" xml:space="preserve">
          <source>These typemaps now check to make sure that the &lt;code&gt;INPLACE_ARRAY&lt;/code&gt; arguments use native byte ordering. If not, an exception is raised.</source>
          <target state="translated">Estos mapas de tipos ahora verifican para asegurarse de que los argumentos &lt;code&gt;INPLACE_ARRAY&lt;/code&gt; usen el orden de bytes nativo. Si no es as&amp;iacute;, se genera una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="afffd3e5751f118e6c4a8e5fa416a0de7397d2ff" translate="yes" xml:space="preserve">
          <source>These values are appended to a copy of &lt;code&gt;a&lt;/code&gt;. It must be of the correct shape (the same shape as &lt;code&gt;a&lt;/code&gt;, excluding &lt;code&gt;axis&lt;/code&gt;). If &lt;code&gt;axis&lt;/code&gt; is not specified, &lt;code&gt;b&lt;/code&gt; can be any shape and will be flattened before use.</source>
          <target state="translated">Estos valores se adjuntan a una copia de &lt;code&gt;a&lt;/code&gt; . Debe tener la forma correcta (la misma forma que &lt;code&gt;a&lt;/code&gt; , excluyendo el &lt;code&gt;axis&lt;/code&gt; ). Si no se especifica el &lt;code&gt;axis&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; puede tener cualquier forma y se aplanar&amp;aacute; antes de su uso.</target>
        </trans-unit>
        <trans-unit id="612fafedc61071a5e61db03c65c0f553ab91df63" translate="yes" xml:space="preserve">
          <source>These values are appended to a copy of &lt;code&gt;arr&lt;/code&gt;. It must be of the correct shape (the same shape as &lt;code&gt;arr&lt;/code&gt;, excluding &lt;code&gt;axis&lt;/code&gt;). If &lt;code&gt;axis&lt;/code&gt; is not specified, &lt;code&gt;values&lt;/code&gt; can be any shape and will be flattened before use.</source>
          <target state="translated">Estos valores se adjuntan a una copia de &lt;code&gt;arr&lt;/code&gt; . Debe tener la forma correcta (la misma forma que &lt;code&gt;arr&lt;/code&gt; , excluyendo el &lt;code&gt;axis&lt;/code&gt; ). Si no se especifica el &lt;code&gt;axis&lt;/code&gt; , los &lt;code&gt;values&lt;/code&gt; pueden tener cualquier forma y se aplanar&amp;aacute;n antes de su uso.</target>
        </trans-unit>
        <trans-unit id="d11f3f9e08bc59771682cf52bbe126f37d2ff215" translate="yes" xml:space="preserve">
          <source>These values are only returned if &lt;a href=&quot;numpy.full#numpy.full&quot;&gt;&lt;code&gt;full&lt;/code&gt;&lt;/a&gt; = True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c265d10397c2203b05e143772f5cfb33ffa2cf8c" translate="yes" xml:space="preserve">
          <source>These values are only returned if &lt;code&gt;full&lt;/code&gt; = True</source>
          <target state="translated">Estos valores solo se devuelven si &lt;code&gt;full&lt;/code&gt; = True</target>
        </trans-unit>
        <trans-unit id="94c85fa0224cf9a04b1b6ccf08fcebfe46c06507" translate="yes" xml:space="preserve">
          <source>These values will be element-wise interpolated into the string.</source>
          <target state="translated">Estos valores serán interpolados por los elementos en la cadena.</target>
        </trans-unit>
        <trans-unit id="dd5e6abec4e1ccbc6948e611e796f2af804c4524" translate="yes" xml:space="preserve">
          <source>They are the standard vector/matrix/tensor type of NumPy. Many NumPy functions return arrays, not matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f43e0b4384b8a2ab0accbd750c1e3d8364a7037" translate="yes" xml:space="preserve">
          <source>They are the standard vector/matrix/tensor type of numpy. Many numpy functions return arrays, not matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509dc829f5043c117345f356b056cfc2f0e4fe76" translate="yes" xml:space="preserve">
          <source>They support multidimensional array algebra that is supported in MATLAB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d528fd04772fea95a1dd88b443f26490baf33962" translate="yes" xml:space="preserve">
          <source>Things are a little bit more tricky when combining reduction and allocated operands. Before iteration is started, any reduction operand must be initialized to its starting values. Here&amp;rsquo;s how we can do this, taking sums along the last axis of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Las cosas son un poco m&amp;aacute;s complicadas cuando se combinan la reducci&amp;oacute;n y los operandos asignados. Antes de que se inicie la iteraci&amp;oacute;n, cualquier operando de reducci&amp;oacute;n debe inicializarse a sus valores iniciales. As&amp;iacute; es como podemos hacer esto, tomando sumas a lo largo del &amp;uacute;ltimo eje de &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8c3ebfdc398f463f36600d7ef80c9d888a357d" translate="yes" xml:space="preserve">
          <source>Things become more complex when multidimensional arrays are indexed, particularly with multidimensional index arrays. These tend to be more unusual uses, but they are permitted, and they are useful for some problems. We&amp;rsquo;ll start with the simplest multidimensional case (using the array y from the previous examples):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998943208ea6deef89245cfe0875a67c35f9b773" translate="yes" xml:space="preserve">
          <source>Think of &lt;a href=&quot;#numpy.linalg.multi_dot&quot;&gt;&lt;code&gt;multi_dot&lt;/code&gt;&lt;/a&gt; as:</source>
          <target state="translated">Piense en &lt;a href=&quot;#numpy.linalg.multi_dot&quot;&gt; &lt;code&gt;multi_dot&lt;/code&gt; &lt;/a&gt; como:</target>
        </trans-unit>
        <trans-unit id="80d13b605601d6c6ca920c19b73c5be17b635404" translate="yes" xml:space="preserve">
          <source>This 2-d averaging filter runs quickly because the loop is in C and the pointer computations are done only as needed. If the code above is compiled as a module &lt;code&gt;image&lt;/code&gt;, then a 2-d image, &lt;code&gt;img&lt;/code&gt;, can be filtered using this code very quickly using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4e675f0444c2be3f07e89468e7d677b6986ce7" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;.wav&lt;/code&gt; example is for illustration; to read a &lt;code&gt;.wav&lt;/code&gt; file in real life, use Python&amp;rsquo;s built-in module &lt;a href=&quot;https://docs.python.org/dev/library/wave.html#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269959a51cb8489ddd62f29ffab3f7d5a6b40d53" translate="yes" xml:space="preserve">
          <source>This Chapter attempts to explain the logic behind some of the new pieces of code. The purpose behind these explanations is to enable somebody to be able to understand the ideas behind the implementation somewhat more easily than just staring at the code. Perhaps in this way, the algorithms can be improved on, borrowed from, and/or optimized by more people.</source>
          <target state="translated">Este capítulo intenta explicar la lógica detrás de algunas de las nuevas piezas de código.El propósito de estas explicaciones es permitir que alguien pueda entender las ideas que hay detrás de la implementación con algo más fácil que sólo mirar el código.Tal vez de esta manera,los algoritmos pueden ser mejorados,prestados y/u optimizados por más gente.</target>
        </trans-unit>
        <trans-unit id="d6d4a7a2f523794d0b16e4b9b049698c812e64fd" translate="yes" xml:space="preserve">
          <source>This Subcommittee shall NOT make decisions about the direction, scope or technical direction of the Project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e344df267f24877e3c878787dee0c7157b282950" translate="yes" xml:space="preserve">
          <source>This Subcommittee will have 5 members, 4 of whom will be current Council Members and 1 of whom will be external to the Steering Council. No more than 2 Subcommittee Members can report to one person through employment or contracting work (including the reportee, i.e. the reportee + 1 is the max). This avoids effective majorities resting on one person.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8eb7804ceb212518c04178ca9353c5652cddc34" translate="yes" xml:space="preserve">
          <source>This address may be cached before the iteration loop, calling &lt;code&gt;iternext&lt;/code&gt; will not change it. The value itself may change during iteration, in particular if buffering is enabled. This function may be safely called without holding the Python GIL.</source>
          <target state="translated">Esta direcci&amp;oacute;n puede almacenarse en cach&amp;eacute; antes del ciclo de iteraci&amp;oacute;n, llamar a &lt;code&gt;iternext&lt;/code&gt; no la cambiar&amp;aacute;. El valor en s&amp;iacute; puede cambiar durante la iteraci&amp;oacute;n, en particular si el almacenamiento en b&amp;uacute;fer est&amp;aacute; habilitado. Esta funci&amp;oacute;n se puede llamar de forma segura sin tener que mantener Python GIL.</target>
        </trans-unit>
        <trans-unit id="6a02ab6384a4ff5cc117cc0360cf322a65257b07" translate="yes" xml:space="preserve">
          <source>This advanced indexing occurs when obj is an array object of Boolean type, such as may be returned from comparison operators. A single boolean index array is practically identical to &lt;code&gt;x[obj.nonzero()]&lt;/code&gt; where, as described above, &lt;a href=&quot;generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt;&lt;code&gt;obj.nonzero()&lt;/code&gt;&lt;/a&gt; returns a tuple (of length &lt;a href=&quot;generated/numpy.ndarray.ndim#numpy.ndarray.ndim&quot;&gt;&lt;code&gt;obj.ndim&lt;/code&gt;&lt;/a&gt;) of integer index arrays showing the &lt;a href=&quot;https://docs.python.org/dev/library/constants.html#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; elements of &lt;em&gt;obj&lt;/em&gt;. However, it is faster when &lt;code&gt;obj.shape == x.shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dacb6ef0aabe4e0449ac2f7d6e826edb424af8c" translate="yes" xml:space="preserve">
          <source>This advanced indexing occurs when obj is an array object of Boolean type, such as may be returned from comparison operators. A single boolean index array is practically identical to &lt;code&gt;x[obj.nonzero()]&lt;/code&gt; where, as described above, &lt;a href=&quot;generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt;&lt;code&gt;obj.nonzero()&lt;/code&gt;&lt;/a&gt; returns a tuple (of length &lt;a href=&quot;generated/numpy.ndarray.ndim#numpy.ndarray.ndim&quot;&gt;&lt;code&gt;obj.ndim&lt;/code&gt;&lt;/a&gt;) of integer index arrays showing the &lt;code&gt;True&lt;/code&gt; elements of &lt;em&gt;obj&lt;/em&gt;. However, it is faster when &lt;code&gt;obj.shape == x.shape&lt;/code&gt;.</source>
          <target state="translated">Esta indexaci&amp;oacute;n avanzada se produce cuando obj es un objeto de matriz de tipo booleano, como el que pueden devolver los operadores de comparaci&amp;oacute;n. Una &amp;uacute;nica matriz de &amp;iacute;ndice booleano es pr&amp;aacute;cticamente id&amp;eacute;ntica a &lt;code&gt;x[obj.nonzero()]&lt;/code&gt; donde, como se describi&amp;oacute; anteriormente, &lt;a href=&quot;generated/numpy.ndarray.nonzero#numpy.ndarray.nonzero&quot;&gt; &lt;code&gt;obj.nonzero()&lt;/code&gt; &lt;/a&gt; devuelve una tupla (de longitud &lt;a href=&quot;generated/numpy.ndarray.ndim#numpy.ndarray.ndim&quot;&gt; &lt;code&gt;obj.ndim&lt;/code&gt; &lt;/a&gt; ) de matrices de &amp;iacute;ndices enteros que muestran los elementos &lt;code&gt;True&lt;/code&gt; de &lt;em&gt;obj&lt;/em&gt; . Sin embargo, es m&amp;aacute;s r&amp;aacute;pido cuando &lt;code&gt;obj.shape == x.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="710121ccc37af7c57d603d19a46f2cadc801d4ee" translate="yes" xml:space="preserve">
          <source>This allows multithreading to fill large arrays in chunks using suitable BitGenerators in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af03503ddeac7c1214ea6c40abe67021cd6a3a66" translate="yes" xml:space="preserve">
          <source>This allows you to import the in-place built NumPy &lt;em&gt;from the repo base directory only&lt;/em&gt;. If you want the in-place build to be visible outside that base dir, you need to point your &lt;code&gt;PYTHONPATH&lt;/code&gt; environment variable to this directory. Some IDEs (&lt;a href=&quot;https://www.spyder-ide.org/&quot;&gt;Spyder&lt;/a&gt; for example) have utilities to manage &lt;code&gt;PYTHONPATH&lt;/code&gt;. On Linux and OSX, you can run the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a10be423c319c36683d60f03c4235ea58ef43ca" translate="yes" xml:space="preserve">
          <source>This also works for functions and other objects that &lt;strong&gt;you&lt;/strong&gt; create. Just remember to include a docstring with your function using a string literal (&lt;code&gt;&quot;&quot;&quot; &quot;&quot;&quot;&lt;/code&gt; or &lt;code&gt;''' '''&lt;/code&gt; around your documentation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43700c3e2d90a58545492f544e16be4440930810" translate="yes" xml:space="preserve">
          <source>This also works in more dimensions, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c39c0afd071dc6e571fc8d1273c278aad6faa3" translate="yes" xml:space="preserve">
          <source>This also works with 2D arrays! If you start with this array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d160c6be16a498bbc805a56a17ad9724ae3c358b" translate="yes" xml:space="preserve">
          <source>This applies type promotion to all the inputs, using the NumPy rules for combining scalars and arrays, to determine the output type of a set of operands. This is the same result type that ufuncs produce. The specific algorithm used is as follows.</source>
          <target state="translated">Esto aplica la promoción de tipo a todas las entradas,utilizando las reglas NumPy para combinar escalares y matrices,para determinar el tipo de salida de un conjunto de operandos.Este es el mismo tipo de resultado que producen los ufuncs.El algoritmo específico utilizado es el siguiente.</target>
        </trans-unit>
        <trans-unit id="2e8bc0cbcc5f069a41dc6497b9c0a909fd514a44" translate="yes" xml:space="preserve">
          <source>This approach to the array interface allows for faster access to an array using only one attribute lookup and a well-defined C-structure.</source>
          <target state="translated">Este enfoque de la interfaz de la matriz permite un acceso más rápido a una matriz utilizando sólo una búsqueda de atributos y una estructura C bien definida.</target>
        </trans-unit>
        <trans-unit id="b2cfa3868ca6d5d3eec71f613d2a281e952e696d" translate="yes" xml:space="preserve">
          <source>This approach to the interface consists of the object having an &lt;a href=&quot;#__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">Este enfoque de la interfaz consiste en que el objeto tiene un atributo &lt;a href=&quot;#__array_interface__&quot;&gt; &lt;code&gt;__array_interface__&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3505c6babbf93b992cced9994459f797fa18ee9a" translate="yes" xml:space="preserve">
          <source>This approach to the interface consists of the object having an &lt;a href=&quot;#object.__array_interface__&quot;&gt;&lt;code&gt;__array_interface__&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27c7321ec2c09e2c1e41b0fb7ac933d7973957f" translate="yes" xml:space="preserve">
          <source>This arrangement allow for very flexible use of arrays. One thing that it allows is simple changes of the metadata to change the interpretation of the array buffer. Changing the byteorder of the array is a simple change involving no rearrangement of the data. The shape of the array can be changed very easily without changing anything in the data buffer or any data copying at all</source>
          <target state="translated">Esta disposición permite un uso muy flexible de los conjuntos.Una de las cosas que permite es un simple cambio de los metadatos para cambiar la interpretación del buffer de la matriz.Cambiar el orden de los bytes del array es un cambio simple que no implica un reordenamiento de los datos.La forma de la matriz puede cambiarse muy fácilmente sin cambiar nada en el búfer de datos o sin copiar ningún dato en absoluto</target>
        </trans-unit>
        <trans-unit id="13b0f80cc0af4acb749cdb54d3ae94021e334ad5" translate="yes" xml:space="preserve">
          <source>This array creation routine allows for the convenient creation of a new array matching an existing array&amp;rsquo;s shapes and memory layout, possibly changing the layout and/or data type.</source>
          <target state="translated">Esta rutina de creaci&amp;oacute;n de matrices permite la creaci&amp;oacute;n conveniente de una nueva matriz que coincida con las formas de una matriz existente y el dise&amp;ntilde;o de la memoria, posiblemente cambiando el dise&amp;ntilde;o y / o el tipo de datos.</target>
        </trans-unit>
        <trans-unit id="b6ad81be881df54f2faa5255b14c490a53a2cd92" translate="yes" xml:space="preserve">
          <source>This array is a copy of some other array. The C-API function PyArray_ResolveWritebackIfCopy must be called before deallocating to the base array will be updated with the contents of this array.</source>
          <target state="translated">Esta matriz es una copia de otra matriz.La función C-API PyArray_ResolveWritebackIfCopy debe ser llamada antes de que la deslocalización al array base sea actualizada con el contenido de este array.</target>
        </trans-unit>
        <trans-unit id="9975deeda2df7b42c75df625b9b5fc69426c2203" translate="yes" xml:space="preserve">
          <source>This array is stored in memory as 40 bytes, one after the other (known as a contiguous block of memory). The strides of an array tell us how many bytes we have to skip in memory to move to the next position along a certain axis. For example, we have to skip 4 bytes (1 value) to move to the next column, but 20 bytes (5 values) to get to the same position in the next row. As such, the strides for the array &lt;code&gt;x&lt;/code&gt; will be &lt;code&gt;(20, 4)&lt;/code&gt;.</source>
          <target state="translated">Esta matriz se almacena en la memoria como 40 bytes, uno tras otro (conocido como bloque contiguo de memoria). Los pasos de una matriz nos dicen cu&amp;aacute;ntos bytes tenemos que saltar en la memoria para movernos a la siguiente posici&amp;oacute;n a lo largo de un eje determinado. Por ejemplo, tenemos que saltar 4 bytes (1 valor) para pasar a la siguiente columna, pero 20 bytes (5 valores) para llegar a la misma posici&amp;oacute;n en la siguiente fila. Como tal, los pasos de la matriz &lt;code&gt;x&lt;/code&gt; ser&amp;aacute;n &lt;code&gt;(20, 4)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38cb8241a835a683d594eee86aed4e56e6c6635d" translate="yes" xml:space="preserve">
          <source>This array is the mask for all &lt;a href=&quot;../generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;writemasked&lt;/code&gt;&lt;/a&gt; operands. Code uses the &lt;code&gt;writemasked&lt;/code&gt; flag which indicates that only elements where the chosen ARRAYMASK operand is True will be written to. In general, the iterator does not enforce this, it is up to the code doing the iteration to follow that promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed5fe179d122dc6d0ff4af8af1bf207796107b0" translate="yes" xml:space="preserve">
          <source>This array is the mask for all &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;writemasked&lt;/code&gt;&lt;/a&gt; operands. Code uses the &lt;code&gt;writemasked&lt;/code&gt; flag which indicates that only elements where the chosen ARRAYMASK operand is True will be written to. In general, the iterator does not enforce this, it is up to the code doing the iteration to follow that promise.</source>
          <target state="translated">Esta matriz es la m&amp;aacute;scara para todos los operandos enmascarados de &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;writemasked&lt;/code&gt; &lt;/a&gt; . El c&amp;oacute;digo usa la bandera de &lt;code&gt;writemasked&lt;/code&gt; que indica que solo se escribir&amp;aacute;n los elementos en los que el operando ARRAYMASK elegido sea True. En general, el iterador no hace cumplir esto, depende del c&amp;oacute;digo que realiza la iteraci&amp;oacute;n para seguir esa promesa.</target>
        </trans-unit>
        <trans-unit id="da76cf9484436ae5f595cbe33ce62d99eee348ae" translate="yes" xml:space="preserve">
          <source>This array is used in computing an N-d index from a 1-d index. It contains needed products of the dimensions.</source>
          <target state="translated">Esta matriz se utiliza para calcular un índice N-d a partir de un índice 1-d.Contiene los productos necesarios de las dimensiones.</target>
        </trans-unit>
        <trans-unit id="2950d768bc15bd8305b22a36aa90ddcbd53411a1" translate="yes" xml:space="preserve">
          <source>This array method can be conveniently chained:</source>
          <target state="translated">Este método de arreglo puede ser convenientemente encadenado:</target>
        </trans-unit>
        <trans-unit id="cd59928fafb5b8b3afd2257d5348ff12e61a3751" translate="yes" xml:space="preserve">
          <source>This array must contain integers in &lt;code&gt;[0, n-1]&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the number of choices, unless &lt;code&gt;mode=wrap&lt;/code&gt; or &lt;code&gt;mode=clip&lt;/code&gt;, in which cases any integers are permissible.</source>
          <target state="translated">Esta matriz debe contener n&amp;uacute;meros enteros en &lt;code&gt;[0, n-1]&lt;/code&gt; , donde &lt;code&gt;n&lt;/code&gt; es el n&amp;uacute;mero de opciones, a menos que &lt;code&gt;mode=wrap&lt;/code&gt; o &lt;code&gt;mode=clip&lt;/code&gt; , en cuyo caso se permite cualquier n&amp;uacute;mero entero.</target>
        </trans-unit>
        <trans-unit id="2801e85aeaae18790917a73e502d7026a3a34d08" translate="yes" xml:space="preserve">
          <source>This array must contain integers in &lt;code&gt;[0, n-1]&lt;/code&gt;, where n is the number of choices.</source>
          <target state="translated">Esta matriz debe contener n&amp;uacute;meros enteros en &lt;code&gt;[0, n-1]&lt;/code&gt; , donde n es el n&amp;uacute;mero de opciones.</target>
        </trans-unit>
        <trans-unit id="7231182809746ea9e4a7a5bcc665f806413fd373" translate="yes" xml:space="preserve">
          <source>This assumes that you have forked &lt;a href=&quot;https://github.com/scipy/scipy.org&quot;&gt;https://github.com/scipy/scipy.org&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3397e055cb40235a1ae2818b229475b2582745a3" translate="yes" xml:space="preserve">
          <source>This attribute allows simple but flexible determination of which sub- type should be considered &amp;ldquo;primary&amp;rdquo; when an operation involving two or more sub-types arises. In operations where different sub-types are being used, the sub-type with the largest &lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_priority__&quot;&gt;&lt;code&gt;__array_priority__&lt;/code&gt;&lt;/a&gt; attribute will determine the sub-type of the output(s). If two sub- types have the same &lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_priority__&quot;&gt;&lt;code&gt;__array_priority__&lt;/code&gt;&lt;/a&gt; then the sub-type of the first argument determines the output. The default &lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_priority__&quot;&gt;&lt;code&gt;__array_priority__&lt;/code&gt;&lt;/a&gt; attribute returns a value of 0.0 for the base ndarray type and 1.0 for a sub-type. This attribute can also be defined by objects that are not sub-types of the ndarray and can be used to determine which &lt;a href=&quot;../reference/arrays.classes#numpy.class.__array_wrap__&quot;&gt;&lt;code&gt;__array_wrap__&lt;/code&gt;&lt;/a&gt; method should be called for the return output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1937d99c6f34bca77e93395a42e2a63ca828dcf" translate="yes" xml:space="preserve">
          <source>This attribute can also be an object exposing the &lt;a href=&quot;https://docs.python.org/dev/c-api/buffer.html#bufferobjects&quot;&gt;buffer interface&lt;/a&gt; which will be used to share the data. If this key is not present (or returns None), then memory sharing will be done through the buffer interface of the object itself. In this case, the offset key can be used to indicate the start of the buffer. A reference to the object exposing the array interface must be stored by the new object if the memory area is to be secured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19820dc6931f03b4ce34d1e382ce5208e82ba583" translate="yes" xml:space="preserve">
          <source>This attribute can also be an object exposing the &lt;a href=&quot;https://docs.python.org/dev/c-api/objbuffer.html#c.PyObject_AsCharBuffer&quot;&gt;&lt;code&gt;buffer interface&lt;/code&gt;&lt;/a&gt; which will be used to share the data. If this key is not present (or returns &lt;code&gt;None&lt;/code&gt;), then memory sharing will be done through the buffer interface of the object itself. In this case, the offset key can be used to indicate the start of the buffer. A reference to the object exposing the array interface must be stored by the new object if the memory area is to be secured.</source>
          <target state="translated">Este atributo tambi&amp;eacute;n puede ser un objeto que exponga la &lt;a href=&quot;https://docs.python.org/dev/c-api/objbuffer.html#c.PyObject_AsCharBuffer&quot;&gt; &lt;code&gt;buffer interface&lt;/code&gt; &lt;/a&gt; del b&amp;uacute;fer que se utilizar&amp;aacute; para compartir los datos. Si esta clave no est&amp;aacute; presente (o devuelve &lt;code&gt;None&lt;/code&gt; ), la memoria compartida se realizar&amp;aacute; a trav&amp;eacute;s de la interfaz de b&amp;uacute;fer del objeto en s&amp;iacute;. En este caso, la tecla de compensaci&amp;oacute;n se puede utilizar para indicar el inicio del b&amp;uacute;fer. El nuevo objeto debe almacenar una referencia al objeto que expone la interfaz de matriz si se quiere proteger el &amp;aacute;rea de memoria.</target>
        </trans-unit>
        <trans-unit id="357acc58797c34ec7ee3526baa5d4678b200c571" translate="yes" xml:space="preserve">
          <source>This attribute can also be an object exposing the &lt;code&gt;buffer interface&lt;/code&gt; which will be used to share the data. If this key is not present (or returns None), then memory sharing will be done through the buffer interface of the object itself. In this case, the offset key can be used to indicate the start of the buffer. A reference to the object exposing the array interface must be stored by the new object if the memory area is to be secured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99486092092808fe1a7a3c63950908fb38dd3c25" translate="yes" xml:space="preserve">
          <source>This attribute creates an object that makes it easier to use arrays when calling shared libraries with the ctypes module. The returned object has, among others, data, shape, and strides attributes (see Notes below) which themselves return ctypes objects that can be used as arguments to a shared library.</source>
          <target state="translated">Este atributo crea un objeto que facilita el uso de arrays al llamar a bibliotecas compartidas con el módulo ctypes.El objeto devuelto tiene,entre otros,atributos de datos,forma y pasos (véase Notas más abajo)que a su vez devuelven objetos ctypes que pueden utilizarse como argumentos a una biblioteca compartida.</target>
        </trans-unit>
        <trans-unit id="94f279541eccc23ec8d58b2be974fecc119fa4c7" translate="yes" xml:space="preserve">
          <source>This basic behavior can be augmented by passing a 2-tuple in as the file argument. The first element of the tuple should specify the relative path (under the package install directory) where the remaining sequence of files should be installed to (it has nothing to do with the file-names in the source distribution). The second element of the tuple is the sequence of files that should be installed. The files in this sequence can be filenames, relative paths, or absolute paths. For absolute paths the file will be installed in the top-level package installation directory (regardless of the first argument). Filenames and relative path names will be installed in the package install directory under the path name given as the first element of the tuple.</source>
          <target state="translated">Este comportamiento básico se puede aumentar pasando un 2-tuple como argumento de archivo.El primer elemento de la tupla debe especificar la ruta relativa (bajo el directorio de instalación del paquete)donde se debe instalar la secuencia de archivos restante (no tiene nada que ver con los nombres de los archivos en la distribución fuente).El segundo elemento de la tupla es la secuencia de archivos que debe ser instalada.Los archivos de esta secuencia pueden ser nombres de archivos,rutas relativas o rutas absolutas.En el caso de las rutas absolutas,el archivo se instalará en el directorio de instalación del paquete de nivel superior (independientemente del primer argumento).Los nombres de archivos y las rutas relativas se instalarán en el directorio de instalación del paquete bajo el nombre de la ruta dado como primer elemento de la tupla.</target>
        </trans-unit>
        <trans-unit id="38d8b59be8238ec40cd52d11a1691c2db5ac9b19" translate="yes" xml:space="preserve">
          <source>This broadcasting can also be achieved using the function &lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt;&lt;code&gt;ix_&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Esta transmisi&amp;oacute;n tambi&amp;eacute;n se puede lograr usando la funci&amp;oacute;n &lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt; &lt;code&gt;ix_&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="040d755c45914cdad7e449ca2485bc004cd21eb5" translate="yes" xml:space="preserve">
          <source>This bug causes Python before 3.4 to not reliably show warnings again after they have been ignored once (even within catch_warnings). It means that no &amp;ldquo;ignore&amp;rdquo; filter can be used easily, since following tests might need to see the warning. Additionally it allows easier specificity for testing warnings and can be nested.</source>
          <target state="translated">Este error hace que Python antes de 3.4 no muestre advertencias de manera confiable nuevamente despu&amp;eacute;s de que se hayan ignorado una vez (incluso dentro de catch_warnings). Significa que ning&amp;uacute;n filtro &quot;ignorar&quot; puede usarse f&amp;aacute;cilmente, ya que es posible que las siguientes pruebas necesiten ver la advertencia. Adem&amp;aacute;s, permite una especificidad m&amp;aacute;s sencilla para probar las advertencias y se puede anidar.</target>
        </trans-unit>
        <trans-unit id="b97776ec43283f6527b6b56ee297ecb07c0e7a5e" translate="yes" xml:space="preserve">
          <source>This builds NumPy first, so the first time it may take a few minutes. If you specify &lt;code&gt;-n&lt;/code&gt;, the tests are run against the version of NumPy (if any) found on current PYTHONPATH.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f8c2b712d454554ccb3b1572df7e3d85a8d6a8" translate="yes" xml:space="preserve">
          <source>This can be done via &lt;em&gt;interactive rebasing&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1ccaf9367b320b45fde18f5d1b6d26c14c28d1" translate="yes" xml:space="preserve">
          <source>This can be used on multidimensional arrays too:</source>
          <target state="translated">Esto también puede ser usado en matrices multidimensionales:</target>
        </trans-unit>
        <trans-unit id="4619f696b33e2f5aafe4335faf3807d265baaeed" translate="yes" xml:space="preserve">
          <source>This can have multiple paragraphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0866e6d60c935d1c1a437309972ddf022e2bfb" translate="yes" xml:space="preserve">
          <source>This chapter will review many of the tools that are available for the purpose of accessing code written in other compiled languages. There are many resources available for learning to call other compiled libraries from Python and the purpose of this Chapter is not to make you an expert. The main goal is to make you aware of some of the possibilities so that you will know what to &amp;ldquo;Google&amp;rdquo; in order to learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b07ef80d0cc13652d9fe61895de6904fd8ef60" translate="yes" xml:space="preserve">
          <source>This class implements the special methods for almost all of Python&amp;rsquo;s builtin operators defined in the &lt;a href=&quot;https://docs.python.org/dev/library/operator.html#module-operator&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module, including comparisons (&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, etc.) and arithmetic (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, etc.), by deferring to the &lt;code&gt;__array_ufunc__&lt;/code&gt; method, which subclasses must implement.</source>
          <target state="translated">Esta clase implementa los m&amp;eacute;todos especiales para casi todos los operadores internos de Python definidos en el m&amp;oacute;dulo de &lt;a href=&quot;https://docs.python.org/dev/library/operator.html#module-operator&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt; , incluidas las comparaciones ( &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , etc.) y la aritm&amp;eacute;tica ( &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , etc.), al diferir del m&amp;eacute;todo &lt;code&gt;__array_ufunc__&lt;/code&gt; , qu&amp;eacute; subclases deben implementar.</target>
        </trans-unit>
        <trans-unit id="4c89b01b7f4a0346b82c2ab3f988792b632fe09a" translate="yes" xml:space="preserve">
          <source>This class is provided for numarray backward-compatibility. New code (not concerned with numarray compatibility) should use arrays of type &lt;a href=&quot;../arrays.scalars#numpy.string_&quot;&gt;&lt;code&gt;string_&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays.scalars#numpy.unicode_&quot;&gt;&lt;code&gt;unicode_&lt;/code&gt;&lt;/a&gt; and use the free functions in &lt;code&gt;numpy.char&lt;/code&gt; for fast vectorized string operations instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc453ece1fc4bcfba8a214ebb68dae3ad49689e" translate="yes" xml:space="preserve">
          <source>This class is provided for numarray backward-compatibility. New code (not concerned with numarray compatibility) should use arrays of type &lt;code&gt;string_&lt;/code&gt; or &lt;code&gt;unicode_&lt;/code&gt; and use the free functions in &lt;code&gt;numpy.char&lt;/code&gt; for fast vectorized string operations instead.</source>
          <target state="translated">Esta clase se proporciona para compatibilidad con versiones anteriores de numarray. El nuevo c&amp;oacute;digo (no preocupado por la compatibilidad de numarray) debe usar matrices de tipo &lt;code&gt;string_&lt;/code&gt; o &lt;code&gt;unicode_&lt;/code&gt; y usar las funciones gratuitas en &lt;code&gt;numpy.char&lt;/code&gt; para operaciones de cadena vectorizadas r&amp;aacute;pidas en su lugar.</target>
        </trans-unit>
        <trans-unit id="817afa6aa8358446cc6150c81d202fd10664d253" translate="yes" xml:space="preserve">
          <source>This class isn&amp;rsquo;t very useful, because it has the same constructor as the bare ndarray object, including passing in buffers and shapes and so on. We would probably prefer the constructor to be able to take an already formed ndarray from the usual numpy calls to &lt;code&gt;np.array&lt;/code&gt; and return an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547d58e17f08661cffe0028727466b3bfecb1f09" translate="yes" xml:space="preserve">
          <source>This class may at some point be turned into a factory function which returns a view into an mmap buffer.</source>
          <target state="translated">Esta clase puede en algún momento convertirse en una función de fábrica que devuelve una vista en un buffer de mmap.</target>
        </trans-unit>
        <trans-unit id="9f0e2bd2c54e1831a429118c49099c40d4fc6a31" translate="yes" xml:space="preserve">
          <source>This code can be compiled and linked into an extension module named filter using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051a76f1d3dcebdcceb5b6a498f248ede74e08da" translate="yes" xml:space="preserve">
          <source>This code has a significant amount of error handling. Note the &lt;code&gt;SWIG_fail&lt;/code&gt; is a macro for &lt;code&gt;goto fail&lt;/code&gt;, referring to the label at line 28. If the user provides the wrong number of arguments, this will be caught at line 10. If construction of the NumPy array fails or produces an array with the wrong number of dimensions, these errors are caught at line 17. And finally, if an error is detected, memory is still managed correctly at line 30.</source>
          <target state="translated">Este c&amp;oacute;digo tiene una cantidad significativa de manejo de errores. Tenga en cuenta que &lt;code&gt;SWIG_fail&lt;/code&gt; es una macro para &lt;code&gt;goto fail&lt;/code&gt; , refiri&amp;eacute;ndose a la etiqueta en la l&amp;iacute;nea 28. Si el usuario proporciona el n&amp;uacute;mero incorrecto de argumentos, esto ser&amp;aacute; capturado en la l&amp;iacute;nea 10. Si la construcci&amp;oacute;n de la matriz NumPy falla o produce una matriz con la incorrecta n&amp;uacute;mero de dimensiones, estos errores se detectan en la l&amp;iacute;nea 17. Y, finalmente, si se detecta un error, la memoria se sigue gestionando correctamente en la l&amp;iacute;nea 30.</target>
        </trans-unit>
        <trans-unit id="3999b914a2658c99b5fe639f3ab379867f2570ac" translate="yes" xml:space="preserve">
          <source>This code is not exhaustive or complete. It serves to distill our common understanding of a collaborative, shared environment and goals. Please try to follow this code in spirit as much as in letter, to create a friendly and productive environment that enriches the surrounding community.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2f712a7c05e996ac3e38345d45b7f3d7e23038" translate="yes" xml:space="preserve">
          <source>This code loads the shared library named &lt;code&gt;code.{ext}&lt;/code&gt; located in the same path as this file. It then adds a return type of void to the functions contained in the library. It also adds argument checking to the functions in the library so that ndarrays can be passed as the first three arguments along with an integer (large enough to hold a pointer on the platform) as the fourth argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533c867c6a351c2be81a48161bc93203ea12c76d" translate="yes" xml:space="preserve">
          <source>This code of conduct applies to all spaces managed by the NumPy project, including all public and private mailing lists, issue trackers, wikis, blogs, Twitter, and any other communication channel used by our community. The NumPy project does not organise in-person events, however events related to our community should have a code of conduct similar in spirit to this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff208b4a7eacc934c607e5c41003491618977d7" translate="yes" xml:space="preserve">
          <source>This code of conduct should be honored by everyone who participates in the NumPy community formally or informally, or claims any affiliation with the project, in any project-related activities and especially when representing the project, in any role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f194434e38b3846c0fd28dc955d7908e8501694" translate="yes" xml:space="preserve">
          <source>This command builds (see &lt;code&gt;-c&lt;/code&gt; flag, execute &lt;code&gt;python -m numpy.f2py&lt;/code&gt; without arguments to see the explanation of command line options) an extension module &lt;code&gt;fib1.so&lt;/code&gt; (see &lt;code&gt;-m&lt;/code&gt; flag) to the current directory. Now, in Python the Fortran subroutine &lt;code&gt;FIB&lt;/code&gt; is accessible via &lt;code&gt;fib1.fib&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9bee6274aa8d66ef375e679babd25ee76812a2" translate="yes" xml:space="preserve">
          <source>This command leaves a file named add.{ext} in the current directory (where {ext} is the appropriate extension for a Python extension module on your platform &amp;mdash; so, pyd, &lt;em&gt;etc.&lt;/em&gt; ). This module may then be imported from Python. It will contain a method for each subroutine in add (zadd, cadd, dadd, sadd). The docstring of each method contains information about how the module method may be called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb1615a9d0e074d0b52d81da555b5659d5320b3" translate="yes" xml:space="preserve">
          <source>This command leaves a file named add.{ext} in the current directory (where {ext} is the appropriate extension for a python extension module on your platform &amp;mdash; so, pyd, &lt;em&gt;etc.&lt;/em&gt; ). This module may then be imported from Python. It will contain a method for each subroutine in add (zadd, cadd, dadd, sadd). The docstring of each method contains information about how the module method may be called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8208674ec726acd6f311802a0a4f9952791f4b6" translate="yes" xml:space="preserve">
          <source>This command leaves the file add.pyf in the current directory. The section of this file corresponding to zadd is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0a485b84958d1031e7018c2536aa8e72a66489" translate="yes" xml:space="preserve">
          <source>This condition is broadcast over the input. At locations where the condition is True, the &lt;code&gt;out&lt;/code&gt; array will be set to the ufunc result. Elsewhere, the &lt;code&gt;out&lt;/code&gt; array will retain its original value. Note that if an uninitialized &lt;code&gt;out&lt;/code&gt; array is created via the default &lt;code&gt;out=None&lt;/code&gt;, locations within it where the condition is False will remain uninitialized.</source>
          <target state="translated">Esta condici&amp;oacute;n se transmite por la entrada. En ubicaciones donde la condici&amp;oacute;n es Verdadera, la matriz de &lt;code&gt;out&lt;/code&gt; se establecer&amp;aacute; en el resultado de ufunc. En otros lugares, la matriz de &lt;code&gt;out&lt;/code&gt; conservar&amp;aacute; su valor original. Tenga en cuenta que si se crea &lt;code&gt;out&lt;/code&gt; matriz de salida no inicializada a trav&amp;eacute;s del valor predeterminado &lt;code&gt;out=None&lt;/code&gt; , las ubicaciones dentro de ella donde la condici&amp;oacute;n es False permanecer&amp;aacute;n sin inicializar.</target>
        </trans-unit>
        <trans-unit id="ee4c6c49dffb551e0984368af8f98c122bd3ccfb" translate="yes" xml:space="preserve">
          <source>This constructor can be compared to &lt;code&gt;empty&lt;/code&gt;: it creates a new record array but does not fill it with data. To create a record array from data, use one of the following methods:</source>
          <target state="translated">Este constructor se puede comparar con &lt;code&gt;empty&lt;/code&gt; : crea una nueva matriz de registros pero no la llena con datos. Para crear una matriz de registros a partir de datos, utilice uno de los siguientes m&amp;eacute;todos:</target>
        </trans-unit>
        <trans-unit id="33c942d2092f2a81aa60d19a082d10077f5b892d" translate="yes" xml:space="preserve">
          <source>This constructor creates the array, using &lt;code&gt;buffer&lt;/code&gt; (with &lt;code&gt;offset&lt;/code&gt; and &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.strides.html#numpy.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt;) if it is not &lt;code&gt;None&lt;/code&gt;. If &lt;code&gt;buffer&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, then constructs a new array with &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.strides.html#numpy.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; in &amp;ldquo;C order&amp;rdquo;, unless both &lt;code&gt;len(shape) &amp;gt;= 2&lt;/code&gt; and &lt;code&gt;order='Fortran'&lt;/code&gt;, in which case &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.strides.html#numpy.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; is in &amp;ldquo;Fortran order&amp;rdquo;.</source>
          <target state="translated">Este constructor crea la matriz, utilizando &lt;code&gt;buffer&lt;/code&gt; (con &lt;code&gt;offset&lt;/code&gt; y &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.strides.html#numpy.chararray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt; ) si no es &lt;code&gt;None&lt;/code&gt; . Si el &lt;code&gt;buffer&lt;/code&gt; es &lt;code&gt;None&lt;/code&gt; , entonces construye una nueva matriz con &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.strides.html#numpy.chararray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt; en &quot;orden C&quot;, a menos que ambos &lt;code&gt;len(shape) &amp;gt;= 2&lt;/code&gt; y &lt;code&gt;order='Fortran'&lt;/code&gt; , en cuyo caso los &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.strides.html#numpy.chararray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt; est&amp;aacute;n en &quot;orden Fortran&quot;.</target>
        </trans-unit>
        <trans-unit id="953bdd8047346bccedc501390c7ed7305dc6711a" translate="yes" xml:space="preserve">
          <source>This constructor creates the array, using &lt;code&gt;buffer&lt;/code&gt; (with &lt;code&gt;offset&lt;/code&gt; and &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt;) if it is not &lt;code&gt;None&lt;/code&gt;. If &lt;code&gt;buffer&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, then constructs a new array with &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; in &amp;ldquo;C order&amp;rdquo;, unless both &lt;code&gt;len(shape) &amp;gt;= 2&lt;/code&gt; and &lt;code&gt;order='F'&lt;/code&gt;, in which case &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; is in &amp;ldquo;Fortran order&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244906121f35fcb6808baef572df1faf5ecac2b9" translate="yes" xml:space="preserve">
          <source>This constructor creates the array, using &lt;code&gt;buffer&lt;/code&gt; (with &lt;code&gt;offset&lt;/code&gt; and &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt;) if it is not &lt;code&gt;None&lt;/code&gt;. If &lt;code&gt;buffer&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, then constructs a new array with &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; in &amp;ldquo;C order&amp;rdquo;, unless both &lt;code&gt;len(shape) &amp;gt;= 2&lt;/code&gt; and &lt;code&gt;order='Fortran'&lt;/code&gt;, in which case &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; is in &amp;ldquo;Fortran order&amp;rdquo;.</source>
          <target state="translated">Este constructor crea la matriz, utilizando &lt;code&gt;buffer&lt;/code&gt; (con &lt;code&gt;offset&lt;/code&gt; y &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt; ) si no es &lt;code&gt;None&lt;/code&gt; . Si el &lt;code&gt;buffer&lt;/code&gt; es &lt;code&gt;None&lt;/code&gt; , entonces construye una nueva matriz con &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt; en &quot;orden C&quot;, a menos que ambos &lt;code&gt;len(shape) &amp;gt;= 2&lt;/code&gt; y &lt;code&gt;order='Fortran'&lt;/code&gt; , en cuyo caso los &lt;a href=&quot;numpy.char.chararray.strides#numpy.char.chararray.strides&quot;&gt; &lt;code&gt;strides&lt;/code&gt; &lt;/a&gt; est&amp;aacute;n en &quot;orden Fortran&quot;.</target>
        </trans-unit>
        <trans-unit id="472735a82ef7af1ec4165da8f5b7c128444159de" translate="yes" xml:space="preserve">
          <source>This constructor creates the array, using &lt;code&gt;buffer&lt;/code&gt; (with &lt;code&gt;offset&lt;/code&gt; and &lt;a href=&quot;numpy.chararray.strides#numpy.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt;) if it is not &lt;code&gt;None&lt;/code&gt;. If &lt;code&gt;buffer&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, then constructs a new array with &lt;a href=&quot;numpy.chararray.strides#numpy.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; in &amp;ldquo;C order&amp;rdquo;, unless both &lt;code&gt;len(shape) &amp;gt;= 2&lt;/code&gt; and &lt;code&gt;order='F'&lt;/code&gt;, in which case &lt;a href=&quot;numpy.chararray.strides#numpy.chararray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; is in &amp;ldquo;Fortran order&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eee032d6ea1636789f057c08bed3526280036b" translate="yes" xml:space="preserve">
          <source>This could then be registered to convert doubles to floats using the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5986918bf935c1ed16d4421ab17b1ade1eafe40" translate="yes" xml:space="preserve">
          <source>This declares that the corresponding argument depends on the values of variables in the list &lt;code&gt;&amp;lt;names&amp;gt;&lt;/code&gt;. For example, &lt;code&gt;&amp;lt;init_expr&amp;gt;&lt;/code&gt; may use the values of other arguments. Using information given by &lt;code&gt;depend(..)&lt;/code&gt; attributes, F2PY ensures that arguments are initialized in a proper order. If &lt;code&gt;depend(..)&lt;/code&gt; attribute is not used then F2PY determines dependence relations automatically. Use &lt;code&gt;depend()&lt;/code&gt; to disable dependence relations generated by F2PY.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c221f7f1dff9c4b5017181532f28da44b16fcb82" translate="yes" xml:space="preserve">
          <source>This decorator can be used to filter DeprecationWarning&amp;rsquo;s, to avoid printing them during the test suite run, while checking that the test actually raises a DeprecationWarning.</source>
          <target state="translated">Este decorador se puede utilizar para filtrar DeprecationWarning, para evitar imprimirlos durante la ejecuci&amp;oacute;n del conjunto de pruebas, mientras se comprueba que la prueba realmente genera un DeprecationWarning.</target>
        </trans-unit>
        <trans-unit id="50d52a319d15baa1479e649a743cee7e5d09023b" translate="yes" xml:space="preserve">
          <source>This decorator can&amp;rsquo;t use the nose namespace, because it can be called from a non-test module. See also &lt;code&gt;istest&lt;/code&gt; and &lt;code&gt;nottest&lt;/code&gt; in &lt;code&gt;nose.tools&lt;/code&gt;.</source>
          <target state="translated">Este decorador no puede usar el espacio de nombres nose, porque se puede llamar desde un m&amp;oacute;dulo que no es de prueba. Consulte tambi&amp;eacute;n &lt;code&gt;istest&lt;/code&gt; y &lt;code&gt;nottest&lt;/code&gt; en &lt;code&gt;nose.tools&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67fd7e1d7456c74a698475b7f144fadff01137fb" translate="yes" xml:space="preserve">
          <source>This default iterator selects a sub-array of dimension</source>
          <target state="translated">Este iterador predeterminado selecciona un subconjunto de dimensiones</target>
        </trans-unit>
        <trans-unit id="cfb9c1da992a1d1aaddfb397e6c91ff1039b17da" translate="yes" xml:space="preserve">
          <source>This default threshold is designed to detect rank deficiency accounting for the numerical errors of the SVD computation. Imagine that there is a column in &lt;code&gt;M&lt;/code&gt; that is an exact (in floating point) linear combination of other columns in &lt;code&gt;M&lt;/code&gt;. Computing the SVD on &lt;code&gt;M&lt;/code&gt; will not produce a singular value exactly equal to 0 in general: any difference of the smallest SVD value from 0 will be caused by numerical imprecision in the calculation of the SVD. Our threshold for small SVD values takes this numerical imprecision into account, and the default threshold will detect such numerical rank deficiency. The threshold may declare a matrix &lt;code&gt;M&lt;/code&gt; rank deficient even if the linear combination of some columns of &lt;code&gt;M&lt;/code&gt; is not exactly equal to another column of &lt;code&gt;M&lt;/code&gt; but only numerically very close to another column of &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">Este umbral predeterminado est&amp;aacute; dise&amp;ntilde;ado para detectar la deficiencia de rango teniendo en cuenta los errores num&amp;eacute;ricos del c&amp;aacute;lculo de la SVD. Imagine que hay una columna en &lt;code&gt;M&lt;/code&gt; que es una exacta (en coma flotante) lineal combinaci&amp;oacute;n de otras columnas de &lt;code&gt;M&lt;/code&gt; . Calcular la SVD en &lt;code&gt;M&lt;/code&gt; no producir&amp;aacute; un valor singular exactamente igual a 0 en general: cualquier diferencia entre el valor m&amp;aacute;s peque&amp;ntilde;o de SVD y 0 ser&amp;aacute; causada por imprecisi&amp;oacute;n num&amp;eacute;rica en el c&amp;aacute;lculo de la SVD. Nuestro umbral para valores peque&amp;ntilde;os de SVD tiene en cuenta esta imprecisi&amp;oacute;n num&amp;eacute;rica, y el umbral predeterminado detectar&amp;aacute; dicha deficiencia de rango num&amp;eacute;rico. El umbral puede declarar un rango de matriz &lt;code&gt;M&lt;/code&gt; deficiente incluso si la combinaci&amp;oacute;n lineal de algunas columnas de &lt;code&gt;M&lt;/code&gt; no es exactamente igual a otra columna de &lt;code&gt;M&lt;/code&gt; pero s&amp;oacute;lo num&amp;eacute;ricamente muy cerca de otra columna de &lt;code&gt;M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0285819f9fc91ea6c1e91e579241c01b00956ba" translate="yes" xml:space="preserve">
          <source>This design was retracted almost immediately after it was proposed, in &amp;lt;&lt;a href=&quot;https://mail.python.org/pipermail/numpy-discussion/2006-June/020995.html&quot;&gt;https://mail.python.org/pipermail/numpy-discussion/2006-June/020995.html&lt;/a&gt;&amp;gt;. Despite 14 years of documentation to the contrary, at no point was it valid to assume that &lt;code&gt;__array_interface__&lt;/code&gt; capsules held this tuple content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6968499a16ad7614bdea90ae8f3aad570e0c60e" translate="yes" xml:space="preserve">
          <source>This document describes the syntax and best practices for docstrings used with the numpydoc extension for &lt;a href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45b65ecc52b644a63152b28ad1bde6a3a5e1f70" translate="yes" xml:space="preserve">
          <source>This document gives coding conventions for the C code comprising the C implementation of NumPy. Note, rules are there to be broken. Two good reasons to break a particular rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3b557b3201940ffcbe7e57b7ac3945729bb630" translate="yes" xml:space="preserve">
          <source>This document itself was written in ReStructuredText. &lt;a href=&quot;#example&quot;&gt;An example&lt;/a&gt; of the format shown here is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2007e99c49141c98bee8b2f4b8b703b1ff66930c" translate="yes" xml:space="preserve">
          <source>This does not compute the usual correlation: if op2 is larger than op1, the arguments are swapped, and the conjugate is never taken for complex arrays. See PyArray_Correlate2 for the usual signal processing correlation.</source>
          <target state="translated">Esto no computa la correlación habitual:si op2 es mayor que op1,los argumentos se intercambian,y el conjugado nunca se toma por matrices complejas.Ver PyArray_Correlate2 para la correlación habitual de procesamiento de señales.</target>
        </trans-unit>
        <trans-unit id="2ac0e7432126a7d32cb5b22ed347524b29026575" translate="yes" xml:space="preserve">
          <source>This enables the iterator to reason about data dependency, possibly avoiding unnecessary copies.</source>
          <target state="translated">Esto permite al iterador razonar sobre la dependencia de los datos,evitando posiblemente las copias innecesarias.</target>
        </trans-unit>
        <trans-unit id="fb73eae3981c0a0cbcb09d6d3ccfc761b4660a9a" translate="yes" xml:space="preserve">
          <source>This example makes use of Python 3 &lt;a href=&quot;https://docs.python.org/dev/library/concurrent.futures.html#module-concurrent.futures&quot;&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt; to fill an array using multiple threads. Threads are long-lived so that repeated calls do not require any additional overheads from thread creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3d50ffaaf1fbc724fd92676a9a6bf2dd386440" translate="yes" xml:space="preserve">
          <source>This example makes use of Python 3 &lt;a href=&quot;https://docs.python.org/dev/library/concurrent.futures.html#module-concurrent.futures&quot;&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt; to fill an array using multiple threads. Threads are long-lived so that repeated calls do not require any additional overheads from thread creation. The underlying BitGenerator is &lt;code&gt;PCG64&lt;/code&gt; which is fast, has a long period and supports using &lt;code&gt;PCG64.jumped&lt;/code&gt; to return a new generator while advancing the state. The random numbers generated are reproducible in the sense that the same seed will produce the same outputs.</source>
          <target state="translated">Este ejemplo utiliza Python 3 &lt;a href=&quot;https://docs.python.org/dev/library/concurrent.futures.html#module-concurrent.futures&quot;&gt; &lt;code&gt;concurrent.futures&lt;/code&gt; &lt;/a&gt; para llenar una matriz usando m&amp;uacute;ltiples subprocesos. Los subprocesos son de larga duraci&amp;oacute;n, por lo que las llamadas repetidas no requieren gastos generales adicionales de la creaci&amp;oacute;n del subproceso. El BitGenerator subyacente es &lt;code&gt;PCG64&lt;/code&gt; , que es r&amp;aacute;pido, tiene un per&amp;iacute;odo largo y admite el uso de &lt;code&gt;PCG64.jumped&lt;/code&gt; para devolver un nuevo generador mientras avanza el estado. Los n&amp;uacute;meros aleatorios generados son reproducibles en el sentido de que la misma semilla producir&amp;aacute; los mismos resultados.</target>
        </trans-unit>
        <trans-unit id="40004ca036e22114daf23d8e12216a484254a12b" translate="yes" xml:space="preserve">
          <source>This example shows how &lt;code&gt;converters&lt;/code&gt; can be used to convert a field with a trailing minus sign into a negative number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b788d751d6a8b5a6ea3f2e12485a26037e6ed998" translate="yes" xml:space="preserve">
          <source>This example shows how numba can be used to produce Box-Muller normals using a pure Python implementation which is then compiled. The random numbers are provided by &lt;code&gt;ctypes.next_double&lt;/code&gt;.</source>
          <target state="translated">Este ejemplo muestra c&amp;oacute;mo se puede usar numba para producir normales de Box-Muller usando una implementaci&amp;oacute;n pura de Python que luego se compila. Los n&amp;uacute;meros aleatorios los proporciona &lt;code&gt;ctypes.next_double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c43d650067bf3f7811ad3426eb67449ba8f8d778" translate="yes" xml:space="preserve">
          <source>This example shows how numba can be used to produce gaussian samples using a pure Python implementation which is then compiled. The random numbers are provided by &lt;code&gt;ctypes.next_double&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f8a7f3cdbbf2fa9d3bdab5400251540901f919" translate="yes" xml:space="preserve">
          <source>This example shows how to create a ufunc for a structured array dtype. For the example we show a trivial ufunc for adding two arrays with dtype &amp;lsquo;u8,u8,u8&amp;rsquo;. The process is a bit different from the other examples since a call to &lt;a href=&quot;../reference/c-api/ufunc#c.PyUFunc_FromFuncAndData&quot;&gt;&lt;code&gt;PyUFunc_FromFuncAndData&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t fully register ufuncs for custom dtypes and structured array dtypes. We need to also call &lt;a href=&quot;../reference/c-api/ufunc#c.PyUFunc_RegisterLoopForDescr&quot;&gt;&lt;code&gt;PyUFunc_RegisterLoopForDescr&lt;/code&gt;&lt;/a&gt; to finish setting up the ufunc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7280fcf983a91daf5dc16e89c6643dc47e38c1" translate="yes" xml:space="preserve">
          <source>This example shows that a negative value can be returned when the input is an array of signed integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15659709a5e32bf1f77ae2078941bf91dc0f1586" translate="yes" xml:space="preserve">
          <source>This example uses a temporary file so that doctest doesn&amp;rsquo;t write files to your directory. You would use a &amp;lsquo;normal&amp;rsquo; filename.</source>
          <target state="translated">Este ejemplo usa un archivo temporal para que doctest no escriba archivos en su directorio. Usar&amp;iacute;a un nombre de archivo &quot;normal&quot;.</target>
        </trans-unit>
        <trans-unit id="c6a6109259025b3790be906b9d5fd08b4a7ddd22" translate="yes" xml:space="preserve">
          <source>This explanation of &lt;code&gt;fmt&lt;/code&gt; is not complete, for an exhaustive specification see &lt;a href=&quot;#r672d4d5b6143-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">Esta explicaci&amp;oacute;n de &lt;code&gt;fmt&lt;/code&gt; no est&amp;aacute; completa, para una especificaci&amp;oacute;n exhaustiva ver &lt;a href=&quot;#r672d4d5b6143-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6f060f066c80d886f242a9ad00dc6b69ec16949" translate="yes" xml:space="preserve">
          <source>This feature lets you make local decisions about when and how to split up streams without coordination between processes. You do not have to preallocate space to avoid overlapping or request streams from a common global service. This general &amp;ldquo;tree-hashing&amp;rdquo; scheme is &lt;a href=&quot;https://www.iro.umontreal.ca/~lecuyer/myftp/papers/parallel-rng-imacs.pdf&quot;&gt;not unique to numpy&lt;/a&gt; but not yet widespread. Python has increasingly-flexible mechanisms for parallelization available, and this scheme fits in very well with that kind of use.</source>
          <target state="translated">Esta funci&amp;oacute;n le permite tomar decisiones locales sobre cu&amp;aacute;ndo y c&amp;oacute;mo dividir los flujos sin coordinaci&amp;oacute;n entre procesos. No es necesario que asigne previamente espacio para evitar la superposici&amp;oacute;n o solicitar transmisiones de un servicio global com&amp;uacute;n. Este esquema general de &quot;hash de &amp;aacute;rbol&quot; &lt;a href=&quot;https://www.iro.umontreal.ca/~lecuyer/myftp/papers/parallel-rng-imacs.pdf&quot;&gt;no&lt;/a&gt; es exclusivo de numpy, pero a&amp;uacute;n no est&amp;aacute; muy extendido. Python tiene disponibles mecanismos cada vez m&amp;aacute;s flexibles para la paralelizaci&amp;oacute;n, y este esquema encaja muy bien con ese tipo de uso.</target>
        </trans-unit>
        <trans-unit id="1eaab0e05e888941195d61599512548e7a521f9d" translate="yes" xml:space="preserve">
          <source>This file contains a walkthrough of the NumPy 1.14.5 release on Linux, modified for building on azure and uploading to anaconda.org The commands can be copied into the command line, but be sure to replace 1.14.5 by the correct version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7f900d77aa58f2ad5d408dd151ca95c6ec2123" translate="yes" xml:space="preserve">
          <source>This file contains a walkthrough of the NumPy 1.19.0 release on Linux, modified for building on azure and uploading to anaconda.org The commands can be copied into the command line, but be sure to replace 1.19.0 by the correct version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd2bf0596d8530c916e2a9e88d889eff818ebc6" translate="yes" xml:space="preserve">
          <source>This file gives an overview of what is necessary to build binary releases for NumPy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482a4249cfca9480f9fad090626bdeb4f2b9945b" translate="yes" xml:space="preserve">
          <source>This file is installed to the package installation directory.</source>
          <target state="translated">Este archivo se instala en el directorio de instalación del paquete.</target>
        </trans-unit>
        <trans-unit id="53df6470e0b1cc077e937e47a1974181b9abe4c8" translate="yes" xml:space="preserve">
          <source>This flag can only be used with &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#c.NPY_ITER_BUFFERED&quot;&gt;&lt;code&gt;NPY_ITER_BUFFERED&lt;/code&gt;&lt;/a&gt; is enabled. This is because without buffering, the inner loop is always the size of the innermost iteration dimension, and allowing it to get cut up would require special handling, effectively making it more like the buffered version.</source>
          <target state="translated">Esta bandera solo se puede usar con &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; &lt;/a&gt; cuando &lt;a href=&quot;#c.NPY_ITER_BUFFERED&quot;&gt; &lt;code&gt;NPY_ITER_BUFFERED&lt;/code&gt; &lt;/a&gt; est&amp;aacute; habilitado. Esto se debe a que sin almacenamiento en b&amp;uacute;fer, el bucle interno siempre es del tama&amp;ntilde;o de la dimensi&amp;oacute;n de iteraci&amp;oacute;n m&amp;aacute;s interna, y permitir que se corte requerir&amp;iacute;a un manejo especial, lo que lo hace m&amp;aacute;s parecido a la versi&amp;oacute;n en b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="b15ae805eec5e668ba73f9b0b01c1bc16e63444d" translate="yes" xml:space="preserve">
          <source>This flag has effect only if &lt;code&gt;NPY_ITER_COPY_IF_OVERLAP&lt;/code&gt; is enabled on the iterator.</source>
          <target state="translated">Esta bandera tiene efecto solo si &lt;code&gt;NPY_ITER_COPY_IF_OVERLAP&lt;/code&gt; est&amp;aacute; habilitado en el iterador.</target>
        </trans-unit>
        <trans-unit id="9da2bfdfbda0e7663b5a969172c32a000741b205" translate="yes" xml:space="preserve">
          <source>This flag is incompatible with &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta bandera es incompatible con &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#c.NPY_ITER_MULTI_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_MULTI_INDEX&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f18364f6e6e63625675c7a8e617237459cb62263" translate="yes" xml:space="preserve">
          <source>This flag is true if the underlying array is &lt;a href=&quot;array#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;. It is used to simplify calculations when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dded0adeb2bd9373f814af71190afe223e5d417b" translate="yes" xml:space="preserve">
          <source>This flag is true if the underlying array is &lt;a href=&quot;c-api.array#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt;. It is used to simplify calculations when possible.</source>
          <target state="translated">Esta bandera es verdadera si la matriz subyacente es &lt;a href=&quot;c-api.array#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt; &lt;/a&gt; . Se utiliza para simplificar los c&amp;aacute;lculos cuando sea posible.</target>
        </trans-unit>
        <trans-unit id="8bd5458653c4b0d4b9801dcf72f3813b331fc2dd" translate="yes" xml:space="preserve">
          <source>This flag is useful for arrays that must be in C-contiguous order and aligned. These kinds of arrays are usually input arrays for some algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174700adc5b2ef69a266d85c159fde8b55bae281" translate="yes" xml:space="preserve">
          <source>This flag is useful to specify an array that is in C-contiguous order, is aligned, and can be written to as well. Such an array is usually returned as output (although normally such output arrays are created from scratch).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5677601b0eb842974f94991fa89b82f29f0accae" translate="yes" xml:space="preserve">
          <source>This flag is useful to specify an array that will be used for both input and output. &lt;a href=&quot;../reference/c-api/array#c.PyArray_ResolveWritebackIfCopy&quot;&gt;&lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt;&lt;/a&gt; must be called before &lt;a href=&quot;https://docs.python.org/dev/c-api/refcounting.html#c.Py_DECREF&quot;&gt;&lt;code&gt;Py_DECREF&lt;/code&gt;&lt;/a&gt; at the end of the interface routine to write back the temporary data into the original array passed in. Use of the &lt;a href=&quot;../reference/c-api/array#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/c-api/array#c.NPY_ARRAY_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt; flags requires that the input object is already an array (because other objects cannot be automatically updated in this fashion). If an error occurs use &lt;a href=&quot;../reference/c-api/array#c.PyArray_DiscardWritebackIfCopy&quot;&gt;&lt;code&gt;PyArray_DiscardWritebackIfCopy&lt;/code&gt;&lt;/a&gt; (obj) on an array with these flags set. This will set the underlying base array writable without causing the contents to be copied back into the original array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07be9168d02cb1629420a221f75d6ebada0e23c" translate="yes" xml:space="preserve">
          <source>This flag only affects writing from the buffer back to the array. This means that if the operand is also &lt;a href=&quot;#c.NPY_ITER_READWRITE&quot;&gt;&lt;code&gt;NPY_ITER_READWRITE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_WRITEONLY&quot;&gt;&lt;code&gt;NPY_ITER_WRITEONLY&lt;/code&gt;&lt;/a&gt;, code doing iteration can write to this operand to control which elements will be untouched and which ones will be modified. This is useful when the mask should be a combination of input masks.</source>
          <target state="translated">Esta bandera solo afecta la escritura desde el b&amp;uacute;fer de vuelta a la matriz. Esto significa que si el operando tambi&amp;eacute;n es &lt;a href=&quot;#c.NPY_ITER_READWRITE&quot;&gt; &lt;code&gt;NPY_ITER_READWRITE&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#c.NPY_ITER_WRITEONLY&quot;&gt; &lt;code&gt;NPY_ITER_WRITEONLY&lt;/code&gt; &lt;/a&gt; , el c&amp;oacute;digo que realiza la iteraci&amp;oacute;n puede escribir en este operando para controlar qu&amp;eacute; elementos quedar&amp;aacute;n intactos y cu&amp;aacute;les ser&amp;aacute;n modificados. Esto es &amp;uacute;til cuando la m&amp;aacute;scara debe ser una combinaci&amp;oacute;n de m&amp;aacute;scaras de entrada.</target>
        </trans-unit>
        <trans-unit id="61e9f59feb262d0f073bfa393f7c68aa5599a46b" translate="yes" xml:space="preserve">
          <source>This form also makes it possible to specify struct dtypes with overlapping fields, functioning like the &amp;lsquo;union&amp;rsquo; type in C. This usage is discouraged, however, and the union mechanism is preferred.</source>
          <target state="translated">Esta forma tambi&amp;eacute;n hace posible especificar tipos de estructura con campos superpuestos, funcionando como el tipo 'uni&amp;oacute;n' en C. Sin embargo, este uso no se recomienda y se prefiere el mecanismo de uni&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0d302c80ebc9e23237f250ea17213abaf97a46db" translate="yes" xml:space="preserve">
          <source>This form is discouraged because Python dictionaries do not preserve order in Python versions before Python 3.6, and the order of the fields in a structured dtype has meaning. &lt;a href=&quot;#titles&quot;&gt;Field Titles&lt;/a&gt; may be specified by using a 3-tuple, see below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee7324318b68cf58364fb2712f6b7aa7bb3937e" translate="yes" xml:space="preserve">
          <source>This forms part of the old polynomial API. Since version 1.4, the new polynomial API defined in &lt;a href=&quot;../routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt; is preferred. A summary of the differences can be found in the &lt;a href=&quot;../routines.polynomials&quot;&gt;transition guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ceb45713d06ac7d3696f87a18d50201d0b6641" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;steals a reference&lt;/strong&gt; to &lt;code&gt;obj&lt;/code&gt; and sets it as the base property of &lt;code&gt;arr&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;roba una referencia&lt;/strong&gt; a &lt;code&gt;obj&lt;/code&gt; y la establece como propiedad base de &lt;code&gt;arr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d09c0732b811d51b99b90004b51ceb77de43b711" translate="yes" xml:space="preserve">
          <source>This function &lt;strong&gt;steals a reference&lt;/strong&gt; to &lt;code&gt;op&lt;/code&gt; and makes sure that &lt;code&gt;op&lt;/code&gt; is a base-class ndarray. It special cases array scalars, but otherwise calls &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; ( &lt;code&gt;op&lt;/code&gt;, NULL, 0, 0, &lt;a href=&quot;#c.NPY_ARRAY_ENSUREARRAY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSUREARRAY&lt;/code&gt;&lt;/a&gt;, NULL).</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;strong&gt;roba una referencia&lt;/strong&gt; a &lt;code&gt;op&lt;/code&gt; y se asegura de que &lt;code&gt;op&lt;/code&gt; sea ​​un ndarray de clase base. Es un caso especial de escalares de matriz, pero de lo contrario llama a &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;op&lt;/code&gt; , NULL, 0, 0, &lt;a href=&quot;#c.NPY_ARRAY_ENSUREARRAY&quot;&gt; &lt;code&gt;NPY_ARRAY_ENSUREARRAY&lt;/code&gt; &lt;/a&gt; , NULL).</target>
        </trans-unit>
        <trans-unit id="39a0c64e238756c013e69a01cf344f4e1849a8a1" translate="yes" xml:space="preserve">
          <source>This function accepts but discards arguments &lt;code&gt;bias&lt;/code&gt; and &lt;code&gt;ddof&lt;/code&gt;. This is for backwards compatibility with previous versions of this function. These arguments had no effect on the return values of the function and can be safely ignored in this and previous versions of numpy.</source>
          <target state="translated">Esta funci&amp;oacute;n acepta pero descarta el &lt;code&gt;bias&lt;/code&gt; argumentos y &lt;code&gt;ddof&lt;/code&gt; . Esto es por compatibilidad con versiones anteriores de esta funci&amp;oacute;n. Estos argumentos no tuvieron ning&amp;uacute;n efecto en los valores de retorno de la funci&amp;oacute;n y se pueden ignorar con seguridad en esta y versiones anteriores de numpy.</target>
        </trans-unit>
        <trans-unit id="f2fa4598ed049a537ca6f0801826008a1fe6bde0" translate="yes" xml:space="preserve">
          <source>This function aims to be a fast reader for simply formatted files. The &lt;a href=&quot;numpy.genfromtxt#numpy.genfromtxt&quot;&gt;&lt;code&gt;genfromtxt&lt;/code&gt;&lt;/a&gt; function provides more sophisticated handling of, e.g., lines with missing values.</source>
          <target state="translated">Esta funci&amp;oacute;n tiene como objetivo ser un lector r&amp;aacute;pido de archivos con formato simple. La funci&amp;oacute;n &lt;a href=&quot;numpy.genfromtxt#numpy.genfromtxt&quot;&gt; &lt;code&gt;genfromtxt&lt;/code&gt; &lt;/a&gt; proporciona un manejo m&amp;aacute;s sofisticado de, por ejemplo, l&amp;iacute;neas con valores perdidos.</target>
        </trans-unit>
        <trans-unit id="ff21c5d7fbe80ce59f5b300cd13fc6a4fc144e9d" translate="yes" xml:space="preserve">
          <source>This function allows one set of bins to be computed, and reused across multiple histograms:</source>
          <target state="translated">Esta función permite calcular un conjunto de contenedores y reutilizarlos en múltiples histogramas:</target>
        </trans-unit>
        <trans-unit id="8a2a88415c2050cb4cd9564db4ec54b1d4908d16" translate="yes" xml:space="preserve">
          <source>This function allows the user to register a 1-d loop with an already- created ufunc to be used whenever the ufunc is called with any of its input arguments as the user-defined data-type. This is needed in order to make ufuncs work with built-in data-types. The data-type must have been previously registered with the numpy system. The loop is passed in as &lt;em&gt;function&lt;/em&gt;. This loop can take arbitrary data which should be passed in as &lt;em&gt;data&lt;/em&gt;. The data-types the loop requires are passed in as &lt;em&gt;arg_types&lt;/em&gt; which must be a pointer to memory at least as large as ufunc-&amp;gt;nargs.</source>
          <target state="translated">Esta funci&amp;oacute;n permite al usuario registrar un bucle 1-d con un ufunc ya creado para usarlo siempre que se llame al ufunc con cualquiera de sus argumentos de entrada como el tipo de datos definido por el usuario. Esto es necesario para que ufuncs funcione con tipos de datos integrados. El tipo de datos debe haber sido registrado previamente con el sistema numpy. El bucle se pasa como &lt;em&gt;funci&amp;oacute;n&lt;/em&gt; . Este bucle puede tomar datos arbitrarios que deben pasarse como &lt;em&gt;datos&lt;/em&gt; . Los tipos de datos que requiere el bucle se pasan como &lt;em&gt;arg_types,&lt;/em&gt; que deben ser un puntero a la memoria al menos tan grande como ufunc-&amp;gt; nargs.</target>
        </trans-unit>
        <trans-unit id="f1576babab462c2253d07a719792b0ff878bb525" translate="yes" xml:space="preserve">
          <source>This function allows you to alter the tp_str and tp_repr methods of the array object to any Python function. Thus you can alter what happens for all arrays when str(arr) or repr(arr) is called from Python. The function to be called is passed in as &lt;em&gt;op&lt;/em&gt;. If &lt;em&gt;repr&lt;/em&gt; is non-zero, then this function will be called in response to repr(arr), otherwise the function will be called in response to str(arr). No check on whether or not &lt;em&gt;op&lt;/em&gt; is callable is performed. The callable passed in to &lt;em&gt;op&lt;/em&gt; should expect an array argument and should return a string to be printed.</source>
          <target state="translated">Esta funci&amp;oacute;n le permite alterar los m&amp;eacute;todos tp_str y tp_repr del objeto de matriz a cualquier funci&amp;oacute;n de Python. Por lo tanto, puede alterar lo que sucede para todas las matrices cuando se llama a str (arr) o repr (arr) desde Python. La funci&amp;oacute;n a llamar se pasa como &lt;em&gt;op&lt;/em&gt; . Si &lt;em&gt;repr&lt;/em&gt; es distinto de cero, esta funci&amp;oacute;n se llamar&amp;aacute; en respuesta a repr (arr); de lo contrario, la funci&amp;oacute;n se llamar&amp;aacute; en respuesta a str (arr). No se realiza ninguna comprobaci&amp;oacute;n sobre si &lt;em&gt;op&lt;/em&gt; es invocable o no . El invocable pasado a &lt;em&gt;op&lt;/em&gt; deber&amp;iacute;a esperar un argumento de matriz y deber&amp;iacute;a devolver una cadena para ser impresa.</target>
        </trans-unit>
        <trans-unit id="3bb2d31f5b88cf1b316b3ceb02135e04993b15e9" translate="yes" xml:space="preserve">
          <source>This function assigns from the old to the new array by name, so the value of a field in the output array is the value of the field with the same name in the source array. This has the effect of creating a new ndarray containing only the fields &amp;ldquo;required&amp;rdquo; by the required_dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c8f95658bf6b7edc09d3adda4d0c4816cea136" translate="yes" xml:space="preserve">
          <source>This function behaves like PyUFunc_RegisterLoopForType above, except that it allows the user to register a 1-d loop using PyArray_Descr objects instead of dtype type num values. This allows a 1-d loop to be registered for structured array data-dtypes and custom data-types instead of scalar data-types.</source>
          <target state="translated">Esta función se comporta como el PyUFunc_RegisterLoopForType anterior,excepto que permite al usuario registrar un bucle 1-d usando objetos PyArray_Descr en lugar de valores numéricos de tipo dtype.Esto permite registrar un bucle 1-d para datos-tipo de matriz estructurada y datos-tipo personalizados en lugar de datos-tipo escalares.</target>
        </trans-unit>
        <trans-unit id="e6245a8e454db1361715a92d11f03ae0bff098bc" translate="yes" xml:space="preserve">
          <source>This function can be exponentially slow for some inputs, unless &lt;code&gt;max_work&lt;/code&gt; is set to a finite number or &lt;code&gt;MAY_SHARE_BOUNDS&lt;/code&gt;. If in doubt, use &lt;a href=&quot;numpy.may_share_memory#numpy.may_share_memory&quot;&gt;&lt;code&gt;numpy.may_share_memory&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ac25efd0c9fb7e70f813509afc2d6139c57b07" translate="yes" xml:space="preserve">
          <source>This function changes the fill value of the masked array &lt;code&gt;a&lt;/code&gt; in place. If &lt;code&gt;a&lt;/code&gt; is not a masked array, the function returns silently, without doing anything.</source>
          <target state="translated">Esta funci&amp;oacute;n cambia el valor de relleno de la matriz enmascarada &lt;code&gt;a&lt;/code&gt; en su lugar. Si &lt;code&gt;a&lt;/code&gt; no es una matriz enmascarada, la funci&amp;oacute;n regresa silenciosamente, sin hacer nada.</target>
        </trans-unit>
        <trans-unit id="dc2a1bc44c01911d64ceae9284770c887ff15ab1" translate="yes" xml:space="preserve">
          <source>This function checks to see if &lt;em&gt;arr&lt;/em&gt; is a 0-dimensional array and, if so, returns the appropriate array scalar. It should be used whenever 0-dimensional arrays could be returned to Python.</source>
          <target state="translated">Esta funci&amp;oacute;n comprueba si &lt;em&gt;arr&lt;/em&gt; es una matriz de dimensi&amp;oacute;n 0 y, si es as&amp;iacute;, devuelve el escalar de matriz apropiado. Debe usarse siempre que se puedan devolver matrices de dimensi&amp;oacute;n 0 a Python.</target>
        </trans-unit>
        <trans-unit id="6e0d86a376dbbcdcd20b9ab0ced8ac2eae8ffe8a" translate="yes" xml:space="preserve">
          <source>This function computes the &lt;em&gt;N&lt;/em&gt;-dimensional discrete Fourier Transform over any number of axes in an &lt;em&gt;M&lt;/em&gt;-dimensional array by means of the Fast Fourier Transform (FFT).</source>
          <target state="translated">Esta funci&amp;oacute;n calcula la Transformada de Fourier discreta &lt;em&gt;N&lt;/em&gt; -dimensional sobre cualquier n&amp;uacute;mero de ejes en una matriz &lt;em&gt;M&lt;/em&gt; -dimensional por medio de la Transformada R&amp;aacute;pida de Fourier (FFT).</target>
        </trans-unit>
        <trans-unit id="f34d917f1e7128a56a07b81dc929875f904b8a8c" translate="yes" xml:space="preserve">
          <source>This function computes the &lt;em&gt;n&lt;/em&gt;-dimensional discrete Fourier Transform over any axes in an &lt;em&gt;M&lt;/em&gt;-dimensional array by means of the Fast Fourier Transform (FFT). By default, the transform is computed over the last two axes of the input array, i.e., a 2-dimensional FFT.</source>
          <target state="translated">Esta funci&amp;oacute;n calcula la Transformada de Fourier discreta &lt;em&gt;n-&lt;/em&gt; dimensional sobre cualquier eje en una matriz &lt;em&gt;M-&lt;/em&gt; dimensional por medio de la Transformada R&amp;aacute;pida de Fourier (FFT). Por defecto, la transformaci&amp;oacute;n se calcula sobre los dos &amp;uacute;ltimos ejes de la matriz de entrada, es decir, una FFT bidimensional.</target>
        </trans-unit>
        <trans-unit id="b8915bccc6bfc2e5b959f002fb985788d011a64f" translate="yes" xml:space="preserve">
          <source>This function computes the N-dimensional discrete Fourier Transform over any number of axes in an M-dimensional real array by means of the Fast Fourier Transform (FFT). By default, all axes are transformed, with the real transform performed over the last axis, while the remaining transforms are complex.</source>
          <target state="translated">Esta función calcula la Transformada de Fourier discreta N-dimensional sobre cualquier número de ejes en una matriz real M-dimensional por medio de la Transformada rápida de Fourier (FFT).Por defecto,todos los ejes se transforman,con la transformación real realizada sobre el último eje,mientras que las transformaciones restantes son complejas.</target>
        </trans-unit>
        <trans-unit id="b8c7b22438d176337766fd2e49c4b7cfc3e07bab" translate="yes" xml:space="preserve">
          <source>This function computes the correlation as generally defined in signal processing texts:</source>
          <target state="translated">Esta función calcula la correlación como se define generalmente en los textos de procesamiento de señales:</target>
        </trans-unit>
        <trans-unit id="cd6ec7a4da9a308e6c6acab0d22d9735b9865d50" translate="yes" xml:space="preserve">
          <source>This function computes the inverse of the 2-dimensional discrete Fourier Transform over any number of axes in an M-dimensional array by means of the Fast Fourier Transform (FFT). In other words, &lt;code&gt;ifft2(fft2(a)) == a&lt;/code&gt; to within numerical accuracy. By default, the inverse transform is computed over the last two axes of the input array.</source>
          <target state="translated">Esta funci&amp;oacute;n calcula el inverso de la Transformada de Fourier discreta bidimensional sobre cualquier n&amp;uacute;mero de ejes en una matriz M-dimensional por medio de la Transformada R&amp;aacute;pida de Fourier (FFT). En otras palabras, &lt;code&gt;ifft2(fft2(a)) == a&lt;/code&gt; a dentro de la precisi&amp;oacute;n num&amp;eacute;rica. De forma predeterminada, la transformaci&amp;oacute;n inversa se calcula sobre los dos &amp;uacute;ltimos ejes de la matriz de entrada.</target>
        </trans-unit>
        <trans-unit id="1a4ebaf525beaf877d17151690d3a34bb9c59baf" translate="yes" xml:space="preserve">
          <source>This function computes the inverse of the N-dimensional discrete Fourier Transform for real input over any number of axes in an M-dimensional array by means of the Fast Fourier Transform (FFT). In other words, &lt;code&gt;irfftn(rfftn(a), a.shape) == a&lt;/code&gt; to within numerical accuracy. (The &lt;code&gt;a.shape&lt;/code&gt; is necessary like &lt;code&gt;len(a)&lt;/code&gt; is for &lt;a href=&quot;numpy.fft.irfft#numpy.fft.irfft&quot;&gt;&lt;code&gt;irfft&lt;/code&gt;&lt;/a&gt;, and for the same reason.)</source>
          <target state="translated">Esta funci&amp;oacute;n calcula el inverso de la Transformada de Fourier discreta N-dimensional para la entrada real sobre cualquier n&amp;uacute;mero de ejes en una matriz M-dimensional por medio de la Transformada R&amp;aacute;pida de Fourier (FFT). En otras palabras, &lt;code&gt;irfftn(rfftn(a), a.shape) == a&lt;/code&gt; a dentro de la precisi&amp;oacute;n num&amp;eacute;rica. (La &lt;code&gt;a.shape&lt;/code&gt; Es necesaria como &lt;code&gt;len(a)&lt;/code&gt; es para &lt;a href=&quot;numpy.fft.irfft#numpy.fft.irfft&quot;&gt; &lt;code&gt;irfft&lt;/code&gt; &lt;/a&gt; , y por la misma raz&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="0c7a0cee522d4ce9c957b628834b82e1d28defa5" translate="yes" xml:space="preserve">
          <source>This function computes the inverse of the N-dimensional discrete Fourier Transform over any number of axes in an M-dimensional array by means of the Fast Fourier Transform (FFT). In other words, &lt;code&gt;ifftn(fftn(a)) == a&lt;/code&gt; to within numerical accuracy. For a description of the definitions and conventions used, see &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n calcula el inverso de la Transformada de Fourier discreta N-dimensional sobre cualquier n&amp;uacute;mero de ejes en una matriz M-dimensional por medio de la Transformada R&amp;aacute;pida de Fourier (FFT). En otras palabras, &lt;code&gt;ifftn(fftn(a)) == a&lt;/code&gt; a dentro de la precisi&amp;oacute;n num&amp;eacute;rica. Para obtener una descripci&amp;oacute;n de las definiciones y convenciones utilizadas, consulte &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2f9d73633ea8b8eb82a0685fcd08ea3505d9a66" translate="yes" xml:space="preserve">
          <source>This function computes the inverse of the one-dimensional &lt;em&gt;n&lt;/em&gt;-point discrete Fourier Transform of real input computed by &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt;&lt;code&gt;rfft&lt;/code&gt;&lt;/a&gt;. In other words, &lt;code&gt;irfft(rfft(a), len(a)) == a&lt;/code&gt; to within numerical accuracy. (See Notes below for why &lt;code&gt;len(a)&lt;/code&gt; is necessary here.)</source>
          <target state="translated">Esta funci&amp;oacute;n calcula la inversa de la Transformada de Fourier discreta unidimensional de &lt;em&gt;n&lt;/em&gt; puntos de la entrada real calculada por &lt;a href=&quot;numpy.fft.rfft#numpy.fft.rfft&quot;&gt; &lt;code&gt;rfft&lt;/code&gt; &lt;/a&gt; . En otras palabras, &lt;code&gt;irfft(rfft(a), len(a)) == a&lt;/code&gt; a dentro de la precisi&amp;oacute;n num&amp;eacute;rica. (Consulte las notas a continuaci&amp;oacute;n para &lt;code&gt;len(a)&lt;/code&gt; por qu&amp;eacute; len (a) es necesario aqu&amp;iacute;).</target>
        </trans-unit>
        <trans-unit id="82bfb7db090395ddadcdd09fad9b5160012346cf" translate="yes" xml:space="preserve">
          <source>This function computes the inverse of the one-dimensional &lt;em&gt;n&lt;/em&gt;-point discrete Fourier transform computed by &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt;. In other words, &lt;code&gt;ifft(fft(a)) == a&lt;/code&gt; to within numerical accuracy. For a general description of the algorithm and definitions, see &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35acba32b3eea01535885b216d423da5ad809ed9" translate="yes" xml:space="preserve">
          <source>This function computes the inverse of the one-dimensional &lt;em&gt;n&lt;/em&gt;-point discrete Fourier transform computed by &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt;. In other words, &lt;code&gt;ifft(fft(a)) == a&lt;/code&gt; to within numerical accuracy. For a general description of the algorithm and definitions, see &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n calcula la inversa de la transformada discreta de Fourier unidimensional de &lt;em&gt;n&lt;/em&gt; puntos calculada por &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt; . En otras palabras, &lt;code&gt;ifft(fft(a)) == a&lt;/code&gt; a dentro de la precisi&amp;oacute;n num&amp;eacute;rica. Para obtener una descripci&amp;oacute;n general del algoritmo y las definiciones, consulte &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad9d7d69d57ac9facd5b4f82ac6ba6f908913a31" translate="yes" xml:space="preserve">
          <source>This function computes the one-dimensional &lt;em&gt;n&lt;/em&gt;-point discrete Fourier Transform (DFT) of a real-valued array by means of an efficient algorithm called the Fast Fourier Transform (FFT).</source>
          <target state="translated">Esta funci&amp;oacute;n calcula la Transformada de Fourier discreta (DFT) unidimensional de &lt;em&gt;n&lt;/em&gt; puntos de una matriz de valores reales mediante un algoritmo eficiente llamado Transformada R&amp;aacute;pida de Fourier (FFT).</target>
        </trans-unit>
        <trans-unit id="68ec181d19ee1190284573e044b4ba392f94f385" translate="yes" xml:space="preserve">
          <source>This function computes the one-dimensional &lt;em&gt;n&lt;/em&gt;-point discrete Fourier Transform (DFT) with the efficient Fast Fourier Transform (FFT) algorithm [CT].</source>
          <target state="translated">Esta funci&amp;oacute;n calcula la Transformada de Fourier discreta (DFT) unidimensional de &lt;em&gt;n&lt;/em&gt; puntos con el eficiente algoritmo [CT] de Transformada R&amp;aacute;pida de Fourier (FFT).</target>
        </trans-unit>
        <trans-unit id="30a498de56241e50f5fd1a10939273e87357615d" translate="yes" xml:space="preserve">
          <source>This function continues to be supported for backward compatibility, but you should prefer &lt;a href=&quot;numpy.moveaxis#numpy.moveaxis&quot;&gt;&lt;code&gt;moveaxis&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;numpy.moveaxis#numpy.moveaxis&quot;&gt;&lt;code&gt;moveaxis&lt;/code&gt;&lt;/a&gt; function was added in NumPy 1.11.</source>
          <target state="translated">Esta funci&amp;oacute;n sigue siendo compatible para compatibilidad con versiones anteriores, pero deber&amp;iacute;a preferir &lt;a href=&quot;numpy.moveaxis#numpy.moveaxis&quot;&gt; &lt;code&gt;moveaxis&lt;/code&gt; &lt;/a&gt; . La funci&amp;oacute;n &lt;a href=&quot;numpy.moveaxis#numpy.moveaxis&quot;&gt; &lt;code&gt;moveaxis&lt;/code&gt; &lt;/a&gt; se agreg&amp;oacute; en NumPy 1.11.</target>
        </trans-unit>
        <trans-unit id="307209890a37b51bcd317c1d8679c25cf8cf32dc" translate="yes" xml:space="preserve">
          <source>This function creates a new neighborhood iterator from an existing iterator. The neighborhood will be computed relatively to the position currently pointed by &lt;em&gt;iter&lt;/em&gt;, the bounds define the shape of the neighborhood iterator, and the mode argument the boundaries handling mode.</source>
          <target state="translated">Esta funci&amp;oacute;n crea un nuevo iterador de vecindad a partir de un iterador existente. La vecindad se calcular&amp;aacute; en relaci&amp;oacute;n con la posici&amp;oacute;n apuntada actualmente por &lt;em&gt;iter&lt;/em&gt; , los l&amp;iacute;mites definen la forma del iterador de vecindad y el argumento de modo el modo de manejo de l&amp;iacute;mites.</target>
        </trans-unit>
        <trans-unit id="33522609896e19e2c62ce4cc185c0f8e169d65db" translate="yes" xml:space="preserve">
          <source>This function does &lt;em&gt;not&lt;/em&gt; initialize the returned array; to do that use &lt;a href=&quot;numpy.zeros_like#numpy.zeros_like&quot;&gt;&lt;code&gt;zeros_like&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numpy.ones_like#numpy.ones_like&quot;&gt;&lt;code&gt;ones_like&lt;/code&gt;&lt;/a&gt; instead. It may be marginally faster than the functions that do set the array values.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;em&gt;no&lt;/em&gt; inicializa la matriz devuelta; para hacer eso, use &lt;a href=&quot;numpy.zeros_like#numpy.zeros_like&quot;&gt; &lt;code&gt;zeros_like&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;numpy.ones_like#numpy.ones_like&quot;&gt; &lt;code&gt;ones_like&lt;/code&gt; &lt;/a&gt; en su lugar. Puede ser ligeramente m&amp;aacute;s r&amp;aacute;pido que las funciones que establecen los valores de la matriz.</target>
        </trans-unit>
        <trans-unit id="0decc5010e2e82ceb19b7a45f9d7da5f4f237524" translate="yes" xml:space="preserve">
          <source>This function does &lt;em&gt;not&lt;/em&gt; initialize the returned array; to do that use &lt;code&gt;zeros_like&lt;/code&gt; or &lt;code&gt;ones_like&lt;/code&gt; instead. It may be marginally faster than the functions that do set the array values.</source>
          <target state="translated">Esta funci&amp;oacute;n &lt;em&gt;no&lt;/em&gt; inicializa la matriz devuelta; para hacer eso, use &lt;code&gt;zeros_like&lt;/code&gt; o &lt;code&gt;ones_like&lt;/code&gt; en su lugar. Puede ser ligeramente m&amp;aacute;s r&amp;aacute;pido que las funciones que establecen los valores de la matriz.</target>
        </trans-unit>
        <trans-unit id="960581e2e13399cd79a7bf3c883aeb7b8d2e979d" translate="yes" xml:space="preserve">
          <source>This function does not check the contents of the input, only that the type is MaskType. In particular, this function returns False if the mask has a flexible dtype.</source>
          <target state="translated">Esta función no comprueba el contenido de la entrada,sólo que el tipo es MaskType.En particular,esta función devuelve False si la máscara tiene un dtype flexible.</target>
        </trans-unit>
        <trans-unit id="0a232150acd8a12e027d94aeed56f5ff4aae9f46" translate="yes" xml:space="preserve">
          <source>This function does not enforce that the blocks lie on a fixed grid. &lt;code&gt;np.block([[a, b], [c, d]])&lt;/code&gt; is not restricted to arrays of the form:</source>
          <target state="translated">Esta funci&amp;oacute;n no obliga a que los bloques se encuentren en una cuadr&amp;iacute;cula fija. &lt;code&gt;np.block([[a, b], [c, d]])&lt;/code&gt; no est&amp;aacute; restringido a matrices de la forma:</target>
        </trans-unit>
        <trans-unit id="6dc40074e04bdcad2b344dd285961cdc7ff85df9" translate="yes" xml:space="preserve">
          <source>This function does not losslessly round-trip in either direction.</source>
          <target state="translated">Esta función no se realiza sin pérdidas en ninguna de las dos direcciones.</target>
        </trans-unit>
        <trans-unit id="b71c712d42350c6a8a0c257c490e077558876dad" translate="yes" xml:space="preserve">
          <source>This function encapsulates the broadcasting rules. The &lt;em&gt;mit&lt;/em&gt; container should already contain iterators for all the arrays that need to be broadcast. On return, these iterators will be adjusted so that iteration over each simultaneously will accomplish the broadcasting. A negative number is returned if an error occurs.</source>
          <target state="translated">Esta funci&amp;oacute;n encapsula las reglas de transmisi&amp;oacute;n. El contenedor &lt;em&gt;mit&lt;/em&gt; ya deber&amp;iacute;a contener iteradores para todas las matrices que deben transmitirse. A su regreso, estos iteradores se ajustar&amp;aacute;n para que la iteraci&amp;oacute;n sobre cada uno de ellos simult&amp;aacute;neamente logre la transmisi&amp;oacute;n. Se devuelve un n&amp;uacute;mero negativo si se produce un error.</target>
        </trans-unit>
        <trans-unit id="9bf48997cebca64928a72fe75ea6eb1ebc70dbfb" translate="yes" xml:space="preserve">
          <source>This function handles NaN comparisons as if NaN was a &amp;ldquo;normal&amp;rdquo; number. That is, AssertionError is not raised if both objects have NaNs in the same positions. This is in contrast to the IEEE standard on NaNs, which says that NaN compared to anything must return False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02f77dc9fbab1956d3050387654fd71594ea916" translate="yes" xml:space="preserve">
          <source>This function handles NaN comparisons as if NaN was a &amp;ldquo;normal&amp;rdquo; number. That is, no assertion is raised if both objects have NaNs in the same positions. This is in contrast to the IEEE standard on NaNs, which says that NaN compared to anything must return False.</source>
          <target state="translated">Esta funci&amp;oacute;n maneja las comparaciones de NaN como si NaN fuera un n&amp;uacute;mero &quot;normal&quot;. Es decir, no se genera ninguna afirmaci&amp;oacute;n si ambos objetos tienen NaN en las mismas posiciones. Esto contrasta con el est&amp;aacute;ndar IEEE sobre NaN, que dice que NaN en comparaci&amp;oacute;n con cualquier cosa debe devolver False.</target>
        </trans-unit>
        <trans-unit id="d5f910d97d6aeb7075f641616a02d523dd4438a4" translate="yes" xml:space="preserve">
          <source>This function has been deprecated. Use randint instead.</source>
          <target state="translated">Esta función ha sido desaprobada.Usa randint en su lugar.</target>
        </trans-unit>
        <trans-unit id="77fe5df00c0c7c8132af4661573c5a4cca000d13" translate="yes" xml:space="preserve">
          <source>This function has to be used with extreme care, see notes.</source>
          <target state="translated">Esta función tiene que ser usada con extremo cuidado,ver notas.</target>
        </trans-unit>
        <trans-unit id="eade9f90c736ff6d6151ab5c5bf1151931416ec5" translate="yes" xml:space="preserve">
          <source>This function instead copies &amp;ldquo;by field name&amp;rdquo;, such that fields in the dst are assigned from the identically named field in the src. This applies recursively for nested structures. This is how structure assignment worked in numpy &amp;gt;= 1.6 to &amp;lt;= 1.13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965a01bc9232ab2e9c3c470747ee3c2312761abb" translate="yes" xml:space="preserve">
          <source>This function is a compatibility alias for tobytes.</source>
          <target state="translated">Esta función es un alias de compatibilidad para los tobytes.</target>
        </trans-unit>
        <trans-unit id="a3014854fc3aff1db547e25e4accc358bdc45e8a" translate="yes" xml:space="preserve">
          <source>This function is a compatibility alias for tobytes. Despite its name it returns bytes not strings.</source>
          <target state="translated">Esta función es un alias de compatibilidad para los tobytes.A pesar de su nombre,devuelve bytes,no cadenas.</target>
        </trans-unit>
        <trans-unit id="5bced6280c853e5763696660107e62b1e9050b26" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;mask_rowcols&lt;/code&gt; with &lt;code&gt;axis&lt;/code&gt; equal to 0.</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;mask_rowcols&lt;/code&gt; con &lt;code&gt;axis&lt;/code&gt; igual a 0.</target>
        </trans-unit>
        <trans-unit id="892aad8c63a29b7082fcd31d81f9eafb9d342e8e" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;mask_rowcols&lt;/code&gt; with &lt;code&gt;axis&lt;/code&gt; equal to 1.</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;mask_rowcols&lt;/code&gt; con &lt;code&gt;axis&lt;/code&gt; igual a 1.</target>
        </trans-unit>
        <trans-unit id="ebac1dd8653756fd79c832147de01fce0d7f87ae" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x != value).</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;masked_where&lt;/code&gt; , con &lt;code&gt;condition&lt;/code&gt; = (x! = Valor).</target>
        </trans-unit>
        <trans-unit id="ab411b054ab6959d52991c7253cba72df24e6757" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;gt; value).</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;masked_where&lt;/code&gt; , con &lt;code&gt;condition&lt;/code&gt; = (x&amp;gt; valor).</target>
        </trans-unit>
        <trans-unit id="bf30dbf11727720fe8d30e29bf375cde077485f8" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;gt;= value).</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;masked_where&lt;/code&gt; , con &lt;code&gt;condition&lt;/code&gt; = (x&amp;gt; = valor).</target>
        </trans-unit>
        <trans-unit id="af1053b8f0ec97d05015f270566c5b82959272a7" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;lt; value).</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;masked_where&lt;/code&gt; , con &lt;code&gt;condition&lt;/code&gt; = (x &amp;lt;valor).</target>
        </trans-unit>
        <trans-unit id="f9189002c6a19182c690d1c6efc00b46a33f7232" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;lt;= value).</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;masked_where&lt;/code&gt; , con &lt;code&gt;condition&lt;/code&gt; = (x &amp;lt;= valor).</target>
        </trans-unit>
        <trans-unit id="f46637928627180e5c802e1527edd637c13a58b6" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x == value). For floating point arrays, consider using &lt;code&gt;masked_values(x, value)&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;masked_where&lt;/code&gt; , con &lt;code&gt;condition&lt;/code&gt; = (x == valor). Para matrices de punto flotante, considere usar &lt;code&gt;masked_values(x, value)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4434dee55a64bbfebaafbec40077ada7cc2e4b4" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = ~(np.isfinite(a)). Any pre-existing mask is conserved. Only applies to arrays with a dtype where NaNs or infs make sense (i.e. floating point types), but accepts any array_like object.</source>
          <target state="translated">Esta funci&amp;oacute;n es un atajo a &lt;code&gt;masked_where&lt;/code&gt; , con &lt;code&gt;condition&lt;/code&gt; = ~ (np.isfinite (a)). Se conserva cualquier mascarilla preexistente. Solo se aplica a matrices con un dtype donde NaNs o infs tienen sentido (es decir, tipos de punto flotante), pero acepta cualquier objeto array_like.</target>
        </trans-unit>
        <trans-unit id="f28b126f5c6b2ce96d11bc92753f383ad4cd6485" translate="yes" xml:space="preserve">
          <source>This function is able to return one of eight different matrix norms, or one of an infinite number of vector norms (described below), depending on the value of the &lt;code&gt;ord&lt;/code&gt; parameter.</source>
          <target state="translated">Esta funci&amp;oacute;n puede devolver una de ocho normas matriciales diferentes, o una de un n&amp;uacute;mero infinito de normas vectoriales (descritas a continuaci&amp;oacute;n), seg&amp;uacute;n el valor del par&amp;aacute;metro &lt;code&gt;ord&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1758140bc8fa9fd28fc8bc131c3f6321c42d5db" translate="yes" xml:space="preserve">
          <source>This function is capable of returning the condition number using one of seven different norms, depending on the value of &lt;code&gt;p&lt;/code&gt; (see Parameters below).</source>
          <target state="translated">Esta funci&amp;oacute;n es capaz de devolver el n&amp;uacute;mero de condici&amp;oacute;n usando una de siete normas diferentes, dependiendo del valor de &lt;code&gt;p&lt;/code&gt; (ver Par&amp;aacute;metros a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="7f257a627b846a11d8d82d4b0986234672c8d024" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;a href=&quot;#numpy.ma.allclose&quot;&gt;&lt;code&gt;allclose&lt;/code&gt;&lt;/a&gt; except that masked values are treated as equal (default) or unequal, depending on the &lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt;&lt;code&gt;masked_equal&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="translated">Esta funci&amp;oacute;n es equivalente a &lt;a href=&quot;#numpy.ma.allclose&quot;&gt; &lt;code&gt;allclose&lt;/code&gt; &lt;/a&gt; excepto que los valores enmascarados se tratan como iguales (predeterminado) o desiguales, seg&amp;uacute;n el argumento &lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt; &lt;code&gt;masked_equal&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd8713725fce28207d278a6136fdd184217d0bb8" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;a href=&quot;numpy.allclose#numpy.allclose&quot;&gt;&lt;code&gt;allclose&lt;/code&gt;&lt;/a&gt; except that masked values are treated as equal (default) or unequal, depending on the &lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt;&lt;code&gt;masked_equal&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3debc8695bd72584953abb12e719fb90548f7dd" translate="yes" xml:space="preserve">
          <source>This function is equivalent to calling the &amp;ldquo;compressed&amp;rdquo; method of a &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;numpy.ma.maskedarray.compressed#numpy.ma.MaskedArray.compressed&quot;&gt;&lt;code&gt;MaskedArray.compressed&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Esta funci&amp;oacute;n es equivalente a llamar al m&amp;eacute;todo &quot;comprimido&quot; de &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt; , consulte &lt;a href=&quot;numpy.ma.maskedarray.compressed#numpy.ma.MaskedArray.compressed&quot;&gt; &lt;code&gt;MaskedArray.compressed&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="b5a91f899ffc50b531674413c041bb92c6104a7d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to calling the &amp;ldquo;compressed&amp;rdquo; method of a &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;ma.MaskedArray&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;numpy.ma.maskedarray.compressed#numpy.ma.MaskedArray.compressed&quot;&gt;&lt;code&gt;ma.MaskedArray.compressed&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614f9af44de8bf025b95f7feb6cfbfad93376ecb" translate="yes" xml:space="preserve">
          <source>This function is equivalent to tuple axis arguments to reorderable ufuncs with keepdims=True. Tuple axis arguments to ufuncs have been available since version 1.7.0.</source>
          <target state="translated">Esta función es equivalente a los argumentos del eje tuple para reordenar los ufuncs con keepdims=True.Los argumentos de eje tuple para ufuncs están disponibles desde la versión 1.7.0.</target>
        </trans-unit>
        <trans-unit id="3c5d87f95304bba4f22f4f3bc79a0366620caeda" translate="yes" xml:space="preserve">
          <source>This function is exactly equivalent to &lt;a href=&quot;numpy.transpose#numpy.transpose&quot;&gt;&lt;code&gt;numpy.transpose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es exactamente equivalente a &lt;a href=&quot;numpy.transpose#numpy.transpose&quot;&gt; &lt;code&gt;numpy.transpose&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a042d76cb2129f19b61e5085381910d8b99bdbc" translate="yes" xml:space="preserve">
          <source>This function is intended to be used in EXTERNAL_LOOP mode only, and will produce some wrong answers when that mode is not enabled.</source>
          <target state="translated">Esta función está pensada para ser usada sólo en el modo EXTERNAL_LOOP,y producirá algunas respuestas erróneas cuando ese modo no esté activado.</target>
        </trans-unit>
        <trans-unit id="d3aeb8a347cc701a9fec8946ae6c740c1103bc20" translate="yes" xml:space="preserve">
          <source>This function is not defined for complex-valued arguments; for the so-called argument of complex values, use &lt;a href=&quot;numpy.angle#numpy.angle&quot;&gt;&lt;code&gt;angle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n no est&amp;aacute; definida para argumentos con valores complejos; para el llamado argumento de valores complejos, use &lt;a href=&quot;numpy.angle#numpy.angle&quot;&gt; &lt;code&gt;angle&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42c780622358a45155401477993b5d9d0b335549" translate="yes" xml:space="preserve">
          <source>This function is not designed to work with integers.</source>
          <target state="translated">Esta función no está diseñada para trabajar con números enteros.</target>
        </trans-unit>
        <trans-unit id="ea62cc16ec217ef39d7f7c8e5969148da37fd3a3" translate="yes" xml:space="preserve">
          <source>This function is not implemented yet.</source>
          <target state="translated">Esta función no se ha implementado todavía.</target>
        </trans-unit>
        <trans-unit id="b2f9356116ad7b6b9ba74a0d07b768457fca53e0" translate="yes" xml:space="preserve">
          <source>This function is obsolete and, because of changes due to relaxed stride checking, its return value for the same array may differ for versions of NumPy &amp;gt;= 1.10.0 and previous versions. If you only want to check if an array is Fortran contiguous use &lt;code&gt;a.flags.f_contiguous&lt;/code&gt; instead.</source>
          <target state="translated">Esta funci&amp;oacute;n est&amp;aacute; obsoleta y, debido a los cambios debidos a la comprobaci&amp;oacute;n de zancada relajada, su valor de retorno para la misma matriz puede diferir para las versiones de NumPy&amp;gt; = 1.10.0 y versiones anteriores. Si solo desea verificar si una matriz es contigua de Fortran, use &lt;code&gt;a.flags.f_contiguous&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="258358cbdd467c9c344ce8e3f9c85d0cd7f428e4" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt;&lt;code&gt;masked_values&lt;/code&gt;&lt;/a&gt;, but only suitable for object arrays: for floating point, use &lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt;&lt;code&gt;masked_values&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Esta funci&amp;oacute;n es similar a &lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt; &lt;code&gt;masked_values&lt;/code&gt; &lt;/a&gt; , pero solo es adecuada para matrices de objetos: para punto flotante, use &lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt; &lt;code&gt;masked_values&lt;/code&gt; &lt;/a&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="42e4240c2bc84555a7f741757d674e8c82e565ad" translate="yes" xml:space="preserve">
          <source>This function is superceded by &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt;&lt;code&gt;PyArray_MinScalarType&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es reemplazada por &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt; &lt;code&gt;PyArray_MinScalarType&lt;/code&gt; &lt;/a&gt; y / o &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt; &lt;code&gt;PyArray_ResultType&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3e20de601f3ca24a5ff2472df08d779de8dd632" translate="yes" xml:space="preserve">
          <source>This function is superceded by &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es reemplazada por &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt; &lt;code&gt;PyArray_ResultType&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="223dd6fd50941f5cca2c485c95e8e5dc687d05fb" translate="yes" xml:space="preserve">
          <source>This function is superseded by &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt;&lt;code&gt;PyArray_MinScalarType&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0b6a66579ee7b8e064413a2fb5429da45dba58" translate="yes" xml:space="preserve">
          <source>This function is superseded by &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1ff7898f391050d07732317e1b4b4bc976ee58" translate="yes" xml:space="preserve">
          <source>This function is symmetric, but rarely associative.</source>
          <target state="translated">Esta función es simétrica,pero raramente asociativa.</target>
        </trans-unit>
        <trans-unit id="fb34e601302a103a0946045a1719e9ad4309bf62" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt;&lt;code&gt;numpy.diag&lt;/code&gt;&lt;/a&gt; that takes masked values into account, see &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt;&lt;code&gt;numpy.diag&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Esta funci&amp;oacute;n es el equivalente de &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt; &lt;code&gt;numpy.diag&lt;/code&gt; &lt;/a&gt; que tiene en cuenta los valores enmascarados; consulte &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt; &lt;code&gt;numpy.diag&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="762735a831cc238bcd6be4852c06ac0013225a54" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt;&lt;code&gt;numpy.dot&lt;/code&gt;&lt;/a&gt; that takes masked values into account. Note that &lt;code&gt;strict&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; are in different position than in the method version. In order to maintain compatibility with the corresponding method, it is recommended that the optional arguments be treated as keyword only. At some point that may be mandatory.</source>
          <target state="translated">Esta funci&amp;oacute;n es el equivalente de &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt; &lt;code&gt;numpy.dot&lt;/code&gt; &lt;/a&gt; que tiene en cuenta los valores enmascarados. Tenga en cuenta que &lt;code&gt;strict&lt;/code&gt; y &lt;code&gt;out&lt;/code&gt; est&amp;aacute;n en una posici&amp;oacute;n diferente que en la versi&amp;oacute;n del m&amp;eacute;todo. Para mantener la compatibilidad con el m&amp;eacute;todo correspondiente, se recomienda que los argumentos opcionales se traten solo como palabras clave. En alg&amp;uacute;n momento eso puede ser obligatorio.</target>
        </trans-unit>
        <trans-unit id="b3449fce446ccae1d5ae6c6d55107b82701f20fd" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt;&lt;code&gt;numpy.ediff1d&lt;/code&gt;&lt;/a&gt; that takes masked values into account, see &lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt;&lt;code&gt;numpy.ediff1d&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Esta funci&amp;oacute;n es el equivalente de &lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt; &lt;code&gt;numpy.ediff1d&lt;/code&gt; &lt;/a&gt; que tiene en cuenta los valores enmascarados, consulte &lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt; &lt;code&gt;numpy.ediff1d&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="fc125d9cdb2114a10df5933b4e6f500d1c08539d" translate="yes" xml:space="preserve">
          <source>This function is used to simplify access to fields nested in other fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48492051f92b9e0c98dfd72175da1464af62c22d" translate="yes" xml:space="preserve">
          <source>This function is useful for calculating a fill value suitable for taking the maximum of an array with a given dtype.</source>
          <target state="translated">Esta función es útil para calcular un valor de llenado adecuado para tomar el máximo de un conjunto con un tipo determinado.</target>
        </trans-unit>
        <trans-unit id="eeb9d1e68f6032230d3ff5e76ccad6bac584a6b3" translate="yes" xml:space="preserve">
          <source>This function is useful for calculating a fill value suitable for taking the minimum of an array with a given dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514144ea48299b81c7b15dfcf631d31668bd3186" translate="yes" xml:space="preserve">
          <source>This function is useful for determining a common type that two or more arrays can be converted to. It only works for non-flexible array types as no itemsize information is passed. The &lt;em&gt;mintype&lt;/em&gt; argument represents the minimum type acceptable, and &lt;em&gt;op&lt;/em&gt; represents the object that will be converted to an array. The return value is the enumerated typenumber that represents the data-type that &lt;em&gt;op&lt;/em&gt; should have.</source>
          <target state="translated">Esta funci&amp;oacute;n es &amp;uacute;til para determinar un tipo com&amp;uacute;n al que se pueden convertir dos o m&amp;aacute;s matrices. Solo funciona para tipos de matrices no flexibles, ya que no se pasa informaci&amp;oacute;n sobre el tama&amp;ntilde;o del elemento. El argumento &lt;em&gt;mintype&lt;/em&gt; representa el tipo m&amp;iacute;nimo aceptable y &lt;em&gt;op&lt;/em&gt; representa el objeto que se convertir&amp;aacute; en una matriz. El valor de retorno es el n&amp;uacute;mero de tipo enumerado que representa el tipo de datos que debe tener &lt;em&gt;op&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="66ea2fa9dfd3553ca39f3787970de46499229028" translate="yes" xml:space="preserve">
          <source>This function is useful to be sure that an array with the correct flags is returned for passing to compiled code (perhaps through ctypes).</source>
          <target state="translated">Esta función es útil para asegurarse de que se devuelva una matriz con las banderas correctas para pasar al código compilado (quizás a través de ctypes).</target>
        </trans-unit>
        <trans-unit id="8e9b1bcfe6f895f9426e7973caf7f080e53d5b02" translate="yes" xml:space="preserve">
          <source>This function is very similar to &lt;code&gt;PyUFunc_FromFuncAndDataAndSignature&lt;/code&gt; above, but has an extra &lt;em&gt;identity_value&lt;/em&gt; argument, to define an arbitrary identity for the ufunc when &lt;code&gt;identity&lt;/code&gt; is passed as &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n es muy similar a &lt;code&gt;PyUFunc_FromFuncAndDataAndSignature&lt;/code&gt; anteriormente, pero tiene un extra &lt;em&gt;identity_value&lt;/em&gt; argumento, para definir una identidad arbitraria para la ufunc cuando &lt;code&gt;identity&lt;/code&gt; se pasa como &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6ae878f05630a69160b11c652744c88c73b83f7" translate="yes" xml:space="preserve">
          <source>This function is very similar to PyUFunc_FromFuncAndData above, but has an extra &lt;em&gt;signature&lt;/em&gt; argument, to define a &lt;a href=&quot;c-api.generalized-ufuncs#c-api-generalized-ufuncs&quot;&gt;generalized universal functions&lt;/a&gt;. Similarly to how ufuncs are built around an element-by-element operation, gufuncs are around subarray-by-subarray operations, the &lt;a href=&quot;c-api.generalized-ufuncs#details-of-signature&quot;&gt;signature&lt;/a&gt; defining the subarrays to operate on.</source>
          <target state="translated">Esta funci&amp;oacute;n es muy similar a PyUFunc_FromFuncAndData anterior, pero tiene un argumento de &lt;em&gt;firma&lt;/em&gt; adicional , para definir &lt;a href=&quot;c-api.generalized-ufuncs#c-api-generalized-ufuncs&quot;&gt;funciones universales generalizadas&lt;/a&gt; . De manera similar a c&amp;oacute;mo se construyen los ufuncs en torno a una operaci&amp;oacute;n elemento por elemento, los gufuncs se basan en operaciones subarreglo por subarreglo, la &lt;a href=&quot;c-api.generalized-ufuncs#details-of-signature&quot;&gt;firma que&lt;/a&gt; define los subarreglos en los que operar.</target>
        </trans-unit>
        <trans-unit id="7d7c3c059d66b50ac25de48e14a9110e6ed62010" translate="yes" xml:space="preserve">
          <source>This function is very similar to PyUFunc_FromFuncAndData above, but has an extra &lt;em&gt;signature&lt;/em&gt; argument, to define a &lt;a href=&quot;generalized-ufuncs#c-api-generalized-ufuncs&quot;&gt;generalized universal functions&lt;/a&gt;. Similarly to how ufuncs are built around an element-by-element operation, gufuncs are around subarray-by-subarray operations, the &lt;a href=&quot;generalized-ufuncs#details-of-signature&quot;&gt;signature&lt;/a&gt; defining the subarrays to operate on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc77b4e140ac75bc9ac3e89d41f38fc73185d22" translate="yes" xml:space="preserve">
          <source>This function makes most sense for arrays with up to 3 dimensions. For instance, for pixel-data with a height (first axis), width (second axis), and r/g/b channels (third axis). The functions &lt;a href=&quot;numpy.concatenate#numpy.concatenate&quot;&gt;&lt;code&gt;concatenate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;numpy.stack#numpy.stack&quot;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.block#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; provide more general stacking and concatenation operations.</source>
          <target state="translated">Esta funci&amp;oacute;n tiene m&amp;aacute;s sentido para matrices de hasta 3 dimensiones. Por ejemplo, para datos de p&amp;iacute;xeles con una altura (primer eje), una anchura (segundo eje) y canales r / g / b (tercer eje). Las funciones &lt;a href=&quot;numpy.concatenate#numpy.concatenate&quot;&gt; &lt;code&gt;concatenate&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;numpy.stack#numpy.stack&quot;&gt; &lt;code&gt;stack&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;numpy.block#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt; proporcionan operaciones de apilamiento y concatenaci&amp;oacute;n m&amp;aacute;s generales.</target>
        </trans-unit>
        <trans-unit id="f7b019770de00d4d47b09eabe135d2ae721a995a" translate="yes" xml:space="preserve">
          <source>This function makes most sense for arrays with up to 3 dimensions. For instance, for pixel-data with a height (first axis), width (second axis), and r/g/b channels (third axis). The functions &lt;a href=&quot;numpy.ma.concatenate#numpy.ma.concatenate&quot;&gt;&lt;code&gt;concatenate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;numpy.ma.stack#numpy.ma.stack&quot;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;block&lt;/code&gt; provide more general stacking and concatenation operations.</source>
          <target state="translated">Esta funci&amp;oacute;n tiene m&amp;aacute;s sentido para matrices de hasta 3 dimensiones. Por ejemplo, para datos de p&amp;iacute;xeles con una altura (primer eje), una anchura (segundo eje) y canales r / g / b (tercer eje). Las funciones &lt;a href=&quot;numpy.ma.concatenate#numpy.ma.concatenate&quot;&gt; &lt;code&gt;concatenate&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;numpy.ma.stack#numpy.ma.stack&quot;&gt; &lt;code&gt;stack&lt;/code&gt; &lt;/a&gt; y &lt;code&gt;block&lt;/code&gt; proporcionan operaciones de apilamiento y concatenaci&amp;oacute;n m&amp;aacute;s generales.</target>
        </trans-unit>
        <trans-unit id="f15e5fa1742619380116b3f34a00c85d55366c55" translate="yes" xml:space="preserve">
          <source>This function may also be used as a decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d585b637d27940cc37d90ebf4940a9aa2e521b5d" translate="yes" xml:space="preserve">
          <source>This function may be safely called without holding the Python GIL.</source>
          <target state="translated">Esta función puede ser llamada con seguridad sin tener la Python GIL.</target>
        </trans-unit>
        <trans-unit id="cd200e9dfe3f17be99d159e426b6fa9331db61ec" translate="yes" xml:space="preserve">
          <source>This function may only be called if the iterator is tracking a multi-index and if &lt;a href=&quot;#c.NPY_ITER_DONT_NEGATE_STRIDES&quot;&gt;&lt;code&gt;NPY_ITER_DONT_NEGATE_STRIDES&lt;/code&gt;&lt;/a&gt; was used to prevent an axis from being iterated in reverse order.</source>
          <target state="translated">Esta funci&amp;oacute;n solo se puede llamar si el iterador est&amp;aacute; rastreando un &amp;iacute;ndice m&amp;uacute;ltiple y si se us&amp;oacute; &lt;a href=&quot;#c.NPY_ITER_DONT_NEGATE_STRIDES&quot;&gt; &lt;code&gt;NPY_ITER_DONT_NEGATE_STRIDES&lt;/code&gt; &lt;/a&gt; para evitar que un eje se repita en orden inverso.</target>
        </trans-unit>
        <trans-unit id="6ca18036fbf762cae2043baf8ac3fa8494d28495" translate="yes" xml:space="preserve">
          <source>This function must be called in the initialization section of a module that will make use of the C-API. It imports the module where the function-pointer table is stored and points the correct variable to it.</source>
          <target state="translated">Esta función debe ser llamada en la sección de inicialización de un módulo que hará uso del C-API.Importa el módulo donde se almacena la tabla de punteros de la función y le apunta la variable correcta.</target>
        </trans-unit>
        <trans-unit id="cf5ee49acb54388d21032f90f2de16dca9ddb6c3" translate="yes" xml:space="preserve">
          <source>This function must take two arguments, &lt;code&gt;func(a, axis)&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n debe tomar dos argumentos, &lt;code&gt;func(a, axis)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dba1259c24481a4a54d81a8fdecff9fadce8f02f" translate="yes" xml:space="preserve">
          <source>This function only shuffles the array along the first axis of a multi-dimensional array. The order of sub-arrays is changed but their contents remains the same.</source>
          <target state="translated">Esta función sólo baraja el conjunto a lo largo del primer eje de un conjunto multidimensional.El orden de los subconjuntos se cambia,pero su contenido sigue siendo el mismo.</target>
        </trans-unit>
        <trans-unit id="68ca7042b267a7f2923f8a89cc886956d3a640a1" translate="yes" xml:space="preserve">
          <source>This function provides greater precision than &lt;code&gt;exp(x) - 1&lt;/code&gt; for small values of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n proporciona mayor precisi&amp;oacute;n que &lt;code&gt;exp(x) - 1&lt;/code&gt; para valores peque&amp;ntilde;os de &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40a3f0ad0a26c2dcd1667ccf5fd0beae55099939" translate="yes" xml:space="preserve">
          <source>This function reads from the system entropy pool and so samples are not reproducible. In particular, it does &lt;em&gt;NOT&lt;/em&gt; make use of a BitGenerator, and so &lt;code&gt;seed&lt;/code&gt; and setting &lt;code&gt;state&lt;/code&gt; have no effect.</source>
          <target state="translated">Esta funci&amp;oacute;n lee del grupo de entrop&amp;iacute;a del sistema, por lo que las muestras no son reproducibles. En particular, &lt;em&gt;NO&lt;/em&gt; hace uso de un BitGenerator, por lo que la &lt;code&gt;seed&lt;/code&gt; y el &lt;code&gt;state&lt;/code&gt; configuraci&amp;oacute;n no tienen ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="2db0a89599aa1f9e0af20f69fdc08455be79db8b" translate="yes" xml:space="preserve">
          <source>This function returns True if &lt;code&gt;x&lt;/code&gt; is an instance of MaskedArray and returns False otherwise. Any object is accepted as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326a3290cbe737031cbcfe2c255c104d77bb6d98" translate="yes" xml:space="preserve">
          <source>This function returns a (C-style) contiguous and behaved function array from any nested sequence or array interface exporting object, &lt;em&gt;op&lt;/em&gt;, of (non-flexible) type given by the enumerated &lt;em&gt;typenum&lt;/em&gt;, of minimum depth &lt;em&gt;min_depth&lt;/em&gt;, and of maximum depth &lt;em&gt;max_depth&lt;/em&gt;. Equivalent to a call to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; with requirements set to &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; and the type_num member of the type argument set to &lt;em&gt;typenum&lt;/em&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n devuelve una matriz de funci&amp;oacute;n contigua y con comportamiento (estilo C) de cualquier secuencia anidada o objeto de exportaci&amp;oacute;n de interfaz de matriz, &lt;em&gt;op&lt;/em&gt; , de tipo (no flexible) dado por el &lt;em&gt;typenum&lt;/em&gt; enumerado , de profundidad m&amp;iacute;nima &lt;em&gt;min_depth&lt;/em&gt; y de profundidad m&amp;aacute;xima &lt;em&gt;max_depth&lt;/em&gt; . Equivalente a una llamada a &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; con requisitos establecidos en &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt; &lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt; &lt;/a&gt; y el miembro type_num del argumento type establecido en &lt;em&gt;typenum&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cd99a05c88fddf54e9c57ac9cd52857632e3d1f8" translate="yes" xml:space="preserve">
          <source>This function returns a boolean ndarray with all entries False, that can be used in common mask manipulations. If a complex dtype is specified, the type of each field is converted to a boolean type.</source>
          <target state="translated">Esta función devuelve un ndarray booleano con todas las entradas Falso,que puede ser usado en manipulaciones de máscaras comunes.Si se especifica un tipo complejo d,el tipo de cada campo se convierte en un tipo booleano.</target>
        </trans-unit>
        <trans-unit id="02eca326759cd81f17376a545937c3d2382a2a50" translate="yes" xml:space="preserve">
          <source>This function returns a well-behaved C-style contiguous array from any nested sequence or array-interface exporting object. The minimum number of dimensions the array can have is given by &lt;code&gt;min_depth&lt;/code&gt; while the maximum is &lt;code&gt;max_depth&lt;/code&gt;. This is equivalent to call &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; with requirements &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c.NPY_ARRAY_ENSUREARRAY&quot;&gt;&lt;code&gt;NPY_ARRAY_ENSUREARRAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e7626c8e43009c9d0e23e7f2d941b6cb967b32" translate="yes" xml:space="preserve">
          <source>This function returns the absolute values (positive magnitude) of the data in &lt;code&gt;x&lt;/code&gt;. Complex values are not handled, use &lt;a href=&quot;numpy.absolute#numpy.absolute&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; to find the absolute values of complex data.</source>
          <target state="translated">Esta funci&amp;oacute;n devuelve los valores absolutos (magnitud positiva) de los datos en &lt;code&gt;x&lt;/code&gt; . Los valores complejos no se manejan, use &lt;a href=&quot;numpy.absolute#numpy.absolute&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; para encontrar los valores absolutos de datos complejos.</target>
        </trans-unit>
        <trans-unit id="89fee3e999f1c558b74709781bf21911d5dc8fa4" translate="yes" xml:space="preserve">
          <source>This function returns the value</source>
          <target state="translated">Esta función devuelve el valor</target>
        </trans-unit>
        <trans-unit id="1cc55e517c256ea42c557b8b54e3efb3b6cafcb6" translate="yes" xml:space="preserve">
          <source>This function returns the values:</source>
          <target state="translated">Esta función devuelve los valores:</target>
        </trans-unit>
        <trans-unit id="a6d07b33b778389f427bd3ca9fc11f04feb25982" translate="yes" xml:space="preserve">
          <source>This function should accept 1-D arrays. It is applied to 1-D slices of &lt;code&gt;arr&lt;/code&gt; along the specified axis.</source>
          <target state="translated">Esta funci&amp;oacute;n deber&amp;iacute;a aceptar matrices 1-D. Se aplica a cortes 1-D de &lt;code&gt;arr&lt;/code&gt; a lo largo del eje especificado.</target>
        </trans-unit>
        <trans-unit id="5cfabdc0232ab8cc8ac575fbc0d4dec6b2dd7bf7" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;arr&lt;/em&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n roba una referencia a &lt;em&gt;arr&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3ceff3d1be740072d08fa441617d883813e56f19" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;descr&lt;/em&gt; if it is not NULL.</source>
          <target state="translated">Esta funci&amp;oacute;n roba una referencia a &lt;em&gt;descr&lt;/em&gt; si no es NULL.</target>
        </trans-unit>
        <trans-unit id="37fa48e8e102e5c7fe97151e437a12d635c87f86" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;descr&lt;/em&gt; if it is not NULL. This array creation routine allows for the convenient creation of a new array matching an existing array&amp;rsquo;s shapes and memory layout, possibly changing the layout and/or data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8281b58eb98855581eef0364cfa182f403baf433" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;descr&lt;/em&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n roba una referencia a &lt;em&gt;descr&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="71bb778b3ae86d2314883f6bdb50a6590499183c" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;descr&lt;/em&gt;. The easiest way to get one is using &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt;&lt;code&gt;PyArray_DescrFromType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n roba una referencia a &lt;em&gt;descr&lt;/em&gt; . La forma m&amp;aacute;s sencilla de conseguir uno es utilizando &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt; &lt;code&gt;PyArray_DescrFromType&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6d42633714a13d2a78f3f69e93cf9d52e8a857e" translate="yes" xml:space="preserve">
          <source>This function supports both indexing conventions through the indexing keyword argument. Giving the string &amp;lsquo;ij&amp;rsquo; returns a meshgrid with matrix indexing, while &amp;lsquo;xy&amp;rsquo; returns a meshgrid with Cartesian indexing. In the 2-D case with inputs of length M and N, the outputs are of shape (N, M) for &amp;lsquo;xy&amp;rsquo; indexing and (M, N) for &amp;lsquo;ij&amp;rsquo; indexing. In the 3-D case with inputs of length M, N and P, outputs are of shape (N, M, P) for &amp;lsquo;xy&amp;rsquo; indexing and (M, N, P) for &amp;lsquo;ij&amp;rsquo; indexing. The difference is illustrated by the following code snippet:</source>
          <target state="translated">Esta funci&amp;oacute;n admite ambas convenciones de indexaci&amp;oacute;n mediante el argumento de palabra clave de indexaci&amp;oacute;n. Dar la cadena 'ij' devuelve un meshgrid con indexaci&amp;oacute;n matricial, mientras que 'xy' devuelve un meshgrid con indexaci&amp;oacute;n cartesiana. En el caso de 2-D con entradas de longitud M y N, las salidas tienen la forma (N, M) para la indexaci&amp;oacute;n 'xy' y (M, N) para la indexaci&amp;oacute;n 'ij'. En el caso 3-D con entradas de longitud M, N y P, las salidas tienen la forma (N, M, P) para la indexaci&amp;oacute;n 'xy' y (M, N, P) para la indexaci&amp;oacute;n 'ij'. La diferencia se ilustra con el siguiente fragmento de c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="e857d76db9c7bac209f1715cec1437cf523540d8" translate="yes" xml:space="preserve">
          <source>This function swaps half-spaces for all axes listed (defaults to all). Note that &lt;code&gt;y[0]&lt;/code&gt; is the Nyquist component only if &lt;code&gt;len(x)&lt;/code&gt; is even.</source>
          <target state="translated">Esta funci&amp;oacute;n intercambia medios espacios para todos los ejes enumerados (predeterminado en todos). Tenga en cuenta que &lt;code&gt;y[0]&lt;/code&gt; es el componente de Nyquist solo si &lt;code&gt;len(x)&lt;/code&gt; es par.</target>
        </trans-unit>
        <trans-unit id="a7870153b27cca4d6c02a86ec8c830b616e4b3c3" translate="yes" xml:space="preserve">
          <source>This function takes N 1-D sequences and returns N outputs with N dimensions each, such that the shape is 1 in all but one dimension and the dimension with the non-unit shape value cycles through all N dimensions.</source>
          <target state="translated">Esta función toma N secuencias 1-D y devuelve N salidas con N dimensiones cada una,de tal manera que la forma es 1 en todas las dimensiones menos una y la dimensión con el valor de la forma no unitaria circula a través de todas las N dimensiones.</target>
        </trans-unit>
        <trans-unit id="b4e43f62f7a361a5fb222fc70fbd3c26bd5104e6" translate="yes" xml:space="preserve">
          <source>This function takes a multi-iterator object that has been previously &amp;ldquo;broadcasted,&amp;rdquo; finds the dimension with the smallest &amp;ldquo;sum of strides&amp;rdquo; in the broadcasted result and adapts all the iterators so as not to iterate over that dimension (by effectively making them of length-1 in that dimension). The corresponding dimension is returned unless &lt;em&gt;mit&lt;/em&gt; -&amp;gt;nd is 0, then -1 is returned. This function is useful for constructing ufunc-like routines that broadcast their inputs correctly and then call a strided 1-d version of the routine as the inner-loop. This 1-d version is usually optimized for speed and for this reason the loop should be performed over the axis that won&amp;rsquo;t require large stride jumps.</source>
          <target state="translated">Esta funci&amp;oacute;n toma un objeto de m&amp;uacute;ltiples iteradores que se ha &quot;transmitido&quot; previamente, encuentra la dimensi&amp;oacute;n con la &quot;suma de pasos&quot; m&amp;aacute;s peque&amp;ntilde;a en el resultado transmitido y adapta todos los iteradores para no iterar sobre esa dimensi&amp;oacute;n (al convertirlos efectivamente en de length-1 en esa dimensi&amp;oacute;n). Se devuelve la dimensi&amp;oacute;n correspondiente a menos que &lt;em&gt;mit&lt;/em&gt; -&amp;gt; nd sea 0, luego se devuelve -1. Esta funci&amp;oacute;n es &amp;uacute;til para construir rutinas similares a ufunc que transmiten sus entradas correctamente y luego llaman a una versi&amp;oacute;n 1-d escalonada de la rutina como el bucle interno. Esta versi&amp;oacute;n 1-d generalmente est&amp;aacute; optimizada para la velocidad y, por esta raz&amp;oacute;n, el bucle debe realizarse sobre el eje que no requerir&amp;aacute; grandes saltos.</target>
        </trans-unit>
        <trans-unit id="102958a161ae2e87757cf73f96956c3988a66269" translate="yes" xml:space="preserve">
          <source>This function uses the same algorithm as the builtin python &lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_left&quot;&gt;&lt;code&gt;bisect.bisect_left&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;side='left'&lt;/code&gt;) and &lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_right&quot;&gt;&lt;code&gt;bisect.bisect_right&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;side='right'&lt;/code&gt;) functions, which is also vectorized in the &lt;code&gt;v&lt;/code&gt; argument.</source>
          <target state="translated">Esta funci&amp;oacute;n usa el mismo algoritmo que las &lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_left&quot;&gt; &lt;code&gt;bisect.bisect_left&lt;/code&gt; &lt;/a&gt; python bisect.bisect_left ( &lt;code&gt;side='left'&lt;/code&gt; ) y &lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_right&quot;&gt; &lt;code&gt;bisect.bisect_right&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;side='right'&lt;/code&gt; ), que tambi&amp;eacute;n est&amp;aacute; vectorizado en el argumento &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4a094c15ea96c9120e1bb02da934b3ab9299caa" translate="yes" xml:space="preserve">
          <source>This function will not demote complex to float or anything to boolean, but will demote a signed integer to an unsigned integer when the scalar value is positive.</source>
          <target state="translated">Esta función no degradará el complejo a flotante ni nada a booleano,pero degradará un entero con signo a un entero sin signo cuando el valor escalar sea positivo.</target>
        </trans-unit>
        <trans-unit id="e431cb683c0bc7c35e7633e888e952e4559756e5" translate="yes" xml:space="preserve">
          <source>This function will not preserve masking of MaskedArray inputs.</source>
          <target state="translated">Esta función no conservará el enmascaramiento de las entradas del MaskedArray.</target>
        </trans-unit>
        <trans-unit id="2a9b1f287c173d330577d2300449ee4dfd3daa91" translate="yes" xml:space="preserve">
          <source>This function works on subclasses of ndarray like &lt;a href=&quot;numpy.ma.array#numpy.ma.array&quot;&gt;&lt;code&gt;ma.array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n trabaja en subclases de ndarray como &lt;a href=&quot;numpy.ma.array#numpy.ma.array&quot;&gt; &lt;code&gt;ma.array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6a52abd835e7532e9891ffc574fd5f4220e58bc" translate="yes" xml:space="preserve">
          <source>This function works similarly to &lt;a href=&quot;#c.PyArray_ObjectType&quot;&gt;&lt;code&gt;PyArray_ObjectType&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) except it handles flexible arrays. The &lt;em&gt;mintype&lt;/em&gt; argument can have an itemsize member and the &lt;em&gt;outtype&lt;/em&gt; argument will have an itemsize member at least as big but perhaps bigger depending on the object &lt;em&gt;op&lt;/em&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n funciona de manera similar a &lt;a href=&quot;#c.PyArray_ObjectType&quot;&gt; &lt;code&gt;PyArray_ObjectType&lt;/code&gt; &lt;/a&gt; (&amp;hellip;) excepto que maneja matrices flexibles. El argumento &lt;em&gt;mintype&lt;/em&gt; puede tener un miembro itemize y el argumento &lt;em&gt;outtype&lt;/em&gt; tendr&amp;aacute; un miembro itemize al menos tan grande pero quiz&amp;aacute;s m&amp;aacute;s grande dependiendo del objeto &lt;em&gt;op&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="24bfcaf02c26210c6ce475ff904488dd4e86859f" translate="yes" xml:space="preserve">
          <source>This functionality can be obtained via &lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt;&lt;code&gt;diag_indices&lt;/code&gt;&lt;/a&gt;, but internally this version uses a much faster implementation that never constructs the indices and uses simple slicing.</source>
          <target state="translated">Esta funcionalidad se puede obtener a trav&amp;eacute;s de &lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt; &lt;code&gt;diag_indices&lt;/code&gt; &lt;/a&gt; , pero internamente esta versi&amp;oacute;n usa una implementaci&amp;oacute;n mucho m&amp;aacute;s r&amp;aacute;pida que nunca construye los &amp;iacute;ndices y usa un corte simple.</target>
        </trans-unit>
        <trans-unit id="8df0c373fc062bf47c7c593de18498c118dd2c34" translate="yes" xml:space="preserve">
          <source>This general purpose 1-d core function assumes that &lt;em&gt;func&lt;/em&gt; is a string representing a method of the input object that takes one argument. The first argument in &lt;em&gt;args&lt;/em&gt; is the method whose function is called, the second argument in &lt;em&gt;args&lt;/em&gt; is the argument passed to the function. The output of the function is stored in the third entry of &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n principal 1-d de prop&amp;oacute;sito general asume que &lt;em&gt;func&lt;/em&gt; es una cadena que representa un m&amp;eacute;todo del objeto de entrada que toma un argumento. El primer argumento en &lt;em&gt;args&lt;/em&gt; es el m&amp;eacute;todo cuya funci&amp;oacute;n se llama, el segundo argumento en &lt;em&gt;args&lt;/em&gt; es el argumento pasado a la funci&amp;oacute;n. La salida de la funci&amp;oacute;n se almacena en la tercera entrada de &lt;em&gt;argumentos&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="71fb70d934e71392e5b977e3d5908e6d14ba65f1" translate="yes" xml:space="preserve">
          <source>This general purpose 1-d core function assumes that &lt;em&gt;func&lt;/em&gt; is a string representing a method of the input object. For each iteration of the loop, the Python object is extracted from the array and its &lt;em&gt;func&lt;/em&gt; method is called returning the result to the output array.</source>
          <target state="translated">Esta funci&amp;oacute;n principal 1-d de prop&amp;oacute;sito general asume que &lt;em&gt;func&lt;/em&gt; es una cadena que representa un m&amp;eacute;todo del objeto de entrada. Para cada iteraci&amp;oacute;n del ciclo, el objeto Python se extrae de la matriz y se llama a su m&amp;eacute;todo &lt;em&gt;func&lt;/em&gt; devolviendo el resultado a la matriz de salida.</target>
        </trans-unit>
        <trans-unit id="ebe1403d50c0fdb0002abff6822f498479faa88e" translate="yes" xml:space="preserve">
          <source>This geometrical property can be seen in two dimensions by plotting generated data-points:</source>
          <target state="translated">Esta propiedad geométrica puede verse en dos dimensiones mediante el trazado de puntos de datos generados:</target>
        </trans-unit>
        <trans-unit id="e1dc7a565ca8eeac49fa065474eb2fca785df357" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the &lt;code&gt;nop&lt;/code&gt; data pointers. If &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; was not specified, each data pointer points to the current data item of the iterator. If no inner iteration was specified, it points to the first data item of the inner loop.</source>
          <target state="translated">Esto devuelve un puntero a los punteros de datos &lt;code&gt;nop&lt;/code&gt; . Si no se especific&amp;oacute; &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; &lt;/a&gt; , cada puntero de datos apunta al elemento de datos actual del iterador. Si no se especific&amp;oacute; una iteraci&amp;oacute;n interna, apunta al primer elemento de datos del ciclo interno.</target>
        </trans-unit>
        <trans-unit id="ad9e42c674af93de7c3d00b721f840bb2a3ba388" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the &lt;code&gt;nop&lt;/code&gt; data type Descrs for the objects being iterated. The result points into &lt;code&gt;iter&lt;/code&gt;, so the caller does not gain any references to the Descrs.</source>
          <target state="translated">Esto devuelve un puntero al tipo de datos &lt;code&gt;nop&lt;/code&gt; Descrs para los objetos que se iteran. El resultado apunta a &lt;code&gt;iter&lt;/code&gt; , por lo que la persona que llama no obtiene ninguna referencia a los Descrs.</target>
        </trans-unit>
        <trans-unit id="04484c93294b17e48ec0072eb06cb15b6ce824d8" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the &lt;code&gt;nop&lt;/code&gt; operand PyObjects that are being iterated. The result points into &lt;code&gt;iter&lt;/code&gt;, so the caller does not gain any references to the PyObjects.</source>
          <target state="translated">Esto devuelve un puntero al operando &lt;code&gt;nop&lt;/code&gt; PyObjects que se est&amp;aacute;n iterando. El resultado apunta a &lt;code&gt;iter&lt;/code&gt; , por lo que la persona que llama no obtiene ninguna referencia a PyObjects.</target>
        </trans-unit>
        <trans-unit id="de4914e9685130ac5234ec503748e2bb51b5d569" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the index being tracked, or NULL if no index is being tracked. It is only useable if one of the flags &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt;&lt;/a&gt; were specified during construction.</source>
          <target state="translated">Esto devuelve un puntero al &amp;iacute;ndice que se est&amp;aacute; rastreando, o NULL si no se est&amp;aacute; rastreando ning&amp;uacute;n &amp;iacute;ndice. Solo se puede utilizar si durante la construcci&amp;oacute;n se especific&amp;oacute; uno de los indicadores &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76e1c3a277ebfaa2cffaf967d76cec0c7e8df194" translate="yes" xml:space="preserve">
          <source>This gives back a reference to a new ndarray view, which is a view into the i-th object in the array &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt;&lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt;&lt;/a&gt;, whose dimensions and strides match the internal optimized iteration pattern. A C-order iteration of this view is equivalent to the iterator&amp;rsquo;s iteration order.</source>
          <target state="translated">Esto devuelve una referencia a una nueva vista ndarray, que es una vista del objeto i-&amp;eacute;simo en la matriz &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt; &lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt; &lt;/a&gt; , cuyas dimensiones y pasos coinciden con el patr&amp;oacute;n de iteraci&amp;oacute;n optimizado interno. Una iteraci&amp;oacute;n de orden C de esta vista es equivalente al orden de iteraci&amp;oacute;n del iterador.</target>
        </trans-unit>
        <trans-unit id="5203e44570d99c05fcfa2df4337f300e46c186be" translate="yes" xml:space="preserve">
          <source>This group is used to call code that may take some time but does not use any Python C-API calls. Thus, the GIL should be released during its calculation.</source>
          <target state="translated">Este grupo se utiliza para llamar a un código que puede tardar un tiempo pero no utiliza ninguna llamada de Python C-API.Por lo tanto,el GIL debe ser liberado durante su cálculo.</target>
        </trans-unit>
        <trans-unit id="5bcd38e59fd6cf93688e83d10245c536ddb55a3a" translate="yes" xml:space="preserve">
          <source>This group is used to re-acquire the Python GIL after it has been released. For example, suppose the GIL has been released (using the previous calls), and then some path in the code (perhaps in a different subroutine) requires use of the Python C-API, then these macros are useful to acquire the GIL. These macros accomplish essentially a reverse of the previous three (acquire the LOCK saving what state it had) and then re-release it with the saved state.</source>
          <target state="translated">Este grupo se utiliza para readquirir el Python GIL después de que haya sido liberado.Por ejemplo,supongamos que el GIL ha sido liberado (usando las llamadas anteriores),y luego algún camino en el código (tal vez en una subrutina diferente)requiere el uso del Python C-API,entonces estas macros son útiles para adquirir el GIL.Estas macros logran esencialmente un reverso de las tres anteriores (adquirir el LOCK guardando el estado que tenía)y luego volver a liberarlo con el estado guardado.</target>
        </trans-unit>
        <trans-unit id="4ba46b0017074bb74d18814c42399e783717828c" translate="yes" xml:space="preserve">
          <source>This guide is an overview and explains the important features; details are found in &lt;a href=&quot;../reference/index#reference&quot;&gt;NumPy Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9e84e903bf2e483b137abd67c279312344ab01" translate="yes" xml:space="preserve">
          <source>This guide will help you decide what to contribute and how to submit it to the official NumPy documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e8bed5de814991ce18d8f44ecb60dc6c28da78" translate="yes" xml:space="preserve">
          <source>This info dict can then be used as input to a &lt;a href=&quot;../distutils#numpy.distutils.misc_util.Configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594238b01d9d524cb6fb409e28f8c563967eda11" translate="yes" xml:space="preserve">
          <source>This information will be collected in writing, and whenever possible the group&amp;rsquo;s deliberations will be recorded and retained (i.e. chat transcripts, email discussions, recorded conference calls, summaries of voice conversations, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fb823e6d137af2611381a853679838cd294872" translate="yes" xml:space="preserve">
          <source>This interface describes homogeneous arrays in the sense that each item of the array has the same &amp;ldquo;type&amp;rdquo;. This type can be very simple or it can be a quite arbitrary and complicated C-like structure.</source>
          <target state="translated">Esta interfaz describe matrices homog&amp;eacute;neas en el sentido de que cada elemento de la matriz tiene el mismo &quot;tipo&quot;. Este tipo puede ser muy simple o puede ser una estructura tipo C bastante arbitraria y complicada.</target>
        </trans-unit>
        <trans-unit id="669065ebaf0e163f0816c64449775393f24910fd" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt;&lt;code&gt;numpy.flatiter&lt;/code&gt;&lt;/a&gt; instance, which acts similarly to, but is not a subclass of, Python&amp;rsquo;s built-in iterator object.</source>
          <target state="translated">Esta es una instancia de &lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt; &lt;code&gt;numpy.flatiter&lt;/code&gt; &lt;/a&gt; , que act&amp;uacute;a de manera similar, pero no es una subclase del objeto iterador integrado de Python.</target>
        </trans-unit>
        <trans-unit id="c616752b11f5b5590e848100c7afe1eff6eb31fb" translate="yes" xml:space="preserve">
          <source>This is a convenience function for quick storage of array data. Information on endianness and precision is lost, so this method is not a good choice for files intended to archive data or transport data between machines with different endianness. Some of these problems can be overcome by outputting the data as text files, at the expense of speed and file size.</source>
          <target state="translated">Esta es una función conveniente para el almacenamiento rápido de los datos de la matriz.Se pierde información sobre la custodia y la precisión,por lo que este método no es una buena elección para los archivos destinados a archivar datos o transportar datos entre máquinas con diferente custodia.Algunos de estos problemas pueden superarse imprimiendo los datos como archivos de texto,a expensas de la velocidad y el tamaño del archivo.</target>
        </trans-unit>
        <trans-unit id="e143678de16b85b14841ff12151066d84f46e8b0" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;a href=&quot;numpy.random.random_sample#numpy.random.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6640731207cc17f5b282e72b4960d28e172178" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;a href=&quot;numpy.random.randomstate.random_sample#numpy.random.RandomState.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91ed9ba3b995348d0b712c7cd0f68c854820dd9" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;a href=&quot;numpy.random.randomstate.standard_normal#numpy.random.RandomState.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637f2f7f4587e6fab14f3bc29737254f8ece5452" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;a href=&quot;numpy.random.standard_normal#numpy.random.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebce3c953e4d7a8aa40a69097fcdae621194f4a" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;code&gt;numpy.random.random_sample&lt;/code&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n conveniente para los usuarios que transfieren c&amp;oacute;digo desde Matlab y envuelve &lt;code&gt;numpy.random.random_sample&lt;/code&gt; . Esa funci&amp;oacute;n toma una tupla para especificar el tama&amp;ntilde;o de la salida, que es consistente con otras funciones de NumPy como &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt; &lt;code&gt;numpy.zeros&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt; &lt;code&gt;numpy.ones&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a8395276aef2b1c09ac3507c06c6aeae1c56edd" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;code&gt;numpy.random.standard_normal&lt;/code&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta es una funci&amp;oacute;n conveniente para los usuarios que transfieren c&amp;oacute;digo desde Matlab y envuelve &lt;code&gt;numpy.random.standard_normal&lt;/code&gt; . Esa funci&amp;oacute;n toma una tupla para especificar el tama&amp;ntilde;o de la salida, que es consistente con otras funciones de NumPy como &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt; &lt;code&gt;numpy.zeros&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt; &lt;code&gt;numpy.ones&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14bed771c7ecf5fb5c7f3988c3e80ea720b90d56" translate="yes" xml:space="preserve">
          <source>This is a convenience, legacy function.</source>
          <target state="translated">Esta es una función de conveniencia,de legado.</target>
        </trans-unit>
        <trans-unit id="8386d98dd4fd3fd3372da264e738d2eec8c472de" translate="yes" xml:space="preserve">
          <source>This is a default converter for output arrays given to functions. If &lt;em&gt;obj&lt;/em&gt; is &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;NULL&lt;/code&gt;, then &lt;em&gt;*address&lt;/em&gt; will be &lt;code&gt;NULL&lt;/code&gt; but the call will succeed. If &lt;a href=&quot;#c.PyArray_Check&quot;&gt;&lt;code&gt;PyArray_Check&lt;/code&gt;&lt;/a&gt; ( &lt;em&gt;obj&lt;/em&gt;) is TRUE then it is returned in &lt;em&gt;*address&lt;/em&gt; without incrementing its reference count.</source>
          <target state="translated">Este es un convertidor predeterminado para matrices de salida dadas a funciones. Si &lt;em&gt;obj&lt;/em&gt; es &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; &lt;/a&gt; o &lt;code&gt;NULL&lt;/code&gt; , entonces &lt;em&gt;* la direcci&amp;oacute;n&lt;/em&gt; ser&amp;aacute; &lt;code&gt;NULL&lt;/code&gt; pero la llamada se realizar&amp;aacute; correctamente. Si &lt;a href=&quot;#c.PyArray_Check&quot;&gt; &lt;code&gt;PyArray_Check&lt;/code&gt; &lt;/a&gt; ( &lt;em&gt;obj&lt;/em&gt; ) es TRUE, entonces se devuelve en &lt;em&gt;* address&lt;/em&gt; sin incrementar su recuento de referencias.</target>
        </trans-unit>
        <trans-unit id="ebf6bd0b70f0575c64ee3df5fdd00ac441de460d" translate="yes" xml:space="preserve">
          <source>This is a function equivalent to C99 copysign: return x with the same sign as y. Works for any value, including inf and nan. Single and extended precisions are available with suffix f and l.</source>
          <target state="translated">Esta es una función equivalente al copiseñal C99:devuelve x con el mismo signo que y.Funciona para cualquier valor,incluyendo inf y nan.Las precisiones simples y extendidas están disponibles con el sufijo f y l.</target>
        </trans-unit>
        <trans-unit id="9c5d9b74232b5b43fdac1227d638313277afa572" translate="yes" xml:space="preserve">
          <source>This is a function equivalent to C99 nextafter: return next representable floating point value from x in the direction of y. Single and extended precisions are available with suffix f and l.</source>
          <target state="translated">Esta es una función equivalente a la del C99 siguiente:devolver el siguiente valor de punto flotante representable de x en la dirección de y.Las precisiones únicas y extendidas están disponibles con el sufijo f y l.</target>
        </trans-unit>
        <trans-unit id="6cef9e65ee084ca1f09a67a21a4b3ef4b9523383" translate="yes" xml:space="preserve">
          <source>This is a function equivalent to Fortran intrinsic. Return distance between x and next representable floating point value from x, e.g. spacing(1) == eps. spacing of nan and +/- inf return nan. Single and extended precisions are available with suffix f and l.</source>
          <target state="translated">Esta es una función equivalente a la del Fortran intrínseco.Distancia de retorno entre x y el siguiente valor representativo de punto flotante de x,por ejemplo,espaciamiento(1)==eps.espaciamiento de nan y +/-inf retorno nan.Las precisiones simples y extendidas están disponibles con el sufijo f y l.</target>
        </trans-unit>
        <trans-unit id="f691a7cca2d5bab9d5322a451f5071b060431b18" translate="yes" xml:space="preserve">
          <source>This is a function pointer for getting the current iterator multi-index, returned by &lt;a href=&quot;#c.NpyIter_GetGetMultiIndex&quot;&gt;&lt;code&gt;NpyIter_GetGetMultiIndex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un puntero de funci&amp;oacute;n para obtener el &amp;iacute;ndice m&amp;uacute;ltiple del iterador actual, devuelto por &lt;a href=&quot;#c.NpyIter_GetGetMultiIndex&quot;&gt; &lt;code&gt;NpyIter_GetGetMultiIndex&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afe9f9d9e5612f0c43f0b6f2ab1ddbf98d2077ed" translate="yes" xml:space="preserve">
          <source>This is a function pointer for the iteration loop, returned by &lt;a href=&quot;#c.NpyIter_GetIterNext&quot;&gt;&lt;code&gt;NpyIter_GetIterNext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este es un puntero de funci&amp;oacute;n para el ciclo de iteraci&amp;oacute;n, devuelto por &lt;a href=&quot;#c.NpyIter_GetIterNext&quot;&gt; &lt;code&gt;NpyIter_GetIterNext&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="682e5efdefc09e15bb711f19c6e22c6512c8e3c9" translate="yes" xml:space="preserve">
          <source>This is a list of flags for each operand. At minimum, one of &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;readwrite&lt;/code&gt;, or &lt;code&gt;writeonly&lt;/code&gt; must be specified.</source>
          <target state="translated">Esta es una lista de banderas para cada operando. Como m&amp;iacute;nimo, se debe especificar uno de &lt;code&gt;readonly&lt;/code&gt; , lectura y &lt;code&gt;readwrite&lt;/code&gt; o solo &lt;code&gt;writeonly&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="daee1c27087ebe5008ffab37bf86e6cef5520692" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 isfinite: works for single, double and extended precision, and return a non 0 value is x is neither a NaN nor an infinity.</source>
          <target state="translated">Esto es una macro,y equivale a C99 isfinito:funciona para precisión simple,doble y extendida,y devolver un valor no 0 es x no es ni un NaN ni un infinito.</target>
        </trans-unit>
        <trans-unit id="80381bd72606c65ade88008349bbceb47f771261" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 isinf: works for single, double and extended precision, and return a non 0 value is x is infinite (positive and negative).</source>
          <target state="translated">Esto es una macro,y equivale a C99 isinf:funciona para precisión simple,doble y extendida,y devuelve un valor no 0 es x es infinito (positivo y negativo).</target>
        </trans-unit>
        <trans-unit id="0a2766c5fc1ee9982025de76ae4aa9f68ecd22db" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 isnan: works for single, double and extended precision, and return a non 0 value is x is a NaN.</source>
          <target state="translated">Esto es una macro,y es equivalente a C99 isan:funciona para precisión simple,doble y extendida,y devolver un valor no 0 es x es un NaN.</target>
        </trans-unit>
        <trans-unit id="ba072edcddb8314e48393832fd145a168df5e278" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 signbit: works for single, double and extended precision, and return a non 0 value is x has the signbit set (that is the number is negative).</source>
          <target state="translated">Se trata de una macro,y es equivalente a la signatura C99:funciona para precisión simple,doble y extendida,y devuelve un valor no 0 es x tiene la signatura establecida (es decir,el número es negativo).</target>
        </trans-unit>
        <trans-unit id="90bdfe8753787f61c5537ce6dde698f20d3651a1" translate="yes" xml:space="preserve">
          <source>This is a quick overview of algebra and arrays in NumPy. It demonstrates how n-dimensional (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e912c91523a3cdb66f72696d355ab45d0a9a414f" translate="yes" xml:space="preserve">
          <source>This is a relatively robust method to compare two arrays whose amplitude is variable.</source>
          <target state="translated">Se trata de un método relativamente robusto para comparar dos conjuntos cuya amplitud es variable.</target>
        </trans-unit>
        <trans-unit id="f9e98f643e268bceb892d520470f87f06bd3ffa1" translate="yes" xml:space="preserve">
          <source>This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">Este es un escalar si tanto &lt;code&gt;x1&lt;/code&gt; como &lt;code&gt;x2&lt;/code&gt; son escalares.</target>
        </trans-unit>
        <trans-unit id="daaf8424b18b172abdada56262484be0114cb050" translate="yes" xml:space="preserve">
          <source>This is a setup.py file for the above code. As before, the module can be build via calling python setup.py build at the command prompt, or installed to site-packages via python setup.py install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6ff4b3ee0d226dd43f100afc9a5e9fc743a95d" translate="yes" xml:space="preserve">
          <source>This is a simple way to build up arrays quickly. There are two use cases.</source>
          <target state="translated">Esta es una forma sencilla de construir conjuntos rápidamente.Hay dos casos de uso.</target>
        </trans-unit>
        <trans-unit id="5bf246dfc26ef7aa2b64da9e4b03eace45db2857" translate="yes" xml:space="preserve">
          <source>This is a special flag that is set if this array represents a copy made because a user required certain flags in &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; and a copy had to be made of some other array (and the user asked for this flag to be set in such a situation). The base attribute then points to the &amp;ldquo;misbehaved&amp;rdquo; array (which is set read_only). :c:func`PyArray_ResolveWritebackIfCopy` will copy its contents back to the &amp;ldquo;misbehaved&amp;rdquo; array (casting if necessary) and will reset the &amp;ldquo;misbehaved&amp;rdquo; array to &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt;. If the &amp;ldquo;misbehaved&amp;rdquo; array was not &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; to begin with then &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; would have returned an error because &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt; would not have been possible.</source>
          <target state="translated">Esta es una bandera especial que se establece si esta matriz representa una copia realizada porque un usuario requiri&amp;oacute; ciertas banderas en &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; y se tuvo que hacer una copia de alguna otra matriz (y el usuario pidi&amp;oacute; que esta bandera se estableciera en tal situaci&amp;oacute;n) . El atributo base luego apunta a la matriz &quot;mal comportada&quot; (que se establece read_only). : c: func`PyArray_ResolveWritebackIfCopy` copiar&amp;aacute; su contenido de nuevo a la matriz &quot;misbehaved&quot; (emitiendo si es necesario) y restablecer&amp;aacute; la matriz &quot;misbehaved&quot; a &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt; . Si la matriz &quot;mal comportada&quot; no era &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt; para empezar, &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; habr&amp;iacute;a devuelto un error porque &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; &lt;/a&gt; no habr&amp;iacute;a sido posible.</target>
        </trans-unit>
        <trans-unit id="d494bbd6ea4e55e23b6320030cf19b92084fb2cb" translate="yes" xml:space="preserve">
          <source>This is a very flexible function; &lt;a href=&quot;numpy.array_repr#numpy.array_repr&quot;&gt;&lt;code&gt;array_repr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.array_str#numpy.array_str&quot;&gt;&lt;code&gt;array_str&lt;/code&gt;&lt;/a&gt; are using &lt;a href=&quot;#numpy.array2string&quot;&gt;&lt;code&gt;array2string&lt;/code&gt;&lt;/a&gt; internally so keywords with the same name should work identically in all three functions.</source>
          <target state="translated">&amp;Eacute;sta es una funci&amp;oacute;n muy flexible; &lt;a href=&quot;numpy.array_repr#numpy.array_repr&quot;&gt; &lt;code&gt;array_repr&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;numpy.array_str#numpy.array_str&quot;&gt; &lt;code&gt;array_str&lt;/code&gt; &lt;/a&gt; utilizan &lt;a href=&quot;#numpy.array2string&quot;&gt; &lt;code&gt;array2string&lt;/code&gt; &lt;/a&gt; internamente, por lo que las palabras clave con el mismo nombre deber&amp;iacute;an funcionar de forma id&amp;eacute;ntica en las tres funciones.</target>
        </trans-unit>
        <trans-unit id="4a20d6c5e13bf5949cf2f01fed00be4a85ee83c8" translate="yes" xml:space="preserve">
          <source>This is a wrapper around &lt;code&gt;cPickle.dump&lt;/code&gt;.</source>
          <target state="translated">Este es un envoltorio de &lt;code&gt;cPickle.dump&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72c0baacc027dca1b05db754f60ee813fa6dbfcf" translate="yes" xml:space="preserve">
          <source>This is a wrapper around &lt;code&gt;cPickle.dumps&lt;/code&gt;.</source>
          <target state="translated">Este es un &lt;code&gt;cPickle.dumps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6ae9c5b7de866ac0dd1b4b58c7a54bd18149043" translate="yes" xml:space="preserve">
          <source>This is almost the same as the result of PyArray_CanCastTypeTo(PyArray_MinScalarType(arr), totype, casting), but it also handles a special case arising because the set of uint values is not a subset of the int values for types with the same number of bits.</source>
          <target state="translated">Esto es casi lo mismo que el resultado de PyArray_CanCastTypeTo(PyArray_MinScalarType(arr),totype,casting),pero también maneja un caso especial que surge porque el conjunto de valores uint no es un subconjunto de los valores int para tipos con el mismo número de bits.</target>
        </trans-unit>
        <trans-unit id="06d558ced35712eb9368208c693942a96aac9510" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;generated/numpy.random.random_sample#numpy.random.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be9e8aa17773bdb0efb0eec1cc4294398d93d4d" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;numpy.random.random_sample#numpy.random.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;numpy.random.random_sample#numpy.random.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt; for the complete documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abef17cd5a41150617b797dd34026cad2a72bcf3" translate="yes" xml:space="preserve">
          <source>This is an example of a func specialized for addition of doubles returning doubles.</source>
          <target state="translated">Este es un ejemplo de una función especializada para la adición de dobles que regresan dobles.</target>
        </trans-unit>
        <trans-unit id="8d1fbd89490e7598a40d0ab430364ea01d0cff36" translate="yes" xml:space="preserve">
          <source>This is an interface to the LAPACK routines &lt;code&gt;dgeqrf&lt;/code&gt;, &lt;code&gt;zgeqrf&lt;/code&gt;, &lt;code&gt;dorgqr&lt;/code&gt;, and &lt;code&gt;zungqr&lt;/code&gt;.</source>
          <target state="translated">&amp;Eacute;sta es una interfaz para las rutinas LAPACK &lt;code&gt;dgeqrf&lt;/code&gt; , &lt;code&gt;zgeqrf&lt;/code&gt; , &lt;code&gt;dorgqr&lt;/code&gt; y &lt;code&gt;zungqr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="944d000b70e8d3d375939368b9ee8662949fdd56" translate="yes" xml:space="preserve">
          <source>This is an iterator object that makes it easy to loop over an N-dimensional array. It is the object returned from the flat attribute of an ndarray. It is also used extensively throughout the implementation internals to loop over an N-dimensional array. The tp_as_mapping interface is implemented so that the iterator object can be indexed (using 1-d indexing), and a few methods are implemented through the tp_methods table. This object implements the next method and can be used anywhere an iterator can be used in Python.</source>
          <target state="translated">Este es un objeto iterador que facilita el bucle sobre una matriz N-dimensional.Es el objeto devuelto por el atributo plano de un ndarray.También se usa extensamente en la implementación interna para hacer un bucle sobre una matriz de N dimensiones.La interfaz tp_as_mapping se implementa para que el objeto iterador pueda ser indexado (usando indexación 1-d),y se implementan algunos métodos a través de la tabla tp_methods.Este objeto implementa el siguiente método y puede ser usado en cualquier lugar donde se pueda utilizar un iterador en Python.</target>
        </trans-unit>
        <trans-unit id="39877197a88959914be74b4d252daeba988b0567" translate="yes" xml:space="preserve">
          <source>This is an iterator object that makes it easy to loop over an N-dimensional neighborhood.</source>
          <target state="translated">Este es un objeto iterador que facilita el bucle sobre un vecindario N-dimensional.</target>
        </trans-unit>
        <trans-unit id="ed4488f4638f84c1e1e4b827cf0b8579c8c851e4" translate="yes" xml:space="preserve">
          <source>This is an opaque pointer type for the iterator. Access to its contents can only be done through the iterator API.</source>
          <target state="translated">Este es un tipo de puntero opaco para el iterador.El acceso a su contenido sólo puede hacerse a través de la API del iterador.</target>
        </trans-unit>
        <trans-unit id="b4c12ec7da04774c2971488c28da077dd954ab73" translate="yes" xml:space="preserve">
          <source>This is defined for &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt;, &lt;strong&gt;SHORT&lt;/strong&gt;, &lt;strong&gt;INT&lt;/strong&gt;, &lt;strong&gt;LONG&lt;/strong&gt;, &lt;strong&gt;LONGLONG&lt;/strong&gt;, &lt;strong&gt;INTP&lt;/strong&gt;</source>
          <target state="translated">Esto est&amp;aacute; definido para &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt; , &lt;strong&gt;SHORT&lt;/strong&gt; , &lt;strong&gt;INT&lt;/strong&gt; , &lt;strong&gt;LONG&lt;/strong&gt; , &lt;strong&gt;LONGLONG&lt;/strong&gt; , &lt;strong&gt;INTP&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1cb38ad4a8a5f0f7eaad9358f9b24fff730b48c2" translate="yes" xml:space="preserve">
          <source>This is defined for all defined for &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt;, &lt;strong&gt;UBYTE&lt;/strong&gt;, &lt;strong&gt;SHORT&lt;/strong&gt;, &lt;strong&gt;USHORT&lt;/strong&gt;, &lt;strong&gt;INT&lt;/strong&gt;, &lt;strong&gt;UINT&lt;/strong&gt;, &lt;strong&gt;LONG&lt;/strong&gt;, &lt;strong&gt;ULONG&lt;/strong&gt;, &lt;strong&gt;LONGLONG&lt;/strong&gt;, &lt;strong&gt;ULONGLONG&lt;/strong&gt;, &lt;strong&gt;INTP&lt;/strong&gt;, &lt;strong&gt;UINTP&lt;/strong&gt;</source>
          <target state="translated">Esto se define para todos los definidos para &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt; , &lt;strong&gt;UBYTE&lt;/strong&gt; , &lt;strong&gt;SHORT&lt;/strong&gt; , &lt;strong&gt;USHORT&lt;/strong&gt; , &lt;strong&gt;INT&lt;/strong&gt; , &lt;strong&gt;UINT&lt;/strong&gt; , &lt;strong&gt;LONG&lt;/strong&gt; , &lt;strong&gt;ULONG&lt;/strong&gt; , &lt;strong&gt;LONGLONG&lt;/strong&gt; , &lt;strong&gt;ULONGLONG&lt;/strong&gt; , &lt;strong&gt;INTP&lt;/strong&gt; , &lt;strong&gt;UINTP&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e53b90b8b35ae60046587f59e89f7b60e6df85a" translate="yes" xml:space="preserve">
          <source>This is different from &lt;a href=&quot;numpy.load#numpy.load&quot;&gt;&lt;code&gt;numpy.load&lt;/code&gt;&lt;/a&gt;, which does not use cPickle but loads the NumPy binary .npy format.</source>
          <target state="translated">Esto es diferente de &lt;a href=&quot;numpy.load#numpy.load&quot;&gt; &lt;code&gt;numpy.load&lt;/code&gt; &lt;/a&gt; , que no usa cPickle pero carga el formato binario .npy de NumPy.</target>
        </trans-unit>
        <trans-unit id="ad4d2eb9b0ee11d28c4e5a349ba480c6768dfc79" translate="yes" xml:space="preserve">
          <source>This is equivalent to (but faster than) the following use of &lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt;&lt;code&gt;ndindex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt;&lt;code&gt;s_&lt;/code&gt;&lt;/a&gt;, which sets each of &lt;code&gt;ii&lt;/code&gt; and &lt;code&gt;kk&lt;/code&gt; to a tuple of indices:</source>
          <target state="translated">Esto es equivalente (pero m&amp;aacute;s r&amp;aacute;pido que) al siguiente uso de &lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt; &lt;code&gt;ndindex&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt; &lt;code&gt;s_&lt;/code&gt; &lt;/a&gt; , que establece cada uno de &lt;code&gt;ii&lt;/code&gt; y &lt;code&gt;kk&lt;/code&gt; en una tupla de &amp;iacute;ndices:</target>
        </trans-unit>
        <trans-unit id="f5170749efab413ba3776c33568562d9c4634a7d" translate="yes" xml:space="preserve">
          <source>This is equivalent to (but faster than) the following use of &lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt;&lt;code&gt;ndindex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt;&lt;code&gt;s_&lt;/code&gt;&lt;/a&gt;, which sets each of &lt;code&gt;ii&lt;/code&gt;, &lt;code&gt;jj&lt;/code&gt;, and &lt;code&gt;kk&lt;/code&gt; to a tuple of indices:</source>
          <target state="translated">Esto es equivalente (pero m&amp;aacute;s r&amp;aacute;pido que) al siguiente uso de &lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt; &lt;code&gt;ndindex&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt; &lt;code&gt;s_&lt;/code&gt; &lt;/a&gt; , que establece cada uno de &lt;code&gt;ii&lt;/code&gt; , &lt;code&gt;jj&lt;/code&gt; y &lt;code&gt;kk&lt;/code&gt; en una tupla de &amp;iacute;ndices:</target>
        </trans-unit>
        <trans-unit id="f723a36a0fdceaf5add767f4dfa10dbdef0cf27e" translate="yes" xml:space="preserve">
          <source>This is equivalent to (but faster than) the following use of &lt;code&gt;ndindex&lt;/code&gt; and &lt;code&gt;s_&lt;/code&gt;, which sets each of &lt;code&gt;ii&lt;/code&gt;, &lt;code&gt;jj&lt;/code&gt;, and &lt;code&gt;kk&lt;/code&gt; to a tuple of indices:</source>
          <target state="translated">Esto es equivalente (pero m&amp;aacute;s r&amp;aacute;pido que) al siguiente uso de &lt;code&gt;ndindex&lt;/code&gt; y &lt;code&gt;s_&lt;/code&gt; , que establece cada uno de &lt;code&gt;ii&lt;/code&gt; , &lt;code&gt;jj&lt;/code&gt; y &lt;code&gt;kk&lt;/code&gt; en una tupla de &amp;iacute;ndices:</target>
        </trans-unit>
        <trans-unit id="9623032760a445ce084ed7cad1f49c8e81cbc730" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.compress(ravel(condition), ravel(arr))&lt;/code&gt;. If &lt;code&gt;condition&lt;/code&gt; is boolean &lt;code&gt;np.extract&lt;/code&gt; is equivalent to &lt;code&gt;arr[condition]&lt;/code&gt;.</source>
          <target state="translated">Esto es equivalente a &lt;code&gt;np.compress(ravel(condition), ravel(arr))&lt;/code&gt; . Si la &lt;code&gt;condition&lt;/code&gt; es booleana &lt;code&gt;np.extract&lt;/code&gt; es equivalente a &lt;code&gt;arr[condition]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="270d637e7c2130210ad3ee654e7e3067ac01221d" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.ma.compress_rowcols(a, 0)&lt;/code&gt;, see &lt;a href=&quot;numpy.ma.compress_rowcols#numpy.ma.compress_rowcols&quot;&gt;&lt;code&gt;compress_rowcols&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512416aca8fa4fb317d305f7a3902a8f4f57268d" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.ma.compress_rowcols(a, 0)&lt;/code&gt;, see &lt;code&gt;extras.compress_rowcols&lt;/code&gt; for details.</source>
          <target state="translated">Esto es equivalente a &lt;code&gt;np.ma.compress_rowcols(a, 0)&lt;/code&gt; , consulte &lt;code&gt;extras.compress_rowcols&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f6ffd133d65cdedb57e33b341f8909e0c883dd56" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.ma.compress_rowcols(a, 1)&lt;/code&gt;, see &lt;a href=&quot;numpy.ma.compress_rowcols#numpy.ma.compress_rowcols&quot;&gt;&lt;code&gt;compress_rowcols&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aabefa5df0b67ecae64f8e5a2fb2a4d5dd2e5ee" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.ma.compress_rowcols(a, 1)&lt;/code&gt;, see &lt;code&gt;extras.compress_rowcols&lt;/code&gt; for details.</source>
          <target state="translated">Esto es equivalente a &lt;code&gt;np.ma.compress_rowcols(a, 1)&lt;/code&gt; , consulte &lt;code&gt;extras.compress_rowcols&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="2e12dd8fc795d33b8f8bcabb847c3e158c738c5e" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the first axis after 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N)&lt;/code&gt;. Rebuilds arrays divided by &lt;a href=&quot;numpy.vsplit#numpy.vsplit&quot;&gt;&lt;code&gt;vsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto es equivalente a la concatenaci&amp;oacute;n a lo largo del primer eje despu&amp;eacute;s de que las matrices 1-D de forma &lt;code&gt;(N,)&lt;/code&gt; se hayan remodelado a &lt;code&gt;(1,N)&lt;/code&gt; . Reconstruye matrices divididas por &lt;a href=&quot;numpy.vsplit#numpy.vsplit&quot;&gt; &lt;code&gt;vsplit&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a1612db7b39849ef3a6bd08b64bed8c3240f816" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the first axis after 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N)&lt;/code&gt;. Rebuilds arrays divided by &lt;code&gt;vsplit&lt;/code&gt;.</source>
          <target state="translated">Esto es equivalente a la concatenaci&amp;oacute;n a lo largo del primer eje despu&amp;eacute;s de que las matrices 1-D de forma &lt;code&gt;(N,)&lt;/code&gt; se hayan remodelado a &lt;code&gt;(1,N)&lt;/code&gt; . Reconstruye matrices divididas por &lt;code&gt;vsplit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9676c88264ef3cd76556860f143548d10e94eb6" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the second axis, except for 1-D arrays where it concatenates along the first axis. Rebuilds arrays divided by &lt;a href=&quot;numpy.hsplit#numpy.hsplit&quot;&gt;&lt;code&gt;hsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto es equivalente a la concatenaci&amp;oacute;n a lo largo del segundo eje, excepto para las matrices 1-D donde se concatena a lo largo del primer eje. Reconstruye matrices divididas por &lt;a href=&quot;numpy.hsplit#numpy.hsplit&quot;&gt; &lt;code&gt;hsplit&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6a5b26fca5a2a732affc24a30a8305bc7f4ee4d" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the second axis, except for 1-D arrays where it concatenates along the first axis. Rebuilds arrays divided by &lt;a href=&quot;numpy.ma.hsplit#numpy.ma.hsplit&quot;&gt;&lt;code&gt;hsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto es equivalente a la concatenaci&amp;oacute;n a lo largo del segundo eje, excepto para las matrices 1-D donde se concatena a lo largo del primer eje. Reconstruye matrices divididas por &lt;a href=&quot;numpy.ma.hsplit#numpy.ma.hsplit&quot;&gt; &lt;code&gt;hsplit&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f3f85e2c1a9f572b9f43cddeb78f8794cecabcf" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the third axis after 2-D arrays of shape &lt;code&gt;(M,N)&lt;/code&gt; have been reshaped to &lt;code&gt;(M,N,1)&lt;/code&gt; and 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N,1)&lt;/code&gt;. Rebuilds arrays divided by &lt;a href=&quot;numpy.dsplit#numpy.dsplit&quot;&gt;&lt;code&gt;dsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto es equivalente a la concatenaci&amp;oacute;n a lo largo del tercer eje despu&amp;eacute;s de que las matrices 2-D de forma &lt;code&gt;(M,N)&lt;/code&gt; se hayan remodelado a &lt;code&gt;(M,N,1)&lt;/code&gt; y las matrices 1-D de forma &lt;code&gt;(N,)&lt;/code&gt; se hayan remodelado a &lt;code&gt;(1,N,1)&lt;/code&gt; . Reconstruye matrices divididas por &lt;a href=&quot;numpy.dsplit#numpy.dsplit&quot;&gt; &lt;code&gt;dsplit&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c6f9c31ab715a660b4d23dc2f49389f45ea5bda" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the third axis after 2-D arrays of shape &lt;code&gt;(M,N)&lt;/code&gt; have been reshaped to &lt;code&gt;(M,N,1)&lt;/code&gt; and 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N,1)&lt;/code&gt;. Rebuilds arrays divided by &lt;code&gt;dsplit&lt;/code&gt;.</source>
          <target state="translated">Esto es equivalente a la concatenaci&amp;oacute;n a lo largo del tercer eje despu&amp;eacute;s de que las matrices 2-D de forma &lt;code&gt;(M,N)&lt;/code&gt; se hayan remodelado a &lt;code&gt;(M,N,1)&lt;/code&gt; y las matrices 1-D de forma &lt;code&gt;(N,)&lt;/code&gt; se hayan remodelado a &lt;code&gt;(1,N,1)&lt;/code&gt; . Reconstruye matrices divididas por &lt;code&gt;dsplit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d218a0a3e8c4c5860255504a9ba19c22b6fab14a" translate="yes" xml:space="preserve">
          <source>This is equivalent to np.nonzero(np.ravel(a))[0].</source>
          <target state="translated">Esto equivale a np.nonzero(np.ravel(a))[0].</target>
        </trans-unit>
        <trans-unit id="c1506fb5159fec603ce600935782977e9cc4a640" translate="yes" xml:space="preserve">
          <source>This is equivalent to the &lt;code&gt;density&lt;/code&gt; argument, but produces incorrect results for unequal bin widths. It should not be used.</source>
          <target state="translated">Esto es equivalente al argumento de &lt;code&gt;density&lt;/code&gt; , pero produce resultados incorrectos para anchos de contenedor desiguales. No deber&amp;iacute;a ser usado.</target>
        </trans-unit>
        <trans-unit id="59cfbae4022883700bb27212977a0aea4a1ca893" translate="yes" xml:space="preserve">
          <source>This is equivalent to the buffer object structure in Python up to the ptr member. On 32-bit platforms (&lt;em&gt;i.e.&lt;/em&gt; if &lt;a href=&quot;c-api.config#c.NPY_SIZEOF_INT&quot;&gt;&lt;code&gt;NPY_SIZEOF_INT&lt;/code&gt;&lt;/a&gt; == &lt;code&gt;NPY_SIZEOF_INTP&lt;/code&gt;), the len member also matches an equivalent member of the buffer object. It is useful to represent a generic single-segment chunk of memory.</source>
          <target state="translated">Esto es equivalente a la estructura del objeto de b&amp;uacute;fer en Python hasta el miembro ptr. En plataformas de 32 bits ( &lt;em&gt;es decir,&lt;/em&gt; si &lt;a href=&quot;c-api.config#c.NPY_SIZEOF_INT&quot;&gt; &lt;code&gt;NPY_SIZEOF_INT&lt;/code&gt; &lt;/a&gt; == &lt;code&gt;NPY_SIZEOF_INTP&lt;/code&gt; ), el miembro len tambi&amp;eacute;n coincide con un miembro equivalente del objeto b&amp;uacute;fer. Es &amp;uacute;til representar un fragmento de memoria gen&amp;eacute;rico de un solo segmento.</target>
        </trans-unit>
        <trans-unit id="4854fe34aab22a7dfbbaf3a63f41795215d42fdd" translate="yes" xml:space="preserve">
          <source>This is equivalent to the buffer object structure in Python up to the ptr member. On 32-bit platforms (&lt;em&gt;i.e.&lt;/em&gt; if &lt;a href=&quot;config#c.NPY_SIZEOF_INT&quot;&gt;&lt;code&gt;NPY_SIZEOF_INT&lt;/code&gt;&lt;/a&gt; == &lt;a href=&quot;config#c.NPY_SIZEOF_INTP&quot;&gt;&lt;code&gt;NPY_SIZEOF_INTP&lt;/code&gt;&lt;/a&gt;), the len member also matches an equivalent member of the buffer object. It is useful to represent a generic single-segment chunk of memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f80c76f4b696fc66848fb5ef4ea2fb36f89e0f9" translate="yes" xml:space="preserve">
          <source>This is equivalent to the buffer object structure in Python up to the ptr member. On 32-bit platforms (&lt;em&gt;i.e.&lt;/em&gt; if &lt;a href=&quot;config#c.NPY_SIZEOF_INT&quot;&gt;&lt;code&gt;NPY_SIZEOF_INT&lt;/code&gt;&lt;/a&gt; == &lt;code&gt;NPY_SIZEOF_INTP&lt;/code&gt;), the len member also matches an equivalent member of the buffer object. It is useful to represent a generic single-segment chunk of memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">Esto es equivalente a:</target>
        </trans-unit>
        <trans-unit id="71a0da6263af85d6d95df709a66cce1cab814a13" translate="yes" xml:space="preserve">
          <source>This is for output arrays, and requires that the flag &lt;a href=&quot;#c.NPY_ITER_WRITEONLY&quot;&gt;&lt;code&gt;NPY_ITER_WRITEONLY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_READWRITE&quot;&gt;&lt;code&gt;NPY_ITER_READWRITE&lt;/code&gt;&lt;/a&gt; be set. If &lt;code&gt;op[i]&lt;/code&gt; is NULL, creates a new array with the final broadcast dimensions, and a layout matching the iteration order of the iterator.</source>
          <target state="translated">Esto es para matrices de salida y requiere que se &lt;a href=&quot;#c.NPY_ITER_WRITEONLY&quot;&gt; &lt;code&gt;NPY_ITER_WRITEONLY&lt;/code&gt; &lt;/a&gt; el indicador NPY_ITER_WRITEONLY o &lt;a href=&quot;#c.NPY_ITER_READWRITE&quot;&gt; &lt;code&gt;NPY_ITER_READWRITE&lt;/code&gt; &lt;/a&gt; . Si &lt;code&gt;op[i]&lt;/code&gt; es NULL, crea una nueva matriz con las dimensiones de difusi&amp;oacute;n finales y un dise&amp;ntilde;o que coincide con el orden de iteraci&amp;oacute;n del iterador.</target>
        </trans-unit>
        <trans-unit id="e43476e1c5b08d4915c75da838fbd060f4d5522a" translate="yes" xml:space="preserve">
          <source>This is how subclasses of the ndarray class are able to return views that preserve the class type. When taking a view, the standard ndarray machinery creates the new ndarray object with something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271064c73ce5e7dc4de339611f7b4db1a780a7f2" translate="yes" xml:space="preserve">
          <source>This is implemented using the &lt;code&gt;_geev&lt;/code&gt; LAPACK routines which compute the eigenvalues and eigenvectors of general square arrays.</source>
          <target state="translated">Esto se implementa usando las rutinas &lt;code&gt;_geev&lt;/code&gt; LAPACK que calculan los autovalores y autovectores de arreglos cuadrados generales.</target>
        </trans-unit>
        <trans-unit id="caec4ff4a054237a51c7a499531b302398f70bf8" translate="yes" xml:space="preserve">
          <source>This is indicated in the documentation via input parameter specifications such as &lt;code&gt;a : (..., M, M) array_like&lt;/code&gt;. This means that if for instance given an input array &lt;code&gt;a.shape == (N, M, M)&lt;/code&gt;, it is interpreted as a &amp;ldquo;stack&amp;rdquo; of N matrices, each of size M-by-M. Similar specification applies to return values, for instance the determinant has &lt;code&gt;det : (...)&lt;/code&gt; and will in this case return an array of shape &lt;code&gt;det(a).shape == (N,)&lt;/code&gt;. This generalizes to linear algebra operations on higher-dimensional arrays: the last 1 or 2 dimensions of a multidimensional array are interpreted as vectors or matrices, as appropriate for each operation.</source>
          <target state="translated">Esto se indica en la documentaci&amp;oacute;n a trav&amp;eacute;s de especificaciones de par&amp;aacute;metros de entrada como &lt;code&gt;a : (..., M, M) array_like&lt;/code&gt; . Esto significa que si, por ejemplo, se le da una matriz de entrada &lt;code&gt;a.shape == (N, M, M)&lt;/code&gt; , se interpreta como una &quot;pila&quot; de N matrices, cada una de tama&amp;ntilde;o M-por-M. Se aplica una especificaci&amp;oacute;n similar a los valores de retorno, por ejemplo, el determinante tiene &lt;code&gt;det : (...)&lt;/code&gt; y en este caso devolver&amp;aacute; una matriz de forma &lt;code&gt;det(a).shape == (N,)&lt;/code&gt; . Esto se generaliza a las operaciones de &amp;aacute;lgebra lineal en matrices de dimensiones superiores: las &amp;uacute;ltimas 1 o 2 dimensiones de una matriz multidimensional se interpretan como vectores o matrices, seg&amp;uacute;n corresponda para cada operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="142401db7b88684f56ec37cbd8f1ca65b6bf6771" translate="yes" xml:space="preserve">
          <source>This is intended for working with source directories that are in an SVN repository.</source>
          <target state="translated">Esto está pensado para trabajar con directorios de fuentes que están en un repositorio SVN.</target>
        </trans-unit>
        <trans-unit id="2fa46c7f117cac1c645f428d7403c2f212b4011c" translate="yes" xml:space="preserve">
          <source>This is like the builtin &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#issubclass&quot;&gt;&lt;code&gt;issubclass&lt;/code&gt;&lt;/a&gt;, but for &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f497c1d2afa9510500c0e5d52cafff444023b2a6" translate="yes" xml:space="preserve">
          <source>This is needed by all Python objects. It consists of (at least) a reference count member ( &lt;code&gt;ob_refcnt&lt;/code&gt; ) and a pointer to the typeobject ( &lt;code&gt;ob_type&lt;/code&gt; ). (Other elements may also be present if Python was compiled with special options see Include/object.h in the Python source tree for more information). The ob_type member points to a Python type object.</source>
          <target state="translated">Esto es necesario para todos los objetos de Python. Consiste en (al menos) un miembro de recuento de referencia ( &lt;code&gt;ob_refcnt&lt;/code&gt; ) y un puntero al tipo de objeto ( &lt;code&gt;ob_type&lt;/code&gt; ). (Otros elementos tambi&amp;eacute;n pueden estar presentes si Python se compil&amp;oacute; con opciones especiales, consulte Incluir / object.h en el &amp;aacute;rbol de fuentes de Python para obtener m&amp;aacute;s informaci&amp;oacute;n). El miembro ob_type apunta a un objeto de tipo Python.</target>
        </trans-unit>
        <trans-unit id="1833467ed646c8f15235c25f8dda305acdfb6a3c" translate="yes" xml:space="preserve">
          <source>This is not a comprehensive &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt; reference. It&amp;rsquo;s tailored to the &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; hosting service. You may well find better or quicker ways of getting stuff done with &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;, but these should get you started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a35d83e287759b7b772b39fa92c000861d127f" translate="yes" xml:space="preserve">
          <source>This is often used when a function returns multiple values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daec8aebc5133f38a1a0c690c98645fa0bf3cd6e" translate="yes" xml:space="preserve">
          <source>This is particularly useful for evaluating functions of multiple dimensions on a regular grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d53d8ee495c7f638b914dab0d30642c949b736" translate="yes" xml:space="preserve">
          <source>This is presumably the most common case of large array creation. The details, of course, depend greatly on the format of data on disk and so this section can only give general pointers on how to handle various formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8997d00c105166c9b4b9f773f5d0cdd6fa01f2" translate="yes" xml:space="preserve">
          <source>This is raised when an binary operation is passed Poly objects with different domains.</source>
          <target state="translated">Esto se eleva cuando se pasa una operación binaria Objetos poli con diferentes dominios.</target>
        </trans-unit>
        <trans-unit id="e57f721854d8f362e4016c48c315f6301f247f80" translate="yes" xml:space="preserve">
          <source>This is really &lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt;&lt;code&gt;irfftn&lt;/code&gt;&lt;/a&gt; with different defaults. For more details see &lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt;&lt;code&gt;irfftn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto es realmente &lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt; &lt;code&gt;irfftn&lt;/code&gt; &lt;/a&gt; con diferentes valores predeterminados. Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt; &lt;code&gt;irfftn&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed9f359368f007790ca5657cc8ec4082492a200b" translate="yes" xml:space="preserve">
          <source>This is really just &lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt;&lt;code&gt;rfftn&lt;/code&gt;&lt;/a&gt; with different default behavior. For more details see &lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt;&lt;code&gt;rfftn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto es realmente &lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt; &lt;code&gt;rfftn&lt;/code&gt; &lt;/a&gt; con un comportamiento predeterminado diferente. Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt; &lt;code&gt;rfftn&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77938c782ff5f0e5fde7cba046a7d880a01771f8" translate="yes" xml:space="preserve">
          <source>This is reasonable enough, but watch out if you want to use Python&amp;rsquo;s &lt;code&gt;+=&lt;/code&gt; construct, as it may not do what you expect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef26806f6ea74b6485ab483c2778eff715e4572" translate="yes" xml:space="preserve">
          <source>This is short-hand for &lt;code&gt;np.r_['-1,2,0', index expression]&lt;/code&gt;, which is useful because of its common occurrence. In particular, arrays will be stacked along their last axis after being upgraded to at least 2-D with 1&amp;rsquo;s post-pended to the shape (column vectors made out of 1-D arrays).</source>
          <target state="translated">Esta es una abreviatura de &lt;code&gt;np.r_['-1,2,0', index expression]&lt;/code&gt; , que es &amp;uacute;til debido a su frecuencia com&amp;uacute;n. En particular, las matrices se apilar&amp;aacute;n a lo largo de su &amp;uacute;ltimo eje despu&amp;eacute;s de actualizarse a al menos 2-D con los 1 adjuntos a la forma (vectores de columna hechos de matrices 1-D).</target>
        </trans-unit>
        <trans-unit id="1c88394abdc65a1b05a8dd5d8683693375531a89" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#c.PyArray_NewFromDescr&quot;&gt;&lt;code&gt;PyArray_NewFromDescr&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) except you specify the data-type descriptor with &lt;em&gt;type_num&lt;/em&gt; and &lt;em&gt;itemsize&lt;/em&gt;, where &lt;em&gt;type_num&lt;/em&gt; corresponds to a builtin (or user-defined) type. If the type always has the same number of bytes, then itemsize is ignored. Otherwise, itemsize specifies the particular size of this array.</source>
          <target state="translated">Esto es similar a &lt;a href=&quot;#c.PyArray_NewFromDescr&quot;&gt; &lt;code&gt;PyArray_NewFromDescr&lt;/code&gt; &lt;/a&gt; (&amp;hellip;) excepto que especifica el descriptor de tipo de datos con &lt;em&gt;type_num&lt;/em&gt; y &lt;em&gt;itemize&lt;/em&gt; , donde &lt;em&gt;type_num&lt;/em&gt; corresponde a un tipo incorporado (o definido por el usuario). Si el tipo siempre tiene el mismo n&amp;uacute;mero de bytes, se ignora el tama&amp;ntilde;o del elemento. De lo contrario, itemize especifica el tama&amp;ntilde;o particular de esta matriz.</target>
        </trans-unit>
        <trans-unit id="ed43500d52b0e3a9d4bae70ddb5bfbe100ff1dd8" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;numpy.logspace#numpy.logspace&quot;&gt;&lt;code&gt;logspace&lt;/code&gt;&lt;/a&gt;, but with endpoints specified directly. Each output sample is a constant multiple of the previous.</source>
          <target state="translated">Esto es similar al &lt;a href=&quot;numpy.logspace#numpy.logspace&quot;&gt; &lt;code&gt;logspace&lt;/code&gt; &lt;/a&gt; de registro , pero con los puntos finales especificados directamente. Cada muestra de salida es un m&amp;uacute;ltiplo constante de la anterior.</target>
        </trans-unit>
        <trans-unit id="c5fcd33629df929b0bdb1a57cfbe776ef13fe120" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;apply_along_axis&lt;/code&gt;, but treats the fields of a structured array as an extra axis. The fields are all first cast to a common type following the type-promotion rules from &lt;a href=&quot;../reference/generated/numpy.result_type#numpy.result_type&quot;&gt;&lt;code&gt;numpy.result_type&lt;/code&gt;&lt;/a&gt; applied to the field&amp;rsquo;s dtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852b3e753a1b8cdcb6346c93877a110d2d715f72" translate="yes" xml:space="preserve">
          <source>This is similar to choose or select, except that functions are evaluated on elements of &lt;code&gt;x&lt;/code&gt; that satisfy the corresponding condition from &lt;code&gt;condlist&lt;/code&gt;.</source>
          <target state="translated">Esto es similar a elegir o seleccionar, excepto que las funciones se eval&amp;uacute;an en elementos de &lt;code&gt;x&lt;/code&gt; que satisfacen la condici&amp;oacute;n correspondiente de &lt;code&gt;condlist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c3a50a4a39023a7aa06d7ec91f3ecdac2409160" translate="yes" xml:space="preserve">
          <source>This is the &amp;ldquo;average&amp;rdquo; periodically compounded rate of return that gives a net present value of 0.0; for a more complete explanation, see Notes below.</source>
          <target state="translated">&amp;Eacute;sta es la tasa de rendimiento &amp;ldquo;promedio&amp;rdquo; compuesta peri&amp;oacute;dicamente que da un valor presente neto de 0.0; para obtener una explicaci&amp;oacute;n m&amp;aacute;s completa, consulte las Notas a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0dbc891d865ae88284f9bfa0a0edbf0c765484c8" translate="yes" xml:space="preserve">
          <source>This is the 1-d core function used by the dynamic ufuncs created by umath.frompyfunc(function, nin, nout). In this case &lt;em&gt;func&lt;/em&gt; is a pointer to a &lt;a href=&quot;#c.PyUFunc_PyFuncData&quot;&gt;&lt;code&gt;PyUFunc_PyFuncData&lt;/code&gt;&lt;/a&gt; structure which has definition</source>
          <target state="translated">Esta es la funci&amp;oacute;n principal 1-d utilizada por los ufuncs din&amp;aacute;micos creados por umath.frompyfunc (funci&amp;oacute;n, nin, nout). En este caso, &lt;em&gt;func&lt;/em&gt; es un puntero a una estructura &lt;a href=&quot;#c.PyUFunc_PyFuncData&quot;&gt; &lt;code&gt;PyUFunc_PyFuncData&lt;/code&gt; &lt;/a&gt; que tiene definici&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="692a8cf195747eb5dfe92c87d684aef132c27f68" translate="yes" xml:space="preserve">
          <source>This is the NumPy implementation of the C library function fmod, the remainder has the same sign as the dividend &lt;code&gt;x1&lt;/code&gt;. It is equivalent to the Matlab(TM) &lt;code&gt;rem&lt;/code&gt; function and should not be confused with the Python modulus operator &lt;code&gt;x1 % x2&lt;/code&gt;.</source>
          <target state="translated">Esta es la implementaci&amp;oacute;n de NumPy de la funci&amp;oacute;n de biblioteca de C fmod, el resto tiene el mismo signo que el dividendo &lt;code&gt;x1&lt;/code&gt; . Es equivalente a la funci&amp;oacute;n &lt;code&gt;rem&lt;/code&gt; de Matlab (TM) y no debe confundirse con el operador de m&amp;oacute;dulo de Python &lt;code&gt;x1 % x2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f70c1d8b15029e4bba377d8eb228f8ad3621041" translate="yes" xml:space="preserve">
          <source>This is the code that handles the situation whenever the input and/or output arrays are either misaligned or of the wrong data-type (including being byte-swapped) from what the underlying 1-D loop expects. The arrays are also assumed to be non-contiguous. The code works very much like the strided-loop except for the inner 1-D loop is modified so that pre-processing is performed on the inputs and post- processing is performed on the outputs in bufsize chunks (where bufsize is a user-settable parameter). The underlying 1-D computational loop is called on data that is copied over (if it needs to be). The setup code and the loop code is considerably more complicated in this case because it has to handle:</source>
          <target state="translated">Este es el código que maneja la situación cuando los arreglos de entrada y/o salida están desalineados o son del tipo de datos equivocado (incluyendo el intercambio de bytes)de lo que el bucle 1-D subyacente espera.También se supone que los arreglos no son contiguos.El código funciona de forma muy parecida al bucle de pasos,excepto que el bucle interno de 1-D se modifica de forma que el preprocesamiento se realiza en las entradas y el posprocesamiento se realiza en las salidas en trozos de tamaño bufs (donde el tamaño bufs es un parámetro que puede establecer el usuario).El bucle computacional 1-D subyacente se llama sobre los datos que se copian (si es necesario).El código de configuración y el código del bucle es considerablemente más complicado en este caso porque tiene que manejarse:</target>
        </trans-unit>
        <trans-unit id="97fdbbb09a00c84ec3c672ccc77676c7df568ed7" translate="yes" xml:space="preserve">
          <source>This is the docstring for the example.py module. Modules names should have short, all-lowercase names. The module name may have underscores if this improves readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938b03b0272fe214e0bd4545d8c331ea33459bae" translate="yes" xml:space="preserve">
          <source>This is the exact same method signature for &lt;code&gt;np.sum&lt;/code&gt;, so now if a user calls &lt;code&gt;np.sum&lt;/code&gt; on this object, numpy will call the object&amp;rsquo;s own &lt;code&gt;sum&lt;/code&gt; method and pass in these arguments enumerated above in the signature, and no errors will be raised because the signatures are completely compatible with each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754ab86dfdc616fd9f3289ae80c9fb161f6f47b6" translate="yes" xml:space="preserve">
          <source>This is the main array creation function. Most new arrays are created with this flexible function.</source>
          <target state="translated">Esta es la principal función de creación de la matriz.La mayoría de las nuevas matrices se crean con esta función flexible.</target>
        </trans-unit>
        <trans-unit id="ae96a364309b5dfa1ba1a5f179699cc1e3ea0752" translate="yes" xml:space="preserve">
          <source>This is the main function used to obtain an array from any nested sequence, or object that exposes the array interface, &lt;em&gt;op&lt;/em&gt;. The parameters allow specification of the required &lt;em&gt;dtype&lt;/em&gt;, the minimum (&lt;em&gt;min_depth&lt;/em&gt;) and maximum (&lt;em&gt;max_depth&lt;/em&gt;) number of dimensions acceptable, and other &lt;em&gt;requirements&lt;/em&gt; for the array. This function &lt;strong&gt;steals a reference&lt;/strong&gt; to the dtype argument, which needs to be a &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr&lt;/code&gt;&lt;/a&gt; structure indicating the desired data-type (including required byteorder). The &lt;em&gt;dtype&lt;/em&gt; argument may be &lt;code&gt;NULL&lt;/code&gt;, indicating that any data-type (and byteorder) is acceptable. Unless &lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt;&lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt;&lt;/a&gt; is present in &lt;code&gt;flags&lt;/code&gt;, this call will generate an error if the data type cannot be safely obtained from the object. If you want to use &lt;code&gt;NULL&lt;/code&gt; for the &lt;em&gt;dtype&lt;/em&gt; and ensure the array is notswapped then use &lt;a href=&quot;#c.PyArray_CheckFromAny&quot;&gt;&lt;code&gt;PyArray_CheckFromAny&lt;/code&gt;&lt;/a&gt;. A value of 0 for either of the depth parameters causes the parameter to be ignored. Any of the following array flags can be added (&lt;em&gt;e.g.&lt;/em&gt; using |) to get the &lt;em&gt;requirements&lt;/em&gt; argument. If your code can handle general (&lt;em&gt;e.g.&lt;/em&gt; strided, byte-swapped, or unaligned arrays) then &lt;em&gt;requirements&lt;/em&gt; may be 0. Also, if &lt;em&gt;op&lt;/em&gt; is not already an array (or does not expose the array interface), then a new array will be created (and filled from &lt;em&gt;op&lt;/em&gt; using the sequence protocol). The new array will have &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; as its flags member. The &lt;em&gt;context&lt;/em&gt; argument is passed to the &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method of &lt;em&gt;op&lt;/em&gt; and is only used if the array is constructed that way. Almost always this parameter is &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">Esta es la funci&amp;oacute;n principal que se utiliza para obtener una matriz de cualquier secuencia anidada u objeto que expone la interfaz de matriz, &lt;em&gt;op&lt;/em&gt; . Los par&amp;aacute;metros permiten la especificaci&amp;oacute;n del &lt;em&gt;dtype&lt;/em&gt; requerido , el n&amp;uacute;mero m&amp;iacute;nimo ( &lt;em&gt;min_depth&lt;/em&gt; ) y m&amp;aacute;ximo ( &lt;em&gt;max_depth&lt;/em&gt; ) de dimensiones aceptables, y otros &lt;em&gt;requisitos&lt;/em&gt; para la matriz. Esta funci&amp;oacute;n &lt;strong&gt;roba una referencia&lt;/strong&gt; al argumento dtype, que debe ser una estructura &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr&lt;/code&gt; &lt;/a&gt; que indique el tipo de datos deseado (incluido el orden de bytes requerido). El argumento &lt;em&gt;dtype&lt;/em&gt; puede ser &lt;code&gt;NULL&lt;/code&gt; , lo que indica que cualquier tipo de datos (y orden de bytes) es aceptable. A menos que &lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt; &lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt; &lt;/a&gt;est&amp;aacute; presente en las &lt;code&gt;flags&lt;/code&gt; , esta llamada generar&amp;aacute; un error si el tipo de datos no se puede obtener de forma segura del objeto. Si desea usar &lt;code&gt;NULL&lt;/code&gt; para &lt;em&gt;dtype&lt;/em&gt; y asegurarse de que la matriz no se cambie, use &lt;a href=&quot;#c.PyArray_CheckFromAny&quot;&gt; &lt;code&gt;PyArray_CheckFromAny&lt;/code&gt; &lt;/a&gt; . Un valor de 0 para cualquiera de los par&amp;aacute;metros de profundidad hace que se ignore el par&amp;aacute;metro. Se puede agregar cualquiera de los siguientes indicadores de matriz ( &lt;em&gt;por ejemplo,&lt;/em&gt; usando |) para obtener el argumento de &lt;em&gt;requisitos&lt;/em&gt; . Si su c&amp;oacute;digo puede manejar arreglos generales ( &lt;em&gt;por ejemplo&lt;/em&gt; , strided, byte-swapped o no alineados), entonces los &lt;em&gt;requisitos&lt;/em&gt; pueden ser 0. Adem&amp;aacute;s, si &lt;em&gt;op&lt;/em&gt;no es ya una matriz (o no expone la interfaz de la matriz), entonces se crear&amp;aacute; una nueva matriz (y se completar&amp;aacute; desde la &lt;em&gt;operaci&amp;oacute;n&lt;/em&gt; utilizando el protocolo de secuencia). La nueva matriz tendr&amp;aacute; &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt; &lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt; &lt;/a&gt; como su miembro de banderas. El argumento de &lt;em&gt;contexto&lt;/em&gt; se pasa al m&amp;eacute;todo &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; &lt;/a&gt; de &lt;em&gt;op&lt;/em&gt; y solo se usa si la matriz se construye de esa manera. Casi siempre este par&amp;aacute;metro es &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ef891de4e312961f5d43ee05c17aa291119de54" translate="yes" xml:space="preserve">
          <source>This is the main function used to obtain an array from any nested sequence, or object that exposes the array interface, &lt;em&gt;op&lt;/em&gt;. The parameters allow specification of the required &lt;em&gt;dtype&lt;/em&gt;, the minimum (&lt;em&gt;min_depth&lt;/em&gt;) and maximum (&lt;em&gt;max_depth&lt;/em&gt;) number of dimensions acceptable, and other &lt;em&gt;requirements&lt;/em&gt; for the array. This function &lt;strong&gt;steals a reference&lt;/strong&gt; to the dtype argument, which needs to be a &lt;a href=&quot;types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr&lt;/code&gt;&lt;/a&gt; structure indicating the desired data-type (including required byteorder). The &lt;em&gt;dtype&lt;/em&gt; argument may be &lt;code&gt;NULL&lt;/code&gt;, indicating that any data-type (and byteorder) is acceptable. Unless &lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt;&lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt;&lt;/a&gt; is present in &lt;code&gt;flags&lt;/code&gt;, this call will generate an error if the data type cannot be safely obtained from the object. If you want to use &lt;code&gt;NULL&lt;/code&gt; for the &lt;em&gt;dtype&lt;/em&gt; and ensure the array is notswapped then use &lt;a href=&quot;#c.PyArray_CheckFromAny&quot;&gt;&lt;code&gt;PyArray_CheckFromAny&lt;/code&gt;&lt;/a&gt;. A value of 0 for either of the depth parameters causes the parameter to be ignored. Any of the following array flags can be added (&lt;em&gt;e.g.&lt;/em&gt; using |) to get the &lt;em&gt;requirements&lt;/em&gt; argument. If your code can handle general (&lt;em&gt;e.g.&lt;/em&gt; strided, byte-swapped, or unaligned arrays) then &lt;em&gt;requirements&lt;/em&gt; may be 0. Also, if &lt;em&gt;op&lt;/em&gt; is not already an array (or does not expose the array interface), then a new array will be created (and filled from &lt;em&gt;op&lt;/em&gt; using the sequence protocol). The new array will have &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; as its flags member. The &lt;em&gt;context&lt;/em&gt; argument is unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edcab26afcb3f2afd03c8c948c52b8fae9f82e5" translate="yes" xml:space="preserve">
          <source>This is the manual followed by NumPy&amp;rsquo;s Code of Conduct Committee. It&amp;rsquo;s used when we respond to an issue to make sure we&amp;rsquo;re consistent and fair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec8c6b5a6fa5ea604ca73fde0faa7f48e61f60d" translate="yes" xml:space="preserve">
          <source>This is the masked array version of &lt;a href=&quot;numpy.power#numpy.power&quot;&gt;&lt;code&gt;numpy.power&lt;/code&gt;&lt;/a&gt;. For details see &lt;a href=&quot;numpy.power#numpy.power&quot;&gt;&lt;code&gt;numpy.power&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta es la versi&amp;oacute;n de matriz enmascarada de &lt;a href=&quot;numpy.power#numpy.power&quot;&gt; &lt;code&gt;numpy.power&lt;/code&gt; &lt;/a&gt; . Para obtener m&amp;aacute;s &lt;a href=&quot;numpy.power#numpy.power&quot;&gt; &lt;code&gt;numpy.power&lt;/code&gt; &lt;/a&gt; consulte numpy.power .</target>
        </trans-unit>
        <trans-unit id="c5b5fdafede3bb67234ee18c22a5b997e8095961" translate="yes" xml:space="preserve">
          <source>This is the masked array version of &lt;code&gt;lib.index_tricks.RClass&lt;/code&gt;.</source>
          <target state="translated">Esta es la versi&amp;oacute;n de matriz enmascarada de &lt;code&gt;lib.index_tricks.RClass&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf3cf3ae9cebee8b7306a5e44915e23de00facf1" translate="yes" xml:space="preserve">
          <source>This is the masked equivalent of the &lt;a href=&quot;numpy.resize#numpy.resize&quot;&gt;&lt;code&gt;numpy.resize&lt;/code&gt;&lt;/a&gt; function. The new array is filled with repeated copies of &lt;code&gt;x&lt;/code&gt; (in the order that the data are stored in memory). If &lt;code&gt;x&lt;/code&gt; is masked, the new array will be masked, and the new mask will be a repetition of the old one.</source>
          <target state="translated">Este es el equivalente enmascarado de la funci&amp;oacute;n &lt;a href=&quot;numpy.resize#numpy.resize&quot;&gt; &lt;code&gt;numpy.resize&lt;/code&gt; &lt;/a&gt; . La nueva matriz se llena con copias repetidas de &lt;code&gt;x&lt;/code&gt; (en el orden en que los datos se almacenan en la memoria). Si &lt;code&gt;x&lt;/code&gt; est&amp;aacute; enmascarado, la nueva matriz estar&amp;aacute; enmascarada y la nueva m&amp;aacute;scara ser&amp;aacute; una repetici&amp;oacute;n de la anterior.</target>
        </trans-unit>
        <trans-unit id="0cb42e32affa717b335b3825c72824c3d8e04997" translate="yes" xml:space="preserve">
          <source>This is the most flexible form of specification since it allows control over the byte-offsets of the fields and the itemsize of the structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e638e46153cb5bd9d2b2cfadb202d5a4f7f60071" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.all#numpy.ndarray.all&quot;&gt;&lt;code&gt;ndarray.all&lt;/code&gt;&lt;/a&gt;, but it returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Es lo mismo que &lt;a href=&quot;numpy.ndarray.all#numpy.ndarray.all&quot;&gt; &lt;code&gt;ndarray.all&lt;/code&gt; &lt;/a&gt; , pero devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b28c44c91a00424416f03ba6b4985acf74627eb2" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt;&lt;code&gt;ndarray.argmax&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt;&lt;code&gt;ndarray.argmax&lt;/code&gt;&lt;/a&gt; would return an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Es lo mismo que &lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt; &lt;code&gt;ndarray.argmax&lt;/code&gt; &lt;/a&gt; , pero devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; donde &lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt; &lt;code&gt;ndarray.argmax&lt;/code&gt; &lt;/a&gt; devolver&amp;iacute;a un &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22b8e33a3b4d40024b90c85a13a94be90c9158a1" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt;&lt;code&gt;ndarray.argmin&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt;&lt;code&gt;ndarray.argmin&lt;/code&gt;&lt;/a&gt; would return an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Es lo mismo que &lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt; &lt;code&gt;ndarray.argmin&lt;/code&gt; &lt;/a&gt; , pero devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; donde &lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt; &lt;code&gt;ndarray.argmin&lt;/code&gt; &lt;/a&gt; devolver&amp;iacute;a un &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1090f814c7b352e9c36a05ce2322d963cddbde3" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt;&lt;code&gt;ndarray.max&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt;&lt;code&gt;ndarray.max&lt;/code&gt;&lt;/a&gt; would return an ndarray.</source>
          <target state="translated">Es lo mismo que &lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt; &lt;code&gt;ndarray.max&lt;/code&gt; &lt;/a&gt; , pero devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; donde &lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt; &lt;code&gt;ndarray.max&lt;/code&gt; &lt;/a&gt; devolver&amp;iacute;a un ndarray.</target>
        </trans-unit>
        <trans-unit id="74e44d918d1f15516605ec010845ff539cc17530" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt;&lt;code&gt;ndarray.min&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt;&lt;code&gt;ndarray.min&lt;/code&gt;&lt;/a&gt; would return an ndarray.</source>
          <target state="translated">Es lo mismo que &lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt; &lt;code&gt;ndarray.min&lt;/code&gt; &lt;/a&gt; , pero devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; donde &lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt; &lt;code&gt;ndarray.min&lt;/code&gt; &lt;/a&gt; devolver&amp;iacute;a un ndarray.</target>
        </trans-unit>
        <trans-unit id="124e720446d4f3612122d427a64991837042df14" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.std#numpy.ndarray.std&quot;&gt;&lt;code&gt;ndarray.std&lt;/code&gt;&lt;/a&gt;, except that where an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; would be returned, a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object is returned instead.</source>
          <target state="translated">Esto es lo mismo que &lt;a href=&quot;numpy.ndarray.std#numpy.ndarray.std&quot;&gt; &lt;code&gt;ndarray.std&lt;/code&gt; &lt;/a&gt; , excepto que cuando se &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; un ndarray , en su lugar se devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0acdb03a11a0405720f9b33ec10bd3e67d6e4fa" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt;&lt;code&gt;ndarray.sum&lt;/code&gt;&lt;/a&gt;, except that where an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; would be returned, a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object is returned instead.</source>
          <target state="translated">Esto es lo mismo que &lt;a href=&quot;numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt; &lt;code&gt;ndarray.sum&lt;/code&gt; &lt;/a&gt; , excepto que cuando se &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; un ndarray , en su lugar se devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b894bff66f53b91713c65daaeb95b50cb72fdfc" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.var#numpy.ndarray.var&quot;&gt;&lt;code&gt;ndarray.var&lt;/code&gt;&lt;/a&gt;, except that where an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; would be returned, a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object is returned instead.</source>
          <target state="translated">Esto es lo mismo que &lt;a href=&quot;numpy.ndarray.var#numpy.ndarray.var&quot;&gt; &lt;code&gt;ndarray.var&lt;/code&gt; &lt;/a&gt; , excepto que cuando se &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; un ndarray , en su lugar se devuelve un objeto de &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6c0a4b3ef29201f690f9b9b88a69b8608d63748" translate="yes" xml:space="preserve">
          <source>This is the same for half-precision float as npy_nextafter and npy_nextafterf described in the low-level floating point section.</source>
          <target state="translated">Esto es lo mismo para la flotación de media precisión que el npy_nextafter y el npy_nextafterf descritos en la sección de punto flotante de bajo nivel.</target>
        </trans-unit>
        <trans-unit id="5a28a11e64cd4476f1fd45344cb04aff7bece602" translate="yes" xml:space="preserve">
          <source>This is the same for half-precision float as npy_spacing and npy_spacingf described in the low-level floating point section.</source>
          <target state="translated">Esto es lo mismo para la flotación de media precisión que el npy_spacing y el npy_spacingf descritos en la sección de punto flotante de bajo nivel.</target>
        </trans-unit>
        <trans-unit id="69592e67862b42a94f582425221058b3b2e662f2" translate="yes" xml:space="preserve">
          <source>This is the same polynomial as obtained by:</source>
          <target state="translated">Este es el mismo polinomio que se obtuvo por:</target>
        </trans-unit>
        <trans-unit id="8f841f69094513c4d7f4558bcdd113fb62e5f1f7" translate="yes" xml:space="preserve">
          <source>This is the simplest case of all. The ufunc is executed by calling the underlying 1-D loop exactly once. This is possible only when we have aligned data of the correct type (including byte-order) for both input and output and all arrays have uniform strides (either contiguous, 0-D, or 1-D). In this case, the 1-D computational loop is called once to compute the calculation for the entire array. Note that the hardware error flags are only checked after the entire calculation is complete.</source>
          <target state="translated">Este es el caso más simple de todos.El Ufunc se ejecuta llamando al bucle 1-D subyacente exactamente una vez.Esto sólo es posible cuando hemos alineado los datos del tipo correcto (incluyendo el orden de los bytes)tanto para la entrada como para la salida y todos los arreglos tienen zancadas uniformes (ya sea contiguas,0-D o 1-D).En este caso,el bucle de cálculo 1-D se llama una vez para calcular el cálculo de todo el array.Tenga en cuenta que los indicadores de error de hardware sólo se comprueban después de que se haya completado todo el cálculo.</target>
        </trans-unit>
        <trans-unit id="963cd66868f04208a7a1c2183e363716e0ef0cf2" translate="yes" xml:space="preserve">
          <source>This is the type which exposes the iterator to Python. Currently, no API is exposed which provides access to the values of a Python-created iterator. If an iterator is created in Python, it must be used in Python and vice versa. Such an API will likely be created in a future version.</source>
          <target state="translated">Este es el tipo que expone el iterador a Python.Actualmente,no se expone ninguna API que proporcione acceso a los valores de un iterador creado en Python.Si un iterador es creado en Python,debe ser usado en Python y viceversa.Es probable que dicha API se cree en una versión futura.</target>
        </trans-unit>
        <trans-unit id="4b42439256132aabca2f53b261c973f7c679d369" translate="yes" xml:space="preserve">
          <source>This is useful for setting up an accumulation loop, for example. The iterator can first be created with all the dimensions, including the accumulation axis, so that the output gets created correctly. Then, the accumulation axis can be removed, and the calculation done in a nested fashion.</source>
          <target state="translated">Esto es útil para establecer un bucle de acumulación,por ejemplo.El iterador puede crearse primero con todas las dimensiones,incluido el eje de acumulación,para que la salida se cree correctamente.Luego,el eje de acumulación puede ser eliminado,y el cálculo se hace de manera anidada.</target>
        </trans-unit>
        <trans-unit id="5300cb088270de52a08527e24f73ff59ea30c2bb" translate="yes" xml:space="preserve">
          <source>This is useful in a setup.py script for adding sub-packages to a package.</source>
          <target state="translated">Esto es útil en un script setup.py para añadir subpaquetes a un paquete.</target>
        </trans-unit>
        <trans-unit id="6e4aa46e2220dff2f0d0703b94a0af6befef5473" translate="yes" xml:space="preserve">
          <source>This is wonderful because the function writer doesn&amp;rsquo;t have to manually propagate infs or nans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82959a96175cd052449eddf58c5c4610e0b21bd3" translate="yes" xml:space="preserve">
          <source>This iterates over matching 1d slices oriented along the specified axis in the index and data arrays, and uses the former to look up values in the latter. These slices can be different lengths.</source>
          <target state="translated">Esto itera sobre los cortes de 1d orientados a lo largo del eje especificado en las matrices de índices y datos,y utiliza los primeros para buscar valores en los segundos.Estos cortes pueden tener diferentes longitudes.</target>
        </trans-unit>
        <trans-unit id="5c175a7e11a936be20457fa33dc8778b062c8741" translate="yes" xml:space="preserve">
          <source>This iterates over matching 1d slices oriented along the specified axis in the index and data arrays, and uses the former to place values into the latter. These slices can be different lengths.</source>
          <target state="translated">Esto itera sobre los cortes de 1d orientados a lo largo del eje especificado en las matrices de índices y datos,y utiliza los primeros para colocar los valores en los segundos.Estos cortes pueden tener diferentes longitudes.</target>
        </trans-unit>
        <trans-unit id="1d9086a3e8f6e523e455adb859a4bc6cbea3019a" translate="yes" xml:space="preserve">
          <source>This iterator returns elements of the array to be iterated over in &lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt;&lt;code&gt;Arrayterator&lt;/code&gt;&lt;/a&gt; one by one. It is similar to &lt;code&gt;flatiter&lt;/code&gt;.</source>
          <target state="translated">Este iterador devuelve elementos de la matriz para &lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt; &lt;code&gt;Arrayterator&lt;/code&gt; &lt;/a&gt; en Arrayterator uno por uno. Es similar al &lt;code&gt;flatiter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3aa62850b827d280ac62636d6a8e3df18a980ad" translate="yes" xml:space="preserve">
          <source>This just returns the value &lt;a href=&quot;#c.NPY_FEATURE_VERSION&quot;&gt;&lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#c.NPY_FEATURE_VERSION&quot;&gt;&lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt;&lt;/a&gt; changes whenever the API changes (e.g. a function is added). A changed value does not always require a recompile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9621dd1cff206294072ec88c5bdff12776a1ac23" translate="yes" xml:space="preserve">
          <source>This just returns the value &lt;a href=&quot;#c.NPY_VERSION&quot;&gt;&lt;code&gt;NPY_VERSION&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#c.NPY_VERSION&quot;&gt;&lt;code&gt;NPY_VERSION&lt;/code&gt;&lt;/a&gt; changes whenever a backward incompatible change at the ABI level. Because it is in the C-API, however, comparing the output of this function from the value defined in the current header gives a way to test if the C-API has changed thus requiring a re-compilation of extension modules that use the C-API. This is automatically checked in the function &lt;a href=&quot;#c.import_array&quot;&gt;&lt;code&gt;import_array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esto solo devuelve el valor &lt;a href=&quot;#c.NPY_VERSION&quot;&gt; &lt;code&gt;NPY_VERSION&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;#c.NPY_VERSION&quot;&gt; &lt;code&gt;NPY_VERSION&lt;/code&gt; &lt;/a&gt; cambia siempre que un cambio incompatible hacia atr&amp;aacute;s en el nivel ABI. Sin embargo, debido a que est&amp;aacute; en la C-API, comparar la salida de esta funci&amp;oacute;n con el valor definido en el encabezado actual proporciona una forma de probar si la C-API ha cambiado, lo que requiere una recompilaci&amp;oacute;n de los m&amp;oacute;dulos de extensi&amp;oacute;n que usan la C -API. Esto se verifica autom&amp;aacute;ticamente en la funci&amp;oacute;n &lt;a href=&quot;#c.import_array&quot;&gt; &lt;code&gt;import_array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75e16e673218df8f16a0a1029a429a437c420b9d" translate="yes" xml:space="preserve">
          <source>This just returns the value &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt;. &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt; changes whenever the API changes (e.g. a function is added). A changed value does not always require a recompile.</source>
          <target state="translated">Esto solo devuelve el valor &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt; . &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt; cambia cada vez que cambia la API (por ejemplo, se agrega una funci&amp;oacute;n). Un valor modificado no siempre requiere una recompilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="57131d2cbf8754e0c0045e65c405a8ff98703b38" translate="yes" xml:space="preserve">
          <source>This macro is defined to +inf.</source>
          <target state="translated">Esta macro se define como +inf.</target>
        </trans-unit>
        <trans-unit id="8ca63ad5bc4e1dded64f0ca2a056ab5d5c7f090f" translate="yes" xml:space="preserve">
          <source>This macro is defined to -1.0.</source>
          <target state="translated">Esta macro está definida a -1.0.</target>
        </trans-unit>
        <trans-unit id="b30ee77ae33429489972a6d1172613ede0e766a9" translate="yes" xml:space="preserve">
          <source>This macro is defined to -inf.</source>
          <target state="translated">Esta macro se define como -inf.</target>
        </trans-unit>
        <trans-unit id="b8842c8583817136af82824b8e5fdbb3f9c76f6e" translate="yes" xml:space="preserve">
          <source>This macro is defined to 1.0.</source>
          <target state="translated">Esta macro está definida a 1.0.</target>
        </trans-unit>
        <trans-unit id="bd01732ce89574cb085cbbd769f60ac683ce37ab" translate="yes" xml:space="preserve">
          <source>This macro is defined to a NaN (Not a Number), and is guaranteed to have the signbit unset (&amp;lsquo;positive&amp;rsquo; NaN). The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">Esta macro se define como un NaN (no es un n&amp;uacute;mero) y se garantiza que tiene el bit de signo desarmado (NaN &quot;positivo&quot;). La macro de precisi&amp;oacute;n individual y de extensi&amp;oacute;n correspondiente est&amp;aacute; disponible con el sufijo F y L.</target>
        </trans-unit>
        <trans-unit id="305a7f44534276994ed187e38461a42eaeb6b275" translate="yes" xml:space="preserve">
          <source>This macro is defined to a NaN value, guaranteed to have its sign bit unset.</source>
          <target state="translated">Esta macro se define a un valor de NaN,garantizado para tener su signo de bits desestabilizado.</target>
        </trans-unit>
        <trans-unit id="15a2136199da842d310792facc84af7246036426" translate="yes" xml:space="preserve">
          <source>This macro is defined to a positive inf. The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">Esta macro se define a una inf.positiva.La correspondiente macro de precisión simple y de extensión está disponible con el sufijo F y L.</target>
        </trans-unit>
        <trans-unit id="c5ea17d1f0932fffe7fa9472293549c952ff5b71" translate="yes" xml:space="preserve">
          <source>This macro is defined to negative zero (that is with the sign bit set). The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">Esta macro está definida a cero negativo (es decir,con el bit de signo fijado).La correspondiente macro de precisión simple y de extensión está disponible con el sufijo F y L.</target>
        </trans-unit>
        <trans-unit id="28ffbdfd1fb5a238c0e6b132bd7b25e886a8862b" translate="yes" xml:space="preserve">
          <source>This macro is defined to negative zero.</source>
          <target state="translated">Esta macro está definida a cero negativo.</target>
        </trans-unit>
        <trans-unit id="6499719d1e23e1af1e93848438b61bc7bf9fb167" translate="yes" xml:space="preserve">
          <source>This macro is defined to positive zero.</source>
          <target state="translated">Esta macro está definida a cero positivo.</target>
        </trans-unit>
        <trans-unit id="c804fcf19685f98f19d42c1dc7c110945817d41e" translate="yes" xml:space="preserve">
          <source>This macro is defined to positive zero. The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">Esta macro está definida a cero positivo.La correspondiente macro de precisión simple y de extensión está disponible con el sufijo F y L.</target>
        </trans-unit>
        <trans-unit id="4c35e4d492b4b66e88cf91e279bf815b9c6ef74c" translate="yes" xml:space="preserve">
          <source>This manual contains many examples of use, usually prefixed with the Python prompt &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; (which is not a part of the example code). The examples assume that you have first entered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc87f3907c86c15e0fab69c802c5a342d7203e00" translate="yes" xml:space="preserve">
          <source>This may be clearer with an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3434d0927f2e6cdc4fb04c1ef64578863b34f8" translate="yes" xml:space="preserve">
          <source>This may be used to read an existing file or create a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4ec39a1dbea334a71074f67fa1cd07017f1cdf" translate="yes" xml:space="preserve">
          <source>This may be used when you want to match up operand axes in some fashion, then remove them with &lt;a href=&quot;#c.NpyIter_RemoveAxis&quot;&gt;&lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt;&lt;/a&gt; to handle their processing manually. By calling this function before removing the axes, you can get the strides for the manual processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c451240677ff61c1a609e49bd0f07f461a99c611" translate="yes" xml:space="preserve">
          <source>This may be used when you want to match up operand axes in some fashion, then remove them with &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; to handle their processing manually. By calling this function before removing the axes, you can get the strides for the manual processing.</source>
          <target state="translated">Esto se puede usar cuando desee hacer coincidir los ejes de operandos de alguna manera, luego elim&amp;iacute;nelos con &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; para manejar su procesamiento manualmente. Al llamar a esta funci&amp;oacute;n antes de quitar los ejes, puede obtener los pasos para el procesamiento manual.</target>
        </trans-unit>
        <trans-unit id="272240144b37c5af402b352038a269eb5d08f543" translate="yes" xml:space="preserve">
          <source>This may mainly help you if you are not running the python and/or NumPy version you are expecting to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92d427e914a0dd599016040f8fd75a2d48dc062" translate="yes" xml:space="preserve">
          <source>This means that (i) we want to edit the commit message for &lt;code&gt;13d7934&lt;/code&gt;, and (ii) collapse the last three commits into one. Now we save and quit the editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9eb6e1f385480cd888cdacc62c2f757c4de3926" translate="yes" xml:space="preserve">
          <source>This mechanism should support all compilers and it doesn&amp;rsquo;t require any compiler-specific extension, but at the same time it is adds a few steps to normal compilation that are explained as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b5c517a58e8aeec834229928a8cecac10d6dff" translate="yes" xml:space="preserve">
          <source>This member allows array objects to have weak references (using the weakref module).</source>
          <target state="translated">Este miembro permite que los objetos de la matriz tengan referencias débiles (usando el módulo weakref).</target>
        </trans-unit>
        <trans-unit id="ed18bc4ba4db4fad433f89f2b494c6f4723892b5" translate="yes" xml:space="preserve">
          <source>This member is used to hold a pointer to another Python object that is related to this array. There are two use cases:</source>
          <target state="translated">Este miembro se utiliza para sostener un puntero a otro objeto Python que está relacionado con esta matriz.Hay dos casos de uso:</target>
        </trans-unit>
        <trans-unit id="9d7f481ab5f8b1d226ed9ed47a9904d6a830df77" translate="yes" xml:space="preserve">
          <source>This member points to an element in the ndarray indicated by the index.</source>
          <target state="translated">Este miembro señala un elemento en el ndarray indicado por el índice.</target>
        </trans-unit>
        <trans-unit id="74643da87d06b0da62bc7a9a046a5adf218ab99e" translate="yes" xml:space="preserve">
          <source>This method directly exposes the the raw underlying pseudo-random number generator. All values are returned as unsigned 64-bit values irrespective of the number of bits produced by the PRNG.</source>
          <target state="translated">Este método expone directamente el generador de números pseudoaleatorios subyacente en bruto.Todos los valores se devuelven como valores de 64 bits sin signo,independientemente del número de bits producidos por el PRNG.</target>
        </trans-unit>
        <trans-unit id="d818e6497cca20e6d8e8f1bc817ba9a89c8a342e" translate="yes" xml:space="preserve">
          <source>This method does nothing, except raise a ValueError exception. A masked array does not own its data and therefore cannot safely be resized in place. Use the &lt;a href=&quot;numpy.ma.resize#numpy.ma.resize&quot;&gt;&lt;code&gt;numpy.ma.resize&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">Este m&amp;eacute;todo no hace nada, excepto generar una excepci&amp;oacute;n ValueError. Una matriz enmascarada no posee sus datos y, por lo tanto, no se puede cambiar el tama&amp;ntilde;o de forma segura en su lugar. En su lugar, use la funci&amp;oacute;n &lt;a href=&quot;numpy.ma.resize#numpy.ma.resize&quot;&gt; &lt;code&gt;numpy.ma.resize&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9518a02e6b8dc4cd7e3170e82e29518e38adcb79" translate="yes" xml:space="preserve">
          <source>This method does the heavy lifting for the &lt;a href=&quot;numpy.testing.tester.test#numpy.testing.Tester.test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; method. It takes all the same arguments, for details see &lt;a href=&quot;numpy.testing.tester.test#numpy.testing.Tester.test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55c9dffed1c2a6b5a2a9bf81f22b788e98f67b4" translate="yes" xml:space="preserve">
          <source>This method is called whenever the system internally allocates a new array from &lt;em&gt;obj&lt;/em&gt;, where &lt;em&gt;obj&lt;/em&gt; is a subclass (subtype) of the &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;. It can be used to change attributes of &lt;em&gt;self&lt;/em&gt; after construction (so as to ensure a 2-d matrix for example), or to update meta-information from the &amp;ldquo;parent.&amp;rdquo; Subclasses inherit a default implementation of this method that does nothing.</source>
          <target state="translated">Este m&amp;eacute;todo se llama siempre que el sistema asigna internamente una nueva matriz de &lt;em&gt;obj&lt;/em&gt; , donde &lt;em&gt;obj&lt;/em&gt; es una subclase (subtipo) de &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; . Se puede utilizar para cambiar los atributos de &lt;em&gt;uno mismo&lt;/em&gt; despu&amp;eacute;s de la construcci&amp;oacute;n (para garantizar una matriz bidimensional, por ejemplo) o para actualizar la metainformaci&amp;oacute;n del &quot;padre&quot;. Las subclases heredan una implementaci&amp;oacute;n predeterminada de este m&amp;eacute;todo que no hace nada.</target>
        </trans-unit>
        <trans-unit id="5957d72b0ca4a0dc20466e5e727abd34e77443e1" translate="yes" xml:space="preserve">
          <source>This method is difficult to implement safely and may be deprecated in future releases of NumPy.</source>
          <target state="translated">Este método es difícil de implementar de manera segura y puede ser desaprobado en futuras versiones de NumPy.</target>
        </trans-unit>
        <trans-unit id="7aaa9616f6dcdd0184bee8a152bd13d1e550b310" translate="yes" xml:space="preserve">
          <source>This method is for backward compatibility only: do not use.</source>
          <target state="translated">Este método es sólo para la compatibilidad retroactiva:no lo use.</target>
        </trans-unit>
        <trans-unit id="0ecb5e08ef8d16754216c422058e3a81999abee2" translate="yes" xml:space="preserve">
          <source>This method removes any overlaps and reorders the fields in memory so they have increasing byte offsets, and adds or removes padding bytes depending on the &lt;code&gt;align&lt;/code&gt; option, which behaves like the &lt;code&gt;align&lt;/code&gt; option to &lt;code&gt;np.dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e657ddca83d2881d8a63d1d77710e25b3d7e94" translate="yes" xml:space="preserve">
          <source>This method scans files named __version__.py, &amp;lt;packagename&amp;gt;_version.py, version.py, and __svn_version__.py for string variables version, __version__, and &amp;lt;packagename&amp;gt;_version, until a version number is found.</source>
          <target state="translated">Este m&amp;eacute;todo analiza los archivos denominados __version__.py, &amp;lt;packagename&amp;gt; _version.py, version.py y __svn_version__.py para las variables de cadena version, __version__ y &amp;lt;packagename&amp;gt; _version, hasta que se encuentra un n&amp;uacute;mero de versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f89805770623a7cfcc87bb87063713e7dd822816" translate="yes" xml:space="preserve">
          <source>This module contains all functions in the &lt;a href=&quot;index#module-numpy&quot;&gt;&lt;code&gt;numpy&lt;/code&gt;&lt;/a&gt; namespace, with the following replacement functions that return &lt;a href=&quot;generated/numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrices&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Este m&amp;oacute;dulo contiene todas las funciones en el espacio de nombres &lt;a href=&quot;index#module-numpy&quot;&gt; &lt;code&gt;numpy&lt;/code&gt; &lt;/a&gt; , con las siguientes funciones de reemplazo que devuelven &lt;a href=&quot;generated/numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrices&lt;/code&gt; en&lt;/a&gt; lugar de &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="265d65d83193df044b48a623f0d3f0dda63b008d" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Chebyshev series, including a &lt;a href=&quot;generated/numpy.polynomial.chebyshev.chebyshev#numpy.polynomial.chebyshev.Chebyshev&quot;&gt;&lt;code&gt;Chebyshev&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona una serie de objetos (en su mayor&amp;iacute;a funciones) &amp;uacute;tiles para trabajar con la serie Chebyshev, incluida una clase &lt;a href=&quot;generated/numpy.polynomial.chebyshev.chebyshev#numpy.polynomial.chebyshev.Chebyshev&quot;&gt; &lt;code&gt;Chebyshev&lt;/code&gt; &lt;/a&gt; que encapsula las operaciones aritm&amp;eacute;ticas habituales. (La informaci&amp;oacute;n general sobre c&amp;oacute;mo este m&amp;oacute;dulo representa y funciona con tales polinomios se encuentra en la cadena de documentaci&amp;oacute;n de su subpaquete &quot;principal&quot;, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e0c12fd4ebad36a4626d24020b78132a2c170962" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Hermite series, including a &lt;a href=&quot;generated/numpy.polynomial.hermite.hermite#numpy.polynomial.hermite.Hermite&quot;&gt;&lt;code&gt;Hermite&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona una serie de objetos (en su mayor&amp;iacute;a funciones) &amp;uacute;tiles para tratar con las series de Hermite, incluida una clase de &lt;a href=&quot;generated/numpy.polynomial.hermite.hermite#numpy.polynomial.hermite.Hermite&quot;&gt; &lt;code&gt;Hermite&lt;/code&gt; &lt;/a&gt; que encapsula las operaciones aritm&amp;eacute;ticas habituales. (La informaci&amp;oacute;n general sobre c&amp;oacute;mo este m&amp;oacute;dulo representa y funciona con tales polinomios se encuentra en la cadena de documentos de su subpaquete &quot;principal&quot;, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="009a1c885b932c48bc61dd45e0e34c3c31b1f286" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with HermiteE series, including a &lt;a href=&quot;generated/numpy.polynomial.hermite_e.hermitee#numpy.polynomial.hermite_e.HermiteE&quot;&gt;&lt;code&gt;HermiteE&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona una serie de objetos (en su mayor&amp;iacute;a funciones) &amp;uacute;tiles para tratar con la serie HermiteE, incluida una clase &lt;a href=&quot;generated/numpy.polynomial.hermite_e.hermitee#numpy.polynomial.hermite_e.HermiteE&quot;&gt; &lt;code&gt;HermiteE&lt;/code&gt; &lt;/a&gt; que encapsula las operaciones aritm&amp;eacute;ticas habituales. (La informaci&amp;oacute;n general sobre c&amp;oacute;mo este m&amp;oacute;dulo representa y funciona con tales polinomios se encuentra en la cadena de documentaci&amp;oacute;n de su subpaquete &quot;principal&quot;, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="68d5327723a8c86e153df7ff9955c4a06be0ce20" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Hermite_e series, including a &lt;a href=&quot;generated/numpy.polynomial.hermite_e.hermitee#numpy.polynomial.hermite_e.HermiteE&quot;&gt;&lt;code&gt;HermiteE&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0299f154387dc04b7a01cfe822909405b30805" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Laguerre series, including a &lt;a href=&quot;generated/numpy.polynomial.laguerre.laguerre#numpy.polynomial.laguerre.Laguerre&quot;&gt;&lt;code&gt;Laguerre&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona una serie de objetos (en su mayor&amp;iacute;a funciones) &amp;uacute;tiles para tratar con las series de Laguerre, incluida una clase de &lt;a href=&quot;generated/numpy.polynomial.laguerre.laguerre#numpy.polynomial.laguerre.Laguerre&quot;&gt; &lt;code&gt;Laguerre&lt;/code&gt; &lt;/a&gt; que encapsula las operaciones aritm&amp;eacute;ticas habituales. (La informaci&amp;oacute;n general sobre c&amp;oacute;mo este m&amp;oacute;dulo representa y funciona con tales polinomios se encuentra en la cadena de documentaci&amp;oacute;n de su subpaquete &quot;principal&quot;, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="97167a7dd7012c05d960d350608d944b8fc4844a" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Legendre series, including a &lt;a href=&quot;generated/numpy.polynomial.legendre.legendre#numpy.polynomial.legendre.Legendre&quot;&gt;&lt;code&gt;Legendre&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona una serie de objetos (en su mayor&amp;iacute;a funciones) &amp;uacute;tiles para tratar con las series de Legendre, incluida una clase de &lt;a href=&quot;generated/numpy.polynomial.legendre.legendre#numpy.polynomial.legendre.Legendre&quot;&gt; &lt;code&gt;Legendre&lt;/code&gt; &lt;/a&gt; que encapsula las operaciones aritm&amp;eacute;ticas habituales. (La informaci&amp;oacute;n general sobre c&amp;oacute;mo este m&amp;oacute;dulo representa y funciona con tales polinomios se encuentra en la cadena de documentos de su subpaquete &quot;principal&quot;, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="27218660297bbc1672326aa7fc0091aba0aa4b36" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Polynomial series, including a &lt;a href=&quot;generated/numpy.polynomial.polynomial.polynomial#numpy.polynomial.polynomial.Polynomial&quot;&gt;&lt;code&gt;Polynomial&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona una serie de objetos (principalmente funciones) &amp;uacute;tiles para tratar con series Polynomial, incluida una clase &lt;a href=&quot;generated/numpy.polynomial.polynomial.polynomial#numpy.polynomial.polynomial.Polynomial&quot;&gt; &lt;code&gt;Polynomial&lt;/code&gt; &lt;/a&gt; que encapsula las operaciones aritm&amp;eacute;ticas habituales. (La informaci&amp;oacute;n general sobre c&amp;oacute;mo este m&amp;oacute;dulo representa y funciona con tales polinomios se encuentra en la cadena de documentaci&amp;oacute;n de su subpaquete &quot;principal&quot;, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1ab4c28fb83b693800bce3d9c0cb03cd8615a6cd" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with polynomials, including a &lt;a href=&quot;generated/numpy.polynomial.polynomial.polynomial#numpy.polynomial.polynomial.Polynomial&quot;&gt;&lt;code&gt;Polynomial&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with polynomial objects is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6505e2a54b4c90d04c624c70346ad867092f98b2" translate="yes" xml:space="preserve">
          <source>This module provides: error and warning objects; a polynomial base class; and some routines used in both the &lt;code&gt;polynomial&lt;/code&gt; and &lt;code&gt;chebyshev&lt;/code&gt; modules.</source>
          <target state="translated">Este m&amp;oacute;dulo proporciona: objetos de error y advertencia; una clase base polinomial; y algunas rutinas utilizadas en los m&amp;oacute;dulos &lt;code&gt;polynomial&lt;/code&gt; y &lt;code&gt;chebyshev&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e1ca0b050299a02c26006ffc538095c291c293" translate="yes" xml:space="preserve">
          <source>This module shows use of the &lt;code&gt;cimport&lt;/code&gt; statement to load the definitions from the &lt;code&gt;numpy.pxd&lt;/code&gt; header that ships with Cython. It looks like NumPy is imported twice; &lt;code&gt;cimport&lt;/code&gt; only makes the NumPy C-API available, while the regular &lt;code&gt;import&lt;/code&gt; causes a Python-style import at runtime and makes it possible to call into the familiar NumPy Python API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f02b8e116f7a7bed4ba561da0ffe80943392202" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Chebyshev series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">La representaci&amp;oacute;n de este m&amp;oacute;dulo de la serie Chebyshev para &lt;code&gt;off + scl*x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a628eacd0f4bb9dd57ff71e63c578eed78e261b5" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Hermite series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">La representaci&amp;oacute;n de este m&amp;oacute;dulo de la serie Hermite para &lt;code&gt;off + scl*x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab2b6eda8208cc86132d50e5e53a2cf2e15859d" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Laguerre series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">Representaci&amp;oacute;n de este m&amp;oacute;dulo de la serie Laguerre para &lt;code&gt;off + scl*x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23eb81bc9bb7a5f0cbd08a18f3b739c712c791cf" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Legendre series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">La representaci&amp;oacute;n de este m&amp;oacute;dulo de la serie Legendre para &lt;code&gt;off + scl*x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d92e37a5c688f24c68244c7cd58f9c4410908a50" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the linear polynomial &lt;code&gt;off +
scl*x&lt;/code&gt;.</source>
          <target state="translated">La representaci&amp;oacute;n de este m&amp;oacute;dulo del polinomio lineal &lt;code&gt;off + scl*x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cce1c3ab116538df151878b9366f2e0db3802d6b" translate="yes" xml:space="preserve">
          <source>This needs to be done after all installers are downloaded, but before the pavement file is updated for continued development:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5151a066bb85cc108b39c4156d9c6c1e5f15d97" translate="yes" xml:space="preserve">
          <source>This obeys the structured array assignment rules described above. For example, this means that one can swap the values of two fields using appropriate multi-field indexes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c93b1abaa0ee7234b376edaae74a000aa2ccbab" translate="yes" xml:space="preserve">
          <source>This object is no longer compatible with &lt;code&gt;np.sum&lt;/code&gt; because if you call &lt;code&gt;np.sum&lt;/code&gt;, it will pass in unexpected arguments &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;keepdims&lt;/code&gt;, causing a TypeError to be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b628f2a020e67ee402c9861512476edcb4af1ebf" translate="yes" xml:space="preserve">
          <source>This object is now compatible with &lt;code&gt;np.sum&lt;/code&gt; again because any extraneous arguments (i.e. keywords that are not &lt;code&gt;axis&lt;/code&gt; or &lt;code&gt;dtype&lt;/code&gt;) will be hidden away in the &lt;code&gt;**unused_kwargs&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a22002edc0d8d423cb72bfe9efb4e65f38427c" translate="yes" xml:space="preserve">
          <source>This only affects the iterator when &lt;a href=&quot;array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt; is specified for the order parameter. By default with &lt;a href=&quot;array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt;, the iterator reverses axes which have negative strides, so that memory is traversed in a forward direction. This disables this step. Use this flag if you want to use the underlying memory-ordering of the axes, but don&amp;rsquo;t want an axis reversed. This is the behavior of &lt;code&gt;numpy.ravel(a, order='K')&lt;/code&gt;, for instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa2fd8c1567b66e551b17269b1ebbbc61f96243" translate="yes" xml:space="preserve">
          <source>This only affects the iterator when &lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt; is specified for the order parameter. By default with &lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt;, the iterator reverses axes which have negative strides, so that memory is traversed in a forward direction. This disables this step. Use this flag if you want to use the underlying memory-ordering of the axes, but don&amp;rsquo;t want an axis reversed. This is the behavior of &lt;code&gt;numpy.ravel(a, order='K')&lt;/code&gt;, for instance.</source>
          <target state="translated">Esto solo afecta al iterador cuando se especifica &lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt; para el par&amp;aacute;metro de pedido. De forma predeterminada, con &lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt; , el iterador invierte los ejes que tienen pasos negativos, de modo que la memoria se recorre hacia adelante. Esto desactiva este paso. Utilice este indicador si desea utilizar el orden de memoria subyacente de los ejes, pero no desea invertir un eje. Este es el comportamiento de &lt;code&gt;numpy.ravel(a, order='K')&lt;/code&gt; , por ejemplo.</target>
        </trans-unit>
        <trans-unit id="dfc0d7340cbb0038d2b37c47d460673f198c8e36" translate="yes" xml:space="preserve">
          <source>This operation, dividing an array by a scalar, works because of NumPy&amp;rsquo;s &lt;a href=&quot;theory.broadcasting#array-broadcasting-in-numpy&quot;&gt;broadcasting rules&lt;/a&gt;). (Note that in real-world applications, it would be better to use, for example, the &lt;a href=&quot;https://scikit-image.org/docs/stable/api/skimage.html#skimage.img_as_float&quot;&gt;&lt;code&gt;img_as_float&lt;/code&gt;&lt;/a&gt; utility function from &lt;code&gt;scikit-image&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c162c5fa5c56025420698950fd9023cbce377364" translate="yes" xml:space="preserve">
          <source>This option is deprecated. Use &lt;code&gt;usercode&lt;/code&gt; statement to specify C code snippets directly in signature files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6b1796953475091b5cdaeb39e4d7e996e315e6" translate="yes" xml:space="preserve">
          <source>This optional parameter specifies the interpolation method to use when the desired percentile lies between two data points &lt;code&gt;i &amp;lt; j&lt;/code&gt;:</source>
          <target state="translated">Este par&amp;aacute;metro opcional especifica el m&amp;eacute;todo de interpolaci&amp;oacute;n que se utilizar&amp;aacute; cuando el percentil deseado se encuentre entre dos puntos de datos &lt;code&gt;i &amp;lt; j&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="002fb17667dbbd628eca51b6e4ff99f2217649e0" translate="yes" xml:space="preserve">
          <source>This optional parameter specifies the interpolation method to use when the desired quantile lies between two data points &lt;code&gt;i &amp;lt; j&lt;/code&gt;:</source>
          <target state="translated">Este par&amp;aacute;metro opcional especifica el m&amp;eacute;todo de interpolaci&amp;oacute;n que se utilizar&amp;aacute; cuando el cuantil deseado se encuentre entre dos puntos de datos &lt;code&gt;i &amp;lt; j&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c342edf9966c2e18280c4d355db707b32be4bff5" translate="yes" xml:space="preserve">
          <source>This package was developed independently of NumPy and was integrated in version 1.17.0. The original repo is at &lt;a href=&quot;https://github.com/bashtage/randomgen&quot;&gt;https://github.com/bashtage/randomgen&lt;/a&gt;.</source>
          <target state="translated">Este paquete se desarroll&amp;oacute; independientemente de NumPy y se integr&amp;oacute; en la versi&amp;oacute;n 1.17.0. El repositorio original se encuentra en &lt;a href=&quot;https://github.com/bashtage/randomgen&quot;&gt;https://github.com/bashtage/randomgen&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c427139240278bee81f47cf48768438afbe39755" translate="yes" xml:space="preserve">
          <source>This page describes the numpy-specific API for accessing the contents of a numpy array from other C extensions. &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; &amp;ndash; &lt;a href=&quot;https://docs.python.org/dev/c-api/buffer.html#c.PyObject_GetBuffer&quot;&gt;&lt;code&gt;The Revised Buffer Protocol&lt;/code&gt;&lt;/a&gt; introduces similar, standardized API to Python 2.6 and 3.0 for any extension module to use. &lt;a href=&quot;http://cython.org/&quot;&gt;Cython&lt;/a&gt;&amp;rsquo;s buffer array support uses the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; API; see the &lt;a href=&quot;https://github.com/cython/cython/wiki/tutorials-numpy&quot;&gt;Cython numpy tutorial&lt;/a&gt;. Cython provides a way to write code that supports the buffer protocol with Python versions older than 2.6 because it has a backward-compatible implementation utilizing the array interface described here.</source>
          <target state="translated">Esta p&amp;aacute;gina describe la API espec&amp;iacute;fica de numpy para acceder al contenido de una matriz numpy desde otras extensiones C. &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; : &lt;a href=&quot;https://docs.python.org/dev/c-api/buffer.html#c.PyObject_GetBuffer&quot;&gt; &lt;code&gt;The Revised Buffer Protocol&lt;/code&gt; &lt;/a&gt; introduce una API estandarizada similar a Python 2.6 y 3.0 para que la utilice cualquier m&amp;oacute;dulo de extensi&amp;oacute;n. El soporte de matriz de b&amp;uacute;fer de &lt;a href=&quot;http://cython.org/&quot;&gt;Cython&lt;/a&gt; utiliza la API &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; ; vea el &lt;a href=&quot;https://github.com/cython/cython/wiki/tutorials-numpy&quot;&gt;tutorial de Cython numpy&lt;/a&gt; . Cython proporciona una forma de escribir c&amp;oacute;digo que admite el protocolo de b&amp;uacute;fer con versiones de Python anteriores a 2.6 porque tiene una implementaci&amp;oacute;n compatible con versiones anteriores que utiliza la interfaz de matriz descrita aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="4df30a5dfa3e83d5a58c4b3babfef2e8f4555a00" translate="yes" xml:space="preserve">
          <source>This page documents the API for the iterator. The iterator is named &lt;code&gt;NpyIter&lt;/code&gt; and functions are named &lt;code&gt;NpyIter_*&lt;/code&gt;.</source>
          <target state="translated">Esta p&amp;aacute;gina documenta la API del iterador. El iterador se denomina &lt;code&gt;NpyIter&lt;/code&gt; y las funciones se denominan &lt;code&gt;NpyIter_*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3ed57ed2270d94087c1c0c02f79e8407d0327af" translate="yes" xml:space="preserve">
          <source>This page tackles common applications; for the full collection of I/O routines, see &lt;a href=&quot;../reference/routines.io#routines-io&quot;&gt;Input and output&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef493fa5f7ddfcfa2e56b59880c2ca13b04b480" translate="yes" xml:space="preserve">
          <source>This plot is not so readable since the lines seem to be over each other, so let&amp;rsquo;s summarize in a more elaborate plot. We&amp;rsquo;ll plot the real data when available, and show the cubic fit for unavailable data, using this fit to compute an estimate to the observed number of cases on January 28th 2020, 7 days after the beginning of the records:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79e823ebc32815d2b3460b90e34d0a2f9bed7dc" translate="yes" xml:space="preserve">
          <source>This pointer may be cached before the iteration loop, calling &lt;code&gt;iternext&lt;/code&gt; will not change it.</source>
          <target state="translated">Este puntero puede almacenarse en cach&amp;eacute; antes del ciclo de iteraci&amp;oacute;n, llamar a &lt;code&gt;iternext&lt;/code&gt; no lo cambiar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="484a465c1e928c7fbd45d4d74c7fee12a21c59d4" translate="yes" xml:space="preserve">
          <source>This pointer may be cached before the iteration loop, calling &lt;code&gt;iternext&lt;/code&gt; will not change it. This function may be safely called without holding the Python GIL.</source>
          <target state="translated">Este puntero puede almacenarse en cach&amp;eacute; antes del ciclo de iteraci&amp;oacute;n, llamar a &lt;code&gt;iternext&lt;/code&gt; no lo cambiar&amp;aacute;. Esta funci&amp;oacute;n se puede llamar de forma segura sin tener que mantener Python GIL.</target>
        </trans-unit>
        <trans-unit id="bb65fa9e55962767929fe75ece2f7703e6ac5b10" translate="yes" xml:space="preserve">
          <source>This produces the correct answer, but if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; each contain millions of numbers, we will pay the price for the inefficiencies of looping in Python. We could accomplish the same task much more quickly in C by writing (for clarity we neglect variable declarations and initializations, memory allocation, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc50269460cb12e12865cbec85480d4b3e10a0a9" translate="yes" xml:space="preserve">
          <source>This property can be very useful in assignments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7b379b2fcb530df7b5c66e85d1051773a408df" translate="yes" xml:space="preserve">
          <source>This property is a view on the imaginary part of this &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad es una vista de la parte imaginaria de este &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00b60d7136524e649c297d22303044023139f2d1" translate="yes" xml:space="preserve">
          <source>This property is a view on the imaginary part of this &lt;code&gt;MaskedArray&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2a714f693725c88c94ac2607ed6abee0322d99" translate="yes" xml:space="preserve">
          <source>This property is a view on the real part of this &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad es una vista de la parte real de este &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4989179ebd897375fad9fc4e97f158afedfb6f9" translate="yes" xml:space="preserve">
          <source>This property is a view on the real part of this &lt;code&gt;MaskedArray&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ae11e0e5ca2982f115765c5eb4aa5c0c2cf88d" translate="yes" xml:space="preserve">
          <source>This reallocates space for the data area if necessary.</source>
          <target state="translated">Esto reasigna el espacio para el área de datos si es necesario.</target>
        </trans-unit>
        <trans-unit id="3875a2efa104b3c26f06d6992550d8f8f4acd93f" translate="yes" xml:space="preserve">
          <source>This reference manual details functions, modules, and objects included in NumPy, describing what they are and what they do. For learning how to use NumPy, see also &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/index.html#user&quot;&gt;NumPy User Guide&lt;/a&gt;.</source>
          <target state="translated">Este manual de referencia detalla las funciones, m&amp;oacute;dulos y objetos incluidos en NumPy, describiendo qu&amp;eacute; son y qu&amp;eacute; hacen. Para aprender a usar NumPy, consulte tambi&amp;eacute;n &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/index.html#user&quot;&gt;la Gu&amp;iacute;a del usuario de NumPy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b66394de331bbd119ed305c44c97cddcc296f65" translate="yes" xml:space="preserve">
          <source>This reference manual details functions, modules, and objects included in NumPy, describing what they are and what they do. For learning how to use NumPy, see the &lt;a href=&quot;../contents#numpy-docs-mainpage&quot;&gt;complete documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d7d34fc7b59b4f57a8fc699678974df3138f8f" translate="yes" xml:space="preserve">
          <source>This returns a tuple of indices that can be used to access the main diagonal of an array &lt;code&gt;a&lt;/code&gt; with &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt; dimensions and shape (n, n, &amp;hellip;, n). For &lt;code&gt;a.ndim = 2&lt;/code&gt; this is the usual diagonal, for &lt;code&gt;a.ndim &amp;gt; 2&lt;/code&gt; this is the set of indices to access &lt;code&gt;a[i, i, ..., i]&lt;/code&gt; for &lt;code&gt;i = [0..n-1]&lt;/code&gt;.</source>
          <target state="translated">Esto devuelve una tupla de &amp;iacute;ndices que se puede usar para acceder a la diagonal principal de una matriz &lt;code&gt;a&lt;/code&gt; con &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt; dimensiones y forma (n, n,&amp;hellip;, n). Para &lt;code&gt;a.ndim = 2&lt;/code&gt; esta es la diagonal habitual, para &lt;code&gt;a.ndim &amp;gt; 2&lt;/code&gt; este es el conjunto de &amp;iacute;ndices para acceder &lt;code&gt;a[i, i, ..., i]&lt;/code&gt; para &lt;code&gt;i = [0..n-1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="445408c5f27be1f1d331536d4e933a74a8f78cb0" translate="yes" xml:space="preserve">
          <source>This returns the base object of the array. In most cases, this means the object which owns the memory the array is pointing at.</source>
          <target state="translated">Esto devuelve el objeto base de la matriz.En la mayoría de los casos,esto significa que el objeto que posee la memoria a la que apunta la matriz.</target>
        </trans-unit>
        <trans-unit id="86f639de88fe17b751b6b11b662442ef7819d4d2" translate="yes" xml:space="preserve">
          <source>This routine simply adds the elements in two contiguous arrays and places the result in a third. The memory for all three arrays must be provided by the calling routine. A very basic interface to this routine can be automatically generated by f2py:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52ed8eb1e1cedf938d67a58ab208207008af6c7" translate="yes" xml:space="preserve">
          <source>This routine succeeds where ordinary &lt;a href=&quot;numpy.linalg.det#numpy.linalg.det&quot;&gt;&lt;code&gt;det&lt;/code&gt;&lt;/a&gt; does not:</source>
          <target state="translated">Esta rutina tiene &amp;eacute;xito donde el &lt;a href=&quot;numpy.linalg.det#numpy.linalg.det&quot;&gt; &lt;code&gt;det&lt;/code&gt; &lt;/a&gt; ordinario no:</target>
        </trans-unit>
        <trans-unit id="9bca535321764a180aeb878b90cecb0b41abe3ad" translate="yes" xml:space="preserve">
          <source>This rule helps you anticipate how a vector will be printed, and conversely how to find the index of any of the printed elements. For instance, in the example, the last two values of 8&amp;rsquo;s index must be 0 and 2. Since 8 appears in the second of the two 2x3&amp;rsquo;s, the first index must be 1:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5cd927267b8c85989f3387ce0a0d2359a4663d" translate="yes" xml:space="preserve">
          <source>This saves all the overhead involved in interpreting the Python code and manipulating Python objects, but at the expense of the benefits gained from coding in Python. Furthermore, the coding work required increases with the dimensionality of our data. In the case of a 2-D array, for example, the C code (abridged as before) expands to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7064b0e5d0b37eaed95ef4ac40f47e88476c2d" translate="yes" xml:space="preserve">
          <source>This scheme does require that you avoid reusing stream IDs. This may require coordination between the parallel processes.</source>
          <target state="translated">Este esquema requiere que se evite reutilizar las identificaciones de los flujos.Esto puede requerir la coordinación entre los procesos paralelos.</target>
        </trans-unit>
        <trans-unit id="1aa4791ff179e31578c8776ff4ea075ff10d4756" translate="yes" xml:space="preserve">
          <source>This section and the next describe in detail how to set up git for working with the NumPy source code. If you have git already set up, skip to &lt;a href=&quot;../development_workflow#development-workflow&quot;&gt;Development workflow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e071a3347f38c194bd96c7f6d94e6b8f7990250d" translate="yes" xml:space="preserve">
          <source>This section describes how the basic universal function computation loop is setup and executed for each of the three different kinds of execution. If &lt;a href=&quot;c-api/array#c.NPY_ALLOW_THREADS&quot;&gt;&lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt;&lt;/a&gt; is defined during compilation, then as long as no object arrays are involved, the Python Global Interpreter Lock (GIL) is released prior to calling the loops. It is re-acquired if necessary to handle error conditions. The hardware error flags are checked only after the 1-D loop is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2295424cf2146c8c588e01472068b4499bd8664" translate="yes" xml:space="preserve">
          <source>This section describes how the basic universal function computation loop is setup and executed for each of the three different kinds of execution. If &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; is defined during compilation, then as long as no object arrays are involved, the Python Global Interpreter Lock (GIL) is released prior to calling the loops. It is re-acquired if necessary to handle error conditions. The hardware error flags are checked only after the 1-D loop is completed.</source>
          <target state="translated">Esta secci&amp;oacute;n describe c&amp;oacute;mo se configura y ejecuta el ciclo de c&amp;aacute;lculo de la funci&amp;oacute;n universal b&amp;aacute;sica para cada uno de los tres tipos diferentes de ejecuci&amp;oacute;n. Si &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; se define durante la compilaci&amp;oacute;n, mientras no haya matrices de objetos involucradas, el Bloqueo de int&amp;eacute;rprete global de Python (GIL) se libera antes de llamar a los bucles. Se vuelve a adquirir si es necesario para manejar condiciones de error. Los indicadores de error de hardware se comprueban solo despu&amp;eacute;s de que se completa el bucle 1-D.</target>
        </trans-unit>
        <trans-unit id="36d38a5b23b654b48926d888ff2f70f4fd6663ca" translate="yes" xml:space="preserve">
          <source>This section describes the governance and leadership model of The Project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387c13e7d204cf584e66117f50223922b47b0d67" translate="yes" xml:space="preserve">
          <source>This section should be used judiciously, i.e., only for errors that are non-obvious or have a large chance of getting raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf292081ef6e3f6d3a2a86d3bb95335c9be71e92" translate="yes" xml:space="preserve">
          <source>This section should use the &lt;code&gt;deprecated&lt;/code&gt; Sphinx directive instead of an underlined section header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9b94d3eaea207d20a5173591fa4612902baa5c" translate="yes" xml:space="preserve">
          <source>This section will not cover means of replicating, joining, or otherwise expanding or mutating existing arrays. Nor will it cover creating object arrays or structured arrays. Both of those are covered in their own sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a18449ed2fc82d845556e8871f21b5f905f1f97" translate="yes" xml:space="preserve">
          <source>This should be read together with the general directions in &lt;code&gt;releasing&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af85e32a0a54092009ceae627c9327451013292e" translate="yes" xml:space="preserve">
          <source>This should not be confused with:</source>
          <target state="translated">No debe confundirse con esto:</target>
        </trans-unit>
        <trans-unit id="281bd1fc18f2200e68ef811b640b0f24111b0170" translate="yes" xml:space="preserve">
          <source>This simply has the effect of switching the definitions of &lt;code&gt;arg1&lt;/code&gt; and &lt;code&gt;arg2&lt;/code&gt; in lines 3 and 4 of the generated code above, and their assignments in lines 19 and 20.</source>
          <target state="translated">Esto simplemente tiene el efecto de cambiar las definiciones de &lt;code&gt;arg1&lt;/code&gt; y &lt;code&gt;arg2&lt;/code&gt; en las l&amp;iacute;neas 3 y 4 del c&amp;oacute;digo generado anteriormente, y sus asignaciones en las l&amp;iacute;neas 19 y 20.</target>
        </trans-unit>
        <trans-unit id="54a1fbc955c54345f701059c4adac18f9144af8f" translate="yes" xml:space="preserve">
          <source>This single module should provide all the common functionality for numpy tests in a single location, so that &lt;a href=&quot;../dev/development_environment#development-environment&quot;&gt;test scripts&lt;/a&gt; can just import it and work right away. For background, see the &lt;a href=&quot;testing#testing-guidelines&quot;&gt;Testing Guidelines&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f0ce6428ed7ce9a3f007ac820d6ad83fbe35d9" translate="yes" xml:space="preserve">
          <source>This single module should provide all the common functionality for numpy tests in a single location, so that &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/dev/development_environment.html#development-environment&quot;&gt;test scripts&lt;/a&gt; can just import it and work right away. For background, see the &lt;a href=&quot;testing#testing-guidelines&quot;&gt;Testing Guidelines&lt;/a&gt;</source>
          <target state="translated">Este &amp;uacute;nico m&amp;oacute;dulo deber&amp;iacute;a proporcionar toda la funcionalidad com&amp;uacute;n para numerosas pruebas en una &amp;uacute;nica ubicaci&amp;oacute;n, de modo que &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/dev/development_environment.html#development-environment&quot;&gt;los scripts de prueba&lt;/a&gt; puedan importarlo y trabajar de inmediato. Para conocer los antecedentes, consulte las &lt;a href=&quot;testing#testing-guidelines&quot;&gt;Directrices de prueba&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e97f89b724acb7f31f3f94df4fb5ca630be7277b" translate="yes" xml:space="preserve">
          <source>This sort of mutation is not allowed by the types. Users who want to write statically typed code should insted use the &lt;a href=&quot;generated/numpy.ndarray.view#numpy.ndarray.view&quot;&gt;&lt;code&gt;numpy.ndarray.view&lt;/code&gt;&lt;/a&gt; method to create a view of the array with a different dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb22e5bb35e33b30ed01dab66654627fe20956a" translate="yes" xml:space="preserve">
          <source>This specifies the &amp;ldquo;intention&amp;rdquo; of the corresponding argument. &lt;code&gt;&amp;lt;intentspec&amp;gt;&lt;/code&gt; is a comma separated list of the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e999bfd9ee7986bb74545207acc796f3e46abd8" translate="yes" xml:space="preserve">
          <source>This specifies which warnings to configure as &amp;lsquo;raise&amp;rsquo; instead of being shown once during the test execution. Valid strings are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355c08a8b685b52031d6593cc7642f8973231125" translate="yes" xml:space="preserve">
          <source>This step is only needed for final releases and can be skipped for pre-releases. &lt;code&gt;make merge-doc&lt;/code&gt; clones the &lt;code&gt;numpy/doc&lt;/code&gt; repo into &lt;code&gt;doc/build/merge&lt;/code&gt; and updates it with the new documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04c1b598b018608346e9a082214a1abd34ac499" translate="yes" xml:space="preserve">
          <source>This string will be used as the marker for missing data for all the columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96875a0b29939a3e2bb067cb066089a92949861" translate="yes" xml:space="preserve">
          <source>This structure is very useful when shape and/or strides information is supposed to be interpreted. The structure is:</source>
          <target state="translated">Esta estructura es muy útil cuando se supone que la información de forma y/o zancadas debe ser interpretada.La estructura es:</target>
        </trans-unit>
        <trans-unit id="f5377b9ec1ee34b1b46afca48f12d70eda083569" translate="yes" xml:space="preserve">
          <source>This style allows passing in the &lt;a href=&quot;generated/numpy.dtype.fields#numpy.dtype.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; attribute of a data-type object.</source>
          <target state="translated">Este estilo permite pasar el atributo de &lt;a href=&quot;generated/numpy.dtype.fields#numpy.dtype.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt; de un objeto de tipo de datos.</target>
        </trans-unit>
        <trans-unit id="8baa5c3fa91f9d82d5f372676363ca92358b6704" translate="yes" xml:space="preserve">
          <source>This style does not accept &lt;em&gt;align&lt;/em&gt; in the &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; constructor as it is assumed that all of the memory is accounted for by the array interface description.</source>
          <target state="translated">Este estilo no acepta la &lt;em&gt;alineaci&amp;oacute;n&lt;/em&gt; en el constructor &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; ,&lt;/a&gt; ya que se supone que toda la memoria est&amp;aacute; representada por la descripci&amp;oacute;n de la interfaz de la matriz.</target>
        </trans-unit>
        <trans-unit id="63b067d6a5e8e9587ae90576ba34210d81e53f6b" translate="yes" xml:space="preserve">
          <source>This style has two required and three optional keys. The &lt;em&gt;names&lt;/em&gt; and &lt;em&gt;formats&lt;/em&gt; keys are required. Their respective values are equal-length lists with the field names and the field formats. The field names must be strings and the field formats can be any object accepted by &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">Este estilo tiene dos claves obligatorias y tres opcionales. Se requieren las claves de &lt;em&gt;nombres&lt;/em&gt; y &lt;em&gt;formatos&lt;/em&gt; . Sus valores respectivos son listas de igual longitud con los nombres de campo y los formatos de campo. Los nombres de campo deben ser cadenas y los formatos de campo pueden ser cualquier objeto aceptado por el constructor &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fd39c592746d75bfe12bf10bab5bf15e715d323" translate="yes" xml:space="preserve">
          <source>This subclass of ndarray has some unpleasant interactions with some operations, because it doesn&amp;rsquo;t quite fit properly as a subclass. An alternative to using this subclass is to create the &lt;code&gt;mmap&lt;/code&gt; object yourself, then create an ndarray with ndarray.__new__ directly, passing the object created in its &amp;lsquo;buffer=&amp;rsquo; parameter.</source>
          <target state="translated">Esta subclase de ndarray tiene algunas interacciones desagradables con algunas operaciones, porque no encaja bien como subclase. Una alternativa al uso de esta subclase es crear el objeto &lt;code&gt;mmap&lt;/code&gt; usted mismo, luego crear un ndarray con ndarray .__ new__ directamente, pasando el objeto creado en su par&amp;aacute;metro 'buffer ='.</target>
        </trans-unit>
        <trans-unit id="8a52b4cb6a8af65abce36bb79c9c41aa8777063c" translate="yes" xml:space="preserve">
          <source>This tells you that you are currently on the &lt;code&gt;master&lt;/code&gt; branch, and that you also have a &lt;code&gt;remote&lt;/code&gt; connection to &lt;code&gt;origin/master&lt;/code&gt;. What remote repository is &lt;code&gt;remote/origin&lt;/code&gt;? Try &lt;code&gt;git remote -v&lt;/code&gt; to see the URLs for the remote. They will point to your &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;github&lt;/a&gt; fork.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e089f7d3412f57a533b95b4289e1725ee616b3" translate="yes" xml:space="preserve">
          <source>This template converter will replicate all &lt;strong&gt;function&lt;/strong&gt; and &lt;strong&gt;subroutine&lt;/strong&gt; blocks in the file with names that contain &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo; according to the rules in &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo;. The number of comma-separated words in &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo; determines the number of times the block is repeated. What these words are indicates what that repeat rule, &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo;, should be replaced with in each block. All of the repeat rules in a block must contain the same number of comma-separated words indicating the number of times that block should be repeated. If the word in the repeat rule needs a comma, leftarrow, or rightarrow, then prepend it with a backslash &amp;lsquo; &amp;lsquo;. If a word in the repeat rule matches &amp;lsquo; \&amp;lt;index&amp;gt;&amp;rsquo; then it will be replaced with the &amp;lt;index&amp;gt;-th word in the same repeat specification. There are two forms for the repeat rule: named and short.</source>
          <target state="translated">Este convertidor de plantillas replicar&amp;aacute; todas las &lt;strong&gt;funciones&lt;/strong&gt; y &lt;strong&gt;subrutinas&lt;/strong&gt;bloques en el archivo con nombres que contienen '&amp;lt;&amp;hellip;&amp;gt;' de acuerdo con las reglas en '&amp;lt;&amp;hellip;&amp;gt;'. El n&amp;uacute;mero de palabras separadas por comas en '&amp;lt;&amp;hellip;&amp;gt;' determina el n&amp;uacute;mero de veces que se repite el bloque. Lo que son estas palabras indica con qu&amp;eacute; se debe reemplazar esa regla de repetici&amp;oacute;n, '&amp;lt;&amp;hellip;&amp;gt;', en cada bloque. Todas las reglas de repetici&amp;oacute;n en un bloque deben contener el mismo n&amp;uacute;mero de palabras separadas por comas que indiquen el n&amp;uacute;mero de veces que ese bloque debe repetirse. Si la palabra en la regla de repetici&amp;oacute;n necesita una coma, una flecha izquierda o una flecha derecha, antep&amp;oacute;ngala con una barra invertida ''. Si una palabra en la regla de repetici&amp;oacute;n coincide con '\ &amp;lt;&amp;iacute;ndice&amp;gt;', entonces ser&amp;aacute; reemplazada por la palabra &amp;lt;&amp;iacute;ndice&amp;gt; en la misma especificaci&amp;oacute;n de repetici&amp;oacute;n. Hay dos formas para la regla de repetici&amp;oacute;n: nombrada y corta.</target>
        </trans-unit>
        <trans-unit id="7b0c224585cc04560ef8f7427d408f831662e6b0" translate="yes" xml:space="preserve">
          <source>This tutorial is for people who have a basic understanding of NumPy and want to understand how masked arrays and the &lt;a href=&quot;../reference/maskedarray.generic#module-numpy.ma&quot;&gt;&lt;code&gt;numpy.ma&lt;/code&gt;&lt;/a&gt; module can be used in practice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17f08578fff4f4b7f45b2cc421b1a2466a7ddfd" translate="yes" xml:space="preserve">
          <source>This tutorial is for people who have a basic understanding of linear algebra and arrays in NumPy and want to understand how n-dimensional (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4e248732bbeee435a6603f84a77d8416a7d7b4" translate="yes" xml:space="preserve">
          <source>This tutorial is intended as a quick overview of algebra and arrays in NumPy and want to understand how n-dimensional (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fb6c8e0c4b1a20c93f451ff612ab566979e83c" translate="yes" xml:space="preserve">
          <source>This type provides an iterator that encapsulates the concept of broadcasting. It allows</source>
          <target state="translated">Este tipo proporciona un iterador que encapsula el concepto de radiodifusión.Permite</target>
        </trans-unit>
        <trans-unit id="1cc43cfc53c5139a19951c354fea30226e0f77c2" translate="yes" xml:space="preserve">
          <source>This updates your feature branch with changes from the upstream &lt;a href=&quot;https://github.com/numpy/numpy&quot;&gt;NumPy github&lt;/a&gt; repo. If you do not absolutely need to do this, try to avoid doing it, except perhaps when you are finished. The first step will be to update the remote repository with new commits from upstream:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedc2274acc4b818673988228fa9cde0f7271aad" translate="yes" xml:space="preserve">
          <source>This usage is discouraged, because it is ambiguous with the other dict-based construction method. If you have a field called &amp;lsquo;names&amp;rsquo; and a field called &amp;lsquo;formats&amp;rsquo; there will be a conflict.</source>
          <target state="translated">Se desaconseja este uso, porque es ambiguo con el otro m&amp;eacute;todo de construcci&amp;oacute;n basado en dictados. Si tiene un campo llamado 'nombres' y un campo llamado 'formatos', habr&amp;aacute; un conflicto.</target>
        </trans-unit>
        <trans-unit id="57872c5abdb149b7d4963cf4f155c74d4913dff4" translate="yes" xml:space="preserve">
          <source>This version replaces the ASCII string (which in practice was latin1) with a utf8-encoded string, so supports structured types with any unicode field names.</source>
          <target state="translated">Esta versión reemplaza la cadena ASCII (que en la práctica era latina1)con una cadena codificada en utf8,por lo que soporta tipos estructurados con cualquier nombre de campo unicode.</target>
        </trans-unit>
        <trans-unit id="edc2f7bd6317d38177dd997f322c5b71aa234a4f" translate="yes" xml:space="preserve">
          <source>This view has the same dtype and itemsize as the indexed field, so it is typically a non-structured array, except in the case of nested structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66a767f0f656eca452c102d2e2bcfa75e3b2eec" translate="yes" xml:space="preserve">
          <source>This way of working helps to keep work well organized and the history as clear as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd10a8b1d06600ccbaab74bb218a771768eae1ee" translate="yes" xml:space="preserve">
          <source>This will ask for your key PGP passphrase, in order to sign the built source packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6efd49b695f694142bfb54798d0f3fc1890e14" translate="yes" xml:space="preserve">
          <source>This will be a new view object if possible; otherwise, it will be a copy. Note there is no guarantee of the &lt;em&gt;memory layout&lt;/em&gt; (C- or Fortran- contiguous) of the returned array.</source>
          <target state="translated">Este ser&amp;aacute; un nuevo objeto de vista si es posible; de lo contrario, ser&amp;aacute; una copia. Tenga en cuenta que no hay garant&amp;iacute;a del &lt;em&gt;dise&amp;ntilde;o de memoria&lt;/em&gt; (C- o Fortran- contiguo) de la matriz devuelta.</target>
        </trans-unit>
        <trans-unit id="8a5efb1ea8118b8207bdfa5a6ca70f84b9755cf3" translate="yes" xml:space="preserve">
          <source>This will be the default for all columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee2bb240a6f906f9c6caaca502a22c771c78509" translate="yes" xml:space="preserve">
          <source>This will compile numpy on 4 CPUs and install it into the specified prefix. to perform a parallel in-place build, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82de4d27fe00c2e50e0f9b4ff494406f1e8a2a9f" translate="yes" xml:space="preserve">
          <source>This will create a report in &lt;code&gt;build/coverage&lt;/code&gt;, which can be viewed with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8933167843c02b6efd0369f05c57b0cadbffbc22" translate="yes" xml:space="preserve">
          <source>This will install the file foo.ini into the directory package_dir/lib, and the foo.ini file will be generated from foo.ini.in, where each &lt;code&gt;@version@&lt;/code&gt; will be replaced by &lt;code&gt;subst_dict['version']&lt;/code&gt;. The dictionary has an additional prefix substitution rule automatically added, which contains the install prefix (since this is not easy to get from setup.py). npy-pkg-config files can also be installed at the same location as used for numpy, using the path returned from &lt;code&gt;get_npy_pkg_dir&lt;/code&gt; function.</source>
          <target state="translated">Esto instalar&amp;aacute; el archivo foo.ini en el directorio package_dir / lib, y el archivo foo.ini se generar&amp;aacute; desde foo.ini.in, donde cada &lt;code&gt;@version@&lt;/code&gt; ser&amp;aacute; reemplazado por &lt;code&gt;subst_dict['version']&lt;/code&gt; . El diccionario tiene una regla de sustituci&amp;oacute;n de prefijo adicional que se agrega autom&amp;aacute;ticamente, que contiene el prefijo de instalaci&amp;oacute;n (ya que no es f&amp;aacute;cil de obtener desde setup.py). Los archivos npy-pkg-config tambi&amp;eacute;n se pueden instalar en la misma ubicaci&amp;oacute;n que se usa para numpy, usando la ruta devuelta por la funci&amp;oacute;n &lt;code&gt;get_npy_pkg_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="520884ce9a07e1b7b3267f965a90c87f51ddd2d6" translate="yes" xml:space="preserve">
          <source>This will open an editor with the following text in it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939c7c1369b63ae063d5f436c52d25c44b07c327" translate="yes" xml:space="preserve">
          <source>This will produce an extension module named filter.so in the current directory with a method named dfilter2d that returns a filtered version of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4b4079ec57ef48d099df7ab2d17f04629ceaf5" translate="yes" xml:space="preserve">
          <source>This will work with MSVC, which otherwise chokes on very long strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f5f63667326a5abebdc8b9ee9a7240e62a05f5" translate="yes" xml:space="preserve">
          <source>This will write the settings into your git configuration file, which should now contain a user section with your name and email:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00582fa3dde2e164fba27e484b480804eaaba584" translate="yes" xml:space="preserve">
          <source>This works for both standard installs and in-place builds, i.e. the &lt;code&gt;@prefix@&lt;/code&gt; refer to the source directory for in-place builds.</source>
          <target state="translated">Esto funciona tanto para instalaciones est&amp;aacute;ndar como para compilaciones in situ, es decir, el &lt;code&gt;@prefix@&lt;/code&gt; referencia al directorio de origen de las compilaciones in situ.</target>
        </trans-unit>
        <trans-unit id="8dbc0909265236a8e2f517b68e39944b2e4da272" translate="yes" xml:space="preserve">
          <source>Those can be useful for precise floating point comparison.</source>
          <target state="translated">Estos pueden ser útiles para una comparación precisa de puntos flotantes.</target>
        </trans-unit>
        <trans-unit id="ae29a3649bad434c98c44c18fb3c7ec696b132a3" translate="yes" xml:space="preserve">
          <source>Those who want really good performance out of their low level operations should strongly consider directly using the iteration API provided in C, but for those who are not comfortable with C or C++, Cython is a good middle ground with reasonable performance tradeoffs. For the &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object, this means letting the iterator take care of broadcasting, dtype conversion, and buffering, while giving the inner loop to Cython.</source>
          <target state="translated">Aquellos que desean un rendimiento realmente bueno de sus operaciones de bajo nivel deber&amp;iacute;an considerar seriamente el uso directo de la API de iteraci&amp;oacute;n proporcionada en C, pero para aquellos que no se sienten c&amp;oacute;modos con C o C ++, Cython es un buen t&amp;eacute;rmino medio con compensaciones de rendimiento razonables. Para el objeto &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt; , esto significa dejar que el iterador se encargue de la transmisi&amp;oacute;n, la conversi&amp;oacute;n de dtype y el almacenamiento en b&amp;uacute;fer, mientras le da el bucle interno a Cython.</target>
        </trans-unit>
        <trans-unit id="69a5e45c8dfd90560d7c862ef6ebab38e4725ee6" translate="yes" xml:space="preserve">
          <source>Though the demonstrated way of wrapping Fortran routines to Python is very straightforward, it has several drawbacks (see the comments above). These drawbacks are due to the fact that there is no way that F2PY can determine what is the actual intention of one or the other argument, is it input or output argument, or both, or something else. So, F2PY conservatively assumes that all arguments are input arguments by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea9f95f9e9b92d3d1f748e1eafd1b88bb106fab" translate="yes" xml:space="preserve">
          <source>Though we welcome people fluent in all languages, NumPy development is conducted in English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cd6421fe23fe93d73ba2b3eea2e1d452707c95" translate="yes" xml:space="preserve">
          <source>Thread safe f2py callback functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e557dff981ec6af1be9c041d1715ad421f55bd" translate="yes" xml:space="preserve">
          <source>Threading support</source>
          <target state="translated">Soporte de rosca</target>
        </trans-unit>
        <trans-unit id="2d3ac6352887bde0f838813d8ea2d7bd7a567c2f" translate="yes" xml:space="preserve">
          <source>Three common use cases are:</source>
          <target state="translated">Tres casos de uso común son:</target>
        </trans-unit>
        <trans-unit id="cfe35da7de09a2e27452780257d1fa8fced9ae75" translate="yes" xml:space="preserve">
          <source>Three ways to wrap - getting started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987f8885750fc51202cc3964c96525b26400aa8c" translate="yes" xml:space="preserve">
          <source>Three-by-two array of random numbers from [-5, 0):</source>
          <target state="translated">Una serie de números aleatorios de tres por dos de [-5,0):</target>
        </trans-unit>
        <trans-unit id="648f2b8e04236f9ba0d33739777255491d46f3b0" translate="yes" xml:space="preserve">
          <source>Threshold below which SVD values are considered zero. If &lt;code&gt;tol&lt;/code&gt; is None, and &lt;code&gt;S&lt;/code&gt; is an array with singular values for &lt;code&gt;M&lt;/code&gt;, and &lt;code&gt;eps&lt;/code&gt; is the epsilon value for datatype of &lt;code&gt;S&lt;/code&gt;, then &lt;code&gt;tol&lt;/code&gt; is set to &lt;code&gt;S.max() * max(M.shape) * eps&lt;/code&gt;.</source>
          <target state="translated">Umbral por debajo del cual los valores de SVD se consideran cero. Si &lt;code&gt;tol&lt;/code&gt; es None, y &lt;code&gt;S&lt;/code&gt; es una matriz con valores singulares para &lt;code&gt;M&lt;/code&gt; , y &lt;code&gt;eps&lt;/code&gt; es el valor &amp;eacute;psilon para el tipo de datos de &lt;code&gt;S&lt;/code&gt; , entonces &lt;code&gt;tol&lt;/code&gt; se establece en &lt;code&gt;S.max() * max(M.shape) * eps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a18ce980b9b6a0af6ba5335aa5043a3f61a2139" translate="yes" xml:space="preserve">
          <source>Throw a dice 20 times:</source>
          <target state="translated">Lanza un dado 20 veces:</target>
        </trans-unit>
        <trans-unit id="e8597c496d58a52fd023424932f79f11d89743f4" translate="yes" xml:space="preserve">
          <source>Thus, tuples might be thought of as the native Python equivalent to numpy&amp;rsquo;s structured types, much like native python integers are the equivalent to numpy&amp;rsquo;s integer types. Structured scalars may be converted to a tuple by calling &lt;a href=&quot;../reference/generated/numpy.ndarray.item#numpy.ndarray.item&quot;&gt;&lt;code&gt;numpy.ndarray.item&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c62c18ed666f3768ae228e6da435d58941de5d" translate="yes" xml:space="preserve">
          <source>Thus, tuples might be thought of as the native Python equivalent to numpy&amp;rsquo;s structured types, much like native python integers are the equivalent to numpy&amp;rsquo;s integer types. Structured scalars may be converted to a tuple by calling &lt;code&gt;ndarray.item&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699ce8b0c5a25495e7df7b31eb754f06f5937265" translate="yes" xml:space="preserve">
          <source>Tile an array.</source>
          <target state="translated">Coloca azulejos en una matriz.</target>
        </trans-unit>
        <trans-unit id="9478b387e78ee7ed878f28def0d9d737a40db3cf" translate="yes" xml:space="preserve">
          <source>Tiling arrays</source>
          <target state="translated">Matrices de azulejos</target>
        </trans-unit>
        <trans-unit id="ae9e32a7bf76d858a6643fb3d615f4e6b741df45" translate="yes" xml:space="preserve">
          <source>Time span (absolute)</source>
          <target state="translated">Periodo de tiempo (absoluto)</target>
        </trans-unit>
        <trans-unit id="83a0b67f984af7843f2cd5f9c4c4a4937a96b824" translate="yes" xml:space="preserve">
          <source>Time span (relative)</source>
          <target state="translated">Periodo de tiempo (relativo)</target>
        </trans-unit>
        <trans-unit id="f427901653e2f16331f232b03616db8d30b0bf3e" translate="yes" xml:space="preserve">
          <source>Timedelta</source>
          <target state="translated">Timedelta</target>
        </trans-unit>
        <trans-unit id="4c953c5dc449ee95c79ccb8a9c6463f3dce00860" translate="yes" xml:space="preserve">
          <source>Timedelta64</source>
          <target state="translated">Timedelta64</target>
        </trans-unit>
        <trans-unit id="a836f04893b4c22a5902f8a189928c3d93f72795" translate="yes" xml:space="preserve">
          <source>Timezone information to use when displaying the datetime. If &amp;lsquo;UTC&amp;rsquo;, end with a Z to indicate UTC time. If &amp;lsquo;local&amp;rsquo;, convert to the local timezone first, and suffix with a +-#### timezone offset. If a tzinfo object, then do as with &amp;lsquo;local&amp;rsquo;, but use the specified timezone.</source>
          <target state="translated">Informaci&amp;oacute;n de la zona horaria que se utilizar&amp;aacute; al mostrar la fecha y hora. Si es 'UTC', termine con una Z para indicar la hora UTC. Si es 'local', convi&amp;eacute;rtalo primero a la zona horaria local y el sufijo con un desplazamiento de zona horaria + - ####. Si es un objeto tzinfo, haga lo mismo con 'local', pero use la zona horaria especificada.</target>
        </trans-unit>
        <trans-unit id="73a38ab3a76b2ed7df0194513c7633ac39221da4" translate="yes" xml:space="preserve">
          <source>Timing of individual tests with &lt;code&gt;nose-timer&lt;/code&gt; (which needs to be installed). If True, time tests and report on all of them. If an integer (say &lt;code&gt;N&lt;/code&gt;), report timing results for &lt;code&gt;N&lt;/code&gt; slowest tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661d4063b8ec8980f63428513015c42d7d7a39d4" translate="yes" xml:space="preserve">
          <source>Timings</source>
          <target state="translated">Timings</target>
        </trans-unit>
        <trans-unit id="535904f7958066905a2c6d516287e9eeaaa0c6e1" translate="yes" xml:space="preserve">
          <source>Timsort and radix sort have replaced mergesort for stable sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18696f01e06a1b84af54b40680c306637cf01d64" translate="yes" xml:space="preserve">
          <source>Timsort is added for better performance on already or nearly sorted data. On random data timsort is almost identical to mergesort. It is now used for stable sort while quicksort is still the default sort if none is chosen. For details of timsort, refer to &lt;a href=&quot;https://github.com/python/cpython/blob/3.7/Objects/listsort.txt&quot;&gt;CPython listsort.txt&lt;/a&gt;. &amp;lsquo;mergesort&amp;rsquo; and &amp;lsquo;stable&amp;rsquo; are mapped to radix sort for integer data types. Radix sort is an O(n) sort instead of O(n log n).</source>
          <target state="translated">Se agrega Timsort para un mejor rendimiento en datos ya ordenados o casi ordenados. En datos aleatorios, timsort es casi id&amp;eacute;ntico a mergesort. Ahora se usa para una ordenaci&amp;oacute;n estable, mientras que la ordenaci&amp;oacute;n r&amp;aacute;pida sigue siendo la ordenaci&amp;oacute;n predeterminada si no se elige ninguna. Para obtener detalles sobre timsort, consulte &lt;a href=&quot;https://github.com/python/cpython/blob/3.7/Objects/listsort.txt&quot;&gt;CPython listsort.txt&lt;/a&gt; . 'mergesort' y 'estable' se asignan a la ordenaci&amp;oacute;n de base para tipos de datos enteros. La ordenaci&amp;oacute;n por radix es una ordenaci&amp;oacute;n O (n) en lugar de O (n log n).</target>
        </trans-unit>
        <trans-unit id="4c9ab7d1647422ac2345aafe56b9ec321ff2ddfd" translate="yes" xml:space="preserve">
          <source>Timsort is added for better performance on already or nearly sorted data. On random data timsort is almost identical to mergesort. It is now used for stable sort while quicksort is still the default sort if none is chosen. For timsort details, refer to &lt;a href=&quot;https://github.com/python/cpython/blob/3.7/Objects/listsort.txt&quot;&gt;CPython listsort.txt&lt;/a&gt;. &amp;lsquo;mergesort&amp;rsquo; and &amp;lsquo;stable&amp;rsquo; are mapped to radix sort for integer data types. Radix sort is an O(n) sort instead of O(n log n).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19ceca501465c339e3bcf2bc0d8ff02bb697d6c" translate="yes" xml:space="preserve">
          <source>Tip</source>
          <target state="translated">Tip</target>
        </trans-unit>
        <trans-unit id="e4a5f9b37a824ec47658f0ce1a5ad5ba55b84339" translate="yes" xml:space="preserve">
          <source>Tip: &lt;code&gt;entry&lt;/code&gt; statement can be used to describe the signature of an arbitrary routine allowing F2PY to generate a number of wrappers from only one routine block signature. There are few restrictions while doing this: &lt;code&gt;fortranname&lt;/code&gt; cannot be used, &lt;code&gt;callstatement&lt;/code&gt; and &lt;code&gt;callprotoargument&lt;/code&gt; can be used only if they are valid for all entry routines, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96f3984eaaf637764ee32773288dabcc604bf6b" translate="yes" xml:space="preserve">
          <source>Tips &amp;amp; Tricks</source>
          <target state="translated">consejos y trucos</target>
        </trans-unit>
        <trans-unit id="caa39d36bfce368de59fb6b06774c2bd179f06cf" translate="yes" xml:space="preserve">
          <source>Title case words start with uppercase characters, all remaining cased characters are lowercase.</source>
          <target state="translated">Las palabras del título empiezan con mayúsculas,el resto de las mayúsculas son minúsculas.</target>
        </trans-unit>
        <trans-unit id="45c41172aa1c58d7ba017f081fcd4e2ace4e86f0" translate="yes" xml:space="preserve">
          <source>Title that is printed in the string representation of &lt;a href=&quot;#numpy.MachAr&quot;&gt;&lt;code&gt;MachAr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">T&amp;iacute;tulo que se imprime en la representaci&amp;oacute;n de cadena de &lt;a href=&quot;#numpy.MachAr&quot;&gt; &lt;code&gt;MachAr&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20fb23c1b6aaaab924d80202c9bd41b9e867e2de" translate="yes" xml:space="preserve">
          <source>To Cython-ize this function, we replace the inner loop (y[&amp;hellip;] += x*x) with Cython code that&amp;rsquo;s specialized for the float64 dtype. With the &amp;lsquo;external_loop&amp;rsquo; flag enabled, the arrays provided to the inner loop will always be one-dimensional, so very little checking needs to be done.</source>
          <target state="translated">Para Cython-izar esta funci&amp;oacute;n, reemplazamos el bucle interno (y [&amp;hellip;] + = x * x) con c&amp;oacute;digo Cython que est&amp;aacute; especializado para el tipo dtype float64. Con el indicador 'external_loop' habilitado, las matrices proporcionadas al bucle interno siempre ser&amp;aacute;n unidimensionales, por lo que es necesario realizar muy pocas comprobaciones.</target>
        </trans-unit>
        <trans-unit id="36e086a6bd3eb648c4aebbd467026f4cd1c91bb0" translate="yes" xml:space="preserve">
          <source>To achieve a behaviour similar to the basic slicing above, broadcasting can be used. The function &lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt;&lt;code&gt;ix_&lt;/code&gt;&lt;/a&gt; can help with this broadcasting. This is best understood with an example.</source>
          <target state="translated">Para lograr un comportamiento similar al corte b&amp;aacute;sico anterior, se puede utilizar la transmisi&amp;oacute;n. La funci&amp;oacute;n &lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt; &lt;code&gt;ix_&lt;/code&gt; &lt;/a&gt; puede ayudar con esta transmisi&amp;oacute;n. Esto se comprende mejor con un ejemplo.</target>
        </trans-unit>
        <trans-unit id="157492b79c5123115a363aac40a6322c3b4d23a2" translate="yes" xml:space="preserve">
          <source>To achieve what we want, we will make the following changes to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82eff9778b88421c109607c96725b336dc7bcf8" translate="yes" xml:space="preserve">
          <source>To actually build the binaries after everything is set up correctly, the release.sh script can be used. For details of the build process itself, it is best to read the pavement.py script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76b68b96c698129b0e21483e667a083f4f8f28a" translate="yes" xml:space="preserve">
          <source>To add the rows or the columns in a 2D array, you would specify the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0b09a56b5f5cb6866275af7bae4ae9b88cd546" translate="yes" xml:space="preserve">
          <source>To add titles when using the list-of-tuples form of dtype specification, the field name may be specified as a tuple of two strings instead of a single string, which will be the field&amp;rsquo;s title and field name respectively. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c09cbfb1aed4718ffc26452a3968e86a1cd3bc" translate="yes" xml:space="preserve">
          <source>To allow the datetime to be used in contexts where only certain days of the week are valid, NumPy includes a set of &amp;ldquo;busday&amp;rdquo; (business day) functions.</source>
          <target state="translated">Para permitir que la fecha y hora se use en contextos donde solo ciertos d&amp;iacute;as de la semana son v&amp;aacute;lidos, NumPy incluye un conjunto de funciones de &amp;ldquo;d&amp;iacute;a laborable&amp;rdquo; (d&amp;iacute;a laboral).</target>
        </trans-unit>
        <trans-unit id="846af85fcfe300adce4c3f84895144d6dc4a75b5" translate="yes" xml:space="preserve">
          <source>To be completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ad91f78d6c9353549254a135a4c203ecca9427" translate="yes" xml:space="preserve">
          <source>To be consistent with surrounding code that also breaks it (maybe for historic reasons) &amp;ndash; although this is also an opportunity to clean up someone else&amp;rsquo;s mess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172099588df066f08374020a56522cb6cad0b84f" translate="yes" xml:space="preserve">
          <source>To become eligible to join the Steering Council, an individual must be a Project Contributor who has produced contributions that are substantial in quality and quantity, and sustained over at least one year. Potential Council Members are nominated by existing Council members, and become members following consensus of the existing Council members, and confirmation that the potential Member is interested and willing to serve in that capacity. The Council will be initially formed from the set of existing Core Developers who, as of late 2015, have been significantly active over the last year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85134bce24b996ec39a48245eda44b01d4da42e0" translate="yes" xml:space="preserve">
          <source>To begin to make use of the new data-type, you need to first define a new Python type to hold the scalars of your new data-type. It should be acceptable to inherit from one of the array scalars if your new type has a binary compatible layout. This will allow your new data type to have the methods and attributes of array scalars. New data- types must have a fixed memory size (if you want to define a data-type that needs a flexible representation, like a variable-precision number, then use a pointer to the object as the data-type). The memory layout of the object structure for the new Python type must be PyObject_HEAD followed by the fixed-size memory needed for the data- type. For example, a suitable structure for the new Python type is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c381239eecf186cabc8bbf33e7f7340c36dd415" translate="yes" xml:space="preserve">
          <source>To build an extension module, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262ab678dba163772e713fb5aa569cad52138f55" translate="yes" xml:space="preserve">
          <source>To build any extension modules for Python, you&amp;rsquo;ll need a C compiler. Various NumPy modules use FORTRAN 77 libraries, so you&amp;rsquo;ll also need a FORTRAN 77 compiler installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e5cfb4630032e513b61c1b673be491694cda68" translate="yes" xml:space="preserve">
          <source>To build docs, run &lt;code&gt;make&lt;/code&gt; from the &lt;code&gt;doc&lt;/code&gt; directory. &lt;code&gt;make help&lt;/code&gt; lists all targets. For example, to build the HTML documentation, you can run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0116b47532b1c9e3e3765cf9819856a98d018b60" translate="yes" xml:space="preserve">
          <source>To build the PDF documentation, do instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06915cfab63303daaadd53bd88f46eb60701ce38" translate="yes" xml:space="preserve">
          <source>To build the development version of NumPy and run tests, spawn interactive shells with the Python import paths properly set up etc., do one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e6dd105e1e44140e34cc1b1405df856709feb0" translate="yes" xml:space="preserve">
          <source>To build the final approximation matrix, we must understand how multiplication across different axes works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9057f4f734687a0b8a5f3961b0c067a8d6921992" translate="yes" xml:space="preserve">
          <source>To change the dimensions of an array, you can omit one of the sizes which will then be deduced automatically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e2711afc65081105d063104c0dfaff7b844b23" translate="yes" xml:space="preserve">
          <source>To commit the staged files into the local copy of your repo, do &lt;code&gt;git
commit&lt;/code&gt;. At this point, a text editor will open up to allow you to write a commit message. Read the &lt;a href=&quot;#writing-the-commit-message&quot;&gt;commit message section&lt;/a&gt; to be sure that you are writing a properly formatted and sufficiently detailed commit message. After saving your message and closing the editor, your commit will be saved. For trivial commits, a short commit message can be passed in through the command line using the &lt;code&gt;-m&lt;/code&gt; flag. For example, &lt;code&gt;git commit -am &quot;ENH: Some message&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e713f5c0c4fc2dee368727d5468ec1ab8e8b8170" translate="yes" xml:space="preserve">
          <source>To construct an extension module, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4163e693f0e52983099e011b7813c35728efe745" translate="yes" xml:space="preserve">
          <source>To contribute code or documentation, you first need</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3a9fa41ffe14d77bbc445c74fe6fd7a66d7a2d" translate="yes" xml:space="preserve">
          <source>To convert the type of an array, use the .astype() method (preferred) or the type itself as a function. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982c13e7b2d67cdbdf6848604f9d8f779a4cdca3" translate="yes" xml:space="preserve">
          <source>To create a NumPy array, you can use the function &lt;code&gt;np.array()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8941cedf9a3b3622178e2a604f85c6f9966d6beb" translate="yes" xml:space="preserve">
          <source>To create a masked array where all values close to 1.e20 are invalid, we would do:</source>
          <target state="translated">Para crear una matriz enmascarada en la que todos los valores cercanos a 1.e20 sean inválidos,lo haríamos:</target>
        </trans-unit>
        <trans-unit id="e67f8cba1a223a6d273b67fa4a3d036f127fda38" translate="yes" xml:space="preserve">
          <source>To create a sub-type, a similar procedure must be followed except only behaviors that are different require new entries in the type- object structure. All other entries can be NULL and will be filled in by &lt;a href=&quot;https://docs.python.org/dev/c-api/type.html#c.PyType_Ready&quot;&gt;&lt;code&gt;PyType_Ready&lt;/code&gt;&lt;/a&gt; with appropriate functions from the parent type(s). In particular, to create a sub-type in C follow these steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf86d74a7427ac0a22c6f0a9b96d12080099d0c" translate="yes" xml:space="preserve">
          <source>To create an array with the second element invalid, we would do:</source>
          <target state="translated">Para crear una matriz con el segundo elemento inválido,lo haríamos:</target>
        </trans-unit>
        <trans-unit id="27de4fde4d9713bb683ffd50eb85f9b3570fc745" translate="yes" xml:space="preserve">
          <source>To create sequences of numbers, NumPy provides the &lt;code&gt;arange&lt;/code&gt; function which is analogous to the Python built-in &lt;code&gt;range&lt;/code&gt;, but returns an array.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
