<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="fb4e8792796e6d8f5b07e6e901d170a1e9cca710" translate="yes" xml:space="preserve">
          <source>shape() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101d175a72ba49b58f0e4c2df7befa6a1c7f43ba" translate="yes" xml:space="preserve">
          <source>sharedmask (numpy.ma.MaskedArray attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88435c3d80c7a9cd04eb2d926dc0e1b5d2a8ab28" translate="yes" xml:space="preserve">
          <source>sharedmask() (numpy.ma.masked_array property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde9de0386897cd3071a0c56f668a5411ee15b0a" translate="yes" xml:space="preserve">
          <source>shares_memory() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f4ea7d91495df92bbac2e2149dfb850fe81396" translate="yes" xml:space="preserve">
          <source>short</source>
          <target state="translated">short</target>
        </trans-unit>
        <trans-unit id="0bd757c31d4f3ca64f8f583b5a04972c9cb761b7" translate="yes" xml:space="preserve">
          <source>short-circuiting logical AND operator (Python native operator); scalar arguments only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc728d37651685c65c3006834ceb61bcd2504f78" translate="yes" xml:space="preserve">
          <source>short-circuiting logical OR operator (Python native operator); scalar arguments only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73551f538a27b3560683d23bfe68f1c196079da" translate="yes" xml:space="preserve">
          <source>should be 768x1024 since &lt;code&gt;U&lt;/code&gt; is 768x768 and &lt;code&gt;Vt&lt;/code&gt; is 1024x1024.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1d1fcbab9ef6a0d0854d7e54cbbc70bc556052" translate="yes" xml:space="preserve">
          <source>should give you an image indistinguishable from the original one (although we may introduce floating point errors for this reconstruction). In fact, you might see a warning message saying &lt;code&gt;&amp;ldquo;Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).&amp;rdquo;&lt;/code&gt; This is expected from the manipulation we just did on the original image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827305a6369afdabc8373facb370817c92c346e3" translate="yes" xml:space="preserve">
          <source>should shield you from changes to Python C api</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2166ec63115d720a9998cb2eee402e0c9733fbf6" translate="yes" xml:space="preserve">
          <source>show_config() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d007dc3dd9030bc93745ea9a2b06f9be4f12d3c1" translate="yes" xml:space="preserve">
          <source>shrink_mask() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2a09a1b3e842b29c021a2495bbb533261535f1" translate="yes" xml:space="preserve">
          <source>shuffle() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4eec307fab9b49c3ec215c54b6ceda069334e69" translate="yes" xml:space="preserve">
          <source>sign (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47ff80f60d0ba7dce5096966167ef5e8f23a08d" translate="yes" xml:space="preserve">
          <source>sign : str</source>
          <target state="translated">signo:str</target>
        </trans-unit>
        <trans-unit id="fab5f62863cdedc5143552c9d37d6679e3304f7a" translate="yes" xml:space="preserve">
          <source>signature</source>
          <target state="translated">signature</target>
        </trans-unit>
        <trans-unit id="a2e0271155bc7ef2e3aed20f1a6c36bfe9d693ff" translate="yes" xml:space="preserve">
          <source>signature (numpy.ufunc attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367f02fe243e787b2e64e791c4e7b67f073c41f6" translate="yes" xml:space="preserve">
          <source>signbit (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b6ee3c2dbb3f3abe84363629b2529c455f02c8" translate="yes" xml:space="preserve">
          <source>signed integer</source>
          <target state="translated">entero firmado</target>
        </trans-unit>
        <trans-unit id="aacfbfe66efb2e10499ed4c1776bd95616131d37" translate="yes" xml:space="preserve">
          <source>similar function</source>
          <target state="translated">función similar</target>
        </trans-unit>
        <trans-unit id="221a8e3b6db7568cd78e3164306ab799e80923e8" translate="yes" xml:space="preserve">
          <source>similar function, for lower-triangular.</source>
          <target state="translated">función similar,para el triángulo inferior.</target>
        </trans-unit>
        <trans-unit id="1ad9b34bcbd2926f18bcf94a3b90721363a6bbc0" translate="yes" xml:space="preserve">
          <source>similar function, for upper-triangular.</source>
          <target state="translated">función similar,para el triángulo superior.</target>
        </trans-unit>
        <trans-unit id="6b28af57c60cd6570e64c36ca09b796252c507f0" translate="yes" xml:space="preserve">
          <source>similar instance method</source>
          <target state="translated">método de instancia similar</target>
        </trans-unit>
        <trans-unit id="5edf9c637e4b19a16fe0efb7d49d868f6c45af0d" translate="yes" xml:space="preserve">
          <source>similar method</source>
          <target state="translated">método similar...</target>
        </trans-unit>
        <trans-unit id="381fa03d57678b1ea81055be101ff8a5400609bd" translate="yes" xml:space="preserve">
          <source>similar to &lt;a href=&quot;#numpy.random.mtrand.RandomState.randint&quot;&gt;&lt;code&gt;randint&lt;/code&gt;&lt;/a&gt;, only for the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;], and 1 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">similar a &lt;a href=&quot;#numpy.random.mtrand.RandomState.randint&quot;&gt; &lt;code&gt;randint&lt;/code&gt; &lt;/a&gt; , solo para el intervalo cerrado [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; ], y 1 es el valor m&amp;aacute;s bajo si se omite &lt;code&gt;high&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aae711dbba06966f8e2fea7f9c342cb8270b7c73" translate="yes" xml:space="preserve">
          <source>similar to &lt;a href=&quot;#numpy.random.randint&quot;&gt;&lt;code&gt;randint&lt;/code&gt;&lt;/a&gt;, only for the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;], and 1 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a529d28d04efaf71c01989b8d64f6bd5f6f9ed7f" translate="yes" xml:space="preserve">
          <source>similar to &lt;a href=&quot;numpy.random.randint#numpy.random.randint&quot;&gt;&lt;code&gt;randint&lt;/code&gt;&lt;/a&gt;, only for the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;], and 1 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e337e6e1cb3ecfda45b9940600eabc31754560" translate="yes" xml:space="preserve">
          <source>sin (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c724cce335249f71b15c28b0979c594bf62eb83b" translate="yes" xml:space="preserve">
          <source>sinc() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc6b434089777437c3f4e045c853588224035f0" translate="yes" xml:space="preserve">
          <source>single scalar to specify a sample distance for all dimensions.</source>
          <target state="translated">un solo escalar para especificar una distancia de muestra para todas las dimensiones.</target>
        </trans-unit>
        <trans-unit id="17f640192516ebb6ffcb41861c8a91f4bc80970c" translate="yes" xml:space="preserve">
          <source>single-segment</source>
          <target state="translated">single-segment</target>
        </trans-unit>
        <trans-unit id="84a00004366377779d63d0bb28036d951370a345" translate="yes" xml:space="preserve">
          <source>singular value decomposition of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c3017cba4937419b004758f0a9e630dfe40d13" translate="yes" xml:space="preserve">
          <source>sinh (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fe397d08ed58b71d54f2284cf656763f1a6fa0" translate="yes" xml:space="preserve">
          <source>size (numpy.broadcast attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2392bea9380ebcc1a9888b70b44b7af1d7b80f" translate="yes" xml:space="preserve">
          <source>size() (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea555f3f78eef6c1b16306a29ce98e0346672a2c" translate="yes" xml:space="preserve">
          <source>sizeof(double)</source>
          <target state="translated">sizeof(double)</target>
        </trans-unit>
        <trans-unit id="2b872e266187468e351085203525d6b2aab0723e" translate="yes" xml:space="preserve">
          <source>sizeof(float)</source>
          <target state="translated">sizeof(float)</target>
        </trans-unit>
        <trans-unit id="9c7b1af95835947eef00d21bd1a9339a7e5b0869" translate="yes" xml:space="preserve">
          <source>sizeof(int)</source>
          <target state="translated">sizeof(int)</target>
        </trans-unit>
        <trans-unit id="19508e8b8d2777ca65125e6447208a10818f9c86" translate="yes" xml:space="preserve">
          <source>sizeof(long)</source>
          <target state="translated">sizeof(long)</target>
        </trans-unit>
        <trans-unit id="f1876000f7c1990a8e58f84759b4c5737526bb66" translate="yes" xml:space="preserve">
          <source>sizeof(longdouble) (A macro defines &lt;strong&gt;NPY_SIZEOF_LONGDOUBLE&lt;/strong&gt; as well.)</source>
          <target state="translated">sizeof (longdouble) (Una macro tambi&amp;eacute;n define &lt;strong&gt;NPY_SIZEOF_LONGDOUBLE&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="480cb51518441c7e4c29bd6df78e645877033e22" translate="yes" xml:space="preserve">
          <source>sizeof(longlong) where longlong is defined appropriately on the platform.</source>
          <target state="translated">tamaño de (longlong)donde longlong se define apropiadamente en la plataforma.</target>
        </trans-unit>
        <trans-unit id="ed72d742ffa09b52b8fc89063e0858b07d46fa04" translate="yes" xml:space="preserve">
          <source>sizeof(short)</source>
          <target state="translated">sizeof(short)</target>
        </trans-unit>
        <trans-unit id="2a76b7f1bd3097a424626eee74118f165a34eb79" translate="yes" xml:space="preserve">
          <source>skipif() (in module numpy.testing.dec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5228e66df38e2f27ca61b901edf86f7ef97fb8" translate="yes" xml:space="preserve">
          <source>slice</source>
          <target state="translated">slice</target>
        </trans-unit>
        <trans-unit id="f2326490a44ede89c03648e43aaf6e34312af6af" translate="yes" xml:space="preserve">
          <source>slicing</source>
          <target state="translated">slicing</target>
        </trans-unit>
        <trans-unit id="5febe9e99b08298751c8e2bc5f728039d3b544b3" translate="yes" xml:space="preserve">
          <source>slogdet() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2e32ab8ad49a6b64c34eef4a690b10b01ba033" translate="yes" xml:space="preserve">
          <source>slow() (in module numpy.testing.dec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf58169456a6f2708f5d2500a398408530153a4" translate="yes" xml:space="preserve">
          <source>smallest singular value</source>
          <target state="translated">el valor singular más pequeño</target>
        </trans-unit>
        <trans-unit id="aaadbc2ab077d2c99212ecfd378453858e6859c5" translate="yes" xml:space="preserve">
          <source>so we need to permutate the axis on this array to get a shape like &lt;code&gt;(3, 768, 1024)&lt;/code&gt;. Fortunately, the &lt;a href=&quot;../reference/generated/numpy.transpose#numpy.transpose&quot;&gt;&lt;code&gt;numpy.transpose&lt;/code&gt;&lt;/a&gt; function can do that for us:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd47c8aaa2d15c7a8e74e79915738d98401b8da5" translate="yes" xml:space="preserve">
          <source>soften_mask (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433fa72d24cdf01bf249f352c14dce94296c6ffd" translate="yes" xml:space="preserve">
          <source>soften_mask() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103c6dabf06a8b4c5739019ac396cc351d848a1a" translate="yes" xml:space="preserve">
          <source>solution of a x = b for x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025a1e4d1e87c8975a15b6255e07a936fe3e0627" translate="yes" xml:space="preserve">
          <source>solution of x a = b for x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dae09f7fdeec9c970bf313d2fe041a34ae20a9e" translate="yes" xml:space="preserve">
          <source>solve() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf572b62563a634cbed4a8d77638c90dccde17b" translate="yes" xml:space="preserve">
          <source>sophisticated &lt;a href=&quot;reference/random/index#numpyrandom&quot;&gt;random number capabilities&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321f2cc53bafa88cf3a12d27118a4b155c13846f" translate="yes" xml:space="preserve">
          <source>sophisticated &lt;a href=&quot;reference/ufuncs#ufuncs&quot;&gt;(broadcasting) functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1007e3aefcf485c6611365caa2c84180bb31310" translate="yes" xml:space="preserve">
          <source>sort the matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007b9274e987f96f6033e81635430df3b6562826" translate="yes" xml:space="preserve">
          <source>sort the rows of the matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4edb36a18b9689517e0482c28c688b02b27095" translate="yes" xml:space="preserve">
          <source>sort()</source>
          <target state="translated">sort()</target>
        </trans-unit>
        <trans-unit id="75810ed793f2fd6ea55cba7b12727fd38285bb54" translate="yes" xml:space="preserve">
          <source>sort() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017d03bcc986bbee768dce697b3e20d8a87341aa" translate="yes" xml:space="preserve">
          <source>sort_complex() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75f65e1c2950090a1ec4631328d72f0568548b4" translate="yes" xml:space="preserve">
          <source>source() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982dbe40c38e207ca9499386fbfe5a3e306bf17f" translate="yes" xml:space="preserve">
          <source>sources=[&amp;hellip;], config_fc={&amp;lsquo;noopt&amp;rsquo;:(__file__,1)})</source>
          <target state="translated">fuentes = [&amp;hellip;], config_fc = {'noopt': (__ archivo __, 1)})</target>
        </trans-unit>
        <trans-unit id="1318b0a1562cfd12e8800d4cdbb3e96841e64093" translate="yes" xml:space="preserve">
          <source>spacing (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e483e194a7215aa28143ee97fbaf77057d376214" translate="yes" xml:space="preserve">
          <source>spawn() (numpy.random.SeedSequence method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbec4ac7a249b41861fc0343ca8ecc90702179c1" translate="yes" xml:space="preserve">
          <source>spawn_key (numpy.random.SeedSequence attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba0e470bfdd7886c1b5c0a9bed7101f448e0e27" translate="yes" xml:space="preserve">
          <source>special methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06845c1fe8da6b6eed1033abaabbe8994938e060" translate="yes" xml:space="preserve">
          <source>special methods getitem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31467fb84ef4576f6bbaa0cf3dc225a3c605d992" translate="yes" xml:space="preserve">
          <source>special methods setitem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1588b7ccf516a4cc3eb8e4e1ca96c690c98265" translate="yes" xml:space="preserve">
          <source>special-casing Object arrays so that reference counts are properly handled when copies and/or casts are necessary.</source>
          <target state="translated">de objetos de estuche especial para que los recuentos de referencia se manejen adecuadamente cuando se necesiten copias y/o moldes.</target>
        </trans-unit>
        <trans-unit id="c6757d731761759278176b3aed3b85ee9b3deba3" translate="yes" xml:space="preserve">
          <source>specifiers:</source>
          <target state="translated">specifiers:</target>
        </trans-unit>
        <trans-unit id="92b6320812d86abe48e76fbfbbe8bde7170bf036" translate="yes" xml:space="preserve">
          <source>speed</source>
          <target state="translated">speed</target>
        </trans-unit>
        <trans-unit id="4c7b1c264928da052361705f3c087f64af2d9fd7" translate="yes" xml:space="preserve">
          <source>split multiarray and umath source code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd16549787ee09f5a533be7160f26c20b0c80f57" translate="yes" xml:space="preserve">
          <source>split() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ae5a107320ebc6832d20b1bf0eb446f9dbec10" translate="yes" xml:space="preserve">
          <source>splitlines() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270a5eddec75e2d73acbc84420e707e184752521" translate="yes" xml:space="preserve">
          <source>sqrt (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a4df43ade3a0850e547dea47665b72865fc342" translate="yes" xml:space="preserve">
          <source>square (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb23f1667b9695bdc671d974c4370ee537ca72f" translate="yes" xml:space="preserve">
          <source>square diagonal matrix whose nonzero values are the elements of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaee8b75b2f40c5626073febff1199ace2d1b10" translate="yes" xml:space="preserve">
          <source>squeeze() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f" translate="yes" xml:space="preserve">
          <source>stable</source>
          <target state="translated">stable</target>
        </trans-unit>
        <trans-unit id="95841359fbf27ad340c9c7e1df1b0c08569f0316" translate="yes" xml:space="preserve">
          <source>stack (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fc53139c3c61da3c7664ec386cfdb453737150" translate="yes" xml:space="preserve">
          <source>stack() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317c188ff89eb183d01e7164891e668efce0a046" translate="yes" xml:space="preserve">
          <source>stack_arrays() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a65927929bdc7ab77c94e1b8e9eec5b8eb6695" translate="yes" xml:space="preserve">
          <source>stacklevel of warnings increased</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81328ff3fa21dfc639fd1b1ff1ccdc3feb54c1fe" translate="yes" xml:space="preserve">
          <source>standard C constructs;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88237bb82cb9dc5098d5a74223d039b22ea76653" translate="yes" xml:space="preserve">
          <source>standard_cauchy() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd61eea0d58406a0d542e817cc09e07a0de55e3" translate="yes" xml:space="preserve">
          <source>standard_exponential() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eab4abfa215aced2765832d243ee69866340fa" translate="yes" xml:space="preserve">
          <source>standard_gamma() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4112a71090264f8ecb5af4d8f13326c536ad23dd" translate="yes" xml:space="preserve">
          <source>standard_normal() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48d453fa0cf1d4583eb5fd823dfec79a8b1a27b" translate="yes" xml:space="preserve">
          <source>standard_t() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2230dca4d2e4cb9a1c348325b215bdb8f871ab5" translate="yes" xml:space="preserve">
          <source>startswith() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5db5bf1e369b3251211962b87abdd970565d276" translate="yes" xml:space="preserve">
          <source>state (numpy.random.BitGenerator attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d58a7ec60042e90fdbb4f9bac542371320229ef" translate="yes" xml:space="preserve">
          <source>state - pointer to the state struct</source>
          <target state="translated">estado-puntero a la estructura del estado</target>
        </trans-unit>
        <trans-unit id="fde13f99ff9e30434f2265f62888fa278ea6db5d" translate="yes" xml:space="preserve">
          <source>state_address - Memory address of the state struct</source>
          <target state="translated">state_address-Dirección de memoria de la estructura estatal</target>
        </trans-unit>
        <trans-unit id="cca95853f53c4a81ae20799c4c4f186b7aa91bb1" translate="yes" xml:space="preserve">
          <source>static MaskedArray.__new__()</source>
          <target state="translated">estático MaskedArray.__nuevo__()</target>
        </trans-unit>
        <trans-unit id="29489856c263dc7f1fec184661a2c351dccf518c" translate="yes" xml:space="preserve">
          <source>std (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22014f0de93a6daca302dc58950e621c745d66f6" translate="yes" xml:space="preserve">
          <source>std() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf7eea82cdd0872bf9095c90f7b1ccd44d246b7" translate="yes" xml:space="preserve">
          <source>str (numpy.dtype attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b152a7c0d0bd86ca990cbb1dd1560fc894db36" translate="yes" xml:space="preserve">
          <source>str_len() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf02fb3271b7ecf94ed45c249c456286918033a" translate="yes" xml:space="preserve">
          <source>streams. The specific member of the PCG family that we use is PCG XSL RR 128/64 as described in the paper (&lt;a href=&quot;#r4523891264fe-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c468d044b5d8a1f1f09f73b61c85bed062d25818" translate="yes" xml:space="preserve">
          <source>streams. The specific member of the PCG family that we use is PCG XSL RR 128/64 as described in the paper (&lt;a href=&quot;#r7c40bac0730f-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;).</source>
          <target state="translated">arroyos. El miembro espec&amp;iacute;fico de la familia PCG que utilizamos es PCG XSL RR 128/64, como se describe en el documento ( &lt;a href=&quot;#r7c40bac0730f-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="72096d460a7115efce5eac6b52d925f2a593a10f" translate="yes" xml:space="preserve">
          <source>stricter check of gufunc signature compliance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc89f85b619068818f6ffc8b793a74773a52f83" translate="yes" xml:space="preserve">
          <source>stride</source>
          <target state="translated">stride</target>
        </trans-unit>
        <trans-unit id="0d3c38cd192d37c8fc58e9e38533a0e54c38d086" translate="yes" xml:space="preserve">
          <source>strides (numpy.char.chararray attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="2f85cadce8676aafabb53eb5dbfeb32e38f6576f" translate="yes" xml:space="preserve">
          <source>strip() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf484ccd447797aab3893bdb2b8592bcac4a6ad" translate="yes" xml:space="preserve">
          <source>structured_to_unstructured() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7394da1bf96324e8a6032f62ee66313f7abd210e" translate="yes" xml:space="preserve">
          <source>sub-array</source>
          <target state="translated">sub-array</target>
        </trans-unit>
        <trans-unit id="0d325042e4a5f1d6991f04b42574c150f4b89abf" translate="yes" xml:space="preserve">
          <source>subdtype (numpy.dtype attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a37d04d784809a5a3e7cc73ec9ce074e5de538d" translate="yes" xml:space="preserve">
          <source>subtract (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d243014e4a286e33677c392d89875092640f5204" translate="yes" xml:space="preserve">
          <source>subtyping</source>
          <target state="translated">subtyping</target>
        </trans-unit>
        <trans-unit id="679a10238e3d361d1c18c79d97bbbc272fa93a6a" translate="yes" xml:space="preserve">
          <source>sum (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b9ab5045ea17a0e6f0734a264064d50ab1e8cd" translate="yes" xml:space="preserve">
          <source>sum() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e673747ffe5b66e828d72320fae0a4f7f8ef3ffa" translate="yes" xml:space="preserve">
          <source>sum(abs(x)**ord)**(1./ord)</source>
          <target state="translated">sum(abs(x)**ord)**(1./ord)</target>
        </trans-unit>
        <trans-unit id="22fd9fffa5f75a2c95eea2b939edd0c242e2b28f" translate="yes" xml:space="preserve">
          <source>sum(x != 0)</source>
          <target state="translated">suma(x !=0)</target>
        </trans-unit>
        <trans-unit id="59197c294b7e47ec5dbd783959aed64eff2bee13" translate="yes" xml:space="preserve">
          <source>sum1d</source>
          <target state="translated">sum1d</target>
        </trans-unit>
        <trans-unit id="87e34a83fde48d2503b699ca4a1f31df945ac30a" translate="yes" xml:space="preserve">
          <source>sunos5</source>
          <target state="translated">sunos5</target>
        </trans-unit>
        <trans-unit id="8c10b057ec2c29e5215f43ecbcf94af98dc361e2" translate="yes" xml:space="preserve">
          <source>supported Python versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde2b4157af3b80020fadafd57cf0e89dea9890c" translate="yes" xml:space="preserve">
          <source>suppress : bool</source>
          <target state="translated">suprimir:bool</target>
        </trans-unit>
        <trans-unit id="067df0c4334dd01da4719cfb76d0b5e2cc92621a" translate="yes" xml:space="preserve">
          <source>suppress_warnings (class in numpy.testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89ef09ff52c3e2737120fb7cb7b0e25626245f8" translate="yes" xml:space="preserve">
          <source>suppress_warnings.__call__()</source>
          <target state="translated">suppress_warnings.__call__()</target>
        </trans-unit>
        <trans-unit id="babb61f609501571b2bb5a18639dac49ab1d8731" translate="yes" xml:space="preserve">
          <source>suppress_warnings.filter()</source>
          <target state="translated">suppress_warnings.filter()</target>
        </trans-unit>
        <trans-unit id="b3d2c7bdf224bcf286b49963a0a8ab40eb026321" translate="yes" xml:space="preserve">
          <source>suppress_warnings.record()</source>
          <target state="translated">suppress_warnings.record()</target>
        </trans-unit>
        <trans-unit id="e21b16191f82fcc4a3fa0d558a127b29c43f9ac0" translate="yes" xml:space="preserve">
          <source>svd() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6882990fd8cfa0c8db0f97fbc0087b9e8e80b5e" translate="yes" xml:space="preserve">
          <source>swapaxes (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f37cbdf359810d8e0ab1041f966a543c7ffa1fb" translate="yes" xml:space="preserve">
          <source>swapaxes() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9c2e10e1895dd3cc57eceb6fc781f35f08fff3" translate="yes" xml:space="preserve">
          <source>swapcase() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2375338c9572e43f119d1b4e0a64588d94184591" translate="yes" xml:space="preserve">
          <source>swig</source>
          <target state="translated">swig</target>
        </trans-unit>
        <trans-unit id="242a079762b697ac0549ccf69af94136d2769602" translate="yes" xml:space="preserve">
          <source>sys.platform</source>
          <target state="translated">sys.platform</target>
        </trans-unit>
        <trans-unit id="43a7fdf9010c6f42240efcb3a5f56f6d955cfa7b" translate="yes" xml:space="preserve">
          <source>take() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7489fcf06c3acceea4867761fe99a5ad320fea58" translate="yes" xml:space="preserve">
          <source>take_along_axis() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b28fecc28aa59d9cb47fe8478efb82a4890137" translate="yes" xml:space="preserve">
          <source>tan (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714d85d620a19532c5ff8d5f53eb70ca4c34dcdb" translate="yes" xml:space="preserve">
          <source>tanh (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b16e0f2480d0f53eacccd3fd82cdc0d124c529" translate="yes" xml:space="preserve">
          <source>tensordot() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758b4250a6b0e3668b0a217796ece59b3720d5b6" translate="yes" xml:space="preserve">
          <source>tensorinv() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd8c8b647e3846f75d7c4e24092017d0eb8ea9b" translate="yes" xml:space="preserve">
          <source>tensorsolve() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2bbe3640c3987cf0dced6bf932fd000fc915e1" translate="yes" xml:space="preserve">
          <source>terminal_has_colors() (in module numpy.distutils.misc_util)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244cd732c099f06eb83e85e31faf19d8bf928b31" translate="yes" xml:space="preserve">
          <source>terryfy &lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https://github.com/MacPython/terryfy&lt;/a&gt; (clone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db8608d9bc0ee1a68741761e42d45702e8b7b54" translate="yes" xml:space="preserve">
          <source>test objects for equality up to precision</source>
          <target state="translated">probar los objetos para la igualdad hasta la precisión</target>
        </trans-unit>
        <trans-unit id="e7b7abb8ae3381ca19caaef2505d24534d2bd6e3" translate="yes" xml:space="preserve">
          <source>test() (numpy.testing.Tester method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3f0d88da6522a0d74c0e24731e66414731abdf" translate="yes" xml:space="preserve">
          <source>tests objects for equality</source>
          <target state="translated">prueba los objetos para la igualdad</target>
        </trans-unit>
        <trans-unit id="4edd7d8e557695d44877be4de2ac060e7bd3fdd9" translate="yes" xml:space="preserve">
          <source>that &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; would not match the typemap signature given above with the argument list for &lt;code&gt;rms&lt;/code&gt;. Fortunately, &lt;code&gt;numpy.i&lt;/code&gt; has a set of typemaps with the data pointer given last:</source>
          <target state="translated">que &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; no coincidir&amp;iacute;a con la firma del mapa de tipos dada anteriormente con la lista de argumentos para &lt;code&gt;rms&lt;/code&gt; . Afortunadamente, &lt;code&gt;numpy.i&lt;/code&gt; tiene un conjunto de mapas de tipos con el puntero de datos dado al final:</target>
        </trans-unit>
        <trans-unit id="030d90c6342f406e1ce97b9157dfdea01cc446e8" translate="yes" xml:space="preserve">
          <source>that can be invoked for appropriate &lt;code&gt;(DATA_TYPE, DATA_TYPECODE,
DIM_TYPE)&lt;/code&gt; triplets. For example:</source>
          <target state="translated">que se pueden invocar para los &lt;code&gt;(DATA_TYPE, DATA_TYPECODE, DIM_TYPE)&lt;/code&gt; apropiados (DATA_TYPE, DATA_TYPECODE, DIM_TYPE) . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="24ff8c038660f6c46f52753b63612731471787d5" translate="yes" xml:space="preserve">
          <source>that contain prototypes and code for a variety of functions that have one-dimensional arrays as function arguments. The file:</source>
          <target state="translated">que contienen prototipos y código para una variedad de funciones que tienen matrices unidimensionales como argumentos de función.El archivo:</target>
        </trans-unit>
        <trans-unit id="a41eaf9774c588358f189b37da673a9c120a5089" translate="yes" xml:space="preserve">
          <source>that defines mapping between Fortran type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9dede6eeb4a79c0deecf7f1163117cef2ce19ca" translate="yes" xml:space="preserve">
          <source>that fulfil the conditions</source>
          <target state="translated">que cumplen las condiciones</target>
        </trans-unit>
        <trans-unit id="69822e5ac8f7b370ee1a997fb889fe976d9edc11" translate="yes" xml:space="preserve">
          <source>that uses the standard Python library module &lt;code&gt;unittest&lt;/code&gt;, which performs several tests of each function defined in &lt;code&gt;Vector.h&lt;/code&gt; for each data type supported.</source>
          <target state="translated">que usa el m&amp;oacute;dulo de biblioteca est&amp;aacute;ndar de Python &lt;code&gt;unittest&lt;/code&gt; , que realiza varias pruebas de cada funci&amp;oacute;n definida en &lt;code&gt;Vector.h&lt;/code&gt; para cada tipo de datos admitido.</target>
        </trans-unit>
        <trans-unit id="91618605954fff4c8fa2080baf622dbad19f3bfd" translate="yes" xml:space="preserve">
          <source>that we ever hold a vote on anything,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbd1e113b36d62f9f5969abc84f6b1db9ea8ff9" translate="yes" xml:space="preserve">
          <source>that we wait to solicit everybody&amp;rsquo;s opinion on every change,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f143b0aa3f0ebd6ad72790b6d7ec976437c7e7" translate="yes" xml:space="preserve">
          <source>the (fixed) periodic payment.</source>
          <target state="translated">el pago periódico (fijo).</target>
        </trans-unit>
        <trans-unit id="008a6adb3f8685be6ceb0e8bc31fd6dcaaa94b7f" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;_data&lt;/code&gt; field stores the &lt;code&gt;_data&lt;/code&gt; part of the array.</source>
          <target state="translated">el campo &lt;code&gt;_data&lt;/code&gt; almacena la parte &lt;code&gt;_data&lt;/code&gt; de la matriz.</target>
        </trans-unit>
        <trans-unit id="466d5e22a37a2ee9f4d8abe2158af32e97232bb1" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;_mask&lt;/code&gt; field stores the &lt;code&gt;_mask&lt;/code&gt; part of the array.</source>
          <target state="translated">el campo &lt;code&gt;_mask&lt;/code&gt; almacena la parte &lt;code&gt;_mask&lt;/code&gt; de la matriz.</target>
        </trans-unit>
        <trans-unit id="f46a8c9523ccb2e42574619b1869754a7dc29bc8" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;nonzero&lt;/code&gt; equivalence for Boolean arrays does not hold for zero dimensional boolean arrays.</source>
          <target state="translated">la equivalencia &lt;code&gt;nonzero&lt;/code&gt; para matrices booleanas no es v&amp;aacute;lida para matrices booleanas de dimensi&amp;oacute;n cero.</target>
        </trans-unit>
        <trans-unit id="9d98d16fc31bbde4a7ed4a9aced4ee06a3098aef" translate="yes" xml:space="preserve">
          <source>the Poisson distribution</source>
          <target state="translated">la distribución de Poisson</target>
        </trans-unit>
        <trans-unit id="8a6c489f749059c8bf5c98965f80fa7ea6e5a8d8" translate="yes" xml:space="preserve">
          <source>the behavior of &lt;code&gt;maximum(a, b)&lt;/code&gt; is different than that of &lt;code&gt;max(a, b)&lt;/code&gt;. As a ufunc, &lt;code&gt;maximum(a, b)&lt;/code&gt; performs an element-by-element comparison of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and chooses each element of the result according to which element in the two arrays is larger. In contrast, &lt;code&gt;max(a, b)&lt;/code&gt; treats the objects &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; as a whole, looks at the (total) truth value of &lt;code&gt;a &amp;gt; b&lt;/code&gt; and uses it to return either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; (as a whole). A similar difference exists between &lt;code&gt;minimum(a, b)&lt;/code&gt; and &lt;code&gt;min(a, b)&lt;/code&gt;.</source>
          <target state="translated">el comportamiento de &lt;code&gt;maximum(a, b)&lt;/code&gt; es diferente al de &lt;code&gt;max(a, b)&lt;/code&gt; . Como ufunc, &lt;code&gt;maximum(a, b)&lt;/code&gt; realiza una comparaci&amp;oacute;n elemento por elemento de &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; y elige cada elemento del resultado seg&amp;uacute;n el cual elemento en las dos matrices es m&amp;aacute;s grande. Por el contrario, &lt;code&gt;max(a, b)&lt;/code&gt; trata a los objetos &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; en su conjunto, se ve en el valor (total) de verdad &lt;code&gt;a &amp;gt; b&lt;/code&gt; y lo utiliza para devuelven &lt;code&gt;a&lt;/code&gt; o &lt;code&gt;b&lt;/code&gt; (en su conjunto). Existe una diferencia similar entre &lt;code&gt;minimum(a, b)&lt;/code&gt; y &lt;code&gt;min(a, b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8150b8f30492cc68483a2c4334a596ad8dabb9a6" translate="yes" xml:space="preserve">
          <source>the best way to eval functions on a grid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864340e31e9738ca2548bf502999b36a9aa9b20d" translate="yes" xml:space="preserve">
          <source>the buffer containing the actual elements of the array. Normally, we won&amp;rsquo;t need to use this attribute because we will access the elements in an array using indexing facilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028039baf0a2b980338abbb0ef59c2946ca97e2c" translate="yes" xml:space="preserve">
          <source>the code more closely resembles standard mathematical notation (making it easier, typically, to correctly code mathematical constructs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37853a7a1448f19f077abcac3e09da57761a37ca" translate="yes" xml:space="preserve">
          <source>the default is float32; for arrays of float types it is the same as the array type.</source>
          <target state="translated">el valor por defecto es flotante32;para los conjuntos de tipos de flotante es el mismo que el tipo de conjunto.</target>
        </trans-unit>
        <trans-unit id="c256ad71cf46b7af30713adb00225b1606a5ead3" translate="yes" xml:space="preserve">
          <source>the dimensions of the array. This is a tuple of integers indicating the size of the array in each dimension. For a matrix with &lt;em&gt;n&lt;/em&gt; rows and &lt;em&gt;m&lt;/em&gt; columns, &lt;code&gt;shape&lt;/code&gt; will be &lt;code&gt;(n,m)&lt;/code&gt;. The length of the &lt;code&gt;shape&lt;/code&gt; tuple is therefore the number of axes, &lt;code&gt;ndim&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386854cb373a7a8341fab0c5a69fd79b8aa53c43" translate="yes" xml:space="preserve">
          <source>the dispersion, and</source>
          <target state="translated">la dispersión,y</target>
        </trans-unit>
        <trans-unit id="1003c30ba5c0fb39ccb50c6b722708e3c05c2a77" translate="yes" xml:space="preserve">
          <source>the dtypes are available as &lt;code&gt;np.bool_&lt;/code&gt;, &lt;code&gt;np.float32&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f7040c957d9f34dcd06b059a9df241549e83cf" translate="yes" xml:space="preserve">
          <source>the evaluated condition that raises the exception is</source>
          <target state="translated">la condición evaluada que plantea la excepción es</target>
        </trans-unit>
        <trans-unit id="e6710ebd0d6334a3c7e9a0748f24e4f718444748" translate="yes" xml:space="preserve">
          <source>the first assert does not raise an exception</source>
          <target state="translated">la primera afirmación no plantea una excepción</target>
        </trans-unit>
        <trans-unit id="42e60363392644d71a68f0cb3b50a079e06142b9" translate="yes" xml:space="preserve">
          <source>the first five rows of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022f2b2feb199446cf04dda3e5cf777e9ecc931d" translate="yes" xml:space="preserve">
          <source>the following CPP macros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1b2080c308104435edfaaca899e506042a788b" translate="yes" xml:space="preserve">
          <source>the following call-back signatures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119ccc9fc3673917ac722ec0054d4725a8fa3c72" translate="yes" xml:space="preserve">
          <source>the indices of the input array that give the unique values</source>
          <target state="translated">los índices de la matriz de entrada que dan los valores únicos</target>
        </trans-unit>
        <trans-unit id="d97b725ec0e0431c53d459a255d5f28038ce01b3" translate="yes" xml:space="preserve">
          <source>the indices of the unique array that reconstruct the input array</source>
          <target state="translated">los índices del conjunto único que reconstruye el conjunto de entrada</target>
        </trans-unit>
        <trans-unit id="1a7345e4f831f919ee5fefb4b5e5c4d2da0fe041" translate="yes" xml:space="preserve">
          <source>the integer 2 as a sanity check.</source>
          <target state="translated">el número entero 2 como un control de cordura.</target>
        </trans-unit>
        <trans-unit id="a615bf0991700a5809627c83d03dff3859f939d4" translate="yes" xml:space="preserve">
          <source>the last axis is printed from left to right,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341f0e2c6f70a4cc9742feb4966a9478486124cf" translate="yes" xml:space="preserve">
          <source>the last five rows of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877f191461c43488e8673b2041e28b03cf37ebe4" translate="yes" xml:space="preserve">
          <source>the non-masked &lt;a href=&quot;#numpy.ma.allclose&quot;&gt;&lt;code&gt;allclose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">los no enmascarados &lt;a href=&quot;#numpy.ma.allclose&quot;&gt; &lt;code&gt;allclose&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a765212b567259897f46b111c45f8c0cdf740504" translate="yes" xml:space="preserve">
          <source>the number of axes (dimensions) of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0921e2312613723c070744de48126ede8060f3e" translate="yes" xml:space="preserve">
          <source>the number of dimensions in the array.</source>
          <target state="translated">el número de dimensiones de la matriz.</target>
        </trans-unit>
        <trans-unit id="daeb9adbfb25b75a21d4a853a1f60f248e1c0643" translate="yes" xml:space="preserve">
          <source>the number of times each unique value comes up in the input array</source>
          <target state="translated">el número de veces que cada valor único aparece en la matriz de entrada</target>
        </trans-unit>
        <trans-unit id="9776a86e31cd456e5d2e49d6fb7c020def0a8811" translate="yes" xml:space="preserve">
          <source>the object returned by this function should be safe to use as a normal iterator</source>
          <target state="translated">el objeto devuelto por esta función debería ser seguro de usar como un iterador normal</target>
        </trans-unit>
        <trans-unit id="9bb8b02cf5ba76cfa87fe40674e8774b38f473f2" translate="yes" xml:space="preserve">
          <source>the rest are also printed from top to bottom, with each slice separated from the next by an empty line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7992e822f5c928095cc88d608fcf2681126c7f7b" translate="yes" xml:space="preserve">
          <source>the scale, and</source>
          <target state="translated">la escala,y</target>
        </trans-unit>
        <trans-unit id="559ee459f8cdca2ba382d669a096ba3af1e634a5" translate="yes" xml:space="preserve">
          <source>the scale.</source>
          <target state="translated">la escala.</target>
        </trans-unit>
        <trans-unit id="b541ef081359460bffc9d945dd149d5c121079fb" translate="yes" xml:space="preserve">
          <source>the second-to-last is printed from top to bottom,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b08d4f6728dc5edfc11479ca9fed7c90b92692" translate="yes" xml:space="preserve">
          <source>the size in bytes of each element of the array. For example, an array of elements of type &lt;code&gt;float64&lt;/code&gt; has &lt;code&gt;itemsize&lt;/code&gt; 8 (=64/8), while one of type &lt;code&gt;complex32&lt;/code&gt; has &lt;code&gt;itemsize&lt;/code&gt; 4 (=32/8). It is equivalent to &lt;code&gt;ndarray.dtype.itemsize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728a3d016ba6312c948dbc003b45237331be5400" translate="yes" xml:space="preserve">
          <source>the special value &lt;code&gt;None&lt;/code&gt;. In that case, the type of the columns will be determined from the data itself (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3119cfee97d21e122e4e4b95639b7de34b8e55a4" translate="yes" xml:space="preserve">
          <source>the standard deviation. The square of the standard deviation,</source>
          <target state="translated">la desviación estándar.El cuadrado de la desviación estándar,</target>
        </trans-unit>
        <trans-unit id="769a5422011db4b5a479a4cb28d142861e9d09c7" translate="yes" xml:space="preserve">
          <source>the string &amp;lsquo;MT19937&amp;rsquo;, specifying the Mersenne Twister algorithm.</source>
          <target state="translated">la cadena 'MT19937', que especifica el algoritmo Mersenne Twister.</target>
        </trans-unit>
        <trans-unit id="55a386450b04871560b787f77b9312b3c6fdac20" translate="yes" xml:space="preserve">
          <source>the string &amp;lsquo;MT19937&amp;rsquo;.</source>
          <target state="translated">la cadena 'MT19937'.</target>
        </trans-unit>
        <trans-unit id="e2af0ad0e24aba05f09bd9ad029ed36487661005" translate="yes" xml:space="preserve">
          <source>the total number of elements of the array. This is equal to the product of the elements of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bfa1b4f6a4e9baf333ba77714dcdeec66be06a" translate="yes" xml:space="preserve">
          <source>the value at the end of the &lt;a href=&quot;numpy.nper#numpy.nper&quot;&gt;&lt;code&gt;nper&lt;/code&gt;&lt;/a&gt; periods</source>
          <target state="translated">el valor al final de los &lt;a href=&quot;numpy.nper#numpy.nper&quot;&gt; &lt;code&gt;nper&lt;/code&gt; &lt;/a&gt; per&amp;iacute;odos</target>
        </trans-unit>
        <trans-unit id="109615ad28bd23389721e88f91d9c3e59d766f63" translate="yes" xml:space="preserve">
          <source>the value now</source>
          <target state="translated">el valor ahora</target>
        </trans-unit>
        <trans-unit id="48ba841dce6244e8c0af1ac1be6d202816f3569a" translate="yes" xml:space="preserve">
          <source>then create a mapping file containing a Python dictionary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abf1ea87fc40f3eff5c96e75a9c90f812d27593" translate="yes" xml:space="preserve">
          <source>then the first bin is &lt;code&gt;[1, 2)&lt;/code&gt; (including 1, but excluding 2) and the second &lt;code&gt;[2, 3)&lt;/code&gt;. The last bin, however, is &lt;code&gt;[3, 4]&lt;/code&gt;, which &lt;em&gt;includes&lt;/em&gt; 4.</source>
          <target state="translated">entonces el primer intervalo es &lt;code&gt;[1, 2)&lt;/code&gt; (incluido 1, pero excluyendo 2) y el segundo &lt;code&gt;[2, 3)&lt;/code&gt; . El &amp;uacute;ltimo bin, sin embargo, es &lt;code&gt;[3, 4]&lt;/code&gt; , que &lt;em&gt;incluye&lt;/em&gt; 4.</target>
        </trans-unit>
        <trans-unit id="2eb3357dff293a25faf9346bddeec38f6f1dd86e" translate="yes" xml:space="preserve">
          <source>then the unicode setting of the output array will be automatically determined.</source>
          <target state="translated">entonces el ajuste unicode de la matriz de salida se determinará automáticamente.</target>
        </trans-unit>
        <trans-unit id="80e903ddec1d7ba763fd90c205528cfd81127f49" translate="yes" xml:space="preserve">
          <source>they are equal, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930e6d247a210bce1a24083f40db3d04a0101d9c" translate="yes" xml:space="preserve">
          <source>third-party objects like &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;matplotlib.figure.Figure&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">objetos de terceros como &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure&quot;&gt; &lt;code&gt;matplotlib.figure.Figure&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2177bb6e0b7654723b6bdd5cccb4dea5c2bcfdb6" translate="yes" xml:space="preserve">
          <source>threshold : int</source>
          <target state="translated">umbral:int</target>
        </trans-unit>
        <trans-unit id="ad017a445a58ce46bbb902b5736a4e9bfc3dbce7" translate="yes" xml:space="preserve">
          <source>through the &lt;a href=&quot;generated/numpy.ma.maskedarray.__array__#numpy.ma.MaskedArray.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method. The output is then a &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a trav&amp;eacute;s del m&amp;eacute;todo &lt;a href=&quot;generated/numpy.ma.maskedarray.__array__#numpy.ma.MaskedArray.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; &lt;/a&gt; . La salida es un &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1813750323d0cadd8026ae1175c2e5800c0325b2" translate="yes" xml:space="preserve">
          <source>through the &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute. The output is a view of the array as a &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; or one of its subclasses, depending on the type of the underlying data at the masked array creation.</source>
          <target state="translated">a trav&amp;eacute;s del atributo de &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; . La salida es una vista de la matriz como un &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt; o una de sus subclases, dependiendo del tipo de datos subyacentes en la creaci&amp;oacute;n de la matriz enmascarada.</target>
        </trans-unit>
        <trans-unit id="8a50e312818911128cc0bd365208fbf87d17f998" translate="yes" xml:space="preserve">
          <source>tile() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74962d37bf1cb045da5386cecce96f2b7b6bc2e6" translate="yes" xml:space="preserve">
          <source>timedelta</source>
          <target state="translated">timedelta</target>
        </trans-unit>
        <trans-unit id="7a146b8f93fbed802dabd0003bbe1b2b778b70fe" translate="yes" xml:space="preserve">
          <source>times with the following signature:</source>
          <target state="translated">veces con la siguiente firma:</target>
        </trans-unit>
        <trans-unit id="2c5a81d335a2a68ee6066dc7c62c6d429d0ea6c3" translate="yes" xml:space="preserve">
          <source>times. Extra-data may be passed in that may be used during the calculation. This feature allows some general functions to be used as these basic looping functions. The general function has all the code needed to point variables to the right place and set up a function call. The general function assumes that the actual function to call is passed in as the extra data and calls it with the correct values. All of these functions are suitable for placing directly in the array of functions stored in the functions member of the PyUFuncObject structure.</source>
          <target state="translated">veces.Se pueden pasar datos adicionales que se pueden utilizar durante el cálculo.Esta característica permite utilizar algunas funciones generales como estas funciones básicas de bucle.La función general tiene todo el código necesario para apuntar las variables al lugar correcto y establecer una llamada a la función.La función general asume que la función real a llamar se pasa como los datos extra y la llama con los valores correctos.Todas estas funciones son adecuadas para colocarlas directamente en el conjunto de funciones almacenadas en el miembro de funciones de la estructura PyUFuncObject.</target>
        </trans-unit>
        <trans-unit id="d072b0ce7dc75d873ab48a7cee62ba0a58043fae" translate="yes" xml:space="preserve">
          <source>title() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="9b1fda8ace6e89d25e3a8cbabcfb78e28c9ddeb0" translate="yes" xml:space="preserve">
          <source>to +1 for</source>
          <target state="translated">a +1 para</target>
        </trans-unit>
        <trans-unit id="b366c8c16130b83ca9528db77e60c6becb299116" translate="yes" xml:space="preserve">
          <source>to access Fortran 77 &lt;code&gt;COMMON&lt;/code&gt; blocks and Fortran 90/95 module data, including allocatable arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595aba9b88098513d156cf6996e210c021dbb9ce" translate="yes" xml:space="preserve">
          <source>to call Fortran 77/90/95 external subroutines and Fortran 90/95 module subroutines as well as C functions;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dec158e63d221ea3965ad7f125362e887117aeb" translate="yes" xml:space="preserve">
          <source>to change Fortran compiler options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0048caef95e547ebcfead6f47efb7586b55050" translate="yes" xml:space="preserve">
          <source>to check that the documentation is in a buildable state. Then, after tagging, create an archive of the documentation in the numpy/doc repo:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a3b28ef81e7fea19d53af1c28fd851707a77fb" translate="yes" xml:space="preserve">
          <source>to construct Fortran wrapper extension modules, among many other things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e306ad4de2ed181679e6ab7fcaaee69ea6e7e1" translate="yes" xml:space="preserve">
          <source>to fix the data length problem, and &lt;a href=&quot;#input-arrays&quot;&gt;Input Arrays&lt;/a&gt; will work fine, but &lt;a href=&quot;#in-place-arrays&quot;&gt;In-Place Arrays&lt;/a&gt; might fail type-checking.</source>
          <target state="translated">para solucionar el problema de la longitud de los datos, y las &lt;a href=&quot;#input-arrays&quot;&gt;matrices de entrada&lt;/a&gt; funcionar&amp;aacute;n bien, pero &lt;a href=&quot;#in-place-arrays&quot;&gt;las matrices in situ&lt;/a&gt; pueden fallar en la verificaci&amp;oacute;n de tipos.</target>
        </trans-unit>
        <trans-unit id="3c1a8abeac71b59a13661794fcb6ce7e5d85153e" translate="yes" xml:space="preserve">
          <source>to install the missing libraries expected by the self-compiled NumPy (ATLAS is a possible provider of linear algebra).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ae7b35dde44fa5c9d357b7f07fa08e3cb46013" translate="yes" xml:space="preserve">
          <source>to represent each value uniquely. Different elements may have a different number of digits. The value of the &lt;code&gt;precision&lt;/code&gt; option is ignored.</source>
          <target state="translated">para representar cada valor de forma &amp;uacute;nica. Los diferentes elementos pueden tener un n&amp;uacute;mero diferente de d&amp;iacute;gitos. El valor de la opci&amp;oacute;n de &lt;code&gt;precision&lt;/code&gt; se ignora.</target>
        </trans-unit>
        <trans-unit id="6a3ea912db864ed64ede9cbd8a45f0e3e76e3935" translate="yes" xml:space="preserve">
          <source>to see available options for these commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd8cb2bcd4a9b931952c41222fa43febd3bb03f" translate="yes" xml:space="preserve">
          <source>to the working build directory for you project, and this problem will be fixed. It is suggested that you do this anyway, as it only increases the capabilities of your Python interface.</source>
          <target state="translated">al directorio de construcción de trabajo para tu proyecto,y este problema será arreglado.Se sugiere que lo hagas de todos modos,ya que sólo aumenta las capacidades de tu interfaz de Python.</target>
        </trans-unit>
        <trans-unit id="237c06a10d49c6dd135eddaa13796e3f1a0561e3" translate="yes" xml:space="preserve">
          <source>tobytes() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d510de36b0f247f7e4d492a6dcbf3e6eb21f90e" translate="yes" xml:space="preserve">
          <source>todict() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cb3fa0534a5ae93b0ceff4e40f987580ef25d6" translate="yes" xml:space="preserve">
          <source>tofile() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c1a58579d48a873eab0e5db1e31fc5190ca9e5" translate="yes" xml:space="preserve">
          <source>toflex() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8314006a02643f06a16c9ec2b496894ef80fda" translate="yes" xml:space="preserve">
          <source>tolist() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af6e4a52d2d4bfdb4753f12879e0e532e8508d8" translate="yes" xml:space="preserve">
          <source>tools for integrating C/C++ code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef331f10ed1b3bda92ef989c46dc601383b3db3" translate="yes" xml:space="preserve">
          <source>tools for integrating Fortran code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cc9d687d74e4347682eb06510f85bc54dcc70c" translate="yes" xml:space="preserve">
          <source>torecords() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78227a09164db06a456c83f2a0d997d711edefa6" translate="yes" xml:space="preserve">
          <source>tostring() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c1b289cf4c3a85a77127a74708ce60b34815c3" translate="yes" xml:space="preserve">
          <source>towncrier &amp;ndash;version &amp;ldquo;&amp;lt;version&amp;gt;&amp;rdquo; git commit -m&amp;rdquo;Create release note&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aed4115e7494d253622c91eef4d03c6df9bddc4" translate="yes" xml:space="preserve">
          <source>trace (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1bbc2ab3d513cae1d04fd604bfd8bbba59e0e4" translate="yes" xml:space="preserve">
          <source>trace() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0533e56da67ff821b63cd2eea6a995cd06a3b852" translate="yes" xml:space="preserve">
          <source>translate() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0379d428ea0f0836a773a332a60958d79cf24b5a" translate="yes" xml:space="preserve">
          <source>transpose</source>
          <target state="translated">transpose</target>
        </trans-unit>
        <trans-unit id="0a4b8d2208863598216445e82f68ff61f8a23e52" translate="yes" xml:space="preserve">
          <source>transpose of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1345809526ac7c0510ed7164bb5ab2ab0715a1" translate="yes" xml:space="preserve">
          <source>transpose() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce499b15bc53abd50889b2a5e5e033be17c6cc7" translate="yes" xml:space="preserve">
          <source>trapz() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dfda636942d4cfaf523696efda923a0c3fd777" translate="yes" xml:space="preserve">
          <source>tri() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba7a3aa7b4ec4591f374d61ee61aa243c73c6dc" translate="yes" xml:space="preserve">
          <source>triangular() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c73364037f4b96a4ef92dc079f4990c225fbb1b" translate="yes" xml:space="preserve">
          <source>tril() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fe46530896f964076f1174aff212f5dc6aaeed" translate="yes" xml:space="preserve">
          <source>tril_indices() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f12a424a32926a3f7b30e23a4ac00f34a18de5" translate="yes" xml:space="preserve">
          <source>tril_indices_from() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77fc49ba78d4306af12b1d47a7aec542e69540c" translate="yes" xml:space="preserve">
          <source>trim() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2dec26bf901f595b463f6fc86a7a13f3046a20" translate="yes" xml:space="preserve">
          <source>trim_zeros() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544a719596a59699f139960f3ebb1c71f4996f6a" translate="yes" xml:space="preserve">
          <source>trimcoef() (in module numpy.polynomial.polyutils)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bdd748acbbb37b84d0a5ed27d26d6a3450d573" translate="yes" xml:space="preserve">
          <source>trimseq() (in module numpy.polynomial.polyutils)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1d1cd15a9b6b44d8e8fcb147f2d6c857043b96" translate="yes" xml:space="preserve">
          <source>triu() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab35dbd5e40081fbe712efdf87eb79ac02dc8e20" translate="yes" xml:space="preserve">
          <source>triu_indices() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4189fc7b0e64c65b446a8c19cf11ca7fc0efbb" translate="yes" xml:space="preserve">
          <source>triu_indices_from() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e547515482a7d38379182b5f1e6942a1525f03" translate="yes" xml:space="preserve">
          <source>true_divide (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980208faaa1d54e3413adb31a4064655c04de846" translate="yes" xml:space="preserve">
          <source>trunc (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c850172f6a3b0252071661876d423212b0e2e5" translate="yes" xml:space="preserve">
          <source>truncate() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f946e1ced44070d1839f34b41052d7bd12f3944" translate="yes" xml:space="preserve">
          <source>tuple of array dimensions</source>
          <target state="translated">tupla de dimensiones de la matriz</target>
        </trans-unit>
        <trans-unit id="695101fbec8a1b13644c179a7dd1f7522255d005" translate="yes" xml:space="preserve">
          <source>tuple of bytes steps in each dimension</source>
          <target state="translated">tupla de pasos de bytes en cada dimensión</target>
        </trans-unit>
        <trans-unit id="e4446d1731f587461a48f513954e125002636bb7" translate="yes" xml:space="preserve">
          <source>tuple of int_types: functions as does a single int_type argument, except that the argument is interpreted as an nd-index into the array.</source>
          <target state="translated">tupla de int_types:funciona como un único argumento de int_type,excepto que el argumento se interpreta como un nd-index en la matriz.</target>
        </trans-unit>
        <trans-unit id="0e46bf3f7ea41c027482ef49f372e0e7d17dcfc2" translate="yes" xml:space="preserve">
          <source>tuple of ints: &lt;code&gt;i&lt;/code&gt; in the &lt;code&gt;j&lt;/code&gt;-th place in the tuple means &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s &lt;code&gt;i&lt;/code&gt;-th axis becomes &lt;code&gt;a.transpose()&lt;/code&gt;&amp;rsquo;s &lt;code&gt;j&lt;/code&gt;-th axis.</source>
          <target state="translated">tupla de enteros: &lt;code&gt;i&lt;/code&gt; en el &lt;code&gt;j&lt;/code&gt; lugar-&amp;eacute;simo en la tupla significa &lt;code&gt;a&lt;/code&gt; &amp;lsquo;s &lt;code&gt;i&lt;/code&gt; -&amp;eacute;simo eje convierte &lt;code&gt;a.transpose()&lt;/code&gt; 's &lt;code&gt;j&lt;/code&gt; eje-&amp;eacute;simo.</target>
        </trans-unit>
        <trans-unit id="d28c5d1a070327205b30fe8531773766ea947a03" translate="yes" xml:space="preserve">
          <source>tuple of iterators along &lt;code&gt;self&lt;/code&gt;&amp;rsquo;s &amp;ldquo;components.&amp;rdquo;</source>
          <target state="translated">tupla de iteradores a lo largo de los &quot;componentes&quot; de &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f1c4c1835c113eb39ec16014624bb7640cb87c1" translate="yes" xml:space="preserve">
          <source>turn array into vector (note that this forces a copy). To obtain the same data ordering as in Matlab, use &lt;code&gt;x.flatten('F')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af90d78973d80bc0081116eb97908fd827a145f4" translate="yes" xml:space="preserve">
          <source>twine (pip)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8ce8fa84c719c1bbcf894bbe004f41bdb9ca06" translate="yes" xml:space="preserve">
          <source>two 128-bit floats, platform?</source>
          <target state="translated">dos flotadores de 128 bits,plataforma?</target>
        </trans-unit>
        <trans-unit id="6fe1337fb6124dc1c6a817572d7f982ad98b1857" translate="yes" xml:space="preserve">
          <source>two 2D arrays: one of x values, the other of y values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a273fc5b4b2f1ccd2810a037fdece1201f24956" translate="yes" xml:space="preserve">
          <source>two 32-bit floats</source>
          <target state="translated">dos flotadores de 32 bits</target>
        </trans-unit>
        <trans-unit id="3137ebae0faac986aa18ecd2cf17247e93cf8551" translate="yes" xml:space="preserve">
          <source>two 64-bit floats</source>
          <target state="translated">dos flotadores de 64 bits</target>
        </trans-unit>
        <trans-unit id="d1d4a988d03f6a10ddf77712e9a2326afd520a52" translate="yes" xml:space="preserve">
          <source>two 96-bit floats, platform?</source>
          <target state="translated">dos flotadores de 96 bits,plataforma?</target>
        </trans-unit>
        <trans-unit id="83827f96c1125d3cf018d09792e43b49df2a16b5" translate="yes" xml:space="preserve">
          <source>type (numpy.dtype attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5897f760bfe33582974401700f5f1fc39fc027" translate="yes" xml:space="preserve">
          <source>typename() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236214813a9b1587e9c7f1426301d05679e84a91" translate="yes" xml:space="preserve">
          <source>types (numpy.ufunc attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="81e6ea8e41bbcfb7d06b999873007413e7502ed7" translate="yes" xml:space="preserve">
          <source>ufunc</source>
          <target state="translated">ufunc</target>
        </trans-unit>
        <trans-unit id="a2f8bf599b04c402d9777aff2b22cbc42d660480" translate="yes" xml:space="preserve">
          <source>ufunc methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f176e851b7e196ef0d57ceb9e9c0d534373fab76" translate="yes" xml:space="preserve">
          <source>ufunc.accumulate()</source>
          <target state="translated">ufunc.accumulate()</target>
        </trans-unit>
        <trans-unit id="3afb2f2c14b058d406a7d011ba9e9fcb61cb4d5b" translate="yes" xml:space="preserve">
          <source>ufunc.at()</source>
          <target state="translated">ufunc.at()</target>
        </trans-unit>
        <trans-unit id="b2203289069bb97ba80f99e40ed94c691de1e5d3" translate="yes" xml:space="preserve">
          <source>ufunc.identity</source>
          <target state="translated">ufunc.identity</target>
        </trans-unit>
        <trans-unit id="7f555ddeb7c7ab8bb8e00ea4525da52b4aa57d26" translate="yes" xml:space="preserve">
          <source>ufunc.nargs</source>
          <target state="translated">ufunc.nargs</target>
        </trans-unit>
        <trans-unit id="11242754eba2d4a40a968da3622059ecc44c27bc" translate="yes" xml:space="preserve">
          <source>ufunc.nin</source>
          <target state="translated">ufunc.nin</target>
        </trans-unit>
        <trans-unit id="6f73343cc6915896eef6f0fc25b8f995ccdd30a6" translate="yes" xml:space="preserve">
          <source>ufunc.nout</source>
          <target state="translated">ufunc.nout</target>
        </trans-unit>
        <trans-unit id="243b3229b9bbd3c76f87557d62d03aaae946243b" translate="yes" xml:space="preserve">
          <source>ufunc.ntypes</source>
          <target state="translated">ufunc.ntypes</target>
        </trans-unit>
        <trans-unit id="0ca5a5c1905a8786fd349c797dbd655dce528380" translate="yes" xml:space="preserve">
          <source>ufunc.outer()</source>
          <target state="translated">ufunc.outer()</target>
        </trans-unit>
        <trans-unit id="740194df52956c6a322db7bcdcab2b25c5a1eb8d" translate="yes" xml:space="preserve">
          <source>ufunc.reduce()</source>
          <target state="translated">ufunc.reduce()</target>
        </trans-unit>
        <trans-unit id="055c89ccb210644ad33e5681a3a32b73719c2341" translate="yes" xml:space="preserve">
          <source>ufunc.reduceat()</source>
          <target state="translated">ufunc.reduceat()</target>
        </trans-unit>
        <trans-unit id="466a95f51c8cc8d8d5e429f560cb744517f8b29b" translate="yes" xml:space="preserve">
          <source>ufunc.signature</source>
          <target state="translated">ufunc.signature</target>
        </trans-unit>
        <trans-unit id="3ffc066183d2e5c8b2ed6e5dbd4492deded40174" translate="yes" xml:space="preserve">
          <source>ufunc.types</source>
          <target state="translated">ufunc.types</target>
        </trans-unit>
        <trans-unit id="5a6003eb8067f205bda40a144a334f7e1884b42b" translate="yes" xml:space="preserve">
          <source>umath refactor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8012ff51a005eaa8ed8f4c08ccdce580f462fff6" translate="yes" xml:space="preserve">
          <source>unchanged</source>
          <target state="translated">unchanged</target>
        </trans-unit>
        <trans-unit id="cdf1567980ae10ebc0342cb075710fb748c4e756" translate="yes" xml:space="preserve">
          <source>underflow : floating point underflows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72144e70960d6892275099d071bfb6616088a023" translate="yes" xml:space="preserve">
          <source>uniform() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f5b9bf828acfb607f1b1ec317231c4c29ccf4c" translate="yes" xml:space="preserve">
          <source>union1d() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677307808ba38760fdbbec225d89da898477107f" translate="yes" xml:space="preserve">
          <source>unique() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1218b763c02887701720c1cd96984d4eaa3a90c5" translate="yes" xml:space="preserve">
          <source>unpackbits() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c862181aeb6a00bc06e05edeca07c9e6c66853a1" translate="yes" xml:space="preserve">
          <source>unravel_index() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50248e34c70feccca27b7d65b925f19d118ab803" translate="yes" xml:space="preserve">
          <source>unshare_mask() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a69d7d1c031266d6f1c7384fcd34f9b338ab59" translate="yes" xml:space="preserve">
          <source>unsigned Py_intptr_t (an integer that is the size of a pointer on the platform).</source>
          <target state="translated">sin signo Py_intptr_t (un entero que es del tamaño de un puntero en la plataforma).</target>
        </trans-unit>
        <trans-unit id="fdc18dcd473df56e24394a603bf719736a1efe79" translate="yes" xml:space="preserve">
          <source>unsigned byte</source>
          <target state="translated">byte no firmado</target>
        </trans-unit>
        <trans-unit id="1d8508cb1aea954103651bf08436e13dd74d7a11" translate="yes" xml:space="preserve">
          <source>unsigned char; The constants &lt;a href=&quot;array#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; are also defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d916941b2254a2d922c096a6c0813816f84bdb" translate="yes" xml:space="preserve">
          <source>unsigned char; The constants &lt;a href=&quot;c-api.array#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;c-api.array#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; are also defined.</source>
          <target state="translated">char sin firmar; Tambi&amp;eacute;n se &lt;a href=&quot;c-api.array#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; &lt;/a&gt; constantes NPY_FALSE y &lt;a href=&quot;c-api.array#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2626ac7a48f1f07a409dbf9acb1e5814c8a9defa" translate="yes" xml:space="preserve">
          <source>unsigned int</source>
          <target state="translated">sin firmar int</target>
        </trans-unit>
        <trans-unit id="d0808dbcd7aef8dc0ee223e4d84cd8a2ddafdc83" translate="yes" xml:space="preserve">
          <source>unsigned integer</source>
          <target state="translated">entero sin firmar</target>
        </trans-unit>
        <trans-unit id="995d911a51805fb95053a05be72eb2908963d90c" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
          <target state="translated">corto sin firmar</target>
        </trans-unit>
        <trans-unit id="c4054334ea99c572d7a2e5a511fcc844fd2391aa" translate="yes" xml:space="preserve">
          <source>unstructured void array&amp;rsquo;s &lt;code&gt;.item&lt;/code&gt; method now returns a bytes object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3edc92499eae7b21aa1a61b2bd12c1f4420e96d" translate="yes" xml:space="preserve">
          <source>unstructured_to_structured() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94079da393999725d6eef70cfd1294c5e1e13899" translate="yes" xml:space="preserve">
          <source>unwrap() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac7ed34b67a6c06cb84c11f541a8e1ae479307a" translate="yes" xml:space="preserve">
          <source>update local copy from time to time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f8607e9347cfee2685da18f878e226dc108245" translate="yes" xml:space="preserve">
          <source>upper() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2b128800d4e129def769b7ec5decc00517fa8b" translate="yes" xml:space="preserve">
          <source>us</source>
          <target state="translated">us</target>
        </trans-unit>
        <trans-unit id="bb5dbce7c7fc91e42137b7ed0b685952e8d18f3b" translate="yes" xml:space="preserve">
          <source>used the nditer as a context manager using the &lt;code&gt;with&lt;/code&gt; statement, and the temporary data will be written back when the context is exited.</source>
          <target state="translated">us&amp;oacute; nditer como administrador de contexto usando la instrucci&amp;oacute;n &lt;code&gt;with&lt;/code&gt; , y los datos temporales se volver&amp;aacute;n a escribir cuando se salga del contexto.</target>
        </trans-unit>
        <trans-unit id="b6b0728f2044ec714109a641bc1709e9eca20e24" translate="yes" xml:space="preserve">
          <source>user.name and user.email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3db09f1a90466b88dac74dd59f2a6eb61d35072" translate="yes" xml:space="preserve">
          <source>user_array</source>
          <target state="translated">user_array</target>
        </trans-unit>
        <trans-unit id="3d3fc5fc4e8cea212318f899489490a6ae670e39" translate="yes" xml:space="preserve">
          <source>valid dtype for all arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8432dc6ed2b59395a9ba2cc3713ad5fc36b285" translate="yes" xml:space="preserve">
          <source>value (numpy.nditer attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8b8731ae45d0b6f7734d6c02fc8c99ebc80ed3" translate="yes" xml:space="preserve">
          <source>values automatically have whitespace removed from the end when indexed</source>
          <target state="translated">los valores automáticamente tienen los espacios en blanco eliminados del final cuando se indexan</target>
        </trans-unit>
        <trans-unit id="5baec5c424b72a798ed9e6ad67fb93a926716bd8" translate="yes" xml:space="preserve">
          <source>values to insert at those indices. Its shape and dimension are broadcast to match that of &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">valores para insertar en esos &amp;iacute;ndices. Su forma y dimensi&amp;oacute;n se transmiten para que coincidan con las de los &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c543cf10c47a68ab67ef2a85462b35ec3f92600" translate="yes" xml:space="preserve">
          <source>vander() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7ffe55a6f7a451ea982c7a5ac4a8a98a6003aa" translate="yes" xml:space="preserve">
          <source>var (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e74c7e537837e995688305e142095cc1ab9582" translate="yes" xml:space="preserve">
          <source>var() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de50d502d1b349419ea8b503c480391588e6829" translate="yes" xml:space="preserve">
          <source>variable PATH. Equivalent to posix &lt;code&gt;which&lt;/code&gt; command.</source>
          <target state="translated">PATH variable. Equivalente a posix &lt;code&gt;which&lt;/code&gt; comando.</target>
        </trans-unit>
        <trans-unit id="1654cea6e6ea48d8f49e690d58ff87912c867177" translate="yes" xml:space="preserve">
          <source>variable() (numpy.poly1d property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba7c75a203f0c47c976ebe4b8003de33eb900b1" translate="yes" xml:space="preserve">
          <source>variables from the argument list, presumably initialized before according to given dependence relations;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055a1972fffbc358edccccdd0ba45101a20e461a" translate="yes" xml:space="preserve">
          <source>vdot() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09f1aceeed50982588504b15839a69838e80256" translate="yes" xml:space="preserve">
          <source>vecmat</source>
          <target state="translated">vecmat</target>
        </trans-unit>
        <trans-unit id="0aedc399dde7e2c7ade059bf039ea4e71612a406" translate="yes" xml:space="preserve">
          <source>vector of diagonal elements of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc50cca69cebe36a27161a0fa8f357300da80cd" translate="yes" xml:space="preserve">
          <source>vector-matrix multiplication</source>
          <target state="translated">multiplicación de la matriz vectorial</target>
        </trans-unit>
        <trans-unit id="c7e235514259ccc281233d75d56bc01af9e085dd" translate="yes" xml:space="preserve">
          <source>vector-vector multiplication</source>
          <target state="translated">multiplicación vectorial</target>
        </trans-unit>
        <trans-unit id="e2959516647ed09a27f0f5bbd3d6da6f37c3afcf" translate="yes" xml:space="preserve">
          <source>vectorization results in more &amp;ldquo;Pythonic&amp;rdquo; code. Without vectorization, our code would be littered with inefficient and difficult to read &lt;code&gt;for&lt;/code&gt; loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e965c639cf869958450a54c68584ad3686f023a" translate="yes" xml:space="preserve">
          <source>vectorize (class in numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e26fc16e498359404951f7d38e364302a88ad14" translate="yes" xml:space="preserve">
          <source>vectorize.__call__()</source>
          <target state="translated">vectorize.__call__()</target>
        </trans-unit>
        <trans-unit id="5c81ce7b7ff13788024b303b50d074ca631432b8" translate="yes" xml:space="preserve">
          <source>vectorized code is more concise and easier to read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19399207372e8d7c054365b0a529ccf2981f3b82" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.endswith.html#numpy.chararray.endswith&quot;&gt;&lt;code&gt;endswith&lt;/code&gt;&lt;/a&gt;) and infix operators (e.g. &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt;)</source>
          <target state="translated">Las operaciones de cadena vectorizadas se proporcionan como m&amp;eacute;todos (por ejemplo, &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.endswith.html#numpy.chararray.endswith&quot;&gt; &lt;code&gt;endswith&lt;/code&gt; &lt;/a&gt; ) y operadores infijos (por ejemplo, &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6b72c98ed88bb4df85be360c468c57b064be204e" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;a href=&quot;numpy.char.chararray.endswith#numpy.char.chararray.endswith&quot;&gt;&lt;code&gt;endswith&lt;/code&gt;&lt;/a&gt;) and infix operators (e.g. &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt;)</source>
          <target state="translated">Las operaciones de cadena vectorizadas se proporcionan como m&amp;eacute;todos (por ejemplo, &lt;a href=&quot;numpy.char.chararray.endswith#numpy.char.chararray.endswith&quot;&gt; &lt;code&gt;endswith&lt;/code&gt; &lt;/a&gt; ) y operadores infijos (por ejemplo, &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="db454313195f316238acd17aeb5d938f4db3f3f4" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;a href=&quot;numpy.chararray.endswith#numpy.chararray.endswith&quot;&gt;&lt;code&gt;endswith&lt;/code&gt;&lt;/a&gt;) and infix operators (e.g. &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b595ca1ad64c45adbaa59fe3b6b7fb1e998d72d6" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;code&gt;str.endswith&lt;/code&gt;) and infix operators (e.g. &lt;code&gt;+, *, %&lt;/code&gt;)</source>
          <target state="translated">Las operaciones de cadena vectorizadas se proporcionan como m&amp;eacute;todos (por ejemplo, &lt;code&gt;str.endswith&lt;/code&gt; ) y operadores infijos (por ejemplo &lt;code&gt;+, *, %&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e122cd45e8e9df8c348e263b4143f2a68e76e98d" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;code&gt;str.endswith&lt;/code&gt;) and infix operators (e.g. &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;,``%``)</source>
          <target state="translated">Las operaciones de cadena vectorizadas se proporcionan como m&amp;eacute;todos (por ejemplo, &lt;code&gt;str.endswith&lt;/code&gt; ) y operadores infijos (por ejemplo , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , ``% '')</target>
        </trans-unit>
        <trans-unit id="c692273deb2772da307ffe37041fef77bf4baa97" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="translated">version</target>
        </trans-unit>
        <trans-unit id="bfd190f5456486754027935ce9caa900beed7ccd" translate="yes" xml:space="preserve">
          <source>version:</source>
          <target state="translated">version:</target>
        </trans-unit>
        <trans-unit id="66e0e1037f3cc463bf7e6212024c466ab215fa03" translate="yes" xml:space="preserve">
          <source>very fast when it optimizes well</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3a07543988e4673dcae5e59c35323c5791f370" translate="yes" xml:space="preserve">
          <source>view</source>
          <target state="translated">view</target>
        </trans-unit>
        <trans-unit id="aaafdd472f0b52f4b28e53842ae8095cfe8dc805" translate="yes" xml:space="preserve">
          <source>view() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab098e314c8c4907b0cbf15c46523c5f4564351" translate="yes" xml:space="preserve">
          <source>views returned from np.einsum are writeable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc1ae3e178d0efaeaff5106a735070367cc2e3b" translate="yes" xml:space="preserve">
          <source>virtualenv (pip)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cede9b80ea3abd89c755f1117337d429162c86" translate="yes" xml:space="preserve">
          <source>void</source>
          <target state="translated">void</target>
        </trans-unit>
        <trans-unit id="48b1339239922b5e07d5ce4184fcf5e87effde2b" translate="yes" xml:space="preserve">
          <source>von Mises, R., &amp;ldquo;Mathematical Theory of Probability and Statistics&amp;rdquo;, New York: Academic Press, 1964.</source>
          <target state="translated">von Mises, R., &quot;Teor&amp;iacute;a matem&amp;aacute;tica de la probabilidad y la estad&amp;iacute;stica&quot;, Nueva York: Academic Press, 1964.</target>
        </trans-unit>
        <trans-unit id="9ae5fe8b31c05755c850ae4d90a3fcb76c2a182a" translate="yes" xml:space="preserve">
          <source>vonmises() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e5b9982ea5d22fcf5a1d1ad3376fc5a48e7c9d" translate="yes" xml:space="preserve">
          <source>vsplit() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c757c8afc5629a307995e13f88bb23fe068b80" translate="yes" xml:space="preserve">
          <source>vstack (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15311d1f0df12d81853bd7c190c65a543b943872" translate="yes" xml:space="preserve">
          <source>vstack() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd1107921db5bd5aa7000a30d16d502418e2ec3" translate="yes" xml:space="preserve">
          <source>wald() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddc3bec9c70c5c7e765cd8cf5fa5aa389917ef0" translate="yes" xml:space="preserve">
          <source>warn: Print a &lt;code&gt;RuntimeWarning&lt;/code&gt; (via the Python &lt;a href=&quot;https://docs.python.org/dev/library/warnings.html#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">warn: Imprime un &lt;code&gt;RuntimeWarning&lt;/code&gt; (a trav&amp;eacute;s del m&amp;oacute;dulo de &lt;a href=&quot;https://docs.python.org/dev/library/warnings.html#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt; Python ).</target>
        </trans-unit>
        <trans-unit id="4884fd1a3cb1606444975d3740d56633fa35ad1b" translate="yes" xml:space="preserve">
          <source>we can build the approximation by doing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ee32d825d6ddb4025ab74af0609969ecc419c8" translate="yes" xml:space="preserve">
          <source>week</source>
          <target state="translated">week</target>
        </trans-unit>
        <trans-unit id="bc2615c16c37f07d240c50d07bfd867058aaeb3e" translate="yes" xml:space="preserve">
          <source>weekmask (numpy.busdaycalendar attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f09c0d1d993f2a543feb0ac90ea8458105cb1e" translate="yes" xml:space="preserve">
          <source>weibull() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a0b13381d4d5d8e14bc62eb1948f61052d27ce" translate="yes" xml:space="preserve">
          <source>what are the names of the &amp;ldquo;&lt;a href=&quot;../glossary#term-field&quot;&gt;fields&lt;/a&gt;&amp;rdquo; of the structure, by which they can be &lt;a href=&quot;arrays.indexing#arrays-indexing-fields&quot;&gt;accessed&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916d4dfd40fa788d4f97c5cbd19732b935ee5e9e" translate="yes" xml:space="preserve">
          <source>what are the names of the &amp;ldquo;&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;fields&lt;/a&gt;&amp;rdquo; of the structure, by which they can be &lt;a href=&quot;arrays.indexing#arrays-indexing-fields&quot;&gt;accessed&lt;/a&gt;,</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;les son los nombres de los &quot; &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;campos&lt;/a&gt; &quot; de la estructura, mediante los cuales se puede &lt;a href=&quot;arrays.indexing#arrays-indexing-fields&quot;&gt;acceder&lt;/a&gt; a ellos ,</target>
        </trans-unit>
        <trans-unit id="4bdf2c9a9320c2bb30296f2a5be0fd38903dcd4d" translate="yes" xml:space="preserve">
          <source>what exactly &lt;code&gt;seq&lt;/code&gt; is. Is it a single value to be altered in-place? Is it an array, and if so what is its length? Is it input-only? Output-only? Input-output? &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; cannot determine these details, and does not attempt to do so.</source>
          <target state="translated">qu&amp;eacute; es exactamente &lt;code&gt;seq&lt;/code&gt; . &amp;iquest;Es un valor &amp;uacute;nico que debe modificarse in situ? &amp;iquest;Es una matriz y, de ser as&amp;iacute;, cu&amp;aacute;l es su longitud? &amp;iquest;Es solo de entrada? &amp;iquest;Solo salida? &amp;iquest;De entrada y salida? &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; no puede determinar estos detalles y no intenta hacerlo.</target>
        </trans-unit>
        <trans-unit id="0380a220e77d143346e4de9f7efc19cb89f002b0" translate="yes" xml:space="preserve">
          <source>what is the data-type of each &lt;a href=&quot;../glossary#term-field&quot;&gt;field&lt;/a&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52be18891fe12a3ccc69a948daf4a9df395f8160" translate="yes" xml:space="preserve">
          <source>what is the data-type of each &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;field&lt;/a&gt;, and</source>
          <target state="translated">cu&amp;aacute;l es el tipo de datos de cada &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;campo&lt;/a&gt; , y</target>
        </trans-unit>
        <trans-unit id="d0192f6d7a8d53807254215b637508c53444c530" translate="yes" xml:space="preserve">
          <source>when &lt;code&gt;i = len(indices) - 1&lt;/code&gt; (so for the last index), &lt;code&gt;indices[i+1] = a.shape[axis]&lt;/code&gt;.</source>
          <target state="translated">cuando &lt;code&gt;i = len(indices) - 1&lt;/code&gt; (es decir, para el &amp;uacute;ltimo &amp;iacute;ndice), &lt;code&gt;indices[i+1] = a.shape[axis]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5297e650e9c08f060e1e619f5312964757572aef" translate="yes" xml:space="preserve">
          <source>when building Numpy. The following 64-bit BLAS/LAPACK libraries are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5722cd99f39f9db8b61fbc3c1c82b426d3cd79fd" translate="yes" xml:space="preserve">
          <source>when investigating further and asking for support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="translated">where</target>
        </trans-unit>
        <trans-unit id="cfaf285482cf6c4f89cd534ed09bc1fa065bdd59" translate="yes" xml:space="preserve">
          <source>where &amp;lt;package install directory&amp;gt; is the package (or sub-package) directory such as &amp;lsquo;/usr/lib/python2.4/site-packages/mypackage&amp;rsquo; (&amp;lsquo;C: Python2.4 Lib site-packages mypackage&amp;rsquo;) or &amp;lsquo;/usr/lib/python2.4/site- packages/mypackage/mysubpackage&amp;rsquo; (&amp;lsquo;C: Python2.4 Lib site-packages mypackage mysubpackage&amp;rsquo;).</source>
          <target state="translated">donde &amp;lt;directorio de instalaci&amp;oacute;n del paquete&amp;gt; es el directorio del paquete (o subpaquete) como '/usr/lib/python2.4/site-packages/mypackage' ('C: Python2.4 Lib site-packages mypackage') o ' /usr/lib/python2.4/site- packages / mypackage / mysubpackage '(' C: Python2.4 Lib site-packages mypackage mysubpackage ').</target>
        </trans-unit>
        <trans-unit id="15b93f3fc1f372444d0c3a34d4013852d05253ac" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&amp;lt;args&amp;gt;=string.join(&amp;lt;list&amp;gt;,' ')&lt;/code&gt;, but in Python. Unless &lt;code&gt;-h&lt;/code&gt; is used, this function returns a dictionary containing information on generated modules and their dependencies on source files. For example, the command &lt;code&gt;f2py -m scalar scalar.f&lt;/code&gt; can be executed from Python as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82814f25ca2293053d415c5e9086a2d82cae615d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;--bench&lt;/code&gt; activates the benchmark suite instead of the test suite. This builds NumPy and runs all available benchmarks defined in &lt;code&gt;benchmarks/&lt;/code&gt;. (Note: this could take a while. Each benchmark is run multiple times to measure the distribution in execution times.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27722a8f94c49a1d17c79d2d98a28d7cd4fd50e2" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Chebyshev polynomial.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indican los elementos de &lt;code&gt;x&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice es el grado del polinomio de Chebyshev.</target>
        </trans-unit>
        <trans-unit id="833860b51f45a74ee06a8481e7b59dec2776a9c5" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Hermite polynomial.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los elementos de &lt;code&gt;x&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice es el grado del polinomio de Hermite.</target>
        </trans-unit>
        <trans-unit id="c69795dbab93fd4905d0bc022d8ac56b6e1e0f54" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the HermiteE polynomial.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indican los elementos de &lt;code&gt;x&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice es el grado del polinomio de HermiteE.</target>
        </trans-unit>
        <trans-unit id="bde30796ed968ed7657f0df45af477fbb40047da" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Laguerre polynomial.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los elementos de &lt;code&gt;x&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice es el grado del polinomio de Laguerre.</target>
        </trans-unit>
        <trans-unit id="c6b4ff5c9a6986803c5708a92c411c4b253dec9c" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Legendre polynomial.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indican los elementos de &lt;code&gt;x&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice es el grado del polinomio de Legendre.</target>
        </trans-unit>
        <trans-unit id="538f7fb88a53c793cea30da00779237a649749e0" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the power of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los elementos de &lt;code&gt;x&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice es la potencia de &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4de9c198e8ca08018e505031f38efeea306eb563" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Chebyshev polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; y &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Chebyshev.</target>
        </trans-unit>
        <trans-unit id="9c023f7138aa8d794b6a146fabd54c47a0508cbe" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Hermite polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; y &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Hermite.</target>
        </trans-unit>
        <trans-unit id="d3cf2ba80598064afebb705d3f96da951d339ad7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the HermiteE polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; y &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de HermiteE.</target>
        </trans-unit>
        <trans-unit id="931ddf7a677dd0bb054e68bb0682795a7ecb2d44" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Laguerre polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; y &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Laguerre.</target>
        </trans-unit>
        <trans-unit id="5b4f668563e3498fcf093b6cc70e0bf28243dbb5" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Legendre polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; y &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Legendre.</target>
        </trans-unit>
        <trans-unit id="ae534bb750508bd12922fca33e07ed9e9147c7d1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the powers of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; y &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica las potencias de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="968a8f99ae65dc781347987604737e4885f0347e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Chebyshev polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; , y &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y, z)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Chebyshev.</target>
        </trans-unit>
        <trans-unit id="290595042428a0adec26dcab062e9c72d203d119" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Hermite polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; , y &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y, z)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Hermite.</target>
        </trans-unit>
        <trans-unit id="a3522d9ec4777ff57457a39fea3d27eb87e001f3" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the HermiteE polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; , y &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y, z)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de HermiteE.</target>
        </trans-unit>
        <trans-unit id="e21aabee789ef859247cb7d579e69b9306ad94e9" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Laguerre polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; , y &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y, z)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Laguerre.</target>
        </trans-unit>
        <trans-unit id="0fec4bcf4d4a798ecc63d7a8b21b974ec59ac767" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Legendre polynomials.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; , y &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y, z)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica los grados de los polinomios de Legendre.</target>
        </trans-unit>
        <trans-unit id="ef93d8eb54977daa7c98c55d5dde9a9422edf21b" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the powers of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">donde &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; , y &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; . Los &amp;iacute;ndices principales de &lt;code&gt;V&lt;/code&gt; indexan los puntos &lt;code&gt;(x, y, z)&lt;/code&gt; y el &amp;uacute;ltimo &amp;iacute;ndice codifica las potencias de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="907ece41fc35a24200255d27b81c13eb4a497bd2" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;GITHUB&lt;/code&gt; contains your github access token. This text may also be appended to &lt;code&gt;doc/release/1.14.5-notes.rst&lt;/code&gt; for release updates, though not for new releases like &lt;code&gt;1.14.0&lt;/code&gt;, as the changelogs for &lt;code&gt;*.0&lt;/code&gt; releases tend to be excessively long. The &lt;code&gt;doc/source/release.rst&lt;/code&gt; file should also be updated with a link to the new release notes. These changes should be committed to the maintenance branch, and later will be forward ported to master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8c6ec18c2c43533633b2d6348c84d0e98e4282" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;V&lt;/code&gt; is the pseudo Vandermonde matrix of &lt;code&gt;x&lt;/code&gt;, the elements of &lt;code&gt;c&lt;/code&gt; are the coefficients to be solved for, and the elements of &lt;code&gt;y&lt;/code&gt; are the observed values. This equation is then solved using the singular value decomposition of &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">donde &lt;code&gt;V&lt;/code&gt; es la pseudo matriz de Vandermonde de &lt;code&gt;x&lt;/code&gt; , los elementos de &lt;code&gt;c&lt;/code&gt; son los coeficientes a resolver y los elementos de &lt;code&gt;y&lt;/code&gt; son los valores observados. Esta ecuaci&amp;oacute;n se resuelve a continuaci&amp;oacute;n, utilizando la descomposici&amp;oacute;n de valor singular de &lt;code&gt;V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bed15d23c255396f5ff96e362455881dfb6045bf" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;V&lt;/code&gt; is the weighted pseudo Vandermonde matrix of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; are the coefficients to be solved for, &lt;code&gt;w&lt;/code&gt; are the weights, &lt;code&gt;y&lt;/code&gt; are the observed values. This equation is then solved using the singular value decomposition of &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">donde &lt;code&gt;V&lt;/code&gt; es la pseudo matriz de Vandermonde ponderada de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;c&lt;/code&gt; son los coeficientes a resolver, &lt;code&gt;w&lt;/code&gt; son los pesos, &lt;code&gt;y&lt;/code&gt; son los valores observados. Esta ecuaci&amp;oacute;n se resuelve a continuaci&amp;oacute;n, utilizando la descomposici&amp;oacute;n de valor singular de &lt;code&gt;V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d134ecc4ceb9149fc7a25fccd08e5a7a0a731874" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;V&lt;/code&gt; is the weighted pseudo Vandermonde matrix of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; are the coefficients to be solved for, &lt;code&gt;w&lt;/code&gt; are the weights, and &lt;code&gt;y&lt;/code&gt; are the observed values. This equation is then solved using the singular value decomposition of &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">donde &lt;code&gt;V&lt;/code&gt; es la pseudo matriz de Vandermonde ponderada de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;c&lt;/code&gt; son los coeficientes que se van a resolver, &lt;code&gt;w&lt;/code&gt; son los pesos e &lt;code&gt;y&lt;/code&gt; son los valores observados. Esta ecuaci&amp;oacute;n se resuelve a continuaci&amp;oacute;n, utilizando la descomposici&amp;oacute;n de valor singular de &lt;code&gt;V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cd5aea9272d9238144e1f9f8fbb6ec55a2f9e37" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;_i[&amp;lt;i&amp;gt;]&lt;/code&gt; refers to the &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;-th index value and that runs from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;shape(&amp;lt;array name&amp;gt;,&amp;lt;i&amp;gt;)-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ef8bc2bec31043ebddcd21aa113fe148170b4b" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;n == len(roots) - 1&lt;/code&gt;; note that this implies that &lt;code&gt;1&lt;/code&gt; is always returned for</source>
          <target state="translated">donde &lt;code&gt;n == len(roots) - 1&lt;/code&gt; ; tenga en cuenta que esto implica que &lt;code&gt;1&lt;/code&gt; siempre se devuelve para</target>
        </trans-unit>
        <trans-unit id="4156f50382951be2ffb97afbef02067c099be6a8" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;deg&lt;/code&gt;.</source>
          <target state="translated">donde &lt;code&gt;n&lt;/code&gt; es &lt;code&gt;deg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5da8ce8d8d1ee0181c57af0f31c56ab31f259987" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;n&lt;/code&gt; is the number of streams spawned. If a program uses an aggressive million streams, about</source>
          <target state="translated">donde &lt;code&gt;n&lt;/code&gt; es el n&amp;uacute;mero de flujos generados. Si un programa utiliza un mill&amp;oacute;n de transmisiones agresivas, aproximadamente</target>
        </trans-unit>
        <trans-unit id="227e7320c448b66cb7c7d238597d7f3a2804dfcf" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;p&lt;/code&gt; is the probability of success of an individual trial.</source>
          <target state="translated">donde &lt;code&gt;p&lt;/code&gt; es la probabilidad de &amp;eacute;xito de una prueba individual.</target>
        </trans-unit>
        <trans-unit id="97e11a7633599dcc0b171bd3aeedc2980516829b" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;seq&lt;/code&gt; would be a NumPy array of &lt;code&gt;double&lt;/code&gt; values, and its length &lt;code&gt;n&lt;/code&gt; would be extracted from &lt;code&gt;seq&lt;/code&gt; internally before being passed to the C routine. Even better, since NumPy supports construction of arrays from arbitrary Python sequences, &lt;code&gt;seq&lt;/code&gt; itself could be a nearly arbitrary sequence (so long as each element can be converted to a &lt;code&gt;double&lt;/code&gt;) and the wrapper code would internally convert it to a NumPy array before extracting its data and length.</source>
          <target state="translated">donde &lt;code&gt;seq&lt;/code&gt; ser&amp;iacute;a una matriz NumPy de valores &lt;code&gt;double&lt;/code&gt; , y su longitud &lt;code&gt;n&lt;/code&gt; se extraer&amp;iacute;a de &lt;code&gt;seq&lt;/code&gt; internamente antes de pasar a la rutina C. A&amp;uacute;n mejor, dado que NumPy admite la construcci&amp;oacute;n de matrices a partir de secuencias arbitrarias de Python, &lt;code&gt;seq&lt;/code&gt; en s&amp;iacute; podr&amp;iacute;a ser una secuencia casi arbitraria (siempre que cada elemento se pueda convertir en un &lt;code&gt;double&lt;/code&gt; ) y el c&amp;oacute;digo contenedor lo convertir&amp;iacute;a internamente en una matriz NumPy antes de extraer su datos y longitud.</target>
        </trans-unit>
        <trans-unit id="f02a66bece2f0610117ed2e55b338b497ee6a2f1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;subdtype&lt;/code&gt; is the subclass. Thus the returned view is of the same class as the subclass, rather than being of class &lt;code&gt;ndarray&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e868ab11f1f9e4c58bc8e76e5d240947af7c46" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;upstream&lt;/code&gt; points to the main &lt;a href=&quot;https://github.com/numpy/numpy.git&quot;&gt;https://github.com/numpy/numpy.git&lt;/a&gt; repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa7dcc068f2c1b22079c4e51b9b1d150978fe4d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;x2&lt;/code&gt; is often taken to be 0.5, but 0 and 1 are also sometimes used.</source>
          <target state="translated">donde &lt;code&gt;x2&lt;/code&gt; a menudo se toma como 0.5, pero a veces tambi&amp;eacute;n se usan 0 y 1.</target>
        </trans-unit>
        <trans-unit id="6a9eda89bfd511983f4021317b7dd5833b1e827e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;{bits}&lt;/code&gt; is the number of bits in the type and can be &lt;strong&gt;8&lt;/strong&gt;, &lt;strong&gt;16&lt;/strong&gt;, &lt;strong&gt;32&lt;/strong&gt;, &lt;strong&gt;64&lt;/strong&gt;, 128, and 256 for integer types; 16, &lt;strong&gt;32&lt;/strong&gt; , &lt;strong&gt;64&lt;/strong&gt;, 80, 96, 128, and 256 for floating-point types; and 32, &lt;strong&gt;64&lt;/strong&gt;, &lt;strong&gt;128&lt;/strong&gt;, 160, 192, and 512 for complex-valued types. Which bit-widths are available is platform dependent. The bolded bit-widths are usually available on all platforms.</source>
          <target state="translated">donde &lt;code&gt;{bits}&lt;/code&gt; es el n&amp;uacute;mero de bits en el tipo y puede ser &lt;strong&gt;8&lt;/strong&gt; , &lt;strong&gt;16&lt;/strong&gt; , &lt;strong&gt;32&lt;/strong&gt; , &lt;strong&gt;64&lt;/strong&gt; , 128 y 256 para tipos enteros; 16, &lt;strong&gt;32&lt;/strong&gt; , &lt;strong&gt;64&lt;/strong&gt; , 80, 96, 128 y 256 para tipos de punto flotante; y 32, &lt;strong&gt;64&lt;/strong&gt; , &lt;strong&gt;128&lt;/strong&gt; , 160, 192 y 512 para tipos de valores complejos. Los anchos de bits disponibles dependen de la plataforma. Los anchos de broca en negrita suelen estar disponibles en todas las plataformas.</target>
        </trans-unit>
        <trans-unit id="cdc8cdc0932dfe2cf825eb22285d6dc4584efd79" translate="yes" xml:space="preserve">
          <source>where &lt;strong&gt;I&lt;/strong&gt; is the &lt;code&gt;n&lt;/code&gt;-by-&lt;code&gt;n&lt;/code&gt; identity matrix. &lt;a href=&quot;#r6c2ffae921d1-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">donde &lt;strong&gt;I&lt;/strong&gt; es la matriz identidad &lt;code&gt;n&lt;/code&gt; - por- &lt;code&gt;n&lt;/code&gt; . &lt;a href=&quot;#r6c2ffae921d1-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9d65fe7270866ad53495d99232a820922277569" translate="yes" xml:space="preserve">
          <source>where R is a non-nan real value. Complex values with the same nan placements are sorted according to the non-nan part if it exists. Non-nan values are sorted as before.</source>
          <target state="translated">donde R es un valor no real.Los valores complejos con las mismas ubicaciones nanométricas se ordenan según la parte no nanométrica si existe.Los valores no-nan se clasifican como antes.</target>
        </trans-unit>
        <trans-unit id="c9686487c569c31836e68bc642e39a9e040607c0" translate="yes" xml:space="preserve">
          <source>where allowed comment characters for fixed and free format Fortran codes are &lt;code&gt;cC*!#&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;, respectively. Everything that follows &lt;code&gt;&amp;lt;comment char&amp;gt;f2py&lt;/code&gt; is ignored by a compiler but read by F2PY as a normal Fortran, non-comment line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3f870a9647b89f8d84edc93a3e3a7701994db4" translate="yes" xml:space="preserve">
          <source>where filename is a path relative to the reference guide source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5caa3907f70cffcfedf3fb4994a98de6a74be54f" translate="yes" xml:space="preserve">
          <source>where in this case the</source>
          <target state="translated">donde en este caso el</target>
        </trans-unit>
        <trans-unit id="a0047659d01e6a2429cd941ed10ecc15806ec5e4" translate="yes" xml:space="preserve">
          <source>where p = probability.</source>
          <target state="translated">donde p=probabilidad.</target>
        </trans-unit>
        <trans-unit id="ca92675847cdd29f796e592505c1d46281fcc976" translate="yes" xml:space="preserve">
          <source>where the</source>
          <target state="translated">donde el</target>
        </trans-unit>
        <trans-unit id="2c1ce56b739d1a90c6c7a8decdd89da276904513" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">donde &lt;code&gt;r_n&lt;/code&gt; son las ra&amp;iacute;ces especificadas en &lt;code&gt;roots&lt;/code&gt; . Si un cero tiene multiplicidad n, entonces debe aparecer en &lt;code&gt;roots&lt;/code&gt; n veces. Por ejemplo, si 2 es una ra&amp;iacute;z de multiplicidad tres y 3 es una ra&amp;iacute;z de multiplicidad 2, entonces las &lt;code&gt;roots&lt;/code&gt; parecen a [2, 2, 2, 3, 3]. Las ra&amp;iacute;ces pueden aparecer en cualquier orden.</target>
        </trans-unit>
        <trans-unit id="de25e1e31fb8e144046ff201f8ad1ae5facb6b87" translate="yes" xml:space="preserve">
          <source>where the normalization, B, is the beta function,</source>
          <target state="translated">donde la normalización,B,es la función beta,</target>
        </trans-unit>
        <trans-unit id="1279820475c803c32a1be658737be93ee2a97148" translate="yes" xml:space="preserve">
          <source>where the points &lt;code&gt;(a, b)&lt;/code&gt; consist of all pairs formed by taking &lt;code&gt;a&lt;/code&gt; from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; from &lt;code&gt;y&lt;/code&gt;. The resulting points form a grid with &lt;code&gt;x&lt;/code&gt; in the first dimension and &lt;code&gt;y&lt;/code&gt; in the second.</source>
          <target state="translated">donde los puntos &lt;code&gt;(a, b)&lt;/code&gt; consisten en todos los pares formados tomando &lt;code&gt;a&lt;/code&gt; de &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; de &lt;code&gt;y&lt;/code&gt; . Los puntos resultantes forman una cuadr&amp;iacute;cula con &lt;code&gt;x&lt;/code&gt; en la primera dimensi&amp;oacute;n e &lt;code&gt;y&lt;/code&gt; en la segunda.</target>
        </trans-unit>
        <trans-unit id="a6af8e5313e77ee7d6837ec79be794a7042e7075" translate="yes" xml:space="preserve">
          <source>where the points &lt;code&gt;(a, b, c)&lt;/code&gt; consist of all triples formed by taking &lt;code&gt;a&lt;/code&gt; from &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; from &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; from &lt;code&gt;z&lt;/code&gt;. The resulting points form a grid with &lt;code&gt;x&lt;/code&gt; in the first dimension, &lt;code&gt;y&lt;/code&gt; in the second, and &lt;code&gt;z&lt;/code&gt; in the third.</source>
          <target state="translated">donde los puntos &lt;code&gt;(a, b, c)&lt;/code&gt; consisten en todos los triples formados tomando &lt;code&gt;a&lt;/code&gt; de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; de &lt;code&gt;y&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; de &lt;code&gt;z&lt;/code&gt; . Los puntos resultantes forman una cuadr&amp;iacute;cula con &lt;code&gt;x&lt;/code&gt; en la primera dimensi&amp;oacute;n, &lt;code&gt;y&lt;/code&gt; en la segunda y &lt;code&gt;z&lt;/code&gt; en la tercera.</target>
        </trans-unit>
        <trans-unit id="83bfe9a2efafb46b83cd23b5c8266a3fd8781bb3" translate="yes" xml:space="preserve">
          <source>where() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365862a50c0682caa8baa6f30edca76e3e5f81ed" translate="yes" xml:space="preserve">
          <source>where:</source>
          <target state="translated">where:</target>
        </trans-unit>
        <trans-unit id="bee8de4d18b018e76e45831ecaa774c3f734bfce" translate="yes" xml:space="preserve">
          <source>whether or not you have multiple versions of Python installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37dbee4cae0df6201c1f4811e9b9537f69aabb6" translate="yes" xml:space="preserve">
          <source>which evaluates to:</source>
          <target state="translated">que evalúa a:</target>
        </trans-unit>
        <trans-unit id="a01e140cc92cbe722c0b95c684104ebb6b342985" translate="yes" xml:space="preserve">
          <source>which extends in the obvious way to higher dimensions, and the inverses in higher dimensions also extend in the same way.</source>
          <target state="translated">que se extiende de manera obvia a dimensiones más altas,y las inversas en dimensiones más altas también se extienden de la misma manera.</target>
        </trans-unit>
        <trans-unit id="ced4c5cabdd3ef65db772d8c6ef758745f7d3e32" translate="yes" xml:space="preserve">
          <source>which is different from a common alternative,</source>
          <target state="translated">que es diferente de una alternativa común,</target>
        </trans-unit>
        <trans-unit id="84e2d073d86e6b4b5f8c8391549685b60c7e4b55" translate="yes" xml:space="preserve">
          <source>which is not the right shape for showing the image. Finally, reordering the axes back to our original shape of &lt;code&gt;(768, 1024, 3)&lt;/code&gt;, we can see our approximation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee66060f3ffdf52489d6d257097e268641308e4" translate="yes" xml:space="preserve">
          <source>which is related to &lt;code&gt;c_{av}[k]&lt;/code&gt; by &lt;code&gt;c'_{av}[k] = c_{av}[-k]&lt;/code&gt;.</source>
          <target state="translated">que est&amp;aacute; relacionado con &lt;code&gt;c_{av}[k]&lt;/code&gt; por &lt;code&gt;c'_{av}[k] = c_{av}[-k]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="778d43b6da6e59d12f7b859a3d029062778f7c7d" translate="yes" xml:space="preserve">
          <source>which part of the memory block each field takes.</source>
          <target state="translated">qué parte del bloque de memoria toma cada campo.</target>
        </trans-unit>
        <trans-unit id="03234ac0a2f49221ceb858c5491d51de84061ef9" translate="yes" xml:space="preserve">
          <source>which provides 5 pointers. The first is an opaque pointer to the data structure used by the BitGenerators. The next three are function pointers which return the next 64- and 32-bit unsigned integers, the next random double and the next raw value. This final function is used for testing and so can be set to the next 64-bit unsigned integer function if not needed. Functions inside &lt;code&gt;Generator&lt;/code&gt; use this structure as in</source>
          <target state="translated">que proporciona 5 punteros. El primero es un puntero opaco a la estructura de datos utilizada por los BitGenerators. Los siguientes tres son punteros de funci&amp;oacute;n que devuelven los siguientes enteros sin signo de 64 y 32 bits, el siguiente doble aleatorio y el siguiente valor bruto. Esta funci&amp;oacute;n final se usa para probar y, por lo tanto, se puede establecer en la siguiente funci&amp;oacute;n de entero sin signo de 64 bits si no es necesario. Las funciones dentro de &lt;code&gt;Generator&lt;/code&gt; usan esta estructura como en</target>
        </trans-unit>
        <trans-unit id="d47c4daeb44b47194663061e95cd8003350155df" translate="yes" xml:space="preserve">
          <source>which renders as &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670381f53d7dde4b658afc72fb1f03743b30325f" translate="yes" xml:space="preserve">
          <source>which should be used for new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7c5f596971b2cd6617c86437a81292c06ddf91" translate="yes" xml:space="preserve">
          <source>which should be used in new code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376b56642da39094e74a99573c74c162327692be" translate="yes" xml:space="preserve">
          <source>which will rebuild NumPy, install it to a temporary location, and build the documentation in all formats. This will most likely again only work on Unix platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63577216ef75495c55551997ebb50867df34281b" translate="yes" xml:space="preserve">
          <source>which would have provided automatic type conversions for arrays of type &lt;code&gt;Py_complex&lt;/code&gt;, &lt;code&gt;npy_cfloat&lt;/code&gt; and &lt;code&gt;npy_cdouble&lt;/code&gt;. However, it seemed unlikely that there would be any independent (non-Python, non-NumPy) application code that people would be using &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; to generate a Python interface to, that also used these definitions for complex types. More likely, these application codes will define their own complex types, or in the case of C++, use &lt;code&gt;std::complex&lt;/code&gt;. Assuming these data structures are compatible with Python and NumPy complex types, &lt;code&gt;%numpy_typemap&lt;/code&gt; expansions as above (with the user&amp;rsquo;s complex type substituted for the first argument) should work.</source>
          <target state="translated">que habr&amp;iacute;a proporcionado conversiones de tipos autom&amp;aacute;ticas para matrices de tipo &lt;code&gt;Py_complex&lt;/code&gt; , &lt;code&gt;npy_cfloat&lt;/code&gt; y &lt;code&gt;npy_cdouble&lt;/code&gt; . Sin embargo, parec&amp;iacute;a poco probable que hubiera alg&amp;uacute;n c&amp;oacute;digo de aplicaci&amp;oacute;n independiente (no Python, no NumPy) en el que la gente usara &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; para generar una interfaz Python, que tambi&amp;eacute;n usara estas definiciones para tipos complejos. Lo m&amp;aacute;s probable es que estos c&amp;oacute;digos de aplicaci&amp;oacute;n definan sus propios tipos complejos o, en el caso de C ++, utilicen &lt;code&gt;std::complex&lt;/code&gt; . Suponiendo que estas estructuras de datos son compatibles con los tipos complejos de Python y NumPy, las expansiones &lt;code&gt;%numpy_typemap&lt;/code&gt; como arriba (con el tipo complejo del usuario sustituido por el primer argumento) deber&amp;iacute;an funcionar.</target>
        </trans-unit>
        <trans-unit id="aad927bf697b386bb3e4f9b23016432e840fc725" translate="yes" xml:space="preserve">
          <source>who() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2776b6c93cb7c4153849413953e56a2e5f33d80a" translate="yes" xml:space="preserve">
          <source>width:</source>
          <target state="translated">width:</target>
        </trans-unit>
        <trans-unit id="9fabe3e5adc197f1aefb22a24a130eff8c2333b8" translate="yes" xml:space="preserve">
          <source>will build two extension modules &lt;code&gt;scalar&lt;/code&gt; and &lt;code&gt;fib2&lt;/code&gt; to the build directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2344e686feb0404839466210c31bd50c5f4d1ab2" translate="yes" xml:space="preserve">
          <source>will cause a program crash on most systems. Under the covers, the lists are being converted to proper arrays but then the underlying add loop is told to cycle way beyond the borders of the allocated memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7e83ac1040b10c50be2504c71c5845f663b6fd" translate="yes" xml:space="preserve">
          <source>will compile the &lt;code&gt;library&lt;/code&gt; sources without optimization flags.</source>
          <target state="translated">compilar&amp;aacute; las fuentes de la &lt;code&gt;library&lt;/code&gt; sin indicadores de optimizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="51356c12b39d1c2e5b60995f4d65e090afd1cd6f" translate="yes" xml:space="preserve">
          <source>will create an &lt;code&gt;alias&lt;/code&gt; section in your &lt;code&gt;.gitconfig&lt;/code&gt; file with contents like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d20a2ce8660814e46481f17cf57f185c268fa43" translate="yes" xml:space="preserve">
          <source>will install data files to the following locations</source>
          <target state="translated">instalará archivos de datos en los siguientes lugares</target>
        </trans-unit>
        <trans-unit id="9431832ed81f189de77da34df58a265d7a0dab02" translate="yes" xml:space="preserve">
          <source>will install these data files to:</source>
          <target state="translated">instalará estos archivos de datos en:</target>
        </trans-unit>
        <trans-unit id="65f2fae653365ee5c4440c9cc9c2d032f733a63a" translate="yes" xml:space="preserve">
          <source>will need to be changed. This code has raised a &lt;code&gt;FutureWarning&lt;/code&gt; since Numpy 1.12, and similar code has raised &lt;code&gt;FutureWarning&lt;/code&gt; since 1.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48dc5d80033d088b313d555b44339bd63ffba66" translate="yes" xml:space="preserve">
          <source>will output the difference from G to C (i.e. with effects of F and G), while:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b3c1b6f0363b4b36389d5d1b18d315d36840fd" translate="yes" xml:space="preserve">
          <source>will prefer to use ATLAS, then BLIS, then OpenBLAS and as a last resort MKL. If neither of these exists the build will fail (names are compared lower case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b43fee04276950efbf0354e10bfe96ae5f91c4b" translate="yes" xml:space="preserve">
          <source>will prefer to use ATLAS, then OpenBLAS and as a last resort MKL. If neither of these exists the build will fail (names are compared lower case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf97db7680020e322957977ba54cdaae4e7c664" translate="yes" xml:space="preserve">
          <source>will result in typemaps that will produce code that reference improper data lengths. You can implement the following macro expansion:</source>
          <target state="translated">resultará en typemaps que producirán código que hará referencia a longitudes de datos impropias.Puedes implementar la siguiente expansión de macro:</target>
        </trans-unit>
        <trans-unit id="d09fffb5db2d7f631ba43ccc256617b444056d2e" translate="yes" xml:space="preserve">
          <source>win32</source>
          <target state="translated">win32</target>
        </trans-unit>
        <trans-unit id="273e334ec36853f9f9a05c2de34faba48191ff1f" translate="yes" xml:space="preserve">
          <source>window (numpy.polynomial.chebyshev.Chebyshev attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="85906e975567ef059f93ee1ec6cded27b66be258" translate="yes" xml:space="preserve">
          <source>with a and v sequences being zero-padded where necessary and conj being the conjugate.</source>
          <target state="translated">con las secuencias a y v acolchadas en cero cuando es necesario y el conjugado es el conjugado.</target>
        </trans-unit>
        <trans-unit id="fb4da7b2e3434f85dca212e250f77b33115633d3" translate="yes" xml:space="preserve">
          <source>with assert_warns(SomeWarning):</source>
          <target state="translated">con assert_warns(SomeWarning):</target>
        </trans-unit>
        <trans-unit id="198054914927940c04570defb3a1b48438d7e3f0" translate="yes" xml:space="preserve">
          <source>with similar code for &lt;code&gt;cadd&lt;/code&gt;, &lt;code&gt;dadd&lt;/code&gt;, and &lt;code&gt;sadd&lt;/code&gt; that handles complex float, double, and float data-types, respectively:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0080f1a2ae1b166b68400bbd8e3bf2ad9b849c08" translate="yes" xml:space="preserve">
          <source>with the elements of &lt;code&gt;s&lt;/code&gt; in its diagonal and with the appropriate dimensions for multiplying: in our case,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475445d83d4b5fb4eb9cadb9634afa9926972eb2" translate="yes" xml:space="preserve">
          <source>with the weight function</source>
          <target state="translated">con la función de peso</target>
        </trans-unit>
        <trans-unit id="e9106aaf08247a295732f94cac129b955c2a6cce" translate="yes" xml:space="preserve">
          <source>with their Taylor series expansion, this translates into solving the following the linear system:</source>
          <target state="translated">con su expansión de la serie de Taylor,esto se traduce en resolver el siguiente sistema lineal:</target>
        </trans-unit>
        <trans-unit id="e2ac21e5524a785601b5d72a44f59a41ff0de1fa" translate="yes" xml:space="preserve">
          <source>with which we now extract only three elements:</source>
          <target state="translated">con el que ahora extraemos sólo tres elementos:</target>
        </trans-unit>
        <trans-unit id="73978edcd3b1eeaba9e3510afd89a742dbbd379c" translate="yes" xml:space="preserve">
          <source>work space</source>
          <target state="translated">espacio de trabajo</target>
        </trans-unit>
        <trans-unit id="d664dcdca19ca8d9b446631ef2412473ee2226f1" translate="yes" xml:space="preserve">
          <source>worst case</source>
          <target state="translated">El peor de los casos</target>
        </trans-unit>
        <trans-unit id="3632e151c760c3c0cb60d7646cc6fdee30ebbafe" translate="yes" xml:space="preserve">
          <source>would output just differences in the topic branch (i.e. only A, B, and C).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1f2b93f598ca8c33b6833c0a41bac0f1e8474a" translate="yes" xml:space="preserve">
          <source>wrap values &amp;lt; 0 by adding len(&lt;em&gt;op&lt;/em&gt;) and values &amp;gt;=len(&lt;em&gt;op&lt;/em&gt;) by subtracting len(&lt;em&gt;op&lt;/em&gt;) until they are in range;</source>
          <target state="translated">ajustar valores &amp;lt;0 sumando len ( &lt;em&gt;op&lt;/em&gt; ) y valores&amp;gt; = len ( &lt;em&gt;op&lt;/em&gt; ) restando len ( &lt;em&gt;op&lt;/em&gt; ) hasta que est&amp;eacute;n dentro del rango;</target>
        </trans-unit>
        <trans-unit id="c4ce690c09e8b66a80dc42798b931fd3f8dfe52d" translate="yes" xml:space="preserve">
          <source>wraps the C library function &lt;code&gt;system()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f6ad8ec52a2984abaafd7c3b516503785c2072" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="translated">x</target>
        </trans-unit>
        <trans-unit id="308f064ded46d05826bfd10e2ded24601eb24df9" translate="yes" xml:space="preserve">
          <source>x is equal to linspace(self.domain[0], self.domain[1], n) and y is the series evaluated at element of x.</source>
          <target state="translated">x es igual a linspace(self.domain[0],self.domain[1],n)y y es la serie evaluada en el elemento de x.</target>
        </trans-unit>
        <trans-unit id="59dd422e447dd066581be0b92845e52e84b598c5" translate="yes" xml:space="preserve">
          <source>x-coordinates of the &lt;code&gt;M&lt;/code&gt; sample (data) points &lt;code&gt;(x[i], y[i])&lt;/code&gt;.</source>
          <target state="translated">Coordenadas x de los puntos (datos) de la muestra &lt;code&gt;M&lt;/code&gt; &lt;code&gt;(x[i], y[i])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba94ec9deda2ba79411318119236f9d9739ce86c" translate="yes" xml:space="preserve">
          <source>x-coordinates of the M sample points &lt;code&gt;(x[i], y[i])&lt;/code&gt;.</source>
          <target state="translated">Coordenadas x de los M puntos de muestra &lt;code&gt;(x[i], y[i])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb437551401adf121138e8924c8f0383053f491" translate="yes" xml:space="preserve">
          <source>x.__getitem__(y) &amp;lt;==&amp;gt; x[y]</source>
          <target state="translated">x .__ getitem __ (y) &amp;lt;==&amp;gt; x [y]</target>
        </trans-unit>
        <trans-unit id="fdc9be9752ea52874fd39a2bdad0f5823c5b6118" translate="yes" xml:space="preserve">
          <source>x.__setitem__(i, y) &amp;lt;==&amp;gt; x[i]=y</source>
          <target state="translated">x .__ setitem __ (i, y) &amp;lt;==&amp;gt; x [i] = y</target>
        </trans-unit>
        <trans-unit id="da421920ce1bd5a03d063f77e2157e2573edaac2" translate="yes" xml:space="preserve">
          <source>xP_i(x) = (-(i + 1)*P_{i + 1}(x) + (2i + 1)P_{i}(x) - iP_{i - 1}(x))</source>
          <target state="translated">xP_i(x)=(-(i+1)*P_{i+1}(x)+(2i+1)P_{i}(x)-iP_{i-1}(x))</target>
        </trans-unit>
        <trans-unit id="1b073b5ec82f790856556cc378140ccaef2424ed" translate="yes" xml:space="preserve">
          <source>xP_i(x) = (P_{i + 1}(x) + iP_{i - 1}(x)))</source>
          <target state="translated">xP_i(x)=(P_{i+1}(x)+iP_{i-1}(x))</target>
        </trans-unit>
        <trans-unit id="ef078637a19fed7e5c5fce6ae955f054edcce03b" translate="yes" xml:space="preserve">
          <source>xP_i(x) = (P_{i + 1}(x)/2 + i*P_{i - 1}(x))</source>
          <target state="translated">xP_i(x)=(P_{i+1}(x)/2+i*P_{i-1}(x))</target>
        </trans-unit>
        <trans-unit id="7e771f58043b3b39cee02a1814b5e97f817e4084" translate="yes" xml:space="preserve">
          <source>y : A floating point representation of Not a Number.</source>
          <target state="translated">y:Una representación en coma flotante de No es un Número.</target>
        </trans-unit>
        <trans-unit id="fe74eb20b81eed402c9b311b14c54faa75f17f0e" translate="yes" xml:space="preserve">
          <source>y = floor(&lt;code&gt;x1&lt;/code&gt;/&lt;code&gt;x2&lt;/code&gt;) This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">y = piso ( &lt;code&gt;x1&lt;/code&gt; / &lt;code&gt;x2&lt;/code&gt; ) Este es un escalar si tanto &lt;code&gt;x1&lt;/code&gt; como &lt;code&gt;x2&lt;/code&gt; son escalares.</target>
        </trans-unit>
        <trans-unit id="0153765279a24863ca46c77e0a9178c4b4e2152f" translate="yes" xml:space="preserve">
          <source>y is an array of the same subtype as &lt;code&gt;a&lt;/code&gt;, with shape &lt;code&gt;(a.size,)&lt;/code&gt;. Note that matrices are special cased for backward compatibility, if &lt;code&gt;a&lt;/code&gt; is a matrix, then y is a 1-D ndarray.</source>
          <target state="translated">y es una matriz del mismo subtipo que &lt;code&gt;a&lt;/code&gt; , con forma &lt;code&gt;(a.size,)&lt;/code&gt; . Tenga en cuenta que las matrices tienen un formato especial para compatibilidad con versiones anteriores, si &lt;code&gt;a&lt;/code&gt; es una matriz, entonces y es una ndarray 1-D.</target>
        </trans-unit>
        <trans-unit id="71b29d0659535339d20f2f2d3906d3133889c3fc" translate="yes" xml:space="preserve">
          <source>y-coordinates of the sample points. Several data sets of sample points sharing the same x-coordinates can be fitted at once by passing in a 2D-array that contains one dataset per column.</source>
          <target state="translated">coordenadas Y de los puntos de muestra.Varios conjuntos de datos de puntos de muestra que comparten las mismas coordenadas x pueden ajustarse a la vez pasando en un conjunto 2D que contiene un conjunto de datos por columna.</target>
        </trans-unit>
        <trans-unit id="3c5bcca9b96afa5b616e3604f848cc87a49f687f" translate="yes" xml:space="preserve">
          <source>y-coordinates of the sample points. Several sets of sample points sharing the same x-coordinates can be (independently) fit with one call to &lt;a href=&quot;#numpy.polynomial.polynomial.polyfit&quot;&gt;&lt;code&gt;polyfit&lt;/code&gt;&lt;/a&gt; by passing in for &lt;code&gt;y&lt;/code&gt; a 2-D array that contains one data set per column.</source>
          <target state="translated">Coordenadas y de los puntos de muestra. Varios conjuntos de puntos de muestra que comparten las mismas coordenadas x pueden ajustarse (de forma independiente) con una llamada a &lt;a href=&quot;#numpy.polynomial.polynomial.polyfit&quot;&gt; &lt;code&gt;polyfit&lt;/code&gt; &lt;/a&gt; pasando para &lt;code&gt;y&lt;/code&gt; una matriz 2-D que contiene un conjunto de datos por columna.</target>
        </trans-unit>
        <trans-unit id="4ff0b1538469338a0073e2cdaab6a517801b6ab4" translate="yes" xml:space="preserve">
          <source>year</source>
          <target state="translated">year</target>
        </trans-unit>
        <trans-unit id="df1118dd020814fd66ffa05fad743411846bb68c" translate="yes" xml:space="preserve">
          <source>yellow_text() (in module numpy.distutils.misc_util)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb360f9c09ac8c5edb2f18be5de4e80ea4c430d0" translate="yes" xml:space="preserve">
          <source>yes</source>
          <target state="translated">yes</target>
        </trans-unit>
        <trans-unit id="88e1e34fad9aac1803c28d999922c02344bde475" translate="yes" xml:space="preserve">
          <source>you can use &lt;code&gt;np.unique&lt;/code&gt; to print the unique values in your array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab429b829aab8de3c0b16635dc4fdd7df6b01db" translate="yes" xml:space="preserve">
          <source>your operating system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321f014e68afc5d27fa673e253b66c1d1a885e28" translate="yes" xml:space="preserve">
          <source>zero-dimensional numpy arrays</source>
          <target state="translated">matrices numéricas de dimensión cero</target>
        </trans-unit>
        <trans-unit id="851d6a9d4f40adec7bdb22e6aa7d78c29e7bad48" translate="yes" xml:space="preserve">
          <source>zero-terminated bytes (not recommended)</source>
          <target state="translated">bytes de terminación cero (no se recomienda)</target>
        </trans-unit>
        <trans-unit id="3f703704e5615124533004024ac41835014b9923" translate="yes" xml:space="preserve">
          <source>zeros (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d38f0c14bca6590a27cad020688a8a53013cf8" translate="yes" xml:space="preserve">
          <source>zeros() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79617894be2a60271313f0d6918d0d57f8af46b" translate="yes" xml:space="preserve">
          <source>zeros(shape) will create an array filled with 0 values with the specified shape. The default dtype is float64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb64fa17a2dd83829c97a1d19df887e579e00bf" translate="yes" xml:space="preserve">
          <source>zeros_like() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecf8a17ab7800b6df8335d0e6bba16f16db3bac" translate="yes" xml:space="preserve">
          <source>zfill() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4c1e0cb58cf02c936b120b0a676057daae3f59" translate="yes" xml:space="preserve">
          <source>zipf() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b16e4ea6cc467a3916252ca6ee5a838978ad9b6" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;&amp;gt;&amp;rsquo;, &amp;lsquo;B&amp;rsquo;} - big endian</source>
          <target state="translated">{'&amp;gt;', 'B'}: big endian</target>
        </trans-unit>
        <trans-unit id="69450a331083a0b68e4b8ea4f8d3ea5eed96797f" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;L&amp;rsquo;} - little endian</source>
          <target state="translated">{'&amp;lt;', 'L'} - little endian</target>
        </trans-unit>
        <trans-unit id="4a18b0c9674466129cdcccc0b853d0e7924dffb5" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;=&amp;rsquo;, &amp;lsquo;N&amp;rsquo;} - native order</source>
          <target state="translated">{'=', 'N'}: orden nativo</target>
        </trans-unit>
        <trans-unit id="d8c7bacdfb9bb97d8000c8d86e26ecc69e84c128" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;|&amp;rsquo;, &amp;lsquo;I&amp;rsquo;} - ignore (no change to byte order)</source>
          <target state="translated">{'|', 'I'} - ignorar (sin cambios en el orden de bytes)</target>
        </trans-unit>
        <trans-unit id="129c2a92772859dd050db619eaedbf46e847091c" translate="yes" xml:space="preserve">
          <source>~n/2</source>
          <target state="translated">~n/2</target>
        </trans-unit>
        <trans-unit id="ff8c31042699d05d07f6e439438f8c8528e3badb" translate="yes" xml:space="preserve">
          <source>~self</source>
          <target state="translated">~self</target>
        </trans-unit>
        <trans-unit id="8105745e3f0510d3e2e069ea766a5a441edea419" translate="yes" xml:space="preserve">
          <source>“descr” : dtype.descr</source>
          <target state="translated">&quot;Descr&quot;: dtype.descr</target>
        </trans-unit>
        <trans-unit id="b7ed67990b9e24b4aacf785a5ce0eac13652bccc" translate="yes" xml:space="preserve">
          <source>⋮</source>
          <target state="translated">⋮</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
