<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="b7be2ff881fde47ae80054d53a95fa77faa2dc2b" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;sep&lt;/code&gt; in &lt;code&gt;pd.read_csv&lt;/code&gt; other than a single character:</source>
          <target state="translated">Usando un &lt;code&gt;sep&lt;/code&gt; en &lt;code&gt;pd.read_csv&lt;/code&gt; que no sea un solo car&amp;aacute;cter:</target>
        </trans-unit>
        <trans-unit id="2985de1355c95a632e6ab5117e662f510752ef1e" translate="yes" xml:space="preserve">
          <source>Using a DataFrame column as weights. Rows with larger value in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb61aa0e018ee51347b43f0a7526bef1998377b2" translate="yes" xml:space="preserve">
          <source>Using a DataFrame column as weights. Rows with larger value in the &lt;code&gt;num_specimen_seen&lt;/code&gt; column are more likely to be sampled.</source>
          <target state="translated">Usando una columna DataFrame como pesos. Es m&amp;aacute;s probable que se &lt;code&gt;num_specimen_seen&lt;/code&gt; las filas con un valor mayor en la columna num_specimen_seen .</target>
        </trans-unit>
        <trans-unit id="e036228dc9018c68b843ce1cf9fe7c56a8527252" translate="yes" xml:space="preserve">
          <source>Using a Series, the number of places for specific columns can be specified with the column names as index and the number of decimal places as value</source>
          <target state="translated">Usando una Serie,el número de lugares para columnas específicas puede ser especificado con los nombres de las columnas como índice y el número de lugares decimales como valor</target>
        </trans-unit>
        <trans-unit id="dbde4aec4e2c4cb4c3f5f97d6fe6f630d46652dc" translate="yes" xml:space="preserve">
          <source>Using a boolean indexer you can provide selection related to the &lt;em&gt;values&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690fb85189088e793e265df99baf824d6ee8ed60" translate="yes" xml:space="preserve">
          <source>Using a boolean vector to index a Series works exactly as in a NumPy ndarray:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bbab47a1cc3d92a75b0d85e261c443f16ab3ec" translate="yes" xml:space="preserve">
          <source>Using a compiled regex with flags</source>
          <target state="translated">Usando un regex compilado con banderas</target>
        </trans-unit>
        <trans-unit id="d1988f6b35a867c033ef5e3a2788172bb0ba5289" translate="yes" xml:space="preserve">
          <source>Using a list to get multiple sheets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b984dafbcc353db8249a7fe861d67dafaec72b" translate="yes" xml:space="preserve">
          <source>Using a non-unix epoch origin</source>
          <target state="translated">Usando un origen de época no unix</target>
        </trans-unit>
        <trans-unit id="d1865f3be016d0f7cef8155a68185f7e773d2df7" translate="yes" xml:space="preserve">
          <source>Using a numpy universal function (in this case the same as &lt;code&gt;np.sqrt(df)&lt;/code&gt;):</source>
          <target state="translated">Usando una funci&amp;oacute;n universal numpy (en este caso lo mismo que &lt;code&gt;np.sqrt(df)&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="8e787ebc732080f27a6ff292230b2e8190d437c0" translate="yes" xml:space="preserve">
          <source>Using a reducing function on either axis</source>
          <target state="translated">Usando una función de reducción en cualquiera de los ejes</target>
        </trans-unit>
        <trans-unit id="7179bec9805ec2715379a41e405fd85463a6b32d" translate="yes" xml:space="preserve">
          <source>Using a single column&amp;rsquo;s values to select data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1c53ca562990050b1cf076e4cddd1fe7aa9e3d" translate="yes" xml:space="preserve">
          <source>Using a single function is equivalent to &lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt;. You can also pass named methods as strings. These will return a &lt;code&gt;Series&lt;/code&gt; of the aggregated output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95f24fe8c83b7fbea16ce5e19f8035d946260c5" translate="yes" xml:space="preserve">
          <source>Using a special sentinel value, bit pattern, or set of sentinel values to denote &lt;code&gt;NA&lt;/code&gt; across the dtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cd74c2e5c6fa2aed948435e098c60374817533" translate="yes" xml:space="preserve">
          <source>Using a unix epoch time</source>
          <target state="translated">Usando un tiempo de época unix</target>
        </trans-unit>
        <trans-unit id="93d453c0638ecc32078847231674c8731ff26d4c" translate="yes" xml:space="preserve">
          <source>Using all default values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce70951e8980b2d37f36385c8b12ac294cce3c3" translate="yes" xml:space="preserve">
          <source>Using an explicit compression type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49b713b5e55028869df42d6cfa53b4dc2e08760" translate="yes" xml:space="preserve">
          <source>Using axis-style parameters</source>
          <target state="translated">Usando los parámetros del estilo del eje</target>
        </trans-unit>
        <trans-unit id="cf1eb8cfabb6ca34c34cd367c72a09b4d55a179a" translate="yes" xml:space="preserve">
          <source>Using axis-style parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e50c52717d028cb498c4678913cc759219c2d7" translate="yes" xml:space="preserve">
          <source>Using both row labels and value conditionals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6de15f86e007435cdece1c3e681b8fa40e9333c" translate="yes" xml:space="preserve">
          <source>Using explicit names, instead of the column names</source>
          <target state="translated">Usando nombres explícitos,en lugar de los nombres de las columnas</target>
        </trans-unit>
        <trans-unit id="f0b7951778d900d5eb9b6679fa2a13d23b6e7b9c" translate="yes" xml:space="preserve">
          <source>Using get_group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4933c0c3ab46bd51fd15adf913594af05a0df2c3" translate="yes" xml:space="preserve">
          <source>Using if/truth statements with pandas</source>
          <target state="translated">Usando declaraciones if/truth con los pandas</target>
        </trans-unit>
        <trans-unit id="56f3a31a20733b27cd9c92370ccf4d4a3059ff3d" translate="yes" xml:space="preserve">
          <source>Using indexer between time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ecb5c4bd331fb1e959489c5b02d87e1bdc8680" translate="yes" xml:space="preserve">
          <source>Using inverse operator (~) to take the complement of a mask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b1b5752da63a961e88249f02557ba4047e63c5" translate="yes" xml:space="preserve">
          <source>Using layout and targeting multiple axes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b43fac916c33e1161b56e87a1683348f661e58b" translate="yes" xml:space="preserve">
          <source>Using ndarray</source>
          <target state="translated">Usando ndarray</target>
        </trans-unit>
        <trans-unit id="42f32f274be1bfdf6ab67e5a9efaaf16ef62d7c7" translate="yes" xml:space="preserve">
          <source>Using offsets with &lt;code&gt;Series&lt;/code&gt; / &lt;code&gt;DatetimeIndex&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f84dcd4cadcf69050c4e48e0f82ccc484c7bfa" translate="yes" xml:space="preserve">
          <source>Using offsets with Series / DatetimeIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c365bad2d4db0194276476a489e760e811540376" translate="yes" xml:space="preserve">
          <source>Using polynomial interpolation.</source>
          <target state="translated">Usando interpolación polinómica.</target>
        </trans-unit>
        <trans-unit id="50128dfc59f6d94a04a3589caed02b990ac36e55" translate="yes" xml:space="preserve">
          <source>Using ptrepack to create a completely-sorted-index on a store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dc2ee823828f157a4cb1418c795a8c1b062601" translate="yes" xml:space="preserve">
          <source>Using regex groups (extract second group and swap case):</source>
          <target state="translated">Usando grupos regex (extraer el segundo grupo y cambiar la caja):</target>
        </trans-unit>
        <trans-unit id="a3b0d0f09e28704612c1bc13af2adb30c3fe0808" translate="yes" xml:space="preserve">
          <source>Using replace with backrefs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5971221d92e94783b5948dc72bade06ad3e441d4" translate="yes" xml:space="preserve">
          <source>Using searchsorted to merge based on values inside a range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cdbb3847877637961bca525672bcf7d0c41e0a" translate="yes" xml:space="preserve">
          <source>Using slicers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9434227c9813407591bcb9754e9c0285afc6b716" translate="yes" xml:space="preserve">
          <source>Using startup scripts for the Python/IPython environment to import pandas and set options makes working with pandas more efficient. To do this, create a .py or .ipy script in the startup directory of the desired profile. An example where the startup folder is in a default IPython profile can be found at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0179f68112bf19d206379f49e37f01fd8997226d" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;../reference/api/pandas.series.isin#pandas.Series.isin&quot;&gt;&lt;code&gt;isin()&lt;/code&gt;&lt;/a&gt; method for filtering:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b53789a903c0dbd87524980d9f13a30416de1e" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://xlsxwriter.readthedocs.io&quot;&gt;Xlsxwriter&lt;/a&gt; engine provides many options for controlling the format of an Excel worksheet created with the &lt;code&gt;to_excel&lt;/code&gt; method. Excellent examples can be found in the &lt;a href=&quot;https://xlsxwriter.readthedocs.io&quot;&gt;Xlsxwriter&lt;/a&gt; documentation here: &lt;a href=&quot;https://xlsxwriter.readthedocs.io/working_with_pandas.html&quot;&gt;https://xlsxwriter.readthedocs.io/working_with_pandas.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b07337f73487138ce67f6038ad10c4107fc00f" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;'python'&lt;/code&gt; engine is generally &lt;em&gt;not&lt;/em&gt; useful, except for testing other evaluation engines against it. You will achieve &lt;strong&gt;no&lt;/strong&gt; performance benefits using &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;engine='python'&lt;/code&gt; and in fact may incur a performance hit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc5efd6b8afc4e7cd63a6fc0b6f7ca1b0919f00" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;get&lt;/code&gt; method, a missing label will return None or specified default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9ecf041c00e73da91e933f322f297654272ffc" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;in&lt;/code&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1e80ffc530194f22b873fca2e85cca3feb2443" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;origin&lt;/code&gt; Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8124b7d952310109f284d60b3fc619d187a29699" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;origin&lt;/code&gt; parameter, one can specify an alternative starting point for creation of a &lt;code&gt;DatetimeIndex&lt;/code&gt;. For example, to use 1960-01-01 as the starting date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbca41c3f29b4ff1546b2ed705437726303ee6db" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;squeeze&lt;/code&gt; keyword, the parser will return output with a single column as a &lt;code&gt;Series&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20bfb454003962d52ec07dbade67b20c687af6c" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;x_compat&lt;/code&gt; parameter, you can suppress this behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e3d103b486e99681b49f5aded95795c27c7e41" translate="yes" xml:space="preserve">
          <source>Using the IndexSlice class for a more intuitive command:</source>
          <target state="translated">Usando la clase IndexSlice para un comando más intuitivo:</target>
        </trans-unit>
        <trans-unit id="657499f8b2d6e1960f1a43f1d2fafda88d39e041" translate="yes" xml:space="preserve">
          <source>Using the Python &lt;code&gt;in&lt;/code&gt; operator on a &lt;code&gt;Series&lt;/code&gt; tests for membership in the index, not membership among the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b116df55079ec334b0dc53c927f1d9dfff0717" translate="yes" xml:space="preserve">
          <source>Using the TimedeltaIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea90f137cd3d7772dca24b621e85197b36d0f9dd" translate="yes" xml:space="preserve">
          <source>Using the default slice command:</source>
          <target state="translated">Usando el comando de rebanadas por defecto:</target>
        </trans-unit>
        <trans-unit id="e78e5f2765b1719435e3af843bcdf97f0579e786" translate="yes" xml:space="preserve">
          <source>Using the in operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e326fb4f24719766815edbad98b8e7fdf8e2a006" translate="yes" xml:space="preserve">
          <source>Using the origin Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa326ae6dad6edab1a002da06593eaca191f657" translate="yes" xml:space="preserve">
          <source>Using the other two forms that mimic the API for &lt;code&gt;datetime.datetime&lt;/code&gt;:</source>
          <target state="translated">Usando las otras dos formas que imitan la API para &lt;code&gt;datetime.datetime&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e020a37525def4fc6292190ba6279847b0fe7771" translate="yes" xml:space="preserve">
          <source>Using the parameter &lt;code&gt;level&lt;/code&gt; in the &lt;a href=&quot;../reference/api/pandas.dataframe.reindex#pandas.DataFrame.reindex&quot;&gt;&lt;code&gt;reindex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.align#pandas.DataFrame.align&quot;&gt;&lt;code&gt;align()&lt;/code&gt;&lt;/a&gt; methods of pandas objects is useful to broadcast values across a level. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d69d33d9f21d84fb23b18de59c383a0a0266ed" translate="yes" xml:space="preserve">
          <source>Using the primary calling convention:</source>
          <target state="translated">Usando la convención de llamadas primarias:</target>
        </trans-unit>
        <trans-unit id="85e8443298cf55064db37c9a422b197a93d62e16" translate="yes" xml:space="preserve">
          <source>Using the same filling arguments as &lt;a href=&quot;basics#basics-reindexing&quot;&gt;reindexing&lt;/a&gt;, we can propagate non-NA values forward or backward:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe70dcf1ef26c5581467dab95c1d961a2c53777c" translate="yes" xml:space="preserve">
          <source>Using the sheet index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ecb32e647daa2f2336f5c016e2ca09e2897bae" translate="yes" xml:space="preserve">
          <source>Using the top-level &lt;code&gt;pd.to_timedelta&lt;/code&gt;, you can convert a scalar, array, list, or Series from a recognized timedelta format / value into a &lt;code&gt;Timedelta&lt;/code&gt; type. It will construct Series if the input is a Series, a scalar if the input is scalar-like, otherwise it will output a &lt;code&gt;TimedeltaIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88f4b481929e8d70ab6e5d540bf7801106c09fe" translate="yes" xml:space="preserve">
          <source>Using these methods / indexers, you can chain data selection operations without using a temporary variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a8a7c18bcec45718db7daec0d89df610a99517" translate="yes" xml:space="preserve">
          <source>Using this calendar, creating an index or doing offset arithmetic skips weekends and holidays (i.e., Memorial Day/July 4th). For example, the below defines a custom business day offset using the &lt;code&gt;ExampleCalendar&lt;/code&gt;. Like any other offset, it can be used to create a &lt;code&gt;DatetimeIndex&lt;/code&gt; or added to &lt;code&gt;datetime&lt;/code&gt; or &lt;code&gt;Timestamp&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313f920e77d9792980b38d6d9f91fd04d2647168" translate="yes" xml:space="preserve">
          <source>Using this parameter results in much faster parsing time and lower memory usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0e033f8a256bf6bbe7829a4f499deffbfbdbf3" translate="yes" xml:space="preserve">
          <source>Using timedeltas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b8d7a59139089e92be8565e082a95af765430e" translate="yes" xml:space="preserve">
          <source>Vaex</source>
          <target state="translated">Vaex</target>
        </trans-unit>
        <trans-unit id="f71ed70a7b4c945e79c3c2dc5a7487a7c186a91a" translate="yes" xml:space="preserve">
          <source>Valid boolean expressions are combined with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3284c1651e9c1666fbe07a03bf2561d0217e3e" translate="yes" xml:space="preserve">
          <source>Valid comparison operators are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee73f4880aec9799ab92e6d70c5f15bb722d87ef" translate="yes" xml:space="preserve">
          <source>Valid frequency arguments to Grouper &lt;a href=&quot;timeseries#timeseries-offset-aliases&quot;&gt;Timeseries&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42e8d3980fddf7ed29754d8ebcbb02540c31477" translate="yes" xml:space="preserve">
          <source>Valid regular expression.</source>
          <target state="translated">Expresión regular válida.</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="da433f04f8b795f5b82c11defecd596bda4d771b" translate="yes" xml:space="preserve">
          <source>Value between 0 &amp;lt;= q &amp;lt;= 1, the quantile(s) to compute.</source>
          <target state="translated">Valor entre 0 &amp;lt;= q &amp;lt;= 1, el cuantil (s) a calcular.</target>
        </trans-unit>
        <trans-unit id="d82d28281dc7cb7c550dbe194117ba12e2d9001b" translate="yes" xml:space="preserve">
          <source>Value counts (histogramming) / mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dfc1e3beae1ee2d9fdd9ceaebebf48b8dcf1b0" translate="yes" xml:space="preserve">
          <source>Value that is popped from series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd6598e0be40e6fe4832421e93cc349c7e17880" translate="yes" xml:space="preserve">
          <source>Value to be converted to Timestamp.</source>
          <target state="translated">El valor se convertirá a la marca de tiempo.</target>
        </trans-unit>
        <trans-unit id="56b68add8862326b02ab0302406d276162fb4fbd" translate="yes" xml:space="preserve">
          <source>Value to mark &amp;ldquo;not found&amp;rdquo;.</source>
          <target state="translated">Valor para marcar &quot;no encontrado&quot;.</target>
        </trans-unit>
        <trans-unit id="9ffee2974fb37b4f22498c0fe6b103a434ad0b7f" translate="yes" xml:space="preserve">
          <source>Value to mark &amp;ldquo;not found&amp;rdquo;. If None, will not drop the NaN from the uniques of the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580f7cd61f66dd5c9b96651713e7f210be76397e" translate="yes" xml:space="preserve">
          <source>Value to replace any values matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a879a00b6b3b8b106a33489a22d7895dd3dcbefc" translate="yes" xml:space="preserve">
          <source>Value to replace any values matching &lt;code&gt;to_replace&lt;/code&gt; with. For a DataFrame a dict of values can be used to specify which value to use for each column (columns not in the dict will not be filled). Regular expressions, strings and lists or dicts of such objects are also allowed.</source>
          <target state="translated">Valor para reemplazar cualquier valor que coincida con &lt;code&gt;to_replace&lt;/code&gt; . Para un DataFrame, se puede usar un dictado de valores para especificar qu&amp;eacute; valor usar para cada columna (las columnas que no est&amp;aacute;n en el dictado no se llenar&amp;aacute;n). Tambi&amp;eacute;n se permiten expresiones regulares, cadenas y listas o dictados de dichos objetos.</target>
        </trans-unit>
        <trans-unit id="e7e1f2ee93406a328727d11de6676ad7331c179c" translate="yes" xml:space="preserve">
          <source>Value to replace missing values with</source>
          <target state="translated">Valor para reemplazar los valores faltantes con</target>
        </trans-unit>
        <trans-unit id="8b9e34dd4b1f962a42b2b2e1c5c220edeeae3d71" translate="yes" xml:space="preserve">
          <source>Value to replace missing values with (in the resulting pivot table, after aggregation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90886ca717da9107e5198f6052cdc6d140f264b9" translate="yes" xml:space="preserve">
          <source>Value to set the axis name attribute.</source>
          <target state="translated">Valor para establecer el atributo del nombre del eje.</target>
        </trans-unit>
        <trans-unit id="b348722020d6796c9a72b0320bd645c72988fd9f" translate="yes" xml:space="preserve">
          <source>Value to use for filling NaN values.</source>
          <target state="translated">Valor a utilizar para llenar los valores de NaN.</target>
        </trans-unit>
        <trans-unit id="fe1128c0895fca6559f64fb62e8dce8a4175b044" translate="yes" xml:space="preserve">
          <source>Value to use for missing values, applied during upsampling (note this does not fill NaNs that already were present).</source>
          <target state="translated">Valor a utilizar para los valores faltantes,aplicado durante el muestreo ascendente (nótese que esto no llena los NaNs que ya estaban presentes).</target>
        </trans-unit>
        <trans-unit id="416886e4c2d5fd9209d057bb1fc0a4a001901316" translate="yes" xml:space="preserve">
          <source>Value to use for missing values. Defaults to NaN, but can be any &amp;ldquo;compatible&amp;rdquo; value</source>
          <target state="translated">Valor a utilizar para los valores perdidos. El valor predeterminado es NaN, pero puede ser cualquier valor &quot;compatible&quot;</target>
        </trans-unit>
        <trans-unit id="a560ca76cd09ad17375ac1ee8aa67bef91575585" translate="yes" xml:space="preserve">
          <source>Value to use for missing values. Defaults to NaN, but can be any &amp;ldquo;compatible&amp;rdquo; value.</source>
          <target state="translated">Valor a utilizar para los valores perdidos. El valor predeterminado es NaN, pero puede ser cualquier valor &quot;compatible&quot;.</target>
        </trans-unit>
        <trans-unit id="1680b3905366dcc32c1b5d4a171fed0508435577" translate="yes" xml:space="preserve">
          <source>Value to use in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05da114e86006396d3ba2924fa1fe9bdbbebf386" translate="yes" xml:space="preserve">
          <source>Value to use in the &lt;code&gt;labels&lt;/code&gt; array to indicate missing values.</source>
          <target state="translated">Valor a utilizar en la matriz de &lt;code&gt;labels&lt;/code&gt; para indicar valores perdidos.</target>
        </trans-unit>
        <trans-unit id="7534cf43291aed16fbd535a3c9b276f4255ef53d" translate="yes" xml:space="preserve">
          <source>Value to use to fill holes (e.g. 0), alternately a dict/Series/DataFrame of values specifying which value to use for each index (for a Series) or column (for a DataFrame). Values not in the dict/Series/DataFrame will not be filled. This value cannot be a list.</source>
          <target state="translated">Valor a utilizar para rellenar los huecos (por ejemplo,0),alternativamente un dic/Series/DataFrame de valores especificando qué valor utilizar para cada índice (para una Serie)o columna (para un DataFrame).Los valores que no estén en el dict/Series/DataFrame no se rellenarán.Este valor no puede ser una lista.</target>
        </trans-unit>
        <trans-unit id="484267409aeaa186db069428bdd811d3c469865c" translate="yes" xml:space="preserve">
          <source>Value to use when replacing NaN values.</source>
          <target state="translated">Valor a utilizar cuando se reemplazan los valores de NaN.</target>
        </trans-unit>
        <trans-unit id="05f7d9da500b4abe7efbbe645623daa69b38fcca" translate="yes" xml:space="preserve">
          <source>Value(s) between 0 and 1 providing the quantile(s) to compute.</source>
          <target state="translated">Valor(es)entre 0 y 1 proporcionando el(los)cuantil(es)a computar.</target>
        </trans-unit>
        <trans-unit id="ca5e1888f7ff9f4679a3377b455596a48d014681" translate="yes" xml:space="preserve">
          <source>ValueError</source>
          <target state="translated">ValueError</target>
        </trans-unit>
        <trans-unit id="c2a73dc2e5622d27d837979a58687e470870d34a" translate="yes" xml:space="preserve">
          <source>ValueError :</source>
          <target state="translated">ValueError :</target>
        </trans-unit>
        <trans-unit id="4eddba8e8f61af78f809d3c36034ac10b3ba158b" translate="yes" xml:space="preserve">
          <source>ValueError if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8f3a50824c54f095adbdf6c5e3a029452a18f6" translate="yes" xml:space="preserve">
          <source>ValueError if the freq cannot be converted</source>
          <target state="translated">ValueError si la frecuencia no puede ser convertida</target>
        </trans-unit>
        <trans-unit id="a32bf3b72babb876baaa9601c6478aefd4f2c21c" translate="yes" xml:space="preserve">
          <source>ValueError if the freq cannot be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e858dfb72147153569ebcd4e118b2589c4f6ce" translate="yes" xml:space="preserve">
          <source>ValueError:</source>
          <target state="translated">ValueError:</target>
        </trans-unit>
        <trans-unit id="d7613af2949341d5019f39fbbef6c4582c2a4442" translate="yes" xml:space="preserve">
          <source>Values at the specified freq.</source>
          <target state="translated">Valores en la frecuencia especificada.</target>
        </trans-unit>
        <trans-unit id="56b2972cae6b8181eacad5736758d94b79349e23" translate="yes" xml:space="preserve">
          <source>Values can be set to NaT using np.nan, similar to datetime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7d3d56cfeee841ef72f807d9b086ab815db9bd" translate="yes" xml:space="preserve">
          <source>Values considered &amp;ldquo;missing&amp;rdquo;</source>
          <target state="translated">Valores considerados &quot;perdidos&quot;</target>
        </trans-unit>
        <trans-unit id="039594d9ec5a0ba9321a4b54e784342fa8c1ec78" translate="yes" xml:space="preserve">
          <source>Values is a level of this MultiIndex converted to a single &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; (or subclass thereof).</source>
          <target state="translated">Los valores son un nivel de este MultiIndex convertido en un solo &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; (o subclase del mismo).</target>
        </trans-unit>
        <trans-unit id="45a0815c898fc899883fb72f3594d89a17a8dc48" translate="yes" xml:space="preserve">
          <source>Values must be hashable and have the same length as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ed4268ee72c1e662973fa7e5faf5230f346b03" translate="yes" xml:space="preserve">
          <source>Values must be hashable and have the same length as &lt;code&gt;data&lt;/code&gt;. Non-unique index values are allowed. Will default to RangeIndex (0, 1, 2, &amp;hellip;, n) if not provided. If both a dict and index sequence are used, the index will override the keys found in the dict.</source>
          <target state="translated">Los valores deben ser hash y tener la misma longitud que los &lt;code&gt;data&lt;/code&gt; . Se permiten valores de &amp;iacute;ndice no &amp;uacute;nicos. El valor predeterminado ser&amp;aacute; RangeIndex (0, 1, 2,&amp;hellip;, n) si no se proporciona. Si se utilizan tanto una secuencia de dictado como de &amp;iacute;ndice, el &amp;iacute;ndice anular&amp;aacute; las claves que se encuentran en el dictado.</target>
        </trans-unit>
        <trans-unit id="598d68d07149fd77c855a3675dbefd3f3238bd09" translate="yes" xml:space="preserve">
          <source>Values of the DataFrame are replaced with other values dynamically. This differs from updating with &lt;code&gt;.loc&lt;/code&gt; or &lt;code&gt;.iloc&lt;/code&gt;, which require you to specify a location to update with some value.</source>
          <target state="translated">Los valores del DataFrame se reemplazan con otros valores de forma din&amp;aacute;mica. Esto difiere de la actualizaci&amp;oacute;n con &lt;code&gt;.loc&lt;/code&gt; o &lt;code&gt;.iloc&lt;/code&gt; , que requieren que especifique una ubicaci&amp;oacute;n para actualizar con alg&amp;uacute;n valor.</target>
        </trans-unit>
        <trans-unit id="89439b321846e12cbf2095e1202a5bccbb606a56" translate="yes" xml:space="preserve">
          <source>Values of the Series are replaced with other values dynamically. This differs from updating with &lt;code&gt;.loc&lt;/code&gt; or &lt;code&gt;.iloc&lt;/code&gt;, which require you to specify a location to update with some value.</source>
          <target state="translated">Los valores de la serie se reemplazan por otros valores de forma din&amp;aacute;mica. Esto difiere de la actualizaci&amp;oacute;n con &lt;code&gt;.loc&lt;/code&gt; o &lt;code&gt;.iloc&lt;/code&gt; , que requieren que especifique una ubicaci&amp;oacute;n para actualizar con alg&amp;uacute;n valor.</target>
        </trans-unit>
        <trans-unit id="dd97615f4873fd997b552da4ee473f604ea0f8d6" translate="yes" xml:space="preserve">
          <source>Values should be arrays or Series.</source>
          <target state="translated">Los valores deben ser arreglos o series.</target>
        </trans-unit>
        <trans-unit id="339de0736a1f58b4e90f34d02f663272f8d1f2b2" translate="yes" xml:space="preserve">
          <source>Values to consider as &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261212f0a0371aa40956d08be736598f88280e46" translate="yes" xml:space="preserve">
          <source>Values to consider as &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8782db389bad70efa4ab6b4035c0e33ea809d473" translate="yes" xml:space="preserve">
          <source>Values to consider as False.</source>
          <target state="translated">Valores a considerar como falsos.</target>
        </trans-unit>
        <trans-unit id="464c7c5f88a20d0db456aa9b1c16c34cc782b8ef" translate="yes" xml:space="preserve">
          <source>Values to consider as True.</source>
          <target state="translated">Valores a considerar como verdaderos.</target>
        </trans-unit>
        <trans-unit id="e14fd14e48a03840922e0acb5e2dbf17dc807a53" translate="yes" xml:space="preserve">
          <source>Values to group by in the columns.</source>
          <target state="translated">Valores para agrupar en las columnas.</target>
        </trans-unit>
        <trans-unit id="d9d28c6307aae0b65b95e2bf0cbb821fe8aad383" translate="yes" xml:space="preserve">
          <source>Values to group by in the rows.</source>
          <target state="translated">Valores para agrupar en las filas.</target>
        </trans-unit>
        <trans-unit id="97ae4051a0a299f71ea0ef95b00fdc57f644d8aa" translate="yes" xml:space="preserve">
          <source>Values to insert into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ca406c0689b1cb7aa9242e838132006504254c" translate="yes" xml:space="preserve">
          <source>Values to insert into &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Valores para insertar en &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58a2515c03fce4f195ccb11e4edb23553ce94e16" translate="yes" xml:space="preserve">
          <source>Values to use for the xticks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02584311e54619a38f44a4bb4c13c68ec5079d63" translate="yes" xml:space="preserve">
          <source>Values to use for the yticks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3443eed9dae222352dd23ccae14ed45f7afe9f70" translate="yes" xml:space="preserve">
          <source>Values used to determine the groups.</source>
          <target state="translated">Valores utilizados para determinar los grupos.</target>
        </trans-unit>
        <trans-unit id="13749218a9adc080dd9bf04b5a83c2314bf719d9" translate="yes" xml:space="preserve">
          <source>Variance of values within each group.</source>
          <target state="translated">Variación de los valores dentro de cada grupo.</target>
        </trans-unit>
        <trans-unit id="d4d776382b460e3d2a801a43e2536b817717bb91" translate="yes" xml:space="preserve">
          <source>Various combinations of &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, and &lt;code&gt;periods&lt;/code&gt; can be used with &lt;code&gt;timedelta_range&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed586eefe864080b44edb04ae092d2677441a64" translate="yes" xml:space="preserve">
          <source>Various tutorials</source>
          <target state="translated">Varios tutoriales</target>
        </trans-unit>
        <trans-unit id="af8867db3c91034662bb83a07677cc2fd1e62025" translate="yes" xml:space="preserve">
          <source>Vectorize</source>
          <target state="translated">Vectorize</target>
        </trans-unit>
        <trans-unit id="93c390ad7ef542b32c9638bdc4964014d9ec4b94" translate="yes" xml:space="preserve">
          <source>Vectorized Lookup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1dedd01b5fad8bc873e09d5bfd4c0415da7889" translate="yes" xml:space="preserve">
          <source>Vectorized apply of DateOffset to DatetimeIndex, raises NotImplentedError for offsets without a vectorized implementation.</source>
          <target state="translated">La aplicación vectorizada de DateOffset a DatetimeIndex,eleva el NotImplentedError para las compensaciones sin una aplicación vectorizada.</target>
        </trans-unit>
        <trans-unit id="0664f10a60abcd26fa100b2461e49b3c2ebcea60" translate="yes" xml:space="preserve">
          <source>Vectorized operations and label alignment with Series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b653a89f6d55b210f26eab32aa9773026d7f00b" translate="yes" xml:space="preserve">
          <source>Vectorized string functions for Series and Index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a6eaaabd40081567251c3f1e3eff13409f3dd2" translate="yes" xml:space="preserve">
          <source>Vectorized string functions for Series and Index. NAs stay NA unless handled otherwise by a particular method. Patterned after Python&amp;rsquo;s string methods, with some inspiration from R&amp;rsquo;s stringr package.</source>
          <target state="translated">Funciones de cadena vectorizadas para series e &amp;iacute;ndices. Los NA siguen siendo NA a menos que se manejen de otra manera mediante un m&amp;eacute;todo particular. Modelado seg&amp;uacute;n los m&amp;eacute;todos de cadena de Python, con algo de inspiraci&amp;oacute;n del paquete stringr de R.</target>
        </trans-unit>
        <trans-unit id="7831e4b4a10a8f50a8af637a3ced1a704bd6dee1" translate="yes" xml:space="preserve">
          <source>Vectorized string methods</source>
          <target state="translated">Métodos de cuerdas vectorizadas</target>
        </trans-unit>
        <trans-unit id="bbfbd52ad095fe7fae949ed22a1925a3ea9265f8" translate="yes" xml:space="preserve">
          <source>Verify that the IntervalArray is valid.</source>
          <target state="translated">Verifique que el IntervalArray es válido.</target>
        </trans-unit>
        <trans-unit id="ca690ebe009f629b2ef7ce7c2119e0ccd65efe39" translate="yes" xml:space="preserve">
          <source>Verify that the IntervalIndex is valid.</source>
          <target state="translated">Verifique que el IntervalIndex sea válido.</target>
        </trans-unit>
        <trans-unit id="d852921399d93bcb9229ed7093e5cd13284f22ab" translate="yes" xml:space="preserve">
          <source>Version 119 should usually only be used when the number of variables exceeds the capacity of dta format 118. Exporting smaller datasets in format 119 may have unintended consequences, and, as of November 2020, Stata SE cannot read version 119 files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ef3b0bdcedcf3fbea2d515d1b0ebbecfcaa900" translate="yes" xml:space="preserve">
          <source>Version control, Git, and GitHub</source>
          <target state="translated">Control de versiones,Git y GitHub</target>
        </trans-unit>
        <trans-unit id="7a7b56d30f25c644c7188c5fb7535acb7aa2fb89" translate="yes" xml:space="preserve">
          <source>Version to use in the output dta file. Set to None to let pandas decide between 118 or 119 formats depending on the number of columns in the frame. Version 114 can be read by Stata 10 and later. Version 117 can be read by Stata 13 or later. Version 118 is supported in Stata 14 and later. Version 119 is supported in Stata 15 and later. Version 114 limits string variables to 244 characters or fewer while versions 117 and later allow strings with lengths up to 2,000,000 characters. Versions 118 and 119 support Unicode characters, and version 119 supports more than 32,767 variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29de7db8d5812e540e315bc3efa1e371e9df3d39" translate="yes" xml:space="preserve">
          <source>Version to use in the output dta file. Version 114 can be used read by Stata 10 and later. Version 117 can be read by Stata 13 or later. Version 114 limits string variables to 244 characters or fewer while 117 allows strings with lengths up to 2,000,000 characters.</source>
          <target state="translated">Versión para usar en el archivo dta de salida.La versión 114 puede ser usada para ser leída por Stata 10 y posteriores.La versión 117 puede ser leída por Stata 13 o posterior.La versión 114 limita las variables de cadena a 244 caracteres o menos,mientras que la 117 permite cadenas con longitudes de hasta 2.000.000 de caracteres.</target>
        </trans-unit>
        <trans-unit id="b1374fde18759eaa0fd694d2f9018fb37c97993f" translate="yes" xml:space="preserve">
          <source>Vertical bar plot.</source>
          <target state="translated">Trazado de barras verticales.</target>
        </trans-unit>
        <trans-unit id="d85295bcca463212897322a96c33f1b6b9b69d07" translate="yes" xml:space="preserve">
          <source>Very large DataFrames will be truncated to display them in the console. You can also get a summary using &lt;a href=&quot;../reference/api/pandas.dataframe.info#pandas.DataFrame.info&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;. (Here I am reading a CSV version of the &lt;strong&gt;baseball&lt;/strong&gt; dataset from the &lt;strong&gt;plyr&lt;/strong&gt; R package):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaf87381353dc5103c9469450ddd93a9997ec00" translate="yes" xml:space="preserve">
          <source>Video tutorials</source>
          <target state="translated">Tutoriales de vídeo</target>
        </trans-unit>
        <trans-unit id="6a06e8495189132db418ae810fb661ffa7c56ba6" translate="yes" xml:space="preserve">
          <source>Viewing data</source>
          <target state="translated">Ver los datos</target>
        </trans-unit>
        <trans-unit id="c19082998559bbf6a4efdc11bac454f59a89da6d" translate="yes" xml:space="preserve">
          <source>Viewing the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb0214cbca096c30b3e1b6363cfdc4fffea8dc7" translate="yes" xml:space="preserve">
          <source>Viewing the first 5 lines</source>
          <target state="translated">Viendo las primeras 5 líneas</target>
        </trans-unit>
        <trans-unit id="463eb436d42f4ede4837191a5786c727d132d5d6" translate="yes" xml:space="preserve">
          <source>Viewing the first &lt;code&gt;n&lt;/code&gt; lines (three in this case)</source>
          <target state="translated">Ver las primeras &lt;code&gt;n&lt;/code&gt; l&amp;iacute;neas (tres en este caso)</target>
        </trans-unit>
        <trans-unit id="6b4d5e57f4d2959d3d0973ae23c2ac9a72150b42" translate="yes" xml:space="preserve">
          <source>Viewing the last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86e126d0ee23eb31efc593bf9013dc73169413c" translate="yes" xml:space="preserve">
          <source>Viewing the last 5 lines</source>
          <target state="translated">Viendo las últimas 5 líneas</target>
        </trans-unit>
        <trans-unit id="ead17bf4f4e18d810e807eb0e7f35c49ac39da7d" translate="yes" xml:space="preserve">
          <source>Viewing the last &lt;code&gt;n&lt;/code&gt; lines (three in this case)</source>
          <target state="translated">Ver las &amp;uacute;ltimas &lt;code&gt;n&lt;/code&gt; l&amp;iacute;neas (tres en este caso)</target>
        </trans-unit>
        <trans-unit id="d175985b87dd9f620aa960059c730b4a35e3bcb5" translate="yes" xml:space="preserve">
          <source>Visualization</source>
          <target state="translated">Visualization</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="d0185ac5e26dc3039f379fab71af88edef58c5df" translate="yes" xml:space="preserve">
          <source>W-FRI</source>
          <target state="translated">W-FRI</target>
        </trans-unit>
        <trans-unit id="fab74c2f00b8351224cdc949a417477b4242fb87" translate="yes" xml:space="preserve">
          <source>W-MON</source>
          <target state="translated">W-MON</target>
        </trans-unit>
        <trans-unit id="f88f4f559456924c9c3ba25eda3c218b6b9f6f3e" translate="yes" xml:space="preserve">
          <source>W-SAT</source>
          <target state="translated">W-SAT</target>
        </trans-unit>
        <trans-unit id="f23f67c6027c067e2c85341c78c16953d4c619b8" translate="yes" xml:space="preserve">
          <source>W-SUN</source>
          <target state="translated">W-SUN</target>
        </trans-unit>
        <trans-unit id="20eee65ad67282df9f6aeb20e1d2c3abc9943c6c" translate="yes" xml:space="preserve">
          <source>W-THU</source>
          <target state="translated">W-THU</target>
        </trans-unit>
        <trans-unit id="a02a5362762777f8ca2637958768ef9151f60e52" translate="yes" xml:space="preserve">
          <source>W-TUE</source>
          <target state="translated">W-TUE</target>
        </trans-unit>
        <trans-unit id="715a03b1a9317cf2d531aa85eefd0a2b6acccc87" translate="yes" xml:space="preserve">
          <source>W-WED</source>
          <target state="translated">W-WED</target>
        </trans-unit>
        <trans-unit id="1c255b91e71a2fddc2e75f8455387053d412a4c1" translate="yes" xml:space="preserve">
          <source>WHERE</source>
          <target state="translated">WHERE</target>
        </trans-unit>
        <trans-unit id="6828afe8852386b4788c39621501c1d447ab8e44" translate="yes" xml:space="preserve">
          <source>Walk the pytables group hierarchy for pandas objects</source>
          <target state="translated">Recorre la jerarquía del grupo de pytables para los objetos de los pandas</target>
        </trans-unit>
        <trans-unit id="8ccd7060dc01ce4fc1198fa1ed08b7bf5dccffe6" translate="yes" xml:space="preserve">
          <source>Walk the pytables group hierarchy for pandas objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="f54fb6564205106225f29a0276104f0da779aa78" translate="yes" xml:space="preserve">
          <source>Warning for attribute conflicts in accessor registration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d6d7ccd9fe97a47017194dae5a70a5c0021832" translate="yes" xml:space="preserve">
          <source>Warning raised when reading a file that doesn&amp;rsquo;t use the default &amp;lsquo;c&amp;rsquo; parser.</source>
          <target state="translated">Se genera una advertencia al leer un archivo que no usa el analizador 'c' predeterminado.</target>
        </trans-unit>
        <trans-unit id="0caaadb5d2e8fec36befa4dce65e6bd578408214" translate="yes" xml:space="preserve">
          <source>Warning raised when reading different dtypes in a column from a file.</source>
          <target state="translated">Advertencia planteada cuando se leen diferentes tipos en una columna de un archivo.</target>
        </trans-unit>
        <trans-unit id="b5e348be328d880004677a8cd21158198283f29e" translate="yes" xml:space="preserve">
          <source>Warning raised when there is a possible performance impact.</source>
          <target state="translated">Advertencia planteada cuando hay un posible impacto en el rendimiento.</target>
        </trans-unit>
        <trans-unit id="2229aba6da05b699c545f4ad976bbbac370b52e6" translate="yes" xml:space="preserve">
          <source>Warning: Starting in 0.20.0, the .ix indexer is deprecated, in favor of the more strict .iloc and .loc indexers.</source>
          <target state="translated">Advertencia:A partir de 0.20.0,el indexador .ix está desaprobado,en favor de los más estrictos indexadores .iloc y .loc.</target>
        </trans-unit>
        <trans-unit id="f16aa3be99fc50d1603498ebbc66eb83c2de49d8" translate="yes" xml:space="preserve">
          <source>Warning: yearfirst=True is not strict, but will prefer to parse with year first (this is a known bug, based on dateutil behavior).</source>
          <target state="translated">Advertencia:yearfirst=True no es estricto,pero preferirá parsear con el año primero (este es un error conocido,basado en el comportamiento de dateutil).</target>
        </trans-unit>
        <trans-unit id="63d2a494201c2d726c62af93601b975a9a95c61e" translate="yes" xml:space="preserve">
          <source>We &amp;ldquo;append&amp;rdquo; the parent docstring to the children docstrings, which are initially empty.</source>
          <target state="translated">&quot;Agregamos&quot; la cadena de documentos principal a las cadenas de documentos secundarias, que inicialmente est&amp;aacute;n vac&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="40410b0638954666aa32914003df80b8c40b6382" translate="yes" xml:space="preserve">
          <source>We &lt;em&gt;highly&lt;/em&gt; recommend using keyword arguments to clarify your intent.</source>
          <target state="translated">Nosotros &lt;em&gt;altamente&lt;/em&gt; recomendamos el uso de argumentos de palabra clave para aclarar su intenci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2d172c75c602ef576472c1f2b67f190b3873415b" translate="yes" xml:space="preserve">
          <source>We &lt;strong&gt;highly encourage&lt;/strong&gt; you to read the &lt;a href=&quot;#io-html-gotchas&quot;&gt;HTML Table Parsing gotchas&lt;/a&gt; below regarding the issues surrounding the BeautifulSoup4/html5lib/lxml parsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a186984f567f59ddc2d14c3debf4f75591758f" translate="yes" xml:space="preserve">
          <source>We achieve our result by using &lt;code&gt;apply&lt;/code&gt; (row-wise):</source>
          <target state="translated">Logramos nuestro resultado usando &lt;code&gt;apply&lt;/code&gt; (en filas):</target>
        </trans-unit>
        <trans-unit id="1ed1b9bd1cbf8047710697bbbcd03706363e983b" translate="yes" xml:space="preserve">
          <source>We aim to make operations like this natural and easy to express using pandas. We&amp;rsquo;ll address each area of GroupBy functionality then provide some non-trivial examples / use cases.</source>
          <target state="translated">Nuestro objetivo es hacer que operaciones como esta sean naturales y f&amp;aacute;ciles de expresar con pandas. Abordaremos cada &amp;aacute;rea de la funcionalidad de GroupBy y luego proporcionaremos algunos ejemplos / casos de uso no triviales.</target>
        </trans-unit>
        <trans-unit id="c6483f86bcee89a4e6655b5a3666ca4c64eaa582" translate="yes" xml:space="preserve">
          <source>We are able to preserve the join keys:</source>
          <target state="translated">Somos capaces de preservar las claves de unión:</target>
        </trans-unit>
        <trans-unit id="a373f8540c91612586e8267b03ce8fe608d074fa" translate="yes" xml:space="preserve">
          <source>We are now passing ndarrays into the Cython function, fortunately Cython plays very nicely with NumPy.</source>
          <target state="translated">Ahora estamos pasando los ndarrays a la función de Cython,afortunadamente Cython juega muy bien con NumPy.</target>
        </trans-unit>
        <trans-unit id="88aa72652999c1e6b3a6cf6ea396b5b8a4b4ddc0" translate="yes" xml:space="preserve">
          <source>We are stopping on the included end-point as it is part of the index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e346edd3152c787dac5fda7794ede708693d2428" translate="yes" xml:space="preserve">
          <source>We can &amp;lsquo;explode&amp;rsquo; the &lt;code&gt;values&lt;/code&gt; column, transforming each list-like to a separate row, by using &lt;a href=&quot;../reference/api/pandas.series.explode#pandas.Series.explode&quot;&gt;&lt;code&gt;explode()&lt;/code&gt;&lt;/a&gt;. This will replicate the index values from the original row:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac7d534408b3cf6069d979fdc019f340f25aae8" translate="yes" xml:space="preserve">
          <source>We can add a new column using &lt;code&gt;pd.eval&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a106ee9ee5fc484d6459ef08e098101bb07f05" translate="yes" xml:space="preserve">
          <source>We can add another object to the same file:</source>
          <target state="translated">Podemos añadir otro objeto al mismo archivo:</target>
        </trans-unit>
        <trans-unit id="ac04ea9c6184cade333734d28f514a8f8fbb4dc6" translate="yes" xml:space="preserve">
          <source>We can also calculate multiple types of aggregations for any given value column.</source>
          <target state="translated">También podemos calcular múltiples tipos de agregaciones para cualquier columna de valores.</target>
        </trans-unit>
        <trans-unit id="162470944ce5d0a98895112aefa8a7bca4e5796c" translate="yes" xml:space="preserve">
          <source>We can also choose to include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b80fa2d9a19374ec82c03c9255dcfe72c6c856" translate="yes" xml:space="preserve">
          <source>We can also choose to include NA in group keys or not by setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200a6d0ec834fef8785a1f185e198285ecf02963" translate="yes" xml:space="preserve">
          <source>We can also do elementwise &lt;a href=&quot;https://docs.python.org/3/library/functions.html#divmod&quot;&gt;&lt;code&gt;divmod()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cbf1fe15ace34103263040c3a59538cd016472" translate="yes" xml:space="preserve">
          <source>We can also fill missing values using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87360ec2fd2fefde8583136215f4dc6c480752ae" translate="yes" xml:space="preserve">
          <source>We can also fill missing values using the &lt;code&gt;fill_value&lt;/code&gt; parameter.</source>
          <target state="translated">Tambi&amp;eacute;n podemos completar los valores faltantes usando el par&amp;aacute;metro &lt;code&gt;fill_value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8d2801be0ec72e0644b98f6e8a036fd113a9d96" translate="yes" xml:space="preserve">
          <source>We can also pass infinite values to define the bins:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156fb36c789c309e5948d09d7a9667add0e2bd6b" translate="yes" xml:space="preserve">
          <source>We can also perform multiple aggregations. For example, to perform both a &lt;code&gt;sum&lt;/code&gt; and &lt;code&gt;mean&lt;/code&gt;, we can pass in a list to the &lt;code&gt;aggfunc&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64aeda62d8005aa7d59f745caaa3e320b51c1126" translate="yes" xml:space="preserve">
          <source>We can also propagate non-null values forward or backward.</source>
          <target state="translated">También podemos propagar valores no nulos hacia adelante o hacia atrás.</target>
        </trans-unit>
        <trans-unit id="82e094e1c0d9f69faaabb170a1191ebc8e9eec6c" translate="yes" xml:space="preserve">
          <source>We can also reindex the columns.</source>
          <target state="translated">También podemos reindexar las columnas.</target>
        </trans-unit>
        <trans-unit id="9b945ad4a57c65b50ac79b1b75b160ec81a2c785" translate="yes" xml:space="preserve">
          <source>We can also visually compare the original and transformed data sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dc753a4128e81d76771121d4aa39a66028f5e9" translate="yes" xml:space="preserve">
          <source>We can convert it to a monthly frequency. Using the &lt;code&gt;how&lt;/code&gt; parameter, we can specify whether to return the starting or ending month:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e870113b1e10863fae2281b438d078609f5cafe" translate="yes" xml:space="preserve">
          <source>We can easily visualize this with a boxplot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9241fe13d125c92fedc43f30dfef36a64e1f2d" translate="yes" xml:space="preserve">
          <source>We can fill in the missing values by passing a value to the keyword &lt;code&gt;fill_value&lt;/code&gt;. Because the index is not monotonically increasing or decreasing, we cannot use arguments to the keyword &lt;code&gt;method&lt;/code&gt; to fill the &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">Podemos completar los valores faltantes pasando un valor a la palabra clave &lt;code&gt;fill_value&lt;/code&gt; . Debido a que el &amp;iacute;ndice no aumenta ni disminuye de manera mon&amp;oacute;tona, no podemos usar argumentos para el &lt;code&gt;method&lt;/code&gt; palabra clave para completar los valores de &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c422f38e7c3e278fa8c90e638b9bcc37685040a4" translate="yes" xml:space="preserve">
          <source>We can get around this using &lt;code&gt;dialect&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186b796ce34e3dd1de8daa9ce6b1f3821a58e367" translate="yes" xml:space="preserve">
          <source>We can go a bit further and downcast the numeric columns to their smallest types using &lt;a href=&quot;../reference/api/pandas.to_numeric#pandas.to_numeric&quot;&gt;&lt;code&gt;pandas.to_numeric()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d6371ce39c911936a574b3eabfccd647fda6c7" translate="yes" xml:space="preserve">
          <source>We can groupby different levels of a hierarchical index using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2db2a6808bec614370b1c7f957b27eab347d6e" translate="yes" xml:space="preserve">
          <source>We can groupby different levels of a hierarchical index using the &lt;code&gt;level&lt;/code&gt; parameter:</source>
          <target state="translated">Podemos agrupar por diferentes niveles de un &amp;iacute;ndice jer&amp;aacute;rquico usando el par&amp;aacute;metro de &lt;code&gt;level&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d212416e72db7b3fe0816b066e7b1c01859e81a6" translate="yes" xml:space="preserve">
          <source>We can instead only resample those groups where we have points as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881823f4cc1b07ee904d3e65148bd383da7aa9bf" translate="yes" xml:space="preserve">
          <source>We can omit the index by passing the keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea76065de2e7d6e780d0ab25da750642d1b5e388" translate="yes" xml:space="preserve">
          <source>We can omit the the index by passing the keyword &lt;code&gt;index&lt;/code&gt; and setting it to false.</source>
          <target state="translated">Podemos omitir el &amp;iacute;ndice pasando el &lt;code&gt;index&lt;/code&gt; palabras clave y estableci&amp;eacute;ndolo en falso.</target>
        </trans-unit>
        <trans-unit id="f4216328b386bcfb0c23bf478ea718428f080dcf" translate="yes" xml:space="preserve">
          <source>We can produce pivot tables from this data very easily:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d315c0790d567f4b72deb7c384c646ba85207f5" translate="yes" xml:space="preserve">
          <source>We can see that we got the same content back, which we had earlier written to the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9183e424a85b6833b88ee1f5e464cab84c6ee889" translate="yes" xml:space="preserve">
          <source>We can select a specific column or columns using standard getitem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6300ac5ed71bdb6b9fdf83eebe383dd22cd32d7" translate="yes" xml:space="preserve">
          <source>We can specify colors for each column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89e36469b14c8152bb2da3b6f21e0d424344f32" translate="yes" xml:space="preserve">
          <source>We can suppress the comments using the &lt;code&gt;comment&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab7a1b9f6ba10e309dcf24b1adcf4590d1499b4" translate="yes" xml:space="preserve">
          <source>We can then group by one of the levels in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f498793430e40e734f6b029133f48e3818406fc1" translate="yes" xml:space="preserve">
          <source>We can use indexed DataFrames as well.</source>
          <target state="translated">También podemos usar DataFrames indexados.</target>
        </trans-unit>
        <trans-unit id="e1c005f23e75b1614c70640e3d107c2700002668" translate="yes" xml:space="preserve">
          <source>We can use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6a0d5fe6e8e2306b0ef84dd3d8cb816cddd0d5" translate="yes" xml:space="preserve">
          <source>We can use the &lt;code&gt;drop&lt;/code&gt; parameter to avoid the old index being added as a column:</source>
          <target state="translated">Podemos usar el par&amp;aacute;metro &lt;code&gt;drop&lt;/code&gt; para evitar que el &amp;iacute;ndice antiguo se agregue como columna:</target>
        </trans-unit>
        <trans-unit id="94ca8f806251ba49636ef80b4aefb66402c3c9da" translate="yes" xml:space="preserve">
          <source>We can verify that the group means have not changed in the transformed data and that the transformed data contains no NAs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b51bf72462c8fdc6b8ba3f51caf188ae2aa3565" translate="yes" xml:space="preserve">
          <source>We create a frame similar to the one used in the above sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ec436c366e4e9876176a65085a94783330320f" translate="yes" xml:space="preserve">
          <source>We demonstrate how to use Numba to just-in-time compile our code. We simply take the plain Python code from above and annotate with the &lt;code&gt;@jit&lt;/code&gt; decorator.</source>
          <target state="translated">Demostramos c&amp;oacute;mo usar Numba para compilar nuestro c&amp;oacute;digo justo a tiempo. Simplemente tomamos el c&amp;oacute;digo Python simple de arriba y anotamos con el decorador &lt;code&gt;@jit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="208d18ee73d660cbd56f96d3fe8eb575be40e323" translate="yes" xml:space="preserve">
          <source>We distinguish the &lt;em&gt;display&lt;/em&gt; value from the &lt;em&gt;actual&lt;/em&gt; value in &lt;code&gt;Styler&lt;/code&gt;. To control the display value, the text is printed in each cell, use &lt;code&gt;Styler.format&lt;/code&gt;. Cells can be formatted according to a &lt;a href=&quot;https://docs.python.org/3/library/string.html#format-specification-mini-language&quot;&gt;format spec string&lt;/a&gt; or a callable that takes a single value and returns a string.</source>
          <target state="translated">Distinguimos el valor de &lt;em&gt;visualizaci&amp;oacute;n del&lt;/em&gt; valor &lt;em&gt;real&lt;/em&gt; en &lt;code&gt;Styler&lt;/code&gt; . Para controlar el valor de visualizaci&amp;oacute;n, el texto se imprime en cada celda, use &lt;code&gt;Styler.format&lt;/code&gt; . Las celdas se pueden formatear de acuerdo con una &lt;a href=&quot;https://docs.python.org/3/library/string.html#format-specification-mini-language&quot;&gt;cadena de especificaciones de formato&lt;/a&gt; o un invocable que toma un solo valor y devuelve una cadena.</target>
        </trans-unit>
        <trans-unit id="53d95540e955064e56294b28dcea80af21767625" translate="yes" xml:space="preserve">
          <source>We encourage you to use method chains to build up a style piecewise, before finally rending at the end of the chain.</source>
          <target state="translated">Le animamos a usar cadenas de métodos para construir un estilo a destajo,antes de finalmente desgarrar el final de la cadena.</target>
        </trans-unit>
        <trans-unit id="cc766c2cf7f07925f3683806db7fc0d4cd23b017" translate="yes" xml:space="preserve">
          <source>We get another huge improvement simply by providing type information:</source>
          <target state="translated">Conseguimos otra gran mejora simplemente proporcionando información de tipo:</target>
        </trans-unit>
        <trans-unit id="bd2d7c462734bc530b7d66fddb1c1dd7279aa788" translate="yes" xml:space="preserve">
          <source>We have a &lt;code&gt;DataFrame&lt;/code&gt; to which we want to apply a function row-wise.</source>
          <target state="translated">Tenemos un &lt;code&gt;DataFrame&lt;/code&gt; al que queremos aplicar una funci&amp;oacute;n por filas.</target>
        </trans-unit>
        <trans-unit id="284cfed2ea213bc690e73e682720d9dae4e35537" translate="yes" xml:space="preserve">
          <source>We have discussed &lt;code&gt;MultiIndex&lt;/code&gt; in the previous sections pretty extensively. Documentation about &lt;code&gt;DatetimeIndex&lt;/code&gt; and &lt;code&gt;PeriodIndex&lt;/code&gt; are shown &lt;a href=&quot;timeseries#timeseries-overview&quot;&gt;here&lt;/a&gt;, and documentation about &lt;code&gt;TimedeltaIndex&lt;/code&gt; is found &lt;a href=&quot;timedeltas#timedeltas-index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7773bd8987b3ee52919f22acbd1ad73808db05c1" translate="yes" xml:space="preserve">
          <source>We have duplicates in the columns. If we slice &lt;code&gt;'B'&lt;/code&gt;, we get back a &lt;code&gt;Series&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2c8060afbf10ed1619ff7273a95c4e111fca22" translate="yes" xml:space="preserve">
          <source>We have two autosummary templates for classes.</source>
          <target state="translated">Tenemos dos plantillas de autosuministro para las clases.</target>
        </trans-unit>
        <trans-unit id="cf58221e02bb5a8b76e3928ba63b1b6ae799d7ae" translate="yes" xml:space="preserve">
          <source>We highly recommend validating the data in your accessor&amp;rsquo;s &lt;code&gt;__init__&lt;/code&gt;. In our &lt;code&gt;GeoAccessor&lt;/code&gt;, we validate that the data contains the expected columns, raising an &lt;code&gt;AttributeError&lt;/code&gt; when the validation fails. For a &lt;code&gt;Series&lt;/code&gt; accessor, you should validate the &lt;code&gt;dtype&lt;/code&gt; if the accessor applies only to certain dtypes.</source>
          <target state="translated">Recomendamos encarecidamente validar los datos en el &lt;code&gt;__init__&lt;/code&gt; de su acceso . En nuestro &lt;code&gt;GeoAccessor&lt;/code&gt; , validamos que los datos contienen las columnas esperadas, generando un &lt;code&gt;AttributeError&lt;/code&gt; cuando falla la validaci&amp;oacute;n. Para un &lt;code&gt;dtype&lt;/code&gt; acceso &lt;code&gt;Series&lt;/code&gt; , debe validar el tipo de acceso si el descriptor de acceso se aplica solo a ciertos tipos de acceso.</target>
        </trans-unit>
        <trans-unit id="3ed7b82acd413bfcecfc36557b40cd808b80f708" translate="yes" xml:space="preserve">
          <source>We illustrate these fill methods on a simple Series:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478526087bc925570ad3f135531d1297bf8a5538" translate="yes" xml:space="preserve">
          <source>We may take elements using negative integers for positive indices, starting from the end of the object, just like with Python lists.</source>
          <target state="translated">Podemos tomar elementos usando números enteros negativos para los índices positivos,empezando por el final del objeto,como en las listas de Python.</target>
        </trans-unit>
        <trans-unit id="0848c3f923c126e1c7028e1a6a867079338b0f36" translate="yes" xml:space="preserve">
          <source>We only asof within 10ms between the quote time and the trade time and we exclude exact matches on time. However &lt;em&gt;prior&lt;/em&gt; data will propagate forward</source>
          <target state="translated">Solo contamos con un plazo de 10 ms entre el tiempo de cotizaci&amp;oacute;n y el tiempo de negociaci&amp;oacute;n y excluimos las coincidencias exactas a tiempo. Sin embargo, los datos &lt;em&gt;anteriores&lt;/em&gt; se propagar&amp;aacute;n hacia adelante.</target>
        </trans-unit>
        <trans-unit id="003b043e804ba30c987396676334e8461e16eb4d" translate="yes" xml:space="preserve">
          <source>We only asof within 2ms between the quote time and the trade time</source>
          <target state="translated">Sólo estamos dentro de los 2ms entre el tiempo de cotización y el tiempo de comercio</target>
        </trans-unit>
        <trans-unit id="d1c8046eb0eb9cd43e630571ca4fa874b5b55682" translate="yes" xml:space="preserve">
          <source>We only asof within &lt;code&gt;10ms&lt;/code&gt; between the quote time and the trade time and we exclude exact matches on time. Note that though we exclude the exact matches (of the quotes), prior quotes &lt;strong&gt;do&lt;/strong&gt; propagate to that point in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474598673caf759e745b802fe481b161f8ddec6e" translate="yes" xml:space="preserve">
          <source>We only asof within &lt;code&gt;2ms&lt;/code&gt; between the quote time and the trade time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5034f2430ad087894b302fc0f992003722338c04" translate="yes" xml:space="preserve">
          <source>We prefer this to the &lt;code&gt;pytest.warns&lt;/code&gt; context manager because ours checks that the warning&amp;rsquo;s stacklevel is set correctly. The stacklevel is what ensure the &lt;em&gt;user&amp;rsquo;s&lt;/em&gt; file name and line number is printed in the warning, rather than something internal to pandas. It represents the number of function calls from user code (e.g. &lt;code&gt;df.some_operation()&lt;/code&gt;) to the function that actually emits the warning. Our linter will fail the build if you use &lt;code&gt;pytest.warns&lt;/code&gt; in a test.</source>
          <target state="translated">Preferimos esto al &lt;code&gt;pytest.warns&lt;/code&gt; contexto pytest.warns porque el nuestro verifica que el nivel de pila de la advertencia est&amp;eacute; configurado correctamente. El nivel de pila es lo que garantiza que el nombre de archivo &lt;em&gt;del usuario&lt;/em&gt; y el n&amp;uacute;mero de l&amp;iacute;nea se impriman en la advertencia, en lugar de algo interno a pandas. Representa el n&amp;uacute;mero de llamadas a funciones desde el c&amp;oacute;digo de usuario (por ejemplo, &lt;code&gt;df.some_operation()&lt;/code&gt; ) a la funci&amp;oacute;n que realmente emite la advertencia. Nuestro linter fallar&amp;aacute; la compilaci&amp;oacute;n si usa &lt;code&gt;pytest.warns&lt;/code&gt; en una prueba.</target>
        </trans-unit>
        <trans-unit id="a2a346cabec464372f5c364312efebce73c40713" translate="yes" xml:space="preserve">
          <source>We provide a test suite for ensuring that your extension arrays satisfy the expected behavior. To use the test suite, you must provide several pytest fixtures and inherit from the base test class. The required fixtures are found in &lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py&quot;&gt;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py&lt;/a&gt;.</source>
          <target state="translated">Proporcionamos un conjunto de pruebas para garantizar que sus matrices de extensi&amp;oacute;n satisfagan el comportamiento esperado. Para usar el conjunto de pruebas, debe proporcionar varios accesorios de pytest y heredar de la clase de prueba base. Los accesorios necesarios se encuentran en &lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py&quot;&gt;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14ebc5add8747fa524d5294d47d6e0850ea2acfb" translate="yes" xml:space="preserve">
          <source>We provide the basics in pandas to easily create decent looking plots. See the &lt;a href=&quot;../ecosystem#ecosystem-visualization&quot;&gt;ecosystem&lt;/a&gt; section for visualization libraries that go beyond the basics documented here.</source>
          <target state="translated">Proporcionamos lo b&amp;aacute;sico en pandas para crear f&amp;aacute;cilmente parcelas de aspecto decente. Consulte la secci&amp;oacute;n de &lt;a href=&quot;../ecosystem#ecosystem-visualization&quot;&gt;ecosistemas&lt;/a&gt; para ver las bibliotecas de visualizaci&amp;oacute;n que van m&amp;aacute;s all&amp;aacute; de los conceptos b&amp;aacute;sicos documentados aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="5c6887aa3dd174e9af2942ea171ae7f476b15803" translate="yes" xml:space="preserve">
          <source>We provide the basics in pandas to easily create decent looking plots. See the &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/ecosystem.html#ecosystem-visualization&quot;&gt;ecosystem&lt;/a&gt; section for visualization libraries that go beyond the basics documented here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d8b1f2d03c61b7488ecb7a4d65c26d8366e50e" translate="yes" xml:space="preserve">
          <source>We recommend explicitly providing the dtype to avoid confusion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71471e8a73c3eac8bb244fd834a144b6be2e114f" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt;&lt;code&gt;StringDtype&lt;/code&gt;&lt;/a&gt; to store text data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69ceb5e57e445fd190ca4c6b1a5e68b0997ff79" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;DataFrame.to_numpy()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Recomendamos usar &lt;a href=&quot;pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt; &lt;code&gt;DataFrame.to_numpy()&lt;/code&gt; &lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="08dc82107227f4b06511ee512fd1de9e67e10e7a" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;pandas.index.array#pandas.Index.array&quot;&gt;&lt;code&gt;Index.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.index.to_numpy#pandas.Index.to_numpy&quot;&gt;&lt;code&gt;Index.to_numpy()&lt;/code&gt;&lt;/a&gt;, depending on whether you need a reference to the underlying data or a NumPy array.</source>
          <target state="translated">Recomendamos usar &lt;a href=&quot;pandas.index.array#pandas.Index.array&quot;&gt; &lt;code&gt;Index.array&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;pandas.index.to_numpy#pandas.Index.to_numpy&quot;&gt; &lt;code&gt;Index.to_numpy()&lt;/code&gt; &lt;/a&gt; , dependiendo de si necesita una referencia a los datos subyacentes o una matriz NumPy.</target>
        </trans-unit>
        <trans-unit id="0f363c695d7e2853e48d9b3e349263190ee6e414" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt;&lt;code&gt;Series.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt;, depending on whether you need a reference to the underlying data or a NumPy array.</source>
          <target state="translated">Recomendamos usar &lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt; &lt;code&gt;Series.array&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; , dependiendo de si necesita una referencia a los datos subyacentes o una matriz NumPy.</target>
        </trans-unit>
        <trans-unit id="276dd17c9a587dd025fd8054ad2d688939f2a70a" translate="yes" xml:space="preserve">
          <source>We represent an IntegerArray with 2 numpy arrays:</source>
          <target state="translated">Representamos un Array de Enteros con 2 matrices numéricas:</target>
        </trans-unit>
        <trans-unit id="65b6958e7f96df637807ce07ff54fa299e5f56ea" translate="yes" xml:space="preserve">
          <source>We subtract the epoch (midnight at January 1, 1970 UTC) and then floor divide by the &amp;ldquo;unit&amp;rdquo; (1 second).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ae22e64054eee4edde3abf3637ceadcd56f3de" translate="yes" xml:space="preserve">
          <source>We use the standard convention for referencing the matplotlib API:</source>
          <target state="translated">Utilizamos la convención estándar para referirnos a la API de matplotlib:</target>
        </trans-unit>
        <trans-unit id="653d09efadb6b3debd7657a04d60d9ed86346113" translate="yes" xml:space="preserve">
          <source>We will address array-based indexing like &lt;code&gt;s[[4, 3, 1]]&lt;/code&gt; in &lt;a href=&quot;indexing#indexing&quot;&gt;section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dbe01345f15c02b98a155e4e87733803a9b84a" translate="yes" xml:space="preserve">
          <source>We will demonstrate how to manage these issues independently, though they can be handled simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23edeb09cb6ac75ac0b40d6eb9dfcc02bcfaf09" translate="yes" xml:space="preserve">
          <source>We will demonstrate the basics, see the &lt;a href=&quot;cookbook#cookbook-plotting&quot;&gt;cookbook&lt;/a&gt; for some advanced strategies.</source>
          <target state="translated">Demostraremos los conceptos b&amp;aacute;sicos, consulte el &lt;a href=&quot;cookbook#cookbook-plotting&quot;&gt;libro&lt;/a&gt; de cocina para conocer algunas estrategias avanzadas.</target>
        </trans-unit>
        <trans-unit id="daf8c563868f44b0272e8d5cc7a778f770775082" translate="yes" xml:space="preserve">
          <source>We will use a similar starting frame from above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1f5f707fa252d49cc9bf0c53fb482c902ce099" translate="yes" xml:space="preserve">
          <source>We would expect the result to now have mean 0 and standard deviation 1 within each group, which we can easily check:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fbc6434257f2f77eecff50e5a1cd034e70b66f" translate="yes" xml:space="preserve">
          <source>We would name this file &lt;code&gt;test_cool_feature.py&lt;/code&gt; and put in an appropriate place in the &lt;code&gt;pandas/tests/&lt;/code&gt; structure.</source>
          <target state="translated">&lt;code&gt;test_cool_feature.py&lt;/code&gt; este archivo test_cool_feature.py y lo pondr&amp;iacute;amos en un lugar apropiado en la estructura &lt;code&gt;pandas/tests/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89ed8c16ecef55c94f5e4643f3e18e6dc2043d65" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;d like to make it easier for users to find these projects, if you know of other substantial projects that you feel should be on this list, please let us know.</source>
          <target state="translated">Nos gustar&amp;iacute;a facilitar a los usuarios la b&amp;uacute;squeda de estos proyectos, si conoce otros proyectos importantes que cree que deber&amp;iacute;an estar en esta lista, h&amp;aacute;ganoslo saber.</target>
        </trans-unit>
        <trans-unit id="1f0d4a40c311d765600587cc6f63c4e10e3eafe9" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll give a brief intro to the data structures, then consider all of the broad categories of functionality and methods in separate sections.</source>
          <target state="translated">Daremos una breve introducci&amp;oacute;n a las estructuras de datos, luego consideraremos todas las categor&amp;iacute;as amplias de funcionalidad y m&amp;eacute;todos en secciones separadas.</target>
        </trans-unit>
        <trans-unit id="8496f6a9354dcb08493a2cb263beee263bcffbc2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll import &lt;code&gt;dask.dataframe&lt;/code&gt; and notice that the API feels similar to pandas. We can use Dask&amp;rsquo;s &lt;code&gt;read_parquet&lt;/code&gt; function, but provide a globstring of files to read in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae5eccc0c4a556e2b48bb680bd279db55b8dde2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll now kick off a three-step process:</source>
          <target state="translated">Ahora iniciaremos un proceso de tres pasos:</target>
        </trans-unit>
        <trans-unit id="10e6bd615616d3dd1d8b14add5672ae8746d449e" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll rewrite our &lt;code&gt;highlight-max&lt;/code&gt; to handle either Series (from &lt;code&gt;.apply(axis=0 or 1)&lt;/code&gt;) or DataFrames (from &lt;code&gt;.apply(axis=None)&lt;/code&gt;). We&amp;rsquo;ll also allow the color to be adjustable, to demonstrate that &lt;code&gt;.apply&lt;/code&gt;, and &lt;code&gt;.applymap&lt;/code&gt; pass along keyword arguments.</source>
          <target state="translated">Reescribiremos nuestro &lt;code&gt;highlight-max&lt;/code&gt; para manejar Series (de &lt;code&gt;.apply(axis=0 or 1)&lt;/code&gt; ) o DataFrames (de &lt;code&gt;.apply(axis=None)&lt;/code&gt; ). Tambi&amp;eacute;n permitiremos que el color sea ajustable, para demostrar que &lt;code&gt;.apply&lt;/code&gt; y &lt;code&gt;.applymap&lt;/code&gt; transmiten argumentos de palabras clave.</target>
        </trans-unit>
        <trans-unit id="159d163fa57bcd0b14d3f4978b201602523dd7f1" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll start off with a quick reference guide pairing some common R operations using &lt;a href=&quot;https://cran.r-project.org/package=dplyr&quot;&gt;dplyr&lt;/a&gt; with pandas equivalents.</source>
          <target state="translated">Comenzaremos con una gu&amp;iacute;a de referencia r&amp;aacute;pida que combina algunas operaciones R comunes usando &lt;a href=&quot;https://cran.r-project.org/package=dplyr&quot;&gt;dplyr&lt;/a&gt; con equivalentes de pandas.</target>
        </trans-unit>
        <trans-unit id="0b6a81fdafac489ae42a2457199a41786380211d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll start with a quick, non-comprehensive overview of the fundamental data structures in pandas to get you started. The fundamental behavior about data types, indexing, and axis labeling / alignment apply across all of the objects. To get started, import NumPy and load pandas into your namespace:</source>
          <target state="translated">Comenzaremos con una descripci&amp;oacute;n general r&amp;aacute;pida y no completa de las estructuras de datos fundamentales en pandas para que pueda comenzar. El comportamiento fundamental sobre los tipos de datos, la indexaci&amp;oacute;n y el etiquetado / alineaci&amp;oacute;n de ejes se aplica a todos los objetos. Para comenzar, importe NumPy y cargue pandas en su espacio de nombres:</target>
        </trans-unit>
        <trans-unit id="dee2dc2b4d8d869b4a335a6c5f4e8c9bf8cc7b1a" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll use the following template:</source>
          <target state="translated">Usaremos la siguiente plantilla:</target>
        </trans-unit>
        <trans-unit id="479e0c4d9672ed96a65156668baa33e6eb046994" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve &amp;ldquo;sparsified&amp;rdquo; the higher levels of the indexes to make the console output a bit easier on the eyes. Note that how the index is displayed can be controlled using the &lt;code&gt;multi_sparse&lt;/code&gt; option in &lt;code&gt;pandas.set_options()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5e0503af0c2facdb698cddfc9ea5b96d482f65" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve gotten another big improvement. Let&amp;rsquo;s check again where the time is spent:</source>
          <target state="translated">Hemos obtenido otra gran mejora. Comprobemos de nuevo d&amp;oacute;nde se pasa el tiempo:</target>
        </trans-unit>
        <trans-unit id="f82be68a7fb4e7dec88f27463de94ad355242ee5" translate="yes" xml:space="preserve">
          <source>Week</source>
          <target state="translated">Week</target>
        </trans-unit>
        <trans-unit id="fe3f61ddecbabd9df7b81c596b0e344f7a9a1ef0" translate="yes" xml:space="preserve">
          <source>Week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.</source>
          <target state="translated">El número de la semana del año (el lunes como primer día de la semana)como un número decimal [00,53].Todos los días de un nuevo año que preceden al primer lunes se consideran en la semana 0.</target>
        </trans-unit>
        <trans-unit id="3aadb81eb1a1699671247b51c01b0cc44432b8bb" translate="yes" xml:space="preserve">
          <source>Week number of the year (Sunday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Sunday are considered to be in week 0.</source>
          <target state="translated">El número de la semana del año (el domingo como primer día de la semana)como un número decimal [00,53].Todos los días de un nuevo año que preceden al primer domingo se consideran en la semana 0.</target>
        </trans-unit>
        <trans-unit id="ae4d401c1a4f25ec8086ee891e99815d27c2ac1f" translate="yes" xml:space="preserve">
          <source>Week.apply()</source>
          <target state="translated">Week.apply()</target>
        </trans-unit>
        <trans-unit id="2ea63c38639d2f41feff58a8f5bee0c11f01d0ac" translate="yes" xml:space="preserve">
          <source>Week.apply_index()</source>
          <target state="translated">Week.apply_index()</target>
        </trans-unit>
        <trans-unit id="d399c7c8de3bbcd8117f8e6e94f590b4e71cd672" translate="yes" xml:space="preserve">
          <source>Week.base</source>
          <target state="translated">Week.base</target>
        </trans-unit>
        <trans-unit id="04afe26a45d8a8d73c09907bb58f218a67da3aab" translate="yes" xml:space="preserve">
          <source>Week.copy()</source>
          <target state="translated">Week.copy()</target>
        </trans-unit>
        <trans-unit id="fdb5f2fe37eb6fdfe12c399f6833723ea7e80e3b" translate="yes" xml:space="preserve">
          <source>Week.freqstr</source>
          <target state="translated">Week.freqstr</target>
        </trans-unit>
        <trans-unit id="ffcdf8f135e8a23ec919d4ff0f9f55c95927e0cf" translate="yes" xml:space="preserve">
          <source>Week.isAnchored()</source>
          <target state="translated">Week.isAnchored()</target>
        </trans-unit>
        <trans-unit id="555e5439462bfd854ceddaaec5090f41fede7156" translate="yes" xml:space="preserve">
          <source>Week.kwds</source>
          <target state="translated">Week.kwds</target>
        </trans-unit>
        <trans-unit id="0ddf2abd99bc8bdb3bea7c4e1e066cd7c4bbf73d" translate="yes" xml:space="preserve">
          <source>Week.name</source>
          <target state="translated">Week.name</target>
        </trans-unit>
        <trans-unit id="89c4cfc4854cb94d50e1dcb282025a4140533496" translate="yes" xml:space="preserve">
          <source>Week.nanos</source>
          <target state="translated">Week.nanos</target>
        </trans-unit>
        <trans-unit id="307856caed15c8ab0682d665f0cab83ee759b9f0" translate="yes" xml:space="preserve">
          <source>Week.normalize</source>
          <target state="translated">Week.normalize</target>
        </trans-unit>
        <trans-unit id="114acbc33fdd764b4598e5188dacb62dd85b046f" translate="yes" xml:space="preserve">
          <source>Week.onOffset()</source>
          <target state="translated">Week.onOffset()</target>
        </trans-unit>
        <trans-unit id="bd355446a8a25d6031315e7cff03557559f81ab6" translate="yes" xml:space="preserve">
          <source>Week.rollback()</source>
          <target state="translated">Week.rollback()</target>
        </trans-unit>
        <trans-unit id="1fc0235444db6e1e7b27c624996d23c22902bf3f" translate="yes" xml:space="preserve">
          <source>Week.rollforward()</source>
          <target state="translated">Week.rollforward()</target>
        </trans-unit>
        <trans-unit id="f6caa2d3180c67f24a3e9dad730b1489eb370da3" translate="yes" xml:space="preserve">
          <source>Week.rule_code</source>
          <target state="translated">Week.rule_code</target>
        </trans-unit>
        <trans-unit id="4479d9e9e60e5c4a660f52b0c3aa3ea36acec440" translate="yes" xml:space="preserve">
          <source>WeekOfMonth</source>
          <target state="translated">WeekOfMonth</target>
        </trans-unit>
        <trans-unit id="cf6568fc5ac2465f23e3b100948d004c7f69190f" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.apply()</source>
          <target state="translated">WeekOfMonth.apply()</target>
        </trans-unit>
        <trans-unit id="2ab406caef7053bcfa1ba04234139b92f4898a33" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.apply_index()</source>
          <target state="translated">WeekOfMonth.apply_index()</target>
        </trans-unit>
        <trans-unit id="98fa89d70c03074699d14f851176eb07a79c5b3a" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.base</source>
          <target state="translated">WeekOfMonth.base</target>
        </trans-unit>
        <trans-unit id="4b17d3716cffc78e73b163f0dd7bbf6711095053" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.copy()</source>
          <target state="translated">WeekOfMonth.copy()</target>
        </trans-unit>
        <trans-unit id="fa5d6058fe2a19d364efa47cfab2df8f25db82b4" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.freqstr</source>
          <target state="translated">WeekOfMonth.freqstr</target>
        </trans-unit>
        <trans-unit id="bba514c842f4011cf97d88bb6144ce2d96e81301" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.isAnchored()</source>
          <target state="translated">WeekOfMonth.isAnchored()</target>
        </trans-unit>
        <trans-unit id="9891edac55b553d1dd9064d890a2fad51759efdf" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.kwds</source>
          <target state="translated">WeekOfMonth.kwds</target>
        </trans-unit>
        <trans-unit id="ea7f176d18009039b337d9d9644e7655410a9dbb" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.name</source>
          <target state="translated">WeekOfMonth.name</target>
        </trans-unit>
        <trans-unit id="4223cc0f6d0434592aeeb0f219087e45612abdd1" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.nanos</source>
          <target state="translated">WeekOfMonth.nanos</target>
        </trans-unit>
        <trans-unit id="da712defeb66da6630af6d1f616c83b0816681e4" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.normalize</source>
          <target state="translated">WeekOfMonth.normalize</target>
        </trans-unit>
        <trans-unit id="d5324bd33937198e4319b5d916e32e9ebdf8f6a4" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.onOffset()</source>
          <target state="translated">WeekOfMonth.onOffset()</target>
        </trans-unit>
        <trans-unit id="f3f592d4d4858873ef2a71ade526f849dc97ed9c" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.rollback()</source>
          <target state="translated">WeekOfMonth.rollback()</target>
        </trans-unit>
        <trans-unit id="a237bcf97a357ae7a25d60524545bd3bb1c2542d" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.rollforward()</source>
          <target state="translated">WeekOfMonth.rollforward()</target>
        </trans-unit>
        <trans-unit id="472a35b2d03ca2226280c71e37437c6f2088f423" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.rule_code</source>
          <target state="translated">WeekOfMonth.rule_code</target>
        </trans-unit>
        <trans-unit id="da94621ef8999a8ac972599f062234bc846d53f9" translate="yes" xml:space="preserve">
          <source>Weekday as a decimal number [0(Sunday),6].</source>
          <target state="translated">El día de la semana como un número decimal [0(Domingo),6].</target>
        </trans-unit>
        <trans-unit id="202222909e680eb046bb5844a287c34bdb3afdb7" translate="yes" xml:space="preserve">
          <source>Weekly offset.</source>
          <target state="translated">Compensación semanal.</target>
        </trans-unit>
        <trans-unit id="72d15f7d9a40b01277c4341044c04afdefd5876f" translate="yes" xml:space="preserve">
          <source>Weekmask of valid business days, passed to &lt;code&gt;numpy.busdaycalendar&lt;/code&gt;, only used when custom frequency strings are passed. The default value None is equivalent to &amp;lsquo;Mon Tue Wed Thu Fri&amp;rsquo;.</source>
          <target state="translated">M&amp;aacute;scara de semana de d&amp;iacute;as h&amp;aacute;biles v&amp;aacute;lidos, pasada a &lt;code&gt;numpy.busdaycalendar&lt;/code&gt; , solo se utiliza cuando se pasan cadenas de frecuencia personalizadas. El valor predeterminado Ninguno es equivalente a 'Mon Tue Wed Thu Fri'.</target>
        </trans-unit>
        <trans-unit id="8374b24155b155d171fa90b81bc7996eccced804" translate="yes" xml:space="preserve">
          <source>Weekmask of valid business days, passed to &lt;code&gt;numpy.busdaycalendar&lt;/code&gt;.</source>
          <target state="translated">M&amp;aacute;scara de semana de d&amp;iacute;as h&amp;aacute;biles v&amp;aacute;lidos, pasada a &lt;code&gt;numpy.busdaycalendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="407570959e478277dd88d698bf486d6ce9c098ce" translate="yes" xml:space="preserve">
          <source>Weighted window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7267e2200141c5c35e4a02ad32ed906ebdbe57f1" translate="yes" xml:space="preserve">
          <source>Weighted window functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906005ab0985da26c5c9fd94f77717f9c5a24f3f" translate="yes" xml:space="preserve">
          <source>Weighted window: Weighted, non-rectangular window supplied by the &lt;code&gt;scipy.signal&lt;/code&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897888bd5751f5716b4307fda3c9e3db66f3bf5a" translate="yes" xml:space="preserve">
          <source>Wes McKinney is the Benevolent Dictator for Life (BDFL).</source>
          <target state="translated">Wes McKinney es el Dictador Benévolo por la Vida (BDFL).</target>
        </trans-unit>
        <trans-unit id="d8a152a201fdedd56c09dd4b18b7b017ea556352" translate="yes" xml:space="preserve">
          <source>Wes McKinney&amp;rsquo;s (pandas BDFL) blog</source>
          <target state="translated">Blog de Wes McKinney (pandas BDFL)</target>
        </trans-unit>
        <trans-unit id="664ec2b7c6626f568d548eafe9b484ca52d9e724" translate="yes" xml:space="preserve">
          <source>What if you wanted to highlight just the maximum value in the entire table? Use &lt;code&gt;.apply(function, axis=None)&lt;/code&gt; to indicate that your function wants the entire table, not one column or row at a time. Let&amp;rsquo;s try that next.</source>
          <target state="translated">&amp;iquest;Y si quisiera resaltar solo el valor m&amp;aacute;ximo en toda la tabla? Utilice &lt;code&gt;.apply(function, axis=None)&lt;/code&gt; para indicar que su funci&amp;oacute;n quiere toda la tabla, no una columna o fila a la vez. Intentemos eso a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ffa869057c19e85dfdf68c5951ee65cecc28b902" translate="yes" xml:space="preserve">
          <source>What is actually happening here is that a function wrapper is being generated. When invoked, it takes any passed arguments and invokes the function with any arguments on each group (in the above example, the &lt;code&gt;std&lt;/code&gt; function). The results are then combined together much in the style of &lt;code&gt;agg&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt; (it actually uses &lt;code&gt;apply&lt;/code&gt; to infer the gluing, documented next). This enables some operations to be carried out rather succinctly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdb080faedd14c64ffe92326926270aa2b60f0e" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in 0.25.0 (July 18, 2019)</source>
          <target state="translated">Novedades de 0.25.0 (18 de julio de 2019)</target>
        </trans-unit>
        <trans-unit id="769bb19e615b7f8e2809e5882e2d05a18f57a531" translate="yes" xml:space="preserve">
          <source>When</source>
          <target state="translated">When</target>
        </trans-unit>
        <trans-unit id="608abcddce87cd414e6565a3333be6bd01f5cac9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;adjust=False&lt;/code&gt; is specified, moving averages are calculated as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a8c5c7ce1f2aad45a890656b995c4f814b5e59" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;adjust=False&lt;/code&gt;, the exponentially weighted function is calculated recursively:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59154d9fc56f1d16c67656eeaa4dcb42547e725" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;adjust=True&lt;/code&gt; (default), the EW function is calculated using weights \(w_i = (1 - \alpha)^i\). For example, the EW moving average of the series [\(x_0, x_1, ..., x_t\)] would be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84848e07e5f15a6368f1abcf75501f60407628f3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;arg&lt;/code&gt; is a dictionary, values in Series that are not in the dictionary (as keys) are converted to &lt;code&gt;NaN&lt;/code&gt;. However, if the dictionary is a &lt;code&gt;dict&lt;/code&gt; subclass that defines &lt;code&gt;__missing__&lt;/code&gt; (i.e. provides a method for default values), then this default is used rather than &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;arg&lt;/code&gt; es un diccionario, los valores de Series que no est&amp;aacute;n en el diccionario (como claves) se convierten a &lt;code&gt;NaN&lt;/code&gt; . Sin embargo, si el diccionario es una subclase &lt;code&gt;dict&lt;/code&gt; que define &lt;code&gt;__missing__&lt;/code&gt; (es decir, proporciona un m&amp;eacute;todo para los valores predeterminados), entonces se usa este predeterminado en lugar de &lt;code&gt;NaN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a629ca65ed3e2b53a2653af2fb6f28853869e52" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;ExtensionArray&lt;/code&gt;, the &lt;code&gt;dtype&lt;/code&gt; will be taken from the data.</source>
          <target state="translated">Cuando los &lt;code&gt;data&lt;/code&gt; son &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; o &lt;code&gt;ExtensionArray&lt;/code&gt; , el tipo &lt;code&gt;dtype&lt;/code&gt; se tomar&amp;aacute; de los datos.</target>
        </trans-unit>
        <trans-unit id="b26451d772c37350185a221549cb3da766ba4e9c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;data&lt;/code&gt; is an Index or Series, the underlying array will be extracted from &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">Cuando los &lt;code&gt;data&lt;/code&gt; son un &amp;iacute;ndice o una serie, la matriz subyacente se extraer&amp;aacute; de los &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6f55025e139e1ea4a1d176fe427cb2547b40464" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;data&lt;/code&gt; is not 1-dimensional.</source>
          <target state="translated">Cuando los &lt;code&gt;data&lt;/code&gt; no son unidimensionales.</target>
        </trans-unit>
        <trans-unit id="633c3b0fede651f5070f4b31c047a0ad941cb811" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deep=False&lt;/code&gt;, a new object will be created without copying the calling object&amp;rsquo;s data or index (only references to the data and index are copied). Any changes to the data of the original will be reflected in the shallow copy (and vice versa).</source>
          <target state="translated">Cuando &lt;code&gt;deep=False&lt;/code&gt; , se crear&amp;aacute; un nuevo objeto sin copiar los datos o el &amp;iacute;ndice del objeto que realiza la llamada (solo se copian las referencias a los datos y al &amp;iacute;ndice). Cualquier cambio en los datos del original se reflejar&amp;aacute; en la copia superficial (y viceversa).</target>
        </trans-unit>
        <trans-unit id="4dadf63d39355c7633e3ea16f95da962fa26660d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deep=True&lt;/code&gt; (default), a new object will be created with a copy of the calling object&amp;rsquo;s data and indices. Modifications to the data or indices of the copy will not be reflected in the original object (see notes below).</source>
          <target state="translated">Cuando &lt;code&gt;deep=True&lt;/code&gt; (predeterminado), se crear&amp;aacute; un nuevo objeto con una copia de los datos e &amp;iacute;ndices del objeto de llamada. Las modificaciones a los datos o &amp;iacute;ndices de la copia no se reflejar&amp;aacute;n en el objeto original (ver notas a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="c48822ec5ed372a1cbeccfb345545355a199ccad" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deep=True&lt;/code&gt;, data is copied but actual Python objects will not be copied recursively, only the reference to the object. This is in contrast to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1412cce4a536a03dcf74a1e073acc5f38c7a66c3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deep=True&lt;/code&gt;, data is copied but actual Python objects will not be copied recursively, only the reference to the object. This is in contrast to &lt;code&gt;copy.deepcopy&lt;/code&gt; in the Standard Library, which recursively copies object data (see examples below).</source>
          <target state="translated">Cuando &lt;code&gt;deep=True&lt;/code&gt; , los datos se copian, pero los objetos Python reales no se copiar&amp;aacute;n de forma recursiva, solo la referencia al objeto. Esto contrasta con &lt;code&gt;copy.deepcopy&lt;/code&gt; en la biblioteca est&amp;aacute;ndar, que copia recursivamente los datos del objeto (ver ejemplos a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="698da391d0d8420164854ec7d7972344263ee78a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;drop&lt;/code&gt; is False (the default), a DataFrame is returned. The newly created columns will come first in the DataFrame, followed by the original Series values. When &lt;code&gt;drop&lt;/code&gt; is True, a &lt;code&gt;Series&lt;/code&gt; is returned. In either case, if &lt;code&gt;inplace=True&lt;/code&gt;, no value is returned.</source>
          <target state="translated">Cuando &lt;code&gt;drop&lt;/code&gt; es False (el valor predeterminado), se devuelve un DataFrame. Las columnas reci&amp;eacute;n creadas aparecer&amp;aacute;n primero en el DataFrame, seguidas de los valores originales de la serie. Cuando &lt;code&gt;drop&lt;/code&gt; es True, se devuelve una &lt;code&gt;Series&lt;/code&gt; . En cualquier caso, si &lt;code&gt;inplace=True&lt;/code&gt; , no se devuelve ning&amp;uacute;n valor.</target>
        </trans-unit>
        <trans-unit id="4d95753a3c99a78bf757b75d4a33979b247f3240" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;dtype&lt;/code&gt; is a &lt;code&gt;CategoricalDtype&lt;/code&gt; with homogeneous &lt;code&gt;categories&lt;/code&gt; ( all numeric, all datetimes, etc.), the conversion is done automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bb210d512bead4e20db684ceb400531c53e5b0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;errors&lt;/code&gt; is not either &lt;code&gt;&amp;lsquo;ignore&amp;rsquo;&lt;/code&gt; or &lt;code&gt;&amp;lsquo;raise&amp;rsquo;&lt;/code&gt;</source>
          <target state="translated">Cuando los &lt;code&gt;errors&lt;/code&gt; no son &lt;code&gt;&amp;lsquo;ignore&amp;rsquo;&lt;/code&gt; o &lt;code&gt;&amp;lsquo;raise&amp;rsquo;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bd7bd661c270225216e4ff0bcf96cca3e999fee" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;errors=&amp;rsquo;raise&amp;rsquo;&lt;/code&gt; and there&amp;rsquo;s overlapping non-NA data.</source>
          <target state="translated">Cuando &lt;code&gt;errors=&amp;rsquo;raise&amp;rsquo;&lt;/code&gt; y hay datos superpuestos que no son de NA.</target>
        </trans-unit>
        <trans-unit id="d7c6b4c4b301dcacae4cb36904290440316003e1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;freq&lt;/code&gt; is not passed, shift the index without realigning the data. If &lt;code&gt;freq&lt;/code&gt; is passed (in this case, the index must be date or datetime, or it will raise a &lt;code&gt;NotImplementedError&lt;/code&gt;), the index will be increased using the periods and the &lt;code&gt;freq&lt;/code&gt;.</source>
          <target state="translated">Cuando no se pasa la &lt;code&gt;freq&lt;/code&gt; , cambie el &amp;iacute;ndice sin realinear los datos. Si se pasa la &lt;code&gt;freq&lt;/code&gt; (en este caso, el &amp;iacute;ndice debe ser fecha o fecha y hora, o generar&amp;aacute; un &lt;code&gt;NotImplementedError&lt;/code&gt; ), el &amp;iacute;ndice se incrementar&amp;aacute; utilizando los per&amp;iacute;odos y la &lt;code&gt;freq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dbf3cd0890eeca70e7fb5bcec42a32e68ae5202" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;freq&lt;/code&gt; is specified, &lt;code&gt;shift&lt;/code&gt; method changes all the dates in the index rather than changing the alignment of the data and the index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f361aad0ba1ea715cc235a3f1851f09cc260bb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;ignore_na=False&lt;/code&gt; (default), weights are based on absolute positions. For example, the weights of \(x_0\) and \(x_2\) used in calculating the final weighted average of [\(x_0\), None, \(x_2\)] are \((1-\alpha)^2\) and \(1\) if &lt;code&gt;adjust=True&lt;/code&gt;, and \((1-\alpha)^2\) and \(\alpha\) if &lt;code&gt;adjust=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7383841fe8d5f29001211450c0c5becd8a52bd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;ignore_na=True&lt;/code&gt; (reproducing pre-0.15.0 behavior), weights are based on relative positions. For example, the weights of \(x_0\) and \(x_2\) used in calculating the final weighted average of [\(x_0\), None, \(x_2\)] are \(1-\alpha\) and \(1\) if &lt;code&gt;adjust=True&lt;/code&gt;, and \(1-\alpha\) and \(\alpha\) if &lt;code&gt;adjust=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cb26b7f4f6662f42d0db6c2c3521cac1d74beb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;indices&lt;/code&gt; contains negative values other than &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;allow_fill&lt;/code&gt; is True.</source>
          <target state="translated">Cuando los &lt;code&gt;indices&lt;/code&gt; contienen valores negativos distintos de &lt;code&gt;-1&lt;/code&gt; y &lt;code&gt;allow_fill&lt;/code&gt; es True.</target>
        </trans-unit>
        <trans-unit id="e5edaa84138910db9e7f22918782c0550972dc23" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;inplace&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, a copy of the &lt;code&gt;DataFrame&lt;/code&gt; with the new or modified columns is returned and the original frame is unchanged.</source>
          <target state="translated">Cuando &lt;code&gt;inplace&lt;/code&gt; se establece en &lt;code&gt;False&lt;/code&gt; , se &lt;code&gt;DataFrame&lt;/code&gt; una copia del DataFrame con las columnas nuevas o modificadas y el marco original no se modifica.</target>
        </trans-unit>
        <trans-unit id="c34f365247800a7955bf35ab0023ee0f50ffd99f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;inplace&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, the default, a copy of the &lt;code&gt;DataFrame&lt;/code&gt; with the new or modified columns is returned and the original frame is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2d134197e8c446b76ec8758a708383016cf5d6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;n&lt;/code&gt; is not 0, if the given date is not on an anchor point, it snapped to the next(previous) anchor point, and moved &lt;code&gt;|n|-1&lt;/code&gt; additional steps forwards or backwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a027af5fff689d5970cdac0acd9a9b2b525068f9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;other&lt;/code&gt; is a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, the columns of a DataFrame are aligned with the index of &lt;code&gt;other&lt;/code&gt; and broadcast:</source>
          <target state="translated">Cuando &lt;code&gt;other&lt;/code&gt; es una &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; , las columnas de un DataFrame se alinean con el &amp;iacute;ndice de &lt;code&gt;other&lt;/code&gt; y se difunden:</target>
        </trans-unit>
        <trans-unit id="c84d437b4d44f816a605f14eb6a5c02f99005d16" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;other&lt;/code&gt; is not specified, the output will be self correlation (e.g. all 1&amp;rsquo;s), except for &lt;a href=&quot;pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; inputs with &lt;code&gt;pairwise&lt;/code&gt; set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;other&lt;/code&gt; no se especifica, la salida ser&amp;aacute; auto correlaci&amp;oacute;n (por ejemplo, los 1 de), a excepci&amp;oacute;n de &lt;a href=&quot;pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; &lt;/a&gt; entradas con &lt;code&gt;pairwise&lt;/code&gt; conjunto a &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="824d36d88f8257d693d442aab5aaf270c628119b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pairwise&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, only matching columns between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; will be used.</source>
          <target state="translated">Cuando por &lt;code&gt;pairwise&lt;/code&gt; se establece en &lt;code&gt;False&lt;/code&gt; , solo se utilizar&amp;aacute;n las columnas coincidentes entre &lt;code&gt;self&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb1a15c79f43bda18f8fbced4f9df0b3b6261fc" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pairwise&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, the output will be a MultiIndex DataFrame with the original index on the first level, and the &lt;code&gt;other&lt;/code&gt; DataFrame columns on the second level.</source>
          <target state="translated">Cuando por &lt;code&gt;pairwise&lt;/code&gt; se establece en &lt;code&gt;True&lt;/code&gt; , la salida ser&amp;aacute; un DataFrame de MultiIndex con el &amp;iacute;ndice original en el primer nivel y las &lt;code&gt;other&lt;/code&gt; columnas de DataFrame en el segundo nivel.</target>
        </trans-unit>
        <trans-unit id="d3456064fa6892d968ebd4d898b3b0f918838107" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pat&lt;/code&gt; is a compiled regex, all flags should be included in the compiled regex. Use of &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;, or &lt;code&gt;regex=False&lt;/code&gt; with a compiled regex will raise an error.</source>
          <target state="translated">Cuando &lt;code&gt;pat&lt;/code&gt; es una expresi&amp;oacute;n regular compilada, todos los indicadores deben incluirse en la expresi&amp;oacute;n regular compilada. El uso de &lt;code&gt;case&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt; o &lt;code&gt;regex=False&lt;/code&gt; con una expresi&amp;oacute;n regular compilada generar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="1f71c418df4d0713f3cb3305c6a2e45802016d6a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pat&lt;/code&gt; is a string and &lt;code&gt;regex&lt;/code&gt; is False, every &lt;code&gt;pat&lt;/code&gt; is replaced with &lt;code&gt;repl&lt;/code&gt; as with &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt;&lt;code&gt;str.replace()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Cuando &lt;code&gt;pat&lt;/code&gt; es una cadena y &lt;code&gt;regex&lt;/code&gt; es False, cada &lt;code&gt;pat&lt;/code&gt; se reemplaza con &lt;code&gt;repl&lt;/code&gt; como con &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt; &lt;code&gt;str.replace()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3ae8a85fc80eb19330172a8575714f5dc174e73a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pat&lt;/code&gt; is a string and &lt;code&gt;regex&lt;/code&gt; is True (the default), the given &lt;code&gt;pat&lt;/code&gt; is compiled as a regex. When &lt;code&gt;repl&lt;/code&gt; is a string, it replaces matching regex patterns as with &lt;code&gt;re.sub()&lt;/code&gt;. NaN value(s) in the Series are left as is:</source>
          <target state="translated">Cuando &lt;code&gt;pat&lt;/code&gt; es una cadena y &lt;code&gt;regex&lt;/code&gt; es True (el valor predeterminado), el &lt;code&gt;pat&lt;/code&gt; dado se compila como una expresi&amp;oacute;n regular. Cuando &lt;code&gt;repl&lt;/code&gt; es una cadena, reemplaza los patrones de &lt;code&gt;re.sub()&lt;/code&gt; regulares coincidentes como con re.sub () . Los valores de NaN en la serie se dejan como est&amp;aacute;n:</target>
        </trans-unit>
        <trans-unit id="a189ca0dd832e94427884b8ed84c8d3a5dfbe369" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;quotechar&lt;/code&gt; is specified and &lt;code&gt;quoting&lt;/code&gt; is not &lt;code&gt;QUOTE_NONE&lt;/code&gt;, indicate whether or not to interpret two consecutive &lt;code&gt;quotechar&lt;/code&gt; elements &lt;strong&gt;inside&lt;/strong&gt; a field as a single &lt;code&gt;quotechar&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2480d3b5e08947ecb55308b072d091cb044453b5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;repl&lt;/code&gt; is a callable, it is called on every &lt;code&gt;pat&lt;/code&gt; using &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt;&lt;code&gt;re.sub()&lt;/code&gt;&lt;/a&gt;. The callable should expect one positional argument (a regex object) and return a string.</source>
          <target state="translated">Cuando &lt;code&gt;repl&lt;/code&gt; es un invocable, se llama en cada &lt;code&gt;pat&lt;/code&gt; usando &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt; &lt;code&gt;re.sub()&lt;/code&gt; &lt;/a&gt; . El invocable debe esperar un argumento posicional (un objeto regex) y devolver una cadena.</target>
        </trans-unit>
        <trans-unit id="30cbb0dfef31ecbfcfc4652e551efe57f9470dcb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;value=None&lt;/code&gt; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a7b6833d6941a0a50247de3f6832a87c1cd54d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;value=None&lt;/code&gt; and &lt;code&gt;to_replace&lt;/code&gt; is a scalar, list or tuple, &lt;code&gt;replace&lt;/code&gt; uses the method parameter (default &amp;lsquo;pad&amp;rsquo;) to do the replacement. So this is why the &amp;lsquo;a&amp;rsquo; values are being replaced by 10 in rows 1 and 2 and &amp;lsquo;b&amp;rsquo; in row 4 in this case. The command &lt;code&gt;s.replace('a', None)&lt;/code&gt; is actually equivalent to &lt;code&gt;s.replace(to_replace='a', value=None, method='pad')&lt;/code&gt;:</source>
          <target state="translated">Cuando &lt;code&gt;value=None&lt;/code&gt; y &lt;code&gt;to_replace&lt;/code&gt; es un escalar, lista o tupla, &lt;code&gt;replace&lt;/code&gt; usa el par&amp;aacute;metro de m&amp;eacute;todo ('pad' predeterminado) para realizar el reemplazo. Entonces, esta es la raz&amp;oacute;n por la que los valores 'a' se reemplazan por 10 en las filas 1 y 2 y 'b' en la fila 4 en este caso. El comando &lt;code&gt;s.replace('a', None)&lt;/code&gt; es en realidad equivalente a &lt;code&gt;s.replace(to_replace='a', value=None, method='pad')&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4b99fedab983a09a6b838160842c60e8f31cbcb2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;values&lt;/code&gt; is a Series or DataFrame the index and column must match. Note that &amp;lsquo;falcon&amp;rsquo; does not match based on the number of legs in df2.</source>
          <target state="translated">Cuando los &lt;code&gt;values&lt;/code&gt; son Series o DataFrame, el &amp;iacute;ndice y la columna deben coincidir. Tenga en cuenta que 'falcon' no coincide seg&amp;uacute;n el n&amp;uacute;mero de patas en df2.</target>
        </trans-unit>
        <trans-unit id="f1e9f921168fdd4c6dc9434a6d701a2d2838dc75" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;values&lt;/code&gt; is a dict, we can pass values to check for each column separately:</source>
          <target state="translated">Cuando los &lt;code&gt;values&lt;/code&gt; son un dictado, podemos pasar valores para verificar cada columna por separado:</target>
        </trans-unit>
        <trans-unit id="1b19dea60803386e3166721bc8e351ce113cc79b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;values&lt;/code&gt; is a list check whether every value in the DataFrame is present in the list (which animals have 0 or 2 legs or wings)</source>
          <target state="translated">Cuando los &lt;code&gt;values&lt;/code&gt; son una lista, compruebe si todos los valores del DataFrame est&amp;aacute;n presentes en la lista (qu&amp;eacute; animales tienen 0 o 2 patas o alas)</target>
        </trans-unit>
        <trans-unit id="4cd2f0de18968bbc4eb51419a563a52d16902251" translate="yes" xml:space="preserve">
          <source>When Dask knows the &lt;code&gt;divisions&lt;/code&gt; of a dataset, certain optimizations are possible. When reading parquet datasets written by dask, the divisions will be known automatically. In this case, since we created the parquet files manually, we need to supply the divisions manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d835d4b89bf52676d1f8a17042787fa90614d1" translate="yes" xml:space="preserve">
          <source>When DataFrames are merged on a string that matches an index level in both frames, the index level is preserved as an index level in the resulting DataFrame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51149e95c58541aa45c0cb6626e887d5d7d7974e" translate="yes" xml:space="preserve">
          <source>When DataFrames are merged using only some of the levels of a &lt;code&gt;MultiIndex&lt;/code&gt;, the extra levels will be dropped from the resulting merge. In order to preserve those levels, use &lt;code&gt;reset_index&lt;/code&gt; on those level names to move those levels to columns prior to doing the merge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cb4370341f8ec9ed33e2a8ebfa15660ceb9701" translate="yes" xml:space="preserve">
          <source>When NA values are present, the output dtype is float64. Similarly for methods returning boolean values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99455464cb42aa5f2f519c4aa938bc094ce02e8" translate="yes" xml:space="preserve">
          <source>When True, IPython notebook will use html representation for pandas objects (if it is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba42384960d62dec50d2f07b5264b6777857a9cc" translate="yes" xml:space="preserve">
          <source>When True, IPython notebook will use html representation for pandas objects (if it is available). [default: True] [currently: True]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69643037dc3a0791593193449f290ae1c9ed1688" translate="yes" xml:space="preserve">
          <source>When True, Jupyter notebook will process table contents using MathJax, rendering mathematical expressions enclosed by the dollar symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcdce0ebe05aa9e9fb04a8417ee7f526ccb68c5" translate="yes" xml:space="preserve">
          <source>When True, Jupyter notebook will process table contents using MathJax, rendering mathematical expressions enclosed by the dollar symbol. (default: True) [default: True] [currently: True]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a2f01ab1547a0df3b9a2d1a2b91b84657a2d16" translate="yes" xml:space="preserve">
          <source>When True, attempt to create a MultiIndex if possible</source>
          <target state="translated">Cuando sea cierto,intente crear un Multi-Index si es posible</target>
        </trans-unit>
        <trans-unit id="eb54d579c3e3648ec5173643470fbc22a7c48171" translate="yes" xml:space="preserve">
          <source>When True, attempt to create a MultiIndex if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be76dd3008dc237efc61bc5677dd0863c46f701" translate="yes" xml:space="preserve">
          <source>When True, prints and parses dates with the day first, eg 20/01/2005</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f20d5a5270deafc9af62b003dfd38314be0e0b" translate="yes" xml:space="preserve">
          <source>When True, prints and parses dates with the day first, eg 20/01/2005 [default: False] [currently: False]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b1f5fad3b0ff7ed899b302ead186369b63be4a" translate="yes" xml:space="preserve">
          <source>When True, prints and parses dates with the year first, eg 2005/01/20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee408bd8dc2d8010e5bde596b5428d67e6655848" translate="yes" xml:space="preserve">
          <source>When True, prints and parses dates with the year first, eg 2005/01/20 [default: False] [currently: False]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912f80d917379172fb2dbc2354c59e54f95e199b" translate="yes" xml:space="preserve">
          <source>When a binary ufunc is applied to a &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;, the Series implementation takes precedence and a Series is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5461a2cabed78b09a952049b4214cbceb052ea" translate="yes" xml:space="preserve">
          <source>When a column contains only one level, it will be omitted in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3253d170611f6314b1bb68684b9864884fb4fb10" translate="yes" xml:space="preserve">
          <source>When a date offset is created for a negative number of periods, the date is first rolled forward. The pseudo code is:</source>
          <target state="translated">Cuando se crea un desfase de fechas para un número negativo de períodos,la fecha se adelanta primero.El pseudo código es:</target>
        </trans-unit>
        <trans-unit id="5fa8de6630b8024332b165ce20591b75d1f4f5e1" translate="yes" xml:space="preserve">
          <source>When a particular set of columns is passed along with a dict of data, the passed columns override the keys in the dict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21d700ea0297f7c1d5f6f4809b333bb03aa1059" translate="yes" xml:space="preserve">
          <source>When a value is missing in only one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdeaf55a6e46935668be63f419d531c51aa737f" translate="yes" xml:space="preserve">
          <source>When a value is missing in only one of &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;. When a value in &lt;code&gt;left&lt;/code&gt; is greater than the corresponding value in &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">Cuando falta un valor en solo uno de &lt;code&gt;left&lt;/code&gt; o &lt;code&gt;right&lt;/code&gt; . Cuando un valor de la &lt;code&gt;left&lt;/code&gt; es mayor que el valor correspondiente de la &lt;code&gt;right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3f3627274c6fdaa4d1296b656c8aebccf9cd751" translate="yes" xml:space="preserve">
          <source>When accessed, your accessor will be initialized with the pandas object the user is interacting with. So the signature must be</source>
          <target state="translated">Cuando se acceda a él,su accesorio se inicializará con el objeto pandas con el que el usuario está interactuando.Así que la firma debe ser</target>
        </trans-unit>
        <trans-unit id="4db4d1e1e93df05b8d7243099c9f7f28c34e2154" translate="yes" xml:space="preserve">
          <source>When adjust is False, weighted averages are calculated recursively as:</source>
          <target state="translated">Cuando el ajuste es falso,los promedios ponderados se calculan recursivamente como:</target>
        </trans-unit>
        <trans-unit id="40cb4157a2276c84be23e830b63695f1330e757d" translate="yes" xml:space="preserve">
          <source>When adjust is True (default), weighted averages are calculated using weights (1-alpha)**(n-1), (1-alpha)**(n-2), &amp;hellip;, 1-alpha, 1.</source>
          <target state="translated">Cuando el ajuste es Verdadero (predeterminado), los promedios ponderados se calculan utilizando pesos (1-alfa) ** (n-1), (1-alfa) ** (n-2),&amp;hellip;, 1-alfa, 1.</target>
        </trans-unit>
        <trans-unit id="6300408ba3f27a018938865d08260d05cce52a54" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;NA&lt;/code&gt; is present in an operation, the output value is &lt;code&gt;NA&lt;/code&gt; only if the result cannot be determined solely based on the other input. For example, &lt;code&gt;True | NA&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, because both &lt;code&gt;True | True&lt;/code&gt; and &lt;code&gt;True | False&lt;/code&gt; are &lt;code&gt;True&lt;/code&gt;. In that case, we don&amp;rsquo;t actually need to consider the value of the &lt;code&gt;NA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0612fe5d23166f6ef5fb9da735712d1b44ce0599" translate="yes" xml:space="preserve">
          <source>When applied to a DataFrame, you can use a column of the DataFrame as sampling weights (provided you are sampling rows and not columns) by simply passing the name of the column as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ada028e394d1059d5d625fce1aff8673015a1d" translate="yes" xml:space="preserve">
          <source>When calling apply, add group keys to index to identify pieces.</source>
          <target state="translated">Cuando llame a aplicar,añada las claves de grupo al índice para identificar las piezas.</target>
        </trans-unit>
        <trans-unit id="3bf3b17ed8190c81462c457693e28e4e0702232b" translate="yes" xml:space="preserve">
          <source>When calling the method, keywords arguments &lt;code&gt;head(n=3)&lt;/code&gt; are preferred to positional arguments &lt;code&gt;head(3)&lt;/code&gt;.</source>
          <target state="translated">Al llamar al m&amp;eacute;todo, se prefieren los argumentos de palabras clave &lt;code&gt;head(n=3)&lt;/code&gt; a los argumentos posicionales &lt;code&gt;head(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd3e39dfcc3c1b5efdb10b78b7a0c0437bcfbeb4" translate="yes" xml:space="preserve">
          <source>When checking a boolean mask, a boolean ndarray is returned when the arguments are all valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6bea224b90f2472a46b03791d9f3661c006cc1" translate="yes" xml:space="preserve">
          <source>When clocks moved backward due to DST, ambiguous times may arise. For example in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST, 02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a situation, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1038b9555896e68c9d9d9a5aa3bbcefbc38a65d0" translate="yes" xml:space="preserve">
          <source>When clocks moved backward due to DST, ambiguous times may arise. For example in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST, 02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a situation, the &lt;code&gt;ambiguous&lt;/code&gt; parameter dictates how ambiguous times should be handled.</source>
          <target state="translated">Cuando los relojes se mueven hacia atr&amp;aacute;s debido al horario de verano, pueden surgir horas ambiguas. Por ejemplo, en la hora de Europa Central (UTC + 01), cuando se pasa de las 03:00 DST a las 02:00 no DST, las 02:30:00 hora local se producen tanto a las 00:30:00 UTC como a las 01:30:00 UTC. En tal situaci&amp;oacute;n, el par&amp;aacute;metro &lt;code&gt;ambiguous&lt;/code&gt; dicta c&amp;oacute;mo deben manejarse los tiempos ambiguos.</target>
        </trans-unit>
        <trans-unit id="dde291d8d81acba6907010e427a03754a0f319b2" translate="yes" xml:space="preserve">
          <source>When comparing to an arbitrary sequence, the number of columns must match the number elements in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a6a3779a60543d34b1c7b51db13486c33aae0a" translate="yes" xml:space="preserve">
          <source>When comparing to an arbitrary sequence, the number of columns must match the number elements in &lt;code&gt;other&lt;/code&gt;:</source>
          <target state="translated">Cuando se compara con una secuencia arbitraria, el n&amp;uacute;mero de columnas debe coincidir con el n&amp;uacute;mero de elementos en &lt;code&gt;other&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dbb6a810cec96d01ab3e2ff73be4d764c28ee194" translate="yes" xml:space="preserve">
          <source>When comparing two numbers, if the first number has magnitude less than 1e-5, we compare the two numbers directly and check whether they are equivalent within the specified precision. Otherwise, we compare the &lt;strong&gt;ratio&lt;/strong&gt; of the second number to the first number and check whether it is equivalent to 1 within the specified precision.</source>
          <target state="translated">Al comparar dos n&amp;uacute;meros, si el primer n&amp;uacute;mero tiene una magnitud menor que 1e-5, comparamos los dos n&amp;uacute;meros directamente y verificamos si son equivalentes dentro de la precisi&amp;oacute;n especificada. De lo contrario, comparamos la &lt;strong&gt;raz&amp;oacute;n&lt;/strong&gt; del segundo n&amp;uacute;mero con el primer n&amp;uacute;mero y verificamos si es equivalente a 1 dentro de la precisi&amp;oacute;n especificada.</target>
        </trans-unit>
        <trans-unit id="23ccf40aef286c149b7471c4a1e71cace6464be8" translate="yes" xml:space="preserve">
          <source>When concatenating DataFrames with named axes, pandas will attempt to preserve these index/column names whenever possible. In the case where all inputs share a common name, this name will be assigned to the result. When the input names do not all agree, the result will be unnamed. The same is true for &lt;a href=&quot;../reference/api/pandas.multiindex#pandas.MultiIndex&quot;&gt;&lt;code&gt;MultiIndex&lt;/code&gt;&lt;/a&gt;, but the logic is applied separately on a level-by-level basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637ced76108fad73d6872646d080c34db0fb927b" translate="yes" xml:space="preserve">
          <source>When concatenating all &lt;code&gt;Series&lt;/code&gt; along the index (axis=0), a &lt;code&gt;Series&lt;/code&gt; is returned. When &lt;code&gt;objs&lt;/code&gt; contains at least one &lt;code&gt;DataFrame&lt;/code&gt;, a &lt;code&gt;DataFrame&lt;/code&gt; is returned. When concatenating along the columns (axis=1), a &lt;code&gt;DataFrame&lt;/code&gt; is returned.</source>
          <target state="translated">Al concatenar todas las &lt;code&gt;Series&lt;/code&gt; a lo largo del &amp;iacute;ndice (eje = 0), se devuelve una &lt;code&gt;Series&lt;/code&gt; . Cuando &lt;code&gt;objs&lt;/code&gt; contiene al menos un &lt;code&gt;DataFrame&lt;/code&gt; , se devuelve un &lt;code&gt;DataFrame&lt;/code&gt; . Al concatenar a lo largo de las columnas (eje = 1), se devuelve un &lt;code&gt;DataFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0db97e498bfb10687747cf4f4f999c1402f1f31" translate="yes" xml:space="preserve">
          <source>When converting a DatetimeArray/Index with non-regular values, so that a frequency cannot be inferred.</source>
          <target state="translated">Al convertir un DatetimeArray/Index con valores no regulares,de modo que no se pueda inferir una frecuencia.</target>
        </trans-unit>
        <trans-unit id="1100386ed8ea6d9629a1a290dbb6310caefe32b9" translate="yes" xml:space="preserve">
          <source>When creating this branch, make sure your master branch is up to date with the latest upstream master version. To update your local master branch, you can do:</source>
          <target state="translated">Al crear esta rama,asegúrate de que tu rama maestra esté actualizada con la última versión maestra upstream.Para actualizar tu rama maestra local,puedes hacerlo:</target>
        </trans-unit>
        <trans-unit id="c4c7dd9d9c3acf5623be8c1b8ef40c03661c86cf" translate="yes" xml:space="preserve">
          <source>When data with a &lt;code&gt;datetime64[ns]&lt;/code&gt; or &lt;code&gt;timedelta64[ns]&lt;/code&gt; dtype is passed, pandas will always return a &lt;code&gt;DatetimeArray&lt;/code&gt; or &lt;code&gt;TimedeltaArray&lt;/code&gt; rather than a &lt;code&gt;PandasArray&lt;/code&gt;. This is for symmetry with the case of timezone-aware data, which NumPy does not natively support.</source>
          <target state="translated">Cuando se pasan datos con un tipo de &lt;code&gt;timedelta64[ns]&lt;/code&gt; &lt;code&gt;datetime64[ns]&lt;/code&gt; o timedelta64 [ns] , los pandas siempre devolver&amp;aacute;n un &lt;code&gt;DatetimeArray&lt;/code&gt; o &lt;code&gt;TimedeltaArray&lt;/code&gt; en lugar de un &lt;code&gt;PandasArray&lt;/code&gt; . Esto es por simetr&amp;iacute;a con el caso de los datos que reconocen la zona horaria, que NumPy no admite de forma nativa.</target>
        </trans-unit>
        <trans-unit id="21a675cd25d8dfd9f46b360f15e6842761ed6865" translate="yes" xml:space="preserve">
          <source>When dealing with remote storage systems, you might need extra configuration with environment variables or config files in special locations. For example, to access data in your S3 bucket, you will need to define credentials in one of the several ways listed in the &lt;a href=&quot;https://s3fs.readthedocs.io/en/latest/#credentials&quot;&gt;S3Fs documentation&lt;/a&gt;. The same is true for several of the storage backends, and you should follow the links at &lt;a href=&quot;https://filesystem-spec.readthedocs.io/en/latest/api.html#built-in-implementations&quot;&gt;fsimpl1&lt;/a&gt; for implementations built into &lt;code&gt;fsspec&lt;/code&gt; and &lt;a href=&quot;https://filesystem-spec.readthedocs.io/en/latest/api.html#other-known-implementations&quot;&gt;fsimpl2&lt;/a&gt; for those not included in the main &lt;code&gt;fsspec&lt;/code&gt; distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feaf1730baf09043e523a84bb3a9f4637a606898" translate="yes" xml:space="preserve">
          <source>When deciding what is related, you should mainly use your common sense and think about what can be useful for the users reading the documentation, especially the less experienced ones.</source>
          <target state="translated">A la hora de decidir qué es lo que está relacionado,se debe utilizar principalmente el sentido común y pensar en lo que puede ser útil para los usuarios que leen la documentación,especialmente los menos experimentados.</target>
        </trans-unit>
        <trans-unit id="f5c3bc0fd40147351cf0c049c779f4a06960d8af" translate="yes" xml:space="preserve">
          <source>When dict is used as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b705982d8224621f64188a411430232a68f971e6" translate="yes" xml:space="preserve">
          <source>When dict is used as the &lt;code&gt;to_replace&lt;/code&gt; value, it is like key(s) in the dict are the to_replace part and value(s) in the dict are the value parameter.</source>
          <target state="translated">Cuando se usa dict como valor &lt;code&gt;to_replace&lt;/code&gt; , es como si la (s) clave (s) en el dict fueran la parte to_replace y los valores en el dict fueran el par&amp;aacute;metro de valor.</target>
        </trans-unit>
        <trans-unit id="bd7b0838ec9a86d35682dae47beecfb14725b1e4" translate="yes" xml:space="preserve">
          <source>When doing a PR with a docstring update, it is good to post the output of the validation script in a comment on github.</source>
          <target state="translated">Cuando se hace un PR con una actualización de docstring,es bueno publicar la salida del script de validación en un comentario en github.</target>
        </trans-unit>
        <trans-unit id="3e704803fdad0565ffe68b6d58e0e465376e589f" translate="yes" xml:space="preserve">
          <source>When doing an aggregation or transformation, you might just want to call an instance method on each data group. This is pretty easy to do by passing lambda functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73d4053a79dd6e7539d53518f9d66a7f2a021f9" translate="yes" xml:space="preserve">
          <source>When doing an operation between DataFrame and Series, the default behavior is to align the Series &lt;strong&gt;index&lt;/strong&gt; on the DataFrame &lt;strong&gt;columns&lt;/strong&gt;, thus &lt;a href=&quot;https://numpy.org/doc/stable/user/basics.broadcasting.html&quot;&gt;broadcasting&lt;/a&gt; row-wise. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886f0ef49bbe251b34a0018bfe1ed9541cd332e4" translate="yes" xml:space="preserve">
          <source>When each subject string in the Series has exactly one match,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36805fe980f0f47951bcaa93f77efeb76b128434" translate="yes" xml:space="preserve">
          <source>When gluing together multiple DataFrames, you have a choice of how to handle the other axes (other than the one being concatenated). This can be done in the following two ways:</source>
          <target state="translated">Cuando se pegan varios DataFrames,se puede elegir cómo manejar los otros ejes (aparte del que se está concatenando).Esto se puede hacer de las dos maneras siguientes:</target>
        </trans-unit>
        <trans-unit id="542684db958778c261342ddedd76fb90002eebac" translate="yes" xml:space="preserve">
          <source>When grouping with &lt;code&gt;by&lt;/code&gt;, a Series mapping columns to &lt;code&gt;return_type&lt;/code&gt; is returned:</source>
          <target state="translated">Al agrupar con &lt;code&gt;by&lt;/code&gt; , se devuelve una serie de columnas de mapeo para &lt;code&gt;return_type&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7ff44a3a8f8005f1399441f3dc08c60258fc3946" translate="yes" xml:space="preserve">
          <source>When having a DataFrame with dates as index, this function can select the first few rows based on a date offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba15db478ca9f2e446df3fa2d769e241b7b4ac49" translate="yes" xml:space="preserve">
          <source>When having a DataFrame with dates as index, this function can select the last few rows based on a date offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17db09436383d41b5d603278ec30be4a5223d7f8" translate="yes" xml:space="preserve">
          <source>When ignore_na is False (default), weights are based on absolute positions. For example, the weights of x and y used in calculating the final weighted average of [x, None, y] are (1-alpha)**2 and 1 (if adjust is True), and (1-alpha)**2 and alpha (if adjust is False).</source>
          <target state="translated">Cuando ignore_na es Falso (por defecto),los pesos se basan en posiciones absolutas.Por ejemplo,los pesos de x y y utilizados en el cálculo del promedio ponderado final de [x,Ninguno,y]son (1-alfa)**2 y 1 (si el ajuste es Verdadero),y (1-alfa)**2 y alfa (si el ajuste es Falso).</target>
        </trans-unit>
        <trans-unit id="b7f965abc3a4138667124af03caf3a160dac0fe5" translate="yes" xml:space="preserve">
          <source>When ignore_na is True (reproducing pre-0.15.0 behavior), weights are based on relative positions. For example, the weights of x and y used in calculating the final weighted average of [x, None, y] are 1-alpha and 1 (if adjust is True), and 1-alpha and alpha (if adjust is False).</source>
          <target state="translated">Cuando ignore_na es True (reproduciendo el comportamiento pre-0.15.0),los pesos se basan en posiciones relativas.Por ejemplo,los pesos de x y y utilizados en el cálculo del promedio ponderado final de [x,Ninguno,y]son 1 alfa y 1 (si el ajuste es Verdadero),y 1 alfa y alfa (si el ajuste es Falso).</target>
        </trans-unit>
        <trans-unit id="ce796429ced037639277ebc7f731943f6311abfc" translate="yes" xml:space="preserve">
          <source>When illustrating examples with a single &lt;code&gt;Series&lt;/code&gt; use the name &lt;code&gt;s&lt;/code&gt;, and if illustrating with a single &lt;code&gt;DataFrame&lt;/code&gt; use the name &lt;code&gt;df&lt;/code&gt;. For indices, &lt;code&gt;idx&lt;/code&gt; is the preferred name. If a set of homogeneous &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; is used, name them &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt;, &lt;code&gt;s3&lt;/code&gt;&amp;hellip; or &lt;code&gt;df1&lt;/code&gt;, &lt;code&gt;df2&lt;/code&gt;, &lt;code&gt;df3&lt;/code&gt;&amp;hellip; If the data is not homogeneous, and more than one structure is needed, name them with something meaningful, for example &lt;code&gt;df_main&lt;/code&gt; and &lt;code&gt;df_to_join&lt;/code&gt;.</source>
          <target state="translated">Al ilustrar ejemplos con una sola &lt;code&gt;Series&lt;/code&gt; use el nombre &lt;code&gt;s&lt;/code&gt; , y si ilustra con un solo &lt;code&gt;DataFrame&lt;/code&gt; , use el nombre &lt;code&gt;df&lt;/code&gt; . Para los &amp;iacute;ndices, &lt;code&gt;idx&lt;/code&gt; es el nombre preferido. Si se utiliza un conjunto de &lt;code&gt;Series&lt;/code&gt; o &lt;code&gt;DataFrame&lt;/code&gt; homog&amp;eacute;neos , as&amp;iacute;gneles el nombre &lt;code&gt;s1&lt;/code&gt; , &lt;code&gt;s2&lt;/code&gt; , &lt;code&gt;s3&lt;/code&gt; ... o &lt;code&gt;df1&lt;/code&gt; , &lt;code&gt;df2&lt;/code&gt; , &lt;code&gt;df3&lt;/code&gt; ... Si los datos no son homog&amp;eacute;neos y se necesita m&amp;aacute;s de una estructura , as&amp;iacute;gneles un nombre significativo, por ejemplo, &lt;code&gt;df_main&lt;/code&gt; y &lt;code&gt;df_to_join&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c5dadc2fe65927d17bd3e9891d2299f6c3f96e5" translate="yes" xml:space="preserve">
          <source>When importing categorical data, the values of the variables in the &lt;em&gt;Stata&lt;/em&gt; data file are not preserved since &lt;code&gt;Categorical&lt;/code&gt; variables always use integer data types between &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;n-1&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the number of categories. If the original values in the &lt;em&gt;Stata&lt;/em&gt; data file are required, these can be imported by setting &lt;code&gt;convert_categoricals=False&lt;/code&gt;, which will import original data (but not the variable labels). The original values can be matched to the imported categorical data since there is a simple mapping between the original &lt;em&gt;Stata&lt;/em&gt; data values and the category codes of imported Categorical variables: missing values are assigned code &lt;code&gt;-1&lt;/code&gt;, and the smallest original value is assigned &lt;code&gt;0&lt;/code&gt;, the second smallest is assigned &lt;code&gt;1&lt;/code&gt; and so on until the largest original value is assigned the code &lt;code&gt;n-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1f0b7bfcf4c317abdc8abca7d7e7d604ff0b80" translate="yes" xml:space="preserve">
          <source>When improving a single function or method&amp;rsquo;s docstring, it is not necessarily needed to build the full documentation (see next section). However, there is a script that checks a docstring (for example for the &lt;code&gt;DataFrame.mean&lt;/code&gt; method):</source>
          <target state="translated">Cuando se mejora la cadena de documentaci&amp;oacute;n de una sola funci&amp;oacute;n o m&amp;eacute;todo, no es necesario crear la documentaci&amp;oacute;n completa (consulte la siguiente secci&amp;oacute;n). Sin embargo, hay un script que verifica una cadena de documentos (por ejemplo, para el m&amp;eacute;todo &lt;code&gt;DataFrame.mean&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="b1baafd7b0e2292cfe8b312a9b3732901be94f52" translate="yes" xml:space="preserve">
          <source>When input data contains &lt;code&gt;NaN&lt;/code&gt;, it will be automatically filled by 0. If you want to drop or fill by different values, use &lt;code&gt;dataframe.dropna()&lt;/code&gt; or &lt;code&gt;dataframe.fillna()&lt;/code&gt; before calling &lt;code&gt;plot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66261ea96e888a776296757083b0b8ddc152d9c0" translate="yes" xml:space="preserve">
          <source>When inserting a Series that does not have the same index as the DataFrame, it will be conformed to the DataFrame&amp;rsquo;s index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d9398d658bdc75a504c5e01f15ac00d105afdb" translate="yes" xml:space="preserve">
          <source>When inserting a scalar value, it will naturally be propagated to fill the column:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53bd16fbdd18fccb0d835e451b2bbc685238e87" translate="yes" xml:space="preserve">
          <source>When integer position is out of bounds</source>
          <target state="translated">Cuando la posición entera está fuera de los límites</target>
        </trans-unit>
        <trans-unit id="1754bbafb7ed1ca2534182d1b27b9e0f7b1921f0" translate="yes" xml:space="preserve">
          <source>When integer position is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd632773e5bdc256c4be9ba1bd3191feb20d94b5" translate="yes" xml:space="preserve">
          <source>When interpolating via a polynomial or spline approximation, you must also specify the degree or order of the approximation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82c024611e931ce1d293d4833f37f78a01ff40e" translate="yes" xml:space="preserve">
          <source>When introducing NAs into an existing &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; via &lt;a href=&quot;../reference/api/pandas.series.reindex#pandas.Series.reindex&quot;&gt;&lt;code&gt;reindex()&lt;/code&gt;&lt;/a&gt; or some other means, boolean and integer types will be promoted to a different dtype in order to store the NAs. The promotions are summarized in this table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5658aad193c3c37a8452fd030a092a4b0597bd" translate="yes" xml:space="preserve">
          <source>When joining columns on columns (potentially a many-to-many join), any indexes on the passed &lt;code&gt;DataFrame&lt;/code&gt; objects &lt;strong&gt;will be discarded&lt;/strong&gt;.</source>
          <target state="translated">Al unir columnas en columnas (potencialmente una combinaci&amp;oacute;n de muchos a muchos), &lt;strong&gt;se descartar&amp;aacute;n los&lt;/strong&gt; &amp;iacute;ndices de los objetos &lt;code&gt;DataFrame&lt;/code&gt; pasados .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e884992c2415bae6234519d66770f93bd61e840" translate="yes" xml:space="preserve">
          <source>When kind equals &amp;lsquo;pandas&amp;rsquo; return pandas objects. When kind equals &amp;lsquo;native&amp;rsquo; return native HDF5 Table objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390078ce51ab1ece7bb4f8f7ba39b5511eb51838" translate="yes" xml:space="preserve">
          <source>When label does not exist in DataFrame</source>
          <target state="translated">Cuando la etiqueta no existe en el DataFrame</target>
        </trans-unit>
        <trans-unit id="b89f2944fb436da53e84258db1ff8007ca2968c3" translate="yes" xml:space="preserve">
          <source>When multiple axes are passed via the &lt;code&gt;ax&lt;/code&gt; keyword, &lt;code&gt;layout&lt;/code&gt;, &lt;code&gt;sharex&lt;/code&gt; and &lt;code&gt;sharey&lt;/code&gt; keywords don&amp;rsquo;t affect to the output. You should explicitly pass &lt;code&gt;sharex=False&lt;/code&gt; and &lt;code&gt;sharey=False&lt;/code&gt;, otherwise you will see a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab73abf1652c55358aeb006f3e599b16dea541d" translate="yes" xml:space="preserve">
          <source>When not passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dda8007fb361e4e9b2052d13b012732628747db" translate="yes" xml:space="preserve">
          <source>When not passing &lt;code&gt;others&lt;/code&gt;, all values are concatenated into a single string:</source>
          <target state="translated">Cuando no se pasan &lt;code&gt;others&lt;/code&gt; , todos los valores se concatenan en una sola cadena:</target>
        </trans-unit>
        <trans-unit id="c34635cdc687f7be54f26017cfe4678602fdeae2" translate="yes" xml:space="preserve">
          <source>When one uses a dict as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c285eece6af8b9de24a06d9e4f702c78e2b2bf" translate="yes" xml:space="preserve">
          <source>When one uses a dict as the &lt;code&gt;to_replace&lt;/code&gt; value, it is like the value(s) in the dict are equal to the &lt;code&gt;value&lt;/code&gt; parameter. &lt;code&gt;s.replace({'a': None})&lt;/code&gt; is equivalent to &lt;code&gt;s.replace(to_replace={'a': None}, value=None, method=None)&lt;/code&gt;:</source>
          <target state="translated">Cuando se usa un dict como valor &lt;code&gt;to_replace&lt;/code&gt; , es como si los valores en el dict fueran iguales al par&amp;aacute;metro &lt;code&gt;value&lt;/code&gt; . &lt;code&gt;s.replace({'a': None})&lt;/code&gt; es equivalente a &lt;code&gt;s.replace(to_replace={'a': None}, value=None, method=None)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2b4389f55947089deac603c8be08fd1b8573a07e" translate="yes" xml:space="preserve">
          <source>When original &lt;code&gt;Series&lt;/code&gt; has &lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt;&lt;code&gt;StringDtype&lt;/code&gt;&lt;/a&gt;, the output columns will all be &lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt;&lt;code&gt;StringDtype&lt;/code&gt;&lt;/a&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2542b6dc043ad06d26cc93e476b1ca9be5d3b363" translate="yes" xml:space="preserve">
          <source>When performing &lt;a href=&quot;../reference/api/pandas.index.union#pandas.Index.union&quot;&gt;&lt;code&gt;Index.union()&lt;/code&gt;&lt;/a&gt; between indexes with different dtypes, the indexes must be cast to a common dtype. Typically, though not always, this is object dtype. The exception is when performing a union between integer and float data. In this case, the integer values are converted to float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b010006feec843216ec4aa7613303324adf1893" translate="yes" xml:space="preserve">
          <source>When presented with mixed dtypes that cannot aggregate, &lt;code&gt;.agg&lt;/code&gt; will only take the valid aggregations. This is similar to how &lt;code&gt;.groupby.agg&lt;/code&gt; works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa44113c25485bfda6d8f6bc3a045ef1dd675e1f" translate="yes" xml:space="preserve">
          <source>When pretty-printing a long sequence, no more then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e3ff310a63023cfc0c7772844ac12840fb1e42" translate="yes" xml:space="preserve">
          <source>When processing raw, messy data you might initially read in the messy data (which potentially has duplicate labels), deduplicate, and then disallow duplicates going forward, to ensure that your data pipeline doesn&amp;rsquo;t introduce duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de02d9232d5829a47b83b4cc08a5e72e59c5bace" translate="yes" xml:space="preserve">
          <source>When pull requests are merged into the &lt;em&gt;pandas&lt;/em&gt;&lt;code&gt;master&lt;/code&gt; branch, the main parts of the documentation are also built by Travis-CI. These docs are then hosted &lt;a href=&quot;https://dev.pandas.io&quot;&gt;here&lt;/a&gt;, see also the &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; section.</source>
          <target state="translated">Cuando las solicitudes de extracci&amp;oacute;n se combinan en la rama &lt;code&gt;master&lt;/code&gt; &lt;em&gt;pandas&lt;/em&gt; , Travis-CI tambi&amp;eacute;n &lt;em&gt;crea&lt;/em&gt; las partes principales de la documentaci&amp;oacute;n. Estos documentos se alojan &lt;a href=&quot;https://dev.pandas.io&quot;&gt;aqu&amp;iacute;&lt;/a&gt; , consulte tambi&amp;eacute;n la secci&amp;oacute;n &lt;a href=&quot;#contributing-ci&quot;&gt;Integraci&amp;oacute;n continua&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b44d74ec06335d73747996508562fdd7c4b7085e" translate="yes" xml:space="preserve">
          <source>When quotechar is specified and quoting is not &lt;code&gt;QUOTE_NONE&lt;/code&gt;, indicate whether or not to interpret two consecutive quotechar elements INSIDE a field as a single &lt;code&gt;quotechar&lt;/code&gt; element.</source>
          <target state="translated">Cuando se especifica quotechar y entre &lt;code&gt;QUOTE_NONE&lt;/code&gt; no es QUOTE_NONE , indique si se deben interpretar o no dos elementos quotechar consecutivos DENTRO de un campo como un solo elemento &lt;code&gt;quotechar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="071e858738ea12503c6305dd3d8251f2c2277962" translate="yes" xml:space="preserve">
          <source>When reading JSON data, automatic coercing into dtypes has some quirks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b227a983010f6cbfe1156f4c0459559ab46cbb" translate="yes" xml:space="preserve">
          <source>When reading code, the contents of an &lt;code&gt;object&lt;/code&gt; dtype array is less clear than &lt;code&gt;'string'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2fa8beb816cb64a1dc17c4d711dbff01bc5b51" translate="yes" xml:space="preserve">
          <source>When reading, the top three functions in terms of speed are &lt;code&gt;test_feather_read&lt;/code&gt;, &lt;code&gt;test_pickle_read&lt;/code&gt; and &lt;code&gt;test_hdf_fixed_read&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872fd821127a903d4955e6044a083f92bcef47b6" translate="yes" xml:space="preserve">
          <source>When relating to other libraries (mainly &lt;code&gt;numpy&lt;/code&gt;), use the name of the module first (not an alias like &lt;code&gt;np&lt;/code&gt;). If the function is in a module which is not the main one, like &lt;code&gt;scipy.sparse&lt;/code&gt;, list the full module (e.g. &lt;code&gt;scipy.sparse.coo_matrix&lt;/code&gt;).</source>
          <target state="translated">Cuando se relacione con otras bibliotecas (principalmente &lt;code&gt;numpy&lt;/code&gt; ), use primero el nombre del m&amp;oacute;dulo (no un alias como &lt;code&gt;np&lt;/code&gt; ). Si la funci&amp;oacute;n est&amp;aacute; en un m&amp;oacute;dulo que no es el principal, como &lt;code&gt;scipy.sparse&lt;/code&gt; , enumere el m&amp;oacute;dulo completo (por ejemplo, &lt;code&gt;scipy.sparse.coo_matrix&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1745010069de867dadb6869d887daf544b207782" translate="yes" xml:space="preserve">
          <source>When replacing multiple &lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;datetime64&lt;/code&gt; objects and the arguments to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411448cfc4df3ae34129aa0d3409c4fe277fed55" translate="yes" xml:space="preserve">
          <source>When replacing multiple &lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;datetime64&lt;/code&gt; objects and the arguments to &lt;code&gt;to_replace&lt;/code&gt; does not match the type of the value being replaced</source>
          <target state="translated">Al reemplazar varios objetos &lt;code&gt;bool&lt;/code&gt; o &lt;code&gt;datetime64&lt;/code&gt; y los argumentos para &lt;code&gt;to_replace&lt;/code&gt; no coinciden con el tipo de valor que se reemplaza</target>
        </trans-unit>
        <trans-unit id="08fa8f3dbb2a4966fec93dcf5d3983d04840cc85" translate="yes" xml:space="preserve">
          <source>When resampling data, missing values may appear (e.g., when the resampling frequency is higher than the original frequency). The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6b09af0c6aba65e5d516638dd8ae5612d7c120" translate="yes" xml:space="preserve">
          <source>When resampling data, missing values may appear (e.g., when the resampling frequency is higher than the original frequency). The &lt;code&gt;nearest&lt;/code&gt; method will replace &lt;code&gt;NaN&lt;/code&gt; values that appeared in the resampled data with the value from the nearest member of the sequence, based on the index value. Missing values that existed in the original data will not be modified. If &lt;code&gt;limit&lt;/code&gt; is given, fill only this many values in each direction for each of the original values.</source>
          <target state="translated">Cuando se remuestrean datos, pueden aparecer valores perdidos (por ejemplo, cuando la frecuencia de remuestreo es mayor que la frecuencia original). El m&amp;eacute;todo &lt;code&gt;nearest&lt;/code&gt; reemplazar&amp;aacute; los valores de &lt;code&gt;NaN&lt;/code&gt; que aparecieron en los datos remuestreados con el valor del miembro m&amp;aacute;s cercano de la secuencia, seg&amp;uacute;n el valor del &amp;iacute;ndice. Los valores faltantes que exist&amp;iacute;an en los datos originales no se modificar&amp;aacute;n. Si se da un &lt;code&gt;limit&lt;/code&gt; , complete solo este n&amp;uacute;mero de valores en cada direcci&amp;oacute;n para cada uno de los valores originales.</target>
        </trans-unit>
        <trans-unit id="b51ca2e663037c6f6f0ddaa2678e57db7aadbef7" translate="yes" xml:space="preserve">
          <source>When setting values in a pandas object, care must be taken to avoid what is called &lt;code&gt;chained indexing&lt;/code&gt;. Here is an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92b30c1e1a6c666818625e8fb24d7e1a0f101d9" translate="yes" xml:space="preserve">
          <source>When specifying the parameter types, Python built-in data types can be used directly (the Python type is preferred to the more verbose string, integer, boolean, etc):</source>
          <target state="translated">Cuando se especifican los tipos de parámetros,se pueden utilizar directamente los tipos de datos incorporados en Python (se prefiere el tipo Python a la cadena más verbosa,entera,booleana,etc.):</target>
        </trans-unit>
        <trans-unit id="1498ea3315578c53dcd1e3a9fbf7d0f90fcc35d6" translate="yes" xml:space="preserve">
          <source>When summing data, NA (missing) values will be treated as zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc38e64579ce0e1a56daa94f750b2b141c1614b" translate="yes" xml:space="preserve">
          <source>When the DataFrame has mixed dtypes, we get a transposed DataFrame with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b42f98d793e16e63d298298fecc50fa1fd9cb03" translate="yes" xml:space="preserve">
          <source>When the DataFrame has mixed dtypes, we get a transposed DataFrame with the &lt;code&gt;object&lt;/code&gt; dtype:</source>
          <target state="translated">Cuando el DataFrame tiene dtypes mixtos, obtenemos un DataFrame transpuesto con el &lt;code&gt;object&lt;/code&gt; dtype:</target>
        </trans-unit>
        <trans-unit id="8d594a44c803cf8349726a569cc2460a60d793c2" translate="yes" xml:space="preserve">
          <source>When the Series or Index is backed by an &lt;a href=&quot;../reference/api/pandas.api.extensions.extensionarray#pandas.api.extensions.ExtensionArray&quot;&gt;&lt;code&gt;ExtensionArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;to_numpy()&lt;/code&gt;&lt;/a&gt; may involve copying data and coercing values. See &lt;a href=&quot;#basics-dtypes&quot;&gt;dtypes&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fa70ab6f7a47d40ffc9d74ad35ab5b174d9aa2" translate="yes" xml:space="preserve">
          <source>When the calling object is a TimedeltaArray, the return type is ndarray. When the calling object is a TimedeltaIndex, the return type is a Float64Index. When the calling object is a Series, the return type is Series of type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986f0e3871a4ecfbf5b66d14050a24a4818420d7" translate="yes" xml:space="preserve">
          <source>When the calling object is a TimedeltaArray, the return type is ndarray. When the calling object is a TimedeltaIndex, the return type is a Float64Index. When the calling object is a Series, the return type is Series of type &lt;code&gt;float64&lt;/code&gt; whose index is the same as the original.</source>
          <target state="translated">Cuando el objeto de llamada es un TimedeltaArray, el tipo de retorno es ndarray. Cuando el objeto de llamada es un TimedeltaIndex, el tipo de retorno es un Float64Index. Cuando el objeto de llamada es una Serie, el tipo de retorno es Serie de tipo &lt;code&gt;float64&lt;/code&gt; cuyo &amp;iacute;ndice es el mismo que el original.</target>
        </trans-unit>
        <trans-unit id="5a513223aa790ba72a92defda97b4b3c69165676" translate="yes" xml:space="preserve">
          <source>When the data is a dict, and &lt;code&gt;columns&lt;/code&gt; is not specified, the &lt;code&gt;DataFrame&lt;/code&gt; columns will be ordered by the dict&amp;rsquo;s insertion order, if you are using Python version &amp;gt;= 3.6 and pandas &amp;gt;= 0.23.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebb817283ab56e97accfcd90ee9331b434d4342" translate="yes" xml:space="preserve">
          <source>When the data is a dict, and an index is not passed, the &lt;code&gt;Series&lt;/code&gt; index will be ordered by the dict&amp;rsquo;s insertion order, if you&amp;rsquo;re using Python version &amp;gt;= 3.6 and pandas version &amp;gt;= 0.23.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54d3965f8d3f4ed20a2848da8c4c77dc0d1ac50" translate="yes" xml:space="preserve">
          <source>When the dtype is homogeneous in the original DataFrame, we get a transposed DataFrame with the same dtype:</source>
          <target state="translated">Cuando el dtype es homogéneo en el DataFrame original,obtenemos un DataFrame transpuesto con el mismo dtype:</target>
        </trans-unit>
        <trans-unit id="9e09c6d817a1d9056bdee9b170d121466345766e" translate="yes" xml:space="preserve">
          <source>When the index is inserted under another level, we can specify under which one with the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a829be98ffdbae5a526529860303301c9f5d9efe" translate="yes" xml:space="preserve">
          <source>When the index is inserted under another level, we can specify under which one with the parameter &lt;code&gt;col_fill&lt;/code&gt;:</source>
          <target state="translated">Cuando el &amp;iacute;ndice se inserta bajo otro nivel, podemos especificar bajo cu&amp;aacute;l con el par&amp;aacute;metro &lt;code&gt;col_fill&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="137c1713cbb665fc14c73205eb74bab466a78d3a" translate="yes" xml:space="preserve">
          <source>When the indices are out of bounds for the array.</source>
          <target state="translated">Cuando los índices están fuera de los límites de la matriz.</target>
        </trans-unit>
        <trans-unit id="e158ff82a697fdc48768a4e9c2bde613ad9251a9" translate="yes" xml:space="preserve">
          <source>When the lengths don&amp;rsquo;t match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526871eca415ad4976ebe8dbeb8ce984ac55fb18" translate="yes" xml:space="preserve">
          <source>When the pattern matches more than one string in the Series, all matches are returned:</source>
          <target state="translated">Cuando el patrón coincide con más de una cadena de la Serie,se devuelven todas las coincidencias:</target>
        </trans-unit>
        <trans-unit id="67aaffd5e2428478ab54542297df50ed2edbed57" translate="yes" xml:space="preserve">
          <source>When the requested timezone cannot be found.</source>
          <target state="translated">Cuando la zona horaria solicitada no puede ser encontrada.</target>
        </trans-unit>
        <trans-unit id="56ed011eefa6344cc3ae6efd4ecd6a8164893bb4" translate="yes" xml:space="preserve">
          <source>When the table already exists and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724465bcabdf5ad12d816f4256c012ab02eb69c0" translate="yes" xml:space="preserve">
          <source>When the table already exists and &lt;code&gt;if_exists&lt;/code&gt; is &amp;lsquo;fail&amp;rsquo; (the default).</source>
          <target state="translated">Cuando la tabla ya existe y &lt;code&gt;if_exists&lt;/code&gt; es 'fail' (predeterminado).</target>
        </trans-unit>
        <trans-unit id="36a8704604f0000668e4b3c1dfcc5013c42350e2" translate="yes" xml:space="preserve">
          <source>When the two DataFrames don&amp;rsquo;t have identical labels or shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db095f7dfbe0feda55b2d1a1e1be16b8062a363c" translate="yes" xml:space="preserve">
          <source>When there are any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c1c658d030353b69d980ed39918bbd37867599" translate="yes" xml:space="preserve">
          <source>When there are any &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;columns&lt;/code&gt; combinations with multiple values. &lt;code&gt;DataFrame.pivot_table&lt;/code&gt; when you need to aggregate.</source>
          <target state="translated">Cuando hay alg&amp;uacute;n &lt;code&gt;index&lt;/code&gt; , combinaciones de &lt;code&gt;columns&lt;/code&gt; con m&amp;uacute;ltiples valores. &lt;code&gt;DataFrame.pivot_table&lt;/code&gt; cuando necesite agregar.</target>
        </trans-unit>
        <trans-unit id="6273a7b1358591d7723a417588629a58e9ea0e86" translate="yes" xml:space="preserve">
          <source>When there are duplicate values that cannot all fit in a Series of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7dcf2b13d836d8e5cd84f648cf1b5c57f5c3bb2" translate="yes" xml:space="preserve">
          <source>When there are duplicate values that cannot all fit in a Series of &lt;code&gt;n&lt;/code&gt; elements:</source>
          <target state="translated">Cuando hay valores duplicados que no pueden caber todos en una serie de &lt;code&gt;n&lt;/code&gt; elementos:</target>
        </trans-unit>
        <trans-unit id="2e66f6c388498a54f3d147af32185fcd4ff7ff89" translate="yes" xml:space="preserve">
          <source>When there are multiple rows (or columns) matching the minimum or maximum value, &lt;a href=&quot;../reference/api/pandas.dataframe.idxmin#pandas.DataFrame.idxmin&quot;&gt;&lt;code&gt;idxmin()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.idxmax#pandas.DataFrame.idxmax&quot;&gt;&lt;code&gt;idxmax()&lt;/code&gt;&lt;/a&gt; return the first matching index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb2d4bc692a18f360a34d38c80867c42d1eaa36" translate="yes" xml:space="preserve">
          <source>When to switch from the verbose to the truncated output. If the DataFrame has more than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce9c5cfde3159b7dee94853084aa241c34d7f69" translate="yes" xml:space="preserve">
          <source>When to switch from the verbose to the truncated output. If the DataFrame has more than &lt;code&gt;max_cols&lt;/code&gt; columns, the truncated output is used. By default, the setting in &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; is used.</source>
          <target state="translated">Cu&amp;aacute;ndo cambiar de la salida detallada a la truncada. Si el DataFrame tiene m&amp;aacute;s de &lt;code&gt;max_cols&lt;/code&gt; columnas, se usa la salida truncada. De forma predeterminada, se utiliza la configuraci&amp;oacute;n de &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e08aa2c6fb555cfd1b671c4ffc00c3f84ad5523c" translate="yes" xml:space="preserve">
          <source>When transforming a DataFrame using &lt;a href=&quot;../reference/api/pandas.melt#pandas.melt&quot;&gt;&lt;code&gt;melt()&lt;/code&gt;&lt;/a&gt;, the index will be ignored. The original index values can be kept around by setting the &lt;code&gt;ignore_index&lt;/code&gt; parameter to &lt;code&gt;False&lt;/code&gt; (default is &lt;code&gt;True&lt;/code&gt;). This will however duplicate them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff836aa009a7378f4dd10667c320ed1f19d9e641" translate="yes" xml:space="preserve">
          <source>When trying to convert a subset of columns to a specified type using &lt;a href=&quot;../reference/api/pandas.dataframe.astype#pandas.DataFrame.astype&quot;&gt;&lt;code&gt;astype()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.loc#pandas.DataFrame.loc&quot;&gt;&lt;code&gt;loc()&lt;/code&gt;&lt;/a&gt;, upcasting occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de60fbc56828b7965ebca8df9f7d8e3bc2e3589f" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;../reference/api/pandas.dataframe.eval#pandas.DataFrame.eval&quot;&gt;&lt;code&gt;DataFrame.eval()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.query#pandas.DataFrame.query&quot;&gt;&lt;code&gt;DataFrame.query()&lt;/code&gt;&lt;/a&gt;, this allows you to have a local variable and a &lt;a href=&quot;../reference/api/pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; column with the same name in an expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4d6bcf90cd726d6feeae5d065ab8b5176962c9" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;.loc&lt;/code&gt; with slices, if both the start and the stop labels are present in the index, then elements &lt;em&gt;located&lt;/em&gt; between the two (including them) are returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37a804e6e41127bfad29c4306b45de53e73b2df" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Styler.apply(func, axis=None)&lt;/code&gt;, the function must return a DataFrame with the same index and column labels.</source>
          <target state="translated">Cuando se usa &lt;code&gt;Styler.apply(func, axis=None)&lt;/code&gt; , la funci&amp;oacute;n debe devolver un DataFrame con el mismo &amp;iacute;ndice y etiquetas de columna.</target>
        </trans-unit>
        <trans-unit id="bcaa0b01e3b1bee5c59b9a42ae4167ff2f9d8e37" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;dtype=CategoricalDtype&lt;/code&gt;, &amp;ldquo;unexpected&amp;rdquo; values outside of &lt;code&gt;dtype.categories&lt;/code&gt; are treated as missing values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c3c957ce77112a09cc4f71677079c570ff8c11" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;engine='numba'&lt;/code&gt;, there will be no &amp;ldquo;fall back&amp;rdquo; behavior internally. The group data and group index will be passed as NumPy arrays to the JITed user defined function, and no alternative execution attempts will be tried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fad9aa4d15229776db11b654752c7d2fe1dc9c7" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;engine='numba'&lt;/code&gt;, there will be no &amp;ldquo;fall back&amp;rdquo; behavior internally. The group data and group index will be passed as numpy arrays to the JITed user defined function, and no alternative execution attempts will be tried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5c9b8fc8e549b8e006268c40c0723ac834bff5" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;expand=True&lt;/code&gt;, the split elements will expand out into separate columns. If NaN is present, it is propagated throughout the columns during the split.</source>
          <target state="translated">Cuando se usa &lt;code&gt;expand=True&lt;/code&gt; , los elementos divididos se expandir&amp;aacute;n en columnas separadas. Si NaN est&amp;aacute; presente, se propaga por las columnas durante la divisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4c5a9d0277936066be7d2f2843b04396898f8974" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;keep='all'&lt;/code&gt;, all duplicate items are maintained:</source>
          <target state="translated">Cuando se usa &lt;code&gt;keep='all'&lt;/code&gt; , todos los elementos duplicados se mantienen:</target>
        </trans-unit>
        <trans-unit id="315c9ed7c20453242eee108cd70becf1f9dc30fc" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;keep='last'&lt;/code&gt;, ties are resolved in reverse order:</source>
          <target state="translated">Cuando se usa &lt;code&gt;keep='last'&lt;/code&gt; , los empates se resuelven en orden inverso:</target>
        </trans-unit>
        <trans-unit id="29d24eb180dd53de2a3c5fb004e4844bcc2496e8" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;pytz&lt;/code&gt; time zones, &lt;a href=&quot;../reference/api/pandas.datetimeindex#pandas.DatetimeIndex&quot;&gt;&lt;code&gt;DatetimeIndex&lt;/code&gt;&lt;/a&gt; will construct a different time zone object than a &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt; for the same time zone input. A &lt;a href=&quot;../reference/api/pandas.datetimeindex#pandas.DatetimeIndex&quot;&gt;&lt;code&gt;DatetimeIndex&lt;/code&gt;&lt;/a&gt; can hold a collection of &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt; objects that may have different UTC offsets and cannot be succinctly represented by one &lt;code&gt;pytz&lt;/code&gt; time zone instance while one &lt;a href=&quot;../reference/api/pandas.timestamp#pandas.Timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt; represents one point in time with a specific UTC offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4d4ddda9ba8f9e52fd32308ea4212757485cc7" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;Categorical&lt;/code&gt; grouper (as a single grouper, or as part of multiple groupers), the &lt;code&gt;observed&lt;/code&gt; keyword controls whether to return a cartesian product of all possible groupers values (&lt;code&gt;observed=False&lt;/code&gt;) or only those that are observed groupers (&lt;code&gt;observed=True&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c62a0bb8f084b2afc6c6cbd323d041ca2986055" translate="yes" xml:space="preserve">
          <source>When using a secondary_y axis, automatically mark the column labels with &amp;ldquo;(right)&amp;rdquo; in the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fa8d4c0e1d57c3258b880b66b359610ba3955c" translate="yes" xml:space="preserve">
          <source>When using the &amp;lsquo;index&amp;rsquo; orientation, the column names can be specified manually:</source>
          <target state="translated">Cuando se usa la orientaci&amp;oacute;n '&amp;iacute;ndice', los nombres de las columnas se pueden especificar manualmente:</target>
        </trans-unit>
        <trans-unit id="0a5e9197895d77f2129e1594627201c9aaa9ce48" translate="yes" xml:space="preserve">
          <source>When we draw a dice 6000 times, we expect to get each value around 1000 times. But when we draw two dices and sum the result, the distribution is going to be quite different. A histogram illustrates those distributions.</source>
          <target state="translated">Cuando sacamos un dado 6000 veces,esperamos obtener cada valor alrededor de 1000 veces.Pero cuando sacamos dos dados y sumamos el resultado,la distribución será muy diferente.Un histograma ilustra esas distribuciones.</target>
        </trans-unit>
        <trans-unit id="c56d3d43a87fc11354ce04fef9a3b040e787b284" translate="yes" xml:space="preserve">
          <source>When we reset the index, the old index is added as a column, and a new sequential index is used:</source>
          <target state="translated">Cuando reajustamos el índice,el antiguo índice se añade como una columna,y se utiliza un nuevo índice secuencial:</target>
        </trans-unit>
        <trans-unit id="81706afb3f08a0e7e3a20f7ec821561784a0db47" translate="yes" xml:space="preserve">
          <source>When working with an &lt;code&gt;Index&lt;/code&gt; object directly, rather than via a &lt;code&gt;DataFrame&lt;/code&gt;, &lt;a href=&quot;../reference/api/pandas.index.set_names#pandas.Index.set_names&quot;&gt;&lt;code&gt;Index.set_names()&lt;/code&gt;&lt;/a&gt; can be used to change the names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26002c60683058a453e93f25c10d001bc2332b6b" translate="yes" xml:space="preserve">
          <source>When working with heterogeneous data, the dtype of the resulting ndarray will be chosen to accommodate all of the data involved. For example, if strings are involved, the result will be of object dtype. If there are only floats and integers, the resulting array will be of float dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bc68ad0906c3361052afcceab5f6fc5d41e775" translate="yes" xml:space="preserve">
          <source>When working with raw NumPy arrays, looping through value-by-value is usually not necessary. The same is true when working with Series in pandas. Series can also be passed into most NumPy methods expecting an ndarray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23fff035bd0e8e2b359894dd34b0e36bb191bb2" translate="yes" xml:space="preserve">
          <source>When working with text data, where each valid element is a string or missing, we recommend using &lt;a href=&quot;api/pandas.stringdtype#pandas.StringDtype&quot;&gt;&lt;code&gt;StringDtype&lt;/code&gt;&lt;/a&gt; (with the alias &lt;code&gt;&quot;string&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf2469dbd87fb0a6fdf5cb5d01a8a6a47f96521" translate="yes" xml:space="preserve">
          <source>When writing performance-sensitive code, there is a good reason to spend some time becoming a reindexing ninja: &lt;strong&gt;many operations are faster on pre-aligned data&lt;/strong&gt;. Adding two unaligned DataFrames internally triggers a reindexing step. For exploratory analysis you will hardly notice the difference (because &lt;code&gt;reindex&lt;/code&gt; has been heavily optimized), but when CPU cycles matter sprinkling a few explicit &lt;code&gt;reindex&lt;/code&gt; calls here and there can have an impact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32935bbda5fc841806edb88198852464f8e8cee" translate="yes" xml:space="preserve">
          <source>When writing style functions, you take care of producing the CSS attribute / value pairs you want. Pandas matches those up with the CSS classes that identify each cell.</source>
          <target state="translated">Cuando escribes funciones de estilo,te encargas de producir los pares de atributos/valores CSS que quieras.Los pandas los relacionan con las clases CSS que identifican cada celda.</target>
        </trans-unit>
        <trans-unit id="ff2fb9d362d2757eb75d210d3858f958311caffa" translate="yes" xml:space="preserve">
          <source>When writing timezone aware data to databases that do not support timezones, the data will be written as timezone naive timestamps that are in local time with respect to the timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c526dd24e7a7890e1cd7b561affa8dff231182" translate="yes" xml:space="preserve">
          <source>When writing, the top three functions in terms of speed are &lt;code&gt;test_feather_write&lt;/code&gt;, &lt;code&gt;test_hdf_fixed_write&lt;/code&gt; and &lt;code&gt;test_hdf_fixed_write_compress&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cad6d87f5cdc0a9faf3f52e6faeeb1d92e4d1e7" translate="yes" xml:space="preserve">
          <source>When you compare two unordered categoricals with the same categories, the order is not considered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21f6c8427b4e8295b3f6c690fab15cf148ab52d" translate="yes" xml:space="preserve">
          <source>When you have a function that cannot work on the full DataFrame/Series at once, it is better to use &lt;a href=&quot;../reference/api/pandas.dataframe.apply#pandas.DataFrame.apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; instead of iterating over the values. See the docs on &lt;a href=&quot;#basics-apply&quot;&gt;function application&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8010f00f30a5775cb8f09ed714f8391fa4eb635" translate="yes" xml:space="preserve">
          <source>When you pass other type of arguments via &lt;code&gt;color&lt;/code&gt; keyword, it will be directly passed to matplotlib for all the &lt;code&gt;boxes&lt;/code&gt;, &lt;code&gt;whiskers&lt;/code&gt;, &lt;code&gt;medians&lt;/code&gt; and &lt;code&gt;caps&lt;/code&gt; colorization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee88fcbba77b00486dbd6359c5b5295924dbd3c" translate="yes" xml:space="preserve">
          <source>When you use chained indexing, the order and type of the indexing operation partially determine whether the result is a slice into the original object, or a copy of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263278c083269b77285aa9571251f5635d9f8d70" translate="yes" xml:space="preserve">
          <source>When you want every pairing of the elements in two iterables, it can be easier to use the &lt;a href=&quot;../reference/api/pandas.multiindex.from_product#pandas.MultiIndex.from_product&quot;&gt;&lt;code&gt;MultiIndex.from_product()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Cuando desee cada emparejamiento de los elementos en dos iterables, puede ser m&amp;aacute;s f&amp;aacute;cil utilizar el m&amp;eacute;todo &lt;a href=&quot;../reference/api/pandas.multiindex.from_product#pandas.MultiIndex.from_product&quot;&gt; &lt;code&gt;MultiIndex.from_product()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="689df68b89aa82dfd47326209affc957ca044460" translate="yes" xml:space="preserve">
          <source>When you want to update the feature branch with changes in master after you created the branch, check the section on &lt;a href=&quot;#contributing-update-pr&quot;&gt;updating a PR&lt;/a&gt;.</source>
          <target state="translated">Cuando desee actualizar la rama de funciones con cambios en el maestro despu&amp;eacute;s de haber creado la rama, consulte la secci&amp;oacute;n sobre c&amp;oacute;mo &lt;a href=&quot;#contributing-update-pr&quot;&gt;actualizar un PR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c3e06de33d3da280d127d0465fcb6057c3c87f3" translate="yes" xml:space="preserve">
          <source>When you want your changes to appear publicly on your GitHub page, push your forked feature branch&amp;rsquo;s commits:</source>
          <target state="translated">Cuando desee que sus cambios aparezcan p&amp;uacute;blicamente en su p&amp;aacute;gina de GitHub, presione las confirmaciones de su rama de caracter&amp;iacute;sticas bifurcada:</target>
        </trans-unit>
        <trans-unit id="859279367089a6d96bcf1e5c6c122a62a6e0dcce" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re ready to ask for a code review, file a pull request. Before you do, once again make sure that you have followed all the guidelines outlined in this document regarding code style, tests, performance tests, and documentation. You should also double check your branch changes against the branch it was based on:</source>
          <target state="translated">Cuando est&amp;eacute; listo para solicitar una revisi&amp;oacute;n del c&amp;oacute;digo, presente una solicitud de extracci&amp;oacute;n. Antes de hacerlo, aseg&amp;uacute;rese una vez m&amp;aacute;s de haber seguido todas las pautas descritas en este documento con respecto al estilo del c&amp;oacute;digo, las pruebas, las pruebas de rendimiento y la documentaci&amp;oacute;n. Tambi&amp;eacute;n debe verificar los cambios de su rama con la rama en la que se bas&amp;oacute;:</target>
        </trans-unit>
        <trans-unit id="31f5e4a25df56f745c3f27a145932290c25e6147" translate="yes" xml:space="preserve">
          <source>When your DataFrame contains a mixture of data types, &lt;a href=&quot;../reference/api/pandas.dataframe.values#pandas.DataFrame.values&quot;&gt;&lt;code&gt;DataFrame.values&lt;/code&gt;&lt;/a&gt; may involve copying data and coercing values to a common dtype, a relatively expensive operation. &lt;a href=&quot;../reference/api/pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;DataFrame.to_numpy()&lt;/code&gt;&lt;/a&gt;, being a method, makes it clearer that the returned NumPy array may not be a view on the same data in the DataFrame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ba287d1b7cde6be4ebcedac63775f209f53211" translate="yes" xml:space="preserve">
          <source>When your Series contains an &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/development/extending.html#extending-extension-types&quot;&gt;extension type&lt;/a&gt;, it&amp;rsquo;s unclear whether &lt;a href=&quot;../reference/api/pandas.series.values#pandas.Series.values&quot;&gt;&lt;code&gt;Series.values&lt;/code&gt;&lt;/a&gt; returns a NumPy array or the extension array. &lt;a href=&quot;../reference/api/pandas.series.array#pandas.Series.array&quot;&gt;&lt;code&gt;Series.array&lt;/code&gt;&lt;/a&gt; will always return an &lt;a href=&quot;../reference/api/pandas.api.extensions.extensionarray#pandas.api.extensions.ExtensionArray&quot;&gt;&lt;code&gt;ExtensionArray&lt;/code&gt;&lt;/a&gt;, and will never copy data. &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt; will always return a NumPy array, potentially at the cost of copying / coercing values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525f61b6729229b1a8854a9e50bcaa52ea96b131" translate="yes" xml:space="preserve">
          <source>Where</source>
          <target state="translated">Where</target>
        </trans-unit>
        <trans-unit id="907a50cdf0e404fa16d8ec46ed1cf8f7f4c436d4" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;cond&lt;/code&gt; is False, keep the original value. Where True, replace with corresponding value from &lt;code&gt;other&lt;/code&gt;. If &lt;code&gt;cond&lt;/code&gt; is callable, it is computed on the Series/DataFrame and should return boolean Series/DataFrame or array. The callable must not change input Series/DataFrame (though pandas doesn&amp;rsquo;t check it).</source>
          <target state="translated">Donde &lt;code&gt;cond&lt;/code&gt; es False, mantenga el valor original. Donde sea verdadero, reempl&amp;aacute;celo con el valor correspondiente de &lt;code&gt;other&lt;/code&gt; . Si &lt;code&gt;cond&lt;/code&gt; es invocable, se calcula en Series / DataFrame y debe devolver Boolean Series / DataFrame o matriz. El invocable no debe cambiar la serie de entrada / DataFrame (aunque pandas no lo marca).</target>
        </trans-unit>
        <trans-unit id="074ea680722fd2f03880dd703ff27577e31f9bb9" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;cond&lt;/code&gt; is True, keep the original value. Where False, replace with corresponding value from &lt;code&gt;other&lt;/code&gt;. If &lt;code&gt;cond&lt;/code&gt; is callable, it is computed on the Series/DataFrame and should return boolean Series/DataFrame or array. The callable must not change input Series/DataFrame (though pandas doesn&amp;rsquo;t check it).</source>
          <target state="translated">Donde &lt;code&gt;cond&lt;/code&gt; es True, conserva el valor original. Donde sea False, reempl&amp;aacute;celo con el valor correspondiente de &lt;code&gt;other&lt;/code&gt; . Si &lt;code&gt;cond&lt;/code&gt; es invocable, se calcula en Series / DataFrame y debe devolver Boolean Series / DataFrame o matriz. El invocable no debe cambiar la serie de entrada / DataFrame (aunque pandas no lo marca).</target>
        </trans-unit>
        <trans-unit id="820bdbe72a318fb8fe155407c66407511526f66f" translate="yes" xml:space="preserve">
          <source>Where can also accept &lt;code&gt;axis&lt;/code&gt; and &lt;code&gt;level&lt;/code&gt; parameters to align the input when performing the &lt;code&gt;where&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85187dfee2b32a0dddded298d29c48709fb97dd1" translate="yes" xml:space="preserve">
          <source>Where the value is a callable, evaluated on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115729b31bfba27ceafd5b66785e295c64fdbe25" translate="yes" xml:space="preserve">
          <source>Where the value is a callable, evaluated on &lt;code&gt;df&lt;/code&gt;:</source>
          <target state="translated">Donde el valor es invocable, evaluado en &lt;code&gt;df&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f9992f51fe4ba5d0709875d722d1f6c069802346" translate="yes" xml:space="preserve">
          <source>Where there are duplicate values:</source>
          <target state="translated">Donde hay valores duplicados:</target>
        </trans-unit>
        <trans-unit id="155b8b8ce82236d8d4c14dc102d2a18531f1c8a5" translate="yes" xml:space="preserve">
          <source>Where to reorder levels.</source>
          <target state="translated">Dónde reordenar los niveles.</target>
        </trans-unit>
        <trans-unit id="dbee33813cd8c18a476718c9787a8d500ee8f51b" translate="yes" xml:space="preserve">
          <source>Where to send the output. By default, the output is printed to sys.stdout. Pass a writable buffer if you need to further process the output.</source>
          <target state="translated">Dónde enviar la salida.Por defecto,la salida se imprime en sys.stdout.Pase un buffer de escritura si necesita seguir procesando la salida.</target>
        </trans-unit>
        <trans-unit id="4af9617f74f3fb16e775a0d165421fe00441bc1b" translate="yes" xml:space="preserve">
          <source>Where to start?</source>
          <target state="translated">¿Por dónde empezar?</target>
        </trans-unit>
        <trans-unit id="8c0be4d149f3b4fb1243671a27f9eb0e08a7fd3f" translate="yes" xml:space="preserve">
          <source>Where x coefficients correspond to the values of each dimension and t is linearly spaced between -pi and +pi. Each row of frame then corresponds to a single curve.</source>
          <target state="translated">Donde los coeficientes x corresponden a los valores de cada dimensión y t está linealmente espaciado entre -pi y +pi.Cada fila de cuadro corresponde entonces a una sola curva.</target>
        </trans-unit>
        <trans-unit id="2731133172962687c88ca95164ea9d0b15fa2cc6" translate="yes" xml:space="preserve">
          <source>Whereas if &lt;code&gt;ignore_na=True&lt;/code&gt;, the weighted average would be calculated as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f2e9f1a3acb8b9ca1a14c8b2af3096ad26a527" translate="yes" xml:space="preserve">
          <source>Whether</source>
          <target state="translated">Whether</target>
        </trans-unit>
        <trans-unit id="b67ec6ea21c47c8522487bf095c6157e49ddc8eb" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; can be compiled as a regex pattern.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; se puede compilar como un patr&amp;oacute;n de expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="86e221cd05a39625ddfcbfa2be6370d460c8b0ea" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; has dict-like properties.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; tiene propiedades similares a dict.</target>
        </trans-unit>
        <trans-unit id="b54fda8c33339cb35d33701e66c3b8ec9c220bc2" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; has file-like properties.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; tiene propiedades similares a archivos.</target>
        </trans-unit>
        <trans-unit id="a7ed8449cf7d0793d51602e9eef86dc25501d3b3" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; has list-like properties.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; tiene propiedades similares a listas.</target>
        </trans-unit>
        <trans-unit id="9db5eddf72afca49f5b966f94392dc8e6944ebaa" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is a named tuple.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; es una tupla con nombre.</target>
        </trans-unit>
        <trans-unit id="c64d7f907803c16c6e49c8f748ccccfa9b906318" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is a number or not.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; es un n&amp;uacute;mero o no.</target>
        </trans-unit>
        <trans-unit id="34cf150a8ca6f437db64563df8973f109a697e99" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is a regex pattern.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; es un patr&amp;oacute;n de expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="bd5749eee622c804c8bc82797e6f33311cf5462b" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is an iterator.</source>
          <target state="translated">Si &lt;code&gt;obj&lt;/code&gt; es un iterador.</target>
        </trans-unit>
        <trans-unit id="4bcd2b9d6e3db50df0f74ff54eba5b932a7e2c86" translate="yes" xml:space="preserve">
          <source>Whether a copy or a reference is returned for a setting operation may depend on the context. This is sometimes called &lt;code&gt;chained assignment&lt;/code&gt; and should be avoided. See &lt;a href=&quot;indexing#indexing-view-versus-copy&quot;&gt;Returning a View versus Copy&lt;/a&gt;.</source>
          <target state="translated">El que se devuelva una copia o una referencia para una operaci&amp;oacute;n de configuraci&amp;oacute;n puede depender del contexto. Esto a veces se denomina &lt;code&gt;chained assignment&lt;/code&gt; y debe evitarse. Consulte &lt;a href=&quot;indexing#indexing-view-versus-copy&quot;&gt;Devolver una vista frente a una copia&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cd5f8136312f916e2c889d78891edf83599ba90" translate="yes" xml:space="preserve">
          <source>Whether a copy or a reference is returned for a setting operation, may depend on the context. This is sometimes called &lt;code&gt;chained assignment&lt;/code&gt; and should be avoided. See &lt;a href=&quot;#indexing-view-versus-copy&quot;&gt;Returning a View versus Copy&lt;/a&gt;.</source>
          <target state="translated">Si se devuelve una copia o una referencia para una operaci&amp;oacute;n de configuraci&amp;oacute;n, puede depender del contexto. Esto a veces se denomina &lt;code&gt;chained assignment&lt;/code&gt; y debe evitarse. Consulte &lt;a href=&quot;#indexing-view-versus-copy&quot;&gt;Devolver una vista frente a una copia&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a33e7df555080b16ccf1f2b63f9343cd96dc1049" translate="yes" xml:space="preserve">
          <source>Whether each column contains at least one True element (the default).</source>
          <target state="translated">Si cada columna contiene al menos un elemento True (el valor por defecto).</target>
        </trans-unit>
        <trans-unit id="d211088a9d601f48a1f668dcaf97f6bf784cee44" translate="yes" xml:space="preserve">
          <source>Whether each element in the DataFrame is contained in values.</source>
          <target state="translated">Si cada elemento del DataFrame está contenido en valores.</target>
        </trans-unit>
        <trans-unit id="f8939ddd903709f0f73f01084f6eae98288a0427" translate="yes" xml:space="preserve">
          <source>Whether elements in Series are contained in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f0330178934acf893370d010d341574b01df37" translate="yes" xml:space="preserve">
          <source>Whether elements with &amp;ldquo;display: none&amp;rdquo; should be parsed</source>
          <target state="translated">Si los elementos con &quot;display: none&quot; deben analizarse</target>
        </trans-unit>
        <trans-unit id="cce05533e525fc7c028f0dc8f94c458e55cf3154" translate="yes" xml:space="preserve">
          <source>Whether elements with &amp;ldquo;display: none&amp;rdquo; should be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55616cd839c86b081736604f31bd21cb3715714" translate="yes" xml:space="preserve">
          <source>Whether object dtypes should be converted to &lt;code&gt;BooleanDtypes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75d88a6fbf77cf16c4c4fae67675baeefd8d50b" translate="yes" xml:space="preserve">
          <source>Whether object dtypes should be converted to &lt;code&gt;StringDtype()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505612d56b2c38220749f7f059273b5d0197c5db" translate="yes" xml:space="preserve">
          <source>Whether object dtypes should be converted to the best possible types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388b81d45d66f9fc51387b252dd08226ab90cb7c" translate="yes" xml:space="preserve">
          <source>Whether or not the Index has duplicate values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e41898cd1254b4eafe597289c49f9dbce5a0d8c" translate="yes" xml:space="preserve">
          <source>Whether or not the Index holds Interval objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46da58b4a0ac78421a7fbe26a7acd02378a69c30" translate="yes" xml:space="preserve">
          <source>Whether or not the Index holds data with mixed data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a1b4df6584252c6f8aa22e3ff1e301f974611a" translate="yes" xml:space="preserve">
          <source>Whether or not the Index is of the object dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da394f60688506c1a85465065fc0347a13ff8665" translate="yes" xml:space="preserve">
          <source>Whether or not the Index only consists of booleans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3cecbcebbe96dd8dc76e6185ef487766559915" translate="yes" xml:space="preserve">
          <source>Whether or not the Index only consists of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69de1bac7c77b1329ba16e1b1b8ff458955d261a" translate="yes" xml:space="preserve">
          <source>Whether or not the Index only consists of numeric data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32d876acd20a8be4a915ff5f9d2becc61ed7bfe" translate="yes" xml:space="preserve">
          <source>Whether or not the Index only consists of only consists of floats, NaNs, or a mix of floats, integers, or NaNs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22776b3b28f0c13d149788d783fd9c3ab3eee812" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a boolean dtype.</source>
          <target state="translated">Si la matriz o el dtype es o no de tipo booleano.</target>
        </trans-unit>
        <trans-unit id="53db8fc094cc1cc97f1bf97cbe083085ee34e071" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a complex dtype.</source>
          <target state="translated">Si la matriz o el tipo es de un tipo complejo o no.</target>
        </trans-unit>
        <trans-unit id="7c21199c933bdbdd7b8dc3a0541115e44f148500" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a float dtype.</source>
          <target state="translated">Si la matriz o el tipo es de tipo flotante o no.</target>
        </trans-unit>
        <trans-unit id="cd6dd72e71a3321a0db85699b6d193d5372ea446" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a numeric dtype.</source>
          <target state="translated">Si la matriz o el tipo es de tipo numérico o no.</target>
        </trans-unit>
        <trans-unit id="a3429cd2e6e4c2e26b2d4302bbfd449abdc1301b" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a signed integer dtype and not an instance of timedelta64.</source>
          <target state="translated">Si la matriz o el dtype es o no de un dtype entero firmado y no una instancia de timedelta64.</target>
        </trans-unit>
        <trans-unit id="940b6df13ab4ccab12f141c3b704b36fc3ffbe4e" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of an integer dtype and not an instance of timedelta64.</source>
          <target state="translated">Si la matriz o dtype es o no de un dtype entero y no una instancia de timedelta64.</target>
        </trans-unit>
        <trans-unit id="40c091440f319d97fb52c4a9c24fca04f3df7942" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of an unsigned integer dtype.</source>
          <target state="translated">Independientemente de que la matriz o el tipo d sea de un tipo entero sin signo.</target>
        </trans-unit>
        <trans-unit id="a5ba3b5c819993a163d111fb07cee5ceb50803ac" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the datetime64 dtype.</source>
          <target state="translated">Independientemente de que la matriz o el dtype sea o no del tipo datetime64 .</target>
        </trans-unit>
        <trans-unit id="c894c79ede346e315a03b8c10cf686f5f6924ade" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the datetime64[ns] dtype.</source>
          <target state="translated">Si la matriz o dtype es del tipo datetime64[ns]dtype.</target>
        </trans-unit>
        <trans-unit id="4b137d4adc74a6d1641de347eebb0c6b74a95171" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the int64 dtype.</source>
          <target state="translated">Si la matriz o el dtype es o no del tipo int64 dtype.</target>
        </trans-unit>
        <trans-unit id="9ac065439de9fc591ba644f0ac832c5f7751a4d5" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the string dtype.</source>
          <target state="translated">Si la matriz o el tipo d es o no del tipo d de la cadena.</target>
        </trans-unit>
        <trans-unit id="c72ce182e5fe9c83684834808592f516c47fab39" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the timedelta64[ns] dtype.</source>
          <target state="translated">Si la matriz o dtype es del tipo timedelta64[ns]dtype o no.</target>
        </trans-unit>
        <trans-unit id="a365b6d8116fa8fa1987026c6225c9eac8dbd333" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is a datetime array-like with a timezone component in its dtype.</source>
          <target state="translated">Si la matriz es o no una matriz de fecha y hora con un componente de zona horaria en su tipo.</target>
        </trans-unit>
        <trans-unit id="b5a80f9880539a0ac520fc4d7ce23b42cf218378" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is a pandas sparse array.</source>
          <target state="translated">Ya sea que el conjunto sea o no un conjunto de pandas dispersos.</target>
        </trans-unit>
        <trans-unit id="3900a48b1137ab24dec388430e1d4e924326abdc" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is a periodical index.</source>
          <target state="translated">Si la matriz es o no un índice periódico.</target>
        </trans-unit>
        <trans-unit id="c3a710f4ed959c060d39be5dff8e4962f596542d" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is of a Categorical instance.</source>
          <target state="translated">Ya sea que la matriz sea o no de una instancia categórica.</target>
        </trans-unit>
        <trans-unit id="f809d324731060928d914f55f0a0eadfc72b5593" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is of a pandas extension class instance.</source>
          <target state="translated">Ya sea que la matriz sea o no de una instancia de clase de extensión de pandas.</target>
        </trans-unit>
        <trans-unit id="e95735a5f5ecf4c52d61bee7ccc101a9c724a3a6" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of a DatetimeTZDtype dtype.</source>
          <target state="translated">Si el tipo de matriz o dtype es de tipo DatetimeTZD.</target>
        </trans-unit>
        <trans-unit id="47d9d3b4a779f209a34bc13fe9cd8ca6afe22de4" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the Categorical dtype.</source>
          <target state="translated">Ya sea que el tipo de matriz o tipo d sea o no del tipo d categórico.</target>
        </trans-unit>
        <trans-unit id="7158b97d2da253b4a9e4c28d7994cbfe409e7a8f" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the Interval dtype.</source>
          <target state="translated">Tanto si el tipo de matriz como el tipo de d es del tipo Intervalo.</target>
        </trans-unit>
        <trans-unit id="7b9336a72c1cb249a8bf147d7e27ebe050b6a6a0" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the Period dtype.</source>
          <target state="translated">Si el tipo de matriz o tipo d es o no del tipo d del período.</target>
        </trans-unit>
        <trans-unit id="acafae59a5ca0680733c7028502fe13aa53acf37" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the datetime64 dtype.</source>
          <target state="translated">Tanto si el tipo de matriz como el tipo de d es del tipo de fecha-hora64 .</target>
        </trans-unit>
        <trans-unit id="0dd9ea660da9d2e9ab3d744f879956331247ba29" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the object dtype.</source>
          <target state="translated">Si el tipo de matriz o tipo d es o no del tipo de objeto d.</target>
        </trans-unit>
        <trans-unit id="14853464945259cb0d8e591c090fdd9b5d66aacf" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the timedelta64 dtype.</source>
          <target state="translated">Tanto si el tipo de matriz como el tipo d es del tipo timedelta64.</target>
        </trans-unit>
        <trans-unit id="25ad7ccc1ef77bde78c2fcef7af04718e5003467" translate="yes" xml:space="preserve">
          <source>Whether or not the categorical is treated as a ordered categorical. If not given, do not change the ordered information.</source>
          <target state="translated">Se trate o no de un categórico ordenado.Si no se da,no cambie la información ordenada.</target>
        </trans-unit>
        <trans-unit id="e911bed13c87e76be6978f04e54d6475b9dcfaf6" translate="yes" xml:space="preserve">
          <source>Whether or not the elements should be ranked in ascending order.</source>
          <target state="translated">Si los elementos deben ser clasificados o no en orden ascendente.</target>
        </trans-unit>
        <trans-unit id="a6e5bd75a6d1aa33eb114875f794270459d1ca97" translate="yes" xml:space="preserve">
          <source>Whether or not the index values only consist of dates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f285d4b910a88654633df2b85c61ded3fb361e" translate="yes" xml:space="preserve">
          <source>Whether or not the new_categories should be considered as a rename of the old categories or as reordered categories.</source>
          <target state="translated">Si las nuevas_categorías deben considerarse o no como un renombre de las antiguas categorías o como categorías reordenadas.</target>
        </trans-unit>
        <trans-unit id="b1c2aacf05b8fb5482a78f5d16228f7f7c0db189" translate="yes" xml:space="preserve">
          <source>Whether or not there are quoted values in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6085149711bcc6aa77ae2cd6cc60714feb74fa01" translate="yes" xml:space="preserve">
          <source>Whether or not there are quoted values in &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">Si hay valores cotizados en &lt;code&gt;self&lt;/code&gt; o no</target>
        </trans-unit>
        <trans-unit id="67e1f022e3e654379610d50549dafc37b444baaa" translate="yes" xml:space="preserve">
          <source>Whether or not this categorical is treated as a ordered categorical. If True, the resulting categorical will be ordered. An ordered categorical respects, when sorted, the order of its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0953b28e960b5132ae06e6c50755a74a171fa93" translate="yes" xml:space="preserve">
          <source>Whether or not this categorical is treated as a ordered categorical. If True, the resulting categorical will be ordered. An ordered categorical respects, when sorted, the order of its &lt;code&gt;categories&lt;/code&gt; attribute (which in turn is the &lt;code&gt;categories&lt;/code&gt; argument, if provided).</source>
          <target state="translated">Si este categ&amp;oacute;rico se trata o no como un categ&amp;oacute;rico ordenado. Si es True, se ordenar&amp;aacute; el categ&amp;oacute;rico resultante. Un categ&amp;oacute;rico ordenado respeta, cuando se ordena, el orden de su atributo de &lt;code&gt;categories&lt;/code&gt; (que a su vez es el argumento de &lt;code&gt;categories&lt;/code&gt; , si se proporciona).</target>
        </trans-unit>
        <trans-unit id="98e221f932c6f5b3d2a4dafc673b072aeecf5d36" translate="yes" xml:space="preserve">
          <source>Whether or not this categorical is treated as a ordered categorical. None can be used to maintain the ordered value of existing categoricals when used in operations that combine categoricals, e.g. astype, and will resolve to False if there is no existing ordered to maintain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f41f381634d1343160aaf2d025509a887a284b" translate="yes" xml:space="preserve">
          <source>Whether or not this categorical is treated as an ordered categorical. If not given here or in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e3117bb9b9850047dcaffe10ee037111938f59" translate="yes" xml:space="preserve">
          <source>Whether or not this categorical is treated as an ordered categorical. If not given here or in &lt;code&gt;dtype&lt;/code&gt;, the resulting categorical will be unordered.</source>
          <target state="translated">Si este categ&amp;oacute;rico se trata o no como un categ&amp;oacute;rico ordenado. Si no se proporciona aqu&amp;iacute; o en &lt;code&gt;dtype&lt;/code&gt; , el categ&amp;oacute;rico resultante no estar&amp;aacute; ordenado.</target>
        </trans-unit>
        <trans-unit id="c886c11f08c3cf79796ad3859236bb2ebaf99261" translate="yes" xml:space="preserve">
          <source>Whether or not to add the categories inplace or return a copy of this categorical with added categories.</source>
          <target state="translated">Si agregar o no las categorías en el lugar o devolver una copia de este categórico con las categorías agregadas.</target>
        </trans-unit>
        <trans-unit id="ae65567c4f49b1706573053f6df13a6bca942c7b" translate="yes" xml:space="preserve">
          <source>Whether or not to display the returned rankings in percentile form.</source>
          <target state="translated">Si mostrar o no las clasificaciones devueltas en forma de percentil.</target>
        </trans-unit>
        <trans-unit id="0932682dcfb8c61fb8c1d712ea0d3ecbac2f28a7" translate="yes" xml:space="preserve">
          <source>Whether or not to drop unused categories inplace or return a copy of this categorical with unused categories dropped.</source>
          <target state="translated">Si debe o no dejar caer las categorías no utilizadas en el lugar o devolver una copia de este categórico con las categorías no utilizadas caídas.</target>
        </trans-unit>
        <trans-unit id="03509b09dc32fa400d63bf710de8af775530c07c" translate="yes" xml:space="preserve">
          <source>Whether or not to include the default NaN values when parsing the data. Depending on whether</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d0b46ba7814fe567d93ff178d253945b560041" translate="yes" xml:space="preserve">
          <source>Whether or not to include the default NaN values when parsing the data. Depending on whether &lt;code&gt;na_values&lt;/code&gt; is passed in, the behavior is as follows:</source>
          <target state="translated">Si incluir o no los valores NaN predeterminados al analizar los datos. Dependiendo de si se pasa &lt;code&gt;na_values&lt;/code&gt; , el comportamiento es el siguiente:</target>
        </trans-unit>
        <trans-unit id="f7c3985ceb1c9341da1f2004466ddb9109bcebf2" translate="yes" xml:space="preserve">
          <source>Whether or not to remove the categories inplace or return a copy of this categorical with removed categories.</source>
          <target state="translated">Si se eliminan o no las categorías en el lugar o se devuelve una copia de este categórico con las categorías eliminadas.</target>
        </trans-unit>
        <trans-unit id="102352f97f600fdcc02f3cd27e0caac2f2ebaac7" translate="yes" xml:space="preserve">
          <source>Whether or not to rename the categories inplace or return a copy of this categorical with renamed categories.</source>
          <target state="translated">Si se debe o no cambiar el nombre de las categorías en el lugar o devolver una copia de este categórico con las categorías renombradas.</target>
        </trans-unit>
        <trans-unit id="f6a4770058338b225bbfb54f535e8e7a5e026d92" translate="yes" xml:space="preserve">
          <source>Whether or not to reorder the categories in-place or return a copy of this categorical with reordered categories.</source>
          <target state="translated">Si reordenar o no las categorías en el lugar o devolver una copia de este categórico con las categorías reordenadas.</target>
        </trans-unit>
        <trans-unit id="c2bbeeb7dc01f1760cb5c9a522c695db925c7c3d" translate="yes" xml:space="preserve">
          <source>Whether or not to reorder the categories inplace or return a copy of this categorical with reordered categories.</source>
          <target state="translated">Si reordenar o no las categorías en su lugar o devolver una copia de este categórico con las categorías reordenadas.</target>
        </trans-unit>
        <trans-unit id="d4b36acbe27f2136c54ab7655a06cff1adf58b47" translate="yes" xml:space="preserve">
          <source>Whether or not to return a copy.</source>
          <target state="translated">Si devolver o no una copia.</target>
        </trans-unit>
        <trans-unit id="d46237d36861d5cb4ff96d17161a29bb72f3be14" translate="yes" xml:space="preserve">
          <source>Whether or not to set the ordered attribute in-place or return a copy of this categorical with ordered set to False.</source>
          <target state="translated">Si poner o no el atributo ordenado en su lugar o devolver una copia de este categórico con el conjunto ordenado a False.</target>
        </trans-unit>
        <trans-unit id="cf76be43556fb1c1c180d537267fd15249eac9ba" translate="yes" xml:space="preserve">
          <source>Whether or not to set the ordered attribute in-place or return a copy of this categorical with ordered set to True.</source>
          <target state="translated">Si poner o no el atributo ordenado en su lugar o devolver una copia de este categórico con el conjunto ordenado a True.</target>
        </trans-unit>
        <trans-unit id="cf1e4687c0d3d2d1dc253d21a37e498c8e5bdf91" translate="yes" xml:space="preserve">
          <source>Whether the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879e7ad5a4a5f54e20b712af28f664358d342aab" translate="yes" xml:space="preserve">
          <source>Whether the &lt;code&gt;arr_or_dtype&lt;/code&gt; is an extension array type.</source>
          <target state="translated">Si &lt;code&gt;arr_or_dtype&lt;/code&gt; es un tipo de matriz de extensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b3206b667a358326819e39532e96d89ce560a840" translate="yes" xml:space="preserve">
          <source>Whether the arrays are equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f890daf73cb275b7a44a01564d8732e2dcb51d" translate="yes" xml:space="preserve">
          <source>Whether the categories have an ordered relationship.</source>
          <target state="translated">Si las categorías tienen una relación ordenada.</target>
        </trans-unit>
        <trans-unit id="09c3d2427d684ae4fc5f673fb6c1adb55b009481" translate="yes" xml:space="preserve">
          <source>Whether the dummy-encoded columns should be backed by a &lt;a href=&quot;pandas.sparsearray#pandas.SparseArray&quot;&gt;&lt;code&gt;SparseArray&lt;/code&gt;&lt;/a&gt; (True) or a regular NumPy array (False).</source>
          <target state="translated">Si las columnas con codificaci&amp;oacute;n ficticia deben estar respaldadas por un &lt;a href=&quot;pandas.sparsearray#pandas.SparseArray&quot;&gt; &lt;code&gt;SparseArray&lt;/code&gt; &lt;/a&gt; (True) o una matriz NumPy normal (False).</target>
        </trans-unit>
        <trans-unit id="310831e409765d924f963a5e8cee5b2800cc0ffd" translate="yes" xml:space="preserve">
          <source>Whether the dummy-encoded columns should be backed by a &lt;code&gt;SparseArray&lt;/code&gt; (True) or a regular NumPy array (False).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6505cfe2f87adc25bbb71652ccca730fe89c62" translate="yes" xml:space="preserve">
          <source>Whether the elements should be aligned to the end or start within pa period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c304ddc4dc1b562aff20382c92054f1d3c36d3ee" translate="yes" xml:space="preserve">
          <source>Whether the end time needs to be included in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7575c0b17a9b6e9510d93b5945c7ffe9c82ff33" translate="yes" xml:space="preserve">
          <source>Whether the first interval should be left-inclusive or not.</source>
          <target state="translated">Si el primer intervalo debe ser de izquierda a derecha o no.</target>
        </trans-unit>
        <trans-unit id="8972b129def0820104e3c0936a8a2e65b2368f34" translate="yes" xml:space="preserve">
          <source>Whether the generated HTML is for IPython Notebook.</source>
          <target state="translated">Si el HTML generado es para IPython Notebook.</target>
        </trans-unit>
        <trans-unit id="7ecac6a9347cc2f745741986971bf2c6b5dec571" translate="yes" xml:space="preserve">
          <source>Whether the index type is compatible with the provided type.</source>
          <target state="translated">Si el tipo de índice es compatible con el tipo proporcionado.</target>
        </trans-unit>
        <trans-unit id="a87bae20ecf50580f800f3c2eb7f007c57232176" translate="yes" xml:space="preserve">
          <source>Whether the indices should result in an ascending or descending sort.</source>
          <target state="translated">Si los índices deben ser de tipo ascendente o descendente.</target>
        </trans-unit>
        <trans-unit id="2cac93871cf98f3351eb71d46d76b4f24eef2a5f" translate="yes" xml:space="preserve">
          <source>Whether the interval is closed on the left-side, right-side, both or neither</source>
          <target state="translated">Si el intervalo se cierra en el lado izquierdo,en el derecho,en ambos o en ninguno.</target>
        </trans-unit>
        <trans-unit id="77e858b3f9ae7c6b498675de22ef78cfff61182c" translate="yes" xml:space="preserve">
          <source>Whether the interval is closed on the left-side, right-side, both or neither.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5512ae9872c22d606571477c180759a0cd24c0a3" translate="yes" xml:space="preserve">
          <source>Whether the interval is closed on the left-side, right-side, both or neither. See the Notes for more detailed explanation.</source>
          <target state="translated">Si el intervalo se cierra en el lado izquierdo,en el derecho,en ambos o en ninguno.Vea las Notas para una explicación más detallada.</target>
        </trans-unit>
        <trans-unit id="9132ca891de79caa48e65f5999e79f9f15525504" translate="yes" xml:space="preserve">
          <source>Whether the intervals are closed on the left-side, right-side, both or neither</source>
          <target state="translated">Si los intervalos se cierran en el lado izquierdo,derecho,ambos o ninguno...</target>
        </trans-unit>
        <trans-unit id="0bb928bdf06342a9ba750f6e31b9169f1b5c051b" translate="yes" xml:space="preserve">
          <source>Whether the intervals are closed on the left-side, right-side, both or neither.</source>
          <target state="translated">Si los intervalos se cierran en el lado izquierdo,derecho,ambos o ninguno.</target>
        </trans-unit>
        <trans-unit id="64b530e863247be4d8bdbc2d94325764796f436e" translate="yes" xml:space="preserve">
          <source>Whether the labels are ordered or not. Applies to returned types Categorical and Series (with Categorical dtype). If True, the resulting categorical will be ordered. If False, the resulting categorical will be unordered (labels must be provided).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff13d02e8369a7390718dd434a1f82b6dd375f9" translate="yes" xml:space="preserve">
          <source>Whether the query should modify the data in place or return a modified copy.</source>
          <target state="translated">Si la consulta debe modificar los datos en su lugar o devolver una copia modificada.</target>
        </trans-unit>
        <trans-unit id="d117e27b499874282c102d09b19f2ab70823143a" translate="yes" xml:space="preserve">
          <source>Whether the returned object allows duplicate labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a7ab83a0597c87020596c983ae24b4d8afbad6" translate="yes" xml:space="preserve">
          <source>Whether the start time needs to be included in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acff264a1aa51d46c1fdbb3d092b77b1d1a7002" translate="yes" xml:space="preserve">
          <source>Whether the type is an integer type.</source>
          <target state="translated">Si el tipo es un tipo entero.</target>
        </trans-unit>
        <trans-unit id="a1612d866dc41b1141c25e54ce86394ccc6dc46f" translate="yes" xml:space="preserve">
          <source>Whether this object allows duplicate labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3466258dc8ceaf113da343fa6e99024e45724a6e" translate="yes" xml:space="preserve">
          <source>Whether to allow duplicate labels in this object. By default, duplicate labels are permitted. Setting this to &lt;code&gt;False&lt;/code&gt; will cause an &lt;a href=&quot;pandas.errors.duplicatelabelerror#pandas.errors.DuplicateLabelError&quot;&gt;&lt;code&gt;errors.DuplicateLabelError&lt;/code&gt;&lt;/a&gt; to be raised when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61a168f35420da34626d22f17b841f30c8d82e0" translate="yes" xml:space="preserve">
          <source>Whether to append columns to existing index.</source>
          <target state="translated">Si se añaden columnas al índice existente.</target>
        </trans-unit>
        <trans-unit id="3657d5dcc58deace981fc5b0e06b0729f5912983" translate="yes" xml:space="preserve">
          <source>Whether to check if the ExtensionArray dtypes are identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a601dd574b808af22fa4f40dc264f3a67430253" translate="yes" xml:space="preserve">
          <source>Whether to check that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6769d95c60e48e4bcc65ec513d5e37e4380717b" translate="yes" xml:space="preserve">
          <source>Whether to check that the &lt;code&gt;names&lt;/code&gt; attribute for both the &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; attributes of the DataFrame is identical, i.e.</source>
          <target state="translated">Ya sea para verificar que el atributo de &lt;code&gt;names&lt;/code&gt; para los atributos de &lt;code&gt;index&lt;/code&gt; y &lt;code&gt;column&lt;/code&gt; a del DataFrame sea id&amp;eacute;ntico, es decir</target>
        </trans-unit>
        <trans-unit id="312b94e467df0dfed120dc9d8c87be69601bfc3a" translate="yes" xml:space="preserve">
          <source>Whether to check the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf067a90d1bc28ee4c26ff4d5abf93a285170f9" translate="yes" xml:space="preserve">
          <source>Whether to check the DataFrame class is identical.</source>
          <target state="translated">La comprobación de la clase del DataFrame es idéntica.</target>
        </trans-unit>
        <trans-unit id="05303ae7b7bb50f921d15a561433db59c6d1bf3f" translate="yes" xml:space="preserve">
          <source>Whether to check the DataFrame dtype is identical.</source>
          <target state="translated">La comprobación del tipo de DataFrame es idéntica.</target>
        </trans-unit>
        <trans-unit id="27c02e72b950f7d226b044103d4d231bd93a33dc" translate="yes" xml:space="preserve">
          <source>Whether to check the Index class, dtype and inferred_type are identical.</source>
          <target state="translated">Si se comprueba la clase de índice,dtype y inferred_type son idénticos.</target>
        </trans-unit>
        <trans-unit id="951c14276d9425a34b3c81114cedd3ef1c8fbfa9" translate="yes" xml:space="preserve">
          <source>Whether to check the Index class, dtype and inferred_type are identical. If &amp;lsquo;equiv&amp;rsquo;, then RangeIndex can be substituted for Int64Index as well.</source>
          <target state="translated">Ya sea para verificar la clase Index, dtype e inferred_type son id&amp;eacute;nticos. Si es 'equiv', entonces RangeIndex tambi&amp;eacute;n se puede sustituir por Int64Index.</target>
        </trans-unit>
        <trans-unit id="b694de03dadeefc42e768c2013e714c9a0c6f220" translate="yes" xml:space="preserve">
          <source>Whether to check the Series and Index names attribute.</source>
          <target state="translated">Si comprobar el atributo de los nombres de la serie y el índice.</target>
        </trans-unit>
        <trans-unit id="bd04c6faa103115280a90db9aad999654abf585b" translate="yes" xml:space="preserve">
          <source>Whether to check the Series class is identical.</source>
          <target state="translated">Si comprobar la clase de la Serie es idéntico.</target>
        </trans-unit>
        <trans-unit id="2c65017bce594011e4ce33917945134a538310d0" translate="yes" xml:space="preserve">
          <source>Whether to check the Series dtype is identical.</source>
          <target state="translated">Si comprobar el tipo de Serie d es idéntico.</target>
        </trans-unit>
        <trans-unit id="f9a6db4a35770f56402fb602b1faf306b042086b" translate="yes" xml:space="preserve">
          <source>Whether to check the columns class, dtype and inferred_type are identical. Is passed as the &lt;code&gt;exact&lt;/code&gt; argument of &lt;a href=&quot;pandas.testing.assert_index_equal#pandas.testing.assert_index_equal&quot;&gt;&lt;code&gt;assert_index_equal()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ya sea para comprobar si las columnas class, dtype e inferred_type son id&amp;eacute;nticas. Se pasa como el argumento &lt;code&gt;exact&lt;/code&gt; o de &lt;a href=&quot;pandas.testing.assert_index_equal#pandas.testing.assert_index_equal&quot;&gt; &lt;code&gt;assert_index_equal()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12a946e17a2ab180e5591e60c352796eed2bf4ef" translate="yes" xml:space="preserve">
          <source>Whether to check the names attribute.</source>
          <target state="translated">Si comprobar el atributo de los nombres.</target>
        </trans-unit>
        <trans-unit id="a125c78103daa434686dedaef5a5d5205e9da7a6" translate="yes" xml:space="preserve">
          <source>Whether to compare by the index (0 or &amp;lsquo;index&amp;rsquo;) or columns (1 or &amp;lsquo;columns&amp;rsquo;).</source>
          <target state="translated">Ya sea para comparar por &amp;iacute;ndice (0 o '&amp;iacute;ndice') o columnas (1 o 'columnas').</target>
        </trans-unit>
        <trans-unit id="cc9bd59cb75ad10e0f499f270512e00841264439" translate="yes" xml:space="preserve">
          <source>Whether to compare by the index (0 or &amp;lsquo;index&amp;rsquo;) or columns (1 or &amp;lsquo;columns&amp;rsquo;). For Series input, axis to match Series index on.</source>
          <target state="translated">Ya sea para comparar por &amp;iacute;ndice (0 o '&amp;iacute;ndice') o columnas (1 o 'columnas'). Para la entrada de serie, el eje debe coincidir con el &amp;iacute;ndice de serie.</target>
        </trans-unit>
        <trans-unit id="403027463ffc3bcdfe810242a92e2ce3b57217e8" translate="yes" xml:space="preserve">
          <source>Whether to compare category order of internal Categoricals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480b99dfbb949b6f6125888e54aa057965d8ace4" translate="yes" xml:space="preserve">
          <source>Whether to compare internal Categorical exactly.</source>
          <target state="translated">Si se comparan las categorías internas con exactitud.</target>
        </trans-unit>
        <trans-unit id="20709e04c5f473b9f4439c69137d6a5a6df1ed35" translate="yes" xml:space="preserve">
          <source>Whether to compare number exactly.</source>
          <target state="translated">Si hay que comparar el número exactamente.</target>
        </trans-unit>
        <trans-unit id="836c48cc8d3a326fa2d88d99a3ac9b91bf5534a1" translate="yes" xml:space="preserve">
          <source>Whether to compare the order of index entries as well as their values. If True, both indexes must contain the same elements, in the same order. If False, both indexes must contain the same elements, but in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e33c0d0ff7eafc269438bf1d39439f7a2508c7" translate="yes" xml:space="preserve">
          <source>Whether to convert the index to datetime.datetime if it is a DatetimeIndex.</source>
          <target state="translated">Si convertir el índice a datetime.datetime si es un DatetimeIndex.</target>
        </trans-unit>
        <trans-unit id="1233d5c8c85f13169fb1db8a90c4f35c729d7906" translate="yes" xml:space="preserve">
          <source>Whether to copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7118a64439700ad6ec9de5344c486bd16b7f4ef" translate="yes" xml:space="preserve">
          <source>Whether to copy &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">Ya sea para copiar &lt;code&gt;values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cc11e062a1edabbd88c21d45d1aaa4932d9f500" translate="yes" xml:space="preserve">
          <source>Whether to copy the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614ea6914bf833ca099af1f6261d14722a8fa7ea" translate="yes" xml:space="preserve">
          <source>Whether to copy the &lt;code&gt;values&lt;/code&gt; and &lt;code&gt;mask&lt;/code&gt;.</source>
          <target state="translated">Ya sea para copiar los &lt;code&gt;values&lt;/code&gt; y la &lt;code&gt;mask&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b645fcf8186740ce7070d1db577df326179a2e1c" translate="yes" xml:space="preserve">
          <source>Whether to copy the array of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d3ba170581142cf2beaef5b76977c1694b0fb6" translate="yes" xml:space="preserve">
          <source>Whether to copy the data after transposing, even for DataFrames with a single dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d60658da64a86a783db458cc921346f96922bc" translate="yes" xml:space="preserve">
          <source>Whether to copy the data, even if not necessary. Depending on the type of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcddbb1a8af47e6a749d83020b6aa1006a50048" translate="yes" xml:space="preserve">
          <source>Whether to copy the data, even if not necessary. Depending on the type of &lt;code&gt;data&lt;/code&gt;, creating the new array may require copying data, even if &lt;code&gt;copy=False&lt;/code&gt;.</source>
          <target state="translated">Si copiar los datos, incluso si no es necesario. Dependiendo del tipo de &lt;code&gt;data&lt;/code&gt; , la creaci&amp;oacute;n de la nueva matriz puede requerir copiar datos, incluso si &lt;code&gt;copy=False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9a6945c9da5892ce7c61e5e95925a3023a5690" translate="yes" xml:space="preserve">
          <source>Whether to copy the data, even if not necessary. If False, a copy is made only if the old dtype does not match the new dtype.</source>
          <target state="translated">Si copiar o no los datos,aunque no sea necesario.Si es falso,se hace una copia sólo si el antiguo dtype no coincide con el nuevo dtype.</target>
        </trans-unit>
        <trans-unit id="8c89b0a0f2ca5318211b06dec99f00fd486155fb" translate="yes" xml:space="preserve">
          <source>Whether to copy the ordinals before storing.</source>
          <target state="translated">Si copiar los ordinales antes de almacenarlos.</target>
        </trans-unit>
        <trans-unit id="aa50ec90c48448b0d3d09b94bea451df9a5f8b7a" translate="yes" xml:space="preserve">
          <source>Whether to copy the underlying array of data.</source>
          <target state="translated">Si copiar o no el conjunto de datos subyacentes.</target>
        </trans-unit>
        <trans-unit id="6760d93be483b04fef3f0b473318faf3f56f1920" translate="yes" xml:space="preserve">
          <source>Whether to copy the underlying array of values.</source>
          <target state="translated">Si copiar o no el conjunto de valores subyacentes.</target>
        </trans-unit>
        <trans-unit id="3677ef46abbb6b5d638c4a4b47315208e079ce86" translate="yes" xml:space="preserve">
          <source>Whether to copy underlying data.</source>
          <target state="translated">Si copiar o no los datos subyacentes.</target>
        </trans-unit>
        <trans-unit id="5a038186442240fa2a86e573c4a13d18e5636a5e" translate="yes" xml:space="preserve">
          <source>Whether to drop duplicates in place or to return a copy</source>
          <target state="translated">Si dejar los duplicados en el lugar o devolver una copia</target>
        </trans-unit>
        <trans-unit id="c34f73f93ed481edb8870d910e634e22792acbbe" translate="yes" xml:space="preserve">
          <source>Whether to drop duplicates in place or to return a copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cd45da2fc7226a28db113813d2938fe6318be0" translate="yes" xml:space="preserve">
          <source>Whether to drop labels from the index (0 or &amp;lsquo;index&amp;rsquo;) or columns (1 or &amp;lsquo;columns&amp;rsquo;).</source>
          <target state="translated">Ya sea para eliminar etiquetas del &amp;iacute;ndice (0 o '&amp;iacute;ndice') o columnas (1 o 'columnas').</target>
        </trans-unit>
        <trans-unit id="f6dedee7ed871e07a59400dd539a064c75a0c4a9" translate="yes" xml:space="preserve">
          <source>Whether to drop rows in the resulting Frame/Series with missing values. Stacking a column level onto the index axis can create combinations of index and column values that are missing from the original dataframe. See Examples section.</source>
          <target state="translated">Si dejar caer las filas en el cuadro/serie resultante con los valores que faltan.Apilar un nivel de columna en el eje del índice puede crear combinaciones de valores de índice y de columna que faltan en el marco de datos original.Véase la sección Ejemplos.</target>
        </trans-unit>
        <trans-unit id="79d2d140969e06e02bd9a0caca1cf50cde758978" translate="yes" xml:space="preserve">
          <source>Whether to ensure that the returned value is a not a view on another array. Note that &lt;code&gt;copy=False&lt;/code&gt; does not &lt;em&gt;ensure&lt;/em&gt; that &lt;code&gt;to_numpy()&lt;/code&gt; is no-copy. Rather, &lt;code&gt;copy=True&lt;/code&gt; ensure that a copy is made, even if not strictly necessary.</source>
          <target state="translated">Ya sea para asegurarse de que el valor devuelto no sea una vista de otra matriz. Tenga en cuenta que &lt;code&gt;copy=False&lt;/code&gt; no &lt;em&gt;garantiza&lt;/em&gt; que &lt;code&gt;to_numpy()&lt;/code&gt; sea ​​sin copia. M&amp;aacute;s bien, &lt;code&gt;copy=True&lt;/code&gt; asegura que se haga una copia, incluso si no es estrictamente necesaria.</target>
        </trans-unit>
        <trans-unit id="bfd682825d1d0ef258be6cabd3334e1d8ca77316" translate="yes" xml:space="preserve">
          <source>Whether to ensure that the returned value is not a view on another array. Note that &lt;code&gt;copy=False&lt;/code&gt; does not &lt;em&gt;ensure&lt;/em&gt; that &lt;code&gt;to_numpy()&lt;/code&gt; is no-copy. Rather, &lt;code&gt;copy=True&lt;/code&gt; ensure that a copy is made, even if not strictly necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0123a3886b8304eadba8ff96e75fa846d1ed386" translate="yes" xml:space="preserve">
          <source>Whether to explicitly copy the incoming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb32f7260db29ce2cac48eb28428250b5f132ef" translate="yes" xml:space="preserve">
          <source>Whether to explicitly copy the incoming &lt;code&gt;data&lt;/code&gt; array.</source>
          <target state="translated">Si copiar expl&amp;iacute;citamente la matriz de &lt;code&gt;data&lt;/code&gt; entrantes .</target>
        </trans-unit>
        <trans-unit id="079d9c0583ffcad2bcae56f266aa6c47d83acdf9" translate="yes" xml:space="preserve">
          <source>Whether to first categorize object arrays before hashing. This is more efficient when the array contains duplicate values.</source>
          <target state="translated">Si primero hay que clasificar los conjuntos de objetos antes de hacer el hashing.Esto es más eficiente cuando el arreglo contiene valores duplicados.</target>
        </trans-unit>
        <trans-unit id="24341d975c84bd2cab533cb2cfadc7db8145ce70" translate="yes" xml:space="preserve">
          <source>Whether to get k-1 dummies out of k categorical levels by removing the first level.</source>
          <target state="translated">Si sacar los maniquíes k-1 de los niveles categóricos k eliminando el primer nivel.</target>
        </trans-unit>
        <trans-unit id="6d7de50e4e90d9f6c88aa5f73ef9892f2af23ced" translate="yes" xml:space="preserve">
          <source>Whether to ignore any NaT elements</source>
          <target state="translated">Si ignorar cualquier elemento de NaT</target>
        </trans-unit>
        <trans-unit id="5254a0a8dfaae2c0f84466fbca85be45508c9916" translate="yes" xml:space="preserve">
          <source>Whether to ignore any NaT elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfeef7b5704c336635f2f63faeefd4a0a954e47c" translate="yes" xml:space="preserve">
          <source>Whether to include &lt;code&gt;data.index&lt;/code&gt; in the schema.</source>
          <target state="translated">Ya sea para incluir &lt;code&gt;data.index&lt;/code&gt; en el esquema.</target>
        </trans-unit>
        <trans-unit id="584a2b973d40b4845d9c70764d17466af95b1462" translate="yes" xml:space="preserve">
          <source>Whether to include a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f2dfb80e7c583b92e52aa432703a31f552336a" translate="yes" xml:space="preserve">
          <source>Whether to include a field &lt;code&gt;pandas_version&lt;/code&gt; with the version of pandas that generated the schema.</source>
          <target state="translated">Si incluir un campo &lt;code&gt;pandas_version&lt;/code&gt; con la versi&amp;oacute;n de pandas que gener&amp;oacute; el esquema.</target>
        </trans-unit>
        <trans-unit id="61e7cad09b74d9523bae74a46fed56525838019f" translate="yes" xml:space="preserve">
          <source>Whether to include the index values in the JSON string. Not including the index (&lt;code&gt;index=False&lt;/code&gt;) is only supported when orient is &amp;lsquo;split&amp;rsquo; or &amp;lsquo;table&amp;rsquo;.</source>
          <target state="translated">Si se deben incluir los valores de &amp;iacute;ndice en la cadena JSON. No incluir el &amp;iacute;ndice ( &lt;code&gt;index=False&lt;/code&gt; ) solo se admite cuando orient es 'dividido' o 'tabla'.</target>
        </trans-unit>
        <trans-unit id="091d45b0e0eeb15f8f3de813aed2863b28446190" translate="yes" xml:space="preserve">
          <source>Whether to interpret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829ccda7ff3ddf504640fb7bb1de63f5f742ff2e" translate="yes" xml:space="preserve">
          <source>Whether to interpret &lt;code&gt;to_replace&lt;/code&gt; and/or &lt;code&gt;value&lt;/code&gt; as regular expressions. If this is &lt;code&gt;True&lt;/code&gt; then &lt;code&gt;to_replace&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be a string. Alternatively, this could be a regular expression or a list, dict, or array of regular expressions in which case &lt;code&gt;to_replace&lt;/code&gt; must be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Ya sea para interpretar &lt;code&gt;to_replace&lt;/code&gt; y / o &lt;code&gt;value&lt;/code&gt; como expresiones regulares. Si es &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;to_replace&lt;/code&gt; &lt;em&gt;debe&lt;/em&gt; ser una cadena. Alternativamente, esto podr&amp;iacute;a ser una expresi&amp;oacute;n regular o una lista, dictado o matriz de expresiones regulares, en cuyo caso &lt;code&gt;to_replace&lt;/code&gt; debe ser &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="059b670232ce9b96a4755e583fd1201d3892dfc6" translate="yes" xml:space="preserve">
          <source>Whether to parallelize reading using multiple threads.</source>
          <target state="translated">Si paralelizar la lectura usando múltiples hilos.</target>
        </trans-unit>
        <trans-unit id="9b1fc76deaa2fbdff899e0942b3064c1aaaff6ea" translate="yes" xml:space="preserve">
          <source>Whether to perform the operation in place on the data.</source>
          <target state="translated">Si realizar la operación en el lugar de los datos.</target>
        </trans-unit>
        <trans-unit id="60c8e4b1fe4c082bfa2236fc1086c5b8274732d6" translate="yes" xml:space="preserve">
          <source>Whether to plot on the secondary y-axis if a list/tuple, which columns to plot on secondary y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70de5a36e83d3eb8fa9cabc674a98ae76824d04" translate="yes" xml:space="preserve">
          <source>Whether to print column labels, default True.</source>
          <target state="translated">Si se imprimen o no las etiquetas de las columnas,el valor predeterminado es True.</target>
        </trans-unit>
        <trans-unit id="d4043c34d833aebb482be8b86bfcf54b13f6b518" translate="yes" xml:space="preserve">
          <source>Whether to print index (row) labels.</source>
          <target state="translated">Si imprimir o no las etiquetas de índice (fila).</target>
        </trans-unit>
        <trans-unit id="e473e8cd557f78fb89bbf3cfc399837415bffeba" translate="yes" xml:space="preserve">
          <source>Whether to print out dimensions at the end of DataFrame repr. If &amp;lsquo;truncate&amp;rsquo; is specified, only print out the dimensions if the frame is truncated (e.g. not display all rows and/or columns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defde4911d781feb3a03a8e3ff5f7b2e2330ecf2" translate="yes" xml:space="preserve">
          <source>Whether to print out dimensions at the end of DataFrame repr. If &amp;lsquo;truncate&amp;rsquo; is specified, only print out the dimensions if the frame is truncated (e.g. not display all rows and/or columns) [default: truncate] [currently: truncate]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36daa98a5e49b7b118bab4ec98545d2b0af61155" translate="yes" xml:space="preserve">
          <source>Whether to print out the full DataFrame repr for wide DataFrames across multiple lines,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bd9a145336d6da3be1171064740410db72c040" translate="yes" xml:space="preserve">
          <source>Whether to print out the full DataFrame repr for wide DataFrames across multiple lines, &lt;code&gt;max_columns&lt;/code&gt; is still respected, but the output will wrap-around across multiple &amp;ldquo;pages&amp;rdquo; if its width exceeds &lt;code&gt;display.width&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3786a830e519e431f4d22b3deccbde853cb7e5" translate="yes" xml:space="preserve">
          <source>Whether to print the full summary. By default, the setting in &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; is followed.</source>
          <target state="translated">Si imprimir el resumen completo. De forma predeterminada, se sigue la configuraci&amp;oacute;n en &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="657e1c9b877510928b9223cc991f5e0030844c1f" translate="yes" xml:space="preserve">
          <source>Whether to produce a latex DataFrame representation for Jupyter frontends that support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21e9fa41831f0cc460ed4ee322428393dd958a8" translate="yes" xml:space="preserve">
          <source>Whether to produce a latex DataFrame representation for jupyter environments that support it. (default: False) [default: False] [currently: False]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0220ca4c13bb756d39c93dd4fe7f6d32c047dc2" translate="yes" xml:space="preserve">
          <source>Whether to publish a Table Schema representation for frontends that support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f97300df2876a7dde9d91735cb45adf8b5a647" translate="yes" xml:space="preserve">
          <source>Whether to publish a Table Schema representation for frontends that support it. (default: False) [default: False] [currently: False]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0236ba34b4b6059dd2e5bd9b24bdb5a57727eb35" translate="yes" xml:space="preserve">
          <source>Whether to register converters with matplotlib&amp;rsquo;s units registry for dates, times, datetimes, and Periods. Toggling to False will remove the converters, restoring any converters that pandas overwrote. [default: auto] [currently: auto]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822960fd378361c92f866987bab14c6731788aad" translate="yes" xml:space="preserve">
          <source>Whether to reset output index to midnight</source>
          <target state="translated">Si restablecer el índice de salida a la medianoche</target>
        </trans-unit>
        <trans-unit id="47f46587bbc97bcc1408e64c36b5745d3fc71750" translate="yes" xml:space="preserve">
          <source>Whether to reset output index to midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463d414e3c929a36dadaf0dff7a3da1b86f42a26" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of the original object or not.</source>
          <target state="translated">Si devolver una copia del objeto original o no.</target>
        </trans-unit>
        <trans-unit id="0d9ec3e7b77438b4723261e6a03fc44877ee790e" translate="yes" xml:space="preserve">
          <source>Whether to return a new %(klass)s instance.</source>
          <target state="translated">Si devolver una nueva instancia de %(klass)s.</target>
        </trans-unit>
        <trans-unit id="3334585f79a1e05bd5ead3050f09c79f6075fb92" translate="yes" xml:space="preserve">
          <source>Whether to return a new DataFrame instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d395e3bbd17854fbadd8ac7b179489b9e25ff57" translate="yes" xml:space="preserve">
          <source>Whether to return a new DataFrame. If True then value of copy is ignored.</source>
          <target state="translated">Si devolver un nuevo DataFrame.Si es True entonces el valor de la copia es ignorado.</target>
        </trans-unit>
        <trans-unit id="8e2a75f244eeb458937d3418e33d612e1af7602a" translate="yes" xml:space="preserve">
          <source>Whether to return a new Series instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70307c4c16aeae2c304f636a8a48db0df778b4d" translate="yes" xml:space="preserve">
          <source>Whether to return a new Series. If True then value of copy is ignored.</source>
          <target state="translated">Si devolver una nueva serie.Si es True entonces el valor de la copia es ignorado.</target>
        </trans-unit>
        <trans-unit id="c40f05d086533bc3f61b990c30d1eee76d14d5f1" translate="yes" xml:space="preserve">
          <source>Whether to return the (bins, labels) or not. Can be useful if bins is given as a scalar.</source>
          <target state="translated">Si devolver los (cubos de basura,etiquetas)o no.Puede ser útil si los cubos se dan como un escalar.</target>
        </trans-unit>
        <trans-unit id="e9a2325de6aaa3cd0b4ed39a825eff6977fff94d" translate="yes" xml:space="preserve">
          <source>Whether to return the bins or not. Useful when bins is provided as a scalar.</source>
          <target state="translated">Si devolver los cubos de basura o no.Es útil cuando los cubos se proporcionan como un escalar.</target>
        </trans-unit>
        <trans-unit id="5f6ec8c7097b0e808006d61b5467a63c05b98e29" translate="yes" xml:space="preserve">
          <source>Whether to round the result of a DateOffset addition down to the previous midnight.</source>
          <target state="translated">Si redondear el resultado de la suma del DateOffset hasta la medianoche anterior.</target>
        </trans-unit>
        <trans-unit id="f676621a7d6e94a1edcabb96ea81c3545d433e4d" translate="yes" xml:space="preserve">
          <source>Whether to search for prior, subsequent, or closest matches.</source>
          <target state="translated">Ya sea para buscar coincidencias anteriores,posteriores o más cercanas.</target>
        </trans-unit>
        <trans-unit id="9a7f3ce1d34190884bad83912e5d23932d9f3944" translate="yes" xml:space="preserve">
          <source>Whether to show axis grid lines</source>
          <target state="translated">Si mostrar o no las líneas de la cuadrícula del eje</target>
        </trans-unit>
        <trans-unit id="0e570581777bb9a490c51ad5b32749939fac5299" translate="yes" xml:space="preserve">
          <source>Whether to show axis grid lines.</source>
          <target state="translated">Si mostrar o no las líneas de la cuadrícula del eje.</target>
        </trans-unit>
        <trans-unit id="db6a9f9db72f57fcd6883f16d0ca558c1a439605" translate="yes" xml:space="preserve">
          <source>Whether to show the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61d81696a16a9ed7eb9fded773a5fb7d3febb15" translate="yes" xml:space="preserve">
          <source>Whether to show the non-null counts. By default, this is shown only if the DataFrame is smaller than &lt;code&gt;pandas.options.display.max_info_rows&lt;/code&gt; and &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt;. A value of True always shows the counts, and False never shows the counts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1aecfea707c5a6a0e267acf6cea372942182ba" translate="yes" xml:space="preserve">
          <source>Whether to show the non-null counts. By default, this is shown only if the frame is smaller than &lt;code&gt;pandas.options.display.max_info_rows&lt;/code&gt; and &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt;. A value of True always shows the counts, and False never shows the counts.</source>
          <target state="translated">Si mostrar los recuentos no nulos. De forma predeterminada, esto se muestra solo si el marco es m&amp;aacute;s peque&amp;ntilde;o que &lt;code&gt;pandas.options.display.max_info_rows&lt;/code&gt; y &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; . Un valor de Verdadero siempre muestra los recuentos y Falso nunca muestra los recuentos.</target>
        </trans-unit>
        <trans-unit id="7bc899ddeb69b2996c5b038d8bd74fddeb7c33e0" translate="yes" xml:space="preserve">
          <source>Whether to simulate interactive mode for purposes of testing [default: False] [currently: False]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ed404410db5a52143355473b57f215c5cc7456" translate="yes" xml:space="preserve">
          <source>Whether to simulate interactive mode for purposes of testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9423858ca0259300004040194ab4aaa0323abeb7" translate="yes" xml:space="preserve">
          <source>Whether to sort the resulting Index.</source>
          <target state="translated">Si clasificar el índice resultante.</target>
        </trans-unit>
        <trans-unit id="b32f8913fc7fd86d449faf14482864d16c081852" translate="yes" xml:space="preserve">
          <source>Whether to sort the resulting index.</source>
          <target state="translated">Si clasificar el índice resultante.</target>
        </trans-unit>
        <trans-unit id="a821e3ed2db995ff5f5e85efc8b38f97ac4e8779" translate="yes" xml:space="preserve">
          <source>Whether to sort the resulting index. By default, the values are attempted to be sorted, but any TypeError from incomparable elements is caught by pandas.</source>
          <target state="translated">Si clasificar el índice resultante.Por defecto,se intenta ordenar los valores,pero cualquier TypeError de elementos incomparables es capturado por los pandas.</target>
        </trans-unit>
        <trans-unit id="33c048465728cbbfc61cbcdc5f64ee1e108195d5" translate="yes" xml:space="preserve">
          <source>Whether to sort the resulting labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4c18b1f2e5357a2ebaa3fd3b265a74ba4776cc" translate="yes" xml:space="preserve">
          <source>Whether to treat datetime dtypes as numeric. This affects statistics calculated for the column. For DataFrame input, this also controls whether datetime columns are included by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0820bb28dd78148fc818c5e66e628f442bd55a" translate="yes" xml:space="preserve">
          <source>Whether to use the Unicode East Asian Width to calculate the display text width. Enabling this may affect to the performance (default: False) [default: False] [currently: False]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ada401a557fe46a5016af2e53df79b0635d645" translate="yes" xml:space="preserve">
          <source>Whether to use the start or end of the time period being converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde550efd70425ac91abbaca6d2f05764c9841e7" translate="yes" xml:space="preserve">
          <source>Whether to use true division, like in Python &amp;gt;= 3</source>
          <target state="translated">Ya sea para usar la divisi&amp;oacute;n verdadera, como en Python&amp;gt; = 3</target>
        </trans-unit>
        <trans-unit id="f13ba422da1f5e9483fda1e900978f1315e4d9c4" translate="yes" xml:space="preserve">
          <source>Whether to use true division, like in Python &amp;gt;= 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409e30ae70ff87f67bcc9017ec1d6e35df75f10c" translate="yes" xml:space="preserve">
          <source>Whether x-axes will be shared among subplots</source>
          <target state="translated">Si los ejes X serán compartidos entre las subtramas</target>
        </trans-unit>
        <trans-unit id="00340f2950d730b40c81c266b2a2cbc081390eda" translate="yes" xml:space="preserve">
          <source>Whether x-axes will be shared among subplots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b92a72844c2f58921d71d168ff98abebab9ad7d" translate="yes" xml:space="preserve">
          <source>Whether y-axes will be shared among subplots</source>
          <target state="translated">Si los ejes Y serán compartidos entre las subtramas</target>
        </trans-unit>
        <trans-unit id="0e38e296c5ece407976f81c0ff17dd2db69414ee" translate="yes" xml:space="preserve">
          <source>Whether y-axes will be shared among subplots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2275262cc00109df5f43760e7979e9e352672f93" translate="yes" xml:space="preserve">
          <source>Whether, if possible, conversion can be done to floating extension types. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af020f329bea01ddcf82b6e15f368859cab5cf5b" translate="yes" xml:space="preserve">
          <source>Whether, if possible, conversion can be done to integer extension types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b71be8eafa38c83c063aed738f0acb077fe9637" translate="yes" xml:space="preserve">
          <source>Which axis to use for up- or down-sampling. For</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351a93741537e3b00c326e85d6bc8b864d324e73" translate="yes" xml:space="preserve">
          <source>Which axis to use for up- or down-sampling. For &lt;code&gt;Series&lt;/code&gt; this will default to 0, i.e. along the rows. Must be &lt;code&gt;DatetimeIndex&lt;/code&gt;, &lt;code&gt;TimedeltaIndex&lt;/code&gt; or &lt;code&gt;PeriodIndex&lt;/code&gt;.</source>
          <target state="translated">Qu&amp;eacute; eje utilizar para muestreo ascendente o descendente. Para &lt;code&gt;Series&lt;/code&gt; , el valor predeterminado ser&amp;aacute; 0, es decir, a lo largo de las filas. Debe ser &lt;code&gt;DatetimeIndex&lt;/code&gt; , &lt;code&gt;TimedeltaIndex&lt;/code&gt; o &lt;code&gt;PeriodIndex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e14dfe26bdfe6299d3617c19bf5fc4c9ac5b873c" translate="yes" xml:space="preserve">
          <source>Which bin edge label to label bucket with. The default is &amp;lsquo;left&amp;rsquo; for all frequency offsets except for &amp;lsquo;M&amp;rsquo;, &amp;lsquo;A&amp;rsquo;, &amp;lsquo;Q&amp;rsquo;, &amp;lsquo;BM&amp;rsquo;, &amp;lsquo;BA&amp;rsquo;, &amp;lsquo;BQ&amp;rsquo;, and &amp;lsquo;W&amp;rsquo; which all have a default of &amp;lsquo;right&amp;rsquo;.</source>
          <target state="translated">Con qu&amp;eacute; etiqueta del borde del contenedor etiquetar el cubo. El valor predeterminado es 'izquierda' para todos los desplazamientos de frecuencia, excepto para 'M', 'A', 'Q', 'BM', 'BA', 'BQ' y 'W', que todos tienen un valor predeterminado de 'derecha'.</target>
        </trans-unit>
        <trans-unit id="93265f02ace29b4637e323da25c38f7ad2a8b220" translate="yes" xml:space="preserve">
          <source>Which can be used as a boolean filter to drop duplicate rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3152a90cdf476aadde0e61e3e4ef5ddafc042fb8" translate="yes" xml:space="preserve">
          <source>Which is an integer/float number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab9404f8905635ac93c012ec29d2d386dac81b4" translate="yes" xml:space="preserve">
          <source>Which side of bin interval is closed. The default is &amp;lsquo;left&amp;rsquo; for all frequency offsets except for &amp;lsquo;M&amp;rsquo;, &amp;lsquo;A&amp;rsquo;, &amp;lsquo;Q&amp;rsquo;, &amp;lsquo;BM&amp;rsquo;, &amp;lsquo;BA&amp;rsquo;, &amp;lsquo;BQ&amp;rsquo;, and &amp;lsquo;W&amp;rsquo; which all have a default of &amp;lsquo;right&amp;rsquo;.</source>
          <target state="translated">Qu&amp;eacute; lado del intervalo del contenedor est&amp;aacute; cerrado. El valor predeterminado es 'izquierda' para todos los desplazamientos de frecuencia, excepto para 'M', 'A', 'Q', 'BM', 'BA', 'BQ' y 'W', que todos tienen un valor predeterminado de 'derecha'.</target>
        </trans-unit>
        <trans-unit id="1a2dc0fcb2d990edb0299a920c76feaa41d98a83" translate="yes" xml:space="preserve">
          <source>Which will create a MultiIndex:</source>
          <target state="translated">Lo que creará un Multi-Index:</target>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>
        </trans-unit>
        <trans-unit id="b09f9a9b5958e071ea997eaba4ab19f5cf54b087" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;../reference/api/pandas.dataframe.pivot#pandas.DataFrame.pivot&quot;&gt;&lt;code&gt;pivot()&lt;/code&gt;&lt;/a&gt; provides general purpose pivoting with various data types (strings, numerics, etc.), pandas also provides &lt;a href=&quot;../reference/api/pandas.pivot_table#pandas.pivot_table&quot;&gt;&lt;code&gt;pivot_table()&lt;/code&gt;&lt;/a&gt; for pivoting with aggregation of numeric data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ff63a50e922bef01c293633c11bc3472ada59f" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt;&lt;code&gt;read_csv()&lt;/code&gt;&lt;/a&gt; reads delimited data, the &lt;a href=&quot;../reference/api/pandas.read_fwf#pandas.read_fwf&quot;&gt;&lt;code&gt;read_fwf()&lt;/code&gt;&lt;/a&gt; function works with data files that have known and fixed column widths. The function parameters to &lt;code&gt;read_fwf&lt;/code&gt; are largely the same as &lt;code&gt;read_csv&lt;/code&gt; with two extra parameters, and a different usage of the &lt;code&gt;delimiter&lt;/code&gt; parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406b790245ac7245ba8f7e04e8b262a4910d4241" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;Index&lt;/code&gt; objects are copied when &lt;code&gt;deep=True&lt;/code&gt;, the underlying numpy array is not copied for performance reasons. Since &lt;code&gt;Index&lt;/code&gt; is immutable, the underlying data can be safely shared and a copy is not needed.</source>
          <target state="translated">Si bien los objetos de &lt;code&gt;Index&lt;/code&gt; se copian cuando &lt;code&gt;deep=True&lt;/code&gt; , la matriz num&amp;eacute;rica subyacente no se copia por razones de rendimiento. Dado que &lt;code&gt;Index&lt;/code&gt; es inmutable, los datos subyacentes se pueden compartir de forma segura y no se necesita una copia.</target>
        </trans-unit>
        <trans-unit id="6650e6308a36a9b15d3ed97470102fe3537e1a6d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;apply&lt;/code&gt; is a very flexible method, its downside is that using it can be quite a bit slower than using more specific methods like &lt;code&gt;agg&lt;/code&gt; or &lt;code&gt;transform&lt;/code&gt;. Pandas offers a wide range of method that will be much faster than using &lt;code&gt;apply&lt;/code&gt; for their specific purposes, so try to use them before reaching for &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">Si bien &lt;code&gt;apply&lt;/code&gt; es un m&amp;eacute;todo muy flexible, su desventaja es que usarlo puede ser un poco m&amp;aacute;s lento que usar m&amp;eacute;todos m&amp;aacute;s espec&amp;iacute;ficos como &lt;code&gt;agg&lt;/code&gt; o &lt;code&gt;transform&lt;/code&gt; . Pandas ofrece una amplia gama de m&amp;eacute;todos que ser&amp;aacute;n mucho m&amp;aacute;s r&amp;aacute;pidos que usar &lt;code&gt;apply&lt;/code&gt; para sus prop&amp;oacute;sitos espec&amp;iacute;ficos, as&amp;iacute; que trate de usarlos antes de llegar a &lt;code&gt;apply&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5bbe2c17408bb49c828324c1f98172b94a840ce" translate="yes" xml:space="preserve">
          <source>While Series is ndarray-like, if you need an &lt;em&gt;actual&lt;/em&gt; ndarray, then use &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fa049851ad995498b9e8d69afc4d25a42e4e8e" translate="yes" xml:space="preserve">
          <source>While US date formats tend to be MM/DD/YYYY, many international formats use DD/MM/YYYY instead. For convenience, a &lt;code&gt;dayfirst&lt;/code&gt; keyword is provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320526a6cf95fe7ae1d592828eedc71cd7770e18" translate="yes" xml:space="preserve">
          <source>While float dtypes are unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8951e325451a6dfb7f3a44fd79fe07ed7a1f43c5" translate="yes" xml:space="preserve">
          <source>While not especially efficient (since a new object must be created), you can append a single row to a &lt;code&gt;DataFrame&lt;/code&gt; by passing a &lt;code&gt;Series&lt;/code&gt; or dict to &lt;code&gt;append&lt;/code&gt;, which returns a new &lt;code&gt;DataFrame&lt;/code&gt; as above.</source>
          <target state="translated">Si bien no es especialmente eficiente (ya que se debe crear un nuevo objeto), puede agregar una sola fila a un &lt;code&gt;DataFrame&lt;/code&gt; pasando una &lt;code&gt;Series&lt;/code&gt; o dict para &lt;code&gt;append&lt;/code&gt; , que devuelve un nuevo &lt;code&gt;DataFrame&lt;/code&gt; como se indic&amp;oacute; anteriormente.</target>
        </trans-unit>
        <trans-unit id="489fd26b5954e3ab4d81431e3f5cdb131eb1e98f" translate="yes" xml:space="preserve">
          <source>While pandas does not force you to have a sorted date index, some of these methods may have unexpected or incorrect behavior if the dates are unsorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a9e79a81ff4f2e7be900e69d400bd8f96ac034" translate="yes" xml:space="preserve">
          <source>While pandas provides a rich set of methods, containers, and data types, your needs may not be fully satisfied. Pandas offers a few options for extending pandas.</source>
          <target state="translated">Aunque los pandas proporcionan un rico conjunto de métodos,contenedores y tipos de datos,es posible que sus necesidades no estén totalmente satisfechas.Pandas ofrece algunas opciones para extender los pandas.</target>
        </trans-unit>
        <trans-unit id="a22d7485615c3482c2959b4b968a5ef3d5984e98" translate="yes" xml:space="preserve">
          <source>While pandas supports storing arrays of integer and boolean type, these types are not capable of storing missing data. Until we can switch to using a native NA type in NumPy, we&amp;rsquo;ve established some &amp;ldquo;casting rules&amp;rdquo;. When a reindexing operation introduces missing data, the Series will be cast according to the rules introduced in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d47f8569701c8172c13038db4e088dcba1ae2e" translate="yes" xml:space="preserve">
          <source>While standard Python / Numpy expressions for selecting and setting are intuitive and come in handy for interactive work, for production code, we recommend the optimized pandas data access methods, &lt;code&gt;.at&lt;/code&gt;, &lt;code&gt;.iat&lt;/code&gt;, &lt;code&gt;.loc&lt;/code&gt; and &lt;code&gt;.iloc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4f0535fe84b7df413259e8e5f2078595bb140b" translate="yes" xml:space="preserve">
          <source>While the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f434314ddb865cdc18e6752e27c11123cefa549c" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;slice_shift&lt;/code&gt; is faster than &lt;code&gt;shift&lt;/code&gt;, you may pay for it later during alignment.</source>
          <target state="translated">Si bien el &lt;code&gt;slice_shift&lt;/code&gt; es m&amp;aacute;s r&amp;aacute;pido que el &lt;code&gt;shift&lt;/code&gt; , puede pagarlo m&amp;aacute;s tarde durante la alineaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="16cf6ccbd946735fb6200ccf89320e4fc83de333" translate="yes" xml:space="preserve">
          <source>While this may seem like a heavy trade-off, I have found very few cases where this is an issue in practice i.e. storing values greater than 2**53. Some explanation for the motivation is in the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0ce02454ffd2a3929921d53770df8a64c7602b" translate="yes" xml:space="preserve">
          <source>Why does assignment fail when using chained indexing?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77a6501b0d679dcb0cdc5dd1b078e7f9afc86e5" translate="yes" xml:space="preserve">
          <source>Why more than one data structure?</source>
          <target state="translated">¿Por qué más de una estructura de datos?</target>
        </trans-unit>
        <trans-unit id="0b983fa5617d58a7916aaa1f5ec356aa3b21fee1" translate="yes" xml:space="preserve">
          <source>Why not make NumPy like R?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece162266b40b39d17f56a4e6fb67a1cca4822d7" translate="yes" xml:space="preserve">
          <source>Wide DataFrames will be printed across multiple rows by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fd44cb58ca1992a5db505e73d6e603a16d0efb" translate="yes" xml:space="preserve">
          <source>Wide panel to long format.</source>
          <target state="translated">De panel ancho a formato largo.</target>
        </trans-unit>
        <trans-unit id="1c94b23591a4f27d60ceb9d65106d89f9f9151b3" translate="yes" xml:space="preserve">
          <source>Wide panel to long format. Less flexible but more user-friendly than melt.</source>
          <target state="translated">De panel ancho a formato largo.Menos flexible,pero más fácil de usar que el fundido.</target>
        </trans-unit>
        <trans-unit id="e70b498abefde286367d2d580a2454dd0993a292" translate="yes" xml:space="preserve">
          <source>Width of the display in characters. In case Python/IPython is running in a terminal this can be set to None and pandas will correctly auto-detect the width. Note that the IPython notebook, IPython qtconsole, or IDLE do not run in a terminal and hence it is not possible to correctly detect the width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5785909f522cf82d4eca8280b2dadbe34795cd1" translate="yes" xml:space="preserve">
          <source>Width of the display in characters. In case python/IPython is running in a terminal this can be set to None and pandas will correctly auto-detect the width. Note that the IPython notebook, IPython qtconsole, or IDLE do not run in a terminal and hence it is not possible to correctly detect the width. [default: 80] [currently: 80]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411642ffcf8cc3e213979fd3c846c900cae28397" translate="yes" xml:space="preserve">
          <source>Width to wrap a line in characters.</source>
          <target state="translated">Ancho para envolver una línea en caracteres.</target>
        </trans-unit>
        <trans-unit id="dbe740051d15e77cb5dfa2c8f7ae30bd51564eeb" translate="yes" xml:space="preserve">
          <source>Will be used for display in, e.g. &lt;code&gt;Series.dtype&lt;/code&gt;</source>
          <target state="translated">Se utilizar&amp;aacute; para mostrar en, por ejemplo, &lt;code&gt;Series.dtype&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="68fe8f958724479a101c0326f7607d389d321758" translate="yes" xml:space="preserve">
          <source>Window Functions</source>
          <target state="translated">Funciones de la ventana</target>
        </trans-unit>
        <trans-unit id="0a02911de9ac21d1fd885285092cc1a89b83f6bd" translate="yes" xml:space="preserve">
          <source>Window and resample operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40988d0e192219e8e7d31b9f57fe7d9b37facdfd" translate="yes" xml:space="preserve">
          <source>Window indexer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3727d7735dfdd39ce5a0dda33cc281ab814c1033" translate="yes" xml:space="preserve">
          <source>Windowing Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2059fa57b599fba9ff4c3dc650e698e20c59171d" translate="yes" xml:space="preserve">
          <source>Windowing functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6850b7edb8639ed9738948852b5ff21fef6d7dc0" translate="yes" xml:space="preserve">
          <source>Windowing operations currently only support numeric data (integer and float) and will always return &lt;code&gt;float64&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3c8daa3ebadd6963d2332eb9a3e18118a4e41c" translate="yes" xml:space="preserve">
          <source>Windows : none</source>
          <target state="translated">Windows:ninguna.</target>
        </trans-unit>
        <trans-unit id="09e62fb3d3d6dc636d99be2830e422ff68860e91" translate="yes" xml:space="preserve">
          <source>Windows does not support the &lt;code&gt;xargs&lt;/code&gt; command (unless installed for example via the &lt;a href=&quot;http://www.mingw.org/&quot;&gt;MinGW&lt;/a&gt; toolchain), but one can imitate the behaviour as follows:</source>
          <target state="translated">Windows no admite el comando &lt;code&gt;xargs&lt;/code&gt; (a menos que se instale, por ejemplo, a trav&amp;eacute;s de la cadena de herramientas &lt;a href=&quot;http://www.mingw.org/&quot;&gt;MinGW&lt;/a&gt; ), pero se puede imitar el comportamiento de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">With</target>
        </trans-unit>
        <trans-unit id="0c2c12d79ad4df987ae01aa982697d2ecdac140d" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;pandas.eval()&lt;/code&gt;&lt;/a&gt; you cannot use the &lt;code&gt;@&lt;/code&gt; prefix &lt;em&gt;at all&lt;/em&gt;, because it isn&amp;rsquo;t defined in that context. pandas will let you know this if you try to use &lt;code&gt;@&lt;/code&gt; in a top-level call to &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;pandas.eval()&lt;/code&gt;&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6b8adcadb99b8a422f87b268a71c56db819006" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../reference/api/pandas.read_csv#pandas.read_csv&quot;&gt;&lt;code&gt;pandas.read_csv()&lt;/code&gt;&lt;/a&gt;, you can specify &lt;code&gt;usecols&lt;/code&gt; to limit the columns read into memory. Not all file formats that can be read by pandas provide an option to read a subset of columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299947aa6e7eec9c70f912ac17089e95b6cdd17f" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;advanced#advanced-hierarchical&quot;&gt;hierarchically-indexed data&lt;/a&gt;, it&amp;rsquo;s quite natural to group by one of the levels of the hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2666522b6fb0ba4fd910daeac02131c7fb5903de" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;.agg()&lt;/code&gt; it is possible to easily create a custom describe function, similar to the built in &lt;a href=&quot;#basics-describe&quot;&gt;describe function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7591e74c17cf52feb4b291b5415b48fdd9166b77" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;dropna&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt; we can also see NaN index values.</source>
          <target state="translated">Con &lt;code&gt;dropna&lt;/code&gt; establecido en &lt;code&gt;False&lt;/code&gt; , tambi&amp;eacute;n podemos ver los valores del &amp;iacute;ndice NaN.</target>
        </trans-unit>
        <trans-unit id="727721cfcca5c5980a635392fd3720995c9041a1" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;dtype='category'&lt;/code&gt;, the resulting categories will always be parsed as strings (object dtype). If the categories are numeric they can be converted using the &lt;a href=&quot;../reference/api/pandas.to_numeric#pandas.to_numeric&quot;&gt;&lt;code&gt;to_numeric()&lt;/code&gt;&lt;/a&gt; function, or as appropriate, another converter such as &lt;a href=&quot;../reference/api/pandas.to_datetime#pandas.to_datetime&quot;&gt;&lt;code&gt;to_datetime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e5a58ba1474d074b0c855e98ceb62d98a6b4b6" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;ignore_index&lt;/code&gt; set to True:</source>
          <target state="translated">Con &lt;code&gt;ignore_index&lt;/code&gt; establecido en True:</target>
        </trans-unit>
        <trans-unit id="e682613fb87e0cfba41cec598462761fc2a5c34c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;inclusive&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt; boundary values are excluded:</source>
          <target state="translated">Con &lt;code&gt;inclusive&lt;/code&gt; establecido en &lt;code&gt;False&lt;/code&gt; , se excluyen los valores de l&amp;iacute;mite:</target>
        </trans-unit>
        <trans-unit id="d70ff7b3e9584094652332b3c586545145ccecc9" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;inplace=False&lt;/code&gt;, the new categorical is returned. With &lt;code&gt;inplace=True&lt;/code&gt;, there is no return value.</source>
          <target state="translated">Con &lt;code&gt;inplace=False&lt;/code&gt; , se devuelve el nuevo categ&amp;oacute;rico. Con &lt;code&gt;inplace=True&lt;/code&gt; , no hay valor de retorno.</target>
        </trans-unit>
        <trans-unit id="f465bd5d6fc9f75666c775e3a994c5277d569d71" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;normalize&lt;/code&gt; set to &lt;code&gt;True&lt;/code&gt;, returns the relative frequency by dividing all values by the sum of values.</source>
          <target state="translated">Con &lt;code&gt;normalize&lt;/code&gt; establecido en &lt;code&gt;True&lt;/code&gt; , devuelve la frecuencia relativa dividiendo todos los valores por la suma de valores.</target>
        </trans-unit>
        <trans-unit id="d03449a2d05c1719a27dd299dba590355941f9ff" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;slice&lt;/code&gt; objects.</source>
          <target state="translated">Con objetos de &lt;code&gt;slice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d0fcec5ded27ccdeb3df3c586754f13483e0368" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;sort=True&lt;/code&gt;, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a615de2f5e31705b273a5229ce30e65a9df020c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;sort=True&lt;/code&gt;, the &lt;code&gt;uniques&lt;/code&gt; will be sorted, and &lt;code&gt;labels&lt;/code&gt; will be shuffled so that the relationship is the maintained.</source>
          <target state="translated">Con &lt;code&gt;sort=True&lt;/code&gt; , los &lt;code&gt;uniques&lt;/code&gt; se ordenar&amp;aacute;n y las &lt;code&gt;labels&lt;/code&gt; se mezclar&amp;aacute;n para que se mantenga la relaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fb708201c30a58c25523a11436d7a28fa2fec92d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;verify_integrity&lt;/code&gt; set to True:</source>
          <target state="translated">Con &lt;code&gt;verify_integrity&lt;/code&gt; establecido en True:</target>
        </trans-unit>
        <trans-unit id="06bf3d77a57877710c2d9282f55ea70db9a7831c" translate="yes" xml:space="preserve">
          <source>With DataFrame, slicing inside of &lt;code&gt;[]&lt;/code&gt;&lt;strong&gt;slices the rows&lt;/strong&gt;. This is provided largely as a convenience since it is such a common operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15e28aa8a76567795c188afa9b4449d0a92fd48" translate="yes" xml:space="preserve">
          <source>With NA/NaN filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2029d6b29e24e1026a739937239aab2e8df26feb" translate="yes" xml:space="preserve">
          <source>With Series, the syntax works exactly as with an ndarray, returning a slice of the values and the corresponding labels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e55c608e124b42bf25bf02c154381796e1d9852" translate="yes" xml:space="preserve">
          <source>With a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb99b16518db947d54df9a05abf535cf6b04a6c9" translate="yes" xml:space="preserve">
          <source>With a &amp;ldquo;stacked&amp;rdquo; &lt;code&gt;DataFrame&lt;/code&gt; or &lt;code&gt;Series&lt;/code&gt; (having a &lt;code&gt;MultiIndex&lt;/code&gt; as the &lt;code&gt;index&lt;/code&gt;), the inverse operation of &lt;code&gt;stack&lt;/code&gt; is &lt;code&gt;unstack&lt;/code&gt;, which by default unstacks the &lt;strong&gt;last level&lt;/strong&gt;:</source>
          <target state="translated">Con un &lt;code&gt;DataFrame&lt;/code&gt; o &lt;code&gt;Series&lt;/code&gt; &quot;apilado&quot; (que tiene un &lt;code&gt;MultiIndex&lt;/code&gt; como &lt;code&gt;index&lt;/code&gt; ), la operaci&amp;oacute;n inversa de la &lt;code&gt;stack&lt;/code&gt; es &lt;code&gt;unstack&lt;/code&gt; , que por defecto desapila el &lt;strong&gt;&amp;uacute;ltimo nivel&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="cce4a5edeafc2b61e5c8102db1026633d2beee7c" translate="yes" xml:space="preserve">
          <source>With a &amp;ldquo;stacked&amp;rdquo; DataFrame or Series (having a &lt;code&gt;MultiIndex&lt;/code&gt; as the &lt;code&gt;index&lt;/code&gt;), the inverse operation of &lt;a href=&quot;../reference/api/pandas.dataframe.stack#pandas.DataFrame.stack&quot;&gt;&lt;code&gt;stack()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../reference/api/pandas.dataframe.unstack#pandas.DataFrame.unstack&quot;&gt;&lt;code&gt;unstack()&lt;/code&gt;&lt;/a&gt;, which by default unstacks the &lt;strong&gt;last level&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5036c3e0f6df29704ffbb7dea300f0ccc4b3715" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;slice&lt;/code&gt; object.</source>
          <target state="translated">Con un objeto de &lt;code&gt;slice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd3da76509f439069a308cb1ccc47ca321f81229" translate="yes" xml:space="preserve">
          <source>With a DataFrame, you can simultaneously reindex the index and columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6be40bf674dcabe97cdea6317c1d3bf73eff08" translate="yes" xml:space="preserve">
          <source>With a DataFrame:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4c7416d6b7f49966873b83df87ef4f40cde0a0" translate="yes" xml:space="preserve">
          <source>With a MultiIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee03e7a99a4d63fa88e911d144a4352efc42bc5" translate="yes" xml:space="preserve">
          <source>With a boolean array whose length matches the columns.</source>
          <target state="translated">Con un arreglo booleano cuya longitud coincide con las columnas.</target>
        </trans-unit>
        <trans-unit id="f237df6f9252a913e260ff3badedab7c154b4838" translate="yes" xml:space="preserve">
          <source>With a boolean mask the same length as the index.</source>
          <target state="translated">Con una máscara booleana de la misma longitud que el índice.</target>
        </trans-unit>
        <trans-unit id="dda007944d63f089727eb70793373617b8767c3b" translate="yes" xml:space="preserve">
          <source>With a callable function that expects the Series or DataFrame.</source>
          <target state="translated">Con una función llamable que espera la Serie o el DataFrame.</target>
        </trans-unit>
        <trans-unit id="8bed52cc7e4747c8bd937c60820a5759ef704acd" translate="yes" xml:space="preserve">
          <source>With a callable, useful in method chains. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e067c62142339d0717ea5379c5209d2b281445c" translate="yes" xml:space="preserve">
          <source>With a callable, useful in method chains. The &lt;code&gt;x&lt;/code&gt; passed to the &lt;code&gt;lambda&lt;/code&gt; is the DataFrame being sliced. This selects the rows whose index label even.</source>
          <target state="translated">Con un invocable, &amp;uacute;til en cadenas de m&amp;eacute;todos. La &lt;code&gt;x&lt;/code&gt; pasada a la &lt;code&gt;lambda&lt;/code&gt; es el DataFrame que se est&amp;aacute; cortando. Esto selecciona las filas cuya etiqueta de &amp;iacute;ndice sea uniforme.</target>
        </trans-unit>
        <trans-unit id="e2de180789da94c610f8184e9c92bdb21f0dce87" translate="yes" xml:space="preserve">
          <source>With a dict, the number of places for specific columns can be specified with the column names as key and the number of decimal places as value</source>
          <target state="translated">Con un dict,el número de lugares para columnas específicas puede especificarse con los nombres de las columnas como clave y el número de lugares decimales como valor</target>
        </trans-unit>
        <trans-unit id="268f23e1685fb62dc26c58c66fd7c8a60b53482d" translate="yes" xml:space="preserve">
          <source>With a list of integers.</source>
          <target state="translated">Con una lista de números enteros.</target>
        </trans-unit>
        <trans-unit id="3527efe8e362c867daba31b190d7b149dc553954" translate="yes" xml:space="preserve">
          <source>With a scalar integer.</source>
          <target state="translated">Con un entero escalar.</target>
        </trans-unit>
        <trans-unit id="b805e84a011c2b52a47f01f775ac4ab2749ba04e" translate="yes" xml:space="preserve">
          <source>With binary operations between pandas data structures, there are two key points of interest:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95681122f07594b1049e7bfd354d4259e6806e1" translate="yes" xml:space="preserve">
          <source>With grouped &lt;code&gt;Series&lt;/code&gt; you can also pass a list or dict of functions to do aggregation with, outputting a DataFrame:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e6b2f6e3dda068eaa62a89dabc1d44078675ab" translate="yes" xml:space="preserve">
          <source>With heterogeneous data, the lowest common type will have to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cee32768824581250b82cf3464754562a44f6c1" translate="yes" xml:space="preserve">
          <source>With heterogenous data, the lowest common type will have to be used.</source>
          <target state="translated">Con datos heterogéneos,habrá que utilizar el tipo común más bajo.</target>
        </trans-unit>
        <trans-unit id="c581d3ffea66627b46a84ceeef011711972661cd" translate="yes" xml:space="preserve">
          <source>With lists of integers.</source>
          <target state="translated">Con listas de números enteros.</target>
        </trans-unit>
        <trans-unit id="b0c4a6baa2322a3867d7709ca97fff0f772c7fab" translate="yes" xml:space="preserve">
          <source>With more than one value:</source>
          <target state="translated">Con más de un valor:</target>
        </trans-unit>
        <trans-unit id="477a3a149f6d19ee116e6e2b6f7cb2d7f2b1eca7" translate="yes" xml:space="preserve">
          <source>With multiple id columns</source>
          <target state="translated">Con múltiples columnas de identificación</target>
        </trans-unit>
        <trans-unit id="4450db92c2b9a13323e169e8efcd96c925c780a3" translate="yes" xml:space="preserve">
          <source>With no defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e2f5f9dab013c6a7ef811944664945bf1be6f2" translate="yes" xml:space="preserve">
          <source>With pandas, column selection is done by passing a list of column names to your DataFrame:</source>
          <target state="translated">En el caso de los pandas,la selección de columna se hace pasando una lista de nombres de columna a su DataFrame:</target>
        </trans-unit>
        <trans-unit id="d1baf1779a1a9f61f8da771fa8410d352b782cbc" translate="yes" xml:space="preserve">
          <source>With scalar integers.</source>
          <target state="translated">Con números enteros escalares.</target>
        </trans-unit>
        <trans-unit id="88da2dbf769c79cfd8b0bb4ed72ff7b00ea97291" translate="yes" xml:space="preserve">
          <source>With some databases, writing large DataFrames can result in errors due to packet size limitations being exceeded. This can be avoided by setting the &lt;code&gt;chunksize&lt;/code&gt; parameter when calling &lt;code&gt;to_sql&lt;/code&gt;. For example, the following writes &lt;code&gt;data&lt;/code&gt; to the database in batches of 1000 rows at a time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8202dab7baa41c60012d05d28b30310e346910c0" translate="yes" xml:space="preserve">
          <source>With stubnames [&amp;lsquo;A&amp;rsquo;, &amp;lsquo;B&amp;rsquo;], this function expects to find one or more group of columns with format A-suffix1, A-suffix2,&amp;hellip;, B-suffix1, B-suffix2,&amp;hellip; You specify what you want to call this suffix in the resulting long format with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676563e9aa16b37ee7bb915a3f1c275643187e50" translate="yes" xml:space="preserve">
          <source>With stubnames [&amp;lsquo;A&amp;rsquo;, &amp;lsquo;B&amp;rsquo;], this function expects to find one or more group of columns with format A-suffix1, A-suffix2,&amp;hellip;, B-suffix1, B-suffix2,&amp;hellip; You specify what you want to call this suffix in the resulting long format with &lt;code&gt;j&lt;/code&gt; (for example &lt;code&gt;j=&amp;rsquo;year&amp;rsquo;&lt;/code&gt;)</source>
          <target state="translated">Con nombres de c&amp;oacute;digo auxiliar ['A', 'B'], esta funci&amp;oacute;n espera encontrar uno o m&amp;aacute;s grupos de columnas con formato A-sufijo1, A-sufijo2,&amp;hellip;, B-sufijo1, B-sufijo2,&amp;hellip; Usted especifica lo que desea llame a este sufijo en el formato largo resultante con &lt;code&gt;j&lt;/code&gt; (por ejemplo, &lt;code&gt;j=&amp;rsquo;year&amp;rsquo;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d8a4b9d08d97e45adb4da87468c9bc15fb87e195" translate="yes" xml:space="preserve">
          <source>With the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88be41d156307a291564b940fe613fedb3dddf39" translate="yes" xml:space="preserve">
          <source>With the &amp;lsquo;keep&amp;rsquo; parameter, the selection behaviour of duplicated values can be changed. The value &amp;lsquo;first&amp;rsquo; keeps the first occurrence for each set of duplicated entries. The default value of keep is &amp;lsquo;first&amp;rsquo;.</source>
          <target state="translated">Con el par&amp;aacute;metro 'mantener', se puede cambiar el comportamiento de selecci&amp;oacute;n de valores duplicados. El valor 'primero' conserva la primera aparici&amp;oacute;n de cada conjunto de entradas duplicadas. El valor predeterminado de mantener es 'primero'.</target>
        </trans-unit>
        <trans-unit id="e8cff31ccb661d4a8245ac46d1bdb4b837a7fea4" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;Resampler&lt;/code&gt; object in hand, iterating through the grouped data is very natural and functions similarly to &lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools.groupby&quot;&gt;&lt;code&gt;itertools.groupby()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea41341cd10db335ab7af75a8790e97bc90c1d1" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;name&lt;/code&gt; parameter set we set a custom name for the yielded namedtuples:</source>
          <target state="translated">Con el conjunto de par&amp;aacute;metros de &lt;code&gt;name&lt;/code&gt; , establecemos un nombre personalizado para las tuplas con nombre producidas:</target>
        </trans-unit>
        <trans-unit id="f79a85a04e14f729d57a4e08aec072bead273225" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;tz&lt;/code&gt; parameter, we can change the DatetimeIndex to other time zones:</source>
          <target state="translated">Con el par&amp;aacute;metro &lt;code&gt;tz&lt;/code&gt; , podemos cambiar el DatetimeIndex a otras zonas horarias:</target>
        </trans-unit>
        <trans-unit id="932fefd596d9b20b6c83c665a9e1d936ffcbfd62" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;tz=None&lt;/code&gt;, we can remove the time zone information while keeping the local time (not converted to UTC):</source>
          <target state="translated">Con &lt;code&gt;tz=None&lt;/code&gt; , podemos eliminar la informaci&amp;oacute;n de la zona horaria manteniendo la hora local (no convertida a UTC):</target>
        </trans-unit>
        <trans-unit id="141c115f799d02a71683c4d9b4567760b0b1e534" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;tz=None&lt;/code&gt;, we can remove the timezone (after converting to UTC if necessary):</source>
          <target state="translated">Con &lt;code&gt;tz=None&lt;/code&gt; , podemos eliminar la zona horaria (despu&amp;eacute;s de convertir a UTC si es necesario):</target>
        </trans-unit>
        <trans-unit id="567bf3605bbc2143ba4c0f737a06b5792749b8c5" translate="yes" xml:space="preserve">
          <source>With the GroupBy object in hand, iterating through the grouped data is very natural and functions similarly to &lt;a href=&quot;https://docs.python.org/3/library/itertools.html#itertools.groupby&quot;&gt;&lt;code&gt;itertools.groupby()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c63eb155632e5189d917b565a5cf87ff0f178cc" translate="yes" xml:space="preserve">
          <source>With the choice methods &lt;a href=&quot;#indexing-label&quot;&gt;Selection by Label&lt;/a&gt;, &lt;a href=&quot;#indexing-integer&quot;&gt;Selection by Position&lt;/a&gt;, and &lt;a href=&quot;advanced#advanced&quot;&gt;Advanced Indexing&lt;/a&gt; you may select along more than one axis using boolean vectors combined with other indexing expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947cfadad1758b850bbde75c2aec746aef4b51ba" translate="yes" xml:space="preserve">
          <source>With time series data, using pad/ffill is extremely common so that the &amp;ldquo;last known value&amp;rdquo; is available at every time point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7a168ce7f24eda6bf5b05b717dda33bf878ad1" translate="yes" xml:space="preserve">
          <source>Without a little bit of context many of these arguments don&amp;rsquo;t make much sense. Let&amp;rsquo;s revisit the above example. Suppose we wanted to associate specific keys with each of the pieces of the chopped up DataFrame. We can do this using the &lt;code&gt;keys&lt;/code&gt; argument:</source>
          <target state="translated">Sin un poco de contexto, muchos de estos argumentos no tienen mucho sentido. Repasemos el ejemplo anterior. Supongamos que quisi&amp;eacute;ramos asociar claves espec&amp;iacute;ficas con cada una de las piezas del DataFrame cortado. Podemos hacer esto usando el argumento de las &lt;code&gt;keys&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="78afe455af4da05512804607872f0e31af62c9ae" translate="yes" xml:space="preserve">
          <source>Without filling the missing values you get:</source>
          <target state="translated">Sin llenar los valores faltantes que se obtienen:</target>
        </trans-unit>
        <trans-unit id="fcd7f12c4bc462949522eb537bad1134056dc70d" translate="yes" xml:space="preserve">
          <source>Without the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de664ffc9468de3bcb32cfa2b4af8a8b29b4d78e" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;n&lt;/code&gt; parameter, the outputs of &lt;code&gt;rsplit&lt;/code&gt; and &lt;code&gt;split&lt;/code&gt; are identical.</source>
          <target state="translated">Sin el par&amp;aacute;metro &lt;code&gt;n&lt;/code&gt; , las salidas de &lt;code&gt;rsplit&lt;/code&gt; y &lt;code&gt;split&lt;/code&gt; son id&amp;eacute;nticas.</target>
        </trans-unit>
        <trans-unit id="75bb90c9bc196df1aec374b3df0b2a84c13f3830" translate="yes" xml:space="preserve">
          <source>Working with categories</source>
          <target state="translated">Trabajando con categorías</target>
        </trans-unit>
        <trans-unit id="2e481cab17f2a48dbcb2e44baa39ed3a7aac4433" translate="yes" xml:space="preserve">
          <source>Working with missing data</source>
          <target state="translated">Trabajando con los datos que faltan</target>
        </trans-unit>
        <trans-unit id="7181810c540518b9158e4576133fc1536a22701c" translate="yes" xml:space="preserve">
          <source>Working with options</source>
          <target state="translated">Trabajando con opciones</target>
        </trans-unit>
        <trans-unit id="4d89f171cd4b6a5e3b13a9c049cf45c6543b35fb" translate="yes" xml:space="preserve">
          <source>Working with text data</source>
          <target state="translated">Trabajando con datos de texto</target>
        </trans-unit>
        <trans-unit id="03aadeb23b8e7055c0a48ecf6eb50e8edddab538" translate="yes" xml:space="preserve">
          <source>Working with the code</source>
          <target state="translated">Trabajando con el código</target>
        </trans-unit>
        <trans-unit id="4e8c1cbd3b0aba9c51aa1429902ef1f8f29e12e2" translate="yes" xml:space="preserve">
          <source>Working with time zones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e356dc9e193234ce62e83e2251cfdb8ad56d79bc" translate="yes" xml:space="preserve">
          <source>Works exactly like relativedelta in terms of the keyword args you pass in, use of the keyword n is discouraged&amp;ndash; you would be better off specifying n in the keywords you use, but regardless it is there for you. n is needed for DateOffset subclasses.</source>
          <target state="translated">Funciona exactamente como relativo delta en t&amp;eacute;rminos de los argumentos de la palabra clave que ingresa, se desaconseja el uso de la palabra clave n; ser&amp;iacute;a mejor que especificara n en las palabras clave que usa, pero independientemente de que est&amp;eacute; ah&amp;iacute; para usted. n es necesario para las subclases de DateOffset.</target>
        </trans-unit>
        <trans-unit id="cefcfa77bf60fa2f8dbef3c2547b747c7cd48520" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;Index.is_&lt;/code&gt; but also checks metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e651ec94cff9276272e3a04d5e2ffd34208a5824" translate="yes" xml:space="preserve">
          <source>Works on different Index of types.</source>
          <target state="translated">Funciona en diferentes índices de tipos.</target>
        </trans-unit>
        <trans-unit id="30bffa03f8735cbc1234a62f7fd066d119a3d464" translate="yes" xml:space="preserve">
          <source>World Bank</source>
          <target state="translated">Banco Mundial</target>
        </trans-unit>
        <trans-unit id="c8d19d3de16186ed90608b4170c930f7a18b3c62" translate="yes" xml:space="preserve">
          <source>Wrap long strings in the Series/Index to be formatted in paragraphs with length less than a given width.</source>
          <target state="translated">Envolver cadenas largas en la Serie/Índice para ser formateadas en párrafos con una longitud inferior a un ancho determinado.</target>
        </trans-unit>
        <trans-unit id="dbb63b193b1553a4ba3c2548032d46b816a42c85" translate="yes" xml:space="preserve">
          <source>Wrap strings in Series/Index at specified line width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe577c70c32775b33ccc2ffa6933ef8dd57c21ab" translate="yes" xml:space="preserve">
          <source>Wringing a little more performance out of &lt;code&gt;read_excel&lt;/code&gt; Internally, Excel stores all numeric data as floats. Because this can produce unexpected behavior when reading in data, pandas defaults to trying to convert integers to floats if it doesn&amp;rsquo;t lose information (&lt;code&gt;1.0 --&amp;gt;
1&lt;/code&gt;). You can pass &lt;code&gt;convert_float=False&lt;/code&gt; to disable this behavior, which may give a slight performance improvement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd42110e04fff470b7ec75ecdc92dc219432bd6" translate="yes" xml:space="preserve">
          <source>Write DataFrame index as a column. Uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394425c10464dc8577445f01060182d0104c2181" translate="yes" xml:space="preserve">
          <source>Write DataFrame index as a column. Uses &lt;code&gt;index_label&lt;/code&gt; as the column name in the table.</source>
          <target state="translated">Escriba el &amp;iacute;ndice de DataFrame como una columna. Utiliza &lt;code&gt;index_label&lt;/code&gt; como nombre de columna en la tabla.</target>
        </trans-unit>
        <trans-unit id="c164f66aede4d77e94cbf139d32c258bfdc1ae00" translate="yes" xml:space="preserve">
          <source>Write DataFrame to a SQL database.</source>
          <target state="translated">Escribir DataFrame a una base de datos SQL.</target>
        </trans-unit>
        <trans-unit id="6f2e27368add3b50a0ecf9ba34b4932f3c45fed9" translate="yes" xml:space="preserve">
          <source>Write DataFrame to a comma-separated values (csv) file.</source>
          <target state="translated">Escriba DataFrame en un archivo de valores separados por comas (csv).</target>
        </trans-unit>
        <trans-unit id="92d4292c33ad00372f279e5ab3be8c6bc620bd5d" translate="yes" xml:space="preserve">
          <source>Write DataFrame to an Excel file.</source>
          <target state="translated">Escribir DataFrame a un archivo de Excel.</target>
        </trans-unit>
        <trans-unit id="d40f6901eb637b818417c804b4b777c928e3b517" translate="yes" xml:space="preserve">
          <source>Write DataFrame to an HDF5 file.</source>
          <target state="translated">Escribir DataFrame a un archivo HDF5.</target>
        </trans-unit>
        <trans-unit id="683955a691078d823568f49c7634935a3f07f3f4" translate="yes" xml:space="preserve">
          <source>Write MultiIndex and Hierarchical Rows as merged cells.</source>
          <target state="translated">Escriba las filas multi-índice y jerárquicas como celdas fusionadas.</target>
        </trans-unit>
        <trans-unit id="3b27b95178c702f107b1f90d2a6695cb61861b96" translate="yes" xml:space="preserve">
          <source>Write Styler to an Excel sheet.</source>
          <target state="translated">Escriba Styler en una hoja de Excel.</target>
        </trans-unit>
        <trans-unit id="c1b3cff87dd1d9c51b928c32a4c2070d51a615f8" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to Google BigQuery.</source>
          <target state="translated">Escriba un DataFrame a Google BigQuery.</target>
        </trans-unit>
        <trans-unit id="b83334d4a758569938692544de7dc98076100bbb" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to a Google BigQuery table.</source>
          <target state="translated">Escribir un DataFrame a una tabla de Google BigQuery.</target>
        </trans-unit>
        <trans-unit id="264d8b4cb7c15325021244c380397e40b38bc3c8" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to a comma-separated values (csv) file.</source>
          <target state="translated">Escriba un DataFrame a un archivo de valores separados por comas (csv).</target>
        </trans-unit>
        <trans-unit id="99a7526998fbd634a7ab24da55f48fec95b8ead9" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to the binary Feather format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a523402a24bfeeb314ecf21c86f23560c3abf482" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to the binary parquet format.</source>
          <target state="translated">Escriba un DataFrame al formato de parquet binario.</target>
        </trans-unit>
        <trans-unit id="eb96fbd75c944650b2892e1eedafd8292c8c2b5d" translate="yes" xml:space="preserve">
          <source>Write a HDF file from a DataFrame.</source>
          <target state="translated">Escribir un archivo HDF desde un DataFrame.</target>
        </trans-unit>
        <trans-unit id="adfd99572318beb377f0cb70269307883e59e692" translate="yes" xml:space="preserve">
          <source>Write a csv file.</source>
          <target state="translated">Escriba un archivo csv.</target>
        </trans-unit>
        <trans-unit id="cd97aa18da561ab532fce87a169854e944f45498" translate="yes" xml:space="preserve">
          <source>Write a description of your changes in the &lt;code&gt;Preview Discussion&lt;/code&gt; tab</source>
          <target state="translated">Escriba una descripci&amp;oacute;n de sus cambios en la pesta&amp;ntilde;a &lt;code&gt;Preview Discussion&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa22dcf0c1a934fb32a6ccf79a810f1ea38bdf1a" translate="yes" xml:space="preserve">
          <source>Write a multi-row index CSV without writing duplicates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99530cd9f65dbec1f783bd1b35af668db65927f0" translate="yes" xml:space="preserve">
          <source>Write a new test that asserts a warning is issued when calling with the deprecated argument</source>
          <target state="translated">Escriba una nueva prueba que afirme que se emite una advertencia cuando se llama con el argumento desaprobado</target>
        </trans-unit>
        <trans-unit id="6af60f969a23a9b1aebe377291ec8a0bad9311f1" translate="yes" xml:space="preserve">
          <source>Write a text representation of object to the system clipboard. This can be pasted into Excel, for example.</source>
          <target state="translated">Escriba una representación de texto del objeto en el portapapeles del sistema.Esto puede ser pegado en Excel,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="dc9ea651d8391f3377170ce9108678eea0fe4a93" translate="yes" xml:space="preserve">
          <source>Write as a PyTables Table structure which may perform worse but allow more flexible operations like searching / selecting subsets of the data</source>
          <target state="translated">Escribir como una estructura de tabla PyTables que puede funcionar peor pero permite operaciones más flexibles como la búsqueda/selección de subconjuntos de datos</target>
        </trans-unit>
        <trans-unit id="a75b07386bdff928c15327548914dd3f90837ad2" translate="yes" xml:space="preserve">
          <source>Write engine to use, &amp;lsquo;openpyxl&amp;rsquo; or &amp;lsquo;xlsxwriter&amp;rsquo;. You can also set this via the options &lt;code&gt;io.excel.xlsx.writer&lt;/code&gt;, &lt;code&gt;io.excel.xls.writer&lt;/code&gt;, and &lt;code&gt;io.excel.xlsm.writer&lt;/code&gt;.</source>
          <target state="translated">Escriba el motor para usar, 'openpyxl' o 'xlsxwriter'. Tambi&amp;eacute;n puede configurar esto a trav&amp;eacute;s de las opciones &lt;code&gt;io.excel.xlsx.writer&lt;/code&gt; , &lt;code&gt;io.excel.xls.writer&lt;/code&gt; y &lt;code&gt;io.excel.xlsm.writer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42c9f77aa546749e5e409b9a021c5df5eaaf4681" translate="yes" xml:space="preserve">
          <source>Write object to a comma-separated values (csv) file.</source>
          <target state="translated">Escriba el objeto en un archivo de valores separados por comas (csv).</target>
        </trans-unit>
        <trans-unit id="adfe60fd5c0ee1f3f300dc2347df46c02c0aa7c5" translate="yes" xml:space="preserve">
          <source>Write object to an Excel sheet.</source>
          <target state="translated">Escriba el objeto en una hoja de Excel.</target>
        </trans-unit>
        <trans-unit id="0901b93d2c7065602e706ec71296edd57110fe25" translate="yes" xml:space="preserve">
          <source>Write out feather-format for DataFrames.</source>
          <target state="translated">Escriba el formato de pluma para los DataFrames.</target>
        </trans-unit>
        <trans-unit id="9f1a0f0ecee27ddc45993d06d571c030c79d7e48" translate="yes" xml:space="preserve">
          <source>Write out the binary feather-format for DataFrames.</source>
          <target state="translated">Escriba el formato binario de pluma para los DataFrames.</target>
        </trans-unit>
        <trans-unit id="c429dec21f3d07efe528c5818d5d0fa48b48796e" translate="yes" xml:space="preserve">
          <source>Write out the column names. If a list of string is given it is assumed to be aliases for the column names.</source>
          <target state="translated">Escriba los nombres de las columnas.Si se da una lista de cadenas se asume que son alias para los nombres de las columnas.</target>
        </trans-unit>
        <trans-unit id="d2423909a29f087eb651dbb2cad4b8ed73036aa2" translate="yes" xml:space="preserve">
          <source>Write out the column names. If a list of strings is given it is assumed to be aliases for the column names.</source>
          <target state="translated">Escriba los nombres de las columnas.Si se da una lista de cadenas se asume que son alias para los nombres de las columnas.</target>
        </trans-unit>
        <trans-unit id="fda48a754b1e3702b9516e31a3de2de6ff9df0b8" translate="yes" xml:space="preserve">
          <source>Write out the column names. If a list of strings is given, it is assumed to be aliases for the column names.</source>
          <target state="translated">Escriba los nombres de las columnas.Si se da una lista de cadenas,se asume que son alias para los nombres de las columnas.</target>
        </trans-unit>
        <trans-unit id="873525b5438b1e02d7f69a4f6268bc115d2d0a25" translate="yes" xml:space="preserve">
          <source>Write out to a csv file.</source>
          <target state="translated">Escriba en un archivo CSV.</target>
        </trans-unit>
        <trans-unit id="aa6bc24af392de08d25642fd5dd308e8723e29b5" translate="yes" xml:space="preserve">
          <source>Write records stored in a DataFrame to a SQL database.</source>
          <target state="translated">Escribir los registros almacenados en un DataFrame a una base de datos SQL.</target>
        </trans-unit>
        <trans-unit id="b9fd5810df30326ae7fde3ba95cab45fa3098e3d" translate="yes" xml:space="preserve">
          <source>Write row names (index).</source>
          <target state="translated">Escriba los nombres de las filas (índice).</target>
        </trans-unit>
        <trans-unit id="511426d26f200a023b7d5ad3fc99ff32bb2749b3" translate="yes" xml:space="preserve">
          <source>Write the contained data to an HDF5 file using HDFStore.</source>
          <target state="translated">Escriba los datos contenidos en un archivo HDF5 usando HDFStore.</target>
        </trans-unit>
        <trans-unit id="1f9d4e129d8d3fc01ca5bc5124c5580fb253c46c" translate="yes" xml:space="preserve">
          <source>Write the index to Stata dataset.</source>
          <target state="translated">Escriba el índice del conjunto de datos de Stata.</target>
        </trans-unit>
        <trans-unit id="fd8c37a19e2d1b435c008352b2735a9a865f1ef6" translate="yes" xml:space="preserve">
          <source>Write to a feather file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c743a4572e5d7dabf9b23844ccc5822e56715f8a" translate="yes" xml:space="preserve">
          <source>Write to a parquet file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f897a5ded22c1bef9f9106497f8bbd242b47cf" translate="yes" xml:space="preserve">
          <source>Write to a sql table.</source>
          <target state="translated">Escriba a una tabla cuadrada.</target>
        </trans-unit>
        <trans-unit id="f5bab973a04bdb9274be05e67d70a26b25b02ee1" translate="yes" xml:space="preserve">
          <source>Write to hdf.</source>
          <target state="translated">Escriba a hdf.</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="4b19fc4ef6b77bca2f9cb30932840328dcfca1a9" translate="yes" xml:space="preserve">
          <source>Writes the DataFrame to a Stata dataset file. &amp;ldquo;dta&amp;rdquo; files contain a Stata dataset.</source>
          <target state="translated">Escribe el DataFrame en un archivo de conjunto de datos de Stata. Los archivos &quot;dta&quot; contienen un conjunto de datos de Stata.</target>
        </trans-unit>
        <trans-unit id="9b0c965c774cb2d7882fc5e24714700dbd950b37" translate="yes" xml:space="preserve">
          <source>Writing CSVs to binary file objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a785f4cb191b395c3761f0577c1007b194b770" translate="yes" xml:space="preserve">
          <source>Writing DataFrames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038ad078864d4839a5a34971e21d2f4a3a90bc0e" translate="yes" xml:space="preserve">
          <source>Writing Excel files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81f01f6170276cd8fd5eb3b6f547a0e60b6fa3a" translate="yes" xml:space="preserve">
          <source>Writing Excel files to disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1706a98de4dc1369dbe22d0b76a45611dee2e5cc" translate="yes" xml:space="preserve">
          <source>Writing Excel files to memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6325f0c707862e703d2098d7c6e40317f78a06da" translate="yes" xml:space="preserve">
          <source>Writing JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92ea7d38a931f7a222a6472dce41648e41db131" translate="yes" xml:space="preserve">
          <source>Writing a docstring</source>
          <target state="translated">Escribir una cadena de doctores</target>
        </trans-unit>
        <trans-unit id="ae37b1da244ee0ea7eb1b0470b6959674d2e47ed" translate="yes" xml:space="preserve">
          <source>Writing a formatted string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e914923daddf6518b20e2032c77cdef423d939ac" translate="yes" xml:space="preserve">
          <source>Writing good code is not just about what you write. It is also about &lt;em&gt;how&lt;/em&gt; you write it. During &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; testing, several tools will be run to check your code for stylistic errors. Generating any warnings will cause the test to fail. Thus, good style is a requirement for submitting code to &lt;em&gt;pandas&lt;/em&gt;.</source>
          <target state="translated">Escribir un buen c&amp;oacute;digo no se trata solo de lo que escribe. Tambi&amp;eacute;n se trata de &lt;em&gt;c&amp;oacute;mo&lt;/em&gt; lo escribes. Durante las pruebas de &lt;a href=&quot;#contributing-ci&quot;&gt;integraci&amp;oacute;n continua&lt;/a&gt; , se ejecutar&amp;aacute;n varias herramientas para verificar si su c&amp;oacute;digo tiene errores de estilo. La generaci&amp;oacute;n de advertencias har&amp;aacute; que la prueba falle. Por lo tanto, el buen estilo es un requisito para enviar c&amp;oacute;digo a los &lt;em&gt;pandas&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="73cc60c102e7d0131b75dbff4cd56a42253bef2b" translate="yes" xml:space="preserve">
          <source>Writing in ISO date format, with microseconds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a136ba6877def44d8efd8c4b549ad2fd4d9b11a8" translate="yes" xml:space="preserve">
          <source>Writing in ISO date format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9db9d774f58f42e59f48e04d187605127ac7f17" translate="yes" xml:space="preserve">
          <source>Writing out data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="translated">Pruebas de escritura</target>
        </trans-unit>
        <trans-unit id="b1462cd53af83623fa08a962b2adfb5223844c91" translate="yes" xml:space="preserve">
          <source>Writing to CSV format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5d2295e4bbf5c42863d0f996efb3275d853d29" translate="yes" xml:space="preserve">
          <source>Writing to HTML files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20c420a3af42b5824af0c4fbae26fa549d13d2b" translate="yes" xml:space="preserve">
          <source>Writing to a CSV file will convert the data, effectively removing any information about the categorical (categories and ordering). So if you read back the CSV file you have to convert the relevant columns back to &lt;code&gt;category&lt;/code&gt; and assign the right categories and categories ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e516721dcc799de64209ced98b3069b0562724" translate="yes" xml:space="preserve">
          <source>Writing to a HDF5 Store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916672152a5e71e3f4bc8f9d2fc5e50f642911ed" translate="yes" xml:space="preserve">
          <source>Writing to a csv file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abad245a52604b4b9f1a52731e8d570939215a99" translate="yes" xml:space="preserve">
          <source>Writing to a file, with a date index and a date column:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f4af03976102eebd9b46eed2633007e0e4c5ab" translate="yes" xml:space="preserve">
          <source>Writing to an excel file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fc5c06f1d16e12094e5865a5b81bb06b126c4a" translate="yes" xml:space="preserve">
          <source>Writing to stata format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="71e81cf0fb90ea960486d9d80b22afe143323a01" translate="yes" xml:space="preserve">
          <source>X is a specific day of the week. Y is a certain month of the year</source>
          <target state="translated">X es un día específico de la semana.Y es un determinado mes del año</target>
        </trans-unit>
        <trans-unit id="a5510f6f11a8f7d32126db4ecd6f44bce6bcf456" translate="yes" xml:space="preserve">
          <source>XLsxWriter</source>
          <target state="translated">XLsxWriter</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="66aa7d2fcf0b755c5484df26686c8b66d30a9ac0" translate="yes" xml:space="preserve">
          <source>Year value of the period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b7f5d30699e5d4e15b4875dbd3728c364030a0" translate="yes" xml:space="preserve">
          <source>Year with century as a decimal number.</source>
          <target state="translated">Año con el siglo como número decimal.</target>
        </trans-unit>
        <trans-unit id="c64879d90ccc2fc0d06f018314bfc95458d99f67" translate="yes" xml:space="preserve">
          <source>Year without century as a decimal number [00,99].</source>
          <target state="translated">El año sin el siglo como número decimal [00,99].</target>
        </trans-unit>
        <trans-unit id="1ac165ee16905744dd627392257b78d2b5789bc6" translate="yes" xml:space="preserve">
          <source>YearBegin</source>
          <target state="translated">YearBegin</target>
        </trans-unit>
        <trans-unit id="fdd77a631d0eb873f7d3b0dac6851d398444ab6c" translate="yes" xml:space="preserve">
          <source>YearBegin.apply()</source>
          <target state="translated">YearBegin.apply()</target>
        </trans-unit>
        <trans-unit id="672e0c9cdc1b071415ff684a724f92e4d420fade" translate="yes" xml:space="preserve">
          <source>YearBegin.apply_index()</source>
          <target state="translated">YearBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="5d524321f5fb37988d0d83f373cdeb8cd9a45737" translate="yes" xml:space="preserve">
          <source>YearBegin.base</source>
          <target state="translated">YearBegin.base</target>
        </trans-unit>
        <trans-unit id="850021a848b1fc34cc164d40576e5ba9edea00b8" translate="yes" xml:space="preserve">
          <source>YearBegin.copy()</source>
          <target state="translated">YearBegin.copy()</target>
        </trans-unit>
        <trans-unit id="73a6c9537c18476d419ef0fcb77ef08b25c31056" translate="yes" xml:space="preserve">
          <source>YearBegin.freqstr</source>
          <target state="translated">YearBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="cc2599fd1415af77db1d6fe1086b987c11e32bb4" translate="yes" xml:space="preserve">
          <source>YearBegin.isAnchored()</source>
          <target state="translated">YearBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="699be22356cb032aa21378a467cade3e8dc2df9b" translate="yes" xml:space="preserve">
          <source>YearBegin.kwds</source>
          <target state="translated">YearBegin.kwds</target>
        </trans-unit>
        <trans-unit id="e68325e106debc2cdea74e6cb896060354399b86" translate="yes" xml:space="preserve">
          <source>YearBegin.name</source>
          <target state="translated">YearBegin.name</target>
        </trans-unit>
        <trans-unit id="cdb7a9f727765eb6d04c675af79ee8ba31e95284" translate="yes" xml:space="preserve">
          <source>YearBegin.nanos</source>
          <target state="translated">YearBegin.nanos</target>
        </trans-unit>
        <trans-unit id="49944295085396d076ab76e727ffd1ebb6ab0503" translate="yes" xml:space="preserve">
          <source>YearBegin.normalize</source>
          <target state="translated">YearBegin.normalize</target>
        </trans-unit>
        <trans-unit id="97a411e08b2df85b21131a643a61b6c013513dd4" translate="yes" xml:space="preserve">
          <source>YearBegin.onOffset()</source>
          <target state="translated">YearBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="45e0c1689f38462c0f2d560229b934f25c901805" translate="yes" xml:space="preserve">
          <source>YearBegin.rollback()</source>
          <target state="translated">YearBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="70e33f36e92a7135b43807223828e9514d5479ff" translate="yes" xml:space="preserve">
          <source>YearBegin.rollforward()</source>
          <target state="translated">YearBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="bb88e81513b6e329bf6cf17fee7a48f8bc4a934a" translate="yes" xml:space="preserve">
          <source>YearBegin.rule_code</source>
          <target state="translated">YearBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="af4c7e983311e56413b0407da79b71ce0f3cddd5" translate="yes" xml:space="preserve">
          <source>YearEnd</source>
          <target state="translated">YearEnd</target>
        </trans-unit>
        <trans-unit id="dff72c415986f2a06b2fe20403d7616cd9ed15f9" translate="yes" xml:space="preserve">
          <source>YearEnd.apply()</source>
          <target state="translated">YearEnd.apply()</target>
        </trans-unit>
        <trans-unit id="49751f8e3f83951f0d9ef2a783ed86fbb8156c67" translate="yes" xml:space="preserve">
          <source>YearEnd.apply_index()</source>
          <target state="translated">YearEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="8cf6200a6413c48b5ad861746fdc009e4ef71c86" translate="yes" xml:space="preserve">
          <source>YearEnd.base</source>
          <target state="translated">YearEnd.base</target>
        </trans-unit>
        <trans-unit id="1336794d93bd406cae3ff76ef17d8bd61b043c67" translate="yes" xml:space="preserve">
          <source>YearEnd.copy()</source>
          <target state="translated">YearEnd.copy()</target>
        </trans-unit>
        <trans-unit id="5d6a62799b417202d2c595d55874af1dfb172245" translate="yes" xml:space="preserve">
          <source>YearEnd.freqstr</source>
          <target state="translated">YearEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="327371506ca5103e7a0bdb7c0e1199013191736e" translate="yes" xml:space="preserve">
          <source>YearEnd.isAnchored()</source>
          <target state="translated">YearEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="4049ad87a77bd7e5092b1c50e33a427059a1fe19" translate="yes" xml:space="preserve">
          <source>YearEnd.kwds</source>
          <target state="translated">YearEnd.kwds</target>
        </trans-unit>
        <trans-unit id="60111ed5e5fd4a1fb24155acfb40a4645ff3d734" translate="yes" xml:space="preserve">
          <source>YearEnd.name</source>
          <target state="translated">YearEnd.name</target>
        </trans-unit>
        <trans-unit id="eeb6cb64a863c1bfdab88227efcf78795aa58515" translate="yes" xml:space="preserve">
          <source>YearEnd.nanos</source>
          <target state="translated">YearEnd.nanos</target>
        </trans-unit>
        <trans-unit id="95cd3f53f2a8e489b3312b84824dca77474215e4" translate="yes" xml:space="preserve">
          <source>YearEnd.normalize</source>
          <target state="translated">YearEnd.normalize</target>
        </trans-unit>
        <trans-unit id="8c66764417acee91205d28eb1237bb244b3087ce" translate="yes" xml:space="preserve">
          <source>YearEnd.onOffset()</source>
          <target state="translated">YearEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="a04cce1ee1073cd84e81d04379fc214a88e96d9e" translate="yes" xml:space="preserve">
          <source>YearEnd.rollback()</source>
          <target state="translated">YearEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="2083f051a8a5c69c23d8ae084b08643da4ccb340" translate="yes" xml:space="preserve">
          <source>YearEnd.rollforward()</source>
          <target state="translated">YearEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="916c51f4aded10974ec6a161d5e1b8a1a72c0633" translate="yes" xml:space="preserve">
          <source>YearEnd.rule_code</source>
          <target state="translated">YearEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="385293fedd37db0c53eb1d1277411a52288a8243" translate="yes" xml:space="preserve">
          <source>YearOffset</source>
          <target state="translated">YearOffset</target>
        </trans-unit>
        <trans-unit id="c5aa0b8ef3a1a08f40903ebeb4d9f2c7099effb9" translate="yes" xml:space="preserve">
          <source>YearOffset.apply()</source>
          <target state="translated">YearOffset.apply()</target>
        </trans-unit>
        <trans-unit id="656961d5067d551adabb1a1c361921bb16776ad6" translate="yes" xml:space="preserve">
          <source>YearOffset.apply_index()</source>
          <target state="translated">YearOffset.apply_index()</target>
        </trans-unit>
        <trans-unit id="4a709facb8dfe39e2b7e85e918df9dc70a533400" translate="yes" xml:space="preserve">
          <source>YearOffset.base</source>
          <target state="translated">YearOffset.base</target>
        </trans-unit>
        <trans-unit id="392cff2f7aee0fcaa3458c72bc1427d581d6d46f" translate="yes" xml:space="preserve">
          <source>YearOffset.copy()</source>
          <target state="translated">YearOffset.copy()</target>
        </trans-unit>
        <trans-unit id="28f766af4926cc0a241e47df1b6f2ba0ece24488" translate="yes" xml:space="preserve">
          <source>YearOffset.freqstr</source>
          <target state="translated">YearOffset.freqstr</target>
        </trans-unit>
        <trans-unit id="d05aa244f37ad68a9a4dd1c51fa6abca6e6f2dc2" translate="yes" xml:space="preserve">
          <source>YearOffset.isAnchored()</source>
          <target state="translated">YearOffset.isAnchored()</target>
        </trans-unit>
        <trans-unit id="ba53ad5f93c4ed5da296eabd872e3b753b8335ca" translate="yes" xml:space="preserve">
          <source>YearOffset.kwds</source>
          <target state="translated">YearOffset.kwds</target>
        </trans-unit>
        <trans-unit id="85ce4ba997c816bdf238daea3962400267db30eb" translate="yes" xml:space="preserve">
          <source>YearOffset.name</source>
          <target state="translated">YearOffset.name</target>
        </trans-unit>
        <trans-unit id="d54e0c2c005751ca858beecaa4c2b283fdfa3644" translate="yes" xml:space="preserve">
          <source>YearOffset.nanos</source>
          <target state="translated">YearOffset.nanos</target>
        </trans-unit>
        <trans-unit id="1ad7af4431f6af4982a6562ce2f2da70d863e8b6" translate="yes" xml:space="preserve">
          <source>YearOffset.normalize</source>
          <target state="translated">YearOffset.normalize</target>
        </trans-unit>
        <trans-unit id="9cdc5dbf542a1ebc16f36eb9638445512dc4b34b" translate="yes" xml:space="preserve">
          <source>YearOffset.onOffset()</source>
          <target state="translated">YearOffset.onOffset()</target>
        </trans-unit>
        <trans-unit id="4ee811f1d7142855999fc4f39678a3ac46bef58b" translate="yes" xml:space="preserve">
          <source>YearOffset.rollback()</source>
          <target state="translated">YearOffset.rollback()</target>
        </trans-unit>
        <trans-unit id="92fd38da1fceabd1a6d9254b034ca68ea1a02b63" translate="yes" xml:space="preserve">
          <source>YearOffset.rollforward()</source>
          <target state="translated">YearOffset.rollforward()</target>
        </trans-unit>
        <trans-unit id="249ea2a40140c2a3029dafe5a15998ad3d5502b6" translate="yes" xml:space="preserve">
          <source>YearOffset.rule_code</source>
          <target state="translated">YearOffset.rule_code</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="43f832eaa266991082749790db492b9a4cc7f4de" translate="yes" xml:space="preserve">
          <source>Yes (as of version 1.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738a2b66281e5ca4973cbceebc923d1996e03dad" translate="yes" xml:space="preserve">
          <source>Yields</source>
          <target state="translated">Yields</target>
        </trans-unit>
        <trans-unit id="c970e3f1e790a2a4cd28b40401902501b9bc2d74" translate="yes" xml:space="preserve">
          <source>Yields:</source>
          <target state="translated">Yields:</target>
        </trans-unit>
        <trans-unit id="24efb8c794c828bb460929f14c7ed5e9b62e0c69" translate="yes" xml:space="preserve">
          <source>Yikes!</source>
          <target state="translated">Yikes!</target>
        </trans-unit>
        <trans-unit id="202587fd5a015c1da82c6ee193ce16da7c92c960" translate="yes" xml:space="preserve">
          <source>You are highly encouraged to install both libraries. See the section &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/version/1.2.0/getting_started/install.html#install-recommended-dependencies&quot;&gt;Recommended Dependencies&lt;/a&gt; for more installation info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731e015904379ec830640f3703bd01e3a51c8462" translate="yes" xml:space="preserve">
          <source>You are highly encouraged to install these libraries, as they provide speed improvements, especially when working with large data sets.</source>
          <target state="translated">Le recomendamos encarecidamente que instale estas bibliotecas,ya que proporcionan mejoras de velocidad,especialmente cuando se trabaja con grandes conjuntos de datos.</target>
        </trans-unit>
        <trans-unit id="63a54d1261a5ad1fc50692dcfa178c28097d2721" translate="yes" xml:space="preserve">
          <source>You are highly encouraged to read &lt;a href=&quot;user_guide/io#io-html-gotchas&quot;&gt;HTML Table Parsing gotchas&lt;/a&gt;. It explains issues surrounding the installation and usage of the above three libraries.</source>
          <target state="translated">Le recomendamos que lea las &lt;a href=&quot;user_guide/io#io-html-gotchas&quot;&gt;trampas del an&amp;aacute;lisis de tablas HTML&lt;/a&gt; . Explica problemas relacionados con la instalaci&amp;oacute;n y el uso de las tres bibliotecas anteriores.</target>
        </trans-unit>
        <trans-unit id="14a654306fee6edf7438333e1db79653827cf52f" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;not pass&lt;/strong&gt; a &lt;code&gt;Series&lt;/code&gt; directly as a &lt;code&gt;ndarray&lt;/code&gt; typed parameter to a Cython function. Instead pass the actual &lt;code&gt;ndarray&lt;/code&gt; using the &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt;. The reason is that the Cython definition is specific to an ndarray and not the passed &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">No puede &lt;strong&gt;pasar&lt;/strong&gt; una &lt;code&gt;Series&lt;/code&gt; directamente como un par&amp;aacute;metro con tipo &lt;code&gt;ndarray&lt;/code&gt; a una funci&amp;oacute;n Cython. En su lugar, pase el &lt;code&gt;ndarray&lt;/code&gt; real utilizando &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; . La raz&amp;oacute;n es que la definici&amp;oacute;n de Cython es espec&amp;iacute;fica de un ndarray y no de la &lt;code&gt;Series&lt;/code&gt; pasada .</target>
        </trans-unit>
        <trans-unit id="bb2630c47a99b651f7db3158474212f74d8756a2" translate="yes" xml:space="preserve">
          <source>You can access the value of the fields for a scalar &lt;code&gt;Timedelta&lt;/code&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac481423304ae46a6e2d7c1d93390ee8876f86ec" translate="yes" xml:space="preserve">
          <source>You can access various components of the &lt;code&gt;Timedelta&lt;/code&gt; or &lt;code&gt;TimedeltaIndex&lt;/code&gt; directly using the attributes &lt;code&gt;days,seconds,microseconds,nanoseconds&lt;/code&gt;. These are identical to the values returned by &lt;code&gt;datetime.timedelta&lt;/code&gt;, in that, for example, the &lt;code&gt;.seconds&lt;/code&gt; attribute represents the number of seconds &amp;gt;= 0 and &amp;lt; 1 day. These are signed according to whether the &lt;code&gt;Timedelta&lt;/code&gt; is signed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1dd4c6e5df1886203c98db1f11023c7a1ccd97" translate="yes" xml:space="preserve">
          <source>You can accidentally store a &lt;em&gt;mixture&lt;/em&gt; of strings and non-strings in an &lt;code&gt;object&lt;/code&gt; dtype array. It&amp;rsquo;s better to have a dedicated dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985760ba2900ffe94a575e677c3391295caf982d" translate="yes" xml:space="preserve">
          <source>You can adjust the max width of the individual columns by setting &lt;code&gt;display.max_colwidth&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964182a98660c212cd70f5b139f3f83307b0dc4d" translate="yes" xml:space="preserve">
          <source>You can also append to an existing Excel file:</source>
          <target state="translated">También se puede añadir a un archivo de Excel existente:</target>
        </trans-unit>
        <trans-unit id="9a149a4e46279291652009027e1a25f3d5130a4a" translate="yes" xml:space="preserve">
          <source>You can also assign a &lt;code&gt;dict&lt;/code&gt; to a row of a &lt;code&gt;DataFrame&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7656a3db5de4a0c7d245c83209d953218f8d02b" translate="yes" xml:space="preserve">
          <source>You can also chain these types of operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7596c3bc47b26e16034cae06d000d436dbae3f17" translate="yes" xml:space="preserve">
          <source>You can also construct a &lt;code&gt;MultiIndex&lt;/code&gt; from a &lt;code&gt;DataFrame&lt;/code&gt; directly, using the method &lt;a href=&quot;../reference/api/pandas.multiindex.from_frame#pandas.MultiIndex.from_frame&quot;&gt;&lt;code&gt;MultiIndex.from_frame()&lt;/code&gt;&lt;/a&gt;. This is a complementary method to &lt;a href=&quot;../reference/api/pandas.multiindex.to_frame#pandas.MultiIndex.to_frame&quot;&gt;&lt;code&gt;MultiIndex.to_frame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede construir un &lt;code&gt;MultiIndex&lt;/code&gt; a partir de un &lt;code&gt;DataFrame&lt;/code&gt; directamente, usando el m&amp;eacute;todo &lt;a href=&quot;../reference/api/pandas.multiindex.from_frame#pandas.MultiIndex.from_frame&quot;&gt; &lt;code&gt;MultiIndex.from_frame()&lt;/code&gt; &lt;/a&gt; . Este es un m&amp;eacute;todo complementario a &lt;a href=&quot;../reference/api/pandas.multiindex.to_frame#pandas.MultiIndex.to_frame&quot;&gt; &lt;code&gt;MultiIndex.to_frame()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d2527b9974c1de143367b83117b0aa017af18e4" translate="yes" xml:space="preserve">
          <source>You can also create a &lt;code&gt;table&lt;/code&gt; by passing &lt;code&gt;format='table'&lt;/code&gt; or &lt;code&gt;format='t'&lt;/code&gt; to a &lt;code&gt;put&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0dbf88c2b603343a63495d28081346c0f3fde8" translate="yes" xml:space="preserve">
          <source>You can also create these other plots using the methods &lt;code&gt;DataFrame.plot.&amp;lt;kind&amp;gt;&lt;/code&gt; instead of providing the &lt;code&gt;kind&lt;/code&gt; keyword argument. This makes it easier to discover plot methods and the specific arguments they use:</source>
          <target state="translated">Tambi&amp;eacute;n puede crear estos otros gr&amp;aacute;ficos utilizando los m&amp;eacute;todos &lt;code&gt;DataFrame.plot.&amp;lt;kind&amp;gt;&lt;/code&gt; en lugar de proporcionar el argumento de palabra clave &lt;code&gt;kind&lt;/code&gt; . Esto hace que sea m&amp;aacute;s f&amp;aacute;cil descubrir los m&amp;eacute;todos de la trama y los argumentos espec&amp;iacute;ficos que utilizan:</target>
        </trans-unit>
        <trans-unit id="25db529875043dcb4d51bdf95c8f114d1b5464c9" translate="yes" xml:space="preserve">
          <source>You can also disable this feature via the &lt;code&gt;expand_frame_repr&lt;/code&gt; option. This will print the table in one block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765028382bd31c39ba69b6dafbe2d54d980bb2c2" translate="yes" xml:space="preserve">
          <source>You can also explode the column in the &lt;code&gt;DataFrame&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74931b0a2474244fea23ff46cbb7c086d2c8c23d" translate="yes" xml:space="preserve">
          <source>You can also fillna using a dict or Series that is alignable. The labels of the dict or index of the Series must match the columns of the frame you wish to fill. The use case of this is to fill a DataFrame with the mean of that column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a035f08ab728bb58dbe8d13f865d591391f7f4ac" translate="yes" xml:space="preserve">
          <source>You can also format datetime values as strings with &lt;a href=&quot;../reference/api/pandas.series.dt.strftime#pandas.Series.dt.strftime&quot;&gt;&lt;code&gt;Series.dt.strftime()&lt;/code&gt;&lt;/a&gt; which supports the same format as the standard &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0cf02479a4964111d53fe1834d350f7725b04f" translate="yes" xml:space="preserve">
          <source>You can also interpolate with a DataFrame:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1de63688dc43b64f9ae34e3af66bd79324c559" translate="yes" xml:space="preserve">
          <source>You can also negate, multiply and use &lt;code&gt;abs&lt;/code&gt; on &lt;code&gt;Timedeltas&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350fef33f981efc67e72a8e36ace807b86394a9e" translate="yes" xml:space="preserve">
          <source>You can also operate on the DataFrame in place:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfab5a20913548c5405db225c5093c041f6dda6" translate="yes" xml:space="preserve">
          <source>You can also pass a &lt;code&gt;DataFrame&lt;/code&gt; of integer or string columns to assemble into a &lt;code&gt;Series&lt;/code&gt; of &lt;code&gt;Timestamps&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61411a308d7b3304ffc617803b9e9946de99ff12" translate="yes" xml:space="preserve">
          <source>You can also pass a &lt;code&gt;name&lt;/code&gt; to be stored in the index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf24abd0cd5fba8c1c3ec8de8adc41985fe9abb" translate="yes" xml:space="preserve">
          <source>You can also pass a dict to &lt;code&gt;concat&lt;/code&gt; in which case the dict keys will be used for the &lt;code&gt;keys&lt;/code&gt; argument (unless other keys are specified):</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar un dict a &lt;code&gt;concat&lt;/code&gt; , en cuyo caso las claves de dictado se utilizar&amp;aacute;n para el argumento de &lt;code&gt;keys&lt;/code&gt; (a menos que se especifiquen otras claves):</target>
        </trans-unit>
        <trans-unit id="8971f5d06619f997c03e3252097d17143d01f29c" translate="yes" xml:space="preserve">
          <source>You can also pass a list of dicts or Series:</source>
          <target state="translated">También puedes pasar una lista de dictados o series:</target>
        </trans-unit>
        <trans-unit id="2170fd30a147361387ee4ca96ed832c912d336e4" translate="yes" xml:space="preserve">
          <source>You can also pass a subset of columns to plot, as well as group by multiple columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d69b1a054b726546b873e28e4fbf87addc2e1bf" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;code&gt;axis&lt;/code&gt; option to only align on the specified axis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a745ed869c92150ab5a5cb2e497fe80b977638f3" translate="yes" xml:space="preserve">
          <source>You can also pass parameters directly to the backend driver. For example, if you do &lt;em&gt;not&lt;/em&gt; have S3 credentials, you can still access public data by specifying an anonymous connection, such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdada7fe196ffcdf573aeb79d198bcdf989afc76" translate="yes" xml:space="preserve">
          <source>You can also pass the list-like object to the &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; constructor with the dtype.</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar el objeto similar a una lista al constructor &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; con el dtype.</target>
        </trans-unit>
        <trans-unit id="84c170feaaa396be1e47b1fae5e410e0507ed43c" translate="yes" xml:space="preserve">
          <source>You can also pass the name of a dtype in the &lt;a href=&quot;https://numpy.org/doc/stable/reference/arrays.scalars.html&quot;&gt;NumPy dtype hierarchy&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07041883665b5d1c51288da324d06e2fe02cb1dc" translate="yes" xml:space="preserve">
          <source>You can also run a plain query without creating a &lt;code&gt;DataFrame&lt;/code&gt; with &lt;code&gt;execute()&lt;/code&gt;. This is useful for queries that don&amp;rsquo;t return values, such as INSERT. This is functionally equivalent to calling &lt;code&gt;execute&lt;/code&gt; on the SQLAlchemy engine or db connection object. Again, you must use the SQL syntax variant appropriate for your database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0a4d28f631eaf577752967b06e63165c1ff9be" translate="yes" xml:space="preserve">
          <source>You can also run the benchmark suite using the version of &lt;code&gt;pandas&lt;/code&gt; already installed in your current Python environment. This can be useful if you do not have virtualenv or conda, or are using the &lt;code&gt;setup.py develop&lt;/code&gt; approach discussed above; for the in-place build you need to set &lt;code&gt;PYTHONPATH&lt;/code&gt;, e.g. &lt;code&gt;PYTHONPATH=&quot;$PWD/..&quot; asv [remaining arguments]&lt;/code&gt;. You can run benchmarks using an existing Python environment by:</source>
          <target state="translated">Tambi&amp;eacute;n puede ejecutar el conjunto de pruebas comparativas con la versi&amp;oacute;n de &lt;code&gt;pandas&lt;/code&gt; ya instalada en su entorno Python actual. Esto puede ser &amp;uacute;til si no tiene virtualenv o conda, o si est&amp;aacute; utilizando el &lt;code&gt;setup.py develop&lt;/code&gt; mencionado anteriormente; para la compilaci&amp;oacute;n en el lugar, debe establecer &lt;code&gt;PYTHONPATH&lt;/code&gt; , por ejemplo, &lt;code&gt;PYTHONPATH=&quot;$PWD/..&quot; asv [remaining arguments]&lt;/code&gt; . Puede ejecutar evaluaciones comparativas utilizando un entorno Python existente mediante:</target>
        </trans-unit>
        <trans-unit id="1ecf6b4938bb797ed25a045ab4b5d1d61ac64325" translate="yes" xml:space="preserve">
          <source>You can also run this command on an entire directory if necessary:</source>
          <target state="translated">También puedes ejecutar este comando en un directorio entero si es necesario:</target>
        </trans-unit>
        <trans-unit id="45d4bcba3b39255146bf2d40f57c229b094a365a" translate="yes" xml:space="preserve">
          <source>You can also select multiple rows from each group by specifying multiple nth values as a list of ints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d7a6c063cafcb2d91b7b07f5b30042094961fc" translate="yes" xml:space="preserve">
          <source>You can also select on the columns with &lt;code&gt;xs&lt;/code&gt;, by providing the axis argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b90ace766710640132a3cf30878c83f6ba90ce3" translate="yes" xml:space="preserve">
          <source>You can also set using these same indexers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b352613034b4e2e4e1b3f505ad125a4b2cc1ce3" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;code&gt;halflife&lt;/code&gt; in terms of a timedelta convertible unit to specify the amount of time it takes for an observation to decay to half its value when also specifying a sequence of &lt;code&gt;times&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f6c6e5bb0be18375b32acf5ad4c52b73caf1ba" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; time by keywords. The argument must be a &lt;code&gt;str&lt;/code&gt; with an &lt;code&gt;hour:minute&lt;/code&gt; representation or a &lt;code&gt;datetime.time&lt;/code&gt; instance. Specifying seconds, microseconds and nanoseconds as business hour results in &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e936e0ae5e61d8324defc2eeb67d4d8d11f8ee3" translate="yes" xml:space="preserve">
          <source>You can also specify a mapping dict:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb43dfe98c8bdbe241d972a3de16566c1c7ffcd" translate="yes" xml:space="preserve">
          <source>You can also specify the &lt;code&gt;axis&lt;/code&gt; argument to &lt;code&gt;.loc&lt;/code&gt; to interpret the passed slicers on a single axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561e9aaa94d259af14791c84c1b35c96da8cec09" translate="yes" xml:space="preserve">
          <source>You can also specify the mapping type.</source>
          <target state="translated">También se puede especificar el tipo de cartografía.</target>
        </trans-unit>
        <trans-unit id="ab9673fcb927c0b60628083ed2ff7e061b1379b6" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the column as the &lt;code&gt;DataFrame&lt;/code&gt; index, and specify a subset of columns to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560afe50723f995759a6b440af21b9bad31fdeb0" translate="yes" xml:space="preserve">
          <source>You can also specify to use multiple cores to speed up the documentation build:</source>
          <target state="translated">También puede especificar que se usen varios núcleos para acelerar la elaboración de la documentación:</target>
        </trans-unit>
        <trans-unit id="7314e43d3cfeb21c3ad25dfa53d7b1ecf9770954" translate="yes" xml:space="preserve">
          <source>You can also supply a point inside an interval.</source>
          <target state="translated">También puedes suministrar un punto dentro de un intervalo.</target>
        </trans-unit>
        <trans-unit id="22d0b06ab6697336780029eb518e6cdd2c05382e" translate="yes" xml:space="preserve">
          <source>You can also use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f607e17959929ad94f45e57a43e9b8188e915d" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../reference/api/pandas.stringdtype#pandas.StringDtype&quot;&gt;&lt;code&gt;StringDtype&lt;/code&gt;&lt;/a&gt;/&lt;code&gt;&quot;string&quot;&lt;/code&gt; as the dtype on non-string data and it will be converted to &lt;code&gt;string&lt;/code&gt; dtype:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c351be28bc73a692bb6164718ff48ea21d775e" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;reset_index&lt;/code&gt; with &lt;code&gt;MultiIndex&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;reset_index&lt;/code&gt; con &lt;code&gt;MultiIndex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d116240750f2697372348accf49876380d36e953" translate="yes" xml:space="preserve">
          <source>You can also use a dict to specify custom name columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2183fe6eb847eba041964b3eb3cd4d751b4169" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;DatetimeIndex&lt;/code&gt; constructor directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983b08125da677e05a5dee465432a626974129aa" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;^&lt;/code&gt; operator:</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar el operador &lt;code&gt;^&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="91ddaa78fedadb21852e63dd4c7880259f9f0363" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;usecols&lt;/code&gt; parameter to eliminate extraneous column data that appear in some lines but not others:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ba421758c060107e0df5766ca5eefa4062b640" translate="yes" xml:space="preserve">
          <source>You can also use the group of a regular expression match when replacing (dict of regex -&amp;gt; dict of regex), this works for lists as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82003841c20821873de86672a8117353cdaf596e" translate="yes" xml:space="preserve">
          <source>You can also use the iterator with &lt;code&gt;read_hdf&lt;/code&gt; which will open, then automatically close the store when finished iterating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96874a5cab7798453a982a44aac330aeec755660" translate="yes" xml:space="preserve">
          <source>You can also use the levels of a &lt;code&gt;DataFrame&lt;/code&gt; with a &lt;a href=&quot;../reference/api/pandas.multiindex#pandas.MultiIndex&quot;&gt;&lt;code&gt;MultiIndex&lt;/code&gt;&lt;/a&gt; as if they were columns in the frame:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee55529ea3dc6d792793ca18fbb64e2e870a5d67" translate="yes" xml:space="preserve">
          <source>You can always override the default type by specifying the desired SQL type of any of the columns by using the &lt;code&gt;dtype&lt;/code&gt; argument. This argument needs a dictionary mapping column names to SQLAlchemy types (or strings for the sqlite3 fallback mode). For example, specifying to use the sqlalchemy &lt;code&gt;String&lt;/code&gt; type instead of the default &lt;code&gt;Text&lt;/code&gt; type for string columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e843b2c36994229001a1fc151226d9916da0c8a" translate="yes" xml:space="preserve">
          <source>You can apply &lt;strong&gt;conditional formatting&lt;/strong&gt;, the visual styling of a DataFrame depending on the data within, by using the &lt;code&gt;DataFrame.style&lt;/code&gt; property. This is a property that returns a &lt;code&gt;Styler&lt;/code&gt; object, which has useful methods for formatting and displaying DataFrames.</source>
          <target state="translated">Puede aplicar &lt;strong&gt;formato condicional&lt;/strong&gt; , el estilo visual de un DataFrame en funci&amp;oacute;n de los datos que &lt;code&gt;DataFrame.style&lt;/code&gt; , utilizando la propiedad DataFrame.style . Esta es una propiedad que devuelve un objeto &lt;code&gt;Styler&lt;/code&gt; , que tiene m&amp;eacute;todos &amp;uacute;tiles para formatear y mostrar DataFrames.</target>
        </trans-unit>
        <trans-unit id="6e6687c5e7f1f725623400ad8815180508cc7f25" translate="yes" xml:space="preserve">
          <source>You can apply NumPy &lt;a href=&quot;https://numpy.org/doc/stable/reference/ufuncs.html&quot;&gt;ufuncs&lt;/a&gt; to &lt;code&gt;SparseArray&lt;/code&gt; and get a &lt;code&gt;SparseArray&lt;/code&gt; as a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c6426c3b6e48ae92dc2b28349aeabe42b3c04f" translate="yes" xml:space="preserve">
          <source>You can apply the reductions: &lt;a href=&quot;../reference/api/pandas.dataframe.empty#pandas.DataFrame.empty&quot;&gt;&lt;code&gt;empty&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.any#pandas.DataFrame.any&quot;&gt;&lt;code&gt;any()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.all#pandas.DataFrame.all&quot;&gt;&lt;code&gt;all()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../reference/api/pandas.dataframe.bool#pandas.DataFrame.bool&quot;&gt;&lt;code&gt;bool()&lt;/code&gt;&lt;/a&gt; to provide a way to summarize a boolean result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9906a098c6b1bb2b7e04621ebec3727224033702" translate="yes" xml:space="preserve">
          <source>You can automatically create a MultiIndexed frame by passing a tuples dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a445ae3740b3811e3f5c9c9587b048125b801b" translate="yes" xml:space="preserve">
          <source>You can call transform on a GroupBy object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2520f1b00474528e6a74c05ca4eeb7ce365ce66d" translate="yes" xml:space="preserve">
          <source>You can change how much to print on a single row by setting the &lt;code&gt;display.width&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579c3ea1e6f3a827405458d2c91e1baa2576e67d" translate="yes" xml:space="preserve">
          <source>You can change the semantics of the expression by passing the keyword argument &lt;code&gt;parser='python'&lt;/code&gt;. This enforces the same semantics as evaluation in Python space. Likewise, you can pass &lt;code&gt;engine='python'&lt;/code&gt; to evaluate an expression using Python itself as a backend. This is not recommended as it is inefficient compared to using &lt;code&gt;numexpr&lt;/code&gt; as the engine.</source>
          <target state="translated">Puede cambiar la sem&amp;aacute;ntica de la expresi&amp;oacute;n pasando el argumento de palabra clave &lt;code&gt;parser='python'&lt;/code&gt; . Esto aplica la misma sem&amp;aacute;ntica que la evaluaci&amp;oacute;n en el espacio de Python. Del mismo modo, puede pasar &lt;code&gt;engine='python'&lt;/code&gt; para evaluar una expresi&amp;oacute;n utilizando Python como backend. Esto no se recomienda ya que es ineficiente en comparaci&amp;oacute;n con el uso de &lt;code&gt;numexpr&lt;/code&gt; como motor.</target>
        </trans-unit>
        <trans-unit id="b2c4c9680d9d936b7721f6866777ca45d46fd51e" translate="yes" xml:space="preserve">
          <source>You can check if a table exists using &lt;code&gt;has_table()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17920b8db95ff1d805877c58fa79f23d1a36af6" translate="yes" xml:space="preserve">
          <source>You can check if an element belongs to it</source>
          <target state="translated">Puedes comprobar si un elemento pertenece a él</target>
        </trans-unit>
        <trans-unit id="64830f634aa217cd7a53612432ef28e5316d89af" translate="yes" xml:space="preserve">
          <source>You can check whether an &lt;code&gt;Index&lt;/code&gt; (storing the row or column labels) is unique with &lt;code&gt;Index.is_unique&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a04715e9bbb67365a237b5950e13f951862546b" translate="yes" xml:space="preserve">
          <source>You can check whether elements contain a pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0573188ba9a4a695ddaa9567321e8f2c97c9797" translate="yes" xml:space="preserve">
          <source>You can combine SQLAlchemy expressions with parameters passed to &lt;a href=&quot;../reference/api/pandas.read_sql#pandas.read_sql&quot;&gt;&lt;code&gt;read_sql()&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;sqlalchemy.bindparam()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05802667035d0ea5668e677bd44d86243e99b77" translate="yes" xml:space="preserve">
          <source>You can combine this with other expressions for very succinct queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3473594966425c3226e67cf52ac42f92cadcdbe" translate="yes" xml:space="preserve">
          <source>You can combine together day and intraday offsets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5d1d508c9e80225db867f1374c2ae9e233c1d4" translate="yes" xml:space="preserve">
          <source>You can concatenate a mix of &lt;code&gt;Series&lt;/code&gt; and &lt;code&gt;DataFrame&lt;/code&gt; objects. The &lt;code&gt;Series&lt;/code&gt; will be transformed to &lt;code&gt;DataFrame&lt;/code&gt; with the column name as the name of the &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">Puede concatenar una combinaci&amp;oacute;n de objetos &lt;code&gt;Series&lt;/code&gt; y &lt;code&gt;DataFrame&lt;/code&gt; . La &lt;code&gt;Series&lt;/code&gt; se transformar&amp;aacute; en &lt;code&gt;DataFrame&lt;/code&gt; con el nombre de la columna como el nombre de la &lt;code&gt;Series&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5a43a5b4087e627f547501c7c4e16ef74c43f90" translate="yes" xml:space="preserve">
          <source>You can construct a &lt;code&gt;Timedelta&lt;/code&gt; scalar through various arguments, including &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;ISO 8601 Duration&lt;/a&gt; strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b42e93a9b2abfcd6b12c8ffb5f719579e077df8" translate="yes" xml:space="preserve">
          <source>You can construct a &lt;code&gt;Timedelta&lt;/code&gt; scalar through various arguments:</source>
          <target state="translated">Puede construir un escalar &lt;code&gt;Timedelta&lt;/code&gt; a trav&amp;eacute;s de varios argumentos:</target>
        </trans-unit>
        <trans-unit id="9b0433351dbbf00e6ec71c94b7123e6c2888aa79" translate="yes" xml:space="preserve">
          <source>You can control the default missing values representation for the entire table through &lt;code&gt;set_na_rep&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966843b4eadaeebb266ee800f515eaa11941188e" translate="yes" xml:space="preserve">
          <source>You can control the precision of floats using pandas&amp;rsquo; regular &lt;code&gt;display.precision&lt;/code&gt; option.</source>
          <target state="translated">Puede controlar la precisi&amp;oacute;n de los flotadores utilizando la opci&amp;oacute;n &lt;code&gt;display.precision&lt;/code&gt; regular de pandas .</target>
        </trans-unit>
        <trans-unit id="c59a6302b5c143aacb46d9202140b37a6bf5eff1" translate="yes" xml:space="preserve">
          <source>You can conveniently perform element-wise comparisons when comparing a pandas data structure with a scalar value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fdf2ff7db765f62bff01b67bad6c18e83b6558" translate="yes" xml:space="preserve">
          <source>You can convert a &lt;code&gt;Timedelta&lt;/code&gt; to an &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;ISO 8601 Duration&lt;/a&gt; string with the &lt;code&gt;.isoformat&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c049812aea37e7b42d961f0e5c515e8b51db49a4" translate="yes" xml:space="preserve">
          <source>You can create &amp;ldquo;heatmaps&amp;rdquo; with the &lt;code&gt;background_gradient&lt;/code&gt; method. These require matplotlib, and we&amp;rsquo;ll use &lt;a href=&quot;http://stanford.edu/~mwaskom/software/seaborn/&quot;&gt;Seaborn&lt;/a&gt; to get a nice colormap.</source>
          <target state="translated">Puede crear &quot;mapas de calor&quot; con el m&amp;eacute;todo &lt;code&gt;background_gradient&lt;/code&gt; . Estos requieren matplotlib, y usaremos &lt;a href=&quot;http://stanford.edu/~mwaskom/software/seaborn/&quot;&gt;Seaborn&lt;/a&gt; para obtener un bonito mapa de colores.</target>
        </trans-unit>
        <trans-unit id="9a35ea4622d22c841b404dd162b919408242e5a4" translate="yes" xml:space="preserve">
          <source>You can create &amp;ldquo;heatmaps&amp;rdquo; with the &lt;code&gt;background_gradient&lt;/code&gt; method. These require matplotlib, and we&amp;rsquo;ll use &lt;a href=&quot;https://stanford.edu/~mwaskom/software/seaborn/&quot;&gt;Seaborn&lt;/a&gt; to get a nice colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27daec38e964bd3d9043f51a6c0160aece1b125f" translate="yes" xml:space="preserve">
          <source>You can create a pie plot with &lt;a href=&quot;../reference/api/pandas.dataframe.plot.pie#pandas.DataFrame.plot.pie&quot;&gt;&lt;code&gt;DataFrame.plot.pie()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../reference/api/pandas.series.plot.pie#pandas.Series.plot.pie&quot;&gt;&lt;code&gt;Series.plot.pie()&lt;/code&gt;&lt;/a&gt;. If your data includes any &lt;code&gt;NaN&lt;/code&gt;, they will be automatically filled with 0. A &lt;code&gt;ValueError&lt;/code&gt; will be raised if there are any negative values in your data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13651ebbba8343d7cc19823db86a27676d8510f4" translate="yes" xml:space="preserve">
          <source>You can create a scatter plot matrix using the &lt;code&gt;scatter_matrix&lt;/code&gt; method in &lt;code&gt;pandas.plotting&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6680b25fd7b9918fa414ea5ba6f2459b0c51a582" translate="yes" xml:space="preserve">
          <source>You can create a stratified boxplot using the &lt;code&gt;by&lt;/code&gt; keyword argument to create groupings. For instance,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d794e9bf9e1df567e0e1059a0b33f6084562b0" translate="yes" xml:space="preserve">
          <source>You can create area plots with &lt;a href=&quot;../reference/api/pandas.series.plot.area#pandas.Series.plot.area&quot;&gt;&lt;code&gt;Series.plot.area()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../reference/api/pandas.dataframe.plot.area#pandas.DataFrame.plot.area&quot;&gt;&lt;code&gt;DataFrame.plot.area()&lt;/code&gt;&lt;/a&gt;. Area plots are stacked by default. To produce stacked area plot, each column must be either all positive or all negative values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6eb0a8bc36c56347a1c2d736e06cbe9ac264429" translate="yes" xml:space="preserve">
          <source>You can create boxplots for grouped data and show them as separate subplots:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701294502cb54fcd2755d67bef020601b316e8a6" translate="yes" xml:space="preserve">
          <source>You can create connections like so:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
