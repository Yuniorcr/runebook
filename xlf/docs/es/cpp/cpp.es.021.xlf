<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="3e44e77d69bd972e28d8374914d0314649d0b42a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size_type&lt;/code&gt; parameter type in these guides refers to the &lt;code&gt;size_type&lt;/code&gt; member type of the type deduced by the deduction guide.</source>
          <target state="translated">El tipo de par&amp;aacute;metro &lt;code&gt;size_type&lt;/code&gt; en estas gu&amp;iacute;as se refiere al tipo de miembro &lt;code&gt;size_type&lt;/code&gt; del tipo deducido por la gu&amp;iacute;a de deducci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="289689bc83eb06d23eb307703ddcdb7c999caeed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;static&lt;/code&gt; keyword is only used with the declaration of a static member, inside the class definition, but not with the definition of that static member:</source>
          <target state="translated">La palabra clave &lt;code&gt;static&lt;/code&gt; solo se usa con la declaraci&amp;oacute;n de un miembro est&amp;aacute;tico, dentro de la definici&amp;oacute;n de clase, pero no con la definici&amp;oacute;n de ese miembro est&amp;aacute;tico:</target>
        </trans-unit>
        <trans-unit id="632a2ef4017c7723c54fe2b156317f31d8e22a58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::allocator&lt;/code&gt; class template is the default &lt;a href=&quot;../named_req/allocator&quot;&gt;Allocator&lt;/a&gt; used by all standard library containers if no user-specified allocator is provided. The default allocator is stateless, that is, all instances of the given allocator are interchangeable, compare equal and can deallocate memory allocated by any other instance of the same allocator type.</source>
          <target state="translated">El &lt;code&gt;std::allocator&lt;/code&gt; plantilla de clase es el valor predeterminado &lt;a href=&quot;../named_req/allocator&quot;&gt;Allocator&lt;/a&gt; utilizado por todos los recipientes de la biblioteca est&amp;aacute;ndar si no se proporciona asignador especificado por el usuario. El asignador predeterminado no tiene estado, es decir, todas las instancias del asignador dado son intercambiables, se comparan igual y pueden desasignar la memoria asignada por cualquier otra instancia del mismo tipo de asignador.</target>
        </trans-unit>
        <trans-unit id="53c26f0250cd0d0e3b6ff2be656663e51a81ff93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::atomic_ref&lt;/code&gt; class template applies atomic operations to the object it references. For the lifetime of the &lt;code&gt;atomic_ref&lt;/code&gt; object, the object it references is considered an atomic object. If one thread writes to an atomic object while another thread reads from it, the behavior is well-defined (see &lt;a href=&quot;../language/memory_model&quot;&gt;memory model&lt;/a&gt; for details on data races). In addition, accesses to atomic objects may establish inter-thread synchronization and order non-atomic memory accesses as specified by &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::atomic_ref&lt;/code&gt; aplica operaciones at&amp;oacute;micas al objeto al que hace referencia. Durante la vida &amp;uacute;til del objeto &lt;code&gt;atomic_ref&lt;/code&gt; , el objeto al que hace referencia se considera un objeto at&amp;oacute;mico. Si un hilo escribe en un objeto at&amp;oacute;mico mientras otro lo lee, el comportamiento est&amp;aacute; bien definido (consulte el &lt;a href=&quot;../language/memory_model&quot;&gt;modelo de memoria&lt;/a&gt; para obtener detalles sobre las carreras de datos). Adem&amp;aacute;s, los accesos a objetos at&amp;oacute;micos pueden establecer una sincronizaci&amp;oacute;n entre subprocesos y ordenar accesos a la memoria no at&amp;oacute;mica seg&amp;uacute;n lo especificado por &lt;code&gt;&lt;a href=&quot;memory_order&quot;&gt;std::memory_order&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5be75dfd519b71fc03950ad1704971f2fb7ba4f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::chrono::duration_values&lt;/code&gt; type defines three common durations:</source>
          <target state="translated">El tipo &lt;code&gt;std::chrono::duration_values&lt;/code&gt; define tres duraciones comunes:</target>
        </trans-unit>
        <trans-unit id="75ae7925b8d4cb8867916bcfc4f28fc16e262bc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::chrono::treat_as_floating_point&lt;/code&gt; trait helps determine if a duration can be converted to another duration with a different tick period.</source>
          <target state="translated">El rasgo &lt;code&gt;std::chrono::treat_as_floating_point&lt;/code&gt; ayuda a determinar si una duraci&amp;oacute;n se puede convertir a otra duraci&amp;oacute;n con un per&amp;iacute;odo de tick diferente.</target>
        </trans-unit>
        <trans-unit id="fd5a1bbfb563fd5702d71a237c3bf20e52661268" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::jmp_buf&lt;/code&gt; type is an array type suitable for storing information to restore a calling environment. The stored information is sufficient to restore execution at the correct block of the program and invocation of that block. The state of floating-point status flags, or open files, or any other data is not stored in an object of type &lt;code&gt;jmp_buf&lt;/code&gt;.</source>
          <target state="translated">El tipo &lt;code&gt;std::jmp_buf&lt;/code&gt; es un tipo de matriz adecuado para almacenar informaci&amp;oacute;n para restaurar un entorno de llamada. La informaci&amp;oacute;n almacenada es suficiente para restaurar la ejecuci&amp;oacute;n en el bloque correcto del programa y la invocaci&amp;oacute;n de ese bloque. El estado de los indicadores de estado de coma flotante, o archivos abiertos, o cualquier otro dato no se almacena en un objeto de tipo &lt;code&gt;jmp_buf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0af3608ab8ca3f6303dbf6dc9f92dd5c3b4f3fcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::placeholders&lt;/code&gt; namespace contains the placeholder objects &lt;code&gt;[_1, . . . _N]&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is an implementation defined maximum number.</source>
          <target state="translated">El &lt;code&gt;std::placeholders&lt;/code&gt; nombres std :: placeholders contiene los objetos de marcador de posici&amp;oacute;n &lt;code&gt;[_1, . . . _N]&lt;/code&gt; donde &lt;code&gt;N&lt;/code&gt; es un n&amp;uacute;mero m&amp;aacute;ximo definido de implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8b4aa4d2a1fe7d3edd392aab09fcc04cba814b1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::puts&lt;/code&gt; function appends the newline character to the output, while &lt;code&gt;&lt;a href=&quot;fputs&quot;&gt;std::fputs&lt;/a&gt;&lt;/code&gt; function does not.</source>
          <target state="translated">El &lt;code&gt;std::puts&lt;/code&gt; funci&amp;oacute;n anexa el car&amp;aacute;cter de nueva l&amp;iacute;nea a la salida, mientras que &lt;code&gt;&lt;a href=&quot;fputs&quot;&gt;std::fputs&lt;/a&gt;&lt;/code&gt; funci&amp;oacute;n no lo hace.</target>
        </trans-unit>
        <trans-unit id="e796f41be4761572f822b629753c5a0ac5ee7caa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::queue&lt;/code&gt; class is a container adapter that gives the programmer the functionality of a queue - specifically, a FIFO (first-in, first-out) data structure.</source>
          <target state="translated">La clase &lt;code&gt;std::queue&lt;/code&gt; es un adaptador de contenedor que le da al programador la funcionalidad de una cola, espec&amp;iacute;ficamente, una estructura de datos FIFO (primero en entrar, primero en salir).</target>
        </trans-unit>
        <trans-unit id="3fab3efadd5cd02efa0b0f9d2cdc38130b916876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::scoped_allocator_adaptor&lt;/code&gt; class template is an allocator which can be used with multilevel containers (vector of sets of lists of tuples of maps, etc). It is instantiated with one outer allocator type &lt;code&gt;OuterAlloc&lt;/code&gt; and zero or more inner allocator types &lt;code&gt;InnerAlloc...&lt;/code&gt;. A container constructed directly with a &lt;code&gt;scoped_allocator_adaptor&lt;/code&gt; uses &lt;code&gt;OuterAlloc&lt;/code&gt; to allocate its elements, but if an element is itself a container, it uses the first inner allocator. The elements of that container, if they are themselves containers, use the second inner allocator, etc. If there are more levels to the container than there are inner allocators, the last inner allocator is reused for all further nested containers.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::scoped_allocator_adaptor&lt;/code&gt; es un asignador que se puede usar con contenedores multinivel (vector de conjuntos de listas de tuplas de mapas, etc.). Se crea una instancia con un tipo asignador exterior &lt;code&gt;OuterAlloc&lt;/code&gt; y cero o tipos asignador m&amp;aacute;s interior &lt;code&gt;InnerAlloc...&lt;/code&gt; . Un contenedor construido directamente con un &lt;code&gt;scoped_allocator_adaptor&lt;/code&gt; usa &lt;code&gt;OuterAlloc&lt;/code&gt; para asignar sus elementos, pero si un elemento es en s&amp;iacute; mismo un contenedor, usa el primer asignador interno. Los elementos de ese contenedor, si son ellos mismos, usan el segundo asignador interno, etc. Si hay m&amp;aacute;s niveles en el contenedor que los asignadores internos, el &amp;uacute;ltimo asignador interno se reutiliza para todos los contenedores anidados adicionales.</target>
        </trans-unit>
        <trans-unit id="d2eb610baf57f075efa3e1ba10e684713d54343a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;std::stack&lt;/code&gt; class is a container adapter that gives the programmer the functionality of a stack - specifically, a LIFO (last-in, first-out) data structure.</source>
          <target state="translated">La clase &lt;code&gt;std::stack&lt;/code&gt; es un adaptador de contenedor que le da al programador la funcionalidad de una pila, espec&amp;iacute;ficamente, una estructura de datos LIFO (&amp;uacute;ltimo en entrar, primero en salir).</target>
        </trans-unit>
        <trans-unit id="b7bdef376da392b6b3c44811e911c30119a7b799" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;syntax_option_type&lt;/code&gt; is a &lt;a href=&quot;../named_req/bitmasktype&quot;&gt;BitmaskType&lt;/a&gt; that contains options that govern how regular expressions behave.</source>
          <target state="translated">El &lt;code&gt;syntax_option_type&lt;/code&gt; es un &lt;a href=&quot;../named_req/bitmasktype&quot;&gt;BitmaskType&lt;/a&gt; que contiene opciones que rigen la forma habitual comportan expresiones.</target>
        </trans-unit>
        <trans-unit id="000b096316dd940449688aa0c1993b2ce2c2a8aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;template&lt;/code&gt; disambiguator for dependent names</source>
          <target state="translated">El desambigador de &lt;code&gt;template&lt;/code&gt; para nombres dependientes</target>
        </trans-unit>
        <trans-unit id="74943ce7057f0fa3f16bc77b4e70a8831747bccd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timed_mutex&lt;/code&gt; class is a synchronization primitive that can be used to protect shared data from being simultaneously accessed by multiple threads.</source>
          <target state="translated">La clase &lt;code&gt;timed_mutex&lt;/code&gt; es una primitiva de sincronizaci&amp;oacute;n que se puede utilizar para proteger el acceso simult&amp;aacute;neo de m&amp;uacute;ltiples hilos a los datos compartidos.</target>
        </trans-unit>
        <trans-unit id="0cf84feefedec698c86998dbbdc5ed07c9f45bea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timed_mutex&lt;/code&gt; class satisfies all requirements of &lt;a href=&quot;../named_req/timedmutex&quot;&gt;TimedMutex&lt;/a&gt; and &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt;.</source>
          <target state="translated">La clase &lt;code&gt;timed_mutex&lt;/code&gt; satisface todos los requisitos de &lt;a href=&quot;../named_req/timedmutex&quot;&gt;TimedMutex&lt;/a&gt; y &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="774795ace98b96b23eeb2920e059fbc2c4d46159" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type_index&lt;/code&gt; class is a wrapper class around a &lt;code&gt;&lt;a href=&quot;type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt; object, that can be used as index in associative and unordered associative containers. The relationship with &lt;code&gt;type_info&lt;/code&gt; object is maintained through a pointer, therefore &lt;code&gt;type_index&lt;/code&gt; is &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; and &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;.</source>
          <target state="translated">La clase &lt;code&gt;type_index&lt;/code&gt; es una clase contenedora alrededor de un objeto &lt;code&gt;&lt;a href=&quot;type_info&quot;&gt;std::type_info&lt;/a&gt;&lt;/code&gt; , que se puede usar como &amp;iacute;ndice en contenedores asociativos asociativos y no ordenados. La relaci&amp;oacute;n con el objeto &lt;code&gt;type_info&lt;/code&gt; se mantiene a trav&amp;eacute;s de un puntero, por &lt;code&gt;type_index&lt;/code&gt; tanto, type_index es &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; y &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="952d7e2cfa91115883813c3249ff4a5bfac5cc7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type_info&lt;/code&gt; class is neither &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; nor &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;.</source>
          <target state="translated">La clase &lt;code&gt;type_info&lt;/code&gt; no es &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; ni &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d3381fa6df6fd99efa7dd2c5d1dc236fc0ae2f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typedef&lt;/code&gt; specifier cannot be combined with any other specifier except for &lt;a href=&quot;declarations#Specifiers&quot;&gt;&lt;i&gt;type-specifier&lt;/i&gt;s&lt;/a&gt;.</source>
          <target state="translated">El especificador &lt;code&gt;typedef&lt;/code&gt; no se puede combinar con ning&amp;uacute;n otro especificador, excepto los especificadores de &lt;a href=&quot;declarations#Specifiers&quot;&gt;&lt;i&gt;tipo&lt;/i&gt; s&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6309085f92b28987d85457fbc7383fb4c82b825c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typedef&lt;/code&gt; specifier may not appear in a declaration that does not contain a declarator.</source>
          <target state="translated">El especificador &lt;code&gt;typedef&lt;/code&gt; puede no aparecer en una declaraci&amp;oacute;n que no contenga un declarador.</target>
        </trans-unit>
        <trans-unit id="89830011be47b25898d7960332a69424f3dbd42f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typedef&lt;/code&gt; specifier, when used in a &lt;a href=&quot;declarations&quot;&gt;declaration&lt;/a&gt;'s decl-specifier-seq, specifies that the declaration is a</source>
          <target state="translated">El especificador &lt;code&gt;typedef&lt;/code&gt; , cuando se usa en el decl-specifier-seq de una &lt;a href=&quot;declarations&quot;&gt;declaraci&amp;oacute;n&lt;/a&gt; , especifica que la declaraci&amp;oacute;n es un</target>
        </trans-unit>
        <trans-unit id="e11f7ccd1bfac664d81cc3008efb5f71e47d4090" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeid&lt;/code&gt; of the contained value if instance is non-empty, otherwise &lt;code&gt;typeid(void)&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;typeid&lt;/code&gt; del valor contenido si la instancia no est&amp;aacute; vac&amp;iacute;a, de lo contrario &lt;code&gt;typeid(void)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c59bc69dc7ee8fe3806c4e7b187212bf3d16cc45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typename&lt;/code&gt; disambiguator for dependent names</source>
          <target state="translated">El desambigador &lt;code&gt;typename&lt;/code&gt; para nombres dependientes</target>
        </trans-unit>
        <trans-unit id="86e34d32fc0fe693f849b744258e885d6bf62692" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;va_arg&lt;/code&gt; macro expands to an expression of type &lt;code&gt;T&lt;/code&gt; that corresponds to the next parameter from the &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt;&lt;code&gt;ap&lt;/code&gt;.</source>
          <target state="translated">La macro &lt;code&gt;va_arg&lt;/code&gt; se expande a una expresi&amp;oacute;n de tipo &lt;code&gt;T&lt;/code&gt; que corresponde al siguiente par&amp;aacute;metro de la &lt;code&gt;ap&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;va_list&quot;&gt;va_list&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d83c342cc7c3f40c89a420acc1bb2923f355ef9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;va_copy&lt;/code&gt; macro copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">La macro &lt;code&gt;va_copy&lt;/code&gt; copia &lt;code&gt;src&lt;/code&gt; en &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8119763255f85100db2a7dfb429d2ce19267cc94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;va_end&lt;/code&gt; macro performs cleanup for an &lt;code&gt;ap&lt;/code&gt; object initialized by a call to &lt;code&gt;&lt;a href=&quot;va_start&quot;&gt;va_start&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;va_copy&quot;&gt;va_copy&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;va_end&lt;/code&gt; may modify &lt;code&gt;ap&lt;/code&gt; so that it is no longer usable.</source>
          <target state="translated">La macro &lt;code&gt;va_end&lt;/code&gt; realiza la limpieza de un objeto &lt;code&gt;ap&lt;/code&gt; inicializado por una llamada a &lt;code&gt;&lt;a href=&quot;va_start&quot;&gt;va_start&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;va_copy&quot;&gt;va_copy&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;va_end&lt;/code&gt; puede modificar &lt;code&gt;ap&lt;/code&gt; para que ya no se pueda usar.</target>
        </trans-unit>
        <trans-unit id="0c4f81b011c317554f9f6191a3841f50837b79d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;va_start&lt;/code&gt; macro enables access to the variable arguments following the named argument &lt;code&gt;parm_n&lt;/code&gt;.</source>
          <target state="translated">La macro &lt;code&gt;va_start&lt;/code&gt; permite el acceso a los argumentos variables que siguen al argumento nombrado &lt;code&gt;parm_n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f357e6fe110c67c4ec9157f567fd74f58c85b796" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;virtual&lt;/code&gt; specifier specifies that a non-static &lt;a href=&quot;member_functions&quot;&gt;member function&lt;/a&gt; is</source>
          <target state="translated">El especificador &lt;code&gt;virtual&lt;/code&gt; especifica que una &lt;a href=&quot;member_functions&quot;&gt;funci&amp;oacute;n miembro&lt;/a&gt; no est&amp;aacute;tica es</target>
        </trans-unit>
        <trans-unit id="58b83f400e2fad2a7e14fb6d6d89f2b937c6c9ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;weibull_distribution&lt;/code&gt; meets the requirements of a &lt;a href=&quot;../../named_req/randomnumberdistribution&quot;&gt;RandomNumberDistribution&lt;/a&gt; and produces random numbers according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;Weibull distribution&lt;/a&gt;:  f(x;a,b) =</source>
          <target state="translated">El &lt;code&gt;weibull_distribution&lt;/code&gt; cumple los requisitos de un &lt;a href=&quot;../../named_req/randomnumberdistribution&quot;&gt;RandomNumberDistribution&lt;/a&gt; y produce n&amp;uacute;meros aleatorios de acuerdo con la &lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;distribuci&amp;oacute;n de Weibull&lt;/a&gt; : f (x; a, b) =</target>
        </trans-unit>
        <trans-unit id="5f38041d823902ae4cade7f500eac6fbdeba1f56" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;BasicLockable&lt;/strong&gt; requirements describe the minimal characteristics of types that provide exclusive blocking semantics for execution agents (i.e. threads).</source>
          <target state="translated">Los requisitos de &lt;strong&gt;BasicLockable&lt;/strong&gt; describen las caracter&amp;iacute;sticas m&amp;iacute;nimas de los tipos que proporcionan sem&amp;aacute;ntica de bloqueo exclusiva para agentes de ejecuci&amp;oacute;n (es decir, subprocesos).</target>
        </trans-unit>
        <trans-unit id="5e946edd904bb0f3af81272561d148e4ecfdc9d2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Clock&lt;/strong&gt; requirements describe a bundle consisting of a &lt;code&gt;&lt;a href=&quot;../chrono/duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt;, a &lt;code&gt;&lt;a href=&quot;../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt;, and a function &lt;code&gt;now()&lt;/code&gt; to get the current time_point. The origin of the clock's time_point is referred to as the clock's epoch.</source>
          <target state="translated">Las &lt;strong&gt;reloj&lt;/strong&gt; requisitos describen un paquete que consta de un &lt;code&gt;&lt;a href=&quot;../chrono/duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; , un &lt;code&gt;&lt;a href=&quot;../chrono/time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; , y una funci&amp;oacute;n &lt;code&gt;now()&lt;/code&gt; para obtener el time_point actual. El origen del time_point del reloj se conoce como la &amp;eacute;poca del reloj.</target>
        </trans-unit>
        <trans-unit id="f03c4da73b60ffd44de23eb92a1a79678e480926" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;LegacyIterator&lt;/strong&gt; requirements describe types that can be used to identify and traverse the elements of a container.</source>
          <target state="translated">Los requisitos de &lt;strong&gt;LegacyIterator&lt;/strong&gt; describen los tipos que se pueden usar para identificar y atravesar los elementos de un contenedor.</target>
        </trans-unit>
        <trans-unit id="a164898b395f07dac6b82d8a1bd649c3574d083b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Lockable&lt;/strong&gt; requirements extends the &lt;a href=&quot;basiclockable&quot;&gt;BasicLockable&lt;/a&gt; requirements to include attempted locking.</source>
          <target state="translated">Los requisitos &lt;strong&gt;bloqueables&lt;/strong&gt; ampl&amp;iacute;an los requisitos &lt;a href=&quot;basiclockable&quot;&gt;b&amp;aacute;sicos bloqueables&lt;/a&gt; para incluir el intento de bloqueo.</target>
        </trans-unit>
        <trans-unit id="c33abb9f01c22e93c4eac57daba63323a35b7582" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Mutex&lt;/strong&gt; requirements extends the &lt;a href=&quot;lockable&quot;&gt;Lockable&lt;/a&gt; requirements to include inter-thread synchronization.</source>
          <target state="translated">Los requisitos de &lt;strong&gt;Mutex&lt;/strong&gt; ampl&amp;iacute;an los requisitos de &lt;a href=&quot;lockable&quot;&gt;bloqueo&lt;/a&gt; para incluir la sincronizaci&amp;oacute;n entre subprocesos.</target>
        </trans-unit>
        <trans-unit id="1662724e943d6f2753a841debdd483663607ada6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Predicate&lt;/strong&gt; requirements describe a callable that returns a value testable as a &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Los requisitos de &lt;strong&gt;Predicate&lt;/strong&gt; describen un invocable que devuelve un valor comprobable como &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5fecdfd42fea2e321d400db45ac6548b84c2b1b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;SharedMutex&lt;/strong&gt; requirements extend the &lt;a href=&quot;mutex&quot;&gt;Mutex&lt;/a&gt; requirements to include shared lock ownership mode.</source>
          <target state="translated">Los requisitos de &lt;strong&gt;SharedMutex&lt;/strong&gt; ampl&amp;iacute;an los requisitos de &lt;a href=&quot;mutex&quot;&gt;Mutex&lt;/a&gt; para incluir el modo de propiedad de bloqueo compartido.</target>
        </trans-unit>
        <trans-unit id="9e0e4c473412d479e82c7a7bf4efbde3fb2da4c0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;SharedTimedMutex&lt;/strong&gt; requirements extend the &lt;a href=&quot;timedmutex&quot;&gt;TimedMutex&lt;/a&gt; requirements to include shared lock ownership mode.</source>
          <target state="translated">Los requisitos &lt;strong&gt;SharedTimedMutex&lt;/strong&gt; extienden los requisitos de &lt;a href=&quot;timedmutex&quot;&gt;TimedMutex&lt;/a&gt; para incluir el modo de propiedad de bloqueo compartido.</target>
        </trans-unit>
        <trans-unit id="d8658ec44f14a999da3cd2aea710a9e937c78300" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;TimedLockable&lt;/strong&gt; requirements describe the characteristics of types that provide timed exclusive blocking semantics for execution agents (threads, processes, tasks).</source>
          <target state="translated">Los requisitos de &lt;strong&gt;TimedLockable&lt;/strong&gt; describen las caracter&amp;iacute;sticas de los tipos que proporcionan sem&amp;aacute;ntica de bloqueo exclusiva temporizada para agentes de ejecuci&amp;oacute;n (subprocesos, procesos, tareas).</target>
        </trans-unit>
        <trans-unit id="0ffb357ce4e9175f2864be5cc3858dccf9117260" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;TimedMutex&lt;/strong&gt; requirements extend the &lt;a href=&quot;timedlockable&quot;&gt;TimedLockable&lt;/a&gt; requirements to include inter-thread synchronization.</source>
          <target state="translated">Los requisitos de &lt;strong&gt;TimedMutex&lt;/strong&gt; extienden los requisitos de &lt;a href=&quot;timedlockable&quot;&gt;TimedLockable&lt;/a&gt; para incluir la sincronizaci&amp;oacute;n entre subprocesos.</target>
        </trans-unit>
        <trans-unit id="93769e4268d3151e381981cd69b445de4cedef94" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;TrivialClock&lt;/strong&gt; requirements describe the requirements satisfied by several clocks in the &lt;a href=&quot;../chrono&quot;&gt;chrono library&lt;/a&gt;.</source>
          <target state="translated">Los requisitos de &lt;strong&gt;TrivialClock&lt;/strong&gt; describen los requisitos que cumplen varios relojes en la &lt;a href=&quot;../chrono&quot;&gt;biblioteca de crono&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a31fec1fddc9cad437c97dc42d06961059327486" translate="yes" xml:space="preserve">
          <source>The Boolean literals are the keywords &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. They are &lt;a href=&quot;value_category&quot;&gt;prvalues&lt;/a&gt; of type &lt;a href=&quot;types#Boolean_type&quot;&gt;bool&lt;/a&gt;.</source>
          <target state="translated">Los literales booleanos son las palabras clave &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; . Son &lt;a href=&quot;value_category&quot;&gt;prvalues&lt;/a&gt; de tipo &lt;a href=&quot;types#Boolean_type&quot;&gt;bool&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e489b3933471031f8c94a5f27d0516ca33d62cdd" translate="yes" xml:space="preserve">
          <source>The C I/O subset of the C++ standard library implements C-style stream input/output operations. The &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; header provides generic file operation support and supplies functions with narrow and multibyte character input/output capabilities, and the &lt;code&gt;&amp;lt;cwchar&amp;gt;&lt;/code&gt; header provides functions with wide character input/output capabilities.</source>
          <target state="translated">El subconjunto CI / O de la biblioteca est&amp;aacute;ndar C ++ implementa operaciones de entrada / salida de flujo de estilo C. El encabezado &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; proporciona compatibilidad con la operaci&amp;oacute;n de archivos gen&amp;eacute;ricos y proporciona funciones con capacidades de entrada / salida de caracteres estrechos y multibyte, y el &lt;code&gt;&amp;lt;cwchar&amp;gt;&lt;/code&gt; proporciona funciones con capacidades de entrada / salida de caracteres anchos.</target>
        </trans-unit>
        <trans-unit id="b13410bf3298c9468849b7b32d1cee8a68202e13" translate="yes" xml:space="preserve">
          <source>The C headers &lt;code&gt;&amp;lt;stdatomic.h&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;stdnoreturn.h&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;threads.h&amp;gt;&lt;/code&gt; are not included in C++ and have no &lt;code&gt;cxxx&lt;/code&gt; equivalents.</source>
          <target state="translated">Los encabezados C &lt;code&gt;&amp;lt;stdatomic.h&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;stdnoreturn.h&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;threads.h&amp;gt;&lt;/code&gt; no est&amp;aacute;n incluidos en C ++ y no &lt;code&gt;cxxx&lt;/code&gt; equivalentes cxxx .</target>
        </trans-unit>
        <trans-unit id="062aac82d16ecfcd5a5e7ac044aa4b63a6939067" translate="yes" xml:space="preserve">
          <source>The C programming language followed a similar taxonomy, except that the role of assignment was no longer significant: C expressions are categorized between &quot;lvalue expressions&quot; and others (functions and non-object values), where &quot;lvalue&quot; means an expression that identifies an object, a &quot;locator value&quot;&lt;sup id=&quot;cite_ref-4&quot;&gt;&lt;a href=&quot;value_category#cite_note-4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;.</source>
          <target state="translated">El lenguaje de programaci&amp;oacute;n C sigui&amp;oacute; una taxonom&amp;iacute;a similar, excepto que el rol de la asignaci&amp;oacute;n ya no era significativo: las expresiones C se clasifican entre &quot;expresiones de valor&quot; y otras (funciones y valores no objeto), donde &quot;valor&quot; significa una expresi&amp;oacute;n que identifica un objeto, un &quot;valor localizador&quot; &lt;sup id=&quot;cite_ref-4&quot;&gt;&lt;a href=&quot;value_category#cite_note-4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt; .</target>
        </trans-unit>
        <trans-unit id="f9475fc59dfb6f8d18f4972f00f8061f2dab21b5" translate="yes" xml:space="preserve">
          <source>The C++ compiler is permitted to perform any changes to the program as long as the following remains true:</source>
          <target state="translated">El compilador de C++está autorizado a realizar cualquier cambio en el programa siempre y cuando lo siguiente sea cierto:</target>
        </trans-unit>
        <trans-unit id="4e8929f0a5483d1e9f1e0fdc81fb09a71a502e05" translate="yes" xml:space="preserve">
          <source>The C++ implementation provides a default &lt;code&gt;std::terminate_handler&lt;/code&gt; function, which calls &lt;code&gt;&lt;a href=&quot;../utility/program/abort&quot;&gt;std::abort&lt;/a&gt;()&lt;/code&gt;. If the null pointer value is installed (by means of &lt;code&gt;&lt;a href=&quot;set_terminate&quot;&gt;std::set_terminate&lt;/a&gt;&lt;/code&gt;), the implementation may restore the default handler instead.</source>
          <target state="translated">La implementaci&amp;oacute;n de C ++ proporciona una funci&amp;oacute;n &lt;code&gt;std::terminate_handler&lt;/code&gt; predeterminada , que llama a &lt;code&gt;&lt;a href=&quot;../utility/program/abort&quot;&gt;std::abort&lt;/a&gt;()&lt;/code&gt; . Si el valor del puntero nulo est&amp;aacute; instalado (por medio de &lt;code&gt;&lt;a href=&quot;set_terminate&quot;&gt;std::set_terminate&lt;/a&gt;&lt;/code&gt; ), la implementaci&amp;oacute;n puede restaurar el controlador predeterminado en su lugar.</target>
        </trans-unit>
        <trans-unit id="9fa1c34b3fa85012e15f5ad013556c2b855f951b" translate="yes" xml:space="preserve">
          <source>The C++ implementation provides a default &lt;code&gt;std::unexpected_handler&lt;/code&gt; function, which calls &lt;code&gt;&lt;a href=&quot;../terminate&quot;&gt;std::terminate&lt;/a&gt;()&lt;/code&gt;. If the null pointer value is installed (by means of &lt;code&gt;&lt;a href=&quot;set_unexpected&quot;&gt;std::set_unexpected&lt;/a&gt;&lt;/code&gt;), the implementation may restore the default handler instead.</source>
          <target state="translated">La implementaci&amp;oacute;n de C ++ proporciona una funci&amp;oacute;n est&amp;aacute;ndar &lt;code&gt;std::unexpected_handler&lt;/code&gt; , que llama a &lt;code&gt;&lt;a href=&quot;../terminate&quot;&gt;std::terminate&lt;/a&gt;()&lt;/code&gt; . Si el valor del puntero nulo est&amp;aacute; instalado (por medio de &lt;code&gt;&lt;a href=&quot;set_unexpected&quot;&gt;std::set_unexpected&lt;/a&gt;&lt;/code&gt; ), la implementaci&amp;oacute;n puede restaurar el controlador predeterminado en su lugar.</target>
        </trans-unit>
        <trans-unit id="33090d97db5d6e6aae4e17a0b2eb1114378b6941" translate="yes" xml:space="preserve">
          <source>The C++ language grammar treats &lt;code&gt;mutable&lt;/code&gt; as a &lt;a href=&quot;storage_duration&quot;&gt;storage-class-specifier&lt;/a&gt;, rather than a type qualifier, but it does not affect storage class or linkage.</source>
          <target state="translated">La gram&amp;aacute;tica del lenguaje C ++ trata &lt;code&gt;mutable&lt;/code&gt; como un &lt;a href=&quot;storage_duration&quot;&gt;especificador de clase de almacenamiento&lt;/a&gt; , en lugar de un calificador de tipo, pero no afecta la clase de almacenamiento o el enlace.</target>
        </trans-unit>
        <trans-unit id="e1ab622145b730130c1f77f830b45791e19e3ac6" translate="yes" xml:space="preserve">
          <source>The C++ library classes that manage their own resources follow RAII: &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../thread/thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt;, and many others acquire their resources in constructors (which throw exceptions on errors), release them in their destructors (which never throw), and don't require explicit cleanup.</source>
          <target state="translated">Las clases de la biblioteca C ++ que administran sus propios recursos siguen RAII: &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::string&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../container/vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../thread/thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt; , y muchas otras adquieren sus recursos en constructores (que arrojan excepciones sobre errores), los liberan en sus destructores (que nunca tirar), y no requieren una limpieza expl&amp;iacute;cita.</target>
        </trans-unit>
        <trans-unit id="357bf595c9a6a420509871477ed4029ae08b6588" translate="yes" xml:space="preserve">
          <source>The C++ numerics library includes common mathematical functions and types, as well as optimized numeric arrays and support for random number generation.</source>
          <target state="translated">La biblioteca numérica de C++incluye funciones y tipos matemáticos comunes,así como matrices numéricas optimizadas y soporte para la generación de números aleatorios.</target>
        </trans-unit>
        <trans-unit id="0c724765aa82fdd5f42d875af648738888f7f085" translate="yes" xml:space="preserve">
          <source>The C++ source file is processed by the compiler as if the following phases take place, in this exact order:</source>
          <target state="translated">El archivo fuente de C++es procesado por el compilador como si las siguientes fases tuvieran lugar,en este orden exacto:</target>
        </trans-unit>
        <trans-unit id="298ffb6c4886717de7bb1fec94eac0b561d05f47" translate="yes" xml:space="preserve">
          <source>The C++ standard defers to the C standard for the semantics of this function. In C11 as published, unlike &lt;code&gt;&lt;a href=&quot;mbrtoc16&quot;&gt;std::mbrtoc16&lt;/a&gt;&lt;/code&gt;, which converts variable-width multibyte (such as UTF-8) to variable-width 16-bit (such as UTF-16) encoding, this function can only convert single-unit 16-bit encoding, meaning it cannot convert UTF-16 to UTF-8 despite that being the original intent of this function. This was corrected by the post-C11 defect report &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2059.htm#dr_488&quot;&gt;DR488&lt;/a&gt;.</source>
          <target state="translated">El est&amp;aacute;ndar C ++ difiere al est&amp;aacute;ndar C para la sem&amp;aacute;ntica de esta funci&amp;oacute;n. En C11 como se public&amp;oacute;, a diferencia de &lt;code&gt;&lt;a href=&quot;mbrtoc16&quot;&gt;std::mbrtoc16&lt;/a&gt;&lt;/code&gt; , que convierte multibyte de ancho variable (como UTF-8) a codificaci&amp;oacute;n de 16 bits de ancho variable (como UTF-16), esta funci&amp;oacute;n solo puede convertir una sola unidad 16- codificaci&amp;oacute;n de bits, lo que significa que no puede convertir UTF-16 a UTF-8 a pesar de que esa es la intenci&amp;oacute;n original de esta funci&amp;oacute;n. Esto fue corregido por el informe de defectos posterior a C11 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2059.htm#dr_488&quot;&gt;DR488&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5cbca9c403363a5289791532ec4013a859dd4de1" translate="yes" xml:space="preserve">
          <source>The C++ standard library includes &lt;code&gt;&lt;a href=&quot;../utility/variant&quot;&gt;std::variant&lt;/a&gt;&lt;/code&gt;, which can replace many uses of unions and union-like classes. The example above can be re-written as.</source>
          <target state="translated">La biblioteca est&amp;aacute;ndar de C ++ incluye &lt;code&gt;&lt;a href=&quot;../utility/variant&quot;&gt;std::variant&lt;/a&gt;&lt;/code&gt; , que puede reemplazar muchos usos de las uniones y clases similares a las uniones. El ejemplo anterior se puede volver a escribir como.</target>
        </trans-unit>
        <trans-unit id="d586f49413d548237bec3d53a25aff6188f757f3" translate="yes" xml:space="preserve">
          <source>The C++ standard precisely defines the &lt;a href=&quot;as_if&quot;&gt;observable behavior&lt;/a&gt; of every C++ program that does not fall into one of the following classes:</source>
          <target state="translated">El est&amp;aacute;ndar C ++ define con precisi&amp;oacute;n el &lt;a href=&quot;as_if&quot;&gt;comportamiento observable&lt;/a&gt; de cada programa C ++ que no se incluye en una de las siguientes clases:</target>
        </trans-unit>
        <trans-unit id="bc703b3909b5ff52efc44a7626f3229d0fbc6ce1" translate="yes" xml:space="preserve">
          <source>The C++ standard recommends (but does not require) that lock-free atomic operations are also address-free, that is, suitable for communication between processes using shared memory.</source>
          <target state="translated">La norma C++recomienda (pero no exige)que las operaciones atómicas sin cerraduras también estén libres de direcciones,es decir,que sean adecuadas para la comunicación entre procesos que utilizan una memoria compartida.</target>
        </trans-unit>
        <trans-unit id="8f3b3f8c95e8561a2c8123a1e6142d5819b3a1ef" translate="yes" xml:space="preserve">
          <source>The C++ strings library includes support for three general types of strings:</source>
          <target state="translated">La biblioteca de cuerdas de C++incluye soporte para tres tipos generales de cuerdas:</target>
        </trans-unit>
        <trans-unit id="0b7549dcc2f0a4c113aaccafcc4c4cbed6993461" translate="yes" xml:space="preserve">
          <source>The C++ type system consists of the following types:</source>
          <target state="translated">El sistema de tipo C++consta de los siguientes tipos:</target>
        </trans-unit>
        <trans-unit id="119c8be7273e2b09e126a70072ca4bb2e62acf6b" translate="yes" xml:space="preserve">
          <source>The C99 standard suggests that C++ implementations should not define the above limit, constant, or format macros unless the macros &lt;code&gt;__STDC_LIMIT_MACROS&lt;/code&gt;, &lt;code&gt;__STDC_CONSTANT_MACROS&lt;/code&gt; or &lt;code&gt;__STDC_FORMAT_MACROS&lt;/code&gt; (respectively) are defined before including the relevant C header (&lt;code&gt;stdint.h&lt;/code&gt; or &lt;code&gt;inttypes.h&lt;/code&gt;). This recommendation was not adopted by any C++ standard and was removed in C11. However, some implementations (such as glibc 2.17) try to apply this rule, and it may be necessary to define the &lt;code&gt;__STDC&lt;/code&gt; macros; C++ compilers may try to work around this by automatically defining them in some circumstances.</source>
          <target state="translated">El est&amp;aacute;ndar C99 sugiere que las implementaciones de C ++ no deber&amp;iacute;an definir el l&amp;iacute;mite anterior, la constante o las macros de formato a menos que las macros &lt;code&gt;__STDC_LIMIT_MACROS&lt;/code&gt; , &lt;code&gt;__STDC_CONSTANT_MACROS&lt;/code&gt; o &lt;code&gt;__STDC_FORMAT_MACROS&lt;/code&gt; (respectivamente) se definan antes de incluir el encabezado C relevante ( &lt;code&gt;stdint.h&lt;/code&gt; o &lt;code&gt;inttypes.h&lt;/code&gt; ). Esta recomendaci&amp;oacute;n no fue adoptada por ning&amp;uacute;n est&amp;aacute;ndar de C ++ y fue eliminada en C11. Sin embargo, algunas implementaciones (como glibc 2.17) intentan aplicar esta regla, y puede ser necesario definir las macros &lt;code&gt;__STDC&lt;/code&gt; ; Los compiladores de C ++ pueden intentar solucionar esto defini&amp;eacute;ndolos autom&amp;aacute;ticamente en algunas circunstancias.</target>
        </trans-unit>
        <trans-unit id="f1875a6ffd723ddc8488fac7c4fd4bb1c70e58c7" translate="yes" xml:space="preserve">
          <source>The Containers library is a generic collection of class templates and algorithms that allow programmers to easily implement common data structures like queues, lists and stacks. There are three classes of containers -- sequence containers, associative containers, and unordered associative containers -- each of which is designed to support a different set of operations.</source>
          <target state="translated">La biblioteca de Contenedores es una colección genérica de plantillas de clases y algoritmos que permiten a los programadores implementar fácilmente estructuras de datos comunes como colas,listas y pilas.Hay tres clases de contenedores --contenedores de secuencia,contenedores asociativos y contenedores asociativos no ordenados --cada uno de los cuales está diseñado para soportar un conjunto diferente de operaciones.</target>
        </trans-unit>
        <trans-unit id="375fce85970054ab82a9ff1b316f12d60649e4d2" translate="yes" xml:space="preserve">
          <source>The Filesystem library provides facilities for performing operations on file systems and their components, such as paths, regular files, and directories.</source>
          <target state="translated">La biblioteca del sistema de archivos proporciona instalaciones para realizar operaciones en los sistemas de archivos y sus componentes,como rutas,archivos regulares y directorios.</target>
        </trans-unit>
        <trans-unit id="7a686aa5105100888fccb4fa37b5d32b1bb8131e" translate="yes" xml:space="preserve">
          <source>The GCC flag &quot;-fcx-limited-range&quot; (included by &quot;-ffast-math&quot;) changes the behavior of complex multiply/division by removing checks for floating point edge cases. This impacts loop vectorization.</source>
          <target state="translated">La bandera del GCC &quot;-fcx-gama limitada&quot; (incluida por &quot;-ffast-math&quot;)cambia el comportamiento de la multiplicación/división compleja eliminando las comprobaciones de los casos de borde de punto flotante.Esto impacta en la vectorización de bucles.</target>
        </trans-unit>
        <trans-unit id="a8074f7033d870355bda79f918df527e49c8242e" translate="yes" xml:space="preserve">
          <source>The GNU implementation does not set &lt;code&gt;errno&lt;/code&gt; regardless of &lt;code&gt;math_errhandling&lt;/code&gt;.</source>
          <target state="translated">La implementaci&amp;oacute;n de GNU no establece &lt;code&gt;errno&lt;/code&gt; independientemente de &lt;code&gt;math_errhandling&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45f5bf99aae73a16cde460248e85a7f247bf09d8" translate="yes" xml:space="preserve">
          <source>The Hermite polynomials are the polynomial solutions of the equation u,,</source>
          <target state="translated">Los polinomios de Hermite son las soluciones polinómicas de la ecuación u,,</target>
        </trans-unit>
        <trans-unit id="092e83a5c399ab499607c9303ca6334373b3d256" translate="yes" xml:space="preserve">
          <source>The I/O manipulator &lt;code&gt;&lt;a href=&quot;../../io/manip/get_money&quot;&gt;std::get_money&lt;/a&gt;&lt;/code&gt; offers a simpler interface to this function.</source>
          <target state="translated">El manipulador de E / S &lt;code&gt;&lt;a href=&quot;../../io/manip/get_money&quot;&gt;std::get_money&lt;/a&gt;&lt;/code&gt; ofrece una interfaz m&amp;aacute;s simple para esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9281aeb716927d1d5830d84161987fd2ba2a83b8" translate="yes" xml:space="preserve">
          <source>The I/O manipulator &lt;code&gt;&lt;a href=&quot;../manip/ws&quot;&gt;std::ws&lt;/a&gt;&lt;/code&gt;, if it reaches the end of the stream while consuming whitespace (but, unlike the formatted input sentry, it does not set &lt;code&gt;failbit&lt;/code&gt; in this case)</source>
          <target state="translated">El manipulador de E / S &lt;code&gt;&lt;a href=&quot;../manip/ws&quot;&gt;std::ws&lt;/a&gt;&lt;/code&gt; , si llega al final de la secuencia mientras consume espacios en blanco (pero, a diferencia del centinela de entrada formateado, no establece el &lt;code&gt;failbit&lt;/code&gt; de falla en este caso)</target>
        </trans-unit>
        <trans-unit id="6cae64dc315ceedbcf629806178c5dfee8ef5b63" translate="yes" xml:space="preserve">
          <source>The I/O stream function &lt;a href=&quot;../basic_istream/putback&quot;&gt;&lt;code&gt;basic_istream::putback&lt;/code&gt;&lt;/a&gt; is implemented in terms of this function.</source>
          <target state="translated">La funci&amp;oacute;n de flujo de E / S &lt;a href=&quot;../basic_istream/putback&quot;&gt; &lt;code&gt;basic_istream::putback&lt;/code&gt; &lt;/a&gt; se implementa en t&amp;eacute;rminos de esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="39d7fe0b74278434911b1c661010e64ceaad4782" translate="yes" xml:space="preserve">
          <source>The I/O stream function &lt;a href=&quot;../basic_istream/unget&quot;&gt;&lt;code&gt;basic_istream::unget&lt;/code&gt;&lt;/a&gt; is implemented in terms of this function.</source>
          <target state="translated">La funci&amp;oacute;n de flujo de E / S &lt;a href=&quot;../basic_istream/unget&quot;&gt; &lt;code&gt;basic_istream::unget&lt;/code&gt; &lt;/a&gt; se implementa en t&amp;eacute;rminos de esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="187b46348f3fb61e44d273bc8c245c052215a7b7" translate="yes" xml:space="preserve">
          <source>The I/O stream objects &lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt;, as well as all objects derived from them (&lt;code&gt;&lt;a href=&quot;basic_ofstream&quot;&gt;std::ofstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;basic_stringstream&quot;&gt;std::stringstream&lt;/a&gt;&lt;/code&gt;, etc), are implemented entirely in terms of &lt;code&gt;std::basic_streambuf&lt;/code&gt;.</source>
          <target state="translated">Los objetos de flujo de E / S &lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; , as&amp;iacute; como todos los objetos derivados de ellos ( &lt;code&gt;&lt;a href=&quot;basic_ofstream&quot;&gt;std::ofstream&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;basic_stringstream&quot;&gt;std::stringstream&lt;/a&gt;&lt;/code&gt; , etc.), se implementan completamente en t&amp;eacute;rminos de &lt;code&gt;std::basic_streambuf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="234938443728dc9d7125d6292e796aa03d968ac4" translate="yes" xml:space="preserve">
          <source>The IEEE floating-point remainder of the division operation &lt;code&gt;x/y&lt;/code&gt; calculated by this function is exactly the value &lt;code&gt;x - n*y&lt;/code&gt;, where the value &lt;code&gt;n&lt;/code&gt; is the integral value nearest the exact value &lt;code&gt;x/y&lt;/code&gt;. When |n-x/y| = &amp;frac12;, the value &lt;code&gt;n&lt;/code&gt; is chosen to be even.</source>
          <target state="translated">El resto de coma flotante IEEE de la operaci&amp;oacute;n de divisi&amp;oacute;n &lt;code&gt;x/y&lt;/code&gt; calculada por esta funci&amp;oacute;n es exactamente el valor &lt;code&gt;x - n*y&lt;/code&gt; , donde el valor &lt;code&gt;n&lt;/code&gt; es el valor integral m&amp;aacute;s cercano al valor exacto &lt;code&gt;x/y&lt;/code&gt; . Cuando | nx / a | = &amp;frac12;, el valor &lt;code&gt;n&lt;/code&gt; se elige para que sea par.</target>
        </trans-unit>
        <trans-unit id="4bd42feee39816a2ee87bbe7649ebf6a7a843b59" translate="yes" xml:space="preserve">
          <source>The ISO C++ language standard does not require the compilers to support any pragmas. However, several non-standard pragmas are supported by multiple implementations:</source>
          <target state="translated">El estándar del lenguaje ISO C++no requiere que los compiladores soporten ningún pragmas.Sin embargo,varios pragmas no estándar son soportados por múltiples implementaciones:</target>
        </trans-unit>
        <trans-unit id="45d880ebb358a8cd4be3fa1496f29c34a4f3baeb" translate="yes" xml:space="preserve">
          <source>The Laguerre polynomials are the polynomial solutions of the equation xy,,</source>
          <target state="translated">Los polinomios de Laguerre son las soluciones polinómicas de la ecuación xy,,</target>
        </trans-unit>
        <trans-unit id="92d3f731dc95a519a499ea6ab412b29f1b0d8f74" translate="yes" xml:space="preserve">
          <source>The Mathematical Special Functions library was originally part of Library TR1 ISO/IEC TR 19768:2007, then published as an independent ISO standard, ISO/IEC 29124:2010, and finally merged to ISO C++ as of C++17.</source>
          <target state="translated">La biblioteca de Funciones Matemáticas Especiales fue originalmente parte de la biblioteca TR1 ISO/IEC TR 19768:2007,luego publicada como un estándar ISO independiente,ISO/IEC 29124:2010,y finalmente fusionada a ISO C++a partir de C++17.</target>
        </trans-unit>
        <trans-unit id="a8ec2b4252a83835e14c1e7646bcf468077a9b9f" translate="yes" xml:space="preserve">
          <source>The POSIX function &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/clock_getres.html&quot;&gt;clock_gettime(CLOCK_REALTIME, ts)&lt;/a&gt; may also be used to populate a &lt;code&gt;std::timespec&lt;/code&gt; with the time since the Epoch.</source>
          <target state="translated">La funci&amp;oacute;n POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/clock_getres.html&quot;&gt;clock_gettime (CLOCK_REALTIME, ts)&lt;/a&gt; tambi&amp;eacute;n se puede utilizar para completar un &lt;code&gt;std::timespec&lt;/code&gt; con el tiempo transcurrido desde la &amp;eacute;poca.</target>
        </trans-unit>
        <trans-unit id="b7966789a4d5a7e02ce7857154d2287b5c5108c0" translate="yes" xml:space="preserve">
          <source>The POSIX function &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/clock_getres.html&quot;&gt;clock_gettime(CLOCK_REALTIME, ts)&lt;/a&gt; may also be used to populate a &lt;code&gt;std::timespec&lt;/code&gt; with the time since the Epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9eb1a54a47019935774d069af9e7242497fee5" translate="yes" xml:space="preserve">
          <source>The Promise type is determined by the compiler from the return type of the coroutine using &lt;code&gt;std::coroutine_traits&lt;/code&gt;.</source>
          <target state="translated">El compilador determina el tipo de Promesa a partir del tipo de retorno de la rutina utilizando &lt;code&gt;std::coroutine_traits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82ffea0821c074edc08abd9ba5cab6f4451a0c94" translate="yes" xml:space="preserve">
          <source>The UTC equivalent of &lt;code&gt;tp&lt;/code&gt; according to the rules of this time zone.</source>
          <target state="translated">El equivalente UTC de &lt;code&gt;tp&lt;/code&gt; de acuerdo con las reglas de esta zona horaria.</target>
        </trans-unit>
        <trans-unit id="193657644c5ee833732a5b060501afa9d523bb28" translate="yes" xml:space="preserve">
          <source>The above definition requires that the result of &lt;code&gt;std::ratio_add&amp;lt;R1, R2&amp;gt;&lt;/code&gt; be already reduced to lowest terms; for example, &lt;code&gt;std::ratio_add&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 3&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;&amp;gt;&lt;/code&gt; is the same type as &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">La definici&amp;oacute;n anterior requiere que el resultado de &lt;code&gt;std::ratio_add&amp;lt;R1, R2&amp;gt;&lt;/code&gt; ya se reduzca a los t&amp;eacute;rminos m&amp;aacute;s bajos; por ejemplo, &lt;code&gt;std::ratio_add&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 3&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;&amp;gt;&lt;/code&gt; es el mismo tipo que &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 2&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23bee8585a3cc592fe0e1d9255e72f13d3dba2ab" translate="yes" xml:space="preserve">
          <source>The above definition requires that the result of &lt;code&gt;std::ratio_divide&amp;lt;R1, R2&amp;gt;&lt;/code&gt; be already reduced to lowest terms; for example, &lt;code&gt;std::ratio_divide&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 12&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;&amp;gt;&lt;/code&gt; is the same type as &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">La definici&amp;oacute;n anterior requiere que el resultado de &lt;code&gt;std::ratio_divide&amp;lt;R1, R2&amp;gt;&lt;/code&gt; ya se reduzca a los t&amp;eacute;rminos m&amp;aacute;s bajos; por ejemplo, &lt;code&gt;std::ratio_divide&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 12&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;&amp;gt;&lt;/code&gt; es el mismo tipo que &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 2&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7967282b7690ce10ae090be67d8a3935e530adf1" translate="yes" xml:space="preserve">
          <source>The above definition requires that the result of &lt;code&gt;std::ratio_multiply&amp;lt;R1, R2&amp;gt;&lt;/code&gt; be already reduced to lowest terms; for example, &lt;code&gt;std::ratio_multiply&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;4, 5&amp;gt;&amp;gt;&lt;/code&gt; is the same type as &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;2, 15&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">La definici&amp;oacute;n anterior requiere que el resultado de &lt;code&gt;std::ratio_multiply&amp;lt;R1, R2&amp;gt;&lt;/code&gt; ya se reduzca a los t&amp;eacute;rminos m&amp;aacute;s bajos; por ejemplo, &lt;code&gt;std::ratio_multiply&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;4, 5&amp;gt;&amp;gt;&lt;/code&gt; es el mismo tipo que &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;2, 15&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9896527cafdbbeacf853f6f95e1e7fc464c2579" translate="yes" xml:space="preserve">
          <source>The above definition requires that the result of &lt;code&gt;std::ratio_subtract&amp;lt;R1, R2&amp;gt;&lt;/code&gt; be already reduced to lowest terms; for example, &lt;code&gt;std::ratio_subtract&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 2&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;&amp;gt;&lt;/code&gt; is the same type as &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 3&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">La definici&amp;oacute;n anterior requiere que el resultado de &lt;code&gt;std::ratio_subtract&amp;lt;R1, R2&amp;gt;&lt;/code&gt; ya se reduzca a los t&amp;eacute;rminos m&amp;aacute;s bajos; por ejemplo, &lt;code&gt;std::ratio_subtract&amp;lt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 2&amp;gt;, &lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 6&amp;gt;&amp;gt;&lt;/code&gt; es el mismo tipo que &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&amp;lt;1, 3&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6568dd4bee0354c7a7d990d9fa61c5ac047fa7c2" translate="yes" xml:space="preserve">
          <source>The above example defines a function similar to &lt;code&gt;&lt;a href=&quot;../io/c/printf&quot;&gt;std::printf&lt;/a&gt;&lt;/code&gt;, that replace each occurrence of the character % in the format string with a value.</source>
          <target state="translated">El ejemplo anterior define una funci&amp;oacute;n similar a &lt;code&gt;&lt;a href=&quot;../io/c/printf&quot;&gt;std::printf&lt;/a&gt;&lt;/code&gt; , que reemplaza cada aparici&amp;oacute;n del car&amp;aacute;cter% en la cadena de formato con un valor.</target>
        </trans-unit>
        <trans-unit id="673689d4371938b6b75dd6a80d2ed08e06191c09" translate="yes" xml:space="preserve">
          <source>The above requirements make it possible to compare &lt;a href=&quot;container&quot;&gt;Container&lt;/a&gt;'s iterators and const_iterators.</source>
          <target state="translated">Los requisitos anteriores hacen posible la comparaci&amp;oacute;n de &lt;a href=&quot;container&quot;&gt;contenedores&lt;/a&gt; iteradores y const_iterators 's.</target>
        </trans-unit>
        <trans-unit id="13d09dc3f8ca032e8d2bc9d35592ce1dc3be4e55" translate="yes" xml:space="preserve">
          <source>The above rules apply to pointers as well (binding a reference to virtual base is replaced by implicit conversion to a pointer to virtual base), with two additional rules:</source>
          <target state="translated">Las reglas anteriores se aplican también a los punteros (la vinculación de una referencia a la base virtual se sustituye por la conversión implícita en un puntero a la base virtual),con dos reglas adicionales:</target>
        </trans-unit>
        <trans-unit id="f952896411170dfd5fc7f72e86070ffe524d617b" translate="yes" xml:space="preserve">
          <source>The above rules imply that LegacyRandomAccessIterator also implements &lt;a href=&quot;lessthancomparable&quot;&gt;LessThanComparable&lt;/a&gt;.</source>
          <target state="translated">Las reglas anteriores implican que LegacyRandomAccessIterator tambi&amp;eacute;n implementa &lt;a href=&quot;lessthancomparable&quot;&gt;LessThanComparable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee13435b654a2d72d3e32f79eb5a6c87ce8ef606" translate="yes" xml:space="preserve">
          <source>The above syntax produces code equivalent to the following (&lt;b&gt;&lt;code&gt;__range&lt;/code&gt;&lt;/b&gt;, &lt;b&gt;&lt;code&gt;__begin&lt;/code&gt;&lt;/b&gt; and &lt;b&gt;&lt;code&gt;__end&lt;/code&gt;&lt;/b&gt; are for exposition only):</source>
          <target state="translated">La sintaxis anterior produce un c&amp;oacute;digo equivalente al siguiente ( &lt;b&gt; &lt;code&gt;__range&lt;/code&gt; &lt;/b&gt; , &lt;b&gt; &lt;code&gt;__begin&lt;/code&gt; &lt;/b&gt; y &lt;b&gt; &lt;code&gt;__end&lt;/code&gt; &lt;/b&gt; son solo para exposici&amp;oacute;n):</target>
        </trans-unit>
        <trans-unit id="0b89b4d6624b7e332138a5ba2c5eb8e3386c894a" translate="yes" xml:space="preserve">
          <source>The above syntax produces code equivalent to:</source>
          <target state="translated">La sintaxis anterior produce un código equivalente a:</target>
        </trans-unit>
        <trans-unit id="1488e3e1725ba2ff4aa290f686cae3ecf80e21d5" translate="yes" xml:space="preserve">
          <source>The absolute value of &lt;code&gt;n&lt;/code&gt; (i.e. &lt;code&gt;|n|&lt;/code&gt;), if it is representable.</source>
          <target state="translated">El valor absoluto de &lt;code&gt;n&lt;/code&gt; (es decir, &lt;code&gt;|n|&lt;/code&gt; ), si es representable.</target>
        </trans-unit>
        <trans-unit id="89d1536a638b1783251f3fd22ff06e9dcd2eddad" translate="yes" xml:space="preserve">
          <source>The absolute value of &lt;code&gt;n&lt;/code&gt; must be within the range of representable values of &lt;code&gt;difference_type&lt;/code&gt;.</source>
          <target state="translated">El valor absoluto de &lt;code&gt;n&lt;/code&gt; debe estar dentro del rango de valores representables de &lt;code&gt;difference_type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68f35b30bcbca2a2334fe59e8dc3c3799211505f" translate="yes" xml:space="preserve">
          <source>The accessor &lt;code&gt;get_allocator()&lt;/code&gt; obtains a copy of the allocator that was used to construct the container or installed by the most recent allocator replacement operation.</source>
          <target state="translated">El &lt;code&gt;get_allocator()&lt;/code&gt; acceso get_allocator () obtiene una copia del asignador utilizado para construir el contenedor o instalado por la operaci&amp;oacute;n de reemplazo del asignador m&amp;aacute;s reciente.</target>
        </trans-unit>
        <trans-unit id="248f185c6f7dd3faa7f112b79d90246cce8de025" translate="yes" xml:space="preserve">
          <source>The actual address of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">La direcci&amp;oacute;n real de &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ba8439aff56e6d0648a49f1a69361b2accd1241" translate="yes" xml:space="preserve">
          <source>The actual catalog location is implementation-defined: for the catalog &lt;code&gt;&quot;sed&quot;&lt;/code&gt; (message catalogs installed with the Unix utility &lt;code&gt;'sed'&lt;/code&gt;) in German locale, for example, the file opened by this function call may be &lt;code&gt;/usr/lib/nls/msg/de_DE/sed.cat&lt;/code&gt;, &lt;code&gt;/usr/lib/locale/de_DE/LC_MESSAGES/sed.cat&lt;/code&gt;, or &lt;code&gt;/usr/share/locale/de/LC_MESSAGES/sed.mo&lt;/code&gt;.</source>
          <target state="translated">La ubicaci&amp;oacute;n real del cat&amp;aacute;logo est&amp;aacute; definida por la implementaci&amp;oacute;n: para el cat&amp;aacute;logo &lt;code&gt;&quot;sed&quot;&lt;/code&gt; (cat&amp;aacute;logos de mensajes instalados con la utilidad Unix &lt;code&gt;'sed'&lt;/code&gt; ) en la configuraci&amp;oacute;n regional alemana, por ejemplo, el archivo abierto por esta llamada de funci&amp;oacute;n puede ser &lt;code&gt;/usr/lib/nls/msg/de_DE/sed.cat&lt;/code&gt; , &lt;code&gt;/usr/lib/locale/de_DE/LC_MESSAGES/sed.cat&lt;/code&gt; o &lt;code&gt;/usr/share/locale/de/LC_MESSAGES/sed.mo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49de6cda744aa686d13f772c6d9cb13603ef64e6" translate="yes" xml:space="preserve">
          <source>The actual hash functions are implementation-dependent and are not required to fulfill any other quality criteria except those specified above. Notably, some implementations use trivial (identity) hash functions which map an integer to itself. In other words, these hash functions are designed to work with unordered associative containers, but not as cryptographic hashes, for example.</source>
          <target state="translated">Las funciones de hash reales dependen de la implementación y no se requiere que cumplan ningún otro criterio de calidad,excepto los especificados anteriormente.En particular,algunas implementaciones utilizan funciones de hash triviales (de identidad)que asignan un entero a sí mismo.En otras palabras,estas funciones de hash están diseñadas para funcionar con contenedores asociativos no ordenados,pero no como hashes criptográficos,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="a33d76aa419c87cdb7499801f1438c727323ce4c" translate="yes" xml:space="preserve">
          <source>The address of a static member function may be stored in a regular &lt;a href=&quot;pointer#Pointers_to_functions&quot;&gt;pointer to function&lt;/a&gt;, but not in a &lt;a href=&quot;pointer#Pointers_to_member_functions&quot;&gt;pointer to member function&lt;/a&gt;.</source>
          <target state="translated">La direcci&amp;oacute;n de una funci&amp;oacute;n miembro est&amp;aacute;tica puede almacenarse en un &lt;a href=&quot;pointer#Pointers_to_functions&quot;&gt;puntero&lt;/a&gt; regular para funcionar , pero no en una funci&amp;oacute;n &lt;a href=&quot;pointer#Pointers_to_member_functions&quot;&gt;puntero a miembro&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46a1f41e08509f4ba5888588f4190bd93cace159" translate="yes" xml:space="preserve">
          <source>The address-of operator expressions have the form.</source>
          <target state="translated">La dirección de las expresiones del operador tiene la forma.</target>
        </trans-unit>
        <trans-unit id="07473e470460f5d5bae4943e056fd9640065fcdf" translate="yes" xml:space="preserve">
          <source>The address-of operator, &lt;code&gt;operator&amp;amp;&lt;/code&gt;. If the unary &amp;amp; is applied to an lvalue of incomplete type and the complete type declares an overloaded &lt;code&gt;operator&amp;amp;&lt;/code&gt;, the behavior is undefined(until C++11) it is unspecified whether the operator has the built-in meaning or the operator function is called(since C++11). Because this operator may be overloaded, generic libraries use &lt;code&gt;&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;&lt;/code&gt; to obtain addresses of objects of user-defined types. The best known example of a canonical overloaded operator&amp;amp; is the Microsoft class &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/31k6d0k7(v=vs.140).aspx&quot;&gt;CComPtr&lt;/a&gt;. An example of its use in EDSL can be found in &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/spirit/doc/html/spirit/qi/reference/operator/and_predicate.html&quot;&gt;boost.spirit&lt;/a&gt;.</source>
          <target state="translated">La direcci&amp;oacute;n del operador, &lt;code&gt;operator&amp;amp;&lt;/code&gt; . Si el &amp;amp; unario se aplica a un valor l de tipo incompleto y el tipo completo declara un &lt;code&gt;operator&amp;amp;&lt;/code&gt; sobrecargado &amp;amp; , el comportamiento es indefinido (hasta C ++ 11) no se especifica si el operador tiene el significado incorporado o si la funci&amp;oacute;n del operador se llama (desde C ++ 11). Debido a que este operador puede estar sobrecargado, las bibliotecas gen&amp;eacute;ricas usan &lt;code&gt;&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;&lt;/code&gt; para obtener direcciones de objetos de tipos definidos por el usuario. El ejemplo m&amp;aacute;s conocido de un operador can&amp;oacute;nico sobrecargado es la clase &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/31k6d0k7(v=vs.140).aspx&quot;&gt;CComPtr de&lt;/a&gt; Microsoft . Un ejemplo de su uso en EDSL se puede encontrar en &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/spirit/doc/html/spirit/qi/reference/operator/and_predicate.html&quot;&gt;boost.spirit&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c103ac6dd3deba450041d16bbd5826461c5f4ba6" translate="yes" xml:space="preserve">
          <source>The address-of operator, &lt;code&gt;operator&amp;amp;&lt;/code&gt;. If the unary &amp;amp; is applied to an lvalue of incomplete type and the complete type declares an overloaded &lt;code&gt;operator&amp;amp;&lt;/code&gt;, the behavior is undefined(until C++11) it is unspecified whether the operator has the built-in meaning or the operator function is called(since C++11). Because this operator may be overloaded, generic libraries use &lt;code&gt;&lt;a href=&quot;../memory/addressof&quot;&gt;std::addressof&lt;/a&gt;&lt;/code&gt; to obtain addresses of objects of user-defined types. The best known example of a canonical overloaded operator&amp;amp; is the Microsoft class &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/31k6d0k7(v=vs.140).aspx&quot;&gt;CComPtr&lt;/a&gt;. An example of its use in EDSL can be found in &lt;a href=&quot;https://www.boost.org/doc/libs/release/libs/spirit/doc/html/spirit/qi/reference/operator/and_predicate.html&quot;&gt;boost.spirit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e6e05504e8bf834074fc272ad4977ce0312c5b" translate="yes" xml:space="preserve">
          <source>The adjusted value of &lt;code&gt;ptr&lt;/code&gt;, or null pointer value if the space provided is too small.</source>
          <target state="translated">El valor ajustado de &lt;code&gt;ptr&lt;/code&gt; , o valor de puntero nulo si el espacio proporcionado es demasiado peque&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="8ba619de076192371e302cacb5d006589d46013e" translate="yes" xml:space="preserve">
          <source>The adjustment flag is obtained as if by &lt;code&gt;std::fmtflags adjustfield = (flags &amp;amp; (&lt;a href=&quot;../../io/ios_base/fmtflags&quot;&gt;std::ios_base::adjustfield&lt;/a&gt;))&lt;/code&gt; and examined to identify padding location, as follows</source>
          <target state="translated">El indicador de ajuste se obtiene como si fuera &lt;code&gt;std::fmtflags adjustfield = (flags &amp;amp; (&lt;a href=&quot;../../io/ios_base/fmtflags&quot;&gt;std::ios_base::adjustfield&lt;/a&gt;))&lt;/code&gt; y se examina para identificar la ubicaci&amp;oacute;n del relleno, de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="926f65c8bd0c6d1333036efaf176755bf09a15fc" translate="yes" xml:space="preserve">
          <source>The algorithm is stable (preserves the relative order of the selected elements) only if &lt;code&gt;PopulationIterator&lt;/code&gt; meets the requirements of &lt;a href=&quot;../named_req/forwarditerator&quot;&gt;LegacyForwardIterator&lt;/a&gt;.</source>
          <target state="translated">El algoritmo es estable (conserva el orden relativo de los elementos seleccionados) solo si &lt;code&gt;PopulationIterator&lt;/code&gt; cumple con los requisitos de &lt;a href=&quot;../named_req/forwarditerator&quot;&gt;LegacyForwardIterator&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1563a53b10adbf5f25802b7bd384fbe70e9e0ee" translate="yes" xml:space="preserve">
          <source>The algorithm used is typically &lt;a href=&quot;https://en.wikipedia.org/wiki/Introselect&quot;&gt;introselect&lt;/a&gt; although other &lt;a href=&quot;https://en.wikipedia.org/wiki/Selection_algorithm&quot;&gt;selection algorithms&lt;/a&gt; with suitable average-case complexity are allowed.</source>
          <target state="translated">El algoritmo utilizado es t&amp;iacute;picamente &lt;a href=&quot;https://en.wikipedia.org/wiki/Introselect&quot;&gt;introselect,&lt;/a&gt; aunque se permiten otros &lt;a href=&quot;https://en.wikipedia.org/wiki/Selection_algorithm&quot;&gt;algoritmos de selecci&amp;oacute;n&lt;/a&gt; con una complejidad de caso promedio adecuada.</target>
        </trans-unit>
        <trans-unit id="ae39cc0aa4f0b72a9e3acc6a7ed0ccc5705bbfb5" translate="yes" xml:space="preserve">
          <source>The algorithms library defines functions for a variety of purposes (e.g. searching, sorting, counting, manipulating) that operate on ranges of elements. Note that a range is defined as &lt;code&gt;[first, last)&lt;/code&gt; where &lt;code&gt;last&lt;/code&gt; refers to the element</source>
          <target state="translated">La biblioteca de algoritmos define funciones para una variedad de prop&amp;oacute;sitos (por ejemplo, buscar, ordenar, contar, manipular) que operan en rangos de elementos. Tenga en cuenta que un rango se define como &lt;code&gt;[first, last)&lt;/code&gt; donde &lt;code&gt;last&lt;/code&gt; hace referencia al elemento</target>
        </trans-unit>
        <trans-unit id="22069e3480b3c9b1c4947adb5070a312d1235611" translate="yes" xml:space="preserve">
          <source>The alias template &lt;code&gt;std::ratio_add&lt;/code&gt; denotes the result of adding two exact rational fractions represented by the &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; specializations &lt;code&gt;R1&lt;/code&gt; and &lt;code&gt;R2&lt;/code&gt;.</source>
          <target state="translated">El alias plantilla &lt;code&gt;std::ratio_add&lt;/code&gt; denota el resultado de la adici&amp;oacute;n de dos fracciones exacta racionales representados por la &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; especializaciones &lt;code&gt;R1&lt;/code&gt; y &lt;code&gt;R2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fc9398a20f036593956ab3dbbede1771345f9e1" translate="yes" xml:space="preserve">
          <source>The alias template &lt;code&gt;std::ratio_divide&lt;/code&gt; denotes the result of dividing two exact rational fractions represented by the &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; specializations &lt;code&gt;R1&lt;/code&gt; and &lt;code&gt;R2&lt;/code&gt;.</source>
          <target state="translated">La plantilla alias &lt;code&gt;std::ratio_divide&lt;/code&gt; denota el resultado de dividir dos fracciones exacta racionales representados por la &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; especializaciones &lt;code&gt;R1&lt;/code&gt; y &lt;code&gt;R2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dee97ce6a58d133cf337086f34c62b2e6a147bd9" translate="yes" xml:space="preserve">
          <source>The alias template &lt;code&gt;std::ratio_multiply&lt;/code&gt; denotes the result of multiplying two exact rational fractions represented by the &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; specializations &lt;code&gt;R1&lt;/code&gt; and &lt;code&gt;R2&lt;/code&gt;.</source>
          <target state="translated">La plantilla alias &lt;code&gt;std::ratio_multiply&lt;/code&gt; denota el resultado de multiplicar dos fracciones exacta racionales representados por la &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; especializaciones &lt;code&gt;R1&lt;/code&gt; y &lt;code&gt;R2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62bf1af23a1c024978417eae0034999b5ac1bd02" translate="yes" xml:space="preserve">
          <source>The alias template &lt;code&gt;std::ratio_subtract&lt;/code&gt; denotes the result of subtracting two exact rational fractions represented by the &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; specializations &lt;code&gt;R1&lt;/code&gt; and &lt;code&gt;R2&lt;/code&gt;.</source>
          <target state="translated">La plantilla alias &lt;code&gt;std::ratio_subtract&lt;/code&gt; denota el resultado de restar dos fracciones exacta racionales representado por la &lt;code&gt;&lt;a href=&quot;ratio&quot;&gt;std::ratio&lt;/a&gt;&lt;/code&gt; especializaciones &lt;code&gt;R1&lt;/code&gt; y &lt;code&gt;R2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4377573b03e0c1dad62c68a8a05177fc20b8746c" translate="yes" xml:space="preserve">
          <source>The allocator to use by the copy-constructed standard containers.</source>
          <target state="translated">El asignador a utilizar por los contenedores estándar copiados.</target>
        </trans-unit>
        <trans-unit id="0c4781cc2700c28248cc1a31d718fc4fde15e2a7" translate="yes" xml:space="preserve">
          <source>The alternatives to the pImpl idiom are.</source>
          <target state="translated">Las alternativas al lenguaje pImpl son.</target>
        </trans-unit>
        <trans-unit id="d9b7b590e1cbea82e6b155f3de6c58aad7b88034" translate="yes" xml:space="preserve">
          <source>The amount of 32-bit integers copied by &lt;code&gt;param&lt;/code&gt;.</source>
          <target state="translated">La cantidad de enteros de 32 bits copiados por &lt;code&gt;param&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29000d5dd09096c4a0e5e6f79a569175406a28de" translate="yes" xml:space="preserve">
          <source>The amount of time between this &lt;code&gt;time_point&lt;/code&gt; and the &lt;code&gt;clock&lt;/code&gt;'s epoch.</source>
          <target state="translated">La cantidad de tiempo entre este &lt;code&gt;time_point&lt;/code&gt; y la &amp;eacute;poca del &lt;code&gt;clock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="781837e5b78f423a72b4bc7bbfde9fb961de52a5" translate="yes" xml:space="preserve">
          <source>The apparent size of the pushback buffer may be larger if the character that is pushed back equals the character existing at that location in the external character sequence (the implementation may simply decrement the read file position indicator and avoid maintaining a pushback buffer).</source>
          <target state="translated">El tamaño aparente de la memoria intermedia de retroceso puede ser mayor si el carácter que se retrocede es igual al que existe en ese lugar en la secuencia de caracteres externos (la implementación puede simplemente disminuir el indicador de posición del archivo de lectura y evitar mantener una memoria intermedia de retroceso).</target>
        </trans-unit>
        <trans-unit id="755a5a48206440558fe0aeebdc09b4c90a71a37f" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;n&lt;/code&gt; must be equal to the first argument of the call to &lt;code&gt;&lt;a href=&quot;allocate&quot;&gt;allocate()&lt;/a&gt;&lt;/code&gt; that originally produced &lt;code&gt;p&lt;/code&gt;; otherwise, the behavior is undefined.</source>
          <target state="translated">El argumento &lt;code&gt;n&lt;/code&gt; debe ser igual al primer argumento de la llamada a &lt;code&gt;&lt;a href=&quot;allocate&quot;&gt;allocate()&lt;/a&gt;&lt;/code&gt; que originalmente produjo &lt;code&gt;p&lt;/code&gt; ; de lo contrario, el comportamiento es indefinido.</target>
        </trans-unit>
        <trans-unit id="ed300236670f94b994460867ddba4af778962013" translate="yes" xml:space="preserve">
          <source>The argument is first converted to &lt;code&gt;unsigned char&lt;/code&gt;. If the &lt;b&gt;l&lt;/b&gt; modifier is used, the argument is first converted to a character string as if by &lt;b&gt;%ls&lt;/b&gt; with a &lt;code&gt;wchar_t[2]&lt;/code&gt; argument.</source>
          <target state="translated">El argumento se convierte primero a &lt;code&gt;unsigned char&lt;/code&gt; . Si se usa el modificador &lt;b&gt;l&lt;/b&gt; , el argumento se convierte primero en una cadena de caracteres como si fuera &lt;b&gt;% ls&lt;/b&gt; con un &lt;code&gt;wchar_t[2]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e173a96999867556e8be948298df40ea6171ebef" translate="yes" xml:space="preserve">
          <source>The argument is first converted to &lt;code&gt;wchar_t&lt;/code&gt; as if by calling &lt;code&gt;btowc&lt;/code&gt;. If the &lt;b&gt;l&lt;/b&gt; modifier is used, the &lt;code&gt;wint_t&lt;/code&gt; argument is first converted to &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="translated">El argumento se convierte primero a &lt;code&gt;wchar_t&lt;/code&gt; como si llamara a &lt;code&gt;btowc&lt;/code&gt; . Si se usa el modificador &lt;b&gt;l&lt;/b&gt; , el argumento &lt;code&gt;wint_t&lt;/code&gt; se convierte primero a &lt;code&gt;wchar_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21f94c3f9702cceebf7320693c46bd6df0e894dd" translate="yes" xml:space="preserve">
          <source>The argument list</source>
          <target state="translated">La lista de argumentos</target>
        </trans-unit>
        <trans-unit id="0ff8f0382d945790b4abb92eaf3d7bab75f243ba" translate="yes" xml:space="preserve">
          <source>The argument must be a pointer to the initial element of a character array containing a multibyte character sequence beginning in the initial shift state, which is converted to wide character array as if by a call to &lt;code&gt;mbrtowc&lt;/code&gt; with zero-initialized conversion state.</source>
          <target state="translated">El argumento debe ser un puntero al elemento inicial de una matriz de caracteres que contiene una secuencia de caracteres multibyte que comienza en el estado de desplazamiento inicial, que se convierte en una matriz de caracteres anchos como si fuera una llamada a &lt;code&gt;mbrtowc&lt;/code&gt; con un estado de conversi&amp;oacute;n de inicializaci&amp;oacute;n cero.</target>
        </trans-unit>
        <trans-unit id="6a03b5940fa2b2b9a645f3d15e3a9855662e07fb" translate="yes" xml:space="preserve">
          <source>The argument must be a pointer to the initial element of an array of characters.</source>
          <target state="translated">El argumento debe ser un puntero al elemento inicial de un conjunto de personajes.</target>
        </trans-unit>
        <trans-unit id="939cc9bc79190c70cc6b243a0d3d41e818910280" translate="yes" xml:space="preserve">
          <source>The argument-parameter implicit conversion sequences considered by overload resolution correspond to &lt;a href=&quot;implicit_cast&quot;&gt;implicit conversions&lt;/a&gt; used in &lt;a href=&quot;copy_initialization&quot;&gt;copy initialization&lt;/a&gt; (for non-reference parameters), except that when considering conversion to the implicit object parameter or to the left-hand side of assignment operator, conversions that create temporary objects are not considered.</source>
          <target state="translated">Las secuencias de conversi&amp;oacute;n impl&amp;iacute;cita de par&amp;aacute;metro de argumento consideradas por la resoluci&amp;oacute;n de sobrecarga corresponden a las &lt;a href=&quot;implicit_cast&quot;&gt;conversiones impl&amp;iacute;citas&lt;/a&gt; utilizadas en la &lt;a href=&quot;copy_initialization&quot;&gt;inicializaci&amp;oacute;n de copia&lt;/a&gt; (para par&amp;aacute;metros que no son de referencia), excepto que cuando se considera la conversi&amp;oacute;n al par&amp;aacute;metro de objeto impl&amp;iacute;cito o al lado izquierdo del operador de asignaci&amp;oacute;n, las conversiones que crear objetos temporales no se consideran.</target>
        </trans-unit>
        <trans-unit id="adaf20221647bf5f016df161d3227931e72c0e0a" translate="yes" xml:space="preserve">
          <source>The arguments to &lt;code&gt;std::bind_front&lt;/code&gt; are copied or moved, and are never passed by reference unless wrapped in &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los argumentos de &lt;code&gt;std::bind_front&lt;/code&gt; se copian o mueven, y nunca se pasan por referencia a menos que se envuelvan en &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d29b07ff6f09d0235dd01cb74baba1369ae91983" translate="yes" xml:space="preserve">
          <source>The arguments to bind are copied or moved, and are never passed by reference unless wrapped in &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los argumentos para vincular se copian o mueven, y nunca se pasan por referencia a menos que se envuelvan en &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16183ca09e08051a6a498c1b8e176b39fe04556e" translate="yes" xml:space="preserve">
          <source>The arguments to the thread function are moved or copied by value. If a reference argument needs to be passed to the thread function, it has to be wrapped (e.g. with &lt;code&gt;&lt;a href=&quot;../../utility/functional/ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../utility/functional/ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Los argumentos de la funci&amp;oacute;n de subproceso se mueven o copian por valor. Si se necesita pasar un argumento de referencia a la funci&amp;oacute;n de subproceso, debe envolverse (por ejemplo, con &lt;code&gt;&lt;a href=&quot;../../utility/functional/ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../../utility/functional/ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="30dd24a9b07849107ca8c554f4f6d40ca611c92d" translate="yes" xml:space="preserve">
          <source>The array is initialized as in &lt;a href=&quot;aggregate_initialization&quot;&gt;aggregate initialization&lt;/a&gt;, except that narrowing conversions are allowed and any elements without an initializer are &lt;a href=&quot;value_initialization&quot;&gt;value-initialized&lt;/a&gt;.</source>
          <target state="translated">La matriz se inicializa como en &lt;a href=&quot;aggregate_initialization&quot;&gt;la inicializaci&amp;oacute;n agregada&lt;/a&gt; , excepto que se permiten conversiones de estrechamiento y cualquier elemento sin un inicializador tiene un &lt;a href=&quot;value_initialization&quot;&gt;valor inicializado&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52bcb2ba93527988f88f98602d063b00271dc8bb" translate="yes" xml:space="preserve">
          <source>The arrays may overlap: copying takes place as if the wide characters were copied to a temporary wide character array and then copied from the temporary array to &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">Las matrices pueden superponerse: la copia se lleva a cabo como si los caracteres anchos se copiaran en una matriz temporal de caracteres anchos y luego se copiaran de la matriz temporal a &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1ce22bddbd5afcd8d2b9975482c42ad2a4cf0c6" translate="yes" xml:space="preserve">
          <source>The as-if rule</source>
          <target state="translated">La regla de &quot;como si&quot;...</target>
        </trans-unit>
        <trans-unit id="d858c67cf82093a6f8fd583515b76052a6e02bc9" translate="yes" xml:space="preserve">
          <source>The assignment operator (&lt;code&gt;operator=&lt;/code&gt;) has special properties: see &lt;a href=&quot;as_operator&quot;&gt;copy assignment&lt;/a&gt; and &lt;a href=&quot;move_operator&quot;&gt;move assignment&lt;/a&gt; for details.</source>
          <target state="translated">El operador de asignaci&amp;oacute;n ( &lt;code&gt;operator=&lt;/code&gt; ) tiene propiedades especiales: vea la &lt;a href=&quot;as_operator&quot;&gt;asignaci&amp;oacute;n de copia&lt;/a&gt; y &lt;a href=&quot;move_operator&quot;&gt;mueva la asignaci&amp;oacute;n&lt;/a&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3c5d518628da2787a486bdb9a3bf4a44f60ddd55" translate="yes" xml:space="preserve">
          <source>The associated Laguerre polynomials are the polynomial solutions of the equation \(x\ddot{y} + (m+1-x)\dot{y} + ny = 0\)xy,,</source>
          <target state="translated">Los polinomios asociados de Laguerre son las soluciones de polinomios de la ecuación \ ~ xddot{y}+(m+1-x)\dot{y}+ny=0\)xy,,</target>
        </trans-unit>
        <trans-unit id="cc4b473d4edca4fe8545285d21ee1d98e8fe3d3e" translate="yes" xml:space="preserve">
          <source>The associated allocator.</source>
          <target state="translated">El asignador asociado.</target>
        </trans-unit>
        <trans-unit id="9448faeee2cd31ccafe96e60d57e87c5096f2e84" translate="yes" xml:space="preserve">
          <source>The associated file stream or &lt;code&gt;&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; if an error has occurred.</source>
          <target state="translated">La secuencia de archivos asociada o &lt;code&gt;&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; si se ha producido un error.</target>
        </trans-unit>
        <trans-unit id="4048a32e4d36e4b4a7b6ceb3bdafa2370c883fb3" translate="yes" xml:space="preserve">
          <source>The associated locale is the value supplied to &lt;code&gt;&lt;a href=&quot;pubimbue&quot;&gt;pubimbue()&lt;/a&gt;&lt;/code&gt; on the last call, or, if that function has not been called, the value of the global locale (&lt;code&gt;&lt;a href=&quot;../../locale/locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt;) at the time of the construction of the streambuf.</source>
          <target state="translated">La configuraci&amp;oacute;n regional asociada es el valor suministrado a &lt;code&gt;&lt;a href=&quot;pubimbue&quot;&gt;pubimbue()&lt;/a&gt;&lt;/code&gt; en la &amp;uacute;ltima llamada o, si esa funci&amp;oacute;n no se ha llamado, el valor de la configuraci&amp;oacute;n regional global ( &lt;code&gt;&lt;a href=&quot;../../locale/locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; ) en el momento de la construcci&amp;oacute;n del streambuf.</target>
        </trans-unit>
        <trans-unit id="02393976fc180c9b25d5d69be609960418d8ef30" translate="yes" xml:space="preserve">
          <source>The associated locale.</source>
          <target state="translated">El lugar asociado.</target>
        </trans-unit>
        <trans-unit id="8552825362c8523a19e9943122503974571d213a" translate="yes" xml:space="preserve">
          <source>The associated stream buffer, or a null pointer if there was no associated stream buffer.</source>
          <target state="translated">El amortiguador de corriente asociado,o un puntero nulo si no había un amortiguador de corriente asociado.</target>
        </trans-unit>
        <trans-unit id="0783a046d6d1ff8d52f71c9b805d9b58a80c4a97" translate="yes" xml:space="preserve">
          <source>The atomic library provides components for fine-grained atomic operations allowing for lockless concurrent programming. Each atomic operation is indivisible with regards to any other atomic operation that involves the same object. Atomic objects are &lt;a href=&quot;language/memory_model#Threads_and_data_races&quot;&gt;free of data races&lt;/a&gt;.</source>
          <target state="translated">La biblioteca at&amp;oacute;mica proporciona componentes para operaciones at&amp;oacute;micas de grano fino que permiten una programaci&amp;oacute;n concurrente sin bloqueo. Cada operaci&amp;oacute;n at&amp;oacute;mica es indivisible con respecto a cualquier otra operaci&amp;oacute;n at&amp;oacute;mica que involucre el mismo objeto. Los objetos at&amp;oacute;micos est&amp;aacute;n &lt;a href=&quot;language/memory_model#Threads_and_data_races&quot;&gt;libres de carreras de datos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4adeb68c9c4013712d2aed1000d4e09e476ea64d" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;[[&lt;a href=&quot;attributes/optimize_for_synchronized&quot;&gt;optimize_for_synchronized&lt;/a&gt;]]&lt;/code&gt; may be applied to a declarator in a function declaration and must appear on the first declaration of the function.</source>
          <target state="translated">El atributo &lt;code&gt;[[&lt;a href=&quot;attributes/optimize_for_synchronized&quot;&gt;optimize_for_synchronized&lt;/a&gt;]]&lt;/code&gt; puede aplicarse a un declarador en una declaraci&amp;oacute;n de funci&amp;oacute;n y debe aparecer en la primera declaraci&amp;oacute;n de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0fd36a46bb2322c1e7d69551538bc1d5955fdf0c" translate="yes" xml:space="preserve">
          <source>The attribute-preserving overload (2) is implicitly invoked by &lt;a href=&quot;copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; when recursively copying directories. Its equivalent in boost.filesystem is &lt;a href=&quot;http://www.boost.org/doc/libs/1_57_0/libs/filesystem/doc/reference.html#copy_directory&quot;&gt;&lt;code&gt;copy_directory&lt;/code&gt;&lt;/a&gt; (with argument order reversed).</source>
          <target state="translated">La sobrecarga de preservaci&amp;oacute;n de atributos (2) es invocada impl&amp;iacute;citamente por &lt;a href=&quot;copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt; al copiar directorios de forma recursiva. Su equivalente en boost.filesystem es &lt;a href=&quot;http://www.boost.org/doc/libs/1_57_0/libs/filesystem/doc/reference.html#copy_directory&quot;&gt; &lt;code&gt;copy_directory&lt;/code&gt; &lt;/a&gt; (con el orden de los argumentos invertido).</target>
        </trans-unit>
        <trans-unit id="bb1b19b31ef8f9f13ad0e39dea075f4773fbda38" translate="yes" xml:space="preserve">
          <source>The attribute-preserving overload (2) is implicitly invoked by &lt;a href=&quot;copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; when recursively copying directories. Its equivalent in boost.filesystem is &lt;a href=&quot;https://www.boost.org/doc/libs/1_57_0/libs/filesystem/doc/reference.html#copy_directory&quot;&gt;&lt;code&gt;copy_directory&lt;/code&gt;&lt;/a&gt; (with argument order reversed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41955e8d96bded47f8643f2387d18f9f92f90a5" translate="yes" xml:space="preserve">
          <source>The badbit</source>
          <target state="translated">El badbit</target>
        </trans-unit>
        <trans-unit id="e1b04e88b5ddc8259deb4bd09406ff0efc4d0c5e" translate="yes" xml:space="preserve">
          <source>The badbit is set by the following standard library functions:</source>
          <target state="translated">El badbit se establece por las siguientes funciones estándar de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="1951bf526d104734daee9af96f8ae5f5577df89d" translate="yes" xml:space="preserve">
          <source>The base class &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; implements character classification equivalent to the minimal &quot;C&quot; locale. The classification rules can be extended or modified if constructed with a non-default classification table argument, if constructed as &lt;code&gt;&lt;a href=&quot;ctype_byname&quot;&gt;std::ctype_byname&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; or as a user-defined derived facet. All &lt;code&gt;&lt;a href=&quot;../io/basic_istream&quot;&gt;std::istream&lt;/a&gt;&lt;/code&gt; formatted input functions are required to use &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; for character classing during input parsing.</source>
          <target state="translated">La clase base &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; implementa una clasificaci&amp;oacute;n de caracteres equivalente a la configuraci&amp;oacute;n regional m&amp;iacute;nima &quot;C&quot;. Las reglas de clasificaci&amp;oacute;n pueden ampliarse o modificarse si se construyen con un argumento de tabla de clasificaci&amp;oacute;n no predeterminado, si se construyen como &lt;code&gt;&lt;a href=&quot;ctype_byname&quot;&gt;std::ctype_byname&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; o como una faceta derivada definida por el usuario. Todos &lt;code&gt;&lt;a href=&quot;../io/basic_istream&quot;&gt;std::istream&lt;/a&gt;&lt;/code&gt; funciones de entrada con formato est&amp;aacute;n obligados a usar &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; para classing personaje durante el an&amp;aacute;lisis sint&amp;aacute;ctico de entrada.</target>
        </trans-unit>
        <trans-unit id="23d729a8cc94f8c0414114c9a60e8acd1fc12d06" translate="yes" xml:space="preserve">
          <source>The base class version of the function calls &lt;code&gt;&lt;a href=&quot;underflow&quot;&gt;underflow()&lt;/a&gt;&lt;/code&gt; and increments &lt;code&gt;&lt;a href=&quot;gptr&quot;&gt;gptr()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La versi&amp;oacute;n de clase base de la funci&amp;oacute;n llama a &lt;code&gt;&lt;a href=&quot;underflow&quot;&gt;underflow()&lt;/a&gt;&lt;/code&gt; e incrementa &lt;code&gt;&lt;a href=&quot;gptr&quot;&gt;gptr()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="201321ed2284d9de663a5a09379bb0e53b45a031" translate="yes" xml:space="preserve">
          <source>The base class version of the function does nothing. The derived classes may override this function to allow updates to the get area in the case of exhaustion.</source>
          <target state="translated">La versión de la clase base de la función no hace nada.Las clases derivadas pueden anular esta función para permitir actualizaciones en el área de obtención en caso de agotamiento.</target>
        </trans-unit>
        <trans-unit id="a5380a7aca03357fb4bf7ea909e5b04af5dad0cc" translate="yes" xml:space="preserve">
          <source>The base class version of the function does nothing. The derived classes may override this function to allow updates to the put area in the case of exhaustion.</source>
          <target state="translated">La versión de la clase base de la función no hace nada.Las clases derivadas pueden anular esta función para permitir actualizaciones en el área de la puesta en marcha en caso de agotamiento.</target>
        </trans-unit>
        <trans-unit id="00b20c8c1673e69db511f9701832d81f1b9b3c9b" translate="yes" xml:space="preserve">
          <source>The base class version of the function returns &lt;code&gt;Traits::eof()&lt;/code&gt;.</source>
          <target state="translated">La versi&amp;oacute;n de clase base de la funci&amp;oacute;n devuelve &lt;code&gt;Traits::eof()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a068b851e69253d7268cdd6863af11c37cbd0d3a" translate="yes" xml:space="preserve">
          <source>The base class version of the function returns &lt;code&gt;traits::eof()&lt;/code&gt;.</source>
          <target state="translated">La versi&amp;oacute;n de clase base de la funci&amp;oacute;n devuelve &lt;code&gt;traits::eof()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc3b6bc12209467d6e9ff3af29b87f5253e0c47e" translate="yes" xml:space="preserve">
          <source>The base class version of the function returns the value returned by &lt;code&gt;&lt;a href=&quot;underflow&quot;&gt;underflow()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La versi&amp;oacute;n de clase base de la funci&amp;oacute;n devuelve el valor devuelto por &lt;code&gt;&lt;a href=&quot;underflow&quot;&gt;underflow()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1d208bfa2329a65807001e6d36d39a0f1677250" translate="yes" xml:space="preserve">
          <source>The base class version returns &lt;code&gt;​0​&lt;/code&gt;, which has the meaning of &quot;unsure if there are characters available in the associated sequence&quot;.</source>
          <target state="translated">La versi&amp;oacute;n de la clase base vuelve &lt;code&gt;​0​&lt;/code&gt; , que tiene el significado de &quot;seguro si hay caracteres disponibles en la secuencia asociada&quot;.</target>
        </trans-unit>
        <trans-unit id="65be7b19f119502c0eb14febca8650a896002b94" translate="yes" xml:space="preserve">
          <source>The base engine is initialized as if by its default constructor.</source>
          <target state="translated">El motor base se inicializa como si fuera su constructor por defecto.</target>
        </trans-unit>
        <trans-unit id="d2f48c59a2026f01e1913fb4af0ac9ade58b0ac5" translate="yes" xml:space="preserve">
          <source>The base engine is initialized with &lt;code&gt;q&lt;/code&gt;.</source>
          <target state="translated">El motor base se inicializa con &lt;code&gt;q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3807d81685568779c783145cd5e183ce61fc3a1c" translate="yes" xml:space="preserve">
          <source>The base engine is initialized with &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">El motor base se inicializa con &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebf5c9f5b0b3f9e2e22420142fce565a3b32cfbc" translate="yes" xml:space="preserve">
          <source>The base iterator refers to the element that is next (from the &lt;code&gt;std::reverse_iterator::iterator_type&lt;/code&gt; perspective) to the element the &lt;code&gt;reverse_iterator&lt;/code&gt; is currently pointing to. That is &lt;code&gt;&amp;amp;*(rit.base() - 1) == &amp;amp;*rit&lt;/code&gt;.</source>
          <target state="translated">El iterador base se refiere al elemento que sigue (desde la perspectiva &lt;code&gt;std::reverse_iterator::iterator_type&lt;/code&gt; ) al elemento al que &lt;code&gt;reverse_iterator&lt;/code&gt; actualmente. Es decir &lt;code&gt;&amp;amp;*(rit.base() - 1) == &amp;amp;*rit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04894fdb5441816fc37a586ae5bb96e48ec6f568" translate="yes" xml:space="preserve">
          <source>The begin iterator is not decrementable and the behavior is undefined if &lt;code&gt;--container.begin()&lt;/code&gt; is evaluated.</source>
          <target state="translated">El iterador de inicio no es decrementable y el comportamiento es indefinido si se eval&amp;uacute;a &lt;code&gt;--container.begin()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03aff1e4e14290c56daca1d059d5794d57d8f115" translate="yes" xml:space="preserve">
          <source>The behavior is &lt;a href=&quot;language/ub&quot;&gt;undefined&lt;/a&gt; if the calls to functions in this library introduce a</source>
          <target state="translated">El comportamiento &lt;a href=&quot;language/ub&quot;&gt;no&lt;/a&gt; est&amp;aacute; definido si las llamadas a funciones en esta biblioteca introducen un</target>
        </trans-unit>
        <trans-unit id="b94ed51c2a7132f52ba92dc74b4b5db56131e5d8" translate="yes" xml:space="preserve">
          <source>The behavior is also implementation-defined (rather than undefined) if the glvalue contains a pointer value that was invalidated.</source>
          <target state="translated">El comportamiento también está definido por la implementación (en lugar de indefinido)si el glvalue contiene un valor de puntero que fue invalidado.</target>
        </trans-unit>
        <trans-unit id="d32d3770c8427099c568e7f5878b1512fe78f9b0" translate="yes" xml:space="preserve">
          <source>The behavior is also undefined if &lt;code&gt;hash_function()&lt;/code&gt; and &lt;code&gt;key_eq()&lt;/code&gt; do(until C++20)&lt;code&gt;key_eq()&lt;/code&gt; does(since C++20) not have the same behavior on &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; or if &lt;code&gt;operator==&lt;/code&gt; for &lt;code&gt;Key&lt;/code&gt; is not a refinement of the partition into equivalent-key groups introduced by &lt;code&gt;key_eq()&lt;/code&gt; (that is, if two elements that compare equal using &lt;code&gt;operator==&lt;/code&gt; fall into different partitions).</source>
          <target state="translated">El comportamiento tambi&amp;eacute;n est&amp;aacute; indefinido si &lt;code&gt;hash_function()&lt;/code&gt; y &lt;code&gt;key_eq()&lt;/code&gt; do (hasta C ++ 20) &lt;code&gt;key_eq()&lt;/code&gt; no (desde C ++ 20) no tiene el mismo comportamiento en &lt;code&gt;lhs&lt;/code&gt; y &lt;code&gt;rhs&lt;/code&gt; o si &lt;code&gt;operator==&lt;/code&gt; para &lt;code&gt;Key&lt;/code&gt; no es un refinamiento de la partici&amp;oacute;n en grupos de claves equivalentes introducidos por &lt;code&gt;key_eq()&lt;/code&gt; (es decir, si dos elementos que se comparan iguales usando el &lt;code&gt;operator==&lt;/code&gt; caen en particiones diferentes).</target>
        </trans-unit>
        <trans-unit id="e8fd329b7e8ee3bfdaf431a851607c95c9f9bfb8" translate="yes" xml:space="preserve">
          <source>The behavior is as follows:</source>
          <target state="translated">El comportamiento es el siguiente:</target>
        </trans-unit>
        <trans-unit id="7eea08832bb23fb78c997d9dfc59bf05fa204a8d" translate="yes" xml:space="preserve">
          <source>The behavior is non-deterministic if &lt;code&gt;binary_op&lt;/code&gt; is not associative or not commutative.</source>
          <target state="translated">El comportamiento no es determinista si &lt;code&gt;binary_op&lt;/code&gt; no es asociativo o no conmutativo.</target>
        </trans-unit>
        <trans-unit id="07f39a83d0e9e90b80ce955a114fea2806db89fa" translate="yes" xml:space="preserve">
          <source>The behavior is non-deterministic if &lt;code&gt;binary_op&lt;/code&gt;/&lt;code&gt;binary_op2&lt;/code&gt; is not associative or not commutative.</source>
          <target state="translated">El comportamiento no es determinista si &lt;code&gt;binary_op&lt;/code&gt; / &lt;code&gt;binary_op2&lt;/code&gt; no es asociativo o no conmutativo.</target>
        </trans-unit>
        <trans-unit id="7236e1de843ba22b290511e64b6b85d4a7183b5b" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;a href=&quot;../future/valid&quot;&gt;&lt;code&gt;valid()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;== false&lt;/code&gt; before the call to this function.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si es &lt;a href=&quot;../future/valid&quot;&gt; &lt;code&gt;valid()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;== false&lt;/code&gt; antes de la llamada a esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="06568324069c072f68418be5d52202edbce2a0f2" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;a href=&quot;valid&quot;&gt;&lt;code&gt;valid()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;== false&lt;/code&gt; before the call to this function.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si es &lt;a href=&quot;valid&quot;&gt; &lt;code&gt;valid()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;== false&lt;/code&gt; antes de la llamada a esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="324200d2b8e9375f7586ca7351ca997ba0cea540" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;*this&lt;/code&gt; does not contain a value.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;*this&lt;/code&gt; no contiene un valor.</target>
        </trans-unit>
        <trans-unit id="c19a694085eaee2a80ad969fe60b2ac2a9024625" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;*this&lt;/code&gt; is the end iterator.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;*this&lt;/code&gt; es el iterador final.</target>
        </trans-unit>
        <trans-unit id="7a471c0f8892871ea303ee0c08e508e5150eccd3" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;&lt;a href=&quot;bucket_count&quot;&gt;bucket_count()&lt;/a&gt;&lt;/code&gt; is zero.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;&lt;a href=&quot;bucket_count&quot;&gt;bucket_count()&lt;/a&gt;&lt;/code&gt; es cero.</target>
        </trans-unit>
        <trans-unit id="476c74c56a725e606183d893014a83fc4be3c687" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;&lt;a href=&quot;remove_all_extents&quot;&gt;std::remove_all_extents_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is an incomplete type and not (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;&lt;a href=&quot;remove_all_extents&quot;&gt;std::remove_all_extents_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; es un tipo incompleto y no (posiblemente calificado por cv) &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ef784ec6729fb716d0e83738d463a642f5a064e" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;&lt;a href=&quot;remove_all_extents&quot;&gt;std::remove_all_extents_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is an incomplete type other than (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;&lt;a href=&quot;remove_all_extents&quot;&gt;std::remove_all_extents_t&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; es un tipo incompleto que no es (posiblemente calificado por cv) &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3512a4717910c6e0ec680f0e9ee0792822982829" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;&lt;a href=&quot;valid&quot;&gt;valid()&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; before the call to this function.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;&lt;a href=&quot;valid&quot;&gt;valid()&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; antes de la llamada a esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d9de1ac8e09598bd1314c36343d514e145b20e5a" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;Allocator&lt;/code&gt; does not propagate on swap and the allocators of &lt;code&gt;*this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; are unequal.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;Allocator&lt;/code&gt; no se propaga en el intercambio y los asignadores de &lt;code&gt;*this&lt;/code&gt; y &lt;code&gt;other&lt;/code&gt; son desiguales.</target>
        </trans-unit>
        <trans-unit id="e1eb022d90c2587b502830f55c339645ff1ae6db" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;Key&lt;/code&gt; is not &lt;a href=&quot;../../named_req/equalitycomparable&quot;&gt;EqualityComparable&lt;/a&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;Key&lt;/code&gt; no es &lt;a href=&quot;../../named_req/equalitycomparable&quot;&gt;EqualityComparable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="735ab6f78eae524da546644a47d6f981e069b743" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;Key&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt; are not &lt;a href=&quot;../../named_req/equalitycomparable&quot;&gt;EqualityComparable&lt;/a&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;Key&lt;/code&gt; o &lt;code&gt;T&lt;/code&gt; no son &lt;a href=&quot;../../named_req/equalitycomparable&quot;&gt;EqualityComparable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82a17b18b659f4ccc9ce4566182a3cc7f42114d5" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;Len == 0&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;Len == 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59a8e068249dac51d245ed2c490d5c1490704809" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;T&lt;/code&gt; is an incomplete type other than (possibly cv-qualified) &lt;code&gt;void&lt;/code&gt; or array of unknown bound.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;T&lt;/code&gt; es un tipo incompleto que no sea (posiblemente calificado por cv) &lt;code&gt;void&lt;/code&gt; o matriz de l&amp;iacute;mite desconocido.</target>
        </trans-unit>
        <trans-unit id="0a1770e1354089d9317ac474ffc747e7d82a8c14" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;a&amp;gt;b&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;a&amp;gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b63ea882cbcdea68d7571db64ae9203a71aaf73" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;base.size() != exp.size()&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;base.size() != exp.size()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67d354f1293c1b737ce0d288b1b9be686bda37d3" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;binary_op&lt;/code&gt; modifies any element or invalidates any iterator in [first; last], including the end iterator.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;binary_op&lt;/code&gt; modifica alg&amp;uacute;n elemento o invalida cualquier iterador en [first; &amp;uacute;ltimo], incluido el iterador final.</target>
        </trans-unit>
        <trans-unit id="469e1d9d1c4068bbf6e1c2e697e7ffac8b8ba7f6" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;d_last&lt;/code&gt; is within &lt;code&gt;(first, last]&lt;/code&gt;. &lt;a href=&quot;move&quot;&gt; std::move&lt;/a&gt; must be used instead of &lt;code&gt;std::move_backward&lt;/code&gt; in that case.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;d_last&lt;/code&gt; est&amp;aacute; dentro &lt;code&gt;(first, last]&lt;/code&gt; . &lt;a href=&quot;move&quot;&gt;Std :: move&lt;/a&gt; debe usarse en lugar de &lt;code&gt;std::move_backward&lt;/code&gt; en ese caso.</target>
        </trans-unit>
        <trans-unit id="6a69976aa807aa840671bdf8c84727126ce414a6" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;d_last&lt;/code&gt; is within &lt;code&gt;(first, last]&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;copy&quot;&gt;std::copy&lt;/a&gt;&lt;/code&gt; must be used instead of &lt;code&gt;std::copy_backward&lt;/code&gt; in that case.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;d_last&lt;/code&gt; est&amp;aacute; dentro &lt;code&gt;(first, last]&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;copy&quot;&gt;std::copy&lt;/a&gt;&lt;/code&gt; debe usarse en lugar de &lt;code&gt;std::copy_backward&lt;/code&gt; en ese caso.</target>
        </trans-unit>
        <trans-unit id="47d791dc5191e81ae3d09e89daf7bf07163ce6b8" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; are iterators into &lt;code&gt;*this&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;first&lt;/code&gt; y &lt;code&gt;last&lt;/code&gt; son iteradores de &lt;code&gt;*this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6f3ff6f9cbc2b439afb2795f2f721f59948f3bf" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;g&lt;/code&gt; has volatile-qualified type.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;g&lt;/code&gt; tiene un tipo calificado como vol&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="2e9b7d5ca68b1370aed4912faec1a4760bc6179d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;get() == nullptr&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;get() == nullptr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f4c18e6c7b6aea27fce5ed64368841d49ce9361" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;get_allocator() != source.get_allocator()&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;get_allocator() != source.get_allocator()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6eab0581058a4c2b12e5109fd370a8ece52140ed" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;i.result != std::chrono::local_info::ambiguous&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;i.result != std::chrono::local_info::ambiguous&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="200bd29a30796e7a2a3ff517a5b5bad4ed78c850" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;i.result != std::chrono::local_info::nonexistent&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;i.result != std::chrono::local_info::nonexistent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df9572d7c8906a33d2e15c5a66892b297a9356be" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;last&lt;/code&gt; is not reachable from &lt;code&gt;first&lt;/code&gt; by (possibly repeatedly) incrementing &lt;code&gt;first&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si no se puede acceder al &lt;code&gt;last&lt;/code&gt; desde el &lt;code&gt;first&lt;/code&gt; (posiblemente repetidamente) increment&amp;aacute;ndolo &lt;code&gt;first&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="464b76a8eef218307890a469421e1b605b19821f" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;lhs&lt;/code&gt; or &lt;code&gt;rhs&lt;/code&gt; are not pointers to null-terminated strings.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;lhs&lt;/code&gt; o &lt;code&gt;rhs&lt;/code&gt; no son punteros a cadenas terminadas en nulo.</target>
        </trans-unit>
        <trans-unit id="b44460391a952d80167639892da39becaef08fba" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;lhs&lt;/code&gt; or &lt;code&gt;rhs&lt;/code&gt; are not pointers to null-terminated wide strings.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;lhs&lt;/code&gt; o &lt;code&gt;rhs&lt;/code&gt; no son punteros a cadenas anchas terminadas en nulo.</target>
        </trans-unit>
        <trans-unit id="2cbc83b4c31a10cebd8ea7ff74d24d3b67882e3e" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;m&lt;/code&gt; is destroyed before the &lt;code&gt;lock_guard&lt;/code&gt; object is.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;m&lt;/code&gt; se destruye antes de &lt;code&gt;lock_guard&lt;/code&gt; objeto lock_guard .</target>
        </trans-unit>
        <trans-unit id="07f9df56c1dbfe24c25522fd1a56bdba0c1947fd" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;m&lt;/code&gt; is destroyed before the &lt;code&gt;scoped_lock&lt;/code&gt; object is.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;m&lt;/code&gt; se destruye antes del &lt;code&gt;scoped_lock&lt;/code&gt; objeto .</target>
        </trans-unit>
        <trans-unit id="1433c58daafe2f6adc50c6512f38c69c4063319e" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;n &amp;gt; size()&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;n &amp;gt; size()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e976404215147707f2898a7fda666454bbfd437" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;r&lt;/code&gt; is negative or NaN, or if &lt;code&gt;theta&lt;/code&gt; is infinite.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;r&lt;/code&gt; es negativo o NaN, o si &lt;code&gt;theta&lt;/code&gt; es infinito.</target>
        </trans-unit>
        <trans-unit id="ad1c12decd3487f7e9d9505be86f84f4573eda77" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;size() != v.size()&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;size() != v.size()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="328698c40f8c76810b54bff78f2c1e778e3afda9" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;unary_op&lt;/code&gt;, &lt;code&gt;binary_op&lt;/code&gt;, &lt;code&gt;binary_op1&lt;/code&gt;, or &lt;code&gt;binary_op2&lt;/code&gt; modifies any element or invalidates any iterator in the input ranges, including their end iterators.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;unary_op&lt;/code&gt; , &lt;code&gt;binary_op&lt;/code&gt; , &lt;code&gt;binary_op1&lt;/code&gt; o &lt;code&gt;binary_op2&lt;/code&gt; modifica alg&amp;uacute;n elemento o invalida cualquier iterador en los rangos de entrada, incluidos sus iteradores finales.</target>
        </trans-unit>
        <trans-unit id="48b55273057377763eaf4481f69ee31839fd7bf3" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;x.size() != y.size()&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si &lt;code&gt;x.size() != y.size()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ef58144c8fcfd8d89e4718f215607421aaf5e1d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if &lt;code&gt;|m|&lt;/code&gt;, &lt;code&gt;|n|&lt;/code&gt;, or the least common multiple of &lt;code&gt;|m|&lt;/code&gt; and &lt;code&gt;|n|&lt;/code&gt; is not representable as a value of type &lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;M, N&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;|m|&lt;/code&gt; , &lt;code&gt;|n|&lt;/code&gt; , o el m&amp;iacute;nimo com&amp;uacute;n m&amp;uacute;ltiplo de &lt;code&gt;|m|&lt;/code&gt; y &lt;code&gt;|n|&lt;/code&gt; no es representable como un valor de tipo &lt;code&gt;&lt;a href=&quot;../types/common_type&quot;&gt;std::common_type_t&lt;/a&gt;&amp;lt;M, N&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e848deb0f28b1b253878c2a2ace5cb1ba25e1fa0" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if after &lt;code&gt;std::free&lt;/code&gt; returns, an access is made through the pointer &lt;code&gt;ptr&lt;/code&gt; (unless another allocation function happened to result in a pointer value equal to &lt;code&gt;ptr&lt;/code&gt;).</source>
          <target state="translated">El comportamiento es indefinido si despu&amp;eacute;s de retornos &lt;code&gt;std::free&lt;/code&gt; , se realiza un acceso a trav&amp;eacute;s del puntero &lt;code&gt;ptr&lt;/code&gt; (a menos que otra funci&amp;oacute;n de asignaci&amp;oacute;n resulte en un valor de puntero igual a &lt;code&gt;ptr&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="382731f74485efa9af2996234b21df03cf6b975e" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if alignment is not a power of two.</source>
          <target state="translated">El comportamiento es indefinido si la alineación no es una potencia de dos.</target>
        </trans-unit>
        <trans-unit id="d06e069b4a8563c91c2582a692292a002622d32d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if any member function other than the destructor, the copy-assignment operator, the move-assignment operator, or &lt;code&gt;valid&lt;/code&gt; is called on a &lt;code&gt;shared_future &lt;/code&gt; that does not refer to shared state (although implementations are encouraged to throw &lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; indicating &lt;code&gt;no_state&lt;/code&gt; in this case). It is valid to move or copy from a shared_future object for which &lt;code&gt;valid()&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si cualquier funci&amp;oacute;n miembro que no sea el destructor, el operador de asignaci&amp;oacute;n de copia, el operador de asignaci&amp;oacute;n de movimiento o &lt;code&gt;valid&lt;/code&gt; se llama en un &lt;code&gt;shared_future &lt;/code&gt; que no se refiere al estado compartido (aunque se recomienda a las implementaciones que arrojen &lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; indicando &lt;code&gt;no_state&lt;/code&gt; en este caso). Es v&amp;aacute;lido mover o copiar desde un objeto shared_future para el que &lt;code&gt;valid()&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc5d01f26b171ac39957879df053b774c1281eb1" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if any member function other than the destructor, the move-assignment operator, or &lt;code&gt;valid&lt;/code&gt; is called on a &lt;code&gt;future &lt;/code&gt; that does not refer to shared state (although implementations are encouraged to throw &lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; indicating &lt;code&gt;no_state&lt;/code&gt; in this case). It is valid to move from a future object for which &lt;code&gt;valid()&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si se llama a cualquier funci&amp;oacute;n miembro que no sea el destructor, el operador de asignaci&amp;oacute;n de movimiento o &lt;code&gt;valid&lt;/code&gt; en un &lt;code&gt;future &lt;/code&gt; que no se refiere al estado compartido (aunque se recomienda a las implementaciones que arrojen &lt;code&gt;&lt;a href=&quot;../future_error&quot;&gt;std::future_error&lt;/a&gt;&lt;/code&gt; indica &lt;code&gt;no_state&lt;/code&gt; en este caso) . Es v&amp;aacute;lido moverse de un objeto futuro para el que &lt;code&gt;valid()&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62628ae7a2e9ed6f36760144718a5aa1f461c465" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if any member of &lt;code&gt;*time_ptr&lt;/code&gt; is outside its normal range.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si alg&amp;uacute;n miembro de &lt;code&gt;*time_ptr&lt;/code&gt; est&amp;aacute; fuera de su rango normal.</target>
        </trans-unit>
        <trans-unit id="7b08c4eddc360f739319b35a38b8c070e8e78766" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if any of the values in &lt;code&gt;v&lt;/code&gt; is computed during the assignment and depends on any of the values in &lt;code&gt;*this&lt;/code&gt;, that is, the expression on the right side of the assignment refers to a variable in the left side of the assignment.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si alguno de los valores en &lt;code&gt;v&lt;/code&gt; se calcula durante la asignaci&amp;oacute;n y depende de cualquiera de los valores en &lt;code&gt;*this&lt;/code&gt; , es decir, la expresi&amp;oacute;n en el lado derecho de la asignaci&amp;oacute;n se refiere a una variable en el lado izquierdo de la asignaci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="d9d5b90cd8c93c2f355de5aef5abe9774372544d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if any signal handler performs any of the following:</source>
          <target state="translated">El comportamiento es indefinido si cualquier manejador de señales realiza cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="3f419695a80fdd6f9b48c829076db22a0d882bf7" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if any value in &lt;code&gt;submatches&lt;/code&gt; is less than &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si alg&amp;uacute;n valor en &lt;code&gt;submatches&lt;/code&gt; es menor que &lt;code&gt;-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d24b4310a27da92c3b82ad83df3a91418db2bf1" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if copied character ranges overlap, i.e. &lt;code&gt;src&lt;/code&gt; is in [&lt;code&gt;dest&lt;/code&gt;, &lt;code&gt;dest + count&lt;/code&gt;).</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si los rangos de caracteres copiados se superponen, es decir, &lt;code&gt;src&lt;/code&gt; est&amp;aacute; en [ &lt;code&gt;dest&lt;/code&gt; , &lt;code&gt;dest + count&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6683df606df41a9fba0766574236a56020142574" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if either &lt;code&gt;Offset&lt;/code&gt; or &lt;code&gt;Count&lt;/code&gt; is out of range. This happens if.</source>
          <target state="translated">El comportamiento es indefinido si &lt;code&gt;Offset&lt;/code&gt; o &lt;code&gt;Count&lt;/code&gt; est&amp;aacute;n fuera de rango. Esto sucede si.</target>
        </trans-unit>
        <trans-unit id="3d55697ed5f2c15128a892f22aa16ff4ee37bf2b" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if more than one replacement is provided in the program for any of the replaceable allocation function, or if a replacement is defined with the &lt;code&gt;inline&lt;/code&gt; specifier. The program is ill-formed if a replacement is defined in namespace other than global namespace, or if it is defined as a static non-member function at global scope.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si se proporciona m&amp;aacute;s de un reemplazo en el programa para cualquiera de las funciones de asignaci&amp;oacute;n reemplazables, o si un reemplazo se define con la &lt;code&gt;inline&lt;/code&gt; especificador en . El programa est&amp;aacute; mal formado si se define un reemplazo en un espacio de nombres que no sea el espacio de nombres global, o si se define como una funci&amp;oacute;n no miembro est&amp;aacute;tica en el &amp;aacute;mbito global.</target>
        </trans-unit>
        <trans-unit id="038cb1cc5613100b7d719c178ef2592ef2ae999d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if more than one replacement is provided in the program or if a replacement is defined with the &lt;code&gt;inline&lt;/code&gt; specifier, the program is ill-formed if a replacement is defined in namespace other than global namespace, or if it is defined as a static non-member function at global scope.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si se proporciona m&amp;aacute;s de un reemplazo en el programa o si se define un reemplazo con el especificador en &lt;code&gt;inline&lt;/code&gt; , el programa est&amp;aacute; mal formado si un reemplazo se define en un espacio de nombres diferente al espacio de nombres global, o si se define como un funci&amp;oacute;n no miembro est&amp;aacute;tica a alcance global.</target>
        </trans-unit>
        <trans-unit id="a20a9dd22a45ec31e734ddcf820693b4431349ff" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the &lt;code&gt;dest&lt;/code&gt; array is not large enough. The behavior is undefined if &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; overlap.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si la matriz &lt;code&gt;dest&lt;/code&gt; no es lo suficientemente grande. El comportamiento no est&amp;aacute; definido si se solapan &lt;code&gt;dest&lt;/code&gt; y &lt;code&gt;src&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c627b5e29de481b45829af3c304be965f578d75f" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the &lt;code&gt;dest&lt;/code&gt; array is not large enough. The behavior is undefined if the strings overlap.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si la matriz &lt;code&gt;dest&lt;/code&gt; no es lo suficientemente grande. El comportamiento es indefinido si las cadenas se superponen.</target>
        </trans-unit>
        <trans-unit id="e672d6612cb2434a04c81125a1da0fb7697ed68f" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the array is not already partitioned in ascending order with respect to key, according to the same criterion that &lt;code&gt;comp&lt;/code&gt; uses.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si la matriz a&amp;uacute;n no est&amp;aacute; particionada en orden ascendente con respecto a la clave, de acuerdo con el mismo criterio que utiliza &lt;code&gt;comp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eaab6c269f8944718df63cc4ed6bf2f8b08bc9eb" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the calendar year indicated by &lt;code&gt;time_ptr-&amp;gt;tm_year&lt;/code&gt; has more than 4 digits or is less than the year 1000.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el a&amp;ntilde;o calendario indicado por &lt;code&gt;time_ptr-&amp;gt;tm_year&lt;/code&gt; tiene m&amp;aacute;s de 4 d&amp;iacute;gitos o es menor que el a&amp;ntilde;o 1000.</target>
        </trans-unit>
        <trans-unit id="107f0ca619ed1641b4b32723442cde5cad358fd0" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the calling thread already owns the mutex (except if m is &lt;code&gt;&lt;a href=&quot;../thread/recursive_mutex&quot;&gt;std::recursive_mutex&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../thread/recursive_timed_mutex&quot;&gt;std::recursive_timed_mutex&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el hilo de llamada ya posee el mutex (excepto si m es &lt;code&gt;&lt;a href=&quot;../thread/recursive_mutex&quot;&gt;std::recursive_mutex&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../thread/recursive_timed_mutex&quot;&gt;std::recursive_timed_mutex&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9597012e6d1c284aaae1be16fd72723a227375b3" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the calling thread already owns the mutex (except if m is &lt;code&gt;&lt;a href=&quot;../thread/recursive_timed_mutex&quot;&gt;std::recursive_timed_mutex&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el hilo de llamada ya posee el mutex (excepto si m es &lt;code&gt;&lt;a href=&quot;../thread/recursive_timed_mutex&quot;&gt;std::recursive_timed_mutex&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e25ed56c543893145387cece9238aaefbb7962a5" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the calling thread already owns the mutex in any mode</source>
          <target state="translated">El comportamiento es indefinido si el hilo de llamada ya posee el mutex en cualquier modo</target>
        </trans-unit>
        <trans-unit id="455f5ecf93a29b785f85a3650b334e47e270bc5d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the calling thread already owns the mutex in any mode.</source>
          <target state="translated">El comportamiento es indefinido si el hilo de llamada ya posee el mutex en cualquier modo.</target>
        </trans-unit>
        <trans-unit id="bf93000628919e2e36b8899ced4ef2e9aa80147b" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the calling thread does not own the mutex.</source>
          <target state="translated">El comportamiento es indefinido si el hilo de llamada no posee el mutex.</target>
        </trans-unit>
        <trans-unit id="e6f8ed0e1bf41e45825ee88de1ec4684196a97f1" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the catch-clause of a function-try-block used on a constructor or a destructor accesses a base or a non-static member of the object.</source>
          <target state="translated">El comportamiento es indeterminado si la cláusula de bloqueo de una función utilizada en un constructor o un destructor accede a una base o a un miembro no estático del objeto.</target>
        </trans-unit>
        <trans-unit id="10ffe7d432f0c823f0efa899069f10112e24be9a" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the destination array is not large enough for the contents of both &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; and the terminating null character.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si la matriz de destino no es lo suficientemente grande para el contenido de &lt;code&gt;src&lt;/code&gt; y &lt;code&gt;dest&lt;/code&gt; y el car&amp;aacute;cter nulo de terminaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="75927258cde7082c64c027c4137cbfc360391f60" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the destination array is not large enough for the contents of both &lt;code&gt;str&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; and the terminating null wide character.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si la matriz de destino no es lo suficientemente grande para el contenido de &lt;code&gt;str&lt;/code&gt; y &lt;code&gt;dest&lt;/code&gt; y el car&amp;aacute;cter ancho nulo de terminaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="de04579470349e59afe3e218735c91270b339460" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the destination range overlaps either of the input ranges (the input ranges may overlap each other).</source>
          <target state="translated">El comportamiento es indefinido si el rango de destino se superpone a cualquiera de los rangos de entrada (los rangos de entrada pueden superponerse entre sí).</target>
        </trans-unit>
        <trans-unit id="a37e086cae0a28fd2aae005d5f6cf8a3dd482110" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the input and output ranges overlap in any way.</source>
          <target state="translated">El comportamiento es indefinido si los rangos de entrada y salida se superponen de alguna manera.</target>
        </trans-unit>
        <trans-unit id="b4fe485020cbf1d9a076309617005f2501c31bbb" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the input range overlaps either of the output ranges.</source>
          <target state="translated">El comportamiento es indefinido si el rango de entrada se superpone a cualquiera de los rangos de salida.</target>
        </trans-unit>
        <trans-unit id="5ebe26f9bedb970f8dfbe805816ca874ada90946" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the iterator is end-of-sequence iterator.</source>
          <target state="translated">El comportamiento es indefinido si el iterador es de fin de secuencia.</target>
        </trans-unit>
        <trans-unit id="1c2d58529416e22c80b57ff0a56588fb399c9711" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the iterator is end-of-stream iterator.</source>
          <target state="translated">El comportamiento es indefinido si el iterador es de fin de carrera.</target>
        </trans-unit>
        <trans-unit id="cd152c1ef8ff8aa5b3b3aae81e6c153ee0d2ce45" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the memory area referred to by &lt;code&gt;ptr&lt;/code&gt; has already been deallocated, that is, &lt;code&gt;std::free&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; has already been called with &lt;code&gt;ptr&lt;/code&gt; as the argument and no calls to &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt;(since C++17), or &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; resulted in a pointer equal to &lt;code&gt;ptr&lt;/code&gt; afterwards.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el &amp;aacute;rea de memoria a la que hace referencia &lt;code&gt;ptr&lt;/code&gt; ya se ha desasignado, es decir, &lt;code&gt;std::free&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; ya se ha llamado con &lt;code&gt;ptr&lt;/code&gt; como argumento y no hay llamadas a &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt; (desde C ++ 17) o &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; result&amp;oacute; en un puntero igual a &lt;code&gt;ptr&lt;/code&gt; despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="a3b10348058d0a2ba715c0cfc12ae65b467b766d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the mode is not one of the strings listed above. Some implementations define additional supported modes (e.g. &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/yeby3zcb.aspx&quot;&gt;Windows&lt;/a&gt;).</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el modo no es una de las cadenas enumeradas anteriormente. Algunas implementaciones definen modos adicionales compatibles (por ejemplo, &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/yeby3zcb.aspx&quot;&gt;Windows&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="da1bb7b6150b3145c9cf5771803ad15255ccd6ca" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the mutex is owned by any thread or if any thread terminates while holding any ownership of the mutex.</source>
          <target state="translated">El comportamiento es indefinido si el mutex es propiedad de algún hilo o si algún hilo termina mientras mantiene alguna propiedad del mutex.</target>
        </trans-unit>
        <trans-unit id="8a736eddc553ced80be2216fe88e77227b189294" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the path has no filename component (&lt;a href=&quot;has_path&quot;&gt;&lt;code&gt;has_filename&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si la ruta no tiene un componente de nombre de archivo ( &lt;a href=&quot;has_path&quot;&gt; &lt;code&gt;has_filename&lt;/code&gt; &lt;/a&gt; devuelve &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4e88a36bd0409a39cc3f312c7891e7e04c61f4ec" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the specified sequence of increments or decrements would require that a non-incrementable iterator (such as the past-the-end iterator) is incremented, or that a non-decrementable iterator (such as the front iterator or the singular iterator) is decremented.</source>
          <target state="translated">El comportamiento es indefinido si la secuencia especificada de incrementos o disminuciones requeriría que un iterador no inflamable (como el iterador pasado-final)se incremente,o que un iterador no inflamable (como el iterador frontal o el iterador singular)se disminuya.</target>
        </trans-unit>
        <trans-unit id="fefc04e4dd8c7088f908a5a38768eb505eba3844" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the stored pointer is null or if &lt;code&gt;idx&lt;/code&gt; is negative.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el puntero almacenado es nulo o si &lt;code&gt;idx&lt;/code&gt; es negativo.</target>
        </trans-unit>
        <trans-unit id="07d8fb77eabde35598fe8c80befa5c3efd1b6afe" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the strings overlap.</source>
          <target state="translated">El comportamiento es indefinido si las cuerdas se superponen.</target>
        </trans-unit>
        <trans-unit id="467de494ac1ab3cfba0347a44deafd4ffc902185" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the time zone pointer (initialized as described above) does not refer to a time zone.</source>
          <target state="translated">El comportamiento es indefinido si el puntero de la zona horaria (inicializado como se describe arriba)no se refiere a una zona horaria.</target>
        </trans-unit>
        <trans-unit id="e4f6e5fd0799a493d3ed5fbd1465ab009b4ab908" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the value of &lt;code&gt;ch&lt;/code&gt; is not representable as &lt;code&gt;unsigned char&lt;/code&gt; and is not equal to &lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el valor de &lt;code&gt;ch&lt;/code&gt; no es representable como &lt;code&gt;unsigned char&lt;/code&gt; y no es igual a &lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46390890d024c2fe54bd86ac81e354e42a17be4a" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the value of &lt;code&gt;ch&lt;/code&gt; is not representable as &lt;code&gt;unsigned char&lt;/code&gt; or is not equal to &lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido si el valor de &lt;code&gt;ch&lt;/code&gt; no es representable como &lt;code&gt;unsigned char&lt;/code&gt; o no es igual a &lt;code&gt;&lt;a href=&quot;../../io/c&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be24c4852e2e843d7e203b20ddb3314d5ddf20fe" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the value of &lt;code&gt;lo&lt;/code&gt; is greater than &lt;code&gt;hi&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el valor de &lt;code&gt;lo&lt;/code&gt; es mayor que &lt;code&gt;hi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4523c55aa073bbcabcbf7211d98894138b5c4a1e" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the value of &lt;code&gt;ptr&lt;/code&gt; does not equal a value returned earlier by &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt;(since C++17), or &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el valor de &lt;code&gt;ptr&lt;/code&gt; no es igual a un valor devuelto anteriormente por &lt;code&gt;&lt;a href=&quot;malloc&quot;&gt;std::malloc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;calloc&quot;&gt;std::calloc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;aligned_alloc&quot;&gt;std::aligned_alloc&lt;/a&gt;&lt;/code&gt; (desde C ++ 17) o &lt;code&gt;&lt;a href=&quot;realloc&quot;&gt;std::realloc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adacf118e6e6367d1ffb7672550f2db2bee36eb9" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if the value of the pointer &lt;code&gt;stream&lt;/code&gt; is used after &lt;code&gt;fclose&lt;/code&gt; returns.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si el valor de la &lt;code&gt;stream&lt;/code&gt; del puntero se usa despu&amp;eacute;s de que devuelve &lt;code&gt;fclose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4fc5e3be71e180961358ca48ec87dd4644a1d35" translate="yes" xml:space="preserve">
          <source>The behavior is undefined if there is no null character in the wide character array pointed to by &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido si no hay caracteres nulos en la matriz de caracteres anchos a los que apunta &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca13d3610cc8acabf5605d3450cc86e88d5a1571" translate="yes" xml:space="preserve">
          <source>The behavior is undefined unless &lt;code&gt;pred_.has_value()&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido a menos que &lt;code&gt;pred_.has_value()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9674318ad2388398bc699c0f1e758e7d7459f5e2" translate="yes" xml:space="preserve">
          <source>The behavior is undefined unless &lt;code&gt;ready() == true&lt;/code&gt;.</source>
          <target state="translated">El comportamiento es indefinido a menos que est&amp;eacute; &lt;code&gt;ready() == true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="406f2fe80d5a065bb971ef51da29f2af631a441d" translate="yes" xml:space="preserve">
          <source>The behavior is undefined unless lvalues of type &lt;code&gt;T_i&lt;/code&gt; are &lt;a href=&quot;../../named_req/swappable&quot;&gt;Swappable&lt;/a&gt; and &lt;code&gt;&lt;a href=&quot;../../types/is_move_constructible&quot;&gt;std::is_move_constructible_v&lt;/a&gt;&amp;lt;T_i&amp;gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; for all &lt;code&gt;T_i&lt;/code&gt; in &lt;code&gt;Types...&lt;/code&gt;.</source>
          <target state="translated">El comportamiento no est&amp;aacute; definido a menos lvalues de tipo &lt;code&gt;T_i&lt;/code&gt; son &lt;a href=&quot;../../named_req/swappable&quot;&gt;intercambiables&lt;/a&gt; y &lt;code&gt;&lt;a href=&quot;../../types/is_move_constructible&quot;&gt;std::is_move_constructible_v&lt;/a&gt;&amp;lt;T_i&amp;gt;&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; para todos &lt;code&gt;T_i&lt;/code&gt; en &lt;code&gt;Types...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="917418d84788b1fdd126a7e96c4addb503f82edf" translate="yes" xml:space="preserve">
          <source>The behavior may be undefined for the values of time_t that result in the string longer than 25 characters (e.g. year 10000).</source>
          <target state="translated">El comportamiento puede ser indefinido para los valores de time_t que resultan en la cadena de más de 25 caracteres (por ejemplo,el año 10000).</target>
        </trans-unit>
        <trans-unit id="2f2a15c80a11a41121cee37ced35f06f62fddb0b" translate="yes" xml:space="preserve">
          <source>The behavior of (3) when &lt;code&gt;!this-&amp;gt;ok()&lt;/code&gt; is not currently defined. It likely will be defined to return some invalid day in that case (such as &lt;code&gt;&lt;a href=&quot;../day&quot;&gt;std::chrono::day&lt;/a&gt;(0)&lt;/code&gt;).</source>
          <target state="translated">El comportamiento de (3) cuando &lt;code&gt;!this-&amp;gt;ok()&lt;/code&gt; no est&amp;aacute; definido actualmente. Es probable que se defina para devolver alg&amp;uacute;n d&amp;iacute;a no v&amp;aacute;lido en ese caso (como &lt;code&gt;&lt;a href=&quot;../day&quot;&gt;std::chrono::day&lt;/a&gt;(0)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e5b4ba4a6d915fb2e3df2c635049c6d76bc1457c" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;format&lt;/code&gt; is undefined if &lt;code&gt;ready() != true&lt;/code&gt;.</source>
          <target state="translated">El comportamiento del &lt;code&gt;format&lt;/code&gt; o no est&amp;aacute; definido si est&amp;aacute; &lt;code&gt;ready() != true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca203a86e906eeb394e7069d318a97c64eebac21" translate="yes" xml:space="preserve">
          <source>The behavior of a program is undefined if a &lt;code&gt;mutex&lt;/code&gt; is destroyed while still owned by any threads, or a thread terminates while owning a &lt;code&gt;mutex&lt;/code&gt;. The &lt;code&gt;mutex&lt;/code&gt; class satisfies all requirements of &lt;a href=&quot;../named_req/mutex&quot;&gt;Mutex&lt;/a&gt; and &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt;.</source>
          <target state="translated">El comportamiento de un programa no est&amp;aacute; definido si un &lt;code&gt;mutex&lt;/code&gt; se destruye mientras a&amp;uacute;n es propiedad de alg&amp;uacute;n subproceso, o si un subproceso termina mientras posee un &lt;code&gt;mutex&lt;/code&gt; . La clase &lt;code&gt;mutex&lt;/code&gt; satisface todos los requisitos de &lt;a href=&quot;../named_req/mutex&quot;&gt;Mutex&lt;/a&gt; y &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d637b696daf6b97a6b242ae05bf8fc254c5c107d" translate="yes" xml:space="preserve">
          <source>The behavior of a program is undefined if a &lt;code&gt;recursive_mutex&lt;/code&gt; is destroyed while still owned by some thread. The &lt;code&gt;recursive_mutex&lt;/code&gt; class satisfies all requirements of &lt;a href=&quot;../named_req/mutex&quot;&gt;Mutex&lt;/a&gt; and &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt;.</source>
          <target state="translated">El comportamiento de un programa no est&amp;aacute; definido si un &lt;code&gt;recursive_mutex&lt;/code&gt; se destruye mientras todav&amp;iacute;a es propiedad de alg&amp;uacute;n hilo. La clase &lt;code&gt;recursive_mutex&lt;/code&gt; satisface todos los requisitos de &lt;a href=&quot;../named_req/mutex&quot;&gt;Mutex&lt;/a&gt; y &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d49cad771a61588b17892aad75be8c0152d1db33" translate="yes" xml:space="preserve">
          <source>The behavior of a program that adds specializations for &lt;code&gt;is_clock&lt;/code&gt; is undefined.</source>
          <target state="translated">El comportamiento de un programa que agrega especializaciones para &lt;code&gt;is_clock&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="c62ef06b85f3980f7319fc86df63b92629337cbc" translate="yes" xml:space="preserve">
          <source>The behavior of a program that adds specializations for &lt;code&gt;std::is_execution_policy&lt;/code&gt; is undefined.</source>
          <target state="translated">El comportamiento de un programa que agrega especializaciones para &lt;code&gt;std::is_execution_policy&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="8f078fbe14df7a291d872a9486b4bd6555ed5825" translate="yes" xml:space="preserve">
          <source>The behavior of a program that attempts to compare a &lt;code&gt;partial_ordering&lt;/code&gt; with anything other than the integer literal &lt;code&gt;​0​&lt;/code&gt; is undefined.</source>
          <target state="translated">El comportamiento de un programa que intenta comparar un &lt;code&gt;partial_ordering&lt;/code&gt; con otra cosa que no sea el literal entero &lt;code&gt;​0​&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="b7ee937b20b027f674ae8d49d4264fc5e59233e5" translate="yes" xml:space="preserve">
          <source>The behavior of a program that attempts to compare a &lt;code&gt;strong_equality&lt;/code&gt; with anything other than the integer literal &lt;code&gt;​0​&lt;/code&gt; is undefined.</source>
          <target state="translated">El comportamiento de un programa que intenta comparar un &lt;code&gt;strong_equality&lt;/code&gt; con otra cosa que no sea el literal entero &lt;code&gt;​0​&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="b1b3bcf18493a49d0f0a3e38ba5ff9aa51112925" translate="yes" xml:space="preserve">
          <source>The behavior of a program that attempts to compare a &lt;code&gt;strong_ordering&lt;/code&gt; with anything other than the integer literal &lt;code&gt;​0​&lt;/code&gt; is undefined.</source>
          <target state="translated">El comportamiento de un programa que intenta comparar un &lt;code&gt;strong_ordering&lt;/code&gt; con otra cosa que no sea el literal entero &lt;code&gt;​0​&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="0d61242b78813c2cd2a1388ea1adcd3850a86e08" translate="yes" xml:space="preserve">
          <source>The behavior of a program that attempts to compare a &lt;code&gt;weak_equality&lt;/code&gt; with anything other than the integer literal &lt;code&gt;​0​&lt;/code&gt; is undefined.</source>
          <target state="translated">El comportamiento de un programa que intenta comparar un &lt;code&gt;weak_equality&lt;/code&gt; con otra cosa que no sea el literal entero &lt;code&gt;​0​&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="f409f18748c9c4847731aabfeae21ea3a47fd063" translate="yes" xml:space="preserve">
          <source>The behavior of a program that attempts to compare a &lt;code&gt;weak_ordering&lt;/code&gt; with anything other than the integer literal &lt;code&gt;​0​&lt;/code&gt; is undefined.</source>
          <target state="translated">El comportamiento de un programa que intenta comparar un &lt;code&gt;weak_ordering&lt;/code&gt; con otra cosa que no sea el literal entero &lt;code&gt;​0​&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="5b94d39763b7ebd91bb01eceb89eba346e398751" translate="yes" xml:space="preserve">
          <source>The behavior of every builtin compound-assignment expression &lt;code&gt;E1 op= E2&lt;/code&gt; (where E1 is a modifiable lvalue expression and E2 is an rvalue expression or a</source>
          <target state="translated">El comportamiento de cada expresi&amp;oacute;n de asignaci&amp;oacute;n compuesta integrada &lt;code&gt;E1 op= E2&lt;/code&gt; (donde E1 es una expresi&amp;oacute;n de valor modificable y E2 es una expresi&amp;oacute;n de valor o un</target>
        </trans-unit>
        <trans-unit id="e6954be3777df41717ca04669e7dc00a5a0665f5" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;code&gt;&lt;a href=&quot;../utility/variadic/va_start&quot;&gt;va_start&lt;/a&gt;&lt;/code&gt; macro is undefined if the last parameter before the ellipsis has reference type, or has type that is not compatible with the type that results from default argument promotions.</source>
          <target state="translated">El comportamiento de la macro &lt;code&gt;&lt;a href=&quot;../utility/variadic/va_start&quot;&gt;va_start&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; definido si el &amp;uacute;ltimo par&amp;aacute;metro antes de los puntos suspensivos tiene un tipo de referencia o un tipo que no es compatible con el tipo que resulta de las promociones de argumento predeterminadas.</target>
        </trans-unit>
        <trans-unit id="8074475f951313711bd97c915bb6378866643af6" translate="yes" xml:space="preserve">
          <source>The behavior of the program is undefined if any of the three pragmas above appear in any context other than outside all external declarations or preceding all explicit declarations and statements inside a compound statement.</source>
          <target state="translated">El comportamiento del programa es indefinido si cualquiera de los tres pragmas anteriores aparece en cualquier contexto que no sea fuera de todas las declaraciones externas o que preceda a todas las declaraciones y afirmaciones explícitas dentro de una declaración compuesta.</target>
        </trans-unit>
        <trans-unit id="9bc2f5dca6b44b3d5ac638731b105153f018e41b" translate="yes" xml:space="preserve">
          <source>The behavior of these functions is undefined unless the corresponding cast from &lt;code&gt;U*&lt;/code&gt; to &lt;code&gt;T*&lt;/code&gt; is well formed:</source>
          <target state="translated">El comportamiento de estas funciones no est&amp;aacute; definido a menos que la conversi&amp;oacute;n correspondiente de &lt;code&gt;U*&lt;/code&gt; a &lt;code&gt;T*&lt;/code&gt; est&amp;eacute; bien formada:</target>
        </trans-unit>
        <trans-unit id="09e007f07c00729f2bd588f5cb9fcab293788a91" translate="yes" xml:space="preserve">
          <source>The behavior of these functions is undefined unless:</source>
          <target state="translated">El comportamiento de estas funciones no está definido a menos que:</target>
        </trans-unit>
        <trans-unit id="2d1872e5d43013c5012c32fbca7899bc44f2512b" translate="yes" xml:space="preserve">
          <source>The behavior of this function is equivalent to &lt;code&gt;&lt;a href=&quot;log&quot;&gt;std::log&lt;/a&gt;(z)/&lt;a href=&quot;../math/log&quot;&gt;std::log&lt;/a&gt;(T(10))&lt;/code&gt;.</source>
          <target state="translated">El comportamiento de esta funci&amp;oacute;n es equivalente a &lt;code&gt;&lt;a href=&quot;log&quot;&gt;std::log&lt;/a&gt;(z)/&lt;a href=&quot;../math/log&quot;&gt;std::log&lt;/a&gt;(T(10))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e78658dc32dbfdd3ab57b055b36ff50a24fbe1eb" translate="yes" xml:space="preserve">
          <source>The behavior of this function is highly implementation-specific. For example, when used with &lt;code&gt;&lt;a href=&quot;../basic_ifstream&quot;&gt;std::ifstream&lt;/a&gt;&lt;/code&gt;, some library implementations fill the underlying filebuf with data as soon as the file is opened (and readsome() on such implementations reads data, potentially, but not necessarily, the entire file), while other implementations only read from file when an actual input operation is requested (and readsome() issued after file opening never extracts any characters). Likewise, a call to &lt;code&gt;&lt;a href=&quot;../cin&quot;&gt;std::cin&lt;/a&gt;.readsome()&lt;/code&gt; may return all pending unprocessed console input, or may always return zero and extract no characters.</source>
          <target state="translated">El comportamiento de esta funci&amp;oacute;n es altamente espec&amp;iacute;fico de la implementaci&amp;oacute;n. Por ejemplo, cuando se usa con &lt;code&gt;&lt;a href=&quot;../basic_ifstream&quot;&gt;std::ifstream&lt;/a&gt;&lt;/code&gt; , algunas implementaciones de la biblioteca llenan el archivo subyacente con datos tan pronto como se abre el archivo (y readsome () en tales implementaciones lee datos, potencialmente, pero no necesariamente, el archivo completo), mientras que otras implementaciones solo leen del archivo cuando se solicita una operaci&amp;oacute;n de entrada real (y readsome () emitido despu&amp;eacute;s de abrir el archivo nunca extrae ning&amp;uacute;n car&amp;aacute;cter). Del mismo modo, una llamada a &lt;code&gt;&lt;a href=&quot;../cin&quot;&gt;std::cin&lt;/a&gt;.readsome()&lt;/code&gt; puede devolver toda la entrada de consola sin procesar pendiente, o siempre puede devolver cero y no extraer caracteres.</target>
        </trans-unit>
        <trans-unit id="758a6e7c6a9e16cd02a8726a32f107929f57f9bd" translate="yes" xml:space="preserve">
          <source>The behaviour is undefined when the two arguments are valarrays with different sizes.</source>
          <target state="translated">El comportamiento es indefinido cuando los dos argumentos son valarrays de diferentes tamaños.</target>
        </trans-unit>
        <trans-unit id="c08434d32154e6b925a05a299485361cd8506034" translate="yes" xml:space="preserve">
          <source>The binary additive arithmetic operator expressions have the form.</source>
          <target state="translated">Las expresiones del operador aritmético aditivo binario tienen la forma.</target>
        </trans-unit>
        <trans-unit id="7176da4edb44fdfb24d715e7d3669be25b36085b" translate="yes" xml:space="preserve">
          <source>The binary multiplicative arithmetic operator expressions have the form.</source>
          <target state="translated">Las expresiones del operador aritmético binario multiplicativo tienen la forma.</target>
        </trans-unit>
        <trans-unit id="d1d70c467c5191ec0088e791afe7de4cb3b6b3ea" translate="yes" xml:space="preserve">
          <source>The binary operator % yields the remainder of the integer division of the first operand by the second (after usual arithmetic conversions; note that the operand types must be integral types). If the quotient &lt;code&gt;a/b&lt;/code&gt; is representable in the result type, &lt;code&gt;(a/b)*b + a%b == a&lt;/code&gt;. If the second operand is zero, the behavior is undefined. If the quotient &lt;code&gt;a/b&lt;/code&gt; is not representable in the result type, the behavior of both &lt;code&gt;a/b&lt;/code&gt; and &lt;code&gt;a%b&lt;/code&gt; is undefined (that means &lt;code&gt;INT_MIN%-1&lt;/code&gt; is undefined on 2's complement systems).</source>
          <target state="translated">El operador binario% produce el resto de la divisi&amp;oacute;n entera del primer operando por el segundo (despu&amp;eacute;s de las conversiones aritm&amp;eacute;ticas habituales; tenga en cuenta que los tipos de operando deben ser tipos integrales). Si el cociente &lt;code&gt;a/b&lt;/code&gt; es representable en el tipo de resultado, &lt;code&gt;(a/b)*b + a%b == a&lt;/code&gt; . Si el segundo operando es cero, el comportamiento es indefinido. Si el cociente &lt;code&gt;a/b&lt;/code&gt; no es representable en el tipo de resultado, el comportamiento de &lt;code&gt;a/b&lt;/code&gt; y &lt;code&gt;a%b&lt;/code&gt; no est&amp;aacute; definido (eso significa que &lt;code&gt;INT_MIN%-1&lt;/code&gt; no est&amp;aacute; definido en los sistemas complementarios de 2).</target>
        </trans-unit>
        <trans-unit id="90b1bb5e76b233c8735f62c8c50b711347fc46d8" translate="yes" xml:space="preserve">
          <source>The binary operator * performs multiplication of its operands (after usual arithmetic conversions), except that, for floating-point multiplication,</source>
          <target state="translated">El operador binario*realiza la multiplicación de sus operandos (después de las conversiones aritméticas habituales),excepto en el caso de la multiplicación en coma flotante,</target>
        </trans-unit>
        <trans-unit id="d7a4dafd592df3f084192d6d03e8e8be221a2756" translate="yes" xml:space="preserve">
          <source>The binary operator / divides the first operand by the second (after usual arithmetic conversions).</source>
          <target state="translated">El operador binario/divide el primer operando por el segundo (después de las conversiones aritméticas habituales).</target>
        </trans-unit>
        <trans-unit id="c4683b3a303b5dfbbf64b647e53044a1b9f6fca7" translate="yes" xml:space="preserve">
          <source>The binary predicate type must define two member types, &lt;code&gt;first_argument_type&lt;/code&gt; and &lt;code&gt;second_argument_type&lt;/code&gt;, that are convertible to the predicate's parameter types. The function objects obtained from &lt;code&gt;&lt;a href=&quot;../../memory/owner_less&quot;&gt;std::owner_less&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::bit_xor&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mem_fn&quot;&gt;std::mem_fn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../container/map/value_comp&quot;&gt;std::map::value_comp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../container/multimap/value_comp&quot;&gt;std::multimap::value_comp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;, or from a call to &lt;code&gt;&lt;a href=&quot;not2&quot;&gt;std::not2&lt;/a&gt;&lt;/code&gt; have these types defined, as are function objects derived from the deprecated &lt;code&gt;&lt;a href=&quot;binary_function&quot;&gt;std::binary_function&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El tipo de predicado binario debe definir dos tipos de miembros, &lt;code&gt;first_argument_type&lt;/code&gt; y &lt;code&gt;second_argument_type&lt;/code&gt; , que son convertibles a los tipos de par&amp;aacute;metros del predicado. Los objetos de funci&amp;oacute;n obtenidos de &lt;code&gt;&lt;a href=&quot;../../memory/owner_less&quot;&gt;std::owner_less&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;std::bit_xor&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mem_fn&quot;&gt;std::mem_fn&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../container/map/value_comp&quot;&gt;std::map::value_comp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../container/multimap/value_comp&quot;&gt;std::multimap::value_comp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; , o desde una La llamada a &lt;code&gt;&lt;a href=&quot;not2&quot;&gt;std::not2&lt;/a&gt;&lt;/code&gt; tiene estos tipos definidos, al igual que los objetos de funci&amp;oacute;n derivados de &lt;code&gt;&lt;a href=&quot;binary_function&quot;&gt;std::binary_function&lt;/a&gt;&lt;/code&gt; desuso .</target>
        </trans-unit>
        <trans-unit id="3e74ca064fe8afd8f7fd74a0aad91022a0b4b633" translate="yes" xml:space="preserve">
          <source>The binary predicate type must define two member types, &lt;code&gt;first_argument_type&lt;/code&gt; and &lt;code&gt;second_argument_type&lt;/code&gt;, that are convertible to the predicate's parameter types. The function objects obtained from &lt;code&gt;&lt;a href=&quot;../../memory/owner_less&quot;&gt;std::owner_less&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::bit_xor&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mem_fn&quot;&gt;std::mem_fn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;std::map::value_comp&lt;/code&gt;, &lt;code&gt;std::multimap::value_comp&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt;, or from another call to &lt;code&gt;std::not2&lt;/code&gt; have these types defined, as are function objects derived from the deprecated &lt;code&gt;&lt;a href=&quot;binary_function&quot;&gt;std::binary_function&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El tipo de predicado binario debe definir dos tipos de miembros, &lt;code&gt;first_argument_type&lt;/code&gt; y &lt;code&gt;second_argument_type&lt;/code&gt; , que son convertibles a los tipos de par&amp;aacute;metros del predicado. Los objetos de funci&amp;oacute;n obtenidos de &lt;code&gt;&lt;a href=&quot;../../memory/owner_less&quot;&gt;std::owner_less&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::ref&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;std::cref&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;plus&quot;&gt;std::plus&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;minus&quot;&gt;std::minus&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;multiplies&quot;&gt;std::multiplies&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;divides&quot;&gt;std::divides&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;modulus&quot;&gt;std::modulus&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;equal_to&quot;&gt;std::equal_to&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;not_equal_to&quot;&gt;std::not_equal_to&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;greater&quot;&gt;std::greater&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;less&quot;&gt;std::less&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;greater_equal&quot;&gt;std::greater_equal&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;less_equal&quot;&gt;std::less_equal&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;logical_not&quot;&gt;std::logical_not&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;logical_or&quot;&gt;std::logical_or&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;bit_and&quot;&gt;std::bit_and&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;bit_or&quot;&gt;std::bit_or&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;std::bit_xor&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mem_fn&quot;&gt;std::mem_fn&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;std::map::value_comp&lt;/code&gt; , &lt;code&gt;std::multimap::value_comp&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; , o desde otro La llamada a &lt;code&gt;std::not2&lt;/code&gt; tiene estos tipos definidos, al igual que los objetos de funci&amp;oacute;n derivados de &lt;code&gt;&lt;a href=&quot;binary_function&quot;&gt;std::binary_function&lt;/a&gt;&lt;/code&gt; desuso .</target>
        </trans-unit>
        <trans-unit id="effff8b4f81bd6ea12cc6ac7cfd98223d06e7f20" translate="yes" xml:space="preserve">
          <source>The bitmask representing the character classification determined by the given character class, or &lt;code&gt;char_class_type()&lt;/code&gt; if the class is unknown.</source>
          <target state="translated">La m&amp;aacute;scara de bits que representa la clasificaci&amp;oacute;n de caracteres determinada por la clase de caracteres dada, o &lt;code&gt;char_class_type()&lt;/code&gt; si la clase es desconocida.</target>
        </trans-unit>
        <trans-unit id="100851a34642290acbb870e0a5584e24eb5ee801" translate="yes" xml:space="preserve">
          <source>The bitmask type supports a finite number of bitmask elements, which are distinct non-zero values of the bitmask type, such that, for any pair Ci and Cj, &lt;code&gt;Ci &amp;amp; Ci&lt;/code&gt; is nonzero and &lt;code&gt;Ci &amp;amp; Cj&lt;/code&gt; is zero. In addition, the value &lt;code&gt;0&lt;/code&gt; is used to represent an empty bitmask, with no values set.</source>
          <target state="translated">El tipo de m&amp;aacute;scara de bits admite un n&amp;uacute;mero finito de elementos de m&amp;aacute;scara de bits, que son valores distintos de cero del tipo de m&amp;aacute;scara de bits, de modo que, para cualquier par Ci y Cj, &lt;code&gt;Ci &amp;amp; Ci&lt;/code&gt; son distintos de cero y &lt;code&gt;Ci &amp;amp; Cj&lt;/code&gt; son cero. Adem&amp;aacute;s, el valor &lt;code&gt;0&lt;/code&gt; se usa para representar una m&amp;aacute;scara de bits vac&amp;iacute;a, sin valores establecidos.</target>
        </trans-unit>
        <trans-unit id="c9b53aa8540cf3072f1caa4828d4f3227016694d" translate="yes" xml:space="preserve">
          <source>The bitwise arithmetic operator expressions have the form.</source>
          <target state="translated">Las expresiones de operador aritmético bituminoso tienen la forma.</target>
        </trans-unit>
        <trans-unit id="369d078387439db964ec186ce1ea0b0074753233" translate="yes" xml:space="preserve">
          <source>The bitwise operators &lt;code&gt;operator&amp;amp;&lt;/code&gt;, &lt;code&gt;operator|&lt;/code&gt;, &lt;code&gt;operator^&lt;/code&gt;, &lt;code&gt;operator~&lt;/code&gt;, &lt;code&gt;operator&amp;amp;=&lt;/code&gt;, &lt;code&gt;operator|=&lt;/code&gt;, and &lt;code&gt;operator^=&lt;/code&gt; are defined for values of the bitmask type and have the same semantics as the corresponding built-in operators on unsigned integers would have if the bitmask elements were the distinct integer powers of two.</source>
          <target state="translated">Los operadores bit a bit operador &lt;code&gt;operator&amp;amp;&lt;/code&gt; , &lt;code&gt;operator|&lt;/code&gt; , &lt;code&gt;operator^&lt;/code&gt; , &lt;code&gt;operator~&lt;/code&gt; , &lt;code&gt;operator&amp;amp;=&lt;/code&gt; , &lt;code&gt;operator|=&lt;/code&gt; , y &lt;code&gt;operator^=&lt;/code&gt; est&amp;aacute;n definidos para valores del tipo de m&amp;aacute;scara de bits y tienen la misma sem&amp;aacute;ntica que tendr&amp;iacute;an los operadores integrados correspondientes en enteros sin signo si los elementos de la m&amp;aacute;scara de bits fueran distintos potencias enteras de dos.</target>
        </trans-unit>
        <trans-unit id="b023ae87ef451cdf626ad0291435d5b825d5fd03" translate="yes" xml:space="preserve">
          <source>The bitwise shift operator expressions have the form.</source>
          <target state="translated">Las expresiones del operador de cambio de bits tienen la forma.</target>
        </trans-unit>
        <trans-unit id="7ca1ed96156947db52e3afd7acb31f7ff0f939a2" translate="yes" xml:space="preserve">
          <source>The body of a &lt;a href=&quot;function&quot;&gt;function definition&lt;/a&gt; of any constructor, before the opening brace of the compound statement, may include the</source>
          <target state="translated">El cuerpo de una &lt;a href=&quot;function&quot;&gt;definici&amp;oacute;n&lt;/a&gt; de funci&amp;oacute;n de cualquier constructor, antes de la llave de apertura de la declaraci&amp;oacute;n compuesta, puede incluir el</target>
        </trans-unit>
        <trans-unit id="7060cde55d88c14aaece02d89a680f9d4f458298" translate="yes" xml:space="preserve">
          <source>The body of a switch statement may have an arbitrary number of &lt;code&gt;case:&lt;/code&gt; labels, as long as the values of all constant_expressions are unique (after conversions/promotions). At most one &lt;code&gt;default:&lt;/code&gt; label may be present (although nested switch statements may use their own &lt;code&gt;default:&lt;/code&gt; labels or have &lt;code&gt;case:&lt;/code&gt; labels whose constants are identical to the ones used in the enclosing switch).</source>
          <target state="translated">El cuerpo de una declaraci&amp;oacute;n de cambio puede tener un n&amp;uacute;mero arbitrario de &lt;code&gt;case:&lt;/code&gt; etiquetas, siempre que los valores de todas las expresiones constantes sean &amp;uacute;nicos (despu&amp;eacute;s de las conversiones / promociones). Como m&amp;aacute;ximo , puede estar presente una etiqueta &lt;code&gt;default:&lt;/code&gt; aunque las instrucciones de interruptor anidadas pueden usar su propia etiqueta &lt;code&gt;default:&lt;/code&gt; etiquetas o &lt;code&gt;case:&lt;/code&gt; etiquetas cuyas constantes son id&amp;eacute;nticas a las que se usan en el interruptor envolvente).</target>
        </trans-unit>
        <trans-unit id="fd894a48420a86ae1a785a1f4f06ed146adeaad1" translate="yes" xml:space="preserve">
          <source>The body of the main function</source>
          <target state="translated">El cuerpo de la función principal</target>
        </trans-unit>
        <trans-unit id="4d4e808b1a94155a447d2ba6b8aae0ce2aed1e13" translate="yes" xml:space="preserve">
          <source>The boolean logic operators, &lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;operator||&lt;/code&gt;. Unlike the built-in versions, the overloads cannot implement short-circuit evaluation. Also unlike the built-in versions, they do not sequence their left operand before the right one.(until C++17) In the standard library, these operators are only overloaded for &lt;code&gt;&lt;a href=&quot;../numeric/valarray&quot;&gt;std::valarray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los operadores l&amp;oacute;gicos booleanos, &lt;code&gt;operator&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;operator||&lt;/code&gt; . A diferencia de las versiones integradas, las sobrecargas no pueden implementar la evaluaci&amp;oacute;n de cortocircuito. Adem&amp;aacute;s, a diferencia de las versiones integradas, no secuencian su operando izquierdo antes que el derecho (hasta C ++ 17) En la biblioteca est&amp;aacute;ndar, estos operadores solo est&amp;aacute;n sobrecargados para &lt;code&gt;&lt;a href=&quot;../numeric/valarray&quot;&gt;std::valarray&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be9b5d4b5d4c705cb17f7416c8fc4ab7e8cb9ee5" translate="yes" xml:space="preserve">
          <source>The boolean result of the comparison as described above.</source>
          <target state="translated">El resultado booleano de la comparación como se ha descrito anteriormente.</target>
        </trans-unit>
        <trans-unit id="ecf2e3902eed13149644949cf013da30e0846854" translate="yes" xml:space="preserve">
          <source>The braces of the language specification do not establish a scope.</source>
          <target state="translated">Los corchetes de la especificación del lenguaje no establecen un alcance.</target>
        </trans-unit>
        <trans-unit id="ea016ec910e6873dfc79ae24437a3c519704144a" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;operator&amp;gt;&lt;/code&gt; for floating-point numbers may set &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; if one or both of the arguments is NaN. This function is a &quot;quiet&quot; version of &lt;code&gt;operator&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;operator&amp;gt;&lt;/code&gt; incorporado &amp;gt; para n&amp;uacute;meros de punto flotante puede establecer &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; si uno o ambos argumentos es NaN. Esta funci&amp;oacute;n es una versi&amp;oacute;n &quot;silenciosa&quot; del &lt;code&gt;operator&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bd808c844289be1c901eea1e57131ddc87294a7" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;operator&amp;gt;=&lt;/code&gt; for floating-point numbers may raise &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; if one or both of the arguments is NaN. This function is a &quot;quiet&quot; version of &lt;code&gt;operator&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;operator&amp;gt;=&lt;/code&gt; incorporado &amp;gt; = para n&amp;uacute;meros de punto flotante puede aumentar &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; si uno o ambos argumentos es NaN. Esta funci&amp;oacute;n es una versi&amp;oacute;n &quot;silenciosa&quot; del &lt;code&gt;operator&amp;gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63fa125b7f1d723b624671e912e92993b1585ff7" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;operator&amp;lt;&lt;/code&gt; and &lt;code&gt;operator&amp;gt;&lt;/code&gt; for floating-point numbers may raise &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; if one or both of the arguments is NaN. This function is a &quot;quiet&quot; version of the expression &lt;code&gt;x &amp;lt; y || x &amp;gt; y&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;operator&amp;lt;&lt;/code&gt; incorporado &amp;lt; y el &lt;code&gt;operator&amp;gt;&lt;/code&gt; para n&amp;uacute;meros de coma flotante pueden aumentar &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; si uno o ambos argumentos es NaN. Esta funci&amp;oacute;n es una versi&amp;oacute;n &quot;silenciosa&quot; de la expresi&amp;oacute;n &lt;code&gt;x &amp;lt; y || x &amp;gt; y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac907543c60c06a9a51c071f27b11749c7308d57" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;operator&amp;lt;&lt;/code&gt; for floating-point numbers may raise &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; if one or both of the arguments is NaN. This function is a &quot;quiet&quot; version of &lt;code&gt;operator&amp;lt;&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;operator&amp;lt;&lt;/code&gt; incorporado &amp;lt; para n&amp;uacute;meros de punto flotante puede aumentar &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; si uno o ambos argumentos es NaN. Esta funci&amp;oacute;n es una versi&amp;oacute;n &quot;silenciosa&quot; del &lt;code&gt;operator&amp;lt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55246b361f4bd424491e57d0679d399ec77fce75" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;operator&amp;lt;=&lt;/code&gt; for floating-point numbers may raise &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; if one or both of the arguments is NaN. This function is a &quot;quiet&quot; version of &lt;code&gt;operator&amp;lt;=&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;operator&amp;lt;=&lt;/code&gt; incorporado &amp;lt;= para n&amp;uacute;meros de punto flotante puede aumentar &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; si uno o ambos argumentos es NaN. Esta funci&amp;oacute;n es una versi&amp;oacute;n &quot;silenciosa&quot; del &lt;code&gt;operator&amp;lt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f5fbdb85b383f1652e18638359a36e108ea3a07" translate="yes" xml:space="preserve">
          <source>The built-in subscript expression &lt;code&gt;E1[E2]&lt;/code&gt; is exactly identical to the expression &lt;code&gt;*(E1 + E2)&lt;/code&gt; except &lt;a href=&quot;eval_order&quot;&gt;evaluation order&lt;/a&gt;(since C++17), that is, the pointer operand (which may be a result of array-to-pointer conversion, and which must point to an element of some array or one past the end) is adjusted to point to another element of the same array, following the rules of &lt;a href=&quot;operator_arithmetic&quot;&gt;pointer arithmetics&lt;/a&gt;, and is then dereferenced.</source>
          <target state="translated">La expresi&amp;oacute;n de sub&amp;iacute;ndice incorporada &lt;code&gt;E1[E2]&lt;/code&gt; es exactamente id&amp;eacute;ntica a la expresi&amp;oacute;n &lt;code&gt;*(E1 + E2)&lt;/code&gt; excepto el &lt;a href=&quot;eval_order&quot;&gt;orden de evaluaci&amp;oacute;n&lt;/a&gt; (desde C ++ 17), es decir, el operando del puntero (que puede ser el resultado de una matriz a la conversi&amp;oacute;n del puntero, y que debe apuntar a un elemento de una matriz o una m&amp;aacute;s all&amp;aacute; del final) se ajusta para apuntar a otro elemento de la misma matriz, siguiendo las reglas de la &lt;a href=&quot;operator_arithmetic&quot;&gt;aritm&amp;eacute;tica&lt;/a&gt; del puntero , y luego se desreferencia.</target>
        </trans-unit>
        <trans-unit id="dad1ba0648301ebf8046390e4a32c1f9873801f7" translate="yes" xml:space="preserve">
          <source>The built-in unary plus operator returns the value of its operand. The only situation where it is not a no-op is when the operand has integral type or unscoped enumeration type, which is changed by integral promotion, e.g, it converts &lt;code&gt;char&lt;/code&gt; to &lt;code&gt;int&lt;/code&gt; or if the operand is subject to lvalue-to-rvalue, array-to-pointer, or function-to-pointer conversion.</source>
          <target state="translated">El operador unario plus incorporado devuelve el valor de su operando. La &amp;uacute;nica situaci&amp;oacute;n en la que no es un no-op es cuando el operando tiene un tipo integral o un tipo de enumeraci&amp;oacute;n sin &amp;aacute;mbito, que se cambia por promoci&amp;oacute;n integral, por ejemplo, convierte &lt;code&gt;char&lt;/code&gt; a &lt;code&gt;int&lt;/code&gt; o si el operando est&amp;aacute; sujeto a lvalue-to-rvalue, conversi&amp;oacute;n de matriz a puntero o funci&amp;oacute;n a puntero.</target>
        </trans-unit>
        <trans-unit id="04d132ee6ec1ba9ecfd11952d40819b6ddf5709f" translate="yes" xml:space="preserve">
          <source>The builtin unary minus operator calculates the negative of its promoted operand. For unsigned &lt;code&gt;a&lt;/code&gt;, the value of &lt;code&gt;-a&lt;/code&gt; is 2b</source>
          <target state="translated">El operador menos unario incorporado calcula el negativo de su operando promocionado. Para a sin signo &lt;code&gt;a&lt;/code&gt; , el valor de &lt;code&gt;-a&lt;/code&gt; es 2b</target>
        </trans-unit>
        <trans-unit id="5b0dd408f6ab2c6addd6c06732e19880156ebd2e" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;std::nan(&quot;&quot;)&lt;/code&gt; is equivalent to the call &lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;(&quot;NAN()&quot;, (char**)nullptr);&lt;/code&gt;.</source>
          <target state="translated">La llamada &lt;code&gt;std::nan(&quot;&quot;)&lt;/code&gt; es equivalente a la llamada &lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;(&quot;NAN()&quot;, (char**)nullptr);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7567df6e5bfc77fb6213d590212bee2233bcb69a" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;std::nan(&quot;n-char-sequence&quot;)&lt;/code&gt;, where &lt;code&gt;n-char-sequence&lt;/code&gt; is a sequence of digits, Latin letters, and underscores, is equivalent to the call &lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;(&quot;NAN(n-char-sequence)&quot;, (char**)nullptr);&lt;/code&gt;.</source>
          <target state="translated">La llamada &lt;code&gt;std::nan(&quot;n-char-sequence&quot;)&lt;/code&gt; , donde &lt;code&gt;n-char-sequence&lt;/code&gt; es una secuencia de d&amp;iacute;gitos, letras latinas y guiones bajos, es equivalente a la llamada &lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;(&quot;NAN(n-char-sequence)&quot;, (char**)nullptr);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bb18577641139ae5227c7592e36b1c655fd5a87" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;std::nan(&quot;string&quot;)&lt;/code&gt;, where &lt;code&gt;string&lt;/code&gt; is neither an n-char-sequence nor an empty string, is equivalent to the call &lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;(&quot;NAN&quot;, (char**)nullptr);&lt;/code&gt;.</source>
          <target state="translated">La llamada &lt;code&gt;std::nan(&quot;string&quot;)&lt;/code&gt; , donde &lt;code&gt;string&lt;/code&gt; no es una secuencia n-char ni una cadena vac&amp;iacute;a, es equivalente a la llamada &lt;code&gt;&lt;a href=&quot;../../string/byte/strtof&quot;&gt;std::strtod&lt;/a&gt;(&quot;NAN&quot;, (char**)nullptr);&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5ff4abb5e0ea3aa7864a0b18b7e95fdf8974f33" translate="yes" xml:space="preserve">
          <source>The call is equivalent to &lt;code&gt;(*this)[n].length()&lt;/code&gt;.</source>
          <target state="translated">La llamada es equivalente a &lt;code&gt;(*this)[n].length()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd2e2ab41b6da2e04d11a8d565e0c040634df556" translate="yes" xml:space="preserve">
          <source>The call is equivalent to &lt;code&gt;string_type((*this)[n])&lt;/code&gt;;</source>
          <target state="translated">La llamada es equivalente a &lt;code&gt;string_type((*this)[n])&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="f8539f22fc056117494fbef42d83b731614e0acf" translate="yes" xml:space="preserve">
          <source>The call modifies the pending recursion flag on the iterator in such a way that the next time &lt;a href=&quot;increment&quot;&gt;&lt;code&gt;increment&lt;/code&gt;&lt;/a&gt; is called, the iterator will advance within the current directly even if it is currently referring to a subdirectory that hasn't been visited.</source>
          <target state="translated">La llamada modifica el indicador de recursi&amp;oacute;n pendiente en el iterador de tal manera que la pr&amp;oacute;xima vez que se llame el &lt;a href=&quot;increment&quot;&gt; &lt;code&gt;increment&lt;/code&gt; o&lt;/a&gt; , el iterador avanzar&amp;aacute; directamente dentro de la corriente incluso si actualmente se refiere a un subdirectorio que no ha sido visitado.</target>
        </trans-unit>
        <trans-unit id="534dac31ce734bf4cbcd27cdcaefba61f04409b9" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; can be optimized out (even if custom allocator is used) if.</source>
          <target state="translated">La llamada al &lt;code&gt;&lt;a href=&quot;../memory/new/operator_new&quot;&gt;operator new&lt;/a&gt;&lt;/code&gt; se puede optimizar (incluso si se usa un asignador personalizado) si.</target>
        </trans-unit>
        <trans-unit id="9f89a83188d1d3b695f6bf3795b5c9bc24c27ae3" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;&lt;a href=&quot;freeze&quot;&gt;freeze()&lt;/a&gt;&lt;/code&gt; guarantees that the returned pointer remains valid until the next explicit call to &lt;code&gt;freeze(false)&lt;/code&gt;: otherwise (on a dynamic buffer) any output operation could trigger buffer reallocation which would invalidate the pointer. It also causes a memory leak in the destructor of &lt;code&gt;std::strstreambuf&lt;/code&gt;, unless &lt;code&gt;freeze(false)&lt;/code&gt; is called before the buffer (or, more commonly, the &lt;code&gt;&lt;a href=&quot;../strstream&quot;&gt;std::strstream&lt;/a&gt;&lt;/code&gt; that manages it) is destroyed.</source>
          <target state="translated">La llamada a &lt;code&gt;&lt;a href=&quot;freeze&quot;&gt;freeze()&lt;/a&gt;&lt;/code&gt; garantiza que el puntero devuelto siga siendo v&amp;aacute;lido hasta la pr&amp;oacute;xima llamada expl&amp;iacute;cita a &lt;code&gt;freeze(false)&lt;/code&gt; : de lo contrario (en un b&amp;uacute;fer din&amp;aacute;mico) cualquier operaci&amp;oacute;n de salida podr&amp;iacute;a desencadenar la reasignaci&amp;oacute;n del b&amp;uacute;fer que invalidar&amp;iacute;a el puntero. Tambi&amp;eacute;n causa una p&amp;eacute;rdida de memoria en el destructor de &lt;code&gt;std::strstreambuf&lt;/code&gt; , a menos que se llame a &lt;code&gt;freeze(false)&lt;/code&gt; antes de que se destruya el b&amp;uacute;fer (o, m&amp;aacute;s com&amp;uacute;nmente, el &lt;code&gt;&lt;a href=&quot;../strstream&quot;&gt;std::strstream&lt;/a&gt;&lt;/code&gt; que lo administra).</target>
        </trans-unit>
        <trans-unit id="e94bc704a1f2a718446c9b31af0e5fa96d1fb293" translate="yes" xml:space="preserve">
          <source>The call to the class-specific &lt;code&gt;T::operator delete&lt;/code&gt; on a polymorphic class is the only case where a static member function is called through dynamic dispatch.</source>
          <target state="translated">La llamada a la &lt;code&gt;T::operator delete&lt;/code&gt; espec&amp;iacute;fico de la clase en una clase polim&amp;oacute;rfica es el &amp;uacute;nico caso en el que se llama a una funci&amp;oacute;n miembro est&amp;aacute;tica a trav&amp;eacute;s del despacho din&amp;aacute;mico.</target>
        </trans-unit>
        <trans-unit id="efdb0b51b48b9bcd6bb30a4d0b0da24f53593e93" translate="yes" xml:space="preserve">
          <source>The callbacks are called in the reverse order of registration (in other words, &lt;code&gt;register_callback()&lt;/code&gt; pushes a callback pair on the callback stack). If &lt;code&gt;register_callback()&lt;/code&gt; is called from within a callback function to add a new callback, the new callback is only called on the next event.</source>
          <target state="translated">Las devoluciones de llamada se llaman en el orden inverso del registro (en otras palabras, &lt;code&gt;register_callback()&lt;/code&gt; empuja un par de devoluci&amp;oacute;n de llamada en la pila de devoluci&amp;oacute;n de llamada). Si se llama a &lt;code&gt;register_callback()&lt;/code&gt; desde una funci&amp;oacute;n de devoluci&amp;oacute;n de llamada para agregar una nueva devoluci&amp;oacute;n de llamada, la nueva devoluci&amp;oacute;n de llamada solo se llama en el pr&amp;oacute;ximo evento.</target>
        </trans-unit>
        <trans-unit id="2f897118aebcd041bc3c35c8035c63c94fdfec84" translate="yes" xml:space="preserve">
          <source>The canonical copy-assignment operator is expected to &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#c62-make-copy-assignment-safe-for-self-assignment&quot;&gt;perform no action on self-assignment&lt;/a&gt;, and to return the lhs by reference:</source>
          <target state="translated">Se espera que el operador de asignaci&amp;oacute;n de copia can&amp;oacute;nica &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#c62-make-copy-assignment-safe-for-self-assignment&quot;&gt;no realice ninguna acci&amp;oacute;n en la autoasignaci&amp;oacute;n&lt;/a&gt; y que devuelva el lhs por referencia:</target>
        </trans-unit>
        <trans-unit id="ec5078dd7a065edc2083fa12ace4434f4c0077ba" translate="yes" xml:space="preserve">
          <source>The canonical move assignment is expected to &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#c64-a-move-operation-should-move-and-leave-its-source-in-a-valid-state&quot;&gt;leave the moved-from object in valid state&lt;/a&gt; (that is, a state with class invariants intact), and either &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#c65-make-move-assignment-safe-for-self-assignment&quot;&gt;do nothing&lt;/a&gt; or at least leave the object in a valid state on self-assignment, and return the lhs by reference to non-const, and be noexcept:</source>
          <target state="translated">Se espera que la asignaci&amp;oacute;n de movimiento can&amp;oacute;nico &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#c64-a-move-operation-should-move-and-leave-its-source-in-a-valid-state&quot;&gt;deje el objeto movido desde en estado v&amp;aacute;lido&lt;/a&gt; (es decir, un estado con invariantes de clase intactos), y no &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#c65-make-move-assignment-safe-for-self-assignment&quot;&gt;haga nada&lt;/a&gt; o al menos deje el objeto en un estado v&amp;aacute;lido en la autoasignaci&amp;oacute;n, y devuelva el Por referencia a non-const, y no sea excepto:</target>
        </trans-unit>
        <trans-unit id="28df12d743e66354dc16272de0483a1adb821f60" translate="yes" xml:space="preserve">
          <source>The captures is a comma-separated list of zero or more</source>
          <target state="translated">Las capturas son una lista separada por comas de cero o más</target>
        </trans-unit>
        <trans-unit id="13cf37550f6560dbfd18d33f41b7e0c3128acf14" translate="yes" xml:space="preserve">
          <source>The case where the argument is infinite is not specified to be a domain error in C (to which C++ defers), but it is defined as a &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/sin.html&quot;&gt;domain error in POSIX&lt;/a&gt;.</source>
          <target state="translated">El caso en el que el argumento es infinito no se especifica como un error de dominio en C (a lo que C ++ difiere), pero se define como un &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/sin.html&quot;&gt;error de dominio en POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7f85d60c57cf322439b1e5b7790bc83208f4f5b" translate="yes" xml:space="preserve">
          <source>The case where the argument is infinite is not specified to be a domain error in C (to which C++ defers), but it is defined as a &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/tan.html&quot;&gt;domain error in POSIX&lt;/a&gt;.</source>
          <target state="translated">El caso en el que el argumento es infinito no se especifica como un error de dominio en C (a lo que C ++ difiere), pero se define como un &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/tan.html&quot;&gt;error de dominio en POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="811b3eb6a722bdbf3e594ec3cfffdea1a9d51b2c" translate="yes" xml:space="preserve">
          <source>The case where the argument is infinite is not specified to be a domain error in C (to which C++ defers), but it is defined as a &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/sin.html&quot;&gt;domain error in POSIX&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd7db525b5d310d0b35e62637e2c00c90a4535f" translate="yes" xml:space="preserve">
          <source>The case where the argument is infinite is not specified to be a domain error in C (to which C++ defers), but it is defined as a &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/tan.html&quot;&gt;domain error in POSIX&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0a943ad67969e22cbc79ab2e94f2ba315815da" translate="yes" xml:space="preserve">
          <source>The case where the argument is infinite is not specified to be a domain error in C, but it is defined as a &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/cos.html&quot;&gt;domain error in POSIX&lt;/a&gt;.</source>
          <target state="translated">El caso donde el argumento es infinito no se especifica como un error de dominio en C, pero se define como un &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/cos.html&quot;&gt;error de dominio en POSIX&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b37eb2e5b0429777b4f0099246b03892d2c779ed" translate="yes" xml:space="preserve">
          <source>The case where the argument is infinite is not specified to be a domain error in C, but it is defined as a &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/cos.html&quot;&gt;domain error in POSIX&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5aa9b2785befe3ac51560ee601e2aaa94d1a31" translate="yes" xml:space="preserve">
          <source>The case-insensitive comparison for the non-whitespace non-&lt;code&gt;'%'&lt;/code&gt; characters in the format string, the &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; facet of the locale provided by &lt;code&gt;str&lt;/code&gt; is typically, but not necessarily, used.</source>
          <target state="translated">La comparaci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas para los caracteres que no son espacios en blanco y no &lt;code&gt;'%'&lt;/code&gt; en la cadena de formato, la faceta &lt;code&gt;&lt;a href=&quot;../collate&quot;&gt;std::collate&lt;/a&gt;&lt;/code&gt; de la configuraci&amp;oacute;n regional proporcionada por &lt;code&gt;str&lt;/code&gt; se usa t&amp;iacute;picamente, pero no necesariamente.</target>
        </trans-unit>
        <trans-unit id="9313e91b45e2be0a3799d16fb75da830d5892cc8" translate="yes" xml:space="preserve">
          <source>The case-insensitive comparison key for &lt;code&gt;c&lt;/code&gt; in the currently imbued locale.</source>
          <target state="translated">La clave de comparaci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas para &lt;code&gt;c&lt;/code&gt; en el entorno local actualmente imbuido.</target>
        </trans-unit>
        <trans-unit id="67cdfac77816d6a726c77e23a3f364e8d4647a48" translate="yes" xml:space="preserve">
          <source>The catch-all clause &lt;code&gt;catch (...)&lt;/code&gt; matches exceptions of any type. If present, it has to be the last catch clause in the handler-seq. Catch-all block may be used to ensure that no uncaught exceptions can possibly escape from a function that offers &lt;a href=&quot;exceptions&quot;&gt;nothrow exception guarantee&lt;/a&gt;.</source>
          <target state="translated">La cl&amp;aacute;usula catch-all &lt;code&gt;catch (...)&lt;/code&gt; coincide con excepciones de cualquier tipo. Si est&amp;aacute; presente, tiene que ser la &amp;uacute;ltima cl&amp;aacute;usula catch en handler-seq. El bloque Catch-all se puede usar para garantizar que ninguna excepci&amp;oacute;n no capturada pueda escapar de una funci&amp;oacute;n que ofrece &lt;a href=&quot;exceptions&quot;&gt;una garant&amp;iacute;a de excepci&amp;oacute;n de no lanzamiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25bc4efefc84d37cdf5da26ff6ceab175e1c6aaf" translate="yes" xml:space="preserve">
          <source>The character array and single character overloads of &lt;a href=&quot;../basic_istream/operator_gtgt2&quot;&gt;&lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt; if they fail to extract any characters.</source>
          <target state="translated">La matriz de caracteres y las sobrecargas de caracteres individuales del &lt;a href=&quot;../basic_istream/operator_gtgt2&quot;&gt; &lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt; &lt;/a&gt; si no pueden extraer ning&amp;uacute;n car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="a48f4e44be4acbc878599ffe7694d1a4bc87d3cc" translate="yes" xml:space="preserve">
          <source>The character extraction overloads of &lt;a href=&quot;../basic_istream/operator_gtgt2&quot;&gt;&lt;code&gt;operator&amp;gt;&amp;gt;std::basic_istream&lt;/code&gt;&lt;/a&gt;, if the end of the stream is reached before the limit (if any) on the number of characters to be extracted.</source>
          <target state="translated">La extracci&amp;oacute;n de caracteres se sobrecarga del &lt;a href=&quot;../basic_istream/operator_gtgt2&quot;&gt; &lt;code&gt;operator&amp;gt;&amp;gt;std::basic_istream&lt;/code&gt; &lt;/a&gt; , si se alcanza el final de la secuencia antes del l&amp;iacute;mite (si lo hay) en el n&amp;uacute;mero de caracteres que se extraer&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="65d8f3b0f6e704d789a5d4f4bd154ae73e6fa9c4" translate="yes" xml:space="preserve">
          <source>The character representation and encoding in the controlled sequence may be different from the character representations in the associated sequence, in which case a &lt;code&gt;&lt;a href=&quot;../locale/codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; locale facet is typically used to perform the conversion. Common examples are UTF-8 (or other multibyte) files accessed through &lt;code&gt;&lt;a href=&quot;basic_fstream&quot;&gt;std::wfstream&lt;/a&gt;&lt;/code&gt; objects: the controlled sequence consists of &lt;code&gt;wchar_t&lt;/code&gt; characters, but the associated sequence consists of bytes.</source>
          <target state="translated">La representaci&amp;oacute;n y codificaci&amp;oacute;n de caracteres en la secuencia controlada puede ser diferente de las representaciones de caracteres en la secuencia asociada, en cuyo caso una faceta local &lt;code&gt;&lt;a href=&quot;../locale/codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; se usa t&amp;iacute;picamente para realizar la conversi&amp;oacute;n. Ejemplos comunes son los archivos UTF-8 (u otros multibyte) a los que se accede a trav&amp;eacute;s de objetos &lt;code&gt;&lt;a href=&quot;basic_fstream&quot;&gt;std::wfstream&lt;/a&gt;&lt;/code&gt; : la secuencia controlada consta de caracteres &lt;code&gt;wchar_t&lt;/code&gt; , pero la secuencia asociada consta de bytes.</target>
        </trans-unit>
        <trans-unit id="926a2b9c5d9e0f6df7a1c8599b95afbe627a76bc" translate="yes" xml:space="preserve">
          <source>The character stream that was operated on, e.g. &lt;code&gt;os&lt;/code&gt; or &lt;code&gt;is&lt;/code&gt;.</source>
          <target state="translated">La secuencia de caracteres que se utiliz&amp;oacute;, por ejemplo, &lt;code&gt;os&lt;/code&gt; o &lt;code&gt;is&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a135798382138f1d168ced859370bfbbb31e66a" translate="yes" xml:space="preserve">
          <source>The character to use as decimal point character is determined by the numpunct facet of the locale imbued in the stream at the time of output, as described in &lt;code&gt;&lt;a href=&quot;../../locale/num_put/put&quot;&gt;std::num_put::put&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El car&amp;aacute;cter a utilizar como car&amp;aacute;cter de punto decimal est&amp;aacute; determinado por la faceta numpunct del entorno local imbuido en la secuencia en el momento de la salida, como se describe en &lt;code&gt;&lt;a href=&quot;../../locale/num_put/put&quot;&gt;std::num_put::put&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29a30c51583aaf8336af6480761031b5d4dd3ee7" translate="yes" xml:space="preserve">
          <source>The character types &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;char8_t&lt;/code&gt;(since C++20), &lt;code&gt;char16_t&lt;/code&gt;, &lt;code&gt;char32_t&lt;/code&gt;, and &lt;code&gt;wchar_t&lt;/code&gt;;</source>
          <target state="translated">El tipo de caracteres &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;char8_t&lt;/code&gt; (desde C ++ 20), &lt;code&gt;char16_t&lt;/code&gt; , &lt;code&gt;char32_t&lt;/code&gt; y &lt;code&gt;wchar_t&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="de5230b19ff6d3b6862f39e1e4b2ca7bccdab9a8" translate="yes" xml:space="preserve">
          <source>The characters &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt; are invariant under ISO-646, but alternatives are provided for the tokens that use these characters anyway to accomodate even more restrictive historical charsets.</source>
          <target state="translated">Los caracteres &lt;code&gt;&amp;amp;&lt;/code&gt; y &lt;code&gt;!&lt;/code&gt; son invariables bajo ISO-646, pero se proporcionan alternativas para los tokens que usan estos caracteres de todos modos para acomodar caracteres hist&amp;oacute;ricos a&amp;uacute;n m&amp;aacute;s restrictivos.</target>
        </trans-unit>
        <trans-unit id="b214f3ed1bb00f84b126e636c023f9506df83f29" translate="yes" xml:space="preserve">
          <source>The characters of the C-strings pointed to by &lt;code&gt;grouping&lt;/code&gt; and &lt;code&gt;mon_grouping&lt;/code&gt; are interpreted according to their numeric values. When the terminating &lt;code&gt;'\0'&lt;/code&gt; is encountered, the last value seen is assumed to repeat for the remainder of digits. If &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;CHAR_MAX&lt;/a&gt;&lt;/code&gt; is encountered, no further digits are grouped. the typical grouping of three digits at a time is &lt;code&gt;&quot;\003&quot;&lt;/code&gt;.</source>
          <target state="translated">Los caracteres de las cadenas en C apuntados por &lt;code&gt;grouping&lt;/code&gt; y &lt;code&gt;mon_grouping&lt;/code&gt; se interpretan de acuerdo con sus valores num&amp;eacute;ricos. Cuando se encuentra la terminaci&amp;oacute;n &lt;code&gt;'\0'&lt;/code&gt; , se supone que el &amp;uacute;ltimo valor visto se repite para el resto de d&amp;iacute;gitos. Si se encuentra &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;CHAR_MAX&lt;/a&gt;&lt;/code&gt; , no se agrupan m&amp;aacute;s d&amp;iacute;gitos. La agrupaci&amp;oacute;n t&amp;iacute;pica de tres d&amp;iacute;gitos a la vez es &lt;code&gt;&quot;\003&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50e61c5054d2f85ac64df9adcc0316f25e4682e2" translate="yes" xml:space="preserve">
          <source>The choice of which engine to use involves a number of tradeoffs: the linear congruential engine is moderately fast and has a very small storage requirement for state. The lagged Fibonacci generators are very fast even on processors without advanced arithmetic instruction sets, at the expense of greater state storage and sometimes less desirable spectral characteristics. The Mersenne twister is slower and has greater state storage requirements but with the right parameters has the longest non-repeating sequence with the most desirable spectral characteristics (for a given definition of desirable).</source>
          <target state="translated">La elección del motor a utilizar implica una serie de compensaciones:el motor lineal congruente es moderadamente rápido y tiene un requerimiento de almacenamiento muy pequeño para el estado.Los generadores de Fibonacci retardados son muy rápidos incluso en procesadores sin conjuntos de instrucciones aritméticas avanzadas,a expensas de un mayor almacenamiento de estado y a veces de características espectrales menos deseables.El torbellino de Mersenne es más lento y tiene mayores requisitos de almacenamiento de estado,pero con los parámetros correctos tiene la secuencia no repetitiva más larga con las características espectrales más deseables (para una definición dada de deseable).</target>
        </trans-unit>
        <trans-unit id="389756ed6e9c288a5d7721af8a052706a08051ec" translate="yes" xml:space="preserve">
          <source>The choices made by each implementation about the sizes of the fundamental types are collectively known as</source>
          <target state="translated">Las decisiones tomadas por cada aplicación acerca de los tamaños de los tipos fundamentales se conocen colectivamente como</target>
        </trans-unit>
        <trans-unit id="40ffe543c1f7cc269e00940b5664a9591d581f02" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;any&lt;/code&gt; describes a type-safe container for single values of any type.</source>
          <target state="translated">La clase &lt;code&gt;any&lt;/code&gt; describe un contenedor de tipo seguro para valores individuales de cualquier tipo.</target>
        </trans-unit>
        <trans-unit id="343de7297b1a09b656158540d019c5105d45a580" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;basic_streambuf&lt;/code&gt; controls input and output to a character sequence. It includes and provides access to.</source>
          <target state="translated">La clase &lt;code&gt;basic_streambuf&lt;/code&gt; controla la entrada y salida a una secuencia de caracteres. Incluye y proporciona acceso a.</target>
        </trans-unit>
        <trans-unit id="fc3b7d04e5b01d17ca16c3dd7eb6a668493520a7" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;contract_violation&lt;/code&gt; describes information about a &lt;a href=&quot;../language/attributes/contract&quot;&gt;contract violation&lt;/a&gt;. It is generated by a C++ implementation and passed to a contract violation handler when a contract violation is detected.</source>
          <target state="translated">La clase &lt;code&gt;contract_violation&lt;/code&gt; describe informaci&amp;oacute;n sobre una &lt;a href=&quot;../language/attributes/contract&quot;&gt;violaci&amp;oacute;n de contrato&lt;/a&gt; . Se genera mediante una implementaci&amp;oacute;n de C ++ y se pasa a un controlador de incumplimiento de contrato cuando se detecta un incumplimiento de contrato.</target>
        </trans-unit>
        <trans-unit id="0933dd797b634fb57481e64c84a2e2ad46d4ec11" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;contract_violation&lt;/code&gt; is used by the implementation to report information about a contract violation to the violation handler.</source>
          <target state="translated">La implementaci&amp;oacute;n utiliza la clase &lt;code&gt;contract_violation&lt;/code&gt; para informar informaci&amp;oacute;n sobre una violaci&amp;oacute;n de contrato al manejador de violaciones.</target>
        </trans-unit>
        <trans-unit id="3d108383c7a03d1c8ed761859ac19042a6996b74" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;day&lt;/code&gt; represents a day in a month. Its normal range is [1, 31], but it may hold any number in [0, 255].</source>
          <target state="translated">El &lt;code&gt;day&lt;/code&gt; clase representa un d&amp;iacute;a en un mes. Su rango normal es [1, 31], pero puede contener cualquier n&amp;uacute;mero en [0, 255].</target>
        </trans-unit>
        <trans-unit id="fb1865a269f77db6239124ab3f4f7037e783663b" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;ios_base&lt;/code&gt; is a multipurpose class that serves as the base class for all I/O stream classes. It maintains several kinds of data:</source>
          <target state="translated">La clase &lt;code&gt;ios_base&lt;/code&gt; es una clase multiprop&amp;oacute;sito que sirve como la clase base para todas las clases de flujo de E / S. Mantiene varios tipos de datos:</target>
        </trans-unit>
        <trans-unit id="f3ae56fc04b1b726fbae27b7509b3c5a19f45554" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;istrstream&lt;/code&gt; implements input operations on array-backed streams. It essentially wraps a raw array I/O device implementation (&lt;code&gt;&lt;a href=&quot;strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt;) into the higher-level interface of &lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;istrstream&lt;/code&gt; implementa operaciones de entrada en secuencias respaldadas por arreglos. B&amp;aacute;sicamente, envuelve una implementaci&amp;oacute;n de dispositivo de E / S de matriz sin &lt;code&gt;&lt;a href=&quot;strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; ( std :: strstreambuf ) en la interfaz de nivel superior de &lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d68c9d9976237e7bad1d9c374222a16482710351" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;leap&lt;/code&gt; represents the date and time of a leap second insertion.</source>
          <target state="translated">El &lt;code&gt;leap&lt;/code&gt; clase representa la fecha y la hora de una segunda inserci&amp;oacute;n de salto.</target>
        </trans-unit>
        <trans-unit id="abf01ffffb7311c0e4b841a0f6111a62e524be1c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;link&lt;/code&gt; represents an alternative name for a time zone.</source>
          <target state="translated">El &lt;code&gt;link&lt;/code&gt; clase representa un nombre alternativo para una zona horaria.</target>
        </trans-unit>
        <trans-unit id="83b88fa0a429df9a4f0587056fe07f11f7518785" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;local_info&lt;/code&gt; describes the result of converting a &lt;code&gt;std::chrono::local_time&lt;/code&gt; to a &lt;code&gt;std::chrono::sys_time&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;local_info&lt;/code&gt; describe el resultado de convertir un &lt;code&gt;std::chrono::local_time&lt;/code&gt; a &lt;code&gt;std::chrono::sys_time&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c75928d0fbd7736eb6e55c560a45d617e4a37b4" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;local_t&lt;/code&gt; is a pseudo-clock that is used as the first template argument to &lt;code&gt;&lt;a href=&quot;time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; to indicate that the time point represents local time with respect of a not-yet-specified time zone. &lt;code&gt;local_time&lt;/code&gt; supports streaming and the full set of time point arithmetic.</source>
          <target state="translated">La clase &lt;code&gt;local_t&lt;/code&gt; es un pseudo-reloj que se usa como el primer argumento de plantilla para &lt;code&gt;&lt;a href=&quot;time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; para indicar que el punto de tiempo representa la hora local con respecto a una zona horaria a&amp;uacute;n no especificada. &lt;code&gt;local_time&lt;/code&gt; admite la transmisi&amp;oacute;n y el conjunto completo de aritm&amp;eacute;tica de puntos de tiempo.</target>
        </trans-unit>
        <trans-unit id="85fde950b1bc4e1c3294d21a994f67ff82dbbb5c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;lock_guard&lt;/code&gt; is a mutex wrapper that provides a convenient &lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization&quot;&gt;RAII-style&lt;/a&gt; mechanism for owning a mutex for the duration of a scoped block.</source>
          <target state="translated">La clase &lt;code&gt;lock_guard&lt;/code&gt; es un contenedor de mutex que proporciona un mecanismo conveniente &lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization&quot;&gt;de estilo RAII&lt;/a&gt; para poseer un mutex durante la duraci&amp;oacute;n de un bloque de &amp;aacute;mbito.</target>
        </trans-unit>
        <trans-unit id="5e3e91707414ba3f649b0438a0caa5eecbc19288" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;month&lt;/code&gt; represents a month in a year. Its normal range is [1, 12], but it may hold any number in [0, 255]. Twelve named constants are predefined in the &lt;code&gt;std::chrono&lt;/code&gt; namespace for the twelve months of the year.</source>
          <target state="translated">El &lt;code&gt;month&lt;/code&gt; clase representa un mes en un a&amp;ntilde;o. Su rango normal es [1, 12], pero puede contener cualquier n&amp;uacute;mero en [0, 255]. Doce constantes con nombre est&amp;aacute;n predefinidas en el espacio de nombres &lt;code&gt;std::chrono&lt;/code&gt; para los doce meses del a&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="1be877235dcb20278d04c1100fddd27e40cf1b12" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;month_day&lt;/code&gt; represents a specific day of a specific month, of some yet to be specified year.</source>
          <target state="translated">La clase &lt;code&gt;month_day&lt;/code&gt; representa un d&amp;iacute;a espec&amp;iacute;fico de un mes espec&amp;iacute;fico, de algunos a&amp;ntilde;os a&amp;uacute;n por especificar.</target>
        </trans-unit>
        <trans-unit id="27d369a1177433899c27498902657b823de0b4a1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;month_day_last&lt;/code&gt; represents the last day of a specific month, of some yet to be specified year.</source>
          <target state="translated">La clase &lt;code&gt;month_day_last&lt;/code&gt; representa el &amp;uacute;ltimo d&amp;iacute;a de un mes espec&amp;iacute;fico, de algunos a&amp;ntilde;os a&amp;uacute;n por especificar.</target>
        </trans-unit>
        <trans-unit id="a02c9e9c27d118fe7b2b716108aa5426e365f9ab" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;month_weekday&lt;/code&gt; represents the n-th weekday of a specific month, of some yet to be specified year.</source>
          <target state="translated">La clase &lt;code&gt;month_weekday&lt;/code&gt; representa el en&amp;eacute;simo d&amp;iacute;a de la semana de un mes espec&amp;iacute;fico, de algunos a&amp;ntilde;os a&amp;uacute;n por especificar.</target>
        </trans-unit>
        <trans-unit id="44105f2554e4f171648141fde22e5433de042035" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;month_weekday_last&lt;/code&gt; represents the last weekday of a specific month, of some yet to be specified year.</source>
          <target state="translated">La clase &lt;code&gt;month_weekday_last&lt;/code&gt; representa el &amp;uacute;ltimo d&amp;iacute;a de la semana de un mes espec&amp;iacute;fico, de algunos a&amp;ntilde;os a&amp;uacute;n por especificar.</target>
        </trans-unit>
        <trans-unit id="1f2c0f32bd49d3aa755a1b9b297f856980dea582" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;ostrstream&lt;/code&gt; implements output operations on array-backed streams. It essentially wraps a raw array I/O device implementation (&lt;code&gt;&lt;a href=&quot;strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt;) into the higher-level interface of &lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;ostrstream&lt;/code&gt; implementa operaciones de salida en secuencias respaldadas por arreglos. B&amp;aacute;sicamente, envuelve una implementaci&amp;oacute;n de dispositivo de E / S de matriz sin &lt;code&gt;&lt;a href=&quot;strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; ( std :: strstreambuf ) en la interfaz de nivel superior de &lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="769240ff129de8435a169aeae14402f048004721" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;scoped_lock&lt;/code&gt; is a mutex wrapper that provides a convenient &lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization&quot;&gt;RAII-style&lt;/a&gt; mechanism for owning one or more mutexes for the duration of a scoped block.</source>
          <target state="translated">La clase &lt;code&gt;scoped_lock&lt;/code&gt; es un contenedor de mutex que proporciona un mecanismo conveniente &lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization&quot;&gt;de estilo RAII&lt;/a&gt; para poseer uno o m&amp;aacute;s mutexes durante la duraci&amp;oacute;n de un bloque de &amp;aacute;mbito.</target>
        </trans-unit>
        <trans-unit id="c6811a8286c51846f2769a21dff0527daa3ee835" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;shared_lock&lt;/code&gt; is a general-purpose shared mutex ownership wrapper allowing deferred locking, timed locking and transfer of lock ownership. Locking a &lt;code&gt;shared_lock&lt;/code&gt; locks the associated shared mutex in shared mode (to lock it in exclusive mode, &lt;code&gt;&lt;a href=&quot;unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&lt;/code&gt; can be used).</source>
          <target state="translated">La clase &lt;code&gt;shared_lock&lt;/code&gt; es un contenedor de propiedad de mutex compartido de uso general que permite el bloqueo diferido, el bloqueo temporizado y la transferencia de la propiedad del bloqueo. El bloqueo de un &lt;code&gt;shared_lock&lt;/code&gt; bloquea el mutex compartido asociado en modo compartido (para bloquearlo en modo exclusivo, se puede usar &lt;code&gt;&lt;a href=&quot;unique_lock&quot;&gt;std::unique_lock&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a04136447f2a3087a3adb2c5a6a7425d2efc14b" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::basic_ios&lt;/code&gt; provides facilities for interfacing with objects that have &lt;code&gt;&lt;a href=&quot;basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt; interface. Several &lt;code&gt;std::basic_ios&lt;/code&gt; objects can refer to one actual &lt;code&gt;std::basic_streambuf&lt;/code&gt; object.</source>
          <target state="translated">La clase &lt;code&gt;std::basic_ios&lt;/code&gt; proporciona facilidades para interactuar con objetos que tienen interfaz &lt;code&gt;&lt;a href=&quot;basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt; . Varios objetos &lt;code&gt;std::basic_ios&lt;/code&gt; pueden referirse a un objeto &lt;code&gt;std::basic_streambuf&lt;/code&gt; real .</target>
        </trans-unit>
        <trans-unit id="97c6fc6eb4b60c014d29122cfc63ff1263ce47ce" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::codecvt_base&lt;/code&gt; provides the conversion status constants which are inherited and used by the &lt;code&gt;&lt;a href=&quot;codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; facets.</source>
          <target state="translated">La clase &lt;code&gt;std::codecvt_base&lt;/code&gt; proporciona las constantes de estado de conversi&amp;oacute;n que son heredadas y utilizadas por las facetas &lt;code&gt;&lt;a href=&quot;codecvt&quot;&gt;std::codecvt&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9ae791d8d2658200164a1dd8dfceee3dc1247dc" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::condition_variable&lt;/code&gt; is a &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt;. It is not &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;, &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt;, &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;, or &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable&lt;/a&gt;.</source>
          <target state="translated">La clase &lt;code&gt;std::condition_variable&lt;/code&gt; es un &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt; . No es &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; , &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt; , &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; o &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88ef9662f4f2d2a563f792987ec222a76d7e5cb8" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::condition_variable_any&lt;/code&gt; is a &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt;. It is not &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt;, &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt;, &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;, or &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable&lt;/a&gt;.</source>
          <target state="translated">La clase &lt;code&gt;std::condition_variable_any&lt;/code&gt; es un &lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;StandardLayoutType&lt;/a&gt; . No es &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; , &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt; , &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; o &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4367df265d7c6ec7ea71f793499b528dbf39047" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::ctype_base&lt;/code&gt; lists the character classification categories which are inherited by the &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; facets.</source>
          <target state="translated">La clase &lt;code&gt;std::ctype_base&lt;/code&gt; enumera las categor&amp;iacute;as de clasificaci&amp;oacute;n de caracteres que heredan las facetas &lt;code&gt;&lt;a href=&quot;ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba06b286ffcbc23cbd4bfc450a7db3ee5ce16c7a" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::filesystem::filesystem_error&lt;/code&gt; defines an exception object that is thrown on failure by the throwing overloads of the functions in the filesystem library.</source>
          <target state="translated">La clase &lt;code&gt;std::filesystem::filesystem_error&lt;/code&gt; define un objeto de excepci&amp;oacute;n que se produce en caso de fallo por las sobrecargas de las funciones en la biblioteca del sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="5e0154cf7a71928c2d8b4fa91dfe5c5d79f98fa8" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::future_error&lt;/code&gt; defines an exception object that is thrown on failure by the functions in the thread library that deal with asynchronous execution and shared states (&lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;promise&quot;&gt;std::promise&lt;/a&gt;&lt;/code&gt;, etc). Similar to &lt;code&gt;&lt;a href=&quot;../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt;, this exception carries an error code compatible with &lt;code&gt;&lt;a href=&quot;../error/error_code&quot;&gt;std::error_code&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;std::future_error&lt;/code&gt; define un objeto de excepci&amp;oacute;n que es arrojado al fallo por las funciones en la biblioteca de hilos que tratan con la ejecuci&amp;oacute;n asincr&amp;oacute;nica y los estados compartidos ( &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;promise&quot;&gt;std::promise&lt;/a&gt;&lt;/code&gt; , etc.). Similar a &lt;code&gt;&lt;a href=&quot;../error/system_error&quot;&gt;std::system_error&lt;/a&gt;&lt;/code&gt; , esta excepci&amp;oacute;n lleva un c&amp;oacute;digo de error compatible con &lt;code&gt;&lt;a href=&quot;../error/error_code&quot;&gt;std::error_code&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad146a3cfff3f9b13f932bc525af9165bd2add0a" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::ios_base::failure&lt;/code&gt; defines an exception object that is thrown on failure by the functions in the Input/Output library.</source>
          <target state="translated">La clase &lt;code&gt;std::ios_base::failure&lt;/code&gt; define un objeto de excepci&amp;oacute;n que las funciones de la biblioteca de entrada / salida arrojan al fallo.</target>
        </trans-unit>
        <trans-unit id="0a418ed2810a4fe8c19866d4e7bae5bd608b69ce" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::lconv&lt;/code&gt; contains numeric and monetary formatting rules as defined by a C locale. Objects of this struct may be obtained with &lt;code&gt;&lt;a href=&quot;localeconv&quot;&gt;std::localeconv&lt;/a&gt;&lt;/code&gt;. The members of &lt;code&gt;std::lconv&lt;/code&gt; are values of type &lt;code&gt;char&lt;/code&gt; and of type &lt;code&gt;char*&lt;/code&gt;. Each &lt;code&gt;char*&lt;/code&gt; member except &lt;code&gt;decimal_point&lt;/code&gt; may be pointing at a null character (that is, at an empty C-string). The members of type &lt;code&gt;char&lt;/code&gt; are all non-negative numbers, any of which may be &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;CHAR_MAX&lt;/a&gt;&lt;/code&gt; if the corresponding value is not available in the current C locale.</source>
          <target state="translated">La clase &lt;code&gt;std::lconv&lt;/code&gt; contiene reglas de formato num&amp;eacute;rico y monetario definidas por una configuraci&amp;oacute;n regional C. Los objetos de esta estructura se pueden obtener con &lt;code&gt;&lt;a href=&quot;localeconv&quot;&gt;std::localeconv&lt;/a&gt;&lt;/code&gt; . Los miembros de &lt;code&gt;std::lconv&lt;/code&gt; son valores de tipo &lt;code&gt;char&lt;/code&gt; y de tipo &lt;code&gt;char*&lt;/code&gt; . Cada miembro &lt;code&gt;char*&lt;/code&gt; excepto &lt;code&gt;decimal_point&lt;/code&gt; puede estar apuntando a un car&amp;aacute;cter nulo (es decir, a una cadena en C vac&amp;iacute;a). Los miembros del tipo &lt;code&gt;char&lt;/code&gt; son todos n&amp;uacute;meros no negativos, cualquiera de los cuales puede ser &lt;code&gt;&lt;a href=&quot;../types/climits&quot;&gt;CHAR_MAX&lt;/a&gt;&lt;/code&gt; si el valor correspondiente no est&amp;aacute; disponible en la configuraci&amp;oacute;n regional actual de C.</target>
        </trans-unit>
        <trans-unit id="d0406c5e2f8f02bc0cdae46eef28c4cdd8a5777f" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::locale::id&lt;/code&gt; provides implementation-specific identification of a locale facet. Each class derived from &lt;code&gt;&lt;a href=&quot;facet&quot;&gt;std::locale::facet&lt;/a&gt;&lt;/code&gt; must have a public static member named &lt;code&gt;id&lt;/code&gt; of type &lt;code&gt;std::locale::id&lt;/code&gt; and each &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; object maintains a list of facets it implements, indexed by their &lt;code&gt;id&lt;/code&gt;s.</source>
          <target state="translated">La clase &lt;code&gt;std::locale::id&lt;/code&gt; proporciona una identificaci&amp;oacute;n espec&amp;iacute;fica de implementaci&amp;oacute;n de una faceta de configuraci&amp;oacute;n regional. Cada clase derivada de &lt;code&gt;&lt;a href=&quot;facet&quot;&gt;std::locale::facet&lt;/a&gt;&lt;/code&gt; debe tener un miembro p&amp;uacute;blico est&amp;aacute;tico llamado &lt;code&gt;id&lt;/code&gt; de tipo &lt;code&gt;std::locale::id&lt;/code&gt; y cada objeto &lt;code&gt;&lt;a href=&quot;../locale&quot;&gt;std::locale&lt;/a&gt;&lt;/code&gt; mantiene una lista de facetas que implementa, indexada por sus &lt;code&gt;id&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="cdf91a0e81751be421b2176d042a5260df6ec784" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::messages_base&lt;/code&gt; provides a type definition which is inherited and used by the &lt;code&gt;&lt;a href=&quot;messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; facets.</source>
          <target state="translated">La clase &lt;code&gt;std::messages_base&lt;/code&gt; proporciona una definici&amp;oacute;n de tipo que es heredada y utilizada por las facetas &lt;code&gt;&lt;a href=&quot;messages&quot;&gt;std::messages&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6d1424f3444c8e56160a47686df975e8d4653aa" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::money_base&lt;/code&gt; provides constants which are inherited and used by the &lt;code&gt;&lt;a href=&quot;moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; facets.</source>
          <target state="translated">La clase &lt;code&gt;std::money_base&lt;/code&gt; proporciona constantes heredadas y utilizadas por las &lt;code&gt;&lt;a href=&quot;moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cf7e0952b844bfd5add19a1d11fb8b44f736538" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::once_flag&lt;/code&gt; is a helper structure for &lt;code&gt;&lt;a href=&quot;call_once&quot;&gt;std::call_once&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;std::once_flag&lt;/code&gt; es una estructura auxiliar para &lt;code&gt;&lt;a href=&quot;call_once&quot;&gt;std::call_once&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5643e960d4858b6091b7d6543cf83a75143fd7d" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; is an abstract interface to an unbounded set of classes encapsulating memory resources.</source>
          <target state="translated">La clase &lt;code&gt;std::pmr::memory_resource&lt;/code&gt; es una interfaz abstracta para un conjunto ilimitado de clases que encapsulan los recursos de memoria.</target>
        </trans-unit>
        <trans-unit id="943f3d426461d3dce2b925bcd3c4394d9a659d70" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::pmr::monotonic_buffer_resource&lt;/code&gt; is a special-purpose memory resource class that releases the allocated memory only when the resource is destroyed. It is intended for very fast memory allocations in situations where memory is used to build up a few objects and then is released all at once.</source>
          <target state="translated">La clase &lt;code&gt;std::pmr::monotonic_buffer_resource&lt;/code&gt; es una clase de recurso de memoria de prop&amp;oacute;sito especial que libera la memoria asignada solo cuando se destruye el recurso. Est&amp;aacute; destinado a asignaciones de memoria muy r&amp;aacute;pidas en situaciones donde la memoria se usa para construir algunos objetos y luego se libera de una vez.</target>
        </trans-unit>
        <trans-unit id="33dea3b4b913a14a5256d070fe38c44fa588bc34" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::pmr::synchronized_pool_resource&lt;/code&gt; is a general-purpose memory resource class with the following properties:</source>
          <target state="translated">La clase &lt;code&gt;std::pmr::synchronized_pool_resource&lt;/code&gt; es una clase de recurso de memoria de prop&amp;oacute;sito general con las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="027578ac1b5d02b14a361542f6c39eac7ac5db51" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::pmr::unsynchronized_pool_resource&lt;/code&gt; is a general-purpose memory resource class with the following properties:</source>
          <target state="translated">La clase &lt;code&gt;std::pmr::unsynchronized_pool_resource&lt;/code&gt; es una clase de recurso de memoria de prop&amp;oacute;sito general con las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="450a8b0e0258e20a57c1fc8d5cc34c4deaa0f733" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;std::time_base&lt;/code&gt; provides the date order constants which are inherited by the &lt;code&gt;&lt;a href=&quot;time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; facets.</source>
          <target state="translated">La clase &lt;code&gt;std::time_base&lt;/code&gt; proporciona las constantes de orden de fecha que son heredadas por las facetas &lt;code&gt;&lt;a href=&quot;time_get&quot;&gt;std::time_get&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79d8e7749b4e29f198a0e5858155e9704c6f9c0d" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;strstream&lt;/code&gt; implements input and output operations on array-backed streams. It essentially wraps a raw array I/O device implementation (&lt;code&gt;&lt;a href=&quot;strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt;) into the higher-level interface of &lt;code&gt;&lt;a href=&quot;basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;strstream&lt;/code&gt; implementa operaciones de entrada y salida en secuencias respaldadas por arreglos. B&amp;aacute;sicamente, envuelve una implementaci&amp;oacute;n de dispositivo de E / S de matriz sin &lt;code&gt;&lt;a href=&quot;strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; ( std :: strstreambuf ) en la interfaz de nivel superior de &lt;code&gt;&lt;a href=&quot;basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="476561dd0cc52ac621dba8650897d75d20ccf296" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;sys_info&lt;/code&gt; describes time zone information associated with a time zone at a particular point in time (represented as either a &lt;code&gt;std::chrono::sys_time&lt;/code&gt; or a &lt;code&gt;std::chrono::local_time&lt;/code&gt;). This is a low-level data structure typically not used directly by user code.</source>
          <target state="translated">La clase &lt;code&gt;sys_info&lt;/code&gt; describe informaci&amp;oacute;n de zona horaria asociada con una zona horaria en un punto particular en el tiempo (representada como &lt;code&gt;std::chrono::sys_time&lt;/code&gt; o &lt;code&gt;std::chrono::local_time&lt;/code&gt; ). Esta es una estructura de datos de bajo nivel que normalmente no se usa directamente por el c&amp;oacute;digo de usuario.</target>
        </trans-unit>
        <trans-unit id="f600d7fa13ee6ce89183cf7a00b0eb82822e5acf" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;thread::id&lt;/code&gt; is a lightweight, trivially copyable class that serves as a unique identifier of &lt;code&gt;&lt;a href=&quot;../thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">La clase &lt;code&gt;thread::id&lt;/code&gt; es una clase ligera, trivialmente copiable que sirve como un identificador &amp;uacute;nico de objetos &lt;code&gt;&lt;a href=&quot;../thread&quot;&gt;std::thread&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a728f613fc7e5144eda285d5079bb6d95a187b5" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;thread&lt;/code&gt; represents &lt;a href=&quot;https://en.wikipedia.org/wiki/Thread_(computing)&quot;&gt;a single thread of execution&lt;/a&gt;. Threads allow multiple functions to execute concurrently.</source>
          <target state="translated">El &lt;code&gt;thread&lt;/code&gt; clase representa &lt;a href=&quot;https://en.wikipedia.org/wiki/Thread_(computing)&quot;&gt;un solo hilo de ejecuci&amp;oacute;n&lt;/a&gt; . Los hilos permiten que m&amp;uacute;ltiples funciones se ejecuten simult&amp;aacute;neamente.</target>
        </trans-unit>
        <trans-unit id="ef52a5afa98a54aad697e77e7c88eec364695c1f" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;time_zone&lt;/code&gt; represents all time zone transitions for a specific geographic area.</source>
          <target state="translated">La clase &lt;code&gt;time_zone&lt;/code&gt; representa todas las transiciones de zona horaria para un &amp;aacute;rea geogr&amp;aacute;fica espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="9fc764d5e8685dc9a3d7e91f0a64416a46a20991" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;type_info&lt;/code&gt; holds implementation-specific information about a type, including the name of the type and means to compare two types for equality or collating order. This is the class returned by the &lt;a href=&quot;../language/typeid&quot;&gt;&lt;code&gt;typeid&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">La clase &lt;code&gt;type_info&lt;/code&gt; contiene informaci&amp;oacute;n espec&amp;iacute;fica de la implementaci&amp;oacute;n sobre un tipo, incluido el nombre del tipo y significa comparar dos tipos para igualdad o orden de clasificaci&amp;oacute;n. Esta es la clase devuelta por el operador &lt;a href=&quot;../language/typeid&quot;&gt; &lt;code&gt;typeid&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="abf3f8441b03d07062b86fafd99c0d60e1b784bb" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;tzdb&lt;/code&gt; represents a copy of the &lt;a href=&quot;https://www.iana.org/time-zones&quot;&gt;IANA time zone database&lt;/a&gt;. Users cannot construct a &lt;code&gt;tzdb&lt;/code&gt; and can only obtain read-only access to one via the free functions &lt;code&gt;std::chrono::get_tzdb_list&lt;/code&gt; and &lt;code&gt;std::chrono::get_tzdb&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;tzdb&lt;/code&gt; representa una copia de la &lt;a href=&quot;https://www.iana.org/time-zones&quot;&gt;base de datos de zona horaria de IANA&lt;/a&gt; . Los usuarios no pueden construir un &lt;code&gt;tzdb&lt;/code&gt; y solo pueden obtener acceso de solo lectura a trav&amp;eacute;s de las funciones gratuitas &lt;code&gt;std::chrono::get_tzdb_list&lt;/code&gt; y &lt;code&gt;std::chrono::get_tzdb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0a8116ecd0276d23a4e127fc68adb47ce5aa791" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;unique_lock&lt;/code&gt; is a general-purpose mutex ownership wrapper allowing deferred locking, time-constrained attempts at locking, recursive locking, transfer of lock ownership, and use with condition variables.</source>
          <target state="translated">La clase &lt;code&gt;unique_lock&lt;/code&gt; es un contenedor de propiedad de mutex de uso general que permite el bloqueo diferido, los intentos de bloqueo con restricci&amp;oacute;n de tiempo, el bloqueo recursivo, la transferencia de la propiedad del bloqueo y el uso con variables de condici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0e2099ee784c8c8681479bd233caa16863f4c2a7" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;unique_lock&lt;/code&gt; is movable, but not copyable -- it meets the requirements of &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt; and &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable&lt;/a&gt; but not of &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; or &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;.</source>
          <target state="translated">La clase &lt;code&gt;unique_lock&lt;/code&gt; es m&amp;oacute;vil, pero no se puede copiar: cumple los requisitos de &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt; y &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable,&lt;/a&gt; pero no de &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; o &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc857ea58c2bf22f34372b5a5a3fb53ce6834f5a" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;unique_lock&lt;/code&gt; meets the &lt;a href=&quot;../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; requirements. If &lt;b&gt;Mutex&lt;/b&gt; meets the &lt;a href=&quot;../named_req/lockable&quot;&gt;Lockable&lt;/a&gt; requirements, &lt;code&gt;unique_lock&lt;/code&gt; also meets the &lt;a href=&quot;../named_req/lockable&quot;&gt;Lockable&lt;/a&gt; requirements (ex.: can be used in &lt;code&gt;&lt;a href=&quot;lock&quot;&gt;std::lock&lt;/a&gt;&lt;/code&gt;); if &lt;b&gt;Mutex&lt;/b&gt; meets the &lt;a href=&quot;../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; requirements, &lt;code&gt;unique_lock&lt;/code&gt; also meets the &lt;a href=&quot;../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; requirements.</source>
          <target state="translated">La clase &lt;code&gt;unique_lock&lt;/code&gt; cumple los requisitos de &lt;a href=&quot;../named_req/basiclockable&quot;&gt;BasicLockable&lt;/a&gt; . Si &lt;b&gt;mutex&lt;/b&gt; cumple con los &lt;a href=&quot;../named_req/lockable&quot;&gt;bloqueables&lt;/a&gt; requisitos, &lt;code&gt;unique_lock&lt;/code&gt; tambi&amp;eacute;n cumple con los &lt;a href=&quot;../named_req/lockable&quot;&gt;bloqueables&lt;/a&gt; requisitos (ej .: se puede utilizar en &lt;code&gt;&lt;a href=&quot;lock&quot;&gt;std::lock&lt;/a&gt;&lt;/code&gt; ); Si &lt;b&gt;Mutex&lt;/b&gt; cumple los requisitos de &lt;a href=&quot;../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; , &lt;code&gt;unique_lock&lt;/code&gt; tambi&amp;eacute;n cumple los requisitos de &lt;a href=&quot;../named_req/timedlockable&quot;&gt;TimedLockable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="032091a049e7d6f3c4a2dbc349c7148ff098a4d1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;weekday&lt;/code&gt; represent a day of the week in the Gregorian calendar. Its normal range is [0, 6], for Sunday through Saturday, but it can hold any value in the range [0, 255]. Seven named constants are predefined in the &lt;code&gt;std::chrono&lt;/code&gt; namespace for the seven days of the week.</source>
          <target state="translated">El &lt;code&gt;weekday&lt;/code&gt; clase representa un d&amp;iacute;a de la semana en el calendario gregoriano. Su rango normal es [0, 6], de domingo a s&amp;aacute;bado, pero puede contener cualquier valor en el rango [0, 255]. Siete constantes con nombre est&amp;aacute;n predefinidas en el espacio de nombres &lt;code&gt;std::chrono&lt;/code&gt; para los siete d&amp;iacute;as de la semana.</target>
        </trans-unit>
        <trans-unit id="56265c3dc95ef84c57c1c665e4e92d0394b639f7" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;weekday_indexed&lt;/code&gt; combines a &lt;a href=&quot;weekday&quot;&gt;&lt;code&gt;weekday&lt;/code&gt;&lt;/a&gt;, representing a day of the week in the Gregorian calendar, with a small index</source>
          <target state="translated">La clase &lt;code&gt;weekday_indexed&lt;/code&gt; combina un &lt;a href=&quot;weekday&quot;&gt; &lt;code&gt;weekday&lt;/code&gt; &lt;/a&gt; , que representa un d&amp;iacute;a de la semana en el calendario gregoriano, con un peque&amp;ntilde;o &amp;iacute;ndice</target>
        </trans-unit>
        <trans-unit id="8e2bcc4575bcf6a86b21ec2403cfb210002249df" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;weekday_last&lt;/code&gt; represents the last weekday of some month.</source>
          <target state="translated">La clase d&amp;iacute;a &lt;code&gt;weekday_last&lt;/code&gt; representa el &amp;uacute;ltimo d&amp;iacute;a laborable de alg&amp;uacute;n mes.</target>
        </trans-unit>
        <trans-unit id="b53e49ba5644235f4f447898a7a3e502042d68b4" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;year&lt;/code&gt; represents a year in the &lt;a href=&quot;https://en.wikipedia.org/wiki/proleptic_Gregorian_calendar&quot;&gt;proleptic Gregorian calendar&lt;/a&gt;. Its range is [-32767, 32767].</source>
          <target state="translated">El &lt;code&gt;year&lt;/code&gt; clase representa un a&amp;ntilde;o en el &lt;a href=&quot;https://en.wikipedia.org/wiki/proleptic_Gregorian_calendar&quot;&gt;calendario gregoriano proleptico&lt;/a&gt; . Su rango es [-32767, 32767].</target>
        </trans-unit>
        <trans-unit id="fea87e23deabaacc9943a26e2ca0a144201292df" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;year_month&lt;/code&gt; represents a specific month of a specific year, but with an unspecified day. It is a field-based time point, with a resolution of &lt;code&gt;std::chrono::months&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;year_month&lt;/code&gt; representa un mes espec&amp;iacute;fico de un a&amp;ntilde;o espec&amp;iacute;fico, pero con un d&amp;iacute;a no especificado. Es un punto de tiempo basado en el campo, con una resoluci&amp;oacute;n de &lt;code&gt;std::chrono::months&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72fdd2f49c8ec1c2127c97fefc1c830ce24e4a83" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;year_month_day&lt;/code&gt; represents a specific year, month, and day. It is a field-based time point, with a resolution of &lt;code&gt;std::chrono::days&lt;/code&gt;. &lt;code&gt;std::chrono::years&lt;/code&gt;- and &lt;code&gt;std::chrono::months&lt;/code&gt;-oriented arithmetic are supported directly. An implicit conversion to and from &lt;code&gt;std::chrono::sys_days&lt;/code&gt; allows &lt;code&gt;std::chrono::days&lt;/code&gt;-oriented arithmetic to be performed efficiently.</source>
          <target state="translated">La clase &lt;code&gt;year_month_day&lt;/code&gt; representa un a&amp;ntilde;o, mes y d&amp;iacute;a espec&amp;iacute;ficos. Es un punto de tiempo basado en el campo, con una resoluci&amp;oacute;n de &lt;code&gt;std::chrono::days&lt;/code&gt; . &lt;code&gt;std::chrono::years&lt;/code&gt; - y &lt;code&gt;std::chrono::months&lt;/code&gt; aritm&amp;eacute;tica orientada se admite directamente. Una conversi&amp;oacute;n impl&amp;iacute;cita &lt;code&gt;std::chrono::sys_days&lt;/code&gt; desde std :: chrono :: sys_days permite que la aritm&amp;eacute;tica orientada a &lt;code&gt;std::chrono::days&lt;/code&gt; se realice de manera eficiente.</target>
        </trans-unit>
        <trans-unit id="5375b9000c2f6d65598dc8525258ea0b2b967f7b" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;year_month_day_last&lt;/code&gt; represents the last day of a specific year and month. It is a field-based time point, with a resolution of &lt;code&gt;std::chrono::days&lt;/code&gt;, subject to the limit that it can only represent the last day of a month.</source>
          <target state="translated">La clase &lt;code&gt;year_month_day_last&lt;/code&gt; representa el &amp;uacute;ltimo d&amp;iacute;a de un a&amp;ntilde;o y mes espec&amp;iacute;ficos. Es un punto de tiempo basado en el campo, con una resoluci&amp;oacute;n de &lt;code&gt;std::chrono::days&lt;/code&gt; , sujeto al l&amp;iacute;mite de que solo puede representar el &amp;uacute;ltimo d&amp;iacute;a de un mes.</target>
        </trans-unit>
        <trans-unit id="6e1c7f2658d8bf0200e0114c2b5f71f556a17286" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;year_month_weekday&lt;/code&gt; represents the n-th weekday of a specific year and month. It is a field-based time point, with a resolution of &lt;code&gt;std::chrono::days&lt;/code&gt;. &lt;code&gt;std::chrono::years&lt;/code&gt;- and &lt;code&gt;std::chrono::months&lt;/code&gt;-oriented arithmetic are supported directly. An implicit conversion to and from &lt;code&gt;std::chrono::sys_days&lt;/code&gt; allows &lt;code&gt;std::chrono::days&lt;/code&gt;-oriented arithmetic to be performed efficiently.</source>
          <target state="translated">La clase &lt;code&gt;year_month_weekday&lt;/code&gt; representa el en&amp;eacute;simo d&amp;iacute;a de la semana de un a&amp;ntilde;o y mes espec&amp;iacute;ficos. Es un punto de tiempo basado en el campo, con una resoluci&amp;oacute;n de &lt;code&gt;std::chrono::days&lt;/code&gt; . &lt;code&gt;std::chrono::years&lt;/code&gt; - y &lt;code&gt;std::chrono::months&lt;/code&gt; aritm&amp;eacute;tica orientada se admite directamente. Una conversi&amp;oacute;n impl&amp;iacute;cita &lt;code&gt;std::chrono::sys_days&lt;/code&gt; desde std :: chrono :: sys_days permite que la aritm&amp;eacute;tica orientada a &lt;code&gt;std::chrono::days&lt;/code&gt; se realice de manera eficiente.</target>
        </trans-unit>
        <trans-unit id="0cbf6f6b92958e9c9f7ec51c3bde2113037a04ef" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;year_month_weekday_last&lt;/code&gt; represents the last weekday of a specific year and month. It is a field-based time point, with a resolution of &lt;code&gt;std::chrono::days&lt;/code&gt;, except that it is limited to pointing to the last weekday of a year and month. &lt;code&gt;std::chrono::years&lt;/code&gt;- and &lt;code&gt;std::chrono::months&lt;/code&gt;-oriented arithmetic are supported directly. An implicit conversion to &lt;code&gt;std::chrono::sys_days&lt;/code&gt; allows &lt;code&gt;std::chrono::days&lt;/code&gt;-oriented arithmetic to be performed efficiently.</source>
          <target state="translated">La clase &lt;code&gt;year_month_weekday_last&lt;/code&gt; representa el &amp;uacute;ltimo d&amp;iacute;a de la semana de un a&amp;ntilde;o y mes espec&amp;iacute;ficos. Es un punto de tiempo basado en el campo, con una resoluci&amp;oacute;n de &lt;code&gt;std::chrono::days&lt;/code&gt; , excepto que se limita a se&amp;ntilde;alar el &amp;uacute;ltimo d&amp;iacute;a de la semana de un a&amp;ntilde;o y mes. &lt;code&gt;std::chrono::years&lt;/code&gt; - y &lt;code&gt;std::chrono::months&lt;/code&gt; aritm&amp;eacute;tica orientada se admite directamente. Una conversi&amp;oacute;n impl&amp;iacute;cita a &lt;code&gt;std::chrono::sys_days&lt;/code&gt; permite que la aritm&amp;eacute;tica orientada a &lt;code&gt;std::chrono::days&lt;/code&gt; se realice de manera eficiente.</target>
        </trans-unit>
        <trans-unit id="b726267cecb9466b6b380f41a9832d612ade7092" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;zoned_time&lt;/code&gt; represents a logical pairing of a time zone and a &lt;code&gt;&lt;a href=&quot;time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; whose resolution is &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">La clase &lt;code&gt;zoned_time&lt;/code&gt; representa un emparejamiento l&amp;oacute;gico de una zona horaria y un &lt;code&gt;&lt;a href=&quot;time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; cuya resoluci&amp;oacute;n es la &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0cab7e0f7bb1c93af1cb9a4666997517ff2fba1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;zoned_traits&lt;/code&gt; provides a way to customize the behavior of the constructors of &lt;code&gt;std::chrono::zoned_time&lt;/code&gt; with custom time zone pointer types. In particular, it allows such types to specify the default time zone to use and the mapping of a time zone's name to the corresponding time zone pointer. It is acceptable for custom time zone pointer types to not support either operation, in which case the corresponding constructors of &lt;code&gt;zoned_time&lt;/code&gt; will not participate in overload resolution.</source>
          <target state="translated">La clase &lt;code&gt;zoned_traits&lt;/code&gt; proporciona una forma de personalizar el comportamiento de los constructores de &lt;code&gt;std::chrono::zoned_time&lt;/code&gt; con tipos de puntero de zona horaria personalizados. En particular, permite que estos tipos especifiquen la zona horaria predeterminada a utilizar y la asignaci&amp;oacute;n del nombre de una zona horaria al puntero de la zona horaria correspondiente. Es aceptable que los tipos de puntero de zona horaria personalizados no admitan ninguna operaci&amp;oacute;n, en cuyo caso los constructores correspondientes de &lt;code&gt;zoned_time&lt;/code&gt; no participar&amp;aacute;n en la resoluci&amp;oacute;n de sobrecarga.</target>
        </trans-unit>
        <trans-unit id="1fce24bd397b3fc59d265ef9283b0603741ea9e6" translate="yes" xml:space="preserve">
          <source>The class defines the following types:</source>
          <target state="translated">La clase define los siguientes tipos:</target>
        </trans-unit>
        <trans-unit id="c1d42e272c367b02bb7a725757feee6591362aaf" translate="yes" xml:space="preserve">
          <source>The class in the return type of &lt;code&gt;Derived::f&lt;/code&gt; must be either &lt;code&gt;Derived&lt;/code&gt; itself, or must be a &lt;a href=&quot;incomplete_type&quot;&gt;complete type&lt;/a&gt; at the point of declaration of &lt;code&gt;Derived::f&lt;/code&gt;.</source>
          <target state="translated">La clase en el tipo de retorno de &lt;code&gt;Derived::f&lt;/code&gt; debe ser &lt;code&gt;Derived&lt;/code&gt; en s&amp;iacute; misma o debe ser un &lt;a href=&quot;incomplete_type&quot;&gt;tipo completo&lt;/a&gt; en el punto de declaraci&amp;oacute;n de &lt;code&gt;Derived::f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23aa8c737cd141728071f9055d6ef22275b56310" translate="yes" xml:space="preserve">
          <source>The class keys &lt;code&gt;struct&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; are indistinguishable in C++, except that the default &lt;a href=&quot;access&quot;&gt;access mode&lt;/a&gt; and default &lt;a href=&quot;derived_class&quot;&gt;inheritance mode&lt;/a&gt; are &lt;code&gt;public&lt;/code&gt; if class declaration uses the &lt;code&gt;struct&lt;/code&gt; class-key and &lt;code&gt;private&lt;/code&gt; if the class declaration uses the &lt;code&gt;class&lt;/code&gt; class-key. Both &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;struct&lt;/code&gt; can be used in a &lt;a href=&quot;class&quot;&gt;class definition&lt;/a&gt;.</source>
          <target state="translated">Las claves de clase &lt;code&gt;struct&lt;/code&gt; y &lt;code&gt;class&lt;/code&gt; no se pueden distinguir en C ++, excepto que el modo de &lt;a href=&quot;access&quot;&gt;acceso&lt;/a&gt; predeterminado y el &lt;a href=&quot;derived_class&quot;&gt;modo de herencia&lt;/a&gt; predeterminado son &lt;code&gt;public&lt;/code&gt; si la declaraci&amp;oacute;n de clase utiliza la clave de clase &lt;code&gt;struct&lt;/code&gt; y &lt;code&gt;private&lt;/code&gt; si la declaraci&amp;oacute;n de clase utiliza la clave de &lt;code&gt;class&lt;/code&gt; class. Tanto la &lt;code&gt;class&lt;/code&gt; como la &lt;code&gt;struct&lt;/code&gt; se pueden usar en una &lt;a href=&quot;class&quot;&gt;definici&amp;oacute;n de clase&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1586b1dc4e3f7b882ff5d87af7c14b4d7906a5ea" translate="yes" xml:space="preserve">
          <source>The class satisfies the requirements of &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt; and &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable&lt;/a&gt;, but not the requirements of either &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; or &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;.</source>
          <target state="translated">La clase satisface los requisitos de &lt;a href=&quot;../named_req/moveconstructible&quot;&gt;MoveConstructible&lt;/a&gt; y &lt;a href=&quot;../named_req/moveassignable&quot;&gt;MoveAssignable&lt;/a&gt; , pero no los requisitos de &lt;a href=&quot;../named_req/copyconstructible&quot;&gt;CopyConstructible&lt;/a&gt; o &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="976424624ce0eeeaf2ff5fa550e55aefe6c4b670" translate="yes" xml:space="preserve">
          <source>The class specifier for a union declaration is similar to &lt;a href=&quot;class&quot;&gt;class or struct&lt;/a&gt; declaration:</source>
          <target state="translated">El especificador de clase para una declaraci&amp;oacute;n de uni&amp;oacute;n es similar a la declaraci&amp;oacute;n de &lt;a href=&quot;class&quot;&gt;clase o estructura&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="355599287a2d30891deccc040199bf8dd47ddb92" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_common_reference&lt;/code&gt; is a customization point that allows users to influence the result of &lt;code&gt;common_reference&lt;/code&gt; for user-defined types (typically proxy references). The primary template is empty.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_common_reference&lt;/code&gt; es un punto de personalizaci&amp;oacute;n que permite a los usuarios influir en el resultado de &lt;code&gt;common_reference&lt;/code&gt; para los tipos definidos por el usuario (generalmente referencias de proxy). La plantilla principal est&amp;aacute; vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="2dc44e02a34b25badf679ff2fa5512678041ec5e" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_fstream&lt;/code&gt; implements high-level input/output operations on file based streams. It interfaces a file-based streambuffer (&lt;code&gt;&lt;a href=&quot;basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt;) with the high-level interface of (&lt;code&gt;&lt;a href=&quot;basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_fstream&lt;/code&gt; implementa operaciones de entrada / salida de alto nivel en secuencias basadas en archivos. Hace interfaz con un streambuffer basado en archivos ( &lt;code&gt;&lt;a href=&quot;basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt; ) con la interfaz de alto nivel de ( &lt;code&gt;&lt;a href=&quot;basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="038c0fe0b240f396bce88928ba29e4ed89f41c35" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_ifstream&lt;/code&gt; implements high-level input operations on file based streams. It interfaces a file-based streambuffer (&lt;code&gt;&lt;a href=&quot;basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt;) with the high-level interface of (&lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_ifstream&lt;/code&gt; implementa operaciones de entrada de alto nivel en secuencias basadas en archivos. Hace interfaz con un streambuffer basado en archivos ( &lt;code&gt;&lt;a href=&quot;basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt; ) con la interfaz de alto nivel de ( &lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f70957a917c7c6e79e4b69f46be0693edc917904" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_iostream&lt;/code&gt; provides support for high level input/output operations on streams. The supported operations include sequential reading or writing and formatting. This functionality is implemented over the interface provided by the &lt;code&gt;basic_streambuf&lt;/code&gt; class. It is accessed through &lt;code&gt;basic_ios&lt;/code&gt; class.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_iostream&lt;/code&gt; proporciona soporte para operaciones de entrada / salida de alto nivel en flujos. Las operaciones admitidas incluyen lectura secuencial o escritura y formateo. Esta funcionalidad se implementa a trav&amp;eacute;s de la interfaz proporcionada por la clase &lt;code&gt;basic_streambuf&lt;/code&gt; . Se accede a trav&amp;eacute;s de la clase &lt;code&gt;basic_ios&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f48eb60dadf7531f652d15977856f83c57372f1" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_istream&lt;/code&gt; provides support for high level input operations on character streams. The supported operations include formatted input (e.g. integer values or whitespace-separated characters and characters strings) and unformatted input (e.g. raw characters and character arrays). This functionality is implemented in terms of the interface provided by the underlying &lt;code&gt;basic_streambuf&lt;/code&gt; class, accessed through the &lt;code&gt;basic_ios&lt;/code&gt; base class. The only non-inherited data member of &lt;code&gt;basic_istream&lt;/code&gt;, in most implementations, is the value returned by &lt;a href=&quot;basic_istream/gcount&quot;&gt;&lt;code&gt;basic_istream::gcount()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_istream&lt;/code&gt; proporciona soporte para operaciones de entrada de alto nivel en secuencias de caracteres. Las operaciones admitidas incluyen entradas formateadas (por ejemplo, valores enteros o caracteres separados por espacios en blanco y cadenas de caracteres) y entradas sin formato (por ejemplo, caracteres sin formato y matrices de caracteres). Esta funcionalidad se implementa en t&amp;eacute;rminos de la interfaz proporcionada por la clase subyacente &lt;code&gt;basic_streambuf&lt;/code&gt; , a la que se accede a trav&amp;eacute;s de la clase base &lt;code&gt;basic_ios&lt;/code&gt; . El &amp;uacute;nico miembro de datos no heredado de &lt;code&gt;basic_istream&lt;/code&gt; , en la mayor&amp;iacute;a de las implementaciones, es el valor devuelto por &lt;a href=&quot;basic_istream/gcount&quot;&gt; &lt;code&gt;basic_istream::gcount()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91ba0965e9c562f3a8c3efae66ebf65ef188a7a8" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_ofstream&lt;/code&gt; implements high-level output operations on file based streams. It interfaces a file-based streambuffer (&lt;code&gt;&lt;a href=&quot;basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt;) with the high-level interface of (&lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_ofstream&lt;/code&gt; implementa operaciones de salida de alto nivel en secuencias basadas en archivos. Hace interfaz con un streambuffer basado en archivos ( &lt;code&gt;&lt;a href=&quot;basic_filebuf&quot;&gt;std::basic_filebuf&lt;/a&gt;&lt;/code&gt; ) con la interfaz de alto nivel de ( &lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="058993ab90ece7b9a84ecbfb0f86f82f2260e21f" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_ostream&lt;/code&gt; provides support for high level output operations on character streams. The supported operations include formatted output (e.g. integer values) and unformatted output (e.g. raw characters and character arrays). This functionality is implemented in terms of the interface provided by the &lt;code&gt;basic_streambuf&lt;/code&gt; class, accessed through the &lt;code&gt;basic_ios&lt;/code&gt; base class. In typical implementations, &lt;code&gt;basic_ostream&lt;/code&gt; has no non-inherited data members.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_ostream&lt;/code&gt; proporciona soporte para operaciones de salida de alto nivel en secuencias de caracteres. Las operaciones admitidas incluyen salida formateada (por ejemplo, valores enteros) y salida sin formato (por ejemplo, caracteres sin formato y matrices de caracteres). Esta funcionalidad se implementa en t&amp;eacute;rminos de la interfaz proporcionada por la clase &lt;code&gt;basic_streambuf&lt;/code&gt; , a la que se accede a trav&amp;eacute;s de la clase base &lt;code&gt;basic_ios&lt;/code&gt; . En implementaciones t&amp;iacute;picas, &lt;code&gt;basic_ostream&lt;/code&gt; no tiene miembros de datos no heredados.</target>
        </trans-unit>
        <trans-unit id="0e7e639aa5c9b05b5996b19220f4281108f4b3af" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_regex&lt;/code&gt; provides a general framework for holding regular expressions.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_regex&lt;/code&gt; proporciona un marco general para contener expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="b81da74022682d007286a821128a6af2b9668a8d" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_string&lt;/code&gt; stores and manipulates sequences of &lt;a href=&quot;../language/types#Character_types&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt;-like objects, which are non-array objects of &lt;a href=&quot;../named_req/trivialtype&quot;&gt;trivial&lt;/a&gt;&lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;standard-layout&lt;/a&gt; type. The class is dependent neither on the character type nor on the nature of operations on that type. The definitions of the operations are supplied via the &lt;code&gt;Traits&lt;/code&gt; template parameter - a specialization of &lt;code&gt;&lt;a href=&quot;char_traits&quot;&gt;std::char_traits&lt;/a&gt;&lt;/code&gt; or a compatible traits class. &lt;code&gt;Traits::char_type&lt;/code&gt; and &lt;code&gt;CharT&lt;/code&gt; must name the same type; otherwise the program is ill-formed.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_string&lt;/code&gt; almacena y manipula secuencias de objetos tipo &lt;a href=&quot;../language/types#Character_types&quot;&gt; &lt;code&gt;char&lt;/code&gt; &lt;/a&gt; , que son objetos sin matriz de tipo &lt;a href=&quot;../named_req/trivialtype&quot;&gt;trivial &lt;/a&gt;&lt;a href=&quot;../named_req/standardlayouttype&quot;&gt;de dise&amp;ntilde;o est&amp;aacute;ndar&lt;/a&gt; . La clase no depende ni del tipo de personaje ni de la naturaleza de las operaciones en ese tipo. Las definiciones de las operaciones se proporcionan a trav&amp;eacute;s del par&amp;aacute;metro de plantilla &lt;code&gt;Traits&lt;/code&gt; , una especializaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;char_traits&quot;&gt;std::char_traits&lt;/a&gt;&lt;/code&gt; o una clase de rasgos compatible. &lt;code&gt;Traits::char_type&lt;/code&gt; y &lt;code&gt;CharT&lt;/code&gt; deben nombrar el mismo tipo; de lo contrario, el programa est&amp;aacute; mal formado.</target>
        </trans-unit>
        <trans-unit id="3529e9d1493b34a499972b62e42372d741fea4ca" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;basic_string_view&lt;/code&gt; describes an object that can refer to a constant contiguous sequence of &lt;code&gt;char&lt;/code&gt;-like objects with the first element of the sequence at position zero.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;basic_string_view&lt;/code&gt; describe un objeto que puede referirse a una secuencia contigua constante de objetos tipo &lt;code&gt;char&lt;/code&gt; con el primer elemento de la secuencia en la posici&amp;oacute;n cero.</target>
        </trans-unit>
        <trans-unit id="7507c73a003171ab458d8f695b3576c9147c0031" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;bitset&lt;/code&gt; represents a fixed-size sequence of &lt;code&gt;N&lt;/code&gt; bits. Bitsets can be manipulated by standard logic operators and converted to and from strings and integers.</source>
          <target state="translated">El conjunto de &lt;code&gt;bitset&lt;/code&gt; plantilla de clase representa una secuencia de tama&amp;ntilde;o fijo de &lt;code&gt;N&lt;/code&gt; bits. Los conjuntos de bits pueden ser manipulados por operadores l&amp;oacute;gicos est&amp;aacute;ndar y convertidos hacia y desde cadenas y enteros.</target>
        </trans-unit>
        <trans-unit id="4d6cbadd3e49e177a9f79321e48eb0992ca418a2" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;span&lt;/code&gt; describes an object that can refer to a contiguous sequence of objects with the first element of the sequence at position zero. A &lt;code&gt;span&lt;/code&gt; can either have a</source>
          <target state="translated">El &lt;code&gt;span&lt;/code&gt; plantilla de clase describe un objeto que puede referirse a una secuencia contigua de objetos con el primer elemento de la secuencia en la posici&amp;oacute;n cero. Un &lt;code&gt;span&lt;/code&gt; puede tener un</target>
        </trans-unit>
        <trans-unit id="23d03690a372ed970025d8a63d898a73cc806a78" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::basic_istringstream&lt;/code&gt; implements input operations on memory (&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;) based streams. It essentially wraps a raw string device implementation (&lt;code&gt;&lt;a href=&quot;basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt;) into a higher-level interface (&lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt;). The complete interface to unique &lt;code&gt;std::basic_stringbuf&lt;/code&gt; members is provided.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::basic_istringstream&lt;/code&gt; implementa operaciones de entrada en flujos basados en memoria ( &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; ). B&amp;aacute;sicamente, envuelve una implementaci&amp;oacute;n de dispositivo de cadena sin &lt;code&gt;&lt;a href=&quot;basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt; ( std :: basic_stringbuf ) en una interfaz de nivel superior ( &lt;code&gt;&lt;a href=&quot;basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&lt;/code&gt; ). Se proporciona la interfaz completa para miembros &lt;code&gt;std::basic_stringbuf&lt;/code&gt; &amp;uacute;nicos .</target>
        </trans-unit>
        <trans-unit id="caadefd6d3470a314eb57d7f6f435dad008491e3" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::basic_ostringstream&lt;/code&gt; implements output operations on memory (&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;) based streams. It essentially wraps a raw string device implementation (&lt;code&gt;&lt;a href=&quot;basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt;) into a higher-level interface (&lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt;). The complete interface to unique &lt;code&gt;std::basic_stringbuf&lt;/code&gt; members is provided.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::basic_ostringstream&lt;/code&gt; implementa operaciones de salida en flujos basados en memoria ( &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; ). B&amp;aacute;sicamente, envuelve una implementaci&amp;oacute;n de dispositivo de cadena sin &lt;code&gt;&lt;a href=&quot;basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt; ( std :: basic_stringbuf ) en una interfaz de nivel superior ( &lt;code&gt;&lt;a href=&quot;basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; ). Se proporciona la interfaz completa para miembros &lt;code&gt;std::basic_stringbuf&lt;/code&gt; &amp;uacute;nicos .</target>
        </trans-unit>
        <trans-unit id="ac98e5b30fb10492d8969c7963b1fe1e68e40896" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::basic_osyncstream&lt;/code&gt; is a convenience wrapper for &lt;a href=&quot;basic_syncbuf&quot;&gt;&lt;code&gt;std::basic_syncbuf&lt;/code&gt;&lt;/a&gt;. It provides a mechanism to synchronize threads writing to the same stream.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::basic_osyncstream&lt;/code&gt; es un contenedor conveniente para &lt;a href=&quot;basic_syncbuf&quot;&gt; &lt;code&gt;std::basic_syncbuf&lt;/code&gt; &lt;/a&gt; . Proporciona un mecanismo para sincronizar hilos que escriben en la misma secuencia.</target>
        </trans-unit>
        <trans-unit id="bee08bb9ce8d30333290b0627f454f47f97b513c" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::basic_stringstream&lt;/code&gt; implements input/output operations on memory (&lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt;) based streams. It essentially wraps a raw string device implementation (&lt;code&gt;&lt;a href=&quot;basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt;) into a higher-level interface (&lt;code&gt;&lt;a href=&quot;basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt;). The complete interface to unique &lt;code&gt;std::basic_stringbuf&lt;/code&gt; members is provided.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::basic_stringstream&lt;/code&gt; implementa operaciones de entrada / salida en flujos basados en memoria ( &lt;code&gt;&lt;a href=&quot;../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; ). B&amp;aacute;sicamente, envuelve una implementaci&amp;oacute;n de dispositivo de cadena sin &lt;code&gt;&lt;a href=&quot;basic_stringbuf&quot;&gt;std::basic_stringbuf&lt;/a&gt;&lt;/code&gt; ( std :: basic_stringbuf ) en una interfaz de nivel superior ( &lt;code&gt;&lt;a href=&quot;basic_iostream&quot;&gt;std::basic_iostream&lt;/a&gt;&lt;/code&gt; ). Se proporciona la interfaz completa para miembros &lt;code&gt;std::basic_stringbuf&lt;/code&gt; &amp;uacute;nicos .</target>
        </trans-unit>
        <trans-unit id="aaa9f8a35a71bdecd961c1c3379e795b83b36290" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::common_comparison_category&lt;/code&gt; provides an alias (as the member typedef &lt;code&gt;type&lt;/code&gt;) for the strongest comparison category to which all of the template arguments &lt;code&gt;Ts...&lt;/code&gt; can be converted.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::common_comparison_category&lt;/code&gt; proporciona un alias (como el miembro typedef &lt;code&gt;type&lt;/code&gt; ) para la categor&amp;iacute;a de comparaci&amp;oacute;n m&amp;aacute;s fuerte a la que se pueden convertir todos los argumentos de plantilla &lt;code&gt;Ts...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f74e8175eba48e378e9ab6cf198ec8d71e58b039" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::future&lt;/code&gt; provides a mechanism to access the result of asynchronous operations:</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::future&lt;/code&gt; proporciona un mecanismo para acceder al resultado de operaciones asincr&amp;oacute;nicas:</target>
        </trans-unit>
        <trans-unit id="b7a4e20b605046d0489bd9d4193b2c75bc21bd0c" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::integer_sequence&lt;/code&gt; represents a compile-time sequence of integers. When used as an argument to a &lt;a href=&quot;../language/function_template&quot;&gt;function template&lt;/a&gt;, the &lt;a href=&quot;../language/parameter_pack&quot;&gt;parameter pack&lt;/a&gt;&lt;code&gt;Ints&lt;/code&gt; can be deduced and used in pack expansion.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::integer_sequence&lt;/code&gt; representa una secuencia de enteros en tiempo de compilaci&amp;oacute;n. Cuando se usa como argumento para una &lt;a href=&quot;../language/function_template&quot;&gt;plantilla de funci&amp;oacute;n&lt;/a&gt; , el &lt;a href=&quot;../language/parameter_pack&quot;&gt;paquete de par&amp;aacute;metros &lt;/a&gt; &lt;code&gt;Ints&lt;/code&gt; se puede deducir y usar en la expansi&amp;oacute;n del paquete.</target>
        </trans-unit>
        <trans-unit id="639e2365e83d6e0a1ce1cee5cea25487d0336a45" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::match_results&lt;/code&gt; holds a collection of character sequences that represent the result of a regular expression match.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::match_results&lt;/code&gt; contiene una colecci&amp;oacute;n de secuencias de caracteres que representan el resultado de una coincidencia de expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="5cd218e9c79d048cdc2f4bfc83a128d5a613b938" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::optional&lt;/code&gt; manages an</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::optional&lt;/code&gt; gestiona un</target>
        </trans-unit>
        <trans-unit id="7b795144302fc0eec8c45d022d69b16abf2a0f04" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::packaged_task&lt;/code&gt; wraps any &lt;a href=&quot;../named_req/callable&quot;&gt;Callable&lt;/a&gt; target (function, lambda expression, bind expression, or another function object) so that it can be invoked asynchronously. Its return value or exception thrown is stored in a shared state which can be accessed through &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::packaged_task&lt;/code&gt; &lt;a href=&quot;../named_req/callable&quot;&gt;packaged_task&lt;/a&gt; envuelve cualquier objetivo invocable (funci&amp;oacute;n, expresi&amp;oacute;n lambda, expresi&amp;oacute;n de enlace u otro objeto de funci&amp;oacute;n) para que pueda invocarse de forma asincr&amp;oacute;nica. Su valor de retorno o excepci&amp;oacute;n lanzada se almacena en un estado compartido al que se puede acceder a trav&amp;eacute;s de objetos &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1f55e890f3d93b7c69638340290c189f4316224" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::pmr::polymorphic_allocator&lt;/code&gt; is an &lt;a href=&quot;../named_req/allocator&quot;&gt;Allocator&lt;/a&gt; whose allocation behavior depends on the memory resource it is constructed with. Thus, different instances of &lt;code&gt;polymorphic_allocator&lt;/code&gt; can exhibit entirely different allocation behavior. This runtime polymorphism allows objects using &lt;code&gt;polymorphic_allocator&lt;/code&gt; to behave as if they used different allocator types at run time despite the identical static allocator type.</source>
          <target state="translated">La clase de plantilla &lt;code&gt;std::pmr::polymorphic_allocator&lt;/code&gt; es un &lt;a href=&quot;../named_req/allocator&quot;&gt;asignador&lt;/a&gt; cuyo comportamiento depende de la asignaci&amp;oacute;n de los recursos de memoria que se construye con. Por lo tanto, diferentes instancias de &lt;code&gt;polymorphic_allocator&lt;/code&gt; pueden exhibir un comportamiento de asignaci&amp;oacute;n completamente diferente. Este polimorfismo de tiempo de ejecuci&amp;oacute;n permite que los objetos que utilizan el asignador &lt;code&gt;polymorphic_allocator&lt;/code&gt; comporten como si usaran diferentes tipos de asignador en tiempo de ejecuci&amp;oacute;n a pesar del tipo de asignador est&amp;aacute;tico id&amp;eacute;ntico.</target>
        </trans-unit>
        <trans-unit id="64a4aa64274c3e4ddf9c6f8ea707cabe8df1697d" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::promise&lt;/code&gt; provides a facility to store a value or an exception that is later acquired asynchronously via a &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; object created by the &lt;code&gt;std::promise&lt;/code&gt; object. Note that the &lt;code&gt;std::promise&lt;/code&gt; object is meant to be used only once.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::promise&lt;/code&gt; proporciona una facilidad para almacenar un valor o una excepci&amp;oacute;n que luego se adquiere de forma as&amp;iacute;ncrona a trav&amp;eacute;s de un objeto &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; creado por el objeto &lt;code&gt;std::promise&lt;/code&gt; . Tenga en cuenta que el objeto &lt;code&gt;std::promise&lt;/code&gt; est&amp;aacute; destinado a usarse solo una vez.</target>
        </trans-unit>
        <trans-unit id="048062dc3b140831e39899a4170ae57a0e64b713" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::ratio&lt;/code&gt; and associated templates provide compile-time rational arithmetic support. Each instantiation of this template exactly represents any finite rational number.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::ratio&lt;/code&gt; y las plantillas asociadas proporcionan soporte aritm&amp;eacute;tico racional en tiempo de compilaci&amp;oacute;n. Cada instanciaci&amp;oacute;n de esta plantilla representa exactamente cualquier n&amp;uacute;mero racional finito.</target>
        </trans-unit>
        <trans-unit id="b714fec242cc94f139481788fee6d47f6bf712bd" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::ratio&lt;/code&gt; provides &lt;a href=&quot;../ratio&quot;&gt;compile-time rational arithmetic&lt;/a&gt; support. Each instantiation of this template exactly represents any finite rational number as long as its numerator &lt;code&gt;Num&lt;/code&gt; and denominator &lt;code&gt;Denom&lt;/code&gt; are representable as compile-time constants of type &lt;code&gt;&lt;a href=&quot;../../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt;. In addition, &lt;code&gt;Denom&lt;/code&gt; may not be zero and may not be equal to the most negative value.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::ratio&lt;/code&gt; proporciona soporte &lt;a href=&quot;../ratio&quot;&gt;aritm&amp;eacute;tico racional en tiempo de compilaci&amp;oacute;n&lt;/a&gt; . Cada instancia de esta plantilla representa exactamente cualquier n&amp;uacute;mero racional finito siempre que su numerador &lt;code&gt;Num&lt;/code&gt; y su denominador &lt;code&gt;Denom&lt;/code&gt; sean representables como constantes de tiempo de compilaci&amp;oacute;n de tipo &lt;code&gt;&lt;a href=&quot;../../types/integer&quot;&gt;std::intmax_t&lt;/a&gt;&lt;/code&gt; . Adem&amp;aacute;s, &lt;code&gt;Denom&lt;/code&gt; puede no ser cero y puede no ser igual al valor m&amp;aacute;s negativo.</target>
        </trans-unit>
        <trans-unit id="8c48d82d4f5c30984ee05d53392aeeb13cd9e2bc" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::shared_future&lt;/code&gt; provides a mechanism to access the result of asynchronous operations, similar to &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt;, except that multiple threads are allowed to wait for the same shared state. Unlike &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt;, which is only moveable (so only one instance can refer to any particular asynchronous result), &lt;code&gt;std::shared_future&lt;/code&gt; is copyable and multiple shared future objects may refer to the same shared state.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::shared_future&lt;/code&gt; proporciona un mecanismo para acceder al resultado de operaciones asincr&amp;oacute;nicas, similar a &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; , excepto que se permite que varios subprocesos esperen el mismo estado compartido. A diferencia de &lt;code&gt;&lt;a href=&quot;future&quot;&gt;std::future&lt;/a&gt;&lt;/code&gt; , que solo se puede mover (por lo que solo una instancia puede referirse a un resultado asincr&amp;oacute;nico particular), &lt;code&gt;std::shared_future&lt;/code&gt; es copiable y varios objetos futuros compartidos pueden referirse al mismo estado compartido.</target>
        </trans-unit>
        <trans-unit id="1750b83514f87a70ecb7f6d559c2d4086197e2c5" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;std::variant&lt;/code&gt; represents a type-safe &lt;a href=&quot;../language/union&quot;&gt;union&lt;/a&gt;. An instance of &lt;code&gt;std::variant&lt;/code&gt; at any given time either holds a value of one of its alternative types, or in the case of error - no value (this state is hard to achieve, see &lt;a href=&quot;variant/valueless_by_exception&quot;&gt;&lt;code&gt;valueless_by_exception&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">La plantilla de clase &lt;code&gt;std::variant&lt;/code&gt; representa una &lt;a href=&quot;../language/union&quot;&gt;uni&amp;oacute;n de&lt;/a&gt; tipo seguro . Una instancia de &lt;code&gt;std::variant&lt;/code&gt; en cualquier momento tiene un valor de uno de sus tipos alternativos o, en el caso de error, sin valor (este estado es dif&amp;iacute;cil de lograr, vea &lt;a href=&quot;variant/valueless_by_exception&quot;&gt; &lt;code&gt;valueless_by_exception&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="df780d19352ca77a9e81e07d0081e62704dfbeba" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;sub_match&lt;/code&gt; is used by the regular expression engine to denote sequences of characters matched by marked sub-expressions. A match is a &lt;code&gt;[begin, end)&lt;/code&gt; pair within the target range matched by the regular expression, but with additional observer functions to enhance code clarity.</source>
          <target state="translated">La plantilla de clase &lt;code&gt;sub_match&lt;/code&gt; es utilizada por el motor de expresiones regulares para denotar secuencias de caracteres que coinciden con subexpresiones marcadas. Una coincidencia es un par &lt;code&gt;[begin, end)&lt;/code&gt; dentro del rango objetivo que coincide con la expresi&amp;oacute;n regular, pero con funciones de observador adicionales para mejorar la claridad del c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="ac9704077992d9fc373489a50f4bbca360b3bf54" translate="yes" xml:space="preserve">
          <source>The class template &lt;code&gt;time_of_day&lt;/code&gt; splits a &lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; representing time since midnight into a &quot;broken down&quot; time such as</source>
          <target state="translated">La plantilla de clase &lt;code&gt;time_of_day&lt;/code&gt; divide un &lt;code&gt;&lt;a href=&quot;duration&quot;&gt;std::chrono::duration&lt;/a&gt;&lt;/code&gt; representa el tiempo desde la medianoche en un tiempo &quot;desglosado&quot; como</target>
        </trans-unit>
        <trans-unit id="3eb1fefb52f9b56042037b5cf5dfd0d4fbe27478" translate="yes" xml:space="preserve">
          <source>The class template acts as a wrapper to the underlying container - only a specific set of functions is provided. The queue pushes the elements on the back of the underlying container and pops them from the front.</source>
          <target state="translated">La plantilla de la clase actúa como un envoltorio del contenedor subyacente-sólo se proporciona un conjunto específico de funciones.La cola empuja los elementos de la parte posterior del contenedor subyacente y los hace saltar por delante.</target>
        </trans-unit>
        <trans-unit id="66376115affc65d77a1dba188bf784079f132234" translate="yes" xml:space="preserve">
          <source>The class template acts as a wrapper to the underlying container - only a specific set of functions is provided. The stack pushes and pops the element from the back of the underlying container, known as the top of the stack.</source>
          <target state="translated">La plantilla de la clase actúa como un envoltorio del contenedor subyacente-sólo se proporciona un conjunto específico de funciones.La pila empuja y hace saltar el elemento de la parte posterior del contenedor subyacente,conocido como la parte superior de la pila.</target>
        </trans-unit>
        <trans-unit id="913d33504f86e60b7d594711e133632d799e9139" translate="yes" xml:space="preserve">
          <source>The class type &lt;code&gt;std::partial_ordering&lt;/code&gt; is the result type of a &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;three-way comparison&lt;/a&gt; that.</source>
          <target state="translated">El tipo de clase &lt;code&gt;std::partial_ordering&lt;/code&gt; es el tipo de resultado de una &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;comparaci&amp;oacute;n tripartita&lt;/a&gt; que.</target>
        </trans-unit>
        <trans-unit id="5f8fd1cd051ed62f4aae2af2ef778e18fa5deae5" translate="yes" xml:space="preserve">
          <source>The class type &lt;code&gt;std::strong_equality&lt;/code&gt; is the result type of a &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;three-way comparison&lt;/a&gt; that.</source>
          <target state="translated">El tipo de clase &lt;code&gt;std::strong_equality&lt;/code&gt; es el tipo de resultado de una &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;comparaci&amp;oacute;n &lt;/a&gt;tripartita que.</target>
        </trans-unit>
        <trans-unit id="f0b391e8b1d2924cc2df0c071f824a13535a3913" translate="yes" xml:space="preserve">
          <source>The class type &lt;code&gt;std::strong_ordering&lt;/code&gt; is the result type of a &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;three-way comparison&lt;/a&gt; that.</source>
          <target state="translated">El tipo de clase &lt;code&gt;std::strong_ordering&lt;/code&gt; es el tipo de resultado de una &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;comparaci&amp;oacute;n &lt;/a&gt;tripartita que.</target>
        </trans-unit>
        <trans-unit id="94948fee4206e5a063212825c1a5dba324d74bc2" translate="yes" xml:space="preserve">
          <source>The class type &lt;code&gt;std::weak_equality&lt;/code&gt; is the result type of a &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;three-way comparison&lt;/a&gt; that.</source>
          <target state="translated">El tipo de clase &lt;code&gt;std::weak_equality&lt;/code&gt; es el tipo de resultado de una &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;comparaci&amp;oacute;n &lt;/a&gt;tripartita que.</target>
        </trans-unit>
        <trans-unit id="1ee17c787dc83810d3b5069706ce3e57df0497ff" translate="yes" xml:space="preserve">
          <source>The class type &lt;code&gt;std::weak_ordering&lt;/code&gt; is the result type of a &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;three-way comparison&lt;/a&gt; that.</source>
          <target state="translated">El tipo de clase &lt;code&gt;std::weak_ordering&lt;/code&gt; es el tipo de resultado de una &lt;a href=&quot;../../language/operator_comparison#Three-way_comparison&quot;&gt;comparaci&amp;oacute;n &lt;/a&gt;tripartita que.</target>
        </trans-unit>
        <trans-unit id="4701d5b65a3e69267b74f3e15bd5072a48820566" translate="yes" xml:space="preserve">
          <source>The class-key or &lt;code&gt;enum&lt;/code&gt; keyword present in the elaborated-type-specifier must agree in kind with the declaration to which the name in the elaborated-type-specifier refers.</source>
          <target state="translated">La clave de clase o la palabra clave &lt;code&gt;enum&lt;/code&gt; presente en el especificador de tipo elaborado debe coincidir en especie con la declaraci&amp;oacute;n a la que se refiere el nombre en el especificador de tipo elaborado.</target>
        </trans-unit>
        <trans-unit id="24f685345d705e67dcaed28004c42cbbe5fa66c7" translate="yes" xml:space="preserve">
          <source>The class-name or enum-name in the elaborated type specifier may either be a simple identifier or be a &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;qualified-id&lt;/a&gt;. The name is looked up using &lt;a href=&quot;unqualified_lookup&quot;&gt;unqualified name lookup&lt;/a&gt; or &lt;a href=&quot;qualified_lookup&quot;&gt;qualified name lookup&lt;/a&gt;, depending on their appearance. But in either case, non-type names are not considered.</source>
          <target state="translated">El nombre de clase o nombre de enumeraci&amp;oacute;n en el especificador de tipo elaborado puede ser un identificador simple o un &lt;a href=&quot;name#Qualified_identifiers&quot;&gt;id&lt;/a&gt; . Calificado . El nombre se busca utilizando una &lt;a href=&quot;unqualified_lookup&quot;&gt;b&amp;uacute;squeda de nombre no &lt;/a&gt;&lt;a href=&quot;qualified_lookup&quot;&gt;calificada&lt;/a&gt; o una b&amp;uacute;squeda de nombre calificado , dependiendo de su apariencia. Pero en cualquier caso, no se consideran nombres que no sean de tipo.</target>
        </trans-unit>
        <trans-unit id="354603554cb293c18da720435d03777c84dbb5f8" translate="yes" xml:space="preserve">
          <source>The classes listed in the base-clause are direct base classes. Their bases are indirect base classes. The same class cannot be specified as a direct base class more than once, but the same class can be both direct and indirect base class.</source>
          <target state="translated">Las clases que figuran en la cláusula de base son clases de base directa.Sus bases son clases base indirectas.No se puede especificar la misma clase como clase base directa más de una vez,pero la misma clase puede ser tanto una clase base directa como indirecta.</target>
        </trans-unit>
        <trans-unit id="1cea83cbd5791acb1de079b9452c000b451656d7" translate="yes" xml:space="preserve">
          <source>The classification returned for the string &lt;code&gt;&quot;w&quot;&lt;/code&gt; may be exactly the same as &lt;code&gt;&quot;alnum&quot;&lt;/code&gt;, in which case &lt;code&gt;&lt;a href=&quot;isctype&quot;&gt;isctype()&lt;/a&gt;&lt;/code&gt; adds '_' explicitly.</source>
          <target state="translated">La clasificaci&amp;oacute;n devuelta para la cadena &lt;code&gt;&quot;w&quot;&lt;/code&gt; puede ser exactamente la misma que &lt;code&gt;&quot;alnum&quot;&lt;/code&gt; , en cuyo caso &lt;code&gt;&lt;a href=&quot;isctype&quot;&gt;isctype()&lt;/a&gt;&lt;/code&gt; agrega '_' expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="3f685e71298d6329f3079585486868fc8d36b2af" translate="yes" xml:space="preserve">
          <source>The clock &lt;code&gt;std::chrono::gps_clock&lt;/code&gt; is a &lt;a href=&quot;../named_req/clock&quot;&gt;Clock&lt;/a&gt; that represents Global Positioning System (GPS) time. It measures time since 00:00:00, 6 January 1980 UTC.</source>
          <target state="translated">El reloj &lt;code&gt;std::chrono::gps_clock&lt;/code&gt; es un &lt;a href=&quot;../named_req/clock&quot;&gt;reloj&lt;/a&gt; que representa la hora del sistema de posicionamiento global (GPS). Mide el tiempo desde las 00:00:00, 6 de enero de 1980 UTC.</target>
        </trans-unit>
        <trans-unit id="bfee064193b9d48bafa8ff6f66cf6b7aa290e331" translate="yes" xml:space="preserve">
          <source>The clock &lt;code&gt;std::chrono::tai_clock&lt;/code&gt; is a &lt;a href=&quot;../named_req/clock&quot;&gt;Clock&lt;/a&gt; that represents International Atomic Time (TAI). It measures time since 00:00:00, 1 January 1958, and is offset 10 seconds ahead of UTC at that date (i.e., its epoch, 1958-01-01 00:00:00 TAI, is 1957-12-31 23:59:50 UTC).</source>
          <target state="translated">El reloj &lt;code&gt;std::chrono::tai_clock&lt;/code&gt; es un &lt;a href=&quot;../named_req/clock&quot;&gt;reloj&lt;/a&gt; que representa la hora at&amp;oacute;mica internacional (TAI). Mide el tiempo desde las 00:00:00, 1 de enero de 1958, y se compensa 10 segundos antes de UTC en esa fecha (es decir, su &amp;eacute;poca, 1958-01-01 00:00:00 TAI, es 1957-12-31 23 : 59: 50 UTC).</target>
        </trans-unit>
        <trans-unit id="e01eb84e78303a21a91228ca5b6543a355d6076f" translate="yes" xml:space="preserve">
          <source>The clock &lt;code&gt;std::chrono::utc_clock&lt;/code&gt; is a &lt;a href=&quot;../named_req/clock&quot;&gt;Clock&lt;/a&gt; that represents Coordinated Universal Time (UTC). It measures time since 00:00:00 UTC, Thursday, 1 January 1970, including leap seconds.</source>
          <target state="translated">El reloj &lt;code&gt;std::chrono::utc_clock&lt;/code&gt; es un &lt;a href=&quot;../named_req/clock&quot;&gt;reloj&lt;/a&gt; que representa la hora universal coordinada (UTC). Mide el tiempo desde las 00:00:00 UTC, jueves 1 de enero de 1970, incluidos los segundos bisiestos.</target>
        </trans-unit>
        <trans-unit id="2ce385b63b923a15e64d2067b2f70b70f476178d" translate="yes" xml:space="preserve">
          <source>The clock tied to &lt;code&gt;sleep_time&lt;/code&gt; is used, which means that adjustments of the clock are taken into account. Thus, the duration of the block might, but might not, be less or more than &lt;code&gt;sleep_time - Clock::now()&lt;/code&gt; at the time of the call, depending on the direction of the adjustment. The function also may block for longer than until after &lt;code&gt;sleep_time&lt;/code&gt; has been reached due to scheduling or resource contention delays.</source>
          <target state="translated">Se utiliza el reloj vinculado a &lt;code&gt;sleep_time&lt;/code&gt; , lo que significa que se tienen en cuenta los ajustes del reloj. Por lo tanto, la duraci&amp;oacute;n del bloqueo puede, pero no puede ser, menor o mayor que &lt;code&gt;sleep_time - Clock::now()&lt;/code&gt; en el momento de la llamada, dependiendo de la direcci&amp;oacute;n del ajuste. La funci&amp;oacute;n tambi&amp;eacute;n puede bloquear por m&amp;aacute;s tiempo que hasta despu&amp;eacute;s de &lt;code&gt;sleep_time&lt;/code&gt; se ha alcanzado debido a la programaci&amp;oacute;n o de recursos retrasos de contenci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fa793d7c160acf63000dc75ea7f5469cf01bff40" translate="yes" xml:space="preserve">
          <source>The clock tied to &lt;code&gt;timeout_time&lt;/code&gt; is used, which is not required to be a monotonic clock.There are no guarantees regarding the behavior of this function if the clock is adjusted discontinuously, but the existing implementations convert &lt;code&gt;timeout_time&lt;/code&gt; from &lt;code&gt;Clock&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../../chrono/system_clock&quot;&gt;std::chrono::system_clock&lt;/a&gt;&lt;/code&gt; and delegate to POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_cond_timedwait.html&quot;&gt;pthread_cond_timedwait&lt;/a&gt; so that the wait honors ajustments to the system clock, but not to the the user-provided &lt;code&gt;Clock&lt;/code&gt;. In any case, the function also may wait for longer than until after &lt;code&gt;timeout_time&lt;/code&gt; has been reached due to scheduling or resource contention delays.</source>
          <target state="translated">Se utiliza el reloj vinculado a &lt;code&gt;timeout_time&lt;/code&gt; , que no es obligatorio para ser un reloj mon&amp;oacute;tono. No hay garant&amp;iacute;as con respecto al comportamiento de esta funci&amp;oacute;n si el reloj se ajusta de forma discontinua, pero las implementaciones existentes convierten &lt;code&gt;timeout_time&lt;/code&gt; de &lt;code&gt;Clock&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;../../chrono/system_clock&quot;&gt;std::chrono::system_clock&lt;/a&gt;&lt;/code&gt; y delegue en POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_cond_timedwait.html&quot;&gt;pthread_cond_timedwait&lt;/a&gt; para que la espera respete los ajustes en el reloj del sistema, pero no en el &lt;code&gt;Clock&lt;/code&gt; proporcionado por el usuario . En cualquier caso, la funci&amp;oacute;n tambi&amp;eacute;n puede esperar m&amp;aacute;s tiempo que hasta despu&amp;eacute;s de que se haya alcanzado &lt;code&gt;timeout_time&lt;/code&gt; debido a retrasos en la programaci&amp;oacute;n o contenci&amp;oacute;n de recursos.</target>
        </trans-unit>
        <trans-unit id="0aadc299bcb27a0f52ccc24e233f06b40168f0f6" translate="yes" xml:space="preserve">
          <source>The clock tied to &lt;code&gt;timeout_time&lt;/code&gt; is used, which is not required to be a monotonic clock.There are no guarantees regarding the behavior of this function if the clock is adjusted discontinuously, but the existing implementations convert &lt;code&gt;timeout_time&lt;/code&gt; from &lt;code&gt;Clock&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../../chrono/system_clock&quot;&gt;std::chrono::system_clock&lt;/a&gt;&lt;/code&gt; and delegate to POSIX &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_cond_timedwait.html&quot;&gt;pthread_cond_timedwait&lt;/a&gt; so that the wait honors ajustments to the system clock, but not to the the user-provided &lt;code&gt;Clock&lt;/code&gt;. In any case, the function also may wait for longer than until after &lt;code&gt;timeout_time&lt;/code&gt; has been reached due to scheduling or resource contention delays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c4bc050b740626dbf1fc8c06b8c652935eaf67" translate="yes" xml:space="preserve">
          <source>The clock tied to &lt;code&gt;timeout_time&lt;/code&gt; is used, which means that adjustments of the clock are taken into account. Thus, the maximum duration of the block might, but might not, be less or more than &lt;code&gt;timeout_time - Clock::now()&lt;/code&gt; at the time of the call, depending on the direction of the adjustment. The function also may block for longer than until after &lt;code&gt;timeout_time&lt;/code&gt; has been reached due to scheduling or resource contention delays.</source>
          <target state="translated">Se utiliza el reloj vinculado a &lt;code&gt;timeout_time&lt;/code&gt; , lo que significa que se tienen en cuenta los ajustes del reloj. Por lo tanto, la duraci&amp;oacute;n m&amp;aacute;xima del bloque puede, pero no puede ser, menor o mayor que &lt;code&gt;timeout_time - Clock::now()&lt;/code&gt; en el momento de la llamada, dependiendo de la direcci&amp;oacute;n del ajuste. La funci&amp;oacute;n tambi&amp;eacute;n puede bloquearse durante m&amp;aacute;s tiempo que hasta despu&amp;eacute;s de que se haya alcanzado &lt;code&gt;timeout_time&lt;/code&gt; debido a retrasos en la programaci&amp;oacute;n o contenci&amp;oacute;n de recursos.</target>
        </trans-unit>
        <trans-unit id="894b1ae7ddba598ccce40d8b0f190492deb2041a" translate="yes" xml:space="preserve">
          <source>The code samples on this wiki &lt;a href=&quot;http://www.stroustrup.com/3rd_code.html&quot;&gt;follow Bjarne Stroustrup&lt;/a&gt; and &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rio-endl&quot;&gt;The C++ Core Guidelines&lt;/a&gt; in flushing the standard output only where necessary.</source>
          <target state="translated">Los ejemplos de c&amp;oacute;digo en esta wiki &lt;a href=&quot;http://www.stroustrup.com/3rd_code.html&quot;&gt;siguen las instrucciones de Bjarne Stroustrup&lt;/a&gt; y &lt;a href=&quot;https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rio-endl&quot;&gt;The C ++ Core Guidelines&lt;/a&gt; para enjuagar la salida est&amp;aacute;ndar solo cuando es necesario.</target>
        </trans-unit>
        <trans-unit id="3cc9e60597f252bb86bd1f42cb5d3cd1cfb8cda0" translate="yes" xml:space="preserve">
          <source>The collation key for the character sequence &lt;code&gt;[first, last)&lt;/code&gt; in the currently imbued locale.</source>
          <target state="translated">La clave de clasificaci&amp;oacute;n para la secuencia de caracteres &lt;code&gt;[first, last)&lt;/code&gt; en la configuraci&amp;oacute;n regional actualmente imbuida.</target>
        </trans-unit>
        <trans-unit id="b22d59729b28540e2c261fa1622c17f430bc0333" translate="yes" xml:space="preserve">
          <source>The combination is valid if &lt;code&gt;month()&lt;/code&gt; represents a valid month (&lt;code&gt;month().ok() == true&lt;/code&gt;), &lt;code&gt;unsigned{day()} &amp;gt;= 1&lt;/code&gt;, and &lt;code&gt;unsigned{day()} &amp;lt;= D&lt;/code&gt;, where D is the number of days in the month represented by &lt;code&gt;month()&lt;/code&gt;. The number of days in February is considered to be 29.</source>
          <target state="translated">La combinaci&amp;oacute;n es v&amp;aacute;lida si &lt;code&gt;month()&lt;/code&gt; representa un mes v&amp;aacute;lido ( &lt;code&gt;month().ok() == true&lt;/code&gt; ), &lt;code&gt;unsigned{day()} &amp;gt;= 1&lt;/code&gt; , y &lt;code&gt;unsigned{day()} &amp;lt;= D&lt;/code&gt; , donde D es el n&amp;uacute;mero de d&amp;iacute;as en el mes representado por &lt;code&gt;month()&lt;/code&gt; . El n&amp;uacute;mero de d&amp;iacute;as en febrero se considera 29.</target>
        </trans-unit>
        <trans-unit id="299149b66129ea51f7209f65e5c9c8a104c2e60d" translate="yes" xml:space="preserve">
          <source>The comma in various comma-separated lists, such as function argument lists (&lt;code&gt;f(a, b, c)&lt;/code&gt;) and initializer lists &lt;code&gt;int a[] = {1,2,3}&lt;/code&gt;, is not the comma operator. If the comma operator needs to be used in such contexts, it has to be parenthesized: &lt;code&gt;f(a, (n++, n+b), c)&lt;/code&gt;.</source>
          <target state="translated">La coma en varias listas separadas por comas, como las listas de argumentos de funci&amp;oacute;n ( &lt;code&gt;f(a, b, c)&lt;/code&gt; ) y las listas de inicializador &lt;code&gt;int a[] = {1,2,3}&lt;/code&gt; , no es el operador de coma. Si el operador de coma necesita ser utilizado en tales contextos, debe estar entre par&amp;eacute;ntesis: &lt;code&gt;f(a, (n++, n+b), c)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d488bf849908d324aa3b6792f690387cae01a82" translate="yes" xml:space="preserve">
          <source>The comma operator expressions have the form.</source>
          <target state="translated">Las expresiones del operador de la coma tienen la forma.</target>
        </trans-unit>
        <trans-unit id="1d08ab7bae20cdd9d29de0eca78f0d5770cf98f4" translate="yes" xml:space="preserve">
          <source>The comma operator is not overloaded by any class in the standard library. The boost library uses &lt;code&gt;operator,&lt;/code&gt; in &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/assign/doc/index.html#intro&quot;&gt;boost.assign&lt;/a&gt;, boost.spirit, and other libraries. The database access library &lt;a href=&quot;http://soci.sourceforge.net/doc.html&quot;&gt;SOCI&lt;/a&gt; also overloads &lt;code&gt;operator,&lt;/code&gt;.</source>
          <target state="translated">El operador de coma no est&amp;aacute; sobrecargado por ninguna clase en la biblioteca est&amp;aacute;ndar. La biblioteca de impulso utiliza &lt;code&gt;operator,&lt;/code&gt; en &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/assign/doc/index.html#intro&quot;&gt;boost.assign&lt;/a&gt; , boost.spirit y otras bibliotecas. La biblioteca de acceso a la base de datos &lt;a href=&quot;http://soci.sourceforge.net/doc.html&quot;&gt;SOCI&lt;/a&gt; tambi&amp;eacute;n sobrecarga &lt;code&gt;operator,&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ee4f5ef900c2c1e8795c0a21f449fdddc6bd839" translate="yes" xml:space="preserve">
          <source>The comma operator is not overloaded by any class in the standard library. The boost library uses &lt;code&gt;operator,&lt;/code&gt; in &lt;a href=&quot;https://www.boost.org/doc/libs/release/libs/assign/doc/index.html#intro&quot;&gt;boost.assign&lt;/a&gt;, boost.spirit, and other libraries. The database access library &lt;a href=&quot;http://soci.sourceforge.net/doc.html&quot;&gt;SOCI&lt;/a&gt; also overloads &lt;code&gt;operator,&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c800df5ac9c3f57a71dd8a0a1e138f4bcc97b764" translate="yes" xml:space="preserve">
          <source>The comma operator, &lt;code&gt;operator,&lt;/code&gt;. Unlike the built-in version, the overloads do not sequence their left operand before the right one.(until C++17) Because this operator may be overloaded, generic libraries use expressions such as &lt;code&gt;a,void(),b&lt;/code&gt; instead of &lt;code&gt;a,b&lt;/code&gt; to sequence execution of expressions of user-defined types. The boost library uses &lt;code&gt;operator,&lt;/code&gt; in &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/assign/doc/index.html#intro&quot;&gt;boost.assign&lt;/a&gt;, &lt;a href=&quot;https://github.com/boostorg/spirit/blob/develop/include/boost/spirit/home/qi/string/symbols.hpp#L317&quot;&gt;boost.spirit&lt;/a&gt;, and other libraries. The database access library &lt;a href=&quot;http://soci.sourceforge.net/doc.html&quot;&gt;SOCI&lt;/a&gt; also overloads &lt;code&gt;operator,&lt;/code&gt;.</source>
          <target state="translated">El operador coma, &lt;code&gt;operator,&lt;/code&gt; . A diferencia de la versi&amp;oacute;n incorporada, las sobrecargas no secuencian su operando izquierdo antes que el derecho. (Hasta C ++ 17) Debido a que este operador puede estar sobrecargado, las bibliotecas gen&amp;eacute;ricas usan expresiones como &lt;code&gt;a,void(),b&lt;/code&gt; lugar de &lt;code&gt;a,b&lt;/code&gt; para secuenciar la ejecuci&amp;oacute;n de expresiones de tipos definidos por el usuario. La biblioteca de impulso utiliza &lt;code&gt;operator,&lt;/code&gt; en &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/assign/doc/index.html#intro&quot;&gt;boost.assign&lt;/a&gt; , &lt;a href=&quot;https://github.com/boostorg/spirit/blob/develop/include/boost/spirit/home/qi/string/symbols.hpp#L317&quot;&gt;boost.spirit&lt;/a&gt; y otras bibliotecas. La biblioteca de acceso a la base de datos &lt;a href=&quot;http://soci.sourceforge.net/doc.html&quot;&gt;SOCI&lt;/a&gt; tambi&amp;eacute;n sobrecarga &lt;code&gt;operator,&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16d24df730e1ab002da856759abf17df9586adcc" translate="yes" xml:space="preserve">
          <source>The comma operator, &lt;code&gt;operator,&lt;/code&gt;. Unlike the built-in version, the overloads do not sequence their left operand before the right one.(until C++17) Because this operator may be overloaded, generic libraries use expressions such as &lt;code&gt;a,void(),b&lt;/code&gt; instead of &lt;code&gt;a,b&lt;/code&gt; to sequence execution of expressions of user-defined types. The boost library uses &lt;code&gt;operator,&lt;/code&gt; in &lt;a href=&quot;https://www.boost.org/doc/libs/release/libs/assign/doc/index.html#intro&quot;&gt;boost.assign&lt;/a&gt;, &lt;a href=&quot;https://github.com/boostorg/spirit/blob/develop/include/boost/spirit/home/qi/string/symbols.hpp#L317&quot;&gt;boost.spirit&lt;/a&gt;, and other libraries. The database access library &lt;a href=&quot;http://soci.sourceforge.net/doc.html&quot;&gt;SOCI&lt;/a&gt; also overloads &lt;code&gt;operator,&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6cb0170adc4e3800c9ced00cfa4ccffb490a90" translate="yes" xml:space="preserve">
          <source>The common type of two &lt;code&gt;&lt;a href=&quot;../time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; types is a &lt;code&gt;&lt;a href=&quot;../time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; with the same clock as the two types and the &lt;code&gt;&lt;a href=&quot;../../types/common_type&quot;&gt;std::common_type&lt;/a&gt;&lt;/code&gt; of their durations.</source>
          <target state="translated">El tipo com&amp;uacute;n de dos tipos &lt;code&gt;&lt;a href=&quot;../time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;../time_point&quot;&gt;std::chrono::time_point&lt;/a&gt;&lt;/code&gt; con el mismo reloj que los dos tipos y &lt;code&gt;&lt;a href=&quot;../../types/common_type&quot;&gt;std::common_type&lt;/a&gt;&lt;/code&gt; de sus duraciones.</target>
        </trans-unit>
        <trans-unit id="098b2560bc5964f50659e0ba25d611da3936a573" translate="yes" xml:space="preserve">
          <source>The common workaround for such a catch-all statement is a type-dependent expression that is always false:</source>
          <target state="translated">La solución común para una declaración tan general es una expresión dependiente del tipo que siempre es falsa:</target>
        </trans-unit>
        <trans-unit id="c070c65d4a405765e86ab073670268a7d75d353d" translate="yes" xml:space="preserve">
          <source>The comparison and copying are bitwise (similar to &lt;code&gt;&lt;a href=&quot;../../string/byte/memcmp&quot;&gt;std::memcmp&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../string/byte/memcpy&quot;&gt;std::memcpy&lt;/a&gt;&lt;/code&gt;); no constructor, assignment operator, or comparison operator are used.</source>
          <target state="translated">La comparaci&amp;oacute;n y la copia son bit a bit (similar a &lt;code&gt;&lt;a href=&quot;../../string/byte/memcmp&quot;&gt;std::memcmp&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../../string/byte/memcpy&quot;&gt;std::memcpy&lt;/a&gt;&lt;/code&gt; ); no se utilizan constructores, operadores de asignaci&amp;oacute;n ni operadores de comparaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dcdbc3a3503f2cf19021453e0957f700ee34d892" translate="yes" xml:space="preserve">
          <source>The comparison between &lt;code&gt;e.code()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../io_errc&quot;&gt;std::io_errc::stream&lt;/a&gt;&lt;/code&gt; compiles because &lt;code&gt;&lt;a href=&quot;../../error/error_code/is_error_code_enum&quot;&gt;std::is_error_code_enum&lt;/a&gt;&amp;lt;&lt;a href=&quot;../io_errc&quot;&gt;std::io_errc&lt;/a&gt;&amp;gt;::value == true&lt;/code&gt;.</source>
          <target state="translated">La comparaci&amp;oacute;n entre &lt;code&gt;e.code()&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../io_errc&quot;&gt;std::io_errc::stream&lt;/a&gt;&lt;/code&gt; compila porque &lt;code&gt;&lt;a href=&quot;../../error/error_code/is_error_code_enum&quot;&gt;std::is_error_code_enum&lt;/a&gt;&amp;lt;&lt;a href=&quot;../io_errc&quot;&gt;std::io_errc&lt;/a&gt;&amp;gt;::value == true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="607651bcf9bec45c6eb29bfa73daf4c7cc4835c3" translate="yes" xml:space="preserve">
          <source>The comparison key for &lt;code&gt;c&lt;/code&gt; in the currently imbued locale.</source>
          <target state="translated">La clave de comparaci&amp;oacute;n para &lt;code&gt;c&lt;/code&gt; en el entorno local actualmente imbuido.</target>
        </trans-unit>
        <trans-unit id="a35040839a2bde1c52ffbdf3b521c8b7486fbb42" translate="yes" xml:space="preserve">
          <source>The comparison object with which &lt;code&gt;a&lt;/code&gt; was constructed is returned.</source>
          <target state="translated">El objeto de comparaci&amp;oacute;n con la que &lt;code&gt;a&lt;/code&gt; se devuelve se construy&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="3654e010cde366f1228cb35ead854e1d709174b5" translate="yes" xml:space="preserve">
          <source>The compiler is allowed,</source>
          <target state="translated">El compilador está permitido,</target>
        </trans-unit>
        <trans-unit id="5b0c78bd02c55f195510bbc68ddc1d3066960669" translate="yes" xml:space="preserve">
          <source>The compiler is permitted to initialize other static and thread-local objects using constant initialization, if it can guarantee that the value would be the same as if the standard order of initialization was followed.</source>
          <target state="translated">Se permite al compilador inicializar otros objetos estáticos e hilo-local mediante una inicialización constante,si puede garantizar que el valor será el mismo que si se siguiera el orden estándar de inicialización.</target>
        </trans-unit>
        <trans-unit id="3509d6757108bb243a4a74c41da1164b451bd842" translate="yes" xml:space="preserve">
          <source>The compilers are allowed to initialize dynamically-initialized variables as part of static initialization (essentially, at compile time), if the following conditions are both true:</source>
          <target state="translated">Se permite a los compiladores inicializar variables iniciadas dinámicamente como parte de la inicialización estática (esencialmente,en el momento de la compilación),si se cumplen las dos condiciones siguientes:</target>
        </trans-unit>
        <trans-unit id="7f422b0910e780df0e194f38bdd5cbabced51f14" translate="yes" xml:space="preserve">
          <source>The completion of the invocation of the constructor</source>
          <target state="translated">La finalización de la invocación del constructor</target>
        </trans-unit>
        <trans-unit id="50acdbb041b7c9bfeb40868b8f7d12c5991ab7bb" translate="yes" xml:space="preserve">
          <source>The completion of the thread identified by &lt;code&gt;*this&lt;/code&gt;</source>
          <target state="translated">La finalizaci&amp;oacute;n del hilo identificado por &lt;code&gt;*this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="473d434a9b1e1fa3c3fa95983b0cf370022ebc41" translate="yes" xml:space="preserve">
          <source>The complex conjugate of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">El complejo conjugado de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82c5651398368fa9194c75ad0cd42b27eaccd0a5" translate="yes" xml:space="preserve">
          <source>The complex exponential function ez</source>
          <target state="translated">La función exponencial compleja ez</target>
        </trans-unit>
        <trans-unit id="0ec6bf51db38b2ef988daa5b51588addb599916a" translate="yes" xml:space="preserve">
          <source>The complexity (efficiency) of common operations on deques is as follows:</source>
          <target state="translated">La complejidad (eficiencia)de las operaciones comunes en los deques es la siguiente:</target>
        </trans-unit>
        <trans-unit id="6b6af511fdc68030780724ffc1d216fb7505882d" translate="yes" xml:space="preserve">
          <source>The complexity (efficiency) of common operations on vectors is as follows:</source>
          <target state="translated">La complejidad (eficiencia)de las operaciones comunes en los vectores es la siguiente:</target>
        </trans-unit>
        <trans-unit id="5019eb24db55cd605bd07c28cf8b2f307a537737" translate="yes" xml:space="preserve">
          <source>The complexity is constant (that is, the implementation cannot actually execute the while loop shown in operational semantics)</source>
          <target state="translated">La complejidad es constante (es decir,la implementación no puede ejecutar realmente el bucle while que se muestra en la semántica operativa)</target>
        </trans-unit>
        <trans-unit id="f931e366fe99b22ec5e943477363a16341bd0215" translate="yes" xml:space="preserve">
          <source>The complexity of each function of &lt;code&gt;A&lt;/code&gt; does not exceed the complexity of the function of &lt;code&gt;B&lt;/code&gt;</source>
          <target state="translated">La complejidad de cada funci&amp;oacute;n de &lt;code&gt;A&lt;/code&gt; no excede la complejidad de la funci&amp;oacute;n de &lt;code&gt;B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83199838a945008228f4ecf7f4a77c745b15a0ca" translate="yes" xml:space="preserve">
          <source>The compound assignment expressions have the form.</source>
          <target state="translated">Las expresiones de asignación compuesta tienen la forma.</target>
        </trans-unit>
        <trans-unit id="28d0b992d873a598f8d887391cbb97b4c70fe2c0" translate="yes" xml:space="preserve">
          <source>The compound-statement in an atomic block is not allowed to execute any expression or statement or call any function that isn't &lt;code&gt;transaction_safe&lt;/code&gt; (this is a compile time error).</source>
          <target state="translated">La declaraci&amp;oacute;n compuesta en un bloque at&amp;oacute;mico no puede ejecutar ninguna expresi&amp;oacute;n o declaraci&amp;oacute;n o llamar a ninguna funci&amp;oacute;n que no sea &lt;code&gt;transaction_safe&lt;/code&gt; (esto es un error de tiempo de compilaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="e4619f547f6df26fd02d4616e6152f98c9f6a5de" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;&lt;a href=&quot;convertibleto&quot;&gt;ConvertibleTo&lt;/a&gt;&amp;lt;From, To&amp;gt;&lt;/code&gt; specifies that an expression of the type and value category specified by &lt;code&gt;From&lt;/code&gt; can be implicitly and explicitly converted to the type &lt;code&gt;To&lt;/code&gt;, and the two forms of conversion are equivalent.</source>
          <target state="translated">El concepto &lt;code&gt;&lt;a href=&quot;convertibleto&quot;&gt;ConvertibleTo&lt;/a&gt;&amp;lt;From, To&amp;gt;&lt;/code&gt; especifica que una expresi&amp;oacute;n de la categor&amp;iacute;a de tipo y valor especificada por &lt;code&gt;From&lt;/code&gt; se puede convertir impl&amp;iacute;cita y expl&amp;iacute;citamente al tipo &lt;code&gt;To&lt;/code&gt; , y las dos formas de conversi&amp;oacute;n son equivalentes.</target>
        </trans-unit>
        <trans-unit id="73226dcacd9920f3975d9f5342300c70194c4e84" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;&lt;a href=&quot;derivedfrom&quot;&gt;DerivedFrom&lt;/a&gt;&amp;lt;Derived, Base&amp;gt;&lt;/code&gt; is satisfied if and only if &lt;code&gt;Base&lt;/code&gt; is a class type that is either &lt;code&gt;Derived&lt;/code&gt; or a public and unambiguous base of &lt;code&gt;Derived&lt;/code&gt;, ignoring cv-qualifiers.</source>
          <target state="translated">El concepto &lt;code&gt;&lt;a href=&quot;derivedfrom&quot;&gt;DerivedFrom&lt;/a&gt;&amp;lt;Derived, Base&amp;gt;&lt;/code&gt; se satisface si y solo si &lt;code&gt;Base&lt;/code&gt; es un tipo de clase que es &lt;code&gt;Derived&lt;/code&gt; o una base p&amp;uacute;blica y sin ambig&amp;uuml;edades de &lt;code&gt;Derived&lt;/code&gt; , ignorando los calificadores cv.</target>
        </trans-unit>
        <trans-unit id="865542a66c716385b69d90d41b457244ea2ccb89" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;&lt;a href=&quot;integral&quot;&gt;Integral&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is satisfied if and only if &lt;code&gt;T&lt;/code&gt; is an integral type.</source>
          <target state="translated">El concepto &lt;code&gt;&lt;a href=&quot;integral&quot;&gt;Integral&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; se cumple si y solo si &lt;code&gt;T&lt;/code&gt; es un tipo integral.</target>
        </trans-unit>
        <trans-unit id="13ea350d4b197e122799acfa74b35c5e7b7ca18a" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Assignable&amp;lt;LHS, RHS&amp;gt;&lt;/code&gt; specifies that an expression of the type and value category specified by &lt;code&gt;RHS&lt;/code&gt; can be assigned to an lvalue expression whose type is specified by &lt;code&gt;LHS&lt;/code&gt;.</source>
          <target state="translated">El concepto &lt;code&gt;Assignable&amp;lt;LHS, RHS&amp;gt;&lt;/code&gt; especifica que una expresi&amp;oacute;n del tipo y categor&amp;iacute;a de valor especificada por &lt;code&gt;RHS&lt;/code&gt; puede asignarse a una expresi&amp;oacute;n de valor cuyo tipo es especificado por &lt;code&gt;LHS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af0568be2065f59b0b5a35861c61e4b6efdd42af" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Boolean&amp;lt;B&amp;gt;&lt;/code&gt; specifies the requirements for a type usable in Boolean contexts. For &lt;code&gt;Boolean&lt;/code&gt; to be satisfied, the logical operators must have the usual behavior (including short-circuiting). More precisely, given.</source>
          <target state="translated">El concepto &lt;code&gt;Boolean&amp;lt;B&amp;gt;&lt;/code&gt; especifica los requisitos para un tipo utilizable en contextos booleanos. Para que &lt;code&gt;Boolean&lt;/code&gt; est&amp;eacute; satisfecho, los operadores l&amp;oacute;gicos deben tener el comportamiento habitual (incluido el cortocircuito). M&amp;aacute;s precisamente, dado.</target>
        </trans-unit>
        <trans-unit id="78c647d18f5fd078ec4a60d8ccae3148788df8c2" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Common&amp;lt;T, U&amp;gt;&lt;/code&gt; specifies that two types &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; share a</source>
          <target state="translated">El concepto &lt;code&gt;Common&amp;lt;T, U&amp;gt;&lt;/code&gt; especifica que dos tipos &lt;code&gt;T&lt;/code&gt; y &lt;code&gt;U&lt;/code&gt; comparten un</target>
        </trans-unit>
        <trans-unit id="602d9341f66432b56381f5712bb7c785a9ba46e4" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;CommonReference&amp;lt;T, U&amp;gt;&lt;/code&gt; specifies that two types &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; share a</source>
          <target state="translated">El concepto &lt;code&gt;CommonReference&amp;lt;T, U&amp;gt;&lt;/code&gt; especifica que dos tipos &lt;code&gt;T&lt;/code&gt; y &lt;code&gt;U&lt;/code&gt; comparten un</target>
        </trans-unit>
        <trans-unit id="bec7861bd36d28545110eeed67204481cd958f23" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;CopyConstructible&lt;/code&gt; is satisfied if &lt;code&gt;T&lt;/code&gt; is an lvalue reference type, or if it is a &lt;a href=&quot;moveconstructible&quot;&gt;&lt;code&gt;MoveConstructible&lt;/code&gt;&lt;/a&gt; object type where an object of that type can constructed from a (possibly const) lvalue or const rvalue of that type in both direct- and copy-initialization contexts with the usual semantics (a copy is constructed with the source unchanged).</source>
          <target state="translated">El concepto &lt;code&gt;CopyConstructible&lt;/code&gt; se satisface si &lt;code&gt;T&lt;/code&gt; es un tipo de referencia lvalue, o si es un tipo de objeto &lt;a href=&quot;moveconstructible&quot;&gt; &lt;code&gt;MoveConstructible&lt;/code&gt; &lt;/a&gt; donde un objeto de ese tipo puede construirse a partir de un (posiblemente const) lvalue o const rvalue de ese tipo en inicializaci&amp;oacute;n directa y copia contextos con la sem&amp;aacute;ntica habitual (se construye una copia con la fuente sin cambios).</target>
        </trans-unit>
        <trans-unit id="f8022dc06d0404b06b8689521dec182dfcfe8dc9" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Copyable&amp;lt;T&amp;gt;&lt;/code&gt; specifies that &lt;code&gt;T&lt;/code&gt; is an &lt;a href=&quot;movable&quot;&gt;&lt;code&gt;Movable&lt;/code&gt;&lt;/a&gt; object type that can also copied (that is, it supports copy construction and copy assignment).</source>
          <target state="translated">El concepto &lt;code&gt;Copyable&amp;lt;T&amp;gt;&lt;/code&gt; especifica que &lt;code&gt;T&lt;/code&gt; es un tipo de objeto &lt;a href=&quot;movable&quot;&gt; &lt;code&gt;Movable&lt;/code&gt; &lt;/a&gt; que tambi&amp;eacute;n puede copiarse (es decir, admite la construcci&amp;oacute;n y la asignaci&amp;oacute;n de copias).</target>
        </trans-unit>
        <trans-unit id="1ef21317d90ede51d217d9c162660b2f0fa040e8" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Destructible&lt;/code&gt; specifies the concept of all types whose instances can safely be destroyed at the end of their lifetime (including reference types).</source>
          <target state="translated">El concepto &lt;code&gt;Destructible&lt;/code&gt; especifica el concepto de todos los tipos cuyas instancias pueden destruirse de forma segura al final de su vida &amp;uacute;til (incluidos los tipos de referencia).</target>
        </trans-unit>
        <trans-unit id="19adc5ade33dedda46791b5120a34278e3e9fb8d" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Movable&amp;lt;T&amp;gt;&lt;/code&gt; specifies that &lt;code&gt;T&lt;/code&gt; is an object type that can moved (that is, it can be move constructed, move assigned, and lvalues of type &lt;code&gt;T&lt;/code&gt; can be swapped).</source>
          <target state="translated">El concepto &lt;code&gt;Movable&amp;lt;T&amp;gt;&lt;/code&gt; especifica que &lt;code&gt;T&lt;/code&gt; es un tipo de objeto que se puede mover (es decir, se puede mover construido, mover asignado y se pueden intercambiar valores de tipo &lt;code&gt;T&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="72b44024301ed4034c4cb4c443a0a34d71d631f0" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;MoveConstructible&lt;/code&gt; is satisfied if &lt;code&gt;T&lt;/code&gt; is a reference type, or if it is an object type where an object of that type can constructed from an rvalue of that type in both direct- and copy-initialization contexts, with the usual semantics.</source>
          <target state="translated">El concepto &lt;code&gt;MoveConstructible&lt;/code&gt; se satisface si &lt;code&gt;T&lt;/code&gt; es un tipo de referencia, o si es un tipo de objeto donde un objeto de ese tipo puede construirse a partir de un valor de ese tipo en contextos de inicializaci&amp;oacute;n directa y de copia, con la sem&amp;aacute;ntica habitual.</target>
        </trans-unit>
        <trans-unit id="03dbedcdf06a326e5298663f07ce7d9595b129c3" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Predicate&amp;lt;F, Args...&amp;gt;&lt;/code&gt; specifies that &lt;code&gt;F&lt;/code&gt; is a predicate that accepts arguments whose types and value categories are encoded by &lt;code&gt;Args...&lt;/code&gt;, i.e., it can be invoked with these arguments to produce a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; result.</source>
          <target state="translated">El concepto &lt;code&gt;Predicate&amp;lt;F, Args...&amp;gt;&lt;/code&gt; especifica que &lt;code&gt;F&lt;/code&gt; es un predicado que acepta argumentos cuyos tipos y categor&amp;iacute;as de valores est&amp;aacute;n codificados por &lt;code&gt;Args...&lt;/code&gt; , es decir, se puede invocar con estos argumentos para producir un resultado &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9b1aa8e76324363f4f2bf6abad7b7072fe22a3f" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Relation&amp;lt;R, T, U&amp;gt;&lt;/code&gt; specifies that &lt;code&gt;R&lt;/code&gt; defines a binary relation over the set of expressions whose type and value category are those encoded by either &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">El concepto &lt;code&gt;Relation&amp;lt;R, T, U&amp;gt;&lt;/code&gt; especifica que &lt;code&gt;R&lt;/code&gt; define una relaci&amp;oacute;n binaria sobre el conjunto de expresiones cuyo tipo y categor&amp;iacute;a de valor son aquellos codificados por cualquiera de &lt;code&gt;T&lt;/code&gt; o &lt;code&gt;U&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6513199fc6b4ce22136fcd67141b170c7b741fee" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Same&amp;lt;T, U&amp;gt;&lt;/code&gt; is satisfied if and only if &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; denote the same type.</source>
          <target state="translated">El concepto &lt;code&gt;Same&amp;lt;T, U&amp;gt;&lt;/code&gt; se cumple si y solo si &lt;code&gt;T&lt;/code&gt; y &lt;code&gt;U&lt;/code&gt; denotan el mismo tipo.</target>
        </trans-unit>
        <trans-unit id="3583800434e81c6a76cacf78f829171638922ff7" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;SignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; is satisfied if and only if &lt;code&gt;T&lt;/code&gt; is an integral type and &lt;code&gt;&lt;a href=&quot;../types/is_signed&quot;&gt;std::is_signed_v&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">El concepto &lt;code&gt;SignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; se satisface si y solo si &lt;code&gt;T&lt;/code&gt; es un tipo integral y &lt;code&gt;&lt;a href=&quot;../types/is_signed&quot;&gt;std::is_signed_v&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="672ac5210d2625c6df97d19ab0eb50738d77147b" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;StrictWeakOrder&amp;lt;R, T, U&amp;gt;&lt;/code&gt; specifies that the &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt;&lt;code&gt;R&lt;/code&gt; imposes a strict weak ordering on its arguments. A relation &lt;code&gt;r&lt;/code&gt; is a strict weak ordering if.</source>
          <target state="translated">El concepto &lt;code&gt;StrictWeakOrder&amp;lt;R, T, U&amp;gt;&lt;/code&gt; especifica que la &lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt; &lt;code&gt;R&lt;/code&gt; impone un estricto orden d&amp;eacute;bil en sus argumentos. Una relaci&amp;oacute;n &lt;code&gt;r&lt;/code&gt; es un ordenamiento d&amp;eacute;bil estricto si.</target>
        </trans-unit>
        <trans-unit id="e363b8f4b98e412296c9f75273fb6e09dac047cd" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;Swappable&amp;lt;T&amp;gt;&lt;/code&gt; specifies that lvalues of type &lt;code&gt;T&lt;/code&gt; are swappable.</source>
          <target state="translated">El concepto &lt;code&gt;Swappable&amp;lt;T&amp;gt;&lt;/code&gt; especifica que los valores de tipo &lt;code&gt;T&lt;/code&gt; son intercambiables.</target>
        </trans-unit>
        <trans-unit id="11f94864e3389b850713fed5e46729da9b5a87f2" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;SwappableWith&amp;lt;T, U&amp;gt;&lt;/code&gt; specifies that expressions of the type and value category encoded by &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; are swappable with each other. &lt;code&gt;SwappableWith&amp;lt;T, U&amp;gt;&lt;/code&gt; is satisfied only if a call to &lt;code&gt;&lt;a href=&quot;../utility/ranges/swap&quot;&gt;ranges::swap&lt;/a&gt;(t, u)&lt;/code&gt; exchanges the value of &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;u&lt;/code&gt;, that is, given distinct objects &lt;code&gt;t2&lt;/code&gt; equal to &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;u2&lt;/code&gt; equal to &lt;code&gt;u&lt;/code&gt;, after evaluating either &lt;code&gt;&lt;a href=&quot;../utility/ranges/swap&quot;&gt;ranges::swap&lt;/a&gt;(t, u)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../utility/ranges/swap&quot;&gt;ranges::swap&lt;/a&gt;(u, t)&lt;/code&gt;, &lt;code&gt;t2&lt;/code&gt; is equal to &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;u2&lt;/code&gt; is equal to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">El concepto &lt;code&gt;SwappableWith&amp;lt;T, U&amp;gt;&lt;/code&gt; especifica que las expresiones de la categor&amp;iacute;a de tipo y valor codificadas por &lt;code&gt;T&lt;/code&gt; y &lt;code&gt;U&lt;/code&gt; son intercambiables entre s&amp;iacute;. &lt;code&gt;SwappableWith&amp;lt;T, U&amp;gt;&lt;/code&gt; se satisface solo si una llamada a &lt;code&gt;&lt;a href=&quot;../utility/ranges/swap&quot;&gt;ranges::swap&lt;/a&gt;(t, u)&lt;/code&gt; intercambia el valor de &lt;code&gt;t&lt;/code&gt; y &lt;code&gt;u&lt;/code&gt; , es decir, dados objetos distintos &lt;code&gt;t2&lt;/code&gt; iguales a &lt;code&gt;t&lt;/code&gt; y &lt;code&gt;u2&lt;/code&gt; iguales a &lt;code&gt;u&lt;/code&gt; , despu&amp;eacute;s de evaluar cualquiera de los &lt;code&gt;&lt;a href=&quot;../utility/ranges/swap&quot;&gt;ranges::swap&lt;/a&gt;(t, u)&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../utility/ranges/swap&quot;&gt;ranges::swap&lt;/a&gt;(u, t)&lt;/code&gt; , &lt;code&gt;t2&lt;/code&gt; es igual a &lt;code&gt;u&lt;/code&gt; y &lt;code&gt;u2&lt;/code&gt; es igual a &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efaf725ce3f251ac1fc637f5047af514790e0f15" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;UniformRandomBitGenerator &amp;lt;G&amp;gt;&lt;/code&gt; specifies that &lt;code&gt;G&lt;/code&gt; is the type of a uniform random bit generator, that is, objects of type &lt;code&gt;G&lt;/code&gt; is a function object returning unsigned integer values such that each value in the range of possible results has (ideally) equal probability of being returned.</source>
          <target state="translated">El concepto &lt;code&gt;UniformRandomBitGenerator &amp;lt;G&amp;gt;&lt;/code&gt; especifica que &lt;code&gt;G&lt;/code&gt; es el tipo de un generador de bits aleatorio uniforme, es decir, los objetos del tipo &lt;code&gt;G&lt;/code&gt; es un objeto de funci&amp;oacute;n que devuelve valores enteros sin signo de manera que cada valor en el rango de resultados posibles tenga (idealmente) la misma probabilidad de ser devuelto.</target>
        </trans-unit>
        <trans-unit id="eff4121d5e5fbc13e5baa52e82079db0250b8a88" translate="yes" xml:space="preserve">
          <source>The concept &lt;code&gt;UnsignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; is satisfied if and only if &lt;code&gt;T&lt;/code&gt; is an integral type and &lt;code&gt;&lt;a href=&quot;../types/is_signed&quot;&gt;std::is_signed_v&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">El concepto &lt;code&gt;UnsignedIntegral&amp;lt;T&amp;gt;&lt;/code&gt; se cumple si y solo si &lt;code&gt;T&lt;/code&gt; es un tipo integral y &lt;code&gt;&lt;a href=&quot;../types/is_signed&quot;&gt;std::is_signed_v&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8cc50209d2b8940fe4165236386b68230d84785" translate="yes" xml:space="preserve">
          <source>The concepts library provides definitions of fundamental library concepts that can be used to perform compile-time validation of template arguments and perform function dispatch based on properties of types. These concepts provide a foundation for equational reasoning in programs.</source>
          <target state="translated">La biblioteca de conceptos proporciona definiciones de conceptos fundamentales de la biblioteca que pueden utilizarse para realizar la validación en tiempo de compilación de los argumentos de la plantilla y realizar el despacho de funciones basado en las propiedades de los tipos.Estos conceptos proporcionan una base para el razonamiento ecuacional en los programas.</target>
        </trans-unit>
        <trans-unit id="a1026c23f30aa7af3fc22b86cb9c76b42c7b444b" translate="yes" xml:space="preserve">
          <source>The conditional operator expressions have the form.</source>
          <target state="translated">Las expresiones del operador condicional tienen la forma.</target>
        </trans-unit>
        <trans-unit id="953755a8477688f5085d4c79e1c4af3fc99f75be" translate="yes" xml:space="preserve">
          <source>The conditional preprocessing block starts with &lt;code&gt;#if&lt;/code&gt;, &lt;code&gt;#ifdef&lt;/code&gt; or &lt;code&gt;#ifndef&lt;/code&gt; directive, then optionally includes any number of &lt;code&gt;#elif&lt;/code&gt; directives, then optionally includes at most one &lt;code&gt;#else&lt;/code&gt; directive and is terminated with &lt;code&gt;#endif&lt;/code&gt; directive. Any inner conditional preprocessing blocks are processed separately.</source>
          <target state="translated">El bloque de preprocesamiento condicional comienza con las &lt;code&gt;#if&lt;/code&gt; , &lt;code&gt;#ifdef&lt;/code&gt; o &lt;code&gt;#ifndef&lt;/code&gt; , luego incluye opcionalmente cualquier n&amp;uacute;mero de directivas &lt;code&gt;#elif&lt;/code&gt; , luego incluye opcionalmente como m&amp;aacute;ximo una directiva &lt;code&gt;#else&lt;/code&gt; y termina con la directiva &lt;code&gt;#endif&lt;/code&gt; . Cualquier bloque de preprocesamiento condicional interno se procesa por separado.</target>
        </trans-unit>
        <trans-unit id="fb4592b00b29b26bf69b048922d6dcb4a6c4ba74" translate="yes" xml:space="preserve">
          <source>The conditions when this function may be used and the way in which the provided buffer is used is implementation-defined.</source>
          <target state="translated">Las condiciones en que se puede utilizar esta función y la forma en que se utiliza la memoria intermedia proporcionada están definidas en la aplicación.</target>
        </trans-unit>
        <trans-unit id="eb4425137d23b5e3e31f870582e2292af2902e6c" translate="yes" xml:space="preserve">
          <source>The conjunction of two constraints is formed by using the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator in the constraint expression:</source>
          <target state="translated">La conjunci&amp;oacute;n de dos restricciones se forma usando el operador &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; en la expresi&amp;oacute;n de restricci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="f3c47b5b57a2b95648e4ae3ef6e312fe9cd89e65" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;std::piecewise_construct&lt;/code&gt; is an instance of an empty struct tag type &lt;code&gt;&lt;a href=&quot;piecewise_construct_t&quot;&gt;std::piecewise_construct_t&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La constante &lt;code&gt;std::piecewise_construct&lt;/code&gt; es una instancia de una etiqueta de estructura vac&amp;iacute;a tipo &lt;code&gt;&lt;a href=&quot;piecewise_construct_t&quot;&gt;std::piecewise_construct_t&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b70f496a1d51e8442a69fb3ba6e8a15e510ec9cc" translate="yes" xml:space="preserve">
          <source>The constraint associated with a declaration are determined by &lt;a href=&quot;constraints#Constraint_normalization&quot;&gt;normalizing&lt;/a&gt; a logical AND expression whose operands are in the following order:</source>
          <target state="translated">La restricci&amp;oacute;n asociada con una declaraci&amp;oacute;n se determina &lt;a href=&quot;constraints#Constraint_normalization&quot;&gt;normalizando&lt;/a&gt; una expresi&amp;oacute;n AND l&amp;oacute;gica cuyos operandos est&amp;aacute;n en el siguiente orden:</target>
        </trans-unit>
        <trans-unit id="0a102d1707fb829c6a783c3fe78ff549237860bd" translate="yes" xml:space="preserve">
          <source>The constraints on &lt;code&gt;nullopt_t&lt;/code&gt;'s constructors exist to support both &lt;code&gt;op = {};&lt;/code&gt; and &lt;code&gt;op = nullopt;&lt;/code&gt; as the syntax for disengaging an optional object.</source>
          <target state="translated">Las restricciones sobre los constructores de &lt;code&gt;nullopt_t&lt;/code&gt; existen para soportar tanto &lt;code&gt;op = {};&lt;/code&gt; y &lt;code&gt;op = nullopt;&lt;/code&gt; como la sintaxis para desactivar un objeto opcional.</target>
        </trans-unit>
        <trans-unit id="be930e842260d797cc680f8145491945ea7d3d77" translate="yes" xml:space="preserve">
          <source>The constructed &lt;code&gt;T&lt;/code&gt; object.</source>
          <target state="translated">El objeto &lt;code&gt;T&lt;/code&gt; construido .</target>
        </trans-unit>
        <trans-unit id="eefc9886b95543e22010deacfaa6ae6c51c567c6" translate="yes" xml:space="preserve">
          <source>The constructed optional object.</source>
          <target state="translated">El objeto opcional construido.</target>
        </trans-unit>
        <trans-unit id="d684d3c8e5eece4b15ad75f687ca9ca6f533a06e" translate="yes" xml:space="preserve">
          <source>The constructor and the copy assignment operator from &lt;code&gt;auto_ptr_ref&lt;/code&gt; is provided to allow copy-constructing and assigning &lt;code&gt;&lt;a href=&quot;../auto_ptr&quot;&gt;std::auto_ptr&lt;/a&gt;&lt;/code&gt; from nameless temporaries. Since its copy constructor and copy assignment operator take the argument as non-const reference, they cannot bind rvalue arguments directly. However, a &lt;a href=&quot;operator_auto_ptr&quot;&gt;user-defined conversion&lt;/a&gt; can be executed (which releases the original auto_ptr), followed by a call to the constructor or copy-assignment operator that take &lt;code&gt;auto_ptr_ref&lt;/code&gt; by value. This is an early implementation of &lt;a href=&quot;../../utility/move&quot;&gt;move semantics&lt;/a&gt;.</source>
          <target state="translated">El constructor y el operador de asignaci&amp;oacute;n de copias de &lt;code&gt;auto_ptr_ref&lt;/code&gt; se proporcionan para permitir la construcci&amp;oacute;n de copias y la asignaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../auto_ptr&quot;&gt;std::auto_ptr&lt;/a&gt;&lt;/code&gt; desde temporarios sin nombre. Dado que su constructor de copia y el operador de asignaci&amp;oacute;n de copia toman el argumento como referencia no constante, no pueden vincular directamente los argumentos de valor. Sin embargo, se puede ejecutar una &lt;a href=&quot;operator_auto_ptr&quot;&gt;conversi&amp;oacute;n definida por el usuario&lt;/a&gt; (que libera el auto_ptr original), seguido de una llamada al constructor o al operador de asignaci&amp;oacute;n de copia que toma &lt;code&gt;auto_ptr_ref&lt;/code&gt; por valor. Esta es una implementaci&amp;oacute;n temprana de la &lt;a href=&quot;../../utility/move&quot;&gt;sem&amp;aacute;ntica&lt;/a&gt; de movimiento .</target>
        </trans-unit>
        <trans-unit id="a88b24b86cbbedb529370f293289727d15460bac" translate="yes" xml:space="preserve">
          <source>The constructor and the copy assignment operator from &lt;code&gt;auto_ptr_ref&lt;/code&gt; is provided to allow copy-constructing and assigning &lt;code&gt;&lt;a href=&quot;../auto_ptr&quot;&gt;std::auto_ptr&lt;/a&gt;&lt;/code&gt; from nameless temporaries. Since its copy constructor and copy assignment operator take the argument as non-const reference, they cannot bind rvalue arguments directly. However, a &lt;strong&gt;user-defined conversion&lt;/strong&gt; can be executed (which releases the original auto_ptr), followed by a call to the constructor or copy-assignment operator that take &lt;code&gt;auto_ptr_ref&lt;/code&gt; by value. This is an early implementation of &lt;a href=&quot;../../utility/move&quot;&gt;move semantics&lt;/a&gt;.</source>
          <target state="translated">El constructor y el operador de asignaci&amp;oacute;n de copias de &lt;code&gt;auto_ptr_ref&lt;/code&gt; se proporcionan para permitir la construcci&amp;oacute;n de copias y la asignaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../auto_ptr&quot;&gt;std::auto_ptr&lt;/a&gt;&lt;/code&gt; desde temporarios sin nombre. Dado que su constructor de copia y el operador de asignaci&amp;oacute;n de copia toman el argumento como referencia no constante, no pueden vincular directamente los argumentos de valor. Sin embargo, se puede ejecutar una &lt;strong&gt;conversi&amp;oacute;n definida por el usuario&lt;/strong&gt; (que libera el auto_ptr original), seguido de una llamada al constructor o al operador de asignaci&amp;oacute;n de copia que toma &lt;code&gt;auto_ptr_ref&lt;/code&gt; por valor. Esta es una implementaci&amp;oacute;n temprana de la &lt;a href=&quot;../../utility/move&quot;&gt;sem&amp;aacute;ntica&lt;/a&gt; de movimiento .</target>
        </trans-unit>
        <trans-unit id="e8f96a3d02cb90d6715ab5ee42669b5a65f12ea9" translate="yes" xml:space="preserve">
          <source>The constructor is &lt;code&gt;explicit&lt;/code&gt; if and only if &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;U1&amp;amp;&amp;amp;, T0&amp;gt;::value&lt;/code&gt; or &lt;code&gt;std::convertible&amp;lt;U2&amp;amp;&amp;amp;, T1&amp;gt;::value&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">El constructor es &lt;code&gt;explicit&lt;/code&gt; si y solo si &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;U1&amp;amp;&amp;amp;, T0&amp;gt;::value&lt;/code&gt; o &lt;code&gt;std::convertible&amp;lt;U2&amp;amp;&amp;amp;, T1&amp;gt;::value&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01f5f9ea7415bf4964b071d1eb2b717e453d8da5" translate="yes" xml:space="preserve">
          <source>The constructor is &lt;code&gt;explicit&lt;/code&gt; if and only if &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;Ui&amp;amp;&amp;amp;, Ti&amp;gt;::value&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; for at least one &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">El constructor es &lt;code&gt;explicit&lt;/code&gt; si y solo si &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;Ui&amp;amp;&amp;amp;, Ti&amp;gt;::value&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; para al menos un &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe1411ae2f665498529ac31d9d3be15d2754663c" translate="yes" xml:space="preserve">
          <source>The constructor is &lt;code&gt;explicit&lt;/code&gt; if and only if &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;const U1&amp;amp;, T0&amp;gt;::value&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;const U2&amp;amp;, T1&amp;gt;::value&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">El constructor es &lt;code&gt;explicit&lt;/code&gt; si y solo si &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;const U1&amp;amp;, T0&amp;gt;::value&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;const U2&amp;amp;, T1&amp;gt;::value&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc9d995835de11c6c787cb53fba8d8c3e9580158" translate="yes" xml:space="preserve">
          <source>The constructor is &lt;code&gt;explicit&lt;/code&gt; if and only if &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;const Ui&amp;amp;, Ti&amp;gt;::value&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; for at least one &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">El constructor es &lt;code&gt;explicit&lt;/code&gt; si y solo si &lt;code&gt;&lt;a href=&quot;../../types/is_convertible&quot;&gt;std::is_convertible&lt;/a&gt;&amp;lt;const Ui&amp;amp;, Ti&amp;gt;::value&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; para al menos un &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c239dd429fef286118a0c7a58dcc760a8076f974" translate="yes" xml:space="preserve">
          <source>The constructor is &lt;code&gt;explicit&lt;/code&gt; if and only if &lt;code&gt;Ti&lt;/code&gt; is not implicitly default-constructible for at least one &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">El constructor es &lt;code&gt;explicit&lt;/code&gt; si y solo si &lt;code&gt;Ti&lt;/code&gt; no es impl&amp;iacute;citamente construible por defecto para al menos un &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f909c3f83a20755845619fc1848878079ea4072" translate="yes" xml:space="preserve">
          <source>The constructor is not user-provided (i.e., is implicitly-defined or defaulted on its first declaration)</source>
          <target state="translated">El constructor no es proporcionado por el usuario (es decir,está definido implícitamente o por defecto en su primera declaración)</target>
        </trans-unit>
        <trans-unit id="514317104edd617f7cd6ce3cacd4b37307e546c0" translate="yes" xml:space="preserve">
          <source>The constructor of the element is called with exactly the same arguments as supplied to the function, forwarded with &lt;code&gt;&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...&lt;/code&gt;.</source>
          <target state="translated">El constructor del elemento se llama con exactamente los mismos argumentos que suministra a la funci&amp;oacute;n, procesados con &lt;code&gt;&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0604af6f2180e7068eb4f4536ff23e9db48698f" translate="yes" xml:space="preserve">
          <source>The constructor of the element type (&lt;code&gt;value_type&lt;/code&gt;, that is, &lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;const Key, T&amp;gt;&lt;/code&gt;) is called with exactly the same arguments as supplied to the function, forwarded with &lt;code&gt;&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...&lt;/code&gt;.</source>
          <target state="translated">El constructor del tipo de elemento ( &lt;code&gt;value_type&lt;/code&gt; , es decir, &lt;code&gt;&lt;a href=&quot;../../utility/pair&quot;&gt;std::pair&lt;/a&gt;&amp;lt;const Key, T&amp;gt;&lt;/code&gt; ) se llama con exactamente los mismos argumentos que se proporcionan a la funci&amp;oacute;n, reenviado con &lt;code&gt;&lt;a href=&quot;../../utility/forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;Args&amp;gt;(args)...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14d17adea26e85b2515064aa28520a083e866af7" translate="yes" xml:space="preserve">
          <source>The constructors (14,16) accept a &lt;code&gt;std::chrono::choose&lt;/code&gt; parameter, but that parameter has no effect.</source>
          <target state="translated">Los constructores (14,16) aceptan un par&amp;aacute;metro &lt;code&gt;std::chrono::choose&lt;/code&gt; , pero ese par&amp;aacute;metro no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="ecfd8f32fcd60ed391f596bc6ee25cc4c6697d5c" translate="yes" xml:space="preserve">
          <source>The constructors of &lt;code&gt;&lt;a href=&quot;../basic_fstream&quot;&gt;std::basic_fstream&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../basic_ifstream&quot;&gt;std::basic_ifstream&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../basic_ofstream&quot;&gt;std::basic_ofstream&lt;/a&gt;&lt;/code&gt; that takes a filename argument, if the file cannot be opened.</source>
          <target state="translated">Los constructores de &lt;code&gt;&lt;a href=&quot;../basic_fstream&quot;&gt;std::basic_fstream&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../basic_ifstream&quot;&gt;std::basic_ifstream&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../basic_ofstream&quot;&gt;std::basic_ofstream&lt;/a&gt;&lt;/code&gt; que toman un argumento de nombre de archivo, si el archivo no se puede abrir.</target>
        </trans-unit>
        <trans-unit id="aeb37a2c7445e4497668ad31fcdc968770634864" translate="yes" xml:space="preserve">
          <source>The constructors of &lt;code&gt;&lt;a href=&quot;../istrstream&quot;&gt;std::istrstream&lt;/a&gt;&lt;/code&gt; do not create the underlying &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; in dynamically allocated mode, so the memory leaks that are possible with &lt;code&gt;&lt;a href=&quot;../ostrstream/~ostrstream&quot;&gt;std::ostrstream::~ostrstream&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../strstream/~strstream&quot;&gt;std::strstream::~strstream&lt;/a&gt;&lt;/code&gt; do not apply.</source>
          <target state="translated">Los constructores de &lt;code&gt;&lt;a href=&quot;../istrstream&quot;&gt;std::istrstream&lt;/a&gt;&lt;/code&gt; no crean el &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; subyacente en modo asignado din&amp;aacute;micamente, por lo que las p&amp;eacute;rdidas de memoria que son posibles con &lt;code&gt;&lt;a href=&quot;../ostrstream/~ostrstream&quot;&gt;std::ostrstream::~ostrstream&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../strstream/~strstream&quot;&gt;std::strstream::~strstream&lt;/a&gt;&lt;/code&gt; no se aplican.</target>
        </trans-unit>
        <trans-unit id="d9c0b9aa6a8db5a697c059464e94148ae13b0c2c" translate="yes" xml:space="preserve">
          <source>The container manages the storage space that is allocated for its elements and provides member functions to access them, either directly or through iterators (objects with properties similar to pointers).</source>
          <target state="translated">El contenedor gestiona el espacio de almacenamiento asignado a sus elementos y proporciona funciones de miembro para acceder a ellos,ya sea directamente o a través de iteradores (objetos con propiedades similares a las de los punteros).</target>
        </trans-unit>
        <trans-unit id="78f3618b6465868448ddccdd694c5e1c8cbbf120" translate="yes" xml:space="preserve">
          <source>The contents of two unordered containers &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; are equal if the following conditions hold:</source>
          <target state="translated">El contenido de dos contenedores desordenados &lt;code&gt;lhs&lt;/code&gt; y &lt;code&gt;rhs&lt;/code&gt; es igual si se cumplen las siguientes condiciones:</target>
        </trans-unit>
        <trans-unit id="6328d65cc72658c8384891f87389511f792722f0" translate="yes" xml:space="preserve">
          <source>The control block is a dynamically-allocated object that holds:</source>
          <target state="translated">El bloque de control es un objeto asignado dinámicamente que se mantiene:</target>
        </trans-unit>
        <trans-unit id="dabf7c953c7e4ef8b33706dcb060c8334571b8bb" translate="yes" xml:space="preserve">
          <source>The controlled character sequence is an array of &lt;code&gt;CharT&lt;/code&gt; which, at all times, represents a subsequence, or a &quot;window&quot; into the associated character sequence. Its state is described by three pointers:</source>
          <target state="translated">La secuencia de caracteres controlada es una matriz de &lt;code&gt;CharT&lt;/code&gt; que, en todo momento, representa una subsecuencia o una &quot;ventana&quot; en la secuencia de caracteres asociada. Su estado se describe mediante tres punteros:</target>
        </trans-unit>
        <trans-unit id="26cfcc6f2a939bd6cff12f0bbc7b5ff915a1d154" translate="yes" xml:space="preserve">
          <source>The conversion function (3) is provided so that APIs that accept &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; file names can use pathnames with no changes to code.</source>
          <target state="translated">La funci&amp;oacute;n de conversi&amp;oacute;n (3) se proporciona para que las API que aceptan nombres de archivo &lt;code&gt;&lt;a href=&quot;../../string/basic_string&quot;&gt;std::basic_string&lt;/a&gt;&lt;/code&gt; puedan usar rutas sin cambios en el c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="8b236ef4c5579332c47d6d813a0a9ffeca01e240" translate="yes" xml:space="preserve">
          <source>The conversion specifiers &lt;code&gt;lc&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, and &lt;code&gt;l[&lt;/code&gt; perform multibyte-to-wide character conversion as if by calling &lt;a href=&quot;../../string/multibyte/mbrtowc&quot;&gt;&lt;code&gt;mbrtowc()&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;../../string/multibyte/mbstate_t&quot;&gt;&lt;code&gt;mbstate_t&lt;/code&gt;&lt;/a&gt; object initialized to zero before the first character is converted.</source>
          <target state="translated">Los especificadores de conversi&amp;oacute;n &lt;code&gt;lc&lt;/code&gt; , &lt;code&gt;ls&lt;/code&gt; y &lt;code&gt;l[&lt;/code&gt; realizan la conversi&amp;oacute;n de caracteres multibyte a ancho como si llamaran a &lt;a href=&quot;../../string/multibyte/mbrtowc&quot;&gt; &lt;code&gt;mbrtowc()&lt;/code&gt; &lt;/a&gt; con un objeto &lt;a href=&quot;../../string/multibyte/mbstate_t&quot;&gt; &lt;code&gt;mbstate_t&lt;/code&gt; &lt;/a&gt; inicializado a cero antes de convertir el primer car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="03ad1fb8a3c33fbbff42de235e51664745451da8" translate="yes" xml:space="preserve">
          <source>The conversion specifiers &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt; always store the null terminator in addition to the matched characters. The size of the destination array must be at least one greater than the specified field width. The use of &lt;code&gt;%s&lt;/code&gt; or &lt;code&gt;%[&lt;/code&gt;, without specifying the destination array size, is as unsafe as &lt;code&gt;&lt;a href=&quot;gets&quot;&gt;std::gets&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los especificadores de conversi&amp;oacute;n &lt;code&gt;s&lt;/code&gt; y &lt;code&gt;[&lt;/code&gt; siempre almacenan el terminador nulo adem&amp;aacute;s de los caracteres emparejados. El tama&amp;ntilde;o de la matriz de destino debe ser al menos uno mayor que el ancho del campo especificado. El uso de &lt;code&gt;%s&lt;/code&gt; o &lt;code&gt;%[&lt;/code&gt; , sin especificar el tama&amp;ntilde;o de la matriz de destino, es tan peligroso como &lt;code&gt;&lt;a href=&quot;gets&quot;&gt;std::gets&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac471b8f3e3680d0aea88efb3834381526f7e2d3" translate="yes" xml:space="preserve">
          <source>The conversions &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; output &lt;code&gt;INF&lt;/code&gt;, &lt;code&gt;INFINITY&lt;/code&gt;, &lt;code&gt;NAN&lt;/code&gt; instead.</source>
          <target state="translated">Las conversiones &lt;code&gt;F&lt;/code&gt; , &lt;code&gt;E&lt;/code&gt; , &lt;code&gt;G&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; producen &lt;code&gt;INF&lt;/code&gt; , &lt;code&gt;INFINITY&lt;/code&gt; , &lt;code&gt;NAN&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="ddff1bdc6fe2f15d06629502821413709da3be1a" translate="yes" xml:space="preserve">
          <source>The copy assignment operator for class &lt;code&gt;T&lt;/code&gt; is trivial if all of the following is true:</source>
          <target state="translated">El operador de asignaci&amp;oacute;n de copia para la clase &lt;code&gt;T&lt;/code&gt; es trivial si se cumple todo lo siguiente:</target>
        </trans-unit>
        <trans-unit id="3cf1f689dd70b42e124541368f97c7780c6e3e34" translate="yes" xml:space="preserve">
          <source>The copy assignment operator is called whenever selected by &lt;a href=&quot;overload_resolution&quot;&gt;overload resolution&lt;/a&gt;, e.g. when an object appears on the left side of an assignment expression.</source>
          <target state="translated">Se llama al operador de asignaci&amp;oacute;n de copias cada vez que se selecciona por &lt;a href=&quot;overload_resolution&quot;&gt;resoluci&amp;oacute;n de sobrecarga&lt;/a&gt; , por ejemplo, cuando aparece un objeto en el lado izquierdo de una expresi&amp;oacute;n de asignaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="759dc17da3835f27b9a0abba76c5a7f15c67c981" translate="yes" xml:space="preserve">
          <source>The copy assignment operator is defined as deleted (and the move assignment operator is not declared). Closure types are not &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt;.</source>
          <target state="translated">El operador de asignaci&amp;oacute;n de copia se define como eliminado (y el operador de asignaci&amp;oacute;n de movimiento no se declara). Los tipos de cierre no son &lt;a href=&quot;../named_req/copyassignable&quot;&gt;CopyAssignable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5feaf369ec23df58930d6d9b201805ada42f07" translate="yes" xml:space="preserve">
          <source>The copy constructor and the move constructor are implicitly-declared(until C++14)declared as defaulted(since C++14) and may be implicitly-defined according to the usual rules for &lt;a href=&quot;copy_constructor&quot;&gt;copy constructors&lt;/a&gt; and &lt;a href=&quot;move_constructor&quot;&gt;move constructors&lt;/a&gt;.</source>
          <target state="translated">El constructor de copia y el constructor de movimiento se declaran impl&amp;iacute;citamente (hasta C ++ 14) como predeterminados (desde C ++ 14) y se pueden definir impl&amp;iacute;citamente de acuerdo con las reglas habituales para &lt;a href=&quot;copy_constructor&quot;&gt;constructores de copia&lt;/a&gt; y &lt;a href=&quot;move_constructor&quot;&gt;constructores de movimiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1fbbb2f2a9873d3581231edb6a3bf3f2f9295e5" translate="yes" xml:space="preserve">
          <source>The copy constructor for class &lt;code&gt;T&lt;/code&gt; is trivial if all of the following are true:</source>
          <target state="translated">El constructor de copia para la clase &lt;code&gt;T&lt;/code&gt; es trivial si se cumple todo lo siguiente:</target>
        </trans-unit>
        <trans-unit id="5a61f82e1090e197177cd4889d3439e454755975" translate="yes" xml:space="preserve">
          <source>The copy constructor is called whenever an object is &lt;a href=&quot;initialization&quot;&gt;initialized&lt;/a&gt; (by &lt;a href=&quot;direct_initialization&quot;&gt;direct-initialization&lt;/a&gt; or &lt;a href=&quot;copy_initialization&quot;&gt;copy-initialization&lt;/a&gt;) from another object of the same type (unless &lt;a href=&quot;overload_resolution&quot;&gt;overload resolution&lt;/a&gt; selects a better match or the call is &lt;a href=&quot;copy_elision&quot;&gt;elided&lt;/a&gt;), which includes.</source>
          <target state="translated">Se llama al constructor de copia cada vez que se &lt;a href=&quot;initialization&quot;&gt;inicializa&lt;/a&gt; un objeto (mediante inicializaci&amp;oacute;n &lt;a href=&quot;direct_initialization&quot;&gt;directa&lt;/a&gt; o inicializaci&amp;oacute;n de &lt;a href=&quot;copy_initialization&quot;&gt;copia&lt;/a&gt; ) desde otro objeto del mismo tipo (a menos que la &lt;a href=&quot;overload_resolution&quot;&gt;resoluci&amp;oacute;n de sobrecarga&lt;/a&gt; seleccione una mejor coincidencia o se &lt;a href=&quot;copy_elision&quot;&gt;eluda&lt;/a&gt; la llamada ), que incluye.</target>
        </trans-unit>
        <trans-unit id="8507794644c0362a07d03e6394dd36e5ccb79ce2" translate="yes" xml:space="preserve">
          <source>The copy deduction candidate is preferred over all other function templates implicitly generated from a constructor or constructor template.</source>
          <target state="translated">El candidato a la deducción por copia se prefiere a todas las demás plantillas de funciones generadas implícitamente a partir de un constructor o plantilla de constructor.</target>
        </trans-unit>
        <trans-unit id="747997a874ad1f7bc25037668246d169dc11dcd1" translate="yes" xml:space="preserve">
          <source>The copy of the underlying string returned by &lt;code&gt;str&lt;/code&gt; is a temporary object that will be destructed at the end of the expression, so directly calling &lt;a href=&quot;../../string/basic_string/c_str&quot;&gt;&lt;code&gt;c_str()&lt;/code&gt;&lt;/a&gt; on the result of &lt;code&gt;str()&lt;/code&gt; (for example in &lt;code&gt;auto *ptr = out.str().c_str();&lt;/code&gt;) results in a dangling pointer.</source>
          <target state="translated">La copia de la cadena subyacente devuelta por &lt;code&gt;str&lt;/code&gt; es un objeto temporal que se destruir&amp;aacute; al final de la expresi&amp;oacute;n, por lo que llama directamente a &lt;a href=&quot;../../string/basic_string/c_str&quot;&gt; &lt;code&gt;c_str()&lt;/code&gt; &lt;/a&gt; en el resultado de &lt;code&gt;str()&lt;/code&gt; (por ejemplo en &lt;code&gt;auto *ptr = out.str().c_str();&lt;/code&gt; ) da como resultado un puntero colgante.</target>
        </trans-unit>
        <trans-unit id="60d00a31f5602765e3302a63438e51d4f9449061" translate="yes" xml:space="preserve">
          <source>The copy-initialization of the result of the function call is &lt;a href=&quot;eval_order&quot;&gt;sequenced-before&lt;/a&gt; the destruction of all temporaries at the end of expression, which, in turn, is</source>
          <target state="translated">La inicializaci&amp;oacute;n de la copia del resultado de la llamada de funci&amp;oacute;n se &lt;a href=&quot;eval_order&quot;&gt;secuencia antes de&lt;/a&gt; la destrucci&amp;oacute;n de todos los temporales al final de la expresi&amp;oacute;n, que, a su vez, es</target>
        </trans-unit>
        <trans-unit id="fa429f3126d475d851da7e1318884700c1618d55" translate="yes" xml:space="preserve">
          <source>The coroutine is suspended (its coroutine state is populated with local variables and current suspension point).</source>
          <target state="translated">La corutina está suspendida (su estado de corutina está poblado de variables locales y punto de suspensión actual).</target>
        </trans-unit>
        <trans-unit id="f93ab229d575b110c0f62720474d6f4ce532847b" translate="yes" xml:space="preserve">
          <source>The correct conversion specifications for the &lt;a href=&quot;../../types/integer&quot;&gt;fixed-width integer types&lt;/a&gt; (&lt;code&gt;int8_t&lt;/code&gt;, etc) are defined in the header &lt;a href=&quot;../../types/integer&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt; (although &lt;a href=&quot;../../types/integer&quot;&gt;&lt;code&gt;SCNdMAX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../types/integer&quot;&gt;&lt;code&gt;SCNuMAX&lt;/code&gt;&lt;/a&gt;, etc is synonymous with &lt;code&gt;%jd&lt;/code&gt;, &lt;code&gt;%ju&lt;/code&gt;, etc).</source>
          <target state="translated">Las especificaciones de conversi&amp;oacute;n correctas para los &lt;a href=&quot;../../types/integer&quot;&gt;tipos enteros de ancho fijo&lt;/a&gt; ( &lt;code&gt;int8_t&lt;/code&gt; , etc.) se definen en el encabezado &lt;a href=&quot;../../types/integer&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt; (aunque &lt;a href=&quot;../../types/integer&quot;&gt; &lt;code&gt;SCNdMAX&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../types/integer&quot;&gt; &lt;code&gt;SCNuMAX&lt;/code&gt; &lt;/a&gt; , etc. es sin&amp;oacute;nimo de &lt;code&gt;%jd&lt;/code&gt; , &lt;code&gt;%ju&lt;/code&gt; , etc.).</target>
        </trans-unit>
        <trans-unit id="15db9249b70354b71fe537b88d8394bd5d81be93" translate="yes" xml:space="preserve">
          <source>The correct conversion specifications for the fixed-width character types (&lt;code&gt;int8_t&lt;/code&gt;, etc) are defined in the header &lt;a href=&quot;../../types/integer&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt; (although &lt;code&gt;&lt;a href=&quot;../../types/integer&quot;&gt;PRIdMAX&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../types/integer&quot;&gt;PRIuMAX&lt;/a&gt;&lt;/code&gt;, etc is synonymous with &lt;code&gt;%jd&lt;/code&gt;, &lt;code&gt;%ju&lt;/code&gt;, etc).</source>
          <target state="translated">Las especificaciones de conversi&amp;oacute;n correctas para los tipos de caracteres de ancho fijo ( &lt;code&gt;int8_t&lt;/code&gt; , etc.) se definen en el encabezado &lt;a href=&quot;../../types/integer&quot;&gt;&amp;lt;cinttypes&amp;gt;&lt;/a&gt; (aunque &lt;code&gt;&lt;a href=&quot;../../types/integer&quot;&gt;PRIdMAX&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../types/integer&quot;&gt;PRIuMAX&lt;/a&gt;&lt;/code&gt; , etc. es sin&amp;oacute;nimo de &lt;code&gt;%jd&lt;/code&gt; , &lt;code&gt;%ju&lt;/code&gt; , etc.).</target>
        </trans-unit>
        <trans-unit id="5bd87815b2a9528ae12a41f936a8bbc8434e62a1" translate="yes" xml:space="preserve">
          <source>The correct length of the buffer that can receive the entire transformed string is &lt;code&gt;1+std::strxfrm(nullptr, src, 0)&lt;/code&gt;.</source>
          <target state="translated">La longitud correcta del b&amp;uacute;fer que puede recibir toda la cadena transformada es &lt;code&gt;1+std::strxfrm(nullptr, src, 0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab2bb50ec090349b366ef17811496ea35381fbec" translate="yes" xml:space="preserve">
          <source>The correct length of the buffer that can receive the entire transformed string is &lt;code&gt;1+std::wcsxfrm(&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;, src, 0)&lt;/code&gt;.</source>
          <target state="translated">La longitud correcta del b&amp;uacute;fer que puede recibir toda la cadena transformada es &lt;code&gt;1+std::wcsxfrm(&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;, src, 0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f06dc76e6d4b421ddcd6b60d3ed2303369b4928" translate="yes" xml:space="preserve">
          <source>The correct result can be represented as &lt;code&gt;int&lt;/code&gt; on all known implementations. For overflow to occur, &lt;code&gt;&lt;a href=&quot;../../types/climits&quot;&gt;INT_MAX&lt;/a&gt;&lt;/code&gt; must be less than &lt;code&gt;&lt;a href=&quot;../../types/climits&quot;&gt;LDBL_MAX_EXP&lt;/a&gt;*log2(&lt;a href=&quot;../../types/climits&quot;&gt;FLT_RADIX&lt;/a&gt;)&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../types/climits&quot;&gt;INT_MIN&lt;/a&gt;&lt;/code&gt; must be greater than &lt;code&gt;LDBL_MIN_EXP-&lt;a href=&quot;../../types/climits&quot;&gt;LDBL_MANT_DIG&lt;/a&gt;)*log2(&lt;a href=&quot;../../types/climits&quot;&gt;FLT_RADIX&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">El resultado correcto se puede representar como &lt;code&gt;int&lt;/code&gt; en todas las implementaciones conocidas. Para que se produzca un desbordamiento, &lt;code&gt;&lt;a href=&quot;../../types/climits&quot;&gt;INT_MAX&lt;/a&gt;&lt;/code&gt; debe ser menor que &lt;code&gt;&lt;a href=&quot;../../types/climits&quot;&gt;LDBL_MAX_EXP&lt;/a&gt;*log2(&lt;a href=&quot;../../types/climits&quot;&gt;FLT_RADIX&lt;/a&gt;)&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../../types/climits&quot;&gt;INT_MIN&lt;/a&gt;&lt;/code&gt; debe ser mayor que &lt;code&gt;LDBL_MIN_EXP-&lt;a href=&quot;../../types/climits&quot;&gt;LDBL_MANT_DIG&lt;/a&gt;)*log2(&lt;a href=&quot;../../types/climits&quot;&gt;FLT_RADIX&lt;/a&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7284c934a898f61fc7b831e55a0c35b87058795" translate="yes" xml:space="preserve">
          <source>The corresponding type/type templates &lt;code&gt;std::in_place_t&lt;/code&gt;, &lt;code&gt;std::in_place_type_t&lt;/code&gt; and &lt;code&gt;std::in_place_index_t&lt;/code&gt; can be used in the constructor's parameter list to match the intended tag.</source>
          <target state="translated">Las plantillas de tipo / tipo correspondientes &lt;code&gt;std::in_place_t&lt;/code&gt; , &lt;code&gt;std::in_place_type_t&lt;/code&gt; y &lt;code&gt;std::in_place_index_t&lt;/code&gt; se pueden usar en la lista de par&amp;aacute;metros del constructor para que coincida con la etiqueta deseada.</target>
        </trans-unit>
        <trans-unit id="942cf9ae9a6d3badc39db24111513090bfb3dd85" translate="yes" xml:space="preserve">
          <source>The cosine is an entire function on the complex plane, and has no branch cuts.  Mathematical definition of the cosine is cos z =</source>
          <target state="translated">El coseno es una función completa en el plano complejo,y no tiene cortes en las ramas.La definición matemática del coseno es cos z =</target>
        </trans-unit>
        <trans-unit id="927374ff66f57aae8836497c2fe39e3cbac93b0e" translate="yes" xml:space="preserve">
          <source>The count and order of floating-point exceptions can be changed by optimization as long as the state as observed by the next floating-point operation is as if no optimization took place:</source>
          <target state="translated">El recuento y el orden de las excepciones de punto flotante pueden modificarse mediante optimización siempre que el estado observado en la siguiente operación de punto flotante sea como si no hubiera habido optimización:</target>
        </trans-unit>
        <trans-unit id="7d17f1800fe564bddef91d5783b748d674aa9406" translate="yes" xml:space="preserve">
          <source>The creator of the asynchronous operation can then use a variety of methods to query, wait for, or extract a value from the &lt;code&gt;std::future&lt;/code&gt;. These methods may block if the asynchronous operation has not yet provided a value.</source>
          <target state="translated">El creador de la operaci&amp;oacute;n asincr&amp;oacute;nica puede usar una variedad de m&amp;eacute;todos para consultar, esperar o extraer un valor de &lt;code&gt;std::future&lt;/code&gt; . Estos m&amp;eacute;todos pueden bloquearse si la operaci&amp;oacute;n asincr&amp;oacute;nica a&amp;uacute;n no ha proporcionado un valor.</target>
        </trans-unit>
        <trans-unit id="92bfef5342feb04a9c90c296a397274c28f936b5" translate="yes" xml:space="preserve">
          <source>The currency input manipulator &lt;code&gt;&lt;a href=&quot;../manip/get_money&quot;&gt;std::get_money&lt;/a&gt;&lt;/code&gt; (technically, &lt;a href=&quot;../../locale/money_get/get&quot;&gt;&lt;code&gt;money_get::get&lt;/code&gt;&lt;/a&gt; it calls), if the input cannot be unambiguously parsed as a monetary value according to the locale rules.</source>
          <target state="translated">El manipulador de entrada de moneda &lt;code&gt;&lt;a href=&quot;../manip/get_money&quot;&gt;std::get_money&lt;/a&gt;&lt;/code&gt; (t&amp;eacute;cnicamente, &lt;a href=&quot;../../locale/money_get/get&quot;&gt; &lt;code&gt;money_get::get&lt;/code&gt; &lt;/a&gt; it llama), si la entrada no puede analizarse sin ambig&amp;uuml;edades como un valor monetario de acuerdo con las reglas locales.</target>
        </trans-unit>
        <trans-unit id="60d7384005cbe496491d405e29d20256cd29de8c" translate="yes" xml:space="preserve">
          <source>The currency units are assumed to be the smallest non-fractional units of the currency: cents in the U.S, yen in Japan.</source>
          <target state="translated">Se supone que las unidades monetarias son las unidades no fraccionarias más pequeñas de la moneda:centavos en los EE.UU.,yen en Japón.</target>
        </trans-unit>
        <trans-unit id="d4158a75280f5053658832132f5cd7d688bb28fb" translate="yes" xml:space="preserve">
          <source>The currency units are assumed to be the smallest non-fractional units of the currency: cents in the U.S, yen in Japan. Thus, the input sequence &lt;code&gt;&quot;$1,056.23&quot;&lt;/code&gt; in a U.S. locale produces the number &lt;code&gt;105623.0&lt;/code&gt; in &lt;code&gt;units&lt;/code&gt; or a string &lt;code&gt;&quot;105623&quot;&lt;/code&gt; in &lt;code&gt;digits&lt;/code&gt;.</source>
          <target state="translated">Se supone que las unidades monetarias son las unidades no fraccionarias m&amp;aacute;s peque&amp;ntilde;as de la moneda: centavos en los Estados Unidos, yenes en Jap&amp;oacute;n. Por lo tanto, la secuencia de entrada &lt;code&gt;&quot;$1,056.23&quot;&lt;/code&gt; en una ubicaci&amp;oacute;n de EE. UU. Produce el n&amp;uacute;mero &lt;code&gt;105623.0&lt;/code&gt; en &lt;code&gt;units&lt;/code&gt; o una cadena &lt;code&gt;&quot;105623&quot;&lt;/code&gt; en &lt;code&gt;digits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="333d83e6dc8a3ed3cddeaf85bad80a985040ae63" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;../fenv/fe_round&quot;&gt;rounding mode&lt;/a&gt; has no effect.</source>
          <target state="translated">El &lt;a href=&quot;../fenv/fe_round&quot;&gt;modo de redondeo&lt;/a&gt; actual no tiene efecto.</target>
        </trans-unit>
        <trans-unit id="9dbf260b47d386ab70f9b32ae1d1e7e30e36d36b" translate="yes" xml:space="preserve">
          <source>The current conversion state.</source>
          <target state="translated">El estado actual de conversión.</target>
        </trans-unit>
        <trans-unit id="270d038a0d8b5445d8fe511402abe8b8a19d1179" translate="yes" xml:space="preserve">
          <source>The current execution agent should hold the lock &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">El agente de ejecuci&amp;oacute;n actual debe mantener el bloqueo &lt;code&gt;m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ddd134a5cf65243121b9adc3ce8ef2cf27721d8" translate="yes" xml:space="preserve">
          <source>The current fill character may be obtained with &lt;code&gt;&lt;a href=&quot;../basic_ios/fill&quot;&gt;std::ostream::fill&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El car&amp;aacute;cter de relleno actual se puede obtener con &lt;code&gt;&lt;a href=&quot;../basic_ios/fill&quot;&gt;std::ostream::fill&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7889788802b761b8ce955626e89d30674dbd0e9c" translate="yes" xml:space="preserve">
          <source>The current locale associated with the regular expression.</source>
          <target state="translated">El lugar actual asociado a la expresión regular.</target>
        </trans-unit>
        <trans-unit id="838b6a57f873b1fccedf43d2b0bf89f6151e0997" translate="yes" xml:space="preserve">
          <source>The current locale of the traits object.</source>
          <target state="translated">La ubicación actual del objeto de los rasgos.</target>
        </trans-unit>
        <trans-unit id="a3636f5f0c0e84e9153d12d1e93ae93fb45d2fd6" translate="yes" xml:space="preserve">
          <source>The current object (&lt;code&gt;*this&lt;/code&gt;) can be implicitly captured if either capture default is present. If implicitly captured, it is always captured by reference, even if the capture default is &lt;code&gt;=&lt;/code&gt;. The implicit capture of &lt;code&gt;*this&lt;/code&gt; when the capture default is &lt;code&gt;=&lt;/code&gt; is deprecated.(since C++20).</source>
          <target state="translated">El objeto actual ( &lt;code&gt;*this&lt;/code&gt; ) puede capturarse impl&amp;iacute;citamente si cualquiera de los valores predeterminados de captura est&amp;aacute; presente. Si se captura impl&amp;iacute;citamente, siempre se captura por referencia, incluso si el valor predeterminado de captura es &lt;code&gt;=&lt;/code&gt; . La captura impl&amp;iacute;cita de &lt;code&gt;*this&lt;/code&gt; cuando el valor predeterminado de captura es &lt;code&gt;=&lt;/code&gt; est&amp;aacute; en desuso (desde C ++ 20).</target>
        </trans-unit>
        <trans-unit id="ad54e387479c8cb969d50cc66d7fa3a22bc9d706" translate="yes" xml:space="preserve">
          <source>The current path as returned by many operating systems is a dangerous global variable. It may be changed unexpectedly by third-party or system library functions, or by another thread.</source>
          <target state="translated">La trayectoria actual,tal como la devuelven muchos sistemas operativos,es una variable global peligrosa.Puede ser cambiada inesperadamente por funciones de terceros o de la biblioteca del sistema,o por otro hilo.</target>
        </trans-unit>
        <trans-unit id="8a32812c167e23e9a138bf52141f02726895565b" translate="yes" xml:space="preserve">
          <source>The current position of the get pointer on success, &lt;code&gt;pos_type(-1)&lt;/code&gt; on failure.</source>
          <target state="translated">La posici&amp;oacute;n actual del puntero get en caso de &amp;eacute;xito, &lt;code&gt;pos_type(-1)&lt;/code&gt; en caso de error.</target>
        </trans-unit>
        <trans-unit id="dcd990c0fc482fb45b1d3492d0748ec8b63e5c22" translate="yes" xml:space="preserve">
          <source>The current rounding mode affects the following:</source>
          <target state="translated">El modo de redondeo actual afecta a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="430695fef50ce6b9934160789eacb1237ee74fd7" translate="yes" xml:space="preserve">
          <source>The current rounding mode does NOT affect the following:</source>
          <target state="translated">El modo de redondeo actual NO afecta a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="2a0cc9de998b3b2b254e8bf7182d9e5712a8d0e5" translate="yes" xml:space="preserve">
          <source>The current rounding mode, reflecting the effects of the most recent &lt;code&gt;fesetround&lt;/code&gt;, can also be queried with &lt;code&gt;&lt;a href=&quot;../../types/climits/flt_rounds&quot;&gt;FLT_ROUNDS&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El modo de redondeo actual, que refleja los efectos del &lt;code&gt;fesetround&lt;/code&gt; m&amp;aacute;s reciente , tambi&amp;eacute;n se puede consultar con &lt;code&gt;&lt;a href=&quot;../../types/climits/flt_rounds&quot;&gt;FLT_ROUNDS&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c59c1acaef9b3f40eb4278b9627af71fb04d4d02" translate="yes" xml:space="preserve">
          <source>The current value if &lt;code&gt;*this&lt;/code&gt; has a value, or &lt;code&gt;default_value&lt;/code&gt; otherwise.</source>
          <target state="translated">El valor actual si &lt;code&gt;*this&lt;/code&gt; tiene un valor, o &lt;code&gt;default_value&lt;/code&gt; de lo contrario.</target>
        </trans-unit>
        <trans-unit id="a689e4fd251e8da5a9a254dcb9427a1223639603" translate="yes" xml:space="preserve">
          <source>The current value of the atomic variable.</source>
          <target state="translated">El valor actual de la variable atómica.</target>
        </trans-unit>
        <trans-unit id="6c7d8a7a94fc01bbb7eea5c0e317c1703f34fd70" translate="yes" xml:space="preserve">
          <source>The current value of the referenced object.</source>
          <target state="translated">El valor actual del objeto de referencia.</target>
        </trans-unit>
        <trans-unit id="26235287e585eec8570ed00a3d99c3482814f00a" translate="yes" xml:space="preserve">
          <source>The current working directory is the directory, associated with the process, that is used as the starting location in pathname resolution for relative paths.</source>
          <target state="translated">El directorio de trabajo actual es el directorio,asociado al proceso,que se utiliza como la ubicación inicial en la resolución de rutas relativas.</target>
        </trans-unit>
        <trans-unit id="6c2e989156adf075647db2bbb3a0ace08ea4fdf8" translate="yes" xml:space="preserve">
          <source>The currently installed</source>
          <target state="translated">La instalación actual</target>
        </trans-unit>
        <trans-unit id="4f2c122b6d6e472425a6c170dde1110ad507b7a0" translate="yes" xml:space="preserve">
          <source>The currently installed &lt;code&gt;&lt;a href=&quot;terminate_handler&quot;&gt;std::terminate_handler&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;&lt;a href=&quot;terminate_handler&quot;&gt;std::terminate_handler&lt;/a&gt;&lt;/code&gt; actualmente instalado .</target>
        </trans-unit>
        <trans-unit id="7b4bd18550ac3d44de3e81a240bd6b990bb8c28e" translate="yes" xml:space="preserve">
          <source>The currently installed &lt;code&gt;&lt;a href=&quot;unexpected_handler&quot;&gt;std::unexpected_handler&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;&lt;a href=&quot;unexpected_handler&quot;&gt;std::unexpected_handler&lt;/a&gt;&lt;/code&gt; instalado actualmente : inesperado_handler .</target>
        </trans-unit>
        <trans-unit id="a322ed62540daa71393f9a489dc06b4e4497bec8" translate="yes" xml:space="preserve">
          <source>The custom streambuf classes that do not use the get area and do not set the get area pointers in basic_streambuf are required to override this function.</source>
          <target state="translated">Las clases personalizadas de streambuf que no usan el área de get y no establecen los punteros de área de get en basic_streambuf son necesarias para anular esta función.</target>
        </trans-unit>
        <trans-unit id="7e2014e10ac3def5949d4073de444574acf0086c" translate="yes" xml:space="preserve">
          <source>The cv-T templates (3-5) are SFINAE-friendly: if &lt;code&gt;std::tuple_size&amp;lt;T&amp;gt;::value&lt;/code&gt; is ill-formed when treated as an unevaluated operand, (3-5) do not provide the member &lt;code&gt;value&lt;/code&gt;. Access checking is performed as if in a context unrelated to &lt;code&gt;tuple_size&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt;. Only the validity of the immediate context of the expression is considered. This allows.</source>
          <target state="translated">Las plantillas cv-T (3-5) son compatibles con SFINAE: si &lt;code&gt;std::tuple_size&amp;lt;T&amp;gt;::value&lt;/code&gt; est&amp;aacute; mal formado cuando se trata como un operando no evaluado, (3-5) no proporcionan el &lt;code&gt;value&lt;/code&gt; miembro . La comprobaci&amp;oacute;n de acceso se lleva a cabo como en un contexto no relacionado con &lt;code&gt;tuple_size&lt;/code&gt; y &lt;code&gt;T&lt;/code&gt; . Solo se considera la validez del contexto inmediato de la expresi&amp;oacute;n. Esto permite.</target>
        </trans-unit>
        <trans-unit id="afe86358b8ce8ed3f21d2c8bdc99573b37f7b88a" translate="yes" xml:space="preserve">
          <source>The day value stored in &lt;code&gt;*this&lt;/code&gt;.</source>
          <target state="translated">El valor del d&amp;iacute;a almacenado en &lt;code&gt;*this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a9a7ddae9e9233b0fb8ad54cb826d1d5361ecfc" translate="yes" xml:space="preserve">
          <source>The deallocation function's name is &lt;a href=&quot;lookup&quot;&gt;looked up&lt;/a&gt; in the scope of the dynamic type of the object pointed to by expression, which means class-specific deallocation functions, if present, are found before the global ones. If &lt;code&gt;::&lt;/code&gt; is present in the &lt;code&gt;delete&lt;/code&gt; expression, only the global namespace is examined by this lookup.</source>
          <target state="translated">El nombre de la funci&amp;oacute;n de desasignaci&amp;oacute;n se &lt;a href=&quot;lookup&quot;&gt;busca&lt;/a&gt; en el &amp;aacute;mbito del tipo din&amp;aacute;mico del objeto al que apunta la expresi&amp;oacute;n, lo que significa que las funciones de desasignaci&amp;oacute;n espec&amp;iacute;ficas de clase, si est&amp;aacute;n presentes, se encuentran antes que las globales. Si &lt;code&gt;::&lt;/code&gt; est&amp;aacute; presente en la expresi&amp;oacute;n de &lt;code&gt;delete&lt;/code&gt; , solo esta b&amp;uacute;squeda examina el espacio de nombres global.</target>
        </trans-unit>
        <trans-unit id="ee3d0e0dfebc3a5c800bd21f9ce6cc65f9cb2736" translate="yes" xml:space="preserve">
          <source>The decimal value &lt;code&gt;0.1&lt;/code&gt; cannot be represented by a binary floating-point type. When stored in an IEEE-745 &lt;code&gt;double&lt;/code&gt;, it falls between 0x1.9999999999999*2-4</source>
          <target state="translated">El valor decimal &lt;code&gt;0.1&lt;/code&gt; no puede representarse con un tipo de punto flotante binario. Cuando se almacena en un &lt;code&gt;double&lt;/code&gt; IEEE-745 , cae entre 0x1.9999999999999 * 2-4</target>
        </trans-unit>
        <trans-unit id="438a3580e45d17ab77478ad47bf10a993c0cab45" translate="yes" xml:space="preserve">
          <source>The declaration inside the class body is not a definition and may declare the member to be of &lt;a href=&quot;incomplete_type&quot;&gt;incomplete type&lt;/a&gt; (other than &lt;code&gt;void&lt;/code&gt;), including the type in which the member is declared:</source>
          <target state="translated">La declaraci&amp;oacute;n dentro del cuerpo de la clase no es una definici&amp;oacute;n y puede declarar que el miembro es de &lt;a href=&quot;incomplete_type&quot;&gt;tipo incompleto&lt;/a&gt; (que no sea &lt;code&gt;void&lt;/code&gt; ), incluido el tipo en el que se declara el miembro:</target>
        </trans-unit>
        <trans-unit id="940a93324f0b867fc22c005f3cbb33931f332b0f" translate="yes" xml:space="preserve">
          <source>The declared type of an array object might be an array of incomplete class type and therefore incomplete; if the class type is completed later on in the translation unit, the array type becomes complete; the array type at those two points is the same type.</source>
          <target state="translated">El tipo declarado de un objeto del conjunto podría ser un conjunto de tipo de clase incompleto y,por lo tanto,incompleto;si el tipo de clase se completa más adelante en la unidad de traslación,el tipo de conjunto se completa;el tipo de conjunto en esos dos puntos es el mismo tipo.</target>
        </trans-unit>
        <trans-unit id="d1ac1b1b8d3a334743e1a9098fcb2cea503e3b4c" translate="yes" xml:space="preserve">
          <source>The declared type of an array object might be an array of unknown bound and therefore be incomplete at one point in a translation unit and complete later on; the array types at those two points (&quot;array of unknown bound of &lt;code&gt;T&lt;/code&gt;&quot; and &quot;array of &lt;code&gt;N&lt;/code&gt;&lt;code&gt;T&lt;/code&gt;&quot;) are different types.</source>
          <target state="translated">El tipo declarado de un objeto de matriz podr&amp;iacute;a ser una matriz de l&amp;iacute;mite desconocido y, por lo tanto, estar incompleto en un punto de una unidad de traducci&amp;oacute;n y completarse m&amp;aacute;s adelante; Los tipos de matriz en esos dos puntos (&quot;matriz de l&amp;iacute;mite desconocido de &lt;code&gt;T&lt;/code&gt; &quot; y &quot;matriz de &lt;code&gt;N&lt;/code&gt; &lt;code&gt;T&lt;/code&gt; &quot;) son tipos diferentes.</target>
        </trans-unit>
        <trans-unit id="18785b0480ebbad388b964ef9874663bccf996c2" translate="yes" xml:space="preserve">
          <source>The deduced types &lt;code&gt;V1&lt;/code&gt; and &lt;code&gt;V2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay&lt;/a&gt;&amp;lt;T1&amp;gt;::type&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay&lt;/a&gt;&amp;lt;T2&amp;gt;::type&lt;/code&gt; (the usual type transformations applied to arguments of functions passed by value) unless application of &lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay&lt;/a&gt;&lt;/code&gt; results in &lt;code&gt;&lt;a href=&quot;../functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&amp;lt;X&amp;gt;&lt;/code&gt; for some type &lt;code&gt;X&lt;/code&gt;, in which case the deduced type is &lt;code&gt;X&amp;amp;&lt;/code&gt;.</source>
          <target state="translated">Los tipos deducidos &lt;code&gt;V1&lt;/code&gt; y &lt;code&gt;V2&lt;/code&gt; son &lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay&lt;/a&gt;&amp;lt;T1&amp;gt;::type&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay&lt;/a&gt;&amp;lt;T2&amp;gt;::type&lt;/code&gt; (las transformaciones de tipo habituales aplicadas a argumentos de funciones pasadas por valor) a menos que se apliquen los resultados de &lt;code&gt;&lt;a href=&quot;../../types/decay&quot;&gt;std::decay&lt;/a&gt;&lt;/code&gt; en &lt;code&gt;&lt;a href=&quot;../functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&amp;lt;X&amp;gt;&lt;/code&gt; para alg&amp;uacute;n tipo &lt;code&gt;X&lt;/code&gt; , en cuyo caso el tipo deducido es &lt;code&gt;X&amp;amp;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e02493aa58b5b2fea63d5d88e4dcf79d58481e1" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;operator&amp;lt;&lt;/code&gt; is not defined for weak pointers, and may wrongly consider two shared pointers for the same object non-equivalent (see &lt;a href=&quot;shared_ptr/owner_before&quot;&gt;&lt;code&gt;shared_ptr::owner_before&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">El &lt;code&gt;operator&amp;lt;&lt;/code&gt; predeterminado &amp;lt; no est&amp;aacute; definido para punteros d&amp;eacute;biles, y puede considerar err&amp;oacute;neamente dos punteros compartidos para el mismo objeto no equivalente (ver &lt;a href=&quot;shared_ptr/owner_before&quot;&gt; &lt;code&gt;shared_ptr::owner_before&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="29a0f4f44719826deb8dc0997c1c24058144c7cf" translate="yes" xml:space="preserve">
          <source>The default allocator satisfies &lt;a href=&quot;../named_req/allocator#Allocator_completeness_requirements&quot;&gt;allocator completeness requirements&lt;/a&gt;.</source>
          <target state="translated">El asignador predeterminado satisface los &lt;a href=&quot;../named_req/allocator#Allocator_completeness_requirements&quot;&gt;requisitos de integridad del asignador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4141e9de4e7f5923913eec75a044f8b9df31d8c8" translate="yes" xml:space="preserve">
          <source>The default arguments are not part of the function type.</source>
          <target state="translated">Los argumentos por defecto no forman parte del tipo de función.</target>
        </trans-unit>
        <trans-unit id="193be4dab5a8464a5f47fc22f793c70a383f5c19" translate="yes" xml:space="preserve">
          <source>The default base class version of this function does nothing and returns &lt;code&gt;Traits::eof()&lt;/code&gt; in all situations. This function is overridden by the derived classes: &lt;a href=&quot;../basic_stringbuf/pbackfail&quot;&gt;&lt;code&gt;basic_stringbuf::pbackfail&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../basic_filebuf/pbackfail&quot;&gt;&lt;code&gt;basic_filebuf::pbackfail&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../strstreambuf/pbackfail&quot;&gt;&lt;code&gt;strstreambuf::pbackfail&lt;/code&gt;&lt;/a&gt;, and is expected to be overridden by user-defined and third-party library stream classes.</source>
          <target state="translated">La versi&amp;oacute;n de clase base predeterminada de esta funci&amp;oacute;n no hace nada y devuelve &lt;code&gt;Traits::eof()&lt;/code&gt; en todas las situaciones. Esta funci&amp;oacute;n es anulada por las clases derivadas: &lt;a href=&quot;../basic_stringbuf/pbackfail&quot;&gt; &lt;code&gt;basic_stringbuf::pbackfail&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../basic_filebuf/pbackfail&quot;&gt; &lt;code&gt;basic_filebuf::pbackfail&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../strstreambuf/pbackfail&quot;&gt; &lt;code&gt;strstreambuf::pbackfail&lt;/code&gt; &lt;/a&gt; , y se espera que sea anulada por clases de flujo de biblioteca definidas por el usuario y de terceros.</target>
        </trans-unit>
        <trans-unit id="8be97a2a7f2ed1505287b3fbafa565875f570ad4" translate="yes" xml:space="preserve">
          <source>The default behavior of all atomic operations in the library provides for</source>
          <target state="translated">El comportamiento por defecto de todas las operaciones atómicas en la biblioteca proporciona</target>
        </trans-unit>
        <trans-unit id="6c0727e16ebccb104329148ed9efcf925fc019d2" translate="yes" xml:space="preserve">
          <source>The default behavior when copying directories is the non-recursive copy: the files are copied, but not the subdirectories:</source>
          <target state="translated">El comportamiento por defecto al copiar los directorios es la copia no recursiva:se copian los archivos,pero no los subdirectorios:</target>
        </trans-unit>
        <trans-unit id="41ed6266dfe4ccf36594ee86ce0193a99a4725f3" translate="yes" xml:space="preserve">
          <source>The default buffer size &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;BUFSIZ&lt;/a&gt;&lt;/code&gt; is expected to be the most efficient buffer size for file I/O on the implementation, but POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/fstat.html&quot;&gt;fstat&lt;/a&gt; often provides a better estimate.</source>
          <target state="translated">Se espera que el tama&amp;ntilde;o de b&amp;uacute;fer predeterminado &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;BUFSIZ&lt;/a&gt;&lt;/code&gt; sea ​​el tama&amp;ntilde;o de b&amp;uacute;fer m&amp;aacute;s eficiente para la E / S de archivos en la implementaci&amp;oacute;n, pero POSIX &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/fstat.html&quot;&gt;fstat a&lt;/a&gt; menudo proporciona una mejor estimaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2d7ae11108cf5f4e3313107eca477fb3419136b3" translate="yes" xml:space="preserve">
          <source>The default buffer size &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;BUFSIZ&lt;/a&gt;&lt;/code&gt; is expected to be the most efficient buffer size for file I/O on the implementation, but POSIX &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/fstat.html&quot;&gt;fstat&lt;/a&gt; often provides a better estimate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fb0d322cfae3c7c913c1207e551679519632db" translate="yes" xml:space="preserve">
          <source>The default constructor for class &lt;code&gt;T&lt;/code&gt; is trivial (i.e. performs no action) if all of the following is true:</source>
          <target state="translated">El constructor predeterminado para la clase &lt;code&gt;T&lt;/code&gt; es trivial (es decir, no realiza ninguna acci&amp;oacute;n) si se cumple todo lo siguiente:</target>
        </trans-unit>
        <trans-unit id="53354add7be5ca66a4d2ad5f4e234eb66514dd9e" translate="yes" xml:space="preserve">
          <source>The default constructor is implicitly deleted.</source>
          <target state="translated">El constructor por defecto se borra implícitamente.</target>
        </trans-unit>
        <trans-unit id="b24fb4c8cd27ffea47b12b41d3f765329cbc2ae5" translate="yes" xml:space="preserve">
          <source>The default error condition for the current error value.</source>
          <target state="translated">La condición de error por defecto para el valor de error actual.</target>
        </trans-unit>
        <trans-unit id="fce8e9993c66d49e40a3975ae3f5de563116be62" translate="yes" xml:space="preserve">
          <source>The default format, returned by the standard specializations of &lt;code&gt;&lt;a href=&quot;moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;{symbol, sign, none, value}&lt;/code&gt;</source>
          <target state="translated">El formato predeterminado, devuelto por las especializaciones est&amp;aacute;ndar de &lt;code&gt;&lt;a href=&quot;moneypunct&quot;&gt;std::moneypunct&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;{symbol, sign, none, value}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="464a94cd50a559a4c8980f122d2681b9028dc369" translate="yes" xml:space="preserve">
          <source>The default implementation throws &lt;code&gt;&lt;a href=&quot;bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt;. The user can install his own</source>
          <target state="translated">La implementaci&amp;oacute;n predeterminada arroja &lt;code&gt;&lt;a href=&quot;bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt; . El usuario puede instalar su propio</target>
        </trans-unit>
        <trans-unit id="aa5a89dde13e753c4365b630f7ff4e96f11b95d8" translate="yes" xml:space="preserve">
          <source>The default operator&amp;lt;=&amp;gt; performs lexicographical comparison by successively comparing the base (left-to-right depth-first) and then non-static member (in declaration order) subobjects of T to compute &amp;lt;=&amp;gt;, recursively expanding array members (in order of increasing subscript), and stopping early when a not-equal result is found, that is:</source>
          <target state="translated">El operador predeterminado &amp;lt;=&amp;gt; realiza una comparaci&amp;oacute;n lexicogr&amp;aacute;fica comparando sucesivamente la base (profundidad de izquierda a derecha primero) y luego los subobjetos de miembro no est&amp;aacute;tico (en orden de declaraci&amp;oacute;n) de T para calcular &amp;lt;=&amp;gt;, expandiendo recursivamente miembros de matriz (en orden de sub&amp;iacute;ndice creciente), y detenerse temprano cuando se encuentra un resultado no igual, es decir:</target>
        </trans-unit>
        <trans-unit id="934ba14e25c2c69432aed545fd6f3960918b1e13" translate="yes" xml:space="preserve">
          <source>The default precision, as established by &lt;code&gt;&lt;a href=&quot;../basic_ios/init&quot;&gt;std::basic_ios::init&lt;/a&gt;&lt;/code&gt;, is 6.</source>
          <target state="translated">La precisi&amp;oacute;n predeterminada, establecida por &lt;code&gt;&lt;a href=&quot;../basic_ios/init&quot;&gt;std::basic_ios::init&lt;/a&gt;&lt;/code&gt; , es 6.</target>
        </trans-unit>
        <trans-unit id="5f21b7a8c1842336105782e7b228650bb7d62be6" translate="yes" xml:space="preserve">
          <source>The default template argument is implicitly instantiated when the value of that default argument is needed, except if the template is used to name a function:</source>
          <target state="translated">El argumento de la plantilla por defecto se instanciará implícitamente cuando se necesite el valor de ese argumento por defecto,excepto si la plantilla se utiliza para nombrar una función:</target>
        </trans-unit>
        <trans-unit id="6f94b9099a67a8b7153f8eb5fa084e3e3d0d2916" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;Align&lt;/code&gt; is the most stringent (the largest) alignment requirement for any object whose size is at most &lt;code&gt;Len&lt;/code&gt;. If the default value is not used, &lt;code&gt;Align&lt;/code&gt; must be the value of &lt;code&gt;alignof(T)&lt;/code&gt; for some type &lt;code&gt;T&lt;/code&gt;, or the behavior is undefined.</source>
          <target state="translated">El valor predeterminado de &lt;code&gt;Align&lt;/code&gt; es el requisito de alineaci&amp;oacute;n m&amp;aacute;s estricto (el m&amp;aacute;s grande) para cualquier objeto cuyo tama&amp;ntilde;o sea como m&amp;aacute;ximo &lt;code&gt;Len&lt;/code&gt; . Si no se usa el valor predeterminado, &lt;code&gt;Align&lt;/code&gt; debe ser el valor de &lt;code&gt;alignof(T)&lt;/code&gt; para alg&amp;uacute;n tipo &lt;code&gt;T&lt;/code&gt; , o el comportamiento no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="32242f67a115d2cb73f7cc2aae6abcb227097b42" translate="yes" xml:space="preserve">
          <source>The default, non-specialized, &lt;code&gt;allocator_traits&lt;/code&gt; contains the following members:</source>
          <target state="translated">El predeterminado, no especializado, &lt;code&gt;allocator_traits&lt;/code&gt; contiene los siguientes miembros:</target>
        </trans-unit>
        <trans-unit id="08db4badb19637e5c90fde67592f886560c377c6" translate="yes" xml:space="preserve">
          <source>The default-constructed &lt;code&gt;std::istream_iterator&lt;/code&gt; is known as the</source>
          <target state="translated">El &lt;code&gt;std::istream_iterator&lt;/code&gt; construido por defecto se conoce como</target>
        </trans-unit>
        <trans-unit id="a6a84857860a6d8c7cf3bb60aa439a703f3cc543" translate="yes" xml:space="preserve">
          <source>The default-constructed &lt;code&gt;std::istreambuf_iterator&lt;/code&gt; is known as the</source>
          <target state="translated">El &lt;code&gt;std::istreambuf_iterator&lt;/code&gt; construido por defecto se conoce como</target>
        </trans-unit>
        <trans-unit id="e7c78c2f8446abe7827d7e9f5d4effa429c3448d" translate="yes" xml:space="preserve">
          <source>The default-constructed &lt;code&gt;std::negative_binomial_distribution&lt;/code&gt; is equivalent to the default-constructed &lt;code&gt;&lt;a href=&quot;../geometric_distribution&quot;&gt;std::geometric_distribution&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La construcci&amp;oacute;n est&amp;aacute;ndar por defecto &lt;code&gt;std::negative_binomial_distribution&lt;/code&gt; es equivalente a la construcci&amp;oacute;n est&amp;aacute;ndar por defecto &lt;code&gt;&lt;a href=&quot;../geometric_distribution&quot;&gt;std::geometric_distribution&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0958dd627dea2d882852fe149df4d3a5f23bcd6" translate="yes" xml:space="preserve">
          <source>The default-constructed &lt;code&gt;std::regex_iterator&lt;/code&gt; is the end-of-sequence iterator. When a valid &lt;code&gt;std::regex_iterator&lt;/code&gt; is incremented after reaching the last match (&lt;code&gt;&lt;a href=&quot;regex_search&quot;&gt;std::regex_search&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;), it becomes equal to the end-of-sequence iterator. Dereferencing or incrementing it further invokes undefined behavior.</source>
          <target state="translated">El &lt;code&gt;std::regex_iterator&lt;/code&gt; construido por defecto es el iterador de fin de secuencia. Cuando un &lt;code&gt;std::regex_iterator&lt;/code&gt; v&amp;aacute;lido se incrementa despu&amp;eacute;s de llegar a la &amp;uacute;ltima coincidencia ( &lt;code&gt;&lt;a href=&quot;regex_search&quot;&gt;std::regex_search&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;false&lt;/code&gt; ), se vuelve igual al iterador de fin de secuencia. Desreferenciarlo o incrementarlo invoca a&amp;uacute;n m&amp;aacute;s el comportamiento indefinido.</target>
        </trans-unit>
        <trans-unit id="a6e5505129068a171635aca553122e602560750a" translate="yes" xml:space="preserve">
          <source>The default-constructed &lt;code&gt;std::regex_token_iterator&lt;/code&gt; is the end-of-sequence iterator. When a valid &lt;code&gt;std::regex_token_iterator&lt;/code&gt; is incremented after reaching the last submatch of the last match, it becomes equal to the end-of-sequence iterator. Dereferencing or incrementing it further invokes undefined behavior.</source>
          <target state="translated">El &lt;code&gt;std::regex_token_iterator&lt;/code&gt; construido por defecto es el iterador de fin de secuencia. Cuando un &lt;code&gt;std::regex_token_iterator&lt;/code&gt; v&amp;aacute;lido se incrementa despu&amp;eacute;s de alcanzar la &amp;uacute;ltima subcoincidencia de la &amp;uacute;ltima coincidencia, se vuelve igual al iterador de final de secuencia. Desreferenciarlo o incrementarlo invoca a&amp;uacute;n m&amp;aacute;s el comportamiento indefinido.</target>
        </trans-unit>
        <trans-unit id="af4d20797ae40eebe6bfcf29080bace8b370e336" translate="yes" xml:space="preserve">
          <source>The default-initialized &lt;code&gt;&lt;a href=&quot;../atomic&quot;&gt;std::atomic&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; does not contain a &lt;code&gt;T&lt;/code&gt; object, and its only valid uses are destruction and initialization by &lt;code&gt;&lt;a href=&quot;../atomic_init&quot;&gt;std::atomic_init&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;http://wg21.link/lwg2334&quot;&gt;LWG 2334&lt;/a&gt;.</source>
          <target state="translated">El &lt;code&gt;&lt;a href=&quot;../atomic&quot;&gt;std::atomic&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; inicializado por defecto no contiene un objeto &lt;code&gt;T&lt;/code&gt; , y sus &amp;uacute;nicos usos v&amp;aacute;lidos son la destrucci&amp;oacute;n e inicializaci&amp;oacute;n por &lt;code&gt;&lt;a href=&quot;../atomic_init&quot;&gt;std::atomic_init&lt;/a&gt;&lt;/code&gt; , ver &lt;a href=&quot;http://wg21.link/lwg2334&quot;&gt;LWG 2334&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ddd15f3710b0463f2d6c635ce575542649ee4a4" translate="yes" xml:space="preserve">
          <source>The defaulted operator&amp;lt;=&amp;gt; is implicitly deleted and returns &lt;code&gt;void&lt;/code&gt; if not all base and member subobjects have a compiler-generated or user-declared operator&amp;lt;=&amp;gt; declared in their scope (i.e., as a nonstatic member or as a friend) whose result is one of the std:: comparison category types.</source>
          <target state="translated">El operador predeterminado &amp;lt;=&amp;gt; se elimina impl&amp;iacute;citamente y devuelve &lt;code&gt;void&lt;/code&gt; si no todos los subobjetos base y miembro tienen un operador &amp;lt;=&amp;gt; generado por el compilador o declarado por el usuario declarado en su alcance (es decir, como miembro no est&amp;aacute;tico o como amigo) cuyo resultado es uno de los tipos de categor&amp;iacute;a std :: comparaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="754f96ac6dbea3e27f6af69cc55f56ae1f6bb28c" translate="yes" xml:space="preserve">
          <source>The definition of a concept has the form.</source>
          <target state="translated">La definición de un concepto tiene la forma.</target>
        </trans-unit>
        <trans-unit id="b026fa7b764c3afd596b6b85c52798554c6dc752" translate="yes" xml:space="preserve">
          <source>The definition of a pure virtual function may be provided (and must be provided if the pure virtual is the &lt;a href=&quot;destructor&quot;&gt;destructor&lt;/a&gt;): the member functions of the derived class are free to call the abstract base's pure virtual function using qualified function id. This definition must be provided outside of the class body (the syntax of a function declaration doesn't allow both the pure specifier &lt;code&gt;= 0&lt;/code&gt; and a function body).</source>
          <target state="translated">Se puede proporcionar la definici&amp;oacute;n de una funci&amp;oacute;n virtual pura (y se debe proporcionar si el virtual puro es el &lt;a href=&quot;destructor&quot;&gt;destructor&lt;/a&gt; ): las funciones miembro de la clase derivada son libres de llamar a la funci&amp;oacute;n virtual pura de la base abstracta usando la identificaci&amp;oacute;n de funci&amp;oacute;n calificada. Esta definici&amp;oacute;n debe proporcionarse fuera del cuerpo de la clase (la sintaxis de una declaraci&amp;oacute;n de funci&amp;oacute;n no permite tanto el especificador puro &lt;code&gt;= 0&lt;/code&gt; como un cuerpo de funci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="2639f4da4854a71548a7d1bcd7dfbc226f8a2700" translate="yes" xml:space="preserve">
          <source>The definition of a template must be visible at the point of implicit instantiation, which is why template libraries typically provide all template definitions in the headers (e.g. &lt;a href=&quot;http://www.boost.org/doc/libs/release/more/getting_started/unix-variants.html#header-only-libraries&quot;&gt;most boost libraries are header-only&lt;/a&gt;).</source>
          <target state="translated">La definici&amp;oacute;n de una plantilla debe ser visible en el punto de instanciaci&amp;oacute;n impl&amp;iacute;cita, por lo que las bibliotecas de plantillas suelen proporcionar todas las definiciones de plantilla en los encabezados (por ejemplo, la &lt;a href=&quot;http://www.boost.org/doc/libs/release/more/getting_started/unix-variants.html#header-only-libraries&quot;&gt;mayor&amp;iacute;a de las bibliotecas de impulso son solo de encabezado&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="be5e363402ef10337c9882449637f85fac26f679" translate="yes" xml:space="preserve">
          <source>The definition of a template must be visible at the point of implicit instantiation, which is why template libraries typically provide all template definitions in the headers (e.g. &lt;a href=&quot;https://www.boost.org/doc/libs/release/more/getting_started/unix-variants.html#header-only-libraries&quot;&gt;most boost libraries are header-only&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627832562bf8dd374b20ff048dfc37aaca313b99" translate="yes" xml:space="preserve">
          <source>The definition of the macro &lt;code&gt;assert&lt;/code&gt; depends on another macro, &lt;code&gt;NDEBUG&lt;/code&gt;, which is not defined by the standard library.</source>
          <target state="translated">La definici&amp;oacute;n de la macro &lt;code&gt;assert&lt;/code&gt; depende de otro macro, &lt;code&gt;NDEBUG&lt;/code&gt; , que no est&amp;aacute; definido por la biblioteca est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="23e5c381bb2167a3dc5b2cd8a40fc1bcd4a9a8f5" translate="yes" xml:space="preserve">
          <source>The delete expression looks for appropriate deallocation function's name starting from the class scope (array form looks in the scope of the array element class) and proceeds to the global scope if no members are found as usual. Note, that as per &lt;a href=&quot;../../language/lookup&quot;&gt;name lookup rules&lt;/a&gt;, any deallocation functions declared in class scope hides all global deallocation functions.</source>
          <target state="translated">La expresi&amp;oacute;n delete busca el nombre apropiado de la funci&amp;oacute;n de desasignaci&amp;oacute;n a partir del alcance de la clase (la forma de matriz se ve en el alcance de la clase de elemento de matriz) y contin&amp;uacute;a al alcance global si no se encuentran miembros como de costumbre. Tenga en cuenta que seg&amp;uacute;n&lt;a href=&quot;../../language/lookup&quot;&gt; reglas de b&amp;uacute;squeda nombre&lt;/a&gt; , cualquier funci&amp;oacute;n de desasignaci&amp;oacute;n declarada en el &amp;aacute;mbito de la clase oculta todas las funciones de desasignaci&amp;oacute;n global.</target>
        </trans-unit>
        <trans-unit id="a6dd83f7a9eb5844a97acba85f2085f664257285" translate="yes" xml:space="preserve">
          <source>The deleted definition of a function must be the first declaration in a translation unit: a previously-declared function cannot be redeclared as deleted:</source>
          <target state="translated">La definición suprimida de una función debe ser la primera declaración en una unidad de traducción:una función previamente declarada no puede ser redeclarada como suprimida:</target>
        </trans-unit>
        <trans-unit id="79625de2d4737ec271475c5f2652df74da1cc9e6" translate="yes" xml:space="preserve">
          <source>The deleted implicitly-declared move constructor is ignored by &lt;a href=&quot;overload_resolution&quot;&gt;overload resolution&lt;/a&gt; (otherwise it would prevent copy-initialization from rvalue).</source>
          <target state="translated">El constructor de movimiento declarado impl&amp;iacute;citamente eliminado es ignorado por &lt;a href=&quot;overload_resolution&quot;&gt; resoluci&amp;oacute;n de sobrecarga&lt;/a&gt; (de lo contrario, evitar&amp;iacute;a que la inicializaci&amp;oacute;n de copia rvalue).</target>
        </trans-unit>
        <trans-unit id="a4c65324c4875d15514b8e9ecd9c933b7a537755" translate="yes" xml:space="preserve">
          <source>The deprecated stream buffer &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; or the boost.IOStreams device &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/iostreams/doc/classes/array.html#array&quot;&gt;&lt;code&gt;boost::basic_array&lt;/code&gt;&lt;/a&gt; may be used to implement I/O buffering over a user-provided char array in portable manner.</source>
          <target state="translated">El b&amp;uacute;fer de flujo obsoleto &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; o el dispositivo boost.IOStreams &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/iostreams/doc/classes/array.html#array&quot;&gt; &lt;code&gt;boost::basic_array&lt;/code&gt; &lt;/a&gt; se puede usar para implementar el almacenamiento en b&amp;uacute;fer de E / S sobre una matriz de caracteres proporcionada por el usuario de manera port&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="7c69b52f86780f48f4d302179c41406cefad77dc" translate="yes" xml:space="preserve">
          <source>The deprecated stream buffer &lt;code&gt;&lt;a href=&quot;../strstreambuf&quot;&gt;std::strstreambuf&lt;/a&gt;&lt;/code&gt; or the boost.IOStreams device &lt;a href=&quot;https://www.boost.org/doc/libs/release/libs/iostreams/doc/classes/array.html#array&quot;&gt;&lt;code&gt;boost::basic_array&lt;/code&gt;&lt;/a&gt; may be used to implement I/O buffering over a user-provided char array in portable manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24d6075064d8a50287cbe8ac1382cdf84e9445f" translate="yes" xml:space="preserve">
          <source>The dereference operator &lt;code&gt;&lt;a href=&quot;operator_star_&quot;&gt;operator*()&lt;/a&gt;&lt;/code&gt; does not check if this optional contains a value, which may be more efficient than &lt;code&gt;value()&lt;/code&gt;.</source>
          <target state="translated">El operador de &lt;code&gt;&lt;a href=&quot;operator_star_&quot;&gt;operator*()&lt;/a&gt;&lt;/code&gt; referencia * () no verifica si este opcional contiene un valor, que puede ser m&amp;aacute;s eficiente que &lt;code&gt;value()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e8797256c4b2164a537ac90920cb706eff3148b" translate="yes" xml:space="preserve">
          <source>The description above summarizes C++14; the C++11 phrasing required this function to return true for &lt;code&gt;'_'&lt;/code&gt; in all cases (&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#2018&quot;&gt;LWG issue 2018&lt;/a&gt;).</source>
          <target state="translated">La descripci&amp;oacute;n anterior resume C ++ 14; la redacci&amp;oacute;n de C ++ 11 requer&amp;iacute;a que esta funci&amp;oacute;n devolviera verdadero para &lt;code&gt;'_'&lt;/code&gt; en todos los casos ( &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#2018&quot;&gt;problema LWG 2018&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="aeb40399c9bd04128464837d331638d1fc355f39" translate="yes" xml:space="preserve">
          <source>The description is formed by concatenating the following components:</source>
          <target state="translated">La descripción se forma mediante la concatenación de los siguientes componentes:</target>
        </trans-unit>
        <trans-unit id="fbcd77025b866b3c4c83a4d439bb95c7cee206f7" translate="yes" xml:space="preserve">
          <source>The destination byte string must have enough space for the contents of both &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; plus the terminating null character, except that the size of &lt;code&gt;src&lt;/code&gt; is limited to &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">La cadena de bytes de destino debe tener suficiente espacio para el contenido de &lt;code&gt;dest&lt;/code&gt; y &lt;code&gt;src&lt;/code&gt; m&amp;aacute;s el car&amp;aacute;cter nulo de terminaci&amp;oacute;n, excepto que el tama&amp;ntilde;o de &lt;code&gt;src&lt;/code&gt; est&amp;aacute; limitado a &lt;code&gt;count&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f996269c6c91d048a969204e9f5beea30d4fbab2" translate="yes" xml:space="preserve">
          <source>The destructor for a block-scope static variable &lt;a href=&quot;../utility/program/exit&quot;&gt;is called at program exit&lt;/a&gt;, but only if the initialization took place successfully.</source>
          <target state="translated">El destructor para una variable est&amp;aacute;tica de alcance de bloque &lt;a href=&quot;../utility/program/exit&quot;&gt; se llama al salir del programa&lt;/a&gt; , pero solo si la inicializaci&amp;oacute;n se realiz&amp;oacute; con &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="075f75c9eecc69c36093fa569ae42f26ebb2974f" translate="yes" xml:space="preserve">
          <source>The destructor for class &lt;code&gt;T&lt;/code&gt; is trivial if all of the following is true:</source>
          <target state="translated">El destructor para clase &lt;code&gt;T&lt;/code&gt; es trivial si todo lo siguiente es verdadero:</target>
        </trans-unit>
        <trans-unit id="f86d1d85f514080fcb96ed20ed8238a17c06c287" translate="yes" xml:space="preserve">
          <source>The destructor is called whenever an object's &lt;a href=&quot;lifetime&quot;&gt;lifetime&lt;/a&gt; ends, which includes.</source>
          <target state="translated">Se llama al destructor siempre que la &lt;a href=&quot;lifetime&quot;&gt;vida de&lt;/a&gt; un objeto finaliza , que incluye.</target>
        </trans-unit>
        <trans-unit id="54eb2596b68b59e708441b4aa090a04eba62c0f7" translate="yes" xml:space="preserve">
          <source>The destructor is implicitly-declared.</source>
          <target state="translated">El destructor está implícitamente declarado.</target>
        </trans-unit>
        <trans-unit id="c0a4e9e001abc2037d151b9845f28ea4fc930aa5" translate="yes" xml:space="preserve">
          <source>The destructor is not user-provided (meaning, it is either implicitly declared, or explicitly defined as defaulted on its first declaration)</source>
          <target state="translated">El destructor no es suministrado por el usuario (es decir,se declara implícitamente,o se define explícitamente como incumplido en su primera declaración)</target>
        </trans-unit>
        <trans-unit id="3a8e566468b65a1ebf9ff0b029900480496f2b3f" translate="yes" xml:space="preserve">
          <source>The destructor is not virtual (that is, the base class destructor is not virtual)</source>
          <target state="translated">El destructor no es virtual (es decir,el destructor de la clase base no es virtual)</target>
        </trans-unit>
        <trans-unit id="458261b035739931db108ba91cd4532638391cea" translate="yes" xml:space="preserve">
          <source>The destructor may also be called directly, e.g. to destroy an object that was constructed using &lt;a href=&quot;new&quot;&gt;placement-new&lt;/a&gt; or through an allocator member function such as &lt;a href=&quot;../memory/allocator/destroy&quot;&gt;&lt;code&gt;std::allocator::destroy()&lt;/code&gt;&lt;/a&gt;, to destroy an object that was constructed through the allocator. Note that calling a destructor directly for an ordinary object, such as a local variable, invokes undefined behavior when the destructor is called again, at the end of scope.</source>
          <target state="translated">El destructor tambi&amp;eacute;n se puede llamar directamente, por ejemplo, para destruir un objeto que se construy&amp;oacute; mediante la &lt;a href=&quot;new&quot;&gt;colocaci&amp;oacute;n de una nueva ubicaci&amp;oacute;n&lt;/a&gt; o mediante una funci&amp;oacute;n miembro del asignador como &lt;a href=&quot;../memory/allocator/destroy&quot;&gt; &lt;code&gt;std::allocator::destroy()&lt;/code&gt; &lt;/a&gt; , para destruir un objeto que se construy&amp;oacute; a trav&amp;eacute;s del asignador. Tenga en cuenta que llamar a un destructor directamente para un objeto ordinario, como una variable local, invoca un comportamiento indefinido cuando se llama nuevamente al destructor, al final del alcance.</target>
        </trans-unit>
        <trans-unit id="4502fcacc22944b0b09432612438be8c0275b298" translate="yes" xml:space="preserve">
          <source>The destructor of &lt;code&gt;shared_ptr&lt;/code&gt; decrements the number of shared owners of the control block. If that counter reaches zero, the control block calls the destructor of the managed object. The control block does not deallocate itself until the &lt;code&gt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt; counter reaches zero as well.</source>
          <target state="translated">El destructor de &lt;code&gt;shared_ptr&lt;/code&gt; disminuye el n&amp;uacute;mero de propietarios compartidos del bloque de control. Si ese contador llega a cero, el bloque de control llama al destructor del objeto gestionado. El bloque de control no se desasigna hasta que &lt;code&gt;&lt;a href=&quot;weak_ptr&quot;&gt;std::weak_ptr&lt;/a&gt;&lt;/code&gt; contador llegue a cero tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="0917c40d42cac062339108eed6e37cece182eea8" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;&lt;a href=&quot;mem_fun&quot;&gt;std::mem_fun&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;std::mem_fun_ref&lt;/code&gt; is that the former produces an function wrapper that expects a pointer to an object, whereas the latter -- a reference.</source>
          <target state="translated">La diferencia entre &lt;code&gt;&lt;a href=&quot;mem_fun&quot;&gt;std::mem_fun&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;std::mem_fun_ref&lt;/code&gt; es que el primero produce un contenedor de funciones que espera un puntero a un objeto, mientras que el segundo es una referencia.</target>
        </trans-unit>
        <trans-unit id="6058d52ad00c0746ec1ad1da1557fe0705689144" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;std::mem_fun&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mem_fun_ref&quot;&gt;std::mem_fun_ref&lt;/a&gt;&lt;/code&gt; is that the former produces an function wrapper that expects a pointer to an object, whereas the latter -- a reference.</source>
          <target state="translated">La diferencia entre &lt;code&gt;std::mem_fun&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;mem_fun_ref&quot;&gt;std::mem_fun_ref&lt;/a&gt;&lt;/code&gt; es que el primero produce un contenedor de funciones que espera un puntero a un objeto, mientras que el segundo es una referencia.</target>
        </trans-unit>
        <trans-unit id="5ba8b4357f540030cba655d1013e93e28d93026b" translate="yes" xml:space="preserve">
          <source>The difference in the end of lifetime rules between non-class objects (end of storage duration) and class objects (reverse order of construction) matters in the following example:</source>
          <target state="translated">La diferencia en las reglas de fin de vida entre los objetos que no son de clase (fin de duración de almacenamiento)y los objetos de clase (orden inverso de construcción)importa en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="0bf7172e6a4bcef6e12a87186821457084696b5a" translate="yes" xml:space="preserve">
          <source>The direct assignment expressions have the form.</source>
          <target state="translated">Las expresiones de asignación directa tienen la forma.</target>
        </trans-unit>
        <trans-unit id="c0b53b64cd7da1a6979740160933c02e8651b8c0" translate="yes" xml:space="preserve">
          <source>The direct assignment operator expects a modifiable lvalue as its left operand and an rvalue expression or a</source>
          <target state="translated">El operador de asignación directa espera un valor l modificable como su operando izquierdo y una expresión de valor o un</target>
        </trans-unit>
        <trans-unit id="a55407eeb2aba5e6786966e2fad86845a4f5e832" translate="yes" xml:space="preserve">
          <source>The directory is not a symlink or following symlinks is enabled, i.e., at least one of the following is true:</source>
          <target state="translated">El directorio no es un enlace simbólico o el seguimiento de los enlaces simbólicos está habilitado,es decir,al menos uno de los siguientes es cierto:</target>
        </trans-unit>
        <trans-unit id="011ff0f04cb6429bed2a06b5971e01124d4494fd" translate="yes" xml:space="preserve">
          <source>The discard input function &lt;a href=&quot;../basic_istream/ignore&quot;&gt;&lt;code&gt;basic_istream::ignore&lt;/code&gt;&lt;/a&gt;, when reaching the end of the stream before reaching the specified delimiter character.</source>
          <target state="translated">La funci&amp;oacute;n de entrada de descarte &lt;a href=&quot;../basic_istream/ignore&quot;&gt; &lt;code&gt;basic_istream::ignore&lt;/code&gt; &lt;/a&gt; , al llegar al final de la secuencia antes de alcanzar el car&amp;aacute;cter delimitador especificado.</target>
        </trans-unit>
        <trans-unit id="521ac03ae5bf197fd5b4f4ddbf6b50c2626b2ab0" translate="yes" xml:space="preserve">
          <source>The discarded statement can &lt;a href=&quot;definition#One_Definition_Rule&quot;&gt;odr-use&lt;/a&gt; a variable that is not defined.</source>
          <target state="translated">La declaraci&amp;oacute;n descartada puede &lt;a href=&quot;definition#One_Definition_Rule&quot;&gt;odr-use&lt;/a&gt; una variable que no est&amp;aacute; definida.</target>
        </trans-unit>
        <trans-unit id="9e134b488338708adbe35dc6f4d20bf7cd200123" translate="yes" xml:space="preserve">
          <source>The disjunction of two constraints is formed by using the &lt;code&gt;||&lt;/code&gt; operator in the constraint expression.</source>
          <target state="translated">La disyunci&amp;oacute;n de dos restricciones se forma usando el &lt;code&gt;||&lt;/code&gt; operador en la expresi&amp;oacute;n de restricci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="68f41be33670c3565e52cb96e38022893aa1cdef" translate="yes" xml:space="preserve">
          <source>The distinction between &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;StrictWeakOrder&lt;/code&gt; is purely semantic.</source>
          <target state="translated">La distinci&amp;oacute;n entre &lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt; y &lt;code&gt;StrictWeakOrder&lt;/code&gt; es puramente sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="6196af8746fbee30da31e07deacfea4e0569daa7" translate="yes" xml:space="preserve">
          <source>The distinction between &lt;code&gt;Invocable&lt;/code&gt; and &lt;code&gt;RegularInvocable&lt;/code&gt; is purely semantic.</source>
          <target state="translated">La distinci&amp;oacute;n entre &lt;code&gt;Invocable&lt;/code&gt; y &lt;code&gt;RegularInvocable&lt;/code&gt; es puramente sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="afbbb8042504013c96b3b97edfed1ef91e7ace3c" translate="yes" xml:space="preserve">
          <source>The distribution parameters:</source>
          <target state="translated">Los parámetros de distribución:</target>
        </trans-unit>
        <trans-unit id="81279522f7d541e3070aa500c24fe78eefb6c24f" translate="yes" xml:space="preserve">
          <source>The double version of fmod behaves as if implemented as follows.</source>
          <target state="translated">La versión doble de fmod se comporta como si estuviera implementada de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="2aa9913a5b5973e9bcc32bc90f31f144ec91b2db" translate="yes" xml:space="preserve">
          <source>The duration of the return type is computed from &lt;code&gt;Duration&lt;/code&gt; in an unspecified manner.</source>
          <target state="translated">La duraci&amp;oacute;n del tipo de retorno se calcula a partir de la &lt;code&gt;Duration&lt;/code&gt; de una manera no especificada.</target>
        </trans-unit>
        <trans-unit id="224a26be1cb2ca8b761f6b43c3bd250d6ddf7cac" translate="yes" xml:space="preserve">
          <source>The duration type of the clock.</source>
          <target state="translated">El tipo de duración del reloj.</target>
        </trans-unit>
        <trans-unit id="5cdb764bc7295c1f4d084bc026f3ec18853785af" translate="yes" xml:space="preserve">
          <source>The effect is &lt;code&gt;!(p == np)&lt;/code&gt;.</source>
          <target state="translated">El efecto es &lt;code&gt;!(p == np)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b46cc14cb598fc30b7c672fded9952f55c605bae" translate="yes" xml:space="preserve">
          <source>The effect is &lt;code&gt;!(p == q)&lt;/code&gt;.</source>
          <target state="translated">El efecto es &lt;code&gt;!(p == q)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28ea249af8424387a5c1cccdc0914e50e0d1b9da" translate="yes" xml:space="preserve">
          <source>The effect is &lt;code&gt;(p == Type())&lt;/code&gt;.</source>
          <target state="translated">El efecto es &lt;code&gt;(p == Type())&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4957aeb2112ce48fb45bc468858b3884a27fb1d1" translate="yes" xml:space="preserve">
          <source>The effect of instantiating the template &lt;code&gt;complex&lt;/code&gt; for any other type is unspecified.</source>
          <target state="translated">El efecto de instanciar el &lt;code&gt;complex&lt;/code&gt; plantilla para cualquier otro tipo no est&amp;aacute; especificado.</target>
        </trans-unit>
        <trans-unit id="623c86df314fad3dc454b46a30107d29e49dbd7f" translate="yes" xml:space="preserve">
          <source>The effect on &lt;code&gt;state&lt;/code&gt; is deliberately unspecified. In standard facets, it is used to maintain shift state like when calling &lt;code&gt;&lt;a href=&quot;../../string/multibyte/mbsrtowcs&quot;&gt;std::mbsrtowcs&lt;/a&gt;&lt;/code&gt;, and is therefore updated to reflect the conversion state after the last processed external character, but a user-defined facet is free to use it to maintain any other state, e.g. count the number of special characters encountered.</source>
          <target state="translated">El efecto sobre el &lt;code&gt;state&lt;/code&gt; se especifica deliberadamente. En las facetas est&amp;aacute;ndar, se usa para mantener el estado de cambio como cuando se llama &lt;code&gt;&lt;a href=&quot;../../string/multibyte/mbsrtowcs&quot;&gt;std::mbsrtowcs&lt;/a&gt;&lt;/code&gt; y, por lo tanto, se actualiza para reflejar el estado de conversi&amp;oacute;n despu&amp;eacute;s del &amp;uacute;ltimo car&amp;aacute;cter externo procesado, pero una faceta definida por el usuario es libre de usarla para mantener cualquier otra estado, por ejemplo, contar el n&amp;uacute;mero de caracteres especiales encontrados.</target>
        </trans-unit>
        <trans-unit id="5d718ad3720c90a52928fc5cdcd648882bb8be80" translate="yes" xml:space="preserve">
          <source>The effect on &lt;code&gt;state&lt;/code&gt; is deliberately unspecified. In standard facets, it is used to maintain shift state like when calling &lt;code&gt;&lt;a href=&quot;../../string/multibyte/wcsrtombs&quot;&gt;std::wcsrtombs&lt;/a&gt;&lt;/code&gt;, and is therefore updated to reflect the shift state after the last successfully converted character, but a user-defined facet is free to use it to maintain any other state, e.g. count the number of special characters encountered.</source>
          <target state="translated">El efecto sobre el &lt;code&gt;state&lt;/code&gt; se especifica deliberadamente. En las facetas est&amp;aacute;ndar, se usa para mantener el estado de cambio como cuando se llama &lt;code&gt;&lt;a href=&quot;../../string/multibyte/wcsrtombs&quot;&gt;std::wcsrtombs&lt;/a&gt;&lt;/code&gt; , y por lo tanto se actualiza para reflejar el estado de cambio despu&amp;eacute;s del &amp;uacute;ltimo car&amp;aacute;cter convertido con &amp;eacute;xito, pero una faceta definida por el usuario es libre de usarlo para mantener cualquier otro estado, por ejemplo, contar el n&amp;uacute;mero de caracteres especiales encontrados.</target>
        </trans-unit>
        <trans-unit id="17b2cdc08f47b7a5ed5d20adf3ef19dc26f9c333" translate="yes" xml:space="preserve">
          <source>The effective length of the initializing string is min(&lt;code&gt;n&lt;/code&gt;, &lt;code&gt;str.size() - pos&lt;/code&gt;).</source>
          <target state="translated">La longitud efectiva de la cadena de inicializaci&amp;oacute;n es min ( &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;str.size() - pos&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="699e483e2e3f60481d244140e88ca2195f9ab9a1" translate="yes" xml:space="preserve">
          <source>The effective options that affect the directory iteration.</source>
          <target state="translated">Las opciones efectivas que afectan a la iteración del directorio.</target>
        </trans-unit>
        <trans-unit id="277b731069d198539b3fe68887f4d3154302a386" translate="yes" xml:space="preserve">
          <source>The effects depend on &lt;code&gt;prms&lt;/code&gt; and &lt;code&gt;opts&lt;/code&gt; as follows:</source>
          <target state="translated">Los efectos dependen de &lt;code&gt;prms&lt;/code&gt; y &lt;code&gt;opts&lt;/code&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="8651d51c2038a7579ed581306ab93549a57e3f4f" translate="yes" xml:space="preserve">
          <source>The effects of &lt;code&gt;notify_one()&lt;/code&gt;/&lt;code&gt;notify_all()&lt;/code&gt; and each of the three atomic parts of &lt;code&gt;wait()&lt;/code&gt;/&lt;code&gt;wait_for()&lt;/code&gt;/&lt;code&gt;wait_until()&lt;/code&gt; (unlock+wait, wakeup, and lock) take place in a single total order that can be viewed as &lt;a href=&quot;../../atomic/memory_order#Modification_order&quot;&gt;modification order&lt;/a&gt; of an atomic variable: the order is specific to this individual condition_variable. This makes it impossible for &lt;code&gt;notify_one()&lt;/code&gt; to, for example, be delayed and unblock a thread that started waiting just after the call to &lt;code&gt;notify_one()&lt;/code&gt; was made.</source>
          <target state="translated">Los efectos de &lt;code&gt;notify_one()&lt;/code&gt; / &lt;code&gt;notify_all()&lt;/code&gt; y cada una de las tres partes at&amp;oacute;micas de &lt;code&gt;wait()&lt;/code&gt; / &lt;code&gt;wait_for()&lt;/code&gt; / &lt;code&gt;wait_until()&lt;/code&gt; (desbloqueo + espera, activaci&amp;oacute;n y bloqueo) tienen lugar en un &amp;uacute;nico orden total que se puede ver como &lt;a href=&quot;../../atomic/memory_order#Modification_order&quot;&gt;orden&lt;/a&gt; de modificaci&amp;oacute;n de una variable at&amp;oacute;mica: el orden es espec&amp;iacute;fico de esta condici&amp;oacute;n_variable individual. Esto hace que sea imposible que &lt;code&gt;notify_one()&lt;/code&gt; , por ejemplo, se retrase y desbloquee un hilo que comenz&amp;oacute; a esperar justo despu&amp;eacute;s de que se realiz&amp;oacute; la llamada a &lt;code&gt;notify_one()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea82bd2c1a6a4cca1c94310f4ea304a94ebd7ff" translate="yes" xml:space="preserve">
          <source>The effects of aggregate initialization are:</source>
          <target state="translated">Los efectos de la inicialización agregada son</target>
        </trans-unit>
        <trans-unit id="bc76e5e9dce364815385c8038fa8f3aefe16ecdf" translate="yes" xml:space="preserve">
          <source>The effects of calling &lt;code&gt;&lt;a href=&quot;what&quot;&gt;what()&lt;/a&gt;&lt;/code&gt; after assignment are implementation-defined.</source>
          <target state="translated">Los efectos de llamar a &lt;code&gt;&lt;a href=&quot;what&quot;&gt;what()&lt;/a&gt;&lt;/code&gt; despu&amp;eacute;s de la asignaci&amp;oacute;n est&amp;aacute;n definidos por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="acd2e1f2f8f283f58add15a5b6c96ad1a4bcb99f" translate="yes" xml:space="preserve">
          <source>The effects of constant initialization are the same as the effects of the corresponding initialization, except that it's guaranteed that it is complete before any other initialization of a static or thread-local object begins, and it may be performed at compile time.</source>
          <target state="translated">Los efectos de la inicialización constante son los mismos que los de la inicialización correspondiente,salvo que se garantiza que está completa antes de que comience cualquier otra inicialización de un objeto estático o hilo-local,y puede realizarse en el momento de la compilación.</target>
        </trans-unit>
        <trans-unit id="fd953e7070aa0f66ff080c912887c4f952047292" translate="yes" xml:space="preserve">
          <source>The effects of copy initialization are:</source>
          <target state="translated">Los efectos de la inicialización de la copia son:</target>
        </trans-unit>
        <trans-unit id="8cfd1ee4ebd1bc33a0bf9c72eb9dc0e4d68febcc" translate="yes" xml:space="preserve">
          <source>The effects of default initialization are:</source>
          <target state="translated">Los efectos de la inicialización por defecto son</target>
        </trans-unit>
        <trans-unit id="300fd423eca4b27e42f83cdb8460a3c248ebfebe" translate="yes" xml:space="preserve">
          <source>The effects of direct initialization are:</source>
          <target state="translated">Los efectos de la inicialización directa son:</target>
        </trans-unit>
        <trans-unit id="9e5f022b0bc5e850d42cbc2251aad303b760f429" translate="yes" xml:space="preserve">
          <source>The effects of list initialization of an object of type &lt;code&gt;T&lt;/code&gt; are:</source>
          <target state="translated">Los efectos de la inicializaci&amp;oacute;n de la lista de un objeto de tipo &lt;code&gt;T&lt;/code&gt; son:</target>
        </trans-unit>
        <trans-unit id="2eaca7ff0b6d0f7e2ebdd251f120ac2cb16cff4c" translate="yes" xml:space="preserve">
          <source>The effects of reference initialization are:</source>
          <target state="translated">Los efectos de la inicialización de referencia son</target>
        </trans-unit>
        <trans-unit id="2ef623c3b922339a0463a696882fce40deb3b9ed" translate="yes" xml:space="preserve">
          <source>The effects of value initialization are:</source>
          <target state="translated">Los efectos de la inicialización del valor son</target>
        </trans-unit>
        <trans-unit id="94b39a5092913a72e71cf3cf80c6764db966ebde" translate="yes" xml:space="preserve">
          <source>The effects of zero initialization are:</source>
          <target state="translated">Los efectos de la inicialización cero son:</target>
        </trans-unit>
        <trans-unit id="b777ed6b6b0f7899c139e22dde69591cc29e1364" translate="yes" xml:space="preserve">
          <source>The element erased and &lt;code&gt;&lt;a href=&quot;vector/end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El elemento borrado y &lt;code&gt;&lt;a href=&quot;vector/end&quot;&gt;end()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="504403fec65bb2b27f30b2f09751e05f4b0a4e02" translate="yes" xml:space="preserve">
          <source>The element pointed at by &lt;code&gt;nth&lt;/code&gt; is changed to whatever element would occur in that position if &lt;code&gt;[first, last)&lt;/code&gt; were sorted.</source>
          <target state="translated">El elemento se&amp;ntilde;alado por &lt;code&gt;nth&lt;/code&gt; se cambia a cualquier elemento que ocurra en esa posici&amp;oacute;n si se &lt;code&gt;[first, last)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a7750b37bfc65c5e0dc0c0f0394afa5d519ab06" translate="yes" xml:space="preserve">
          <source>The elements are stored contiguously, which means that elements can be accessed not only through iterators, but also using offsets to regular pointers to elements. This means that a pointer to an element of a vector may be passed to any function that expects a pointer to an element of an array.</source>
          <target state="translated">Los elementos se almacenan de forma contigua,lo que significa que se puede acceder a los elementos no sólo a través de iteradores,sino también utilizando compensaciones a los punteros regulares de los elementos.Esto significa que un puntero a un elemento de un vector puede ser pasado a cualquier función que espere un puntero a un elemento de una matriz.</target>
        </trans-unit>
        <trans-unit id="d1207730233ddeaf76dad20caba05dddb264714c" translate="yes" xml:space="preserve">
          <source>The elements of &lt;code&gt;u&lt;/code&gt; are the same or copies of those of &lt;code&gt;rv&lt;/code&gt; and &lt;code&gt;u.get_allocator() == m&lt;/code&gt;</source>
          <target state="translated">Los elementos de &lt;code&gt;u&lt;/code&gt; son los mismos o copias de los de &lt;code&gt;rv&lt;/code&gt; y &lt;code&gt;u.get_allocator() == m&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df8c067b5e64d3ba4b18a9f63de6869977f7971d" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;code&gt;basic_string&lt;/code&gt; are stored contiguously, that is, for a basic_string &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;&amp;amp;*(s.begin() + n) == &amp;amp;*s.begin() + n&lt;/code&gt; for any n in &lt;code&gt;[0, s.size())&lt;/code&gt;, or, equivalently, a pointer to &lt;code&gt;s[0]&lt;/code&gt; can be passed to functions that expect a pointer to the first element of a &lt;code&gt;CharT[]&lt;/code&gt; array.</source>
          <target state="translated">Los elementos de una &lt;code&gt;basic_string&lt;/code&gt; se almacenan contiguamente, es decir, para una cadena b&amp;aacute;sica &lt;code&gt;s&lt;/code&gt; , &lt;code&gt;&amp;amp;*(s.begin() + n) == &amp;amp;*s.begin() + n&lt;/code&gt; para cualquier n en &lt;code&gt;[0, s.size())&lt;/code&gt; , o, de manera equivalente, un puntero a &lt;code&gt;s[0]&lt;/code&gt; puede pasarse a funciones que esperan un puntero al primer elemento de una matriz &lt;code&gt;CharT[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac289e119568e88c907585f65cab5b2cc4a5e484" translate="yes" xml:space="preserve">
          <source>The ellipsis is not a parameter, and so can follow a parameter with a default argument.</source>
          <target state="translated">La elipsis no es un parámetro,por lo que puede seguir a un parámetro con un argumento por defecto.</target>
        </trans-unit>
        <trans-unit id="ddf4a253a4692830a136c72cdc4bb9d21f26c186" translate="yes" xml:space="preserve">
          <source>The ellipsis that indicates &lt;a href=&quot;variadic_arguments&quot;&gt;variadic arguments&lt;/a&gt; need not be preceded by a comma, even if it follows the ellipsis that indicates a &lt;a href=&quot;parameter_pack&quot;&gt;parameter pack&lt;/a&gt; expansion, so the following function templates are exactly the same:</source>
          <target state="translated">Los puntos suspensivos que indican &lt;a href=&quot;variadic_arguments&quot;&gt;argumentos variables&lt;/a&gt; no necesitan ir precedidos de una coma, incluso si siguen los puntos suspensivos que indican una expansi&amp;oacute;n del &lt;a href=&quot;parameter_pack&quot;&gt;paquete de par&amp;aacute;metros&lt;/a&gt; , por lo que las siguientes plantillas de funciones son exactamente las mismas:</target>
        </trans-unit>
        <trans-unit id="aa2446394f875d97130f6ebb30e3ce4bdc1750f8" translate="yes" xml:space="preserve">
          <source>The empty member subobjects are permitted to be optimized out just like the empty bases if they use the attribute &lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt;. Taking the address of such member results in an address that may equal the address of some other member of the same object.</source>
          <target state="translated">Los subobjetos de miembros vac&amp;iacute;os pueden optimizarse al igual que las bases vac&amp;iacute;as si usan el atributo &lt;code&gt;[[&lt;a href=&quot;attributes/no_unique_address&quot;&gt;no_unique_address&lt;/a&gt;]]&lt;/code&gt; . Tomar la direcci&amp;oacute;n de dicho miembro da como resultado una direcci&amp;oacute;n que puede ser igual a la direcci&amp;oacute;n de alg&amp;uacute;n otro miembro del mismo objeto.</target>
        </trans-unit>
        <trans-unit id="0805662b123722b3c340392f4fa64cbab3149ec8" translate="yes" xml:space="preserve">
          <source>The encoding of calendar time in &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; is unspecified, but most systems conform to &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/time.html&quot;&gt;POSIX specification&lt;/a&gt; and return a value of integral type holding the number of seconds since &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_15&quot;&gt;the Epoch&lt;/a&gt;. Implementations in which &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; is a 32-bit signed integer (many historical implementations) fail in the year &lt;a href=&quot;https://en.wikipedia.org/wiki/Year_2038_problem&quot;&gt;2038&lt;/a&gt;.</source>
          <target state="translated">La codificaci&amp;oacute;n del tiempo de calendario en &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; especificada, pero la mayor&amp;iacute;a de los sistemas se ajustan a la &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/time.html&quot;&gt;especificaci&amp;oacute;n POSIX&lt;/a&gt; y devuelven un valor de tipo integral que contiene el n&amp;uacute;mero de segundos desde &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_15&quot;&gt;la &amp;eacute;poca&lt;/a&gt; . Las implementaciones en las que &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; es un entero con signo de 32 bits (muchas implementaciones hist&amp;oacute;ricas) fallan en el a&amp;ntilde;o &lt;a href=&quot;https://en.wikipedia.org/wiki/Year_2038_problem&quot;&gt;2038&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bac5bb54aa6eba80db72413eed24907a358196ea" translate="yes" xml:space="preserve">
          <source>The encoding of calendar time in &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; is unspecified, but most systems conform to &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/functions/time.html&quot;&gt;POSIX specification&lt;/a&gt; and return a value of integral type holding the number of seconds since &lt;a href=&quot;https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_15&quot;&gt;the Epoch&lt;/a&gt;. Implementations in which &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;std::time_t&lt;/a&gt;&lt;/code&gt; is a 32-bit signed integer (many historical implementations) fail in the year &lt;a href=&quot;https://en.wikipedia.org/wiki/Year_2038_problem&quot;&gt;2038&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69a36e6f924ee7e47c55de6af52a07646156a5f" translate="yes" xml:space="preserve">
          <source>The encoding of narrow multibyte string literals (1) and wide string literals (2) is implementation-defined. For example, gcc selects them with the &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/cpp/Invocation.html&quot;&gt;commandline options&lt;/a&gt;&lt;code&gt;-fexec-charset&lt;/code&gt; and &lt;code&gt;-fwide-exec-charset&lt;/code&gt;.</source>
          <target state="translated">La codificaci&amp;oacute;n de los literales de cadena multibyte estrecha (1) y los literales de cadena ancha (2) est&amp;aacute; definida por la implementaci&amp;oacute;n. Por ejemplo, gcc los selecciona con las &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/cpp/Invocation.html&quot;&gt;opciones de l&amp;iacute;nea de comandos &lt;/a&gt; &lt;code&gt;-fexec-charset&lt;/code&gt; y &lt;code&gt;-fwide-exec-charset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cd9b9debf1ab95431b525333881e105361a6688" translate="yes" xml:space="preserve">
          <source>The end of the range of objects (i.e., &lt;code&gt;&lt;a href=&quot;../iterator/next&quot;&gt;std::next&lt;/a&gt;(first, n)&lt;/code&gt;).</source>
          <target state="translated">El final del rango de objetos (es decir, &lt;code&gt;&lt;a href=&quot;../iterator/next&quot;&gt;std::next&lt;/a&gt;(first, n)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2f8f7e87af18baac3cc0b054b1043648021aefcc" translate="yes" xml:space="preserve">
          <source>The end of the range of objects that has been destroyed (i.e., &lt;code&gt;&lt;a href=&quot;../iterator/next&quot;&gt;std::next&lt;/a&gt;(first, n)&lt;/code&gt;).</source>
          <target state="translated">El final del rango de objetos que ha sido destruido (es decir, &lt;code&gt;&lt;a href=&quot;../iterator/next&quot;&gt;std::next&lt;/a&gt;(first, n)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="52cec00cfb7299f67b1921b3ec8b84d001978a8b" translate="yes" xml:space="preserve">
          <source>The entropy of the Linux kernel device /dev/urandom may be obtained using &lt;a href=&quot;http://man7.org/linux/man-pages/man4/random.4.html&quot;&gt;ioctl RNDGETENTCNT&lt;/a&gt; - that's what &lt;code&gt;std::random_device::entropy()&lt;/code&gt; in &lt;a href=&quot;https://github.com/gcc-mirror/gcc/blob/master/libstdc%20%20-v3/src/c%20%2011/random.cc#L188&quot;&gt;GNU libstdc++&lt;/a&gt; uses as of version 8.1.</source>
          <target state="translated">La entrop&amp;iacute;a del dispositivo / dev / urandom del kernel de Linux se puede obtener usando &lt;a href=&quot;http://man7.org/linux/man-pages/man4/random.4.html&quot;&gt;ioctl RNDGETENTCNT&lt;/a&gt; ; eso es lo que &lt;code&gt;std::random_device::entropy()&lt;/code&gt; en &lt;a href=&quot;https://github.com/gcc-mirror/gcc/blob/master/libstdc%20%20-v3/src/c%20%2011/random.cc#L188&quot;&gt;GNU libstdc ++&lt;/a&gt; usa a partir de la versi&amp;oacute;n 8.1.</target>
        </trans-unit>
        <trans-unit id="b526caf3120cb6234f9fb955ff6f445025db5cc0" translate="yes" xml:space="preserve">
          <source>The eofbit</source>
          <target state="translated">El eofbit</target>
        </trans-unit>
        <trans-unit id="ac8151f7dedb19c9e673caee7e6961ae4483df11" translate="yes" xml:space="preserve">
          <source>The eofbit is set by the following standard library functions:</source>
          <target state="translated">El eofbit se establece por las siguientes funciones estándar de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="de46a90499c7bf50e36a789596077d479893b896" translate="yes" xml:space="preserve">
          <source>The epoch of &lt;code&gt;system_clock&lt;/code&gt; is unspecified, but most implementations use Unix Time (i.e., time since 00:00:00 Coordinated Universal Time (UTC), Thursday, 1 January 1970, not counting leap seconds).</source>
          <target state="translated">La &amp;eacute;poca de &lt;code&gt;system_clock&lt;/code&gt; no est&amp;aacute; especificada, pero la mayor&amp;iacute;a de las implementaciones usan Tiempo Unix (es decir, tiempo desde las 00:00:00 hora universal coordinada (UTC), jueves 1 de enero de 1970, sin contar los segundos bisiestos).</target>
        </trans-unit>
        <trans-unit id="a8dec4a6976c27fa3b8702243578d25bc0de8846" translate="yes" xml:space="preserve">
          <source>The equals sign, &lt;code&gt;=&lt;/code&gt;, in copy-initialization of a named variable is not related to the assignment operator. Assignment operator overloads have no effect on copy-initialization.</source>
          <target state="translated">El signo igual, &lt;code&gt;=&lt;/code&gt; , en la inicializaci&amp;oacute;n de copia de una variable con nombre no est&amp;aacute; relacionado con el operador de asignaci&amp;oacute;n. Las sobrecargas del operador de asignaci&amp;oacute;n no tienen efecto en la inicializaci&amp;oacute;n de la copia.</target>
        </trans-unit>
        <trans-unit id="15a184fedc7147e932e8edb9e4f5e96b3f3233d2" translate="yes" xml:space="preserve">
          <source>The error category of the error value.</source>
          <target state="translated">La categoría de error del valor de error.</target>
        </trans-unit>
        <trans-unit id="4bd988f5880ebd48c3253a6fa8738b28e0bda0e2" translate="yes" xml:space="preserve">
          <source>The error condition for the given error code.</source>
          <target state="translated">La condición de error para el código de error dado.</target>
        </trans-unit>
        <trans-unit id="c81d179fd5ebd08285d4630b0d42bf847c0180df" translate="yes" xml:space="preserve">
          <source>The error message corresponding to the current error value and category.</source>
          <target state="translated">El mensaje de error correspondiente al valor y la categoría de error actual.</target>
        </trans-unit>
        <trans-unit id="88a06ff6d6b5a3ba4276cee42336251cadd1cd73" translate="yes" xml:space="preserve">
          <source>The exact behavior of this function depends on the implementation, in particular on the mechanics of the OS scheduler in use and the state of the system. For example, a first-in-first-out realtime scheduler (&lt;code&gt;SCHED_FIFO&lt;/code&gt; in Linux) would suspend the current thread and put it on the back of the queue of the same-priority threads that are ready to run (and if there are no other threads at the same priority, &lt;code&gt;yield&lt;/code&gt; has no effect).</source>
          <target state="translated">El comportamiento exacto de esta funci&amp;oacute;n depende de la implementaci&amp;oacute;n, en particular de la mec&amp;aacute;nica del planificador del sistema operativo en uso y del estado del sistema. Por ejemplo, un planificador en tiempo real &lt;code&gt;SCHED_FIFO&lt;/code&gt; en entrar, primero en salir ( SCHED_FIFO en Linux) suspender&amp;iacute;a el hilo actual y lo colocar&amp;iacute;a en la parte posterior de la cola de los hilos de la misma prioridad que est&amp;aacute;n listos para ejecutarse (y si no hay otro hilos con la misma prioridad, el &lt;code&gt;yield&lt;/code&gt; no tiene efecto).</target>
        </trans-unit>
        <trans-unit id="9f75932905b2632bba207dcff21589878a43b6dd" translate="yes" xml:space="preserve">
          <source>The exact effects this modifier has on the input and output vary between the individual I/O functions and are described at each &lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt; and &lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt; overload page individually.</source>
          <target state="translated">Los efectos exactos que este modificador tiene en la entrada y la salida var&amp;iacute;an entre las funciones individuales de E / S y se describen en cada &lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt; y &lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt; p&amp;aacute;gina de sobrecarga individualmente.</target>
        </trans-unit>
        <trans-unit id="363ac40b1d368630d3800a01855367f3dc4f5212" translate="yes" xml:space="preserve">
          <source>The exact number of &lt;code&gt;externT&lt;/code&gt; characters that correspond to one &lt;code&gt;internT&lt;/code&gt; character, if constant. &lt;code&gt;​0​&lt;/code&gt; if the number varies, &lt;code&gt;-1&lt;/code&gt; if the encoding is state-dependent.</source>
          <target state="translated">El n&amp;uacute;mero exacto de caracteres &lt;code&gt;externT&lt;/code&gt; que corresponden a un car&amp;aacute;cter &lt;code&gt;internT&lt;/code&gt; , si es constante. &lt;code&gt;​0​&lt;/code&gt; si el n&amp;uacute;mero var&amp;iacute;a, &lt;code&gt;-1&lt;/code&gt; si la codificaci&amp;oacute;n es dependiente del estado.</target>
        </trans-unit>
        <trans-unit id="c0584bcc519f595df1d83656ff4d78467c1471a6" translate="yes" xml:space="preserve">
          <source>The example output corresponds to a system with 64-bit pointers and 32-bit int.</source>
          <target state="translated">La salida del ejemplo corresponde a un sistema con punteros de 64 bits e int.de 32 bits.</target>
        </trans-unit>
        <trans-unit id="401671dabc741fba713d9a3372e1229c26569984" translate="yes" xml:space="preserve">
          <source>The example showing output using one of the implementations where type_info::name returns full type names; filter through c++filt -t if using gcc or similar.</source>
          <target state="translated">El ejemplo que muestra la salida usando una de las implementaciones donde type_info::name devuelve los nombres completos de los tipos;filtra a través de c++filt -t si se usa gcc o similar.</target>
        </trans-unit>
        <trans-unit id="962d766aea512badcd93d36a0bad74875b6df8a3" translate="yes" xml:space="preserve">
          <source>The exception object</source>
          <target state="translated">El objeto de la excepción</target>
        </trans-unit>
        <trans-unit id="5c7c457a1a95d00590ff16b4e63c341c098fe660" translate="yes" xml:space="preserve">
          <source>The exception object is a temporary object in unspecified storage that is constructed by the &lt;code&gt;throw&lt;/code&gt; expression.</source>
          <target state="translated">El objeto de excepci&amp;oacute;n es un objeto temporal en un almacenamiento no especificado que se construye mediante la expresi&amp;oacute;n &lt;code&gt;throw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cc701cf4530a2100ddf04f27b306c1857719210" translate="yes" xml:space="preserve">
          <source>The exception object persists until the last catch clause exits other than by rethrowing (if not by rethrowing, it is destroyed immediately after the destruction of the catch clause's parameter), or until the last &lt;code&gt;&lt;a href=&quot;../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; that references this object is destroyed (in which case the exception object is destroyed just before the destructor of &lt;code&gt;&lt;a href=&quot;../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; returns.</source>
          <target state="translated">El objeto de excepci&amp;oacute;n persiste hasta que salga la &amp;uacute;ltima cl&amp;aacute;usula catch que no sea por volver a lanzar (si no por volver a lanzar, se destruye inmediatamente despu&amp;eacute;s de la destrucci&amp;oacute;n del par&amp;aacute;metro de la cl&amp;aacute;usula catch), o hasta que se destruye el &amp;uacute;ltimo &lt;code&gt;&lt;a href=&quot;../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; que hace referencia a este objeto (en en cuyo caso el objeto de excepci&amp;oacute;n se destruye justo antes de que regrese el destructor de &lt;code&gt;&lt;a href=&quot;../error/exception_ptr&quot;&gt;std::exception_ptr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff78e6b3502b4c2e9d34931f4c9b1d395e28c19a" translate="yes" xml:space="preserve">
          <source>The exception object referenced by an &lt;code&gt;std::exception_ptr&lt;/code&gt; remains valid as long as there remains at least one &lt;code&gt;std::exception_ptr&lt;/code&gt; that is referencing it: &lt;code&gt;std::exception_ptr&lt;/code&gt; is a shared-ownership smart pointer (note; this is in addition to the usual &lt;a href=&quot;../language/throw#The_exception_object&quot;&gt;exception object lifetime rules&lt;/a&gt;).</source>
          <target state="translated">El objeto de excepci&amp;oacute;n al que hace referencia un &lt;code&gt;std::exception_ptr&lt;/code&gt; sigue siendo v&amp;aacute;lido siempre que quede al menos un &lt;code&gt;std::exception_ptr&lt;/code&gt; que lo haga referencia: &lt;code&gt;std::exception_ptr&lt;/code&gt; es un puntero inteligente de propiedad compartida (nota; esto es adicional al habitual &lt;a href=&quot;../language/throw#The_exception_object&quot;&gt;reglas de duraci&amp;oacute;n del objeto de excepci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3379e35c976ab98276fbc9adebb12a934ec3523e" translate="yes" xml:space="preserve">
          <source>The exception specification of a function template specialization is not instantiated along with the function declaration; it is instantiated only when</source>
          <target state="translated">La especificación de la excepción de la especialización de una plantilla de funciones no se instanciará junto con la declaración de la función;sólo se instanciará cuando</target>
        </trans-unit>
        <trans-unit id="d467a68666ede11b7e2477936d7c13019488c0c3" translate="yes" xml:space="preserve">
          <source>The exception-specification of an implicitly-declared special member function is also evaluated only when needed (in particular, implicit declaration of a member function of a derived class does not require the exception-specification of a base member function to be instantiated).</source>
          <target state="translated">La especificación de excepción de una función especial de miembro implícitamente declarada también se evalúa sólo cuando es necesario (en particular,la declaración implícita de una función de miembro de una clase derivada no requiere que se instale la especificación de excepción de una función de miembro base).</target>
        </trans-unit>
        <trans-unit id="52bc008473e81b69c43ce4bc76d889cc48c6a5a6" translate="yes" xml:space="preserve">
          <source>The exceptions used for transaction cancellation in &lt;code&gt;atomic_cancel&lt;/code&gt; blocks are &lt;code&gt;&lt;a href=&quot;../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../memory/new/bad_array_new_length&quot;&gt;std::bad_array_new_length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/bad_cast&quot;&gt;std::bad_cast&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../types/bad_typeid&quot;&gt;std::bad_typeid&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../error/bad_exception&quot;&gt;std::bad_exception&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../error/exception&quot;&gt;std::exception&lt;/a&gt;&lt;/code&gt; and all standard library exceptions derived from it, and the special exception type &lt;a href=&quot;../error/tx_exception&quot;&gt;&lt;code&gt;std::tx_exception&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Las excepciones utilizadas para la cancelaci&amp;oacute;n de transacciones en bloques &lt;code&gt;atomic_cancel&lt;/code&gt; son &lt;code&gt;&lt;a href=&quot;../memory/new/bad_alloc&quot;&gt;std::bad_alloc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../memory/new/bad_array_new_length&quot;&gt;std::bad_array_new_length&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../types/bad_cast&quot;&gt;std::bad_cast&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../types/bad_typeid&quot;&gt;std::bad_typeid&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../error/bad_exception&quot;&gt;std::bad_exception&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../error/exception&quot;&gt;std::exception&lt;/a&gt;&lt;/code&gt; y todas las excepciones de biblioteca est&amp;aacute;ndar derivadas de &amp;eacute;l, y la tipo de excepci&amp;oacute;n especial &lt;a href=&quot;../error/tx_exception&quot;&gt; &lt;code&gt;std::tx_exception&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="021d4e86fa7831da29ef94f71f0da79f3c93fbf7" translate="yes" xml:space="preserve">
          <source>The execution environment is modified such that when the current thread exits, the condition variable &lt;code&gt;cond&lt;/code&gt; is notified as if by:</source>
          <target state="translated">El entorno de ejecuci&amp;oacute;n se modifica de tal manera que cuando el hilo actual sale, la variable de condici&amp;oacute;n &lt;code&gt;cond&lt;/code&gt; se notifica como si:</target>
        </trans-unit>
        <trans-unit id="db529544bc767c723bb5ca98f064de4db37dda1a" translate="yes" xml:space="preserve">
          <source>The expected way to make a program-defined type swappable is to provide a non-member function swap in the same namespace as the type: see &lt;a href=&quot;../named_req/swappable&quot;&gt;Swappable&lt;/a&gt; for details.</source>
          <target state="translated">La forma esperada de hacer que un tipo definido por el programa sea intercambiable es proporcionar un intercambio de funciones que no sea miembro en el mismo espacio de nombres que el tipo: consulte &lt;a href=&quot;../named_req/swappable&quot;&gt;Intercambiable&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="94a70ade5760a29591766576307fbe5ce110f9d8" translate="yes" xml:space="preserve">
          <source>The explicit specialization &lt;a href=&quot;ctype_byname_char&quot;&gt;&lt;code&gt;std::ctype_byname&amp;lt;char&amp;gt;&lt;/code&gt;&lt;/a&gt; was listed as a separate entry in the header file &lt;code&gt;&amp;lt;locale&amp;gt;&lt;/code&gt; until C++11. it was removed in C++11 as &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#1298&quot;&gt;defect #1298&lt;/a&gt;, but it remains a required specialization, just like &lt;code&gt;std::ctype_byname&amp;lt;wchar_t&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">La especializaci&amp;oacute;n expl&amp;iacute;cita. &lt;a href=&quot;ctype_byname_char&quot;&gt; &lt;code&gt;std::ctype_byname&amp;lt;char&amp;gt;&lt;/code&gt; &lt;/a&gt; se enumer&amp;oacute; como una entrada separada en el archivo de encabezado &lt;code&gt;&amp;lt;locale&amp;gt;&lt;/code&gt; hasta C ++ 11. se elimin&amp;oacute; en C ++ 11 como&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#1298&quot;&gt; defecto # 1298&lt;/a&gt; , pero sigue siendo una especializaci&amp;oacute;n requerida, al igual que &lt;code&gt;std::ctype_byname&amp;lt;wchar_t&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4768ebf182c67445a2d9702650a0be943a487f1b" translate="yes" xml:space="preserve">
          <source>The explicit specialization for &lt;code&gt;void&lt;/code&gt; lacks the member typedefs &lt;code&gt;reference&lt;/code&gt;, &lt;code&gt;const_reference&lt;/code&gt;, &lt;code&gt;size_type&lt;/code&gt; and &lt;code&gt;difference_type&lt;/code&gt;. This specialization declares no member functions.</source>
          <target state="translated">La especializaci&amp;oacute;n expl&amp;iacute;cita para el &lt;code&gt;void&lt;/code&gt; carece de la &lt;code&gt;reference&lt;/code&gt; &lt;code&gt;const_reference&lt;/code&gt; del miembro , const_reference , &lt;code&gt;size_type&lt;/code&gt; y &lt;code&gt;difference_type&lt;/code&gt; . Esta especializaci&amp;oacute;n declara que no hay funciones miembro.</target>
        </trans-unit>
        <trans-unit id="75f7b6ca4ed9628e0d043baf2085e3225cacadad" translate="yes" xml:space="preserve">
          <source>The explicit specifier may only appear within the decl-specifier-seq of the declaration of a constructor  or conversion function(since C++11) within its class definition.</source>
          <target state="translated">El especificador explícito sólo puede aparecer dentro de la decl-specificador-seq de la declaración de un constructor o función de conversión (desde C++11)dentro de su definición de clase.</target>
        </trans-unit>
        <trans-unit id="3afa03179e588e1c757bb671479e9343d010308a" translate="yes" xml:space="preserve">
          <source>The exponent contains at least two digits, more digits are used only if necessary. If the value is &lt;code&gt;​0​&lt;/code&gt;, the exponent is also &lt;code&gt;​0​&lt;/code&gt;.</source>
          <target state="translated">El exponente contiene al menos dos d&amp;iacute;gitos, solo se usan m&amp;aacute;s d&amp;iacute;gitos si es necesario. Si el valor es &lt;code&gt;​0​&lt;/code&gt; , el exponente es tambi&amp;eacute;n &lt;code&gt;​0​&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bbac353ed3f45f6cc4a964a51c439a96d66dd22" translate="yes" xml:space="preserve">
          <source>The exponent has the form.</source>
          <target state="translated">El exponente tiene la forma.</target>
        </trans-unit>
        <trans-unit id="04028f66e9c71c2bd75f830dc82f30f80377d676" translate="yes" xml:space="preserve">
          <source>The exponential function is an</source>
          <target state="translated">La función exponencial es una</target>
        </trans-unit>
        <trans-unit id="b026107f975051acf342b103e1b444c59a6178c7" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;(void)*i, *i&lt;/code&gt; is equivalent to &lt;code&gt;*i&lt;/code&gt;.</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;(void)*i, *i&lt;/code&gt; es equivalente a &lt;code&gt;*i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f256b2d48cb6167100795f513339752f484b361c" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_size&quot;&gt;std::tuple_size&lt;/a&gt;&amp;lt;E&amp;gt;::value&lt;/code&gt; must be a well-formed integer constant expression, and the number of identifiers must equal &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_size&quot;&gt;std::tuple_size&lt;/a&gt;&amp;lt;E&amp;gt;::value&lt;/code&gt;.</source>
          <target state="translated">La expresion &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_size&quot;&gt;std::tuple_size&lt;/a&gt;&amp;lt;E&amp;gt;::value&lt;/code&gt; debe ser una expresi&amp;oacute;n constante entera bien formada, y el n&amp;uacute;mero de identificadores debe ser igual a &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_size&quot;&gt;std::tuple_size&lt;/a&gt;&amp;lt;E&amp;gt;::value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83669166fa2ba44ae88683185916f1e865fbe4db" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;E1-&amp;gt;*E2&lt;/code&gt; is exactly equivalent to &lt;code&gt;(*E1).*E2&lt;/code&gt; for built-in types; that is why the following rules address only &lt;code&gt;E1.*E2&lt;/code&gt;.</source>
          <target state="translated">La expresion &lt;code&gt;E1-&amp;gt;*E2&lt;/code&gt; es exactamente equivalente a &lt;code&gt;(*E1).*E2&lt;/code&gt; para los tipos integrados; Es por eso que las siguientes reglas se refieren solo a &lt;code&gt;E1.*E2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1be99cdcd2e8a79ac63dcdfecfbecf43da1ffdc5" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;E1-&amp;gt;E2&lt;/code&gt; is exactly equivalent to &lt;code&gt;(*E1).E2&lt;/code&gt; for built-in types; that is why the following rules address only &lt;code&gt;E1.E2&lt;/code&gt;.</source>
          <target state="translated">La expresion &lt;code&gt;E1-&amp;gt;E2&lt;/code&gt; es exactamente equivalente a &lt;code&gt;(*E1).E2&lt;/code&gt; para los tipos integrados; Es por eso que las siguientes reglas se refieren solo a &lt;code&gt;E1.E2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8662b895e8848a9d54fb30016c007f413c93e39b" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;E&lt;/code&gt; as well as all expressions &lt;code&gt;A1&lt;/code&gt;, &lt;code&gt;A2&lt;/code&gt;, &lt;code&gt;A3&lt;/code&gt;, etc, provided as arguments are evaluated in arbitrary order, &lt;a href=&quot;eval_order&quot;&gt;unsequenced&lt;/a&gt; with respect to each other.</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;E&lt;/code&gt; as&amp;iacute; como todas las expresiones &lt;code&gt;A1&lt;/code&gt; , &lt;code&gt;A2&lt;/code&gt; , &lt;code&gt;A3&lt;/code&gt; , etc., proporcionadas como argumentos, se eval&amp;uacute;an en orden arbitrario, sin &lt;a href=&quot;eval_order&quot;&gt;secuencia&lt;/a&gt; entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="ded81f4b1365cdf6b2376a723a760568d868d21a" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;E&lt;/code&gt; is sequenced before each of the expressions &lt;code&gt;A1&lt;/code&gt;, &lt;code&gt;A2&lt;/code&gt;, &lt;code&gt;A3&lt;/code&gt; as well as default arguments, if any. The argument expressions are evaluated in arbitrary order, &lt;a href=&quot;eval_order&quot;&gt;indeterminately sequenced&lt;/a&gt; with respect to each other.</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;E&lt;/code&gt; se secuencia antes de cada una de las expresiones &lt;code&gt;A1&lt;/code&gt; , &lt;code&gt;A2&lt;/code&gt; , &lt;code&gt;A3&lt;/code&gt; , as&amp;iacute; como los argumentos predeterminados, si los hay. Las expresiones de argumento se eval&amp;uacute;an en orden arbitrario, &lt;a href=&quot;eval_order&quot;&gt;secuenciadas indeterminadamente&lt;/a&gt; entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="539ec12c5f5ccb719489a32d4374a893502f671b" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;assert(E)&lt;/code&gt; is guaranteed to be a &lt;a href=&quot;../language/constant_expression&quot;&gt;constant subexpression&lt;/a&gt;, if either.</source>
          <target state="translated">Se garantiza que la expresi&amp;oacute;n &lt;code&gt;assert(E)&lt;/code&gt; sea ​​una &lt;a href=&quot;../language/constant_expression&quot;&gt;subexpresi&amp;oacute;n constante&lt;/a&gt; , si es que lo hace.</target>
        </trans-unit>
        <trans-unit id="586336445cf8edc1ea53dc0a3ef96aa12ea46aed" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;is &amp;gt;&amp;gt; manip&lt;/code&gt; is an lvalue of type &lt;code&gt;&lt;a href=&quot;../io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&amp;lt;CharT, Traits&amp;gt;&lt;/code&gt; with the value &lt;code&gt;is&lt;/code&gt;.</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;is &amp;gt;&amp;gt; manip&lt;/code&gt; es un valor de tipo &lt;code&gt;&lt;a href=&quot;../io/basic_istream&quot;&gt;std::basic_istream&lt;/a&gt;&amp;lt;CharT, Traits&amp;gt;&lt;/code&gt; con el valor &lt;code&gt;is&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82b1761cea5dd130f7d4e710d4bd26b38bbad074" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.lock()&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.lock()&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="7709fdad1bfa0b92b4b386c5e0f181e6a9f690a9" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.lock_shared()&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.lock_shared()&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="240415ee5368f9c965c95afc5cc3939b7c0c29ea" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.try_lock()&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.try_lock()&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="fe6f73c5bba66f05a94b9e2020b01d0a71bf84af" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.try_lock_for(duration)&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.try_lock_for(duration)&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="af3f262075eaf71da5ad7ff342912b9553daa93f" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.try_lock_shared()&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.try_lock_shared()&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="a44765748c4d628f81874d40f8b3a638d007d340" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.try_lock_shared_for(duration)&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.try_lock_shared_for(duration)&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="124bf2cd9e34ad42e934027eaeae6a4a74ab1f4b" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.try_lock_shared_until(time_point)&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.try_lock_shared_until(time_point)&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="d57532bbb3aad50e57871e8a34a148c07fd1835b" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.try_lock_until(time_point)&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.try_lock_until(time_point)&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="2ccc23f32ac0eccf9b8dd11159afbf1ff8524278" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.unlock()&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.unlock()&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="6fc0acaec7b5396f8450b18e802131519692dde8" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;m.unlock_shared()&lt;/code&gt; has the following properties</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;m.unlock_shared()&lt;/code&gt; tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="91b7fbd840ec23a67a46bd4f51655418edf1d142" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;offsetof(type, member)&lt;/code&gt; is never &lt;a href=&quot;../language/dependent_name#Dependent_types&quot;&gt;type-dependent&lt;/a&gt; and it is value-dependent if and only if type is dependent.</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;offsetof(type, member)&lt;/code&gt; nunca &lt;a href=&quot;../language/dependent_name#Dependent_types&quot;&gt;depende del tipo y depende del&lt;/a&gt; valor si y solo si el tipo es dependiente.</target>
        </trans-unit>
        <trans-unit id="54b4ee5d238ac3437ac1265bf827a66c59c6ad6e" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;p(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;T&lt;/code&gt;, regardless of &lt;a href=&quot;../../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;T&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;T&lt;/code&gt; unless for &lt;code&gt;T&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;p(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;T&lt;/code&gt; , independientemente de la &lt;a href=&quot;../../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, no se permite un tipo de par&amp;aacute;metro de &lt;code&gt;T&amp;amp;&lt;/code&gt; , ni &lt;code&gt;T&lt;/code&gt; a menos que para &lt;code&gt;T&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="31766904edca7191420c344c843fc6cc68843556" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;p(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;VT&lt;/code&gt;, where &lt;code&gt;VT&lt;/code&gt; is the value type of &lt;code&gt;BidirIt&lt;/code&gt;, regardless of &lt;a href=&quot;../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;VT&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;VT&lt;/code&gt; unless for &lt;code&gt;VT&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;p(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;VT&lt;/code&gt; , donde &lt;code&gt;VT&lt;/code&gt; es el tipo de valor de &lt;code&gt;BidirIt&lt;/code&gt; , independientemente de la &lt;a href=&quot;../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, un tipo de par&amp;aacute;metro de &lt;code&gt;VT&amp;amp;&lt;/code&gt; no est&amp;aacute; permitido, ni &lt;code&gt;VT&lt;/code&gt; a menos que para &lt;code&gt;VT&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="e393e02be8964600ac69d24291a03db73c323fd4" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;p(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;VT&lt;/code&gt;, where &lt;code&gt;VT&lt;/code&gt; is the value type of &lt;code&gt;ForwardIt&lt;/code&gt;, regardless of &lt;a href=&quot;../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;VT&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;VT&lt;/code&gt; unless for &lt;code&gt;VT&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;p(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;VT&lt;/code&gt; , donde &lt;code&gt;VT&lt;/code&gt; es el tipo de valor de &lt;code&gt;ForwardIt&lt;/code&gt; , independientemente de la &lt;a href=&quot;../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, un tipo de par&amp;aacute;metro de &lt;code&gt;VT&amp;amp;&lt;/code&gt; no est&amp;aacute; permitido, ni &lt;code&gt;VT&lt;/code&gt; a menos que para &lt;code&gt;VT&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="038e567c0ca54f7778dee012a53f5c496d7dec7b" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;p(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;VT&lt;/code&gt;, where &lt;code&gt;VT&lt;/code&gt; is the value type of &lt;code&gt;InputIt&lt;/code&gt;, regardless of &lt;a href=&quot;../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;VT&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;VT&lt;/code&gt; unless for &lt;code&gt;VT&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;p(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;VT&lt;/code&gt; , donde &lt;code&gt;VT&lt;/code&gt; es el tipo de valor de &lt;code&gt;InputIt&lt;/code&gt; , independientemente de la &lt;a href=&quot;../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, un tipo de par&amp;aacute;metro de &lt;code&gt;VT&amp;amp;&lt;/code&gt; no est&amp;aacute; permitido, ni &lt;code&gt;VT&lt;/code&gt; a menos que para &lt;code&gt;VT&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="a33910922f5c49214aa40d9e9c70599d437ee4ab" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;pred(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;CharT&lt;/code&gt;, regardless of &lt;a href=&quot;../../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;CharT&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;CharT&lt;/code&gt; unless for &lt;code&gt;CharT&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;pred(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;CharT&lt;/code&gt; , independientemente de la &lt;a href=&quot;../../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, un tipo de par&amp;aacute;metro de &lt;code&gt;CharT&amp;amp;&lt;/code&gt; no est&amp;aacute; permitido, ni &lt;code&gt;CharT&lt;/code&gt; a menos que para &lt;code&gt;CharT&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="fb551a5e288558f389d83fdd483dcaf1a86f0f36" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;pred(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;T&lt;/code&gt;, regardless of &lt;a href=&quot;../../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;T&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;T&lt;/code&gt; unless for &lt;code&gt;T&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;pred(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;T&lt;/code&gt; , independientemente de la &lt;a href=&quot;../../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, no se permite un tipo de par&amp;aacute;metro de &lt;code&gt;T&amp;amp;&lt;/code&gt; , ni &lt;code&gt;T&lt;/code&gt; a menos que para &lt;code&gt;T&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="1ebb390410881cd226a720f655f581e413a7c60b" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;pred(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;VT&lt;/code&gt;, where &lt;code&gt;VT&lt;/code&gt; is the value type of &lt;code&gt;InputIt&lt;/code&gt;, regardless of &lt;a href=&quot;../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;VT&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;VT&lt;/code&gt; unless for &lt;code&gt;VT&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;pred(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;VT&lt;/code&gt; , donde &lt;code&gt;VT&lt;/code&gt; es el tipo de valor de &lt;code&gt;InputIt&lt;/code&gt; , independientemente de la &lt;a href=&quot;../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, un tipo de par&amp;aacute;metro de &lt;code&gt;VT&amp;amp;&lt;/code&gt; no est&amp;aacute; permitido, ni &lt;code&gt;VT&lt;/code&gt; a menos que para &lt;code&gt;VT&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="82491c755cffe0cddbb70822fc6e26fa330c289b" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;q(v)&lt;/code&gt; must be convertible to &lt;code&gt;bool&lt;/code&gt; for every argument &lt;code&gt;v&lt;/code&gt; of type (possibly const) &lt;code&gt;VT&lt;/code&gt;, where &lt;code&gt;VT&lt;/code&gt; is the value type of &lt;code&gt;InputIt&lt;/code&gt;, regardless of &lt;a href=&quot;../language/value_category&quot;&gt;value category&lt;/a&gt;, and must not modify &lt;code&gt;v&lt;/code&gt;. Thus, a parameter type of &lt;code&gt;VT&amp;amp;&lt;/code&gt;is not allowed, nor is &lt;code&gt;VT&lt;/code&gt; unless for &lt;code&gt;VT&lt;/code&gt; a move is equivalent to a copy(since C++11). ​</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;q(v)&lt;/code&gt; debe ser convertible a &lt;code&gt;bool&lt;/code&gt; para cada argumento &lt;code&gt;v&lt;/code&gt; de tipo (posiblemente const) &lt;code&gt;VT&lt;/code&gt; , donde &lt;code&gt;VT&lt;/code&gt; es el tipo de valor de &lt;code&gt;InputIt&lt;/code&gt; , independientemente de la &lt;a href=&quot;../language/value_category&quot;&gt;categor&amp;iacute;a&lt;/a&gt; de valor , y no debe modificar &lt;code&gt;v&lt;/code&gt; . Por lo tanto, no se permite un tipo de par&amp;aacute;metro de &lt;code&gt;VT&amp;amp;&lt;/code&gt; , ni &lt;code&gt;VT&lt;/code&gt; a menos que para &lt;code&gt;VT&lt;/code&gt; un movimiento sea equivalente a una copia (desde C ++ 11).</target>
        </trans-unit>
        <trans-unit id="49bc73e62fcd530ece5b0830e6bbd0253365d4cb" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;std::addressof(E)&lt;/code&gt; is a &lt;a href=&quot;../language/constant_expression&quot;&gt;constant subexpression&lt;/a&gt;, if &lt;code&gt;E&lt;/code&gt; is an lvalue constant subexpression.</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;std::addressof(E)&lt;/code&gt; es una &lt;a href=&quot;../language/constant_expression&quot;&gt;subexpresi&amp;oacute;n constante&lt;/a&gt; , si &lt;code&gt;E&lt;/code&gt; es una subexpresi&amp;oacute;n constante de valor.</target>
        </trans-unit>
        <trans-unit id="67b8cc9f01423f287b7ad35827c5e57ad0c313d1" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;v.~T()&lt;/code&gt; also must be valid, and, for lvalue &lt;code&gt;v&lt;/code&gt;, the expression &lt;code&gt;&amp;amp;v&lt;/code&gt; must have the type &lt;code&gt;T*&lt;/code&gt; or &lt;code&gt;const T*&lt;/code&gt; and must evaluate to the address of &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;v.~T()&lt;/code&gt; tambi&amp;eacute;n debe ser v&amp;aacute;lida y, para lvalue &lt;code&gt;v&lt;/code&gt; , la expresi&amp;oacute;n &lt;code&gt;&amp;amp;v&lt;/code&gt; debe tener el tipo &lt;code&gt;T*&lt;/code&gt; o &lt;code&gt;const T*&lt;/code&gt; y debe evaluarse en la direcci&amp;oacute;n de &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="665d7a4f577c4f3d78f96aba7a62ab512332346a" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;view::all(E)&lt;/code&gt; is expression-equivalent (has the same effect) to:</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;view::all(E)&lt;/code&gt; es equivalente a la expresi&amp;oacute;n (tiene el mismo efecto) para:</target>
        </trans-unit>
        <trans-unit id="904e92ad60024ca361e2c692f767879d8474a6f3" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;x - trunc(x/y)*y&lt;/code&gt; may not equal &lt;code&gt;fmod(x,y)&lt;/code&gt; when the rounding of x/y to initialize the argument of trunc loses too much precision (example: x = 30.508474576271183309, y = 6.1016949152542370172).</source>
          <target state="translated">La expresi&amp;oacute;n &lt;code&gt;x - trunc(x/y)*y&lt;/code&gt; puede no ser igual a &lt;code&gt;fmod(x,y)&lt;/code&gt; cuando el redondeo de x / y para inicializar el argumento de trunc pierde demasiada precisi&amp;oacute;n (ejemplo: x = 30.508474576271183309, y = 6.1016949152542370172).</target>
        </trans-unit>
        <trans-unit id="aa55e431a2c4565661fa1dcb2e324fbc7374b6b2" translate="yes" xml:space="preserve">
          <source>The expression in a contract attribute, contextually converted to &lt;code&gt;bool&lt;/code&gt;, is called its</source>
          <target state="translated">La expresi&amp;oacute;n en un atributo de contrato, convertido contextualmente a &lt;code&gt;bool&lt;/code&gt; , se llama</target>
        </trans-unit>
        <trans-unit id="fd397bb5ad1c715271d852321a59468dac4bf8e0" translate="yes" xml:space="preserve">
          <source>The expression in the middle of the conditional operator (between &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;:&lt;/code&gt;) is parsed as if parenthesized: its precedence relative to &lt;code&gt;?:&lt;/code&gt; is ignored.</source>
          <target state="translated">La expresi&amp;oacute;n en el medio del operador condicional (entre &lt;code&gt;?&lt;/code&gt; Y &lt;code&gt;:&lt;/code&gt; ) se analiza como si entre par&amp;eacute;ntesis: su precedencia relativa a &lt;code&gt;?:&lt;/code&gt; Se ignora.</target>
        </trans-unit>
        <trans-unit id="885bd0a86f7344aa7addd208200ed06b9ca1b776" translate="yes" xml:space="preserve">
          <source>The expression in the requires-clause of (2) is equivalent to &lt;code&gt;&lt;a href=&quot;../concepts/convertibleto&quot;&gt;ConvertibleTo&lt;/a&gt;&amp;lt;T, R&amp;amp;&amp;gt; &amp;amp;&amp;amp; requires { FUN(declval&amp;lt;T&amp;gt;()); }&lt;/code&gt;, where the exposition-only functions &lt;code&gt;FUN&lt;/code&gt; are declared as &lt;code&gt;void FUN(R&amp;amp;); void FUN(R&amp;amp;&amp;amp;) = delete;&lt;/code&gt;.</source>
          <target state="translated">La expresi&amp;oacute;n en la cl&amp;aacute;usula require de (2) es equivalente a &lt;code&gt;&lt;a href=&quot;../concepts/convertibleto&quot;&gt;ConvertibleTo&lt;/a&gt;&amp;lt;T, R&amp;amp;&amp;gt; &amp;amp;&amp;amp; requires { FUN(declval&amp;lt;T&amp;gt;()); }&lt;/code&gt; , donde las funciones de solo exposici&amp;oacute;n &lt;code&gt;FUN&lt;/code&gt; se declaran como &lt;code&gt;void FUN(R&amp;amp;); void FUN(R&amp;amp;&amp;amp;) = delete;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a21b0ee768bd9b327d1cbd0968cf627a511e659" translate="yes" xml:space="preserve">
          <source>The expression is a constant expression.</source>
          <target state="translated">La expresión es una expresión constante.</target>
        </trans-unit>
        <trans-unit id="f16e21d3bd144a8899aed1761dfc3082f965b05a" translate="yes" xml:space="preserve">
          <source>The expression may contain unary operators in form &lt;code&gt;defined&lt;/code&gt;identifier or &lt;code&gt;defined (&lt;/code&gt;identifier&lt;code&gt;)&lt;/code&gt;. The result is &lt;code&gt;1&lt;/code&gt; if the identifier was &lt;a href=&quot;replace&quot;&gt;defined as a macro name&lt;/a&gt; or the identifier is &lt;a href=&quot;include&quot;&gt;&lt;code&gt;__has_include&lt;/code&gt;&lt;/a&gt;(since C++17), otherwise the result is &lt;code&gt;​0​&lt;/code&gt;.</source>
          <target state="translated">La expresi&amp;oacute;n puede contener operadores unarios en forma &lt;code&gt;defined&lt;/code&gt; identificador o &lt;code&gt;defined (&lt;/code&gt; identificador &lt;code&gt;)&lt;/code&gt; . El resultado es &lt;code&gt;1&lt;/code&gt; si el identificador se &lt;a href=&quot;replace&quot;&gt;define como un nombre de macro&lt;/a&gt; o el identificador es &lt;a href=&quot;include&quot;&gt; &lt;code&gt;__has_include&lt;/code&gt; &lt;/a&gt; (desde C ++ 17), de lo contrario el resultado es &lt;code&gt;​0​&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d339ba0adac2cf4ba186cd532857e945e9343eb" translate="yes" xml:space="preserve">
          <source>The expression must have one of the following forms:</source>
          <target state="translated">La expresión debe tener una de las siguientes formas:</target>
        </trans-unit>
        <trans-unit id="231710b26e93a7d7764beca9620416f5a77ff691" translate="yes" xml:space="preserve">
          <source>The expression returns an object such that.</source>
          <target state="translated">La expresión devuelve un objeto tal que.</target>
        </trans-unit>
        <trans-unit id="ea44ea7b24f7bd77e7c8cf33597bd8e37a6afe92" translate="yes" xml:space="preserve">
          <source>The expression that names the function can be.</source>
          <target state="translated">La expresión que da nombre a la función puede ser.</target>
        </trans-unit>
        <trans-unit id="eab260347bde3009ca03d9d6783a162cf2a08d29" translate="yes" xml:space="preserve">
          <source>The expressions &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(static_cast&amp;lt;T*&amp;gt;(r.get()))&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(dynamic_cast&amp;lt;T*&amp;gt;(r.get()))&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(const_cast&amp;lt;T*&amp;gt;(r.get()))&lt;/code&gt; might seem to have the same effect, but they all will likely result in undefined behavior, attempting to delete the same object twice!</source>
          <target state="translated">Las expresiones &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(static_cast&amp;lt;T*&amp;gt;(r.get()))&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(dynamic_cast&amp;lt;T*&amp;gt;(r.get()))&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../shared_ptr&quot;&gt;std::shared_ptr&lt;/a&gt;&amp;lt;T&amp;gt;(const_cast&amp;lt;T*&amp;gt;(r.get()))&lt;/code&gt; Puede parecer que &amp;lt;T&amp;gt; (const_cast &amp;lt;T *&amp;gt; (r.get ())) tiene el mismo efecto, pero todos probablemente dar&amp;aacute;n lugar a un comportamiento indefinido, &amp;iexcl;intentando eliminar el mismo objeto dos veces!</target>
        </trans-unit>
        <trans-unit id="cc5889de51b88f428e940c2673c3fc359f09fa6e" translate="yes" xml:space="preserve">
          <source>The expressions &lt;code&gt;T::is_steady&lt;/code&gt; and &lt;code&gt;T::now()&lt;/code&gt; are each well-formed when treated as an unevaluated operand.</source>
          <target state="translated">Las expresiones &lt;code&gt;T::is_steady&lt;/code&gt; y &lt;code&gt;T::now()&lt;/code&gt; est&amp;aacute;n bien formadas cuando se tratan como un operando no evaluado.</target>
        </trans-unit>
        <trans-unit id="34901c71cab528a05d379570e30475cde56abe27" translate="yes" xml:space="preserve">
          <source>The expressions &lt;code&gt;a.mf&lt;/code&gt; and &lt;code&gt;p-&amp;gt;mf&lt;/code&gt;, where &lt;code&gt;mf&lt;/code&gt; is a &lt;a href=&quot;member_functions&quot;&gt;non-static member function&lt;/a&gt;, and the expressions &lt;code&gt;a.*pmf&lt;/code&gt; and &lt;code&gt;p-&amp;gt;*pmf&lt;/code&gt;, where &lt;code&gt;pmf&lt;/code&gt; is a &lt;a href=&quot;pointer#Pointers_to_member_functions&quot;&gt;pointer to member function&lt;/a&gt;, are classified as prvalue expressions, but they cannot be used to initialize references, as function arguments, or for any purpose at all, except as the left-hand argument of the function call operator, e.g. &lt;code&gt;(p-&amp;gt;*pmf)(args)&lt;/code&gt;.</source>
          <target state="translated">Las expresiones &lt;code&gt;a.mf&lt;/code&gt; y &lt;code&gt;p-&amp;gt;mf&lt;/code&gt; , donde &lt;code&gt;mf&lt;/code&gt; es una &lt;a href=&quot;member_functions&quot;&gt;funci&amp;oacute;n miembro no est&amp;aacute;tica&lt;/a&gt; , y las expresiones &lt;code&gt;a.*pmf&lt;/code&gt; y &lt;code&gt;p-&amp;gt;*pmf&lt;/code&gt; , donde &lt;code&gt;pmf&lt;/code&gt; es un &lt;a href=&quot;pointer#Pointers_to_member_functions&quot;&gt;puntero a la funci&amp;oacute;n miembro&lt;/a&gt; , se clasifican como expresiones prvalue, pero no pueden usarse para inicializar referencias, como argumentos de funci&amp;oacute;n, o para ning&amp;uacute;n prop&amp;oacute;sito, excepto como el argumento de la izquierda del operador de llamada de funci&amp;oacute;n, por ejemplo &lt;code&gt;(p-&amp;gt;*pmf)(args)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cca2c19bac42464027e1a3c56fa7393e2441fac" translate="yes" xml:space="preserve">
          <source>The expressions that can be moved from are called &quot;rvalue expressions&quot;. Both prvalues and xvalues are rvalue expressions.</source>
          <target state="translated">Las expresiones de las que se puede pasar se llaman &quot;expresiones de valor&quot;.Tanto los prvalores como los xvalores son expresiones de rvalor.</target>
        </trans-unit>
        <trans-unit id="b3811de048b8c0719daab80a97fd886fb125015a" translate="yes" xml:space="preserve">
          <source>The expressions that have identity are called &quot;glvalue expressions&quot; (glvalue stands for &quot;generalized lvalue&quot;). Both lvalues and xvalues are glvalue expressions.</source>
          <target state="translated">Las expresiones que tienen identidad se denominan &quot;expresiones glvalue&quot; (glvalue significa &quot;valor l generalizado&quot;).Tanto los valores l como los valores x son expresiones glvalue.</target>
        </trans-unit>
        <trans-unit id="55676a08069cb5f513f31726af6380f2a1648ac0" translate="yes" xml:space="preserve">
          <source>The extension as returned by this function includes a period to make it possible to distinguish the file that ends with a period (function returns &lt;code&gt;&quot;.&quot;&lt;/code&gt;) from a file with no extension (function returns &lt;code&gt;&quot;&quot;&lt;/code&gt;).</source>
          <target state="translated">La extensi&amp;oacute;n que devuelve esta funci&amp;oacute;n incluye un punto para que sea posible distinguir el archivo que termina con un punto (la funci&amp;oacute;n devuelve &lt;code&gt;&quot;.&quot;&lt;/code&gt; ) De un archivo sin extensi&amp;oacute;n (la funci&amp;oacute;n devuelve &lt;code&gt;&quot;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="13bea24b4a4e8e50405556b05a63f04b74e94e6c" translate="yes" xml:space="preserve">
          <source>The extension of the current pathname or an empty path if there's no extension.</source>
          <target state="translated">La extensión del camino actual o un camino vacío si no hay extensión.</target>
        </trans-unit>
        <trans-unit id="f3ad5e575ce7611c83adc14804313b5885a8f1e2" translate="yes" xml:space="preserve">
          <source>The extent &lt;code&gt;E&lt;/code&gt; of the span returned by (1) is determined as follows:</source>
          <target state="translated">La extensi&amp;oacute;n &lt;code&gt;E&lt;/code&gt; del tramo devuelto por (1) se determina de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="21ef62f13c61e48aa5fc7ae1f2fc5e8fd87da3dd" translate="yes" xml:space="preserve">
          <source>The extraction operation in &lt;code&gt;in &amp;gt;&amp;gt; get_money(mon, intl)&lt;/code&gt; behaves as a &lt;a href=&quot;../../named_req/formattedinputfunction&quot;&gt;FormattedInputFunction&lt;/a&gt;.</source>
          <target state="translated">La operaci&amp;oacute;n de extracci&amp;oacute;n &lt;code&gt;in &amp;gt;&amp;gt; get_money(mon, intl)&lt;/code&gt; comporta como &lt;a href=&quot;../../named_req/formattedinputfunction&quot;&gt;FormattedInputFunction&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8997cdfb4c9592dee5dc60e1be61905e38917e65" translate="yes" xml:space="preserve">
          <source>The extraction operators of all &lt;a href=&quot;../../named_req/randomnumberdistribution&quot;&gt;RandomNumberDistributions&lt;/a&gt;, if bad input is encountered.</source>
          <target state="translated">Los operadores de extracci&amp;oacute;n de todas las &lt;a href=&quot;../../named_req/randomnumberdistribution&quot;&gt;distribuciones&lt;/a&gt; de n&amp;uacute;meros aleatorios , si se encuentra una entrada incorrecta.</target>
        </trans-unit>
        <trans-unit id="c6f16b18faa3bc7f8569c2fec0b657e8169e9ecf" translate="yes" xml:space="preserve">
          <source>The extraction operators of all &lt;a href=&quot;../../named_req/randomnumberengine&quot;&gt;RandomNumberEngines&lt;/a&gt;, if bad input is encountered.</source>
          <target state="translated">Los operadores de extracci&amp;oacute;n de todos los &lt;a href=&quot;../../named_req/randomnumberengine&quot;&gt;RandomNumberEngines&lt;/a&gt; , si se encuentra una entrada incorrecta.</target>
        </trans-unit>
        <trans-unit id="9d05fc65ffd95b0140790a558b6a89968ddea9e7" translate="yes" xml:space="preserve">
          <source>The facet &lt;code&gt;std::moneypunct&lt;/code&gt; encapsulates monetary value format preferences. Stream I/O manipulators &lt;code&gt;&lt;a href=&quot;../io/manip/get_money&quot;&gt;std::get_money&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../io/manip/put_money&quot;&gt;std::put_money&lt;/a&gt;&lt;/code&gt; use &lt;code&gt;std::moneypunct&lt;/code&gt; through &lt;code&gt;&lt;a href=&quot;money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; for parsing monetary value input and formatting monetary value output.</source>
          <target state="translated">La faceta &lt;code&gt;std::moneypunct&lt;/code&gt; encapsula las preferencias de formato del valor monetario. Los manipuladores de E / S de flujo &lt;code&gt;&lt;a href=&quot;../io/manip/get_money&quot;&gt;std::get_money&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../io/manip/put_money&quot;&gt;std::put_money&lt;/a&gt;&lt;/code&gt; usan &lt;code&gt;std::moneypunct&lt;/code&gt; trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;money_get&quot;&gt;std::money_get&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;money_put&quot;&gt;std::money_put&lt;/a&gt;&lt;/code&gt; para analizar la entrada de valor monetario y formatear la salida de valor monetario.</target>
        </trans-unit>
        <trans-unit id="ea98fc46164fdd46a66b2e0e45e334aa270845d4" translate="yes" xml:space="preserve">
          <source>The facet &lt;code&gt;std::numpunct&lt;/code&gt; encapsulates numeric punctuation preferences. Stream I/O operations use &lt;code&gt;std::numpunct&lt;/code&gt; through &lt;code&gt;&lt;a href=&quot;num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; for parsing numeric input and formatting numeric output.</source>
          <target state="translated">La faceta &lt;code&gt;std::numpunct&lt;/code&gt; encapsula las preferencias de puntuaci&amp;oacute;n num&amp;eacute;rica. Las operaciones de E / S de flujo usan &lt;code&gt;std::numpunct&lt;/code&gt; trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;num_get&quot;&gt;std::num_get&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;num_put&quot;&gt;std::num_put&lt;/a&gt;&lt;/code&gt; para analizar la entrada num&amp;eacute;rica y formatear la salida num&amp;eacute;rica.</target>
        </trans-unit>
        <trans-unit id="58b1988e5fdc61555470b365aef2ee1b1f8c685c" translate="yes" xml:space="preserve">
          <source>The facets &lt;code&gt;&lt;a href=&quot;codecvt_utf8&quot;&gt;std::codecvt_utf8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;codecvt_utf16&quot;&gt;std::codecvt_utf16&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;codecvt_utf8_utf16&quot;&gt;std::codecvt_utf8_utf16&lt;/a&gt;&lt;/code&gt; accept an optional value of type &lt;code&gt;std::codecvt_mode&lt;/code&gt; as a template argument, which specifies optional features of the unicode string conversion.</source>
          <target state="translated">Las facetas &lt;code&gt;&lt;a href=&quot;codecvt_utf8&quot;&gt;std::codecvt_utf8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;codecvt_utf16&quot;&gt;std::codecvt_utf16&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;codecvt_utf8_utf16&quot;&gt;std::codecvt_utf8_utf16&lt;/a&gt;&lt;/code&gt; aceptan un valor opcional de tipo &lt;code&gt;std::codecvt_mode&lt;/code&gt; como argumento de plantilla, que especifica caracter&amp;iacute;sticas opcionales de la conversi&amp;oacute;n de cadena unicode.</target>
        </trans-unit>
        <trans-unit id="21a8e0fce58e2da39234e8680e0b14336ba0b8ac" translate="yes" xml:space="preserve">
          <source>The failbit</source>
          <target state="translated">La órbita de falla</target>
        </trans-unit>
        <trans-unit id="18566aa84f9e67e30bdc8f0bbe052925c5246031" translate="yes" xml:space="preserve">
          <source>The failbit is set by the following standard library functions:</source>
          <target state="translated">El bit de falla se establece por las siguientes funciones estándar de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="f16334c667365ad2f6c42f2b1d2344131a47226b" translate="yes" xml:space="preserve">
          <source>The fictional constructors for the purpose of overload resolution (described above) are explicit if they correspond to an implicitly-generated deduction guide formed from an explicit constructor or to a user-defined deduction guide that uses the keyword &lt;code&gt;explicit&lt;/code&gt;. As always, such constructors are ignored in copy-initialization context:</source>
          <target state="translated">Los constructores ficticios para la resoluci&amp;oacute;n de sobrecarga (descritos anteriormente) son expl&amp;iacute;citos si corresponden a una gu&amp;iacute;a de deducci&amp;oacute;n generada impl&amp;iacute;citamente formada a partir de un constructor expl&amp;iacute;cito o a una gu&amp;iacute;a de deducci&amp;oacute;n definida por el usuario que usa la palabra clave &lt;code&gt;explicit&lt;/code&gt; . Como siempre, estos constructores se ignoran en el contexto de inicializaci&amp;oacute;n de copia:</target>
        </trans-unit>
        <trans-unit id="eafa07d54f48e5fabf0fb077805403e664068140" translate="yes" xml:space="preserve">
          <source>The field width before the call to the function.</source>
          <target state="translated">El ancho de campo antes de la llamada a la función.</target>
        </trans-unit>
        <trans-unit id="2f2ded8c6ec6225067551f261401ae1283fdd943" translate="yes" xml:space="preserve">
          <source>The file is opened as a binary file for update (as by &lt;code&gt;&lt;a href=&quot;fopen&quot;&gt;std::fopen&lt;/a&gt;&lt;/code&gt; with access mode &lt;code&gt;&quot;wb+&quot;&lt;/code&gt;). At least &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; files may be opened during the lifetime of a program (this limit may be shared with &lt;code&gt;&lt;a href=&quot;tmpnam&quot;&gt;std::tmpnam&lt;/a&gt;&lt;/code&gt; and may be further limited by &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;FOPEN_MAX&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">El archivo se abre como un archivo binario para actualizaci&amp;oacute;n (como por &lt;code&gt;&lt;a href=&quot;fopen&quot;&gt;std::fopen&lt;/a&gt;&lt;/code&gt; con modo de acceso &lt;code&gt;&quot;wb+&quot;&lt;/code&gt; ). Al menos &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; se pueden abrir archivos durante el tiempo de vida de un programa (este l&amp;iacute;mite puede ser compartida con &lt;code&gt;&lt;a href=&quot;tmpnam&quot;&gt;std::tmpnam&lt;/a&gt;&lt;/code&gt; y puede ser a&amp;uacute;n m&amp;aacute;s limitado por &lt;code&gt;&lt;a href=&quot;../c&quot;&gt;FOPEN_MAX&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6ac41de8ef3462b9d25a0be25782c2d9eb8467a9" translate="yes" xml:space="preserve">
          <source>The file is opened as if by calling &lt;code&gt;&lt;a href=&quot;../c/fopen&quot;&gt;std::fopen&lt;/a&gt;&lt;/code&gt; with the second argument (&lt;code&gt;mode&lt;/code&gt;) determined as follows:</source>
          <target state="translated">El archivo se abre como llamando a &lt;code&gt;&lt;a href=&quot;../c/fopen&quot;&gt;std::fopen&lt;/a&gt;&lt;/code&gt; con el segundo argumento ( &lt;code&gt;mode&lt;/code&gt; ) determinado de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="713295cf62f82f602674e62dd30e404b198ed140" translate="yes" xml:space="preserve">
          <source>The file status (a &lt;code&gt;&lt;a href=&quot;file_status&quot;&gt;file_status&lt;/a&gt;&lt;/code&gt; object).</source>
          <target state="translated">El estado del archivo (un objeto &lt;code&gt;&lt;a href=&quot;file_status&quot;&gt;file_status&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="769141f7f9b5a5142e1255a4ab88fe7d4db964a7" translate="yes" xml:space="preserve">
          <source>The file's user group has execute/search permission</source>
          <target state="translated">El grupo de usuarios del archivo tiene permiso de ejecución/búsqueda</target>
        </trans-unit>
        <trans-unit id="70bc69312668a45ccd09783b9c8fded122da0f78" translate="yes" xml:space="preserve">
          <source>The file's user group has read permission</source>
          <target state="translated">El grupo de usuarios del archivo tiene permiso de lectura</target>
        </trans-unit>
        <trans-unit id="2b12b2de176ac00b49030d0c10f4d9c793a3623c" translate="yes" xml:space="preserve">
          <source>The file's user group has read, write, and execute/search permissions</source>
          <target state="translated">El grupo de usuarios del archivo tiene permisos de lectura,escritura y ejecución/búsqueda</target>
        </trans-unit>
        <trans-unit id="508ebbae7fd4ffdc0936fb88a642dca72e49df4d" translate="yes" xml:space="preserve">
          <source>The file's user group has write permission</source>
          <target state="translated">El grupo de usuarios del archivo tiene permiso de escritura</target>
        </trans-unit>
        <trans-unit id="86f9ab3f6b7423cdeedf82917cbf947c4e1cc032" translate="yes" xml:space="preserve">
          <source>The filename identified by the path.</source>
          <target state="translated">El nombre de archivo identificado por el camino.</target>
        </trans-unit>
        <trans-unit id="733546e14fff65a40e6ce4f6ae3b5c334093f0a7" translate="yes" xml:space="preserve">
          <source>The filesystem information (a &lt;a href=&quot;space_info&quot;&gt;space_info&lt;/a&gt; object).</source>
          <target state="translated">La informaci&amp;oacute;n del sistema de archivos (un objeto &lt;a href=&quot;space_info&quot;&gt;space_info&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="043742725d326d5a9ca6387b893c4cbc6e5566e1" translate="yes" xml:space="preserve">
          <source>The filesystem library facilities may be unavailable if a hierarchical file system is not accessible to the implementation, or if it does not provide the necessary capabilities. Some features may not be available if they are not supported by the underlying file system (e.g. the FAT filesystem lacks symbolic links and forbids multiple hardlinks). In those cases, errors must be reported.</source>
          <target state="translated">Las instalaciones de la biblioteca del sistema de archivos pueden no estar disponibles si no se puede acceder a un sistema de archivos jerárquico para la aplicación,o si éste no proporciona las capacidades necesarias.Algunas características pueden no estar disponibles si no están soportadas por el sistema de archivos subyacente (por ejemplo,el sistema de archivos FAT carece de enlaces simbólicos y prohíbe múltiples enlaces duros).En esos casos,se debe informar de los errores.</target>
        </trans-unit>
        <trans-unit id="25654428d5eeb26f93fee804e58fcb777e86a34e" translate="yes" xml:space="preserve">
          <source>The filesystem library was originally developed as &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/filesystem/doc/index.htm&quot;&gt;boost.filesystem&lt;/a&gt;, was published as &lt;a href=&quot;http://en.cppreference.com/w/cpp/experimental/fs&quot;&gt;the technical specification ISO/IEC TS 18822:2015&lt;/a&gt;, and finally merged to ISO C++ as of C++17. The boost implementation is currently available on more compilers and platforms than the C++17 library.</source>
          <target state="translated">La biblioteca del sistema de archivos se desarroll&amp;oacute; originalmente como &lt;a href=&quot;http://www.boost.org/doc/libs/release/libs/filesystem/doc/index.htm&quot;&gt;boost.filesystem&lt;/a&gt; , se public&amp;oacute; como &lt;a href=&quot;http://en.cppreference.com/w/cpp/experimental/fs&quot;&gt;la especificaci&amp;oacute;n t&amp;eacute;cnica ISO / IEC TS 18822: 2015&lt;/a&gt; y finalmente se fusion&amp;oacute; con ISO C ++ a partir de C ++ 17. La implementaci&amp;oacute;n de impulso est&amp;aacute; actualmente disponible en m&amp;aacute;s compiladores y plataformas que la biblioteca C ++ 17.</target>
        </trans-unit>
        <trans-unit id="4fa296ce7b9803c13a90aab2e82e1e9c32be7295" translate="yes" xml:space="preserve">
          <source>The filesystem library was originally developed as &lt;a href=&quot;https://www.boost.org/doc/libs/release/libs/filesystem/doc/index.htm&quot;&gt;boost.filesystem&lt;/a&gt;, was published as &lt;a href=&quot;http://en.cppreference.com/w/cpp/experimental/fs&quot;&gt;the technical specification ISO/IEC TS 18822:2015&lt;/a&gt;, and finally merged to ISO C++ as of C++17. The boost implementation is currently available on more compilers and platforms than the C++17 library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafb9282f9f742fde3db1064d82179ea3b8c2de9" translate="yes" xml:space="preserve">
          <source>The final value of &lt;code&gt;acc&lt;/code&gt; as described above.</source>
          <target state="translated">El valor final de &lt;code&gt;acc&lt;/code&gt; como se describe anteriormente.</target>
        </trans-unit>
        <trans-unit id="5e8e4ef756882f2ecb926b4da6aad7ade4184995" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;count&lt;/code&gt; characters of the transformed string are written to destination, including the terminating null character, and the length of the full transformed string is returned, excluding the terminating null character.</source>
          <target state="translated">Los primeros caracteres de &lt;code&gt;count&lt;/code&gt; de la cadena transformada se escriben en el destino, incluido el car&amp;aacute;cter nulo final, y se devuelve la longitud de la cadena transformada completa, excluyendo el car&amp;aacute;cter nulo final.</target>
        </trans-unit>
        <trans-unit id="4328e7f9e3a9a13684496bc48cded7c2545d55e5" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;sub_match&lt;/code&gt; (index 0) contained in a &lt;code&gt;match_result&lt;/code&gt; always represents the full match within a target sequence made by a regex, and subsequent &lt;code&gt;sub_match&lt;/code&gt;es represent sub-expression matches corresponding in sequence to the left parenthesis delimiting the sub-expression in the regex.</source>
          <target state="translated">El primer &lt;code&gt;sub_match&lt;/code&gt; (&amp;iacute;ndice 0) contenido en un &lt;code&gt;match_result&lt;/code&gt; siempre representa la coincidencia completa dentro de una secuencia objetivo realizada por una expresi&amp;oacute;n regular, y los siguientes &lt;code&gt;sub_match&lt;/code&gt; representan coincidencias de sub-expresi&amp;oacute;n correspondientes en secuencia al par&amp;eacute;ntesis izquierdo que delimita la sub-expresi&amp;oacute;n en la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="d51ed3d9e41b13a5f5ede9888191304e6306505d" translate="yes" xml:space="preserve">
          <source>The first bit of the bitset corresponds to the least significant digit of the number and the last bit corresponds to the most significant digit.</source>
          <target state="translated">El primer bit del conjunto de bits corresponde al dígito menos significativo del número y el último bit corresponde al dígito más significativo.</target>
        </trans-unit>
        <trans-unit id="87900467b85ef3761625a54c72c300b0d56a1c5f" translate="yes" xml:space="preserve">
          <source>The first character in</source>
          <target state="translated">El primer personaje de</target>
        </trans-unit>
        <trans-unit id="4655a7d7dda81fdaacd44983c104e6b51909f569" translate="yes" xml:space="preserve">
          <source>The first choice that satisfies the requirements of the respective cast operator is selected, even if it cannot be compiled (see example). If the cast can be interpreted in more than one way as &lt;code&gt;static_cast&lt;/code&gt; followed by a &lt;code&gt;const_cast&lt;/code&gt;, it cannot be compiled.</source>
          <target state="translated">Se selecciona la primera opci&amp;oacute;n que satisface los requisitos del operador de conversi&amp;oacute;n respectivo, incluso si no se puede compilar (ver ejemplo). Si el reparto se puede interpretar de m&amp;aacute;s de una forma como &lt;code&gt;static_cast&lt;/code&gt; seguido de &lt;code&gt;const_cast&lt;/code&gt; , no se puede compilar.</target>
        </trans-unit>
        <trans-unit id="f54508384b9cd8ec3f1662178af12ad22007b3fc" translate="yes" xml:space="preserve">
          <source>The first declaration of a function must specify all contract conditions (if any) of the function. Subsequent redeclarations must either specify no contract conditions or the same list of contract conditions; no diagnostic is required if corresponding conditions will always evaluate to the same value. If the same function is declared in two different translation units, the list of contract conditions shall be the same; no diagnostic is required.</source>
          <target state="translated">La primera declaración de una función debe especificar todas las condiciones contractuales (si las hay)de la función.Las redeclaraciones posteriores deben especificar o bien ninguna condición contractual o la misma lista de condiciones contractuales;no se requiere ningún diagnóstico si las condiciones correspondientes se evaluarán siempre con el mismo valor.Si la misma función se declara en dos unidades de traducción diferentes,la lista de condiciones del contrato será la misma;no se requiere ningún diagnóstico.</target>
        </trans-unit>
        <trans-unit id="eb9460452be12a6ef732fc7e63d7c1246d008e71" translate="yes" xml:space="preserve">
          <source>The first declaration of the function must specify this attribute if any declaration specifies it. If a function is declared with &lt;code&gt;[[&lt;strong&gt;noreturn&lt;/strong&gt;]]&lt;/code&gt; in one translation unit, and the same function is declared without &lt;code&gt;[[&lt;strong&gt;noreturn&lt;/strong&gt;]]&lt;/code&gt; in another translation unit, the program is ill-formed; no diagnostic required.</source>
          <target state="translated">La primera declaraci&amp;oacute;n de la funci&amp;oacute;n debe especificar este atributo si alguna declaraci&amp;oacute;n lo especifica. Si una funci&amp;oacute;n se declara con &lt;code&gt;[[&lt;strong&gt;noreturn&lt;/strong&gt;]]&lt;/code&gt; en una unidad de traducci&amp;oacute;n, y la misma funci&amp;oacute;n se declara sin &lt;code&gt;[[&lt;strong&gt;noreturn&lt;/strong&gt;]]&lt;/code&gt; en otra unidad de traducci&amp;oacute;n, el programa est&amp;aacute; mal formado; No se requiere diagn&amp;oacute;stico.</target>
        </trans-unit>
        <trans-unit id="55a8fcb384ef46460f279aa40b2cbfd4005f7ca4" translate="yes" xml:space="preserve">
          <source>The first dimension of zero is acceptable, and the allocation function is called.</source>
          <target state="translated">La primera dimensión de cero es aceptable,y se llama la función de asignación.</target>
        </trans-unit>
        <trans-unit id="b01b52628d903b5a8752c89193d50414f41bb7df" translate="yes" xml:space="preserve">
          <source>The first few Legendre polynomials are:</source>
          <target state="translated">Los primeros polinomios de Legendre son:</target>
        </trans-unit>
        <trans-unit id="667b730cf08aa006a135d605773de9d08b22a256" translate="yes" xml:space="preserve">
          <source>The first few are:</source>
          <target state="translated">Los primeros son:</target>
        </trans-unit>
        <trans-unit id="565d7c02d665f0e34f4688a944d25092dc5069f3" translate="yes" xml:space="preserve">
          <source>The first few associated Legendre polynomials are:</source>
          <target state="translated">Los primeros polinomios asociados a Legendre son:</target>
        </trans-unit>
        <trans-unit id="59d42cf5c59ef03d9f21e976e9211c12f3707cda" translate="yes" xml:space="preserve">
          <source>The first hexadecimal digit is not &lt;code&gt;0&lt;/code&gt; if the argument is a normalized floating point value. If the value is &lt;code&gt;​0​&lt;/code&gt;, the exponent is also &lt;code&gt;​0​&lt;/code&gt;.</source>
          <target state="translated">El primer d&amp;iacute;gito hexadecimal no es &lt;code&gt;0&lt;/code&gt; si el argumento es un valor de coma flotante normalizado. Si el valor es &lt;code&gt;​0​&lt;/code&gt; , el exponente es tambi&amp;eacute;n &lt;code&gt;​0​&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5b57b07c6d8c22dee48b2696636cbb5d4d9965f" translate="yes" xml:space="preserve">
          <source>The first mismatching element defines which range is lexicographically</source>
          <target state="translated">El primer elemento de desajuste define qué rango es lexicográficamente</target>
        </trans-unit>
        <trans-unit id="85aefccf8c9b3c2cd0c976b63196e9f569cb09b9" translate="yes" xml:space="preserve">
          <source>The first of the following that applies:</source>
          <target state="translated">El primero de los siguientes que se aplica:</target>
        </trans-unit>
        <trans-unit id="6410b256258044cf5d55a9090da038f2bcd0e444" translate="yes" xml:space="preserve">
          <source>The first operand of both operators is evaluated even if it is not necessary (e.g. when the second operand names a static member).</source>
          <target state="translated">El primer operando de ambos operadores se evalúa aunque no sea necesario (por ejemplo,cuando el segundo operando nombra un miembro estático).</target>
        </trans-unit>
        <trans-unit id="df485b1c8b6435c21120b67dccdfb9636e9183ea" translate="yes" xml:space="preserve">
          <source>The first operand of the conditional operator is evaluated and &lt;a href=&quot;implicit_cast&quot;&gt;contextually converted&lt;/a&gt; to &lt;code&gt;bool&lt;/code&gt;. After both the value evaluation and all side effects of the first operand are completed, if the result was &lt;code&gt;true&lt;/code&gt;, the second operand is evaluated. If the result was &lt;code&gt;false&lt;/code&gt;, the third operand is evaluated.</source>
          <target state="translated">El primer operando del operador condicional se eval&amp;uacute;a y se &lt;a href=&quot;implicit_cast&quot;&gt;convierte contextualmente&lt;/a&gt; en &lt;code&gt;bool&lt;/code&gt; . Despu&amp;eacute;s de completar tanto la evaluaci&amp;oacute;n del valor como todos los efectos secundarios del primer operando, si el resultado fue &lt;code&gt;true&lt;/code&gt; , se eval&amp;uacute;a el segundo operando. Si el resultado fue &lt;code&gt;false&lt;/code&gt; , se eval&amp;uacute;a el tercer operando.</target>
        </trans-unit>
        <trans-unit id="44633ae931db3c64d32820feb99f04264ea39dd8" translate="yes" xml:space="preserve">
          <source>The first overload is called when only the format string is passed and there is no parameter expansion.</source>
          <target state="translated">La primera sobrecarga se llama cuando sólo se pasa la cadena de formato y no hay expansión de parámetros.</target>
        </trans-unit>
        <trans-unit id="afa25bc7ebcd1dfe0877a490b5e734c564901f7c" translate="yes" xml:space="preserve">
          <source>The first version initializes new characters to &lt;code&gt;CharT()&lt;/code&gt;, the second version initializes new characters to &lt;code&gt;ch&lt;/code&gt;.</source>
          <target state="translated">La primera versi&amp;oacute;n inicializa nuevos caracteres en &lt;code&gt;CharT()&lt;/code&gt; , la segunda versi&amp;oacute;n inicializa nuevos caracteres en &lt;code&gt;ch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95875c290364c0a010e6be578275da15929396a0" translate="yes" xml:space="preserve">
          <source>The first version is an implicit conversion, the second one is explicit.</source>
          <target state="translated">La primera versión es una conversión implícita,la segunda es explícita.</target>
        </trans-unit>
        <trans-unit id="4aa20401aee62fc4db9195034b5ac4c80d183a7a" translate="yes" xml:space="preserve">
          <source>The first version is equivalent to &lt;code&gt;getline(s, count, widen('\n'))&lt;/code&gt;.</source>
          <target state="translated">La primera versi&amp;oacute;n es equivalente a &lt;code&gt;getline(s, count, widen('\n'))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0a5661e270139bd14512e2492907446f45e122d" translate="yes" xml:space="preserve">
          <source>The first version of the function uses &lt;code&gt;operator&amp;lt;&lt;/code&gt; to compare the elements, the second uses the given comparison function &lt;code&gt;comp&lt;/code&gt;.</source>
          <target state="translated">La primera versi&amp;oacute;n de la funci&amp;oacute;n usa el &lt;code&gt;operator&amp;lt;&lt;/code&gt; para comparar los elementos, la segunda usa la funci&amp;oacute;n de comparaci&amp;oacute;n dada &lt;code&gt;comp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba9ee638dac0b17d1eff10cf111fdc719b994440" translate="yes" xml:space="preserve">
          <source>The first version uses &lt;code&gt;operator&amp;lt;&lt;/code&gt; to compare the elements, the second version uses the given comparison function &lt;code&gt;comp&lt;/code&gt;.</source>
          <target state="translated">La primera versi&amp;oacute;n usa el &lt;code&gt;operator&amp;lt;&lt;/code&gt; para comparar los elementos, la segunda versi&amp;oacute;n usa la funci&amp;oacute;n de comparaci&amp;oacute;n dada &lt;code&gt;comp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b00a2e1db9ea8753c669bcafceebdf4e5001f0a2" translate="yes" xml:space="preserve">
          <source>The first version uses the associated parameter set, the second version uses &lt;code&gt;params&lt;/code&gt;. The associated parameter set is not modified.</source>
          <target state="translated">La primera versi&amp;oacute;n usa el conjunto de par&amp;aacute;metros asociado, la segunda versi&amp;oacute;n usa &lt;code&gt;params&lt;/code&gt; . El conjunto de par&amp;aacute;metros asociado no se modifica.</target>
        </trans-unit>
        <trans-unit id="ea51a875efb11ad49d51139f65a4fbab7c5f7404" translate="yes" xml:space="preserve">
          <source>The floating point conversion functions convert infinity to &lt;code&gt;inf&lt;/code&gt; or &lt;code&gt;infinity&lt;/code&gt;. Which one is used is implementation defined.</source>
          <target state="translated">Las funciones de conversi&amp;oacute;n de coma flotante convierten infinito en &lt;code&gt;inf&lt;/code&gt; o &lt;code&gt;infinity&lt;/code&gt; . El que se utiliza es la implementaci&amp;oacute;n definida.</target>
        </trans-unit>
        <trans-unit id="09b597147660929213aeb7af0d263130200afccc" translate="yes" xml:space="preserve">
          <source>The floating-point environment access and modification is only meaningful when &lt;a href=&quot;../preprocessor/impl&quot;&gt;&lt;code&gt; #pragma STDC FENV_ACCESS&lt;/code&gt;&lt;/a&gt; is supported and is set to &lt;code&gt;ON&lt;/code&gt;. Otherwise the implementation is free to assume that floating-point control modes are always the default ones and that floating-point status flags are never tested or modified. In practice, few current compilers, such as HP aCC, Oracle Studio, or IBM XL, support the &lt;code&gt;#pragma&lt;/code&gt; explicitly, but most compilers allow meaningful access to the floating-point environment anyway.</source>
          <target state="translated">El acceso y la modificaci&amp;oacute;n del entorno de punto flotante solo tienen sentido cuando &lt;a href=&quot;../preprocessor/impl&quot;&gt; &lt;code&gt; #pragma STDC FENV_ACCESS&lt;/code&gt; &lt;/a&gt; es compatible y se establece en &lt;code&gt;ON&lt;/code&gt; . De lo contrario, la implementaci&amp;oacute;n es libre de suponer que los modos de control de punto flotante son siempre los predeterminados y que los indicadores de estado de punto flotante nunca se prueban o modifican. En la pr&amp;aacute;ctica, pocos compiladores actuales, como HP aCC, Oracle Studio o IBM XL, admiten el &lt;code&gt;#pragma&lt;/code&gt; expl&amp;iacute;citamente, pero la mayor&amp;iacute;a de los compiladores permiten un acceso significativo al entorno de punto flotante de todos modos.</target>
        </trans-unit>
        <trans-unit id="d88a487f9a81a8c43facb1ab36c14a9792a2394f" translate="yes" xml:space="preserve">
          <source>The floating-point environment is the set of floating-point status flags and control modes supported by the implementation. It is thread-local, each thread inherits the initial state of its floating-point environment from the parent thread. Floating-point operations modify the floating-point status flags to indicate abnormal results or auxiliary information. The state of floating-point control modes affects the outcomes of some floating-point operations.</source>
          <target state="translated">El entorno de punto flotante es el conjunto de banderas de estado de punto flotante y modos de control que apoya la aplicación.Es un hilo local,cada hilo hereda el estado inicial de su entorno de punto flotante del hilo padre.Las operaciones en coma flotante modifican las banderas de estado de coma flotante para indicar resultados anormales o información auxiliar.El estado de los modos de control en punto flotante afecta a los resultados de algunas operaciones en punto flotante.</target>
        </trans-unit>
        <trans-unit id="b5512f3fb37483c2ac0de738d3e042411a6ef7a1" translate="yes" xml:space="preserve">
          <source>The floating-point exceptions are not related to the C++ exceptions. When a floating-point operation raises a floating-point exception, the status of the floating-point environment changes, which can be tested with &lt;code&gt;&lt;a href=&quot;fenv/fetestexcept&quot;&gt;std::fetestexcept&lt;/a&gt;&lt;/code&gt;, but the execution of a C++ program on most implementations continues uninterrupted.</source>
          <target state="translated">Las excepciones de punto flotante no est&amp;aacute;n relacionadas con las excepciones de C ++. Cuando una operaci&amp;oacute;n de punto flotante genera una excepci&amp;oacute;n de punto flotante, el estado del entorno de punto flotante cambia, lo que se puede probar con &lt;code&gt;&lt;a href=&quot;fenv/fetestexcept&quot;&gt;std::fetestexcept&lt;/a&gt;&lt;/code&gt; , pero la ejecuci&amp;oacute;n de un programa C ++ en la mayor&amp;iacute;a de las implementaciones contin&amp;uacute;a sin interrupciones.</target>
        </trans-unit>
        <trans-unit id="1f30dcca8094f65496cbe7b9cb343a1867b9353f" translate="yes" xml:space="preserve">
          <source>The floating-point remainder of the division operation &lt;code&gt;x/y&lt;/code&gt; calculated by this function is exactly the value &lt;code&gt;x - n*y&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;x/y&lt;/code&gt; with its fractional part truncated.</source>
          <target state="translated">El resto de coma flotante de la operaci&amp;oacute;n de divisi&amp;oacute;n &lt;code&gt;x/y&lt;/code&gt; calculada por esta funci&amp;oacute;n es exactamente el valor &lt;code&gt;x - n*y&lt;/code&gt; , donde &lt;code&gt;n&lt;/code&gt; es &lt;code&gt;x/y&lt;/code&gt; con su parte fraccionaria truncada.</target>
        </trans-unit>
        <trans-unit id="4e3cc83866f6c3e25d14af7dc8655c91815c1a49" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../types#Type_properties&quot;&gt;type properties&lt;/a&gt; all satisfy &lt;strong&gt;UnaryTypeTrait&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes &lt;a href=&quot;../types#Type_properties&quot;&gt;propiedades de tipo&lt;/a&gt; satisfacen &lt;strong&gt;UnaryTypeTrait&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c6933bfa65ffad8899ab7c8d9bdf9518aad67471" translate="yes" xml:space="preserve">
          <source>The following Unicode character ranges are allowed in identifiers:</source>
          <target state="translated">Los siguientes rangos de caracteres Unicode están permitidos en los identificadores:</target>
        </trans-unit>
        <trans-unit id="ce299bcc84d68ff1aba24c28b4e197eaad883716" translate="yes" xml:space="preserve">
          <source>The following Unicode character ranges are not allowed to begin an identifier:</source>
          <target state="translated">Los siguientes rangos de caracteres Unicode no están permitidos para iniciar un identificador:</target>
        </trans-unit>
        <trans-unit id="715611d9963a8924bbf3fe5d5a3d4258306a6df4" translate="yes" xml:space="preserve">
          <source>The following additional macro names may be predefined by the implementations.</source>
          <target state="translated">Las implementaciones pueden predefinir los siguientes nombres de macro adicionales.</target>
        </trans-unit>
        <trans-unit id="e24798a70fec6c195e663fa63cc0f808e58ff2b3" translate="yes" xml:space="preserve">
          <source>The following algorithm is used (adapted from the initialization sequence of the Mersenne Twister generator by &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html&quot;&gt;Makoto Matsumoto and Takuji Nishimura&lt;/a&gt;, incorporating the improvements made by &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/M062821.pdf&quot;&gt;Mutsuo Saito in 2007&lt;/a&gt;).</source>
          <target state="translated">Se utiliza el siguiente algoritmo (adaptado de la secuencia de inicializaci&amp;oacute;n del generador Mersenne Twister por &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html&quot;&gt;Makoto Matsumoto y Takuji Nishimura&lt;/a&gt; , incorporando las mejoras realizadas por &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/M062821.pdf&quot;&gt;Mutsuo Saito en 2007&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2314e69040372621d3d5adf2b163840d6d43e0d3" translate="yes" xml:space="preserve">
          <source>The following aspects of the preprocessor can be controlled:</source>
          <target state="translated">Se pueden controlar los siguientes aspectos del preprocesador:</target>
        </trans-unit>
        <trans-unit id="74706a2fb1fc7153905dea134481e83cf2e40ad9" translate="yes" xml:space="preserve">
          <source>The following auxiliary types are defined:</source>
          <target state="translated">Se definen los siguientes tipos de auxiliares:</target>
        </trans-unit>
        <trans-unit id="d1942c772e8a48f22736696ffec9a1f67d5b278c" translate="yes" xml:space="preserve">
          <source>The following behavior-changing defect reports were applied retroactively to previously published C++ standards.</source>
          <target state="translated">Los siguientes informes de defectos de cambio de comportamiento se aplicaron retroactivamente a los estándares C++previamente publicados.</target>
        </trans-unit>
        <trans-unit id="d05b783a3d925110f2634b9ba6635b8a281741d7" translate="yes" xml:space="preserve">
          <source>The following character classes are always recognized, in both narrow and wide character forms, and the classifications returned (with &lt;code&gt;icase == false&lt;/code&gt;) correspond to the matching classifications obtained by the &lt;code&gt;&lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; facet of the imbued locale, as follows:</source>
          <target state="translated">Las siguientes clases de caracteres siempre se reconocen, tanto en formas de caracteres angostas como anchas, y las clasificaciones devueltas (con &lt;code&gt;icase == false&lt;/code&gt; ) corresponden a las clasificaciones coincidentes obtenidas por la faceta &lt;code&gt;&lt;a href=&quot;../../locale/ctype&quot;&gt;std::ctype&lt;/a&gt;&lt;/code&gt; de la configuraci&amp;oacute;n regional imbuida, de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="bf5ea285c72c7d87a0b9f0ab566e300cf0d96f2e" translate="yes" xml:space="preserve">
          <source>The following chart contains all 128 ASCII decimal &lt;b&gt;(dec)&lt;/b&gt;, octal &lt;b&gt;(oct)&lt;/b&gt;, hexadecimal &lt;b&gt;(hex)&lt;/b&gt; and character &lt;b&gt;(ch)&lt;/b&gt; codes.</source>
          <target state="translated">La siguiente tabla contiene los 128 c&amp;oacute;digos ASCII decimales &lt;b&gt;(dec)&lt;/b&gt; , octales &lt;b&gt;(oct)&lt;/b&gt; , hexadecimales &lt;b&gt;(hexadecimales)&lt;/b&gt; y de caracteres &lt;b&gt;(ch)&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="c747583390a9820664d5aa67d943444234016ea2" translate="yes" xml:space="preserve">
          <source>The following class of the standard library is an error condition enum: &lt;code&gt;&lt;a href=&quot;../errc&quot;&gt;std::errc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La siguiente clase de la biblioteca est&amp;aacute;ndar es una condici&amp;oacute;n de error enum: &lt;code&gt;&lt;a href=&quot;../errc&quot;&gt;std::errc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8364204eadf48b5388b1f4de9301dfb37e2a396" translate="yes" xml:space="preserve">
          <source>The following classes of the standard library are an error code enum:</source>
          <target state="translated">Las siguientes clases de la biblioteca estándar son un código de error enum:</target>
        </trans-unit>
        <trans-unit id="8732ed855c5d920731ff99c5c10a7b6ebb60e4fe" translate="yes" xml:space="preserve">
          <source>The following code at first replaces all occurrences of &lt;code&gt;8&lt;/code&gt; with &lt;code&gt;88&lt;/code&gt; in a vector of integers. Then it replaces all values less than &lt;code&gt;5&lt;/code&gt; with 55.</source>
          <target state="translated">El siguiente c&amp;oacute;digo al principio reemplaza todas las ocurrencias de &lt;code&gt;8&lt;/code&gt; con &lt;code&gt;88&lt;/code&gt; en un vector de enteros. Luego, reemplaza todos los valores inferiores a &lt;code&gt;5&lt;/code&gt; con 55.</target>
        </trans-unit>
        <trans-unit id="82f830d3ac2fe040b835d20a0c75f5f9921a6510" translate="yes" xml:space="preserve">
          <source>The following code is an implementation of merge sort.</source>
          <target state="translated">El siguiente código es una implementación de tipo fusión.</target>
        </trans-unit>
        <trans-unit id="f2984910c4f4c900817f0230094b1cf9623f27d6" translate="yes" xml:space="preserve">
          <source>The following code moves thread objects (which themselves are not copyable) from one container to another.</source>
          <target state="translated">El siguiente código mueve objetos de hilo (que en sí mismos no son copiables)de un contenedor a otro.</target>
        </trans-unit>
        <trans-unit id="3d1d996516f45090f4b4bb31b8fbcff81de4e254" translate="yes" xml:space="preserve">
          <source>The following code outputs a string while erasing the spaces on the fly.</source>
          <target state="translated">El siguiente código produce una cadena mientras borra los espacios sobre la marcha.</target>
        </trans-unit>
        <trans-unit id="6681c260a962e645895e071bac822e36d3efd9cf" translate="yes" xml:space="preserve">
          <source>The following code prints all six permutations of the string &quot;abc&quot; in reverse order.</source>
          <target state="translated">El siguiente código imprime las seis permutaciones de la cadena &quot;abc&quot; en orden inverso.</target>
        </trans-unit>
        <trans-unit id="1e98cb5078430d68744bd2c66d23b0ba09341ee5" translate="yes" xml:space="preserve">
          <source>The following code prints all three permutations of the string &quot;aba&quot;</source>
          <target state="translated">El siguiente código imprime las tres permutaciones de la cadena &quot;aba&quot;</target>
        </trans-unit>
        <trans-unit id="7d753163245e6f077f885c57e9d563d585a1f2a3" translate="yes" xml:space="preserve">
          <source>The following code randomly shuffles the integers 1..10:</source>
          <target state="translated">El siguiente código baraja aleatoriamente los números enteros 1..10:</target>
        </trans-unit>
        <trans-unit id="96fdf8bcc92fd6fc1514e41f0d3d41b7c151059a" translate="yes" xml:space="preserve">
          <source>The following code redirects &lt;code&gt;stdout&lt;/code&gt; to a file.</source>
          <target state="translated">El siguiente c&amp;oacute;digo redirige &lt;code&gt;stdout&lt;/code&gt; a un archivo.</target>
        </trans-unit>
        <trans-unit id="1bf8e44086be369b39f43315df08ec560ee7a479" translate="yes" xml:space="preserve">
          <source>The following code removes all spaces from a string by shifting all non-space characters to the left and then erasing the extra. This is an example of &lt;a href=&quot;https://en.wikipedia.org/wiki/Erase-remove_idiom&quot;&gt;erase-remove idiom&lt;/a&gt;.</source>
          <target state="translated">El siguiente c&amp;oacute;digo elimina todos los espacios de una cadena desplazando todos los caracteres que no son espacios a la izquierda y luego borra el extra. Este es un ejemplo de idioma &lt;a href=&quot;https://en.wikipedia.org/wiki/Erase-remove_idiom&quot;&gt;borrar-eliminar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9be8c7e04c9b3934c9c5ede040503539ce05a2fe" translate="yes" xml:space="preserve">
          <source>The following code searches for any of specified integers in a vector of integers:</source>
          <target state="translated">El siguiente código busca cualquiera de los números enteros especificados en un vector de números enteros:</target>
        </trans-unit>
        <trans-unit id="00e613fa44e8f8f364e737178e8c427efa44a732" translate="yes" xml:space="preserve">
          <source>The following code shows how to specialize the &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;std::hash&lt;/a&gt;&lt;/code&gt; template for a custom class.</source>
          <target state="translated">El siguiente c&amp;oacute;digo muestra c&amp;oacute;mo especializar la plantilla &lt;code&gt;&lt;a href=&quot;../hash&quot;&gt;std::hash&lt;/a&gt;&lt;/code&gt; para una clase personalizada.</target>
        </trans-unit>
        <trans-unit id="23ddc096f3f59b5526632dcad35827175dfd931c" translate="yes" xml:space="preserve">
          <source>The following code shows one possible output of a hash function used on a string:</source>
          <target state="translated">El siguiente código muestra una posible salida de una función hash utilizada en una cadena:</target>
        </trans-unit>
        <trans-unit id="2bae909517e9a54627909804e4056eeb94460b31" translate="yes" xml:space="preserve">
          <source>The following code shows one possible output of a hash function used on several bitsets:</source>
          <target state="translated">El siguiente código muestra una posible salida de una función hash utilizada en varios conjuntos de bits:</target>
        </trans-unit>
        <trans-unit id="61f8a465316f532cbe57d8d9926e5d98dcebc6f3" translate="yes" xml:space="preserve">
          <source>The following code shows several examples (both valid and invalid) of how to construct durations:</source>
          <target state="translated">El siguiente código muestra varios ejemplos (tanto válidos como inválidos)de cómo construir duraciones:</target>
        </trans-unit>
        <trans-unit id="658a27868658d811802dfd09763d67bfdebbe052" translate="yes" xml:space="preserve">
          <source>The following code shows several usage cases of the</source>
          <target state="translated">El siguiente código muestra varios casos de uso de la</target>
        </trans-unit>
        <trans-unit id="75667b2fdd4a0d1d95649b65bd0a58cfcd96e3fd" translate="yes" xml:space="preserve">
          <source>The following code shows the creation of function objects with a placeholder argument.</source>
          <target state="translated">El siguiente código muestra la creación de objetos de función con un argumento de marcador de posición.</target>
        </trans-unit>
        <trans-unit id="b44e4d7ca655051be7c514be24da563a5ff68434" translate="yes" xml:space="preserve">
          <source>The following code sorts a vector of integers and copies them into a smaller and a larger vector.</source>
          <target state="translated">El siguiente código clasifica un vector de enteros y los copia en un vector más pequeño y uno más grande.</target>
        </trans-unit>
        <trans-unit id="daf4007146a4b83bcf3ac266d29e581ec3798877" translate="yes" xml:space="preserve">
          <source>The following code sorts an array of integers using &lt;code&gt;qsort()&lt;/code&gt;.</source>
          <target state="translated">El siguiente c&amp;oacute;digo ordena una matriz de enteros usando &lt;code&gt;qsort()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8207a8457c0eb26818d87ab569977e36158d049b" translate="yes" xml:space="preserve">
          <source>The following code uses  to assign one &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo se utiliza para asignar un &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="c1863f15396f1a247bc85cbf9db816e62ce9021f" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;assign&lt;/code&gt; to add several characters to a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo utiliza &lt;code&gt;assign&lt;/code&gt; para agregar varios caracteres a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="95d74893928f5f4c485a639c2902038749eb9c54" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;assign&lt;/code&gt; to add several characters to a &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo utiliza &lt;code&gt;assign&lt;/code&gt; para agregar varios caracteres a &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="aab485e9100b3af1ee0f47fb24b070b518f62792" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;assign&lt;/code&gt; to add several characters to a &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo utiliza &lt;code&gt;assign&lt;/code&gt; para agregar varios caracteres a &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ab47a7e2c6f0556c41e8da5e3e196e2efc53d9ef" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;assign&lt;/code&gt; to add several characters to a &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo utiliza &lt;code&gt;assign&lt;/code&gt; para agregar varios caracteres a un &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f62b42a1746d9980942772d9163dc2de66ef406c" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;back&lt;/code&gt; to display the last element of a &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;back&lt;/code&gt; para mostrar el &amp;uacute;ltimo elemento de un &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9cccf7b603d69142f3f75f0954199fe1de7e3ac2" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;back&lt;/code&gt; to display the last element of a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;back&lt;/code&gt; para mostrar el &amp;uacute;ltimo elemento de &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f205cab6f9ab5cee8032e77137686863714505e7" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;back&lt;/code&gt; to display the last element of a &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;back&lt;/code&gt; para mostrar el &amp;uacute;ltimo elemento de &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6845338e9d3aecd8c4ee707b50d5f94ca1fb1f7c" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;back&lt;/code&gt; to display the last element of a &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;back&lt;/code&gt; para mostrar el &amp;uacute;ltimo elemento de &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="181361b9a1f17c4f72ca736bc8ef522c9e95ed79" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;emplace_back&lt;/code&gt; to append an object of type &lt;code&gt;President&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;. It demonstrates how &lt;code&gt;emplace_back&lt;/code&gt; forwards parameters to the &lt;code&gt;President&lt;/code&gt; constructor and shows how using &lt;code&gt;emplace_back&lt;/code&gt; avoids the extra copy or move operation required when using &lt;code&gt;push_back&lt;/code&gt;.</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;emplace_back&lt;/code&gt; para agregar un objeto de tipo &lt;code&gt;President&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; . Demuestra c&amp;oacute;mo &lt;code&gt;emplace_back&lt;/code&gt; reenv&amp;iacute;a los par&amp;aacute;metros al constructor &lt;code&gt;President&lt;/code&gt; y muestra c&amp;oacute;mo el uso de &lt;code&gt;emplace_back&lt;/code&gt; evita la operaci&amp;oacute;n de copia o movimiento adicional requerida cuando se usa &lt;code&gt;push_back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="560056d34fecac1f14913fb6ef39172e1f3a8404" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;emplace_back&lt;/code&gt; to append an object of type &lt;code&gt;President&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;. It demonstrates how &lt;code&gt;emplace_back&lt;/code&gt; forwards parameters to the &lt;code&gt;President&lt;/code&gt; constructor and shows how using &lt;code&gt;emplace_back&lt;/code&gt; avoids the extra copy or move operation required when using &lt;code&gt;push_back&lt;/code&gt;.</source>
          <target state="translated">El siguiente c&amp;oacute;digo utiliza &lt;code&gt;emplace_back&lt;/code&gt; para agregar un objeto de tipo &lt;code&gt;President&lt;/code&gt; e a una &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; . Demuestra c&amp;oacute;mo &lt;code&gt;emplace_back&lt;/code&gt; reenv&amp;iacute;a los par&amp;aacute;metros al constructor &lt;code&gt;President&lt;/code&gt; y muestra c&amp;oacute;mo el uso de &lt;code&gt;emplace_back&lt;/code&gt; evita la operaci&amp;oacute;n de copia o movimiento adicional requerida cuando se usa &lt;code&gt;push_back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4425e3c307c08594ad5519abfe04eb3fb4befe7" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;emplace_back&lt;/code&gt; to append an object of type &lt;code&gt;President&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt;. It demonstrates how &lt;code&gt;emplace_back&lt;/code&gt; forwards parameters to the &lt;code&gt;President&lt;/code&gt; constructor and shows how using &lt;code&gt;emplace_back&lt;/code&gt; avoids the extra copy or move operation required when using &lt;code&gt;push_back&lt;/code&gt;.</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;emplace_back&lt;/code&gt; para agregar un objeto de tipo &lt;code&gt;President&lt;/code&gt; e a un &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; . Demuestra c&amp;oacute;mo &lt;code&gt;emplace_back&lt;/code&gt; reenv&amp;iacute;a los par&amp;aacute;metros al constructor &lt;code&gt;President&lt;/code&gt; y muestra c&amp;oacute;mo el uso de &lt;code&gt;emplace_back&lt;/code&gt; evita la operaci&amp;oacute;n de copia o movimiento adicional requerida cuando se usa &lt;code&gt;push_back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42ffd2d1ac0d4cdbb96f92d96f0af6eceac098a6" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="78b999536bab5616600c00c9f174f27cb2f50623" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="59facc6b748c2accf7feefc7cae0fe5350c31737" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="294f922f24787de54a6841b0efc9bdf721c127dd" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="9834b56eb9cb58a559e764fc7ffc0967e672148e" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;std::map&lt;/a&gt;&amp;lt;int, int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;std::map&lt;/a&gt;&amp;lt;int, int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="32e8f5c6c4b354a661cc73535a2faecf185c9a07" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../multimap&quot;&gt;std::multimap&lt;/a&gt;&amp;lt;int, int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si &lt;code&gt;&lt;a href=&quot;../multimap&quot;&gt;std::multimap&lt;/a&gt;&amp;lt;int, int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="d66087b7ce968da2dce5b4a9be6a4e7989f061d4" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../multiset&quot;&gt;std::multiset&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si &lt;code&gt;&lt;a href=&quot;../multiset&quot;&gt;std::multiset&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="e5970161de20c21ad18db82f592f9531ae65f88f" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;std::set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;std::set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="ead28da2630b4b786759d7d27b9535ed0faee763" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&amp;lt;int,int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&amp;lt;int,int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="4bb497a58f9b0aa09af57ea73a4d4104f4c40c62" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&amp;lt;int,int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo utiliza &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&amp;lt;int,int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="4c701030fc833aaa761e308e0a3b2858930654aa" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="b5b62fd05d0981de0d7ddc30e16bfe35ea915307" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;empty&lt;/code&gt; to check if a &lt;code&gt;&lt;a href=&quot;../unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contains any elements:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;empty&lt;/code&gt; para verificar si un &lt;code&gt;&lt;a href=&quot;../unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; contiene alg&amp;uacute;n elemento:</target>
        </trans-unit>
        <trans-unit id="7f2775ed77c855a7770c1ec51b1677400d10b019" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;equal()&lt;/code&gt; to test if a string is a palindrome.</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;equal()&lt;/code&gt; para probar si una cadena es un pal&amp;iacute;ndromo.</target>
        </trans-unit>
        <trans-unit id="fea7ab922e2504722617e162b2f67cfa179108d6" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;fill()&lt;/code&gt; to set all of the elements of a vector of integers to -1:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;fill()&lt;/code&gt; para establecer todos los elementos de un vector de enteros en -1:</target>
        </trans-unit>
        <trans-unit id="c6a0b1c51a1296d332287bfef1bfd6aada8a81aa" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;fill_n()&lt;/code&gt; to assign -1 to the first half of a vector of integers:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;fill_n()&lt;/code&gt; para asignar -1 a la primera mitad de un vector de enteros:</target>
        </trans-unit>
        <trans-unit id="ba3ba8d8b2c1786295ffc6e4eb81877ea4072154" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;find_end()&lt;/code&gt; to search for two different sequences of numbers.</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;find_end()&lt;/code&gt; para buscar dos secuencias diferentes de n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="3f4de8e6160f6bc5ca86d1c19be35c2833a64af5" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;front&lt;/code&gt; to display the first element of a &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&amp;lt;char, 6&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;front&lt;/code&gt; para mostrar el primer elemento de &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&amp;lt;char, 6&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="82e4c5cd2f628e39e7cb8f9caf2d4b2dace79288" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;front&lt;/code&gt; to display the first element of a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;front&lt;/code&gt; para mostrar el primer elemento de &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3bd292b4d7a1c8b57da39f8790a4ed7a5cf20de6" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;front&lt;/code&gt; to display the first element of a &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;front&lt;/code&gt; para mostrar el primer elemento de &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a3c90736d0346e9d8a75c6171b1a5fe1b4f51a2f" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;front&lt;/code&gt; to display the first element of a &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;front&lt;/code&gt; para mostrar el primer elemento de &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a09b7805d327d7fc1ba23779c627f69766f10185" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;front&lt;/code&gt; to display the first element of a &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;front&lt;/code&gt; para mostrar el primer elemento de &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;char&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5961fd51065a540e74bed600b8b1a3dcf70175ce" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../forward_list&quot;&gt;std::forward_list&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="53bde90bfe9c57282e5b87b39fc52aecdfb30b41" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar una &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; a otra:</target>
        </trans-unit>
        <trans-unit id="6ecfed2f177677006eecac7d76dc0ccfb909392d" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;std::map&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;std::map&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="67523d3393b7310a0aa9cf3cffcd550ccc4b84b4" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../multimap&quot;&gt;std::multimap&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../multimap&quot;&gt;std::multimap&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="902214c8855d223d0e77f4fe9591426f8944e7d1" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../multiset&quot;&gt;std::multiset&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../multiset&quot;&gt;std::multiset&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="6f51f792b41f543ab45cee3397a81737d84a525a" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;std::set&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;std::set&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="385dce21a913489614b538e5e7c84c1f9be175a3" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="99cdd8e5c063b51f08dfcfd0a38ebfab272716c1" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="0149eb1d951922170f2c79dabe74381632a6cee0" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="15fc8c2fb14c7949092eae56b799189af05c13de" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="a40867c60315bc089e9e83e842ecb1acbe656608" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator=&lt;/code&gt; to assign one &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; to another:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa &lt;code&gt;operator=&lt;/code&gt; para asignar un &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&lt;/code&gt; a otro:</target>
        </trans-unit>
        <trans-unit id="66dd3415186bd6ecc44b88aeada97fe8a4f6f307" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator[]&lt;/code&gt; to read from and write to a &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;operator[]&lt;/code&gt; para leer y escribir en &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2790a3c9be04ca78b6550876913d5ef5ccbde5ef" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator[]&lt;/code&gt; to read from and write to a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;operator[]&lt;/code&gt; para leer y escribir en &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="639c4fe277604645d83fc40a5acf3052f4f02544" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;operator[]&lt;/code&gt; to read from and write to a &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;operator[]&lt;/code&gt; para leer y escribir en &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f48eaa9496b991bd3d0eb50c0836a412f6fe8933" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El c&amp;oacute;digo siguiente utiliza &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en un &lt;code&gt;&lt;a href=&quot;../array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5558ee4a0bde449bbea05f3ff4c4921ae478d58d" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en un &lt;code&gt;&lt;a href=&quot;../deque&quot;&gt;std::deque&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ab3123f588ec261d38605e05eb8a58184a794dc2" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El c&amp;oacute;digo siguiente utiliza &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos de un &lt;code&gt;&lt;a href=&quot;../list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c9cd102e7dd740e049c929043487fbf656d9927" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;std::map&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en un &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;std::map&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4923520809b85ccd4900db40956492eb829ff259" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../multimap&quot;&gt;std::multimap&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en un &lt;code&gt;&lt;a href=&quot;../multimap&quot;&gt;std::multimap&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="367093cd12e46fd60d907dd8481b0dff622fb306" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../multiset&quot;&gt;std::multiset&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en un &lt;code&gt;&lt;a href=&quot;../multiset&quot;&gt;std::multiset&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9fdc7fc1496d0cd337e08b671bd8ed8e02598dd4" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;std::set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en un &lt;code&gt;&lt;a href=&quot;../set&quot;&gt;std::set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4f74be33ecfdae4375ef0773c434b5c706ea378e" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en un &lt;code&gt;&lt;a href=&quot;../unordered_map&quot;&gt;std::unordered_map&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb705db53382014a2ea445c532a9ebee11475d22" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en &lt;code&gt;&lt;a href=&quot;../unordered_multimap&quot;&gt;std::unordered_multimap&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0d65c5a16544be53346eefb8fd2d37698a127969" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en &lt;code&gt;&lt;a href=&quot;../unordered_multiset&quot;&gt;std::unordered_multiset&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="548853a7a6bceff6cb33b2b7379b7d3917031bee" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en &lt;code&gt;&lt;a href=&quot;../unordered_set&quot;&gt;std::unordered_set&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4104db0b3e3262de82ab7e2b4688216bdb5503fa" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;size&lt;/code&gt; to display the number of elements in a &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">El siguiente c&amp;oacute;digo usa el &lt;code&gt;size&lt;/code&gt; para mostrar el n&amp;uacute;mero de elementos en &lt;code&gt;&lt;a href=&quot;../vector&quot;&gt;std::vector&lt;/a&gt;&amp;lt;int&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1cc0cc8f9e7d02f4ffe69f8908f54fbe730ba21f" translate="yes" xml:space="preserve">
          <source>The following code uses copy to both copy the contents of one vector to another and to display the resulting vector:</source>
          <target state="translated">El siguiente código utiliza la copia tanto para copiar el contenido de un vector a otro como para mostrar el vector resultante:</target>
        </trans-unit>
        <trans-unit id="68bb58bde9d239bfa5b3f88d2d2c7df862b599f9" translate="yes" xml:space="preserve">
          <source>The following code uses transform to convert a string in place to uppercase using the toupper function and then transforms each char to its ordinal value:</source>
          <target state="translated">El siguiente código utiliza la transformación para convertir una cadena en su lugar a mayúsculas utilizando la función toupper y luego transforma cada carácter a su valor ordinal:</target>
        </trans-unit>
        <trans-unit id="a3c25657b5cd7f5592c99855d3ec7267e6fe484c" translate="yes" xml:space="preserve">
          <source>The following constants are also defined:</source>
          <target state="translated">También se definen las siguientes constantes:</target>
        </trans-unit>
        <trans-unit id="c4925dbfe1aa827f2041e1033ebe0a6005a26692" translate="yes" xml:space="preserve">
          <source>The following constants denoting individual bits are defined by the standard library:</source>
          <target state="translated">Las siguientes constantes que denotan bits individuales son definidas por la biblioteca estándar:</target>
        </trans-unit>
        <trans-unit id="10bb2a7b9ba858f9e871c57ccba765a9f92f8560" translate="yes" xml:space="preserve">
          <source>The following contexts require a</source>
          <target state="translated">Los siguientes contextos requieren una</target>
        </trans-unit>
        <trans-unit id="009d4588e5ae326cecee174c71b20e5192d349ff" translate="yes" xml:space="preserve">
          <source>The following contexts require an</source>
          <target state="translated">Los siguientes contextos requieren una</target>
        </trans-unit>
        <trans-unit id="a8be823b41f88b6bb5fe26fd40c903501eb8b33d" translate="yes" xml:space="preserve">
          <source>The following conversion specifiers are available:</source>
          <target state="translated">Se dispone de las siguientes especificaciones de conversión:</target>
        </trans-unit>
        <trans-unit id="5c003d2f36ae5692bd45f365d1d7025783a9c1c9" translate="yes" xml:space="preserve">
          <source>The following copy prints a vector, replacing all values over 5 with 99 on the fly.</source>
          <target state="translated">La siguiente copia imprime un vector,reemplazando todos los valores superiores a 5 por 99 sobre la marcha.</target>
        </trans-unit>
        <trans-unit id="7ac588dfc54923ad58981e4ced20fbb675e510c8" translate="yes" xml:space="preserve">
          <source>The following declarations also declare exactly the same function.</source>
          <target state="translated">Las siguientes declaraciones también declaran exactamente la misma función.</target>
        </trans-unit>
        <trans-unit id="0e1e782882f70b3f7f134569ed77e2b2acd81be7" translate="yes" xml:space="preserve">
          <source>The following entities are not objects: value, reference, function, enumerator, type, non-static class member, bit-field, template, class or function template specialization, namespace, parameter pack, and &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">Las siguientes entidades no son objetos: valor, referencia, funci&amp;oacute;n, enumerador, tipo, miembro de clase no est&amp;aacute;tico, campo de bits, plantilla, especializaci&amp;oacute;n de plantilla de clase o funci&amp;oacute;n, espacio de nombres, paquete de par&amp;aacute;metros y &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e39d176344c3e85e78002c68d7e8e5b51e271c28" translate="yes" xml:space="preserve">
          <source>The following enumerators are also defined:</source>
          <target state="translated">También se definen los siguientes enumeradores:</target>
        </trans-unit>
        <trans-unit id="9d7f6bc390ae3470d1ec7b1d1db9a94c08fbbca3" translate="yes" xml:space="preserve">
          <source>The following escape sequences are available (extra escape sequences may be provided with implementation-defined semantics):</source>
          <target state="translated">Se dispone de las siguientes secuencias de escape (se pueden proporcionar secuencias de escape adicionales con semántica definida por la aplicación):</target>
        </trans-unit>
        <trans-unit id="a3edf11648f50f67dc38400fbf749312a8a6023f" translate="yes" xml:space="preserve">
          <source>The following example applies &lt;code&gt;&lt;a href=&quot;random_shuffle&quot;&gt;std::shuffle&lt;/a&gt;&lt;/code&gt; to a vector of &lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; iterators since &lt;code&gt;&lt;a href=&quot;random_shuffle&quot;&gt;std::shuffle&lt;/a&gt;&lt;/code&gt; cannot be applied to a &lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; directly. &lt;code&gt;std::iota&lt;/code&gt; is used to populate both containers.</source>
          <target state="translated">El siguiente ejemplo aplica &lt;code&gt;&lt;a href=&quot;random_shuffle&quot;&gt;std::shuffle&lt;/a&gt;&lt;/code&gt; a un vector de iteradores &lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; ya que &lt;code&gt;&lt;a href=&quot;random_shuffle&quot;&gt;std::shuffle&lt;/a&gt;&lt;/code&gt; no puede aplicarse directamente a &lt;code&gt;&lt;a href=&quot;../container/list&quot;&gt;std::list&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;std::iota&lt;/code&gt; se usa para llenar ambos contenedores.</target>
        </trans-unit>
        <trans-unit id="98227c78e55a55bae11e8faaf05e67543f156c99" translate="yes" xml:space="preserve">
          <source>The following example calculates the probability that a normal variate is on the interval (x1, x2).</source>
          <target state="translated">En el siguiente ejemplo se calcula la probabilidad de que una variante normal se encuentre en el intervalo (x1,x2).</target>
        </trans-unit>
        <trans-unit id="666096a94f3ce76da429785aaa9438c9e1071127" translate="yes" xml:space="preserve">
          <source>The following example changes the string representations of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">El siguiente ejemplo cambia las representaciones de cadena de &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50c6037577b844c05a202750d8ccfe295c1ce7a2" translate="yes" xml:space="preserve">
          <source>The following example demonstrated retrieval of messages: on a typical GNU/Linux system it reads from &lt;code&gt;/usr/share/locale/de/LC_MESSAGES/sed.mo&lt;/code&gt;.</source>
          <target state="translated">El siguiente ejemplo demostr&amp;oacute; la recuperaci&amp;oacute;n de mensajes: en un sistema GNU / Linux t&amp;iacute;pico, lee de &lt;code&gt;/usr/share/locale/de/LC_MESSAGES/sed.mo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff5128c9a45dbdfe7028be5b5809eefa99fbcd68" translate="yes" xml:space="preserve">
          <source>The following example demonstrates consuming the UTF-8 BOM.</source>
          <target state="translated">El siguiente ejemplo demuestra el consumo del BOM UTF-8.</target>
        </trans-unit>
        <trans-unit id="e84fe7b382f35acf36a0571545a93eb16f150929" translate="yes" xml:space="preserve">
          <source>The following example demonstrates decoding of UTF-16le file on a system with 32-bit &lt;code&gt;wchar_t&lt;/code&gt;. On a system with 16-bit &lt;code&gt;wchar_t&lt;/code&gt;, decoding of the third character will fail because &lt;code&gt;std::codecvt_utf16&amp;lt;char16_t&amp;gt;&lt;/code&gt; produces UCS2, not UTF-16.</source>
          <target state="translated">El siguiente ejemplo muestra la decodificaci&amp;oacute;n del archivo UTF-16le en un sistema con &lt;code&gt;wchar_t&lt;/code&gt; de 32 bits . En un sistema con &lt;code&gt;wchar_t&lt;/code&gt; de 16 bits , la decodificaci&amp;oacute;n del tercer car&amp;aacute;cter fallar&amp;aacute; porque &lt;code&gt;std::codecvt_utf16&amp;lt;char16_t&amp;gt;&lt;/code&gt; produce UCS2, no UTF-16.</target>
        </trans-unit>
        <trans-unit id="4e02d0927ca40ac3f20330707ae5d9dc6a060343" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;code&gt;destroy&lt;/code&gt; to destroy a contiguous sequence of elements.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo usar &lt;code&gt;destroy&lt;/code&gt; para destruir una secuencia contigua de elementos.</target>
        </trans-unit>
        <trans-unit id="a18cbf051d93d448e8ae3290a9d188e70f5dbde2" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;code&gt;destroy_at&lt;/code&gt; to destroy a contiguous sequence of elements.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo usar &lt;code&gt;destroy_at&lt;/code&gt; para destruir una secuencia contigua de elementos.</target>
        </trans-unit>
        <trans-unit id="6b7aaae085caf053cea47938c13ce2e0d54c864d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;code&gt;destroy_n&lt;/code&gt; to destroy a contiguous sequence of elements.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo usar &lt;code&gt;destroy_n&lt;/code&gt; para destruir una secuencia contigua de elementos.</target>
        </trans-unit>
        <trans-unit id="9c3768a533bb5638c1a2aba447121ead46ba7e0c" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;code&gt;getline&lt;/code&gt; function to read user's input and how to process file line by line.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo usar la funci&amp;oacute;n &lt;code&gt;getline&lt;/code&gt; para leer la entrada del usuario y c&amp;oacute;mo procesar el archivo l&amp;iacute;nea por l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="4ca2bda89b867388cbda9ab2651ddb4a53f60b3b" translate="yes" xml:space="preserve">
          <source>The following example demonstrates katakana to hiragana character mapping.</source>
          <target state="translated">El siguiente ejemplo demuestra el mapeo de caracteres de katakana a hiragana.</target>
        </trans-unit>
        <trans-unit id="b4511608a2770fc85ea2f394bd1d3db73c33a057" translate="yes" xml:space="preserve">
          <source>The following example demonstrates modification of a ctype other than ctype&amp;lt;char&amp;gt; to tokenize a CSV file.</source>
          <target state="translated">El siguiente ejemplo demuestra la modificaci&amp;oacute;n de un ctype que no sea ctype &amp;lt;char&amp;gt; para simular un archivo CSV.</target>
        </trans-unit>
        <trans-unit id="078c0b9a910cb8db45f22ea2c4a03201e8aa21ba" translate="yes" xml:space="preserve">
          <source>The following example demonstrates modification of ctype&amp;lt;char&amp;gt; to tokenize comma-separated values.</source>
          <target state="translated">El siguiente ejemplo demuestra la modificaci&amp;oacute;n de ctype &amp;lt;char&amp;gt; para simular valores separados por comas.</target>
        </trans-unit>
        <trans-unit id="8b17a6f2b425709208fee4f7a7f2a985fd938dea" translate="yes" xml:space="preserve">
          <source>The following example demonstrates several usage cases of the &lt;code&gt;try-catch&lt;/code&gt; block.</source>
          <target state="translated">El siguiente ejemplo muestra varios casos de uso del bloque &lt;code&gt;try-catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="141f9a87f972b72d51d5a0ba28295a6e60590f32" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the difference between UCS2/UTF-8 and UTF-16/UTF-8 conversions: the third character in the string is not a valid UCS2 character.</source>
          <target state="translated">El siguiente ejemplo demuestra la diferencia entre las conversiones UCS2/UTF-8 y UTF-16/UTF-8:el tercer carácter de la cadena no es un carácter UCS2 válido.</target>
        </trans-unit>
        <trans-unit id="0e740ba5761f5d0fc3a5448029e3ada9277de668" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of several alternative tokens.</source>
          <target state="translated">El siguiente ejemplo demuestra el uso de varias fichas alternativas.</target>
        </trans-unit>
        <trans-unit id="525e8da92611859f7cb6e873db8315e5c79ce00d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates transitive release-acquire ordering across three threads.</source>
          <target state="translated">El siguiente ejemplo demuestra el ordenamiento de la liberación transitoria a través de tres hilos.</target>
        </trans-unit>
        <trans-unit id="27a99f499965d3b5b1abd95cc23d4ad4577e382c" translate="yes" xml:space="preserve">
          <source>The following example finds an integer in a vector of integers.</source>
          <target state="translated">En el siguiente ejemplo se encuentra un entero en un vector de enteros.</target>
        </trans-unit>
        <trans-unit id="c6952fc0a4da511b0019b46a13739b85c1e7dc7a" translate="yes" xml:space="preserve">
          <source>The following example iterates over a vector (which has random-access iterators) in reverse.</source>
          <target state="translated">El siguiente ejemplo itera sobre un vector (que tiene iteradores de acceso aleatorio)a la inversa.</target>
        </trans-unit>
        <trans-unit id="c0d39d8f73419ea04197a0669261855783ae02e7" translate="yes" xml:space="preserve">
          <source>The following example shows a general-purpose &lt;code&gt;reverse()&lt;/code&gt; implementation for bidirectional iterators.</source>
          <target state="translated">El siguiente ejemplo muestra una implementaci&amp;oacute;n &lt;code&gt;reverse()&lt;/code&gt; prop&amp;oacute;sito general para iteradores bidireccionales.</target>
        </trans-unit>
        <trans-unit id="4ac23324e2b3e1f0d4e6b0af6616bc5580fd14c5" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; can passed to other functions by value. Also, it shows how &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; can store lambdas.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; puede pasar a otras funciones por valor. Adem&amp;aacute;s, muestra c&amp;oacute;mo &lt;code&gt;&lt;a href=&quot;../function&quot;&gt;std::function&lt;/a&gt;&lt;/code&gt; puede almacenar lambdas.</target>
        </trans-unit>
        <trans-unit id="4b3f122aad33f6a6f2d52154068219af931dc3b5" translate="yes" xml:space="preserve">
          <source>The following example shows how to construct a minimal custom facet.</source>
          <target state="translated">El siguiente ejemplo muestra cómo construir una mínima faceta personalizada.</target>
        </trans-unit>
        <trans-unit id="c489729f6cc12480a1e704d11ab55d5a5e4ff36c" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement a &lt;a href=&quot;../named_req/inputiterator&quot;&gt;input iterator&lt;/a&gt; by inheriting from std::iterator.</source>
          <target state="translated">El siguiente ejemplo muestra c&amp;oacute;mo implementar un &lt;a href=&quot;../named_req/inputiterator&quot;&gt;iterador de entrada&lt;/a&gt; heredando de std :: iterator.</target>
        </trans-unit>
        <trans-unit id="00fbc8b63043ae05ad9ff507b2e2e1e05b1fb9f8" translate="yes" xml:space="preserve">
          <source>The following example shows several different ways to print the same result.</source>
          <target state="translated">El siguiente ejemplo muestra varias formas diferentes de imprimir el mismo resultado.</target>
        </trans-unit>
        <trans-unit id="db4258721a69c60754a36e4c48d778d9b956ad0e" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;ignore&lt;/code&gt; to skip over non-numeric input:</source>
          <target state="translated">El siguiente ejemplo utiliza &lt;code&gt;ignore&lt;/code&gt; para omitir la entrada no num&amp;eacute;rica:</target>
        </trans-unit>
        <trans-unit id="48f63f57617ec5b257434de8bf0aa890cfb1d5c0" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;lock&lt;/code&gt; to re-acquire a mutex that was unlocked.</source>
          <target state="translated">El siguiente ejemplo usa el &lt;code&gt;lock&lt;/code&gt; para volver a adquirir un mutex que se desbloque&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="6df31ab75eb69c1e85b8009a04ecbf6f2d0fe62d" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;std::lock&lt;/code&gt; to lock pairs of mutexes without deadlock.</source>
          <target state="translated">El siguiente ejemplo usa &lt;code&gt;std::lock&lt;/code&gt; para bloquear pares de mutexes sin punto muerto.</target>
        </trans-unit>
        <trans-unit id="802383492a3e9cbc679f149ac14f49c1c655dba8" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;std::scoped_lock&lt;/code&gt; to lock pairs of mutexes without deadlock and is RAII-style.</source>
          <target state="translated">El siguiente ejemplo usa &lt;code&gt;std::scoped_lock&lt;/code&gt; para bloquear pares de mutexes sin punto muerto y es de estilo RAII.</target>
        </trans-unit>
        <trans-unit id="f0f63a8f264e006ef2327ae019fc8c811058c3ed" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;std::try_lock&lt;/code&gt; to periodically tally and reset counters running in separate threads.</source>
          <target state="translated">El siguiente ejemplo usa &lt;code&gt;std::try_lock&lt;/code&gt; para contar peri&amp;oacute;dicamente y restablecer contadores que se ejecutan en subprocesos separados.</target>
        </trans-unit>
        <trans-unit id="eff076fbccafc4a939e632f3fce93d003c8fe78d" translate="yes" xml:space="preserve">
          <source>The following example uses a &lt;a href=&quot;../language/lambda&quot;&gt;lambda function&lt;/a&gt; to increment all of the elements of a vector and then uses an overloaded &lt;code&gt;operator()&lt;/code&gt; in a functor to compute their sum. Note that to compute the sum, it is recommended to use the dedicated algorithm &lt;code&gt;&lt;a href=&quot;accumulate&quot;&gt;std::accumulate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El siguiente ejemplo usa una &lt;a href=&quot;../language/lambda&quot;&gt;funci&amp;oacute;n lambda&lt;/a&gt; para incrementar todos los elementos de un vector y luego usa un &lt;code&gt;operator()&lt;/code&gt; sobrecargado () en un functor para calcular su suma. Tenga en cuenta que para calcular la suma, se recomienda utilizar el algoritmo dedicado &lt;code&gt;&lt;a href=&quot;accumulate&quot;&gt;std::accumulate&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c75ec5cddf22740a53ef00331402bec8899fda7a" translate="yes" xml:space="preserve">
          <source>The following examples reads a UTF-8 file using a locale which implements UTF-8 conversion in codecvt&amp;lt;wchar_t, char, mbstate_t&amp;gt; and converts a UTF-8 string to UTF-16 using one of the standard specializations of std::codecvt.</source>
          <target state="translated">Los siguientes ejemplos leen un archivo UTF-8 usando una configuraci&amp;oacute;n regional que implementa la conversi&amp;oacute;n UTF-8 en codecvt &amp;lt;wchar_t, char, mbstate_t&amp;gt; y convierte una cadena UTF-8 a UTF-16 usando una de las especializaciones est&amp;aacute;ndar de std :: codecvt.</target>
        </trans-unit>
        <trans-unit id="c9f2c0d0c86490d721317d3b74a3d0462b3f18c0" translate="yes" xml:space="preserve">
          <source>The following expression errors are SFINAE errors.</source>
          <target state="translated">Los siguientes errores de expresión son errores del SFINAE.</target>
        </trans-unit>
        <trans-unit id="debd1fa4309eddd6e405115f2b5cff736db118cc" translate="yes" xml:space="preserve">
          <source>The following expressions (including conversions to the destination type) are</source>
          <target state="translated">Las siguientes expresiones (incluidas las conversiones al tipo de destino)son</target>
        </trans-unit>
        <trans-unit id="4b29cd54e8090d2fef4b2a1c4b62fa012ef80e95" translate="yes" xml:space="preserve">
          <source>The following expressions are</source>
          <target state="translated">Las siguientes expresiones son</target>
        </trans-unit>
        <trans-unit id="e8528d23bc1b32037866d01f10a31c7d73bc36bb" translate="yes" xml:space="preserve">
          <source>The following expressions are type-dependent.</source>
          <target state="translated">Las siguientes expresiones dependen del tipo.</target>
        </trans-unit>
        <trans-unit id="db57d5666845e6ff4a0f3b55b955fc5079d79e08" translate="yes" xml:space="preserve">
          <source>The following expressions are well-formed and have the following meaning for any BitmaskType:</source>
          <target state="translated">Las siguientes expresiones están bien formadas y tienen el siguiente significado para cualquier BitmaskType:</target>
        </trans-unit>
        <trans-unit id="22d4ffd3d50c3b5b2098cbfee0ae837d04064a61" translate="yes" xml:space="preserve">
          <source>The following expressions must be valid and have their specified effects for all sequence containers except &lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Las siguientes expresiones deben ser v&amp;aacute;lidas y tener los efectos especificados para todos los contenedores de secuencias, excepto &lt;code&gt;&lt;a href=&quot;../container/array&quot;&gt;std::array&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d5e8ec34037bfee2a2de96690accfd13ec9641c0" translate="yes" xml:space="preserve">
          <source>The following expressions must be valid and have their specified effects for the sequence containers named:</source>
          <target state="translated">Las siguientes expresiones deben ser válidas y tener sus efectos especificados para los contenedores de secuencia nombrados:</target>
        </trans-unit>
        <trans-unit id="c10e7ec520abefe3e72402cd7464b805bd2ced61" translate="yes" xml:space="preserve">
          <source>The following expressions must be valid and have their specified effects.</source>
          <target state="translated">Las siguientes expresiones deben ser válidas y tener sus efectos especificados.</target>
        </trans-unit>
        <trans-unit id="49a148a069facd683ffc1bc478747dac3ca7105d" translate="yes" xml:space="preserve">
          <source>The following expressions must be valid and have their specified effects:</source>
          <target state="translated">Las siguientes expresiones deben ser válidas y tener sus efectos especificados:</target>
        </trans-unit>
        <trans-unit id="2720aede3cc4a9514ba4f52fbf8bdb672820ebe6" translate="yes" xml:space="preserve">
          <source>The following expressions must be valid:</source>
          <target state="translated">Las siguientes expresiones deben ser válidas:</target>
        </trans-unit>
        <trans-unit id="2cfaf8e14e19bf31aee96ca79b4b825e2d169ca6" translate="yes" xml:space="preserve">
          <source>The following floating-point error conditions are recognized:</source>
          <target state="translated">Se reconocen las siguientes condiciones de error en punto flotante:</target>
        </trans-unit>
        <trans-unit id="bd4f90abfd9c4aaea62c390400d56b7eb617f8af" translate="yes" xml:space="preserve">
          <source>The following format specifiers are available:</source>
          <target state="translated">Se dispone de los siguientes especificadores de formato:</target>
        </trans-unit>
        <trans-unit id="f42b11d97e9492ead1c1556f379edfec7ce6efa2" translate="yes" xml:space="preserve">
          <source>The following four requirements are guaranteed for all atomic operations:</source>
          <target state="translated">Los siguientes cuatro requisitos están garantizados para todas las operaciones atómicas:</target>
        </trans-unit>
        <trans-unit id="a92b77d52f08f57ee17ef460d2687879e298a2ce" translate="yes" xml:space="preserve">
          <source>The following functions are required to be thread-safe:</source>
          <target state="translated">Se requiere que las siguientes funciones sean seguras para el hilo:</target>
        </trans-unit>
        <trans-unit id="f2eb935e6113cc619832488518231a86dfe2f850" translate="yes" xml:space="preserve">
          <source>The following functions clear &lt;code&gt;eofbit&lt;/code&gt; as a side-effect:</source>
          <target state="translated">Las siguientes funciones &lt;code&gt;eofbit&lt;/code&gt; como efecto secundario:</target>
        </trans-unit>
        <trans-unit id="c5a591d9fa5638aac9fa2b83e82338a91618a78a" translate="yes" xml:space="preserve">
          <source>The following functions manage program termination and resource cleanup.</source>
          <target state="translated">Las siguientes funciones gestionan la terminación del programa y la limpieza de los recursos.</target>
        </trans-unit>
        <trans-unit id="8e986edc251497f629cc52507f22f7c5c5651a39" translate="yes" xml:space="preserve">
          <source>The following functions set &lt;code&gt;gcount()&lt;/code&gt; to zero:</source>
          <target state="translated">Las siguientes funciones establecen &lt;code&gt;gcount()&lt;/code&gt; en cero:</target>
        </trans-unit>
        <trans-unit id="7e751c77b395f08a05df0faafe34cc44b0980610" translate="yes" xml:space="preserve">
          <source>The following functions should not be called from multiple threads without synchronization with the &lt;code&gt;std::mbstate_t*&lt;/code&gt; argument of &lt;code&gt;NULL&lt;/code&gt; due to possible data races: &lt;code&gt;&lt;a href=&quot;mbrlen&quot;&gt;std::mbrlen&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;std::mbrtowc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mbsrtowcs&quot;&gt;std::mbsrtowcs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mbtowc&quot;&gt;std::mbtowc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;std::wcrtomb&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;wcsrtombs&quot;&gt;std::wcsrtombs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;wctomb&quot;&gt;std::wctomb&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Las siguientes funciones no se deben &lt;code&gt;std::mbstate_t*&lt;/code&gt; desde m&amp;uacute;ltiples subprocesos sin sincronizaci&amp;oacute;n con el argumento std :: mbstate_t * de &lt;code&gt;NULL&lt;/code&gt; debido a posibles carreras de datos: &lt;code&gt;&lt;a href=&quot;mbrlen&quot;&gt;std::mbrlen&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;std::mbrtowc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mbsrtowcs&quot;&gt;std::mbsrtowcs&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mbtowc&quot;&gt;std::mbtowc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;std::wcrtomb&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;wcsrtombs&quot;&gt;std::wcsrtombs&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;wctomb&quot;&gt;std::wctomb&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e06fb004ab640fd2985e53f52dd0e0eaabd0f761" translate="yes" xml:space="preserve">
          <source>The following implicit conversions are classified as integral promotions:</source>
          <target state="translated">Las siguientes conversiones implícitas se clasifican como promociones integrales:</target>
        </trans-unit>
        <trans-unit id="9e4bf6b07ece0b87ef0e771b79b6cc4bd8a6bfce" translate="yes" xml:space="preserve">
          <source>The following is an implementation of selection sort in C++</source>
          <target state="translated">La siguiente es una implementación del tipo de selección en C++</target>
        </trans-unit>
        <trans-unit id="dfac99e333eaa05ebfa778080027d41f55d75c0f" translate="yes" xml:space="preserve">
          <source>The following limitations apply when instantiating templates that have non-type template parameters:</source>
          <target state="translated">Las siguientes limitaciones se aplican cuando se instancian plantillas que tienen parámetros de plantillas que no son de tipo:</target>
        </trans-unit>
        <trans-unit id="52747f8b268619d42bfc41249c2443bf02dfb375" translate="yes" xml:space="preserve">
          <source>The following limitations are imposed on the user-defined function that is installed as a signal handler.</source>
          <target state="translated">Las siguientes limitaciones se imponen a la función definida por el usuario que se instala como manejador de señales.</target>
        </trans-unit>
        <trans-unit id="da00c82b7d244792f2030f45189b70e1b1b1f2b3" translate="yes" xml:space="preserve">
          <source>The following linkages are recognized:</source>
          <target state="translated">Se reconocen los siguientes vínculos</target>
        </trans-unit>
        <trans-unit id="fb4eace7ff5070309972db02437a21ee5af036eb" translate="yes" xml:space="preserve">
          <source>The following literal operators are defined in the standard library.</source>
          <target state="translated">Los siguientes operadores literales están definidos en la biblioteca estándar.</target>
        </trans-unit>
        <trans-unit id="3723b425362ea4e4ce5828175ffab15f68e3131b" translate="yes" xml:space="preserve">
          <source>The following macro names are predefined in every translation unit.</source>
          <target state="translated">Los siguientes nombres de macros están predefinidos en cada unidad de traducción.</target>
        </trans-unit>
        <trans-unit id="7566f7a8132ec521da8d18bb6126376034375f24" translate="yes" xml:space="preserve">
          <source>The following macros are defined if the header &lt;a href=&quot;header/version&quot;&gt;&lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt;&lt;/a&gt; or any of the corresponding headers in the table below is included. Each macro expands to an integer literal corresponding to the year and month when the corresponding feature has been included in the working draft.</source>
          <target state="translated">Las siguientes macros se definen si se &lt;a href=&quot;header/version&quot;&gt; &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; &lt;/a&gt; el encabezado &amp;lt;versi&amp;oacute;n&amp;gt; o cualquiera de los encabezados correspondientes en la tabla a continuaci&amp;oacute;n. Cada macro se expande a un literal entero correspondiente al a&amp;ntilde;o y mes en que la caracter&amp;iacute;stica correspondiente se ha incluido en el borrador de trabajo.</target>
        </trans-unit>
        <trans-unit id="f28817cf6a958f651285ad92987ad551f3b3afb7" translate="yes" xml:space="preserve">
          <source>The following macros are predefined in every translation unit.</source>
          <target state="translated">Las siguientes macros están predefinidas en cada unidad de traducción.</target>
        </trans-unit>
        <trans-unit id="73f1c16628c0db204aa1806bf2fd9e91da1c732d" translate="yes" xml:space="preserve">
          <source>The following macros are predefined in every translation unit. Each macro expands to an integer literal corresponding to the year and month when the corresponding feature has been included in the working draft.</source>
          <target state="translated">Las siguientes macros están predefinidas en cada unidad de traducción.Cada macro se expande a un literal entero correspondiente al año y mes en que la característica correspondiente ha sido incluida en el borrador de trabajo.</target>
        </trans-unit>
        <trans-unit id="f9955df6599697e69b7429b076ab09c2a61cf784" translate="yes" xml:space="preserve">
          <source>The following member functions of &lt;code&gt;basic_istream&lt;/code&gt; change the value of subsequent &lt;code&gt;gcount()&lt;/code&gt; calls:</source>
          <target state="translated">Las siguientes funciones miembro de &lt;code&gt;basic_istream&lt;/code&gt; cambian el valor de las &lt;code&gt;gcount()&lt;/code&gt; posteriores a gcount () :</target>
        </trans-unit>
        <trans-unit id="8a52166fa732f6828cff4533ced933f75480e1dc" translate="yes" xml:space="preserve">
          <source>The following operators are rarely overloaded:</source>
          <target state="translated">Los siguientes operadores raramente están sobrecargados:</target>
        </trans-unit>
        <trans-unit id="48a3fa74fdd466282026b295d2a93a127b87ec93" translate="yes" xml:space="preserve">
          <source>The following overloads are already provided by the standard library:</source>
          <target state="translated">Las siguientes sobrecargas ya están disponibles en la biblioteca estándar:</target>
        </trans-unit>
        <trans-unit id="eba554740f58545a1e58d6b4c2dd64ed7fb45704" translate="yes" xml:space="preserve">
          <source>The following program demonstrates usage of a custom deleter.</source>
          <target state="translated">El siguiente programa demuestra el uso de un medidor personalizado.</target>
        </trans-unit>
        <trans-unit id="062d4ad02d97a54508cb3a86208e3c3ee3d3ffdf" translate="yes" xml:space="preserve">
          <source>The following program is an example of an efficient type-value mapping without using &lt;code&gt;&lt;a href=&quot;../type_index&quot;&gt;std::type_index&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El siguiente programa es un ejemplo de una asignaci&amp;oacute;n eficiente de tipo-valor sin usar &lt;code&gt;&lt;a href=&quot;../type_index&quot;&gt;std::type_index&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8220c0fdbfef735a987a41da0ffe4823652db8b9" translate="yes" xml:space="preserve">
          <source>The following program is an example of an efficient type-value mapping.</source>
          <target state="translated">El siguiente programa es un ejemplo de un eficiente mapeo de tipo y valor.</target>
        </trans-unit>
        <trans-unit id="9ff275c825fa1a87d99185f365a34ebec03469ef" translate="yes" xml:space="preserve">
          <source>The following properties of bit fields are</source>
          <target state="translated">Las siguientes propiedades de los campos de bits son</target>
        </trans-unit>
        <trans-unit id="af27c3abc588bea4e2ff429143c89f2d428493c5" translate="yes" xml:space="preserve">
          <source>The following restrictions apply to the argument-list of a partial template specialization:</source>
          <target state="translated">Las siguientes restricciones se aplican a la lista de argumentos de una especialización de plantilla parcial:</target>
        </trans-unit>
        <trans-unit id="f68aa4529e49ad56663b01e62f1f4c387b78a88c" translate="yes" xml:space="preserve">
          <source>The following rules apply to container construction.</source>
          <target state="translated">Las siguientes reglas se aplican a la construcción de contenedores.</target>
        </trans-unit>
        <trans-unit id="718963b68f3a3480ccecd7e291d7071c83c72a08" translate="yes" xml:space="preserve">
          <source>The following specializations are already provided by the standard library:</source>
          <target state="translated">La biblioteca estándar ya ofrece las siguientes especializaciones:</target>
        </trans-unit>
        <trans-unit id="0031259c1c38cc60cd2a07e684b6afb30571b854" translate="yes" xml:space="preserve">
          <source>The following specializations of &lt;code&gt;&lt;a href=&quot;io/fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; are provided:</source>
          <target state="translated">Se proporcionan las siguientes especializaciones de &lt;code&gt;&lt;a href=&quot;io/fpos&quot;&gt;std::fpos&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2d2dff1f1d7ffe563611f49b118f00cc7cde933f" translate="yes" xml:space="preserve">
          <source>The following specializations of &lt;code&gt;std::fpos&lt;/code&gt; are provided:</source>
          <target state="translated">Se proporcionan las siguientes especializaciones de &lt;code&gt;std::fpos&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a8ac2376ba64e555f426367b2c168767a8b9fd8a" translate="yes" xml:space="preserve">
          <source>The following specifiers are recognized, but will cause &lt;code&gt;&lt;a href=&quot;../../io/ios_base/iostate&quot;&gt;std::ios_base::failbit&lt;/a&gt;&lt;/code&gt; to be set in &lt;code&gt;os&lt;/code&gt;:</source>
          <target state="translated">Se reconocen los siguientes especificadores, pero har&amp;aacute;n que &lt;code&gt;&lt;a href=&quot;../../io/ios_base/iostate&quot;&gt;std::ios_base::failbit&lt;/a&gt;&lt;/code&gt; se establezca en &lt;code&gt;os&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b43c06e0b038d4f78fc60acbdf6be989d5c2205c" translate="yes" xml:space="preserve">
          <source>The following standalone (locale-independent) specializations are provided by the standard library:</source>
          <target state="translated">La biblioteca estándar ofrece las siguientes especializaciones autónomas (independientes del lugar):</target>
        </trans-unit>
        <trans-unit id="87098482f1ab90910e6cdda0d45338fd298ac8e6" translate="yes" xml:space="preserve">
          <source>The following standard functions are declared with &lt;code&gt;nodiscard&lt;/code&gt; attribute:</source>
          <target state="translated">Las siguientes funciones est&amp;aacute;ndar se declaran con el atributo &lt;code&gt;nodiscard&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9dcab3d2651c2d4be25e4e3aa77f3fa98e464574" translate="yes" xml:space="preserve">
          <source>The following standard functions are declared with &lt;code&gt;noreturn&lt;/code&gt; attribute:</source>
          <target state="translated">Las siguientes funciones est&amp;aacute;ndar se declaran con el atributo &lt;code&gt;noreturn&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="32a68a66d872c6f3299adc5cd097f3da4b4588ff" translate="yes" xml:space="preserve">
          <source>The following standard library class templates also satisfy &lt;strong&gt;TransformationTrait&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes plantillas de clase de biblioteca est&amp;aacute;ndar tambi&amp;eacute;n satisfacen &lt;strong&gt;TransformationTrait&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="1e1e8e6153d4fa33a939b2ff78c2e8172ebd314a" translate="yes" xml:space="preserve">
          <source>The following standard library class templates also satisfy &lt;strong&gt;UnaryTypeTrait&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes plantillas de clase de biblioteca est&amp;aacute;ndar tambi&amp;eacute;n satisfacen &lt;strong&gt;UnaryTypeTrait&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae071fe8c66c1cf7bd341b1a4ee6d758adbce1a" translate="yes" xml:space="preserve">
          <source>The following standard library class templates satisfy &lt;strong&gt;BinaryTypeTrait&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes plantillas de clase de biblioteca est&amp;aacute;ndar satisfacen &lt;strong&gt;BinaryTypeTrait&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="007099bda9fb475467acdd87b9f40e88aa090101" translate="yes" xml:space="preserve">
          <source>The following standard library components satisfy RandomNumberDistribution.</source>
          <target state="translated">Los siguientes componentes de la biblioteca estándar satisfacen la distribución de números aleatorios.</target>
        </trans-unit>
        <trans-unit id="efaebbc35931a2d154d67a161bd61f11506f8352" translate="yes" xml:space="preserve">
          <source>The following standard library components satisfy the Allocator requirements:</source>
          <target state="translated">Los siguientes componentes estándar de la biblioteca satisfacen los requisitos del Asignador:</target>
        </trans-unit>
        <trans-unit id="eb594915ced822ef9c987893a74e5ec96ad031fe" translate="yes" xml:space="preserve">
          <source>The following standard library facilities expect a BinaryPredicate which isn't a &lt;a href=&quot;compare&quot;&gt;Compare&lt;/a&gt; type.</source>
          <target state="translated">Las siguientes instalaciones de biblioteca est&amp;aacute;ndar esperan un BinaryPredicate que no es un tipo &lt;a href=&quot;compare&quot;&gt;Comparar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d463c552ce3946c66f46834829e62a11e51b3305" translate="yes" xml:space="preserve">
          <source>The following standard library facilities expect a Compare type.</source>
          <target state="translated">Las siguientes instalaciones de la biblioteca estándar esperan un tipo de Comparación.</target>
        </trans-unit>
        <trans-unit id="c52f727d02e5c3f4bd6ca4b1192af1099ef5f182" translate="yes" xml:space="preserve">
          <source>The following standard library facilities expect a UniformRandomBitGenerator type.</source>
          <target state="translated">Las siguientes instalaciones de la biblioteca estándar esperan un tipo de UniformRandomBitGenerator.</target>
        </trans-unit>
        <trans-unit id="eaa1be259b57b9bea0023a6acb3d8b45f5225eae" translate="yes" xml:space="preserve">
          <source>The following standard library facilities satisfy &lt;a href=&quot;uniformrandombitgenerator&quot;&gt;UniformRandomBitGenerator&lt;/a&gt; but not RandomNumberEngine:</source>
          <target state="translated">Las siguientes instalaciones de biblioteca est&amp;aacute;ndar satisfacen &lt;a href=&quot;uniformrandombitgenerator&quot;&gt;UniformRandomBitGenerator&lt;/a&gt; pero no RandomNumberEngine:</target>
        </trans-unit>
        <trans-unit id="e54e88fbec814c021ca405eb128168a763988d48" translate="yes" xml:space="preserve">
          <source>The following standard library facilities satisfy &lt;strong&gt;RandomNumberEngineAdaptor&lt;/strong&gt;:</source>
          <target state="translated">Las siguientes instalaciones de biblioteca est&amp;aacute;ndar satisfacen &lt;strong&gt;RandomNumberEngineAdaptor&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="bbcaf65a4722d7dc301ad7f848b0a0e5b87a75cd" translate="yes" xml:space="preserve">
          <source>The following standard library facilities satisfy RandomNumberEngine:</source>
          <target state="translated">Las siguientes instalaciones estándar de la biblioteca satisfacen a RandomNumberEngine:</target>
        </trans-unit>
        <trans-unit id="8197cbcbf90d11a014c985a28b2629f3b2e0d799" translate="yes" xml:space="preserve">
          <source>The following standard library facilities satisfy UniformRandomBitGenerator without additionally satisfying &lt;a href=&quot;randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt;:</source>
          <target state="translated">Las siguientes instalaciones de biblioteca est&amp;aacute;ndar satisfacen UniformRandomBitGenerator sin satisfacer adicionalmente &lt;a href=&quot;randomnumberengine&quot;&gt;RandomNumberEngine&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="52a9199352069fc95f2faa18ac7f0b0ffb0b610e" translate="yes" xml:space="preserve">
          <source>The following standard library functions are &lt;strong&gt;FormattedInputFunctions&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes funciones est&amp;aacute;ndar de la biblioteca son &lt;strong&gt;FormattedInputFunctions&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="110375b0fdd2a6ce27bc319d8fa22f578ddce865" translate="yes" xml:space="preserve">
          <source>The following standard library functions are &lt;strong&gt;FormattedOutputFunctions&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes funciones est&amp;aacute;ndar de la biblioteca son &lt;strong&gt;FormattedOutputFunctions&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="90e3e6b7b01ca606fc88d527e8457cddf02887d1" translate="yes" xml:space="preserve">
          <source>The following standard library functions are &lt;strong&gt;UnformattedInputFunctions&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes funciones de biblioteca est&amp;aacute;ndar son &lt;strong&gt;UnformattedInputFunctions&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d5b69d90b769dd1b2f532dc9339b7db1e70233cd" translate="yes" xml:space="preserve">
          <source>The following standard library functions are &lt;strong&gt;UnformattedOutputFunctions&lt;/strong&gt;.</source>
          <target state="translated">Las siguientes funciones de biblioteca est&amp;aacute;ndar son &lt;strong&gt;UnformattedOutputFunctions&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9d13f7fc713bbd7fbb501cfb262722eda5bd2609" translate="yes" xml:space="preserve">
          <source>The following standard library iterators are output iterators that are not forward iterators:</source>
          <target state="translated">Los siguientes iteradores estándar de la biblioteca son iteradores de salida que no son iteradores de avance:</target>
        </trans-unit>
        <trans-unit id="798f4cbd9dba6c81e1c0811a4318bb2610b1288b" translate="yes" xml:space="preserve">
          <source>The following standard library types are &lt;strong&gt;ConstexprIterators&lt;/strong&gt;.</source>
          <target state="translated">Los siguientes tipos de biblioteca est&amp;aacute;ndar son &lt;strong&gt;ConstexprIterators&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e1774bde3d09ff1b66341e950d51e21a1688d8fd" translate="yes" xml:space="preserve">
          <source>The following standard library types are &lt;strong&gt;LegacyContiguousIterators&lt;/strong&gt;.</source>
          <target state="translated">Los siguientes tipos de biblioteca est&amp;aacute;ndar son &lt;strong&gt;LegacyContiguousIterators&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9822d186557d4ec43def3a5bb298d63e3e55ca3a" translate="yes" xml:space="preserve">
          <source>The following standard library types satisfy &lt;strong&gt;Mutex&lt;/strong&gt;:</source>
          <target state="translated">Los siguientes tipos de biblioteca est&amp;aacute;ndar satisfacen &lt;strong&gt;Mutex&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="3839c6b1e2941f810663e37c07c9bd57f5137bf2" translate="yes" xml:space="preserve">
          <source>The following standard library types satisfy &lt;strong&gt;SharedMutex&lt;/strong&gt;:</source>
          <target state="translated">Los siguientes tipos de biblioteca est&amp;aacute;ndar satisfacen &lt;strong&gt;SharedMutex&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="4af656071a5eee92d3b738c09cb8b1788943c228" translate="yes" xml:space="preserve">
          <source>The following standard library types satisfy &lt;strong&gt;SharedTimedMutex&lt;/strong&gt;:</source>
          <target state="translated">Los siguientes tipos de biblioteca est&amp;aacute;ndar satisfacen &lt;strong&gt;SharedTimedMutex&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="e75c35170e3fc67641a033c6b52eb7c81d48b3ee" translate="yes" xml:space="preserve">
          <source>The following standard library types satisfy &lt;strong&gt;TimedMutex&lt;/strong&gt;:</source>
          <target state="translated">Los siguientes tipos de biblioteca est&amp;aacute;ndar satisfacen &lt;strong&gt;TimedMutex&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="1377bfafdad89d2d5786eb764cf76e00e525017f" translate="yes" xml:space="preserve">
          <source>The following standard library types satisfy BitmaskType:</source>
          <target state="translated">Los siguientes tipos de biblioteca estándar satisfacen el BitmaskType:</target>
        </trans-unit>
        <trans-unit id="f47359b7f5be953e5e8316b3b16c4cfd96c74539" translate="yes" xml:space="preserve">
          <source>The following table lists the precedence and associativity of C++ operators. Operators are listed top to bottom, in descending precedence.</source>
          <target state="translated">En el siguiente cuadro se enumeran la precedencia y la asociatividad de los operadores de C++.Los operadores se enumeran de arriba a abajo,en precedencia descendente.</target>
        </trans-unit>
        <trans-unit id="869cf0a93a08ae4a865cdd25ae31955da4b9045e" translate="yes" xml:space="preserve">
          <source>The following table provides a reference for the limits of common numeric representations.</source>
          <target state="translated">En el cuadro que figura a continuación se indican los límites de las representaciones numéricas comunes.</target>
        </trans-unit>
        <trans-unit id="075cede2e87300a32b00122d0c950fe1bd6c8667" translate="yes" xml:space="preserve">
          <source>The following table shows the value of &lt;code&gt;basic_ios&lt;/code&gt; accessors (&lt;a href=&quot;../basic_ios/good&quot;&gt;&lt;code&gt;good()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../basic_ios/fail&quot;&gt;&lt;code&gt;fail()&lt;/code&gt;&lt;/a&gt;, etc.) for all possible combinations of &lt;strong&gt;&lt;code&gt;ios_base::iostate&lt;/code&gt;&lt;/strong&gt; flags:</source>
          <target state="translated">La siguiente tabla muestra el valor de los &lt;code&gt;basic_ios&lt;/code&gt; acceso basic_ios ( &lt;a href=&quot;../basic_ios/good&quot;&gt; &lt;code&gt;good()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../basic_ios/fail&quot;&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;/a&gt; , etc.) para todas las combinaciones posibles de &lt;strong&gt; &lt;code&gt;ios_base::iostate&lt;/code&gt; &lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="99ea509caafeb125e6fd07be315f0d67081751c9" translate="yes" xml:space="preserve">
          <source>The following table shows the value of &lt;code&gt;basic_ios&lt;/code&gt; accessors (&lt;a href=&quot;good&quot;&gt;&lt;code&gt;good()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fail&quot;&gt;&lt;code&gt;fail()&lt;/code&gt;&lt;/a&gt;, etc.) for all possible combinations of &lt;a href=&quot;../ios_base/iostate&quot;&gt;&lt;code&gt;ios_base::iostate&lt;/code&gt;&lt;/a&gt; flags:</source>
          <target state="translated">La siguiente tabla muestra el valor de los &lt;code&gt;basic_ios&lt;/code&gt; acceso basic_ios ( &lt;a href=&quot;good&quot;&gt; &lt;code&gt;good()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;fail&quot;&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;/a&gt; , etc.) para todas las combinaciones posibles de &lt;a href=&quot;../ios_base/iostate&quot;&gt; &lt;code&gt;ios_base::iostate&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="745f79dd59ed6342386b7151436e3f17242c02d9" translate="yes" xml:space="preserve">
          <source>The following table shows the value of &lt;code&gt;basic_ios&lt;/code&gt; accessors (&lt;a href=&quot;good&quot;&gt;&lt;code&gt;good()&lt;/code&gt;&lt;/a&gt;, &lt;strong&gt;&lt;code&gt;fail()&lt;/code&gt;&lt;/strong&gt;, etc.) for all possible combinations of &lt;a href=&quot;../ios_base/iostate&quot;&gt;&lt;code&gt;ios_base::iostate&lt;/code&gt;&lt;/a&gt; flags:</source>
          <target state="translated">La siguiente tabla muestra el valor de los &lt;code&gt;basic_ios&lt;/code&gt; acceso basic_ios ( &lt;a href=&quot;good&quot;&gt; &lt;code&gt;good()&lt;/code&gt; &lt;/a&gt; , &lt;strong&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;/strong&gt; , etc.) para todas las combinaciones posibles de &lt;a href=&quot;../ios_base/iostate&quot;&gt; &lt;code&gt;ios_base::iostate&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="baa16009a2a3e8d14cfb3decd4d046c7405e0c14" translate="yes" xml:space="preserve">
          <source>The following table shows the value of &lt;code&gt;basic_ios&lt;/code&gt; accessors (&lt;strong&gt;&lt;code&gt;good()&lt;/code&gt;&lt;/strong&gt;, &lt;a href=&quot;fail&quot;&gt;&lt;code&gt;fail()&lt;/code&gt;&lt;/a&gt;, etc.) for all possible combinations of &lt;a href=&quot;../ios_base/iostate&quot;&gt;&lt;code&gt;ios_base::iostate&lt;/code&gt;&lt;/a&gt; flags:</source>
          <target state="translated">La siguiente tabla muestra el valor de los &lt;code&gt;basic_ios&lt;/code&gt; acceso basic_ios ( &lt;strong&gt; &lt;code&gt;good()&lt;/code&gt; &lt;/strong&gt; , &lt;a href=&quot;fail&quot;&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;/a&gt; , etc.) para todas las combinaciones posibles de &lt;a href=&quot;../ios_base/iostate&quot;&gt; &lt;code&gt;ios_base::iostate&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a901e9b7792340a20dc3a26c920d9911c931da64" translate="yes" xml:space="preserve">
          <source>The following table summarizes all available integer types and their properties:</source>
          <target state="translated">En el siguiente cuadro se resumen todos los tipos de números enteros disponibles y sus propiedades:</target>
        </trans-unit>
        <trans-unit id="acc57bf9778baf29a073665323a0c5976c6a1f23" translate="yes" xml:space="preserve">
          <source>The following three-character groups (trigraphs) are &lt;a href=&quot;translation_phases&quot;&gt;parsed before comments and string literals are recognized&lt;/a&gt;, and each appearance of a trigraph is replaced by the corresponding primary character:</source>
          <target state="translated">Los siguientes grupos de tres caracteres (trigraphs) se &lt;a href=&quot;translation_phases&quot;&gt;analizan antes de que se reconozcan los comentarios y los literales de cadena&lt;/a&gt; , y cada aparici&amp;oacute;n de un trigraph se reemplaza por el car&amp;aacute;cter primario correspondiente:</target>
        </trans-unit>
        <trans-unit id="1a2dbbb940f65a4c22cd1d407d67021cc73fac74" translate="yes" xml:space="preserve">
          <source>The following tokens are recognized by the &lt;a href=&quot;preprocessor&quot;&gt;preprocessor&lt;/a&gt;</source>
          <target state="translated">Los siguientes tokens son reconocidos por el &lt;a href=&quot;preprocessor&quot;&gt;preprocesador&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08cdd10ea2ca9c43a4ad2477073dc522db53c06e" translate="yes" xml:space="preserve">
          <source>The following tokens are recognized by the &lt;a href=&quot;preprocessor&quot;&gt;preprocessor&lt;/a&gt; when in context of a preprocessor directive:</source>
          <target state="translated">El &lt;a href=&quot;preprocessor&quot;&gt;preprocesador&lt;/a&gt; reconoce los siguientes tokens cuando se encuentra en el contexto de una directiva de preprocesador:</target>
        </trans-unit>
        <trans-unit id="15f4805e7fc03f03ec8693800bb74acd46b9bd71" translate="yes" xml:space="preserve">
          <source>The following type aliases define the random number engine with two commonly used parameter sets:</source>
          <target state="translated">Los siguientes tipos de alias definen el motor de números aleatorios con dos conjuntos de parámetros comúnmente utilizados:</target>
        </trans-unit>
        <trans-unit id="d2a02b2530d19cf2a9fd0c63e8f36bcf3e4d4b7d" translate="yes" xml:space="preserve">
          <source>The following type errors are SFINAE errors:</source>
          <target state="translated">Los siguientes errores de tipo son errores del SFINAE:</target>
        </trans-unit>
        <trans-unit id="08cef6066b25127cfb360b58024871a2ef93ea56" translate="yes" xml:space="preserve">
          <source>The following typedef defines the random number engine with one commonly used parameter set:</source>
          <target state="translated">El siguiente tipedef define el motor de números aleatorios con un conjunto de parámetros de uso común:</target>
        </trans-unit>
        <trans-unit id="0628e731210af7f1451f479c8ea0eaea15b93ed0" translate="yes" xml:space="preserve">
          <source>The following typedefs define the random number engine with two commonly used parameter sets:</source>
          <target state="translated">Los siguientes tipedefs definen el motor de números aleatorios con dos conjuntos de parámetros comúnmente utilizados:</target>
        </trans-unit>
        <trans-unit id="1f6a99951a06b5fd8ea85e437236c5467963a19e" translate="yes" xml:space="preserve">
          <source>The following typedefs for common character types are provided:</source>
          <target state="translated">Se proporcionan los siguientes tipodefs para los tipos de caracteres comunes:</target>
        </trans-unit>
        <trans-unit id="67202458185ead27be9490dca90a497de75d4077" translate="yes" xml:space="preserve">
          <source>The following types are</source>
          <target state="translated">Los siguientes tipos son</target>
        </trans-unit>
        <trans-unit id="8767b4d8ec3caedfe52318cc0d33202d47bee690" translate="yes" xml:space="preserve">
          <source>The following types are dependent types:</source>
          <target state="translated">Los siguientes tipos son tipos dependientes:</target>
        </trans-unit>
        <trans-unit id="9f298f8c48595121567682959a89caa583d0e719" translate="yes" xml:space="preserve">
          <source>The following types in the standard library satisfy these requirements:</source>
          <target state="translated">Los siguientes tipos de la biblioteca estándar satisfacen estos requisitos:</target>
        </trans-unit>
        <trans-unit id="d86187cf064bf2fed80acd4d6548d022ed06c4ab" translate="yes" xml:space="preserve">
          <source>The following types must satisfy NullablePointer:</source>
          <target state="translated">Los siguientes tipos deben satisfacer el NullablePointer:</target>
        </trans-unit>
        <trans-unit id="05263cedaa87adae4404e0d5d0d5c6012425b488" translate="yes" xml:space="preserve">
          <source>The following values of &lt;code&gt;str&lt;/code&gt; are supported in all C locales:</source>
          <target state="translated">Los siguientes valores de &lt;code&gt;str&lt;/code&gt; son compatibles con todas las configuraciones regionales de C:</target>
        </trans-unit>
        <trans-unit id="df8deaac6bb5ac34b75ff8d33e606b718c268c59" translate="yes" xml:space="preserve">
          <source>The following variables are also initialized to the same value:</source>
          <target state="translated">Las siguientes variables también se inicializan con el mismo valor:</target>
        </trans-unit>
        <trans-unit id="5c29167a05bd707a804eef66e8a46280899a02a0" translate="yes" xml:space="preserve">
          <source>The following variables are initialized to the same value:</source>
          <target state="translated">Las siguientes variables se inicializan con el mismo valor:</target>
        </trans-unit>
        <trans-unit id="c115c3bcc9fbadc3a57b3f9c0400462a69bdd2ad" translate="yes" xml:space="preserve">
          <source>The formal definition ensures that:</source>
          <target state="translated">La definición formal asegura eso:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
