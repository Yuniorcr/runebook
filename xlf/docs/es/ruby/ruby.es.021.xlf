<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="2798e5504745455b249543672d150e815ee3823b" translate="yes" xml:space="preserve">
          <source>Specify the modification time (&lt;code&gt;mtime&lt;/code&gt;) in the gzip header. Using an &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46761ec8e1619ed71578bc12cdbc563eb13cf32f" translate="yes" xml:space="preserve">
          <source>Specify the original name (&lt;code&gt;str&lt;/code&gt;) in the gzip header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9ea2c8f4c3962233a2a81359c7f41e453dfc19" translate="yes" xml:space="preserve">
          <source>Specify the replacement string. If not specified, &amp;ldquo;uFFFD&amp;rdquo; is used for Unicode encodings and &amp;ldquo;?&amp;rdquo; for others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adb3354c7482945d209133d776c07c11cf4db81" translate="yes" xml:space="preserve">
          <source>Specify the traffic class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b0ed561031bf09321d7774028f680a10ad0231" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;str&lt;/code&gt; into an array of tokens in the same way the UNIX Bourne shell does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4921e2140f94bf3185cec06618cd10b096d98d3" translate="yes" xml:space="preserve">
          <source>Splits &lt;em&gt;str&lt;/em&gt; using the supplied parameter as the record separator (&lt;code&gt;$/&lt;/code&gt; by default), passing each substring in turn to the supplied block. If a zero-length record separator is supplied, the string is split into paragraphs delimited by multiple successive newlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3013798b28af41f2f427ab421fd304cf3e7bfe4" translate="yes" xml:space="preserve">
          <source>Splits a &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; number into four parts, returned as an array of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf15352e035f6c8853505d2d18395b053c309f4c" translate="yes" xml:space="preserve">
          <source>Splits a string into an array of tokens in the same way the UNIX Bourne shell does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2994022269b098230be20f62a9f0b5cc99cd3190" translate="yes" xml:space="preserve">
          <source>Splits the given string into a directory and a file component and returns them in a two-element array. See also &lt;code&gt;File::dirname&lt;/code&gt; and &lt;code&gt;File::basename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc9474f738eb5fb80d24009b83cbf5cbdc4c74c" translate="yes" xml:space="preserve">
          <source>Splits the string on following parts and returns array with result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1686afc207764ceabe6c600f7eb504d0e66ccdf" translate="yes" xml:space="preserve">
          <source>Squeezes &lt;em&gt;str&lt;/em&gt; in place, returning either &lt;em&gt;str&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if no changes were made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075009ddc4ff224801c0f619c848872a3fdc91dd" translate="yes" xml:space="preserve">
          <source>Stack control settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d10323c27ec5f9982ad73377fd582ff949840f8" translate="yes" xml:space="preserve">
          <source>Standalone</source>
          <target state="translated">Standalone</target>
        </trans-unit>
        <trans-unit id="895a2c5fcd596287b85bcfff7b82cfe3d5929ee6" translate="yes" xml:space="preserve">
          <source>Standalone#bundler_path</source>
          <target state="translated">Standalone#bundler_path</target>
        </trans-unit>
        <trans-unit id="5a0c465fce3145fa14150190266d1b6e5149bcef" translate="yes" xml:space="preserve">
          <source>Standalone#gem_path</source>
          <target state="translated">Standalone#gem_path</target>
        </trans-unit>
        <trans-unit id="b7f83d48fb02f2243707a7b8bdf3cc6ba6435e7c" translate="yes" xml:space="preserve">
          <source>Standalone#generate</source>
          <target state="translated">Standalone#generate</target>
        </trans-unit>
        <trans-unit id="e520ac9ee3afb03a478372ab0206d4064788659e" translate="yes" xml:space="preserve">
          <source>Standalone#paths</source>
          <target state="translated">Standalone#paths</target>
        </trans-unit>
        <trans-unit id="965b9f639ff1fb0734be88bea22601e4e3c92b4a" translate="yes" xml:space="preserve">
          <source>Standalone#version_dir</source>
          <target state="translated">Standalone#version_dir</target>
        </trans-unit>
        <trans-unit id="cefdd901fee971bf264a72c43be3aebb9e158719" translate="yes" xml:space="preserve">
          <source>Standalone::new</source>
          <target state="translated">Standalone::new</target>
        </trans-unit>
        <trans-unit id="8d4ee167bb64c174c0b872615f4c35e11ed75644" translate="yes" xml:space="preserve">
          <source>Standard internet newline sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcc48809c3ee2b7318e358c376b3998a27b8342" translate="yes" xml:space="preserve">
          <source>Standard output by &lt;a href=&quot;kernel#method-i-p&quot;&gt;&lt;code&gt;p&lt;/code&gt;&lt;/a&gt; returns this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f26a1ddbb78925032da81ac42c3a4d582ed50ba" translate="yes" xml:space="preserve">
          <source>StandardError</source>
          <target state="translated">StandardError</target>
        </trans-unit>
        <trans-unit id="cb7c392ddc50d3e5975e5d6867c605281fd40320" translate="yes" xml:space="preserve">
          <source>Start Of Authority resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafdb5198c92e36ec10dd70c738d9b02acc7105c" translate="yes" xml:space="preserve">
          <source>Start a dRuby server locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0622fb50e97d4994d8b044a117d359889ba8650" translate="yes" xml:space="preserve">
          <source>Start by requiring the standard library &lt;a href=&quot;mutex_m&quot;&gt;&lt;code&gt;Mutex_m&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d3df48d158e1f90bb65715578dbd3c1e9d113c" translate="yes" xml:space="preserve">
          <source>Start of a hold sequence. Dumps to so_temp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410a64c41be2f35e8fcce4560ae6bde428680326" translate="yes" xml:space="preserve">
          <source>Start parsing and returns the value of the root action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54704b3e2688e2b3492a05c119a96a1eda836e31" translate="yes" xml:space="preserve">
          <source>Start tracing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44b4966fe925fa12d1b8602d400394375efa585" translate="yes" xml:space="preserve">
          <source>Starting in version 2.2, most symbols can be garbage collected; these are called &lt;em&gt;mortal&lt;/em&gt; symbols. Most symbols you create (e.g. by calling &lt;code&gt;to_sym&lt;/code&gt;) are mortal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766fabe14cbba434649f3a13f9b7da54e0d997c2" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; session and deletes all messages on the server. If a block is given, each &lt;a href=&quot;popmail&quot;&gt;&lt;code&gt;POPMail&lt;/code&gt;&lt;/a&gt; object is yielded to it before being deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66158c70d4f81a15a22af7a2174a3262f0f6d86" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; session and iterates over each &lt;a href=&quot;popmail&quot;&gt;&lt;code&gt;POPMail&lt;/code&gt;&lt;/a&gt; object, yielding it to the &lt;code&gt;block&lt;/code&gt;. This method is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8752ee1e79d4d27b5fb71dbb603788632f9e6214" translate="yes" xml:space="preserve">
          <source>Starts a &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26549a5bcb2ee041d0d7fc4c98148b07ed24e97" translate="yes" xml:space="preserve">
          <source>Starts a &lt;code&gt;case&lt;/code&gt; expression. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions syntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a355815aefa3c19a9529f95215670393fe1511" translate="yes" xml:space="preserve">
          <source>Starts a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1cc8bcfcadabedb64843d8dcedb6317fa7ebd3" translate="yes" xml:space="preserve">
          <source>Starts a pop3 session, attempts authentication, and quits. This method must not be called while &lt;a href=&quot;pop3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; session is opened. This method raises &lt;a href=&quot;popauthenticationerror&quot;&gt;&lt;code&gt;POPAuthenticationError&lt;/code&gt;&lt;/a&gt; if authentication fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3614aec74d7242bdb64d805896b8ccf31269f39f" translate="yes" xml:space="preserve">
          <source>Starts a section of code that is always run when an exception is raised. See &lt;a href=&quot;syntax/exceptions_rdoc&quot;&gt;exception handling&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50707c26c40788a34a9831621a469087a1bf2cc2" translate="yes" xml:space="preserve">
          <source>Starts an exception handling block. See &lt;a href=&quot;syntax/exceptions_rdoc&quot;&gt;exceptions syntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abac699fa2acdc9944f7b1d9e19b6fd06530425c" translate="yes" xml:space="preserve">
          <source>Starts an exception section of code in a &lt;code&gt;begin&lt;/code&gt; block. See &lt;a href=&quot;syntax/exceptions_rdoc&quot;&gt;exception handling&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923ec5f9cfc38b163ba6e73ab354c74dcc0cd352" translate="yes" xml:space="preserve">
          <source>Starts execution of the block sent to the current method. See &lt;a href=&quot;syntax/methods_rdoc&quot;&gt;methods&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b7b2efcbcfbbc1f31760b02d00b3e1f113be06" translate="yes" xml:space="preserve">
          <source>Starts the &lt;a href=&quot;../../../../net/http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt;&lt;code&gt;connection&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97166543d8fb0fcb50525aedb36b3ec405c409b6" translate="yes" xml:space="preserve">
          <source>Starts the &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; main loop in a new thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e77af17773361d1b111b1acf885d643c15eb4a9" translate="yes" xml:space="preserve">
          <source>Starts the &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; profiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9c374a5c95f78322b2a16801f5d8efdaba3816" translate="yes" xml:space="preserve">
          <source>Starts the parser. &lt;code&gt;init&lt;/code&gt; is a data accumulator and is passed to the next event handler (as of &lt;a href=&quot;../enumerable#method-i-inject&quot;&gt;&lt;code&gt;Enumerable#inject&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab9b7003d019a3a4dd28bf0a19c53dd74edfa7d" translate="yes" xml:space="preserve">
          <source>Starts tracing object allocations from the &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; extension module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b267306f7888c4aba1ad1a0feee0da4cd2c01618" translate="yes" xml:space="preserve">
          <source>Starts tracing object allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39096c0a698a7175c5fb4989b12a6a10ba4ddb5b" translate="yes" xml:space="preserve">
          <source>Stat#&amp;lt;=&amp;gt;</source>
          <target state="translated">Stat#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="387ef11de7189301296ce6efc9893a34ee93134a" translate="yes" xml:space="preserve">
          <source>Stat#atime</source>
          <target state="translated">Stat#atime</target>
        </trans-unit>
        <trans-unit id="31a2c857718bdddbf7422a1d6a096735ab25ec46" translate="yes" xml:space="preserve">
          <source>Stat#birthtime</source>
          <target state="translated">Stat#birthtime</target>
        </trans-unit>
        <trans-unit id="7ae369b9ad4696fc114e0c5b15b84825c992467c" translate="yes" xml:space="preserve">
          <source>Stat#blksize</source>
          <target state="translated">Stat#blksize</target>
        </trans-unit>
        <trans-unit id="6fcde168f6533f41f6c7519a93918d78facf92a7" translate="yes" xml:space="preserve">
          <source>Stat#blockdev?</source>
          <target state="translated">Stat#blockdev?</target>
        </trans-unit>
        <trans-unit id="b1e804bd7d705e7623bf3d421a4eb4201b7e81b4" translate="yes" xml:space="preserve">
          <source>Stat#blocks</source>
          <target state="translated">Stat#blocks</target>
        </trans-unit>
        <trans-unit id="38ea034f72c0e17de57da291530d4ff2d5494331" translate="yes" xml:space="preserve">
          <source>Stat#chardev?</source>
          <target state="translated">Stat#chardev?</target>
        </trans-unit>
        <trans-unit id="8c2759f4e901cc5468cd4010f9e97f9987668111" translate="yes" xml:space="preserve">
          <source>Stat#ctime</source>
          <target state="translated">Stat#ctime</target>
        </trans-unit>
        <trans-unit id="697f79491295e31a8e0ccb9a7585bbd813c1b738" translate="yes" xml:space="preserve">
          <source>Stat#dev</source>
          <target state="translated">Stat#dev</target>
        </trans-unit>
        <trans-unit id="d273513a85aacd1a9f733c5160b1f41d3aa44b51" translate="yes" xml:space="preserve">
          <source>Stat#dev_major</source>
          <target state="translated">Stat#dev_major</target>
        </trans-unit>
        <trans-unit id="b09c515681258aa31dbc009a32fb537ab38d2c2f" translate="yes" xml:space="preserve">
          <source>Stat#dev_minor</source>
          <target state="translated">Stat#dev_minor</target>
        </trans-unit>
        <trans-unit id="3cd3baaee33daddfe5a67e19176e432c87dccc56" translate="yes" xml:space="preserve">
          <source>Stat#directory?</source>
          <target state="translated">Stat#directory?</target>
        </trans-unit>
        <trans-unit id="1a5b489673d7f85c32326893ace887bb5e28efef" translate="yes" xml:space="preserve">
          <source>Stat#executable?</source>
          <target state="translated">Stat#executable?</target>
        </trans-unit>
        <trans-unit id="81c5cad75774493447f78c01d1586f82e036e521" translate="yes" xml:space="preserve">
          <source>Stat#executable_real?</source>
          <target state="translated">Stat#executable_real?</target>
        </trans-unit>
        <trans-unit id="3eca25cb3e04d7bd5f533aef3054734b8938e48d" translate="yes" xml:space="preserve">
          <source>Stat#file?</source>
          <target state="translated">Stat#file?</target>
        </trans-unit>
        <trans-unit id="db215b28e47d8b0d6237cfb7f2cb1622a6a0124f" translate="yes" xml:space="preserve">
          <source>Stat#ftype</source>
          <target state="translated">Stat#ftype</target>
        </trans-unit>
        <trans-unit id="37487ff0453bb658cf446daf874cad61ebe445df" translate="yes" xml:space="preserve">
          <source>Stat#gid</source>
          <target state="translated">Stat#gid</target>
        </trans-unit>
        <trans-unit id="3d936ce696dba189547d47f6be40977e466dbef1" translate="yes" xml:space="preserve">
          <source>Stat#grpowned?</source>
          <target state="translated">Stat#grpowned?</target>
        </trans-unit>
        <trans-unit id="66d99a08cf9b08479de8fd45ff50f9584da522c5" translate="yes" xml:space="preserve">
          <source>Stat#ino</source>
          <target state="translated">Stat#ino</target>
        </trans-unit>
        <trans-unit id="62a34bfd3917fe0c6b05d47775cd0ec289f31227" translate="yes" xml:space="preserve">
          <source>Stat#inspect</source>
          <target state="translated">Stat#inspect</target>
        </trans-unit>
        <trans-unit id="9699e2321a0b1cedd004d5522cfd0b954356c184" translate="yes" xml:space="preserve">
          <source>Stat#mode</source>
          <target state="translated">Stat#mode</target>
        </trans-unit>
        <trans-unit id="9149626c16afc1f6f561d460bbe62be3947d3ac3" translate="yes" xml:space="preserve">
          <source>Stat#mtime</source>
          <target state="translated">Stat#mtime</target>
        </trans-unit>
        <trans-unit id="4025993792e3e90c0901ba7efbd347ee08c38459" translate="yes" xml:space="preserve">
          <source>Stat#nlink</source>
          <target state="translated">Stat#nlink</target>
        </trans-unit>
        <trans-unit id="53b74da94f3715dca520a8adb209704e84a11d05" translate="yes" xml:space="preserve">
          <source>Stat#owned?</source>
          <target state="translated">Stat#owned?</target>
        </trans-unit>
        <trans-unit id="07e6efaa33e60d4ebeb4bb84702f2f703ff13a72" translate="yes" xml:space="preserve">
          <source>Stat#pipe?</source>
          <target state="translated">Stat#pipe?</target>
        </trans-unit>
        <trans-unit id="b0017f80c04a6849792ff746c5cacc9d4e685a76" translate="yes" xml:space="preserve">
          <source>Stat#rdev</source>
          <target state="translated">Stat#rdev</target>
        </trans-unit>
        <trans-unit id="ac9c59e65236586162dc2e37dd0912e7bf734e42" translate="yes" xml:space="preserve">
          <source>Stat#rdev_major</source>
          <target state="translated">Stat#rdev_major</target>
        </trans-unit>
        <trans-unit id="f59051f942a8bb0f061ba2fa40990bd28e5f0038" translate="yes" xml:space="preserve">
          <source>Stat#rdev_minor</source>
          <target state="translated">Stat#rdev_minor</target>
        </trans-unit>
        <trans-unit id="356b971be940774f25ff225e92db11ee95caf557" translate="yes" xml:space="preserve">
          <source>Stat#readable?</source>
          <target state="translated">Stat#readable?</target>
        </trans-unit>
        <trans-unit id="69ad1502759ff87799f5e5efebb81c1adedcdece" translate="yes" xml:space="preserve">
          <source>Stat#readable_real?</source>
          <target state="translated">Stat#readable_real?</target>
        </trans-unit>
        <trans-unit id="6a6c255f2aea7cca128b748e755baf443a6fbf0e" translate="yes" xml:space="preserve">
          <source>Stat#setgid?</source>
          <target state="translated">Stat#setgid?</target>
        </trans-unit>
        <trans-unit id="338bc69d4dd5fa30fa048004c75f6836f2c16e17" translate="yes" xml:space="preserve">
          <source>Stat#setuid?</source>
          <target state="translated">Stat#setuid?</target>
        </trans-unit>
        <trans-unit id="b0a3b72e26b3c8061091aef722ef037bfe5a5a1c" translate="yes" xml:space="preserve">
          <source>Stat#size</source>
          <target state="translated">Stat#size</target>
        </trans-unit>
        <trans-unit id="a61f58677081a721ffbf93f43a84233498475efe" translate="yes" xml:space="preserve">
          <source>Stat#size?</source>
          <target state="translated">Stat#size?</target>
        </trans-unit>
        <trans-unit id="b091d0db04402f82cbca194ffca43a3ecd84ca99" translate="yes" xml:space="preserve">
          <source>Stat#socket?</source>
          <target state="translated">Stat#socket?</target>
        </trans-unit>
        <trans-unit id="0af94cbf592ff3119b445055eb45f6206ef60d42" translate="yes" xml:space="preserve">
          <source>Stat#sticky?</source>
          <target state="translated">Stat#sticky?</target>
        </trans-unit>
        <trans-unit id="8badeee8726aa8acd6a65678997b9062d095aa83" translate="yes" xml:space="preserve">
          <source>Stat#symlink?</source>
          <target state="translated">Stat#symlink?</target>
        </trans-unit>
        <trans-unit id="ebebb6f79d3c04eef32bc4573910c792961eca54" translate="yes" xml:space="preserve">
          <source>Stat#uid</source>
          <target state="translated">Stat#uid</target>
        </trans-unit>
        <trans-unit id="84267ee0c77f92152aa20121666e2066db257c19" translate="yes" xml:space="preserve">
          <source>Stat#world_readable?</source>
          <target state="translated">Stat#world_readable?</target>
        </trans-unit>
        <trans-unit id="e12c1bc3046badd18b454f70994a769332022aac" translate="yes" xml:space="preserve">
          <source>Stat#world_writable?</source>
          <target state="translated">Stat#world_writable?</target>
        </trans-unit>
        <trans-unit id="178d47fc0123c6a69223f2928af0a4eb5cd1740e" translate="yes" xml:space="preserve">
          <source>Stat#writable?</source>
          <target state="translated">Stat#writable?</target>
        </trans-unit>
        <trans-unit id="1a0179504f83ac4261fc4b6c2d969d7399fe2fa1" translate="yes" xml:space="preserve">
          <source>Stat#writable_real?</source>
          <target state="translated">Stat#writable_real?</target>
        </trans-unit>
        <trans-unit id="ab43aa938f6aeb937b0f712748f997d03fc4c6ae" translate="yes" xml:space="preserve">
          <source>Stat#zero?</source>
          <target state="translated">Stat#zero?</target>
        </trans-unit>
        <trans-unit id="f273d8b044e62f391b7724bc825cd5d638f4130b" translate="yes" xml:space="preserve">
          <source>Stat::new</source>
          <target state="translated">Stat::new</target>
        </trans-unit>
        <trans-unit id="4458c023582ff73832ffcf131ed83f96db012c98" translate="yes" xml:space="preserve">
          <source>State or Province &lt;a href=&quot;name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="682f4b61b27359fb6c180b1840ebf7893f925ce9" translate="yes" xml:space="preserve">
          <source>Status#&amp;amp;</source>
          <target state="translated">Status#&amp;amp;</target>
        </trans-unit>
        <trans-unit id="b3865327f7c1245359d33901de9496f2596bef7e" translate="yes" xml:space="preserve">
          <source>Status#&amp;gt;&amp;gt;</source>
          <target state="translated">Status#&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="52de953f9ec2ee0ec0174d3ad6050498b92460fd" translate="yes" xml:space="preserve">
          <source>Status#==</source>
          <target state="translated">Status#==</target>
        </trans-unit>
        <trans-unit id="2943f6f43a043687283ebc1b3ac455a1acb713c7" translate="yes" xml:space="preserve">
          <source>Status#coredump?</source>
          <target state="translated">Status#coredump?</target>
        </trans-unit>
        <trans-unit id="ddd79198fdfdea586dafe0f27518c5badde44b10" translate="yes" xml:space="preserve">
          <source>Status#exited?</source>
          <target state="translated">Status#exited?</target>
        </trans-unit>
        <trans-unit id="82d2fe8c46a42a1353595754f77f79a5f1cf9c67" translate="yes" xml:space="preserve">
          <source>Status#exitstatus</source>
          <target state="translated">Status#exitstatus</target>
        </trans-unit>
        <trans-unit id="14ba25d0e06ffe2698da91a251f91eb40d3d4162" translate="yes" xml:space="preserve">
          <source>Status#inspect</source>
          <target state="translated">Status#inspect</target>
        </trans-unit>
        <trans-unit id="7b9b4bceec23b981fb541a2c7ee35b0d5aada0ff" translate="yes" xml:space="preserve">
          <source>Status#pid</source>
          <target state="translated">Status#pid</target>
        </trans-unit>
        <trans-unit id="5489d71b4172bb163dc0421cfe9c5f08e747f644" translate="yes" xml:space="preserve">
          <source>Status#signaled?</source>
          <target state="translated">Status#signaled?</target>
        </trans-unit>
        <trans-unit id="27ae7d9ce7ea9137d1d7ca45cd7af89ef9ad8e29" translate="yes" xml:space="preserve">
          <source>Status#stopped?</source>
          <target state="translated">Status#stopped?</target>
        </trans-unit>
        <trans-unit id="bb66a3e31d7e59667e2e19356e0d5305f4c75a44" translate="yes" xml:space="preserve">
          <source>Status#stopsig</source>
          <target state="translated">Status#stopsig</target>
        </trans-unit>
        <trans-unit id="c5c04bc40de7af05ec14643d5e05b35a1bb00fd9" translate="yes" xml:space="preserve">
          <source>Status#success?</source>
          <target state="translated">Status#success?</target>
        </trans-unit>
        <trans-unit id="08a0606e374151f0b1e521dc8c366f9e41cedf75" translate="yes" xml:space="preserve">
          <source>Status#termsig</source>
          <target state="translated">Status#termsig</target>
        </trans-unit>
        <trans-unit id="d15e6b4348b8a999adb3690df64da2351a3171d7" translate="yes" xml:space="preserve">
          <source>Status#to_i</source>
          <target state="translated">Status#to_i</target>
        </trans-unit>
        <trans-unit id="580ea251d9d90dd4c2539df36550962a6e3ac7fc" translate="yes" xml:space="preserve">
          <source>Status#to_s</source>
          <target state="translated">Status#to_s</target>
        </trans-unit>
        <trans-unit id="f121a96313eccb4e3fe6a7076dd9d6b4c638d638" translate="yes" xml:space="preserve">
          <source>StatusData</source>
          <target state="translated">StatusData</target>
        </trans-unit>
        <trans-unit id="50dc6705e108a5df62b77e963bfde9a80dd650dc" translate="yes" xml:space="preserve">
          <source>Stop converting after some output is complete but before all of the input was consumed. See &lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;primitive_convert&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4dc45ac818a3f85457e95d87f37ec0c1d6c3fc0" translate="yes" xml:space="preserve">
          <source>Stop parsing of options as soon as an unknown option or a regular argument is encountered. All remaining arguments are passed to the command. This is useful if you have a command that can receive arbitrary additional options, and where those additional options should not be handled by Bundler::Thor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8441461a1cb0ce9500fd65b83195c9c233b407ac" translate="yes" xml:space="preserve">
          <source>Stop the local dRuby server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf5b273310871c7753a5759e7b5eb0d0a352d8" translate="yes" xml:space="preserve">
          <source>Stop the worker threads by sending a poison object down the request queue so as worker threads after retrieving it, shut themselves down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4879041e2b8d9490809801d4e7b6cc64a1edc6c7" translate="yes" xml:space="preserve">
          <source>Stop this server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57b404bb82555381e1407d3056b0d1d014a9138" translate="yes" xml:space="preserve">
          <source>Stop tracing object allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5492e7af5bc227efd8741534cde9d83c515b2fee" translate="yes" xml:space="preserve">
          <source>StopIteration</source>
          <target state="translated">StopIteration</target>
        </trans-unit>
        <trans-unit id="0b8cb7ddc290177677d6db8482c7e7869c6cdd8c" translate="yes" xml:space="preserve">
          <source>StopIteration#result</source>
          <target state="translated">StopIteration#result</target>
        </trans-unit>
        <trans-unit id="c0f5fc54132bcc581a8f3e6f9e709d88f010548a" translate="yes" xml:space="preserve">
          <source>Stops execution of the current thread, putting it into a &amp;ldquo;sleep'' state, and schedules execution of another thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b58cfb03f1f2453c6e9f65b57b0e85561003437" translate="yes" xml:space="preserve">
          <source>Stops the &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; profiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a522b6268b48cfc259700755c50802c6e07e47" translate="yes" xml:space="preserve">
          <source>Store options to a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99050a3c152c18cdedb48f84581ea0a2c3441dd8" translate="yes" xml:space="preserve">
          <source>Store session data on the server and close the session storage. For some session storage types, this is a no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5751b17d312b6bfda641d33a7d0b6d710e5f1778" translate="yes" xml:space="preserve">
          <source>Store session data on the server. For some session storage types, this is a no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f3270be875cd03659cc9419ab9e815a4ce7e99" translate="yes" xml:space="preserve">
          <source>Store::new</source>
          <target state="translated">Store::new</target>
        </trans-unit>
        <trans-unit id="6e4ac360d39b514676328838426c6874e452a359" translate="yes" xml:space="preserve">
          <source>Stores &lt;code&gt;value&lt;/code&gt; in database with &lt;code&gt;key&lt;/code&gt; as the index. &lt;code&gt;value&lt;/code&gt; is converted to YAML before being stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95ab5fe7e3d579eb39cfcd1da92e4c015ca77fc" translate="yes" xml:space="preserve">
          <source>Stores a new &lt;code&gt;value&lt;/code&gt; in the database with the given &lt;code&gt;key&lt;/code&gt; as an index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146af4c34a7dd2458f51b4eeae4ce864d6ff0ffb" translate="yes" xml:space="preserve">
          <source>Stores all parameters of key to the hash INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!! Don't use :-)) (I's up to you)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f7e6544139e490b40c9db48af00a20ddd2cf93" translate="yes" xml:space="preserve">
          <source>Stores all parameters of key to the hash. The hash has keys 'n', 'e', 'd', 'p', 'q', 'dmp1', 'dmq1', 'iqmp'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3570094f2bc64aa1c9e8e43ab712c86e4ec113fc" translate="yes" xml:space="preserve">
          <source>Stores an individual Ruby object or a hierarchy of Ruby objects in the data store file under the root &lt;em&gt;name&lt;/em&gt;. Assigning to a &lt;em&gt;name&lt;/em&gt; already in the data store clobbers the old data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544478144432584c26f4ab45d483eb5625551fdf" translate="yes" xml:space="preserve">
          <source>Stores and return the source root for this class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f857b25f5972c5b8a423d72024dad180a67ef53" translate="yes" xml:space="preserve">
          <source>Stores class name (Complex) along with real value &lt;code&gt;r&lt;/code&gt; and imaginary value &lt;code&gt;i&lt;/code&gt; as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208e873e025bfa9167c1f2e89c27eb69aa853887" translate="yes" xml:space="preserve">
          <source>Stores class name (Date) with Julian year &lt;code&gt;y&lt;/code&gt;, month &lt;code&gt;m&lt;/code&gt;, day &lt;code&gt;d&lt;/code&gt; and Day of Calendar Reform &lt;code&gt;sg&lt;/code&gt; as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be00f9f8d76598de3e80c73f2c67e0bff02efb2a" translate="yes" xml:space="preserve">
          <source>Stores class name (DateTime) with Julian year &lt;code&gt;y&lt;/code&gt;, month &lt;code&gt;m&lt;/code&gt;, day &lt;code&gt;d&lt;/code&gt;, hour &lt;code&gt;H&lt;/code&gt;, minute &lt;code&gt;M&lt;/code&gt;, second &lt;code&gt;S&lt;/code&gt;, offset &lt;code&gt;of&lt;/code&gt; and Day of Calendar Reform &lt;code&gt;sg&lt;/code&gt; as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d10732f949748b8dcef82c580d1cf264ab9a6d" translate="yes" xml:space="preserve">
          <source>Stores class name (Exception) with message &lt;code&gt;m&lt;/code&gt; and backtrace array &lt;code&gt;b&lt;/code&gt; as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3feb3c280ba60d557ab926a7e569175c90ced9d4" translate="yes" xml:space="preserve">
          <source>Stores class name (OpenStruct) with this struct's values &lt;code&gt;v&lt;/code&gt; as a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05337dc14f10c5a2e91c90adf4a4ef47b4c184e" translate="yes" xml:space="preserve">
          <source>Stores class name (Range) with &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; array of arguments &lt;code&gt;a&lt;/code&gt; which include &lt;code&gt;first&lt;/code&gt; (integer), &lt;code&gt;last&lt;/code&gt; (integer), and &lt;code&gt;exclude_end?&lt;/code&gt; (boolean) as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d6b71981c8916223e4e2de22b7c6336d9cb4bc" translate="yes" xml:space="preserve">
          <source>Stores class name (Rational) along with numerator value &lt;code&gt;n&lt;/code&gt; and denominator value &lt;code&gt;d&lt;/code&gt; as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba51f5f9f5cdece0bc22a9dd07e51870949aa74" translate="yes" xml:space="preserve">
          <source>Stores class name (Regexp) with options &lt;code&gt;o&lt;/code&gt; and source &lt;code&gt;s&lt;/code&gt; (Regexp or &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;) as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a52cd50470fc7670ff97fb4237a1ef05b54d62" translate="yes" xml:space="preserve">
          <source>Stores class name (Struct) with &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; values &lt;code&gt;v&lt;/code&gt; as a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string. Only named structs are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a5143ce797989e07ac2ac8141e176a5faef9db" translate="yes" xml:space="preserve">
          <source>Stores class name (Symbol) with &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; representation of &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; as a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6defd49648f28de5c2eb7185b2d4cbc3a05f65b7" translate="yes" xml:space="preserve">
          <source>Stores class name (Time) with number of seconds since epoch and number of microseconds for &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8192fe76ed704c2dada0dc5cfb6f29808f278cf" translate="yes" xml:space="preserve">
          <source>Stores the specified string value in the database, indexed via the string key provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d964743b80c0bf26433eae755bef6f206f94b664" translate="yes" xml:space="preserve">
          <source>Stores value &lt;code&gt;v&lt;/code&gt; at &lt;code&gt;key&lt;/code&gt; in the &lt;a href=&quot;gw&quot;&gt;&lt;code&gt;GW&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095b3adee26e95220cfacbd2c8fb411283d56262" translate="yes" xml:space="preserve">
          <source>Storing Passwords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91154ae40f5c9b613c122401b17bb3bd547dc678" translate="yes" xml:space="preserve">
          <source>Storing session state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091c3c15745451efa6b34c060d8472161429483e" translate="yes" xml:space="preserve">
          <source>Stream Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe8162752c4561663a0f7e7a4485285afd70b8c" translate="yes" xml:space="preserve">
          <source>StreamEnd</source>
          <target state="translated">StreamEnd</target>
        </trans-unit>
        <trans-unit id="ad6705c478479efdc5c6a3346356095a9289d6e8" translate="yes" xml:space="preserve">
          <source>StreamError</source>
          <target state="translated">StreamError</target>
        </trans-unit>
        <trans-unit id="d599a86d66e1a156348d05af50f8ce3f2de753cb" translate="yes" xml:space="preserve">
          <source>StreamUtils_</source>
          <target state="translated">StreamUtils_</target>
        </trans-unit>
        <trans-unit id="4ed210abd2466c5dcee1d509478aa3c3169a2987" translate="yes" xml:space="preserve">
          <source>StreamUtils_#fu_blksize</source>
          <target state="translated">StreamUtils_#fu_blksize</target>
        </trans-unit>
        <trans-unit id="dae4c8f03621fcf7afcbbd0342c8b65f38baa199" translate="yes" xml:space="preserve">
          <source>StreamUtils_#fu_default_blksize</source>
          <target state="translated">StreamUtils_#fu_default_blksize</target>
        </trans-unit>
        <trans-unit id="0490fe069116b98a7803dbbf5cbcbfdaf2b63bd6" translate="yes" xml:space="preserve">
          <source>StreamUtils_#fu_stream_blksize</source>
          <target state="translated">StreamUtils_#fu_stream_blksize</target>
        </trans-unit>
        <trans-unit id="57350b08cd8bd763293dcdb07903cf9af7b26a1b" translate="yes" xml:space="preserve">
          <source>StreamUtils_#fu_windows?</source>
          <target state="translated">StreamUtils_#fu_windows?</target>
        </trans-unit>
        <trans-unit id="f7ae5620167f9c698fa7e59380a243f67d4a749f" translate="yes" xml:space="preserve">
          <source>Streaming Response Bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="bf9d59615ab88b1187ff0b1a75d2be0b78f2e842" translate="yes" xml:space="preserve">
          <source>String#%</source>
          <target state="translated">String#%</target>
        </trans-unit>
        <trans-unit id="adb2ef728be64cc5ae7f77b2dca54e3bc72503b5" translate="yes" xml:space="preserve">
          <source>String#*</source>
          <target state="translated">String#*</target>
        </trans-unit>
        <trans-unit id="3538c9ca677648d07599cdc93ff71c85282d2174" translate="yes" xml:space="preserve">
          <source>String#+</source>
          <target state="translated">String#+</target>
        </trans-unit>
        <trans-unit id="29ae4070c75945e7e68c4aae3c0bf2d33a40a559" translate="yes" xml:space="preserve">
          <source>String#+@</source>
          <target state="translated">String#+@</target>
        </trans-unit>
        <trans-unit id="2a7581f046e5af0c7217754905b299e0ac2cfb7c" translate="yes" xml:space="preserve">
          <source>String#-@</source>
          <target state="translated">String#-@</target>
        </trans-unit>
        <trans-unit id="2a6f34e813333f3e6f2eaac5d89db4e84f8c9d1e" translate="yes" xml:space="preserve">
          <source>String#==</source>
          <target state="translated">String#==</target>
        </trans-unit>
        <trans-unit id="9f093092046c55fae5562f2f20bd6348b1910d23" translate="yes" xml:space="preserve">
          <source>String#===</source>
          <target state="translated">String#===</target>
        </trans-unit>
        <trans-unit id="77adf2b062b7cce16345ae67aff4a489b150147f" translate="yes" xml:space="preserve">
          <source>String#=~</source>
          <target state="translated">String#=~</target>
        </trans-unit>
        <trans-unit id="a66e5be1f6b436ba791354847e28fcd59d01a50f" translate="yes" xml:space="preserve">
          <source>String#[]</source>
          <target state="translated">String#[]</target>
        </trans-unit>
        <trans-unit id="25d7e7c17e5919d74909792dbb10ed34433cc268" translate="yes" xml:space="preserve">
          <source>String#[]=</source>
          <target state="translated">String#[]=</target>
        </trans-unit>
        <trans-unit id="4727115603a2667c6dec762166eed8b274c2886e" translate="yes" xml:space="preserve">
          <source>String#b</source>
          <target state="translated">String#b</target>
        </trans-unit>
        <trans-unit id="183fbbefbd0bc9c54effc7f82f97f3bad2021eaa" translate="yes" xml:space="preserve">
          <source>String#chop</source>
          <target state="translated">String#chop</target>
        </trans-unit>
        <trans-unit id="b59787a161a4eebec2a5dccdcbe69af59f53d85e" translate="yes" xml:space="preserve">
          <source>String#chr</source>
          <target state="translated">String#chr</target>
        </trans-unit>
        <trans-unit id="d6684c844378504eb0a529d2f126f069fcb86faa" translate="yes" xml:space="preserve">
          <source>String#dump</source>
          <target state="translated">String#dump</target>
        </trans-unit>
        <trans-unit id="b9519953bc5bd88f97151b8f9ed3df4b8c8ec90c" translate="yes" xml:space="preserve">
          <source>String#eql?</source>
          <target state="translated">String#eql?</target>
        </trans-unit>
        <trans-unit id="bee1f23d795ececf40655f5253b99a0c23f57797" translate="yes" xml:space="preserve">
          <source>String#gsub</source>
          <target state="translated">String#gsub</target>
        </trans-unit>
        <trans-unit id="8f39ad35aaf7d6814e612a044e188a8be56fae77" translate="yes" xml:space="preserve">
          <source>String#hash</source>
          <target state="translated">String#hash</target>
        </trans-unit>
        <trans-unit id="311b698b3ff953d5a45d114a45cffca80a297a53" translate="yes" xml:space="preserve">
          <source>String#hex</source>
          <target state="translated">String#hex</target>
        </trans-unit>
        <trans-unit id="1ab9f71cba6661f36e032407db3cd91167d4c8c7" translate="yes" xml:space="preserve">
          <source>String#iseuc &amp;rarr; true or false &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bede3610d0c2d4ec705e83b6aa72fd1d9ae113" translate="yes" xml:space="preserve">
          <source>String#isjis &amp;rarr; true or false &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8621a76d144c176bb89dbfec650a28e04610dad3" translate="yes" xml:space="preserve">
          <source>String#issjis &amp;rarr; true or false &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6c1ad567fbddc44b950f7c6fcdfb637344f777" translate="yes" xml:space="preserve">
          <source>String#isutf8 &amp;rarr; true or false &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238d1be10dd8b952dd9f31314633adeffceb9f91" translate="yes" xml:space="preserve">
          <source>String#kconv(to_enc, from_enc) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988424e0704e9f2e5fb436e936c36565c1044a8a" translate="yes" xml:space="preserve">
          <source>String#next</source>
          <target state="translated">String#next</target>
        </trans-unit>
        <trans-unit id="2b58db0bcb864892bb0316f57904c1128adf268a" translate="yes" xml:space="preserve">
          <source>String#oct</source>
          <target state="translated">String#oct</target>
        </trans-unit>
        <trans-unit id="ad0a2f7ff25c0d0827f3eca31a39c731c318abac" translate="yes" xml:space="preserve">
          <source>String#ord</source>
          <target state="translated">String#ord</target>
        </trans-unit>
        <trans-unit id="f6bd1d0ecc206a7ff38c45de6ca45fdcdfe80e64" translate="yes" xml:space="preserve">
          <source>String#scan</source>
          <target state="translated">String#scan</target>
        </trans-unit>
        <trans-unit id="62cb82806aec7298e04f2da5d68b7d2ed384a2fc" translate="yes" xml:space="preserve">
          <source>String#size</source>
          <target state="translated">String#size</target>
        </trans-unit>
        <trans-unit id="f198e79ddffd73d62247fb3fb08b92659b153f36" translate="yes" xml:space="preserve">
          <source>String#sub</source>
          <target state="translated">String#sub</target>
        </trans-unit>
        <trans-unit id="0512751147f53c7482ab8e252f5fa27fbf22d726" translate="yes" xml:space="preserve">
          <source>String#sub!</source>
          <target state="translated">String#sub!</target>
        </trans-unit>
        <trans-unit id="fa7d9008db0f24a966f1e1368e921eb65773eb34" translate="yes" xml:space="preserve">
          <source>String#succ</source>
          <target state="translated">String#succ</target>
        </trans-unit>
        <trans-unit id="f245c061f34ebb33385a39f9c8cff8328a11fd69" translate="yes" xml:space="preserve">
          <source>String#sum</source>
          <target state="translated">String#sum</target>
        </trans-unit>
        <trans-unit id="e3ef6351db1110820935363bf4a03a9ce8420723" translate="yes" xml:space="preserve">
          <source>String#to_c</source>
          <target state="translated">String#to_c</target>
        </trans-unit>
        <trans-unit id="80ca7a40ee28a4742b3114684c74c11a60ac2734" translate="yes" xml:space="preserve">
          <source>String#to_f</source>
          <target state="translated">String#to_f</target>
        </trans-unit>
        <trans-unit id="f08ae2b5ff529a9ed0784394f76e4c3cd516d998" translate="yes" xml:space="preserve">
          <source>String#to_i</source>
          <target state="translated">String#to_i</target>
        </trans-unit>
        <trans-unit id="f2b62083db4e7f2dddcd27e46f864d65533f1937" translate="yes" xml:space="preserve">
          <source>String#to_r</source>
          <target state="translated">String#to_r</target>
        </trans-unit>
        <trans-unit id="a9641696d55f5e24ecd488d9a0ec86d805a32913" translate="yes" xml:space="preserve">
          <source>String#to_s</source>
          <target state="translated">String#to_s</target>
        </trans-unit>
        <trans-unit id="61842c1a9305b5fbf134d6d10ab847ddc899d742" translate="yes" xml:space="preserve">
          <source>String#toeuc &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c0f597f32485061298d46f7a7167c2680008c3" translate="yes" xml:space="preserve">
          <source>String#tojis &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509b8f182bb6872c6c4b27dc9a1b53da4ac28f64" translate="yes" xml:space="preserve">
          <source>String#tolocale &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29349c1877cd026029b175dc04c80563e0e4ccc4" translate="yes" xml:space="preserve">
          <source>String#tosjis &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b9c84e873c155332258b3dfeebe27e2bdf76bf" translate="yes" xml:space="preserve">
          <source>String#toutf16 &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27018ac0f6c25c4ebec995471378cb8a42b8e679" translate="yes" xml:space="preserve">
          <source>String#toutf32 &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf0caeaf71eb0d4b21c74d8d165712064335161" translate="yes" xml:space="preserve">
          <source>String#toutf8 &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25527b190fb8d46a7625aa75a36191ea85ec70b" translate="yes" xml:space="preserve">
          <source>String#tr</source>
          <target state="translated">String#tr</target>
        </trans-unit>
        <trans-unit id="bf2c8ec5e9f145b3b82ec7dcc807bcf371c60b50" translate="yes" xml:space="preserve">
          <source>String#tr!</source>
          <target state="translated">String#tr!</target>
        </trans-unit>
        <trans-unit id="87eb76295b0ee4e6b984d4e5de77d1be5fd0710c" translate="yes" xml:space="preserve">
          <source>String#tr_s</source>
          <target state="translated">String#tr_s</target>
        </trans-unit>
        <trans-unit id="1484bba9cd6727dea59fbfa413416301e96c860f" translate="yes" xml:space="preserve">
          <source>String#upto</source>
          <target state="translated">String#upto</target>
        </trans-unit>
        <trans-unit id="60c2365faf5b27ef44dd50bd733d92bb3a8127b6" translate="yes" xml:space="preserve">
          <source>String(arg) &amp;rarr; string &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca8a62431688560f9f8fdcb32f99ce7b9047ac9" translate="yes" xml:space="preserve">
          <source>String(s) to work with, will be converted to RFC3986 URIs before merging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ce8b7b7c82f87755520bec6550c75627011d70" translate="yes" xml:space="preserve">
          <source>String: the string's data and length is passed to the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38701de11785858262af84419e2c1656e6cde22a" translate="yes" xml:space="preserve">
          <source>String::new</source>
          <target state="translated">String::new</target>
        </trans-unit>
        <trans-unit id="f459ac31108d7fcf72c2b100c8b0cfc56e6e4323" translate="yes" xml:space="preserve">
          <source>StringChar</source>
          <target state="translated">StringChar</target>
        </trans-unit>
        <trans-unit id="71b9f81312a912f581ac74b4c41e1dabf6deb89c" translate="yes" xml:space="preserve">
          <source>StringIO</source>
          <target state="translated">StringIO</target>
        </trans-unit>
        <trans-unit id="7b004ee3b98d8f8dbcf83457624c64c8b251b792" translate="yes" xml:space="preserve">
          <source>StringIO#each</source>
          <target state="translated">StringIO#each</target>
        </trans-unit>
        <trans-unit id="781db7191b93219eadf62726eff26b225bd6639b" translate="yes" xml:space="preserve">
          <source>StringIO#eof</source>
          <target state="translated">StringIO#eof</target>
        </trans-unit>
        <trans-unit id="7ba0fb60e542e70bf0b6ac3bda13a98473793b95" translate="yes" xml:space="preserve">
          <source>StringIO#eof?</source>
          <target state="translated">StringIO#eof?</target>
        </trans-unit>
        <trans-unit id="eb3931f778ee72edebf08e42c63b01dc22820872" translate="yes" xml:space="preserve">
          <source>StringIO#getc</source>
          <target state="translated">StringIO#getc</target>
        </trans-unit>
        <trans-unit id="25336cb96d2516eda7dbcc2a10f737329baf4069" translate="yes" xml:space="preserve">
          <source>StringIO#gets</source>
          <target state="translated">StringIO#gets</target>
        </trans-unit>
        <trans-unit id="4a884cc297307e26fed18a18720f0d386d25eb08" translate="yes" xml:space="preserve">
          <source>StringIO#pid</source>
          <target state="translated">StringIO#pid</target>
        </trans-unit>
        <trans-unit id="e104506be236e1d6b5c2b9c1b7dcc93d5c429368" translate="yes" xml:space="preserve">
          <source>StringIO#pos</source>
          <target state="translated">StringIO#pos</target>
        </trans-unit>
        <trans-unit id="d430ce6775d26c3cb04345897c46ec81f61985d6" translate="yes" xml:space="preserve">
          <source>StringIO#pos=</source>
          <target state="translated">StringIO#pos=</target>
        </trans-unit>
        <trans-unit id="d21b2754c7efd84bbfd9049a71c5d98a55885dd5" translate="yes" xml:space="preserve">
          <source>StringIO#putc</source>
          <target state="translated">StringIO#putc</target>
        </trans-unit>
        <trans-unit id="2af0107510d4a5bdcd32ba2c43094357bdbb167f" translate="yes" xml:space="preserve">
          <source>StringIO#read</source>
          <target state="translated">StringIO#read</target>
        </trans-unit>
        <trans-unit id="bcac52f14ce7f8954a480c000647448ab2604310" translate="yes" xml:space="preserve">
          <source>StringIO#seek</source>
          <target state="translated">StringIO#seek</target>
        </trans-unit>
        <trans-unit id="a0f2c6e1b2c970102b0a4b20c46d1d5eb6166c3a" translate="yes" xml:space="preserve">
          <source>StringIO#size</source>
          <target state="translated">StringIO#size</target>
        </trans-unit>
        <trans-unit id="c3b31ca55c224a6941cff60eacbbeffbfeaaf9d4" translate="yes" xml:space="preserve">
          <source>StringIO#sync</source>
          <target state="translated">StringIO#sync</target>
        </trans-unit>
        <trans-unit id="bb358e3bc5a2fa17be1cd1df07d750618baf266f" translate="yes" xml:space="preserve">
          <source>StringIO#tell</source>
          <target state="translated">StringIO#tell</target>
        </trans-unit>
        <trans-unit id="9db5746e187ad69dadf3334483e525840d0aedae" translate="yes" xml:space="preserve">
          <source>StringIO#tty?</source>
          <target state="translated">StringIO#tty?</target>
        </trans-unit>
        <trans-unit id="61572801efb137edf9b941bff0319bb68348c8f8" translate="yes" xml:space="preserve">
          <source>StringIO::new</source>
          <target state="translated">StringIO::new</target>
        </trans-unit>
        <trans-unit id="01b5d7672bcb708b4c09fce72b5043513947c27f" translate="yes" xml:space="preserve">
          <source>StringIO::open</source>
          <target state="translated">StringIO::open</target>
        </trans-unit>
        <trans-unit id="6351d59fca01f76f44681083826bbfd5fe021e3c" translate="yes" xml:space="preserve">
          <source>StringScanner</source>
          <target state="translated">StringScanner</target>
        </trans-unit>
        <trans-unit id="54df0d813664e56aa7ce8fa20e0bac6c7495ba3c" translate="yes" xml:space="preserve">
          <source>StringScanner#[]</source>
          <target state="translated">StringScanner#[]</target>
        </trans-unit>
        <trans-unit id="f527856b56142581aaf306632583e82291401f8f" translate="yes" xml:space="preserve">
          <source>StringScanner#eos?</source>
          <target state="translated">StringScanner#eos?</target>
        </trans-unit>
        <trans-unit id="a669b66ba5397ed7fad83baa2636a56c7e9370b0" translate="yes" xml:space="preserve">
          <source>StringScanner#peek</source>
          <target state="translated">StringScanner#peek</target>
        </trans-unit>
        <trans-unit id="9ff117b8d596a583446deb7447e425fc20ba374f" translate="yes" xml:space="preserve">
          <source>StringScanner#peep</source>
          <target state="translated">StringScanner#peep</target>
        </trans-unit>
        <trans-unit id="ec640882e7b2cb5c27fec711b5da6adf30a88e84" translate="yes" xml:space="preserve">
          <source>StringScanner#pos</source>
          <target state="translated">StringScanner#pos</target>
        </trans-unit>
        <trans-unit id="8f8c18aa761b4c18cc4fb80cd4a891a9f29b25b8" translate="yes" xml:space="preserve">
          <source>StringScanner#pos=</source>
          <target state="translated">StringScanner#pos=</target>
        </trans-unit>
        <trans-unit id="381fa4ec3d87acb4fd0bc44e0945b5561edda8e8" translate="yes" xml:space="preserve">
          <source>StringScanner#rest</source>
          <target state="translated">StringScanner#rest</target>
        </trans-unit>
        <trans-unit id="c56ec7389f759d7a46d179a38e03125d18bb12b4" translate="yes" xml:space="preserve">
          <source>StringScanner#scan</source>
          <target state="translated">StringScanner#scan</target>
        </trans-unit>
        <trans-unit id="3cd65e7884c2290d6194bb747eb56e1c6aee72ab" translate="yes" xml:space="preserve">
          <source>StringScanner#size</source>
          <target state="translated">StringScanner#size</target>
        </trans-unit>
        <trans-unit id="96677d034ecdc0e506bcd29cd32604eeea490201" translate="yes" xml:space="preserve">
          <source>StringScanner#skip</source>
          <target state="translated">StringScanner#skip</target>
        </trans-unit>
        <trans-unit id="01be4e24f41b21e4b62505de3da8bc952c1a133b" translate="yes" xml:space="preserve">
          <source>StringScanner::new</source>
          <target state="translated">StringScanner::new</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="999234e5d21b36189f614b48601909ba0594e006" translate="yes" xml:space="preserve">
          <source>Strings returned from &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26f33eb045a701589d0af0c46914d930a8fa58d" translate="yes" xml:space="preserve">
          <source>Strings returned from &lt;a href=&quot;sdbm&quot;&gt;&lt;code&gt;SDBM&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7e4e077b2d155ef802011bf5fd0cae4d6801ed" translate="yes" xml:space="preserve">
          <source>Strings to be parsed in default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfda88b5dd0e52ddcbf818b14ade682db0988ca4" translate="yes" xml:space="preserve">
          <source>Strips up to &lt;code&gt;width&lt;/code&gt; leading whitespaces from &lt;code&gt;input&lt;/code&gt;, and returns the stripped column width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ab848fe5c4b2e5f638f279c7f13cc481bac6da" translate="yes" xml:space="preserve">
          <source>Struct</source>
          <target state="translated">Struct</target>
        </trans-unit>
        <trans-unit id="81c31cf182397d9c37f278210e0ce7b78e7d635d" translate="yes" xml:space="preserve">
          <source>Struct#==</source>
          <target state="translated">Struct#==</target>
        </trans-unit>
        <trans-unit id="22ce7a1ce878fdb7974a25d42ae6bac58ae4884b" translate="yes" xml:space="preserve">
          <source>Struct#[]</source>
          <target state="translated">Struct#[]</target>
        </trans-unit>
        <trans-unit id="42cfb08abb8a0a92d4be9eb5da31372100a863c7" translate="yes" xml:space="preserve">
          <source>Struct#[]=</source>
          <target state="translated">Struct#[]=</target>
        </trans-unit>
        <trans-unit id="affdbf5e3ed71091e48d9fff64cba6b2afedb73e" translate="yes" xml:space="preserve">
          <source>Struct#dig</source>
          <target state="translated">Struct#dig</target>
        </trans-unit>
        <trans-unit id="55e03aa8d7fc91705697f1b3b9b191e7e49b7282" translate="yes" xml:space="preserve">
          <source>Struct#each</source>
          <target state="translated">Struct#each</target>
        </trans-unit>
        <trans-unit id="aa6eee04ce51fbf1566efa3727d61c0d47cc88ff" translate="yes" xml:space="preserve">
          <source>Struct#eql?</source>
          <target state="translated">Struct#eql?</target>
        </trans-unit>
        <trans-unit id="67114f09f51cbfacd7c89e98d906513d5149fe2d" translate="yes" xml:space="preserve">
          <source>Struct#hash</source>
          <target state="translated">Struct#hash</target>
        </trans-unit>
        <trans-unit id="f5397ff4c07908209cc94cd296f32bad08a04653" translate="yes" xml:space="preserve">
          <source>Struct#size</source>
          <target state="translated">Struct#size</target>
        </trans-unit>
        <trans-unit id="fac71b3126a49574dc71692533a3a4d3c5b4b37c" translate="yes" xml:space="preserve">
          <source>Struct#to_a</source>
          <target state="translated">Struct#to_a</target>
        </trans-unit>
        <trans-unit id="0dfba0b0a9b5b39ad4c28a823edfe4f78aadbb9b" translate="yes" xml:space="preserve">
          <source>Struct#to_h</source>
          <target state="translated">Struct#to_h</target>
        </trans-unit>
        <trans-unit id="451a1db56e1696a4b414c13b52da97e14b7c4ccb" translate="yes" xml:space="preserve">
          <source>Struct#to_s</source>
          <target state="translated">Struct#to_s</target>
        </trans-unit>
        <trans-unit id="b3bdca72c4e4f98d1f17d26c131a9f174e9ece24" translate="yes" xml:space="preserve">
          <source>Struct.new(:media_type, :subtype, :param)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e76abf93ecb1bef9849958e3d0459683006ee31" translate="yes" xml:space="preserve">
          <source>Struct.new(:media_type, :subtype, :param, :content_id, :description, :encoding, :size, :envelope, :body, :lines, :md5, :disposition, :language, :extension)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31983288ad764712bec539c9c635ed82982a3192" translate="yes" xml:space="preserve">
          <source>Struct.new(:media_type, :subtype, :param, :content_id, :description, :encoding, :size, :lines, :md5, :disposition, :language, :extension)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f2cf34794c837b017f1eacf615dfe079235e12" translate="yes" xml:space="preserve">
          <source>Struct.new(:media_type, :subtype, :param, :content_id, :description, :encoding, :size, :md5, :disposition, :language, :extension)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a52987f4b8335887f36c1147586a424a80d212a" translate="yes" xml:space="preserve">
          <source>Struct.new(:media_type, :subtype, :params, :content_id, :description, :encoding, :size)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de1281a361f9cbcd14127d904066b751719db92" translate="yes" xml:space="preserve">
          <source>Struct.new(:media_type, :subtype, :parts, :param, :disposition, :language, :extension)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035a2f614bb97fbca8a7bdbfbc515edcb1f68a08" translate="yes" xml:space="preserve">
          <source>Struct.new(:name, :description, :long_description, :usage, :options, :ancestor_name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f6bba99004c6cf83be7f4e5739498da9b5ea31" translate="yes" xml:space="preserve">
          <source>Struct::new</source>
          <target state="translated">Struct::new</target>
        </trans-unit>
        <trans-unit id="f9b9cab1e8806976acaddec99d276af78c8cc893" translate="yes" xml:space="preserve">
          <source>StructClass[value, ...] &amp;rarr; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaad9857127ee0d53f12204782cc5e94c65df48" translate="yes" xml:space="preserve">
          <source>StubSpecification</source>
          <target state="translated">StubSpecification</target>
        </trans-unit>
        <trans-unit id="c903b00a488e29996d058e4a5fc7266f6399e63e" translate="yes" xml:space="preserve">
          <source>StubSpecification#activated</source>
          <target state="translated">StubSpecification#activated</target>
        </trans-unit>
        <trans-unit id="e13d22c358f782a1d4ed2ef00f2a54ee7fa71909" translate="yes" xml:space="preserve">
          <source>StubSpecification#activated=</source>
          <target state="translated">StubSpecification#activated=</target>
        </trans-unit>
        <trans-unit id="f28e742f429cbd18ade5a8d8dc15a61ee00a8f2e" translate="yes" xml:space="preserve">
          <source>StubSpecification#default_gem</source>
          <target state="translated">StubSpecification#default_gem</target>
        </trans-unit>
        <trans-unit id="c862c8141ca7527bfa3bacb1e8637dca9e4110d1" translate="yes" xml:space="preserve">
          <source>StubSpecification#full_gem_path</source>
          <target state="translated">StubSpecification#full_gem_path</target>
        </trans-unit>
        <trans-unit id="f82c53b7e9315bde7fd94a873917937f2d786700" translate="yes" xml:space="preserve">
          <source>StubSpecification#full_require_paths</source>
          <target state="translated">StubSpecification#full_require_paths</target>
        </trans-unit>
        <trans-unit id="b6358e19876de9d5424f6e6e7ec5a2f3c7dbf6f9" translate="yes" xml:space="preserve">
          <source>StubSpecification#ignored</source>
          <target state="translated">StubSpecification#ignored</target>
        </trans-unit>
        <trans-unit id="abfad3aa5cd0a1af85aca3ce6bf8ae4f26e4d1e4" translate="yes" xml:space="preserve">
          <source>StubSpecification#load_paths</source>
          <target state="translated">StubSpecification#load_paths</target>
        </trans-unit>
        <trans-unit id="7afb3098dad5655bad37cb022686d869822500ce" translate="yes" xml:space="preserve">
          <source>StubSpecification#loaded_from</source>
          <target state="translated">StubSpecification#loaded_from</target>
        </trans-unit>
        <trans-unit id="43310896d345d64a53ab76db0a5219f076911610" translate="yes" xml:space="preserve">
          <source>StubSpecification#matches_for_glob</source>
          <target state="translated">StubSpecification#matches_for_glob</target>
        </trans-unit>
        <trans-unit id="52509987164f19d0e60eaeb4d6c9e8f063582243" translate="yes" xml:space="preserve">
          <source>StubSpecification#missing_extensions?</source>
          <target state="translated">StubSpecification#missing_extensions?</target>
        </trans-unit>
        <trans-unit id="f77d367ef60553109f18e58da7813614c06c49f4" translate="yes" xml:space="preserve">
          <source>StubSpecification#raw_require_paths</source>
          <target state="translated">StubSpecification#raw_require_paths</target>
        </trans-unit>
        <trans-unit id="dd9118f931d2731cf0ee388edd2954e6e21d37fd" translate="yes" xml:space="preserve">
          <source>StubSpecification#source=</source>
          <target state="translated">StubSpecification#source=</target>
        </trans-unit>
        <trans-unit id="9c50fdf9998760c8a130ea8c139aae970308d1ec" translate="yes" xml:space="preserve">
          <source>StubSpecification#stub</source>
          <target state="translated">StubSpecification#stub</target>
        </trans-unit>
        <trans-unit id="3965c1d001ce82dfbaa665f2f0174650afa02496" translate="yes" xml:space="preserve">
          <source>StubSpecification#to_yaml</source>
          <target state="translated">StubSpecification#to_yaml</target>
        </trans-unit>
        <trans-unit id="efa96786bd03c5d29eada02dd0a03928081a119e" translate="yes" xml:space="preserve">
          <source>StubSpecification::from_stub</source>
          <target state="translated">StubSpecification::from_stub</target>
        </trans-unit>
        <trans-unit id="6c3459d2b12a6b641ddb6881f44415623add9836" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a62352462c85ed450536f665dae40366eb07b39" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt; when zlib returns a Z_BUF_ERROR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de16b202b9af0ef3365ed4dc97aea731872bc05b" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Zlib::Error&lt;/code&gt;&lt;/a&gt; when zlib returns a Z_DATA_ERROR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1607a658c519272c3ac3849c5ac742808be13a20" translate="yes" xml:space="preserve">
          <source>Subcommand name to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f10d0a03cd5df0753cdd05a7da034ed0444713d" translate="yes" xml:space="preserve">
          <source>Subexpression Calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0718eea75e237d896f914d7488e5f47b084f2d" translate="yes" xml:space="preserve">
          <source>Subject of &lt;a href=&quot;optionparser#method-i-on&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;optionparser#method-i-on_head&quot;&gt;&lt;code&gt;on_head&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;optionparser#method-i-accept&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;optionparser#method-i-reject&quot;&gt;&lt;code&gt;reject&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16aed97bd03eb791ab97d0dde897fe059be42a74" translate="yes" xml:space="preserve">
          <source>Subject of &lt;a href=&quot;optionparser#method-i-on_tail&quot;&gt;&lt;code&gt;on_tail&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa2a2b0a05e60e547cdac2fc107c7a7ce6c36bd" translate="yes" xml:space="preserve">
          <source>Substitution of getopts is possible as follows. Also see &lt;a href=&quot;../optionparser#method-i-getopts&quot;&gt;&lt;code&gt;OptionParser#getopts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4086fe69bf837cbc7a10efc64e1e226febf703ac" translate="yes" xml:space="preserve">
          <source>Subtract the specified value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="feb65fc97ba70b87b7e8fe6838a45091da98ac86" translate="yes" xml:space="preserve">
          <source>Summary indent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abde05383c121b65d458ab732607af8d7948e50" translate="yes" xml:space="preserve">
          <source>Summary width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39aea56c170440b0a78a38a1a79088b3be8106ab" translate="yes" xml:space="preserve">
          <source>Sun net disk protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340f24133070eace520616face9d31529738183b" translate="yes" xml:space="preserve">
          <source>Superclass of &lt;a href=&quot;../imap&quot;&gt;&lt;code&gt;IMAP&lt;/code&gt;&lt;/a&gt; errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23e8c670945fe29e4d796884991dce0eb18e183" translate="yes" xml:space="preserve">
          <source>Superclass of all errors raised in the &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d156ee4e70582d1990e0785272ef8a68ee75300" translate="yes" xml:space="preserve">
          <source>Superclass of all errors used to encapsulate &amp;ldquo;fail&amp;rdquo; responses from the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e83818703d77f6315e9271ae038aaa2594d891" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;../enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c7c995109efadfeb1284f0d4a3ce06a2fb7542" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82369349e0caa90a217697fb8e9a5284a787af01" translate="yes" xml:space="preserve">
          <source>Support for character classes is reasonably complete (since it essentially piggy-backs on Ruby's regular expression handling of character classes), but users are advised that character class testing has not been exhaustive, and that they should exercise some caution in using any of the more complex and/or arcane character class idioms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02499dff1b8c112ff5b20d28163adf01563269d" translate="yes" xml:space="preserve">
          <source>Supported platform: GNU/Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d208d862530eeb4329c5e2dfbf3e8c56e08165" translate="yes" xml:space="preserve">
          <source>Supports line edit when inputs line. Provides VI and Emacs editing mode. Default is Emacs editing mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b361a0b90943866af36468f427f2e492144c38f3" translate="yes" xml:space="preserve">
          <source>Suppose the gem Foo depends on the gem Bar. Foo exists in &lt;a href=&quot;source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; A. Bar has some versions that exist in both sources A and B. At this point, the API request will have found all the versions of Bar in source A, but will not have found any versions of Bar from source B, which is a problem if the requested version of Foo specifically depends on a version of Bar that is only found in source B. This ensures that for each spec we found, we add all possible versions from all sources to the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586200802a9b6fc16848b1b51dad779dc00d278c" translate="yes" xml:space="preserve">
          <source>Suspends the current thread for &lt;em&gt;duration&lt;/em&gt; seconds (which may be any number, including a &lt;code&gt;Float&lt;/code&gt; with fractional seconds). Returns the actual number of seconds slept (rounded), which may be less than that asked for if another thread calls &lt;code&gt;Thread#run&lt;/code&gt;. Called without an argument, sleep() will sleep forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e44c920427e845df4958295eb8c3045b55fcfd5" translate="yes" xml:space="preserve">
          <source>Switch</source>
          <target state="translated">Switch</target>
        </trans-unit>
        <trans-unit id="ef476ae54cf8d04b948cf25f0a23b82e9b5948ac" translate="yes" xml:space="preserve">
          <source>Switch the effective and real group IDs of the current process. If a &lt;em&gt;block&lt;/em&gt; is given, the group IDs will be switched back after the block is executed. Returns the new effective group ID if called without a block, and the return value of the block if one is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02b8a57bff04af00ffd4f464e7f27531b363bbe" translate="yes" xml:space="preserve">
          <source>Switch the effective and real user IDs of the current process. If a &lt;em&gt;block&lt;/em&gt; is given, the user IDs will be switched back after the block is executed. Returns the new effective user ID if called without a block, and the return value of the block if one is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67a36d3953161140417ba47dce6944524e694f8" translate="yes" xml:space="preserve">
          <source>Switch#arg</source>
          <target state="translated">Switch#arg</target>
        </trans-unit>
        <trans-unit id="bc948631cd38d054584c74cd38f81214d0ff66f0" translate="yes" xml:space="preserve">
          <source>Switch#block</source>
          <target state="translated">Switch#block</target>
        </trans-unit>
        <trans-unit id="aa718a68d73569737257e91d239f422679d586ba" translate="yes" xml:space="preserve">
          <source>Switch#conv</source>
          <target state="translated">Switch#conv</target>
        </trans-unit>
        <trans-unit id="663fbed3b8046873c708ddf8657c52288108becd" translate="yes" xml:space="preserve">
          <source>Switch#conv_arg</source>
          <target state="translated">Switch#conv_arg</target>
        </trans-unit>
        <trans-unit id="9275b4179c3b53bc3c78912c82388457c66ce31f" translate="yes" xml:space="preserve">
          <source>Switch#desc</source>
          <target state="translated">Switch#desc</target>
        </trans-unit>
        <trans-unit id="92330e6a4df2151c4d090bf35ae89aa432ef6e4c" translate="yes" xml:space="preserve">
          <source>Switch#long</source>
          <target state="translated">Switch#long</target>
        </trans-unit>
        <trans-unit id="8e7626738cac81229eac50b30cf5edd1441eef0f" translate="yes" xml:space="preserve">
          <source>Switch#parse_arg</source>
          <target state="translated">Switch#parse_arg</target>
        </trans-unit>
        <trans-unit id="a5712c18710109759667081a662bd15b64083c0d" translate="yes" xml:space="preserve">
          <source>Switch#pattern</source>
          <target state="translated">Switch#pattern</target>
        </trans-unit>
        <trans-unit id="af98904a9c8a13076393d25db0b7301e0aff426c" translate="yes" xml:space="preserve">
          <source>Switch#short</source>
          <target state="translated">Switch#short</target>
        </trans-unit>
        <trans-unit id="155a7e7ab62e38c7c2192af07d5b3500aacf72a7" translate="yes" xml:space="preserve">
          <source>Switch#summarize</source>
          <target state="translated">Switch#summarize</target>
        </trans-unit>
        <trans-unit id="7b1fe4cd094fda5625066c0a93fe8b05140ebca8" translate="yes" xml:space="preserve">
          <source>Switch#switch_name</source>
          <target state="translated">Switch#switch_name</target>
        </trans-unit>
        <trans-unit id="00cde088d3c75f71a5317414f8bb604817b18aeb" translate="yes" xml:space="preserve">
          <source>Switch::NoArgument</source>
          <target state="translated">Switch::NoArgument</target>
        </trans-unit>
        <trans-unit id="b36ce0460c7fce92efd5d9683b468224101d5ab1" translate="yes" xml:space="preserve">
          <source>Switch::NoArgument#parse</source>
          <target state="translated">Switch::NoArgument#parse</target>
        </trans-unit>
        <trans-unit id="faba4f50445a23384b438f75140f5cf4eee22724" translate="yes" xml:space="preserve">
          <source>Switch::NoArgument::incompatible_argument_styles</source>
          <target state="translated">Switch::NoArgument::incompatible_argument_styles</target>
        </trans-unit>
        <trans-unit id="ea60520ba7f90c569018319a98fbc5a280740a28" translate="yes" xml:space="preserve">
          <source>Switch::NoArgument::pattern</source>
          <target state="translated">Switch::NoArgument::pattern</target>
        </trans-unit>
        <trans-unit id="d0ec280e0eee2a8e70397f2ce4e936022a2f0b76" translate="yes" xml:space="preserve">
          <source>Switch::OptionalArgument</source>
          <target state="translated">Switch::OptionalArgument</target>
        </trans-unit>
        <trans-unit id="6fc53962308265f9f4b00d663ee5f5ae4ba66379" translate="yes" xml:space="preserve">
          <source>Switch::OptionalArgument#parse</source>
          <target state="translated">Switch::OptionalArgument#parse</target>
        </trans-unit>
        <trans-unit id="251db8d7b26a917c150080c266e8bdd5f75370b3" translate="yes" xml:space="preserve">
          <source>Switch::PlacedArgument</source>
          <target state="translated">Switch::PlacedArgument</target>
        </trans-unit>
        <trans-unit id="68492496b79b0c55f080c623cd0f30ee29e009aa" translate="yes" xml:space="preserve">
          <source>Switch::PlacedArgument#parse</source>
          <target state="translated">Switch::PlacedArgument#parse</target>
        </trans-unit>
        <trans-unit id="41efd83fc4e9c4e0e474bbca8a51eba5e3a50338" translate="yes" xml:space="preserve">
          <source>Switch::RequiredArgument</source>
          <target state="translated">Switch::RequiredArgument</target>
        </trans-unit>
        <trans-unit id="3be2402e0c7917c18bbd244bef9fa182631dfab1" translate="yes" xml:space="preserve">
          <source>Switch::RequiredArgument#parse</source>
          <target state="translated">Switch::RequiredArgument#parse</target>
        </trans-unit>
        <trans-unit id="0110022399b5ae336db960b40b7b7d0e7072209f" translate="yes" xml:space="preserve">
          <source>Switch::guess</source>
          <target state="translated">Switch::guess</target>
        </trans-unit>
        <trans-unit id="bc1e1e84ffe3fd63be193130823ae55b718b0ca7" translate="yes" xml:space="preserve">
          <source>Switch::incompatible_argument_styles</source>
          <target state="translated">Switch::incompatible_argument_styles</target>
        </trans-unit>
        <trans-unit id="12daa83c388ff5782d70b7e5a55b3f84df404574" translate="yes" xml:space="preserve">
          <source>Switch::new</source>
          <target state="translated">Switch::new</target>
        </trans-unit>
        <trans-unit id="7c6b5446cab85f01d20ad482ce4737d550f3faf5" translate="yes" xml:space="preserve">
          <source>Switch::pattern</source>
          <target state="translated">Switch::pattern</target>
        </trans-unit>
        <trans-unit id="57edd77bf7640114c249845dac4c7fa18a3dd932" translate="yes" xml:space="preserve">
          <source>SwitchProtocol</source>
          <target state="translated">SwitchProtocol</target>
        </trans-unit>
        <trans-unit id="250c2c864fa01860694345463d52dbbb0cfd8fc8" translate="yes" xml:space="preserve">
          <source>Switches the mode of this table to column mode. All calls to indexing and iteration methods will work with columns until the mode is changed again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab57340fd47e1d22effc35e6564298799ae4c7c" translate="yes" xml:space="preserve">
          <source>Switches the mode of this table to mixed mode. All calls to indexing and iteration methods will use the default intelligent indexing system until the mode is changed again. In mixed mode an index is assumed to be a row reference while anything else is assumed to be column access by headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ba863c80fa873b7a221e8c681fea6a4072ad82" translate="yes" xml:space="preserve">
          <source>Switches the mode of this table to row mode. All calls to indexing and iteration methods will work with rows until the mode is changed again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="7fbe74272fe45f99ee6092f6290a9635f92e6ccf" translate="yes" xml:space="preserve">
          <source>Symbol#==</source>
          <target state="translated">Symbol#==</target>
        </trans-unit>
        <trans-unit id="8c722e42840117d5a7dd2e07aff0fdf750e23fb2" translate="yes" xml:space="preserve">
          <source>Symbol#===</source>
          <target state="translated">Symbol#===</target>
        </trans-unit>
        <trans-unit id="fc0390280e394b8f441c549e1d2d76217e819ffc" translate="yes" xml:space="preserve">
          <source>Symbol#=~</source>
          <target state="translated">Symbol#=~</target>
        </trans-unit>
        <trans-unit id="b82d6a3eb7d3a3b1ee6bb19094ed6b8ec8de2e83" translate="yes" xml:space="preserve">
          <source>Symbol#[]</source>
          <target state="translated">Symbol#[]</target>
        </trans-unit>
        <trans-unit id="49e5293942f33200d2e253860ad3702d35359f12" translate="yes" xml:space="preserve">
          <source>Symbol#next</source>
          <target state="translated">Symbol#next</target>
        </trans-unit>
        <trans-unit id="5b3206fbc17db24f4b39d45f9e76ff2ff43cf91c" translate="yes" xml:space="preserve">
          <source>Symbol#size</source>
          <target state="translated">Symbol#size</target>
        </trans-unit>
        <trans-unit id="788ab25273a0a56e626c08e2efeb5e4278f1c045" translate="yes" xml:space="preserve">
          <source>Symbol#succ</source>
          <target state="translated">Symbol#succ</target>
        </trans-unit>
        <trans-unit id="1d6ae9e47e541c815b605a09c7f5a819093962f3" translate="yes" xml:space="preserve">
          <source>Symbol#to_s</source>
          <target state="translated">Symbol#to_s</target>
        </trans-unit>
        <trans-unit id="5277d89bfd396809ef0dd19ceaf998bcd7114094" translate="yes" xml:space="preserve">
          <source>Symbolic mode is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ad664e9eb98b75a73333b2b2395fc4b52e6fc9" translate="yes" xml:space="preserve">
          <source>Symbols</source>
          <target state="translated">Symbols</target>
        </trans-unit>
        <trans-unit id="e022d5f898ca16c02b09e34e7a8403a5e3a876d9" translate="yes" xml:space="preserve">
          <source>Symbols and Byte Sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820071e03a3c38251a5fb193fd66a07a5778e01d" translate="yes" xml:space="preserve">
          <source>Symbols are often seen as syntax sugar for simple strings, but they play a much more crucial role. The MRI Ruby implementation uses Symbols internally for method, variable and constant names. The reason for this is that symbols are simply integers with names attached to them, so they are faster to look up in hashtables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1013df60a099315f04a3865a60d50d378ce6b1e3" translate="yes" xml:space="preserve">
          <source>Symmetric Householder reduction to tridiagonal form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31903023cc7d2e0b8f7ee926225ebc3013851a4" translate="yes" xml:space="preserve">
          <source>Symmetric encryption requires a key that is the same for the encrypting and for the decrypting party and after initial key establishment should be kept as private information. There are a lot of ways to create insecure keys, the most notable is to simply take a password as the key without processing the password further. A simple and secure way to create a key for a particular &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8290c439ce5bbd86e8b1d3ffe0da30c82e69644b" translate="yes" xml:space="preserve">
          <source>Symmetric tridiagonal QL algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905f63092ff26517a7aa8083857b3c8af9707002" translate="yes" xml:space="preserve">
          <source>Sync</source>
          <target state="translated">Sync</target>
        </trans-unit>
        <trans-unit id="b6192f3ff4415a4315d2f6e7749758993161c12d" translate="yes" xml:space="preserve">
          <source>Sync_m</source>
          <target state="translated">Sync_m</target>
        </trans-unit>
        <trans-unit id="bb975404b15b0d49423281bc4da66232eabba2c7" translate="yes" xml:space="preserve">
          <source>Sync_m::Err</source>
          <target state="translated">Sync_m::Err</target>
        </trans-unit>
        <trans-unit id="d27dcf2ebf0163baf7e5d22bf6c78a59798fd49a" translate="yes" xml:space="preserve">
          <source>Sync_m::Err::LockModeFailer</source>
          <target state="translated">Sync_m::Err::LockModeFailer</target>
        </trans-unit>
        <trans-unit id="94d086453a406c2d57f00412c774c36b772dcb6a" translate="yes" xml:space="preserve">
          <source>Sync_m::Err::UnknownLocker</source>
          <target state="translated">Sync_m::Err::UnknownLocker</target>
        </trans-unit>
        <trans-unit id="d4c822abc642942f611d26e9d7b5e7bf6964fccc" translate="yes" xml:space="preserve">
          <source>Synchronizer</source>
          <target state="translated">Synchronizer</target>
        </trans-unit>
        <trans-unit id="8ec5d73aa8e23e3de258a66a8e1c7ee985b71fa3" translate="yes" xml:space="preserve">
          <source>Synchronizer_m</source>
          <target state="translated">Synchronizer_m</target>
        </trans-unit>
        <trans-unit id="1f40df8414a3264ef1f43fb52cdcf001d078a9e1" translate="yes" xml:space="preserve">
          <source>Synonym for $stdin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6a25f33a08d5a9f9eed26d8e7e24d2170c77e5" translate="yes" xml:space="preserve">
          <source>Synonym for $stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6e70b9bb859e9c024a4fd108ba45fa43b905f8" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;a href=&quot;env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2188569b88318a77a45324900040f99419f4bb7" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;Dir#seek&lt;/code&gt;, but returns the position parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85efe217f731a8592ff0180a35b5a5b042facd2d" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;IO.new&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96cbb62d79e73b8e066c82a318eb87455787e4f" translate="yes" xml:space="preserve">
          <source>Synonym for CGI::escapeElement(str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b93f4150187714281f59ed892cb250e9d99a01" translate="yes" xml:space="preserve">
          <source>Synonym for CGI::escapeHTML(str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da83fd49ac053e09edde6fa594f97b2eb8c35c6" translate="yes" xml:space="preserve">
          <source>Synonym for CGI::unescapeElement(str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6939826740ffa2b529e8af33ff77f23871d9f5bb" translate="yes" xml:space="preserve">
          <source>Synonym for CGI::unescapeHTML(str)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="af5f0a5e089ff24df87876664a300fc1d94de87c" translate="yes" xml:space="preserve">
          <source>Synopsis:</source>
          <target state="translated">Synopsis:</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="101957e3ce38730050754bacdf6d1b12a6674ec2" translate="yes" xml:space="preserve">
          <source>Syntax of string form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f0848c384ae1a498eae843e5c6f3d2182db8dc" translate="yes" xml:space="preserve">
          <source>Syntax of the string form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4af2ff6c0bd31526ce7f5f8ca08783d0cc5ed7" translate="yes" xml:space="preserve">
          <source>SyntaxError</source>
          <target state="translated">SyntaxError</target>
        </trans-unit>
        <trans-unit id="27e1e134fcca40b40c88aaa63801ac2ed4c6cafe" translate="yes" xml:space="preserve">
          <source>SyntaxError::new</source>
          <target state="translated">SyntaxError::new</target>
        </trans-unit>
        <trans-unit id="c5c0b2b15dc425f580c8913f0ef30196b2e6dc6a" translate="yes" xml:space="preserve">
          <source>Sys::getegid</source>
          <target state="translated">Sys::getegid</target>
        </trans-unit>
        <trans-unit id="c311327d70d2bbd8f974012c7d2ddd3f0e0327cf" translate="yes" xml:space="preserve">
          <source>Sys::geteuid</source>
          <target state="translated">Sys::geteuid</target>
        </trans-unit>
        <trans-unit id="ce31aa5edbf30726aa59a8e98ce48fea1f8adb13" translate="yes" xml:space="preserve">
          <source>Sys::getgid</source>
          <target state="translated">Sys::getgid</target>
        </trans-unit>
        <trans-unit id="e3e370f4689e1fc07ebdaa9fce7402a18b342a58" translate="yes" xml:space="preserve">
          <source>Sys::getuid</source>
          <target state="translated">Sys::getuid</target>
        </trans-unit>
        <trans-unit id="d66843363718480549017f380ec40485cbe50b45" translate="yes" xml:space="preserve">
          <source>Sys::issetugid</source>
          <target state="translated">Sys::issetugid</target>
        </trans-unit>
        <trans-unit id="88bbf376bdb0befbf10ab47f9d929b7de0f1d44c" translate="yes" xml:space="preserve">
          <source>Sys::setegid</source>
          <target state="translated">Sys::setegid</target>
        </trans-unit>
        <trans-unit id="9ca5e7499e9a120627143c669458409a14bd6bd0" translate="yes" xml:space="preserve">
          <source>Sys::seteuid</source>
          <target state="translated">Sys::seteuid</target>
        </trans-unit>
        <trans-unit id="efc9181f53767150f5d8d834eafb0fb5ecb90a9e" translate="yes" xml:space="preserve">
          <source>Sys::setgid</source>
          <target state="translated">Sys::setgid</target>
        </trans-unit>
        <trans-unit id="3c9635ada9193e69be89491af71c6720594aa13e" translate="yes" xml:space="preserve">
          <source>Sys::setregid</source>
          <target state="translated">Sys::setregid</target>
        </trans-unit>
        <trans-unit id="0aeccf9a6b77cf779fdcba277c7fd737c41af224" translate="yes" xml:space="preserve">
          <source>Sys::setresgid</source>
          <target state="translated">Sys::setresgid</target>
        </trans-unit>
        <trans-unit id="1a39b02d229ab2bbd2e894f5899eeec75d94ff7b" translate="yes" xml:space="preserve">
          <source>Sys::setresuid</source>
          <target state="translated">Sys::setresuid</target>
        </trans-unit>
        <trans-unit id="b0a7cc0ae3edc174517bbb0e5abe0fcc8fc7e2ac" translate="yes" xml:space="preserve">
          <source>Sys::setreuid</source>
          <target state="translated">Sys::setreuid</target>
        </trans-unit>
        <trans-unit id="86c56398c010bf025cbef65447715aaf6229d336" translate="yes" xml:space="preserve">
          <source>Sys::setrgid</source>
          <target state="translated">Sys::setrgid</target>
        </trans-unit>
        <trans-unit id="0e4a779ca7cce69ea52941eec1dedd99785e87ce" translate="yes" xml:space="preserve">
          <source>Sys::setruid</source>
          <target state="translated">Sys::setruid</target>
        </trans-unit>
        <trans-unit id="191286eecf42ce45ed39503802a34ff1b9d09f5f" translate="yes" xml:space="preserve">
          <source>Sys::setuid</source>
          <target state="translated">Sys::setuid</target>
        </trans-unit>
        <trans-unit id="f2b4eb8fef9948c1652bed26fa9b2907fff946a2" translate="yes" xml:space="preserve">
          <source>Syslog</source>
          <target state="translated">Syslog</target>
        </trans-unit>
        <trans-unit id="5d4ec28964898bc5d4813f250227396db1ba9bd1" translate="yes" xml:space="preserve">
          <source>Syslog::Constants</source>
          <target state="translated">Syslog::Constants</target>
        </trans-unit>
        <trans-unit id="f59b45a66e2a17fedeb639850e2633984a7e4e91" translate="yes" xml:space="preserve">
          <source>Syslog::Logger</source>
          <target state="translated">Syslog::Logger</target>
        </trans-unit>
        <trans-unit id="10f1672b7dff9e07803251423f12851f13e3d9df" translate="yes" xml:space="preserve">
          <source>Syslog::Logger::Formatter</source>
          <target state="translated">Syslog::Logger::Formatter</target>
        </trans-unit>
        <trans-unit id="fde36ba8f1b7269d95ed44d41c07850ae9295583" translate="yes" xml:space="preserve">
          <source>Syslog::Macros</source>
          <target state="translated">Syslog::Macros</target>
        </trans-unit>
        <trans-unit id="002869727e9313127a296500e70d9631e00548bf" translate="yes" xml:space="preserve">
          <source>Syslog::Option, Syslog::Facility, Syslog::Level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0e188f6a87543adc4465ea5533986f5f1e6979" translate="yes" xml:space="preserve">
          <source>Syslog::close</source>
          <target state="translated">Syslog::close</target>
        </trans-unit>
        <trans-unit id="2e4f4b549b940fb8c41697720184bc27e1dd5614" translate="yes" xml:space="preserve">
          <source>Syslog::ident</source>
          <target state="translated">Syslog::ident</target>
        </trans-unit>
        <trans-unit id="67d8be683c9bb0749cb45f6906e85f3e0e2b3f60" translate="yes" xml:space="preserve">
          <source>Syslog::log</source>
          <target state="translated">Syslog::log</target>
        </trans-unit>
        <trans-unit id="c9a07f57be9a3b9e4fe8a152964a04d4c92e10b3" translate="yes" xml:space="preserve">
          <source>Syslog::mask</source>
          <target state="translated">Syslog::mask</target>
        </trans-unit>
        <trans-unit id="c53b67a94be3ef5ac5a5d9aa75ea82f04b4e638e" translate="yes" xml:space="preserve">
          <source>Syslog::mask=</source>
          <target state="translated">Syslog::mask=</target>
        </trans-unit>
        <trans-unit id="c2ccd9aefe20ca7f1d385f5d56303449059d91fe" translate="yes" xml:space="preserve">
          <source>Syslog::open</source>
          <target state="translated">Syslog::open</target>
        </trans-unit>
        <trans-unit id="81633595d74e2d50517769dd563feb9145208d5d" translate="yes" xml:space="preserve">
          <source>Syslog::open!</source>
          <target state="translated">Syslog::open!</target>
        </trans-unit>
        <trans-unit id="389c90b7710399e1b74432f5746fc9142667ee6b" translate="yes" xml:space="preserve">
          <source>System CPU time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95708bf687e1d14c718bbc22f550c5abfd986004" translate="yes" xml:space="preserve">
          <source>System CPU time of children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6543816bd7a576dff00636209e35849abb4bc814" translate="yes" xml:space="preserve">
          <source>System call error module used by webrick for cross platform compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3721ffabef77bea726d166b7fab7df587f12d6d" translate="yes" xml:space="preserve">
          <source>System call wrapper methods which are safe inside &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c206d886d9638ce1f3d75c3fbcde3dcb3f5a8d13" translate="yes" xml:space="preserve">
          <source>System console message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a694277c01371467849b4e4677be96d4a2a412" translate="yes" xml:space="preserve">
          <source>System default case insensitiveness, equals to &lt;a href=&quot;constants#FNM_CASEFOLD&quot;&gt;&lt;code&gt;FNM_CASEFOLD&lt;/code&gt;&lt;/a&gt; or 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5d26eabc3d4dbceb8083000b2bbb9a3c5614b2" translate="yes" xml:space="preserve">
          <source>System error returned in errno</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c923d6f6e3288003bd36c27698b36e4a59ac719e" translate="yes" xml:space="preserve">
          <source>System is unusable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41621e58e9ee63b6c52d29379d46362c0dd9f68c" translate="yes" xml:space="preserve">
          <source>System task scheduler (cron or at).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5636b680b934da1c9653cdb07e52649f64b9da6" translate="yes" xml:space="preserve">
          <source>SystemCallError</source>
          <target state="translated">SystemCallError</target>
        </trans-unit>
        <trans-unit id="890c263d5f036cb0fb2a769ecd85c1226b6195cc" translate="yes" xml:space="preserve">
          <source>SystemCallError#errno</source>
          <target state="translated">SystemCallError#errno</target>
        </trans-unit>
        <trans-unit id="7dd8e1f08801a2fc4b18b4d7333cb8fa3aacd496" translate="yes" xml:space="preserve">
          <source>SystemCallError::===</source>
          <target state="translated">SystemCallError::===</target>
        </trans-unit>
        <trans-unit id="0be659a386104ab62017e1ecaa46ccc2c39e49d6" translate="yes" xml:space="preserve">
          <source>SystemCallError::new</source>
          <target state="translated">SystemCallError::new</target>
        </trans-unit>
        <trans-unit id="7cc841d8ecdbfbc0498942bb2b4d8fa89ce32a41" translate="yes" xml:space="preserve">
          <source>SystemExit</source>
          <target state="translated">SystemExit</target>
        </trans-unit>
        <trans-unit id="6ac9f6a3db7a7747297d501ac2cea7d30c95f279" translate="yes" xml:space="preserve">
          <source>SystemExit#status</source>
          <target state="translated">SystemExit#status</target>
        </trans-unit>
        <trans-unit id="4dc76006399b4a9c38b50d909c5eba4bf506ec67" translate="yes" xml:space="preserve">
          <source>SystemExit#success?</source>
          <target state="translated">SystemExit#success?</target>
        </trans-unit>
        <trans-unit id="80eedf45b14607a2a007dbfcd00db7a8320c261c" translate="yes" xml:space="preserve">
          <source>SystemExit::new</source>
          <target state="translated">SystemExit::new</target>
        </trans-unit>
        <trans-unit id="e03afea8ad4ca5bf43be23c3310993532a1e4e6b" translate="yes" xml:space="preserve">
          <source>SystemStackError</source>
          <target state="translated">SystemStackError</target>
        </trans-unit>
        <trans-unit id="701876c24ec1f54bd5ec73b2bef5d0073584781d" translate="yes" xml:space="preserve">
          <source>TABLE_FOR_ESCAPE_HTML__</source>
          <target state="translated">TABLE_FOR_ESCAPE_HTML__</target>
        </trans-unit>
        <trans-unit id="f544fb304c83e23652a63e1bb1b28f4fcc7f6ac0" translate="yes" xml:space="preserve">
          <source>TCP</source>
          <target state="translated">TCP</target>
        </trans-unit>
        <trans-unit id="c69fa5ce629f461f6097f2acef4ae2593bae38c4" translate="yes" xml:space="preserve">
          <source>TCP Cookie Transactions (Linux 2.6.33, glibc 2.18)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dd679ee76e971f0234f6c6752027f6a8109c2c" translate="yes" xml:space="preserve">
          <source>TCP client socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f87096f947925ba6b62f06bdfc15a0040bb9cf" translate="yes" xml:space="preserve">
          <source>TCP congestion control algorithm (Linux 2.6.13, glibc 2.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318504ed54a6da46d8236fa609d768fe983bea25" translate="yes" xml:space="preserve">
          <source>TCP server socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ee038a49da7f7f4b325418aae29439b541f54d" translate="yes" xml:space="preserve">
          <source>TCP socket options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88db07696d0d6e1ad876f9fa76a9bce9f953dad6" translate="yes" xml:space="preserve">
          <source>TCP timestamp (Linux 3.9, glibc 2.18)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986bd55891fdd953ab6471a3fe44bcc7a8a9e0de" translate="yes" xml:space="preserve">
          <source>TCPServer</source>
          <target state="translated">TCPServer</target>
        </trans-unit>
        <trans-unit id="50ed330f6072b8d0f156efcd52bba0a1000c42d3" translate="yes" xml:space="preserve">
          <source>TCPServer#accept</source>
          <target state="translated">TCPServer#accept</target>
        </trans-unit>
        <trans-unit id="a052ba83d860043282d1a6eda2b7e8296c13f6c2" translate="yes" xml:space="preserve">
          <source>TCPServer#accept_nonblock</source>
          <target state="translated">TCPServer#accept_nonblock</target>
        </trans-unit>
        <trans-unit id="56b0df78890630b8a20304ab7848e063d2d70472" translate="yes" xml:space="preserve">
          <source>TCPServer#listen</source>
          <target state="translated">TCPServer#listen</target>
        </trans-unit>
        <trans-unit id="5f73f24bb6681e33900cb30ee1f7ec7c835fea9a" translate="yes" xml:space="preserve">
          <source>TCPServer#sysaccept</source>
          <target state="translated">TCPServer#sysaccept</target>
        </trans-unit>
        <trans-unit id="c38afbb226f454d1b79190f8d5d7ae0360b9d7e6" translate="yes" xml:space="preserve">
          <source>TCPServer::new</source>
          <target state="translated">TCPServer::new</target>
        </trans-unit>
        <trans-unit id="07a502fae35132863f6ac0ebbbe537f82c7bdd39" translate="yes" xml:space="preserve">
          <source>TCPSocket</source>
          <target state="translated">TCPSocket</target>
        </trans-unit>
        <trans-unit id="883457b1a446ea88cf650971413cdeb72a47db62" translate="yes" xml:space="preserve">
          <source>TCPSocket::gethostbyname</source>
          <target state="translated">TCPSocket::gethostbyname</target>
        </trans-unit>
        <trans-unit id="f11c6ca5cb464f9136b489178ab450f7d71e1043" translate="yes" xml:space="preserve">
          <source>TCPSocket::new</source>
          <target state="translated">TCPSocket::new</target>
        </trans-unit>
        <trans-unit id="6161dcdcf9504a6e43391f693901fcd558230e5a" translate="yes" xml:space="preserve">
          <source>TCP_CONGESTION</source>
          <target state="translated">TCP_CONGESTION</target>
        </trans-unit>
        <trans-unit id="eea2899219cf8c8f40079cc37d549a4f1a1c156a" translate="yes" xml:space="preserve">
          <source>TCP_COOKIE_TRANSACTIONS</source>
          <target state="translated">TCP_COOKIE_TRANSACTIONS</target>
        </trans-unit>
        <trans-unit id="aa058a017e8c0ccd7e8139d293e1d68d8ca380ee" translate="yes" xml:space="preserve">
          <source>TCP_CORK</source>
          <target state="translated">TCP_CORK</target>
        </trans-unit>
        <trans-unit id="6f45829c5ef2f3a55febb2271c67454463d085d7" translate="yes" xml:space="preserve">
          <source>TCP_DEFER_ACCEPT</source>
          <target state="translated">TCP_DEFER_ACCEPT</target>
        </trans-unit>
        <trans-unit id="d8df9c6127d92b8225582072f598c75f62639d39" translate="yes" xml:space="preserve">
          <source>TCP_FASTOPEN</source>
          <target state="translated">TCP_FASTOPEN</target>
        </trans-unit>
        <trans-unit id="a718dcfefb7f8f56b26be9ff0acb9d4828fd79dd" translate="yes" xml:space="preserve">
          <source>TCP_INFO</source>
          <target state="translated">TCP_INFO</target>
        </trans-unit>
        <trans-unit id="12f58f286338d24911dd3124542206b2cb7ff7c8" translate="yes" xml:space="preserve">
          <source>TCP_KEEPCNT</source>
          <target state="translated">TCP_KEEPCNT</target>
        </trans-unit>
        <trans-unit id="48bfc5f5c18856004670690bdc7bd98e20eb1b19" translate="yes" xml:space="preserve">
          <source>TCP_KEEPIDLE</source>
          <target state="translated">TCP_KEEPIDLE</target>
        </trans-unit>
        <trans-unit id="c4ab4c9ed38cc33b99e08b19cd2981697e30a679" translate="yes" xml:space="preserve">
          <source>TCP_KEEPINTVL</source>
          <target state="translated">TCP_KEEPINTVL</target>
        </trans-unit>
        <trans-unit id="6868395cf1c9ab230c01dff1b29e595b369f77a7" translate="yes" xml:space="preserve">
          <source>TCP_LINGER2</source>
          <target state="translated">TCP_LINGER2</target>
        </trans-unit>
        <trans-unit id="435f7ec00f00a62611689da8c9a94310529d9a75" translate="yes" xml:space="preserve">
          <source>TCP_MAXSEG</source>
          <target state="translated">TCP_MAXSEG</target>
        </trans-unit>
        <trans-unit id="8642676ef235c33e672d69b23c9b1c813846ffb8" translate="yes" xml:space="preserve">
          <source>TCP_MD5SIG</source>
          <target state="translated">TCP_MD5SIG</target>
        </trans-unit>
        <trans-unit id="f447c1348e174230fa94ae3df9c5f596909c2e23" translate="yes" xml:space="preserve">
          <source>TCP_NODELAY</source>
          <target state="translated">TCP_NODELAY</target>
        </trans-unit>
        <trans-unit id="357a53d961a5fc2e27eb95b46b73d6ceb2d5f2e5" translate="yes" xml:space="preserve">
          <source>TCP_NOOPT</source>
          <target state="translated">TCP_NOOPT</target>
        </trans-unit>
        <trans-unit id="3aa3d7e984f31fd43e161fade098c04b3ac583e5" translate="yes" xml:space="preserve">
          <source>TCP_NOPUSH</source>
          <target state="translated">TCP_NOPUSH</target>
        </trans-unit>
        <trans-unit id="81403476dd73872b594ffd099b4a31b261c0cc5d" translate="yes" xml:space="preserve">
          <source>TCP_QUEUE_SEQ</source>
          <target state="translated">TCP_QUEUE_SEQ</target>
        </trans-unit>
        <trans-unit id="c6fdca3f177751fd0ec2070b52cc084224306bad" translate="yes" xml:space="preserve">
          <source>TCP_QUICKACK</source>
          <target state="translated">TCP_QUICKACK</target>
        </trans-unit>
        <trans-unit id="73d0baca7ecac221bd19a23e2ce13612cae40442" translate="yes" xml:space="preserve">
          <source>TCP_REPAIR</source>
          <target state="translated">TCP_REPAIR</target>
        </trans-unit>
        <trans-unit id="c0b25767e502b1f7cf39b3cdddef8e32347e3cd5" translate="yes" xml:space="preserve">
          <source>TCP_REPAIR_OPTIONS</source>
          <target state="translated">TCP_REPAIR_OPTIONS</target>
        </trans-unit>
        <trans-unit id="b8d81ecd207b73544f03c4539275c47173cc6b58" translate="yes" xml:space="preserve">
          <source>TCP_REPAIR_QUEUE</source>
          <target state="translated">TCP_REPAIR_QUEUE</target>
        </trans-unit>
        <trans-unit id="e1d702853248b695af8f1782fc93aafcce10e821" translate="yes" xml:space="preserve">
          <source>TCP_SYNCNT</source>
          <target state="translated">TCP_SYNCNT</target>
        </trans-unit>
        <trans-unit id="31ace57506bdaec5158626571fd09024cbb246d3" translate="yes" xml:space="preserve">
          <source>TCP_THIN_DUPACK</source>
          <target state="translated">TCP_THIN_DUPACK</target>
        </trans-unit>
        <trans-unit id="83c95e178793ecbf18450d8174b4ed25528ec853" translate="yes" xml:space="preserve">
          <source>TCP_THIN_LINEAR_TIMEOUTS</source>
          <target state="translated">TCP_THIN_LINEAR_TIMEOUTS</target>
        </trans-unit>
        <trans-unit id="a93992d1b638c226b09dbeb4d67b3de95e56dd58" translate="yes" xml:space="preserve">
          <source>TCP_TIMESTAMP</source>
          <target state="translated">TCP_TIMESTAMP</target>
        </trans-unit>
        <trans-unit id="76bc5a0ed5ccda5af36a530e8d7c98ae59c62a2c" translate="yes" xml:space="preserve">
          <source>TCP_USER_TIMEOUT</source>
          <target state="translated">TCP_USER_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="0314bda689c9edf0969aa758af02295ece5c5d11" translate="yes" xml:space="preserve">
          <source>TCP_WINDOW_CLAMP</source>
          <target state="translated">TCP_WINDOW_CLAMP</target>
        </trans-unit>
        <trans-unit id="a165b125b56a3851cb7fbe06ec6a83fcdaa18500" translate="yes" xml:space="preserve">
          <source>TEMPLATE_EXTNAME</source>
          <target state="translated">TEMPLATE_EXTNAME</target>
        </trans-unit>
        <trans-unit id="fc16260c3b385516091ee1932581f4f49522b498" translate="yes" xml:space="preserve">
          <source>TEST_FRAMEWORK_VERSIONS</source>
          <target state="translated">TEST_FRAMEWORK_VERSIONS</target>
        </trans-unit>
        <trans-unit id="7d4e42ef9d04a046b5679f952cb0b6b5c498c73c" translate="yes" xml:space="preserve">
          <source>TEXT</source>
          <target state="translated">TEXT</target>
        </trans-unit>
        <trans-unit id="b626476a965140fbe40224fc89bf0805bbd30a4d" translate="yes" xml:space="preserve">
          <source>THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a053745d273612a1017f286950dd7b37c5fd8d0" translate="yes" xml:space="preserve">
          <source>THOR_RESERVED_WORDS</source>
          <target state="translated">THOR_RESERVED_WORDS</target>
        </trans-unit>
        <trans-unit id="5c12ba9a9b211a05d7a8b6f3ed600aac678a018e" translate="yes" xml:space="preserve">
          <source>TIME_PARSER</source>
          <target state="translated">TIME_PARSER</target>
        </trans-unit>
        <trans-unit id="a90a28aba049fe4aca5ecd696f0175eac5c7f709" translate="yes" xml:space="preserve">
          <source>TLS 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d963357ddee2e48212bad3944903a9759a068821" translate="yes" xml:space="preserve">
          <source>TLS 1.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d02f657209f8e5bd9ab074a6d9302726646599" translate="yes" xml:space="preserve">
          <source>TLS 1.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbfb6a7ead947e0fa27a3b7b0d471dcc4e2e9cf" translate="yes" xml:space="preserve">
          <source>TLS 1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b308ec9fdf160784eff26c3dcf2200a1db7826" translate="yes" xml:space="preserve">
          <source>TLS1_1_VERSION</source>
          <target state="translated">TLS1_1_VERSION</target>
        </trans-unit>
        <trans-unit id="78a3fc979dd037e4112db537c43f5b2beed021d6" translate="yes" xml:space="preserve">
          <source>TLS1_2_VERSION</source>
          <target state="translated">TLS1_2_VERSION</target>
        </trans-unit>
        <trans-unit id="3ec8cfd75a1c508670e8784d0e94722e4298fde1" translate="yes" xml:space="preserve">
          <source>TLS1_3_VERSION</source>
          <target state="translated">TLS1_3_VERSION</target>
        </trans-unit>
        <trans-unit id="eb28d1093706a4e10ec46f61d3c1141b308b251b" translate="yes" xml:space="preserve">
          <source>TLS1_VERSION</source>
          <target state="translated">TLS1_VERSION</target>
        </trans-unit>
        <trans-unit id="d0acdcf10ea14408baf683d4b78475786e18daf9" translate="yes" xml:space="preserve">
          <source>TMPFILE</source>
          <target state="translated">TMPFILE</target>
        </trans-unit>
        <trans-unit id="36ff19a3cdfc19ae2e2517f5f849d91dcb07c2ef" translate="yes" xml:space="preserve">
          <source>TO &amp;lt;string&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="3f12880ec0517a6ef4d57d5c75704253211ac3ba" translate="yes" xml:space="preserve">
          <source>TODO: Do not rely on /dev/null. Given that open3 is not cross platform until Ruby 1.9.3, the best solution is to pipe to /dev/null if it exists. If it doesn't, everything will work fine, but the user will get the $stderr messages as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16c965ecf1ffd7519430060382e7b1f1b896034" translate="yes" xml:space="preserve">
          <source>TODO: Get rid of this when and if gemstash only supports RubyGems versions that contain &lt;a href=&quot;https://github.com/rubygems/rubygems/commit/3db265cc20b2f813&quot;&gt;github.com/rubygems/rubygems/commit/3db265cc20b2f813&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1abc59f3e29532bd350376b9c4a1ce56ce0a13" translate="yes" xml:space="preserve">
          <source>TODO: Implement &lt;a href=&quot;html#method-i-ask&quot;&gt;&lt;code&gt;ask&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;html&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::HTML&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea5d1425fba459835f0bc734a1d9a8ac0f9f6ca" translate="yes" xml:space="preserve">
          <source>TODO: Replace this with &lt;a href=&quot;../../../open3&quot;&gt;&lt;code&gt;Open3&lt;/code&gt;&lt;/a&gt; when upgrading to bundler 2 Similar to &lt;a href=&quot;gitproxy#method-i-git_null&quot;&gt;&lt;code&gt;git_null&lt;/code&gt;&lt;/a&gt;, as &lt;a href=&quot;../../../open3&quot;&gt;&lt;code&gt;Open3&lt;/code&gt;&lt;/a&gt; is not cross-platform, a temporary way is to use &lt;a href=&quot;../../../tempfile&quot;&gt;&lt;code&gt;Tempfile&lt;/code&gt;&lt;/a&gt; to capture the stderr. When replacing this using &lt;a href=&quot;../../../open3&quot;&gt;&lt;code&gt;Open3&lt;/code&gt;&lt;/a&gt;, make sure &lt;a href=&quot;gitproxy#method-i-git_null&quot;&gt;&lt;code&gt;git_null&lt;/code&gt;&lt;/a&gt; is also replaced by &lt;a href=&quot;../../../open3&quot;&gt;&lt;code&gt;Open3&lt;/code&gt;&lt;/a&gt;, so stdout and stderr all got handled properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b49153ff4f2918acfee9010ecc1ff7fa1e5f77" translate="yes" xml:space="preserve">
          <source>TODO: This is for older versions of RubyGems&amp;hellip; should we support the X-Gemfile-Source header on these old versions? Maybe the newer implementation will work on older RubyGems? It seems difficult to keep this implementation and still send the header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83410fa3fee9d89740f170c1934283098e9f4938" translate="yes" xml:space="preserve">
          <source>TODO: duplicates Rubygems#normalize_uri TODO: is this the correct place to validate mirror URIs?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd00357c6f4905fd74484f7b4da0bde6630e7f71" translate="yes" xml:space="preserve">
          <source>TOPLEVEL_BINDING</source>
          <target state="translated">TOPLEVEL_BINDING</target>
        </trans-unit>
        <trans-unit id="d8ea5cbd6c514eb181bfea5af3f3d680939700b1" translate="yes" xml:space="preserve">
          <source>TRAPPED_SIGNALS</source>
          <target state="translated">TRAPPED_SIGNALS</target>
        </trans-unit>
        <trans-unit id="fddf1df7c30cac7908d10246256efd264ce7aa32" translate="yes" xml:space="preserve">
          <source>TRUE</source>
          <target state="translated">TRUE</target>
        </trans-unit>
        <trans-unit id="79476b4eefe7f0f1a2d0ac351053d4aac955df69" translate="yes" xml:space="preserve">
          <source>TRUNC</source>
          <target state="translated">TRUNC</target>
        </trans-unit>
        <trans-unit id="42ce1e41b84aebc58d179a3c3fcf40c4606f89b8" translate="yes" xml:space="preserve">
          <source>TRUSTOTHER</source>
          <target state="translated">TRUSTOTHER</target>
        </trans-unit>
        <trans-unit id="553de7bf13a6b34260ecd89d62193953411a2b8f" translate="yes" xml:space="preserve">
          <source>TSort</source>
          <target state="translated">TSort</target>
        </trans-unit>
        <trans-unit id="c74bc6182d3ab4ac1de6c25b2e16efddf5fab4b0" translate="yes" xml:space="preserve">
          <source>TSort::tsort</source>
          <target state="translated">TSort::tsort</target>
        </trans-unit>
        <trans-unit id="a82af16b4d3874092bed792df807a7d984b49886" translate="yes" xml:space="preserve">
          <source>TYPECODE</source>
          <target state="translated">TYPECODE</target>
        </trans-unit>
        <trans-unit id="5af9550589cc20b74323d91b497061eec4c5e5c9" translate="yes" xml:space="preserve">
          <source>TYPECODE_PREFIX</source>
          <target state="translated">TYPECODE_PREFIX</target>
        </trans-unit>
        <trans-unit id="40ea9041285003e004a8f6fe2dd14ebb07961af2" translate="yes" xml:space="preserve">
          <source>TYPES</source>
          <target state="translated">TYPES</target>
        </trans-unit>
        <trans-unit id="4c25942df12698f67e905991326790547364390d" translate="yes" xml:space="preserve">
          <source>TYPE_CHAR</source>
          <target state="translated">TYPE_CHAR</target>
        </trans-unit>
        <trans-unit id="862cd6b5e0d5416395eea540ec962907a1688926" translate="yes" xml:space="preserve">
          <source>TYPE_DOUBLE</source>
          <target state="translated">TYPE_DOUBLE</target>
        </trans-unit>
        <trans-unit id="3902e65cd966a66b036c13c6e9092b9139ed2a0c" translate="yes" xml:space="preserve">
          <source>TYPE_FLOAT</source>
          <target state="translated">TYPE_FLOAT</target>
        </trans-unit>
        <trans-unit id="aac554730bb7b61292389b97bd8c55982fa2f3d6" translate="yes" xml:space="preserve">
          <source>TYPE_INT</source>
          <target state="translated">TYPE_INT</target>
        </trans-unit>
        <trans-unit id="b7462d1638cf641ef913a2ecab22071ffe62004c" translate="yes" xml:space="preserve">
          <source>TYPE_INTPTR_T</source>
          <target state="translated">TYPE_INTPTR_T</target>
        </trans-unit>
        <trans-unit id="1cee0a4527d5022cb2c923646d1074d03683aa01" translate="yes" xml:space="preserve">
          <source>TYPE_LONG</source>
          <target state="translated">TYPE_LONG</target>
        </trans-unit>
        <trans-unit id="2feaa9dd9914d387ccc22aad392049348d49af21" translate="yes" xml:space="preserve">
          <source>TYPE_LONG_LONG</source>
          <target state="translated">TYPE_LONG_LONG</target>
        </trans-unit>
        <trans-unit id="834cf31a6cf7089b062316a5c98c7b170006f99a" translate="yes" xml:space="preserve">
          <source>TYPE_PTRDIFF_T</source>
          <target state="translated">TYPE_PTRDIFF_T</target>
        </trans-unit>
        <trans-unit id="0a8abace30f39f28e4f8121bb03257bcdc8b10a7" translate="yes" xml:space="preserve">
          <source>TYPE_SHORT</source>
          <target state="translated">TYPE_SHORT</target>
        </trans-unit>
        <trans-unit id="de028185a04d7327cbf1ce5bb41f0aa7c8fa208f" translate="yes" xml:space="preserve">
          <source>TYPE_SIZE_T</source>
          <target state="translated">TYPE_SIZE_T</target>
        </trans-unit>
        <trans-unit id="7cd056104d1f01ef3a807b30763b90b43b351739" translate="yes" xml:space="preserve">
          <source>TYPE_SSIZE_T</source>
          <target state="translated">TYPE_SSIZE_T</target>
        </trans-unit>
        <trans-unit id="0cb379aa8950116baa7c69b0ec29ff28debf6cd9" translate="yes" xml:space="preserve">
          <source>TYPE_UINTPTR_T</source>
          <target state="translated">TYPE_UINTPTR_T</target>
        </trans-unit>
        <trans-unit id="c1854f2654f3c4c8da36382171d42f7ab1204273" translate="yes" xml:space="preserve">
          <source>TYPE_VOID</source>
          <target state="translated">TYPE_VOID</target>
        </trans-unit>
        <trans-unit id="4192871829ac3dfad0b32910cff99414b137cacb" translate="yes" xml:space="preserve">
          <source>TYPE_VOIDP</source>
          <target state="translated">TYPE_VOIDP</target>
        </trans-unit>
        <trans-unit id="1fdb42ffc3d258518c3d7738ee1fda7f5d02df45" translate="yes" xml:space="preserve">
          <source>Tab character (t)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918e44eb26d9f591ec77a71f04410541ef433bb7" translate="yes" xml:space="preserve">
          <source>Table#&amp;lt;&amp;lt;</source>
          <target state="translated">Table#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="2827179c8a914efb11e62f518f3f74fed5764e73" translate="yes" xml:space="preserve">
          <source>Table#==</source>
          <target state="translated">Table#==</target>
        </trans-unit>
        <trans-unit id="599c49a3f9da2cd91ab2956819db9e9f576d4331" translate="yes" xml:space="preserve">
          <source>Table#[]</source>
          <target state="translated">Table#[]</target>
        </trans-unit>
        <trans-unit id="e8dfd4f70a399f6da296afb25fd40e89204a9bf9" translate="yes" xml:space="preserve">
          <source>Table#[]=</source>
          <target state="translated">Table#[]=</target>
        </trans-unit>
        <trans-unit id="a6bfdce21aa27d6006338edac24d61ba842032f4" translate="yes" xml:space="preserve">
          <source>Table#by_col</source>
          <target state="translated">Table#by_col</target>
        </trans-unit>
        <trans-unit id="e85c259044be6edc09e26aad7bf4e5e4208fcc85" translate="yes" xml:space="preserve">
          <source>Table#by_col!</source>
          <target state="translated">Table#by_col!</target>
        </trans-unit>
        <trans-unit id="b6e56a4d9bc04b5763b77d90fd727036a0972396" translate="yes" xml:space="preserve">
          <source>Table#by_col_or_row</source>
          <target state="translated">Table#by_col_or_row</target>
        </trans-unit>
        <trans-unit id="f604e1ee23965fc84e9cfbdba7827a5d6cce8d90" translate="yes" xml:space="preserve">
          <source>Table#by_col_or_row!</source>
          <target state="translated">Table#by_col_or_row!</target>
        </trans-unit>
        <trans-unit id="7793d3d4a228a767aaf798e3bcce063df16a3455" translate="yes" xml:space="preserve">
          <source>Table#by_row</source>
          <target state="translated">Table#by_row</target>
        </trans-unit>
        <trans-unit id="2234bd91a4d71ccfee8f53f97696ae17e2420d6e" translate="yes" xml:space="preserve">
          <source>Table#by_row!</source>
          <target state="translated">Table#by_row!</target>
        </trans-unit>
        <trans-unit id="187572a862751be4848eb88cc6d7edefb72a3919" translate="yes" xml:space="preserve">
          <source>Table#delete</source>
          <target state="translated">Table#delete</target>
        </trans-unit>
        <trans-unit id="0cc7d364e0fc5b8e76f2950c6615e8c06bfcf17a" translate="yes" xml:space="preserve">
          <source>Table#delete_if</source>
          <target state="translated">Table#delete_if</target>
        </trans-unit>
        <trans-unit id="d069fe889146f9356b4958c5a634fae3630320db" translate="yes" xml:space="preserve">
          <source>Table#dig</source>
          <target state="translated">Table#dig</target>
        </trans-unit>
        <trans-unit id="8ee4aa5961da85f14f3bc6915687f1d605570dd8" translate="yes" xml:space="preserve">
          <source>Table#each</source>
          <target state="translated">Table#each</target>
        </trans-unit>
        <trans-unit id="f903d9015ae27322e4106adabbf4cfa4204fd1d9" translate="yes" xml:space="preserve">
          <source>Table#headers</source>
          <target state="translated">Table#headers</target>
        </trans-unit>
        <trans-unit id="581083f4fc38e6ed4539d55bf7d8e42d860b284c" translate="yes" xml:space="preserve">
          <source>Table#inspect</source>
          <target state="translated">Table#inspect</target>
        </trans-unit>
        <trans-unit id="cbf9b5529958de26df6ae1ec8147d464881a8554" translate="yes" xml:space="preserve">
          <source>Table#mode</source>
          <target state="translated">Table#mode</target>
        </trans-unit>
        <trans-unit id="42ab0e5d3026b53db422d30a160608313c51c423" translate="yes" xml:space="preserve">
          <source>Table#push</source>
          <target state="translated">Table#push</target>
        </trans-unit>
        <trans-unit id="230f520d7eeb5a497690168b018f9942870215f2" translate="yes" xml:space="preserve">
          <source>Table#table</source>
          <target state="translated">Table#table</target>
        </trans-unit>
        <trans-unit id="cd6b9ba44762cc04b19f346fc9643bd3507d3e32" translate="yes" xml:space="preserve">
          <source>Table#to_a</source>
          <target state="translated">Table#to_a</target>
        </trans-unit>
        <trans-unit id="3f7ab0b3fbd79777d8f5dc988c144421292dc85f" translate="yes" xml:space="preserve">
          <source>Table#to_csv</source>
          <target state="translated">Table#to_csv</target>
        </trans-unit>
        <trans-unit id="a176f797faae2efbfa73773effbbdb4569df281c" translate="yes" xml:space="preserve">
          <source>Table#to_s</source>
          <target state="translated">Table#to_s</target>
        </trans-unit>
        <trans-unit id="3d08f92647f86b74703a3791aca0e8177a9eba33" translate="yes" xml:space="preserve">
          <source>Table#values_at</source>
          <target state="translated">Table#values_at</target>
        </trans-unit>
        <trans-unit id="f6f91ae52ba2d5433d85bb3b22b7fa93fbabea01" translate="yes" xml:space="preserve">
          <source>Table::new</source>
          <target state="translated">Table::new</target>
        </trans-unit>
        <trans-unit id="7174846878d65b1ca62e5fae6c3f118d6e976ba0" translate="yes" xml:space="preserve">
          <source>Tag constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f6242827fb328a182af47ccd3b6b7b1aa8b907" translate="yes" xml:space="preserve">
          <source>TaggedResponse</source>
          <target state="translated">TaggedResponse</target>
        </trans-unit>
        <trans-unit id="61624872e53a924c86554f32d48c08ab450a3d97" translate="yes" xml:space="preserve">
          <source>Tags the current state of the dependency as the given tag @param [Object] tag an opaque tag for the current state of the graph @return [Void]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8613a047ae0c4806fa62eb698249a4122f6610c" translate="yes" xml:space="preserve">
          <source>Taint both the object returned by _&lt;em&gt;getobj&lt;/em&gt;_ and self.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b947be812aff4b0932a813b4a570061d64218415" translate="yes" xml:space="preserve">
          <source>Taints this &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c74316fe177e0610c513e8cde5f6d056f8ea6d4" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;body&lt;/code&gt;, a &lt;a href=&quot;../method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object, and returns a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; with the human readable instructions for &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508fb61610f3331134e2c6379071a07dc782958f" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;file&lt;/code&gt;, a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; with the location of a Ruby source file, reads, parses and compiles the file, and returns &lt;code&gt;iseq&lt;/code&gt;, the compiled &lt;a href=&quot;instructionsequence&quot;&gt;&lt;code&gt;InstructionSequence&lt;/code&gt;&lt;/a&gt; with source location metadata set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537efdd40c5096b327f91a3960ccab90e2f79773" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;source&lt;/code&gt;, a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; of Ruby code and compiles it to an &lt;a href=&quot;instructionsequence&quot;&gt;&lt;code&gt;InstructionSequence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff336321aade5c776f59ae6e6dea8e193d09364" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;tuple&lt;/code&gt; from the proxied &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;tuplespace#method-i-take&quot;&gt;&lt;code&gt;TupleSpace#take&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be584dd02638bb05e38f16f3eddb48e85e2e012b" translate="yes" xml:space="preserve">
          <source>Takes a block and queues a new group that is indented 1 level further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fa2a6e74d89d1bc721671863be63b5c2ee06da" translate="yes" xml:space="preserve">
          <source>Takes a hash as its argument. The key is a symbol or an array of symbols. These symbols correspond to method names. The value is the accessor to which the methods will be delegated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766b202db819c6bc570e3bc383076b8534dc530b" translate="yes" xml:space="preserve">
          <source>Takes a string representation of a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; and attempts to parse it using a heuristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53848fb60853f829e2b58b1b1146a1c64e6a2a93" translate="yes" xml:space="preserve">
          <source>Takes an element or elements or array of elements. Each element is specified by the name of the element, without angle brackets. This matches both the start and the end tag of that element. The attribute list of the open tag will also be escaped (for instance, the double-quotes surrounding attribute values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684790c053fc71752d86a705f26c7e67efd7ca03" translate="yes" xml:space="preserve">
          <source>Takes one element from &lt;em&gt;enum&lt;/em&gt; and merges corresponding elements from each &lt;em&gt;args&lt;/em&gt;. This generates a sequence of &lt;em&gt;n&lt;/em&gt;-element arrays, where &lt;em&gt;n&lt;/em&gt; is one more than the count of arguments. The length of the resulting sequence will be &lt;code&gt;enum#size&lt;/code&gt;. If the size of any argument is less than &lt;code&gt;enum#size&lt;/code&gt;, &lt;code&gt;nil&lt;/code&gt; values are supplied. If a block is given, it is invoked for each output array, otherwise an array of arrays is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f228e14880ec688594ad04d76770bc9d637b0ed9" translate="yes" xml:space="preserve">
          <source>Takes the first digit of the reply code to determine the status type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092fdb2afcd43bf4cd28a846aa29aecb8ed347f2" translate="yes" xml:space="preserve">
          <source>Tanaka Akira &amp;lt;akr@fsij.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d11bc5070e2353f0cc58ce3350851cebeef23f" translate="yes" xml:space="preserve">
          <source>Tanaka Akira &amp;lt;akr@m17n.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dbdf1a2c6c3f91d0c2160e1cad2e30c6c7b7ad" translate="yes" xml:space="preserve">
          <source>Tarjan, &amp;ldquo;Depth First Search and Linear Graph Algorithms&amp;rdquo;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">Task</target>
        </trans-unit>
        <trans-unit id="b1c073a56a86f92104541cf8affdb8d1c055af44" translate="yes" xml:space="preserve">
          <source>Temp file creation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc72d43b973868a44774c062048286d69dffbf8" translate="yes" xml:space="preserve">
          <source>Temp file creation with self</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ce0294c0831a57d7a1e8b615ef6881b413c5d0" translate="yes" xml:space="preserve">
          <source>TempIO</source>
          <target state="translated">TempIO</target>
        </trans-unit>
        <trans-unit id="e42f6b37f8c41e3e27835715d0728721a02bc664" translate="yes" xml:space="preserve">
          <source>TempIO#string</source>
          <target state="translated">TempIO#string</target>
        </trans-unit>
        <trans-unit id="c44ae31b991d00c293ca21cfebb79174f49e17d7" translate="yes" xml:space="preserve">
          <source>TempIO::new</source>
          <target state="translated">TempIO::new</target>
        </trans-unit>
        <trans-unit id="0d666645c24642f1d63b7ef5471c5c24c3b8cf45" translate="yes" xml:space="preserve">
          <source>Tempfile</source>
          <target state="translated">Tempfile</target>
        </trans-unit>
        <trans-unit id="7d0f4485be53baedcfde1f6812fe5fccff72ec4b" translate="yes" xml:space="preserve">
          <source>Tempfile#open</source>
          <target state="translated">Tempfile#open</target>
        </trans-unit>
        <trans-unit id="676a0406cb2105140fc7fc34aec808af465d166c" translate="yes" xml:space="preserve">
          <source>Tempfile#path</source>
          <target state="translated">Tempfile#path</target>
        </trans-unit>
        <trans-unit id="1f9c84adea1de79db8a5debe6f7ccf7f3ea8481d" translate="yes" xml:space="preserve">
          <source>Tempfile#size</source>
          <target state="translated">Tempfile#size</target>
        </trans-unit>
        <trans-unit id="28f8d220bc1ce7682e57a771def142129a8c0b3a" translate="yes" xml:space="preserve">
          <source>Tempfile's filename picking method is both thread-safe and inter-process-safe: it guarantees that no other threads or processes will pick the same filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a170de52ee8c2d48d59dba1d54bf61a40c1bd10" translate="yes" xml:space="preserve">
          <source>Tempfile::new</source>
          <target state="translated">Tempfile::new</target>
        </trans-unit>
        <trans-unit id="f86216909661e083adacf7aaec1b38706ba92132" translate="yes" xml:space="preserve">
          <source>Tempfile::open</source>
          <target state="translated">Tempfile::open</target>
        </trans-unit>
        <trans-unit id="8a399486c68308e067b0337111c6e366b166ad3d" translate="yes" xml:space="preserve">
          <source>Templates are used to match tuples in &lt;a href=&quot;../rinda&quot;&gt;&lt;code&gt;Rinda&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403588ac969f393040f0e770ebfeecee5b0201ef" translate="yes" xml:space="preserve">
          <source>Temporary failure in name resolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc6a4c49f505c321c3043717b2fe87fb2d0928f" translate="yes" xml:space="preserve">
          <source>TemporaryRedirect</source>
          <target state="translated">TemporaryRedirect</target>
        </trans-unit>
        <trans-unit id="cc66c5d4b794ee13ca84badcd74ce1acc533f9a8" translate="yes" xml:space="preserve">
          <source>TemporaryResourceError</source>
          <target state="translated">TemporaryResourceError</target>
        </trans-unit>
        <trans-unit id="b6b55f8bf7018263b76ba966078ab7ad34ad0385" translate="yes" xml:space="preserve">
          <source>TemporaryResourceError#message</source>
          <target state="translated">TemporaryResourceError#message</target>
        </trans-unit>
        <trans-unit id="801896360e20cacdd8f231d3171abd6f353f9323" translate="yes" xml:space="preserve">
          <source>Terminate execution immediately, effectively by calling &lt;code&gt;Kernel.exit(false)&lt;/code&gt;. If &lt;em&gt;msg&lt;/em&gt; is given, it is written to STDERR prior to terminating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005e7315fceca19c37ab8a8f673cd9e0ad99e9c1" translate="yes" xml:space="preserve">
          <source>Terminates &lt;code&gt;thr&lt;/code&gt; and schedules another thread to be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0ff06e0cef57c0ec636a42dd8f74e193f7d67d" translate="yes" xml:space="preserve">
          <source>Terminates option parsing. Optional parameter &lt;code&gt;arg&lt;/code&gt; is a string pushed back to be the first non-option argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fba454142f15aa197f254bfeb610dd000ef1517" translate="yes" xml:space="preserve">
          <source>Terminates the currently running thread and schedules another thread to be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60bb0cab7d8c4e670956adb71a22c9dbbf0ca67" translate="yes" xml:space="preserve">
          <source>Terms and Definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e71ddbe9ae8014eeae20db1088630e66811aab" translate="yes" xml:space="preserve">
          <source>Ternary if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c927e6384220d83a5c86651c6ec2612b6df3a7f" translate="yes" xml:space="preserve">
          <source>Test#blockdev?</source>
          <target state="translated">Test#blockdev?</target>
        </trans-unit>
        <trans-unit id="b09869a4ce4f0bff9f06a9e507f86a362898de75" translate="yes" xml:space="preserve">
          <source>Test#chardev?</source>
          <target state="translated">Test#chardev?</target>
        </trans-unit>
        <trans-unit id="84e6cdb1bea055e00cbdbc2056e680438682a277" translate="yes" xml:space="preserve">
          <source>Test#directory?</source>
          <target state="translated">Test#directory?</target>
        </trans-unit>
        <trans-unit id="b6c3aa380432d6aacabc6de7f29a44b255c1d0bf" translate="yes" xml:space="preserve">
          <source>Test#empty?</source>
          <target state="translated">Test#empty?</target>
        </trans-unit>
        <trans-unit id="e2276916fea110a80b2c9feb1df9cca59bd3caab" translate="yes" xml:space="preserve">
          <source>Test#executable?</source>
          <target state="translated">Test#executable?</target>
        </trans-unit>
        <trans-unit id="80a1785602e98503fd12177489365313a90745e3" translate="yes" xml:space="preserve">
          <source>Test#executable_real?</source>
          <target state="translated">Test#executable_real?</target>
        </trans-unit>
        <trans-unit id="3de8b421b03210d81ea418a66d92a6eb6688a622" translate="yes" xml:space="preserve">
          <source>Test#exist?</source>
          <target state="translated">Test#exist?</target>
        </trans-unit>
        <trans-unit id="c7ede8f597af4eaba24d68eee7916f520895525e" translate="yes" xml:space="preserve">
          <source>Test#exists?</source>
          <target state="translated">Test#exists?</target>
        </trans-unit>
        <trans-unit id="632979d38f698488275220a08e7c99118ec0aa66" translate="yes" xml:space="preserve">
          <source>Test#file?</source>
          <target state="translated">Test#file?</target>
        </trans-unit>
        <trans-unit id="2d61ba40a0b3f42a290d9dfb89e1587144e6c747" translate="yes" xml:space="preserve">
          <source>Test#grpowned?</source>
          <target state="translated">Test#grpowned?</target>
        </trans-unit>
        <trans-unit id="d1176270f963a9902a6c871079ed27a85d47412c" translate="yes" xml:space="preserve">
          <source>Test#identical?</source>
          <target state="translated">Test#identical?</target>
        </trans-unit>
        <trans-unit id="9cb49378f20abfd7450853642fb38746c487d02a" translate="yes" xml:space="preserve">
          <source>Test#owned?</source>
          <target state="translated">Test#owned?</target>
        </trans-unit>
        <trans-unit id="3cc095db766f6157f07b675a0f79311f2e2a7d67" translate="yes" xml:space="preserve">
          <source>Test#pipe?</source>
          <target state="translated">Test#pipe?</target>
        </trans-unit>
        <trans-unit id="fe0c505588212d5136751d1a86d94c24a99b80cc" translate="yes" xml:space="preserve">
          <source>Test#readable?</source>
          <target state="translated">Test#readable?</target>
        </trans-unit>
        <trans-unit id="6bb8302ddedeffcb3d8691e774f9381d90d245b1" translate="yes" xml:space="preserve">
          <source>Test#readable_real?</source>
          <target state="translated">Test#readable_real?</target>
        </trans-unit>
        <trans-unit id="594806ccfe83a2ffb48944510d35129fc9cf42e3" translate="yes" xml:space="preserve">
          <source>Test#setgid?</source>
          <target state="translated">Test#setgid?</target>
        </trans-unit>
        <trans-unit id="5cd201f78d33bc7470a05efb414353314b9d71e4" translate="yes" xml:space="preserve">
          <source>Test#setuid?</source>
          <target state="translated">Test#setuid?</target>
        </trans-unit>
        <trans-unit id="d8b7f447877fd994cd9fdf4794dba347d45f47fb" translate="yes" xml:space="preserve">
          <source>Test#size</source>
          <target state="translated">Test#size</target>
        </trans-unit>
        <trans-unit id="584133ec0173add8a3d88e86a7c1beb023741673" translate="yes" xml:space="preserve">
          <source>Test#size?</source>
          <target state="translated">Test#size?</target>
        </trans-unit>
        <trans-unit id="4d83e8281c562aeebe5ec53fa94e2185a2822c30" translate="yes" xml:space="preserve">
          <source>Test#socket?</source>
          <target state="translated">Test#socket?</target>
        </trans-unit>
        <trans-unit id="406c2dc3b187c2f9f0d07e723998578244d44475" translate="yes" xml:space="preserve">
          <source>Test#sticky?</source>
          <target state="translated">Test#sticky?</target>
        </trans-unit>
        <trans-unit id="34675af7f7e3e23e2abdce298cc504eef7a7faad" translate="yes" xml:space="preserve">
          <source>Test#symlink?</source>
          <target state="translated">Test#symlink?</target>
        </trans-unit>
        <trans-unit id="993ac7c9b1b65e9cdb0b6336e94fdc5fea94fc81" translate="yes" xml:space="preserve">
          <source>Test#world_readable?</source>
          <target state="translated">Test#world_readable?</target>
        </trans-unit>
        <trans-unit id="200ddd2152a8f3238b2483615a3e5380c4efe4c3" translate="yes" xml:space="preserve">
          <source>Test#world_writable?</source>
          <target state="translated">Test#world_writable?</target>
        </trans-unit>
        <trans-unit id="4124c233de0e93ed169da572155997f5d0c40dd8" translate="yes" xml:space="preserve">
          <source>Test#writable?</source>
          <target state="translated">Test#writable?</target>
        </trans-unit>
        <trans-unit id="f5605034d58712f9b738abda747a8766a3b7176a" translate="yes" xml:space="preserve">
          <source>Test#writable_real?</source>
          <target state="translated">Test#writable_real?</target>
        </trans-unit>
        <trans-unit id="08aae82f2fed2058fafd4dcd248b2b53719920bb" translate="yes" xml:space="preserve">
          <source>Test#zero?</source>
          <target state="translated">Test#zero?</target>
        </trans-unit>
        <trans-unit id="1ff91dc18bb79dce97b9ad14f801a95f1ec923f5" translate="yes" xml:space="preserve">
          <source>Tests bit &lt;em&gt;bit&lt;/em&gt; in &lt;em&gt;bn&lt;/em&gt; and returns &lt;code&gt;true&lt;/code&gt; if set, &lt;code&gt;false&lt;/code&gt; if not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b80a86c4d389143df43efc688e8f949c13be9b6" translate="yes" xml:space="preserve">
          <source>Tests for value equality; returns true if the values are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8c23fc77adec8a63c8d85c060d40584767e0df" translate="yes" xml:space="preserve">
          <source>Tests that take two files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9fdad5d6a87d420d7d1a368332f2f9ce29b562" translate="yes" xml:space="preserve">
          <source>Tests the file is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7ab07abd320e3c3c073cd538ffabe368ac7072" translate="yes" xml:space="preserve">
          <source>Tests whether the given &lt;code&gt;pattern&lt;/code&gt; is matched from the current scan pointer. Advances the scan pointer if &lt;code&gt;advance_pointer_p&lt;/code&gt; is true. Returns the matched string if &lt;code&gt;return_string_p&lt;/code&gt; is true. The match register is affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4214410eefac2ea78f76c5d5079278a8c193ab9" translate="yes" xml:space="preserve">
          <source>Tests whether the given &lt;code&gt;pattern&lt;/code&gt; is matched from the current scan pointer. Returns the length of the match, or &lt;code&gt;nil&lt;/code&gt;. The scan pointer is not advanced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6052854c1b1deeff562a9d49f66d495969668e7b" translate="yes" xml:space="preserve">
          <source>Textual time zones listed in ZoneOffset are also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42931673d152af05026091b875184b6fff10c32" translate="yes" xml:space="preserve">
          <source>ThWait</source>
          <target state="translated">ThWait</target>
        </trans-unit>
        <trans-unit id="d509235c10d6f144701b73fe422cd2d1cf4526a6" translate="yes" xml:space="preserve">
          <source>ThWait#all_waits</source>
          <target state="translated">ThWait#all_waits</target>
        </trans-unit>
        <trans-unit id="59a6085f27c683f2e58c5dfc7fce9dd2776ef309" translate="yes" xml:space="preserve">
          <source>ThWait#empty?</source>
          <target state="translated">ThWait#empty?</target>
        </trans-unit>
        <trans-unit id="1e7cddac6d95ecf940de3184259f14c0a81f159c" translate="yes" xml:space="preserve">
          <source>ThWait#finished?</source>
          <target state="translated">ThWait#finished?</target>
        </trans-unit>
        <trans-unit id="d0b91b78278c73c10292e7b3616ff8c665b9a998" translate="yes" xml:space="preserve">
          <source>ThWait#join</source>
          <target state="translated">ThWait#join</target>
        </trans-unit>
        <trans-unit id="01b27d0ce349d6b5a07f3f3fdc5e937a9e4b348c" translate="yes" xml:space="preserve">
          <source>ThWait#join_nowait</source>
          <target state="translated">ThWait#join_nowait</target>
        </trans-unit>
        <trans-unit id="43eae61f56e46dde1d4a40b1b62f7a0a63b61414" translate="yes" xml:space="preserve">
          <source>ThWait#next_wait</source>
          <target state="translated">ThWait#next_wait</target>
        </trans-unit>
        <trans-unit id="61f5c60b8287a37a028e17996aa9a4693443d0e0" translate="yes" xml:space="preserve">
          <source>ThWait#threads</source>
          <target state="translated">ThWait#threads</target>
        </trans-unit>
        <trans-unit id="cce36a4c05ac6b0fa99d53c463ca5520d81fe832" translate="yes" xml:space="preserve">
          <source>ThWait::all_waits</source>
          <target state="translated">ThWait::all_waits</target>
        </trans-unit>
        <trans-unit id="808f84d03d8c603a6b143601f313a5e8801f8776" translate="yes" xml:space="preserve">
          <source>ThWait::new</source>
          <target state="translated">ThWait::new</target>
        </trans-unit>
        <trans-unit id="7e82d9efe889d0b3edd1155a3e748b2230f52635" translate="yes" xml:space="preserve">
          <source>Thanks to Gavin Sinclair for some feedback on the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf731ee22ba3a970988a7da61f188c0de1357480" translate="yes" xml:space="preserve">
          <source>Thanks to Hal Fulton for hosting the Codefest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40d6550682fbc91cb1d1d9aec513c197f430b8c" translate="yes" xml:space="preserve">
          <source>Thanks to Matz for suggestions about the class design.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2313aa517074a3bba6ec061778a6f2667712e2" translate="yes" xml:space="preserve">
          <source>That is, a string consisting of the hyphenated concatenation of the individual components name, key length and mode. Either all uppercase or all lowercase strings may be used, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec2187002debb91b9206088c944642fada9a5a7" translate="yes" xml:space="preserve">
          <source>That is, for every element that is an array, extract its elements into the new array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b543a4b857ff3e16b80146a9433d00ee136a0a1" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;file&amp;rdquo; &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is defined by RFC8089.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053a5ebffb2f856dea7f4d83dda893ac8a3b4c3c" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;sync mode&amp;rdquo; of the SSLSocket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a962553aedc62e2a10b25e654e61419d4ff4aa8c" translate="yes" xml:space="preserve">
          <source>The '*' wildcard matches filenames starting with &amp;ldquo;.&amp;rdquo; in &lt;a href=&quot;../../file#method-c-fnmatch&quot;&gt;&lt;code&gt;File.fnmatch&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../dir#method-c-glob&quot;&gt;&lt;code&gt;Dir.glob&lt;/code&gt;&lt;/a&gt; patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b4afe680b8018be3899965bbcbda45e8799cdd" translate="yes" xml:space="preserve">
          <source>The (arithmetic) mean value of an array can be obtained as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1340dddadf890a7abaf36b280ca4033204bb253" translate="yes" xml:space="preserve">
          <source>The 29 optional &lt;em&gt;a&lt;/em&gt;s match the string, but this prevents the 29 mandatory &lt;em&gt;a&lt;/em&gt;s that follow from matching. Ruby must then backtrack repeatedly so as to satisfy as many of the optional matches as it can while still matching the mandatory 29. It is plain to us that none of the optional matches can succeed, but this fact unfortunately eludes Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1a080e73493eae1f72af8700eb574702e398d9" translate="yes" xml:space="preserve">
          <source>The 3rd element of the result is the address family of the first address. The address families of the rest of the addresses are not returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd4d2d83a142e711b185d8fe594f6f71c62c59f" translate="yes" xml:space="preserve">
          <source>The :in, :out, :err, an integer, an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; and an array key specifies a redirection. The redirection maps a file descriptor in the child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97354614eff34297d335ecabdca51d3476f52010" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../ipv4&quot;&gt;&lt;code&gt;Resolv::IPv4&lt;/code&gt;&lt;/a&gt; address for this &lt;a href=&quot;a&quot;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e925e2b1e76f213d831035467799ec72bc84fa66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../ipv6&quot;&gt;&lt;code&gt;Resolv::IPv6&lt;/code&gt;&lt;/a&gt; address for this &lt;a href=&quot;aaaa&quot;&gt;&lt;code&gt;AAAA&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2263fa71eee25565c2f2b868b617c35d486df4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../buffering&quot;&gt;&lt;code&gt;OpenSSL::Buffering&lt;/code&gt;&lt;/a&gt; module provides additional &lt;a href=&quot;../../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6a5c15bfdb65ebb06ce76925e2f8c64ab97cf7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; TCP protocol &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; looks like: &lt;code&gt;druby://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;?&amp;lt;option&amp;gt;&lt;/code&gt;. The option is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce81d73275e5c8da1eea8ab71134302be012158" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../drbsslsocket&quot;&gt;&lt;code&gt;DRb::DRbSSLSocket&lt;/code&gt;&lt;/a&gt; will take either a &lt;code&gt;config&lt;/code&gt;&lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; or an instance of &lt;a href=&quot;sslconfig&quot;&gt;&lt;code&gt;SSLConfig&lt;/code&gt;&lt;/a&gt;, and will setup the certificate for its session for the configuration. If want it to generate a generic certificate, the bare minimum is to provide the :SSLCertName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af580666ab29bfa18897743e3e26fecdc253d7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; profiler provides access to information on &lt;a href=&quot;../gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; runs including time, length and object space size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fc0fd5d9c8ac7f0be0e90575cd8abf88993b52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446365cda52252f4d8f545b4bc079f8205573570" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e1744a6570829108296f4f0175ba36683cb424" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; module extended to &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;../observable&quot;&gt;&lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c169ccb1684214ee28aa0e4c5ca2ac09f575ac7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; and ref of the object are marshalled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6725a4fcbc0a3bb149ca5bcf0acbbda302d2979" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for a &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; socket over SSL is: &lt;code&gt;drbssl://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;?&amp;lt;option&amp;gt;&lt;/code&gt;. The option is optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b798984cb64e9b88b891764d1baeb763a059dd74" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; of this DRbServer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f969f4b67f04f9d2f0b02ddd84e9451c444644" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; used to fetch this response. The response &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; is only available if a &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; was used to create the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaa557bad33e3105ada739404093c678cd96118" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; class maps &lt;code&gt;struct addrinfo&lt;/code&gt; to ruby. This structure identifies an Internet host and a service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d91c555a9f7e048bfcedba9ac1754065f0e09f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;array#method-i-map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method can be used to create a new array based on the original array, but with the values modified by the supplied block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc1848f4a66dca093ede33116a9a2eda8dfcc42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;array#method-i-slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; method works in an identical manner to &lt;a href=&quot;array#method-i-5B-5D&quot;&gt;&lt;code&gt;Array#[]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749e7c26b5a0eb17995a986da9cd785d531e3191" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; module provides for the encoding (#encode64, &lt;a href=&quot;base64#method-i-strict_encode64&quot;&gt;&lt;code&gt;strict_encode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-urlsafe_encode64&quot;&gt;&lt;code&gt;urlsafe_encode64&lt;/code&gt;&lt;/a&gt;) and decoding (#decode64, &lt;a href=&quot;base64#method-i-strict_decode64&quot;&gt;&lt;code&gt;strict_decode64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#method-i-urlsafe_decode64&quot;&gt;&lt;code&gt;urlsafe_decode64&lt;/code&gt;&lt;/a&gt;) of binary data using a &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4b35abb9b99f7dbb0ee014af9ab29fce01b7f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;benchmark&quot;&gt;&lt;code&gt;Benchmark&lt;/code&gt;&lt;/a&gt; module provides methods to measure and report the time used to execute Ruby code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e732861c056ef7dab85b958b86cdb64645a52d0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;bigdecimal#method-c-double_fig&quot;&gt;&lt;code&gt;BigDecimal.double_fig&lt;/code&gt;&lt;/a&gt; class method returns the number of digits a &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; number is allowed to have. The result depends upon the CPU and OS in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c651ec6ceecb784d75e92f20be995b9be3a3f50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;binding&quot;&gt;&lt;code&gt;Binding&lt;/code&gt;&lt;/a&gt; of the top level scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c5c63ee0b5f07a20956e448426b377536263cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; class dynamically mixes in parameter and cookie-parsing functionality, environmental variable access, and support for parsing multipart requests (including uploaded files) from the &lt;a href=&quot;cgi/queryextension&quot;&gt;&lt;code&gt;CGI::QueryExtension&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd1013f2c39a185f2856c2c4855f7d4b0b55e39" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; class provides methods for sending header and content output to the HTTP client, and mixes in methods for programmatic HTML generation from &lt;a href=&quot;cgi/htmlextension&quot;&gt;&lt;code&gt;CGI::HtmlExtension&lt;/code&gt;&lt;/a&gt; and CGI::TagMaker modules. The precise version of HTML to use for HTML generation is specified at object creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5a4e141bee8c4a26644013bb704f9cb5a8d846" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;compositehandler&quot;&gt;&lt;code&gt;Fiddle::CompositeHandler&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f124f013207a2467820f515417a75290116266f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dbm&quot;&gt;&lt;code&gt;DBM&lt;/code&gt;&lt;/a&gt; class provides a wrapper to a Unix-style &lt;a href=&quot;http://en.wikipedia.org/wiki/Dbm&quot;&gt;dbm&lt;/a&gt; or Database Manager library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39522388dac1ae3051ca1b7015e4ea0d4f5457dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module asks each registered protocol in turn to try to open a server at the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. Each protocol signals that it does not handle that &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; by raising a &lt;a href=&quot;drbbadscheme&quot;&gt;&lt;code&gt;DRbBadScheme&lt;/code&gt;&lt;/a&gt; error. If no protocol recognises the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, then a &lt;a href=&quot;drbbaduri&quot;&gt;&lt;code&gt;DRbBadURI&lt;/code&gt;&lt;/a&gt; error is raised. If a protocol accepts the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, but an error occurs in opening it, the underlying error is passed on to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399478b98108edf0c356451f4d62c5d4d9efb595" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module asks each registered protocol in turn to try to open the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. Each protocol signals that it does not handle that &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; by raising a &lt;a href=&quot;drbbadscheme&quot;&gt;&lt;code&gt;DRbBadScheme&lt;/code&gt;&lt;/a&gt; error. If no protocol recognises the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, then a &lt;a href=&quot;drbbaduri&quot;&gt;&lt;code&gt;DRbBadURI&lt;/code&gt;&lt;/a&gt; error is raised. If a protocol accepts the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, but an error occurs in opening it, a &lt;a href=&quot;drbconnerror&quot;&gt;&lt;code&gt;DRbConnError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4579f7887e9d804ace4fcb7a977e221dd9021421" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;drbprotocol&quot;&gt;&lt;code&gt;DRbProtocol&lt;/code&gt;&lt;/a&gt; module asks each registered protocol in turn to try to parse the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;. Each protocol signals that it does not handle that &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; by raising a &lt;a href=&quot;drbbadscheme&quot;&gt;&lt;code&gt;DRbBadScheme&lt;/code&gt;&lt;/a&gt; error. If no protocol recognises the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, then a &lt;a href=&quot;drbbaduri&quot;&gt;&lt;code&gt;DRbBadURI&lt;/code&gt;&lt;/a&gt; error is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c391859b93ca96e479613fdc8974ee71b5988f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; is parsing or writing in. This will be the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; you receive parsed data in and/or the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; data will be written in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4682815181d6995ff10c41cb278c16456be9b382" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;etc&quot;&gt;&lt;code&gt;Etc&lt;/code&gt;&lt;/a&gt; module provides a more reliable way to access information about the logged in user than environment variables such as +$USER+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855228121ba4cb2745937399cb950bc8a89d65ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;etc&quot;&gt;&lt;code&gt;Etc&lt;/code&gt;&lt;/a&gt; module provides access to information typically stored in files in the /etc directory on Unix systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47336ebe9a9c5e6f45c7a46a17aab98d8bbf06b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; module provides an interface to Ruby's mark and sweep garbage collection mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb8fe3d262965f903a7ab122cb83d2732c77e3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;getoptlong&quot;&gt;&lt;code&gt;GetoptLong&lt;/code&gt;&lt;/a&gt; class allows you to parse command line options similarly to the GNU getopt_long() C library call. Note, however, that &lt;a href=&quot;getoptlong&quot;&gt;&lt;code&gt;GetoptLong&lt;/code&gt;&lt;/a&gt; is a pure Ruby implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6469ec77d9d30edde86235fd2b709328d9b03861" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gitproxy&quot;&gt;&lt;code&gt;GitProxy&lt;/code&gt;&lt;/a&gt; is responsible to interact with git repositories. All actions required by the &lt;a href=&quot;../git&quot;&gt;&lt;code&gt;Git&lt;/code&gt;&lt;/a&gt; source is encapsulated in this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec89578c3a0593e352b7ec9dd0a8da9c71194f6e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gw&quot;&gt;&lt;code&gt;GW&lt;/code&gt;&lt;/a&gt; provides a synchronized store for participants in the gateway to communicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b060152f8fff9b73fd658cf63d24089dec412596" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;gzipfile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; object will be closed automatically after executing the block. If you want to keep the associated &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object open, you may call &lt;a href=&quot;gzipfile#method-i-finish&quot;&gt;&lt;code&gt;Zlib::GzipFile#finish&lt;/code&gt;&lt;/a&gt; method in the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d33b6c43674f1db5046f4f573cd2e59ba65587a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;handle&quot;&gt;&lt;code&gt;Fiddle::Handle&lt;/code&gt;&lt;/a&gt; is the manner to access the dynamic library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b38c951d0ef931ca1de3d24a76ff7da7f467c9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http&quot;&gt;&lt;code&gt;Net::HTTP&lt;/code&gt;&lt;/a&gt; methods in the following section do not persist connections. They are not recommended if you are performing many &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6380277840abb740805abebdadc660e59c0fede7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpheader&quot;&gt;&lt;code&gt;HTTPHeader&lt;/code&gt;&lt;/a&gt; module defines methods for reading and writing &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9925e5f9f90c5a63d27f55ac65a4e44e1d2f6de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;instructionsequence&quot;&gt;&lt;code&gt;InstructionSequence&lt;/code&gt;&lt;/a&gt; class represents a compiled sequence of instructions for the Ruby Virtual Machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15fb14aab124610f86d80fbacb0302ca6037b22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; are both closed after the block completes if they haven't been already closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7759aefe954c120ec6732b858cb949e068a9409a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; class is the basis for all input and output in Ruby. An I/O stream may be &lt;em&gt;duplexed&lt;/em&gt; (that is, bidirectional), and so may use more than one native operating system stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b7b737823e081a6c6439c1fd3d51f42716ebbe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; may be opened with different file modes (read-only, write-only) and encodings for proper conversion. See &lt;a href=&quot;io#method-c-new&quot;&gt;&lt;code&gt;IO.new&lt;/code&gt;&lt;/a&gt; for these options. See &lt;a href=&quot;kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt; for details of the various command formats described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38669a32c7cd5497ab2757d84026f960926f71b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ipaddr&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; class defines many methods and operators, and some of those, such as &amp;amp;, |, include? and ==, accept a string, or a packed &lt;a href=&quot;ipaddr#method-i-in_addr&quot;&gt;&lt;code&gt;in_addr&lt;/code&gt;&lt;/a&gt; value instead of an &lt;a href=&quot;ipaddr&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe251663899de22328a6fd2c35e3bb0a2f97c84e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; instance methods are documented in class &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; while the module methods are documented here. These methods are called without a receiver and thus can be called in functional form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46272ca190b4abf6bf612e9a801e3c61a56cac05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; module is included by class &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, so its methods are available in every Ruby object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15356fcb2564f13f8a6df451697683b453824aa7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;kernel#method-i-open&quot;&gt;&lt;code&gt;Kernel#open&lt;/code&gt;&lt;/a&gt; method can create an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;) object for these types of arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b90c4a5c29ea11dcfe60afb1581e023badcc6c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; class provides a simple but sophisticated logging utility that you can use to output messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2559121c2d9f56123a3e595a71946787d5474604" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logger#attribute-i-progname&quot;&gt;&lt;code&gt;progname&lt;/code&gt;&lt;/a&gt; configured, or passed to the logger method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba752e750f528590900fa65ad2abaf886fc60c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logger/severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt; of the log message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d323567938ad24df049840c75aa451b2ecfbf8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; format is used to serialize ruby objects. The format can store arbitrary objects through three user-defined extension mechanisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c3492e4bdf1d1d5a03e5559602c7f85ac56404" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; module contains module functions for basic trigonometric and transcendental functions. See class &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; for a list of constants that define Ruby's floating point accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f6ce0c32b0be54ef1bc376d2ae90d2fd031e10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; with the call method that is a completion for filename. This is sets by &lt;a href=&quot;readline#method-c-completion_proc-3D&quot;&gt;&lt;code&gt;Readline.completion_proc=&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395af9f936b3d627c1b07d3ecd1227a757f24392" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; with the call method that is a completion for usernames. This is sets by &lt;a href=&quot;readline#method-c-completion_proc-3D&quot;&gt;&lt;code&gt;Readline.completion_proc=&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29674060996a78614e9beee9e8b9ee55c20a252b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; module contains a number of routines that interact with the garbage collection facility and allow you to traverse all living objects with an iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e6599d7a90f972d5860df9e53eee7a06f0f63a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pkey/pkey&quot;&gt;&lt;code&gt;PKey&lt;/code&gt;&lt;/a&gt; module offers support for three popular public/private key algorithms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d11f60bfd136cf56f1ac40d7556cad10e9a6f15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;popmail#method-i-unique_id&quot;&gt;&lt;code&gt;POPMail#unique_id()&lt;/code&gt;&lt;/a&gt; method returns the unique-id of the message as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. Normally the unique-id is a hash of the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf122574cf8d1dde2feeb86759717387e25a144" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queryextension#method-i-initialize_query&quot;&gt;&lt;code&gt;initialize_query&lt;/code&gt;&lt;/a&gt; method, for initializing the above mechanisms, handling multipart forms, and allowing the class to be used in &amp;ldquo;offline&amp;rdquo; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335b331bc7a146728a417af2e7393109b43dff17" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class implements multi-producer, multi-consumer queues. It is especially useful in threaded programming when information must be exchanged safely between multiple threads. The &lt;a href=&quot;queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class implements all the required locking semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a59a94596fcfc880f78067dd8d4234ec244190" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt; module provides interface for GNU &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt;. This module defines a number of methods to facilitate completion and accesses input history from the Ruby interpreter. This module supported Edit Line(libedit) too. libedit is compatible with GNU &lt;a href=&quot;readline&quot;&gt;&lt;code&gt;Readline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe5ef93085c0b1ec72402df28fea61ef7034f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;regexp#method-i-match&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;matchdata&quot;&gt;&lt;code&gt;MatchData&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6852c55cf9bbfa877f4b319cdb4a6a57028975bf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ringserver&quot;&gt;&lt;code&gt;RingServer&lt;/code&gt;&lt;/a&gt; receives the UDP packet and connects back to the provided &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976f8a6b6f8eec3df8f60a910a7e6f67460fca54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rubyvm&quot;&gt;&lt;code&gt;RubyVM&lt;/code&gt;&lt;/a&gt; module provides some access to Ruby internals. This module is for very limited purposes, such as debugging, prototyping, and research. Normal users must not use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51082d708d078223c4b4d4c9f63b504fc35d0c3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; class associates data with a session as key-value pairs. This data can be set and retrieved by indexing the &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; instance using '[]', much the same as hashes (although other hash methods are not supported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c565fd3d800aa76502f0411834a82f8152431222" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;singleton&quot;&gt;&lt;code&gt;Singleton&lt;/code&gt;&lt;/a&gt; module implements the &lt;a href=&quot;singleton&quot;&gt;&lt;code&gt;Singleton&lt;/code&gt;&lt;/a&gt; pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7099b2f59d47919395d198716d5951806a9bcd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;Net::SMTP&lt;/code&gt;&lt;/a&gt; class supports three authentication schemes; PLAIN, LOGIN and CRAM MD5. (SMTP Authentication: [RFC2554]) To use &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; authentication, pass extra arguments to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;/SMTP#start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9fcdd76b2cdd4314ffe8b495b9eff4e744b90a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; object used in this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ecff28f3b9911a75ef16a584a57573933f66e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; appended to the end of each row. This can be set to the special &lt;code&gt;:auto&lt;/code&gt; setting, which requests that &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; automatically discover this from the data. Auto-discovery reads ahead in the data looking for the next &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;, &lt;code&gt;&quot;\n&quot;&lt;/code&gt;, or &lt;code&gt;&quot;\r&quot;&lt;/code&gt; sequence. A sequence will be selected even if it occurs in a quoted field, assuming that you would have the same line endings there. If none of those sequences is found, &lt;code&gt;data&lt;/code&gt; is &lt;code&gt;ARGF&lt;/code&gt;, &lt;code&gt;STDIN&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt;, or &lt;code&gt;STDERR&lt;/code&gt;, or the stream is only available for output, the default &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; (&lt;code&gt;$/&lt;/code&gt;) is used. Obviously, discovery takes a little time. &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; manually if speed is important. Also note that &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects should be opened in binary mode on Windows if this feature will be used as the line-ending translation can cause problems with resetting the document position to where it was before the read ahead. This &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will be transcoded into the data's &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; before parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8420c3a00dcbdbe50aa485ad0d954d6a4ba7616" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; placed between each field. This &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will be transcoded into the data's &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; before parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d9ef48db3b59b69b576fbc2e70f601c463593d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is passed to the &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; depends on the &lt;a href=&quot;readline#method-c-completer_word_break_characters&quot;&gt;&lt;code&gt;Readline.completer_word_break_characters&lt;/code&gt;&lt;/a&gt; property. By default the word under the cursor is passed to the &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;. For example, if the input is &amp;ldquo;foo bar&amp;rdquo; then only &amp;ldquo;bar&amp;rdquo; would be passed to the completion &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a5c9c9e326b538e39e880f8c30dce6dbc063ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; class generates new subclasses that hold a set of members and their values. For each member a reader and writer method is created similar to &lt;a href=&quot;module#method-i-attr_accessor&quot;&gt;&lt;code&gt;Module#attr_accessor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc36abb047738d335bf96d652d1e86a6ad96f9a1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tuplespace&quot;&gt;&lt;code&gt;TupleSpace&lt;/code&gt;&lt;/a&gt; will also notify you of the 'close' event when the &lt;a href=&quot;notifytemplateentry&quot;&gt;&lt;code&gt;NotifyTemplateEntry&lt;/code&gt;&lt;/a&gt; has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85beeaabd2d6bddff83aaa8a16d4235f0ebda4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; module contains a single method named &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;warn&lt;/code&gt;&lt;/a&gt;, and the module extends itself, making &lt;code&gt;Warning.warn&lt;/code&gt; available. &lt;a href=&quot;warning#method-i-warn&quot;&gt;&lt;code&gt;Warning.warn&lt;/code&gt;&lt;/a&gt; is called for all warnings issued by Ruby. By default, warnings are printed to $stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1d7688a0a0b0950d14b82f07a8fe254c64c05b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;zlib#SYNC_FLUSH&quot;&gt;&lt;code&gt;SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; method flushes all pending output to the output buffer and the output is aligned on a byte boundary. Flushing may degrade compression so it should be used only when necessary, such as at a request or response boundary for a network stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fae9339010ed77f9be56fb6d4c4a0814e5ea7df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;&lt;/code&gt; in the pattern below matches the first character of the string, then &lt;code&gt;.*&lt;/code&gt; matches &lt;em&gt;Quote&amp;ldquo;&lt;/em&gt;. This causes the overall match to fail, so the text matched by &lt;code&gt;.*&lt;/code&gt; is backtracked by one position, which leaves the final character of the string available to match &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029ec55136b5c03cf2fa8c6e73cd277d0c813fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;amp;&lt;/code&gt; argument preserves the tricks if a &lt;a href=&quot;proc&quot;&gt;&lt;code&gt;Proc&lt;/code&gt;&lt;/a&gt; object is given by &lt;code&gt;&amp;amp;&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce186ce471fe5930d3b1ba39f3b41ca00f5fb01e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; is used by various methods to compare objects, for example &lt;a href=&quot;enumerable#method-i-sort&quot;&gt;&lt;code&gt;Enumerable#sort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enumerable#method-i-max&quot;&gt;&lt;code&gt;Enumerable#max&lt;/code&gt;&lt;/a&gt; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedec98de6a457841362c37a43942ab899e94fc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(?:&lt;/code&gt;&amp;hellip;&lt;code&gt;)&lt;/code&gt; construct provides grouping without capturing. That is, it combines the terms it contains into an atomic whole without creating a backreference. This benefits performance at the slight expense of readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccae2d85d22ee5c5e6b00cc8cb2d0eace8f58a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; can appear anywhere on the left-hand side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea5b201f95f5d6e312f5d4a1a95296037299882" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:chdir&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25278db76dd87636f7e8c0ea569db7e019c1edb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:new_pgroup&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies to pass &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt; flag to &lt;code&gt;CreateProcessW()&lt;/code&gt; that is Windows API. This option is only for Windows. true means the new process is the root process of the new process group. The new process has CTRL+C disabled. This flag is necessary for &lt;code&gt;Process.kill(:SIGINT, pid)&lt;/code&gt; on the subprocess. :new_pgroup is false by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe4d82bec1597b30eed4dfc141f73134ab3859e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:output_row_sep&lt;/code&gt;&lt;code&gt;option&lt;/code&gt; defaults to &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; (&lt;code&gt;$/&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1229d6e7ab700d3e217bff21ae6658f28ab7c6ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:pgroup&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies a process group. The corresponding value should be true, zero, a positive integer, or nil. true and zero cause the process to be a process leader of a new process group. A non-zero positive integer causes the process to join the provided process group. The default value, nil, causes the process to remain in the same process group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9262d9a748b4916423664afa56698a2a8d204fed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:rlimit_&lt;/code&gt;&lt;em&gt;foo&lt;/em&gt; key specifies a resource limit. &lt;em&gt;foo&lt;/em&gt; should be one of resource types such as &lt;code&gt;core&lt;/code&gt;. The corresponding value should be an integer or an array which have one or two integers: same as cur_limit and max_limit arguments for &lt;a href=&quot;process#method-c-setrlimit&quot;&gt;&lt;code&gt;Process.setrlimit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd2e99d317f77c2eb3f251b657991a75ab11a45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:row_sep&lt;/code&gt;&lt;code&gt;option&lt;/code&gt; defaults to &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; (&lt;code&gt;$/&lt;/code&gt;) when calling this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4a3a69ff4f99837c72b39c1b265f8b3f958701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:umask&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies the umask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac45911951d11c759086cf353010cc6cc346723d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:unsetenv_others&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt; specifies to clear environment variables, other than specified by &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f816b91d0cd57028d9cffb0cca143bef6611b22f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;===&lt;/code&gt; and &lt;em&gt;block&lt;/em&gt; is called from the first element to the last element of &lt;em&gt;enum&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c741c1b0f207d6479a723ff2dc8d7a634a58a1eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;===&lt;/code&gt; and &lt;em&gt;block&lt;/em&gt; is called from the first element to the last element of &lt;em&gt;enum&lt;/em&gt;. The result for the first element is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9c6454d9c630f76fc818d3083a475a08ae18b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Comparable&lt;/code&gt; mixin is used by classes whose objects may be ordered. The class must define the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator, which compares the receiver against another object, returning -1, 0, or +1 depending on whether the receiver is less than, equal to, or greater than the other object. If the other object is not comparable then the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator should return nil. &lt;code&gt;Comparable&lt;/code&gt; uses &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; to implement the conventional comparison operators (&lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt;) and the method &lt;code&gt;between?&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0810818341d4b49e323a0f91bea6ff780846ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Enumerable&lt;/code&gt; mixin provides collection classes with several traversal and searching methods, and with the ability to sort. The class must provide a method &lt;code&gt;each&lt;/code&gt;, which yields successive members of the collection. If &lt;code&gt;Enumerable#max&lt;/code&gt;, &lt;code&gt;#min&lt;/code&gt;, or &lt;code&gt;#sort&lt;/code&gt; is used, the objects in the collection must also implement a meaningful &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator, as these methods rely on an ordering between members of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b3e086dbfb0db0c2b4e6e909e4ea07b0c89717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Fiber#resume&lt;/code&gt; method accepts an arbitrary number of parameters, if it is the first call to &lt;code&gt;resume&lt;/code&gt; then they will be passed as block arguments. Otherwise they will be the return value of the call to &lt;code&gt;Fiber.yield&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9b1472bde07107335b961ac9f9a7f137b1b9ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Find&lt;/code&gt; module supports the top-down traversal of a set of file paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49786bb9f1e8dad854c3bf69805c42825d14619" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IO&lt;/code&gt; stream is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c6599f10ba06d3f914705fdbc13ce391c6cc7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Matrix&lt;/code&gt; class represents a mathematical matrix. It provides methods for creating matrices, operating on them arithmetically and algebraically, and determining their mathematical properties such as trace, rank, inverse, determinant, or eigensystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3470e89f20ce6564a6c307d4b16e8ee05db3ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NO_PROXY&lt;/code&gt;&lt;a href=&quot;../../../../env&quot;&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/a&gt; variable can be used to specify hosts which shouldn't be reached via proxy; if set it should be a comma separated list of hostname suffixes, optionally with &lt;code&gt;:port&lt;/code&gt; appended, for example &lt;code&gt;example.com,some.host:8080&lt;/code&gt;. When set to &lt;code&gt;*&lt;/code&gt; no proxy will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311846b8c98a7991b954c7c1cc4d33159461c5c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OpenSSL::X509&lt;/code&gt; module provides the tools to set up an independent PKI, similar to scenarios where the 'openssl' command line tool is used for issuing certificates in a private PKI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd850de27144f27dbc2df94ae7c39e2afbbc5bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Process::GID&lt;/code&gt; module contains a collection of module functions which can be used to portably get, set, and switch the current process's real, effective, and saved group IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2488f43ebefb428aa5a3be05e2ab58dc787b5c0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Process::Sys&lt;/code&gt; module contains &lt;a href=&quot;uid&quot;&gt;&lt;code&gt;UID&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gid&quot;&gt;&lt;code&gt;GID&lt;/code&gt;&lt;/a&gt; functions which provide direct bindings to the system calls of the same names instead of the more-portable versions of the same functionality found in the &lt;code&gt;Process&lt;/code&gt;, &lt;code&gt;Process::UID&lt;/code&gt;, and &lt;code&gt;Process::GID&lt;/code&gt; modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5432d84953f724463524be3ab6adb06dc0bf06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Process::UID&lt;/code&gt; module contains a collection of module functions which can be used to portably get, set, and switch the current process's real, effective, and saved user IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdfd9ddb0d070cf1aeba738cd968a33e5a848bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Regexp#fixed_encoding?&lt;/code&gt; predicate indicates whether the regexp has a &lt;em&gt;fixed&lt;/em&gt; encoding, that is one incompatible with ASCII. A regexp's encoding can be explicitly fixed by supplying &lt;code&gt;Regexp::FIXEDENCODING&lt;/code&gt; as the second argument of &lt;code&gt;Regexp.new&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f0f172373198a48e84df4c76fc20758c2d01ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Vector&lt;/code&gt; class represents a mathematical vector, which is useful in its own right, and also constitutes a row or column of a &lt;a href=&quot;matrix&quot;&gt;&lt;code&gt;Matrix&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37398da3122d7d9c538e68a4a63e8552c863361" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate chain for this socket's peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d81e15ebcfffccd2bdae152245dd05c95013377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate for this socket endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3958073e184be9dd3031b4a51e4b5b2041f147d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate for this socket's peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611705e80ef544e878e05ecd292682a97ae7d656" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X509&lt;/code&gt; certificate store holds trusted CA certificates used to verify peer certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243e07725bccb10f8db838ab03ee56b48b1dc777" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;\g&amp;lt;&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; syntax matches the previous subexpression named &lt;em&gt;name&lt;/em&gt;, which can be a group name or number, again. This differs from backreferences in that it re-executes the group rather than simply trying to re-match the same text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6a8ccf91630b328ce463cc774ee7ca35e19de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;\p{}&lt;/code&gt; construct matches characters with the named property, much like POSIX bracket classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc51bb12ba74fa98e902d09408a9150efb8e8c4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__ENCODING__&lt;/code&gt; keyword returns the script encoding of the file which the keyword is written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943e6f4501bc4883192acbb71ed2cf89ede71967" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abbr&lt;/code&gt; method is used by '%Z' in &lt;a href=&quot;time#method-i-strftime&quot;&gt;&lt;code&gt;strftime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6e519cd1f5c05b63b78ff058fb1e7730dbf017" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accept&lt;/code&gt; method on &lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; may be used to create converters. It specifies which conversion block to call whenever a class is specified. The example below uses it to fetch a &lt;code&gt;User&lt;/code&gt; object before the &lt;code&gt;on&lt;/code&gt; handler receives it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a660d4cd89c50d26fde51bf6872be9ec9accfbe3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;address&lt;/code&gt; should be a DNS hostname or IP address, the &lt;code&gt;port&lt;/code&gt; is the port the server operates on. If no &lt;code&gt;port&lt;/code&gt; is given the default port for &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; or HTTPS is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7fc29d38b47b165fb7f524a0e88787e6d2d517" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alias&lt;/code&gt; keyword is most frequently used to alias methods. When aliasing a method, you can use either its name or a symbol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7247e5554c2ced086f790daaf25665e3926d0c8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;basename&lt;/code&gt; parameter is used to determine the name of the temporary file. You can either pass a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; with 2 &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; elements. In the former form, the temporary file's base name will begin with the given string. In the latter form, the temporary file's base name will begin with the array's first element, and end with the second element. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973695549c0654c4b1c867391d8a849e4e9f54ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;case&lt;/code&gt; expression can be used in two ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ec8539515d05dc5bea513b337fb6386c3ef688" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cause&lt;/code&gt; of the generated exception is automatically set to the &amp;ldquo;current&amp;rdquo; exception (&lt;code&gt;$!&lt;/code&gt;) if any. An alternative value, either an &lt;code&gt;Exception&lt;/code&gt; object or &lt;code&gt;nil&lt;/code&gt;, can be specified via the &lt;code&gt;:cause&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a58f1833e0ee1f4638cec4d5b7f3f26fcaccb6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do&lt;/code&gt; keyword is optional. The following loop is equivalent to the loop above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc38e3a92e714e271afd8621c81a13da44527605" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;each&lt;/code&gt; method can only be used if the begin object of the range supports the &lt;code&gt;succ&lt;/code&gt; method. A &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if the object does not have &lt;code&gt;succ&lt;/code&gt; method defined (like &lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfc3c6dd7085c907371a4d6b36ebc4961e53bd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;then&lt;/code&gt; are optional, this &lt;code&gt;case&lt;/code&gt; expression gives the same result as the one above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d98d28c9298fa0aaff45655d85c124e70b3b90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eql?&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; refer to the same hash key. This is used by &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; to test members for equality. For objects of class &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;eql?&lt;/code&gt; is synonymous with &lt;code&gt;==&lt;/code&gt;. Subclasses normally continue this tradition by aliasing &lt;code&gt;eql?&lt;/code&gt; to their overridden &lt;code&gt;==&lt;/code&gt; method, but there are exceptions. &lt;code&gt;Numeric&lt;/code&gt; types, for example, perform type conversion across &lt;code&gt;==&lt;/code&gt;, but not across &lt;code&gt;eql?&lt;/code&gt;, so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f663a447be7c801c3a46bcd7b9c2a3480b7b8f51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; parameter specifies the flush mode. The following constants may be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21729a81fe257d93b9af5f8c5e434cc73ad786ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for&lt;/code&gt; loop consists of &lt;code&gt;for&lt;/code&gt; followed by a variable to contain the iteration argument followed by &lt;code&gt;in&lt;/code&gt; and the value to iterate over using each. The &lt;code&gt;do&lt;/code&gt; is optional:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79b2546a8132c22fc46c7997f9fc1301e941191" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for&lt;/code&gt; loop is rarely used in modern ruby programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7785382b69a21cf5330e70b10a8f55a26020c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for&lt;/code&gt; loop is similar to using each, but does not create a new variable scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8647d061d6f82688613d309c47294e0dd9699fdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inherit&lt;/code&gt; flag is respected on each lookup. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be41bd876cfbbaed9308d90c3e17f67754f8c538" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; arguments can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; accepts (generally &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects). If not given, they default to &lt;code&gt;ARGF&lt;/code&gt; and &lt;code&gt;$stdout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2211d5198951014a97b79ed6c4a8c0c257cd0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;into&lt;/code&gt; option of &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;parse&lt;/code&gt; and so on methods stores command line options into a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dfb3e3ab95e8b8db68bde257becf420d3acabe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; sets the compression level for the deflate stream between 0 (no compression) and 9 (best compression). The following constants have been defined to make code more readable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053110167c514074589a166a49d38bd9374052c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local_to_utc&lt;/code&gt; method should convert a Time-like object from the timezone to UTC, and &lt;code&gt;utc_to_local&lt;/code&gt; is the opposite. The result also should be a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; or Time-like object (not necessary to be the same class). The &lt;a href=&quot;time#method-i-zone&quot;&gt;&lt;code&gt;zone&lt;/code&gt;&lt;/a&gt; of the result is just ignored. Time-like argument to these methods is similar to a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; object in UTC without sub-second; it has attribute readers for the parts, e.g. &lt;a href=&quot;time#method-i-year&quot;&gt;&lt;code&gt;year&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-month&quot;&gt;&lt;code&gt;month&lt;/code&gt;&lt;/a&gt;, and so on, and epoch time readers, &lt;a href=&quot;time#method-i-to_i&quot;&gt;&lt;code&gt;to_i&lt;/code&gt;&lt;/a&gt;. The sub-second attributes are fixed as 0, and &lt;a href=&quot;time#method-i-utc_offset&quot;&gt;&lt;code&gt;utc_offset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-zone&quot;&gt;&lt;code&gt;zone&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-isdst&quot;&gt;&lt;code&gt;isdst&lt;/code&gt;&lt;/a&gt;, and their aliases are same as a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; object in UTC. Also &lt;a href=&quot;time#method-i-to_time&quot;&gt;&lt;code&gt;to_time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time#method-i-2B&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;time#method-i-2D&quot;&gt;&lt;code&gt;-&lt;/code&gt;&lt;/a&gt; methods are defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770c8eb845364c3b3bba81241c73ab554cf24be5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mem_level&lt;/code&gt; specifies how much memory should be allocated for the internal compression state. 1 uses minimum memory but is slow and reduces compression ratio while 9 uses maximum memory for optimal speed. The default value is 8. Two constants are defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a9089afa0570fafc2ee5344bc4b6432138e484" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; is either a string or an integer. If it is an integer, it must be bitwise-or of open(2) flags, such as File::RDWR or File::EXCL. If it is a string, it is either &amp;ldquo;fmode&amp;rdquo;, &amp;ldquo;fmode:ext_enc&amp;rdquo;, or &amp;ldquo;fmode:ext_enc:int_enc&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2a887305af9de7b1987204bbaebed30a094887" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;n&lt;/code&gt; specifier (store number of characters consumed so far in next pointer) is not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4780ce9a4759c2108066f66de782f24ba43d9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; method is used for marshaling. If this method is not defined on a timezone object, &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; objects using that timezone object can not be dumped by &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd60764ebd61f7c42991ea6beeb3efb282e0114" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;no_proxy&lt;/code&gt; query parameter can be used to specify hosts which shouldn't be reached via proxy; if set it should be a comma separated list of hostname suffixes, optionally with &lt;code&gt;:port&lt;/code&gt; appended, for example &lt;code&gt;example.com,some.host:8080&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6003793dfdc9ed429a31ac0cb71ce326c7e3662c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash may be used to set the encoding of the data. &lt;code&gt;:external_encoding&lt;/code&gt;, &lt;code&gt;:internal_encoding&lt;/code&gt; and &lt;code&gt;:encoding&lt;/code&gt; may be set as in &lt;a href=&quot;../io#method-c-new&quot;&gt;&lt;code&gt;IO::new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b08847fd2ae850f5206c1bf8aa43df27a440d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5985537e61d62fb78efa51e595f1ed8da52c632d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands. This method also understands an additional &lt;code&gt;:encoding&lt;/code&gt; parameter that you can use to specify the &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; of the data in the file to be read. You must provide this unless your data is in &lt;a href=&quot;encoding#method-c-default_external&quot;&gt;&lt;code&gt;Encoding::default_external()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will use this to determine how to parse the data. You may provide a second &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; to have the data transcoded as it is read. For example, &lt;code&gt;encoding: &quot;UTF-32BE:UTF-8&quot;&lt;/code&gt; would read UTF-32BE data from the file but transcode it to UTF-8 before &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; parses it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9593d1b76eb30b8b03458296ca7fdd50521779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands. This method understands an additional &lt;code&gt;:encoding&lt;/code&gt; parameter to set the base &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; for the output. This method will try to guess your &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; from the first non-&lt;code&gt;nil&lt;/code&gt; field in &lt;code&gt;row&lt;/code&gt;, if possible, but you may need to use this parameter as a backup plan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cfddb9fa4c317f8e10f5f37642947bd149837c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter can be anything &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; understands. This method understands an additional &lt;code&gt;:encoding&lt;/code&gt; parameter when not passed a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to set the base &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; for the output. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; needs this hint if you plan to output non-ASCII compatible data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcb3951062ba4f5cafdfcc8863409bde1e5f9f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter is a hash of options, taken from the list &lt;code&gt;:force&lt;/code&gt;, &lt;code&gt;:noop&lt;/code&gt;, &lt;code&gt;:preserve&lt;/code&gt;, and &lt;code&gt;:verbose&lt;/code&gt;. &lt;code&gt;:noop&lt;/code&gt; means that no changes are made. The other three are obvious. Each method documents the options that it honours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be1e7c63afa54ab962a9131c31b03ab61964162" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter is also filtered down to &lt;a href=&quot;csv#method-c-new&quot;&gt;&lt;code&gt;CSV::new()&lt;/code&gt;&lt;/a&gt; after some clever key parsing. Any key beginning with &lt;code&gt;:in_&lt;/code&gt; or &lt;code&gt;:input_&lt;/code&gt; will have that leading identifier stripped and will only be used in the &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;input&lt;/code&gt; object. Keys starting with &lt;code&gt;:out_&lt;/code&gt; or &lt;code&gt;:output_&lt;/code&gt; affect only &lt;code&gt;output&lt;/code&gt;. All other keys are assigned to both objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfb8f7a0ee942c257205094a773f2e281962326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt;&lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; gives details for conversion and can have the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6b1e40cfa006f3cc28349d6b8293b6943dd13f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;p&lt;/code&gt; specifier (match a pointer value) is not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2080654734dbfd1d20b57f13e70823f8161a21f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sec&lt;/code&gt; option for the write, take, move, read and notify methods may either be a number of seconds or a Renewer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c84e0a5503b6862e0c0e5f4300fd56231104ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; parameter is a number or a range between two numbers, or an array of those. The number is a message sequence number, where -1 represents a '*' for use in range notation like 100..-1 being interpreted as '100:*'. Beware that the &lt;code&gt;exclude_end?&lt;/code&gt; property of a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object is ignored, and the contents of a range are independent of the order of the range endpoints as per the protocol specification, so 1&amp;hellip;5, 5..1 and 5&amp;hellip;1 are all equivalent to 1..5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57092f4675e03ad49edb994c541c863ad2adbf27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strategy&lt;/code&gt; sets the deflate compression strategy. The following strategies are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efd440303bb62d40c038470df8f2a51c72246a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;then&lt;/code&gt; is optional:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7417cfe2954517065c7bdda15a1651a64f13850" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;undef&lt;/code&gt; keyword prevents the current class from responding to calls to the named methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46d6dfb332d3fdf698516caab263668b4eb9dea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unless&lt;/code&gt; expression is the opposite of the &lt;code&gt;if&lt;/code&gt; expression. If the value is false, the &amp;ldquo;then&amp;rdquo; expression is executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ccec7f53b99433e27a6ec541923e25f8c3b2bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;until&lt;/code&gt; loop executes while a condition is false:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038fbc396f2d52ccb74f2fe20c4516c8f548916f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; callback allows the warners to run without being explicitly called. The system is set up with the &lt;code&gt;Ticker&lt;/code&gt; and several observers, and the observers do their duty without the top-level code having to interfere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad56515b9612cdceb8a9b51ed394bbdb29405d0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; method has access to the value set by the &lt;code&gt;initialize&lt;/code&gt; method, but only for the same object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0585961ff52bc263b2aae75e4afaad8c36fd1ebd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;while&lt;/code&gt; loop executes while a condition is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b0836b1f0b3b13904484b2b9174dbb59a9d3b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window_bits&lt;/code&gt; sets the size of the history buffer and should be between 8 and 15. Larger values of this parameter result in better compression at the expense of memory usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0faf0daced0b4f5881301d933eebfb9b32cc8e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Object&lt;/em&gt; the user passed to the log message; not necessarily a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91067329127c26ab5329337efa7fac801edd90e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Object&lt;/em&gt; the user passed to the log message; not necessarily a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0990e049b224d470b3eb81f45c78305c354ddbdf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cert&lt;/em&gt;, &lt;em&gt;key&lt;/em&gt;, and &lt;em&gt;extra_chain_cert&lt;/em&gt; attributes are deprecated. It is recommended to use &lt;a href=&quot;sslcontext#method-i-add_certificate&quot;&gt;&lt;code&gt;add_certificate&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8067f95cffae0391ce27f58f97d0cbd39d1405a9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;entropy&lt;/em&gt; argument is (the lower bound of) an estimate of how much randomness is contained in &lt;em&gt;str&lt;/em&gt;, measured in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893517e505a6ab29edfd76135dea21718f49c30b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;flags&lt;/em&gt; argument may be a logical or of the flag values &lt;code&gt;Process::WNOHANG&lt;/code&gt; (do not block if no child available) or &lt;code&gt;Process::WUNTRACED&lt;/code&gt; (return stopped children that haven't been reported). Not all flags are available on all platforms, but a flag value of zero will work on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bad9c73088b39a069e928103fa047cce26084a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;inject&lt;/em&gt; and &lt;em&gt;reduce&lt;/em&gt; methods are aliases. There is no performance benefit to either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ad937eeeeaaa1784250fea514abd7b2c79ab01" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;msg&lt;/em&gt; is a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334314cdae89e6cc7a94a1fdee0accec8c44456a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;msg_src&lt;/em&gt; is a &lt;a href=&quot;socket/udpsource&quot;&gt;&lt;code&gt;Socket::UDPSource&lt;/code&gt;&lt;/a&gt; object. It is used for reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04efe46d854825d75f81c54371db0bf476e32e75" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opts&lt;/em&gt; argument can be used to configure the generator. See the generate method for a more detailed explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b46f4268841f598a3f3c14dc8884cfd495d5c38" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opts&lt;/em&gt; argument is passed through to generate/parse respectively. See generate and parse for their documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecae842d590c5a8d46647f34c20a74f1b27e5f18" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;timeout&lt;/em&gt; specify the seconds for timeout. Errno::ETIMEDOUT is raised when timeout occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f346b143fb574678d8fb93d71aa59e7319e723dc" translate="yes" xml:space="preserve">
          <source>The == and === operators and the eql? method have the same implementation for &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aaff76d4a5abbd1db889855b23e6a1b6bda809a" translate="yes" xml:space="preserve">
          <source>The AAD must be set prior to encryption or decryption. In encryption mode, it must be set after calling &lt;a href=&quot;cipher#method-i-encrypt&quot;&gt;&lt;code&gt;Cipher#encrypt&lt;/code&gt;&lt;/a&gt; and setting &lt;a href=&quot;cipher#method-i-key-3D&quot;&gt;&lt;code&gt;Cipher#key=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt;&lt;code&gt;Cipher#iv=&lt;/code&gt;&lt;/a&gt;. When decrypting, the authenticated data must be set after key, iv and especially &lt;strong&gt;after&lt;/strong&gt; the authentication tag has been set. I.e. set it only after calling &lt;a href=&quot;cipher#method-i-decrypt&quot;&gt;&lt;code&gt;Cipher#decrypt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-key-3D&quot;&gt;&lt;code&gt;Cipher#key=&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cipher#method-i-iv-3D&quot;&gt;&lt;code&gt;Cipher#iv=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cipher#method-i-auth_tag-3D&quot;&gt;&lt;code&gt;Cipher#auth_tag=&lt;/code&gt;&lt;/a&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04edfc57ea608af539ad1c3883a7d15a2324940d" translate="yes" xml:space="preserve">
          <source>The ABI of the &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f26ce579ef281be3a0c6dc9e7984d5dab70ebb" translate="yes" xml:space="preserve">
          <source>The CA certificate is saved to disk so it may be distributed to all the users of the keys this CA will sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898fd38dbbbc4a6553c4d4af648f03404dc76873" translate="yes" xml:space="preserve">
          <source>The CA signs keys through a Certificate Signing Request (CSR). The CSR contains the information necessary to identify the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363917bf48fa944304e29524a51b4a32a30a2727" translate="yes" xml:space="preserve">
          <source>The Common Gateway Interface (CGI) is a simple protocol for passing an HTTP request from a web server to a standalone program, and returning the output to the web browser. Basically, a &lt;a href=&quot;cgi&quot;&gt;&lt;code&gt;CGI&lt;/code&gt;&lt;/a&gt; program is called with the parameters of the request passed in either in the environment (GET) or via $stdin (POST), and everything it prints to $stdout is returned to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb8f7adfde328683a357dad866ba010edc74990" translate="yes" xml:space="preserve">
          <source>The Content-Type header. Defaults to &amp;ldquo;text/html&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a1441f948c26d62c572f9ed5b89761b664380d" translate="yes" xml:space="preserve">
          <source>The DNS host name or IP address to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233b84fb975be4b0759902c4d1c5b53cedc2c231" translate="yes" xml:space="preserve">
          <source>The Forwardable module provides delegation of specified methods to a designated object, using the methods &lt;a href=&quot;forwardable#method-i-def_delegator&quot;&gt;&lt;code&gt;def_delegator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;forwardable#method-i-def_delegators&quot;&gt;&lt;code&gt;def_delegators&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc99740aa6c1c5cb159c12dd16c458734e149f6d" translate="yes" xml:space="preserve">
          <source>The HTTP result code string. For example, '302'. You can also determine the response type by examining which response subclass the response object is an instance of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94648f9f295a9c30978845563473e3229f1d409c" translate="yes" xml:space="preserve">
          <source>The HTTP result message sent by the server. For example, 'Not Found'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70f83bc251e93af0e84e147a25018fc002746b3" translate="yes" xml:space="preserve">
          <source>The HTTP status code as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, returned as the Status header. The values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5dfd2656ff34ce0a1be626a982a190a1112aa2" translate="yes" xml:space="preserve">
          <source>The HTTP version supported by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e69eb402cda36ea351be884d910e43c886b99f" translate="yes" xml:space="preserve">
          <source>The ID-to-object mapping component maps dRuby object ids to the objects they refer to, and vice versa. The implementation to use can be specified as part of a DRb::DRbServer's configuration. The default implementation is provided by &lt;a href=&quot;drb/drbidconv&quot;&gt;&lt;code&gt;DRb::DRbIdConv&lt;/code&gt;&lt;/a&gt;. It uses an object's &lt;a href=&quot;objectspace&quot;&gt;&lt;code&gt;ObjectSpace&lt;/code&gt;&lt;/a&gt; id as its dRuby id. This means that the dRuby reference to that object only remains meaningful for the lifetime of the object's process and the lifetime of the object within that process. A modified implementation is provided by &lt;a href=&quot;drb/timeridconv&quot;&gt;&lt;code&gt;DRb::TimerIdConv&lt;/code&gt;&lt;/a&gt; in the file drb/timeridconv.rb. This implementation retains a local reference to all objects exported over dRuby for a configurable period of time (defaulting to ten minutes), to prevent them being garbage-collected within this time. Another sample implementation is provided in sample/name.rb in the main dRuby distribution. This allows objects to specify their own id or &amp;ldquo;name&amp;rdquo;. A dRuby reference can be made persistent across processes by having each process register an object using the same dRuby name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cff1c25997cbf9da073fa033b444f08979d3dc8" translate="yes" xml:space="preserve">
          <source>The Julian day number is in elapsed days since noon (Greenwich Mean &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;) on January 1, 4713 BCE (in the Julian calendar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b7741f156c3083ac165cb84708846804ae5c97" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for England and her colonies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4401b29153b6dcf3b8a2bca532c75c2ca44aa146" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for Italy and some catholic countries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c186b48135c80bede4921514866e5114304511" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for the proleptic Gregorian calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31992e6191b5d0fad4dce3a104832604a121d005" translate="yes" xml:space="preserve">
          <source>The Julian day number of the day of calendar reform for the proleptic Julian calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3c936faad08a521d93eca25ecae765de019406" translate="yes" xml:space="preserve">
          <source>The LUP decomposition with pivoting always exists, even if the matrix is singular, so the constructor will never fail. The primary use of the LU decomposition is in the solution of square systems of simultaneous linear equations. This will fail if singular? returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3758a73c06e4ac316832b097773332673f2b91" translate="yes" xml:space="preserve">
          <source>The Maximum Transmission Unit of the socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb17afedd560800e2112285239cd66a393e6bff6" translate="yes" xml:space="preserve">
          <source>The Nth group of the last successful match. May be &amp;gt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dace11fcb931e8152b91187e52bd7e9f82b747" translate="yes" xml:space="preserve">
          <source>The OS code of current host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87326dd11aaf6cae0afbba0d752aa23f0a5b38d" translate="yes" xml:space="preserve">
          <source>The Observer pattern (also known as publish/subscribe) provides a simple mechanism for one object to inform a set of interested third-party objects when its state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59271aab66fac180e540a87d8e86ad17e2ca466b" translate="yes" xml:space="preserve">
          <source>The PID of the started process can be obtained by &lt;a href=&quot;io#method-i-pid&quot;&gt;&lt;code&gt;IO#pid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9b70eff4a05fff9f72478e607d65efd59515d6" translate="yes" xml:space="preserve">
          <source>The PrettyPrint::GroupQueue of groups in stack to be pretty printed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65094b3883d33520321f3a6a1e28b2704b39e27" translate="yes" xml:space="preserve">
          <source>The Ruby VM defers &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt; callbacks from running until it is safe for its internal data structures, but it does not know when it is safe for data structures in YOUR code. Ruby implements deferred signal handling by registering short C functions with only &lt;a href=&quot;http://man7.org/linux/man-pages/man7/signal-safety.7.html&quot;&gt;async-signal-safe functions&lt;/a&gt; as signal handlers. These short C functions only do enough tell the VM to run callbacks registered via &lt;a href=&quot;signal#method-c-trap&quot;&gt;&lt;code&gt;Signal.trap&lt;/code&gt;&lt;/a&gt; later in the main VM loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa2c4b0e1b8a3deebadb3964389c534f6741b96" translate="yes" xml:space="preserve">
          <source>The Ruby code generated by &lt;a href=&quot;erb&quot;&gt;&lt;code&gt;ERB&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9dbd735a9c3f3bf0b69bda4905b6c1c175eb7a" translate="yes" xml:space="preserve">
          <source>The Ruby programming language is large and complex and there are many security pitfalls often encountered by newcomers and experienced Rubyists alike.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7f8ede0c1a7253485d9b2e24579ecbf0bcc49f" translate="yes" xml:space="preserve">
          <source>The Ruby/zlib version string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbebaff14a7a9fc8ce51d98d649eeffd79c1cca7" translate="yes" xml:space="preserve">
          <source>The SHA for the git commit the bundler gem was built from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbbc24161242d0172cddbd30bf00b522f814a2c" translate="yes" xml:space="preserve">
          <source>The SVN revision for this ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558db9093eee1bb0a79b8a62f49b595b032033fb" translate="yes" xml:space="preserve">
          <source>The Severity of the log message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bee4a6bbfba0f15da8ace6d72b5bc9874e54827" translate="yes" xml:space="preserve">
          <source>The Tuplespace manages access to the tuples it contains, ensuring mutual exclusion requirements are met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1836fca2664f81b0dd3b227a896ae34a0c60cd4d" translate="yes" xml:space="preserve">
          <source>The URL through which requests will be proxied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a449cce1efe5e78f9f22327a401624d258698114" translate="yes" xml:space="preserve">
          <source>The W3CDTF format is defined here: &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;www.w3.org/TR/NOTE-datetime&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1272956360b2b78baac232d5a2ad9edb901b5f40" translate="yes" xml:space="preserve">
          <source>The XLIST command is like the LIST command except that the flags returned refer to the function of the folder/mailbox, e.g. :Sent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b36b5d8c0f105241e00f59bb287ee6a12c429c5" translate="yes" xml:space="preserve">
          <source>The abbreviated month name (&amp;ldquo;Jan&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5065f5bfc3fc0288b4e5f6c51f86a96af96d316" translate="yes" xml:space="preserve">
          <source>The abbreviated weekday name (&amp;ldquo;Sun&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a22b947ea526202d2287f434bcf99b31f241690" translate="yes" xml:space="preserve">
          <source>The above &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; indicates that the client should connect to ftp.example.com then cd to pub/ruby from the initial login directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b32c029a4b9f1bb885b8452b8b307f81cbd6af" translate="yes" xml:space="preserve">
          <source>The above examples should be enough to learn how to use this class. If you have any questions, file a ticket at &lt;a href=&quot;http://bugs.ruby-lang.org&quot;&gt;bugs.ruby-lang.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81939b64de9ab21372971ec56687cb98d2b2ff9" translate="yes" xml:space="preserve">
          <source>The absolute path to the Ruby file where the instruction sequence was loaded from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a07fbc23f2bbca36f51afc32ea4c6f925b0be8a" translate="yes" xml:space="preserve">
          <source>The access rights the indicated user has to the mailbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b93ca98b93fd2d49196390bf5628a7a8a5580d9" translate="yes" xml:space="preserve">
          <source>The actions default behavior. Can be :invoke or :revoke. It also accepts :force, :skip and :pretend to set the behavior and the respective option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1a89a4e5d5ebd9bbef2700a7bb0ff38b4a1d48" translate="yes" xml:space="preserve">
          <source>The actual number of significant digits used in computation is usually larger than the specified number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4790282ea111e18d9fcda531fb100267c23857" translate="yes" xml:space="preserve">
          <source>The actual return value will be returned when invoking the method directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19f432168e8892846d9e5db95e6f990db9e40fb" translate="yes" xml:space="preserve">
          <source>The address of the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a14af6b3db901a795ce06799ce7292de418147" translate="yes" xml:space="preserve">
          <source>The address of the proxy server, if one is configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643f32d3b462312780b65b69ad83f7556f159229" translate="yes" xml:space="preserve">
          <source>The address of this function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d1d4571c6f1de18be87cec4e487e2ef7810954" translate="yes" xml:space="preserve">
          <source>The address to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a863ebbd15faf8a2c990400243738c5235dcc08f" translate="yes" xml:space="preserve">
          <source>The alias of $DEBUG. See $DEBUG above for further discussion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c65dcbb8594e1c7b191c5eab0b9585d6948277" translate="yes" xml:space="preserve">
          <source>The alias to $/.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5d033b58cda495b65f83ee627ec414166f9755" translate="yes" xml:space="preserve">
          <source>The alias to $:.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c5c675a027b8c15c2c9ebaab8f4ec404092fec" translate="yes" xml:space="preserve">
          <source>The alias to $;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6c63ce2d9b8a338b5c9997b8f9a4d9472faf56" translate="yes" xml:space="preserve">
          <source>The alias to the $&amp;ldquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45201ec2813a685a4d7428456207eead219dcb9" translate="yes" xml:space="preserve">
          <source>The alias to the $&amp;lt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed115efc8fb88a3557be2c535f935f00e27093f7" translate="yes" xml:space="preserve">
          <source>The alias to the $*.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9e3e64cbc872c0f49be4be4e3f89e98fe6f41c" translate="yes" xml:space="preserve">
          <source>The alias to the $:.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6147394cb7df6cb3e2cae3df13acc4361eeda6b0" translate="yes" xml:space="preserve">
          <source>The aliases added are &lt;code&gt;uint&lt;/code&gt; and &lt;code&gt;u_int&lt;/code&gt; (&lt;code&gt;unsigned int&lt;/code&gt;) and &lt;code&gt;ulong&lt;/code&gt; and &lt;code&gt;u_long&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0de0a8261182844e4aa29bacd4213c8a6560fd0" translate="yes" xml:space="preserve">
          <source>The alignment size of a char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428eadc9bddd3a1345cca6f22b270fdbe8a46f3c" translate="yes" xml:space="preserve">
          <source>The alignment size of a double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbab9022ef4598ebfe3886caecef68a9c6e343f" translate="yes" xml:space="preserve">
          <source>The alignment size of a float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2be3cf00a6366ab4d5132456c17b1f081acdd1" translate="yes" xml:space="preserve">
          <source>The alignment size of a intptr_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef625c85d3dcc8039bd92e57375f8f50bf31e20" translate="yes" xml:space="preserve">
          <source>The alignment size of a long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908f90d6c1bc9853813daa5005d5d36af9ae5398" translate="yes" xml:space="preserve">
          <source>The alignment size of a long long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5337de7000ad05865ff9e746e57a13f78e39d4f9" translate="yes" xml:space="preserve">
          <source>The alignment size of a ptrdiff_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6258016a6683584d9e2ef007a73a632d65cda8b" translate="yes" xml:space="preserve">
          <source>The alignment size of a short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aecddc14f90226c0b1d29e6c73bdf38b53a5ad3" translate="yes" xml:space="preserve">
          <source>The alignment size of a size_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25b65a634ce624fc8342ef0af3aba7cdd4d63d5" translate="yes" xml:space="preserve">
          <source>The alignment size of a ssize_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17e0a1ddc8ce5763592fa5bcd9eec22f474ccbd" translate="yes" xml:space="preserve">
          <source>The alignment size of a uintptr_t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85233153f476be6c64fd2381c7855815ad57bb9b" translate="yes" xml:space="preserve">
          <source>The alignment size of a void*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baafc7ee2586a1dfffdd6b65a4de8671d6edcfaf" translate="yes" xml:space="preserve">
          <source>The alignment size of an int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa6c27b3f645b0a6b2ed5901479eedc01e1ada0" translate="yes" xml:space="preserve">
          <source>The altitude of the &lt;a href=&quot;loc&quot;&gt;&lt;code&gt;LOC&lt;/code&gt;&lt;/a&gt; above a reference sphere whose surface sits 100km below the WGS84 spheroid in centimeters as an unsigned 32bit integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e13edbf68f08242b64c21b929c7697b2eaa876c" translate="yes" xml:space="preserve">
          <source>The amount of time allowed between reading two chunks from the socket. &lt;a href=&quot;../../../../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;persistent#attribute-i-read_timeout&quot;&gt;&lt;code&gt;read_timeout&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273b269cc9902b9ccd796a73b83c5849eeedfcad" translate="yes" xml:space="preserve">
          <source>The amount of time to wait for a connection to be opened. &lt;a href=&quot;../../../../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;persistent#attribute-i-open_timeout&quot;&gt;&lt;code&gt;open_timeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa9171952d6d7eb33a009f049fefd1e1b622f19" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length of the result string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368cf3d54dbe29715eeed7e8343d84a2b65a9f39" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in bytes, of the random number to be generated. The length of the result string is about 4/3 of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef751f11a381deb77554c0fc43621439b77c320" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in bytes, of the random number to be generated. The length of the resulting hexadecimal string is twice of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c343ce86963f953e654522bc563527503943452" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in characters, of the alphanumeric string to be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de6005255cc2703b4c8d32dd0a92b839e29eb56" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;source&lt;/em&gt; specifies the array of characters from which to generate the string. The argument &lt;em&gt;n&lt;/em&gt; specifies the length, in characters, of the string to be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed80582591e7ceaa4519b0f0a5ca15a7428ff05" translate="yes" xml:space="preserve">
          <source>The argument specification and the code to handle it are written in the same place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1a08bace563a97347028298a5ae25f40f1fb84" translate="yes" xml:space="preserve">
          <source>The argument will be decomposed if it responds to to_ary. You should only define to_ary if you can use your object in place of an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc9a2253d769b299eeff5d15bd13555507c8b03" translate="yes" xml:space="preserve">
          <source>The arguments are a list of sockets. The individual argument should be a socket or an array of sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f430162f247bf2990786f918990a2f5cd60a6c7" translate="yes" xml:space="preserve">
          <source>The arguments are interpreted as similar to self.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d381b5dd6257b08764b577f8da745743cea5a366" translate="yes" xml:space="preserve">
          <source>The arguments env, cmd and opts are passed to &lt;a href=&quot;open3#method-c-popen3&quot;&gt;&lt;code&gt;Open3.popen3&lt;/code&gt;&lt;/a&gt; except &lt;code&gt;opts[:stdin_data]&lt;/code&gt; and &lt;code&gt;opts[:binmode]&lt;/code&gt;. See &lt;a href=&quot;process#method-c-spawn&quot;&gt;&lt;code&gt;Process.spawn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a969870c3211bab6c582edb01209a8a7c93fc94" translate="yes" xml:space="preserve">
          <source>The arguments in both forms are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c68cba8d21340a565fd12535e4dbc06340961bf" translate="yes" xml:space="preserve">
          <source>The arguments passed to your script are stored in the &lt;code&gt;ARGV&lt;/code&gt;&lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, one argument per element. &lt;code&gt;ARGF&lt;/code&gt; assumes that any arguments that aren't filenames have been removed from &lt;code&gt;ARGV&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a847ce8fca7f239a087f8e0724d8463b8e6e1f37" translate="yes" xml:space="preserve">
          <source>The array argument must be the last positional argument, it must appear before any keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1e245e1529527ca68c45300f1ad276fee48bd3" translate="yes" xml:space="preserve">
          <source>The array argument will capture a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; as the last entry if a hash was sent by the caller after all positional arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3110539e612be8c0a4e0b6eb4cecd5b9b2bfe8" translate="yes" xml:space="preserve">
          <source>The array contains &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96dde1dc5246776b3da66a202775ce0ea196fa4" translate="yes" xml:space="preserve">
          <source>The array contains the module names loaded by require.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1acd839f306ba629a219e6395721bab2fb8f15" translate="yes" xml:space="preserve">
          <source>The array is attached to &lt;em&gt;ancillarydata&lt;/em&gt; when it is instantiated. For example, &lt;a href=&quot;../basicsocket#method-i-recvmsg&quot;&gt;&lt;code&gt;BasicSocket#recvmsg&lt;/code&gt;&lt;/a&gt; attach the array when receives a SCM_RIGHTS control message and :scm_rights=&amp;gt;true option is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5b7f4f1d2f2823aaa04328eb514205ca5b8642" translate="yes" xml:space="preserve">
          <source>The array is changed instantly every time the block is called, not after the iteration is over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f470dc7ded6bf5686e55c624b75702e518dc36" translate="yes" xml:space="preserve">
          <source>The array may not be changed instantly every time the block is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2450670e1e6d8ff5225acae4c8af12fd5e165b16" translate="yes" xml:space="preserve">
          <source>The array specifies a filename, flags and permission. The flags can be a string or an integer. If the flags is omitted or nil, File::RDONLY is assumed. The permission should be an integer. If the permission is omitted or nil, 0644 is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f72f15d07e37cb093fe1f3651f667c09cc5c11" translate="yes" xml:space="preserve">
          <source>The assignment does not occur if the regexp is not a literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5598b4ba95ac9cdb19071317258a0ef07d84e37" translate="yes" xml:space="preserve">
          <source>The assignment does not occur if the regexp is placed at the right hand side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5bb8388b3d3bdaa0ceee311e95c5ff12d4da09" translate="yes" xml:space="preserve">
          <source>The associated &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; can be changed in two different ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185e6839a19addd4c6641828ab4222d98f69ecd8" translate="yes" xml:space="preserve">
          <source>The attributes and options can also be specified as a hash. In this case, options are specified as an array of values as described above, with the hash key of &amp;ldquo;VALUES&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64abf43005597573d3f65f3f6f3a07fb773d09d9" translate="yes" xml:space="preserve">
          <source>The attributes of the element are specified as a hash. The pseudo-attribute &amp;ldquo;PRETTY&amp;rdquo; can be used to specify that the generated HTML string should be indented. &amp;ldquo;PRETTY&amp;rdquo; can also be specified as a string as the sole argument to this method. The pseudo-attribute &amp;ldquo;DOCTYPE&amp;rdquo;, if given, is used as the leading DOCTYPE SGML tag; it should include the entire text of this tag, including angle brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211a4dfcb99272d9b634ee602c4a5781cd45b0ad" translate="yes" xml:space="preserve">
          <source>The attributes of the element can be specified as three arguments, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, and &lt;code&gt;maxlength&lt;/code&gt;. &lt;code&gt;maxlength&lt;/code&gt; is the maximum length of the file's &lt;em&gt;name&lt;/em&gt;, not of the file's &lt;em&gt;contents&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab875713776c4b3c1629b9aa90b7f5480526d6b" translate="yes" xml:space="preserve">
          <source>The attributes of the element can be specified as three arguments, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, and &lt;code&gt;checked&lt;/code&gt;. &lt;code&gt;checked&lt;/code&gt; is a boolean value; if true, the CHECKED attribute will be included in the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d064f7ee913ec7563324a6f91d93d72d0c5b9ae" translate="yes" xml:space="preserve">
          <source>The attributes of the element can be specified as two arguments, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af939eefce32fbd6e38d94978be01ed02e6887a0" translate="yes" xml:space="preserve">
          <source>The available colors are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ed46c150718473d8504c434e30cd577b337e90" translate="yes" xml:space="preserve">
          <source>The available options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff7fd18df893d6ec3ae254e4f97f001d357746a" translate="yes" xml:space="preserve">
          <source>The backslash character &lt;code&gt;\&lt;/code&gt; can be used to escape &lt;code&gt;^&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; and is otherwise ignored unless it appears at the end of a range or the end of the &lt;code&gt;from_str&lt;/code&gt; or &lt;code&gt;to_str&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f719d7ba11f8b3bcaa0b04942d83432b647e6cf3" translate="yes" xml:space="preserve">
          <source>The bang methods (&lt;code&gt;!&lt;/code&gt; at the end of the method name) are called and executed just like any other method. However, by convention, a method with an exclamation point or bang is considered dangerous. In Ruby's core library the dangerous method implies that when a method ends with a bang (&lt;code&gt;!&lt;/code&gt;), it indicates that unlike its non-bang equivalent, permanently modifies its receiver. Almost always, the Ruby core library will have a non-bang counterpart (method name which does NOT end with &lt;code&gt;!&lt;/code&gt;) of every bang method (method name which does end with &lt;code&gt;!&lt;/code&gt;) that does not modify the receiver. This convention is typically true for the Ruby core library but may or may not hold true for other Ruby libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00eba736389975b9ea1394b7ef1fc3a0cab5665" translate="yes" xml:space="preserve">
          <source>The banner for this class. You can customize it if you are invoking the thor class by another ways which is not the Bundler::Thor::Runner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e8b440d3a981071c9a52456390602c83e19bf1" translate="yes" xml:space="preserve">
          <source>The banner for this class. You can customize it if you are invoking the thor class by another ways which is not the Bundler::Thor::Runner. It receives the command that is going to be invoked and a boolean which indicates if the namespace should be displayed as arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5d83e4f2801106914e30a78744d00980a218b0" translate="yes" xml:space="preserve">
          <source>The base class representing ASN.1 structures is &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; offers attributes to read and set the &lt;em&gt;tag&lt;/em&gt;, the &lt;em&gt;tag_class&lt;/em&gt; and finally the &lt;em&gt;value&lt;/em&gt; of a particular ASN.1 item. Upon parsing, any tagged values (implicit or explicit) will be represented by &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; instances because their &amp;ldquo;real type&amp;rdquo; can only be determined using out-of-band information from the ASN.1 type declaration. Since this information is normally known when encoding a type, all sub-classes of &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; offer an additional attribute &lt;em&gt;tagging&lt;/em&gt; that allows to encode a value implicitly (&lt;code&gt;:IMPLICIT&lt;/code&gt;) or explicitly (&lt;code&gt;:EXPLICIT&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1f38b436af7e3f80c952dac16336116d00219f" translate="yes" xml:space="preserve">
          <source>The base exception for &lt;a href=&quot;../json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1aea5edfbd2da6d50e31986592011c3a2908bf2" translate="yes" xml:space="preserve">
          <source>The base of the floating point, or number of unique digits used to represent the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b389f009c0cfa5e603f83d7740d4a99deaddcfac" translate="yes" xml:space="preserve">
          <source>The basename of the program invoking the thor class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24569f0e94cc1657b411b0f9fd01b4a0f79627bb" translate="yes" xml:space="preserve">
          <source>The best way to improve performance is to significantly reduce the amount of backtracking needed. For this case, instead of individually matching 29 optional &lt;em&gt;a&lt;/em&gt;s, a range of optional &lt;em&gt;a&lt;/em&gt;s can be matched all at once with &lt;em&gt;a{0,29}&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af55dda94f677952cc47baaabd93db610a7a132" translate="yes" xml:space="preserve">
          <source>The best way to use &lt;code&gt;IO.select&lt;/code&gt; is invoking it after nonblocking methods such as &lt;code&gt;read_nonblock&lt;/code&gt;, &lt;code&gt;write_nonblock&lt;/code&gt;, etc. The methods raise an exception which is extended by &lt;code&gt;IO::WaitReadable&lt;/code&gt; or &lt;code&gt;IO::WaitWritable&lt;/code&gt;. The modules notify how the caller should wait with &lt;code&gt;IO.select&lt;/code&gt;. If &lt;code&gt;IO::WaitReadable&lt;/code&gt; is raised, the caller should wait for reading. If &lt;code&gt;IO::WaitWritable&lt;/code&gt; is raised, the caller should wait for writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ac848ed450c8b88c12390ba2b9fd6314c20839" translate="yes" xml:space="preserve">
          <source>The block argument is always last when sending a message to a method. A block is sent to a method using &lt;code&gt;do ... end&lt;/code&gt; or &lt;code&gt;{ ... }&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fa2a3ff314cf9786a9fb476a0c5d4504c65f0c" translate="yes" xml:space="preserve">
          <source>The block argument is indicated by &lt;code&gt;&amp;amp;&lt;/code&gt; and must come last:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1820c4b7b87f029bb8931e9893c9814e6ca9531f" translate="yes" xml:space="preserve">
          <source>The block argument sends a closure from the calling scope to the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e6f55fb5427091433fe8176d3ef9c9718643f6" translate="yes" xml:space="preserve">
          <source>The block form allows you to create potentially complex log messages, but to delay their evaluation until and unless the message is logged. For example, if we have the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0302be64187c53cf47dd4ada0541edc2f20eced7" translate="yes" xml:space="preserve">
          <source>The block is called repeatedly with two arguments: The first is the option name. The second is the argument which followed it (if any). Example: ('&amp;ndash;opt', 'value')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dc9f36879cbfeaedbd60315448179c61805dd9" translate="yes" xml:space="preserve">
          <source>The block is called the length of the receiver enumerator minus one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229ce1a940e89db547d20f5b29d7cb4270f9f628" translate="yes" xml:space="preserve">
          <source>The block is used to generate spaces. {|width| ' ' * width} is used if it is not given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb86c6b7265ff96ae5d80b9069f6f8aeeb8bdd5" translate="yes" xml:space="preserve">
          <source>The block must implement a comparison between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and return an integer less than 0 when &lt;code&gt;b&lt;/code&gt; follows &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; when &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equivalent, or an integer greater than 0 when &lt;code&gt;a&lt;/code&gt; follows &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08330254aa47594a48de4805df6182824ff5f77c" translate="yes" xml:space="preserve">
          <source>The block parameter will be an &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; object in the parent and &lt;code&gt;nil&lt;/code&gt; in the child. The parent's &lt;code&gt;IO&lt;/code&gt; object will be connected to the child's $stdin and $stdout. The subprocess will be terminated at the end of the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87567e7eb16e164e3375e1c3eebdb6b859fd1cfe" translate="yes" xml:space="preserve">
          <source>The block receives &lt;em&gt;msg&lt;/em&gt; and &lt;em&gt;msg_src&lt;/em&gt;. &lt;em&gt;msg&lt;/em&gt; is a string which is the payload of the received packet. &lt;em&gt;msg_src&lt;/em&gt; is a &lt;a href=&quot;socket/udpsource&quot;&gt;&lt;code&gt;Socket::UDPSource&lt;/code&gt;&lt;/a&gt; object which is used for reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0138ec2705667bc0648dbca5b8680b27fa3d8f1" translate="yes" xml:space="preserve">
          <source>The block should return an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; that can be written to the logging device via &lt;code&gt;write&lt;/code&gt;. The default formatter is used when no formatter is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91167100796d1ff6d0019b62d3807b5b42555bc" translate="yes" xml:space="preserve">
          <source>The block should return an &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; that can be written to the logging device via &lt;code&gt;write&lt;/code&gt;. The default formatter is used when no formatter is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d39b9a4f3625fb4daa2aafc4fbfbcaf6b586790" translate="yes" xml:space="preserve">
          <source>The body is provided by the passed-in no-argument block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a5cbfc33836d1be99b89126db024a49cf84ffe" translate="yes" xml:space="preserve">
          <source>The body of the element is provided by the passed-in no-argument block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9094192a69bdfac107a364a1f4f72048181bef13" translate="yes" xml:space="preserve">
          <source>The body of the element is the string returned by the no-argument block passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d3fb57d923249f4a2137b63d02b5f9d8d4840f" translate="yes" xml:space="preserve">
          <source>The body of the html element is supplied as a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439053ca66c00ca776eb825c64ede5f771063752" translate="yes" xml:space="preserve">
          <source>The boolean argument &lt;em&gt;padding&lt;/em&gt; specifies the padding. If it is false or nil, padding is not generated. Otherwise padding is generated. By default, padding is not generated because &amp;ldquo;=&amp;rdquo; may be used as a URL delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a2de11b1ae8f6facc632714ceb3b0f89c488be" translate="yes" xml:space="preserve">
          <source>The built-in subclasses of &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38eef010320d4da5c4c6b3697de9b47fd2f5d351" translate="yes" xml:space="preserve">
          <source>The bytes are caused by invalid_byte_sequence error. When invalid_byte_sequence error, some bytes are discarded and some bytes are buffered to be converted later. The latter bytes can be put back. It can be observed by &lt;a href=&quot;invalidbytesequenceerror#method-i-readagain_bytes&quot;&gt;&lt;code&gt;Encoding::InvalidByteSequenceError#readagain_bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;converter#method-i-primitive_errinfo&quot;&gt;&lt;code&gt;Encoding::Converter#primitive_errinfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa696df2cf1639f446916c6f010b5e4902e7515" translate="yes" xml:space="preserve">
          <source>The cache dir to be used by the plugins for storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06608fbf2cd0478a9af6a11f314317108cfa7930" translate="yes" xml:space="preserve">
          <source>The cache directory for plugin stuffs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cefa3c2f26824f9d1348492657c667df4b4cef" translate="yes" xml:space="preserve">
          <source>The calendar date is a particular day of a calendar year, identified by its ordinal number within a calendar month within that year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe00e4096ebdd3114a9c60325df57c26076f3e31" translate="yes" xml:space="preserve">
          <source>The calendar week is a seven day period within a calendar year, starting on a Monday and identified by its ordinal number within the year; the first calendar week of the year is the one that includes the first Thursday of that year. In the Gregorian calendar, this is equivalent to the week which includes January 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bbcb195c8c35076192e103f06a6a1fe219c547" translate="yes" xml:space="preserve">
          <source>The callback for additional certificate verification. It is invoked for each untrusted certificate in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8652dce30a1e9e7fa5aaa1e2ff69cd9847bfdb2" translate="yes" xml:space="preserve">
          <source>The callback is deprecated. This does not work with recent versions of &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;sslcontext#method-i-ecdh_curves-3D&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLContext#ecdh_curves=&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c07764559a171fd2ab980ee60ce2ce45cfd154d" translate="yes" xml:space="preserve">
          <source>The callback is invoked with a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; and must return an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing an &lt;a href=&quot;../x509/certificate&quot;&gt;&lt;code&gt;OpenSSL::X509::Certificate&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;../pkey&quot;&gt;&lt;code&gt;OpenSSL::PKey&lt;/code&gt;&lt;/a&gt;. If any other value is returned the handshake is suspended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979b1042f8bc7d173dc3d43cb6f817ce4aab002d" translate="yes" xml:space="preserve">
          <source>The callback is invoked with an &lt;a href=&quot;sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbc41b5b11287c095c386c033d58d213e9ebf93" translate="yes" xml:space="preserve">
          <source>The callback is invoked with an &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; and a server name. The callback must return an &lt;a href=&quot;sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; for the server name or nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcd9854fc9bc597941c79e5d1baa44ed0c816e1" translate="yes" xml:space="preserve">
          <source>The callback is invoked with an &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;false&lt;/code&gt; is returned the session will be removed from the internal cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4583cde20c7226419e7aad27b716c911ff99ca78" translate="yes" xml:space="preserve">
          <source>The callback is invoked with the &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; for the key exchange, an flag indicating the use of an export cipher and the keylength required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1954206a39c8bf1289aef7d9beea885f53987e8" translate="yes" xml:space="preserve">
          <source>The callback is invoked with the &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; and session id. The callback may return a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; from an external cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1100e8487cbd775b37fe48d3e9aa9b6582e68f4" translate="yes" xml:space="preserve">
          <source>The callback is invoked with the active &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;. The callback's return value is irrelevant, normal return indicates &amp;ldquo;approval&amp;rdquo; of the renegotiation and will continue the process. To forbid renegotiation and to cancel the process, an Error may be raised within the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c89f670fc02e9c5557007965d08086bb781f013" translate="yes" xml:space="preserve">
          <source>The callback is invoked with two values, a boolean that indicates if the pre-verification by &lt;a href=&quot;../../openssl&quot;&gt;&lt;code&gt;OpenSSL&lt;/code&gt;&lt;/a&gt; has succeeded or not, and the &lt;a href=&quot;storecontext&quot;&gt;&lt;code&gt;StoreContext&lt;/code&gt;&lt;/a&gt; in use. The callback must return either true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53569151878dbc8dc6fc990c65a913bf85926ba9" translate="yes" xml:space="preserve">
          <source>The callback is invoked with two values. &lt;em&gt;preverify_ok&lt;/em&gt; indicates indicates if the verification was passed (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;). &lt;em&gt;store_context&lt;/em&gt; is an &lt;a href=&quot;../x509/storecontext&quot;&gt;&lt;code&gt;OpenSSL::X509::StoreContext&lt;/code&gt;&lt;/a&gt; containing the context used for certificate verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0181c0de7d8cba10b1a08ecad5b7c21b32c3f6a" translate="yes" xml:space="preserve">
          <source>The callback must return an &lt;a href=&quot;../pkey/dh&quot;&gt;&lt;code&gt;OpenSSL::PKey::DH&lt;/code&gt;&lt;/a&gt; instance of the correct key length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f67ae6ec55176180627514f88a5e8f915630ca4" translate="yes" xml:space="preserve">
          <source>The caller can specify what form of storage to use for the session's data with the &lt;code&gt;database_manager&lt;/code&gt; option to &lt;a href=&quot;session#method-c-new&quot;&gt;&lt;code&gt;CGI::Session::new&lt;/code&gt;&lt;/a&gt;. The following storage classes are provided as part of the standard library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e8d9d6630d4d321e41000fa1b0b3d25df89932" translate="yes" xml:space="preserve">
          <source>The calling thread will suspend execution and run this &lt;code&gt;thr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b88f368b007e068ebd27cd97494e09df8a5b7e1" translate="yes" xml:space="preserve">
          <source>The canonical name for an alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d561ef91f96c8eb2ce626fc41a689802d45034ad" translate="yes" xml:space="preserve">
          <source>The canonical name is set by &lt;a href=&quot;addrinfo#method-c-getaddrinfo&quot;&gt;&lt;code&gt;Addrinfo.getaddrinfo&lt;/code&gt;&lt;/a&gt; when AI_CANONNAME is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed719b9598a4afaee5b66ea30fed6755d5907ec" translate="yes" xml:space="preserve">
          <source>The certificate chain constructed by the last call of &lt;a href=&quot;store#method-i-verify&quot;&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba35c433e5d338342c02491330c8edc0a5a4ace1" translate="yes" xml:space="preserve">
          <source>The certificate is no longer needed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27e08821dfa47f591046d7fc091eed278e8e246" translate="yes" xml:space="preserve">
          <source>The certificate is on hold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c673e8d77a64fa3c03738b88b07b2f76ddb60e" translate="yes" xml:space="preserve">
          <source>The certificate store can be used with an SSLSocket like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffeb6ab69afc65aa91120eb3411f3672ae1b4ea" translate="yes" xml:space="preserve">
          <source>The certificate subject's name or other information changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fedffbcd91f3fe6126f79fd2bfda57f8cfaccc" translate="yes" xml:space="preserve">
          <source>The certificate was previously on hold and should now be removed from the CRL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26447d244b9ef6bd05742862aaac23b9f5f6194" translate="yes" xml:space="preserve">
          <source>The certificate was revoked due to a key compromise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8883e1f8aced0cbd33bede1fcc33c2509e36fd0" translate="yes" xml:space="preserve">
          <source>The certificate was revoked for an unknown reason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691f38ee2dbe40ad1e721c3eec8d2ceb546e4da3" translate="yes" xml:space="preserve">
          <source>The certificate was revoked for an unspecified reason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4725e7c147ee43c7fd37251a0f6af721a815e373" translate="yes" xml:space="preserve">
          <source>The certificate was superseded by a new certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e01cd9005339fae1b7d5e4100dae5c744b41671" translate="yes" xml:space="preserve">
          <source>The certificate-authority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba271ee0bbdc6bdc276564c9da40d16132f1140" translate="yes" xml:space="preserve">
          <source>The character used to quote fields. This has to be a single character &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. This is useful for application that incorrectly use &lt;code&gt;'&lt;/code&gt; as the quote character instead of the correct &lt;code&gt;&quot;&lt;/code&gt;. &lt;a href=&quot;csv&quot;&gt;&lt;code&gt;CSV&lt;/code&gt;&lt;/a&gt; will always consider a double sequence of this character to be an escaped quote. This &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will be transcoded into the data's &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; before parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717eeb98777f3697c9c905ecb9da3f8d3f7687e9" translate="yes" xml:space="preserve">
          <source>The charset of the body, appended to the Content-Type header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfebf2ccd75049d5513f8cda5ed5563ead03ba5" translate="yes" xml:space="preserve">
          <source>The checkboxes will all have the same &lt;code&gt;name&lt;/code&gt; attribute. Each checkbox is followed by a label. There will be one checkbox for each value. Each value can be specified as a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, which will be used both as the value of the VALUE attribute and as the label for that checkbox. A single-element array has the same effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d18ff39f68f508341ca8305398ff4f619d0791f" translate="yes" xml:space="preserve">
          <source>The cipher modes CBC, CFB, OFB and CTR all need an &amp;ldquo;initialization vector&amp;rdquo;, or short, IV. ECB mode is the only mode that does not require an IV, but there is almost no legitimate use case for this mode because of the fact that it does not sufficiently hide plaintext patterns. Therefore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cc7bca69246a04c27af75ce629561e89ed3f28" translate="yes" xml:space="preserve">
          <source>The class implements FIFO type of queue. In a FIFO queue, the first tasks added are the first retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4b6a643952f57f68caef1f6f44bd3318bbbca0" translate="yes" xml:space="preserve">
          <source>The class method &lt;a href=&quot;random#method-c-rand&quot;&gt;&lt;code&gt;Random.rand&lt;/code&gt;&lt;/a&gt; provides the base functionality of &lt;a href=&quot;kernel#method-i-rand&quot;&gt;&lt;code&gt;Kernel.rand&lt;/code&gt;&lt;/a&gt; along with better handling of floating point values. These are both interfaces to &lt;a href=&quot;random#DEFAULT&quot;&gt;&lt;code&gt;Random::DEFAULT&lt;/code&gt;&lt;/a&gt;, the Ruby system PRNG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733841d22101a1813972c1c72db3fad327e6d9b2" translate="yes" xml:space="preserve">
          <source>The class method &lt;a href=&quot;thread#method-c-kill&quot;&gt;&lt;code&gt;::kill&lt;/code&gt;&lt;/a&gt;, is meant to exit a given thread:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42cf97961cffdd2d0cff903f1e884dff81fdbd4" translate="yes" xml:space="preserve">
          <source>The class method &lt;code&gt;_load&lt;/code&gt; is called on the class with a string created from the byte-sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca27f234d361e1cba68547b0a01c15c08be1982" translate="yes" xml:space="preserve">
          <source>The class method _load should take a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and use it to return an object of the same class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babfca1c5e4fe1e092a1dbc8e8725ae9196bfddb" translate="yes" xml:space="preserve">
          <source>The class of the &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; objects in the array is &lt;a href=&quot;../io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ee30dff29a54c2aa9a1bf9adbf7f3811be0352" translate="yes" xml:space="preserve">
          <source>The class of the singleton object &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144a40496e25ac5fcf9c306b31594b01acc93132" translate="yes" xml:space="preserve">
          <source>The class or constant name of the object can be read from the &lt;code&gt;name&lt;/code&gt; attribute. The marshalled object is held in the &lt;code&gt;buf&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3c97042be33f0bd89afa67bbfbbd9477b35d48" translate="yes" xml:space="preserve">
          <source>The client can be modified to verify the server's certificate against the certificate authority's certificate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b34c72f716a7b2cd2e0ba9fc7017eb86a115cb" translate="yes" xml:space="preserve">
          <source>The client's SSL private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb76f5b65d237a1f2e5068e7224a4724d3a7b984" translate="yes" xml:space="preserve">
          <source>The code block is passed an &lt;a href=&quot;etc#Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a985f52f3eaa176e0c9745e6abbdc02941fe266" translate="yes" xml:space="preserve">
          <source>The code block is passed an &lt;a href=&quot;etc#Passwd&quot;&gt;&lt;code&gt;Passwd&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51f25218261c27d9d37377cc9f5268058c6328d" translate="yes" xml:space="preserve">
          <source>The coerce method provides support for Ruby type coercion. It is not enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838dc5949241b785a7a3c8d2cb326034015e4b9b" translate="yes" xml:space="preserve">
          <source>The coerce method provides support for Ruby type coercion. This coercion mechanism is used by Ruby to handle mixed-type numeric operations: it is intended to find a compatible common type between the two operands of the operator. See also &lt;a href=&quot;numeric#method-i-coerce&quot;&gt;&lt;code&gt;Numeric#coerce&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b6b2be241e033aad739e900b59a40bcae5f267" translate="yes" xml:space="preserve">
          <source>The column number in the source code where this AST's text began.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a70d20026ce1102b433735f8503ee20f44b39f" translate="yes" xml:space="preserve">
          <source>The column number in the source code where this AST's text ended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59335e988b344b5c7bb5532147811c290f339245" translate="yes" xml:space="preserve">
          <source>The column number of the current token. This value starts from 0. This method is valid only in event handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751382a1f6457926158b9168c90c204a90437664" translate="yes" xml:space="preserve">
          <source>The combination of nonblocking methods and &lt;code&gt;IO.select&lt;/code&gt; is also useful for streams such as tty, pipe socket socket when multiple processes read from a stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71f74c1ac8053b4754fc3f6e7367efb7ded3a1c" translate="yes" xml:space="preserve">
          <source>The command continuation request response is indicated by a &amp;ldquo;+&amp;rdquo; token instead of a tag. This form of response indicates that the server is ready to accept the continuation of a command from the client. The remainder of this response is a line of text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0b626c5ed8cc751fac5268bd99fb1da1358119" translate="yes" xml:space="preserve">
          <source>The command's controlling tty is set to the slave device of the pty and its standard input/output/error is redirected to the slave device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7facf8445827cf35aa4e721750166aff66454dc" translate="yes" xml:space="preserve">
          <source>The common strategy is to take a list of possible completions and filter it down to those completions that start with the user input. In the above examples &lt;a href=&quot;enumerable#method-i-grep&quot;&gt;&lt;code&gt;Enumerator.grep&lt;/code&gt;&lt;/a&gt; is used. The input is escaped to prevent &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; special characters from interfering with the matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ba51edd47d3a624d13b2511b46497f65b38e3d" translate="yes" xml:space="preserve">
          <source>The comparison operator. a &amp;lt;=&amp;gt; b is 0 if a == b, 1 if a &amp;gt; b, -1 if a &amp;lt; b.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe14046bdabc5dc383722b3397c354c59a3a061" translate="yes" xml:space="preserve">
          <source>The comparison operators &amp;lt;, &amp;gt;, &amp;lt;=, and &amp;gt;= are implemented as shorthand for the {proper_,}{subset?,superset?} methods. However, the &amp;lt;=&amp;gt; operator is intentionally left out because not every pair of sets is comparable ({x, y} vs. {x, z} for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3754d63a46acdc8b94cf3c5f1978adc25a65c759" translate="yes" xml:space="preserve">
          <source>The comparison shall take place only on the attribute that can be inferred from the options passed from Gemfile and not on attibutes that are used to pin down the gem to specific version (e.g. Git sources should compare on branch and tag but not on commit hash)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff23364dc0a9de7a096c17b2b9e121120b5b699" translate="yes" xml:space="preserve">
          <source>The component does not contain the port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e334c5c08c052c4a1d35f02ef4b3f6986701bd" translate="yes" xml:space="preserve">
          <source>The components accepted are &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44043fd827c01a4ec24e52b3a51a69d6dd9b750" translate="yes" xml:space="preserve">
          <source>The components accepted are &lt;code&gt;userinfo&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, and &lt;code&gt;typecode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7574518085b7f25b19fc99ff032d38ff41ec6d" translate="yes" xml:space="preserve">
          <source>The components accepted are host, port, dn, attributes, scope, filter, and extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9ce3731dd128768d21f7286dd45d7a7069c33f" translate="yes" xml:space="preserve">
          <source>The components accepted are userinfo, host, port, path, query, and fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3abc5a72597f73469d1384638253a585092127e" translate="yes" xml:space="preserve">
          <source>The components should be provided either as an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, or as a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; with keys formed by preceding the component names with a colon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3d8090badd1fd46881bfc9bdd72f92f311bb42" translate="yes" xml:space="preserve">
          <source>The concept of a date object can be represented as a tuple of the day count, the offset and the day of calendar reform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f78ce704f622acc608455f43614f402362ecbd0" translate="yes" xml:space="preserve">
          <source>The condition, no key with the same value, can be tested by comparing the size of inverted hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6f79fa766db506ffbfa4c6db53ded0be3f14c0" translate="yes" xml:space="preserve">
          <source>The configuration of this DRbServer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618477b997da72b233d923850b3374e46c236036" translate="yes" xml:space="preserve">
          <source>The confusion comes from the out-of-order execution of the expression. First the local variable is assigned-to then you attempt to call a nonexistent method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae34a02eeb327d2c5d571b58ae83519b78fa464a" translate="yes" xml:space="preserve">
          <source>The connected to the host was successful, but it immediately said goodbye.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd38745503176412d31834e13a421ceb0e5ded2b" translate="yes" xml:space="preserve">
          <source>The connection type, returned as the Connection header (for instance, &amp;ldquo;close&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
