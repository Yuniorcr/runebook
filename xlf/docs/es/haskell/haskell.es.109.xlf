<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="169183d72c87a00c62c1bb70bbe1dfca6290ac59" translate="yes" xml:space="preserve">
          <source>Int16Rep</source>
          <target state="translated">Int16Rep</target>
        </trans-unit>
        <trans-unit id="e2fdc71a811dda1a2d0bb96b4d4e22861e2e4166" translate="yes" xml:space="preserve">
          <source>Int16X16#</source>
          <target state="translated">Int16X16#</target>
        </trans-unit>
        <trans-unit id="89b499eed6d98b58571c4a678cbf7b8a491c01ed" translate="yes" xml:space="preserve">
          <source>Int16X32#</source>
          <target state="translated">Int16X32#</target>
        </trans-unit>
        <trans-unit id="126ed280a67ec0e5c6c0869188f83c20171f65d3" translate="yes" xml:space="preserve">
          <source>Int16X8#</source>
          <target state="translated">Int16X8#</target>
        </trans-unit>
        <trans-unit id="f4753a4dee54ee10a75b28c6d04eb9ea0d19acce" translate="yes" xml:space="preserve">
          <source>Int32</source>
          <target state="translated">Int32</target>
        </trans-unit>
        <trans-unit id="6f45983428b6cb7b5a6012b9615122a8dcae1e85" translate="yes" xml:space="preserve">
          <source>Int32#</source>
          <target state="translated">Int32#</target>
        </trans-unit>
        <trans-unit id="03ba764facc01a43ae3957c999e280d34c99b823" translate="yes" xml:space="preserve">
          <source>Int32ElemRep</source>
          <target state="translated">Int32ElemRep</target>
        </trans-unit>
        <trans-unit id="4764bca69c81c35d030020e51edddf17222f768e" translate="yes" xml:space="preserve">
          <source>Int32Rep</source>
          <target state="translated">Int32Rep</target>
        </trans-unit>
        <trans-unit id="1dfbf78305bea63530a44158509f80087a73c868" translate="yes" xml:space="preserve">
          <source>Int32X16#</source>
          <target state="translated">Int32X16#</target>
        </trans-unit>
        <trans-unit id="6e53f2f4f4529ad29ba52b5509f536c32a89ecff" translate="yes" xml:space="preserve">
          <source>Int32X4#</source>
          <target state="translated">Int32X4#</target>
        </trans-unit>
        <trans-unit id="882e5d71bbe1adc471c1dd253deaed0ba0cf0f2c" translate="yes" xml:space="preserve">
          <source>Int32X8#</source>
          <target state="translated">Int32X8#</target>
        </trans-unit>
        <trans-unit id="180fcbe698d0f2c44101a06215c472930bbd0a01" translate="yes" xml:space="preserve">
          <source>Int64</source>
          <target state="translated">Int64</target>
        </trans-unit>
        <trans-unit id="2e9b900740b9471923d1ee1ad9a28f09fca651d7" translate="yes" xml:space="preserve">
          <source>Int64#</source>
          <target state="translated">Int64#</target>
        </trans-unit>
        <trans-unit id="280ff825353cf945ad0e0cb68c2f00e2c3be2f18" translate="yes" xml:space="preserve">
          <source>Int64ElemRep</source>
          <target state="translated">Int64ElemRep</target>
        </trans-unit>
        <trans-unit id="35a21477cc0dcffc75ded41cca3b2d1f63f3bc54" translate="yes" xml:space="preserve">
          <source>Int64Rep</source>
          <target state="translated">Int64Rep</target>
        </trans-unit>
        <trans-unit id="7dc1816fbc9a76921593b78d139c0aefaa5ed5d4" translate="yes" xml:space="preserve">
          <source>Int64X2#</source>
          <target state="translated">Int64X2#</target>
        </trans-unit>
        <trans-unit id="b5d12f27a2badb0da71c1c025c40a353791c7df3" translate="yes" xml:space="preserve">
          <source>Int64X4#</source>
          <target state="translated">Int64X4#</target>
        </trans-unit>
        <trans-unit id="0126c222589438679d7129f37eaa49a40ef647ad" translate="yes" xml:space="preserve">
          <source>Int64X8#</source>
          <target state="translated">Int64X8#</target>
        </trans-unit>
        <trans-unit id="a96d87d7c8b3dcfbd0b1d669a1f16d6b32c2a364" translate="yes" xml:space="preserve">
          <source>Int8</source>
          <target state="translated">Int8</target>
        </trans-unit>
        <trans-unit id="f23dd6eb83dd2c6d4c26d67bd205664514ef3334" translate="yes" xml:space="preserve">
          <source>Int8#</source>
          <target state="translated">Int8#</target>
        </trans-unit>
        <trans-unit id="6432a5292cbe710c394997d2e832158d7d933219" translate="yes" xml:space="preserve">
          <source>Int8ElemRep</source>
          <target state="translated">Int8ElemRep</target>
        </trans-unit>
        <trans-unit id="eeefd58bf82829401c0268ef8251bdf8b3f24966" translate="yes" xml:space="preserve">
          <source>Int8Rep</source>
          <target state="translated">Int8Rep</target>
        </trans-unit>
        <trans-unit id="bca4f782d0f853ef5278cf2783e82bd4ca0e6793" translate="yes" xml:space="preserve">
          <source>Int8X16#</source>
          <target state="translated">Int8X16#</target>
        </trans-unit>
        <trans-unit id="273d50cf360a4f6d087c88837ee0b4808a7557d2" translate="yes" xml:space="preserve">
          <source>Int8X32#</source>
          <target state="translated">Int8X32#</target>
        </trans-unit>
        <trans-unit id="5ec83732ef2a77c6bd76ba72fb9dccf0fdb8ff21" translate="yes" xml:space="preserve">
          <source>Int8X64#</source>
          <target state="translated">Int8X64#</target>
        </trans-unit>
        <trans-unit id="e09cb14a20b097264eac071df65d1afd98163fbc" translate="yes" xml:space="preserve">
          <source>IntMap</source>
          <target state="translated">IntMap</target>
        </trans-unit>
        <trans-unit id="e63b5240ec2d5f7585915f4d28ddb5efc058620c" translate="yes" xml:space="preserve">
          <source>IntPtr</source>
          <target state="translated">IntPtr</target>
        </trans-unit>
        <trans-unit id="2901d3f7a1db5d58eeaffb4b887831e2d949eb75" translate="yes" xml:space="preserve">
          <source>IntRep</source>
          <target state="translated">IntRep</target>
        </trans-unit>
        <trans-unit id="9e69d47445a71be667d23e5d0ef7d5321b56a177" translate="yes" xml:space="preserve">
          <source>IntSet</source>
          <target state="translated">IntSet</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="320552ac98d7f56a8b5c90eb071442ff5ade6253" translate="yes" xml:space="preserve">
          <source>Integer results</source>
          <target state="translated">Resultados enteros</target>
        </trans-unit>
        <trans-unit id="e3b59c9f1c26e320e172cac39695e68589e740a0" translate="yes" xml:space="preserve">
          <source>Integral</source>
          <target state="translated">Integral</target>
        </trans-unit>
        <trans-unit id="c4c03c5bf82bd9916b53979e703ce58d3667b527" translate="yes" xml:space="preserve">
          <source>Integral numbers, supporting integer division.</source>
          <target state="translated">Números integrales,apoyando la división de números enteros.</target>
        </trans-unit>
        <trans-unit id="234d47467506fc9f47ee7950fcdb7bb2ae54365b" translate="yes" xml:space="preserve">
          <source>Integral types</source>
          <target state="translated">Tipos integrales</target>
        </trans-unit>
        <trans-unit id="df30aeff3c9f2ae9693e9f1c28c3699de6eac4ed" translate="yes" xml:space="preserve">
          <source>Integral types with lossless conversion to and from pointers</source>
          <target state="translated">Tipos integrales con conversión sin pérdidas hacia y desde los punteros</target>
        </trans-unit>
        <trans-unit id="e27829052d0d9df18b05cefeb88ad5a94afbc61c" translate="yes" xml:space="preserve">
          <source>Intended for use with pinned arrays; otherwise very unsafe!</source>
          <target state="translated">Destinado a ser usado con conjuntos de clavijas;de lo contrario,es muy inseguro.</target>
        </trans-unit>
        <trans-unit id="007b2ebed9a4c28b982956fb6038e4230fef94c2" translate="yes" xml:space="preserve">
          <source>Interactive mode - normally used by just running &lt;code&gt;ghci&lt;/code&gt;; see &lt;a href=&quot;ghci#ghci&quot;&gt;Using GHCi&lt;/a&gt; for details.</source>
          <target state="translated">Modo interactivo: normalmente se usa simplemente ejecutando &lt;code&gt;ghci&lt;/code&gt; ; consulte &lt;a href=&quot;ghci#ghci&quot;&gt;Uso de GHCi&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="d1a5c0c3d73751b79478f13c6aba7659e97bd850" translate="yes" xml:space="preserve">
          <source>Interactive mode, which is also available as &lt;strong&gt;ghci&lt;/strong&gt;. Interactive mode is described in more detail in &lt;a href=&quot;ghci#ghci&quot;&gt;Using GHCi&lt;/a&gt;.</source>
          <target state="translated">Modo interactivo, que tambi&amp;eacute;n est&amp;aacute; disponible como &lt;strong&gt;ghci&lt;/strong&gt; . El modo interactivo se describe con m&amp;aacute;s detalle en &lt;a href=&quot;ghci#ghci&quot;&gt;Uso de GHCi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="200ddf5e689f542251354b2292ff7f306c830bcd" translate="yes" xml:space="preserve">
          <source>Interactive sessions</source>
          <target state="translated">Sesiones interactivas</target>
        </trans-unit>
        <trans-unit id="9b175511971a5226d37c0acfed7f54181e087e72" translate="yes" xml:space="preserve">
          <source>Interchange</source>
          <target state="translated">Interchange</target>
        </trans-unit>
        <trans-unit id="0889e1352d0093dd2c1bd60ccefdbe1787dedf12" translate="yes" xml:space="preserve">
          <source>Intermediate C file produced by the Haskell compiler.</source>
          <target state="translated">Archivo C intermedio producido por el compilador de Haskell.</target>
        </trans-unit>
        <trans-unit id="0e87fa48ab9403bcfb3ef1be0554d0a70b493987" translate="yes" xml:space="preserve">
          <source>Intermediate result in a processing pipeline.</source>
          <target state="translated">Resultado intermedio en una tubería de procesamiento.</target>
        </trans-unit>
        <trans-unit id="fc9225a1693f44637be7aea70d7fcc2c5840704d" translate="yes" xml:space="preserve">
          <source>Internal</source>
          <target state="translated">Internal</target>
        </trans-unit>
        <trans-unit id="82a32977b22d691e4bebb6181d666886678637a3" translate="yes" xml:space="preserve">
          <source>Internal encoding of argv</source>
          <target state="translated">La codificación interna del argv</target>
        </trans-unit>
        <trans-unit id="25a43e5e4971ff9be08a18b36db8ee9809321bf3" translate="yes" xml:space="preserve">
          <source>Internal function used by the RTS to run sparks.</source>
          <target state="translated">Función interna utilizada por el RTS para hacer funcionar las chispas.</target>
        </trans-unit>
        <trans-unit id="811920182b71e4d6c39f62829f0533afa24b5bfb" translate="yes" xml:space="preserve">
          <source>Internal functions</source>
          <target state="translated">Funciones internas</target>
        </trans-unit>
        <trans-unit id="f9ce090f6b4e6812a2a33054e170fe0befa25fea" translate="yes" xml:space="preserve">
          <source>Internal implementation</source>
          <target state="translated">Implementación interna</target>
        </trans-unit>
        <trans-unit id="335c261c9e3240dffccc5e11b7feb9b035c0ffee" translate="yes" xml:space="preserve">
          <source>Internal modules are always subject to change from version to version.</source>
          <target state="translated">Los módulos internos siempre están sujetos a cambios de una versión a otra.</target>
        </trans-unit>
        <trans-unit id="4cd52ec76491f663a1c43928caec2f316b4ca018" translate="yes" xml:space="preserve">
          <source>Internal modules are always subject to change from version to version. The contents of this module are also platform-dependent, hence what is shown in the Hackage documentation may differ from what is actually available on your system.</source>
          <target state="translated">Los módulos internos siempre están sujetos a cambios de versión.El contenido de este módulo también depende de la plataforma,por lo que lo que se muestra en la documentación de Hackage puede diferir de lo que realmente está disponible en su sistema.</target>
        </trans-unit>
        <trans-unit id="0fcdcb0ba8bba814068eb6100072ef47243548c0" translate="yes" xml:space="preserve">
          <source>Internal representation of ShortByteString</source>
          <target state="translated">Representación interna de ShortByteString</target>
        </trans-unit>
        <trans-unit id="6f8442c92f2a07632791660fdbe8ed261d183750" translate="yes" xml:space="preserve">
          <source>Internal stuff: support for ByteString FilePaths</source>
          <target state="translated">Cosas internas:soporte para ByteString FilePaths</target>
        </trans-unit>
        <trans-unit id="c06d3b6c05aaeb5431e0abe73a9ea613ced45014" translate="yes" xml:space="preserve">
          <source>Internal to GHC is yet a third equality relation &lt;code&gt;(~#)&lt;/code&gt;. It is heterogeneous (like &lt;code&gt;~~&lt;/code&gt;) and is used only internally. It may appear in error messages and other output only when &lt;a href=&quot;using#ghc-flag--fprint-equality-relations&quot;&gt;&lt;code&gt;-fprint-equality-relations&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">Interna de GHC hay una tercera relaci&amp;oacute;n de igualdad &lt;code&gt;(~#)&lt;/code&gt; . Es heterog&amp;eacute;neo (como &lt;code&gt;~~&lt;/code&gt; ) y se usa solo internamente. Puede aparecer en mensajes de error y otros resultados solo cuando &lt;a href=&quot;using#ghc-flag--fprint-equality-relations&quot;&gt; &lt;code&gt;-fprint-equality-relations&lt;/code&gt; &lt;/a&gt; est&amp;aacute; habilitado.</target>
        </trans-unit>
        <trans-unit id="2bd330af85b0e5f22d5c9a7160723d4849210dfe" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s are buffer-filling functions. They are executed by a &lt;em&gt;driver&lt;/em&gt; that provides them with an actual buffer to fill. Once called with a buffer, a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; fills it and returns a signal to the driver telling it that it is either done, has filled the current buffer, or wants to directly insert a reference to a chunk of memory. In the last two cases, the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; also returns a continutation &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that the driver can call to fill the next buffer. Here, we provide the two drivers that satisfy almost all use cases. See &lt;a href=&quot;data-bytestring-builder-extra&quot;&gt;Data.ByteString.Builder.Extra&lt;/a&gt;, for information about fine-tuning them.</source>
          <target state="translated">Internamente, los &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; son funciones de llenado de b&amp;uacute;fer. Son ejecutados por un &lt;em&gt;controlador&lt;/em&gt; que les proporciona un b&amp;uacute;fer real para llenar. Una vez llamado con un b&amp;uacute;fer, un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; llena y devuelve una se&amp;ntilde;al al controlador dici&amp;eacute;ndole que est&amp;aacute; hecho, que ha llenado el b&amp;uacute;fer actual o que quiere insertar directamente una referencia a un trozo de memoria. En los dos &amp;uacute;ltimos casos, el &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n devuelve un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; que el conductor puede llamar para llenar el siguiente b&amp;uacute;fer. Aqu&amp;iacute;, proporcionamos los dos controladores que satisfacen casi todos los casos de uso. Consulte &lt;a href=&quot;data-bytestring-builder-extra&quot;&gt;Data.ByteString.Builder.Extra&lt;/a&gt; para obtener informaci&amp;oacute;n sobre c&amp;oacute;mo ajustarlos .</target>
        </trans-unit>
        <trans-unit id="d88cff51e0a932119461c68d8546032600672fb6" translate="yes" xml:space="preserve">
          <source>Internally, a builder constructs a lazy &lt;code&gt;Text&lt;/code&gt; by filling arrays piece by piece. As each buffer is filled, it is 'popped' off, to become a new chunk of the resulting lazy &lt;code&gt;Text&lt;/code&gt;. All this is hidden from the user of the &lt;code&gt;Builder&lt;/code&gt;.</source>
          <target state="translated">Internamente, un constructor construye un &lt;code&gt;Text&lt;/code&gt; perezoso llenando matrices pieza por pieza. A medida que se llena cada b&amp;uacute;fer, se 'abre' para convertirse en un nuevo fragmento del &lt;code&gt;Text&lt;/code&gt; o diferido resultante . Todo esto est&amp;aacute; oculto al usuario del &lt;code&gt;Builder&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12bba6c28355d7983d21c1e6090494085220dbb9" translate="yes" xml:space="preserve">
          <source>Internally, the &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; type is represented as an array of &lt;code&gt;Word16&lt;/code&gt; UTF-16 code units. The offset and length fields in the constructor are in these units, &lt;em&gt;not&lt;/em&gt; units of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Internamente, el tipo de &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; se representa como una matriz de unidades de c&amp;oacute;digo &lt;code&gt;Word16&lt;/code&gt; UTF-16. Los campos de desplazamiento y longitud en el constructor est&amp;aacute;n en estas unidades, &lt;em&gt;no en&lt;/em&gt; unidades de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52f341c327dc6a2b9f9f6adb900102322209af62" translate="yes" xml:space="preserve">
          <source>Internally, the &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; type is represented as an array of &lt;code&gt;Word16&lt;/code&gt; UTF-16 code units. The offset and length fields in the constructor are in these units, &lt;em&gt;not&lt;/em&gt; units of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b999b33863c1153156a264b1868a08a53695d3" translate="yes" xml:space="preserve">
          <source>Internally, this function reads a chunk at a time from the lower-level buffering abstraction, and concatenates the chunks into a single string once the entire file has been read.</source>
          <target state="translated">Internamente,esta función lee un trozo a la vez de la abstracción de amortiguación de nivel inferior,y concatena los trozos en una sola cadena una vez que se ha leído todo el archivo.</target>
        </trans-unit>
        <trans-unit id="653edb0bfdb6bd20dfe7affb5776bc7d271237c7" translate="yes" xml:space="preserve">
          <source>Internals</source>
          <target state="translated">Internals</target>
        </trans-unit>
        <trans-unit id="a897c5f4e03ea395f7767d7d272cb62520bcf994" translate="yes" xml:space="preserve">
          <source>Internals of the &lt;code&gt;&lt;a href=&quot;ghc#v:ExecutionStack&quot;&gt;ExecutionStack&lt;/a&gt;&lt;/code&gt; module</source>
          <target state="translated">Elementos internos del m&amp;oacute;dulo &lt;code&gt;&lt;a href=&quot;ghc#v:ExecutionStack&quot;&gt;ExecutionStack&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8603050a19ff41766967b86a389c3d31e6830c45" translate="yes" xml:space="preserve">
          <source>Interoperability with native code</source>
          <target state="translated">Interoperabilidad con código nativo</target>
        </trans-unit>
        <trans-unit id="c0f7a30128320b71a384a07bf1ad2a57bf643c91" translate="yes" xml:space="preserve">
          <source>Interpret &lt;code&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; as 1-bit bit-field</source>
          <target state="translated">Interprete &lt;code&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; como un campo de bits de 1 bit</target>
        </trans-unit>
        <trans-unit id="2344763cc3af5c5ff8f14dc7427762225e47cc74" translate="yes" xml:space="preserve">
          <source>Interpret &lt;code&gt;&lt;a href=&quot;prelude#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; as 1-bit bit-field</source>
          <target state="translated">Interprete &lt;code&gt;&lt;a href=&quot;prelude#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; como un campo de bits de 1 bit</target>
        </trans-unit>
        <trans-unit id="8180b611e957caccb58a76268ebb6645c0d090ca" translate="yes" xml:space="preserve">
          <source>Interpreter monad</source>
          <target state="translated">Mónada intérprete</target>
        </trans-unit>
        <trans-unit id="bc1f6afb0744a5bbe6fbb6b0551f3c09aa2d8e3d" translate="yes" xml:space="preserve">
          <source>Interpreting flags as concrete values</source>
          <target state="translated">Interpretar las banderas como valores concretos</target>
        </trans-unit>
        <trans-unit id="b3238b1b65299f84d2a4787b06c096df0bde1630" translate="yes" xml:space="preserve">
          <source>Interpreting flags as transformations of an options record</source>
          <target state="translated">Interpretar las banderas como transformaciones de un registro de opciones</target>
        </trans-unit>
        <trans-unit id="5ca1eff01a671dfb25491109dc859fa21b0790a2" translate="yes" xml:space="preserve">
          <source>Interprocess communication</source>
          <target state="translated">Comunicación entre procesos</target>
        </trans-unit>
        <trans-unit id="d5db45498426a18d87491bdc35ea0b2b61778847" translate="yes" xml:space="preserve">
          <source>Interrupt</source>
          <target state="translated">Interrupt</target>
        </trans-unit>
        <trans-unit id="fd306da47657f9f268642aa78227bfb906aca053" translate="yes" xml:space="preserve">
          <source>InterruptOnBreak</source>
          <target state="translated">InterruptOnBreak</target>
        </trans-unit>
        <trans-unit id="50be3afcff74fd9eea61c4dfdd7da275a216bfb6" translate="yes" xml:space="preserve">
          <source>Interrupted</source>
          <target state="translated">Interrupted</target>
        </trans-unit>
        <trans-unit id="36df567b3b522f136606322b1937e0e7e48c4f5c" translate="yes" xml:space="preserve">
          <source>Interruptible</source>
          <target state="translated">Interruptible</target>
        </trans-unit>
        <trans-unit id="d8390d6de28cf8b96b830c119a47584ce55061df" translate="yes" xml:space="preserve">
          <source>Interruptible operations</source>
          <target state="translated">Operaciones interrumpibles</target>
        </trans-unit>
        <trans-unit id="68c9e301e1801956050651ad57b360275600a452" translate="yes" xml:space="preserve">
          <source>InterruptibleFFI</source>
          <target state="translated">InterruptibleFFI</target>
        </trans-unit>
        <trans-unit id="d0f596ba112a353008597117b57b10b067fc620b" translate="yes" xml:space="preserve">
          <source>Intersection</source>
          <target state="translated">Intersection</target>
        </trans-unit>
        <trans-unit id="8ee8437c2a66962c8f0907ee26289d77e36aba20" translate="yes" xml:space="preserve">
          <source>Introducing and eliminating &lt;code&gt;ByteString&lt;/code&gt;s</source>
          <target state="translated">Introducci&amp;oacute;n y eliminaci&amp;oacute;n de &lt;code&gt;ByteString&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="f2ed6db5ae3728afff2fec4a361e39f9464f0d95" translate="yes" xml:space="preserve">
          <source>Introducing quantified constraints offers two main benefits:</source>
          <target state="translated">La introducción de limitaciones cuantificadas ofrece dos beneficios principales:</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="e9b6edb900949eb2a114c5641991b055536e376d" translate="yes" xml:space="preserve">
          <source>Intruct LLVM to fill dead STG registers with garbage</source>
          <target state="translated">Instruye a la LLVM para que llene los registros de STG muertos con basura</target>
        </trans-unit>
        <trans-unit id="f13f1e646d5fc57caced649f7e0af90a6d1873ef" translate="yes" xml:space="preserve">
          <source>Intuitively it is a bifunctor where both the first and second arguments are covariant.</source>
          <target state="translated">Intuitivamente es un bifunctor donde tanto el primer como el segundo argumento son covariantes.</target>
        </trans-unit>
        <trans-unit id="f11b308cf805ee45457dc6ec7628b5e4afe5bda0" translate="yes" xml:space="preserve">
          <source>Intuitively, a covariant type is &lt;em&gt;produced&lt;/em&gt;, and a contravariant type is &lt;em&gt;consumed&lt;/em&gt;. Most types in Haskell are covariant, but the function type is special in that the lefthand side of a function arrow reverses variance. If a function type &lt;code&gt;a -&amp;gt; b&lt;/code&gt; appears in a covariant position (e.g., &lt;code&gt;CovFun1&lt;/code&gt; above), then &lt;code&gt;a&lt;/code&gt; is in a contravariant position and &lt;code&gt;b&lt;/code&gt; is in a covariant position. Similarly, if &lt;code&gt;a -&amp;gt; b&lt;/code&gt; appears in a contravariant position (e.g., &lt;code&gt;CovFun2&lt;/code&gt; above), then &lt;code&gt;a&lt;/code&gt; is in &lt;code&gt;a&lt;/code&gt; covariant position and &lt;code&gt;b&lt;/code&gt; is in a contravariant position.</source>
          <target state="translated">Intuitivamente, se &lt;em&gt;produce&lt;/em&gt; un tipo covariante y se &lt;em&gt;consume&lt;/em&gt; un tipo contravariante . La mayor&amp;iacute;a de los tipos en Haskell son covariantes, pero el tipo de funci&amp;oacute;n es especial porque el lado izquierdo de una flecha de funci&amp;oacute;n invierte la varianza. Si un tipo de funci&amp;oacute;n &lt;code&gt;a -&amp;gt; b&lt;/code&gt; aparece en una posici&amp;oacute;n covariante (por ejemplo, &lt;code&gt;CovFun1&lt;/code&gt; arriba), entonces &lt;code&gt;a&lt;/code&gt; est&amp;aacute; en una posici&amp;oacute;n contravariante y &lt;code&gt;b&lt;/code&gt; est&amp;aacute; en una posici&amp;oacute;n covariante. De manera similar, si &lt;code&gt;a -&amp;gt; b&lt;/code&gt; aparece en una posici&amp;oacute;n contravariante (por ejemplo, &lt;code&gt;CovFun2&lt;/code&gt; arriba), entonces &lt;code&gt;a&lt;/code&gt; est&amp;aacute; en &lt;code&gt;a&lt;/code&gt; posici&amp;oacute;n covariante &lt;code&gt;b&lt;/code&gt; est&amp;aacute; en una posici&amp;oacute;n contravariante.</target>
        </trans-unit>
        <trans-unit id="721bd28235527f71feda3a70976332e724e9adeb" translate="yes" xml:space="preserve">
          <source>InvalidArgument</source>
          <target state="translated">InvalidArgument</target>
        </trans-unit>
        <trans-unit id="c34e89295bf2cea238c801b77ea83ba0fd5c3764" translate="yes" xml:space="preserve">
          <source>InvalidSequence</source>
          <target state="translated">InvalidSequence</target>
        </trans-unit>
        <trans-unit id="6e547a33d95e99ec46c6344b0c23479734bb0e2a" translate="yes" xml:space="preserve">
          <source>Invariant: &lt;code&gt;&lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-gmp-internals#v:Jn-35-&quot;&gt;Jn#&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-gmp-internals#v:Jp-35-&quot;&gt;Jp#&lt;/a&gt;&lt;/code&gt; are used iff value doesn't fit in &lt;code&gt;&lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-gmp-internals#v:S-35-&quot;&gt;S#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Invariante: &lt;code&gt;&lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-gmp-internals#v:Jn-35-&quot;&gt;Jn#&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-gmp-internals#v:Jp-35-&quot;&gt;Jp#&lt;/a&gt;&lt;/code&gt; se utilizan si el valor de F no encaja en &lt;code&gt;&lt;a href=&quot;../integer-gmp-1.0.2.0/ghc-integer-gmp-internals#v:S-35-&quot;&gt;S#&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf37e1cc70f0e61b9e34e40498126af8ea1a4ccd" translate="yes" xml:space="preserve">
          <source>Invariant: &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:Jn-35-&quot;&gt;Jn#&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:Jp-35-&quot;&gt;Jp#&lt;/a&gt;&lt;/code&gt; are used iff value doesn't fit in &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:S-35-&quot;&gt;S#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Invariante: &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:Jn-35-&quot;&gt;Jn#&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:Jp-35-&quot;&gt;Jp#&lt;/a&gt;&lt;/code&gt; se utilizan si el valor de F no encaja en &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:S-35-&quot;&gt;S#&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bfccb2baadf6166a2829f9676f95fd9d7a60ac3" translate="yes" xml:space="preserve">
          <source>Invariants that all functions must maintain:</source>
          <target state="translated">Invariantes que todas las funciones deben mantener:</target>
        </trans-unit>
        <trans-unit id="11b6b45efb71efd3b50f12592ee43024fb8e5262" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;Tricky Nom Age&lt;/code&gt; representationally equal to &lt;code&gt;Tricky Nom Int&lt;/code&gt;? No! The former stores a &lt;code&gt;Char&lt;/code&gt; and the latter stores a &lt;code&gt;Bool&lt;/code&gt;. The solution to this is to require all parameters to type variables to have role nominal. Thus, GHC would infer role representational for &lt;code&gt;a&lt;/code&gt; but role nominal for &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&amp;iquest;Es &lt;code&gt;Tricky Nom Age&lt;/code&gt; representacionalmente igual a &lt;code&gt;Tricky Nom Int&lt;/code&gt; ? &amp;iexcl;No! El primero almacena un &lt;code&gt;Char&lt;/code&gt; y el segundo almacena un &lt;code&gt;Bool&lt;/code&gt; . La soluci&amp;oacute;n a esto es requerir que todos los par&amp;aacute;metros para escribir variables tengan un rol nominal. Por lo tanto, GHC inferir&amp;iacute;a el rol representativo para &lt;code&gt;a&lt;/code&gt; pero el rol nominal para &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a766705ed66afa23d41d644b867c8c1d8246d785" translate="yes" xml:space="preserve">
          <source>Is a FilePath valid, i.e. could you create a file like it? This function checks for invalid names, and invalid characters, but does not check if length limits are exceeded, as these are typically filesystem dependent.</source>
          <target state="translated">¿Es válido un FilePath,es decir,podrías crear un archivo como este? Esta función comprueba si hay nombres y caracteres no válidos,pero no comprueba si se superan los límites de longitud,ya que éstos suelen depender del sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="2d4afcc43e797a70db779c9a0014ea77683183f9" translate="yes" xml:space="preserve">
          <source>Is a path relative, or is it fixed to the root?</source>
          <target state="translated">¿Es un camino relativo,o está fijado a la raíz?</target>
        </trans-unit>
        <trans-unit id="43af79dad26580cb65546e44c841b83ea361dfc6" translate="yes" xml:space="preserve">
          <source>Is an element a drive</source>
          <target state="translated">Es un elemento de impulso</target>
        </trans-unit>
        <trans-unit id="ad55afc8d42967efa9b30f062839411d7d64cecd" translate="yes" xml:space="preserve">
          <source>Is an item either a directory or the last character a path separator?</source>
          <target state="translated">¿Es un elemento o un directorio o el último personaje un separador de rutas?</target>
        </trans-unit>
        <trans-unit id="dea849a91828d7c22d9e225f465ea37622f0abe6" translate="yes" xml:space="preserve">
          <source>Is event tracing enabled?</source>
          <target state="translated">¿Está habilitado el rastreo de eventos?</target>
        </trans-unit>
        <trans-unit id="4a3d4ce5bba4710d2b59407e172ef6004d960b58" translate="yes" xml:space="preserve">
          <source>Is parameterized over the type of error information and the monad type constructor. It is common to use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; as the monad type constructor for an error monad in which error descriptions take the form of strings. In that case and many other common cases the resulting monad is already defined as an instance of the &lt;code&gt;&lt;a href=&quot;control-monad-error#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. You can also define your own error type and/or use a monad type constructor other than &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt;. In these cases you will have to explicitly define instances of the &lt;code&gt;&lt;a href=&quot;control-monad-error#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. (If you are using the deprecated &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; or &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;, you may also have to define an &lt;code&gt;&lt;a href=&quot;control-monad-error#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; instance.)</source>
          <target state="translated">Se parametriza sobre el tipo de informaci&amp;oacute;n de error y el constructor del tipo de m&amp;oacute;nada. Es com&amp;uacute;n usar &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; como constructor de tipo m&amp;oacute;nada para una m&amp;oacute;nada de error en la que las descripciones de error toman la forma de cadenas. En ese caso y en muchos otros casos comunes, la m&amp;oacute;nada resultante ya est&amp;aacute; definida como una instancia de la clase &lt;code&gt;&lt;a href=&quot;control-monad-error#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; . Tambi&amp;eacute;n puede definir su propio tipo de error y / o utilizar un constructor de tipo m&amp;oacute;nada que no &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt; . En estos casos, tendr&amp;aacute; que definir expl&amp;iacute;citamente instancias de la clase &lt;code&gt;&lt;a href=&quot;control-monad-error#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; . (Si est&amp;aacute; utilizando &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; o &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt; obsoleto, es posible que tambi&amp;eacute;n deba definir una instancia de &lt;code&gt;&lt;a href=&quot;control-monad-error#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d87698463b1e6a36b367f2bd25afa09087482c6" translate="yes" xml:space="preserve">
          <source>Is parameterized over the type of error information and the monad type constructor. It is common to use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; as the monad type constructor for an error monad in which error descriptions take the form of strings. In that case and many other common cases the resulting monad is already defined as an instance of the &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. You can also define your own error type and/or use a monad type constructor other than &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt;. In these cases you will have to explicitly define instances of the &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. (If you are using the deprecated &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; or &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;, you may also have to define an &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; instance.)</source>
          <target state="translated">Se parametriza sobre el tipo de informaci&amp;oacute;n de error y el constructor del tipo de m&amp;oacute;nada. Es com&amp;uacute;n usar &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; como constructor de tipo m&amp;oacute;nada para una m&amp;oacute;nada de error en la que las descripciones de error toman la forma de cadenas. En ese caso y en muchos otros casos comunes, la m&amp;oacute;nada resultante ya est&amp;aacute; definida como una instancia de la clase &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; . Tambi&amp;eacute;n puede definir su propio tipo de error y / o utilizar un constructor de tipo m&amp;oacute;nada que no &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt; . En estos casos, tendr&amp;aacute; que definir expl&amp;iacute;citamente instancias de la clase &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; . (Si est&amp;aacute; utilizando &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; o &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt; obsoleto, es posible que tambi&amp;eacute;n deba definir una instancia de &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3bfeac45184637e42717c5ef3d8450bbfdd4d45a" translate="yes" xml:space="preserve">
          <source>Is parameterized over the type of error information and the monad type constructor. It is common to use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; as the monad type constructor for an error monad in which error descriptions take the form of strings. In that case and many other common cases the resulting monad is already defined as an instance of the &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. You can also define your own error type and/or use a monad type constructor other than &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt;. In these cases you will have to explicitly define instances of the &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. (If you are using the deprecated &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; or &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;, you may also have to define an &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; instance.)</source>
          <target state="translated">Se parametriza sobre el tipo de informaci&amp;oacute;n de error y el constructor del tipo de m&amp;oacute;nada. Es com&amp;uacute;n usar &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; como constructor de tipo m&amp;oacute;nada para una m&amp;oacute;nada de error en la que las descripciones de error toman la forma de cadenas. En ese caso y en muchos otros casos comunes, la m&amp;oacute;nada resultante ya est&amp;aacute; definida como una instancia de la clase &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; . Tambi&amp;eacute;n puede definir su propio tipo de error y / o utilizar un constructor de tipo m&amp;oacute;nada que no &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt; . En estos casos, tendr&amp;aacute; que definir expl&amp;iacute;citamente instancias de la clase &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; . (Si est&amp;aacute; utilizando &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; o &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt; obsoleto, es posible que tambi&amp;eacute;n deba definir una instancia de &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="371baf4cf811b522632264fa7d84bdafaf787645" translate="yes" xml:space="preserve">
          <source>Is parameterized over the type of error information and the monad type constructor. It is common to use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; as the monad type constructor for an error monad in which error descriptions take the form of strings. In that case and many other common cases the resulting monad is already defined as an instance of the &lt;code&gt;&lt;a href=&quot;control-monad-error#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. You can also define your own error type and/or use a monad type constructor other than &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt;. In these cases you will have to explicitly define instances of the &lt;code&gt;&lt;a href=&quot;control-monad-error#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. (If you are using the deprecated &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; or &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;, you may also have to define an &lt;code&gt;&lt;a href=&quot;control-monad-error#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; instance.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fd83de1504db40a2c6a9fab6c7f5a6ffe0a914" translate="yes" xml:space="preserve">
          <source>Is parameterized over the type of error information and the monad type constructor. It is common to use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; as the monad type constructor for an error monad in which error descriptions take the form of strings. In that case and many other common cases the resulting monad is already defined as an instance of the &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. You can also define your own error type and/or use a monad type constructor other than &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt;. In these cases you will have to explicitly define instances of the &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. (If you are using the deprecated &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; or &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;, you may also have to define an &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; instance.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9ee65f747219137fd7d52ad82e317c19d9c76e" translate="yes" xml:space="preserve">
          <source>Is parameterized over the type of error information and the monad type constructor. It is common to use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; as the monad type constructor for an error monad in which error descriptions take the form of strings. In that case and many other common cases the resulting monad is already defined as an instance of the &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. You can also define your own error type and/or use a monad type constructor other than &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; String&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; IOError&lt;/code&gt;. In these cases you will have to explicitly define instances of the &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt;&lt;/code&gt; class. (If you are using the deprecated &lt;a href=&quot;control-monad-error&quot;&gt;Control.Monad.Error&lt;/a&gt; or &lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-error&quot;&gt;Control.Monad.Trans.Error&lt;/a&gt;, you may also have to define an &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; instance.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa333bbf2afea384536b00960809179ff42dd9d" translate="yes" xml:space="preserve">
          <source>Is the character a file separator?</source>
          <target state="translated">¿Es el personaje un separador de archivos?</target>
        </trans-unit>
        <trans-unit id="5f43305893105d5144cecca878b219714e75b65a" translate="yes" xml:space="preserve">
          <source>Is the character an extension character?</source>
          <target state="translated">¿Es el personaje una extensión del personaje?</target>
        </trans-unit>
        <trans-unit id="badcfb21de3bbbdff6edcea7831f4297f75e8e47" translate="yes" xml:space="preserve">
          <source>Is the handle connected to a terminal?</source>
          <target state="translated">¿La manija está conectada a un terminal?</target>
        </trans-unit>
        <trans-unit id="db53055cb5536987019e96f49887b6f3ccf9ab28" translate="yes" xml:space="preserve">
          <source>Is the list of instances returned by &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; nonempty?</source>
          <target state="translated">&amp;iquest;La lista de instancias devuelta por &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;a?</target>
        </trans-unit>
        <trans-unit id="0276f66684c522748357fa6f520335cef096d53c" translate="yes" xml:space="preserve">
          <source>Is the list of instances returned by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; nonempty?</source>
          <target state="translated">&amp;iquest;La lista de instancias devuelta por &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;a?</target>
        </trans-unit>
        <trans-unit id="ff726b2a6e4e23e49531e7725f31b4ca2f33315a" translate="yes" xml:space="preserve">
          <source>Is this a definition of the infix function &amp;ldquo;&lt;code&gt;(!)&lt;/code&gt;&amp;rdquo;, or of the &amp;ldquo;&lt;code&gt;f&lt;/code&gt;&amp;rdquo; with a bang pattern? GHC resolves this ambiguity in favour of the latter. If you want to define &lt;code&gt;(!)&lt;/code&gt; with bang-patterns enabled, you have to do so using prefix notation:</source>
          <target state="translated">&amp;iquest;Es esta una definici&amp;oacute;n de la funci&amp;oacute;n infija &quot; &lt;code&gt;(!)&lt;/code&gt; &quot;, O de la &quot; &lt;code&gt;f&lt;/code&gt; &quot; con un patr&amp;oacute;n de explosi&amp;oacute;n? GHC resuelve esta ambig&amp;uuml;edad a favor de este &amp;uacute;ltimo. Si desea definir &lt;code&gt;(!)&lt;/code&gt; Con los patrones bang habilitados, debe hacerlo usando la notaci&amp;oacute;n de prefijo:</target>
        </trans-unit>
        <trans-unit id="727d9897dcf734181d527a496f77a4e981c855b3" translate="yes" xml:space="preserve">
          <source>Is this an orphan module? Apparently not, because &lt;code&gt;T&lt;/code&gt; is declared in the same module. But suppose class &lt;code&gt;E&lt;/code&gt; had a functional dependency:</source>
          <target state="translated">&amp;iquest;Es este un m&amp;oacute;dulo hu&amp;eacute;rfano? Aparentemente no, porque &lt;code&gt;T&lt;/code&gt; se declara en el mismo m&amp;oacute;dulo. Pero supongamos que la clase &lt;code&gt;E&lt;/code&gt; tuviera una dependencia funcional:</target>
        </trans-unit>
        <trans-unit id="015d37bd7153776002ea5dd2e0e58e04be60d1e9" translate="yes" xml:space="preserve">
          <source>Is this program linked against the GHC RTS? (always &amp;ldquo;YES&amp;rdquo;).</source>
          <target state="translated">&amp;iquest;Este programa est&amp;aacute; vinculado con GHC RTS? (siempre &amp;ldquo;S&amp;Iacute;&amp;rdquo;).</target>
        </trans-unit>
        <trans-unit id="4ab93a61d74047e9e250aa0b4d353a580e7f3de6" translate="yes" xml:space="preserve">
          <source>Is this time zone just persisting for the summer?</source>
          <target state="translated">¿Esta zona horaria sólo persiste durante el verano?</target>
        </trans-unit>
        <trans-unit id="5bdaa14aeb3a57c8d59aa15adeeaf4ca36f447a6" translate="yes" xml:space="preserve">
          <source>Is this year a leap year according to the proleptic Gregorian calendar?</source>
          <target state="translated">¿Este año es un año bisiesto según el proléptico calendario gregoriano?</target>
        </trans-unit>
        <trans-unit id="722098dfb78f933cddee4ba4c9a0bba9c43dafcf" translate="yes" xml:space="preserve">
          <source>Is this year a leap year according to the proleptic Julian calendar?</source>
          <target state="translated">¿Este año es un año bisiesto según el proléptico calendario juliano?</target>
        </trans-unit>
        <trans-unit id="ad4ea982b3c058e21b49b8f110e994dd2768d032" translate="yes" xml:space="preserve">
          <source>Is transformed to,</source>
          <target state="translated">Se transforma en,</target>
        </trans-unit>
        <trans-unit id="ad0876366a1c77a7a9a0da1b2963828591f6ce29" translate="yes" xml:space="preserve">
          <source>Is used within a monadic computation to begin exception processing.</source>
          <target state="translated">Se utiliza dentro de un cómputo monádico para iniciar el procesamiento de excepciones.</target>
        </trans-unit>
        <trans-unit id="5534ee618fbad70f11c2e1cb6e9405c6eaa359eb" translate="yes" xml:space="preserve">
          <source>IsChar</source>
          <target state="translated">IsChar</target>
        </trans-unit>
        <trans-unit id="1aa675efc7a7eeb0b92b8ba7fa53d00d3161a009" translate="yes" xml:space="preserve">
          <source>IsList</source>
          <target state="translated">IsList</target>
        </trans-unit>
        <trans-unit id="98e4309bebb71a041dd60cba19bc3de15703f3bf" translate="yes" xml:space="preserve">
          <source>IsStatic</source>
          <target state="translated">IsStatic</target>
        </trans-unit>
        <trans-unit id="d9570a11de28b7264d6886af3296a0aa64b763e0" translate="yes" xml:space="preserve">
          <source>IsString</source>
          <target state="translated">IsString</target>
        </trans-unit>
        <trans-unit id="3676b65080f47af23667593fa2dbe56b53899761" translate="yes" xml:space="preserve">
          <source>Isolate a decoder to operate with a fixed number of bytes, and fail if fewer bytes were consumed, or more bytes were attempted to be consumed. If the given decoder fails, &lt;code&gt;&lt;a href=&quot;data-binary-get#v:isolate&quot;&gt;isolate&lt;/a&gt;&lt;/code&gt; will also fail. Offset from &lt;code&gt;&lt;a href=&quot;data-binary-get#v:bytesRead&quot;&gt;bytesRead&lt;/a&gt;&lt;/code&gt; will be relative to the start of &lt;code&gt;&lt;a href=&quot;data-binary-get#v:isolate&quot;&gt;isolate&lt;/a&gt;&lt;/code&gt;, not the absolute of the input.</source>
          <target state="translated">A&amp;iacute;sle un decodificador para que funcione con un n&amp;uacute;mero fijo de bytes y falle si se consumieron menos bytes o se intent&amp;oacute; consumir m&amp;aacute;s bytes. Si el decodificador dado falla, &lt;code&gt;&lt;a href=&quot;data-binary-get#v:isolate&quot;&gt;isolate&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n fallar&amp;aacute;. El &lt;code&gt;&lt;a href=&quot;data-binary-get#v:bytesRead&quot;&gt;bytesRead&lt;/a&gt;&lt;/code&gt; de bytesRead ser&amp;aacute; relativo al inicio del &lt;code&gt;&lt;a href=&quot;data-binary-get#v:isolate&quot;&gt;isolate&lt;/a&gt;&lt;/code&gt; , no al absoluto de la entrada.</target>
        </trans-unit>
        <trans-unit id="a4ce542505148e05bcc65af7af6636a88b0f16dd" translate="yes" xml:space="preserve">
          <source>Issue a warning if the module being compiled is marked as -XTrustworthy but it could instead be marked as -XSafe , a more informative bound. Can be used to detect once a Safe Haskell bound can be improved as dependencies are updated.</source>
          <target state="translated">Emite una advertencia si el módulo que se está compilando está marcado como -XDigno de Confianza pero podría ser marcado como -XSeguro,un límite más informativo.Puede ser usado para detectar una vez que un bound bound de Haskell seguro puede ser mejorado a medida que se actualizan las dependencias.</target>
        </trans-unit>
        <trans-unit id="06aa14b53286f8584e57c40fad1e3a81a67ba0f1" translate="yes" xml:space="preserve">
          <source>Issue a warning if the module being compiled is regarded to be safe. Should be used to check the safety type of modules when using safe inference.</source>
          <target state="translated">Emite una advertencia si el módulo que se está compilando se considera seguro.Debe utilizarse para comprobar el tipo de seguridad de los módulos cuando se utiliza la inferencia de seguridad.</target>
        </trans-unit>
        <trans-unit id="b6ed530fa6a142afa10ab96b574f393e658ba7bb" translate="yes" xml:space="preserve">
          <source>Issue a warning if the module being compiled is regarded to be safe. Should be used to check the safety type of modules when using safe inference. If the module is explicitly marked as safe then no warning will be issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60682df2a77a2bc855bbc66ec9bbdabac2ee26b2" translate="yes" xml:space="preserve">
          <source>Issue a warning if the module being compiled is regarded to be unsafe. Should be used to check the safety type of modules when using safe inference.</source>
          <target state="translated">Emite una advertencia si el módulo que se está compilando se considera inseguro.Debe utilizarse para comprobar el tipo de seguridad de los módulos cuando se utiliza la inferencia de seguridad.</target>
        </trans-unit>
        <trans-unit id="7bf53c375a4a624f22b2da10f2c07ed17f8bb47d" translate="yes" xml:space="preserve">
          <source>It appears in the right hand side of a binding that binds at least one used variable that is used</source>
          <target state="translated">Aparece en la parte derecha de una encuadernación que une al menos una variable usada que se utiliza</target>
        </trans-unit>
        <trans-unit id="223c43fdc56fe609487e6e247ea7cd3e66ebb0fa" translate="yes" xml:space="preserve">
          <source>It can also be placed on the right-hand side of a type-level function to provide an error for an invalid case,</source>
          <target state="translated">También se puede colocar a la derecha de una función de nivel de tipo para proporcionar un error para un caso inválido,</target>
        </trans-unit>
        <trans-unit id="2ac87d14aeacaa952c867a2404b8511d2d18797a" translate="yes" xml:space="preserve">
          <source>It can also help in a third way: when used with &lt;a href=&quot;using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt;&lt;code&gt;-funbox-strict-fields&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;using-optimisation#options-f&quot;&gt;-f*: platform-independent flags&lt;/a&gt;), a strict field can be unpacked or unboxed in the constructor, and one or more levels of indirection may be removed. Unpacking only happens for single-constructor datatypes (&lt;code&gt;Int&lt;/code&gt; is a good candidate, for example).</source>
          <target state="translated">Tambi&amp;eacute;n puede ayudar de una tercera manera: cuando se usa con &lt;a href=&quot;using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt; &lt;code&gt;-funbox-strict-fields&lt;/code&gt; &lt;/a&gt; (ver &lt;a href=&quot;using-optimisation#options-f&quot;&gt;-f *: indicadores independientes de la plataforma&lt;/a&gt; ), un campo estricto se puede descomprimir o desempaquetar en el constructor, y uno o m&amp;aacute;s niveles de indirecci&amp;oacute;n pueden Ser eliminado. El desempaquetado solo ocurre para tipos de datos de un solo constructor ( &lt;code&gt;Int&lt;/code&gt; es un buen candidato, por ejemplo).</target>
        </trans-unit>
        <trans-unit id="294eac74bb8a1b732eb019ba498538e7dd7de972" translate="yes" xml:space="preserve">
          <source>It can be implemented in any way, with any set of superclasses and methods; however, modules depending on an abstract class are not permitted to define instances (as of GHC 8.2, this restriction is not checked, see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/13086&quot;&gt;#13086&lt;/a&gt;.) These declarations can be implemented by type synonyms of kind &lt;code&gt;Constraint&lt;/code&gt;; this can be useful if you want to parametrize over a constraint in functions. For example, with the &lt;code&gt;ConstraintKinds&lt;/code&gt; extension, this type synonym is a valid implementation of the signature above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477b37878c8cab374119d560c1fadebca482f149" translate="yes" xml:space="preserve">
          <source>It can be implemented in any way, with any set of superclasses and methods; however, modules depending on an abstract class are not permitted to define instances (as of GHC 8.2, this restriction is not checked, see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/13086&quot;&gt;Issue #13086&lt;/a&gt;.) These declarations can be implemented by type synonyms of kind &lt;code&gt;Constraint&lt;/code&gt;; this can be useful if you want to parametrize over a constraint in functions. For example, with the &lt;code&gt;ConstraintKinds&lt;/code&gt; extension, this type synonym is a valid implementation of the signature above:</source>
          <target state="translated">Puede implementarse de cualquier forma, con cualquier conjunto de superclases y m&amp;eacute;todos; sin embargo, los m&amp;oacute;dulos que dependen de una clase abstracta no pueden definir instancias (a partir de GHC 8.2, esta restricci&amp;oacute;n no est&amp;aacute; marcada, consulte el &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/13086&quot;&gt;n&amp;uacute;mero 13086&lt;/a&gt; ). Estas declaraciones se pueden implementar mediante sin&amp;oacute;nimos de tipo de &lt;code&gt;Constraint&lt;/code&gt; de tipo ; esto puede ser &amp;uacute;til si desea parametrizar sobre una restricci&amp;oacute;n en funciones. Por ejemplo, con la extensi&amp;oacute;n &lt;code&gt;ConstraintKinds&lt;/code&gt; , este sin&amp;oacute;nimo de tipo es una implementaci&amp;oacute;n v&amp;aacute;lida de la firma anterior:</target>
        </trans-unit>
        <trans-unit id="7dc3d61a5c9f85d876d3d8830ea9d78107b392ca" translate="yes" xml:space="preserve">
          <source>It can be used as a base monad to which a series of monad transformers may be applied to construct a composite monad. Most monad transformer modules include the special case of applying the transformer to &lt;code&gt;&lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;. For example, &lt;code&gt;State s&lt;/code&gt; is an abbreviation for &lt;code&gt;StateT s &lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Se puede utilizar como una m&amp;oacute;nada base a la que se pueden aplicar una serie de transformadores de m&amp;oacute;nada para construir una m&amp;oacute;nada compuesta. La mayor&amp;iacute;a de los m&amp;oacute;dulos de transformadores de m&amp;oacute;nada incluyen el caso especial de aplicar el transformador a la &lt;code&gt;&lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; . Por ejemplo, &lt;code&gt;State s&lt;/code&gt; es una abreviatura de &lt;code&gt;StateT s &lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9852af2f468eb5552aeda23d235265408470558" translate="yes" xml:space="preserve">
          <source>It can be used with functions parameterized by functor or monad classes.</source>
          <target state="translated">Se puede utilizar con funciones parametrizadas por clases de functor o mónadas.</target>
        </trans-unit>
        <trans-unit id="9d9e1dcae3fe4aa8145c9784bf5a266157b5617e" translate="yes" xml:space="preserve">
          <source>It can sometime be the case that the name and type of a valid hole fit is not enough to realize what the fit stands for. This flag adds the documentation of the fit to the message, if the documentation is available (and the module from which the function comes was compiled with the &lt;code&gt;-haddock&lt;/code&gt; flag).</source>
          <target state="translated">En alg&amp;uacute;n momento puede darse el caso de que el nombre y el tipo de un ajuste de agujero v&amp;aacute;lido no sea suficiente para darse cuenta de lo que significa el ajuste. Este indicador agrega la documentaci&amp;oacute;n del ajuste al mensaje, si la documentaci&amp;oacute;n est&amp;aacute; disponible (y el m&amp;oacute;dulo del que proviene la funci&amp;oacute;n se compil&amp;oacute; con el indicador &lt;code&gt;-haddock&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="131c8043e25d68f30a2ae760ed59ea45ec37b93c" translate="yes" xml:space="preserve">
          <source>It does seem odd that the existentially-bound type variable &lt;em&gt;must not&lt;/em&gt; be already in scope. Contrast that usually name-bindings merely shadow (make a &amp;lsquo;hole&amp;rsquo;) in a same-named outer variable&amp;rsquo;s scope. But we must have &lt;em&gt;some&lt;/em&gt; way to bring such type variables into scope, else we could not name existentially-bound type variables in subsequent type signatures.</source>
          <target state="translated">Parece extra&amp;ntilde;o que la variable de tipo ligada existencialmente &lt;em&gt;no deba&lt;/em&gt; estar ya en el alcance. Contraste que, por lo general, los enlaces de nombres simplemente sombrean (hacen un 'agujero') en el alcance de una variable externa del mismo nombre. Pero debemos tener &lt;em&gt;alguna&lt;/em&gt; forma de traer tales variables de tipo al alcance, de lo contrario no podr&amp;iacute;amos nombrar variables de tipo vinculadas existencialmente en firmas de tipo posteriores.</target>
        </trans-unit>
        <trans-unit id="054d4cae547999a330f8c63a5c615eee34554065" translate="yes" xml:space="preserve">
          <source>It enables the &lt;a href=&quot;#rts-flag--N%20%E2%9F%A8x%E2%9F%A9&quot;&gt;&lt;code&gt;-N ⟨x⟩&lt;/code&gt;&lt;/a&gt; to be used, which allows threads to run in parallelism on a multi-processor or multi-core machine. See &lt;a href=&quot;#using-smp&quot;&gt;Using SMP parallelism&lt;/a&gt;.</source>
          <target state="translated">Permite &lt;a href=&quot;#rts-flag--N%20%E2%9F%A8x%E2%9F%A9&quot;&gt; &lt;code&gt;-N ⟨x⟩&lt;/code&gt; &lt;/a&gt; , lo que permite que los subprocesos se ejecuten en paralelo en una m&amp;aacute;quina multiprocesador o multin&amp;uacute;cleo. Consulte &lt;a href=&quot;#using-smp&quot;&gt;Uso del paralelismo SMP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f4b4b81f61547fa1245445f1f306f991f4d6a69" translate="yes" xml:space="preserve">
          <source>It enables the &lt;code&gt;-N ⟨x⟩&lt;/code&gt; RTS option to be used, which allows threads to run in parallel on a multiprocessor or multicore machine. See &lt;a href=&quot;using-concurrent#using-smp&quot;&gt;Using SMP parallelism&lt;/a&gt;.</source>
          <target state="translated">Permite &lt;code&gt;-N ⟨x⟩&lt;/code&gt; opci&amp;oacute;n -N ⟨x⟩ RTS, que permite que los subprocesos se ejecuten en paralelo en una m&amp;aacute;quina multiprocesador o multin&amp;uacute;cleo. Consulte &lt;a href=&quot;using-concurrent#using-smp&quot;&gt;Uso del paralelismo SMP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb0ce11093eeb1e05f584fe528a07b4ef4451608" translate="yes" xml:space="preserve">
          <source>It ensures that the result of each application of force to weak head normal form before proceeding.</source>
          <target state="translated">Asegura que el resultado de cada aplicación de fuerza a la cabeza débil forma normal antes de proceder.</target>
        </trans-unit>
        <trans-unit id="46308fd5d44db11f7f98b515fc84088603b61098" translate="yes" xml:space="preserve">
          <source>It has a lower memory overhead than a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and and does not contribute to heap fragmentation. It can be converted to or from a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; (at the cost of copying the string data). It supports very few other operations.</source>
          <target state="translated">Tiene una sobrecarga de memoria menor que &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y no contribuye a la fragmentaci&amp;oacute;n del mont&amp;oacute;n. Se puede convertir hacia o desde &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; (a costa de copiar los datos de la cadena). Admite muy pocas otras operaciones.</target>
        </trans-unit>
        <trans-unit id="5740ea7db69553e93f1f0294393cd715c08f5eba" translate="yes" xml:space="preserve">
          <source>It has been copied into a compact region. The documentation for &lt;code&gt;ghc-compact&lt;/code&gt; and &lt;code&gt;compact&lt;/code&gt; describes this process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a707e49b0a7765ed34649085bd077081e96884" translate="yes" xml:space="preserve">
          <source>It ignores leap-seconds, so it's not necessarily a fixed amount of clock time. For instance, 23:00 UTC + 2 hours of NominalDiffTime = 01:00 UTC (+ 1 day), regardless of whether a leap-second intervened.</source>
          <target state="translated">Ignora los segundos bisiestos,así que no es necesariamente una cantidad fija de tiempo de reloj.Por ejemplo,23:00 UTC+2 horas de NominalDiffTime=01:00 UTC (+1 día),sin importar si intervino un segundo bisiesto.</target>
        </trans-unit>
        <trans-unit id="df69e6b9bd468ac0cfd863a00e4fc497cbf20b12" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;Your Responsibility&lt;/em&gt; to make sure that &lt;code&gt;intLookup&lt;/code&gt; really behaves as a specialised version of &lt;code&gt;genericLookup&lt;/code&gt;!!!</source>
          <target state="translated">&amp;iexcl;Es &lt;em&gt;su responsabilidad&lt;/em&gt; asegurarse de que &lt;code&gt;intLookup&lt;/code&gt; realmente se comporte como una versi&amp;oacute;n especializada de &lt;code&gt;genericLookup&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="03f782cb2cf883c8957d19560fdc08a6367864fa" translate="yes" xml:space="preserve">
          <source>It is a member of the &lt;em&gt;root set&lt;/em&gt;.</source>
          <target state="translated">Es un miembro del grupo &lt;em&gt;ra&amp;iacute;z&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="069be4f33a15425dcbdb6739fc39df2c50d79737" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test. It is about 40% faster than &lt;em&gt;groupBy (==)&lt;/em&gt;</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;data-bytestring#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad. Es aproximadamente un 40% m&amp;aacute;s r&amp;aacute;pido que &lt;em&gt;groupBy (==)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="239e0df1f67690a4356b9b61134d42a036c1b5b3" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="bd809bd965bb0b89781400d6bdebc57c3ad18a2c" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:deleteBy&quot;&gt;deleteBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;data-list#v:deleteBy&quot;&gt;deleteBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="fa42b4f7bbfb75dac932dd4da50a6822c257bf8f" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;data-list#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="f8fd3a20ff645eb541fd385527d7dc74a8034274" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;data-list#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="cb8c3ea4f4fa2bd6894db3bc15c4f14fe3736921" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test. If the element is found in both the first and the second list, the element from the first list will be used.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;data-list#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad. Si el elemento se encuentra tanto en la primera como en la segunda lista, se utilizar&amp;aacute; el elemento de la primera lista.</target>
        </trans-unit>
        <trans-unit id="8ca3310f8d4a5261d5f6d4a55bd30a7adbbbfad1" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="c645a3e28d8356b799e0c5997e6e6fa8ae48c19e" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:deleteBy&quot;&gt;deleteBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:deleteBy&quot;&gt;deleteBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="cbc3e58e1417baac797e30cd4b1fce7f11aee8c6" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="eab5f4c0e60e1bf6ad7feb752ee004afd76acf82" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad.</target>
        </trans-unit>
        <trans-unit id="9f4770e82cc2d4aa8245aef5038e07d136f80baa" translate="yes" xml:space="preserve">
          <source>It is a special case of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test. If the element is found in both the first and the second list, the element from the first list will be used.</source>
          <target state="translated">Es un caso especial de &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt; , que permite al programador proporcionar su propia prueba de igualdad. Si el elemento se encuentra tanto en la primera como en la segunda lista, se utilizar&amp;aacute; el elemento de la primera lista.</target>
        </trans-unit>
        <trans-unit id="b1552e1c07901d09d36b63e9e1d341f53802ec30" translate="yes" xml:space="preserve">
          <source>It is a weak pointer object whose key is reachable.</source>
          <target state="translated">Es un objeto puntero débil cuya clave es accesible.</target>
        </trans-unit>
        <trans-unit id="0cca6e72767e4d015953dd197d29471c4aebb413" translate="yes" xml:space="preserve">
          <source>It is also possible for library writers to instruct GHC to perform call-pattern specialisation extremely aggressively. This is necessary for some highly optimized libraries, where we may want to specialize regardless of the number of specialisations, or the size of the code. As an example, consider a simplified use-case from the &lt;code&gt;vector&lt;/code&gt; library:</source>
          <target state="translated">Tambi&amp;eacute;n es posible que los escritores de bibliotecas instruyan a GHC para que realice la especializaci&amp;oacute;n de patrones de llamadas de manera extremadamente agresiva. Esto es necesario para algunas bibliotecas altamente optimizadas, en las que es posible que deseemos especializarnos independientemente del n&amp;uacute;mero de especializaciones o del tama&amp;ntilde;o del c&amp;oacute;digo. Como ejemplo, considere un caso de uso simplificado de la biblioteca de &lt;code&gt;vector&lt;/code&gt; es :</target>
        </trans-unit>
        <trans-unit id="4757c18b6a5b619791dbad2b33b1d97df1650f39" translate="yes" xml:space="preserve">
          <source>It is also possible to break down the heap in one or more of these states by a different criteria, by restricting a profile by biography. For example, to show the portion of the heap in the drag or void state by producer:</source>
          <target state="translated">También es posible descomponer el montón en uno o más de estos estados por un criterio diferente,restringiendo un perfil por biografía.Por ejemplo,para mostrar la porción del montón en el estado de arrastre o vacío por productor:</target>
        </trans-unit>
        <trans-unit id="22401f25d2546092811a16d0a0193b09e8047866" translate="yes" xml:space="preserve">
          <source>It is also possible to convert a run-time integer or string value to the corresponding type-level literal. Of course, the resulting type literal will be unknown at compile-time, so it is hidden in an existential type. The conversion may be performed using &lt;code&gt;someNatVal&lt;/code&gt; for integers and &lt;code&gt;someSymbolVal&lt;/code&gt; for strings:</source>
          <target state="translated">Tambi&amp;eacute;n es posible convertir un valor entero o de cadena en tiempo de ejecuci&amp;oacute;n en el literal de nivel de tipo correspondiente. Por supuesto, el tipo literal resultante ser&amp;aacute; desconocido en tiempo de compilaci&amp;oacute;n, por lo que est&amp;aacute; oculto en un tipo existencial. La conversi&amp;oacute;n se puede realizar usando &lt;code&gt;someNatVal&lt;/code&gt; para enteros y &lt;code&gt;someSymbolVal&lt;/code&gt; para cadenas:</target>
        </trans-unit>
        <trans-unit id="c3907b0597bf6218c2db4b87b9bbdc3553feab8b" translate="yes" xml:space="preserve">
          <source>It is also possible to define pattern synonyms which behave just like record constructors. The syntax for doing this is as follows:</source>
          <target state="translated">También es posible definir sinónimos de patrones que se comportan como constructores de registros.La sintaxis para hacer esto es la siguiente:</target>
        </trans-unit>
        <trans-unit id="8a1490fcee5f36e805c28234c40d20c616d4e3dd" translate="yes" xml:space="preserve">
          <source>It is also possible to use the special token &lt;code&gt;..&lt;/code&gt; in an export list to mean all currently bundled constructors. For example, we could write:</source>
          <target state="translated">Tambi&amp;eacute;n es posible utilizar el token especial &lt;code&gt;..&lt;/code&gt; en una lista de exportaci&amp;oacute;n para hacer referencia a todos los constructores agrupados actualmente. Por ejemplo, podr&amp;iacute;amos escribir:</target>
        </trans-unit>
        <trans-unit id="de2873d8935eeb0018b07c42899bc06b831c7270" translate="yes" xml:space="preserve">
          <source>It is also useful in higher-order situations, such as &lt;code&gt;&lt;a href=&quot;ghc-base#v:map&quot;&gt;map&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt; 0) xs&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt;) fs xs&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n es &amp;uacute;til en situaciones de orden superior, como &lt;code&gt;&lt;a href=&quot;ghc-base#v:map&quot;&gt;map&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt; 0) xs&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt;) fs xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c12a49d05c28a1a98429762042c0b4412957c895" translate="yes" xml:space="preserve">
          <source>It is also useful in higher-order situations, such as &lt;code&gt;&lt;a href=&quot;ghc-list#v:map&quot;&gt;map&lt;/a&gt; (&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt; 0) xs&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;) fs xs&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n es &amp;uacute;til en situaciones de orden superior, como &lt;code&gt;&lt;a href=&quot;ghc-list#v:map&quot;&gt;map&lt;/a&gt; (&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt; 0) xs&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;) fs xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9f8f6803d1f1e2615e394efe93e5fe24a089463" translate="yes" xml:space="preserve">
          <source>It is also useful in higher-order situations, such as &lt;code&gt;&lt;a href=&quot;prelude#v:map&quot;&gt;map&lt;/a&gt; (&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt; 0) xs&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt;) fs xs&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n es &amp;uacute;til en situaciones de orden superior, como &lt;code&gt;&lt;a href=&quot;prelude#v:map&quot;&gt;map&lt;/a&gt; (&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt; 0) xs&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt;) fs xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="088801e51db959873ed393905491b4b94a913978" translate="yes" xml:space="preserve">
          <source>It is an error if &lt;code&gt;qualified&lt;/code&gt; appears in both pre and postpositive positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19c4298b2ba4d7e7e82d4c54f964b68bea6b25f" translate="yes" xml:space="preserve">
          <source>It is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericDrop&quot;&gt;genericDrop&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">Es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericDrop&quot;&gt;genericDrop&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general , en el que &lt;code&gt;n&lt;/code&gt; puede ser de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="8d61ccfca667f2076e6f4edcc5438cf1d81d7dfc" translate="yes" xml:space="preserve">
          <source>It is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericTake&quot;&gt;genericTake&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">Es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericTake&quot;&gt;genericTake&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general , en el que &lt;code&gt;n&lt;/code&gt; puede ser de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="4520db00eca14b103654198af329d717c9454f03" translate="yes" xml:space="preserve">
          <source>It is conceivable that this restriction will be relaxed in the future, but it is (at the time of writing) unclear if the difficulties around this scenario are theoretical (inferring this dependency would mean our type system does not have principal types) or merely practical (inferring this dependency is hard, given GHC&amp;rsquo;s implementation). So, GHC takes the easy way out and requires a little help from the user.</source>
          <target state="translated">Es concebible que esta restricci&amp;oacute;n se relaje en el futuro, pero (en el momento de escribir este art&amp;iacute;culo) no est&amp;aacute; claro si las dificultades en torno a este escenario son te&amp;oacute;ricas (inferir que esta dependencia significar&amp;iacute;a que nuestro sistema de tipos no tiene tipos principales) o simplemente pr&amp;aacute;cticas. (inferir esta dependencia es dif&amp;iacute;cil, dada la implementaci&amp;oacute;n de GHC). Por lo tanto, GHC toma el camino m&amp;aacute;s f&amp;aacute;cil y requiere un poco de ayuda del usuario.</target>
        </trans-unit>
        <trans-unit id="132f9840bd91416c5132ad1603ef8603660ce360" translate="yes" xml:space="preserve">
          <source>It is currently implemented as &lt;code&gt;Array ix (TVar e)&lt;/code&gt;, but it may be replaced by a more efficient implementation in the future (the interface will remain the same, however).</source>
          <target state="translated">Actualmente est&amp;aacute; implementado como &lt;code&gt;Array ix (TVar e)&lt;/code&gt; , pero puede ser reemplazado por una implementaci&amp;oacute;n m&amp;aacute;s eficiente en el futuro (la interfaz seguir&amp;aacute; siendo la misma, sin embargo).</target>
        </trans-unit>
        <trans-unit id="abf70f5f9fd5128dce09b9caedea975ee8e442ea" translate="yes" xml:space="preserve">
          <source>It is directly pointed to by a reachable object, other than a weak pointer object.</source>
          <target state="translated">Es apuntado directamente por un objeto alcanzable,que no sea un objeto puntero débil.</target>
        </trans-unit>
        <trans-unit id="261c2e926d54062731e9f0110ad18886ba23e42b" translate="yes" xml:space="preserve">
          <source>It is enabled with the extension &lt;a href=&quot;#extension-RecursiveDo&quot;&gt;&lt;code&gt;RecursiveDo&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;LANGUAGE RecursiveDo&lt;/code&gt; pragma. (The same extension enables both &lt;code&gt;mdo&lt;/code&gt;-notation, and the use of &lt;code&gt;rec&lt;/code&gt; blocks inside &lt;code&gt;do&lt;/code&gt; expressions.)</source>
          <target state="translated">Est&amp;aacute; habilitado con la extensi&amp;oacute;n &lt;a href=&quot;#extension-RecursiveDo&quot;&gt; &lt;code&gt;RecursiveDo&lt;/code&gt; &lt;/a&gt; , o el pragma &lt;code&gt;LANGUAGE RecursiveDo&lt;/code&gt; . (La misma extensi&amp;oacute;n habilita tanto la notaci&amp;oacute;n &lt;code&gt;mdo&lt;/code&gt; como el uso de bloques &lt;code&gt;rec&lt;/code&gt; dentro de las expresiones &lt;code&gt;do&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8bea23b077b757046e91df01a7b24e7e8a098f4b" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; when &lt;code&gt;n&lt;/code&gt; is not &lt;code&gt;_|_&lt;/code&gt; (&lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt;). &lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">Es equivalente a &lt;code&gt;(&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; cuando &lt;code&gt;n&lt;/code&gt; no es &lt;code&gt;_|_&lt;/code&gt; ( &lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt; ). &lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general , en el que &lt;code&gt;n&lt;/code&gt; puede ser de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="ab7ccf86caf74eb72038f169e079e1f3cf957dea" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;(&lt;a href=&quot;ghc-list#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;ghc-list#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; when &lt;code&gt;n&lt;/code&gt; is not &lt;code&gt;_|_&lt;/code&gt; (&lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt;). &lt;code&gt;&lt;a href=&quot;ghc-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">Es equivalente a &lt;code&gt;(&lt;a href=&quot;ghc-list#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;ghc-list#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; cuando &lt;code&gt;n&lt;/code&gt; no es &lt;code&gt;_|_&lt;/code&gt; ( &lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt; ). &lt;code&gt;&lt;a href=&quot;ghc-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general , en el que &lt;code&gt;n&lt;/code&gt; puede ser de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="dd5e739fd9707031c252768bfd31d106af48cdf7" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;(&lt;a href=&quot;ghc-oldlist#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;ghc-oldlist#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; when &lt;code&gt;n&lt;/code&gt; is not &lt;code&gt;_|_&lt;/code&gt; (&lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt;). &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">Es equivalente a &lt;code&gt;(&lt;a href=&quot;ghc-oldlist#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;ghc-oldlist#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; cuando &lt;code&gt;n&lt;/code&gt; no es &lt;code&gt;_|_&lt;/code&gt; ( &lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt; ). &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general , en el que &lt;code&gt;n&lt;/code&gt; puede ser de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="012b2268f894fbcad616c233a5e6e2ed1c0e90d2" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;(&lt;a href=&quot;prelude#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;prelude#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; when &lt;code&gt;n&lt;/code&gt; is not &lt;code&gt;_|_&lt;/code&gt; (&lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt;). &lt;code&gt;&lt;a href=&quot;prelude#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">Es equivalente a &lt;code&gt;(&lt;a href=&quot;prelude#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;prelude#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; cuando &lt;code&gt;n&lt;/code&gt; no es &lt;code&gt;_|_&lt;/code&gt; ( &lt;code&gt;splitAt _|_ xs = _|_&lt;/code&gt; ). &lt;code&gt;&lt;a href=&quot;prelude#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general , en el que &lt;code&gt;n&lt;/code&gt; puede ser de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="9043eb63209967eef7cab64b2197f94ad029bacc" translate="yes" xml:space="preserve">
          <source>It is essential that this operator be polymorphic in &lt;code&gt;e&lt;/code&gt; (representing the environment input to the command and thence to its subcommands) and satisfy the corresponding naturality property</source>
          <target state="translated">Es esencial que este operador sea polim&amp;oacute;rfico en &lt;code&gt;e&lt;/code&gt; (que representa la entrada del entorno al comando y de all&amp;iacute; a sus subcomandos) y satisfaga la propiedad de naturalidad correspondiente.</target>
        </trans-unit>
        <trans-unit id="51c5c05402feec4369eaf30cf0ebc2b274ccd329" translate="yes" xml:space="preserve">
          <source>It is expected that this operation will be replaced in a future revision of Haskell.</source>
          <target state="translated">Se espera que esta operación sea reemplazada en una futura revisión de Haskell.</target>
        </trans-unit>
        <trans-unit id="6893a464868ba3a09460037bfdb1c410934d2838" translate="yes" xml:space="preserve">
          <source>It is exported, or</source>
          <target state="translated">Se exporta,o</target>
        </trans-unit>
        <trans-unit id="6817f51eb52aa0729cda4c69d73c2002e9dd073d" translate="yes" xml:space="preserve">
          <source>It is fine for there to be a &lt;em&gt;potential&lt;/em&gt; of overlap (by including both declarations (A) and (B), say); an error is only reported if a particular constraint matches more than one.</source>
          <target state="translated">Est&amp;aacute; bien que haya un &lt;em&gt;potencial&lt;/em&gt; de superposici&amp;oacute;n (al incluir ambas declaraciones (A) y (B), digamos); un error solo se informa si una restricci&amp;oacute;n particular coincide con m&amp;aacute;s de una.</target>
        </trans-unit>
        <trans-unit id="b7b71de1d9414a5e4eec5ca37b04a89216d93297" translate="yes" xml:space="preserve">
          <source>It is important to note that the &lt;code&gt;-O*&lt;/code&gt; flags are roughly equivalent to combinations of &lt;code&gt;-f*&lt;/code&gt; flags. For this reason, the effect of the &lt;code&gt;-O*&lt;/code&gt; and &lt;code&gt;-f*&lt;/code&gt; flags is dependent upon the order in which they occur on the command line.</source>
          <target state="translated">Es importante notar que los indicadores &lt;code&gt;-O*&lt;/code&gt; son aproximadamente equivalentes a combinaciones de indicadores &lt;code&gt;-f*&lt;/code&gt; . Por esta raz&amp;oacute;n, el efecto de los indicadores &lt;code&gt;-O*&lt;/code&gt; y &lt;code&gt;-f*&lt;/code&gt; depende del orden en el que aparecen en la l&amp;iacute;nea de comandos.</target>
        </trans-unit>
        <trans-unit id="51fa236e42b180f8cc9073b0f8f9aa89b051ee47" translate="yes" xml:space="preserve">
          <source>It is large. Currently, GHC defines large object to be one that is at least as large as 80% of a 4KB block (i.e. at least 3277 bytes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a3f52225442e2fb709c4dba2b7ecf38df183fa" translate="yes" xml:space="preserve">
          <source>It is less well known that &lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; is not type safe. For example:</source>
          <target state="translated">Es menos conocido que &lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no es seguro de tipos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c74a81a688854157f5042c8facebe05cd92fb4c3" translate="yes" xml:space="preserve">
          <source>It is less well known that &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; is not type safe. For example:</source>
          <target state="translated">Es menos conocido que &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no es seguro de tipos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9df03deec4ca738a7771974c1c29751abc74608f" translate="yes" xml:space="preserve">
          <source>It is less well known that &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; is not type safe. For example:</source>
          <target state="translated">Es menos conocido que &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no es seguro de tipos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f4ac0712f3f7039b35bf7281360a3c3a76733fb1" translate="yes" xml:space="preserve">
          <source>It is necessary to iterate the case, rather than using an equational function definition. And the situation is even worse when the matching against &lt;code&gt;t&lt;/code&gt; is buried deep inside another pattern.</source>
          <target state="translated">Es necesario iterar el caso, en lugar de utilizar una definici&amp;oacute;n de funci&amp;oacute;n ecuacional. Y la situaci&amp;oacute;n es a&amp;uacute;n peor cuando la coincidencia con &lt;code&gt;t&lt;/code&gt; est&amp;aacute; enterrada profundamente en otro patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e8c666bcec97da91a1f2bdb19c53fb008bad01e9" translate="yes" xml:space="preserve">
          <source>It is no faster than using &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">No es m&amp;aacute;s r&amp;aacute;pido que usar &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7993dac004679b298df229876946bdc7ec3a34f8" translate="yes" xml:space="preserve">
          <source>It is no faster than using &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">No es m&amp;aacute;s r&amp;aacute;pido que usar &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c92a675066e21869f55b433afde1a20b5c0c7ab" translate="yes" xml:space="preserve">
          <source>It is not always required to provide instances for all the generic representation types, but omitting instances restricts the set of datatypes the functions will work for:</source>
          <target state="translated">No siempre es necesario proporcionar instancias para todos los tipos de representación genérica,pero la omisión de instancias restringe el conjunto de tipos de datos para los que funcionarán las funciones:</target>
        </trans-unit>
        <trans-unit id="b38df5c45ca172adcd27d8afb5aa470712828fe4" translate="yes" xml:space="preserve">
          <source>It is not guaranteed that a finalizer will eventually run, and no attempt is made to run outstanding finalizers when the program exits. Therefore finalizers should not be relied on to clean up resources - other methods (eg. exception handlers) should be employed, possibly in addition to finalizers.</source>
          <target state="translated">No se garantiza que un finalizador se ejecute eventualmente,y no se intenta ejecutar finalizadores pendientes cuando el programa sale.Por lo tanto,no se debe confiar en los finalizadores para limpiar los recursos,sino que se deben emplear otros métodos (por ejemplo,manejadores de excepciones),posiblemente además de los finalizadores.</target>
        </trans-unit>
        <trans-unit id="4bbc26cf551bb9424447020a8aa82fbb576e6ad5" translate="yes" xml:space="preserve">
          <source>It is not recommended to move all the contents of your Makefiles into your source files, but in some circumstances, the &lt;code&gt;OPTIONS_GHC&lt;/code&gt; pragma is the Right Thing. (If you use &lt;a href=&quot;separate_compilation#ghc-flag--keep-hc-file&quot;&gt;&lt;code&gt;-keep-hc-file&lt;/code&gt;&lt;/a&gt; and have &lt;code&gt;OPTION&lt;/code&gt; flags in your module, the &lt;code&gt;OPTIONS_GHC&lt;/code&gt; will get put into the generated &lt;code&gt;.hc&lt;/code&gt; file).</source>
          <target state="translated">No se recomienda mover todo el contenido de sus Makefiles a sus archivos fuente, pero en algunas circunstancias, el pragma &lt;code&gt;OPTIONS_GHC&lt;/code&gt; es lo correcto. (Si usa &lt;a href=&quot;separate_compilation#ghc-flag--keep-hc-file&quot;&gt; &lt;code&gt;-keep-hc-file&lt;/code&gt; &lt;/a&gt; y tiene indicadores &lt;code&gt;OPTION&lt;/code&gt; en su m&amp;oacute;dulo, &lt;code&gt;OPTIONS_GHC&lt;/code&gt; se colocar&amp;aacute; en el archivo &lt;code&gt;.hc&lt;/code&gt; generado ).</target>
        </trans-unit>
        <trans-unit id="1ff8d11ee1db2c3d0f7f66202dd22454f1e83d2b" translate="yes" xml:space="preserve">
          <source>It is often convenient to use these functions together with &lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt;&lt;/code&gt;, for instance &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;prelude#v:compare&quot;&gt;compare&lt;/a&gt;
&lt;a href=&quot;data-function#v:on&quot;&gt;`on`&lt;/a&gt; &lt;a href=&quot;prelude#v:fst&quot;&gt;fst&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">A menudo es conveniente utilizar estas funciones junto con &lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt;&lt;/code&gt; , por ejemplo &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;prelude#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;data-function#v:on&quot;&gt;`on`&lt;/a&gt; &lt;a href=&quot;prelude#v:fst&quot;&gt;fst&lt;/a&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f82e0aec46550ca7cd3c7a17a29d279383519fb8" translate="yes" xml:space="preserve">
          <source>It is often convenient to use these functions together with &lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt;&lt;/code&gt;, for instance &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;
 `on` &lt;a href=&quot;data-tuple#v:fst&quot;&gt;fst&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">A menudo es conveniente utilizar estas funciones junto con &lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt;&lt;/code&gt; , por ejemplo &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt; `on` &lt;a href=&quot;data-tuple#v:fst&quot;&gt;fst&lt;/a&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de502421480842aa548e8ea6ed82138595929709" translate="yes" xml:space="preserve">
          <source>It is often useful to change the interactive options, without having that option apply to loaded modules too. For example</source>
          <target state="translated">Suele ser útil cambiar las opciones interactivas,sin que esa opción se aplique también a los módulos cargados.Por ejemplo</target>
        </trans-unit>
        <trans-unit id="eb7c1cce1ac012520a592bb5beee1e418b094930" translate="yes" xml:space="preserve">
          <source>It is perfectly fine to declare new instances of &lt;code&gt;IsList&lt;/code&gt;, so that list notation becomes useful for completely new data types. Here are several example instances:</source>
          <target state="translated">Est&amp;aacute; perfectamente bien declarar nuevas instancias de &lt;code&gt;IsList&lt;/code&gt; , por lo que la notaci&amp;oacute;n de lista se vuelve &amp;uacute;til para tipos de datos completamente nuevos. Aqu&amp;iacute; hay varios ejemplos de casos:</target>
        </trans-unit>
        <trans-unit id="be592f31214a85aaa56dc9374e547bf23d2889f8" translate="yes" xml:space="preserve">
          <source>It is permitted to declare an ordinary algebraic data type using GADT-style syntax. What makes a GADT into a GADT is not the syntax, but rather the presence of data constructors whose result type is not just &lt;code&gt;T a b&lt;/code&gt;.</source>
          <target state="translated">Se permite declarar un tipo de datos algebraicos ordinarios utilizando una sintaxis de estilo GADT. Lo que convierte a un GADT en un GADT no es la sintaxis, sino la presencia de constructores de datos cuyo tipo de resultado no es solo &lt;code&gt;T a b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bbad91689683e0416e9939388b48991ae76e32a" translate="yes" xml:space="preserve">
          <source>It is possible for a splice to expand to an expression that contain names which are not in scope at the site of the splice. As an example, consider the following code:</source>
          <target state="translated">Es posible que un empalme se expanda a una expresión que contenga nombres que no estén en el ámbito de aplicación en el lugar del empalme.Como ejemplo,consideremos el siguiente código:</target>
        </trans-unit>
        <trans-unit id="bd581700f02bf98080ced3eb7d39eabe45397ae7" translate="yes" xml:space="preserve">
          <source>It is possible for the class defining the associated type to specify a default for associated type instances. So for example, this is OK:</source>
          <target state="translated">Es posible que la clase que define el tipo asociado especifique un valor por defecto para las instancias del tipo asociado.Así,por ejemplo,esto está bien:</target>
        </trans-unit>
        <trans-unit id="d7b7fcebbf4b65341979036fb2aefa0d104f093c" translate="yes" xml:space="preserve">
          <source>It is possible that by using packages you might end up with a program that contains two modules with the same name: perhaps you used a package &lt;code&gt;P&lt;/code&gt; that has a &lt;em&gt;hidden&lt;/em&gt; module &lt;code&gt;M&lt;/code&gt;, and there is also a module &lt;code&gt;M&lt;/code&gt; in your program. Or perhaps the dependencies of packages that you used contain some overlapping modules. Perhaps the program even contains multiple versions of a certain package, due to dependencies from other packages.</source>
          <target state="translated">Es posible que al usar paquetes termines con un programa que contiene dos m&amp;oacute;dulos con el mismo nombre: quiz&amp;aacute;s usaste un paquete &lt;code&gt;P&lt;/code&gt; que tiene un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; &lt;em&gt;oculto&lt;/em&gt; , y tambi&amp;eacute;n hay un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; en tu programa. O quiz&amp;aacute;s las dependencias de los paquetes que us&amp;oacute; contienen algunos m&amp;oacute;dulos superpuestos. Quiz&amp;aacute;s el programa incluso contiene m&amp;uacute;ltiples versiones de un determinado paquete, debido a dependencias de otros paquetes.</target>
        </trans-unit>
        <trans-unit id="e864f624e39a6372353b24e0e6a96c7344cbf60c" translate="yes" xml:space="preserve">
          <source>It is possible to ask the RTS to give some information about itself. To do this, use the &lt;a href=&quot;#rts-flag---info&quot;&gt;&lt;code&gt;--info&lt;/code&gt;&lt;/a&gt; flag, e.g.</source>
          <target state="translated">Es posible pedirle al RTS que brinde alguna informaci&amp;oacute;n sobre s&amp;iacute; mismo. Para hacer esto, use la bandera &lt;a href=&quot;#rts-flag---info&quot;&gt; &lt;code&gt;--info&lt;/code&gt; &lt;/a&gt; , por ejemplo</target>
        </trans-unit>
        <trans-unit id="1a5239595846ebef3ee721fce01d7bb0a22f2eef" translate="yes" xml:space="preserve">
          <source>It is possible to catch all exceptions, by using the type &lt;code&gt;&lt;a href=&quot;control-exception#t:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Es posible capturar todas las excepciones, utilizando el tipo &lt;code&gt;&lt;a href=&quot;control-exception#t:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8190060f870795d42df681cc02e5db01b634f194" translate="yes" xml:space="preserve">
          <source>It is possible to chain &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:Cont&quot;&gt;Cont&lt;/a&gt;&lt;/code&gt; blocks with &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">Es posible encadenar bloques &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:Cont&quot;&gt;Cont&lt;/a&gt;&lt;/code&gt; con &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb0b7b074cc3fe7c2ea69389e576baaaad67d773" translate="yes" xml:space="preserve">
          <source>It is possible to get intricate dependencies among the type variables introduced in a type or class declaration. Here is an example:</source>
          <target state="translated">Es posible obtener intrincadas dependencias entre las variables de tipo introducidas en una declaración de tipo o clase.He aquí un ejemplo:</target>
        </trans-unit>
        <trans-unit id="e9a188cc02db22c8ef5ca5e67b12a46a7c5847e2" translate="yes" xml:space="preserve">
          <source>It is possible to glean a little information about how well &lt;code&gt;par&lt;/code&gt; is working from the runtime statistics; see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;.</source>
          <target state="translated">Es posible obtener un poco de informaci&amp;oacute;n sobre qu&amp;eacute; tan bien est&amp;aacute; funcionando &lt;code&gt;par&lt;/code&gt; a partir de las estad&amp;iacute;sticas de tiempo de ejecuci&amp;oacute;n; consulte las &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;opciones de RTS para controlar el recolector de basura&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7f5b4a244218bab17d22682a2382ef6e25e7da7" translate="yes" xml:space="preserve">
          <source>It is possible to load shared libraries generated by GHC in other programs not written in Haskell, so they are suitable for using as plugins. Of course to construct a plugin you will have to use the FFI to export C functions and follow the rules about initialising the RTS. See &lt;a href=&quot;ffi-chap#ffi-library&quot;&gt;Making a Haskell library that can be called from foreign code&lt;/a&gt;. In particular you will probably want to export a C function from your shared library to initialise the plugin before any Haskell functions are called.</source>
          <target state="translated">Es posible cargar bibliotecas compartidas generadas por GHC en otros programas no escritos en Haskell, por lo que son adecuados para usar como complementos. Por supuesto, para construir un complemento, tendr&amp;aacute; que usar el FFI para exportar funciones C y seguir las reglas sobre la inicializaci&amp;oacute;n del RTS. Consulte &lt;a href=&quot;ffi-chap#ffi-library&quot;&gt;Creaci&amp;oacute;n de una biblioteca Haskell a la que se pueda llamar desde un c&amp;oacute;digo externo&lt;/a&gt; . En particular, probablemente querr&amp;aacute; exportar una funci&amp;oacute;n C de su biblioteca compartida para inicializar el complemento antes de que se llame a cualquier funci&amp;oacute;n de Haskell.</target>
        </trans-unit>
        <trans-unit id="98b901240fe3edf96da3bc8e1456eab7dfeb139d" translate="yes" xml:space="preserve">
          <source>It is possible to see the actual translation by using &lt;a href=&quot;debugging#ghc-flag--ddump-ds&quot;&gt;&lt;code&gt;-ddump-ds&lt;/code&gt;&lt;/a&gt;, but be warned, the output is quite verbose.</source>
          <target state="translated">Es posible ver la traducci&amp;oacute;n real usando &lt;a href=&quot;debugging#ghc-flag--ddump-ds&quot;&gt; &lt;code&gt;-ddump-ds&lt;/code&gt; &lt;/a&gt; , pero tenga cuidado , la salida es bastante detallada.</target>
        </trans-unit>
        <trans-unit id="97c0a8caadf3b66e62c0079cf1c23a1634b80cf9" translate="yes" xml:space="preserve">
          <source>It is possible to use the debugger to examine function values. When we are at a breakpoint and a function is in scope, the debugger cannot show you the source code for it; however, it is possible to get some information by applying it to some arguments and observing the result.</source>
          <target state="translated">Es posible utilizar el depurador para examinar los valores de las funciones.Cuando estamos en un punto de interrupción y una función está en alcance,el depurador no puede mostrarle el código fuente de la misma;sin embargo,es posible obtener alguna información aplicándola a algunos argumentos y observando el resultado.</target>
        </trans-unit>
        <trans-unit id="3cffc26f001e98a5eb62d64eab151b2a804d4ff6" translate="yes" xml:space="preserve">
          <source>It is possible to write a datatype that syntactically has a CUSK (according to the rules above) but actually requires some inference. As a very contrived example, consider</source>
          <target state="translated">Es posible escribir un tipo de datos que sintácticamente tiene un CUSK (según las reglas anteriores)pero que en realidad requiere alguna inferencia.Como un ejemplo muy artificioso,consideremos</target>
        </trans-unit>
        <trans-unit id="e70bf594eb18f38591c15ebb15e4986a31f41ffd" translate="yes" xml:space="preserve">
          <source>It is reasonably straightforward to set up a &lt;code&gt;Makefile&lt;/code&gt; to use with GHC, assuming you name your source files the same as your modules. Thus:</source>
          <target state="translated">Es razonablemente sencillo configurar un &lt;code&gt;Makefile&lt;/code&gt; para usar con GHC, asumiendo que le asigna a sus archivos fuente el mismo nombre que a sus m&amp;oacute;dulos. As&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9b1330a63d6eae27b2d3c5c63940929507d87108" translate="yes" xml:space="preserve">
          <source>It is recommended that the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is set to binary and &lt;code&gt;BlockBuffering&lt;/code&gt; mode. See &lt;code&gt;hSetBinaryMode&lt;/code&gt; and &lt;code&gt;hSetBuffering&lt;/code&gt;.</source>
          <target state="translated">Se recomienda que el &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; est&amp;eacute; configurado en modo binario y &lt;code&gt;BlockBuffering&lt;/code&gt; . Consulte &lt;code&gt;hSetBinaryMode&lt;/code&gt; y &lt;code&gt;hSetBuffering&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fec177bf1098e5f20ba1d64f4c20e2f4b753abf5" translate="yes" xml:space="preserve">
          <source>It is recommended that the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is set to binary and &lt;code&gt;BlockBuffering&lt;/code&gt; mode. See &lt;code&gt;hSetBinaryMode&lt;/code&gt; and &lt;code&gt;hSetBuffering&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7149585b59024bf632f3eb0345377f4daf71cd2" translate="yes" xml:space="preserve">
          <source>It is safe to coerce each of the methods of &lt;code&gt;C&lt;/code&gt;. That is, the missing last argument to &lt;code&gt;C&lt;/code&gt; is not used at a nominal role in any of the &lt;code&gt;C&lt;/code&gt;&amp;lsquo;s methods. (See &lt;a href=&quot;#roles&quot;&gt;Roles&lt;/a&gt;.)</source>
          <target state="translated">Es seguro para obligar a cada uno de los m&amp;eacute;todos de &lt;code&gt;C&lt;/code&gt; . Es decir, el &amp;uacute;ltimo argumento que falta para &lt;code&gt;C&lt;/code&gt; no se usa en un rol nominal en ninguno de los m&amp;eacute;todos de &lt;code&gt;C&lt;/code&gt; .(Ver &lt;a href=&quot;#roles&quot;&gt;Funciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="56ac92f5a75c017852235f851030bbab0ac262ac" translate="yes" xml:space="preserve">
          <source>It is safe to coerce each of the methods of &lt;code&gt;C&lt;/code&gt;. That is, the missing last argument to &lt;code&gt;C&lt;/code&gt; is not used at a nominal role in any of the &lt;code&gt;C&lt;/code&gt;&amp;rsquo;s methods. (See &lt;a href=&quot;#roles&quot;&gt;Roles&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dfdd6aaac4046a07ffe9ab81b043a38fb69661" translate="yes" xml:space="preserve">
          <source>It is safe to modify the floating-point unit state temporarily during a foreign call, because foreign calls are never pre-empted by GHC.</source>
          <target state="translated">Es seguro modificar el estado de la unidad de punto flotante temporalmente durante una llamada al extranjero,porque las llamadas al extranjero nunca se adelantan al GHC.</target>
        </trans-unit>
        <trans-unit id="96385c6227a3ac0109a62a1c3c011cd583d5d18e" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt; but slower. Its advantage is that it's compatible with C.</source>
          <target state="translated">Es similar a &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt; pero m&amp;aacute;s lento. Su ventaja es que es compatible con C.</target>
        </trans-unit>
        <trans-unit id="5091abc2477144e1329f7f3c467074952c1a5362" translate="yes" xml:space="preserve">
          <source>It is sometimes necessary to enable additional language extensions when deriving instances via &lt;a href=&quot;#extension-GeneralizedNewtypeDeriving&quot;&gt;&lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt;&lt;/a&gt;. For instance, consider a simple class and instance using &lt;a href=&quot;#extension-UnboxedTuples&quot;&gt;&lt;code&gt;UnboxedTuples&lt;/code&gt;&lt;/a&gt; syntax:</source>
          <target state="translated">A veces es necesario habilitar extensiones de idioma adicionales al derivar instancias a trav&amp;eacute;s de &lt;a href=&quot;#extension-GeneralizedNewtypeDeriving&quot;&gt; &lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt; &lt;/a&gt; . Por ejemplo, considere una clase e instancia simples usando la sintaxis &lt;a href=&quot;#extension-UnboxedTuples&quot;&gt; &lt;code&gt;UnboxedTuples&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5897d1d4639badd735a78c211392c1d9c37495e6" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to construct the argument name using &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; to ensure that we are reifying from the right namespace. For instance, in this context:</source>
          <target state="translated">A veces es &amp;uacute;til construir el nombre del argumento usando &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; para asegurar que estamos reificando desde el espacio de nombres correcto. Por ejemplo, en este contexto:</target>
        </trans-unit>
        <trans-unit id="000457152f4555357926c0b8afb516222a4f1c89" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to construct the argument name using &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; to ensure that we are reifying from the right namespace. For instance, in this context:</source>
          <target state="translated">A veces es &amp;uacute;til construir el nombre del argumento usando &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; para asegurar que estamos reificando desde el espacio de nombres correcto. Por ejemplo, en este contexto:</target>
        </trans-unit>
        <trans-unit id="c301fee90cdf2b960b35ddd17fe3eb6c2529a715" translate="yes" xml:space="preserve">
          <source>It is strongly recommended to use the safer, monadic API of &lt;a href=&quot;system-console-haskeline&quot;&gt;System.Console.Haskeline&lt;/a&gt;, if possible, rather than the explicit state management functions of this module.</source>
          <target state="translated">Se recomienda encarecidamente utilizar la API mon&amp;aacute;dica m&amp;aacute;s segura de &lt;a href=&quot;system-console-haskeline&quot;&gt;System.Console.Haskeline&lt;/a&gt; , si es posible, en lugar de las funciones expl&amp;iacute;citas de gesti&amp;oacute;n de estado de este m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="cc6c22c421bb7df31e233c1d7015be119c4e51ad" translate="yes" xml:space="preserve">
          <source>It is suitable for use as an internal representation for code that needs to keep many short strings in memory, but it &lt;em&gt;should not&lt;/em&gt; be used as an interchange type. That is, it should not generally be used in public APIs. The &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; type is usually more suitable for use in interfaces; it is more flexible and it supports a wide range of operations.</source>
          <target state="translated">Es adecuado para su uso como una representaci&amp;oacute;n interna de c&amp;oacute;digo que necesita mantener muchas cadenas cortas en la memoria, pero no &lt;em&gt;debe&lt;/em&gt; usarse como un tipo de intercambio. Es decir, generalmente no debe usarse en API p&amp;uacute;blicas. El tipo &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; suele ser m&amp;aacute;s adecuado para su uso en interfaces; es m&amp;aacute;s flexible y admite una amplia gama de operaciones.</target>
        </trans-unit>
        <trans-unit id="c44526ff00c2ea8f2f54194c36d403aa696761a1" translate="yes" xml:space="preserve">
          <source>It is suitable for use in pure code. In an IO context use &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEventIO&quot;&gt;traceEventIO&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Es adecuado para su uso en c&amp;oacute;digo puro. En un contexto IO, utilice &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEventIO&quot;&gt;traceEventIO&lt;/a&gt;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="dc72eb1fbfce672989fe724db9126c46b5b0adc1" translate="yes" xml:space="preserve">
          <source>It is the value or finalizer of a weak pointer object whose key is reachable.</source>
          <target state="translated">Es el valor o finalizador de un objeto puntero débil cuya clave es accesible.</target>
        </trans-unit>
        <trans-unit id="746eec2fe2a404a8fabc9e6abdf7648c07f8bc2b" translate="yes" xml:space="preserve">
          <source>It is undefined which thread receives this exception. GHC currently throws this to the same thread that receives &lt;code&gt;&lt;a href=&quot;control-exception#v:UserInterrupt&quot;&gt;UserInterrupt&lt;/a&gt;&lt;/code&gt;, but this may change in the future.</source>
          <target state="translated">No est&amp;aacute; definido qu&amp;eacute; hilo recibe esta excepci&amp;oacute;n. Actualmente, GHC lanza esto al mismo hilo que recibe &lt;code&gt;&lt;a href=&quot;control-exception#v:UserInterrupt&quot;&gt;UserInterrupt&lt;/a&gt;&lt;/code&gt; , pero esto puede cambiar en el futuro.</target>
        </trans-unit>
        <trans-unit id="d492c88d310512060b035b6ec8aa0a90e3614dfd" translate="yes" xml:space="preserve">
          <source>It is undefined which thread receives this exception. GHC currently throws this to the same thread that receives &lt;code&gt;&lt;a href=&quot;ghc-io-exception#v:UserInterrupt&quot;&gt;UserInterrupt&lt;/a&gt;&lt;/code&gt;, but this may change in the future.</source>
          <target state="translated">No est&amp;aacute; definido qu&amp;eacute; hilo recibe esta excepci&amp;oacute;n. Actualmente, GHC lanza esto al mismo hilo que recibe &lt;code&gt;&lt;a href=&quot;ghc-io-exception#v:UserInterrupt&quot;&gt;UserInterrupt&lt;/a&gt;&lt;/code&gt; , pero esto puede cambiar en el futuro.</target>
        </trans-unit>
        <trans-unit id="f6bfd659d3eb587c25350fe75cdd1cec239a674b" translate="yes" xml:space="preserve">
          <source>It is useful for GHC to optimise the definition of an INLINE function &lt;code&gt;f&lt;/code&gt; just like any other non-&lt;code&gt;INLINE&lt;/code&gt; function, in case the non-inlined version of &lt;code&gt;f&lt;/code&gt; is ultimately called. But we don&amp;rsquo;t want to inline the &lt;em&gt;optimised&lt;/em&gt; version of &lt;code&gt;f&lt;/code&gt;; a major reason for &lt;code&gt;INLINE&lt;/code&gt; pragmas is to expose functions in &lt;code&gt;f&lt;/code&gt;&amp;lsquo;s RHS that have rewrite rules, and it&amp;rsquo;s no good if those functions have been optimised away.</source>
          <target state="translated">Es &amp;uacute;til que GHC optimice la definici&amp;oacute;n de una funci&amp;oacute;n INLINE &lt;code&gt;f&lt;/code&gt; como cualquier otra funci&amp;oacute;n no &lt;code&gt;INLINE&lt;/code&gt; , en caso de que finalmente se llame a la versi&amp;oacute;n no integrada de &lt;code&gt;f&lt;/code&gt; . Pero no queremos incorporar la versi&amp;oacute;n &lt;em&gt;optimizada&lt;/em&gt; de &lt;code&gt;f&lt;/code&gt; ; Una de las principales razones de los pragmas &lt;code&gt;INLINE&lt;/code&gt; es exponer funciones en el RHS de &lt;code&gt;f&lt;/code&gt; que tienen reglas de reescritura, y no es bueno si esas funciones se han optimizado.</target>
        </trans-unit>
        <trans-unit id="257ce5275a4cb48ad40d9428d4ab5e66cc348fde" translate="yes" xml:space="preserve">
          <source>It is useful for GHC to optimise the definition of an INLINE function &lt;code&gt;f&lt;/code&gt; just like any other non-&lt;code&gt;INLINE&lt;/code&gt; function, in case the non-inlined version of &lt;code&gt;f&lt;/code&gt; is ultimately called. But we don&amp;rsquo;t want to inline the &lt;em&gt;optimised&lt;/em&gt; version of &lt;code&gt;f&lt;/code&gt;; a major reason for &lt;code&gt;INLINE&lt;/code&gt; pragmas is to expose functions in &lt;code&gt;f&lt;/code&gt;&amp;rsquo;s RHS that have rewrite rules, and it&amp;rsquo;s no good if those functions have been optimised away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf84a0b4bca232dcfe172af6a8fe10d863549539" translate="yes" xml:space="preserve">
          <source>It is useful to think of &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; not as a way to completely prevent asynchronous exceptions, but as a way to switch from asynchronous mode to polling mode. The main difficulty with asynchronous exceptions is that they normally can occur anywhere, but within a &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; an asynchronous exception is only raised by operations that are interruptible (or call other interruptible operations). In many cases these operations may themselves raise exceptions, such as I/O errors, so the caller will usually be prepared to handle exceptions arising from the operation anyway. To perform an explicit poll for asynchronous exceptions inside &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, use &lt;code&gt;&lt;a href=&quot;control-exception#v:allowInterrupt&quot;&gt;allowInterrupt&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Es &amp;uacute;til pensar en la &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; no como una forma de evitar completamente las excepciones asincr&amp;oacute;nicas, sino como una forma de cambiar del modo asincr&amp;oacute;nico al modo de sondeo. La principal dificultad con las excepciones asincr&amp;oacute;nicas es que normalmente pueden ocurrir en cualquier lugar, pero dentro de una &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; una excepci&amp;oacute;n asincr&amp;oacute;nica solo se genera mediante operaciones que son interrumpibles (o que llaman a otras operaciones interrumpibles). En muchos casos, estas operaciones pueden generar por s&amp;iacute; mismas excepciones, como errores de E / S, por lo que la persona que llama generalmente estar&amp;aacute; preparada para manejar las excepciones que surjan de la operaci&amp;oacute;n de todos modos. Para realizar un sondeo expl&amp;iacute;cito para las excepciones asincr&amp;oacute;nicas dentro de la &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; , use &lt;code&gt;&lt;a href=&quot;control-exception#v:allowInterrupt&quot;&gt;allowInterrupt&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="def905b28141bd2cd23fb72f07484744ecd15628" translate="yes" xml:space="preserve">
          <source>It is worth noting that &lt;a href=&quot;#extension-UnliftedNewtypes&quot;&gt;&lt;code&gt;UnliftedNewtypes&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; required to give the data families themselves return kinds involving &lt;code&gt;TYPE&lt;/code&gt;, such as the &lt;code&gt;FooKey&lt;/code&gt; and &lt;code&gt;BarType&lt;/code&gt; examples above. The extension is only required for &lt;code&gt;newtype instance&lt;/code&gt; declarations, such as &lt;code&gt;FooKeyBoolC&lt;/code&gt; and &lt;code&gt;BarTypeWorkRepC&lt;/code&gt; above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c498521723f8812e03fd4118ff670333ce430a6f" translate="yes" xml:space="preserve">
          <source>It is worth noting with shared objects, when each package is built as a single shared object file, since a reference to a shared object costs an extra indirection, intra-package references are cheaper than inter-package references. Of course, this applies to the &lt;code&gt;main&lt;/code&gt; package as well.</source>
          <target state="translated">Vale la pena se&amp;ntilde;alar que con los objetos compartidos, cuando cada paquete se construye como un &amp;uacute;nico archivo de objeto compartido, dado que una referencia a un objeto compartido cuesta una indirecci&amp;oacute;n adicional, las referencias dentro del paquete son m&amp;aacute;s baratas que las referencias entre paquetes. Por supuesto, esto tambi&amp;eacute;n se aplica al paquete &lt;code&gt;main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92ef842f60f53412417acbb9c342eaa7f4e2205c" translate="yes" xml:space="preserve">
          <source>It isn&amp;rsquo;t always possible to terminate a Haskell thread forcibly: for example, the thread might be currently executing a foreign call, and we have no way to force the foreign call to complete. What&amp;rsquo;s more, the runtime must assume that in the worst case the Haskell code and runtime are about to be removed from memory (e.g. if this is a &lt;a href=&quot;win32-dlls#win32-dlls&quot;&gt;Windows DLL&lt;/a&gt;, &lt;code&gt;hs_exit()&lt;/code&gt; is normally called before unloading the DLL). So &lt;code&gt;hs_exit()&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; wait until all outstanding foreign calls return before it can return itself.</source>
          <target state="translated">No siempre es posible terminar un hilo de Haskell por la fuerza: por ejemplo, el hilo podr&amp;iacute;a estar ejecutando actualmente una llamada externa y no tenemos forma de forzar la finalizaci&amp;oacute;n de la llamada externa. Adem&amp;aacute;s, el tiempo de ejecuci&amp;oacute;n debe asumir que, en el peor de los casos, el c&amp;oacute;digo Haskell y el tiempo de ejecuci&amp;oacute;n est&amp;aacute;n a punto de eliminarse de la memoria (por ejemplo, si se trata de una &lt;a href=&quot;win32-dlls#win32-dlls&quot;&gt;DLL de Windows&lt;/a&gt; , normalmente se llama a &lt;code&gt;hs_exit()&lt;/code&gt; antes de descargar la DLL). Por &lt;code&gt;hs_exit()&lt;/code&gt; tanto, hs_exit () &lt;em&gt;debe&lt;/em&gt; esperar hasta que regresen todas las llamadas externas pendientes antes de que pueda regresar.</target>
        </trans-unit>
        <trans-unit id="8458bc24663504817189be36256a7f90d9fdfdc9" translate="yes" xml:space="preserve">
          <source>It loops indefinitely; every time a key is pressed, it will print that key as it was recognized by Haskeline. Pressing Ctrl-C will stop the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1f8368ea03e61951e96f7203ef6dd1ba202cc6" translate="yes" xml:space="preserve">
          <source>It may also output a C file which contains additional C functions to be linked into the program, together with a C header that gets included into the C code to which the Haskell module will be compiled (when compiled via C) and into the C file. These two files are created when the &lt;code&gt;#def&lt;/code&gt; construct is used (see below).</source>
          <target state="translated">Tambi&amp;eacute;n puede generar un archivo C que contiene funciones C adicionales que se vincular&amp;aacute;n al programa, junto con un encabezado C que se incluye en el c&amp;oacute;digo C en el que se compilar&amp;aacute; el m&amp;oacute;dulo Haskell (cuando se compila mediante C) y en el archivo C . Estos dos archivos se crean cuando se &lt;code&gt;#def&lt;/code&gt; construcci&amp;oacute;n #def (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="d09779bd37727473434368e2def3ed2ba44679a3" translate="yes" xml:space="preserve">
          <source>It may appear tempting to use &lt;code&gt;DllMain&lt;/code&gt; to call &lt;code&gt;hs_init&lt;/code&gt;/&lt;code&gt;hs_exit&lt;/code&gt;, but this won&amp;rsquo;t work (particularly if you compile with &lt;code&gt;-threaded&lt;/code&gt;). There are severe restrictions on which actions can be performed during &lt;code&gt;DllMain&lt;/code&gt;, and &lt;code&gt;hs_init&lt;/code&gt; violates these restrictions, which can lead to your DLL freezing during startup (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/3605&quot;&gt;#3605&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8136f6e215348988c49d3102c5c3052b920fc9de" translate="yes" xml:space="preserve">
          <source>It may appear tempting to use &lt;code&gt;DllMain&lt;/code&gt; to call &lt;code&gt;hs_init&lt;/code&gt;/&lt;code&gt;hs_exit&lt;/code&gt;, but this won&amp;rsquo;t work (particularly if you compile with &lt;code&gt;-threaded&lt;/code&gt;). There are severe restrictions on which actions can be performed during &lt;code&gt;DllMain&lt;/code&gt;, and &lt;code&gt;hs_init&lt;/code&gt; violates these restrictions, which can lead to your DLL freezing during startup (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/3605&quot;&gt;Issue #3605&lt;/a&gt;).</source>
          <target state="translated">Puede parecer tentador usar &lt;code&gt;DllMain&lt;/code&gt; para llamar a &lt;code&gt;hs_init&lt;/code&gt; / &lt;code&gt;hs_exit&lt;/code&gt; , pero esto no funcionar&amp;aacute; (especialmente si compila con &lt;code&gt;-threaded&lt;/code&gt; ). Existen severas restricciones sobre las acciones que se pueden realizar durante &lt;code&gt;DllMain&lt;/code&gt; , y &lt;code&gt;hs_init&lt;/code&gt; viola estas restricciones, lo que puede provocar que su DLL se congele durante el inicio (consulte el &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/3605&quot;&gt;Problema # 3605&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="863ecc94447ccc2697e7cef0c45280ea8b50466a" translate="yes" xml:space="preserve">
          <source>It may be useful to note that supposing</source>
          <target state="translated">Puede ser útil señalar que suponiendo que</target>
        </trans-unit>
        <trans-unit id="32c8a688305684e8a6eed99f28e0bf7debe34172" translate="yes" xml:space="preserve">
          <source>It might seem that &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt;/&lt;code&gt;import&lt;/code&gt; and &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#ghci-cmd-:add&quot;&gt;&lt;code&gt;:add&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt; do similar things: you can use both to bring a module into scope. However, there is a very important difference. GHCi is concerned with two sets of modules:</source>
          <target state="translated">Puede parecer que &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt; / &lt;code&gt;import&lt;/code&gt; y &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#ghci-cmd-:add&quot;&gt; &lt;code&gt;:add&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt; &lt;code&gt;:reload&lt;/code&gt; &lt;/a&gt; hacen cosas similares: puede usar ambos para traer un m&amp;oacute;dulo al alcance. Sin embargo, existe una diferencia muy importante. GHCi se ocupa de dos conjuntos de m&amp;oacute;dulos:</target>
        </trans-unit>
        <trans-unit id="8e2a509fc1a6cc8bacc29eac66f8d2b04611ec55" translate="yes" xml:space="preserve">
          <source>It must be that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; have the same kind. Note also that &lt;code&gt;b&lt;/code&gt; is implicitly declared in &lt;code&gt;c&lt;/code&gt;&amp;lsquo;s kind. Thus, according to our general principle, &lt;code&gt;b&lt;/code&gt; must come &lt;em&gt;before&lt;/em&gt;&lt;code&gt;k&lt;/code&gt;. However, &lt;code&gt;b&lt;/code&gt;&lt;em&gt;depends on&lt;/em&gt;&lt;code&gt;k&lt;/code&gt;. We thus reject &lt;code&gt;T2&lt;/code&gt; with a suitable error message.</source>
          <target state="translated">Debe ser que &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; tienen el mismo tipo. Tenga en cuenta tambi&amp;eacute;n que &lt;code&gt;b&lt;/code&gt; se declara impl&amp;iacute;citamente en el tipo de &lt;code&gt;c&lt;/code&gt; . Por tanto, de acuerdo con nuestro principio general, &lt;code&gt;b&lt;/code&gt; debe ir &lt;em&gt;antes que &lt;/em&gt; &lt;code&gt;k&lt;/code&gt; . Sin embargo, &lt;code&gt;b&lt;/code&gt; &lt;em&gt;depende de &lt;/em&gt; &lt;code&gt;k&lt;/code&gt; . Por tanto, rechazamos &lt;code&gt;T2&lt;/code&gt; con un mensaje de error adecuado.</target>
        </trans-unit>
        <trans-unit id="d71a3e4924a3c6c7be2ff4e99d0b3ace79cfc698" translate="yes" xml:space="preserve">
          <source>It must be that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; have the same kind. Note also that &lt;code&gt;b&lt;/code&gt; is implicitly declared in &lt;code&gt;c&lt;/code&gt;&amp;rsquo;s kind. Thus, according to our general principle, &lt;code&gt;b&lt;/code&gt; must come &lt;em&gt;before&lt;/em&gt;&lt;code&gt;k&lt;/code&gt;. However, &lt;code&gt;b&lt;/code&gt;&lt;em&gt;depends on&lt;/em&gt;&lt;code&gt;k&lt;/code&gt;. We thus reject &lt;code&gt;T2&lt;/code&gt; with a suitable error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6086959b33661c7e9581d7038f036b9687ffb684" translate="yes" xml:space="preserve">
          <source>It returns the number of bytes actually read. This may be zero if EOF was reached before any data was read (or if &lt;code&gt;count&lt;/code&gt; is zero).</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de bytes realmente le&amp;iacute;dos. Esto puede ser cero si se alcanz&amp;oacute; EOF antes de leer los datos (o si el &lt;code&gt;count&lt;/code&gt; es cero).</target>
        </trans-unit>
        <trans-unit id="ad092a31e7b069ad5452e1dfd822db5e1ae8fc9d" translate="yes" xml:space="preserve">
          <source>It serves to keep the internal states of different invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; separate from each other and from invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Sirve para mantener separados los estados internos de diferentes invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; y de las invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="211c65f9fdb230b192954d5e3e492b544e937b6c" translate="yes" xml:space="preserve">
          <source>It serves to keep the internal states of different invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; separate from each other and from invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Sirve para mantener separados los estados internos de diferentes invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; y de las invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5294a2ca52cc071e8a324a9f8f6ff0a8cae15e2b" translate="yes" xml:space="preserve">
          <source>It serves to keep the internal states of different invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; separate from each other and from invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Sirve para mantener separados los estados internos de diferentes invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; y de las invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2289a3219a1ed755ecc57cda3383343eb8709ef1" translate="yes" xml:space="preserve">
          <source>It serves to keep the internal states of different invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; separate from each other and from invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Sirve para mantener separados los estados internos de diferentes invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; y de las invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b435c38ec10dc76b668c9ec854526a598ebffc36" translate="yes" xml:space="preserve">
          <source>It serves to keep the internal states of different invocations of &lt;code&gt;&lt;a href=&quot;ghc-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; separate from each other and from invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Sirve para mantener separados los estados internos de diferentes invocaciones de &lt;code&gt;&lt;a href=&quot;ghc-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; y de las invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29550fa0ca4c9e4aac212d854a9fc9caacdfa683" translate="yes" xml:space="preserve">
          <source>It turns out that such recursive bindings do indeed make sense for a variety of monads, but not all. In particular, recursion in this sense requires a fixed-point operator for the underlying monad, captured by the &lt;code&gt;mfix&lt;/code&gt; method of the &lt;code&gt;MonadFix&lt;/code&gt; class, defined in &lt;code&gt;Control.Monad.Fix&lt;/code&gt; as follows:</source>
          <target state="translated">Resulta que tales vinculaciones recursivas tienen sentido para una variedad de m&amp;oacute;nadas, pero no para todas. En particular, la recursividad en este sentido requiere un operador de punto fijo para la m&amp;oacute;nada subyacente, capturado por el m&amp;eacute;todo &lt;code&gt;mfix&lt;/code&gt; de la clase &lt;code&gt;MonadFix&lt;/code&gt; , definido en &lt;code&gt;Control.Monad.Fix&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="dc2967b7223e4a80cc2b7ede4a86ad6f728237bf" translate="yes" xml:space="preserve">
          <source>It was allocated by &lt;code&gt;newPinnedByteArray#&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5052bd2b0b2688526179e347a8f93097a86fbaf" translate="yes" xml:space="preserve">
          <source>It will create &lt;code&gt;.ghci-history&lt;/code&gt; in current folder where GHCi is launched.</source>
          <target state="translated">Se va a crear &lt;code&gt;.ghci-history&lt;/code&gt; de la carpeta actual en la que se puso en marcha GHCi.</target>
        </trans-unit>
        <trans-unit id="e89d7af8e2aa6670470982a682725f5658cf083d" translate="yes" xml:space="preserve">
          <source>It will then pass the individual entries and pairs of entries to &lt;code&gt;g1&lt;/code&gt;, &lt;code&gt;g2&lt;/code&gt;, or &lt;code&gt;f&lt;/code&gt; as appropriate:</source>
          <target state="translated">Luego pasar&amp;aacute; las entradas individuales y los pares de entradas a &lt;code&gt;g1&lt;/code&gt; , &lt;code&gt;g2&lt;/code&gt; o &lt;code&gt;f&lt;/code&gt; seg&amp;uacute;n corresponda:</target>
        </trans-unit>
        <trans-unit id="1540cae372d4d44e85661059bc790134f5ab7b8e" translate="yes" xml:space="preserve">
          <source>It would be better for GHCi to record what the default settings in each module are, and use those of the &amp;lsquo;current&amp;rsquo; module (whatever that is).</source>
          <target state="translated">Ser&amp;iacute;a mejor para GHCi registrar cu&amp;aacute;les son las configuraciones predeterminadas en cada m&amp;oacute;dulo y usar las del m&amp;oacute;dulo 'actual' (cualquiera que sea).</target>
        </trans-unit>
        <trans-unit id="7f8111ac56899714c85e5abca35105627760e1bf" translate="yes" xml:space="preserve">
          <source>It would be quite sensible to &lt;em&gt;compile&lt;/em&gt; on a fast machine using remotely-mounted disks; then &lt;em&gt;link&lt;/em&gt; on a slow machine that had your disks directly mounted.</source>
          <target state="translated">Ser&amp;iacute;a bastante sensato &lt;em&gt;compilar&lt;/em&gt; en una m&amp;aacute;quina r&amp;aacute;pida utilizando discos montados de forma remota; luego &lt;em&gt;vincular&lt;/em&gt; en una m&amp;aacute;quina lenta que ten&amp;iacute;a sus discos montados directamente.</target>
        </trans-unit>
        <trans-unit id="763a82435cb1c586af5397dec827eab8a6fea09e" translate="yes" xml:space="preserve">
          <source>It would be undesirable if &lt;a href=&quot;glasgow_exts#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt; were to apply to loaded modules too: that might cause a compilation error, but more commonly it will cause extra recompilation, because GHC will think that it needs to recompile the module because the flags have changed.</source>
          <target state="translated">No ser&amp;iacute;a deseable que &lt;a href=&quot;glasgow_exts#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; &lt;/a&gt; se aplicara tambi&amp;eacute;n a los m&amp;oacute;dulos cargados: eso podr&amp;iacute;a causar un error de compilaci&amp;oacute;n, pero m&amp;aacute;s com&amp;uacute;nmente causar&amp;aacute; una recompilaci&amp;oacute;n adicional, porque GHC pensar&amp;aacute; que necesita recompilar el m&amp;oacute;dulo porque los indicadores han cambiado.</target>
        </trans-unit>
        <trans-unit id="738c3efaf58c34fc713cd68ed8f30d5430283ea5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s all the better if a function is strict in a single-constructor type (a type with only one data-constructor; for example, tuples are single-constructor types).</source>
          <target state="translated">Es mucho mejor si una funci&amp;oacute;n es estricta en un tipo de constructor &amp;uacute;nico (un tipo con un solo constructor de datos; por ejemplo, las tuplas son tipos de constructor &amp;uacute;nico).</target>
        </trans-unit>
        <trans-unit id="7aca502a5780a7008e4ab06793361208292555d4" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to have mutually recursive bindings, using the new &lt;code&gt;rec&lt;/code&gt; keyword, as in the following example:</source>
          <target state="translated">Tambi&amp;eacute;n es posible tener enlaces recursivos mutuamente, utilizando la nueva palabra clave &lt;code&gt;rec&lt;/code&gt; , como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="923f83a378500c5bf707083388bd8a5d2d3dc878" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s ok to say &lt;code&gt;a==b&lt;/code&gt; or &lt;code&gt;p==q&lt;/code&gt;, but &lt;code&gt;a==q&lt;/code&gt; is wrong because it equates the two distinct types arising from the two &lt;code&gt;Baz1&lt;/code&gt; constructors.</source>
          <target state="translated">Est&amp;aacute; bien decir &lt;code&gt;a==b&lt;/code&gt; o &lt;code&gt;p==q&lt;/code&gt; , pero &lt;code&gt;a==q&lt;/code&gt; es err&amp;oacute;neo porque equipara los dos tipos distintos derivados de las dos &lt;code&gt;Baz1&lt;/code&gt; constructores.</target>
        </trans-unit>
        <trans-unit id="f7c6fdc0025c696839bbcb4d3a4afbd97412dcd6" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s ugly and slow.</source>
          <target state="translated">Es feo y lento.</target>
        </trans-unit>
        <trans-unit id="514128120e37ddc76a0f201865baee5082dd51ad" translate="yes" xml:space="preserve">
          <source>It's recommended to avoid calling &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:exportIntegerToMutableByteArray&quot;&gt;exportIntegerToMutableByteArray&lt;/a&gt;&lt;/code&gt; for small integers as this function would currently convert those to big integers in msbf to call &lt;code&gt;mpz_export()&lt;/code&gt;.</source>
          <target state="translated">Se recomienda evitar llamar a &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:exportIntegerToMutableByteArray&quot;&gt;exportIntegerToMutableByteArray&lt;/a&gt;&lt;/code&gt; para enteros peque&amp;ntilde;os, ya que esta funci&amp;oacute;n actualmente los convertir&amp;iacute;a en enteros grandes en msbf para llamar a &lt;code&gt;mpz_export()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cee3c6301483587eda64e5ab687af2ed85576f1" translate="yes" xml:space="preserve">
          <source>It's worth noting that the size of the result may be smaller if, for some &lt;code&gt;(x,y)&lt;/code&gt;, &lt;code&gt;x /= y &amp;amp;&amp;amp; f x == f y&lt;/code&gt;</source>
          <target state="translated">Vale la pena se&amp;ntilde;alar que el tama&amp;ntilde;o del resultado puede ser menor si, para algunos &lt;code&gt;(x,y)&lt;/code&gt; , &lt;code&gt;x /= y &amp;amp;&amp;amp; f x == f y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee6ff3dfa9bf63053b4c7f482ac4fa5228abd4d4" translate="yes" xml:space="preserve">
          <source>Item (IsList)</source>
          <target state="translated">Artículo (IsList)</target>
        </trans-unit>
        <trans-unit id="091b8d78ec3176b66348479ab0a7eba113756aa7" translate="yes" xml:space="preserve">
          <source>Iter</source>
          <target state="translated">Iter</target>
        </trans-unit>
        <trans-unit id="912a927d3c272044f83f97a4a9348c2b0b737b5e" translate="yes" xml:space="preserve">
          <source>Iterative construction</source>
          <target state="translated">Construcción iterativa</target>
        </trans-unit>
        <trans-unit id="15efe73a427c5593245c3e378d2d1f213eb9ce90" translate="yes" xml:space="preserve">
          <source>Ix</source>
          <target state="translated">Ix</target>
        </trans-unit>
        <trans-unit id="c00d287ecb04edccb5fea26b5b72064393528f73" translate="yes" xml:space="preserve">
          <source>J. Nievergelt and E.M. Reingold, &quot;&lt;em&gt;Binary search trees of bounded balance&lt;/em&gt;&quot;, SIAM journal of computing 2(1), March 1973.</source>
          <target state="translated">J. Nievergelt y EM Reingold, &quot; &lt;em&gt;&amp;Aacute;rboles de b&amp;uacute;squeda binarios de equilibrio acotado&lt;/em&gt; &quot;, SIAM journal of computing 2 (1), marzo de 1973.</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="13f21e57d0b030c88aa84181b98abab96e4c801a" translate="yes" xml:space="preserve">
          <source>JavaScriptFFI</source>
          <target state="translated">JavaScriptFFI</target>
        </trans-unit>
        <trans-unit id="35f6feec54354858f697f87aaa0e0984f56e1720" translate="yes" xml:space="preserve">
          <source>Johan Tibell &amp;lt;johan.tibell@gmail.com&amp;gt;</source>
          <target state="translated">Johan Tibell &amp;lt;johan.tibell@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="136e9e756d575af36e49778c9cc45e9f8a0f90f2" translate="yes" xml:space="preserve">
          <source>Join a drive and the rest of the path.</source>
          <target state="translated">Únete a un viaje y al resto del camino.</target>
        </trans-unit>
        <trans-unit id="81e4e655a28bbcb077ce4558a222bf0f0a8cba3c" translate="yes" xml:space="preserve">
          <source>Join path elements back together.</source>
          <target state="translated">Unir los elementos del camino de nuevo.</target>
        </trans-unit>
        <trans-unit id="382ff1702ad460b913c77bbc040227d10fae8bb9" translate="yes" xml:space="preserve">
          <source>Jose Pedro Magalhaes, Atze Dijkstra, Johan Jeuring, and Andres Loeh. &lt;a href=&quot;http://dreixel.net/research/pdf/gdmh.pdf&quot;&gt;A generic deriving mechanism for Haskell&lt;/a&gt;. Proceedings of the third ACM Haskell symposium on Haskell (Haskell&amp;lsquo;2010), pp. 37-48, ACM, 2010.</source>
          <target state="translated">Jose Pedro Magalhaes, Atze Dijkstra, Johan Jeuring y Andres Loeh. &lt;a href=&quot;http://dreixel.net/research/pdf/gdmh.pdf&quot;&gt;Un mecanismo de derivaci&amp;oacute;n gen&amp;eacute;rico para Haskell&lt;/a&gt; . Actas del tercer simposio de ACM Haskell sobre Haskell (Haskell'2010), p&amp;aacute;gs. 37-48, ACM, 2010.</target>
        </trans-unit>
        <trans-unit id="8cce6d3a7b7f612b30abbeb5c7bc5be263acd7cb" translate="yes" xml:space="preserve">
          <source>Jose Pedro Magalhaes, Atze Dijkstra, Johan Jeuring, and Andres Loeh. &lt;a href=&quot;http://dreixel.net/research/pdf/gdmh.pdf&quot;&gt;A generic deriving mechanism for Haskell&lt;/a&gt;. Proceedings of the third ACM Haskell symposium on Haskell (Haskell&amp;rsquo;2010), pp. 37-48, ACM, 2010.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9361b1c736dd39f64c18be1fbaf85ce313be120e" translate="yes" xml:space="preserve">
          <source>Jules Hedges. &quot;Monad transformers for backtracking search&quot;. In &lt;em&gt;Proceedings of MSFP 2014&lt;/em&gt;. &lt;a href=&quot;https://arxiv.org/abs/1406.2058&quot;&gt;https://arxiv.org/abs/1406.2058&lt;/a&gt;</source>
          <target state="translated">Jules Hedges. &quot;Transformadores de m&amp;oacute;nada para la b&amp;uacute;squeda de retroceso&quot;. En &lt;em&gt;Actas de MSFP 2014&lt;/em&gt; . &lt;a href=&quot;https://arxiv.org/abs/1406.2058&quot;&gt;https://arxiv.org/abs/1406.2058&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e1532d85b8e7a783cd0eeb4f032f73947230558" translate="yes" xml:space="preserve">
          <source>Just as &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:splitPath&quot;&gt;splitPath&lt;/a&gt;&lt;/code&gt;, but don't add the trailing slashes to each element.</source>
          <target state="translated">Igual que &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:splitPath&quot;&gt;splitPath&lt;/a&gt;&lt;/code&gt; , pero no agregue las barras diagonales finales a cada elemento.</target>
        </trans-unit>
        <trans-unit id="e1b8cd9be8a4a56d3e279168c48e322c5a8f7d5f" translate="yes" xml:space="preserve">
          <source>Just as &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:splitPath&quot;&gt;splitPath&lt;/a&gt;&lt;/code&gt;, but don't add the trailing slashes to each element.</source>
          <target state="translated">Igual que &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:splitPath&quot;&gt;splitPath&lt;/a&gt;&lt;/code&gt; , pero no agregue las barras diagonales finales a cada elemento.</target>
        </trans-unit>
        <trans-unit id="bf4d570e4ce8e1639edd6b13c9e338ab1cfd25c6" translate="yes" xml:space="preserve">
          <source>Just as compiling &lt;code&gt;A.hs&lt;/code&gt; produces an interface file &lt;code&gt;A.hi&lt;/code&gt;, and an object file &lt;code&gt;A.o&lt;/code&gt;, so compiling &lt;code&gt;A.hs-boot&lt;/code&gt; produces an interface file &lt;code&gt;A.hi-boot&lt;/code&gt;, and a pseudo-object file &lt;code&gt;A.o-boot&lt;/code&gt;:</source>
          <target state="translated">As&amp;iacute; como la compilaci&amp;oacute;n de &lt;code&gt;A.hs&lt;/code&gt; produce un archivo de interfaz &lt;code&gt;A.hi&lt;/code&gt; y un archivo de objeto &lt;code&gt;A.o&lt;/code&gt; , la compilaci&amp;oacute;n de &lt;code&gt;A.hs-boot&lt;/code&gt; produce un archivo de interfaz &lt;code&gt;A.hi-boot&lt;/code&gt; y un archivo de pseudoobjeto &lt;code&gt;A.o-boot&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a7ab736e2bc63d2763e588e9ee6e30408ceb5d71" translate="yes" xml:space="preserve">
          <source>Just as in the case of Template Haskell (&lt;a href=&quot;#th-syntax&quot;&gt;Syntax&lt;/a&gt;), GHC gets confused if you put a quote mark before a data constructor whose second character is a quote mark. In this case, just put a space between the promotion quote and the data constructor:</source>
          <target state="translated">Al igual que en el caso de Template Haskell ( &lt;a href=&quot;#th-syntax&quot;&gt;Sintaxis&lt;/a&gt; ), GHC se confunde si coloca una comilla antes de un constructor de datos cuyo segundo car&amp;aacute;cter es una comilla. En este caso, simplemente ponga un espacio entre la cotizaci&amp;oacute;n de la promoci&amp;oacute;n y el constructor de datos:</target>
        </trans-unit>
        <trans-unit id="5b2209ab2f057867c4513a2da5e88701a39853ef" translate="yes" xml:space="preserve">
          <source>Just as in type inference, kind inference for recursive types can only use &lt;em&gt;monomorphic&lt;/em&gt; recursion. Consider this (contrived) example:</source>
          <target state="translated">Al igual que en la inferencia de tipos, la inferencia de tipos para tipos recursivos solo puede usar la recursividad &lt;em&gt;monom&amp;oacute;rfica&lt;/em&gt; . Considere este ejemplo (artificial):</target>
        </trans-unit>
        <trans-unit id="960a74070ce7ace8facd72bd4167a0b45f8388db" translate="yes" xml:space="preserve">
          <source>Just as you wouldn&amp;rsquo;t define a &lt;code&gt;Monad&lt;/code&gt; instance using the do-notation, you shouldn&amp;rsquo;t define &lt;code&gt;Functor&lt;/code&gt; or &lt;code&gt;Applicative&lt;/code&gt; instance using do-notation (when using &lt;code&gt;ApplicativeDo&lt;/code&gt;) either. The correct way to define these instances in terms of &lt;code&gt;Monad&lt;/code&gt; is to use the &lt;code&gt;Monad&lt;/code&gt; operations directly, e.g.</source>
          <target state="translated">As&amp;iacute; como no definir&amp;iacute;a una instancia de &lt;code&gt;Monad&lt;/code&gt; usando la notaci&amp;oacute;n do, tampoco deber&amp;iacute;a definir la instancia de &lt;code&gt;Functor&lt;/code&gt; o &lt;code&gt;Applicative&lt;/code&gt; usando la notaci&amp;oacute;n do (cuando use &lt;code&gt;ApplicativeDo&lt;/code&gt; ). La forma correcta de definir estas instancias en t&amp;eacute;rminos de &lt;code&gt;Monad&lt;/code&gt; es usar las operaciones de &lt;code&gt;Monad&lt;/code&gt; directamente, p. Ej.</target>
        </trans-unit>
        <trans-unit id="4b041bcf3276487951d5811d4b81addad99a067a" translate="yes" xml:space="preserve">
          <source>Just like signatures on value-level bindings, pattern synonym signatures can apply to more than one pattern. For instance,</source>
          <target state="translated">Al igual que las firmas en los enlaces de nivel de valor,las firmas de sinónimos de patrones pueden aplicarse a más de un patrón.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="7774d2f3942adcf9419122bc33bb2393a5f13dbf" translate="yes" xml:space="preserve">
          <source>Just like the other types of plugins, you can write &lt;code&gt;DynFlags&lt;/code&gt; plugins that can take and make use of some options that you can then specify using the &lt;code&gt;-fplugin-opt&lt;/code&gt; flag. In the &lt;code&gt;DynFlagsPlugin&lt;/code&gt; code from above, the said options would be available in the &lt;code&gt;opts&lt;/code&gt; argument of &lt;code&gt;hooksP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985acf2ff25e349dcabef121160378e3f752037f" translate="yes" xml:space="preserve">
          <source>Just like unsafePerformIO, but we inline it. Big performance gains as it exposes lots of things to further inlining. &lt;em&gt;Very unsafe&lt;/em&gt;. In particular, you should do no memory allocation inside an &lt;code&gt;&lt;a href=&quot;data-text-internal-unsafe#v:inlinePerformIO&quot;&gt;inlinePerformIO&lt;/a&gt;&lt;/code&gt; block. On Hugs this is just &lt;code&gt;unsafePerformIO&lt;/code&gt;.</source>
          <target state="translated">Al igual que unsafePerformIO, pero lo incorporamos. Grandes ganancias de rendimiento, ya que expone muchas cosas a una mayor integraci&amp;oacute;n. &lt;em&gt;Muy inseguro&lt;/em&gt; . En particular, no debe realizar ninguna asignaci&amp;oacute;n de memoria dentro de un bloque &lt;code&gt;&lt;a href=&quot;data-text-internal-unsafe#v:inlinePerformIO&quot;&gt;inlinePerformIO&lt;/a&gt;&lt;/code&gt; . En Hugs esto es simplemente &lt;code&gt;unsafePerformIO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fe74271062cab89acca9c50f817b98e381da7a1" translate="yes" xml:space="preserve">
          <source>Just like unsafePerformIO, but we inline it. Big performance gains as it exposes lots of things to further inlining. &lt;em&gt;Very unsafe&lt;/em&gt;. In particular, you should do no memory allocation inside an &lt;code&gt;&lt;a href=&quot;data-text-unsafe#v:inlinePerformIO&quot;&gt;inlinePerformIO&lt;/a&gt;&lt;/code&gt; block. On Hugs this is just &lt;code&gt;unsafePerformIO&lt;/code&gt;.</source>
          <target state="translated">Al igual que unsafePerformIO, pero lo incorporamos. Grandes ganancias de rendimiento, ya que expone muchas cosas a una mayor integraci&amp;oacute;n. &lt;em&gt;Muy inseguro&lt;/em&gt; . En particular, no debe realizar ninguna asignaci&amp;oacute;n de memoria dentro de un bloque &lt;code&gt;&lt;a href=&quot;data-text-unsafe#v:inlinePerformIO&quot;&gt;inlinePerformIO&lt;/a&gt;&lt;/code&gt; . En Hugs esto es simplemente &lt;code&gt;unsafePerformIO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a6159003781d783ae2d3e51421957681ceabbb1" translate="yes" xml:space="preserve">
          <source>Just x =&amp;gt; creates the file with the given modes, Nothing =&amp;gt; the file must exist.</source>
          <target state="translated">Solo x =&amp;gt; crea el archivo con los modos dados, Nada =&amp;gt; el archivo debe existir.</target>
        </trans-unit>
        <trans-unit id="7d2a7bff0abb0d0de4946434ea191a1498465dec" translate="yes" xml:space="preserve">
          <source>Justification</source>
          <target state="translated">Justification</target>
        </trans-unit>
        <trans-unit id="f0cab9d2f956f8044d800c15b8fc3a101bddd6b9" translate="yes" xml:space="preserve">
          <source>K1</source>
          <target state="translated">K1</target>
        </trans-unit>
        <trans-unit id="8db55d0eb9679e9399434774b00bd1464da87b23" translate="yes" xml:space="preserve">
          <source>KProxy</source>
          <target state="translated">KProxy</target>
        </trans-unit>
        <trans-unit id="39150f84927b15fbfb438bdbe30c28313b7dab8c" translate="yes" xml:space="preserve">
          <source>Keep intermediate &lt;code&gt;.hc&lt;/code&gt; files when doing &lt;code&gt;.hs&lt;/code&gt;-to-&lt;code&gt;.o&lt;/code&gt; compilations via &lt;a href=&quot;codegens#c-code-gen&quot;&gt;C&lt;/a&gt; (Note: &lt;code&gt;.hc&lt;/code&gt; files are only generated by &lt;a href=&quot;codegens#unreg&quot;&gt;unregisterised&lt;/a&gt; compilers).</source>
          <target state="translated">Mantenga los archivos &lt;code&gt;.hc&lt;/code&gt; intermedios cuando &lt;code&gt;.hs&lt;/code&gt; compilaciones .hs -to- &lt;code&gt;.o&lt;/code&gt; a trav&amp;eacute;s de &lt;a href=&quot;codegens#c-code-gen&quot;&gt;C&lt;/a&gt; (Nota: los archivos &lt;code&gt;.hc&lt;/code&gt; solo los generan compiladores &lt;a href=&quot;codegens#unreg&quot;&gt;no registrados&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0e96ed700c728faa5ce093e2ef58af4b206c758f" translate="yes" xml:space="preserve">
          <source>Keep intermediate &lt;code&gt;.hi&lt;/code&gt; files. This is the default. You may use &lt;code&gt;-no-keep-hi-files&lt;/code&gt; if you are not interested in the &lt;code&gt;.hi&lt;/code&gt; files.</source>
          <target state="translated">Mantenga archivos &lt;code&gt;.hi&lt;/code&gt; intermedios . Este es el predeterminado. Puede usar &lt;code&gt;-no-keep-hi-files&lt;/code&gt; si no est&amp;aacute; interesado en los archivos &lt;code&gt;.hi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65a6fabb3b1fdedf128544cf6e03be19810249f5" translate="yes" xml:space="preserve">
          <source>Keep intermediate &lt;code&gt;.ll&lt;/code&gt; files when doing &lt;code&gt;.hs&lt;/code&gt;-to-&lt;code&gt;.o&lt;/code&gt; compilations via &lt;a href=&quot;codegens#llvm-code-gen&quot;&gt;LLVM&lt;/a&gt; (Note: &lt;code&gt;.ll&lt;/code&gt; files aren&amp;rsquo;t generated when using the native code generator, you may need to use &lt;a href=&quot;phases#ghc-flag--fllvm&quot;&gt;&lt;code&gt;-fllvm&lt;/code&gt;&lt;/a&gt; to force them to be produced).</source>
          <target state="translated">Mantenga los archivos &lt;code&gt;.ll&lt;/code&gt; intermedios cuando &lt;code&gt;.hs&lt;/code&gt; compilaciones .hs -to- &lt;code&gt;.o&lt;/code&gt; a trav&amp;eacute;s de &lt;a href=&quot;codegens#llvm-code-gen&quot;&gt;LLVM&lt;/a&gt; (Nota: los archivos &lt;code&gt;.ll&lt;/code&gt; no se generan cuando se usa el generador de c&amp;oacute;digo nativo, es posible que deba usar &lt;a href=&quot;phases#ghc-flag--fllvm&quot;&gt; &lt;code&gt;-fllvm&lt;/code&gt; &lt;/a&gt; para forzar su producci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="bb4eaab08ea50b174cad4a0dcbfee09ebe256732" translate="yes" xml:space="preserve">
          <source>Keep intermediate &lt;code&gt;.o&lt;/code&gt; files. This is the default. You may use &lt;code&gt;-no-keep-o-files&lt;/code&gt; if you are not interested in the &lt;code&gt;.o&lt;/code&gt; files.</source>
          <target state="translated">Mantenga archivos &lt;code&gt;.o&lt;/code&gt; intermedios . Este es el predeterminado. Puede usar &lt;code&gt;-no-keep-o-files&lt;/code&gt; si no est&amp;aacute; interesado en los archivos &lt;code&gt;.o&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8891247972e540d00a82a48db690001e72e39435" translate="yes" xml:space="preserve">
          <source>Keep intermediate &lt;code&gt;.s&lt;/code&gt; files.</source>
          <target state="translated">Mantenga archivos &lt;code&gt;.s&lt;/code&gt; intermedios .</target>
        </trans-unit>
        <trans-unit id="618d7b66d0a5da454a76c61a106bbc8b386980c1" translate="yes" xml:space="preserve">
          <source>Keep only the groups in which at least one of the classes is an &lt;strong&gt;interactive class&lt;/strong&gt; (defined below).</source>
          <target state="translated">Conserve solo los grupos en los que al menos una de las clases sea una &lt;strong&gt;clase interactiva&lt;/strong&gt; (definido a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="db48f9adf54739f6c307652ccc128abe44ee55b6" translate="yes" xml:space="preserve">
          <source>Keep the output of the &lt;code&gt;CPP&lt;/code&gt; pre-processor phase as &lt;code&gt;.hscpp&lt;/code&gt; files. A &lt;code&gt;.hscpp&lt;/code&gt; file is only created, if a module gets compiled and uses the C pre-processor.</source>
          <target state="translated">Mantenga la salida de la fase del preprocesador &lt;code&gt;CPP&lt;/code&gt; como archivos &lt;code&gt;.hscpp&lt;/code&gt; . Un archivo &lt;code&gt;.hscpp&lt;/code&gt; solo se crea si un m&amp;oacute;dulo se compila y usa el preprocesador C.</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="45185a850411c05190d8644455ed7e28be79f32f" translate="yes" xml:space="preserve">
          <source>Key arguments are evaluated to WHNF</source>
          <target state="translated">Los argumentos clave son evaluados a WHNF</target>
        </trans-unit>
        <trans-unit id="108b398a8a710d3b21b74c853623729fec5c66a8" translate="yes" xml:space="preserve">
          <source>KeyboardInterrupts</source>
          <target state="translated">KeyboardInterrupts</target>
        </trans-unit>
        <trans-unit id="7b932e7704c56ac279074adf9cbeed98bb90a289" translate="yes" xml:space="preserve">
          <source>Kill</source>
          <target state="translated">Kill</target>
        </trans-unit>
        <trans-unit id="e00ac23f2ac2ff73ad4f3c4b263d6c5bbfb80190" translate="yes" xml:space="preserve">
          <source>Kind</source>
          <target state="translated">Kind</target>
        </trans-unit>
        <trans-unit id="f6f11ccdb22e9dbd420ca8b73fb865e1a73beb02" translate="yes" xml:space="preserve">
          <source>Kind heterogeneous propositional equality. Like &lt;code&gt;&lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;a :~~: b&lt;/code&gt; is inhabited by a terminating value if and only if &lt;code&gt;a&lt;/code&gt; is the same type as &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Igualdad proposicional heterog&amp;eacute;nea amable. Como &lt;code&gt;&lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;a :~~: b&lt;/code&gt; est&amp;aacute; habitado por un valor de terminaci&amp;oacute;n si y s&amp;oacute;lo si &lt;code&gt;a&lt;/code&gt; es del mismo tipo que &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9add9e559da1de515054945468cae650868cb37" translate="yes" xml:space="preserve">
          <source>Kind heterogeneous propositional equality. Like &lt;code&gt;&lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;a :~~: b&lt;/code&gt; is inhabited by a terminating value if and only if &lt;code&gt;a&lt;/code&gt; is the same type as &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Igualdad proposicional heterog&amp;eacute;nea amable. Como &lt;code&gt;&lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;a :~~: b&lt;/code&gt; est&amp;aacute; habitado por un valor de terminaci&amp;oacute;n si y s&amp;oacute;lo si &lt;code&gt;a&lt;/code&gt; es del mismo tipo que &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b9fefce453a09c064d0416bf50a8fdee9b8f03a" translate="yes" xml:space="preserve">
          <source>Kind heterogeneous propositional equality. Like &lt;code&gt;&lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;a :~~: b&lt;/code&gt; is inhabited by a terminating value if and only if &lt;code&gt;a&lt;/code&gt; is the same type as &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Igualdad proposicional heterog&amp;eacute;nea amable. Como &lt;code&gt;&lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;a :~~: b&lt;/code&gt; est&amp;aacute; habitado por un valor de terminaci&amp;oacute;n si y s&amp;oacute;lo si &lt;code&gt;a&lt;/code&gt; es del mismo tipo que &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e2202b3014628a192e63059a442e7689aab808a" translate="yes" xml:space="preserve">
          <source>Kind of filling or padding to be done.</source>
          <target state="translated">Una especie de relleno o acolchado que hay que hacer.</target>
        </trans-unit>
        <trans-unit id="15d871de56a82992077494c7e2360de27a218760" translate="yes" xml:space="preserve">
          <source>Kind representations</source>
          <target state="translated">Representaciones amables</target>
        </trans-unit>
        <trans-unit id="cc4cf8a32a2bc0862e7d482199843cd1ee70873c" translate="yes" xml:space="preserve">
          <source>Kind variables can also be quantified in &lt;em&gt;visible&lt;/em&gt; positions. Consider the following two examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a4407d441254c502eba426c88d24ec2721a6ab" translate="yes" xml:space="preserve">
          <source>Kind-equalities cannot be deferred, e.g.</source>
          <target state="translated">Las desigualdades de género no pueden aplazarse,por ejemplo</target>
        </trans-unit>
        <trans-unit id="db7f1b7b324213bc7b9a60bf048eeec0dafa8a82" translate="yes" xml:space="preserve">
          <source>KindQ</source>
          <target state="translated">KindQ</target>
        </trans-unit>
        <trans-unit id="a0e1adf2caacb11f0a7f30552166686185a261b9" translate="yes" xml:space="preserve">
          <source>KindRep</source>
          <target state="translated">KindRep</target>
        </trans-unit>
        <trans-unit id="c53c4c21817ef2a1d4f60e2cceae1eb6be52eda4" translate="yes" xml:space="preserve">
          <source>KindSignatures</source>
          <target state="translated">KindSignatures</target>
        </trans-unit>
        <trans-unit id="1f207bb143ebf53a96f07da496ea625fd1ed3952" translate="yes" xml:space="preserve">
          <source>Kinds</source>
          <target state="translated">Kinds</target>
        </trans-unit>
        <trans-unit id="a4c865932a7f3d9b055f979bca5ede567a926edc" translate="yes" xml:space="preserve">
          <source>Kleisli</source>
          <target state="translated">Kleisli</target>
        </trans-unit>
        <trans-unit id="e841df54a07c5f2cc9b5f9af566dd4e754d4d096" translate="yes" xml:space="preserve">
          <source>Kleisli arrows of a monad.</source>
          <target state="translated">Flechas Kleisli de una mónada.</target>
        </trans-unit>
        <trans-unit id="a5a5fafee83492d8b176cbbdd5bb0860a6fdbf28" translate="yes" xml:space="preserve">
          <source>Known limitations:</source>
          <target state="translated">Limitaciones conocidas:</target>
        </trans-unit>
        <trans-unit id="5d7d25439595bfc8d329c71ca182a7c6823088b5" translate="yes" xml:space="preserve">
          <source>KnownNat</source>
          <target state="translated">KnownNat</target>
        </trans-unit>
        <trans-unit id="c37bbcaa811caf4684344786df42286e08100459" translate="yes" xml:space="preserve">
          <source>KnownSymbol</source>
          <target state="translated">KnownSymbol</target>
        </trans-unit>
        <trans-unit id="1bafcba98aca5f350dc05c967f514185665ef856" translate="yes" xml:space="preserve">
          <source>LANGID</source>
          <target state="translated">LANGID</target>
        </trans-unit>
        <trans-unit id="84f34581093e5397ee10c973d3f1265b05c1f6db" translate="yes" xml:space="preserve">
          <source>LARGE_INTEGER</source>
          <target state="translated">LARGE_INTEGER</target>
        </trans-unit>
        <trans-unit id="bf87bea3a535f56ac91a5de66d6b55f69d98184f" translate="yes" xml:space="preserve">
          <source>LCID</source>
          <target state="translated">LCID</target>
        </trans-unit>
        <trans-unit id="0beee13d31c1e3c6098692c8568c5506cfa9174d" translate="yes" xml:space="preserve">
          <source>LCMapFlags</source>
          <target state="translated">LCMapFlags</target>
        </trans-unit>
        <trans-unit id="336b811f9fed9547f7ebf0e4f1880cbb455180ca" translate="yes" xml:space="preserve">
          <source>LCTYPE</source>
          <target state="translated">LCTYPE</target>
        </trans-unit>
        <trans-unit id="52c2e43c2456d90f37c50642076b0af5566ae13a" translate="yes" xml:space="preserve">
          <source>LEFTWARDS ARROW</source>
          <target state="translated">FLECHA HACIA LA IZQUIERDA</target>
        </trans-unit>
        <trans-unit id="cecc3c11891d7815b56633d3559be2f6608334e9" translate="yes" xml:space="preserve">
          <source>LEFTWARDS ARROW-TAIL</source>
          <target state="translated">HACIA LA IZQUIERDA CON LA FLECHA DE LA COLA</target>
        </trans-unit>
        <trans-unit id="16577c79334aa225051280c5bb84f84cce0e4ae6" translate="yes" xml:space="preserve">
          <source>LEFTWARDS DOUBLE ARROW-TAIL</source>
          <target state="translated">A LA IZQUIERDA,DOBLE FLECHA-COLA</target>
        </trans-unit>
        <trans-unit id="91a07087a57580c557f3a426586f0c2f60ef2af4" translate="yes" xml:space="preserve">
          <source>LF</source>
          <target state="translated">LF</target>
        </trans-unit>
        <trans-unit id="7526c6cf5f75ab344e0a9b50d84724f46ba01601" translate="yes" xml:space="preserve">
          <source>LHANDLE</source>
          <target state="translated">LHANDLE</target>
        </trans-unit>
        <trans-unit id="a85510722a0e3f63597435d302fceae090486b57" translate="yes" xml:space="preserve">
          <source>LLVM code from the &lt;a href=&quot;codegens#llvm-code-gen&quot;&gt;LLVM code generator&lt;/a&gt;</source>
          <target state="translated">C&amp;oacute;digo &lt;a href=&quot;codegens#llvm-code-gen&quot;&gt;LLVM del generador de c&amp;oacute;digos LLVM&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e71dc1792dc3123b5a369dd038b6e7cc64277908" translate="yes" xml:space="preserve">
          <source>LLVM code generator</source>
          <target state="translated">Generador de código LLVM</target>
        </trans-unit>
        <trans-unit id="a4ab30ac59152c7cdac425098a0e91bddb57dee0" translate="yes" xml:space="preserve">
          <source>LONG</source>
          <target state="translated">LONG</target>
        </trans-unit>
        <trans-unit id="ec5d37add4b689af044ac3c5bffa9caeddd4928a" translate="yes" xml:space="preserve">
          <source>LONG32</source>
          <target state="translated">LONG32</target>
        </trans-unit>
        <trans-unit id="4d839d00f90159ea1c7a2cce620daacfba69bfe0" translate="yes" xml:space="preserve">
          <source>LONG64</source>
          <target state="translated">LONG64</target>
        </trans-unit>
        <trans-unit id="30573aefe36d3bba7516573e936a54b9886f4531" translate="yes" xml:space="preserve">
          <source>LONG_PTR</source>
          <target state="translated">LONG_PTR</target>
        </trans-unit>
        <trans-unit id="6799d635b5e2816633a1eee1011aa42c6900072f" translate="yes" xml:space="preserve">
          <source>LPARAM</source>
          <target state="translated">LPARAM</target>
        </trans-unit>
        <trans-unit id="e191267d6636b8d8dd17922a36f5d83423ca186f" translate="yes" xml:space="preserve">
          <source>LPBOOL</source>
          <target state="translated">LPBOOL</target>
        </trans-unit>
        <trans-unit id="b0179249b725b53a04310f204589b18a9f487e9a" translate="yes" xml:space="preserve">
          <source>LPBYTE</source>
          <target state="translated">LPBYTE</target>
        </trans-unit>
        <trans-unit id="1aa1c9f4c10c1f10229a085be9fe5e8d772815c4" translate="yes" xml:space="preserve">
          <source>LPCSTR</source>
          <target state="translated">LPCSTR</target>
        </trans-unit>
        <trans-unit id="e741ece1418d5a115d62b99230ca71d3efe4070d" translate="yes" xml:space="preserve">
          <source>LPCTSTR</source>
          <target state="translated">LPCTSTR</target>
        </trans-unit>
        <trans-unit id="172c9c6bdd05170cc78b4016e92a18b0ce371012" translate="yes" xml:space="preserve">
          <source>LPCTSTR_</source>
          <target state="translated">LPCTSTR_</target>
        </trans-unit>
        <trans-unit id="77d43834b2e69f339ace63bdd9b49fba118491ec" translate="yes" xml:space="preserve">
          <source>LPCWSTR</source>
          <target state="translated">LPCWSTR</target>
        </trans-unit>
        <trans-unit id="eacdfe1b863de52295f8ed9111840c8b69de1d8a" translate="yes" xml:space="preserve">
          <source>LPDWORD</source>
          <target state="translated">LPDWORD</target>
        </trans-unit>
        <trans-unit id="f5d63f9a27fa44191677aa464c55c7503eba938c" translate="yes" xml:space="preserve">
          <source>LPINPUT</source>
          <target state="translated">LPINPUT</target>
        </trans-unit>
        <trans-unit id="d255c79116e40dec5d46ebe0b88ddcd312799e9a" translate="yes" xml:space="preserve">
          <source>LPMSG</source>
          <target state="translated">LPMSG</target>
        </trans-unit>
        <trans-unit id="4ade22c4abe03e351c322f7d46f37b350a895c69" translate="yes" xml:space="preserve">
          <source>LPOSVERSIONINFOEX</source>
          <target state="translated">LPOSVERSIONINFOEX</target>
        </trans-unit>
        <trans-unit id="59d6e50d1a4f36a9203f0cbba59c865419b38b5b" translate="yes" xml:space="preserve">
          <source>LPOVERLAPPED</source>
          <target state="translated">LPOVERLAPPED</target>
        </trans-unit>
        <trans-unit id="be649aa6e2e33d351a5bab4d706cca9fa800ea52" translate="yes" xml:space="preserve">
          <source>LPPAINTSTRUCT</source>
          <target state="translated">LPPAINTSTRUCT</target>
        </trans-unit>
        <trans-unit id="67257cfd99d80a2df705d6b562a4f33f6da4eef6" translate="yes" xml:space="preserve">
          <source>LPSECURITY_ATTRIBUTES</source>
          <target state="translated">LPSECURITY_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="89625841cf8382a8b7cbfb91a1aa9825d588e589" translate="yes" xml:space="preserve">
          <source>LPSTR</source>
          <target state="translated">LPSTR</target>
        </trans-unit>
        <trans-unit id="4bf9ddc5d3aca695589c5b07f3bbfd2293289ee7" translate="yes" xml:space="preserve">
          <source>LPTSTR</source>
          <target state="translated">LPTSTR</target>
        </trans-unit>
        <trans-unit id="f34c393d2b1c91567364523f1ab42c92643afd25" translate="yes" xml:space="preserve">
          <source>LPVOID</source>
          <target state="translated">LPVOID</target>
        </trans-unit>
        <trans-unit id="df97686e2eaf116cd4616939d89f5db838713001" translate="yes" xml:space="preserve">
          <source>LPWSTR</source>
          <target state="translated">LPWSTR</target>
        </trans-unit>
        <trans-unit id="c9907d8861344b17d44c4f103abf75a9157959d9" translate="yes" xml:space="preserve">
          <source>LRESULT</source>
          <target state="translated">LRESULT</target>
        </trans-unit>
        <trans-unit id="6c62fb7313eb9d28efbca3e61ff13801b5b45a0a" translate="yes" xml:space="preserve">
          <source>LT</source>
          <target state="translated">LT</target>
        </trans-unit>
        <trans-unit id="e069a75ab11debd5703606dcab59ec2fb4d96109" translate="yes" xml:space="preserve">
          <source>Label a decoder. If the decoder fails, the label will be appended on a new line to the error message string.</source>
          <target state="translated">Etiqueta un decodificador.Si el decodificador falla,la etiqueta se añadirá en una nueva línea a la cadena de mensajes de error.</target>
        </trans-unit>
        <trans-unit id="600b10a6ff2b2b4798fef332e1c46bd3ff40864f" translate="yes" xml:space="preserve">
          <source>Labelling trees</source>
          <target state="translated">Etiquetar los árboles</target>
        </trans-unit>
        <trans-unit id="bd0e2f60f3cab26b9d1a005d3e6df03ee775b43b" translate="yes" xml:space="preserve">
          <source>LambdaCase</source>
          <target state="translated">LambdaCase</target>
        </trans-unit>
        <trans-unit id="f8ba7082b851540c52b04047ac4c6d27074d828b" translate="yes" xml:space="preserve">
          <source>LangAsm</source>
          <target state="translated">LangAsm</target>
        </trans-unit>
        <trans-unit id="e29d0e2e40cfc7d4080b46c4ed09bd1426b13ae6" translate="yes" xml:space="preserve">
          <source>LangC</source>
          <target state="translated">LangC</target>
        </trans-unit>
        <trans-unit id="6f9fe5d064c62dd571d1cd25ae70836c15d42666" translate="yes" xml:space="preserve">
          <source>LangCxx</source>
          <target state="translated">LangCxx</target>
        </trans-unit>
        <trans-unit id="b36e168343c5d8ff6e8b16848d95a785e3e4e206" translate="yes" xml:space="preserve">
          <source>LangObjc</source>
          <target state="translated">LangObjc</target>
        </trans-unit>
        <trans-unit id="8f6e55899c5e99e242135ff6cf8c727ef909dd4c" translate="yes" xml:space="preserve">
          <source>LangObjcxx</source>
          <target state="translated">LangObjcxx</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="e3818c797711a3ca9b496a8bf021d70184059791" translate="yes" xml:space="preserve">
          <source>Language extension lookup</source>
          <target state="translated">Búsqueda de extensión del idioma</target>
        </trans-unit>
        <trans-unit id="819f46032d151fbc83b888fce06e8becbc1ba90d" translate="yes" xml:space="preserve">
          <source>Language extensions</source>
          <target state="translated">Extensiones de lenguaje</target>
        </trans-unit>
        <trans-unit id="05b5ef0d2efbebac38a6a109039519a6c3f95008" translate="yes" xml:space="preserve">
          <source>Language extensions known to GHC</source>
          <target state="translated">Extensiones de lenguaje conocidas por el GHC</target>
        </trans-unit>
        <trans-unit id="b132eded8d0dc30dbe1263774537feb48884f8fb" translate="yes" xml:space="preserve">
          <source>Language options can be controlled in two ways:</source>
          <target state="translated">Las opciones de idioma pueden ser controladas de dos maneras:</target>
        </trans-unit>
        <trans-unit id="6bd1a5ed914255da4f2e3d146728cb1407c73dac" translate="yes" xml:space="preserve">
          <source>Language options can be enabled either by a command-line option &lt;code&gt;-Xblah&lt;/code&gt;, or by a &lt;code&gt;{-# LANGUAGE blah #-}&lt;/code&gt; pragma in the file itself. See &lt;a href=&quot;glasgow_exts#options-language&quot;&gt;Language options&lt;/a&gt;.</source>
          <target state="translated">Las opciones de idioma se pueden habilitar mediante una opci&amp;oacute;n de l&amp;iacute;nea de comandos &lt;code&gt;-Xblah&lt;/code&gt; , o mediante un pragma &lt;code&gt;{-# LANGUAGE blah #-}&lt;/code&gt; en el archivo mismo. Consulte las &lt;a href=&quot;glasgow_exts#options-language&quot;&gt;opciones de idioma&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb129676df1e2ca9487a872968ddcafe0d9dd6a9" translate="yes" xml:space="preserve">
          <source>Language options recognised by Cabal can also be enabled using the &lt;code&gt;LANGUAGE&lt;/code&gt; pragma, thus &lt;code&gt;{-# LANGUAGE TemplateHaskell #-}&lt;/code&gt; (see &lt;a href=&quot;#language-pragma&quot;&gt;LANGUAGE pragma&lt;/a&gt;).</source>
          <target state="translated">Las opciones de idioma reconocidas por Cabal tambi&amp;eacute;n se pueden habilitar usando el pragma &lt;code&gt;LANGUAGE&lt;/code&gt; , por lo tanto &lt;code&gt;{-# LANGUAGE TemplateHaskell #-}&lt;/code&gt; (ver &lt;a href=&quot;#language-pragma&quot;&gt;pragma IDIOMA&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4303cd5d535fbb5d0b9f4d30dd7adce7e5ce6778" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH</source>
          <target state="translated">Language.Haskell.TH</target>
        </trans-unit>
        <trans-unit id="de2ab3d572f18c64ff1f3f745dbafb85fc36b86d" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH.LanguageExtensions</source>
          <target state="translated">Language.Haskell.TH.LanguageExtensions</target>
        </trans-unit>
        <trans-unit id="a536fc0da9feb311a1888ebea07a6df0b1199739" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH.Lib.Internal</source>
          <target state="translated">Language.Haskell.TH.Lib.Internal</target>
        </trans-unit>
        <trans-unit id="625f2edd5986bf5aa6e47f4476741a674b3ee730" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH.Lib.Internal exposes some additional functionality that is used internally in GHC's integration with Template Haskell. This is not a part of the public API, and as such, there are no API guarantees for this module from version to version.</source>
          <target state="translated">Language.Haskell.TH.Lib.Internal expone algunas funcionalidades adicionales que se utilizan internamente en la integración del GHC con la plantilla Haskell.Esto no forma parte de la API pública,y como tal,no hay garantías de la API para este módulo de una versión a otra.</target>
        </trans-unit>
        <trans-unit id="1c03c9aef7745ac205e3905894725dfd28c07640" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH.Ppr</source>
          <target state="translated">Language.Haskell.TH.Ppr</target>
        </trans-unit>
        <trans-unit id="d5b1913241bcbf67ca726f074016aeb992ec6064" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH.PprLib</source>
          <target state="translated">Language.Haskell.TH.PprLib</target>
        </trans-unit>
        <trans-unit id="beacda45774b21626492b1c3c45cdfb6c502fea0" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH.Quote</source>
          <target state="translated">Language.Haskell.TH.Quote</target>
        </trans-unit>
        <trans-unit id="2af0f0aebf13fc8e5f915b22fc1832e251d01c0b" translate="yes" xml:space="preserve">
          <source>Language.Haskell.TH.Syntax</source>
          <target state="translated">Language.Haskell.TH.Syntax</target>
        </trans-unit>
        <trans-unit id="2c4c7d3c26eea5a437b10f135bd656f51fe7182c" translate="yes" xml:space="preserve">
          <source>LanguageDef</source>
          <target state="translated">LanguageDef</target>
        </trans-unit>
        <trans-unit id="8d5e1a74eb773e87b48d793c077afcf2cd4b9d8a" translate="yes" xml:space="preserve">
          <source>Large objects are not allocated from the normal allocation area set by the &lt;code&gt;-A&lt;/code&gt; flag, which is why there is a separate limit for these. Large objects tend to be much rarer than small objects, so most programs hit the &lt;code&gt;-A&lt;/code&gt; limit before the &lt;code&gt;-AL&lt;/code&gt; limit. However, the &lt;code&gt;-A&lt;/code&gt; limit is per-capability, whereas the &lt;code&gt;-AL&lt;/code&gt; limit is global, so as &lt;code&gt;-N&lt;/code&gt; gets larger it becomes more likely that we hit the &lt;code&gt;-AL&lt;/code&gt; limit first. To counteract this, it might be necessary to use a larger &lt;code&gt;-AL&lt;/code&gt; limit when using a large &lt;code&gt;-N&lt;/code&gt;.</source>
          <target state="translated">Los objetos grandes no se asignan desde el &amp;aacute;rea de asignaci&amp;oacute;n normal establecida por la bandera &lt;code&gt;-A&lt;/code&gt; , por lo que hay un l&amp;iacute;mite separado para estos. Los objetos grandes tienden a ser mucho m&amp;aacute;s raros que los objetos peque&amp;ntilde;os, por lo que la mayor&amp;iacute;a de los programas alcanzan el l&amp;iacute;mite &lt;code&gt;-A&lt;/code&gt; antes del l&amp;iacute;mite &lt;code&gt;-AL&lt;/code&gt; . Sin embargo, el l&amp;iacute;mite &lt;code&gt;-A&lt;/code&gt; es por capacidad, mientras que el l&amp;iacute;mite &lt;code&gt;-AL&lt;/code&gt; es global, por lo que a medida que &lt;code&gt;-N&lt;/code&gt; aumenta, es m&amp;aacute;s probable que &lt;code&gt;-AL&lt;/code&gt; l&amp;iacute;mite -AL primero. Para contrarrestar esto, puede que sea necesario utilizar un l&amp;iacute;mite &lt;code&gt;-AL&lt;/code&gt; mayor cuando se utilice un &lt;code&gt;-N&lt;/code&gt; grande .</target>
        </trans-unit>
        <trans-unit id="d1c69a859a9638b242f2dabf8acf1c0b1450ce6b" translate="yes" xml:space="preserve">
          <source>Last</source>
          <target state="translated">Last</target>
        </trans-unit>
        <trans-unit id="036fd8195c1bacf1837b14eef6243e90d12eeff8" translate="yes" xml:space="preserve">
          <source>Lastly come the normal type variables of a declaration.</source>
          <target state="translated">Por último vienen las variables de tipo normal de una declaración.</target>
        </trans-unit>
        <trans-unit id="96565d42beb23b9f18b0c44cb990adddfa8c6c5e" translate="yes" xml:space="preserve">
          <source>Lastly, all of this applies only for classes other than &lt;code&gt;Read&lt;/code&gt;, &lt;code&gt;Show&lt;/code&gt;, &lt;code&gt;Typeable&lt;/code&gt;, and &lt;code&gt;Data&lt;/code&gt;, for which the stock derivation applies (section 4.3.3. of the Haskell Report). (For the standard classes &lt;code&gt;Eq&lt;/code&gt;, &lt;code&gt;Ord&lt;/code&gt;, &lt;code&gt;Ix&lt;/code&gt;, and &lt;code&gt;Bounded&lt;/code&gt; it is immaterial whether the stock method is used or the one described here.)</source>
          <target state="translated">Por &amp;uacute;ltimo, todo esto se aplica solo a las clases distintas de &lt;code&gt;Read&lt;/code&gt; , &lt;code&gt;Show&lt;/code&gt; , &lt;code&gt;Typeable&lt;/code&gt; y &lt;code&gt;Data&lt;/code&gt; , para las que se aplica la derivaci&amp;oacute;n de valores (secci&amp;oacute;n 4.3.3. Del Informe Haskell). (Para las clases est&amp;aacute;ndar &lt;code&gt;Eq&lt;/code&gt; , &lt;code&gt;Ord&lt;/code&gt; , &lt;code&gt;Ix&lt;/code&gt; y &lt;code&gt;Bounded&lt;/code&gt; , es indiferente si se usa el m&amp;eacute;todo est&amp;aacute;ndar o el que se describe aqu&amp;iacute;).</target>
        </trans-unit>
        <trans-unit id="7a81fbeb8d54ada80dba09a4fc21a3129bfb1430" translate="yes" xml:space="preserve">
          <source>Laws:</source>
          <target state="translated">Laws:</target>
        </trans-unit>
        <trans-unit id="0f509e179cc1a0fe8f803e98982287db8fe059d4" translate="yes" xml:space="preserve">
          <source>Layout fields are then overlapped so that the final layout will be as compact as possible. For example, suppose we have the unboxed sum:</source>
          <target state="translated">Los campos de diseño se superponen para que el diseño final sea lo más compacto posible.Por ejemplo,supongamos que tenemos la suma sin empaquetar:</target>
        </trans-unit>
        <trans-unit id="cb90f09d6abe9a4f5536f00172206430dfc1fd65" translate="yes" xml:space="preserve">
          <source>Layout with multi-way if works in the same way as other layout contexts, except that the semi-colons between guards in a multi-way if are optional. So it is not necessary to line up all the guards at the same column; this is consistent with the way guards work in function definitions and case expressions.</source>
          <target state="translated">La disposición con multidireccional si funciona de la misma manera que otros contextos de disposición,excepto que los puntos y comas entre las guardias en un multidireccional si son opcionales.Por lo tanto,no es necesario alinear todas las guardias en la misma columna;esto es coherente con la forma en que las guardias funcionan en las definiciones de funciones y las expresiones de casos.</target>
        </trans-unit>
        <trans-unit id="cb0824cf9ff62297df30a510f886637077aac5e0" translate="yes" xml:space="preserve">
          <source>Lazily read all user input on &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; as a single string.</source>
          <target state="translated">Lea perezosamente todas las entradas del usuario en &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; como una sola cadena.</target>
        </trans-unit>
        <trans-unit id="9c161543e3be3df002213096ec26355269feb4c2" translate="yes" xml:space="preserve">
          <source>Lazily read all user input on &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; as a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740345f4fc26eb7795ac98f172dc650babd2bee4" translate="yes" xml:space="preserve">
          <source>Lazily read the remaining contents of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; will be closed after the read completes, or on error.</source>
          <target state="translated">Lea perezosamente el contenido restante de un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . La &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; se cerrar&amp;aacute; despu&amp;eacute;s de que se complete la lectura o en caso de error.</target>
        </trans-unit>
        <trans-unit id="4161b76a8d82e2a67a0cc9182fd41736687ceb1c" translate="yes" xml:space="preserve">
          <source>Lazily read the remaining contents of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; will be closed after the read completes, or on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9133c4ce416a587d4206249b3ec0be18933d85ff" translate="yes" xml:space="preserve">
          <source>Lazily serialise a value to a file.</source>
          <target state="translated">Perezosamente serializar un valor a un archivo.</target>
        </trans-unit>
        <trans-unit id="8e4c4b8d6f447284862f49f3045c8dc03eb992a3" translate="yes" xml:space="preserve">
          <source>Lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to use as the tail of the generated lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; para usar como cola de la &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; diferida generada</target>
        </trans-unit>
        <trans-unit id="2200f814b893336b40ddd029ac88811c89cd6469" translate="yes" xml:space="preserve">
          <source>Lazy I/O throws an exception if an error is encountered, in contrast to the Haskell 98 spec which requires that errors are discarded (see Section 21.2.2 of the Haskell 98 report). The exception thrown is the usual IO exception that would be thrown if the failing IO operation was performed in the IO monad, and can be caught by &lt;code&gt;System.IO.Error.catch&lt;/code&gt; or &lt;code&gt;Control.Exception.catch&lt;/code&gt;.</source>
          <target state="translated">Lazy I / O genera una excepci&amp;oacute;n si se encuentra un error, en contraste con la especificaci&amp;oacute;n Haskell 98 que requiere que los errores se descarten (consulte la Secci&amp;oacute;n 21.2.2 del informe Haskell 98). La excepci&amp;oacute;n lanzada es la excepci&amp;oacute;n IO habitual que se lanzar&amp;iacute;a si la operaci&amp;oacute;n IO fallida se realizara en la m&amp;oacute;nada IO y puede ser detectada por &lt;code&gt;System.IO.Error.catch&lt;/code&gt; o &lt;code&gt;Control.Exception.catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0dc8a7617416cac1adb37dc18ef37fe1492d919f" translate="yes" xml:space="preserve">
          <source>Lazy RWS monad.</source>
          <target state="translated">La perezosa mónada RWS.</target>
        </trans-unit>
        <trans-unit id="4e7f54740d38945be5cd4b244d5c2c47d033b6be" translate="yes" xml:space="preserve">
          <source>Lazy Reader-writer-state monads</source>
          <target state="translated">Mónadas de estado de lector-escritor perezoso</target>
        </trans-unit>
        <trans-unit id="eb43f112ea276b50bd6b9f699aa36231d04bac2f" translate="yes" xml:space="preserve">
          <source>Lazy state monads, passing an updatable state through a computation. See below for examples.</source>
          <target state="translated">Mónadas de estado perezoso,pasando un estado actualizable a través de una computación.Véase más abajo para ejemplos.</target>
        </trans-unit>
        <trans-unit id="556c668dfd9b10659aee0887aa651ecc4197ef61" translate="yes" xml:space="preserve">
          <source>Lazy state monads.</source>
          <target state="translated">Mónadas estatales perezosas.</target>
        </trans-unit>
        <trans-unit id="d6e57ca0c7140fb8eaf2002ba63c8930d28ffe8d" translate="yes" xml:space="preserve">
          <source>Lazy writer monads.</source>
          <target state="translated">Mónadas escritoras perezosas.</target>
        </trans-unit>
        <trans-unit id="0f8c868597dc0fe23d3aa967985ce4e3dd234ee3" translate="yes" xml:space="preserve">
          <source>LeapSecondMap</source>
          <target state="translated">LeapSecondMap</target>
        </trans-unit>
        <trans-unit id="6d9694ab87c1509816fc3f073364a45eed8143dd" translate="yes" xml:space="preserve">
          <source>Left associative monadic bifold over a structure.</source>
          <target state="translated">Dejó un bifold monádico asociativo sobre una estructura.</target>
        </trans-unit>
        <trans-unit id="9113429feae9435bc9a22b91fdadcab770bb70b5" translate="yes" xml:space="preserve">
          <source>Left identity</source>
          <target state="translated">La identidad de la izquierda...</target>
        </trans-unit>
        <trans-unit id="888262dff4e29ba66957e08ae5e7c00c8ddb1ac9" translate="yes" xml:space="preserve">
          <source>Left shrinking (or Tightening)</source>
          <target state="translated">Encogimiento de la izquierda (o Aprendizaje)</target>
        </trans-unit>
        <trans-unit id="43b09cf749eb5491b74e53f1bc09fa04659674f0" translate="yes" xml:space="preserve">
          <source>Left-associative fold of a structure but with strict application of the operator.</source>
          <target state="translated">Pliegue izquierdo de una estructura pero con aplicación estricta del operador.</target>
        </trans-unit>
        <trans-unit id="2e864825085ba6b285b3deb3c0b79e4d521a8979" translate="yes" xml:space="preserve">
          <source>Left-associative fold of a structure.</source>
          <target state="translated">El pliegue izquierdo de una estructura.</target>
        </trans-unit>
        <trans-unit id="3c1c012fb20a62b44c7c2d747a91757337b12110" translate="yes" xml:space="preserve">
          <source>Left-associative fold operation for constructor applications.</source>
          <target state="translated">Operación de pliegue asociado a la izquierda para aplicaciones de construcción.</target>
        </trans-unit>
        <trans-unit id="771b2d8147f59a5691eb79cad7d5c64627dab857" translate="yes" xml:space="preserve">
          <source>Left-to-right composition</source>
          <target state="translated">Composición de izquierda a derecha</target>
        </trans-unit>
        <trans-unit id="c2371e24467463447fab51b81ef30f6f1fa7acf3" translate="yes" xml:space="preserve">
          <source>Left-to-right composition of Kleisli arrows.</source>
          <target state="translated">Composición de izquierda a derecha de las flechas de Kleisli.</target>
        </trans-unit>
        <trans-unit id="b396eca23f1092998983c79f8de12421ce4d07d7" translate="yes" xml:space="preserve">
          <source>LeftAdjust</source>
          <target state="translated">LeftAdjust</target>
        </trans-unit>
        <trans-unit id="6f12db94ca14c410ee6aea9aaf9f37f142111790" translate="yes" xml:space="preserve">
          <source>LeftAssociative</source>
          <target state="translated">LeftAssociative</target>
        </trans-unit>
        <trans-unit id="0b5d32fdd51149a3a9a8927f5a4932ddaa322146" translate="yes" xml:space="preserve">
          <source>LeftMode</source>
          <target state="translated">LeftMode</target>
        </trans-unit>
        <trans-unit id="17af1ff09188bf46cc1670386af27eac4b42d3c1" translate="yes" xml:space="preserve">
          <source>Legacy folds</source>
          <target state="translated">Pliegues del legado</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="b35cc825e3ceae3035f623e062f495f46e1b0bf1" translate="yes" xml:space="preserve">
          <source>Length of a SIMD vector type</source>
          <target state="translated">Longitud de un tipo de vector SIMD</target>
        </trans-unit>
        <trans-unit id="1da751ae056c25dec1bf146025343c7d7baa5ec4" translate="yes" xml:space="preserve">
          <source>Lennart Kolmodin</source>
          <target state="translated">Lennart Kolmodin</target>
        </trans-unit>
        <trans-unit id="4c902ed308255eedb5791755b57d87de654a6e37" translate="yes" xml:space="preserve">
          <source>Lennart Kolmodin &amp;lt;kolmodin@gmail.com&amp;gt;</source>
          <target state="translated">Lennart Kolmodin &amp;lt;kolmodin@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c65eb9120ed9793a089cab8d78b2b3e2762a66f1" translate="yes" xml:space="preserve">
          <source>Lennart Kolmodin Ross Paterson</source>
          <target state="translated">Lennart Kolmodin Ross Paterson</target>
        </trans-unit>
        <trans-unit id="785175efbad60848e99dc0e384b6197a7399034b" translate="yes" xml:space="preserve">
          <source>Let us illustrate these improvements on the CSV-table rendering example from &lt;a href=&quot;data-bytestring-builder&quot;&gt;Data.ByteString.Builder&lt;/a&gt;. Its &quot;hot code&quot; is the rendering of a table's cells, which we implement as follows using only the functions from the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; API.</source>
          <target state="translated">Ilustremos estas mejoras en el ejemplo de representaci&amp;oacute;n de tabla CSV de &lt;a href=&quot;data-bytestring-builder&quot;&gt;Data.ByteString.Builder&lt;/a&gt; . Su &quot;c&amp;oacute;digo activo&quot; es la representaci&amp;oacute;n de las celdas de una tabla, que implementamos de la siguiente manera utilizando solo las funciones de la API del &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f4eb684c9a2dfb229ddec06c0f99f449d161a5a" translate="yes" xml:space="preserve">
          <source>Let us look at an example first:</source>
          <target state="translated">Veamos primero un ejemplo:</target>
        </trans-unit>
        <trans-unit id="a5c3e5bbf9a5e76197700fa3298be080332fba3f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s consider a simple example,</source>
          <target state="translated">Consideremos un ejemplo simple,</target>
        </trans-unit>
        <trans-unit id="a592951b101ac13a4cc74ab595c10c997b2adfa4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a Hello World program, and compile and run it. First, create a file &lt;code&gt;hello.hs&lt;/code&gt; containing the Haskell code:</source>
          <target state="translated">Creemos un programa Hello World, compilemos y ejecutemos. Primero, cree un archivo &lt;code&gt;hello.hs&lt;/code&gt; que contenga el c&amp;oacute;digo Haskell:</target>
        </trans-unit>
        <trans-unit id="dd8ebc96ea1bed3112a906d9d91800a76be4b101" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s first see how execution flows through this program. We start by telling GHC that we want debug information,</source>
          <target state="translated">Primero veamos c&amp;oacute;mo fluye la ejecuci&amp;oacute;n a trav&amp;eacute;s de este programa. Comenzamos dici&amp;eacute;ndole a GHC que queremos informaci&amp;oacute;n de depuraci&amp;oacute;n,</target>
        </trans-unit>
        <trans-unit id="bf4f9d515969a695864d800b64fe827628e6fe9a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with an example GHCi session. You can fire up GHCi with the command &lt;code&gt;ghci&lt;/code&gt;:</source>
          <target state="translated">Comencemos con una sesi&amp;oacute;n de ejemplo de GHCi. Puede iniciar GHCi con el comando &lt;code&gt;ghci&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3484d66cbe4a02744097aac7ef40e2f056cef65a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a look at an example:</source>
          <target state="translated">Echemos un vistazo a un ejemplo:</target>
        </trans-unit>
        <trans-unit id="594c7197a66aa41cb3dd72c23871e7b9c600e29e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take the example from above, and invoke it from a standalone C program. Here&amp;rsquo;s the C code:</source>
          <target state="translated">Tomemos el ejemplo anterior e invoqu&amp;eacute;moslo desde un programa C independiente. Aqu&amp;iacute; est&amp;aacute; el c&amp;oacute;digo C:</target>
        </trans-unit>
        <trans-unit id="c8a1d1f3d4842f4a6ca73f207182495c844d5cac" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s use quicksort as a running example. Here&amp;rsquo;s the code:</source>
          <target state="translated">Usemos quicksort como ejemplo de ejecuci&amp;oacute;n. Aqu&amp;iacute; est&amp;aacute; el c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="acb86e263cb9634893bee6f20e365bbfa9867198" translate="yes" xml:space="preserve">
          <source>Let's decode binary data representing illustrated here. In this example the values are in little endian.</source>
          <target state="translated">Descodifiquemos los datos binarios que representan lo ilustrado aquí.En este ejemplo los valores están en Little Endian.</target>
        </trans-unit>
        <trans-unit id="789a59a775f3c2900a64ef818bc09e8989fd5353" translate="yes" xml:space="preserve">
          <source>Let's first define a function that decodes many &lt;code&gt;Trade&lt;/code&gt;s.</source>
          <target state="translated">Primero definamos una funci&amp;oacute;n que decodifica muchos &lt;code&gt;Trade&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="9e7e5ce190e9c80ce4a8c228bca3542e7865655a" translate="yes" xml:space="preserve">
          <source>LetterNumber</source>
          <target state="translated">LetterNumber</target>
        </trans-unit>
        <trans-unit id="87f5f38833b121fccd9e5087f3c99d3bb46af917" translate="yes" xml:space="preserve">
          <source>Level of detail in the pretty printed output. Level 0 is the least detail.</source>
          <target state="translated">Nivel de detalle en la bonita salida impresa.El nivel 0 es el menor detalle.</target>
        </trans-unit>
        <trans-unit id="46ea3fc173ca6f3f7f2ab9f2d659dfe92c450434" translate="yes" xml:space="preserve">
          <source>Levity-polymorphic since &lt;em&gt;template-haskell-2.16.0.0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25799598a4e8c42a83738d367f796323e13b7b18" translate="yes" xml:space="preserve">
          <source>Lexeme</source>
          <target state="translated">Lexeme</target>
        </trans-unit>
        <trans-unit id="46ace3bdab1ce2e35c935ef17a0a57edf4886910" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;angles p&lt;/code&gt; parses &lt;code&gt;p&lt;/code&gt; enclosed in angle brackets ('&amp;lt;' and '&amp;gt;'), returning the value of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">Los &lt;code&gt;angles p&lt;/code&gt; analizador de Lexeme p analiza &lt;code&gt;p&lt;/code&gt; entre corchetes angulares ('&amp;lt;' y '&amp;gt;'), devolviendo el valor de &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cc7d61ad991ca5dc420dbacf991b3321c23b4f3" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;braces p&lt;/code&gt; parses &lt;code&gt;p&lt;/code&gt; enclosed in braces ('{' and '}'), returning the value of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">Las &lt;code&gt;braces p&lt;/code&gt; analizador Lexeme p analiza &lt;code&gt;p&lt;/code&gt; entre llaves ('{' y '}'), devolviendo el valor de &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b05508eef449259c3da847ba5b8908b337a57ef" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;brackets p&lt;/code&gt; parses &lt;code&gt;p&lt;/code&gt; enclosed in brackets ('[' and ']'), returning the value of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">Los &lt;code&gt;brackets p&lt;/code&gt; analizador Lexeme p analiza &lt;code&gt;p&lt;/code&gt; entre corchetes ('[' y ']'), devolviendo el valor de &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6f01f6fd61a8c0bb200b1113e901859689cb574" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;colon&lt;/code&gt; parses the character ':' and skips any trailing white space. Returns the string &quot;:&quot;.</source>
          <target state="translated">Los &lt;code&gt;colon&lt;/code&gt; analizador de Lexeme analizan el car&amp;aacute;cter ':' y omiten cualquier espacio en blanco al final. Devuelve la cadena &quot;:&quot;.</target>
        </trans-unit>
        <trans-unit id="906be22b3485d6af088c4586447a23867836a78c" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;comma&lt;/code&gt; parses the character ',' and skips any trailing white space. Returns the string &quot;,&quot;.</source>
          <target state="translated">La &lt;code&gt;comma&lt;/code&gt; analizador Lexeme analiza el car&amp;aacute;cter ',' y omite cualquier espacio en blanco al final. Devuelve la cadena &quot;,&quot;.</target>
        </trans-unit>
        <trans-unit id="8fa5d226b4524a8f2606ab3fb7b4e7c3152035a2" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;commaSep p&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador Lexeme &lt;code&gt;commaSep p&lt;/code&gt; analiza &lt;em&gt;cero&lt;/em&gt; o m&amp;aacute;s ocurrencias de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f0383ea5ef26d7b618c08586a182319e06433ed" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;commaSep p&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador Lexeme &lt;code&gt;commaSep p&lt;/code&gt; analiza &lt;em&gt;cero&lt;/em&gt; o m&amp;aacute;s ocurrencias de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b0f682fe5ecece9ab074d848ae3efde0075785f" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;commaSep1 p&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador de Lexeme &lt;code&gt;commaSep1 p&lt;/code&gt; analiza &lt;em&gt;una&lt;/em&gt; o m&amp;aacute;s apariciones de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1527e1889e4d9db5a2a2a401431c80198a7ad8ed" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;commaSep1 p&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador de Lexeme &lt;code&gt;commaSep1 p&lt;/code&gt; analiza &lt;em&gt;una&lt;/em&gt; o m&amp;aacute;s apariciones de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:comma&quot;&gt;comma&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a06e52077d648a539ce51fcce5464792168d2116" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;dot&lt;/code&gt; parses the character '.' and skips any trailing white space. Returns the string &quot;.&quot;.</source>
          <target state="translated">Lexeme parser &lt;code&gt;dot&lt;/code&gt; analiza el car&amp;aacute;cter '.' y omite cualquier espacio en blanco final. Devuelve la cadena &quot;.&quot;.</target>
        </trans-unit>
        <trans-unit id="5c625c13a8a270d65b20ce25a79ef5d1e88e0c01" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;parens p&lt;/code&gt; parses &lt;code&gt;p&lt;/code&gt; enclosed in parenthesis, returning the value of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">Lexeme parser &lt;code&gt;parens p&lt;/code&gt; analiza &lt;code&gt;p&lt;/code&gt; entre par&amp;eacute;ntesis, devolviendo el valor de &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09775ca66fe1940d621ab83bb334774f062130fc" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;semiSep p&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador de Lexeme &lt;code&gt;semiSep p&lt;/code&gt; analiza &lt;em&gt;cero&lt;/em&gt; o m&amp;aacute;s ocurrencias de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fde367cf1acc73ec6e48dd7f44d104f7a0066d3" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;semiSep p&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador de Lexeme &lt;code&gt;semiSep p&lt;/code&gt; analiza &lt;em&gt;cero&lt;/em&gt; o m&amp;aacute;s ocurrencias de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a56558ecec4b9b3865d84f3538f50974882790bc" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;semiSep1 p&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador de Lexeme &lt;code&gt;semiSep1 p&lt;/code&gt; analiza &lt;em&gt;una&lt;/em&gt; o m&amp;aacute;s ocurrencias de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f226487b67eb839b478eae118624bbb75f343207" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;semiSep1 p&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt; separated by &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">El analizador de Lexeme &lt;code&gt;semiSep1 p&lt;/code&gt; analiza &lt;em&gt;una&lt;/em&gt; o m&amp;aacute;s ocurrencias de &lt;code&gt;p&lt;/code&gt; separadas por &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:semi&quot;&gt;semi&lt;/a&gt;&lt;/code&gt; . Devuelve una lista de valores devueltos por &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71ba5db9cf8b9d035392754516d0f0d298c6b31e" translate="yes" xml:space="preserve">
          <source>Lexeme parser &lt;code&gt;symbol s&lt;/code&gt; parses &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:string&quot;&gt;string&lt;/a&gt;&lt;/code&gt;&lt;code&gt;s&lt;/code&gt; and skips trailing white space.</source>
          <target state="translated">El &lt;code&gt;symbol s&lt;/code&gt; analizador de Lexeme analiza la &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:string&quot;&gt;string&lt;/a&gt;&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; y salta los espacios en blanco finales.</target>
        </trans-unit>
        <trans-unit id="1cae647ca5dc3e8507fd8b9a75e7e569807d779e" translate="yes" xml:space="preserve">
          <source>Lexeme parser |semi| parses the character ';' and skips any trailing white space. Returns the string &quot;;&quot;.</source>
          <target state="translated">Lexeme parser analiza el personaje y se salta cualquier espacio en blanco.Devuelve la cadena &quot;;&quot;.</target>
        </trans-unit>
        <trans-unit id="1a85bb6bdbe773df37163bd57f9f3cbce90e0583" translate="yes" xml:space="preserve">
          <source>Lexical type variables may be alpha-renamed freely, without changing the program.</source>
          <target state="translated">Las variables de tipo léxico pueden ser bautizadas libremente,sin cambiar el programa.</target>
        </trans-unit>
        <trans-unit id="acfd3fae981ce83b9a78f156f575113d42a472b8" translate="yes" xml:space="preserve">
          <source>LiberalTypeSynonyms</source>
          <target state="translated">LiberalTypeSynonyms</target>
        </trans-unit>
        <trans-unit id="150017bb5be516efb13183274c04717c3913f12c" translate="yes" xml:space="preserve">
          <source>Library functions</source>
          <target state="translated">Funciones de la biblioteca</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="8f40b70f72540e03b88378ef3507f6d84f38b8e2" translate="yes" xml:space="preserve">
          <source>Licensed under a BSD-style license (see top of the page).</source>
          <target state="translated">Licenciado bajo una licencia estilo BSD (ver arriba de la página).</target>
        </trans-unit>
        <trans-unit id="7c040e16c5971eb5c4f65496f4403ed7de94405d" translate="yes" xml:space="preserve">
          <source>Licensed under the Glasgow Haskell Compiler License.</source>
          <target state="translated">Licenciado bajo la Licencia de Compilador de Glasgow Haskell.</target>
        </trans-unit>
        <trans-unit id="8d33f31baff91c27917dcfcd7222cc394cee13fd" translate="yes" xml:space="preserve">
          <source>Lifetime</source>
          <target state="translated">Lifetime</target>
        </trans-unit>
        <trans-unit id="efd0976a0ad531b6453a3782b50f0f3ff5363b1e" translate="yes" xml:space="preserve">
          <source>Lift</source>
          <target state="translated">Lift</target>
        </trans-unit>
        <trans-unit id="69bd6ed6019d0841a40b7376c8be9d0e00a15a4a" translate="yes" xml:space="preserve">
          <source>Lift &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; functions through the type constructor.</source>
          <target state="translated">Levante las funciones de &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="28a4c297cb17de5189cf531fb8cff2247893efd7" translate="yes" xml:space="preserve">
          <source>Lift a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Levante un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b11a06f969ecc3525b7fd7eb5bd850c961745651" translate="yes" xml:space="preserve">
          <source>Lift a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Levante un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77ad9a4be8766f89114fe4a089c39d2885ba04cb" translate="yes" xml:space="preserve">
          <source>Lift a &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; function through the type constructor.</source>
          <target state="translated">Levante una funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="57350b28e0ae1579635d1c5f5bfee71f12dc8af6" translate="yes" xml:space="preserve">
          <source>Lift a &lt;code&gt;callCC&lt;/code&gt; operation to the new monad.</source>
          <target state="translated">Levante una operaci&amp;oacute;n &lt;code&gt;callCC&lt;/code&gt; a la nueva m&amp;oacute;nada.</target>
        </trans-unit>
        <trans-unit id="e69559f09d367723fe7abf1f50e359886a0e8931" translate="yes" xml:space="preserve">
          <source>Lift a &lt;code&gt;catchE&lt;/code&gt; operation to the new monad.</source>
          <target state="translated">Levante una operaci&amp;oacute;n &lt;code&gt;catchE&lt;/code&gt; a la nueva m&amp;oacute;nada.</target>
        </trans-unit>
        <trans-unit id="9c3605ce5319733a98246b58994a1c7a3b22a3dc" translate="yes" xml:space="preserve">
          <source>Lift a &lt;code&gt;listen&lt;/code&gt; operation to the new monad.</source>
          <target state="translated">Levantar una operaci&amp;oacute;n de &lt;code&gt;listen&lt;/code&gt; a la nueva m&amp;oacute;nada.</target>
        </trans-unit>
        <trans-unit id="898de1bff1c29cda9790c0fed24117c87b00c641" translate="yes" xml:space="preserve">
          <source>Lift a &lt;code&gt;pass&lt;/code&gt; operation to the new monad.</source>
          <target state="translated">Levante una operaci&amp;oacute;n de &lt;code&gt;pass&lt;/code&gt; a la nueva m&amp;oacute;nada.</target>
        </trans-unit>
        <trans-unit id="0d0feda6a4614b667af6e9eb00a72f0992d75a5c" translate="yes" xml:space="preserve">
          <source>Lift a IO operation</source>
          <target state="translated">Levantar una operación IO</target>
        </trans-unit>
        <trans-unit id="b9039d9d95aa49349189305fdf5c0f23de8d10bb" translate="yes" xml:space="preserve">
          <source>Lift a binary function to actions.</source>
          <target state="translated">Elevar una función binaria a acciones.</target>
        </trans-unit>
        <trans-unit id="4fdb7ea3c747b4ff83d8fd93dbad25981db51967" translate="yes" xml:space="preserve">
          <source>Lift a computation from the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Levante un c&amp;aacute;lculo de la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fb4cfd1308d8bc1fc2b8075cc399da8778ef019" translate="yes" xml:space="preserve">
          <source>Lift a computation from the argument monad to the constructed monad.</source>
          <target state="translated">Levantar un cálculo de la mónada argumental a la mónada construida.</target>
        </trans-unit>
        <trans-unit id="755e2bbeb43333564e4df3721333f2c5cb05f108" translate="yes" xml:space="preserve">
          <source>Lift a function to actions. This function may be used as a value for &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; in a &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Eleva una funci&amp;oacute;n a acciones. Esta funci&amp;oacute;n puede usarse como un valor para &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; en una instancia de &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65540f13b21961e922b1b042f1d167b1c9a2abf6" translate="yes" xml:space="preserve">
          <source>Lift a function to actions. This function may be used as a value for &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; in a &lt;code&gt;&lt;a href=&quot;ghc-base#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Eleva una funci&amp;oacute;n a acciones. Esta funci&amp;oacute;n puede usarse como un valor para &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; en una instancia de &lt;code&gt;&lt;a href=&quot;ghc-base#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3306c8d28d88915bd946a2603ec45578ecd138e" translate="yes" xml:space="preserve">
          <source>Lift a function to an arrow.</source>
          <target state="translated">Levanta una función a una flecha.</target>
        </trans-unit>
        <trans-unit id="34e1005428b4115e3bdc892cb79d78caeaad7d73" translate="yes" xml:space="preserve">
          <source>Lift a precedence-insensitive &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Eleve un &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; sin precedencia a un &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a927363c52ab42f8173b13c6038ee007ad8a17e" translate="yes" xml:space="preserve">
          <source>Lift a semigroup into &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; forming a &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; according to &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt;: &quot;Any semigroup &lt;code&gt;S&lt;/code&gt; may be turned into a monoid simply by adjoining an element &lt;code&gt;e&lt;/code&gt; not in &lt;code&gt;S&lt;/code&gt; and defining &lt;code&gt;e*e = e&lt;/code&gt; and &lt;code&gt;e*s = s = s*e&lt;/code&gt; for all &lt;code&gt;s &amp;isin; S&lt;/code&gt;.&quot;</source>
          <target state="translated">Eleve un semigrupo a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; formando un &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; e de acuerdo con &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt; : &quot;Cualquier semigrupo &lt;code&gt;S&lt;/code&gt; puede convertirse en un monoide simplemente uniendo un elemento &lt;code&gt;e&lt;/code&gt; qu no est&amp;eacute; en &lt;code&gt;S&lt;/code&gt; y definiendo &lt;code&gt;e*e = e&lt;/code&gt; y &lt;code&gt;e*s = s = s*e&lt;/code&gt; para todo &lt;code&gt;s &amp;isin; S&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="9bff245d149ddf1ae6d16d98ebd9221f1ea4340f" translate="yes" xml:space="preserve">
          <source>Lift a semigroup into &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; forming a &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; according to &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt;: &quot;Any semigroup &lt;code&gt;S&lt;/code&gt; may be turned into a monoid simply by adjoining an element &lt;code&gt;e&lt;/code&gt; not in &lt;code&gt;S&lt;/code&gt; and defining &lt;code&gt;e*e = e&lt;/code&gt; and &lt;code&gt;e*s = s = s*e&lt;/code&gt; for all &lt;code&gt;s &amp;isin; S&lt;/code&gt;.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f4ae6d40699215f86ae7acc6dbd638b4d640c8" translate="yes" xml:space="preserve">
          <source>Lift a semigroup into &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; forming a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; according to &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt;: &quot;Any semigroup &lt;code&gt;S&lt;/code&gt; may be turned into a monoid simply by adjoining an element &lt;code&gt;e&lt;/code&gt; not in &lt;code&gt;S&lt;/code&gt; and defining &lt;code&gt;e*e = e&lt;/code&gt; and &lt;code&gt;e*s = s = s*e&lt;/code&gt; for all &lt;code&gt;s &amp;isin; S&lt;/code&gt;.&quot;</source>
          <target state="translated">Eleve un semigrupo a &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; formando un &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; e de acuerdo con &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt; : &quot;Cualquier semigrupo &lt;code&gt;S&lt;/code&gt; puede convertirse en un monoide simplemente uniendo un elemento &lt;code&gt;e&lt;/code&gt; qu no est&amp;eacute; en &lt;code&gt;S&lt;/code&gt; y definiendo &lt;code&gt;e*e = e&lt;/code&gt; y &lt;code&gt;e*s = s = s*e&lt;/code&gt; para todo &lt;code&gt;s &amp;isin; S&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="ef6d5d2890f728fc0dec424db983bea6034793d1" translate="yes" xml:space="preserve">
          <source>Lift a semigroup into &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; forming a &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; according to &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt;: &quot;Any semigroup &lt;code&gt;S&lt;/code&gt; may be turned into a monoid simply by adjoining an element &lt;code&gt;e&lt;/code&gt; not in &lt;code&gt;S&lt;/code&gt; and defining &lt;code&gt;e*e = e&lt;/code&gt; and &lt;code&gt;e*s = s = s*e&lt;/code&gt; for all &lt;code&gt;s &amp;isin; S&lt;/code&gt;.&quot;</source>
          <target state="translated">Eleve un semigrupo a &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; formando un &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; e de acuerdo con &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt; : &quot;Cualquier semigrupo &lt;code&gt;S&lt;/code&gt; puede convertirse en un monoide simplemente uniendo un elemento &lt;code&gt;e&lt;/code&gt; qu no est&amp;eacute; en &lt;code&gt;S&lt;/code&gt; y definiendo &lt;code&gt;e*e = e&lt;/code&gt; y &lt;code&gt;e*s = s = s*e&lt;/code&gt; para todo &lt;code&gt;s &amp;isin; S&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="f3a10c09a2df5ee40736eca77b005327c3f502e1" translate="yes" xml:space="preserve">
          <source>Lift a semigroup into &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; forming a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; according to &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt;: &quot;Any semigroup &lt;code&gt;S&lt;/code&gt; may be turned into a monoid simply by adjoining an element &lt;code&gt;e&lt;/code&gt; not in &lt;code&gt;S&lt;/code&gt; and defining &lt;code&gt;e*e = e&lt;/code&gt; and &lt;code&gt;e*s = s = s*e&lt;/code&gt; for all &lt;code&gt;s &amp;isin; S&lt;/code&gt;.&quot;</source>
          <target state="translated">Eleve un semigrupo a &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; formando un &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; e de acuerdo con &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt; : &quot;Cualquier semigrupo &lt;code&gt;S&lt;/code&gt; puede convertirse en un monoide simplemente uniendo un elemento &lt;code&gt;e&lt;/code&gt; qu no est&amp;eacute; en &lt;code&gt;S&lt;/code&gt; y definiendo &lt;code&gt;e*e = e&lt;/code&gt; y &lt;code&gt;e*s = s = s*e&lt;/code&gt; para todo &lt;code&gt;s &amp;isin; S&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="55317bb47900a6c531bb57912283090eb69391dc" translate="yes" xml:space="preserve">
          <source>Lift a semigroup into &lt;code&gt;&lt;a href=&quot;prelude#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; forming a &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; according to &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt;: &quot;Any semigroup &lt;code&gt;S&lt;/code&gt; may be turned into a monoid simply by adjoining an element &lt;code&gt;e&lt;/code&gt; not in &lt;code&gt;S&lt;/code&gt; and defining &lt;code&gt;e*e = e&lt;/code&gt; and &lt;code&gt;e*s = s = s*e&lt;/code&gt; for all &lt;code&gt;s &amp;isin; S&lt;/code&gt;.&quot;</source>
          <target state="translated">Eleve un semigrupo a &lt;code&gt;&lt;a href=&quot;prelude#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; formando un &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; e de acuerdo con &lt;a href=&quot;http://en.wikipedia.org/wiki/Monoid&quot;&gt;http://en.wikipedia.org/wiki/Monoid&lt;/a&gt; : &quot;Cualquier semigrupo &lt;code&gt;S&lt;/code&gt; puede convertirse en un monoide simplemente uniendo un elemento &lt;code&gt;e&lt;/code&gt; qu no est&amp;eacute; en &lt;code&gt;S&lt;/code&gt; y definiendo &lt;code&gt;e*e = e&lt;/code&gt; y &lt;code&gt;e*s = s = s*e&lt;/code&gt; para todo &lt;code&gt;s &amp;isin; S&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="b18efdb14898a61cd6bf3e53b88908b07c899338" translate="yes" xml:space="preserve">
          <source>Lift a ternary function to actions.</source>
          <target state="translated">Levantar una función ternaria a las acciones.</target>
        </trans-unit>
        <trans-unit id="1c6cfea669eba5bd426957f891847f721512f382" translate="yes" xml:space="preserve">
          <source>Lift a unary operation to the new monad.</source>
          <target state="translated">Levantar una operación unaria a la nueva mónada.</target>
        </trans-unit>
        <trans-unit id="46b3af654500c45d1bbe42552320fbf9acf7d7ab" translate="yes" xml:space="preserve">
          <source>Lift a value.</source>
          <target state="translated">Levanta un valor.</target>
        </trans-unit>
        <trans-unit id="1a088c3e62edefbbd612558fe95e26c16929b0cf" translate="yes" xml:space="preserve">
          <source>Lift an IO operation</source>
          <target state="translated">Levantar una operación IO</target>
        </trans-unit>
        <trans-unit id="f3531bf1113fe8b33ad38c7a7731990c8b025668" translate="yes" xml:space="preserve">
          <source>Lift an equality test through the type constructor.</source>
          <target state="translated">Levante una prueba de igualdad a través del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="d59a4331fe2b228402b5f804879977d4d2bdbdf8" translate="yes" xml:space="preserve">
          <source>Lift equality tests through the type constructor.</source>
          <target state="translated">Levante las pruebas de igualdad a través del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="ba141aacd2971ab64cd183f644499403aa27baf6" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;(&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;)&lt;/code&gt; function through the type constructor.</source>
          <target state="translated">Levante la funci&amp;oacute;n est&amp;aacute;ndar &lt;code&gt;(&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;)&lt;/code&gt; a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="2a5c11e919022ea17cf3e50538bb0b39ab267ca8" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; function through the type constructor.</source>
          <target state="translated">Eleve la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; est&amp;aacute;ndar a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="a22f0b12039df26e38242ef4e1b27fd9a2aca7c5" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; function through the type constructor.</source>
          <target state="translated">Eleve la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; est&amp;aacute;ndar a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="cef4fc8589a89ebe3dab70e8896098b35542b102" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; functions through the type constructor.</source>
          <target state="translated">Eleve las &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; est&amp;aacute;ndar readPrec y &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="81beb3415733b0127f91ccfbc68d75371f1bc17c" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; function through the type constructor.</source>
          <target state="translated">Eleve la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; est&amp;aacute;ndar a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="faeb2e4ce6194f3ee4155e1efd45893a2e939961" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; functions through the type constructor.</source>
          <target state="translated">Eleve las &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; est&amp;aacute;ndar readsPrec y &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="053aeb1412e2444b0b1a20409a35603dc721e057" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; function through the type constructor.</source>
          <target state="translated">Eleve la funci&amp;oacute;n est&amp;aacute;ndar &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="408cf02de66cc6b705154fd2c661de60e644f5b6" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; functions through the type constructor.</source>
          <target state="translated">Eleve las &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; est&amp;aacute;ndar showsPrec y &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="3004afec47fb6a84cae4d9e49047dab3af9ecdbb" translate="yes" xml:space="preserve">
          <source>Lift the standard &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; function through the type constructor.</source>
          <target state="translated">Levante la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; est&amp;aacute;ndar a trav&amp;eacute;s del constructor de tipos.</target>
        </trans-unit>
        <trans-unit id="f4fbea4d9b31cd33d7694749c6476d3a1af9a3ab" translate="yes" xml:space="preserve">
          <source>Lifted product of functors.</source>
          <target state="translated">Producto levantado de los functores.</target>
        </trans-unit>
        <trans-unit id="3b10925916ee44f531f851144318a3b5ce0f20aa" translate="yes" xml:space="preserve">
          <source>Lifted sum of functors.</source>
          <target state="translated">Suma levantada de fundiciones.</target>
        </trans-unit>
        <trans-unit id="babef654d32e20b79299fbdb4e3acce1da353228" translate="yes" xml:space="preserve">
          <source>Lifted, heterogeneous equality. By lifted, we mean that it can be bogus (deferred type error). By heterogeneous, the two types &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; might have different kinds. Because &lt;code&gt;~~&lt;/code&gt; can appear unexpectedly in error messages to users who do not care about the difference between heterogeneous equality &lt;code&gt;~~&lt;/code&gt; and homogeneous equality &lt;code&gt;~&lt;/code&gt;, this is printed as &lt;code&gt;~&lt;/code&gt; unless &lt;code&gt;-fprint-equality-relations&lt;/code&gt; is set.</source>
          <target state="translated">Igualdad elevada y heterog&amp;eacute;nea. Por levantado, queremos decir que puede ser falso (error de tipo diferido). Por heterog&amp;eacute;nea, los dos tipos &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; pueden tener diferentes tipos. Debido a que &lt;code&gt;~~&lt;/code&gt; puede aparecer inesperadamente en mensajes de error para usuarios a los que no les importa la diferencia entre igualdad heterog&amp;eacute;nea &lt;code&gt;~~&lt;/code&gt; e igualdad homog&amp;eacute;nea &lt;code&gt;~&lt;/code&gt; , esto se imprime como &lt;code&gt;~&lt;/code&gt; a menos que se establezca &lt;code&gt;-fprint-equality-relations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4bfbdd16cc189cc5129a0d8ec953d2317a224b0" translate="yes" xml:space="preserve">
          <source>LiftedRep</source>
          <target state="translated">LiftedRep</target>
        </trans-unit>
        <trans-unit id="12c2f75c3b26c4edac3b33e5c51db3b8e36394c9" translate="yes" xml:space="preserve">
          <source>Lifting an applicative</source>
          <target state="translated">Levantar una aplicación</target>
        </trans-unit>
        <trans-unit id="e2c3b2b741daea57fdd436a0412a6ba2f18b6f68" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; class to binary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; a constructores de tipo binario.</target>
        </trans-unit>
        <trans-unit id="44895603faea79f05cd37173f6a4597b6953146e" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; class to unary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; a constructores de tipo unario.</target>
        </trans-unit>
        <trans-unit id="e0a82371cc12bbf7738745a43b619731d3611950" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; class to binary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; a constructores de tipo binario.</target>
        </trans-unit>
        <trans-unit id="7d9b6f54af0f5e9694ecfd7ee7add7a2cc652087" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; class to unary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; a constructores de tipo unario.</target>
        </trans-unit>
        <trans-unit id="ae55fc1bef97cadc36b9661bf1e25f7f4c7e352d" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; class to binary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; a constructores de tipo binario.</target>
        </trans-unit>
        <trans-unit id="86c660f1a1c56586cead2935de6c64b3ef5324c5" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; class to unary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; a constructores de tipo unario.</target>
        </trans-unit>
        <trans-unit id="b2e9206d787342e53328d0f894bfa7fc5940af4a" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class to binary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; a constructores de tipo binario.</target>
        </trans-unit>
        <trans-unit id="d56ab180af5b8c6b67cd1de105953549f78976c7" translate="yes" xml:space="preserve">
          <source>Lifting of the &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class to unary type constructors.</source>
          <target state="translated">Elevaci&amp;oacute;n de la clase &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; a constructores de tipo unario.</target>
        </trans-unit>
        <trans-unit id="ef79daca18c86fc7acb004897eb034a72769183c" translate="yes" xml:space="preserve">
          <source>Lifting other operations</source>
          <target state="translated">Levantamiento de otras operaciones</target>
        </trans-unit>
        <trans-unit id="70b315b20d2f0763f381b07677fe5fcdd427769f" translate="yes" xml:space="preserve">
          <source>Liftings of Prelude classes</source>
          <target state="translated">Levantamiento de las clases de Preludio</target>
        </trans-unit>
        <trans-unit id="bbd32f90f691094d13a835f9d8bc070165c84480" translate="yes" xml:space="preserve">
          <source>Liftings of the &lt;code&gt;NFData&lt;/code&gt; class</source>
          <target state="translated">Elevaciones de la clase &lt;code&gt;NFData&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf36ebf7919530abaa3b7a585d3a7f483fb9666d" translate="yes" xml:space="preserve">
          <source>Liftings of the Prelude classes &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; to unary and binary type constructors.</source>
          <target state="translated">Elevaciones de las clases Prelude &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; a constructores de tipo unario y binario.</target>
        </trans-unit>
        <trans-unit id="b9662e4165cf70bc0656fd852ce8badb4bccd421" translate="yes" xml:space="preserve">
          <source>Lifts an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; e&lt;/code&gt; into any &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt; e&lt;/code&gt;.</source>
          <target state="translated">Eleva un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; e&lt;/code&gt; en cualquier &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt; e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e98068ced479359302008df12305e0fa6226acf9" translate="yes" xml:space="preserve">
          <source>Lifts an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; e&lt;/code&gt; into any &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt; e&lt;/code&gt;.</source>
          <target state="translated">Eleva un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; e&lt;/code&gt; en cualquier &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt; e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="533e09a9bf33161ccd152904f791f9b0ccd0dfa2" translate="yes" xml:space="preserve">
          <source>Lifts an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; e&lt;/code&gt; into any &lt;code&gt;&lt;a href=&quot;control-monad-error-class#t:MonadError&quot;&gt;MonadError&lt;/a&gt; e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f90827cfa26ca646d28cee985138fed19cc82be" translate="yes" xml:space="preserve">
          <source>Lifts an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt; e&lt;/code&gt; into any &lt;code&gt;&lt;a href=&quot;control-monad-except#t:MonadError&quot;&gt;MonadError&lt;/a&gt; e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea5fc5a99bc5f43e32f54299e4add38a5941b11" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt;, but options set with &lt;a href=&quot;#ghci-cmd-:seti&quot;&gt;&lt;code&gt;:seti&lt;/code&gt;&lt;/a&gt; affect only expressions and commands typed at the prompt, and not modules loaded with &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; (in contrast, options set with &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; apply everywhere). See &lt;a href=&quot;#ghci-interactive-options&quot;&gt;Setting options for interactive evaluation only&lt;/a&gt;.</source>
          <target state="translated">Como &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; , pero las opciones configuradas con &lt;a href=&quot;#ghci-cmd-:seti&quot;&gt; &lt;code&gt;:seti&lt;/code&gt; &lt;/a&gt; afectan solo a las expresiones y comandos escritos en el indicador, y no a los m&amp;oacute;dulos cargados con &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; (en contraste, las opciones configuradas con &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; se&lt;/a&gt; aplican en todas partes). Consulte &lt;a href=&quot;#ghci-interactive-options&quot;&gt;Configuraci&amp;oacute;n de opciones solo para evaluaci&amp;oacute;n interactiva&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3eb1542266aa6e78b551f4a66f99dca63eb84c5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; , pero descarta el resultado.</target>
        </trans-unit>
        <trans-unit id="3ee688d5e3686106a78a8c11143028e7c7c2d867" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:openTempFile&quot;&gt;openTempFile&lt;/a&gt;&lt;/code&gt;, but opens the file in binary mode. See &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; for more comments.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:openTempFile&quot;&gt;openTempFile&lt;/a&gt;&lt;/code&gt; , pero abre el archivo en modo binario. Consulte &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; para obtener m&amp;aacute;s comentarios.</target>
        </trans-unit>
        <trans-unit id="171756990cca268601ff47e149f013f10d1f0b1d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5d1ae0b75edd09252cda3ae684b700669426cc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:openTempFile&quot;&gt;openTempFile&lt;/a&gt;&lt;/code&gt;, but opens the file in binary mode. See &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; for more comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95f6be3cd220d7c265e9ff2d6eb81b829a783d7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, but lets you specify on which capability the thread should run. Unlike a &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; thread, a thread created by &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; will stay on the same capability for its entire lifetime (&lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; threads can migrate between capabilities according to the scheduling policy). &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is useful for overriding the scheduling policy when you know in advance how best to distribute the threads.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , pero le permite especificar en qu&amp;eacute; capacidad debe ejecutarse el hilo. A diferencia de un subproceso &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , un subproceso creado por &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; permanecer&amp;aacute; en la misma capacidad durante toda su vida &amp;uacute;til (los subprocesos &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; pueden migrar entre capacidades de acuerdo con la pol&amp;iacute;tica de programaci&amp;oacute;n). &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; es &amp;uacute;til para anular la pol&amp;iacute;tica de programaci&amp;oacute;n cuando sabe de antemano cu&amp;aacute;l es la mejor manera de distribuir los subprocesos.</target>
        </trans-unit>
        <trans-unit id="315f04774b37e903ccef1fd017cf5e6c8fb19cad" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, but the child thread is passed a function that can be used to unmask asynchronous exceptions. This function is typically used in the following way</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , pero al hilo secundario se le pasa una funci&amp;oacute;n que puede usarse para desenmascarar excepciones asincr&amp;oacute;nicas. Esta funci&amp;oacute;n se usa normalmente de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="26af205331dd385348a903a75489cae5ac1bc8a2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, this sparks off a new thread to run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument, and returns the &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the newly created thread.</source>
          <target state="translated">Al igual que &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , esto desencadena un nuevo hilo para ejecutar el c&amp;aacute;lculo de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; pasado como primer argumento y devuelve el &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; del hilo reci&amp;eacute;n creado.</target>
        </trans-unit>
        <trans-unit id="e51a2d5c390f6fe2c3f06d7a141e356abf36b260" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;, but the child thread is a bound thread, as with &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt; , pero el hilo secundario es un hilo enlazado, como con &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee5a0feb98209de5e446543c7ee38359b8a7b02e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;, but the child thread is pinned to the given CPU, as with &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt; , pero el subproceso secundario est&amp;aacute; anclado a la CPU dada, como con &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="894deb520e4932d4ccd6a7678d392f4657ad389a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:modifyMVar&quot;&gt;modifyMVar&lt;/a&gt;&lt;/code&gt;, but the &lt;code&gt;IO&lt;/code&gt; action in the second argument is executed with asynchronous exceptions masked.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:modifyMVar&quot;&gt;modifyMVar&lt;/a&gt;&lt;/code&gt; , pero la acci&amp;oacute;n &lt;code&gt;IO&lt;/code&gt; en el segundo argumento se ejecuta con excepciones as&amp;iacute;ncronas enmascaradas.</target>
        </trans-unit>
        <trans-unit id="b23d745348276319c0475e801e641228506e2414" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:modifyMVar_&quot;&gt;modifyMVar_&lt;/a&gt;&lt;/code&gt;, but the &lt;code&gt;IO&lt;/code&gt; action in the second argument is executed with asynchronous exceptions masked.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:modifyMVar_&quot;&gt;modifyMVar_&lt;/a&gt;&lt;/code&gt; , pero la acci&amp;oacute;n &lt;code&gt;IO&lt;/code&gt; en el segundo argumento se ejecuta con excepciones asincr&amp;oacute;nicas enmascaradas.</target>
        </trans-unit>
        <trans-unit id="cbaf69411b6e48d7f755fce6152d35bbf2f5117d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt;, but the &lt;code&gt;IO&lt;/code&gt; action in the second argument is executed with asynchronous exceptions masked.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt; , pero la acci&amp;oacute;n &lt;code&gt;IO&lt;/code&gt; en el segundo argumento se ejecuta con excepciones asincr&amp;oacute;nicas enmascaradas.</target>
        </trans-unit>
        <trans-unit id="ddf1b2d2d7438a64e06e7288f0b784895fdb2d25" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#v:modifyTVar-39-&quot;&gt;modifyTVar'&lt;/a&gt;&lt;/code&gt; but the function is a simple state transition that can return a side value which is passed on as the result of the &lt;code&gt;&lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#v:modifyTVar-39-&quot;&gt;modifyTVar'&lt;/a&gt;&lt;/code&gt; pero la funci&amp;oacute;n es una transici&amp;oacute;n de estado simple que puede devolver un valor lateral que se transmite como resultado del &lt;code&gt;&lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c85aa7d7cdb5b9edc279fc62b53487dd9aa084bc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;, but only performs the final action if there was an exception raised by the in-between computation.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; , pero solo realiza la acci&amp;oacute;n final si hubo una excepci&amp;oacute;n generada por el c&amp;aacute;lculo intermedio.</target>
        </trans-unit>
        <trans-unit id="428edc72ad0acbe121d8494d1d65e4193ca597f0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-exception#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt;, but only performs the final action if there was an exception raised by the computation.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-exception#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt; , pero solo realiza la acci&amp;oacute;n final si hubo una excepci&amp;oacute;n generada por el c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="58d823ae8a2d7d414c0d42e7b802e79575732ed8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, but does not pass a &lt;code&gt;restore&lt;/code&gt; action to the argument.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; , pero no pasa una acci&amp;oacute;n de &lt;code&gt;restore&lt;/code&gt; al argumento.</target>
        </trans-unit>
        <trans-unit id="6caf66653eb22b299f52b1089ebb3605f273b200" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, but the masked computation is not interruptible (see &lt;a href=&quot;control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt;). THIS SHOULD BE USED WITH GREAT CARE, because if a thread executing in &lt;code&gt;&lt;a href=&quot;control-exception#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; blocks for any reason, then the thread (and possibly the program, if this is the main thread) will be unresponsive and unkillable. This function should only be necessary if you need to mask exceptions around an interruptible operation, and you can guarantee that the interruptible operation will only block for a short period of time.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; , pero el c&amp;aacute;lculo enmascarado no es interrumpible (ver &lt;a href=&quot;control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt; ). ESTO DEBE UTILIZARSE CON MUCHO CUIDADO, porque si un hilo que se ejecuta en &lt;code&gt;&lt;a href=&quot;control-exception#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; se bloquea por cualquier motivo, entonces el hilo (y posiblemente el programa, si este es el hilo principal) no responder&amp;aacute; y no se podr&amp;aacute; eliminar. Esta funci&amp;oacute;n solo deber&amp;iacute;a ser necesaria si necesita enmascarar excepciones alrededor de una operaci&amp;oacute;n interrumpible, y puede garantizar que la operaci&amp;oacute;n interrumpible solo se bloquear&amp;aacute; por un per&amp;iacute;odo corto de tiempo.</target>
        </trans-unit>
        <trans-unit id="c4d8e2c728be8dff68d64c2a9d4e55d7a3457b7d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-exception#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;, but does not pass a &lt;code&gt;restore&lt;/code&gt; action to the argument.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-exception#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; , pero no pasa una acci&amp;oacute;n de &lt;code&gt;restore&lt;/code&gt; al argumento.</target>
        </trans-unit>
        <trans-unit id="d0c2cdb316924ad0cfcfbad4c5a54c0b89f7946f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-monad#v:foldM&quot;&gt;foldM&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-monad#v:foldM&quot;&gt;foldM&lt;/a&gt;&lt;/code&gt; , pero descarta el resultado.</target>
        </trans-unit>
        <trans-unit id="b96efb08972b89ea81a161e65a91a252070d9475" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; , pero descarta el resultado.</target>
        </trans-unit>
        <trans-unit id="b6ab6604b14c9e57db46ecf0ddcd0256f914b9e9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;, but only performs the final action if an error is thrown by the in-between computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a432005495b7136cfdf428a9a6ea3acfc5248a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, but does not pass a &lt;code&gt;restore&lt;/code&gt; action to the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af33929c8b3cdd326c411d0878af278835603f2d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, but the masked computation is not interruptible (see &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;'s &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;. WARNING: Only use if you need to mask exceptions around an interruptible operation AND you can guarantee the interruptible operation will only block for a short period of time. Otherwise you render the program/thread unresponsive and/or unkillable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f3eb839ad43d64884f153d8e4355f1395cdc6c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;, but does not pass a &lt;code&gt;restore&lt;/code&gt; action to the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cdc9f7942398d4390de39bd760476640cca3cf" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt;, except that a shorter &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; may be returned if there are not enough bytes immediately available to satisfy the whole request. &lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGetSome&quot;&gt;hGetSome&lt;/a&gt;&lt;/code&gt; only blocks if there is no data available, and EOF has not yet been reached.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; , excepto que se puede devolver un &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s corto si no hay suficientes bytes disponibles inmediatamente para satisfacer la solicitud completa. &lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGetSome&quot;&gt;hGetSome&lt;/a&gt;&lt;/code&gt; solo se bloquea si no hay datos disponibles y a&amp;uacute;n no se ha alcanzado EOF.</target>
        </trans-unit>
        <trans-unit id="22204fd64f738ebaf8d59795481095728e60cafd" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt;, except that a shorter &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; may be returned if there are not enough bytes immediately available to satisfy the whole request. &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGetSome&quot;&gt;hGetSome&lt;/a&gt;&lt;/code&gt; only blocks if there is no data available, and EOF has not yet been reached.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; , excepto que se puede devolver un &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s corto si no hay suficientes bytes disponibles inmediatamente para satisfacer la solicitud completa. &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGetSome&quot;&gt;hGetSome&lt;/a&gt;&lt;/code&gt; solo se bloquea si no hay datos disponibles y a&amp;uacute;n no se ha alcanzado EOF.</target>
        </trans-unit>
        <trans-unit id="88bc8146cfaa55c674a416c3250cf7fde75cab90" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:unsafeCreate&quot;&gt;unsafeCreate&lt;/a&gt;&lt;/code&gt; but instead of giving the final size of the ByteString, it is just an upper bound. The inner action returns the actual size. Unlike &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:createAndTrim&quot;&gt;createAndTrim&lt;/a&gt;&lt;/code&gt; the ByteString is not reallocated if the final size is less than the estimated size.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:unsafeCreate&quot;&gt;unsafeCreate&lt;/a&gt;&lt;/code&gt; , pero en lugar de dar el tama&amp;ntilde;o final de ByteString, es solo un l&amp;iacute;mite superior. La acci&amp;oacute;n interna devuelve el tama&amp;ntilde;o real. A diferencia de &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#v:createAndTrim&quot;&gt;createAndTrim&lt;/a&gt;&lt;/code&gt; , ByteString no se reasigna si el tama&amp;ntilde;o final es menor que el tama&amp;ntilde;o estimado.</target>
        </trans-unit>
        <trans-unit id="f5d3796594fc3ab685a758f79230f2378e0d143a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; but returning unit in an arbitrary &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context. Allows for convenient use in do-notation.</source>
          <target state="translated">Como unidad de &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; pero de retorno en un contexto &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; arbitrario Permite un uso conveniente en notaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d14b22297f44f3b23085789ee54f433e3be99756" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; but returns the message instead of a third value.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; pero devuelve el mensaje en lugar de un tercer valor.</target>
        </trans-unit>
        <trans-unit id="94f249d85e854bd365a2caf558548ba6a48c90f7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt;, but uses &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; on the argument to convert it to a &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; , pero usa &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; en el argumento para convertirlo en &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bda17b6fe85f48913bc5a5c73b83bf25335feb15" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceM&quot;&gt;traceM&lt;/a&gt;&lt;/code&gt;, but uses &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; on the argument to convert it to a &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceM&quot;&gt;traceM&lt;/a&gt;&lt;/code&gt; , pero usa &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; en el argumento para convertirlo en &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d4f7e6d83c6d859a27421bd667669770d5a90e1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceShow&quot;&gt;traceShow&lt;/a&gt;&lt;/code&gt; but returns the shown value instead of a third value.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceShow&quot;&gt;traceShow&lt;/a&gt;&lt;/code&gt; pero devuelve el valor mostrado en lugar de un tercer valor.</target>
        </trans-unit>
        <trans-unit id="3388029e6ebab6adb5dbdc535cdaa4a63773ee6d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:addForeignPtrFinalizer&quot;&gt;addForeignPtrFinalizer&lt;/a&gt;&lt;/code&gt; but the finalizer is passed an additional environment parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7201461e77cbbffbf975483dea651ac9f115ae" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt; but allows the finalizer to be passed an additional environment parameter to be passed to the finalizer. The environment passed to the finalizer is fixed by the second argument to &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt; , pero permite que se pase al finalizador un par&amp;aacute;metro de entorno adicional al finalizador. El entorno pasado al finalizador se fija mediante el segundo argumento para &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61b50bda211ddddaf8be8d611e3ac6aceb8f889d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:addForeignPtrFinalizer&quot;&gt;addForeignPtrFinalizer&lt;/a&gt;&lt;/code&gt; but the finalizer is passed an additional environment parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7debe615da856622a94fda2ea5817fa207e70f78" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt; but allows the finalizer to be passed an additional environment parameter to be passed to the finalizer. The environment passed to the finalizer is fixed by the second argument to &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt; , pero permite que se pase al finalizador un par&amp;aacute;metro de entorno adicional al finalizador. El entorno pasado al finalizador se fija mediante el segundo argumento para &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64ed7e2ac88ad404c757ebe2bf247c490e1bb7f8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; but memory is filled with bytes of value zero.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; , pero la memoria est&amp;aacute; llena de bytes de valor cero.</target>
        </trans-unit>
        <trans-unit id="86170fb3c040fb17cc898e1ff2e2691ab6d6babd" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:allocaArray&quot;&gt;allocaArray&lt;/a&gt;&lt;/code&gt;, but add an extra position to hold a special termination element.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:allocaArray&quot;&gt;allocaArray&lt;/a&gt;&lt;/code&gt; , pero agregue una posici&amp;oacute;n adicional para contener un elemento de terminaci&amp;oacute;n especial.</target>
        </trans-unit>
        <trans-unit id="ac1ab9de75683278e54e5c08a09c39dc2659dca6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:callocArray0&quot;&gt;callocArray0&lt;/a&gt;&lt;/code&gt;, but allocated memory is filled with bytes of value zero.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:callocArray0&quot;&gt;callocArray0&lt;/a&gt;&lt;/code&gt; , pero la memoria asignada se llena con bytes de valor cero.</target>
        </trans-unit>
        <trans-unit id="31e8f4f3a29d9ebfdb6b5dd33afab7987daa7fac" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:mallocArray&quot;&gt;mallocArray&lt;/a&gt;&lt;/code&gt;, but add an extra position to hold a special termination element.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:mallocArray&quot;&gt;mallocArray&lt;/a&gt;&lt;/code&gt; , pero agregue una posici&amp;oacute;n adicional para contener un elemento de terminaci&amp;oacute;n especial.</target>
        </trans-unit>
        <trans-unit id="e8798d35982e07ff23b6d4dd4f9bdb7568df53ad" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:mallocArray&quot;&gt;mallocArray&lt;/a&gt;&lt;/code&gt;, but allocated memory is filled with bytes of value zero.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:mallocArray&quot;&gt;mallocArray&lt;/a&gt;&lt;/code&gt; , pero la memoria asignada se llena con bytes de valor cero.</target>
        </trans-unit>
        <trans-unit id="56fea7f011d519c7d258e88b7f3d4ae54477fc85" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:withArray&quot;&gt;withArray&lt;/a&gt;&lt;/code&gt;, but a terminator indicates where the array ends</source>
          <target state="translated">Como con &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:withArray&quot;&gt;withArray&lt;/a&gt;&lt;/code&gt; , pero un terminador indica d&amp;oacute;nde termina la matriz</target>
        </trans-unit>
        <trans-unit id="5f5dc7b1ce9daa64f13a0b057b2f35119ac5cd95" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:withArray&quot;&gt;withArray&lt;/a&gt;&lt;/code&gt;, but the action gets the number of values as an additional parameter</source>
          <target state="translated">Como con &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:withArray&quot;&gt;withArray&lt;/a&gt;&lt;/code&gt; , pero la acci&amp;oacute;n obtiene el n&amp;uacute;mero de valores como par&amp;aacute;metro adicional</target>
        </trans-unit>
        <trans-unit id="2e4b7f2fe78306ea129c2aaf255ab760c2af8b59" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:withArrayLen&quot;&gt;withArrayLen&lt;/a&gt;&lt;/code&gt;, but a terminator indicates where the array ends</source>
          <target state="translated">Como con &lt;code&gt;&lt;a href=&quot;foreign-marshal-array#v:withArrayLen&quot;&gt;withArrayLen&lt;/a&gt;&lt;/code&gt; , pero un terminador indica d&amp;oacute;nde termina la matriz</target>
        </trans-unit>
        <trans-unit id="789fc518616c7bbb0baf7f9f6873e5ac8d47ec18" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-error#v:throwIf&quot;&gt;throwIf&lt;/a&gt;&lt;/code&gt;, but discarding the result</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-marshal-error#v:throwIf&quot;&gt;throwIf&lt;/a&gt;&lt;/code&gt; , pero descartando el resultado</target>
        </trans-unit>
        <trans-unit id="c8a36a8d0834f745b3ab8c875279421ca4121094" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;foreign-marshal-error#v:throwIfNeg&quot;&gt;throwIfNeg&lt;/a&gt;&lt;/code&gt;, but discarding the result</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;foreign-marshal-error#v:throwIfNeg&quot;&gt;throwIfNeg&lt;/a&gt;&lt;/code&gt; , pero descartando el resultado</target>
        </trans-unit>
        <trans-unit id="6a1b2b22a37fbf26bc19da6800d4f4f4c18e9196" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-arr#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt;, but without checking that the value is in range.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-arr#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; , pero sin comprobar que el valor est&amp;eacute; dentro del rango.</target>
        </trans-unit>
        <trans-unit id="fd6ed34fe3d856c29ed47ef21309ed222b27e308" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, but lets you specify on which capability the thread should run. Unlike a &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; thread, a thread created by &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; will stay on the same capability for its entire lifetime (&lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; threads can migrate between capabilities according to the scheduling policy). &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is useful for overriding the scheduling policy when you know in advance how best to distribute the threads.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , pero le permite especificar en qu&amp;eacute; capacidad debe ejecutarse el hilo. A diferencia de un subproceso &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , un subproceso creado por &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; permanecer&amp;aacute; en la misma capacidad durante toda su vida &amp;uacute;til (los subprocesos &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; pueden migrar entre capacidades de acuerdo con la pol&amp;iacute;tica de programaci&amp;oacute;n). &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; es &amp;uacute;til para anular la pol&amp;iacute;tica de programaci&amp;oacute;n cuando sabe de antemano cu&amp;aacute;l es la mejor manera de distribuir los subprocesos.</target>
        </trans-unit>
        <trans-unit id="8a1ab1b4c3fc6205f7cbc119a5029f50c82ecfa2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, but the child thread is passed a function that can be used to unmask asynchronous exceptions. This function is typically used in the following way</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , pero al hilo secundario se le pasa una funci&amp;oacute;n que puede usarse para desenmascarar excepciones asincr&amp;oacute;nicas. Esta funci&amp;oacute;n se usa normalmente de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="36c33ff708aca6f019cd5e4f36eb986bb33a1c42" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;, but the child thread is pinned to the given CPU, as with &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt; , pero el subproceso secundario est&amp;aacute; anclado a la CPU dada, como con &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7e718907739536fc11ccba60be322ece4a576f0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, but lets you specify on which capability the thread should run. Unlike a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; thread, a thread created by &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; will stay on the same capability for its entire lifetime (&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; threads can migrate between capabilities according to the scheduling policy). &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is useful for overriding the scheduling policy when you know in advance how best to distribute the threads.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , pero le permite especificar en qu&amp;eacute; capacidad debe ejecutarse el hilo. A diferencia de un subproceso &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , un subproceso creado por &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; permanecer&amp;aacute; en la misma capacidad durante toda su vida &amp;uacute;til (los subprocesos &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; pueden migrar entre capacidades de acuerdo con la pol&amp;iacute;tica de programaci&amp;oacute;n). &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; es &amp;uacute;til para anular la pol&amp;iacute;tica de programaci&amp;oacute;n cuando sabe de antemano cu&amp;aacute;l es la mejor manera de distribuir los subprocesos.</target>
        </trans-unit>
        <trans-unit id="06b626d6d4d9cc23806065fb84e761850f571140" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, but the child thread is passed a function that can be used to unmask asynchronous exceptions. This function is typically used in the following way</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , pero al hilo secundario se le pasa una funci&amp;oacute;n que puede usarse para desenmascarar excepciones asincr&amp;oacute;nicas. Esta funci&amp;oacute;n se usa normalmente de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="2074e4e1e1d435d659723420ae5b7066c75304a9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;, but the child thread is pinned to the given CPU, as with &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt; , pero el subproceso secundario est&amp;aacute; anclado a la CPU dada, como con &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03378dafea3e612ebd75747dbec79dd54212c74e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:addForeignPtrFinalizer&quot;&gt;addForeignPtrFinalizer&lt;/a&gt;&lt;/code&gt; but the finalizer is passed an additional environment parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3f4ecabff6e19ca899a6be2fc7069356485a28" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt; but allows the finalizer to be passed an additional environment parameter to be passed to the finalizer. The environment passed to the finalizer is fixed by the second argument to &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt; , pero permite que se pase al finalizador un par&amp;aacute;metro de entorno adicional al finalizador. El entorno pasado al finalizador se fija mediante el segundo argumento para &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:addForeignPtrFinalizerEnv&quot;&gt;addForeignPtrFinalizerEnv&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ce27041c32b2c7b9dd00240cd18dbacb3f46271" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;, there is a class &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; that defines a representation &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep1&quot;&gt;Rep1&lt;/a&gt;&lt;/code&gt; and conversion functions &lt;code&gt;&lt;a href=&quot;ghc-generics#v:from1&quot;&gt;from1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#v:to1&quot;&gt;to1&lt;/a&gt;&lt;/code&gt;, only that &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; ranges over types of kind &lt;code&gt;* -&amp;gt; *&lt;/code&gt;. (More generally, it can range over types of kind &lt;code&gt;k -&amp;gt; *&lt;/code&gt;, for any kind &lt;code&gt;k&lt;/code&gt;, if the &lt;code&gt;PolyKinds&lt;/code&gt; extension is enabled. More on this later.) The &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; class is also derivable.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; , hay una clase &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; que define una representaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep1&quot;&gt;Rep1&lt;/a&gt;&lt;/code&gt; funciones y conversi&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-generics#v:from1&quot;&gt;from1&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;ghc-generics#v:to1&quot;&gt;to1&lt;/a&gt;&lt;/code&gt; , solo que &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; se extiende sobre los tipos de clase &lt;code&gt;* -&amp;gt; *&lt;/code&gt; . (De manera m&amp;aacute;s general, puede variar entre tipos de tipo &lt;code&gt;k -&amp;gt; *&lt;/code&gt; , para cualquier tipo &lt;code&gt;k&lt;/code&gt; , si la extensi&amp;oacute;n &lt;code&gt;PolyKinds&lt;/code&gt; est&amp;aacute; habilitada. M&amp;aacute;s sobre esto m&amp;aacute;s adelante). La clase &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n es derivable.</target>
        </trans-unit>
        <trans-unit id="c6bccda987e33fe0bbf298a851536cd1b5e84ab8" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, but does not pass a &lt;code&gt;restore&lt;/code&gt; action to the argument.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; , pero no pasa una acci&amp;oacute;n de &lt;code&gt;restore&lt;/code&gt; al argumento.</target>
        </trans-unit>
        <trans-unit id="aad2536126d6403f4616d23d084d88d2eb347131" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, but the masked computation is not interruptible (see &lt;a href=&quot;control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt;). THIS SHOULD BE USED WITH GREAT CARE, because if a thread executing in &lt;code&gt;&lt;a href=&quot;ghc-io#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; blocks for any reason, then the thread (and possibly the program, if this is the main thread) will be unresponsive and unkillable. This function should only be necessary if you need to mask exceptions around an interruptible operation, and you can guarantee that the interruptible operation will only block for a short period of time.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; , pero el c&amp;aacute;lculo enmascarado no es interrumpible (ver &lt;a href=&quot;control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt; ). ESTO DEBE UTILIZARSE CON MUCHO CUIDADO, porque si un hilo que se ejecuta en &lt;code&gt;&lt;a href=&quot;ghc-io#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; se bloquea por cualquier motivo, entonces el hilo (y posiblemente el programa, si este es el hilo principal) no responder&amp;aacute; y no se podr&amp;aacute; eliminar. Esta funci&amp;oacute;n solo deber&amp;iacute;a ser necesaria si necesita enmascarar excepciones alrededor de una operaci&amp;oacute;n interrumpible, y puede garantizar que la operaci&amp;oacute;n interrumpible solo se bloquear&amp;aacute; por un per&amp;iacute;odo corto de tiempo.</target>
        </trans-unit>
        <trans-unit id="8ad819e37fccd377f4f7ea98ffe39aaa59462a5e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-io#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;, but does not pass a &lt;code&gt;restore&lt;/code&gt; action to the argument.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-io#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; , pero no pasa una acci&amp;oacute;n de &lt;code&gt;restore&lt;/code&gt; al argumento.</target>
        </trans-unit>
        <trans-unit id="8f34379fe53a8f49eef2d4d51e196bbfce89ed5a" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;, but open the file in binary mode. On Windows, reading a file in text mode (which is the default) will translate CRLF to LF, and writing will translate LF to CRLF. This is usually what you want with text files. With binary files this is undesirable; also, as usual under Microsoft operating systems, text mode treats control-Z as EOF. Binary mode turns off all special treatment of end-of-line and end-of-file characters. (See also &lt;code&gt;&lt;a href=&quot;system-io#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt; , pero abre el archivo en modo binario. En Windows, leer un archivo en modo texto (que es el predeterminado) traducir&amp;aacute; CRLF a LF y la escritura traducir&amp;aacute; LF a CRLF. Esto suele ser lo que desea con los archivos de texto. Con archivos binarios esto no es deseable; tambi&amp;eacute;n, como es habitual en los sistemas operativos de Microsoft, el modo de texto trata control-Z como EOF. El modo binario desactiva todo tratamiento especial de los caracteres de fin de l&amp;iacute;nea y fin de archivo. (Consulte tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;system-io#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c6e447be1c8c5966385a7af2bdc9dacccc9d0191" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;, but opens the file in ordinary blocking mode. This can be useful for opening a FIFO for writing: if we open in non-blocking mode then the open will fail if there are no readers, whereas a blocking open will block until a reader appear.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt; , pero abre el archivo en modo de bloqueo normal. Esto puede ser &amp;uacute;til para abrir un FIFO para escritura: si abrimos en modo no bloqueante, la apertura fallar&amp;aacute; si no hay lectores, mientras que una apertura con bloqueo bloquear&amp;aacute; hasta que aparezca un lector.</target>
        </trans-unit>
        <trans-unit id="d11ed8ec1f7d4a4f76c34befc3bc8a8f2cef6d9c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-ix#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt;, but without checking that the value is in range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11412198fb2aebb6ae9a4f43a11db80ce5c58256" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-show#v:showLitString&quot;&gt;showLitString&lt;/a&gt;&lt;/code&gt; (expand escape characters using Haskell escape conventions), but * break the string into multiple lines * wrap the entire thing in double quotes Example: &lt;code&gt;showMultiLineString &quot;hellongoodbyenblah&quot;&lt;/code&gt; returns &lt;code&gt;[&quot;&quot;hello\n\&quot;, &quot;\goodbyen\&quot;, &quot;\blah&quot;&quot;]&lt;/code&gt;</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-show#v:showLitString&quot;&gt;showLitString&lt;/a&gt;&lt;/code&gt; (expande los caracteres de escape usando las convenciones de escape de Haskell), pero * divide la cadena en varias l&amp;iacute;neas * envuelve todo el texto entre comillas dobles Ejemplo: &lt;code&gt;showMultiLineString &quot;hellongoodbyenblah&quot;&lt;/code&gt; returns &lt;code&gt;[&quot;&quot;hello\n\&quot;, &quot;\goodbyen\&quot;, &quot;\blah&quot;&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c39ac872c5a458945a6a2759691e5bcbdb98387" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;ghc-tophandler#v:runIO&quot;&gt;runIO&lt;/a&gt;&lt;/code&gt;, but in the event of an exception that causes an exit, we don't shut down the system cleanly, we just exit. This is useful in some cases, because the safe exit version will give other threads a chance to clean up first, which might shut down the system in a different way. For example, try</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-tophandler#v:runIO&quot;&gt;runIO&lt;/a&gt;&lt;/code&gt; , pero en el caso de una excepci&amp;oacute;n que provoque una salida, no apagamos el sistema limpiamente, simplemente salimos. Esto es &amp;uacute;til en algunos casos, porque la versi&amp;oacute;n de salida segura dar&amp;aacute; a otros subprocesos la oportunidad de limpiar primero, lo que podr&amp;iacute;a apagar el sistema de una manera diferente. Por ejemplo, intente</target>
        </trans-unit>
        <trans-unit id="92a361d777b7468b2f4fc3ce94a02dd7971e288e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt;, but only performs the final action if there was an exception raised by the computation.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt; , pero solo realiza la acci&amp;oacute;n final si hubo una excepci&amp;oacute;n generada por el c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="d3dcb0071e2c488b5032fe8ef982a6ce42d875b4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-environment#v:getArgs&quot;&gt;getArgs&lt;/a&gt;&lt;/code&gt;, but can also read arguments supplied via response files.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-environment#v:getArgs&quot;&gt;getArgs&lt;/a&gt;&lt;/code&gt; , pero tambi&amp;eacute;n puede leer argumentos proporcionados a trav&amp;eacute;s de archivos de respuesta.</target>
        </trans-unit>
        <trans-unit id="524c7a43bda4a60c5d96c8d591c7b926a8919edd" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-environment#v:setEnv&quot;&gt;setEnv&lt;/a&gt;&lt;/code&gt;, but allows blank environment values and mimics the function signature of &lt;code&gt;&lt;a href=&quot;system-posix-env#v:setEnv&quot;&gt;setEnv&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;unix&lt;/code&gt; package.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-environment#v:setEnv&quot;&gt;setEnv&lt;/a&gt;&lt;/code&gt; , pero permite valores de entorno en blanco e imita la firma de funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-posix-env#v:setEnv&quot;&gt;setEnv&lt;/a&gt;&lt;/code&gt; del paquete &lt;code&gt;unix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b797f1a70d1f88521b8770e48825b66c385a7740" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-environment#v:unsetEnv&quot;&gt;unsetEnv&lt;/a&gt;&lt;/code&gt;, but allows for the removal of blank environment variables. May throw an exception if the underlying platform doesn't support unsetting of environment variables.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-environment#v:unsetEnv&quot;&gt;unsetEnv&lt;/a&gt;&lt;/code&gt; , pero permite la eliminaci&amp;oacute;n de variables de entorno en blanco. Puede generar una excepci&amp;oacute;n si la plataforma subyacente no admite la desactivaci&amp;oacute;n de las variables de entorno.</target>
        </trans-unit>
        <trans-unit id="8431a8f9693c397e4ecffa5b03a89b83f5c963c3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryTempFile&quot;&gt;openBinaryTempFile&lt;/a&gt;&lt;/code&gt;, but uses the default file permissions</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryTempFile&quot;&gt;openBinaryTempFile&lt;/a&gt;&lt;/code&gt; , pero usa los permisos de archivo predeterminados</target>
        </trans-unit>
        <trans-unit id="ddc8a70da72ad8f7b98007cd07b86322fc708d18" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;, but open the file in binary mode. On Windows, reading a file in text mode (which is the default) will translate CRLF to LF, and writing will translate LF to CRLF. This is usually what you want with text files. With binary files this is undesirable; also, as usual under Microsoft operating systems, text mode treats control-Z as EOF. Binary mode turns off all special treatment of end-of-line and end-of-file characters. (See also &lt;code&gt;&lt;a href=&quot;system-io#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt; , pero abre el archivo en modo binario. En Windows, leer un archivo en modo texto (que es el predeterminado) traducir&amp;aacute; CRLF a LF y la escritura traducir&amp;aacute; LF a CRLF. Esto suele ser lo que desea con los archivos de texto. Con archivos binarios esto no es deseable; tambi&amp;eacute;n, como es habitual en los sistemas operativos de Microsoft, el modo de texto trata control-Z como EOF. El modo binario desactiva todo tratamiento especial de los caracteres de fin de l&amp;iacute;nea y fin de archivo. (Consulte tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;system-io#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="445dbb3aac3b63578f83ae7ca3264f9470654614" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-io#v:openTempFile&quot;&gt;openTempFile&lt;/a&gt;&lt;/code&gt;, but opens the file in binary mode. See &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; for more comments.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-io#v:openTempFile&quot;&gt;openTempFile&lt;/a&gt;&lt;/code&gt; , pero abre el archivo en modo binario. Consulte &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; para obtener m&amp;aacute;s comentarios.</target>
        </trans-unit>
        <trans-unit id="42d2371aba08fe3ad0e461bdd5e9243b5d4ff47c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-io#v:openTempFile&quot;&gt;openTempFile&lt;/a&gt;&lt;/code&gt;, but uses the default file permissions</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-io#v:openTempFile&quot;&gt;openTempFile&lt;/a&gt;&lt;/code&gt; , pero usa los permisos de archivo predeterminados</target>
        </trans-unit>
        <trans-unit id="68e487cc9bcc812ffdd024d2959aeef2edcaff91" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-posix-files#v:setFileTimes&quot;&gt;setFileTimes&lt;/a&gt;&lt;/code&gt; but timestamps can have sub-second resolution.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-posix-files#v:setFileTimes&quot;&gt;setFileTimes&lt;/a&gt;&lt;/code&gt; , pero las marcas de tiempo pueden tener una resoluci&amp;oacute;n inferior a un segundo.</target>
        </trans-unit>
        <trans-unit id="5fd41ba6952859aa302482f390cdfdfc026468ce" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-posix-files#v:setFileTimesHiRes&quot;&gt;setFileTimesHiRes&lt;/a&gt;&lt;/code&gt; but does not follow symbolic links. This operation is not supported on all platforms. On these platforms, this function will raise an exception.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-posix-files#v:setFileTimesHiRes&quot;&gt;setFileTimesHiRes&lt;/a&gt;&lt;/code&gt; pero no sigue enlaces simb&amp;oacute;licos. Esta operaci&amp;oacute;n no es compatible con todas las plataformas. En estas plataformas, esta funci&amp;oacute;n generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bf41494a113002bf4517831272153ccf7cd29c3d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-posix-files#v:touchFile&quot;&gt;touchFile&lt;/a&gt;&lt;/code&gt; but does not follow symbolic links. This operation is not supported on all platforms. On these platforms, this function will raise an exception.</source>
          <target state="translated">Me gusta &lt;code&gt;&lt;a href=&quot;system-posix-files#v:touchFile&quot;&gt;touchFile&lt;/a&gt;&lt;/code&gt; pero no sigue enlaces simb&amp;oacute;licos. Esta operaci&amp;oacute;n no es compatible con todas las plataformas. En estas plataformas, esta funci&amp;oacute;n generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0b8c47891569804ad6ed4ae6fd8eda019375adc3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:setFileTimes&quot;&gt;setFileTimes&lt;/a&gt;&lt;/code&gt; but timestamps can have sub-second resolution.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:setFileTimes&quot;&gt;setFileTimes&lt;/a&gt;&lt;/code&gt; , pero las marcas de tiempo pueden tener una resoluci&amp;oacute;n inferior a un segundo.</target>
        </trans-unit>
        <trans-unit id="33961ae29501aef7bf09af455c8576676e24ac35" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:setFileTimesHiRes&quot;&gt;setFileTimesHiRes&lt;/a&gt;&lt;/code&gt; but does not follow symbolic links. This operation is not supported on all platforms. On these platforms, this function will raise an exception.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:setFileTimesHiRes&quot;&gt;setFileTimesHiRes&lt;/a&gt;&lt;/code&gt; pero no sigue enlaces simb&amp;oacute;licos. Esta operaci&amp;oacute;n no es compatible con todas las plataformas. En estas plataformas, esta funci&amp;oacute;n generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5bbeb7f8e03e4906f3490fc206720d0eab71a223" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:touchFile&quot;&gt;touchFile&lt;/a&gt;&lt;/code&gt; but does not follow symbolic links. This operation is not supported on all platforms. On these platforms, this function will raise an exception.</source>
          <target state="translated">Me gusta &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:touchFile&quot;&gt;touchFile&lt;/a&gt;&lt;/code&gt; pero no sigue enlaces simb&amp;oacute;licos. Esta operaci&amp;oacute;n no es compatible con todas las plataformas. En estas plataformas, esta funci&amp;oacute;n generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="662c747da0f04cde3ce2ca5a423c4b7f959d2f5f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:chainl&quot;&gt;chainl&lt;/a&gt;&lt;/code&gt;, but parses one or more occurrences of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:chainl&quot;&gt;chainl&lt;/a&gt;&lt;/code&gt; , pero analiza una o m&amp;aacute;s ocurrencias de &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8ce7731553d62994a654a2d708daf3c75a28d74" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:chainr&quot;&gt;chainr&lt;/a&gt;&lt;/code&gt;, but parses one or more occurrences of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:chainr&quot;&gt;chainr&lt;/a&gt;&lt;/code&gt; , pero analiza una o m&amp;aacute;s apariciones de &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fee7ff8239ed3fa9381ad7aca490952c09c187d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:many&quot;&gt;many&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:many&quot;&gt;many&lt;/a&gt;&lt;/code&gt; , pero descarta el resultado.</target>
        </trans-unit>
        <trans-unit id="b3dabdc0b676ddd52428d8521d1cc42a6a7a8ded" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:many1&quot;&gt;many1&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#v:many1&quot;&gt;many1&lt;/a&gt;&lt;/code&gt; , pero descarta el resultado.</target>
        </trans-unit>
        <trans-unit id="a81f5f54f0cb0d0d364aaedc68e2c63bc094834c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;INLINE&lt;/code&gt;, the &lt;code&gt;INLINABLE&lt;/code&gt; pragma retains a copy of the original RHS for inlining purposes, and persists it in the interface file, regardless of the size of the RHS.</source>
          <target state="translated">Al igual que &lt;code&gt;INLINE&lt;/code&gt; , el pragma &lt;code&gt;INLINABLE&lt;/code&gt; retiene una copia del RHS original para fines de inserci&amp;oacute;n y lo conserva en el archivo de interfaz, independientemente del tama&amp;ntilde;o del RHS.</target>
        </trans-unit>
        <trans-unit id="be5585db37b6a8bd5e1a92603fdbe92c2af65ed4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;compactAdd#&lt;/code&gt;, but retains sharing and cycles during compaction.</source>
          <target state="translated">Como &lt;code&gt;compactAdd#&lt;/code&gt; , pero conserva el intercambio y los ciclos durante la compactaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ee95b6c97dc7c4bdba6a1af63ea6a5ab1b1b563e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt; bindings, name shadowing is not allowed within an &lt;code&gt;mdo&lt;/code&gt;-expression or a &lt;code&gt;rec&lt;/code&gt;-block; that is, all the names bound in a single &lt;code&gt;rec&lt;/code&gt; must be distinct. (GHC will complain if this is not the case.)</source>
          <target state="translated">Al igual &lt;code&gt;let&lt;/code&gt; enlaces let y &lt;code&gt;where&lt;/code&gt; , el sombreado de nombres no est&amp;aacute; permitido dentro de una expresi&amp;oacute;n &lt;code&gt;mdo&lt;/code&gt; o un bloque &lt;code&gt;rec&lt;/code&gt; ; es decir, todos los nombres enlazados en un solo &lt;code&gt;rec&lt;/code&gt; deben ser distintos. (GHC se quejar&amp;aacute; si este no es el caso).</target>
        </trans-unit>
        <trans-unit id="a0a24c56e1b9f366848073186782d64a2635b134" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;seq&lt;/code&gt;, the argument of &lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; can have an unboxed type.</source>
          <target state="translated">Como &lt;code&gt;seq&lt;/code&gt; , el argumento de &lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; puede tener un tipo sin caja.</target>
        </trans-unit>
        <trans-unit id="e6cafc4e6a3f71e112837260dfb933a8b2509697" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;setFileTimesHiRes&lt;/code&gt; but uses a file descriptor instead of a path. This operation is not supported on all platforms. On these platforms, this function will raise an exception.</source>
          <target state="translated">Como &lt;code&gt;setFileTimesHiRes&lt;/code&gt; pero usa un descriptor de archivo en lugar de una ruta. Esta operaci&amp;oacute;n no es compatible con todas las plataformas. En estas plataformas, esta funci&amp;oacute;n generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e4c941a2f6f4373225d42fc487a0f7d303ff143f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;touchFile&lt;/code&gt; but uses a file descriptor instead of a path. This operation is not supported on all platforms. On these platforms, this function will raise an exception.</source>
          <target state="translated">Como &lt;code&gt;touchFile&lt;/code&gt; , pero usa un descriptor de archivo en lugar de una ruta. Esta operaci&amp;oacute;n no es compatible con todas las plataformas. En estas plataformas, esta funci&amp;oacute;n generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="99cd3e5d292b4b23332a6b2a47c1eadf4be20341" translate="yes" xml:space="preserve">
          <source>Like all other GHCi commands, the output is always displayed in the current GHCi scope (&lt;a href=&quot;#ghci-scope&quot;&gt;What&amp;rsquo;s really in scope at the prompt?&lt;/a&gt;).</source>
          <target state="translated">Como todos los dem&amp;aacute;s comandos de GHCi, la salida siempre se muestra en el alcance de GHCi actual ( &lt;a href=&quot;#ghci-scope&quot;&gt;&amp;iquest;Qu&amp;eacute; hay realmente en el alcance en el indicador?&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef089d2aac5aa17ae2f559d2e25f348c4bd6fbfe" translate="yes" xml:space="preserve">
          <source>Like many other Haskell data structures, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;s are lazy. This means that if you place an expensive unevaluated thunk inside an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, it will be evaluated by the thread that consumes it, not the thread that produced it. Be sure to &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; values to be placed in an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; to the appropriate normal form, or utilize a strict MVar provided by the strict-concurrency package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc84715575b0fa376556544c5d2ef3d4d3ec50fb" translate="yes" xml:space="preserve">
          <source>Like many other Haskell data structures, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;s are lazy. This means that if you place an expensive unevaluated thunk inside an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, it will be evaluated by the thread that consumes it, not the thread that produced it. Be sure to &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; values to be placed in an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; to the appropriate normal form, or utilize a strict MVar provided by the strict-concurrency package.</source>
          <target state="translated">Como muchas otras estructuras de datos de Haskell, los &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; son perezosos. Esto significa que si coloca un procesador no evaluado caro dentro de un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , ser&amp;aacute; evaluado por el hilo que lo consume, no por el hilo que lo produjo. Aseg&amp;uacute;rese de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; valores que se colocar&amp;aacute;n en un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; en la forma normal apropiada, o utilice un MVar estricto proporcionado por el paquete de concurrencia estricta.</target>
        </trans-unit>
        <trans-unit id="37c17ec186b7de612cb654acafdf92b9e7cdfb9b" translate="yes" xml:space="preserve">
          <source>Like other pragmas, &lt;a href=&quot;#pragma-RULES&quot;&gt;&lt;code&gt;RULES&lt;/code&gt;&lt;/a&gt; pragmas are always checked for scope errors, and are typechecked. Typechecking means that the LHS and RHS of a rule are typechecked, and must have the same type. However, rules are only &lt;em&gt;enabled&lt;/em&gt; if the &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; flag is on (see &lt;a href=&quot;#rule-semantics&quot;&gt;Semantics&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3447df87a2c63f15a9f31c14cbaf487254b0da44" translate="yes" xml:space="preserve">
          <source>Like other pragmas, &lt;code&gt;RULE&lt;/code&gt; pragmas are always checked for scope errors, and are typechecked. Typechecking means that the LHS and RHS of a rule are typechecked, and must have the same type. However, rules are only &lt;em&gt;enabled&lt;/em&gt; if the &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; flag is on (see &lt;a href=&quot;#rule-semantics&quot;&gt;Semantics&lt;/a&gt;).</source>
          <target state="translated">Al igual que otros pragmas, los pragmas de &lt;code&gt;RULE&lt;/code&gt; siempre se comprueban para detectar errores de alcance y se verifican el tipo. La verificaci&amp;oacute;n de tipo significa que el LHS y el RHS de una regla est&amp;aacute;n verificados y deben tener el mismo tipo. Sin embargo, las reglas solo est&amp;aacute;n &lt;em&gt;habilitadas&lt;/em&gt; si el &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt; est&amp;aacute; &lt;em&gt;activado&lt;/em&gt; (ver &lt;a href=&quot;#rule-semantics&quot;&gt;Sem&amp;aacute;ntica&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8cd118e46b9ceb5fcb2a8499ea3916b27ce3f424" translate="yes" xml:space="preserve">
          <source>Like the function &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;, but appends a stack trace to the error message if one is available.</source>
          <target state="translated">Como el &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; de funci&amp;oacute;n , pero agrega un seguimiento de pila al mensaje de error si hay uno disponible.</target>
        </trans-unit>
        <trans-unit id="2b393f82e4729c2fe510cc4df3e3b9d2a29de00f" translate="yes" xml:space="preserve">
          <source>Like with &lt;a href=&quot;#assoc-inst&quot;&gt;Associated instances&lt;/a&gt;, it is possible to explicitly bind type and kind variables in default declarations with a &lt;code&gt;forall&lt;/code&gt; by using the &lt;a href=&quot;#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt; language extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d948e4bdbe5b8224bbc0dfbab1923fab00b98e" translate="yes" xml:space="preserve">
          <source>Limit</source>
          <target state="translated">Limit</target>
        </trans-unit>
        <trans-unit id="70044be8751bf68d4de8b7945e5586e80acb7cb2" translate="yes" xml:space="preserve">
          <source>Limit the number of lines stored in the history.</source>
          <target state="translated">Limitar el número de líneas almacenadas en el historial.</target>
        </trans-unit>
        <trans-unit id="ea9676003762818513c636984faeaa0ae356839a" translate="yes" xml:space="preserve">
          <source>Line</source>
          <target state="translated">Line</target>
        </trans-unit>
        <trans-unit id="16fd51c8ab5fd356a1d23d48f4531237b879e504" translate="yes" xml:space="preserve">
          <source>Line and character position</source>
          <target state="translated">Posición de la línea y del personaje</target>
        </trans-unit>
        <trans-unit id="702b953a8e73a9c6b4402eb231caf05c182af7f6" translate="yes" xml:space="preserve">
          <source>Line length.</source>
          <target state="translated">Longitud de la línea.</target>
        </trans-unit>
        <trans-unit id="054f11de365cf7821b8d7f5863692c6cc9051ab6" translate="yes" xml:space="preserve">
          <source>Line number information necessary to map instruction addresses to line numbers in the source program.</source>
          <target state="translated">Información del número de línea necesaria para asignar las direcciones de instrucción a los números de línea en el programa fuente.</target>
        </trans-unit>
        <trans-unit id="8087784b605286ef9ef2960647bad3300431de2b" translate="yes" xml:space="preserve">
          <source>LineBuffering</source>
          <target state="translated">LineBuffering</target>
        </trans-unit>
        <trans-unit id="281752024edc1ab9c1f92c79633d55bc44eacd94" translate="yes" xml:space="preserve">
          <source>LineSeparator</source>
          <target state="translated">LineSeparator</target>
        </trans-unit>
        <trans-unit id="e3b93cdf9997876ced65e2c007d6364b7d627da6" translate="yes" xml:space="preserve">
          <source>LinesAffected</source>
          <target state="translated">LinesAffected</target>
        </trans-unit>
        <trans-unit id="eb1cda622d5b91f2847faea4f7c037e360353e7a" translate="yes" xml:space="preserve">
          <source>Link all passed files into a static library suitable for linking. To control the name, use the &lt;code&gt;-o ⟨file⟩&lt;/code&gt; option as usual. The default name is &lt;code&gt;liba.a&lt;/code&gt;.</source>
          <target state="translated">Vincula todos los archivos pasados ​​a una biblioteca est&amp;aacute;tica adecuada para vincular. Para controlar el nombre, use la opci&amp;oacute;n &lt;code&gt;-o ⟨file⟩&lt;/code&gt; como de costumbre. El nombre predeterminado es &lt;code&gt;liba.a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f4a6bdd90ed3ff452ae2e2964b9b2c357b03f32" translate="yes" xml:space="preserve">
          <source>Link in library ⟨lib⟩</source>
          <target state="translated">Enlace en la biblioteca ⟨lib⟩</target>
        </trans-unit>
        <trans-unit id="d9cd1bd51d029ba12d6908919f6358ef8b55fb4f" translate="yes" xml:space="preserve">
          <source>Link in the ⟨lib⟩ library. On Unix systems, this will be in a file called &lt;code&gt;lib&lt;em&gt;lib&lt;/em&gt;.a&lt;/code&gt; or &lt;code&gt;lib&lt;em&gt;lib&lt;/em&gt;.so&lt;/code&gt; which resides somewhere on the library directories path.</source>
          <target state="translated">Enlace en la biblioteca ⟨lib⟩. En los sistemas Unix, esto estar&amp;aacute; en un archivo llamado &lt;code&gt;lib&lt;em&gt;lib&lt;/em&gt;.a&lt;/code&gt; o &lt;code&gt;lib&lt;em&gt;lib&lt;/em&gt;.so&lt;/code&gt; que reside en alg&amp;uacute;n lugar de la ruta de los directorios de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="fcaae5f3f12bcb52dc5f90152a65e0bdbec2c943" translate="yes" xml:space="preserve">
          <source>Link the program with a debugging version of the runtime system. The debugging runtime turns on numerous assertions and sanity checks, and provides extra options for producing debugging output at runtime (run the program with &lt;code&gt;+RTS -?&lt;/code&gt; to see a list).</source>
          <target state="translated">Vincula el programa con una versi&amp;oacute;n de depuraci&amp;oacute;n del sistema de ejecuci&amp;oacute;n. El tiempo de ejecuci&amp;oacute;n de depuraci&amp;oacute;n activa numerosas afirmaciones y comprobaciones de cordura, y proporciona opciones adicionales para producir resultados de depuraci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n (ejecute el programa con &lt;code&gt;+RTS -?&lt;/code&gt; Para ver una lista).</target>
        </trans-unit>
        <trans-unit id="aa02a71e52144b5208df7f7113d1f3bb6b6ff3a1" translate="yes" xml:space="preserve">
          <source>Link the program with the &amp;ldquo;eventlog&amp;rdquo; version of the runtime system. A program linked in this way can generate a runtime trace of events (such as thread start/stop) to a binary file &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt;, which can then be interpreted later by various tools. See &lt;a href=&quot;runtime_control#rts-eventlog&quot;&gt;Tracing&lt;/a&gt; for more information.</source>
          <target state="translated">Vincula el programa con la versi&amp;oacute;n &quot;eventlog&quot; del sistema de ejecuci&amp;oacute;n. Un programa vinculado de esta manera puede generar un seguimiento de eventos en tiempo de ejecuci&amp;oacute;n (como el inicio / parada del hilo) en un &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; archivo binario .eventlog , que luego puede ser interpretado m&amp;aacute;s tarde por varias herramientas. Consulte &lt;a href=&quot;runtime_control#rts-eventlog&quot;&gt;Rastreo&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="74630b9250c4419175d9406e09096a825645aee9" translate="yes" xml:space="preserve">
          <source>Link the program with the &amp;ldquo;threaded&amp;rdquo; version of the runtime system. The threaded runtime system is so-called because it manages multiple OS threads, as opposed to the default runtime system which is purely single-threaded.</source>
          <target state="translated">Vincula el programa con la versi&amp;oacute;n &quot;enhebrada&quot; del sistema de ejecuci&amp;oacute;n. El sistema de tiempo de ejecuci&amp;oacute;n con subprocesos se denomina as&amp;iacute; porque gestiona varios subprocesos del sistema operativo, a diferencia del sistema de tiempo de ejecuci&amp;oacute;n predeterminado, que es puramente de un solo subproceso.</target>
        </trans-unit>
        <trans-unit id="a0ad1ef7b6972d54e70158733112a5d174213f28" translate="yes" xml:space="preserve">
          <source>LinkCount</source>
          <target state="translated">LinkCount</target>
        </trans-unit>
        <trans-unit id="05669bed092bbe0873ad6674e013a8667f68fe04" translate="yes" xml:space="preserve">
          <source>LinkLimit</source>
          <target state="translated">LinkLimit</target>
        </trans-unit>
        <trans-unit id="9fa999dc4d8eab9b8471e5d9aa06c5de2dbcdca7" translate="yes" xml:space="preserve">
          <source>Linking type and value level</source>
          <target state="translated">Tipo de enlace y nivel de valor</target>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="2be1eb803afe605ac5bf0ed36710e67b7cf3ad56" translate="yes" xml:space="preserve">
          <source>List all enabled language extensions.</source>
          <target state="translated">Enumere todas las extensiones de idiomas habilitadas.</target>
        </trans-unit>
        <trans-unit id="4ada7d3f43f0d02ac75493517b3e3afc1c377d07" translate="yes" xml:space="preserve">
          <source>List all of the files or folders beginning with this path.</source>
          <target state="translated">Enumera todos los archivos o carpetas que empiezan con esta ruta.</target>
        </trans-unit>
        <trans-unit id="d5c60e0858274aa75bbb19a9a06cc630a1d46b1c" translate="yes" xml:space="preserve">
          <source>List all types collected for expressions and (local) bindings currently loaded (while &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt;&lt;code&gt;:set +c&lt;/code&gt;&lt;/a&gt; was active) with their respective source-code span, e.g.</source>
          <target state="translated">Enumere todos los tipos recopilados para expresiones y enlaces (locales) cargados actualmente (mientras &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt; &lt;code&gt;:set +c&lt;/code&gt; &lt;/a&gt; estaba activo) con su respectivo intervalo de c&amp;oacute;digo fuente, por ejemplo</target>
        </trans-unit>
        <trans-unit id="ba8a89a77fc9557b8e8c8d251c8ead9fbdaeb7a1" translate="yes" xml:space="preserve">
          <source>List comprehensions</source>
          <target state="translated">Lista de comprensiones</target>
        </trans-unit>
        <trans-unit id="3f051a8062e5fac28d61cc364f9f1acc708cd461" translate="yes" xml:space="preserve">
          <source>List index (subscript) operator, starting from 0. It is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericIndex&quot;&gt;genericIndex&lt;/a&gt;&lt;/code&gt;, which takes an index of any integral type.</source>
          <target state="translated">Operador de &amp;iacute;ndice de lista (sub&amp;iacute;ndice), comenzando desde 0. Es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericIndex&quot;&gt;genericIndex&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general , que toma un &amp;iacute;ndice de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="754adb8bd3be1191610eae9f21f2c4cd71a1162d" translate="yes" xml:space="preserve">
          <source>List notation, such as &lt;code&gt;[x,y]&lt;/code&gt; or &lt;code&gt;[m..n]&lt;/code&gt; can also be treated via rebindable syntax if you use &lt;code&gt;-XOverloadedLists&lt;/code&gt;; see &lt;a href=&quot;#overloaded-lists&quot;&gt;Overloaded lists&lt;/a&gt;.</source>
          <target state="translated">La notaci&amp;oacute;n de lista, como &lt;code&gt;[x,y]&lt;/code&gt; o &lt;code&gt;[m..n]&lt;/code&gt; , tambi&amp;eacute;n se puede tratar a trav&amp;eacute;s de una sintaxis que se puede volver a enlazar si usa &lt;code&gt;-XOverloadedLists&lt;/code&gt; ; consulte &lt;a href=&quot;#overloaded-lists&quot;&gt;Listas sobrecargadas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="920d73e463b5cf5eed14ea6d6e2da4031afeaa2c" translate="yes" xml:space="preserve">
          <source>List of associations</source>
          <target state="translated">Lista de asociaciones</target>
        </trans-unit>
        <trans-unit id="6b46c2d4b10caadfeb5b6a9c62ffb97de0f2b1d4" translate="yes" xml:space="preserve">
          <source>List of elements of a structure, from left to right.</source>
          <target state="translated">Lista de elementos de una estructura,de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="7094bd5e681efcce9038e6d995bf2d060fc85079" translate="yes" xml:space="preserve">
          <source>List operations</source>
          <target state="translated">Operaciones de lista</target>
        </trans-unit>
        <trans-unit id="5f897200e3f1c653befd6edfbddc4172f95a6a57" translate="yes" xml:space="preserve">
          <source>List patterns are also overloaded. When the &lt;code&gt;OverloadedLists&lt;/code&gt; extension is turned on, these definitions are desugared as follows</source>
          <target state="translated">Los patrones de lista tambi&amp;eacute;n est&amp;aacute;n sobrecargados. Cuando la extensi&amp;oacute;n &lt;code&gt;OverloadedLists&lt;/code&gt; est&amp;aacute; activada, estas definiciones se desaconsejan de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="76603bea3fde9f607769b026d910df0dfc04acfc" translate="yes" xml:space="preserve">
          <source>List the active breakpoints.</source>
          <target state="translated">Enumere los puntos de ruptura activos.</target>
        </trans-unit>
        <trans-unit id="bb72cfc84c631772e908d5b0c3a4205d0c9649a0" translate="yes" xml:space="preserve">
          <source>List the active evaluations that are stopped at breakpoints.</source>
          <target state="translated">Enumere las evaluaciones activas que se detienen en los puntos de ruptura.</target>
        </trans-unit>
        <trans-unit id="d92d0a195ad4655dbddbf91fc436d0a6b999cd58" translate="yes" xml:space="preserve">
          <source>List the frames of a stack trace.</source>
          <target state="translated">Enumera los marcos de un rastro de pila.</target>
        </trans-unit>
        <trans-unit id="b46a3709f9c0d5af2b972568db4b210d8669456f" translate="yes" xml:space="preserve">
          <source>List transformations</source>
          <target state="translated">Transformaciones de la lista</target>
        </trans-unit>
        <trans-unit id="105d6ef74784f6217af666c539a87096be10b1b3" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;language-haskell-th-pprlib#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Listar versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;language-haskell-th-pprlib#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8e9efe55b79317a3e563e7e8e801673f73f1521" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;language-haskell-th-pprlib#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;language-haskell-th-pprlib#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db73b7893f3af8f6c05605cf9251be842b275f8d" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;language-haskell-th-pprlib#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;language-haskell-th-pprlib#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="482dfe339c4f0977581fe5ee524fa53adc1e28ed" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Versi&amp;oacute;n de lista de &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfafdd602fb158738556497c46c51d6d60df9768" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20bd5a0e4fabf718ca894fcb17f676efec0307ae" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ceba6d840aab502457ce42ae3fbfeab1ecc2414" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Versi&amp;oacute;n de lista de &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66e7277f4ef344564d58e60d6ea51d7adf033fef" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3158aef4933628130f67b89a618bc8b174d8978" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="745ee4c2660329c820454e1ba2a47f402e1ce21f" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Versi&amp;oacute;n de lista de &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5594bce20a5038736c0afcf0c55e2622caf81f60" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-60--43--62-&quot;&gt;&amp;lt;+&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d0b7f90f7aacdb031c45cf80cdd404adafbe362" translate="yes" xml:space="preserve">
          <source>List version of &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Listar la versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33a93596bb8da89147bd59e3fe1b97c2d66a5038" translate="yes" xml:space="preserve">
          <source>ListT</source>
          <target state="translated">ListT</target>
        </trans-unit>
        <trans-unit id="c518fb067439705f3ff5fa5b4a62b9be3afa31ae" translate="yes" xml:space="preserve">
          <source>Listen</source>
          <target state="translated">Listen</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="781623c2be49bc87bb9e5a34fe84e216baf4b8b9" translate="yes" xml:space="preserve">
          <source>Lists the source code around the definition of ⟨identifier⟩ or the current breakpoint if not given. This requires that the identifier be defined in an interpreted module. If your output device supports it, then GHCi will highlight the active subexpression in bold.</source>
          <target state="translated">Enumera el código fuente en torno a la definición de ⟨identifier⟩ o el punto de ruptura actual si no se da.Esto requiere que el identificador sea definido en un módulo interpretado.Si su dispositivo de salida lo soporta,entonces GHCi resaltará la subexpresión activa en negrita.</target>
        </trans-unit>
        <trans-unit id="808589d62b1e1bf49e41bd4b6a92d4dc1a0d0f3a" translate="yes" xml:space="preserve">
          <source>Lists the source code around the given line number of ⟨module⟩. This requires that the module be interpreted. If your output device supports it, then GHCi will highlight the active subexpression in bold.</source>
          <target state="translated">Enumera el código fuente alrededor del número de línea dado de ⟨module⟩.Esto requiere que el módulo sea interpretado.Si su dispositivo de salida lo soporta,entonces GHCi resaltará la subexpresión activa en negrita.</target>
        </trans-unit>
        <trans-unit id="d4a7facfa8bfb2e9078fe2cd6adc3a55c36788e6" translate="yes" xml:space="preserve">
          <source>Lists, but with an &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; functor based on zipping.</source>
          <target state="translated">Listas, pero con un functor &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; basado en comprimir.</target>
        </trans-unit>
        <trans-unit id="7c730a293f109c2c9fe03256794b5a680b2406f1" translate="yes" xml:space="preserve">
          <source>Lit</source>
          <target state="translated">Lit</target>
        </trans-unit>
        <trans-unit id="1d45d75d6a3cc51b4987b3781a45f5c1345a4a98" translate="yes" xml:space="preserve">
          <source>LitSort</source>
          <target state="translated">LitSort</target>
        </trans-unit>
        <trans-unit id="3c7167176c55c32edbdb72649b122c134066cd84" translate="yes" xml:space="preserve">
          <source>Little-endian</source>
          <target state="translated">Little-endian</target>
        </trans-unit>
        <trans-unit id="0877eccb7ffb8474ab69b0fcf579d9b84daccdd0" translate="yes" xml:space="preserve">
          <source>Little-endian decoding</source>
          <target state="translated">La decodificación de Little-endian</target>
        </trans-unit>
        <trans-unit id="c7273f034919f3ef6168c89cba26b3bce836ba9e" translate="yes" xml:space="preserve">
          <source>Little-endian primitives</source>
          <target state="translated">Los primitivos de Little-endian</target>
        </trans-unit>
        <trans-unit id="1c321830ed633cc94628e1e65216ff4ba6a6ed76" translate="yes" xml:space="preserve">
          <source>Little-endian writes</source>
          <target state="translated">Little-endian escribe</target>
        </trans-unit>
        <trans-unit id="6fc67654e4796ae3f37595e79dd2e45c3625e5e5" translate="yes" xml:space="preserve">
          <source>LittleEndian</source>
          <target state="translated">LittleEndian</target>
        </trans-unit>
        <trans-unit id="2e67c31b2f3fdce36aeeb1f20caff4b304f70567" translate="yes" xml:space="preserve">
          <source>Ll: Letter, Lowercase</source>
          <target state="translated">Ll:Letra,minúscula</target>
        </trans-unit>
        <trans-unit id="58382029ac6f1e5383d7bade61f6a456488c6bbd" translate="yes" xml:space="preserve">
          <source>Llike &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; but memory is filled with bytes of value zero.</source>
          <target state="translated">Lcomo &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; pero la memoria est&amp;aacute; llena de bytes de valor cero.</target>
        </trans-unit>
        <trans-unit id="4288785885201e9bb76e1d0199483effb5fe9f71" translate="yes" xml:space="preserve">
          <source>Lm: Letter, Modifier</source>
          <target state="translated">Lm:Carta,Modificador</target>
        </trans-unit>
        <trans-unit id="2fdaaab4868bf18d8a809e1f5f7e47a37f964d96" translate="yes" xml:space="preserve">
          <source>Lo: Letter, Other</source>
          <target state="translated">Lo:Carta,Otro</target>
        </trans-unit>
        <trans-unit id="8accbc10b359e949cb147175bb580bf3e07dc786" translate="yes" xml:space="preserve">
          <source>Load a plugin exported by a given module</source>
          <target state="translated">Cargar un plugin exportado por un módulo determinado</target>
        </trans-unit>
        <trans-unit id="51fa1bf18d44ef1d1248c602fa8dd72c62735eea" translate="yes" xml:space="preserve">
          <source>Load the plugin in the given module. The module must be a member of a package registered in GHC&amp;rsquo;s package database.</source>
          <target state="translated">Cargue el complemento en el m&amp;oacute;dulo dado. El m&amp;oacute;dulo debe ser miembro de un paquete registrado en la base de datos de paquetes de GHC.</target>
        </trans-unit>
        <trans-unit id="19f77727de15c8eb41a9504fa18fee15c5c48b61" translate="yes" xml:space="preserve">
          <source>Load-balancing shares out the work of GC between the available cores. This is a good idea when the heap is large and we need to parallelise the GC work, however it is also pessimal for the short young-generation collections in a parallel program, because it can harm locality by moving data from the cache of the CPU where is it being used to the cache of another CPU. Hence the default is to do load-balancing only in the old-generation. In fact, for a parallel program it is sometimes beneficial to disable load-balancing entirely with &lt;code&gt;-qb&lt;/code&gt;.</source>
          <target state="translated">El equilibrio de carga comparte el trabajo de GC entre los n&amp;uacute;cleos disponibles. Esta es una buena idea cuando el mont&amp;oacute;n es grande y necesitamos paralelizar el trabajo de GC, sin embargo, tambi&amp;eacute;n es pesimista para las colecciones cortas de generaciones j&amp;oacute;venes en un programa paralelo, porque puede da&amp;ntilde;ar la localidad al mover datos del cach&amp;eacute; de la CPU. &amp;iquest;D&amp;oacute;nde se utiliza para el cach&amp;eacute; de otra CPU? Por lo tanto, el valor predeterminado es realizar el equilibrio de carga solo en la generaci&amp;oacute;n anterior. De hecho, para un programa paralelo, a veces es beneficioso deshabilitar el equilibrio de carga por completo con &lt;code&gt;-qb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5baeca2bd84e4324195dfc5aa4a5d2fe832d33c9" translate="yes" xml:space="preserve">
          <source>Loading a multi-module program is just as straightforward; just give the name of the &amp;ldquo;topmost&amp;rdquo; module to the &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; command (hint: &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; can be abbreviated to &lt;code&gt;:l&lt;/code&gt;). The topmost module will normally be &lt;code&gt;Main&lt;/code&gt;, but it doesn&amp;rsquo;t have to be. GHCi will discover which modules are required, directly or indirectly, by the topmost module, and load them all in dependency order.</source>
          <target state="translated">Cargar un programa de varios m&amp;oacute;dulos es igual de sencillo; simplemente d&amp;eacute; el nombre del m&amp;oacute;dulo &quot;superior&quot; al comando &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; (sugerencia &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; puede abreviarse como &lt;code&gt;:l&lt;/code&gt; ). El m&amp;oacute;dulo superior normalmente ser&amp;aacute; &lt;code&gt;Main&lt;/code&gt; , pero no tiene por qu&amp;eacute; serlo. GHCi descubrir&amp;aacute; qu&amp;eacute; m&amp;oacute;dulos son necesarios, directa o indirectamente, por el m&amp;oacute;dulo superior y los cargar&amp;aacute; todos en orden de dependencia.</target>
        </trans-unit>
        <trans-unit id="3ca542db8dd842ccea2e2f49600e491d4a676f0a" translate="yes" xml:space="preserve">
          <source>Loc</source>
          <target state="translated">Loc</target>
        </trans-unit>
        <trans-unit id="94637a234d4833c0a67b7a4f6b5d70bd1cdd5712" translate="yes" xml:space="preserve">
          <source>Local Time</source>
          <target state="translated">Hora local</target>
        </trans-unit>
        <trans-unit id="ab3cb665e2195c48dc51ad950c912c0fa2cb8e4a" translate="yes" xml:space="preserve">
          <source>Local allocation</source>
          <target state="translated">Asignación local</target>
        </trans-unit>
        <trans-unit id="0478f8de1f3f270ad9e2bf09aa44262b4422de07" translate="yes" xml:space="preserve">
          <source>Local name bound outside of the TH AST</source>
          <target state="translated">El nombre local se encuentra fuera del TH AST</target>
        </trans-unit>
        <trans-unit id="93c22935b426d63080a636bc51d84b1a5c5cca31" translate="yes" xml:space="preserve">
          <source>Local, exclusive, left-biased choice: If left parser locally produces any result at all, then right parser is not used.</source>
          <target state="translated">Elección local,exclusiva,de la izquierda:si el analizador de la izquierda produce algún resultado localmente,no se utiliza el analizador de la derecha.</target>
        </trans-unit>
        <trans-unit id="478df254596a4a4a51b18fe7c43423e110e9c8b9" translate="yes" xml:space="preserve">
          <source>LocalMode</source>
          <target state="translated">LocalMode</target>
        </trans-unit>
        <trans-unit id="9cb40f7cd87e6348d6d2464d28eeaa1636f17835" translate="yes" xml:space="preserve">
          <source>LocalTime</source>
          <target state="translated">LocalTime</target>
        </trans-unit>
        <trans-unit id="8970f0e691a0a23a47517698017c997507efd496" translate="yes" xml:space="preserve">
          <source>Locale</source>
          <target state="translated">Locale</target>
        </trans-unit>
        <trans-unit id="c72c9f7a9c187a5da0f209dc188fa32ae35d17f4" translate="yes" xml:space="preserve">
          <source>Locale representing American usage.</source>
          <target state="translated">Un local que representa el uso americano.</target>
        </trans-unit>
        <trans-unit id="b7a9db328cdf327a87303972030f518b2e1143a4" translate="yes" xml:space="preserve">
          <source>Locale support</source>
          <target state="translated">Apoyo local</target>
        </trans-unit>
        <trans-unit id="6f1b4ce09e502ee2cc257e3b65eb100b21e07dcd" translate="yes" xml:space="preserve">
          <source>LocaleTestFlags</source>
          <target state="translated">LocaleTestFlags</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="04685f4c01bb7310cd3e866073d0858b658078ed" translate="yes" xml:space="preserve">
          <source>Location information about an address from a backtrace.</source>
          <target state="translated">Información sobre la ubicación de una dirección de un rastreo.</target>
        </trans-unit>
        <trans-unit id="5131787646387f0d5f88f17ccb4880dde6ba21d3" translate="yes" xml:space="preserve">
          <source>Lock the semaphore, blocking until it becomes available. Since this is done through a system call, this will block the *entire runtime*, not just the current thread. If this is not the behaviour you want, use semThreadWait instead.</source>
          <target state="translated">Bloquea el semáforo,bloqueando hasta que esté disponible.Como esto se hace a través de una llamada al sistema,esto bloqueará el *tiempo de ejecución completo*,no sólo el hilo actual.Si este no es el comportamiento que quieres,usa semThreadWait en su lugar.</target>
        </trans-unit>
        <trans-unit id="79ad9e43cfdad7f13ded5dc73bb870eee73c9832" translate="yes" xml:space="preserve">
          <source>LockMode</source>
          <target state="translated">LockMode</target>
        </trans-unit>
        <trans-unit id="031e1faa819e43723677621db8e08752f93d196c" translate="yes" xml:space="preserve">
          <source>LockRequest</source>
          <target state="translated">LockRequest</target>
        </trans-unit>
        <trans-unit id="d1d6079f6b5f44c82f4e240cfc0156faa4fc5b60" translate="yes" xml:space="preserve">
          <source>Locking</source>
          <target state="translated">Locking</target>
        </trans-unit>
        <trans-unit id="db36a6985ae81e7f06f9b77a678b760e42fb6c81" translate="yes" xml:space="preserve">
          <source>Log base 2 (round down) of natural numbers. &lt;code&gt;Log 0&lt;/code&gt; is undefined (i.e., it cannot be reduced).</source>
          <target state="translated">Log base 2 (redondeando hacia abajo) de n&amp;uacute;meros naturales. &lt;code&gt;Log 0&lt;/code&gt; no est&amp;aacute; definido (es decir, no se puede reducir).</target>
        </trans-unit>
        <trans-unit id="705364a478cdab0540a4c25854746a42ccf2183f" translate="yes" xml:space="preserve">
          <source>Log events as text to standard output, instead of to the &lt;code&gt;.eventlog&lt;/code&gt; file. The ⟨flags⟩ are the same as for &lt;code&gt;-l&lt;/code&gt;, with the additional option &lt;code&gt;t&lt;/code&gt; which indicates that the each event printed should be preceded by a timestamp value (in the binary &lt;code&gt;.eventlog&lt;/code&gt; file, all events are automatically associated with a timestamp).</source>
          <target state="translated">Registra eventos como texto en la salida est&amp;aacute;ndar, en lugar de en el archivo &lt;code&gt;.eventlog&lt;/code&gt; . Las &amp;ldquo;banderas&amp;rdquo; son las mismas que para &lt;code&gt;-l&lt;/code&gt; , con la opci&amp;oacute;n adicional &lt;code&gt;t&lt;/code&gt; que indica que cada evento impreso debe ir precedido de un valor de marca de tiempo (en el archivo binario &lt;code&gt;.eventlog&lt;/code&gt; , todos los eventos se asocian autom&amp;aacute;ticamente con una marca de tiempo).</target>
        </trans-unit>
        <trans-unit id="8c0b83ca797348a57e601331a800396f17173e34" translate="yes" xml:space="preserve">
          <source>Log events in binary format. Without any ⟨flags⟩ specified, this logs a default set of events, suitable for use with tools like ThreadScope.</source>
          <target state="translated">Registra los eventos en formato binario.Sin especificar ⟨flags⟩,esto registra un conjunto de eventos por defecto,adecuado para su uso con herramientas como ThreadScope.</target>
        </trans-unit>
        <trans-unit id="6687db9bf747c384bcc8d36417e42b952196b766" translate="yes" xml:space="preserve">
          <source>Log2</source>
          <target state="translated">Log2</target>
        </trans-unit>
        <trans-unit id="f61cb07b41e23ab1a79f15c05c0f8ba5b477ab22" translate="yes" xml:space="preserve">
          <source>Logarithmic-time access to any element with &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:-33--63-&quot;&gt;!?&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:insertAt&quot;&gt;insertAt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:deleteAt&quot;&gt;deleteAt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust-39-&quot;&gt;adjust'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;data-sequence#v:update&quot;&gt;update&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Acceso en tiempo logar&amp;iacute;tmico a cualquier elemento con &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:-33--63-&quot;&gt;!?&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; ar , &lt;code&gt;&lt;a href=&quot;data-sequence#v:insertAt&quot;&gt;insertAt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:deleteAt&quot;&gt;deleteAt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust-39-&quot;&gt;adjust'&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-sequence#v:update&quot;&gt;update&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d4382c3d779a065ce766f6771a0eda14473b0c8a" translate="yes" xml:space="preserve">
          <source>Logarithmic-time concatenation with &lt;code&gt;&lt;a href=&quot;data-sequence#v:-62--60-&quot;&gt;&amp;gt;&amp;lt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Concatenaci&amp;oacute;n de tiempo logar&amp;iacute;tmico con &lt;code&gt;&lt;a href=&quot;data-sequence#v:-62--60-&quot;&gt;&amp;gt;&amp;lt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c70a3bed95e2afdacbd2edd9f3abf4bff06b5635" translate="yes" xml:space="preserve">
          <source>Logarithmic-time splitting with &lt;code&gt;&lt;a href=&quot;data-sequence#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Divisi&amp;oacute;n de tiempo logar&amp;iacute;tmico con &lt;code&gt;&lt;a href=&quot;data-sequence#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cebebf8637724ae58cb90aacf5d8022fb2074f2" translate="yes" xml:space="preserve">
          <source>Look at the Core syntax!</source>
          <target state="translated">¡Mira la sintaxis del núcleo!</target>
        </trans-unit>
        <trans-unit id="4f44d0f99b2e9f9e75bd7d13f005f42ba7ac90d3" translate="yes" xml:space="preserve">
          <source>Look at the first three elements of a sequence</source>
          <target state="translated">Mira los tres primeros elementos de una secuencia</target>
        </trans-unit>
        <trans-unit id="036e3fb15ef00e480fa4d3acf7a733a4ca5f5561" translate="yes" xml:space="preserve">
          <source>Look for the exact match on the name in the built-in command list.</source>
          <target state="translated">Busca la coincidencia exacta del nombre en la lista de comandos incorporada.</target>
        </trans-unit>
        <trans-unit id="1c5a3aaf89cbcab1e2d9dd0a759cbcb475301525" translate="yes" xml:space="preserve">
          <source>Look for your function in the interface file, then for the third field in the pragma; it should say &lt;code&gt;Strictness: ⟨string⟩&lt;/code&gt;. The ⟨string⟩ gives the strictness of the function&amp;rsquo;s arguments: see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/Commentary/Compiler/Demand&quot;&gt;the GHC Commentary&lt;/a&gt; for a description of the strictness notation.</source>
          <target state="translated">Busque su funci&amp;oacute;n en el archivo de interfaz, luego el tercer campo en el pragma; deber&amp;iacute;a decir &lt;code&gt;Strictness: ⟨string⟩&lt;/code&gt; . La ⟨string⟩ da el rigor de los argumentos de la funci&amp;oacute;n: consulte &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/Commentary/Compiler/Demand&quot;&gt;el Comentario de GHC&lt;/a&gt; para obtener una descripci&amp;oacute;n de la notaci&amp;oacute;n de rigor.</target>
        </trans-unit>
        <trans-unit id="6a08e53663e845cc46457faaa8a00f1851876f2c" translate="yes" xml:space="preserve">
          <source>Look for your function in the interface file, then for the third field in the pragma; it should say &lt;code&gt;Strictness: ⟨string⟩&lt;/code&gt;. The ⟨string⟩ gives the strictness of the function&amp;rsquo;s arguments: see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/commentary/compiler/demand&quot;&gt;the GHC Commentary&lt;/a&gt; for a description of the strictness notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646113c2b824e740bba103f465367c553a9eb4ec" translate="yes" xml:space="preserve">
          <source>Look up a boolean capability in the terminfo database, and fail if it's not defined.</source>
          <target state="translated">Busca una capacidad booleana en la base de datos terminfo,y falla si no está definida.</target>
        </trans-unit>
        <trans-unit id="c4c0a18679ef62e4477ab6e7f74f367ea337ce4c" translate="yes" xml:space="preserve">
          <source>Look up a boolean capability in the terminfo database.</source>
          <target state="translated">Busca una capacidad booleana en la base de datos terminfo.</target>
        </trans-unit>
        <trans-unit id="7a72d8f66e8e9faaac46b9deb897bfc7808a27e2" translate="yes" xml:space="preserve">
          <source>Look up a constructor by its representation</source>
          <target state="translated">Busca un constructor por su representación</target>
        </trans-unit>
        <trans-unit id="c01e8f2c42ad48d0b20e9f727f7dd206fb60685a" translate="yes" xml:space="preserve">
          <source>Look up a numeric capability in the terminfo database.</source>
          <target state="translated">Busca una capacidad numérica en la base de datos terminfo.</target>
        </trans-unit>
        <trans-unit id="586b4cdd798272f8e1ea61b1bc18f4217842421c" translate="yes" xml:space="preserve">
          <source>Look up a string capability in the terminfo database. NOTE: This function is deprecated; use &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:tiGetOutput1&quot;&gt;tiGetOutput1&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">Busque una capacidad de cadena en la base de datos de terminfo. NOTA: Esta funci&amp;oacute;n est&amp;aacute; obsoleta; utilice &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:tiGetOutput1&quot;&gt;tiGetOutput1&lt;/a&gt;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="a9c5ab2d2d0139456f33ef943c0b402c0ecc56ca" translate="yes" xml:space="preserve">
          <source>Look up an output capability in the terminfo database.</source>
          <target state="translated">Busca una capacidad de salida en la base de datos terminfo.</target>
        </trans-unit>
        <trans-unit id="9021c22f55a1940644c0487372237fc2b4baba0e" translate="yes" xml:space="preserve">
          <source>Look up an output capability which takes a fixed number of parameters (for example, &lt;code&gt;Int -&amp;gt; Int -&amp;gt; TermOutput&lt;/code&gt;).</source>
          <target state="translated">Busque una capacidad de salida que tome un n&amp;uacute;mero fijo de par&amp;aacute;metros (por ejemplo, &lt;code&gt;Int -&amp;gt; Int -&amp;gt; TermOutput&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f90efbcd7f1eeff6426b782004bd5ca5f919386e" translate="yes" xml:space="preserve">
          <source>Look up the control sequence for a given function sequence. For example, &lt;code&gt;functionKey 12&lt;/code&gt; retrieves the &lt;code&gt;kf12&lt;/code&gt; capability.</source>
          <target state="translated">Busque la secuencia de control para una secuencia de funci&amp;oacute;n determinada. Por ejemplo, &lt;code&gt;functionKey 12&lt;/code&gt; recupera la capacidad &lt;code&gt;kf12&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fee394d0e5a9ad0f8eab2e63dc20d9771d2d9b1c" translate="yes" xml:space="preserve">
          <source>Look up the given name in the (type namespace of the) current splice's scope. See &lt;a href=&quot;language-haskell-th-syntax#namelookup&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt; for more details.</source>
          <target state="translated">Busque el nombre de pila en el (espacio de nombres de tipo del) alcance del empalme actual. Consulte &lt;a href=&quot;language-haskell-th-syntax#namelookup&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e1a8bb741760af7e3cd92aaa2b183fc9d4090ffa" translate="yes" xml:space="preserve">
          <source>Look up the given name in the (value namespace of the) current splice's scope. See &lt;a href=&quot;language-haskell-th-syntax#namelookup&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt; for more details.</source>
          <target state="translated">Busque el nombre dado en el (espacio de nombres de valor del) alcance del empalme actual. Consulte &lt;a href=&quot;language-haskell-th-syntax#namelookup&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="2c27f2b60d886938ddc087b401729fa285ab4f28" translate="yes" xml:space="preserve">
          <source>Look up the named Unicode encoding. May fail with</source>
          <target state="translated">Busca la codificación del nombre Unicode.Puede fallar con</target>
        </trans-unit>
        <trans-unit id="ba28f2554c741d83cd517f5e544d7d36306b57bc" translate="yes" xml:space="preserve">
          <source>Look-ahead: returns the part of the input that is left, without consuming it.</source>
          <target state="translated">Mira hacia adelante:devuelve la parte de la entrada que queda,sin consumirla.</target>
        </trans-unit>
        <trans-unit id="5eb4c34799d13148c8206bca4c92597220f71e0b" translate="yes" xml:space="preserve">
          <source>Looks up a &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt; by its &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticKey&quot;&gt;StaticKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Busca un &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt; por su &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticKey&quot;&gt;StaticKey&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7015ab4fc4ea24735dbe884238cc1b54bf915eca" translate="yes" xml:space="preserve">
          <source>Lookup</source>
          <target state="translated">Lookup</target>
        </trans-unit>
        <trans-unit id="b233a4c41641797d29c66ebedda9a193a0f05643" translate="yes" xml:space="preserve">
          <source>Lookup a constructor via a string</source>
          <target state="translated">Buscar un constructor a través de una cadena</target>
        </trans-unit>
        <trans-unit id="9b088da5659869d545bfc9a0cf4258116c580743" translate="yes" xml:space="preserve">
          <source>LossOfPrecision</source>
          <target state="translated">LossOfPrecision</target>
        </trans-unit>
        <trans-unit id="853c95f571d7fa18c42a8e831393f2dd7e6ab65b" translate="yes" xml:space="preserve">
          <source>Low level CString conversions</source>
          <target state="translated">Conversiones de CString de bajo nivel</target>
        </trans-unit>
        <trans-unit id="9a62bf48cdec4e2fa80fc92d8d939e62810d8f8d" translate="yes" xml:space="preserve">
          <source>Low level conversions</source>
          <target state="translated">Conversiones de bajo nivel</target>
        </trans-unit>
        <trans-unit id="e5145ff9d1cf255f56081e2cfd62251c784c3336" translate="yes" xml:space="preserve">
          <source>Low level execution</source>
          <target state="translated">Ejecución de bajo nivel</target>
        </trans-unit>
        <trans-unit id="163304e093070531fe3b7fc36d57bfbdbc31b649" translate="yes" xml:space="preserve">
          <source>Low level imperative construction</source>
          <target state="translated">Construcción imperativa de bajo nivel</target>
        </trans-unit>
        <trans-unit id="50d7d6709a31a0dba951b8a2031b80d349c3b9d0" translate="yes" xml:space="preserve">
          <source>Low level interaction with CStrings</source>
          <target state="translated">Interacción de bajo nivel con los CStrings</target>
        </trans-unit>
        <trans-unit id="6177301b8c0f30b2a86ceb3d0093fdce68f18734" translate="yes" xml:space="preserve">
          <source>Low level operations</source>
          <target state="translated">Operaciones de bajo nivel</target>
        </trans-unit>
        <trans-unit id="972a48160fb1f24ef39460baab7e378aa636e944" translate="yes" xml:space="preserve">
          <source>Low word of signed integer multiply.</source>
          <target state="translated">La palabra baja del entero firmado se multiplica.</target>
        </trans-unit>
        <trans-unit id="0cabfc67ff1de7a21583a2681ad3451d8a86cf31" translate="yes" xml:space="preserve">
          <source>Low-level action that performs the real close.</source>
          <target state="translated">Una acción de bajo nivel que realiza el verdadero cierre.</target>
        </trans-unit>
        <trans-unit id="0b24e544fe7febd646c007e1db09a744758b8a8c" translate="yes" xml:space="preserve">
          <source>Low-level capabilities</source>
          <target state="translated">Capacidades de bajo nivel</target>
        </trans-unit>
        <trans-unit id="f7ce8d6baf61dc38e2ccf714c9bc7f73b9b6975e" translate="yes" xml:space="preserve">
          <source>Low-level creation of the ParsecT type. You really shouldn't have to do this.</source>
          <target state="translated">Creación de bajo nivel del tipo ParsecT.No deberías tener que hacer esto.</target>
        </trans-unit>
        <trans-unit id="9ee648a6dd68992ea5cde1cd8d86b7c63d4484d6" translate="yes" xml:space="preserve">
          <source>Low-level manipulation</source>
          <target state="translated">Manipulación de bajo nivel</target>
        </trans-unit>
        <trans-unit id="9a08a2849208613a25ed31a1dac45b5fb6adb67f" translate="yes" xml:space="preserve">
          <source>Low-level operations</source>
          <target state="translated">Operaciones de bajo nivel</target>
        </trans-unit>
        <trans-unit id="13fab495e207628ea2444c309679bf776f4535b0" translate="yes" xml:space="preserve">
          <source>Low-level support for text I/O.</source>
          <target state="translated">Soporte de bajo nivel para E/S de texto.</target>
        </trans-unit>
        <trans-unit id="f00047587dbdef15842bce850c4a2657569cb360" translate="yes" xml:space="preserve">
          <source>Low-level unpacking of the ParsecT type. To run your parser, please look to runPT, runP, runParserT, runParser and other such functions.</source>
          <target state="translated">Desembalaje de bajo nivel del tipo ParsecT.Para ejecutar tu parsecador,por favor busca en runPT,runP,runParserT,runParser y otras funciones similares.</target>
        </trans-unit>
        <trans-unit id="bf0c3ee8ad72ff8c9d2eb19ea3532abdb2e4b477" translate="yes" xml:space="preserve">
          <source>Lowercase pattern syntax functions</source>
          <target state="translated">La sintaxis de las minúsculas funciona</target>
        </trans-unit>
        <trans-unit id="a6b810d16a3b6d530ef202b4a2d4f83a9f2052b1" translate="yes" xml:space="preserve">
          <source>LowercaseLetter</source>
          <target state="translated">LowercaseLetter</target>
        </trans-unit>
        <trans-unit id="3f339b0acbc3595803d9353e1c9001e104dfb4d7" translate="yes" xml:space="preserve">
          <source>Lt: Letter, Titlecase</source>
          <target state="translated">Teniente:Carta,Titlecase</target>
        </trans-unit>
        <trans-unit id="fae8b46afcb632cf202e5b21df13474f2135a227" translate="yes" xml:space="preserve">
          <source>Lu: Letter, Uppercase</source>
          <target state="translated">Lu:Carta,mayúscula</target>
        </trans-unit>
        <trans-unit id="f6d00f67258bac7b9cebb726f8da4dc1bfbef425" translate="yes" xml:space="preserve">
          <source>M1</source>
          <target state="translated">M1</target>
        </trans-unit>
        <trans-unit id="b215a5a119a163d59cea8f190c2384c43d8ef927" translate="yes" xml:space="preserve">
          <source>MATHEMATICAL LEFT WHITE SQUARE BRACKET</source>
          <target state="translated">CORCHETE BLANCO MATEMÁTICO IZQUIERDO...</target>
        </trans-unit>
        <trans-unit id="3040721941e3243f84460b3f75c97496f9d468d1" translate="yes" xml:space="preserve">
          <source>MATHEMATICAL RIGHT WHITE SQUARE BRACKET</source>
          <target state="translated">CORCHETE BLANCO MATEMÁTICO DERECHO</target>
        </trans-unit>
        <trans-unit id="b4d743ca88772a1217c91cba52116bdb88ef5d73" translate="yes" xml:space="preserve">
          <source>MArray</source>
          <target state="translated">MArray</target>
        </trans-unit>
        <trans-unit id="4b3e60b5afe51211e63fc50f1522b81c9ed52c4b" translate="yes" xml:space="preserve">
          <source>MBlock size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d7b21255c88198fbbcee4794e30cfb5de722f2" translate="yes" xml:space="preserve">
          <source>MOUSEINPUT</source>
          <target state="translated">MOUSEINPUT</target>
        </trans-unit>
        <trans-unit id="2dafde4ace7cf035bd8fac9346bb5f75c97c5928" translate="yes" xml:space="preserve">
          <source>MVar</source>
          <target state="translated">MVar</target>
        </trans-unit>
        <trans-unit id="fb09978b40c384ebd545f0a9a7fcdec83351ee76" translate="yes" xml:space="preserve">
          <source>MVar#</source>
          <target state="translated">MVar#</target>
        </trans-unit>
        <trans-unit id="46d2f54777058d8f461ec0e1349a0d4dfc5ea0e9" translate="yes" xml:space="preserve">
          <source>MVars</source>
          <target state="translated">MVars</target>
        </trans-unit>
        <trans-unit id="ff6912e2f0ea1f0a272acab877e81da5e3f73b0e" translate="yes" xml:space="preserve">
          <source>Magenta</source>
          <target state="translated">Magenta</target>
        </trans-unit>
        <trans-unit id="6c6f4a44e9e83aafaa5023b2c1c354521ec83aa4" translate="yes" xml:space="preserve">
          <source>MagicHash</source>
          <target state="translated">MagicHash</target>
        </trans-unit>
        <trans-unit id="597dbcc3afd445131f986826cdf6caa30f1f99dd" translate="yes" xml:space="preserve">
          <source>Maintainer</source>
          <target state="translated">Maintainer</target>
        </trans-unit>
        <trans-unit id="9ed930864a951ac93cbc26664a2297c407da9c9e" translate="yes" xml:space="preserve">
          <source>Maintaining variable bindings, or other shared environment.</source>
          <target state="translated">Manteniendo los enlaces variables,u otro entorno compartido.</target>
        </trans-unit>
        <trans-unit id="a8a516b79965afb8ee743e8779110117c528ae43" translate="yes" xml:space="preserve">
          <source>Make GHC be more precise about its treatment of bottom (but see also &lt;a href=&quot;#ghc-flag--fno-state-hack&quot;&gt;&lt;code&gt;-fno-state-hack&lt;/code&gt;&lt;/a&gt;). In particular, stop GHC eta-expanding through a case expression, which is good for performance, but bad if you are using &lt;code&gt;seq&lt;/code&gt; on partial applications.</source>
          <target state="translated">Haga que GHC sea m&amp;aacute;s preciso sobre su tratamiento del fondo (pero vea tambi&amp;eacute;n &lt;a href=&quot;#ghc-flag--fno-state-hack&quot;&gt; &lt;code&gt;-fno-state-hack&lt;/code&gt; &lt;/a&gt; ). En particular, detenga la expansi&amp;oacute;n eta de GHC a trav&amp;eacute;s de una expresi&amp;oacute;n de caso, que es bueno para el rendimiento, pero malo si est&amp;aacute; usando &lt;code&gt;seq&lt;/code&gt; en aplicaciones parciales.</target>
        </trans-unit>
        <trans-unit id="d7420d41204c439a4f517471040fab645169f4e5" translate="yes" xml:space="preserve">
          <source>Make GHC be more precise about its treatment of bottom (but see also &lt;a href=&quot;using-optimisation#ghc-flag--fno-state-hack&quot;&gt;&lt;code&gt;-fno-state-hack&lt;/code&gt;&lt;/a&gt;). In particular, GHC will not eta-expand through a case expression.</source>
          <target state="translated">Haga que GHC sea m&amp;aacute;s preciso sobre su tratamiento del fondo (pero vea tambi&amp;eacute;n &lt;a href=&quot;using-optimisation#ghc-flag--fno-state-hack&quot;&gt; &lt;code&gt;-fno-state-hack&lt;/code&gt; &lt;/a&gt; ). En particular, GHC no se expandir&amp;aacute; mediante una expresi&amp;oacute;n de caso.</target>
        </trans-unit>
        <trans-unit id="2fdef1410de7bb1f110ecf15d30ac3c953aad457" translate="yes" xml:space="preserve">
          <source>Make Strings an instance of &lt;code&gt;&lt;a href=&quot;text-parsec#t:Stream&quot;&gt;Stream&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; token type.</source>
          <target state="translated">Haga de Strings una instancia de &lt;code&gt;&lt;a href=&quot;text-parsec#t:Stream&quot;&gt;Stream&lt;/a&gt;&lt;/code&gt; con el tipo de token &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d2d3352f83dfd1c05932c3401d3d788e9213d3c" translate="yes" xml:space="preserve">
          <source>Make Strings an instance of &lt;code&gt;&lt;a href=&quot;text-parsec#t:Stream&quot;&gt;Stream&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; token type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8574286f1db7f5674cdca2f0f347f3d37fbe842" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; pointer to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;, using the second argument as a finalizer to run when the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is garbage-collected.</source>
          <target state="translated">Haga un puntero &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; a una &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; , utilizando el segundo argumento como finalizador para ejecutar cuando la &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; se recolecta como basura.</target>
        </trans-unit>
        <trans-unit id="3c9caff43c15f5f5ce07d7d17ceba770b1aed418" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; pointer to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;, using the second argument as a finalizer to run when &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; is garbage-collected</source>
          <target state="translated">Haga un puntero &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; , utilizando el segundo argumento como finalizador para ejecutar cuando &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; se recolecta como basura</target>
        </trans-unit>
        <trans-unit id="59b220e362957ec29f398b074092e745f5e98507" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; pointer to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;, using the second argument as a finalizer to run when the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is garbage-collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43736e995d33c8137a44869b4d0d5452ba4e560a" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; pointer to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;, using the second argument as a finalizer to run when &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; is garbage-collected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1e49e8f1341ae8024c59aa4dfd0a0ff98889ea" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;&lt;a href=&quot;ghc-io-fd#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; from an existing file descriptor. Fails if the FD refers to a directory. If the FD refers to a file, &lt;code&gt;&lt;a href=&quot;ghc-io-fd#v:mkFD&quot;&gt;mkFD&lt;/a&gt;&lt;/code&gt; locks the file according to the Haskell 2010 single writer/multiple reader locking semantics (this is why we need the &lt;code&gt;&lt;a href=&quot;system-io#t:IOMode&quot;&gt;IOMode&lt;/a&gt;&lt;/code&gt; argument too).</source>
          <target state="translated">Cree un &lt;code&gt;&lt;a href=&quot;ghc-io-fd#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; a partir de un descriptor de archivo existente. Falla si el FD hace referencia a un directorio. Si el FD se refiere a un archivo, &lt;code&gt;&lt;a href=&quot;ghc-io-fd#v:mkFD&quot;&gt;mkFD&lt;/a&gt;&lt;/code&gt; bloquea el archivo de acuerdo con la sem&amp;aacute;ntica de bloqueo de un solo escritor / lector m&amp;uacute;ltiple de Haskell 2010 (es por eso que tambi&amp;eacute;n necesitamos el argumento &lt;code&gt;&lt;a href=&quot;system-io#t:IOMode&quot;&gt;IOMode&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c7f75d66c23f2c823051ed78b549c0dc321c99c1" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;&lt;a href=&quot;system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; pointer to an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, using the second argument as a finalizer to run when &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is garbage-collected</source>
          <target state="translated">Haga un puntero &lt;code&gt;&lt;a href=&quot;system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , utilizando el segundo argumento como finalizador para ejecutar cuando &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; se recolecta como basura</target>
        </trans-unit>
        <trans-unit id="90c73ab748e0e00da22596dbc5fd000f5f781ad2" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;&lt;a href=&quot;system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; pointer to an &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;, using the second argument as a finalizer to run when &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; is garbage-collected</source>
          <target state="translated">Haga un puntero &lt;code&gt;&lt;a href=&quot;system-mem-weak#t:Weak&quot;&gt;Weak&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; , utilizando el segundo argumento como finalizador para ejecutar cuando &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; se recolecta como basura</target>
        </trans-unit>
        <trans-unit id="68976173fa646f3a0550c955065f1d56dd3d0c9c" translate="yes" xml:space="preserve">
          <source>Make a StablePtr that can be passed to the C function &lt;code&gt;hs_try_putmvar()&lt;/code&gt;. The RTS wants a &lt;code&gt;&lt;a href=&quot;foreign-stableptr#t:StablePtr&quot;&gt;StablePtr&lt;/a&gt;&lt;/code&gt; to the underlying &lt;code&gt;&lt;a href=&quot;ghc-exts#t:MVar-35-&quot;&gt;MVar#&lt;/a&gt;&lt;/code&gt;, but a &lt;code&gt;&lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt;&lt;/code&gt; can only refer to lifted types, so we have to cheat by coercing.</source>
          <target state="translated">Cree un StablePtr que pueda pasarse a la funci&amp;oacute;n de C &lt;code&gt;hs_try_putmvar()&lt;/code&gt; . El RTS quiere un &lt;code&gt;&lt;a href=&quot;foreign-stableptr#t:StablePtr&quot;&gt;StablePtr&lt;/a&gt;&lt;/code&gt; para el &lt;code&gt;&lt;a href=&quot;ghc-exts#t:MVar-35-&quot;&gt;MVar#&lt;/a&gt;&lt;/code&gt; subyacente , pero un &lt;code&gt;&lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt;&lt;/code&gt; solo puede referirse a tipos elevados, por lo que debemos hacer trampa coaccionando.</target>
        </trans-unit>
        <trans-unit id="340793623e1a085d7b8da534d1c4b5daea514359" translate="yes" xml:space="preserve">
          <source>Make a mutable array immutable, without copying.</source>
          <target state="translated">Hacer un conjunto mutable inmutable,sin copiar.</target>
        </trans-unit>
        <trans-unit id="c7e012d6c09327d0dafcfeae27a661402dd25db0" translate="yes" xml:space="preserve">
          <source>Make a mutable array of arrays immutable, without copying.</source>
          <target state="translated">Hacer un conjunto mutable de matrices inmutables,sin copiar.</target>
        </trans-unit>
        <trans-unit id="698be6d083fa7f3ca40015a52bb017297e592080" translate="yes" xml:space="preserve">
          <source>Make a mutable byte array immutable, without copying.</source>
          <target state="translated">Hacer que una matriz de bytes mutables sea inmutable,sin copiar.</target>
        </trans-unit>
        <trans-unit id="46fdb0fb8e4b555aaff57055206c3612f29ab2c3" translate="yes" xml:space="preserve">
          <source>Make a path absolute, normalize the path, and remove as many indirections from it as possible. Any trailing path separators are discarded via &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:dropTrailingPathSeparator&quot;&gt;dropTrailingPathSeparator&lt;/a&gt;&lt;/code&gt;. Additionally, on Windows the letter case of the path is canonicalized.</source>
          <target state="translated">Haga una ruta absoluta, normalice la ruta y elimine tantas indirecciones como sea posible. Todos los separadores de ruta final se descartan mediante &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:dropTrailingPathSeparator&quot;&gt;dropTrailingPathSeparator&lt;/a&gt;&lt;/code&gt; . Adem&amp;aacute;s, en Windows se canonicalizan las may&amp;uacute;sculas y min&amp;uacute;sculas de la ruta.</target>
        </trans-unit>
        <trans-unit id="186ec7bfc50eae0a8d365be8aba8bea7326758f0" translate="yes" xml:space="preserve">
          <source>Make a reference to a local value that we can send remotely. This reference will keep the value that it refers to alive until &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#v:freeRemoteRef&quot;&gt;freeRemoteRef&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">Haga una referencia a un valor local que podamos enviar de forma remota. Esta referencia mantendr&amp;aacute; vivo el valor al que se refiere hasta que se &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#v:freeRemoteRef&quot;&gt;freeRemoteRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c87f88ba73344e1ab783a73a9a5979fecf885d2" translate="yes" xml:space="preserve">
          <source>Make a unique directory. The returned &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; is the path of the created directory, which is padded with 6 random characters. The argument is the desired prefix of the filepath of the temporary directory to be created.</source>
          <target state="translated">Crea un directorio &amp;uacute;nico. El &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; devuelto es la ruta del directorio creado, que se rellena con 6 caracteres aleatorios. El argumento es el prefijo deseado de la ruta de archivo del directorio temporal que se crear&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="8d3ca167e4c389a68d7893e4900b4c3fb3ba06a9" translate="yes" xml:space="preserve">
          <source>Make a unique directory. The returned &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; is the path of the created directory, which is padded with 6 random characters. The argument is the desired prefix of the filepath of the temporary directory to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81daa0d04fc3934a4c048011fb03208252f865cf" translate="yes" xml:space="preserve">
          <source>Make a unique directory. The returned &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; is the path of the created directory, which is padded with 6 random characters. The argument is the desired prefix of the filepath of the temporary directory to be created.</source>
          <target state="translated">Crea un directorio &amp;uacute;nico. El &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; devuelto es la ruta del directorio creado, que se rellena con 6 caracteres aleatorios. El argumento es el prefijo deseado de la ruta de archivo del directorio temporal que se crear&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="6a7af8c778c02a1f594bc3983b00324c16ab69b7" translate="yes" xml:space="preserve">
          <source>Make a unique filename and open it for reading/writing. The returned &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; is the (possibly relative) path of the created file, which is padded with 6 random characters. The argument is the desired prefix of the filepath of the temporary file to be created.</source>
          <target state="translated">Cree un nombre de archivo &amp;uacute;nico y &amp;aacute;bralo para leer / escribir. El &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; devuelto es la ruta (posiblemente relativa) del archivo creado, que se rellena con 6 caracteres aleatorios. El argumento es el prefijo deseado de la ruta del archivo temporal que se va a crear.</target>
        </trans-unit>
        <trans-unit id="330d0dcda662cdafbb50eaf0cfa0b95ff8c0f42d" translate="yes" xml:space="preserve">
          <source>Make a unique filename and open it for reading/writing. The returned &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; is the (possibly relative) path of the created file, which is padded with 6 random characters. The argument is the desired prefix of the filepath of the temporary file to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c11d94c0f07317aebbc90457dbda2e57127b10" translate="yes" xml:space="preserve">
          <source>Make a unique filename and open it for reading/writing. The returned &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; is the (possibly relative) path of the created file, which is padded with 6 random characters. The argument is the desired prefix of the filepath of the temporary file to be created.</source>
          <target state="translated">Cree un nombre de archivo &amp;uacute;nico y &amp;aacute;bralo para leer / escribir. El &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; devuelto es la ruta (posiblemente relativa) del archivo creado, que se rellena con 6 caracteres aleatorios. El argumento es el prefijo deseado de la ruta del archivo temporal que se va a crear.</target>
        </trans-unit>
        <trans-unit id="f72f7ad8e05097abb6ee289f5eba19d0e1965f5c" translate="yes" xml:space="preserve">
          <source>Make a unique filename with a given prefix and suffix and open it for reading/writing. The returned &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; is the (possibly relative) path of the created file, which contains 6 random characters in between the prefix and suffix. The first argument is the desired prefix of the filepath of the temporary file to be created. The second argument is the suffix of the temporary file to be created.</source>
          <target state="translated">Cree un nombre de archivo &amp;uacute;nico con un prefijo y sufijo determinados y &amp;aacute;bralo para leer / escribir. El &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; devuelto es la ruta (posiblemente relativa) del archivo creado, que contiene 6 caracteres aleatorios entre el prefijo y el sufijo. El primer argumento es el prefijo deseado de la ruta del archivo temporal que se va a crear. El segundo argumento es el sufijo del archivo temporal que se crear&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="95866426633d8275aa8fda94a7e85fdc02e90eb7" translate="yes" xml:space="preserve">
          <source>Make a unique filename with a given prefix and suffix and open it for reading/writing. The returned &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; is the (possibly relative) path of the created file, which contains 6 random characters in between the prefix and suffix. The first argument is the desired prefix of the filepath of the temporary file to be created. The second argument is the suffix of the temporary file to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3855d0f70cdfe996ae50f55037d364c1d1456c5b" translate="yes" xml:space="preserve">
          <source>Make a weak pointer to a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. It can be important to do this if you want to hold a reference to a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; while still allowing the thread to receive the &lt;code&gt;BlockedIndefinitely&lt;/code&gt; family of exceptions (e.g. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt;). Holding a normal &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; reference will prevent the delivery of &lt;code&gt;BlockedIndefinitely&lt;/code&gt; exceptions because the reference could be used as the target of &lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; at any time, which would unblock the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393f21690a4ea611c6c45f302e4ee432d74df383" translate="yes" xml:space="preserve">
          <source>Make a weak pointer to a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. It can be important to do this if you want to hold a reference to a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; while still allowing the thread to receive the &lt;code&gt;BlockedIndefinitely&lt;/code&gt; family of exceptions (e.g. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt;). Holding a normal &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; reference will prevent the delivery of &lt;code&gt;BlockedIndefinitely&lt;/code&gt; exceptions because the reference could be used as the target of &lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; at any time, which would unblock the thread.</source>
          <target state="translated">Haga un puntero d&amp;eacute;bil a un &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; . Puede ser importante hacer esto si desea guardar una referencia a un &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; al tiempo que permite la rosca para recibir el &lt;code&gt;BlockedIndefinitely&lt;/code&gt; familia de excepciones (por ejemplo &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt; ). Mantener una referencia de &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; normal evitar&amp;aacute; la entrega de excepciones &lt;code&gt;BlockedIndefinitely&lt;/code&gt; porque la referencia podr&amp;iacute;a usarse como el objetivo de &lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; en cualquier momento, lo que desbloquear&amp;iacute;a el hilo.</target>
        </trans-unit>
        <trans-unit id="6c15a521855fa1db7d583391896bbe67487efc38" translate="yes" xml:space="preserve">
          <source>Make a weak pointer to a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. It can be important to do this if you want to hold a reference to a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; while still allowing the thread to receive the &lt;code&gt;BlockedIndefinitely&lt;/code&gt; family of exceptions (e.g. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt;). Holding a normal &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; reference will prevent the delivery of &lt;code&gt;BlockedIndefinitely&lt;/code&gt; exceptions because the reference could be used as the target of &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; at any time, which would unblock the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc78aad57ab0b135f7ad0c2ee2f1ea5372a73a" translate="yes" xml:space="preserve">
          <source>Make a weak pointer to a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. It can be important to do this if you want to hold a reference to a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; while still allowing the thread to receive the &lt;code&gt;BlockedIndefinitely&lt;/code&gt; family of exceptions (e.g. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt;). Holding a normal &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; reference will prevent the delivery of &lt;code&gt;BlockedIndefinitely&lt;/code&gt; exceptions because the reference could be used as the target of &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; at any time, which would unblock the thread.</source>
          <target state="translated">Haga un puntero d&amp;eacute;bil a un &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; . Puede ser importante hacer esto si desea guardar una referencia a un &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; al tiempo que permite la rosca para recibir el &lt;code&gt;BlockedIndefinitely&lt;/code&gt; familia de excepciones (por ejemplo &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt; ). Mantener una referencia de &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; normal evitar&amp;aacute; la entrega de excepciones &lt;code&gt;BlockedIndefinitely&lt;/code&gt; porque la referencia podr&amp;iacute;a usarse como el objetivo de &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; en cualquier momento, lo que desbloquear&amp;iacute;a el hilo.</target>
        </trans-unit>
        <trans-unit id="86ec4e16e20a04abfbb1ac99cdbce02e8ced1057" translate="yes" xml:space="preserve">
          <source>Make a weak pointer to a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. It can be important to do this if you want to hold a reference to a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; while still allowing the thread to receive the &lt;code&gt;BlockedIndefinitely&lt;/code&gt; family of exceptions (e.g. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt;). Holding a normal &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; reference will prevent the delivery of &lt;code&gt;BlockedIndefinitely&lt;/code&gt; exceptions because the reference could be used as the target of &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; at any time, which would unblock the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77491851c6d1ffca83dc5af796a06989b259ab9" translate="yes" xml:space="preserve">
          <source>Make a weak pointer to a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. It can be important to do this if you want to hold a reference to a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; while still allowing the thread to receive the &lt;code&gt;BlockedIndefinitely&lt;/code&gt; family of exceptions (e.g. &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt;). Holding a normal &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; reference will prevent the delivery of &lt;code&gt;BlockedIndefinitely&lt;/code&gt; exceptions because the reference could be used as the target of &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; at any time, which would unblock the thread.</source>
          <target state="translated">Haga un puntero d&amp;eacute;bil a un &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; . Puede ser importante hacer esto si desea guardar una referencia a un &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; al tiempo que permite la rosca para recibir el &lt;code&gt;BlockedIndefinitely&lt;/code&gt; familia de excepciones (por ejemplo &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#t:BlockedIndefinitelyOnMVar&quot;&gt;BlockedIndefinitelyOnMVar&lt;/a&gt;&lt;/code&gt; ). Mantener una referencia de &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; normal evitar&amp;aacute; la entrega de excepciones &lt;code&gt;BlockedIndefinitely&lt;/code&gt; porque la referencia podr&amp;iacute;a usarse como el objetivo de &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; en cualquier momento, lo que desbloquear&amp;iacute;a el hilo.</target>
        </trans-unit>
        <trans-unit id="9f678ce0a5f94456a91a790fc3be2c2ec6925020" translate="yes" xml:space="preserve">
          <source>Make an immutable array mutable, without copying.</source>
          <target state="translated">Hacer una matriz inmutable mutable,sin copiar.</target>
        </trans-unit>
        <trans-unit id="df39c3ecba9f1a1d5927f8873184709183484ed4" translate="yes" xml:space="preserve">
          <source>Make bindings in the current module strict by default.</source>
          <target state="translated">Hacer que los enlaces en el módulo actual sean estrictos por defecto.</target>
        </trans-unit>
        <trans-unit id="b462570effd4237ee90c797f361ccb9ef392f0ca" translate="yes" xml:space="preserve">
          <source>Make dependencies that declare that files with suffix &lt;code&gt;.⟨suf⟩⟨osuf⟩&lt;/code&gt; depend on interface files with suffix &lt;code&gt;.⟨suf⟩hi&lt;/code&gt;</source>
          <target state="translated">Cree dependencias que declaren que los archivos con el sufijo &lt;code&gt;.⟨suf⟩⟨osuf⟩&lt;/code&gt; dependen de los archivos de interfaz con el sufijo &lt;code&gt;.⟨suf⟩hi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b9d645523fe749f3d314ba22eb6324344c7aca9" translate="yes" xml:space="preserve">
          <source>Make dependencies that declare that files with suffix &lt;code&gt;.⟨suf⟩⟨osuf⟩&lt;/code&gt; depend on interface files with suffix &lt;code&gt;.⟨suf⟩hi&lt;/code&gt;, or (for &lt;code&gt;{-# SOURCE #-}&lt;/code&gt; imports) on &lt;code&gt;.hi-boot&lt;/code&gt;. Multiple &lt;code&gt;-dep-suffix&lt;/code&gt; flags are permitted. For example, &lt;code&gt;-dep-suffix a_ -dep-suffix b_&lt;/code&gt; will make dependencies for &lt;code&gt;.hs&lt;/code&gt; on &lt;code&gt;.hi&lt;/code&gt;, &lt;code&gt;.a_hs&lt;/code&gt; on &lt;code&gt;.a_hi&lt;/code&gt;, and &lt;code&gt;.b_hs&lt;/code&gt; on &lt;code&gt;.b_hi&lt;/code&gt;. Note that you must provide at least one suffix; if you do not want a suffix then pass &lt;code&gt;-dep-suffix ''&lt;/code&gt;.</source>
          <target state="translated">Cree dependencias que declaren que los archivos con el sufijo &lt;code&gt;.⟨suf⟩⟨osuf⟩&lt;/code&gt; dependen de los archivos de interfaz con el sufijo &lt;code&gt;.⟨suf⟩hi&lt;/code&gt; , o (para las importaciones &lt;code&gt;{-# SOURCE #-}&lt;/code&gt; ) en &lt;code&gt;.hi-boot&lt;/code&gt; . Se &lt;code&gt;-dep-suffix&lt;/code&gt; varios indicadores de sufijo -dep . Por ejemplo, &lt;code&gt;-dep-suffix a_ -dep-suffix b_&lt;/code&gt; crear&amp;aacute; dependencias para &lt;code&gt;.hs&lt;/code&gt; en &lt;code&gt;.hi&lt;/code&gt; , &lt;code&gt;.a_hs&lt;/code&gt; en &lt;code&gt;.a_hi&lt;/code&gt; y &lt;code&gt;.b_hs&lt;/code&gt; en &lt;code&gt;.b_hi&lt;/code&gt; . Tenga en cuenta que debe proporcionar al menos un sufijo; si no desea un sufijo, pase &lt;code&gt;-dep-suffix ''&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f58245b56849264d71b5f006aa40914e92e5165" translate="yes" xml:space="preserve">
          <source>Make dictionaries strict</source>
          <target state="translated">Hacer que los diccionarios sean estrictos</target>
        </trans-unit>
        <trans-unit id="f7e4637506fdb1c126cf33d58aefa19e41c7d250" translate="yes" xml:space="preserve">
          <source>Make dictionaries strict.</source>
          <target state="translated">Haz que los diccionarios sean estrictos.</target>
        </trans-unit>
        <trans-unit id="5455661e420f1ccaf72cf9dabbbfecf771d7db4a" translate="yes" xml:space="preserve">
          <source>Make dictionary-valued expressions seem cheap to the optimiser.</source>
          <target state="translated">Hacer que las expresiones valoradas en el diccionario parezcan baratas para el optimista.</target>
        </trans-unit>
        <trans-unit id="6f85a3e8f6df876856512758475047874462d99e" translate="yes" xml:space="preserve">
          <source>Make fields of data types defined in the current module strict by default.</source>
          <target state="translated">Hacer estrictos por defecto los campos de los tipos de datos definidos en el módulo actual.</target>
        </trans-unit>
        <trans-unit id="af0e48df1414b6d5a7855574141f6461c5ce4805" translate="yes" xml:space="preserve">
          <source>Make suggestions for mis-spelled names.</source>
          <target state="translated">Sugerir nombres mal escritos.</target>
        </trans-unit>
        <trans-unit id="88ce76b97dc5f41df8b9eb8175635106d378b209" translate="yes" xml:space="preserve">
          <source>Make sure that the either you switch off let-floating (&lt;code&gt;-fno-full-laziness&lt;/code&gt;), or that the call to &lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; cannot float outside a lambda. For example, if you say: &lt;code&gt;
           f x = unsafePerformIO (newIORef [])
        &lt;/code&gt; you may get only one reference cell shared between all calls to &lt;code&gt;f&lt;/code&gt;. Better would be &lt;code&gt;
           f x = unsafePerformIO (newIORef [x])
        &lt;/code&gt; because now it can't float outside the lambda.</source>
          <target state="translated">Aseg&amp;uacute;rese de que desactiva let-floating ( &lt;code&gt;-fno-full-laziness&lt;/code&gt; ) o que la llamada a &lt;code&gt;&lt;a href=&quot;ghc-io#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no puede flotar fuera de un lambda. Por ejemplo, si dice: &lt;code&gt; f x = unsafePerformIO (newIORef []) &lt;/code&gt; , puede obtener solo una celda de referencia compartida entre todas las llamadas a &lt;code&gt;f&lt;/code&gt; . Mejor ser&amp;iacute;a &lt;code&gt; f x = unsafePerformIO (newIORef [x]) &lt;/code&gt; porque ahora no puede flotar fuera de la lambda.</target>
        </trans-unit>
        <trans-unit id="d84ebfc6fbaa58496dbe73b158b5610e0f005524" translate="yes" xml:space="preserve">
          <source>Make sure that the either you switch off let-floating (&lt;code&gt;-fno-full-laziness&lt;/code&gt;), or that the call to &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; cannot float outside a lambda. For example, if you say: &lt;code&gt;
           f x = unsafePerformIO (newIORef [])
        &lt;/code&gt; you may get only one reference cell shared between all calls to &lt;code&gt;f&lt;/code&gt;. Better would be &lt;code&gt;
           f x = unsafePerformIO (newIORef [x])
        &lt;/code&gt; because now it can't float outside the lambda.</source>
          <target state="translated">Aseg&amp;uacute;rese de que desactiva let-floating ( &lt;code&gt;-fno-full-laziness&lt;/code&gt; ) o que la llamada a &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no puede flotar fuera de un lambda. Por ejemplo, si dice: &lt;code&gt; f x = unsafePerformIO (newIORef []) &lt;/code&gt; , puede obtener solo una celda de referencia compartida entre todas las llamadas a &lt;code&gt;f&lt;/code&gt; . Mejor ser&amp;iacute;a &lt;code&gt; f x = unsafePerformIO (newIORef [x]) &lt;/code&gt; porque ahora no puede flotar fuera de la lambda.</target>
        </trans-unit>
        <trans-unit id="156fd7ebd73ad9d7d9ba6f146870be0be3263cef" translate="yes" xml:space="preserve">
          <source>Make sure that the either you switch off let-floating (&lt;code&gt;-fno-full-laziness&lt;/code&gt;), or that the call to &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; cannot float outside a lambda. For example, if you say: &lt;code&gt;
           f x = unsafePerformIO (newIORef [])
        &lt;/code&gt; you may get only one reference cell shared between all calls to &lt;code&gt;f&lt;/code&gt;. Better would be &lt;code&gt;
           f x = unsafePerformIO (newIORef [x])
        &lt;/code&gt; because now it can't float outside the lambda.</source>
          <target state="translated">Aseg&amp;uacute;rese de que desactiva let-floating ( &lt;code&gt;-fno-full-laziness&lt;/code&gt; ) o que la llamada a &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no puede flotar fuera de un lambda. Por ejemplo, si dice: &lt;code&gt; f x = unsafePerformIO (newIORef []) &lt;/code&gt; , puede obtener solo una celda de referencia compartida entre todas las llamadas a &lt;code&gt;f&lt;/code&gt; . Mejor ser&amp;iacute;a &lt;code&gt; f x = unsafePerformIO (newIORef [x]) &lt;/code&gt; porque ahora no puede flotar fuera de la lambda.</target>
        </trans-unit>
        <trans-unit id="4240c3ab8260bb583d13050ed2064bbaae7bc43b" translate="yes" xml:space="preserve">
          <source>Make the interface loader be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el cargador de interfaz sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="4358699704291b8174b75e1e492414b400dba246" translate="yes" xml:space="preserve">
          <source>Make the pattern match exhaustiveness checker be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el verificador exhaustivo de coincidencias de patrones sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="d42a1e2a4e6f039639430d0f8ec96b5efe794a51" translate="yes" xml:space="preserve">
          <source>Make the renamer be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el renombrador sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="8cd12a9927ea510906e14322831e59cfe0a4baca" translate="yes" xml:space="preserve">
          <source>Make the type checker be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el verificador de tipos sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="15d9abd622590033f2c411d33953dd776c5be50c" translate="yes" xml:space="preserve">
          <source>Makes a &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; for an arbitrary object. The object passed as the first argument is not evaluated by &lt;code&gt;&lt;a href=&quot;ghc-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Hace un &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; para un objeto arbitrario. El objeto pasado como primer argumento no es evaluado por &lt;code&gt;&lt;a href=&quot;ghc-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c12968a0552ecdcf1b9de9b4f5c5bede7e5bbb53" translate="yes" xml:space="preserve">
          <source>Makes a &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; for an arbitrary object. The object passed as the first argument is not evaluated by &lt;code&gt;&lt;a href=&quot;system-mem-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Hace un &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; para un objeto arbitrario. El objeto pasado como primer argumento no es evaluado por &lt;code&gt;&lt;a href=&quot;system-mem-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa32c2b4fd707872dac37cc6dbc8a7e855f28d02" translate="yes" xml:space="preserve">
          <source>Makes a binary Handle. This is for historical reasons; it should probably be a text Handle with the default encoding and newline translation instead.</source>
          <target state="translated">Hace una manija binaria.Esto es por razones históricas;probablemente debería ser un Handle de texto con la codificación por defecto y la traducción de la nueva línea en su lugar.</target>
        </trans-unit>
        <trans-unit id="d4e61217ddb45f4a69f77fed47cefb695ba63354" translate="yes" xml:space="preserve">
          <source>Makes a constructor for &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Hace un constructor para &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="675f8bacbe562ad639f450df630ba3e1d4142613" translate="yes" xml:space="preserve">
          <source>Makes a pointer to a field struct. It will have the type &lt;code&gt;Ptr a -&amp;gt; Ptr b&lt;/code&gt;.</source>
          <target state="translated">Hace un puntero a una estructura de campo. Tendr&amp;aacute; el tipo &lt;code&gt;Ptr a -&amp;gt; Ptr b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15d722c20f3a7b347acb5b13726b5fa9b1a3a525" translate="yes" xml:space="preserve">
          <source>Makes a specific warning into a fatal error. The warning will be enabled if it hasn&amp;rsquo;t been enabled yet. Can be reversed with &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Convierte una advertencia espec&amp;iacute;fica en un error fatal. La advertencia se habilitar&amp;aacute; si a&amp;uacute;n no se ha habilitado. Puede invertirse con &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b11cc1ed06b4ae510e6c368934b3332b8443ad9c" translate="yes" xml:space="preserve">
          <source>Makes any warning into a fatal error. Useful so that you don&amp;rsquo;t miss warnings when doing batch compilation. To reverse &lt;code&gt;-Werror&lt;/code&gt; and stop treating any warnings as errors use &lt;code&gt;-Wwarn&lt;/code&gt;, or use &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt; to stop treating specific warnings as errors.</source>
          <target state="translated">Convierte cualquier advertencia en un error fatal. &amp;Uacute;til para que no se pierda las advertencias al realizar la compilaci&amp;oacute;n por lotes. Para revertir &lt;code&gt;-Werror&lt;/code&gt; y dejar de tratar las advertencias como errores, use &lt;code&gt;-Wwarn&lt;/code&gt; , o use &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt; para dejar de tratar advertencias espec&amp;iacute;ficas como errores.</target>
        </trans-unit>
        <trans-unit id="bbf1ed151ae759b693edba02d868a0ae08a8295e" translate="yes" xml:space="preserve">
          <source>Makes the second handle a duplicate of the first handle. The second handle will be closed first, if it is not already.</source>
          <target state="translated">Hace que el segundo mango sea un duplicado del primero.El segundo mango se cerrará primero,si no lo está ya.</target>
        </trans-unit>
        <trans-unit id="610ca9a4f461051b57571e94ee46024ad1945482" translate="yes" xml:space="preserve">
          <source>Making functors whose elements are notionally in the reverse order from the original functor.</source>
          <target state="translated">Haciendo functores cuyos elementos están teóricamente en el orden inverso al del functor original.</target>
        </trans-unit>
        <trans-unit id="de10c11c39a04c2dd93935591757ad821f0de619" translate="yes" xml:space="preserve">
          <source>Making functors with an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instance that performs actions in the reverse order.</source>
          <target state="translated">Haciendo functores con una instancia &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; que realiza acciones en orden inverso.</target>
        </trans-unit>
        <trans-unit id="289b3ce3f004eadb698cbe23952c8692f75647d6" translate="yes" xml:space="preserve">
          <source>Making functors with an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instance that performs actions in the reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155fd1571bb064a261bef3cb9235ad72ee317621" translate="yes" xml:space="preserve">
          <source>Malloc some data and return a &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:RemotePtr&quot;&gt;RemotePtr&lt;/a&gt;&lt;/code&gt; to it</source>
          <target state="translated">Malloc algunos datos y devolver un &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:RemotePtr&quot;&gt;RemotePtr&lt;/a&gt;&lt;/code&gt; a ella</target>
        </trans-unit>
        <trans-unit id="357e8ecf448ec27f6c58902a75153131236e9618" translate="yes" xml:space="preserve">
          <source>Manage separate memory pools for each node.</source>
          <target state="translated">Administre los grupos de memoria separados para cada nodo.</target>
        </trans-unit>
        <trans-unit id="27a837f8eed8146ea6300d174b2ba753bef518d3" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt;.</source>
          <target state="translated">Manipular la &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; utilizando s &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operaciones. Todos los caracteres se truncar&amp;aacute;n a 8 bits. Es de esperar que estas funciones se ejecutar&amp;aacute;n a velocidades id&amp;eacute;nticas a sus &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalentes en &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8d02698e3a7db40c93071ad0130d603170bdbf3" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6f1aebfb4c2d76356eff64760ef8d083e1ea9b" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;em&gt;lazy&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#v:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring-lazy&quot;&gt;Data.ByteString.Lazy&lt;/a&gt;.</source>
          <target state="translated">Manipular &lt;em&gt;perezoso &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; utilizando s &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operaciones. Todos los caracteres se truncar&amp;aacute;n a 8 bits. Es de esperar que estas funciones se ejecutar&amp;aacute;n a velocidades id&amp;eacute;nticas a sus &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#v:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalentes en &lt;a href=&quot;data-bytestring-lazy&quot;&gt;Data.ByteString.Lazy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0938573170c5ad64ab547628da8f4334a36723ce" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;em&gt;lazy&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#v:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring-lazy&quot;&gt;Data.ByteString.Lazy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b2945c3b95e9ba030912e565f7997d2afceb6a" translate="yes" xml:space="preserve">
          <source>Many codecs are not stateful, and in these case the state can be represented as &lt;code&gt;()&lt;/code&gt;. Other codecs maintain a state. For example, UTF-16 recognises a BOM (byte-order-mark) character at the beginning of the input, and remembers thereafter whether to use big-endian or little-endian mode. In this case, the state of the codec would include two pieces of information: whether we are at the beginning of the stream (the BOM only occurs at the beginning), and if not, whether to use the big or little-endian encoding.</source>
          <target state="translated">Muchos c&amp;oacute;decs no tienen estado y, en estos casos, el estado se puede representar como &lt;code&gt;()&lt;/code&gt; . Otros c&amp;oacute;decs mantienen un estado. Por ejemplo, UTF-16 reconoce un car&amp;aacute;cter de BOM (marca de orden de bytes) al principio de la entrada y, a partir de entonces, recuerda si se debe utilizar el modo big-endian o little-endian. En este caso, el estado del c&amp;oacute;dec incluir&amp;iacute;a dos piezas de informaci&amp;oacute;n: si estamos al principio de la secuencia (la lista de materiales solo aparece al principio) y, si no, si debemos usar la codificaci&amp;oacute;n big o little-endian.</target>
        </trans-unit>
        <trans-unit id="24d0ab19e4e99147773dbcbe9263cdf0c945a575" translate="yes" xml:space="preserve">
          <source>Many functions in this module have the same names as functions in the &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; or in &lt;a href=&quot;../base-4.13.0.0/data-list&quot;&gt;Data.List&lt;/a&gt;. In almost all cases, these functions behave analogously. For example, &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a sequence in exactly the same way that &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.&lt;a href=&quot;../base-4.13.0.0/prelude#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a list. The only major exception is the &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; function, which is based on the function by that name in &lt;a href=&quot;data-intmap&quot;&gt;Data.IntMap&lt;/a&gt; rather than the one in &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo tienen los mismos nombres que las funciones de &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; o &lt;a href=&quot;../base-4.13.0.0/data-list&quot;&gt;Data.List&lt;/a&gt; . En casi todos los casos, estas funciones se comportan de forma an&amp;aacute;loga. Por ejemplo, &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filtra una secuencia exactamente de la misma forma que &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.&lt;a href=&quot;../base-4.13.0.0/prelude#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filtra una lista. La &amp;uacute;nica excepci&amp;oacute;n importante es la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; , que se basa en la funci&amp;oacute;n con ese nombre en &lt;a href=&quot;data-intmap&quot;&gt;Data.IntMap&lt;/a&gt; en lugar de la de &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c62b5fa473677017f2721ca5795d98e992c22e65" translate="yes" xml:space="preserve">
          <source>Many functions in this module have the same names as functions in the &lt;a href=&quot;../base-4.14.1.0/prelude&quot;&gt;Prelude&lt;/a&gt; or in &lt;a href=&quot;../base-4.14.1.0/data-list&quot;&gt;Data.List&lt;/a&gt;. In almost all cases, these functions behave analogously. For example, &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a sequence in exactly the same way that &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude&quot;&gt;Prelude&lt;/a&gt;.&lt;a href=&quot;../base-4.14.1.0/prelude#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a list. The only major exception is the &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; function, which is based on the function by that name in &lt;a href=&quot;data-intmap&quot;&gt;Data.IntMap&lt;/a&gt; rather than the one in &lt;a href=&quot;../base-4.14.1.0/prelude&quot;&gt;Prelude&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54ffbaf5c6091b870718ed3779391643593140a" translate="yes" xml:space="preserve">
          <source>Many operations have a worst-case complexity of O(min(n,W)). This means that the operation can become linear in the number of elements with a maximum of &lt;em&gt;W&lt;/em&gt; -- the number of bits in an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 or 64).</source>
          <target state="translated">Muchas operaciones tienen una complejidad en el peor de los casos de O (min (n, W)). Esto significa que la operaci&amp;oacute;n puede volverse lineal en el n&amp;uacute;mero de elementos con un m&amp;aacute;ximo de &lt;em&gt;W&lt;/em&gt; , el n&amp;uacute;mero de bits en un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 o 64).</target>
        </trans-unit>
        <trans-unit id="98a01da62d47f087f540e76f8d5b26b5e49b62ce" translate="yes" xml:space="preserve">
          <source>Many operations have a worst-case complexity of O(min(n,W)). This means that the operation can become linear in the number of elements with a maximum of &lt;em&gt;W&lt;/em&gt; -- the number of bits in an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 or 64).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="2b7b80f10f3a81cda5d3d90fed79ebb948d0265b" translate="yes" xml:space="preserve">
          <source>Map &lt;code&gt;'\r\n'&lt;/code&gt; into &lt;code&gt;'\n'&lt;/code&gt; on input, and &lt;code&gt;'\n'&lt;/code&gt; to the native newline represetnation on output. This mode can be used on any platform, and works with text files using any newline convention. The downside is that &lt;code&gt;readFile &amp;gt;&amp;gt;= writeFile&lt;/code&gt; might yield a different file.</source>
          <target state="translated">Asigne &lt;code&gt;'\r\n'&lt;/code&gt; a &lt;code&gt;'\n'&lt;/code&gt; en la entrada y &lt;code&gt;'\n'&lt;/code&gt; a la representaci&amp;oacute;n nativa de nueva l&amp;iacute;nea en la salida. Este modo se puede utilizar en cualquier plataforma y funciona con archivos de texto utilizando cualquier convenci&amp;oacute;n de nueva l&amp;iacute;nea. La desventaja es que &lt;code&gt;readFile &amp;gt;&amp;gt;= writeFile&lt;/code&gt; puede producir un archivo diferente.</target>
        </trans-unit>
        <trans-unit id="6d55454f009aa8f95f75c772db0fb5ae0e9a9272" translate="yes" xml:space="preserve">
          <source>Map &lt;code&gt;m1&lt;/code&gt;</source>
          <target state="translated">Mapa &lt;code&gt;m1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d73f39524fe5ef1af56ec8e22806ecc515086be" translate="yes" xml:space="preserve">
          <source>Map &lt;code&gt;m2&lt;/code&gt;</source>
          <target state="translated">Mapa &lt;code&gt;m2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9983700cca6f292aa903742f89b52d541c8d933e" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;-safe value.</source>
          <target state="translated">Asignar una &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; valor de la caja fuerte.</target>
        </trans-unit>
        <trans-unit id="18e38d5e5d89b044de0e37bb9b26db6369ce574d" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;-safe value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0766fa419be24fb2dc55e7497743d52826668e62" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="15035b59f86fdfce06c5503b47c04b11e811e80d" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="b46e7ebb5140a1447b3c89113a3d9ae22bb0b79b" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="6903ae5c580a3f2ab80be5d8534af3c46567f965" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="9f9558286be8174c824362eb946ace711872dbf8" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; stream.</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre una secuencia no &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21fd99a4595253dffd079844b719d83735a7905f" translate="yes" xml:space="preserve">
          <source>Map a function over a list and concatenate the results.</source>
          <target state="translated">Mapea una función sobre una lista y concatena los resultados.</target>
        </trans-unit>
        <trans-unit id="9800e72be66dc6c45d2ad289e20ef1a9a51d98ad" translate="yes" xml:space="preserve">
          <source>Map a function over a stream that results in a stream and concatenate the results.</source>
          <target state="translated">Mapear una función sobre una corriente que resulta en una corriente y concatenar los resultados.</target>
        </trans-unit>
        <trans-unit id="ad689681c3a3649d48f9aaad672101632605a134" translate="yes" xml:space="preserve">
          <source>Map a function over all the elements of a container and concatenate the resulting lists.</source>
          <target state="translated">Mapear una función sobre todos los elementos de un contenedor y concatenar las listas resultantes.</target>
        </trans-unit>
        <trans-unit id="1a8247db8adfeefa619b1655afff9beae6787d09" translate="yes" xml:space="preserve">
          <source>Map a user interaction by modifying the base monad computation.</source>
          <target state="translated">Mapea la interacción del usuario modificando el cálculo de la mónada base.</target>
        </trans-unit>
        <trans-unit id="7edbce9966aa6d05b4981154c3d88123653a0c5d" translate="yes" xml:space="preserve">
          <source>Map between &lt;code&gt;&lt;a href=&quot;control-monad-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; computations.</source>
          <target state="translated">Mapa entre c&amp;aacute;lculos &lt;code&gt;&lt;a href=&quot;control-monad-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="712af23920428aa8ce829c6c9a926052d19c882a" translate="yes" xml:space="preserve">
          <source>Map between &lt;code&gt;&lt;a href=&quot;control-monad-trans-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; computations.</source>
          <target state="translated">Mapa entre c&amp;aacute;lculos &lt;code&gt;&lt;a href=&quot;control-monad-trans-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45e2cd283ebb4c611280d82cee74660fbe85bf94" translate="yes" xml:space="preserve">
          <source>Map both the return value and final state of a computation using the given function.</source>
          <target state="translated">Mapea tanto el valor de retorno como el estado final de un cálculo usando la función dada.</target>
        </trans-unit>
        <trans-unit id="4273e77ff1728ba48d1f840696e743d1da1ee755" translate="yes" xml:space="preserve">
          <source>Map both the return value and output of a computation using the given function.</source>
          <target state="translated">Mapea tanto el valor de retorno como la salida de un cálculo usando la función dada.</target>
        </trans-unit>
        <trans-unit id="803e1322fde156db8cc3128774fd2f8d4c99abec" translate="yes" xml:space="preserve">
          <source>Map capabilities to NUMA nodes. Capability C is mapped to NUMA node C mod N.</source>
          <target state="translated">Capacidades de mapeo a los nodos NUMA.La capacidad C está mapeada al nodo NUMA C mod N.</target>
        </trans-unit>
        <trans-unit id="21de922b618d81f2e317aafc9cbebc99176766bc" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f _ y z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f _ y z&lt;/code&gt; contravariable sobre un WhenMatched f _ yz .</target>
        </trans-unit>
        <trans-unit id="aa119e405295642a5bcf3b77b05b9cefc544c124" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x _ z&lt;/code&gt;.</source>
          <target state="translated">Asignar de forma contravariable sobre un &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x _ z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7245e811517b83cae4b9adf19d8a5924072530a7" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f _ x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f _ x&lt;/code&gt; contravariable sobre un WhenMissing f _ x .</target>
        </trans-unit>
        <trans-unit id="09e23d7bb6cd983f23a248d179ee216a8f59e394" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k _ y z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k _ y z&lt;/code&gt; contravariable sobre un WhenMatched fk _ yz .</target>
        </trans-unit>
        <trans-unit id="2569c1d7ccbe6013b4e6c78fb8e786a9a6095e76" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x _ z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x _ z&lt;/code&gt; contravariable sobre un WhenMatched fkx _ z .</target>
        </trans-unit>
        <trans-unit id="a14103f7c1f26a2fcbb71bbe285a99bdcde54ff7" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k _ x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k _ x&lt;/code&gt; contravariable sobre un WhenMissing fk _ x .</target>
        </trans-unit>
        <trans-unit id="a8eb552837e87415b9d4df127dcd174fef924114" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y&lt;/code&gt;.</source>
          <target state="translated">Asignar covariantemente sobre un &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y&lt;/code&gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46bcbb877a60019cf521e9ab67aa98b003657bfd" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f x&lt;/code&gt;.</source>
          <target state="translated">Asignar covariantemente sobre un &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f x&lt;/code&gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9d6ab9d11a41a76d9162b3143fae97f6b16f455" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt; covariantemente sobre un fkxy WhenMatched .</target>
        </trans-unit>
        <trans-unit id="3f706796547b811fccb9bd7e5484d305853862eb" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt; covariantemente sobre un fkx WhenMissing .</target>
        </trans-unit>
        <trans-unit id="80246f23eba01c63a2b57d2f1b0b002711c39d9f" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt; covariantemente sobre un fkxy WhenMatched .</target>
        </trans-unit>
        <trans-unit id="a5cd585d64a0c1fc4c937dd0ee8ee4b052b09370" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt; covariantemente sobre un fkx WhenMissing .</target>
        </trans-unit>
        <trans-unit id="ce99df6d5a6c7da2f980fb998d55fe0e027d1fd2" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt; covariantemente sobre un fkxy WhenMatched .</target>
        </trans-unit>
        <trans-unit id="2de75aa8ae3777dc3c106e78b70228d497cabfb4" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt; covariantemente sobre un fkx WhenMissing .</target>
        </trans-unit>
        <trans-unit id="1414775fb27f647a11edd9afbabc9f1f96d002c5" translate="yes" xml:space="preserve">
          <source>Map covariantly over the first argument.</source>
          <target state="translated">Traza un mapa covariable sobre el primer argumento.</target>
        </trans-unit>
        <trans-unit id="d189acaf26502066081e31e150c1693816dae853" translate="yes" xml:space="preserve">
          <source>Map covariantly over the second argument.</source>
          <target state="translated">Traza un mapa covariable sobre el segundo argumento.</target>
        </trans-unit>
        <trans-unit id="a3b66d8ea2cb272c74911fcfbdc7cf4ca77953fb" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to a monadic action, evaluate these actions from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n mon&amp;aacute;dica, eval&amp;uacute;e estas acciones de izquierda a derecha y recopile los resultados. Para una versi&amp;oacute;n que ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02dfb7e92c38e4214d51e2b9595047ff1b8f9b31" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to a monadic action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n mon&amp;aacute;dica, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para una versi&amp;oacute;n que no ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29efd3765dfabc72142232cb82d864034ee72729" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n, eval&amp;uacute;e estas acciones de izquierda a derecha y recopile los resultados. Para una versi&amp;oacute;n que ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d22dd22b104dd621f77d9d5650ccd532318e02da" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para obtener una versi&amp;oacute;n que no ignora los resultados, consulte el &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43e6de6decbbed7c2a5b1c6751631f378ba334b2" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4417d32b4f323c831d7b4ced61e67f600e01b3fb" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para obtener una versi&amp;oacute;n que no ignora los resultados, consulte el &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c124d6dfa5bddefa553c4516b6211d2cf0661762" translate="yes" xml:space="preserve">
          <source>Map each element of a structure using one of two actions, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results, see &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Mapee cada elemento de una estructura usando una de dos acciones, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para obtener una versi&amp;oacute;n que no ignore los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33e14cd9471b9b06b4f5f3069e4de360f95948a3" translate="yes" xml:space="preserve">
          <source>Map each element of the structure to a monoid, and combine the results.</source>
          <target state="translated">Mapea cada elemento de la estructura a un monoide,y combina los resultados.</target>
        </trans-unit>
        <trans-unit id="cb44df1644994b6e9bedbd4295f2ba757e01b134" translate="yes" xml:space="preserve">
          <source>Map leap-second values to the start of the following second. The resulting &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; will always be in the range 0 to 1E9-1.</source>
          <target state="translated">Asigne los valores del segundo intercalar al inicio del segundo siguiente. Los &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; resultante siempre estar&amp;aacute;n en el rango de 0 a 1E9-1.</target>
        </trans-unit>
        <trans-unit id="f67b9485e617340983ccecc0a0a8ab8a5398d3f1" translate="yes" xml:space="preserve">
          <source>Map over both arguments at the same time.</source>
          <target state="translated">Mapea los dos argumentos al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="820bfb2b876cadb7ba21577ea1191e745febb6e2" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="042a8e608fdbf1be1815be0ba68d9d8129c0d45e" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="7446b734119c67e4a15eea3901f43f333f1d45b7" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="f20f45f5901d5da69a8a8bd25afdefdf94fb0463" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="27b9407877fd74e4c60e5bb3f11429e5468cc32d" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map.</source>
          <target state="translated">Mapea las entradas a las que les faltan las claves del otro mapa.</target>
        </trans-unit>
        <trans-unit id="4972444ee92a42eeb10783a738cee55cc20ccb73" translate="yes" xml:space="preserve">
          <source>Map the inner computation using the given function.</source>
          <target state="translated">Mapea el cálculo interno usando la función dada.</target>
        </trans-unit>
        <trans-unit id="f01bd56150a44e5c1e36c99b2ce32a4952f1afda" translate="yes" xml:space="preserve">
          <source>Map the return value, final state and output of a computation using the given function.</source>
          <target state="translated">Mapea el valor de retorno,el estado final y la salida de un cálculo usando la función dada.</target>
        </trans-unit>
        <trans-unit id="611b5e106ea059979f2f1779bbc5d5819342b37e" translate="yes" xml:space="preserve">
          <source>Map the unwrapped computation using the given function.</source>
          <target state="translated">Mapea el cálculo desenvuelto usando la función dada.</target>
        </trans-unit>
        <trans-unit id="9a3aa11de5ca9a6bdbea1dfb4fae341156bcff0a" translate="yes" xml:space="preserve">
          <source>Map type</source>
          <target state="translated">Tipo de mapa</target>
        </trans-unit>
        <trans-unit id="1810f098d7eac5bae7e2406903ecfc11787e8374" translate="yes" xml:space="preserve">
          <source>MapCRtoLF</source>
          <target state="translated">MapCRtoLF</target>
        </trans-unit>
        <trans-unit id="28b80a5d51a036d17e03dadde928449b953d85da" translate="yes" xml:space="preserve">
          <source>MapLFtoCR</source>
          <target state="translated">MapLFtoCR</target>
        </trans-unit>
        <trans-unit id="0f7287b611e3434635c4078dcc64979ba53c31bb" translate="yes" xml:space="preserve">
          <source>MapiFlag</source>
          <target state="translated">MapiFlag</target>
        </trans-unit>
        <trans-unit id="509e216767250bbf0cec7134cc87bd8db88ff863" translate="yes" xml:space="preserve">
          <source>MapiFreeBufferType</source>
          <target state="translated">MapiFreeBufferType</target>
        </trans-unit>
        <trans-unit id="f6693d804c9943e70a4a0323060d0df51aa65dfa" translate="yes" xml:space="preserve">
          <source>MapiFuncs</source>
          <target state="translated">MapiFuncs</target>
        </trans-unit>
        <trans-unit id="cd9c46f0be135a23d65b90dc10dbdb8e6bf7bb43" translate="yes" xml:space="preserve">
          <source>MapiLoaded</source>
          <target state="translated">MapiLoaded</target>
        </trans-unit>
        <trans-unit id="fa7f40372f1e4c545567caf67dc788efc58735dc" translate="yes" xml:space="preserve">
          <source>MapiLogoffType</source>
          <target state="translated">MapiLogoffType</target>
        </trans-unit>
        <trans-unit id="36cb3aec5c1c5fe73d8e8e0fc96d8a25e6742274" translate="yes" xml:space="preserve">
          <source>MapiLogonType</source>
          <target state="translated">MapiLogonType</target>
        </trans-unit>
        <trans-unit id="7a12682bc39d4a4b9b85256454d88deeb97151f5" translate="yes" xml:space="preserve">
          <source>MapiRecipDesc</source>
          <target state="translated">MapiRecipDesc</target>
        </trans-unit>
        <trans-unit id="dd6f6d1599d7119a2a1666a29fe8913e02817cc0" translate="yes" xml:space="preserve">
          <source>MapiResolveNameType</source>
          <target state="translated">MapiResolveNameType</target>
        </trans-unit>
        <trans-unit id="e806730edd68685562cf8c1233b6d49d37ab11ba" translate="yes" xml:space="preserve">
          <source>MapiSendMailType</source>
          <target state="translated">MapiSendMailType</target>
        </trans-unit>
        <trans-unit id="09e81b0440d9e7e7c46c283e70fc598be2643acd" translate="yes" xml:space="preserve">
          <source>Mapped object, from withMappedFile</source>
          <target state="translated">Objeto mapeado,de conMappedFile</target>
        </trans-unit>
        <trans-unit id="782e4fafad5e3beb16ef35319d6126950de58292" translate="yes" xml:space="preserve">
          <source>MappedObject</source>
          <target state="translated">MappedObject</target>
        </trans-unit>
        <trans-unit id="6f8944015d37918b217a17f41aec65c11bca6197" translate="yes" xml:space="preserve">
          <source>Mapping of C types to corresponding Haskell types.</source>
          <target state="translated">Mapeo de los tipos C a los correspondientes tipos Haskell.</target>
        </trans-unit>
        <trans-unit id="bfccc2a90a967ca2c9726fa59c31448b51ea07bc" translate="yes" xml:space="preserve">
          <source>Maps an old state to a new state inside a state monad. The old state is thrown away.</source>
          <target state="translated">Traza un mapa de un viejo estado a un nuevo estado dentro de una mónada estatal.El viejo estado es desechado.</target>
        </trans-unit>
        <trans-unit id="0a1978af85dd59fcc87cee4e7808720188940a44" translate="yes" xml:space="preserve">
          <source>Maps area into memory.</source>
          <target state="translated">El área de los mapas en la memoria.</target>
        </trans-unit>
        <trans-unit id="12d3f218c041a3e94409cd521a65703707ec7d30" translate="yes" xml:space="preserve">
          <source>Maps file fully and returns ForeignPtr and length of the mapped area. The mapped file is opened read-only and shared reading.</source>
          <target state="translated">Los mapas se archivan completamente y devuelven ForeignPtr y la longitud del área mapeada.El archivo mapeado se abre en modo de sólo lectura y lectura compartida.</target>
        </trans-unit>
        <trans-unit id="3936cc3f677a76a2eedb9a68dae98afcd381cc69" translate="yes" xml:space="preserve">
          <source>Mark a module as unsafe so that it can&amp;rsquo;t be imported by code compiled with &lt;a href=&quot;#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt;. Also enable the Safe Import extension so that a module can require a dependency to be trusted.</source>
          <target state="translated">Marque un m&amp;oacute;dulo como inseguro para que no se pueda importar mediante c&amp;oacute;digo compilado con &lt;a href=&quot;#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt; . Tambi&amp;eacute;n habilite la extensi&amp;oacute;n Safe Import para que un m&amp;oacute;dulo pueda requerir una dependencia para ser confiable.</target>
        </trans-unit>
        <trans-unit id="b2469915cb8350f4b45d32b9fb09eae8014a2fd7" translate="yes" xml:space="preserve">
          <source>MarkParityErrors</source>
          <target state="translated">MarkParityErrors</target>
        </trans-unit>
        <trans-unit id="cf1e479bca0990aa370eb4cace42655c1749155a" translate="yes" xml:space="preserve">
          <source>Markers let us do this: we can annotate the program to emit a marker at an appropriate point during execution and then see that in a profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfae789a5691468edf927d3fcc545f317911943" translate="yes" xml:space="preserve">
          <source>Marks a capability flushing its local update remembered set accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749ef48ee39365b34972946cb74471d0eed9c084" translate="yes" xml:space="preserve">
          <source>Marks if the datatype is actually a newtype</source>
          <target state="translated">Marca si el tipo de datos es realmente un nuevo tipo</target>
        </trans-unit>
        <trans-unit id="2e31ff5a5bf802580a8893f8699ba55f6d3ac5b7" translate="yes" xml:space="preserve">
          <source>Marks if this constructor is a record</source>
          <target state="translated">Marca si este constructor es un récord</target>
        </trans-unit>
        <trans-unit id="c3400456e0dc9b11aa991afcb8dd85aa615efa2c" translate="yes" xml:space="preserve">
          <source>Marks the beginning of a heap profile sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdb9356e7d55128f5fe9e41f811cbba7086dbb4" translate="yes" xml:space="preserve">
          <source>Marks the beginning of a time profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11481cc8464a72c6d603970383a2b8035b849cba" translate="yes" xml:space="preserve">
          <source>Marks the beginning of marking by the concurrent collector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5867d7dd9a19fc447a637c38b43c98746f7ab60" translate="yes" xml:space="preserve">
          <source>Marks the beginning of the concurrent garbage collector&amp;rsquo;s post-mark synchronization phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e14a218bcc85c7d4dcb33742d978559eff47dc5" translate="yes" xml:space="preserve">
          <source>Marks the beginning of the concurrent garbage collector&amp;rsquo;s sweep phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5ce64099ae9eb2d5c99a4e160328562b3336ca" translate="yes" xml:space="preserve">
          <source>Marks the creation of a Haskell thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e940d86df5e1c669573ec00f380d2004c19a2e" translate="yes" xml:space="preserve">
          <source>Marks the creation of a task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3821a3cd57a76c02636f3ef5d01798bb2876d2d" translate="yes" xml:space="preserve">
          <source>Marks the end of a heap profile sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e59b472cf539a835c888dd89568d8c7535aa244" translate="yes" xml:space="preserve">
          <source>Marks the end of concurrent scavenging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bb2a224b54670e5e30b20bb4395fd09c0df40e" translate="yes" xml:space="preserve">
          <source>Marks the end of marking by the concurrent collector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640deea39fa19db976a137734b54b69c77f77688" translate="yes" xml:space="preserve">
          <source>Marks the end of the concurrent garbage collector&amp;rsquo;s post-mark synchronization phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff67171565b14a0ac19b21e97b897585fbd8895f" translate="yes" xml:space="preserve">
          <source>Marks the end of the concurrent garbage collector&amp;rsquo;s sweep phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769d2819dbb6bff931272f20731d9d45442d5b36" translate="yes" xml:space="preserve">
          <source>Marks the migration of a task to a new capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1e650924ea24ab3b1b0f295ccf2fdea9b1307a" translate="yes" xml:space="preserve">
          <source>Marks the start of concurrent scavenging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e626c3e7759a64e59e9a89ccd39a484ef5b02cf" translate="yes" xml:space="preserve">
          <source>Marshal a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; into a C string encoded as UTF-8 in temporary storage, with explicit length information. The encoded string may contain NUL bytes, and is not followed by a trailing NUL byte.</source>
          <target state="translated">Ordene un &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; en una cadena C codificada como UTF-8 en un almacenamiento temporal, con informaci&amp;oacute;n expl&amp;iacute;cita sobre la longitud. La cadena codificada puede contener bytes NUL y no va seguida de un byte NUL final.</target>
        </trans-unit>
        <trans-unit id="e194c0bfa99200c6de46b0a0dae4f141264ffb6b" translate="yes" xml:space="preserve">
          <source>Marshal a C string with explicit length into a Haskell string.</source>
          <target state="translated">Ponga una cuerda de Do con longitud explícita en una cuerda de Haskell.</target>
        </trans-unit>
        <trans-unit id="50198af1318b58c7e70f40d2d8b8dc415ec720f2" translate="yes" xml:space="preserve">
          <source>Marshal a C wide string with explicit length into a Haskell string.</source>
          <target state="translated">Ponga una cuerda en Do con longitud explícita en una cuerda de Haskell.</target>
        </trans-unit>
        <trans-unit id="3c5b68516d82d4c37cb3d40678d4531758ba74e2" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C string (ie, character array) in temporary storage, with explicit length information.</source>
          <target state="translated">Poner una cadena Haskell en una cadena C (es decir,una matriz de caracteres)en almacenamiento temporal,con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="062175c88aeda03668433b163d83cb6364af626e" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C string (ie, character array) with explicit length information.</source>
          <target state="translated">Convierte una cadena de Haskell en una cadena de C (es decir,una matriz de caracteres)con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="912dd885ff9b0a2ea4a16995e74ae7cc0940d45e" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C wide string (i.e. wide character array) in temporary storage, with explicit length information.</source>
          <target state="translated">Marcar una cadena de Haskell en una cadena de ancho C (es decir,una amplia gama de caracteres)en almacenamiento temporal,con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="f77c471f3c7f74d5609487ca9b39a6878b13f8dd" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C wide string (ie, wide character array) with explicit length information.</source>
          <target state="translated">Marcar una cadena de Haskell en una cadena de C ancha (es decir,una amplia gama de caracteres)con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="c98ce6c5f02b8c9585848448e89dbd65dcaf47e3" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C string using temporary storage.</source>
          <target state="translated">Ponga una cuerda Haskell en una cuerda C terminada NUL usando almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="fdda91a4f111ed1a0fc6f2a8775b98e089fe921b" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C string.</source>
          <target state="translated">Mariscal una cuerda Haskell en una cuerda C terminada NUL.</target>
        </trans-unit>
        <trans-unit id="4a04b9cb2051b02b522faee9650a0d495e9ac7e2" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C wide string using temporary storage.</source>
          <target state="translated">Ponga una cuerda Haskell en una cuerda NUL terminada en C ancho usando almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="4054981272596d06fac239f84b099d399356e48b" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C wide string.</source>
          <target state="translated">Mariscal una cuerda Haskell en una cuerda C ancha terminada NUL.</target>
        </trans-unit>
        <trans-unit id="09d48aea89cc33b11ec8033bc15b6483354cf103" translate="yes" xml:space="preserve">
          <source>Marshal a NUL terminated C string into a Haskell string.</source>
          <target state="translated">El mariscal de campo un NUL terminó la cadena C en una cadena Haskell.</target>
        </trans-unit>
        <trans-unit id="4311d7c39509b4fe039bef36ba55dfd320cecd73" translate="yes" xml:space="preserve">
          <source>Marshal a NUL terminated C wide string into a Haskell string.</source>
          <target state="translated">El mariscal de campo un NUL terminó la cuerda C ancha en una cuerda Haskell.</target>
        </trans-unit>
        <trans-unit id="4c47a3a8839a6fd68ae9716c3fa1ce5197fbd8d4" translate="yes" xml:space="preserve">
          <source>Marshal a dummy Haskell string into a C wide string (i.e. wide character array) in temporary storage, with explicit length information.</source>
          <target state="translated">Poner una cadena de Haskell falsa en una cadena de C (es decir,una amplia gama de caracteres)en almacenamiento temporal,con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="6d86041ec3d2e84d33ddd1dd6cfc24550f14836a" translate="yes" xml:space="preserve">
          <source>Marshal a dummy Haskell string into a NUL terminated C wide string using temporary storage.</source>
          <target state="translated">Ponga una cuerda Haskell falsa en una cuerda NUL terminada en C con almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="e0dade00c021cdaf9d0ee91f43d69115b6f80912" translate="yes" xml:space="preserve">
          <source>Marshal a list of Haskell strings into an array of NUL terminated C strings using temporary storage.</source>
          <target state="translated">Ordena una lista de cuerdas Haskell en un conjunto de cuerdas C terminadas NUL usando almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="cc6b108a5f57dc6b9a05c1b127e58f7eca9629cd" translate="yes" xml:space="preserve">
          <source>Marshalling</source>
          <target state="translated">Marshalling</target>
        </trans-unit>
        <trans-unit id="f0ad063d68044737957ed0f797a2cae2aa208116" translate="yes" xml:space="preserve">
          <source>Marshalling arrays</source>
          <target state="translated">Las matrices de clasificación...</target>
        </trans-unit>
        <trans-unit id="36c846ee62dfe999f6767389bfae195bd57e0465" translate="yes" xml:space="preserve">
          <source>Marshalling lists of storable objects</source>
          <target state="translated">Listas de clasificación de objetos almacenables</target>
        </trans-unit>
        <trans-unit id="0dba1cb48010c84cd2d29279809f66a88be05516" translate="yes" xml:space="preserve">
          <source>Marshalling of Boolean values (non-zero corresponds to &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="translated">Clasificaci&amp;oacute;n de valores booleanos (distinto de cero corresponde a &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ab71dfd4eb06d44348ff90d0b69db22a5328f47d" translate="yes" xml:space="preserve">
          <source>Marshalling of Maybe values</source>
          <target state="translated">La ordenación de los valores de &quot;quizás&quot;...</target>
        </trans-unit>
        <trans-unit id="239b1e2996122625ab9c3b095db2c1aaf212e151" translate="yes" xml:space="preserve">
          <source>Marshalling support</source>
          <target state="translated">El apoyo de los mariscales</target>
        </trans-unit>
        <trans-unit id="2768b4d93d7521d0bb9c22088cc6e109b9cb0751" translate="yes" xml:space="preserve">
          <source>Marshalling support. Unsafe API.</source>
          <target state="translated">Apoyo de los mariscales.API inseguro.</target>
        </trans-unit>
        <trans-unit id="2ac6f66636ae68e7acfa888a200b00a6c8d691d3" translate="yes" xml:space="preserve">
          <source>Marshalling support: routines allocating, storing, and retrieving Haskell lists that are represented as arrays in the foreign language</source>
          <target state="translated">Apoyo a la clasificación:rutinas de asignación,almacenamiento y recuperación de las listas de Haskell que se representan como matrices en el idioma extranjero</target>
        </trans-unit>
        <trans-unit id="2eec1eaadfce2f2343fb8a58e72120839ce594dd" translate="yes" xml:space="preserve">
          <source>Martin Escardo and Paulo Oliva. &quot;Selection functions, bar recursion and backward induction&quot;, &lt;em&gt;Mathematical Structures in Computer Science&lt;/em&gt; 20:2 (2010), pp. 127-168. &lt;a href=&quot;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&quot;&gt;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&lt;/a&gt;</source>
          <target state="translated">Mart&amp;iacute;n Escardo y Paulo Oliva. &quot;Funciones de selecci&amp;oacute;n, recursividad de barras e inducci&amp;oacute;n hacia atr&amp;aacute;s&quot;, &lt;em&gt;Estructuras matem&amp;aacute;ticas en inform&amp;aacute;tica&lt;/em&gt; 20: 2 (2010), pp. 127-168. &lt;a href=&quot;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&quot;&gt;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aadf1657da58cb6e5ae063fb1322736bf6002e4" translate="yes" xml:space="preserve">
          <source>Mask</source>
          <target state="translated">Mask</target>
        </trans-unit>
        <trans-unit id="30b6cc635afcf7d59efbff7d871b3f85ca41ffeb" translate="yes" xml:space="preserve">
          <source>MaskedInterruptible</source>
          <target state="translated">MaskedInterruptible</target>
        </trans-unit>
        <trans-unit id="f8a86f7a0ad149ff28451b56d2a010763bd9ea96" translate="yes" xml:space="preserve">
          <source>MaskedUninterruptible</source>
          <target state="translated">MaskedUninterruptible</target>
        </trans-unit>
        <trans-unit id="55a3d416a9f5e2d65bbae417b235dd396b7e87d1" translate="yes" xml:space="preserve">
          <source>MaskingState</source>
          <target state="translated">MaskingState</target>
        </trans-unit>
        <trans-unit id="0335207f5e840d81afa158c6c2bb6e3fa02653b4" translate="yes" xml:space="preserve">
          <source>Match</source>
          <target state="translated">Match</target>
        </trans-unit>
        <trans-unit id="d8e65ef19404e901265ea66bdd78cf07c84d55f3" translate="yes" xml:space="preserve">
          <source>Match &lt;code&gt;v1&lt;/code&gt; against &lt;code&gt;p1&lt;/code&gt;, &lt;code&gt;v2&lt;/code&gt; against &lt;code&gt;p2&lt;/code&gt; and so on. If any of these matches fail or diverge, so does the whole match.</source>
          <target state="translated">&lt;code&gt;v1&lt;/code&gt; coincidir v1 con &lt;code&gt;p1&lt;/code&gt; , &lt;code&gt;v2&lt;/code&gt; con &lt;code&gt;p2&lt;/code&gt; y as&amp;iacute; sucesivamente. Si alguno de estos partidos falla o diverge, tambi&amp;eacute;n lo har&amp;aacute; todo el partido.</target>
        </trans-unit>
        <trans-unit id="6ceb6ea323bd13a9e935c2eb466741cf2f979c72" translate="yes" xml:space="preserve">
          <source>Match and Clause</source>
          <target state="translated">Coincidencia y Cláusula</target>
        </trans-unit>
        <trans-unit id="dd7924a1ec8896d061a233f605e42f91781e1add" translate="yes" xml:space="preserve">
          <source>Match the value &lt;code&gt;v&lt;/code&gt; against &lt;code&gt;p&lt;/code&gt;. If this match fails or diverges, so does the whole (pattern synonym) match. Otherwise the match against &lt;code&gt;p&lt;/code&gt; must bind the variables &lt;code&gt;x1 ... xn&lt;/code&gt;; let them be bound to values &lt;code&gt;v1 ... vn&lt;/code&gt;.</source>
          <target state="translated">Haga coincidir el valor &lt;code&gt;v&lt;/code&gt; con &lt;code&gt;p&lt;/code&gt; . Si esta coincidencia falla o diverge, tambi&amp;eacute;n lo hace todo (sin&amp;oacute;nimo de patr&amp;oacute;n). De lo contrario, la coincidencia con &lt;code&gt;p&lt;/code&gt; debe vincular las variables &lt;code&gt;x1 ... xn&lt;/code&gt; ; d&amp;eacute;jelos estar ligados a los valores &lt;code&gt;v1 ... vn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6763e6cca4e80df18fa4d5f912665ef97a375c19" translate="yes" xml:space="preserve">
          <source>MatchQ</source>
          <target state="translated">MatchQ</target>
        </trans-unit>
        <trans-unit id="4895b24f6bce36c2cd9b44590b52713fb09b4922" translate="yes" xml:space="preserve">
          <source>Matching an expression &lt;code&gt;e&lt;/code&gt; against a pattern &lt;code&gt;!p&lt;/code&gt; is done by first evaluating &lt;code&gt;e&lt;/code&gt; (to WHNF) and then matching the result against &lt;code&gt;p&lt;/code&gt;. Example:</source>
          <target state="translated">La comparaci&amp;oacute;n de una expresi&amp;oacute;n &lt;code&gt;e&lt;/code&gt; con un patr&amp;oacute;n &lt;code&gt;!p&lt;/code&gt; se realiza evaluando primero &lt;code&gt;e&lt;/code&gt; (a WHNF) y luego comparando el resultado con &lt;code&gt;p&lt;/code&gt; . Ejemplo:</target>
        </trans-unit>
        <trans-unit id="70016ff14223778abe33ce54933e1dcebf537bde" translate="yes" xml:space="preserve">
          <source>Matching function for the token to parse.</source>
          <target state="translated">Función de coincidencia para la ficha para analizar.</target>
        </trans-unit>
        <trans-unit id="469df59ba37712c09add7e5bdd4e7279148a045b" translate="yes" xml:space="preserve">
          <source>Matching is carried out on GHC&amp;rsquo;s intermediate language, which includes type abstractions and applications. So a rule only matches if the types match too. See &lt;a href=&quot;#rule-spec&quot;&gt;Specialisation&lt;/a&gt; below.</source>
          <target state="translated">El emparejamiento se lleva a cabo en el lenguaje intermedio de GHC, que incluye abstracciones de tipos y aplicaciones. Entonces, una regla solo coincide si los tipos tambi&amp;eacute;n coinciden. Consulte la &lt;a href=&quot;#rule-spec&quot;&gt;especializaci&amp;oacute;n a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="78b96c127877ae96cfefda73d72a8baba84838aa" translate="yes" xml:space="preserve">
          <source>Matching on &lt;code&gt;App&lt;/code&gt; directly is both hard to read and error prone to write. And the situation is even worse when the matching is nested:</source>
          <target state="translated">Hacer coincidir en la &lt;code&gt;App&lt;/code&gt; directamente es dif&amp;iacute;cil de leer y propenso a errores de escritura. Y la situaci&amp;oacute;n es a&amp;uacute;n peor cuando la coincidencia est&amp;aacute; anidada:</target>
        </trans-unit>
        <trans-unit id="042bacca5d8f713d47eab01491aa815bdbd55203" translate="yes" xml:space="preserve">
          <source>Matching the pattern &lt;code&gt;!pat&lt;/code&gt; against a value &lt;code&gt;v&lt;/code&gt; behaves as follows:</source>
          <target state="translated">Hacer coincidir el patr&amp;oacute;n &lt;code&gt;!pat&lt;/code&gt; con un valor &lt;code&gt;v&lt;/code&gt; se comporta de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3d675806f239e11d4b41b67aa65a5606104824d2" translate="yes" xml:space="preserve">
          <source>Matching: To the equations in Section 3.17.3 of the &lt;a href=&quot;http://www.haskell.org/onlinereport/&quot;&gt;Haskell 98 Report&lt;/a&gt;, add the following:</source>
          <target state="translated">Coincidencia: a las ecuaciones de la Secci&amp;oacute;n 3.17.3 del &lt;a href=&quot;http://www.haskell.org/onlinereport/&quot;&gt;Informe Haskell 98&lt;/a&gt; , agregue lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e2376240265e2ddbf31297cb5bda027216f1ebd9" translate="yes" xml:space="preserve">
          <source>MathSymbol</source>
          <target state="translated">MathSymbol</target>
        </trans-unit>
        <trans-unit id="a95e85aed56318093b024674e217cae0bd30241d" translate="yes" xml:space="preserve">
          <source>Max</source>
          <target state="translated">Max</target>
        </trans-unit>
        <trans-unit id="c189943b0e68bf52ade04ebce38ce6c7c78d6eea" translate="yes" xml:space="preserve">
          <source>Maximum length of a line, in characters.</source>
          <target state="translated">Longitud máxima de una línea,en caracteres.</target>
        </trans-unit>
        <trans-unit id="144a9206977b57448e4faf5e1062274633d6193e" translate="yes" xml:space="preserve">
          <source>Maximum live data (including large objects + compact regions) in the heap. Updated after a major GC.</source>
          <target state="translated">Máximo de datos en vivo (incluyendo objetos grandes+regiones compactas)en el montón.Actualizado después de un GC mayor.</target>
        </trans-unit>
        <trans-unit id="159b778d9454be206f67d4893bca54a49e9b8c77" translate="yes" xml:space="preserve">
          <source>Maximum live data in compact regions</source>
          <target state="translated">Máximo de datos en vivo en regiones compactas</target>
        </trans-unit>
        <trans-unit id="a16695344254fdba02129e66db3ad3e63cb1016e" translate="yes" xml:space="preserve">
          <source>Maximum live data in large objects</source>
          <target state="translated">Máximo de datos en vivo en objetos grandes</target>
        </trans-unit>
        <trans-unit id="240702bae0f29e273fb09ffdba7773ca8777719c" translate="yes" xml:space="preserve">
          <source>Maximum memory in use by the RTS</source>
          <target state="translated">Memoria máxima en uso por la RTS</target>
        </trans-unit>
        <trans-unit id="d8099e9d8479df145a140dbad71866cd985cafd7" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to read</source>
          <target state="translated">Número máximo de bytes a leer</target>
        </trans-unit>
        <trans-unit id="29145ea756091c42d8b8df72e4191a60b4a54c6e" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to write</source>
          <target state="translated">Número máximo de bytes a escribir</target>
        </trans-unit>
        <trans-unit id="9e69850923d54429a417c753e43ca53a7ffd31d5" translate="yes" xml:space="preserve">
          <source>Maximum number of unmatched patterns to be shown in warnings generated by &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-patterns&quot;&gt;&lt;code&gt;-Wincomplete-patterns&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-uni-patterns&quot;&gt;&lt;code&gt;-Wincomplete-uni-patterns&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">N&amp;uacute;mero m&amp;aacute;ximo de patrones no &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-patterns&quot;&gt; &lt;code&gt;-Wincomplete-patterns&lt;/code&gt; &lt;/a&gt; que se mostrar&amp;aacute;n en las advertencias generadas por -Wincomplete-patterns y &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-uni-patterns&quot;&gt; &lt;code&gt;-Wincomplete-uni-patterns&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f5b0947f46a97bb1ec7fe07a7eee8499d030c8e" translate="yes" xml:space="preserve">
          <source>Maximum of two size hints.</source>
          <target state="translated">Un máximo de dos pistas de tamaño.</target>
        </trans-unit>
        <trans-unit id="bdf18c00bb82701af0218115bcf257f5be6c13bb" translate="yes" xml:space="preserve">
          <source>Maximum slop</source>
          <target state="translated">Máxima pendiente</target>
        </trans-unit>
        <trans-unit id="15683050ba4f95be274c22da707d4d37cc680acd" translate="yes" xml:space="preserve">
          <source>May be overlapped by more specific instances</source>
          <target state="translated">Puede estar superpuesta por instancias más específicas</target>
        </trans-unit>
        <trans-unit id="9d13a4f70e986c78366878d8a4b23da17275d3fb" translate="yes" xml:space="preserve">
          <source>May overlap a more general instance</source>
          <target state="translated">Puede superponerse a una instancia más general</target>
        </trans-unit>
        <trans-unit id="bc53972d25b2dda7267fd09725c8dd41aac97859" translate="yes" xml:space="preserve">
          <source>May throw an exception if this is an invalid descriptor.</source>
          <target state="translated">Puede hacer una excepción si este es un descriptor inválido.</target>
        </trans-unit>
        <trans-unit id="56dd8d0bbe9dcb95403cd2c187064106af47af84" translate="yes" xml:space="preserve">
          <source>Maybe</source>
          <target state="translated">Maybe</target>
        </trans-unit>
        <trans-unit id="b92babb5409c0a6ec95584469ae7d91df0ca8969" translate="yes" xml:space="preserve">
          <source>Maybe monoid returning the leftmost non-Nothing value.</source>
          <target state="translated">Tal vez el monoide devuelva el valor de no-nada más a la izquierda.</target>
        </trans-unit>
        <trans-unit id="018b50df30620e3a51db9ef52260cf832edd1f4d" translate="yes" xml:space="preserve">
          <source>Maybe monoid returning the rightmost non-Nothing value.</source>
          <target state="translated">Tal vez el monoide devuelva el valor de no-nada más a la derecha.</target>
        </trans-unit>
        <trans-unit id="fc0be6aa40a87f2c34d21604241fc126b3d008fc" translate="yes" xml:space="preserve">
          <source>Maybe type</source>
          <target state="translated">Tal vez escriba</target>
        </trans-unit>
        <trans-unit id="aa7807fd2f555e6dc07cae0194859e7c01ce8cb6" translate="yes" xml:space="preserve">
          <source>Maybe values</source>
          <target state="translated">Tal vez los valores</target>
        </trans-unit>
        <trans-unit id="e3265936ce333fe37c9404fe3bfe54fa2731aec4" translate="yes" xml:space="preserve">
          <source>MaybeT</source>
          <target state="translated">MaybeT</target>
        </trans-unit>
        <trans-unit id="3fbd96571113d60d1ec28c5fc4754c91f3088410" translate="yes" xml:space="preserve">
          <source>MbATOM</source>
          <target state="translated">MbATOM</target>
        </trans-unit>
        <trans-unit id="55d8534107e7b0b303e6aa4feb48079bd26d10e8" translate="yes" xml:space="preserve">
          <source>MbHANDLE</source>
          <target state="translated">MbHANDLE</target>
        </trans-unit>
        <trans-unit id="e5248b4829d90843e057bd4eca3e14ec6c01b898" translate="yes" xml:space="preserve">
          <source>MbHINSTANCE</source>
          <target state="translated">MbHINSTANCE</target>
        </trans-unit>
        <trans-unit id="863abdca342d4cbfd84104bbc0ff83f945b49e3b" translate="yes" xml:space="preserve">
          <source>MbHMODULE</source>
          <target state="translated">MbHMODULE</target>
        </trans-unit>
        <trans-unit id="3d9c03cdc0330cc84e5101070b081063867dbc28" translate="yes" xml:space="preserve">
          <source>MbINT</source>
          <target state="translated">MbINT</target>
        </trans-unit>
        <trans-unit id="ecea6b01153b85a30965344164775b06fbcb69a4" translate="yes" xml:space="preserve">
          <source>MbLPCSTR</source>
          <target state="translated">MbLPCSTR</target>
        </trans-unit>
        <trans-unit id="e5be102041dc49217c1540606dd21365b89afc4f" translate="yes" xml:space="preserve">
          <source>MbLPCTSTR</source>
          <target state="translated">MbLPCTSTR</target>
        </trans-unit>
        <trans-unit id="53d96f8a97cd2285858b07956c5ce9cae6040aba" translate="yes" xml:space="preserve">
          <source>MbLPOVERLAPPED</source>
          <target state="translated">MbLPOVERLAPPED</target>
        </trans-unit>
        <trans-unit id="1bab356846186170a8b4b1f5b81a7ad37bab46a7" translate="yes" xml:space="preserve">
          <source>MbLPSECURITY_ATTRIBUTES</source>
          <target state="translated">MbLPSECURITY_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="48504feb90b785c6491d7d2c1926298c2bd30054" translate="yes" xml:space="preserve">
          <source>MbLPVOID</source>
          <target state="translated">MbLPVOID</target>
        </trans-unit>
        <trans-unit id="96d0adb31743d4f3821a0e34427fd9d3c6b05a6e" translate="yes" xml:space="preserve">
          <source>MbPos</source>
          <target state="translated">MbPos</target>
        </trans-unit>
        <trans-unit id="e4fd24ce7545ffe7c595a6b3e7a83dba23199af3" translate="yes" xml:space="preserve">
          <source>MbString</source>
          <target state="translated">MbString</target>
        </trans-unit>
        <trans-unit id="ce9329746fe501a099093f13e3edca7c47f40a51" translate="yes" xml:space="preserve">
          <source>Mc: Mark, Spacing Combining</source>
          <target state="translated">Mark,la combinación del espacio</target>
        </trans-unit>
        <trans-unit id="e2c8f4a8900f070fa946c771890c8638e1827848" translate="yes" xml:space="preserve">
          <source>Me: Mark, Enclosing</source>
          <target state="translated">Yo:Mark,adjunto</target>
        </trans-unit>
        <trans-unit id="5613874632be97c00f6099463fe7f3e041473ea8" translate="yes" xml:space="preserve">
          <source>Meanings of specific keywords:</source>
          <target state="translated">Significado de palabras clave específicas:</target>
        </trans-unit>
        <trans-unit id="1aedf6c2f14dc3df6a343ae9b734d4a0213e9822" translate="yes" xml:space="preserve">
          <source>Means &amp;ldquo;turn off all optimisation&amp;rdquo;, reverting to the same settings as if no &lt;code&gt;-O&lt;/code&gt; options had been specified. Saying &lt;code&gt;-O0&lt;/code&gt; can be useful if e.g. &lt;code&gt;make&lt;/code&gt; has inserted a &lt;code&gt;-O&lt;/code&gt; on the command line already.</source>
          <target state="translated">Significa &quot;desactivar toda la optimizaci&amp;oacute;n&quot;, volviendo a la misma configuraci&amp;oacute;n que si no se hubiera especificado ninguna opci&amp;oacute;n &lt;code&gt;-O&lt;/code&gt; . Decir &lt;code&gt;-O0&lt;/code&gt; puede ser &amp;uacute;til si, por ejemplo, &lt;code&gt;make&lt;/code&gt; ya ha insertado &lt;code&gt;-O&lt;/code&gt; en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="1b4aa9a4c3b5df0d65ca9349e71ddf30cd0d7394" translate="yes" xml:space="preserve">
          <source>Means: &amp;ldquo;Apply every non-dangerous optimisation, even if it means significantly longer compile times.&amp;rdquo;</source>
          <target state="translated">Significa: &quot;Aplicar todas las optimizaciones no peligrosas, incluso si eso significa tiempos de compilaci&amp;oacute;n significativamente m&amp;aacute;s largos&quot;.</target>
        </trans-unit>
        <trans-unit id="c3bbe6c8c39ed5248e3ca18003eb3d6900b1a45b" translate="yes" xml:space="preserve">
          <source>Means: &amp;ldquo;Generate good-quality code without taking too long about it.&amp;rdquo; Thus, for example: &lt;code&gt;ghc -c -O Main.lhs&lt;/code&gt;</source>
          <target state="translated">Significa: &quot;Generar c&amp;oacute;digo de buena calidad sin tardar demasiado&quot;. As&amp;iacute;, por ejemplo: &lt;code&gt;ghc -c -O Main.lhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe31d4f25bb8cbbdafdbd4fc62d7fc6cf17c7656" translate="yes" xml:space="preserve">
          <source>Mediate types and binary type constructors.</source>
          <target state="translated">Tipos mediatos y constructores de tipo binario.</target>
        </trans-unit>
        <trans-unit id="517ef4fa125305a5305a3a02844f3bb72b3175b5" translate="yes" xml:space="preserve">
          <source>Mediate types and unary type constructors.</source>
          <target state="translated">Tipos mediatos y constructores de tipo unario.</target>
        </trans-unit>
        <trans-unit id="a1bf368dfa41af6966ac27794caf5006abecc398" translate="yes" xml:space="preserve">
          <source>Memory Model</source>
          <target state="translated">Modelo de memoria</target>
        </trans-unit>
        <trans-unit id="49364f57d947f17b4af9ef59269db84acaef977a" translate="yes" xml:space="preserve">
          <source>Memory addresses are represented as values of type &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt;, for some &lt;code&gt;a&lt;/code&gt; which is an instance of class &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt;. The type argument to &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; helps provide some valuable type safety in FFI code (you can't mix pointers of different types without an explicit cast), while helping the Haskell type system figure out which marshalling method is needed for a given pointer.</source>
          <target state="translated">Las direcciones de memoria se representan como valores de tipo &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt; , para algunos &lt;code&gt;a&lt;/code&gt; , que es una instancia de la clase &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; . El argumento de tipo para &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; ayuda a proporcionar una seguridad de tipo valiosa en el c&amp;oacute;digo FFI (no se pueden mezclar punteros de diferentes tipos sin una conversi&amp;oacute;n expl&amp;iacute;cita), mientras que ayuda al sistema de tipos de Haskell a determinar qu&amp;eacute; m&amp;eacute;todo de clasificaci&amp;oacute;n es necesario para un puntero determinado.</target>
        </trans-unit>
        <trans-unit id="8ccc7c7227622171674639dfab2d7182af83111c" translate="yes" xml:space="preserve">
          <source>Memory addresses are represented as values of type &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt;, for some &lt;code&gt;a&lt;/code&gt; which is an instance of class &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt;. The type argument to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; helps provide some valuable type safety in FFI code (you can't mix pointers of different types without an explicit cast), while helping the Haskell type system figure out which marshalling method is needed for a given pointer.</source>
          <target state="translated">Las direcciones de memoria se representan como valores de tipo &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt; , para algunos &lt;code&gt;a&lt;/code&gt; , que es una instancia de la clase &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; . El argumento de tipo para &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; ayuda a proporcionar una seguridad de tipo valiosa en el c&amp;oacute;digo FFI (no se pueden mezclar punteros de diferentes tipos sin una conversi&amp;oacute;n expl&amp;iacute;cita), mientras que ayuda al sistema de tipos de Haskell a determinar qu&amp;eacute; m&amp;eacute;todo de clasificaci&amp;oacute;n es necesario para un puntero determinado.</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="translated">Asignación de memoria</target>
        </trans-unit>
        <trans-unit id="403b42e453dae36d100f182dddf88973e094f006" translate="yes" xml:space="preserve">
          <source>Memory containing the data to write</source>
          <target state="translated">La memoria que contiene los datos a escribir</target>
        </trans-unit>
        <trans-unit id="94713b6ce43e5b0b6c83500725c2f66aaf33bf20" translate="yes" xml:space="preserve">
          <source>Memory in which to put the data</source>
          <target state="translated">La memoria en la que poner los datos</target>
        </trans-unit>
        <trans-unit id="6dc9de36a01521f350aa26cecadb8b40753a93e7" translate="yes" xml:space="preserve">
          <source>Memory occupied by threads and their stacks is labelled as &amp;ldquo;TSO&amp;rdquo; and &amp;ldquo;STACK&amp;rdquo; respectively when displaying the profile by closure description or type description.</source>
          <target state="translated">La memoria ocupada por los subprocesos y sus pilas se etiqueta como &quot;TSO&quot; y &quot;STACK&quot; respectivamente cuando se muestra el perfil por descripci&amp;oacute;n de cierre o descripci&amp;oacute;n de tipo.</target>
        </trans-unit>
        <trans-unit id="4c76fe9817202da64040fc649066dabc0e7eed8e" translate="yes" xml:space="preserve">
          <source>Memory overhead</source>
          <target state="translated">Memoria por encima de la cabeza</target>
        </trans-unit>
        <trans-unit id="76cf8b1754b778b2d89d0e21d90207ed29dcf08d" translate="yes" xml:space="preserve">
          <source>Memory-related system things.</source>
          <target state="translated">Cosas del sistema relacionadas con la memoria.</target>
        </trans-unit>
        <trans-unit id="d10533e6a3289c9df349dcd02b8d8d7f9c80176b" translate="yes" xml:space="preserve">
          <source>Merge immediately-nested case expressions that scrutinise the same variable. For example,</source>
          <target state="translated">Fusionar expresiones de casos anidados inmediatamente que escudriñan la misma variable.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="5d3ef442f47f2ad90bddd19466398680ce25d8b8" translate="yes" xml:space="preserve">
          <source>Merge two maps.</source>
          <target state="translated">Fusiona dos mapas.</target>
        </trans-unit>
        <trans-unit id="01d28a50eda177ec75942bb24c131250cdadabfb" translate="yes" xml:space="preserve">
          <source>Merges</source>
          <target state="translated">Merges</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="024d721d7acc6f792bdb94402861b9353228512e" translate="yes" xml:space="preserve">
          <source>Messages sent back to GHC from GHCi.TH, to implement the methods of &lt;code&gt;Quasi&lt;/code&gt;. For an overview of how TH works with Remote GHCi, see Note [Remote Template Haskell] in GHCi.TH.</source>
          <target state="translated">Mensajes enviados de vuelta a GHC desde GHCi.TH, para implementar los m&amp;eacute;todos de &lt;code&gt;Quasi&lt;/code&gt; . Para obtener una descripci&amp;oacute;n general de c&amp;oacute;mo funciona TH con Remote GHCi, consulte la Nota [Plantilla remota Haskell] en GHCi.TH.</target>
        </trans-unit>
        <trans-unit id="8d546a6dea9ff90d517b51c25b35319931ae4e04" translate="yes" xml:space="preserve">
          <source>Meta</source>
          <target state="translated">Meta</target>
        </trans-unit>
        <trans-unit id="b4c38ae701ee7b9a08939eed835436caf60c6814" translate="yes" xml:space="preserve">
          <source>Meta information: &lt;code&gt;M1&lt;/code&gt;</source>
          <target state="translated">Metainformaci&amp;oacute;n: &lt;code&gt;M1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbd5ac6aaff1e4e5e3680f3fcf71d0e95837cf76" translate="yes" xml:space="preserve">
          <source>Meta-information</source>
          <target state="translated">Meta-information</target>
        </trans-unit>
        <trans-unit id="1704ec077999acd78a98ea2ae7222e509894be96" translate="yes" xml:space="preserve">
          <source>Meta-information (constructor names, etc.)</source>
          <target state="translated">Meta-información (nombres de los constructores,etc.)</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="1ce80809f59fb3e44fb71f48daaa5004423cdbcf" translate="yes" xml:space="preserve">
          <source>Methods for the RealFrac instances for &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;, with specialised versions for &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">M&amp;eacute;todos para las instancias de RealFrac para &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; , con versiones especializadas para &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="056ba157b3837c9d7e53cf9a40b8f90212f59c28" translate="yes" xml:space="preserve">
          <source>Micro</source>
          <target state="translated">Micro</target>
        </trans-unit>
        <trans-unit id="064b3c6c13a563b40aaf45097d6cc83685cba7e9" translate="yes" xml:space="preserve">
          <source>Milan Straka 2014</source>
          <target state="translated">Milán Straka 2014</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
