<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="014b36e479f20e9eb7171404480ed0d2c8191004" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt64X8OffAddr-35-&quot;&gt;writeInt64X8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int64X8-35-&quot;&gt;Int64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt64X8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt64X8OffAddr-35-&quot;&gt;writeInt64X8OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int64X8-35-&quot;&gt;Int64X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt64X8OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d42085774404f0bc563e2291f8525e69d3f3f72" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8Array-35-&quot;&gt;writeInt8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e13133dc5a0eeec51b9e43f5cc057f457653d5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8Array-35-&quot;&gt;writeInt8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8Array-35-&quot;&gt;writeInt8Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0058472deb24aaa4fb28d7e73727c0299d4d70a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8ArrayAsInt8X16-35-&quot;&gt;writeInt8ArrayAsInt8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8ArrayAsInt8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c09e95b64660689d14fb3d141c0576d8c436c1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8ArrayAsInt8X16-35-&quot;&gt;writeInt8ArrayAsInt8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8ArrayAsInt8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8ArrayAsInt8X16-35-&quot;&gt;writeInt8ArrayAsInt8X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;Estado #&lt;/a&gt; d -&amp;gt;&lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt; State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8ArrayAsInt8X16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e6b02e7b17240d7e66cbbee3a83a6499c720910" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8ArrayAsInt8X32-35-&quot;&gt;writeInt8ArrayAsInt8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8ArrayAsInt8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bac8e9202e57f9604d65e36f9ed2ee70e5502fc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8ArrayAsInt8X32-35-&quot;&gt;writeInt8ArrayAsInt8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8ArrayAsInt8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8ArrayAsInt8X32-35-&quot;&gt;writeInt8ArrayAsInt8X32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8ArrayAsInt8X32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c1c22538468a5b5d472d0c47a6929614dae535b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8ArrayAsInt8X64-35-&quot;&gt;writeInt8ArrayAsInt8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8ArrayAsInt8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d03980eedf9302351c21ac6ff6bb385e5334a2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8ArrayAsInt8X64-35-&quot;&gt;writeInt8ArrayAsInt8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8ArrayAsInt8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8ArrayAsInt8X64-35-&quot;&gt;writeInt8ArrayAsInt8X64 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8ArrayAsInt8X64%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd1e78992cad47ce1259f0b7d03f402876e45873" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddr-35-&quot;&gt;writeInt8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e76349472ed4958ef1c62240acc21a1083c261" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddr-35-&quot;&gt;writeInt8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8OffAddr-35-&quot;&gt;writeInt8OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0830a67b82cbaffac7ec23da369ddf60817fc9ed" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddrAsInt8X16-35-&quot;&gt;writeInt8OffAddrAsInt8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8OffAddrAsInt8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28516083832dd25c05fb4d8a0e2807e986c7467" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddrAsInt8X16-35-&quot;&gt;writeInt8OffAddrAsInt8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddrAsInt8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8OffAddrAsInt8X16-35-&quot;&gt;writeInt8OffAddrAsInt8X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddrAsInt8X16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffded17f6d143f569c1768f905bd72c421af2932" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddrAsInt8X32-35-&quot;&gt;writeInt8OffAddrAsInt8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8OffAddrAsInt8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a13914b48effd6e85dd746a7878538589e82ea7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddrAsInt8X32-35-&quot;&gt;writeInt8OffAddrAsInt8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddrAsInt8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8OffAddrAsInt8X32-35-&quot;&gt;writeInt8OffAddrAsInt8X32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddrAsInt8X32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da0515a2a50ca30778f9ebbc8a93e3bc9643e299" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddrAsInt8X64-35-&quot;&gt;writeInt8OffAddrAsInt8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8OffAddrAsInt8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c890af52cf47826e213e263d1a429bdd1a737a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8OffAddrAsInt8X64-35-&quot;&gt;writeInt8OffAddrAsInt8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddrAsInt8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8OffAddrAsInt8X64-35-&quot;&gt;writeInt8OffAddrAsInt8X64 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8OffAddrAsInt8X64%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7cd9b1927f9670941d1588249d9eed32991f6915" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X16Array-35-&quot;&gt;writeInt8X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41880b5b3cef1778e62ffcacadee7423000f6905" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X16Array-35-&quot;&gt;writeInt8X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8X16Array-35-&quot;&gt;writeInt8X16Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X16Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="940b4d6baa9ce0e5336accd51569d227056a2dd8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X16OffAddr-35-&quot;&gt;writeInt8X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8288f2e78e33c36ceb2da104a693c10b28ebd10" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X16OffAddr-35-&quot;&gt;writeInt8X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8X16OffAddr-35-&quot;&gt;writeInt8X16OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X16-35-&quot;&gt;Int8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X16OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21a7e8b59dcdbbfc28dde27018b5d4afd3d0f061" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X32Array-35-&quot;&gt;writeInt8X32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8X32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d65a9c2abb73db9a7776c7c638c841ec0c1943" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X32Array-35-&quot;&gt;writeInt8X32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8X32Array-35-&quot;&gt;writeInt8X32Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X32Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="217bc90bfeee66e0cf8c5456a32597d064fa73eb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X32OffAddr-35-&quot;&gt;writeInt8X32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8X32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2a7a6ef1ee2fc41b7d32bca1b2e8180bcdc855" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X32OffAddr-35-&quot;&gt;writeInt8X32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8X32OffAddr-35-&quot;&gt;writeInt8X32OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X32-35-&quot;&gt;Int8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X32OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="675fd86e5abb027b44137dc59a1a45068135a3ed" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X64Array-35-&quot;&gt;writeInt8X64Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8X64Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cce142d003f02c0a0cf2684f1d77a2eb96ce0d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X64Array-35-&quot;&gt;writeInt8X64Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X64Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8X64Array-35-&quot;&gt;writeInt8X64Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X64Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db998a9d6f5f6308d4c426e789fa932dea276430" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X64OffAddr-35-&quot;&gt;writeInt8X64OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeInt8X64OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823e5fd611554025bcab9e83cebb3d8d988104b4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeInt8X64OffAddr-35-&quot;&gt;writeInt8X64OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X64OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeInt8X64OffAddr-35-&quot;&gt;writeInt8X64OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int8X64-35-&quot;&gt;Int8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeInt8X64OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b1dc0a32e3b2be29f1b70a316366731d70bdaf0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeIntArray-35-&quot;&gt;writeIntArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeIntArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3028a712918dc8c5f7d6ceb37c616610100e387" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeIntArray-35-&quot;&gt;writeIntArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeIntArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeIntArray-35-&quot;&gt;writeIntArray #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeIntArray%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45f8d066b6cb5a5e931db42b8a605cff0eec2e24" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeIntOffAddr-35-&quot;&gt;writeIntOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeIntOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194b3377e9ce61ae210a3b3ba669ccae3438606a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeIntOffAddr-35-&quot;&gt;writeIntOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeIntOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeIntOffAddr-35-&quot;&gt;writeIntOffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeIntOffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f72365baa324bea7a08bc790669fdf5edaf1d6c9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeList2Chan&quot;&gt;writeList2Chan&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt; a -&amp;gt; [a] -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Concurrent-Chan.html#writeList2Chan&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ae8cc3f6d0a784635c3ba248b423297a2c2730" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeList2Chan&quot;&gt;writeList2Chan&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt; a -&amp;gt; [a] -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Concurrent-Chan.html#writeList2Chan&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeList2Chan&quot;&gt;writeList2Chan&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt; a -&amp;gt; [a] -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Concurrent-Chan.html#writeList2Chan&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="367ddc70d98e6010afaff46bbcd98d9b0cf1a0fa" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeMutVar-35-&quot;&gt;writeMutVar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutVar-35-&quot;&gt;MutVar#&lt;/a&gt; d a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeMutVar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0319df3ca79ef0222fb3b0a9db9fb5615a6befa9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeMutVar-35-&quot;&gt;writeMutVar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutVar-35-&quot;&gt;MutVar#&lt;/a&gt; d a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeMutVar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeMutVar-35-&quot;&gt;writeMutVar #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutVar-35-&quot;&gt;MutVar #&lt;/a&gt; da -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeMutVar%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ca275104612417db7a306af725c28bd68e200fb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeMutableArrayArrayArray-35-&quot;&gt;writeMutableArrayArrayArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeMutableArrayArrayArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae615b8305a7bead7a4d05043acec673d9f265fe" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeMutableArrayArrayArray-35-&quot;&gt;writeMutableArrayArrayArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeMutableArrayArrayArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeMutableArrayArrayArray-35-&quot;&gt;writeMutableArrayArrayArray #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeMutableArrayArrayArray%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07904b8d1d24798623ffc8a2f9a511f3fbae518d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeMutableByteArrayArray-35-&quot;&gt;writeMutableByteArrayArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeMutableByteArrayArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6140a3b4a6500f2237e8801b092c17dab83fae8e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeMutableByteArrayArray-35-&quot;&gt;writeMutableByteArrayArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeMutableByteArrayArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeMutableByteArrayArray-35-&quot;&gt;writeMutableByteArrayArray #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableArrayArray-35-&quot;&gt;MutableArrayArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeMutableByteArrayArray%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="515743f55f61c2fcfd34e320d95da8fdb1881015" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeN&quot;&gt;writeN&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; (forall s. &lt;a href=&quot;data-text-array#t:MArray&quot;&gt;MArray&lt;/a&gt; s -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s ()) -&amp;gt; &lt;a href=&quot;data-text-internal-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Internal-Builder.html#writeN&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeN&quot;&gt;writeN&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; (para todos los s. &lt;a href=&quot;data-text-array#t:MArray&quot;&gt;MArray&lt;/a&gt; s -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s ()) -&amp;gt;&lt;a href=&quot;data-text-internal-builder#t:Builder&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Internal-Builder.html#writeN&quot;&gt; Fuente del &lt;/a&gt;constructor</target>
        </trans-unit>
        <trans-unit id="2fa87976b0f6cb12e99c7202a98a1b39560118f9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeN&quot;&gt;writeN&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; (forall s. &lt;a href=&quot;data-text-array#t:MArray&quot;&gt;MArray&lt;/a&gt; s -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s ()) -&amp;gt; &lt;a href=&quot;data-text-internal-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Internal-Builder.html#writeN&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b851dedcecff8db781889a9f2084f689c91112a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeNonBlocking&quot;&gt;writeNonBlocking&lt;/a&gt; :: a -&amp;gt; &lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-IO-Device.html#writeNonBlocking&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec6e73073c51240c53d5fc33ab7417c818f9285" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeNonBlocking&quot;&gt;writeNonBlocking&lt;/a&gt; :: a -&amp;gt; &lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-IO-Device.html#writeNonBlocking&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeNonBlocking&quot;&gt;writeNonBlocking&lt;/a&gt; :: a -&amp;gt; &lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr &lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO &lt;/a&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-IO-Device.html#writeNonBlocking&quot;&gt; Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68a74d53e08a342a3b12aa78c33db1f6510f51be" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writePipe&quot;&gt;writePipe&lt;/a&gt; :: &lt;a href=&quot;ghci-message#t:Pipe&quot;&gt;Pipe&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../binary-0.8.7.0/data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghci-8.8.3/src/GHCi-Message.html#writePipe&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writePipe&quot;&gt;writePipe&lt;/a&gt; :: &lt;a href=&quot;ghci-message#t:Pipe&quot;&gt;Pipe&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../binary-0.8.7.0/data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghci-8.8.3/src/GHCi-Message.html#writePipe&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f700de9c7543a62735c62d1dcb39417aafded336" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writePipe&quot;&gt;writePipe&lt;/a&gt; :: &lt;a href=&quot;ghci-message#t:Pipe&quot;&gt;Pipe&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../binary-0.8.8.0/data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghci-8.10.2/src/GHCi-Message.html#writePipe&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc229774d2cff15a91ef525c3d1dadf9854f4b3c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeRawBufferPtr&quot;&gt;writeRawBufferPtr&lt;/a&gt; :: &lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-io-fd#t:FD&quot;&gt;FD&lt;/a&gt; -&amp;gt; &lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;foreign-c-types#t:CSize&quot;&gt;CSize&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;a href=&quot;foreign-c-types#t:CInt&quot;&gt;CInt&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-IO-FD.html#writeRawBufferPtr&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f56d40732e13dccbabbd22f0bf9559fa2ea9ce6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeRawBufferPtr&quot;&gt;writeRawBufferPtr&lt;/a&gt; :: &lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-io-fd#t:FD&quot;&gt;FD&lt;/a&gt; -&amp;gt; &lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;foreign-c-types#t:CSize&quot;&gt;CSize&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;a href=&quot;foreign-c-types#t:CInt&quot;&gt;CInt&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-IO-FD.html#writeRawBufferPtr&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeRawBufferPtr&quot;&gt;writeRawBufferPtr&lt;/a&gt; :: &lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-io-fd#t:FD&quot;&gt;FD&lt;/a&gt; -&amp;gt; &lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr &lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;foreign-c-types#t:CSize&quot;&gt;CSize&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO &lt;/a&gt;&lt;a href=&quot;foreign-c-types#t:CInt&quot;&gt;CInt &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-IO-FD.html#writeRawBufferPtr&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c40ffebb1d5316cb351d4da3999136312e685686" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTArray&quot;&gt;writeSTArray&lt;/a&gt; :: &lt;a href=&quot;ghc-arr#t:Ix&quot;&gt;Ix&lt;/a&gt; i =&amp;gt; &lt;a href=&quot;ghc-arr#t:STArray&quot;&gt;STArray&lt;/a&gt; s i e -&amp;gt; i -&amp;gt; e -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Arr.html#writeSTArray&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b916f6785763f298876529548e1bac9cc31c10f1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTArray&quot;&gt;writeSTArray&lt;/a&gt; :: &lt;a href=&quot;ghc-arr#t:Ix&quot;&gt;Ix&lt;/a&gt; i =&amp;gt; &lt;a href=&quot;ghc-arr#t:STArray&quot;&gt;STArray&lt;/a&gt; s i e -&amp;gt; i -&amp;gt; e -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Arr.html#writeSTArray&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeSTArray&quot;&gt;writeSTArray&lt;/a&gt; :: &lt;a href=&quot;ghc-arr#t:Ix&quot;&gt;Ix&lt;/a&gt; i =&amp;gt; &lt;a href=&quot;ghc-arr#t:STArray&quot;&gt;STArray&lt;/a&gt; sie -&amp;gt; i -&amp;gt; e -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Arr.html#writeSTArray&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69f37a48f23ae98cb7d9f160e18c36364dd192f8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt; s a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-STRef.html#writeSTRef&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed745fa246c0b2278e95ee25a5e2566fff735bd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt; s a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-STRef.html#writeSTRef&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt; sa -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s ()&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-STRef.html#writeSTRef&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="909ee90feda8c8b56ea4fc559a3c587c5d833e4b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;data-stref-lazy#t:STRef&quot;&gt;STRef&lt;/a&gt; s a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-STRef-Lazy.html#writeSTRef&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199306aaa8e3a3ad2d96a45758a42fc97dabc646" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;data-stref-lazy#t:STRef&quot;&gt;STRef&lt;/a&gt; s a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-STRef-Lazy.html#writeSTRef&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;data-stref-lazy#t:STRef&quot;&gt;STRef&lt;/a&gt; sa -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt; s ()&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-STRef-Lazy.html#writeSTRef&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4dcb4e8522d996c88f7711c70e6b02e894a7e40e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt; s a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-STRef.html#writeSTRef&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df07d832c1a14170e4d98927ba3ec7cc6ca6d6f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt; s a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-STRef.html#writeSTRef&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeSTRef&quot;&gt;writeSTRef&lt;/a&gt; :: &lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt; sa -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt; s ()&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-STRef.html#writeSTRef&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24c80fcd171e6764be1eb44aabf933ae50413850" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSmallArray-35-&quot;&gt;writeSmallArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt; d a -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeSmallArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d89829f6e9abea9bbfb0b2286ece8577cbdfd8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeSmallArray-35-&quot;&gt;writeSmallArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt; d a -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeSmallArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeSmallArray-35-&quot;&gt;writeSmallArray #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray #&lt;/a&gt; da -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeSmallArray%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe6a9aeb4bddcec9db4c7cc4298bf2f895152ba0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeStablePtrArray-35-&quot;&gt;writeStablePtrArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeStablePtrArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6b5fb699a05b83c43f6f3f1ee99597619d6987" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeStablePtrArray-35-&quot;&gt;writeStablePtrArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeStablePtrArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeStablePtrArray-35-&quot;&gt;writeStablePtrArray #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr #&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeStablePtrArray%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2acccc76b0101e541e50dca044b4f9c2306e20ea" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeStablePtrOffAddr-35-&quot;&gt;writeStablePtrOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeStablePtrOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220bfe7c27da80c7b25f4b33d9508698d8a89dd8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeStablePtrOffAddr-35-&quot;&gt;writeStablePtrOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeStablePtrOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeStablePtrOffAddr-35-&quot;&gt;writeStablePtrOffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr #&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeStablePtrOffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb360704e288029dedcdc4e71869920382340052" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTBQueue&quot;&gt;writeTBQueue&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TBQueue.html#writeTBQueue&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abfd6dd3fd52e8712e98d8a8e4264dc6a198ae0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTBQueue&quot;&gt;writeTBQueue&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TBQueue.html#writeTBQueue&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTBQueue&quot;&gt;writeTBQueue&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; ()&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TBQueue.html#writeTBQueue&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f25c179b65309ff6a143f3f4e9535a7858ab3081" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTChan&quot;&gt;writeTChan&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TChan.html#writeTChan&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ee95fdde30f34c0b5391cb07fe5f02390df7bf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTChan&quot;&gt;writeTChan&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TChan.html#writeTChan&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTChan&quot;&gt;writeTChan&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; ()&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TChan.html#writeTChan&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78c089fa85d754ab5221b49d657690cbde8f699a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTQueue&quot;&gt;writeTQueue&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TQueue.html#writeTQueue&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f4cf31ac7bed9156a86daea58e00f8011b0dc5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTQueue&quot;&gt;writeTQueue&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TQueue.html#writeTQueue&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTQueue&quot;&gt;writeTQueue&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; ()&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/stm-2.5.0.0/src/Control-Concurrent-STM-TQueue.html#writeTQueue&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61548c9e3bb2f64e934906aa1dd457e9eddcd678" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fa8e0df0ce974421321d5c52bee43190b4b79c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="9240652e513b03d69e79229d3ff9925dd074389d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-conc#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886107d884d1cab920a149b2cf04d11c7fa7bcb2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-conc#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;ghc-conc#t:STM&quot;&gt;STM&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="c0d44d86e86cdf5488ee0daa7f6753b14ad73aa7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-conc-sync#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2462b80996fa443489f9770dd3d539629a8cf2e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-conc-sync#t:STM&quot;&gt;STM&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTVar&quot;&gt;writeTVar&lt;/a&gt; :: &lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt; a -&amp;gt; a -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#writeTVar&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;ghc-conc-sync#t:STM&quot;&gt;STM&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="f818a088ed00adf71e0ab3627d7555c6ed6de676" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar-35-&quot;&gt;writeTVar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:TVar-35-&quot;&gt;TVar#&lt;/a&gt; d a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeTVar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd4e68c63431c04a3688d693d03cdd02cd8d089" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTVar-35-&quot;&gt;writeTVar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:TVar-35-&quot;&gt;TVar#&lt;/a&gt; d a -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeTVar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTVar-35-&quot;&gt;writeTVar #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:TVar-35-&quot;&gt;TVar #&lt;/a&gt; da -&amp;gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeTVar%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6fbf04b665a14b2282fa84c2d95ad476d8831bc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTix&quot;&gt;writeTix&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;trace-hpc-tix#t:Tix&quot;&gt;Tix&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/hpc-0.6.0.3/src/Trace-Hpc-Tix.html#writeTix&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeTix&quot;&gt;writeTix&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;trace-hpc-tix#t:Tix&quot;&gt;Tix&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; ()&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/hpc-0.6.0.3/src/Trace-Hpc-Tix.html#writeTix&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0720447fcdd02964a46852865393fab24c7ce138" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeTix&quot;&gt;writeTix&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;trace-hpc-tix#t:Tix&quot;&gt;Tix&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/hpc-0.6.1.0/src/Trace-Hpc-Tix.html#writeTix&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca99241f1ace4615b0e6c1fe73d74f7b64c257c8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWideCharArray-35-&quot;&gt;writeWideCharArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWideCharArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0de231790248bba9b0d037ab62ec810a049af5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWideCharArray-35-&quot;&gt;writeWideCharArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWideCharArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWideCharArray-35-&quot;&gt;writeWideCharArray #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWideCharArray%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c69316c8a826b9dc0a6c82ba74e0798e4824585f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWideCharOffAddr-35-&quot;&gt;writeWideCharOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWideCharOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eba12202a12e497a5deb59f351d013900023806" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWideCharOffAddr-35-&quot;&gt;writeWideCharOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWideCharOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWideCharOffAddr-35-&quot;&gt;writeWideCharOffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWideCharOffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="287ad61babdc9f75543c7a5f27081bebb79c9cfb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16Array-35-&quot;&gt;writeWord16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e430fe374a6101d7e04699343b13bb88ce8a73b6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16Array-35-&quot;&gt;writeWord16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16Array-35-&quot;&gt;writeWord16Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d4b50235682b0ccb530ba24e4b961a10fa0144e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16ArrayAsWord16X16-35-&quot;&gt;writeWord16ArrayAsWord16X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16ArrayAsWord16X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b574887b4404732de64003746fa390ba10c625" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16ArrayAsWord16X16-35-&quot;&gt;writeWord16ArrayAsWord16X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16ArrayAsWord16X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16ArrayAsWord16X16-35-&quot;&gt;writeWord16ArrayAsWord16X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16ArrayAsWord16X16%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2567e78bcf102626a105ce4ca20a15bd34d7cd1a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16ArrayAsWord16X32-35-&quot;&gt;writeWord16ArrayAsWord16X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16ArrayAsWord16X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd850997ba05f248a9cb220479f2247243cba12" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16ArrayAsWord16X32-35-&quot;&gt;writeWord16ArrayAsWord16X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16ArrayAsWord16X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16ArrayAsWord16X32-35-&quot;&gt;writeWord16ArrayAsWord16X32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16ArrayAsWord16X32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1ca1214d185c1f0d28a1554d310b90808ddbc37" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16ArrayAsWord16X8-35-&quot;&gt;writeWord16ArrayAsWord16X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16ArrayAsWord16X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13019f885bb6f2af2951b0a9633383615edce01" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16ArrayAsWord16X8-35-&quot;&gt;writeWord16ArrayAsWord16X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16ArrayAsWord16X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16ArrayAsWord16X8-35-&quot;&gt;writeWord16ArrayAsWord16X8 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16ArrayAsWord16X8%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="261e411fb8542216c2a93d98956a1631c408680f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddr-35-&quot;&gt;writeWord16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bcb2b73f1ecceac74ea60f23013e3ebc65ba3b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddr-35-&quot;&gt;writeWord16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16OffAddr-35-&quot;&gt;writeWord16OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee3382ddc0a6bbc0facc5d93d4e240176ebfacc2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddrAsWord16X16-35-&quot;&gt;writeWord16OffAddrAsWord16X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16OffAddrAsWord16X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ba0faea1f57e0e3edbb95bc9f113a535901949" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddrAsWord16X16-35-&quot;&gt;writeWord16OffAddrAsWord16X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddrAsWord16X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16OffAddrAsWord16X16-35-&quot;&gt;writeWord16OffAddrAsWord16X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddrAsWord16X16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eeea2664ab2240bcc29a64349ce882b281a98cfd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddrAsWord16X32-35-&quot;&gt;writeWord16OffAddrAsWord16X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16OffAddrAsWord16X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c4e2236f964704473b0e7206537dee856dd8b9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddrAsWord16X32-35-&quot;&gt;writeWord16OffAddrAsWord16X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddrAsWord16X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16OffAddrAsWord16X32-35-&quot;&gt;writeWord16OffAddrAsWord16X32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddrAsWord16X32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8cd152d3e38426b08d54973c7a8ca2a844aa25d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddrAsWord16X8-35-&quot;&gt;writeWord16OffAddrAsWord16X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16OffAddrAsWord16X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48970b0ebf006aba0bc816de39eb2ad051dae51" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16OffAddrAsWord16X8-35-&quot;&gt;writeWord16OffAddrAsWord16X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddrAsWord16X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16OffAddrAsWord16X8-35-&quot;&gt;writeWord16OffAddrAsWord16X8 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16OffAddrAsWord16X8%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e738aa093e3ead8cbe283f3ecb3c8954a59e9927" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X16Array-35-&quot;&gt;writeWord16X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223d3747dbe66e025d1f9a449df87536baeeff49" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X16Array-35-&quot;&gt;writeWord16X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16X16Array-35-&quot;&gt;writeWord16X16Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X16Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24db8364a7d332a1eda0b28da86bdc564d48008a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X16OffAddr-35-&quot;&gt;writeWord16X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26e1ba3b03b28aad4cda43653d955df452d78da" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X16OffAddr-35-&quot;&gt;writeWord16X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16X16OffAddr-35-&quot;&gt;writeWord16X16OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X16-35-&quot;&gt;Word16X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X16OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3ce41c80c1e1961855592515f4453ce9cdd55f3" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X32Array-35-&quot;&gt;writeWord16X32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16X32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6bb01b34dcdf8852f2c300691acd5fcd1656ad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X32Array-35-&quot;&gt;writeWord16X32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16X32Array-35-&quot;&gt;writeWord16X32Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X32Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2404e0e4808819043ac7131b64ebc0e5e9742774" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X32OffAddr-35-&quot;&gt;writeWord16X32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16X32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87058f253fbac6c1499cf56a9831ba4b7ec57b8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X32OffAddr-35-&quot;&gt;writeWord16X32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16X32OffAddr-35-&quot;&gt;writeWord16X32OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X32-35-&quot;&gt;Word16X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X32OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b1b35c784cbb6d416ae7f2ffa062c27d04520f2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X8Array-35-&quot;&gt;writeWord16X8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16X8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072a86036fefe329ecc1562ed8c2c1e1ce4a26d4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X8Array-35-&quot;&gt;writeWord16X8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16X8Array-35-&quot;&gt;writeWord16X8Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X8Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2dbb0cf0906b454c647411b2714e91a14c21ce72" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X8OffAddr-35-&quot;&gt;writeWord16X8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord16X8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c37ef8d9275a17584bd8b1a584b152e8cddac5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord16X8OffAddr-35-&quot;&gt;writeWord16X8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord16X8OffAddr-35-&quot;&gt;writeWord16X8OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word16X8-35-&quot;&gt;Word16X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord16X8OffAddr%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b066940cdbc05a07380666fac201a9f9fb2ccac6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32Array-35-&quot;&gt;writeWord32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48dd8136300993f77f060f5e8edc607f823b6c4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32Array-35-&quot;&gt;writeWord32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32Array-35-&quot;&gt;writeWord32Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="318f5dba5720284c018b8e2c3c019842a7ee247f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32ArrayAsWord32X16-35-&quot;&gt;writeWord32ArrayAsWord32X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32ArrayAsWord32X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35c84615d696570e856a91a3cce88078aca78ee" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32ArrayAsWord32X16-35-&quot;&gt;writeWord32ArrayAsWord32X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32ArrayAsWord32X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32ArrayAsWord32X16-35-&quot;&gt;writeWord32ArrayAsWord32X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32ArrayAsWord32X16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53c1b4d9f8c48c74a398cb9387d16d526f7f268f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32ArrayAsWord32X4-35-&quot;&gt;writeWord32ArrayAsWord32X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32ArrayAsWord32X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1424f04ccb3854ae017171cbc0d7556518ecd0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32ArrayAsWord32X4-35-&quot;&gt;writeWord32ArrayAsWord32X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32ArrayAsWord32X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32ArrayAsWord32X4-35-&quot;&gt;writeWord32ArrayAsWord32X4 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32ArrayAsWord32X4%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="214ac099454b18cc5e9be435ca4568bb369fa19f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32ArrayAsWord32X8-35-&quot;&gt;writeWord32ArrayAsWord32X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32ArrayAsWord32X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5cf63f66390d577db8cdf82ece86d1a5119248" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32ArrayAsWord32X8-35-&quot;&gt;writeWord32ArrayAsWord32X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32ArrayAsWord32X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32ArrayAsWord32X8-35-&quot;&gt;writeWord32ArrayAsWord32X8 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32ArrayAsWord32X8%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="443c00fcecd65a223ecf474c0188c9e43fd85494" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddr-35-&quot;&gt;writeWord32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fc9b04e0c4b1614bc7c0376ba622c176a181d4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddr-35-&quot;&gt;writeWord32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32OffAddr-35-&quot;&gt;writeWord32OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4623ee25e82f0ea80041f1d229d0d0850307d8d6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddrAsWord32X16-35-&quot;&gt;writeWord32OffAddrAsWord32X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32OffAddrAsWord32X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a637496b6685925fc936b511b2930c726cdbceed" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddrAsWord32X16-35-&quot;&gt;writeWord32OffAddrAsWord32X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddrAsWord32X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32OffAddrAsWord32X16-35-&quot;&gt;writeWord32OffAddrAsWord32X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddrAsWord32X16%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="018131f360a8f8038acbe930b1a7a67b3ae312de" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddrAsWord32X4-35-&quot;&gt;writeWord32OffAddrAsWord32X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32OffAddrAsWord32X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2f7d6102b75684ccdc5a8b2665b60a4453044a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddrAsWord32X4-35-&quot;&gt;writeWord32OffAddrAsWord32X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddrAsWord32X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32OffAddrAsWord32X4-35-&quot;&gt;writeWord32OffAddrAsWord32X4 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddrAsWord32X4%23&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be19609a7d70659aecb59cb243ff6a881b76eeb2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddrAsWord32X8-35-&quot;&gt;writeWord32OffAddrAsWord32X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32OffAddrAsWord32X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c8733c468b6e753369a78542de18eca919daa8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32OffAddrAsWord32X8-35-&quot;&gt;writeWord32OffAddrAsWord32X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddrAsWord32X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32OffAddrAsWord32X8-35-&quot;&gt;writeWord32OffAddrAsWord32X8 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32OffAddrAsWord32X8%23&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="790f8a6a739f9a386f8c2ffa594a5497a9390635" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X16Array-35-&quot;&gt;writeWord32X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf547429c50501d24a932b3b14fc6be6a9d5679b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X16Array-35-&quot;&gt;writeWord32X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32X16Array-35-&quot;&gt;writeWord32X16Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X16Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cec77cd940b3009f064a9dd9d47825eb01d8b0ad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X16OffAddr-35-&quot;&gt;writeWord32X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5eb51984f37729329b8a24ac5eb643a78db006" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X16OffAddr-35-&quot;&gt;writeWord32X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32X16OffAddr-35-&quot;&gt;writeWord32X16OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X16-35-&quot;&gt;Word32X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X16OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aef9a765795371cf6f5f89d023bf9a9116bdae0f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X4Array-35-&quot;&gt;writeWord32X4Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32X4Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d99ccf5b2c9f9a1b14d2c9ae810a6157ae7194b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X4Array-35-&quot;&gt;writeWord32X4Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X4Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32X4Array-35-&quot;&gt;writeWord32X4Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X4Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="202a90529a6038d176efb9867e075b232c487e22" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X4OffAddr-35-&quot;&gt;writeWord32X4OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32X4OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f3675e44f120ff58294134cda141bdd374bdf1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X4OffAddr-35-&quot;&gt;writeWord32X4OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X4OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32X4OffAddr-35-&quot;&gt;writeWord32X4OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X4-35-&quot;&gt;Word32X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X4OffAddr%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5dd83669e648d0dedf616ef5932e79e45305adb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X8Array-35-&quot;&gt;writeWord32X8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32X8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a138042334588a6587af00dd03618d088ff5aac" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X8Array-35-&quot;&gt;writeWord32X8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32X8Array-35-&quot;&gt;writeWord32X8Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X8Array%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="004836b675e2b88e59db329cef4671851b3dff18" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X8OffAddr-35-&quot;&gt;writeWord32X8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord32X8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1d92991f832a7cc9aa12f96c0579a8a3aefb83" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord32X8OffAddr-35-&quot;&gt;writeWord32X8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord32X8OffAddr-35-&quot;&gt;writeWord32X8OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word32X8-35-&quot;&gt;Word32X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord32X8OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4f6dbe54b923e3a50108962a6b2b3d93292f5d6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64Array-35-&quot;&gt;writeWord64Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574723b30e74ceab74856ddc9b2131053a29bce0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64Array-35-&quot;&gt;writeWord64Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64Array-35-&quot;&gt;writeWord64Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64Array%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a5e6fe3f8c2fd49e749a1e8c466cf7ff3cc0540" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64ArrayAsWord64X2-35-&quot;&gt;writeWord64ArrayAsWord64X2#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64ArrayAsWord64X2%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe7b2d7bf5420beefc6b383bb78b032a8d2c015" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64ArrayAsWord64X2-35-&quot;&gt;writeWord64ArrayAsWord64X2#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64ArrayAsWord64X2%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64ArrayAsWord64X2-35-&quot;&gt;writeWord64ArrayAsWord64X2 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64ArrayAsWord64X2%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7128e2a1c772d000dae0f7138adf06976c59e393" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64ArrayAsWord64X4-35-&quot;&gt;writeWord64ArrayAsWord64X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64ArrayAsWord64X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903852042eb75eb8a08ca8f09644586a46f43c04" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64ArrayAsWord64X4-35-&quot;&gt;writeWord64ArrayAsWord64X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64ArrayAsWord64X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64ArrayAsWord64X4-35-&quot;&gt;writeWord64ArrayAsWord64X4 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64ArrayAsWord64X4%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2330ffbd5e6c80ec5d2595251e757ad4f4a8acf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64ArrayAsWord64X8-35-&quot;&gt;writeWord64ArrayAsWord64X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64ArrayAsWord64X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a1f57f50bc02c35cb7ee17378a772eae818d15" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64ArrayAsWord64X8-35-&quot;&gt;writeWord64ArrayAsWord64X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64ArrayAsWord64X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64ArrayAsWord64X8-35-&quot;&gt;writeWord64ArrayAsWord64X8 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64ArrayAsWord64X8%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4736fc094082710b09be939ede92ccd5bf460cd4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddr-35-&quot;&gt;writeWord64OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88b613206c594888fa158dd6b17fbcd54657b65" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddr-35-&quot;&gt;writeWord64OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64OffAddr-35-&quot;&gt;writeWord64OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9aac08f28668a1b51953916a293873806106eb33" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddrAsWord64X2-35-&quot;&gt;writeWord64OffAddrAsWord64X2#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64OffAddrAsWord64X2%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01009f420ccbab3f1d70ac0514a933db968b8f60" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddrAsWord64X2-35-&quot;&gt;writeWord64OffAddrAsWord64X2#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddrAsWord64X2%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64OffAddrAsWord64X2-35-&quot;&gt;writeWord64OffAddrAsWord64X2 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddrAsWord64X2%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5371369123bac53cc0a1780638f3224d4c0f42dc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddrAsWord64X4-35-&quot;&gt;writeWord64OffAddrAsWord64X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64OffAddrAsWord64X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7da4052b458d5c3d4a9a01e4fb1aa059a6ee49" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddrAsWord64X4-35-&quot;&gt;writeWord64OffAddrAsWord64X4#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddrAsWord64X4%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64OffAddrAsWord64X4-35-&quot;&gt;writeWord64OffAddrAsWord64X4 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddrAsWord64X4%23&quot;&gt; Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d00bc3a89c53e71a25a3672cba4f64ca906c66d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddrAsWord64X8-35-&quot;&gt;writeWord64OffAddrAsWord64X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64OffAddrAsWord64X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568bdc2733200a9ceb757492e8b6e335efceabac" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64OffAddrAsWord64X8-35-&quot;&gt;writeWord64OffAddrAsWord64X8#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddrAsWord64X8%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64OffAddrAsWord64X8-35-&quot;&gt;writeWord64OffAddrAsWord64X8 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64OffAddrAsWord64X8%23&quot;&gt; Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d797183b8a76da58bb56f95a1163af7cfc5844c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X2Array-35-&quot;&gt;writeWord64X2Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64X2Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac984fcc5e044c65c600148498be2f41bea9b98" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X2Array-35-&quot;&gt;writeWord64X2Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X2Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64X2Array-35-&quot;&gt;writeWord64X2Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X2Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf7f5bc9f4a64d6b713db6e4ae6699459f220dff" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X2OffAddr-35-&quot;&gt;writeWord64X2OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64X2OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a1ef5257c28f2769ebf5b39686fe320aa48923" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X2OffAddr-35-&quot;&gt;writeWord64X2OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X2OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64X2OffAddr-35-&quot;&gt;writeWord64X2OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X2-35-&quot;&gt;Word64X2 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X2OffAddr%23&quot;&gt; Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d36a9181a5b37a5fe4bce2f9c6a79995dd130558" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X4Array-35-&quot;&gt;writeWord64X4Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64X4Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6838dc7d1c350f477627afd0a409e03dad1d8685" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X4Array-35-&quot;&gt;writeWord64X4Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X4Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64X4Array-35-&quot;&gt;writeWord64X4Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X4Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed86b32c6fe282c94fafad552be7dd7b90e4574f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X4OffAddr-35-&quot;&gt;writeWord64X4OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64X4OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f056ee5b9d851e31447097fd2cdfa3a5deb35a41" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X4OffAddr-35-&quot;&gt;writeWord64X4OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X4OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64X4OffAddr-35-&quot;&gt;writeWord64X4OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X4-35-&quot;&gt;Word64X4 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X4OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23c7c0c9a79e940de7587075da5fe771a0a6ba0a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X8Array-35-&quot;&gt;writeWord64X8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64X8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2805d53cfa3cbcb7e7f6e41f318cb6e02488e4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X8Array-35-&quot;&gt;writeWord64X8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64X8Array-35-&quot;&gt;writeWord64X8Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X8Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e71e4760debf479285d6bde8dedcc1d3e4f05f1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X8OffAddr-35-&quot;&gt;writeWord64X8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord64X8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b45db08f902a61cb850ac2e0b8a9f8ecd483db" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord64X8OffAddr-35-&quot;&gt;writeWord64X8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord64X8OffAddr-35-&quot;&gt;writeWord64X8OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word64X8-35-&quot;&gt;Word64X8 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord64X8OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6de19d07122b19c272717fa0c4795cfd07f231eb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8Array-35-&quot;&gt;writeWord8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb50a0495db9233fbc17552012bd862f9530e38" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8Array-35-&quot;&gt;writeWord8Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8Array-35-&quot;&gt;writeWord8Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be1d9d37ebef7b1a903e9ec53aad77246876f53a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsAddr-35-&quot;&gt;writeWord8ArrayAsAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca10f44390174f9a9019429f8d5657cf0a76d093" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsAddr-35-&quot;&gt;writeWord8ArrayAsAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsAddr-35-&quot;&gt;writeWord8ArrayAsAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eba4c7323976772e2465d6dad7140dbe44a1339" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsChar-35-&quot;&gt;writeWord8ArrayAsChar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsChar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ee728a176c9108d8ceaff123b76c77c18099f2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsChar-35-&quot;&gt;writeWord8ArrayAsChar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsChar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsChar-35-&quot;&gt;writeWord8ArrayAsChar #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsChar%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0ed38819ac31348e558c4c1cdd8fb9960ab252d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsDouble-35-&quot;&gt;writeWord8ArrayAsDouble#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Double-35-&quot;&gt;Double#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsDouble%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682da510762e4930590a4bb6530348e5e14464ce" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsDouble-35-&quot;&gt;writeWord8ArrayAsDouble#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Double-35-&quot;&gt;Double#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsDouble%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsDouble-35-&quot;&gt;writeWord8ArrayAsDouble #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Double-35-&quot;&gt;Double #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsDouble%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c504b31a75a3f3fc45bfd94c98620dc2e16b1b7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsFloat-35-&quot;&gt;writeWord8ArrayAsFloat#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Float-35-&quot;&gt;Float#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsFloat%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c841d386fcf95902336c87b8d512b66d7fa9b4f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsFloat-35-&quot;&gt;writeWord8ArrayAsFloat#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Float-35-&quot;&gt;Float#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsFloat%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsFloat-35-&quot;&gt;writeWord8ArrayAsFloat #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Float-35-&quot;&gt;Float #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsFloat%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3edfc5ab50fbd3e0fbf4a16289ee7c5962c7b1c3" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt-35-&quot;&gt;writeWord8ArrayAsInt#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsInt%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830c070cae5261bda916faafd7970acdf18a4348" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt-35-&quot;&gt;writeWord8ArrayAsInt#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsInt-35-&quot;&gt;writeWord8ArrayAsInt #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c862e9f59521e31a430ad65471e343b47fbe86a6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt16-35-&quot;&gt;writeWord8ArrayAsInt16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsInt16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13bd25bf653bec1750a0e39ada99843b5457022" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt16-35-&quot;&gt;writeWord8ArrayAsInt16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsInt16-35-&quot;&gt;writeWord8ArrayAsInt16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4b50fb4f3e8fc96bf2f3d11ef79e7672792e192" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt32-35-&quot;&gt;writeWord8ArrayAsInt32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsInt32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750d2e865c958099c8e1a8b634e249eb17fc1f85" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt32-35-&quot;&gt;writeWord8ArrayAsInt32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsInt32-35-&quot;&gt;writeWord8ArrayAsInt32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1935045f7afc8d8b38bccd80156c62570227e85c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt64-35-&quot;&gt;writeWord8ArrayAsInt64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsInt64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214237fe60feb82682d5736f1095ec20584c9795" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsInt64-35-&quot;&gt;writeWord8ArrayAsInt64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsInt64-35-&quot;&gt;writeWord8ArrayAsInt64 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsInt64%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1da8264164855408a2d84e1ae0b047f0049a0d2a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsStablePtr-35-&quot;&gt;writeWord8ArrayAsStablePtr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsStablePtr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5528d81631b9d3a12cc8371a7c70f7bdfc42755" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsStablePtr-35-&quot;&gt;writeWord8ArrayAsStablePtr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr#&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsStablePtr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsStablePtr-35-&quot;&gt;writeWord8ArrayAsStablePtr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:StablePtr-35-&quot;&gt;StablePtr #&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsStablePtr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b80b28411515b03b45fc813b612281bb3f7a0c63" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWideChar-35-&quot;&gt;writeWord8ArrayAsWideChar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWideChar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd2bb4536f9dc6b8eb444fdf425af54213d4c46" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWideChar-35-&quot;&gt;writeWord8ArrayAsWideChar#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWideChar%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWideChar-35-&quot;&gt;writeWord8ArrayAsWideChar #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Char-35-&quot;&gt;Char #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWideChar%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f0301ed0926bf32664dd9ae0ae73e551570d00b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord-35-&quot;&gt;writeWord8ArrayAsWord#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWord%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa5acc1db78fb8681b045fa1891791e5979f1ee" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord-35-&quot;&gt;writeWord8ArrayAsWord#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWord-35-&quot;&gt;writeWord8ArrayAsWord #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc7ca8046e65ceda443d48643cdc304b5622fb95" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord16-35-&quot;&gt;writeWord8ArrayAsWord16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWord16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02244748e890810bcd63004769517b80f80fe3a0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord16-35-&quot;&gt;writeWord8ArrayAsWord16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWord16-35-&quot;&gt;writeWord8ArrayAsWord16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c78cb7e4c7c00a726852b96d193bc1387e0df7a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord32-35-&quot;&gt;writeWord8ArrayAsWord32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWord32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55b2fe898d97aa0a24ec828fe3d071abd2d2dc9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord32-35-&quot;&gt;writeWord8ArrayAsWord32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWord32-35-&quot;&gt;writeWord8ArrayAsWord32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1baa18aa04cf8273308638fe4e2ca764e32ce65" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord64-35-&quot;&gt;writeWord8ArrayAsWord64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWord64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bac75beafde93f2ed40ef0a9211659d0a778f39" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord64-35-&quot;&gt;writeWord8ArrayAsWord64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWord64-35-&quot;&gt;writeWord8ArrayAsWord64 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord64%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="821a99a8200134953c35d5e62e35bc3176f9f7c1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord8X16-35-&quot;&gt;writeWord8ArrayAsWord8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWord8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d65f71c8f9f2ad0602a9a7c78952861d3d9562" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord8X16-35-&quot;&gt;writeWord8ArrayAsWord8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWord8X16-35-&quot;&gt;writeWord8ArrayAsWord8X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord8X16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="527fc20ab0780f67abfc453c80d90eb4605c2911" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord8X32-35-&quot;&gt;writeWord8ArrayAsWord8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWord8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0a6eb995dedd68905b5157b683574b327a10b5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord8X32-35-&quot;&gt;writeWord8ArrayAsWord8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWord8X32-35-&quot;&gt;writeWord8ArrayAsWord8X32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord8X32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="416254e6376f2f6256f7e36a71834855f6a94ee8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord8X64-35-&quot;&gt;writeWord8ArrayAsWord8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8ArrayAsWord8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4161d41f3d85e5ed7e865a11a57a57c7c105e3b7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8ArrayAsWord8X64-35-&quot;&gt;writeWord8ArrayAsWord8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8ArrayAsWord8X64-35-&quot;&gt;writeWord8ArrayAsWord8X64 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8ArrayAsWord8X64%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fca616f2c99ae49b169370007758d3d95eb8f06" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8Buf&quot;&gt;writeWord8Buf&lt;/a&gt; :: &lt;a href=&quot;ghc-io-buffer#t:RawBuffer&quot;&gt;RawBuffer&lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-IO-Buffer.html#writeWord8Buf&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a869dc1ac25a1a851c553d1009f29bace631011f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8Buf&quot;&gt;writeWord8Buf&lt;/a&gt; :: &lt;a href=&quot;ghc-io-buffer#t:RawBuffer&quot;&gt;RawBuffer&lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-IO-Buffer.html#writeWord8Buf&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8Buf&quot;&gt;writeWord8Buf&lt;/a&gt; :: &lt;a href=&quot;ghc-io-buffer#t:RawBuffer&quot;&gt;RawBuffer &lt;/a&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-IO-Buffer.html#writeWord8Buf&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2885d6a2a631ad96c8f28f3c761031c3cc2e7c0e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddr-35-&quot;&gt;writeWord8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aee47f8b16679002b1d26f8befce7f805e856ec" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddr-35-&quot;&gt;writeWord8OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8OffAddr-35-&quot;&gt;writeWord8OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d817dd80e650704f224e9df82c7e21c433c0f1b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddrAsWord8X16-35-&quot;&gt;writeWord8OffAddrAsWord8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8OffAddrAsWord8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33eab05a19b21d81dcc584cc663a690d1a259de7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddrAsWord8X16-35-&quot;&gt;writeWord8OffAddrAsWord8X16#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddrAsWord8X16%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8OffAddrAsWord8X16-35-&quot;&gt;writeWord8OffAddrAsWord8X16 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddrAsWord8X16%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be86f0fb3b8c70a033c9a4a1a228d2eb1d398c75" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddrAsWord8X32-35-&quot;&gt;writeWord8OffAddrAsWord8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8OffAddrAsWord8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8984ecd2490a63293dc98f18ad16d63ef1d2c94" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddrAsWord8X32-35-&quot;&gt;writeWord8OffAddrAsWord8X32#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddrAsWord8X32%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8OffAddrAsWord8X32-35-&quot;&gt;writeWord8OffAddrAsWord8X32 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddrAsWord8X32%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b46070900c992dd2dfa1ec1ab977f102091eac41" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddrAsWord8X64-35-&quot;&gt;writeWord8OffAddrAsWord8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8OffAddrAsWord8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e583d0e1e2466e52c902caff0bb2d7613cdcf9d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8OffAddrAsWord8X64-35-&quot;&gt;writeWord8OffAddrAsWord8X64#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddrAsWord8X64%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8OffAddrAsWord8X64-35-&quot;&gt;writeWord8OffAddrAsWord8X64 #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8OffAddrAsWord8X64%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6fe467baac077d2106d7b28cb54a630d93a2d60a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X16Array-35-&quot;&gt;writeWord8X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5a42ec362716c86f760b1073a5bc9c59892269" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X16Array-35-&quot;&gt;writeWord8X16Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X16Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8X16Array-35-&quot;&gt;writeWord8X16Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X16Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fe6e68dd139ac260dcffd9a6a2d8931fd25c9e1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X16OffAddr-35-&quot;&gt;writeWord8X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370184e264d47c72b31c11267c20602e53720b86" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X16OffAddr-35-&quot;&gt;writeWord8X16OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X16OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8X16OffAddr-35-&quot;&gt;writeWord8X16OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X16-35-&quot;&gt;Word8X16 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X16OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8afdff815f3cee496178616292e809d4cd10d432" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X32Array-35-&quot;&gt;writeWord8X32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8X32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991d5208e27fff6afc1a47ad2e7faf2ebcdf82b8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X32Array-35-&quot;&gt;writeWord8X32Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X32Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8X32Array-35-&quot;&gt;writeWord8X32Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X32Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21a4b91e8423a111b348f0e7d22f5d88daf15305" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X32OffAddr-35-&quot;&gt;writeWord8X32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8X32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5238898269954db4190ff385e31f04dcab5432da" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X32OffAddr-35-&quot;&gt;writeWord8X32OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X32OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8X32OffAddr-35-&quot;&gt;writeWord8X32OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X32-35-&quot;&gt;Word8X32 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X32OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7d71b43ba23f97e5fc0e046e15282689bbfa1a2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X64Array-35-&quot;&gt;writeWord8X64Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8X64Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3acbe3b1393051bde81f309f7b5602a113fd475" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X64Array-35-&quot;&gt;writeWord8X64Array#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X64Array%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8X64Array-35-&quot;&gt;writeWord8X64Array #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X64Array%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c58fcfe0246f123bb387d55a49bd8a2c6cf0868d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X64OffAddr-35-&quot;&gt;writeWord8X64OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWord8X64OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2639f77e325d5bdb4d1a33d049f03c4f097b9c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWord8X64OffAddr-35-&quot;&gt;writeWord8X64OffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X64OffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWord8X64OffAddr-35-&quot;&gt;writeWord8X64OffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word8X64-35-&quot;&gt;Word8X64 #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWord8X64OffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6883c9d5a5c071181d7f97f756a4c3b2e1d63034" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWordArray-35-&quot;&gt;writeWordArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWordArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643b532c4fcb78e8af6c1440e0ed67a4969b91af" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWordArray-35-&quot;&gt;writeWordArray#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWordArray%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWordArray-35-&quot;&gt;writeWordArray #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:MutableByteArray-35-&quot;&gt;MutableByteArray #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWordArray%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="992ab70af77499fb6248a86ce6de0f4c4c28e0cf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWordOffAddr-35-&quot;&gt;writeWordOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#writeWordOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e02cf7d7e48c4d983790a568ad6af528dd4e80" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writeWordOffAddr-35-&quot;&gt;writeWordOffAddr#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWordOffAddr%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writeWordOffAddr-35-&quot;&gt;writeWordOffAddr #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Addr-35-&quot;&gt;Addr #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State #&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#writeWordOffAddr%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4023eb34eaf9f9a669ab0a2a6cd6adcf0235f93d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w, &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m) =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-CPS.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writer&quot;&gt;escritor&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w, &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m) =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-CPS.html#writer&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;control-monad-trans-rws-cps#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="7497e4f0a8ade5e21615a2de56cb9a6a0899d4e4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w, &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m) =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-cps#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-CPS.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writer&quot;&gt;escritor&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w, &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m) =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-cps#t:WriterT&quot;&gt;WriterT&lt;/a&gt; wma &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-CPS.html#writer&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54ae96db09dc17eeb2e5fabdba6604ac6bd44122" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w, &lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m) =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-CPS.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8597d8edba50d9ede7842c929395f6cc18e3b70" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w, &lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m) =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-cps#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-CPS.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fb847ee81761f170bdd82ab95d4870e9a534e1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: (a, w) -&amp;gt; m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/mtl-2.2.2/src/Control-Monad-Writer-Class.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3980bdcf6067231980767f8c9ac417810625673" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: (a, w) -&amp;gt; m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/mtl-2.2.2/src/Control-Monad-Writer-Class.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writer&quot;&gt;escritor&lt;/a&gt; :: (a, w) -&amp;gt; ma &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/mtl-2.2.2/src/Control-Monad-Writer-Class.html#writer&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86405eff16581249590d40926b394b6714a879b1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-Lazy.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writer&quot;&gt;escritor&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-Lazy.html#writer&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="99c956c0d7d4f41e4391d1e1bc0a962163aabf87" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-Strict.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writer&quot;&gt;escritor&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-Strict.html#writer&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;control-monad-trans-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="b7ac0cf9edbb3600ebad028eefda8e4f30ab49f1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-lazy#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-Lazy.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writer&quot;&gt;escritor&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-lazy#t:WriterT&quot;&gt;WriterT&lt;/a&gt; wma &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-Lazy.html#writer&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="637a1fb845cf438d9a01df1e09587b8c6196c3d7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-strict#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-Strict.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writer&quot;&gt;escritor&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-strict#t:WriterT&quot;&gt;WriterT&lt;/a&gt; wma &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-Strict.html#writer&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c4e63e91bbb27f468d2a03a4a55583b1823ff64" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-Lazy.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d161962d992b21a06f6e421ef07696041ac35242" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-RWS-Strict.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc4a015e93a173fecfa059d9520346f3106594a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-lazy#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-Lazy.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f673ee20db54cd9b24f3123bf8acb8e8e330945" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writer&quot;&gt;writer&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt; m =&amp;gt; (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-strict#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-Strict.html#writer&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d00496e7dd0f78e2acd9f27bee47e9bcae91e8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writerT&quot;&gt;writerT&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt; m, &lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w) =&amp;gt; m (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-cps#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-CPS.html#writerT&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writerT&quot;&gt;escritorT&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt; m, &lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w) =&amp;gt; m (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-cps#t:WriterT&quot;&gt;WriterT&lt;/a&gt; wma &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-CPS.html#writerT&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4a6846f475b9a63725a834f9d74f38993303fa5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writerT&quot;&gt;writerT&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt; m, &lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt; w) =&amp;gt; m (a, w) -&amp;gt; &lt;a href=&quot;control-monad-trans-writer-cps#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Writer-CPS.html#writerT&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a8f4a5c395735b79055d3bd06d215a73cd8f43" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writerToAccumT&quot;&gt;writerToAccumT&lt;/a&gt; :: &lt;a href=&quot;control-monad-trans-writer-lazy#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a -&amp;gt; &lt;a href=&quot;control-monad-trans-accum#t:AccumT&quot;&gt;AccumT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Accum.html#writerToAccumT&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad564832a8fba698680e75c1e0cfbb8f7ef95ee" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:writerToAccumT&quot;&gt;writerToAccumT&lt;/a&gt; :: &lt;a href=&quot;control-monad-trans-writer-lazy#t:WriterT&quot;&gt;WriterT&lt;/a&gt; w m a -&amp;gt; &lt;a href=&quot;control-monad-trans-accum#t:AccumT&quot;&gt;AccumT&lt;/a&gt; w m a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Accum.html#writerToAccumT&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:writerToAccumT&quot;&gt;writerToAccumT&lt;/a&gt; :: &lt;a href=&quot;control-monad-trans-writer-lazy#t:WriterT&quot;&gt;WriterT&lt;/a&gt; WMA -&amp;gt; &lt;a href=&quot;control-monad-trans-accum#t:AccumT&quot;&gt;AccumT&lt;/a&gt; WMA &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/transformers-0.5.6.2/src/Control-Monad-Trans-Accum.html#writerToAccumT&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1cf07d438308f6eb47ced15847de2d273f2d4f0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xBUTTON1&quot;&gt;xBUTTON1&lt;/a&gt; :: &lt;a href=&quot;system-win32-types#t:DWORD&quot;&gt;DWORD&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xBUTTON1&quot;&gt;xBUTTON1&lt;/a&gt; :: &lt;a href=&quot;system-win32-types#t:DWORD&quot;&gt;DWORD&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e8c1d2d7bb8b2d373f44a898e8abca69f48627f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xBUTTON2&quot;&gt;xBUTTON2&lt;/a&gt; :: &lt;a href=&quot;system-win32-types#t:DWORD&quot;&gt;DWORD&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xBUTTON2&quot;&gt;xBUTTON2&lt;/a&gt; :: &lt;a href=&quot;system-win32-types#t:DWORD&quot;&gt;DWORD&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e178bc05932ca7f1ca1f7b8d5cfa655cb9755b63" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-List-NonEmpty.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d9a9419640438dd6271199c2f2ed788d3001ce" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty &lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt; -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#xor&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa63398c3b54979dc8544a76b715f1aaf354995e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-Bits.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530e7c2a3ffaea651bb29a7c615a2e0c0f69be3f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#xor&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor&quot;&gt;xor&lt;/a&gt; :: a -&amp;gt; a -&amp;gt; a infixl 6 &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#xor&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a087f4974aa7f997f2e130b860393cd283bc9ec" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor-35-&quot;&gt;xor#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#xor%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09958da32ec3490b7236d950de78cd4d4a0c9b37" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xor-35-&quot;&gt;xor#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xor%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xor-35-&quot;&gt;xor #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Word-35-&quot;&gt;Word # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xor%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b837e43941936682a9501d2794e9f585cdbce5f7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#xorBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d28ad144684537da34ce00a9a26a20b5d9718a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorBigNat&quot;&gt;xorBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt; -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorBigNat&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7892841145f449a23a6be7b0331df9abacafcff" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#xorI%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be03d00f2c7d4fecb4474fa84cffa557d13a930" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xorI%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorI-35-&quot;&gt;xorI #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int #&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int # &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#xorI%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec4bc871288862a776d7c7380c1470b3d735ed0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#xorInteger&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44308adae0bb9a08e536f89f8fc8f4e901b66613" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorInteger&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorInteger&quot;&gt;xorInteger&lt;/a&gt; :: &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#xorInteger&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb43140c3a396bfb11886cdd13dcbb2efd1b535e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Natural.html#xorNatural&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f665cbd702e971d22995cdbc7f56cbe9f14840" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Natural.html#xorNatural&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:xorNatural&quot;&gt;xorNatural&lt;/a&gt; :: &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt; -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Natural.html#xorNatural&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;natural&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ac946fc11e81448083890a0d13208b0c6e557bbb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format &lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59f2d18ef9668d6f27a7ea587d9cd926660bd782" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearFormat&quot;&gt;yearFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ca2431488dafe54131e3c0f26fe61f01b4e879" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; ( &lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05c50211c0b4f42fe241ee76ffa59a056de214e0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearMonthFormat&quot;&gt;yearMonthFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearMonthFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9169c7ecd622a69d0c11e8f8f1d74f9cc58fe9a1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; ( &lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; ) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba44592263836ea221a321434f7da1911c737476" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yearWeekFormat&quot;&gt;yearWeekFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#yearWeekFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211634d802bfe570cc7c03c85aa4fb5c54e363bb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yellow&quot;&gt;yellow&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yellow&quot;&gt;amarillo&lt;/a&gt; :: &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;Fuente de &lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f7f6498551c3225efd9f732887ea56cd1deab5a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yellow&quot;&gt;yellow&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/xhtml-3000.2.2.1/src/Text-XHtml-Transitional-Attributes.html#yellow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed28929e20a3046934371a2d315064e30c5dce19" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield&quot;&gt;yield&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-Conc-Sync.html#yield&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e0ac2fb1e5985810cfc3f5b34c7083c03eb81a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield&quot;&gt;yield&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#yield&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield&quot;&gt;rendimiento&lt;/a&gt; :: &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-Conc-Sync.html#yield&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f759ec00fd646fdc9c8342344fcbcc7976bb9e4a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield-35-&quot;&gt;yield#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/src/GHC-Prim.html#yield%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501d92b02ea64a354e79ca08b3f9da12b4837653" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:yield-35-&quot;&gt;yield#&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#yield%23&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:yield-35-&quot;&gt;rendimiento #&lt;/a&gt; :: &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt; -&amp;gt; &lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State # &lt;/a&gt;&lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/src/GHC-Prim.html#yield%23&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caf96475f858db10f3c8dd7fb2f3d24121e7025a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zero&quot;&gt;zero&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;Mask&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntSet-Internal.html#zero&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zero&quot;&gt;zero&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;M&amp;aacute;scara&lt;/a&gt; -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntSet-Internal.html#zero&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ce2b6a4dc02730d90955d7da20ee90add79d463" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zero&quot;&gt;zero&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-intset-internal#t:Mask&quot;&gt;Mask&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntSet-Internal.html#zero&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49be5e9e557e7127ed64b31f15d61a3afcb9f17" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: a b c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Arrow.html#zeroArrow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef76fd5e38504514292db16e67dfb1692008f31" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: a b c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Arrow.html#zeroArrow&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt; :: abc &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Arrow.html#zeroArrow&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="953748e100e560e0f8f65f513a7cb361590ac9ad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/integer-gmp-1.0.3.0/src/GHC-Integer-Type.html#zeroBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fbdd96218760d3bc073237e9909863b7497cac" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#zeroBigNat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBigNat&quot;&gt;zeroBigNat&lt;/a&gt; :: &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/integer-gmp-1.0.2.0/src/GHC-Integer-Type.html#zeroBigNat&quot;&gt;Fuente &lt;/a&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="213eed434f12648a78b3380c2d1dc96433f8ebbd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-Bits.html#zeroBits&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6406ef40e2c0088f8db875857ba03d85118db0f9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#zeroBits&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroBits&quot;&gt;zeroBits&lt;/a&gt; :: una &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-Bits.html#zeroBits&quot;&gt;fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c487d1e7153cca8fa679931ef82e6e7b1bc71c9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;Doc&lt;/a&gt; una &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bb932a4c607552958745e985b5541c8efd72720" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt; una &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6342c7745cf6e35ef488e049188c611c57f02b9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c5aa6c4062caba1cf14a1fcfa38a23cdf6d85ac" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623d0cfd7fa763125acf718a9f70c58545e49af6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt; a &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-Annotated-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3004979ab860f1851836dc85047766179e5b2a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zeroWidthText&quot;&gt;zeroWidthText&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt; -&amp;gt; &lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/src/Text-PrettyPrint-HughesPJ.html#zeroWidthText&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5511633e771474aad35e1524315bdb2f83ccb6e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e84f709f7fcc91b94779e0032ad3633bc228e22b" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708ae2c2903012cd0f24aee5f7289c989bc6faad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45b5a3998c45d9d11f2f2e4cac2e19eccb227f4f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a207077d7941690b103485e15d017fd3734bb2e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be67374cc0f1b778e3d8cc7d3e5dcc2508ebe9d2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b920ec4529deb7fafe3f3b59760d552f96fd297" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="568cf57a6d495cf485360f86beed4caaa116fa9e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b043869eb8228f2f4d1119863c4c6585b44efc2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-List-NonEmpty.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b18db9ce077f4c4e1487acd9205e579725a5dbc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11d8bd1a076bb8d64ea36431dfcfccd3387b254e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52c294ea1f275fd590c4163b2a29ec6ccb41b56" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e80bc630c0b714918d774a62638e1b5f1722bc46" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bb394839322eda88803206637f9bb1fd012f7b3" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91794611ceef22153bd5fdf3e1501f93027f8c18" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; [( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; )] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21e91b0de07fcb57aedf870784452193bc995eb5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; [(&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Lazy.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf5268a4db81db57870b04a8dc99b43a75ddece" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e26aec0b3943e58a7c02110b2cbc1eaca75108" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip&quot;&gt;zip&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [(a, b)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c7d5f3e2328e04ec84f2e9738e2f601de27dc97" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5a68fa3364f79b0be37f6e8f9acfb343e5863e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip3&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5945aa3f1436f0135eb3967d4a9b233645f97e32" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6701660b38979bddaeb3562d2b783e61e1227ea5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip3&quot;&gt;zip3&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [(a, b, c)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zip3&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="def10cfbd580dded428f6b704c4db8720671ad10" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fa9f00724ef63cbeba0d94599eebd230790fdd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; (a, b, c, d) &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zip4&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8b15b57c796bcf894c4b7d3cde52115c84c9c82" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7d05f2df4a688dedbd5e0ea3291de1800feb68" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip4&quot;&gt;zip4&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [(a, b, c, d)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip4&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89c4968b849e53b3281e736f671cfb92e16988fa" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d402532575207f54ff8af0ca05a3f52c3445700" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip5&quot;&gt;zip5&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [(a, b, c, d, e)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip5&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71c51336d91ba93e469c17aafc15ccc612b01fd1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5e894d7fb64629ebae8d9681f972e88ba7af27" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip6&quot;&gt;zip6&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [(a, b, c, d, e, f)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip6&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2eeaba6414f0ee6d4ae821af77d9976da0983bdf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zip7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbf6554c1a2db6da3926e391ebfdd47ea6d4f0c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zip7&quot;&gt;zip7&lt;/a&gt; :: [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [(a, b, c, d, e, f, g)] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zip7&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5d52385d7ce26b586591cb53acb4546a8d0386e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; ) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text.html#zipWith&quot;&gt;Fuente de &lt;/a&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;texto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a78242416eaba8ae05cd42d8ae326230a1d931d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; ) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Texto&lt;/a&gt; -&amp;gt; &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Lazy.html#zipWith&quot;&gt;Fuente de &lt;/a&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;texto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88b739e2293e47f070e9a352e1fa624ce868eace" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3101f4bccdc47b0a11346e0fc140d29eb559480" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87cb31d73572cf41a44768b9fc97c74d87fc2351" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6297a0706669b17c6c28668a940b0d42793046be" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: ( &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f0edd30116a4ad2df298fbfe7ee1ec2d6d78fde" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a344ba98ef62fff79db139c62dae9178078cd16e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07bf27d2f265ed055f061e17df941a6f37651d1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207ff585647eca2f738717508d969fa99f9b39ee" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy-Char8.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb9fae62b380383d9c7b16023afa1af6c39e5ba" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ea2001fb93ea93816e8932fda11b85f2b6664c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt; -&amp;gt; a) -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt; -&amp;gt; [a] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/bytestring-0.10.10.0/src/Data-ByteString-Lazy.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c00555113bc00d5045882fee94182cac04be4a0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; b &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/text-1.2.3.2/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a63c96c9d0876ec0111dcd37f6b0f4250240910" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Stream&lt;/a&gt; b &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; a -&amp;gt; b) -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Flujo&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Flujo&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-text-internal-fusion-types#t:Stream&quot;&gt;Flujo&lt;/a&gt; b &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/text-1.2.4.0/src/Data-Text-Internal-Fusion-Common.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="846be51654db64b08713fec9f465433d47e17ab6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f573092cb1f8cc44544d5622a487f0ead74863e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-List-NonEmpty.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee3c3607ede332ec119328fed02c4989c9dacfa9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272f7bc4faaad76a11afadcb754e2a038cb92db1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="237ab6fa2e141c50bbcbd61b29b00bdb4b510991" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10fd60e64ec634cbacca9cee3b0840201a3c001" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith&quot;&gt;zipWith&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="832facc60ed4d3cdf71bba6a623f331cb7e7e109" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7dd38c6fc408d5202c6e6258a94d85d293efaa4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith3&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6299b0db57607ecfd17f053134b08f7a490c44ad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/GHC-List.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4671b9cd1b25703fd05ee7e8f2c0f6b8f9230e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith3&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith3&quot;&gt;zipWith3&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/GHC-List.html#zipWith3&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2009b1947bef8bf676d3a949aff04311f363b70a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb41775a5b1aab9c5be5e449ab513969d4b2af0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; b -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; c -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; d -&amp;gt; &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; e &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Sequence-Internal.html#zipWith4&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eddfc100b785f732433bf2ba1ca268b2a7c4d3e7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9749546d65289c93b5a36a0e989a6f54d3179bf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith4&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith4&quot;&gt;zipWith4&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith4&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="799c4501acb2d691b6532b0ba1b89e1fb70bb306" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2648f7c57c4dc7ee498ca9c1a17e393cd8d492cd" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith5&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith5&quot;&gt;zipWith5&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f ] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith5&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2ce1d1769d88f90cea6bb032c2cd3946935f828" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f25d935321b22c293df392a27d3bab15bf9ba2e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith6&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith6&quot;&gt;zipWith6&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] - &amp;gt; [f] -&amp;gt; [g] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith6&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c88bd13295e030f10747661950821f9b03e519a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g -&amp;gt; h) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Data-OldList.html#zipWith7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d85d09b3b770880160f48094e3cdb8014a5821" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g -&amp;gt; h) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith7&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWith7&quot;&gt;zipWith7&lt;/a&gt; :: (a -&amp;gt; b -&amp;gt; c -&amp;gt; d -&amp;gt; e -&amp;gt; f -&amp;gt; g -&amp;gt; h) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; [c] -&amp;gt; [d] -&amp;gt; [ e] -&amp;gt; [f] -&amp;gt; [g] -&amp;gt; [h] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Data-OldList.html#zipWith7&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45cd011ba5e40af5bc7d4f6cf0e8adc93fd33ce5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; fz) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6367a18a587b5296567b012d89a8084d64bc25c6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; fz) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b663baf593ed8fc8eb14c63b010f3701d8969c8a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Aplicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; fz) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62ba3473abf0bcee8936ece0035a8c41277f1d6e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Aplicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; fz) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="605e9b95bdcc985f0a6a8ab982581666e05660a9" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283dfe2b3c60aa8cb2c6b44c0a43b3d8e862438" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96e9d38819cf4bdaec82c80a2c5dbdc977947fa" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbb35c950ae3498733b35a04754a228e79817af" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithAMatched&quot;&gt;zipWithAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a571ecd5c9a1b7d84b4bdacca04035a754d4b376" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Monad.html#zipWithM&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bae0751e6f37a563846149c6b9276f28162496" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM&quot;&gt;zipWithM&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Aplicativo&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; mc) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m [c] &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9043f14cf971a78a4cadacdbdca448d7a2ff59cc" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/src/Control-Monad.html#zipWithM_&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee49b85f0da486fdf8b272d84814e3d707d04d1" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; m c) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM_&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt; :: &lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Aplicative&lt;/a&gt; m =&amp;gt; (a -&amp;gt; b -&amp;gt; mc) -&amp;gt; [a] -&amp;gt; [b] -&amp;gt; m () &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/src/Control-Monad.html#zipWithM_&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e662a85a54c5b56e9889ae956668eb6e41330e2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0782491da8bfd31194c5afd82f04a4e16f7401fb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84087c21efc94a65bc0f741c7ca88cf1955fc9f8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Aplicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6904aef8aa9c8ecdcc7da13016f9c8ef8a03255" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Aplicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="daca6f86d1d7e4cdc6233d44bd7b47b143715842" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f8b25b322797382cf591095c8884f0a55aafad" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aba907681cfc37eab02b82deecb9e54a7aa2e84" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd48539d5e5c517d43d1411dea2ec6052405fe2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMatched&quot;&gt;zipWithMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5a832d9f96d69342dd2f1872b7080baee39562" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2db93e06e5ffce876201dfc6b01b7310fd68aa84" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c121b1b1b3dabe45715b521eb37db745fcffc76d" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k -&amp;gt; x -&amp;gt; y -&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f9ae01c1de01cac9ecc06b694d6df85d4a9d1f8" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9347b1bca15ac74e38deee7ef2b13651db4655e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd033313e86a903aeaa21ad56f86b97049ee3fcf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f ( &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="589979246116b455206f98e0189c17b72e3fcc56" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68844fc0cf795832dce7a368d75d6ece69641d7" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; f (&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z)) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeAMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad7e877f9fc7746f8dbe50d37e2d80c7e5624b2" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b825b1a07683a73007c116b5295b432345652f7a" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; ( &lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69313d2a10d177b4f9c053932a4acc6459b42eec" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51c062a2276a23ab0cd1bb6c5d56b0471825414e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; fkxyz &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dc48dacd7f2d21d9da3d2a51e1abe0f9e83fecb" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab0eb69b880cd35f2ea155fcf04f75bcf8327e6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (&lt;a href=&quot;data-intset#t:Key&quot;&gt;Key&lt;/a&gt; -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-IntMap-Merge-Strict.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d120b22ac3bac18b6fa4694cb068fe701bdd5f6" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b23bc797c638bfcab4de115e20fffbf5fe45a81" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt; :: &lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt; f =&amp;gt; (k -&amp;gt; x -&amp;gt; y -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; z) -&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y z &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/src/Data-Map-Strict-Internal.html#zipWithMaybeMatched&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb2ee2f584603aff22b397a741b358d0ac7bfe5" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2215cc5453778484558384ec86164b81c91a78a0" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format&lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeFormat&quot;&gt;zonedTimeFormat&lt;/a&gt; :: &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format &lt;/a&gt;&lt;a href=&quot;data-time-calendar#t:Day&quot;&gt;Day&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format &lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:TimeOfDay&quot;&gt;TimeOfDay&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:FormatExtension&quot;&gt;FormatExtension&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-format-iso8601#t:Format&quot;&gt;Format &lt;/a&gt;&lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-Format-ISO8601.html#zonedTimeFormat&quot;&gt;Source&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13d512e20aae9c4812f5acb673f58235d937e31e" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeToLocalTime&quot;&gt;zonedTimeToLocalTime&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:LocalTime&quot;&gt;LocalTime&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeToLocalTime&quot;&gt;zonedTimeToLocalTime&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:LocalTime&quot;&gt;LocalTime&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="441d37fca8a8ce98d3be5b4c06cb74c588bebc23" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de16a669f7ad36bedd4e399752754c265abd374f" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime&lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;Source&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeToUTC&quot;&gt;zonedTimeToUTC&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:ZonedTime&quot;&gt;ZonedTime&lt;/a&gt; -&amp;gt; &lt;a href=&quot;data-time-clock#t:UTCTime&quot;&gt;UTCTime &lt;/a&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/time-1.9.3/src/Data-Time-LocalTime-Internal-ZonedTime.html#zonedTimeToUTC&quot;&gt;Fuente&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21d4997eedd8f0b71033ff48bad7cec6bbe1e3cf" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;v:zonedTimeZone&quot;&gt;zonedTimeZone&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:TimeZone&quot;&gt;TimeZone&lt;/a&gt;</source>
          <target state="translated">&lt;a id=&quot;v:zonedTimeZone&quot;&gt;zonedTimeZone&lt;/a&gt; :: &lt;a href=&quot;data-time-localtime#t:TimeZone&quot;&gt;Zona horaria&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc0d4cea834a65211a81bfdb69fff8431db91df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f81b781c836c003ebb556f9b01715a0acdf1dc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory&quot; &lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt; &quot;file.ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7239bed35dcad3b202b95946f3746a75c3d2cfb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-posix#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-posix#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="257ca4b2a577131e219860f0e5c770e531511db5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-windows#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file&quot; &lt;a href=&quot;system-filepath-windows#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="621cdb558274f32d6cbd17557367704635d50d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cbd519d9312d8f6b5dc75a3995c99ea35bd4cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;/directory/file.txt&quot; &lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt; &quot;ext&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e57b6872c74b46db6b10bc4c1b0ef7d3914906f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;foo&quot;#&lt;/code&gt; has type &lt;code&gt;Addr#&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;foo&quot;#&lt;/code&gt; tiene el tipo &lt;code&gt;Addr#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="856676e181361ec322dae4d81af6dc841f1c2f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#const&lt;/code&gt;, &lt;code&gt;#type&lt;/code&gt;, &lt;code&gt;#peek&lt;/code&gt;, &lt;code&gt;#poke&lt;/code&gt; and &lt;code&gt;#ptr&lt;/code&gt; are not hardwired into the &lt;code&gt;hsc2hs&lt;/code&gt;, but are defined in a C template that is included in the C program: &lt;code&gt;template-hsc.h&lt;/code&gt;. Custom constructs and templates can be used too. Any &lt;code&gt;#&lt;/code&gt;-construct with unknown key is expected to be handled by a C template.</source>
          <target state="translated">&lt;code&gt;#const&lt;/code&gt; , &lt;code&gt;#type&lt;/code&gt; , &lt;code&gt;#peek&lt;/code&gt; , &lt;code&gt;#poke&lt;/code&gt; y &lt;code&gt;#ptr&lt;/code&gt; no est&amp;aacute;n cableados en &lt;code&gt;hsc2hs&lt;/code&gt; , pero est&amp;aacute;n definidos en una plantilla C que se incluye en el programa C: &lt;code&gt;template-hsc.h&lt;/code&gt; . Tambi&amp;eacute;n se pueden utilizar construcciones y plantillas personalizadas. Se espera que cualquier &lt;code&gt;#&lt;/code&gt; -construct con clave desconocida sea manejado por una plantilla C.</target>
        </trans-unit>
        <trans-unit id="38a5a27fe5e5986b5be4375fd5ffcec0e9fde857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$PATH&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;$PATH&lt;/code&gt; M&amp;eacute;todos $ PATH</target>
        </trans-unit>
        <trans-unit id="ceccd8312926e942f7553a8a378b9ca2e0dda07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%%&lt;/code&gt; by &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%%&lt;/code&gt; por &lt;code&gt;%&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abd413f0c023a164031b30d0088207131c28306b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%@&lt;/code&gt; by the current time in 12-hour am/pm format.</source>
          <target state="translated">&lt;code&gt;%@&lt;/code&gt; por la hora actual en formato de 12 horas am / pm.</target>
        </trans-unit>
        <trans-unit id="bf47cb222527b86990578f0f5f52bdb46a672841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%A&lt;/code&gt; by the current time in 24-hour HH:MM format.</source>
          <target state="translated">&lt;code&gt;%A&lt;/code&gt; por la hora actual en formato HH: MM de 24 horas.</target>
        </trans-unit>
        <trans-unit id="c35bcd0d85a710ef344b9c19f34aad7f73d06260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%N&lt;/code&gt; by the compiler name.</source>
          <target state="translated">&lt;code&gt;%N&lt;/code&gt; por el nombre del compilador.</target>
        </trans-unit>
        <trans-unit id="0f85e3261202c8e6912c7dee227e74fd7a5c0876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%T&lt;/code&gt; by the current time in 12-hour HH:MM:SS format.</source>
          <target state="translated">&lt;code&gt;%T&lt;/code&gt; por la hora actual en formato de 12 horas HH: MM: SS.</target>
        </trans-unit>
        <trans-unit id="8d6c87a6796fb44031067e3649d31065460d966f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%V&lt;/code&gt; by the compiler version.</source>
          <target state="translated">&lt;code&gt;%V&lt;/code&gt; por la versi&amp;oacute;n del compilador.</target>
        </trans-unit>
        <trans-unit id="7a37fc3de58012ff6c4505ccbd21795fe31b7b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%a&lt;/code&gt; by the machine architecture.</source>
          <target state="translated">&lt;code&gt;%a&lt;/code&gt; por la arquitectura de la m&amp;aacute;quina.</target>
        </trans-unit>
        <trans-unit id="fc33730f3011ebab2d53e3970903c2ca0c043572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%b&lt;/code&gt;, &lt;code&gt;%h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;%b&lt;/code&gt; , &lt;code&gt;%h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="022ee09a64e64212afab66683488512860f6d31b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%call(cmd [args])&lt;/code&gt; by the result of calling &lt;code&gt;cmd args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%call(cmd [args])&lt;/code&gt; por el resultado de llamar a &lt;code&gt;cmd args&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="671a7c28d1c66ba8aa01d8ee26b0b9c92e057956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%d&lt;/code&gt; by the date in &amp;ldquo;Weekday Month Date&amp;rdquo; format (e.g., &amp;ldquo;Tue May 26&amp;rdquo;) .</source>
          <target state="translated">&lt;code&gt;%d&lt;/code&gt; por la fecha en formato &quot;D&amp;iacute;a de la semana Mes Fecha&quot; (por ejemplo, &quot;Martes 26 de mayo&quot;).</target>
        </trans-unit>
        <trans-unit id="976efb5d6e5b9d9b58598d4593737ec3b0968246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%l&lt;/code&gt; by the line number (as referenced in compiler messages) of the current prompt.</source>
          <target state="translated">&lt;code&gt;%l&lt;/code&gt; por el n&amp;uacute;mero de l&amp;iacute;nea (como se menciona en los mensajes del compilador) del indicador actual.</target>
        </trans-unit>
        <trans-unit id="6205ad59e1324eb9870f8b1295e5ddf9a5b43933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%o&lt;/code&gt; by the operating system.</source>
          <target state="translated">&lt;code&gt;%o&lt;/code&gt; por el sistema operativo.</target>
        </trans-unit>
        <trans-unit id="c9681d68aaa5e358047fe1836578f2a9108205e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%s&lt;/code&gt; by the names of the modules currently in scope.</source>
          <target state="translated">&lt;code&gt;%s&lt;/code&gt; por los nombres de los m&amp;oacute;dulos actualmente en el alcance.</target>
        </trans-unit>
        <trans-unit id="a5716728cebe618db173a2e0c2b4b552ea5a252e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%t&lt;/code&gt; by the current time in 24-hour HH:MM:SS format.</source>
          <target state="translated">&lt;code&gt;%t&lt;/code&gt; por la hora actual en formato HH: MM: SS de 24 horas.</target>
        </trans-unit>
        <trans-unit id="83ff0000a467aebdf0bc9047a3cbc7a80a8aed5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%u&lt;/code&gt; by the username of the current user.</source>
          <target state="translated">&lt;code&gt;%u&lt;/code&gt; por el nombre de usuario del usuario actual.</target>
        </trans-unit>
        <trans-unit id="fe36ac6e515e680e39f8850880b3de924c7bcdc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%w&lt;/code&gt; by the current working directory.</source>
          <target state="translated">&lt;code&gt;%w&lt;/code&gt; por el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="7019be002e4e33089137c486ac63163b0c2984d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;plusmn;hh:mm&lt;/code&gt; (ISO 8601:2004(E) sec. 4.2.5.1 extended format)</source>
          <target state="translated">&lt;code&gt;&amp;plusmn;hh:mm&lt;/code&gt; (ISO 8601: 2004 (E) sec. 4.2.5.1 formato extendido)</target>
        </trans-unit>
        <trans-unit id="970e824c7cbcc619163395d38d383c5a6d345516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;''T&lt;/code&gt; has type &lt;code&gt;Name&lt;/code&gt;, and names the type constructor &lt;code&gt;T&lt;/code&gt;. That is, &lt;code&gt;''&lt;/code&gt;⟨thing⟩ interprets ⟨thing⟩ in a type context.</source>
          <target state="translated">&lt;code&gt;''T&lt;/code&gt; tiene el tipo &lt;code&gt;Name&lt;/code&gt; y nombres del constructor de tipo &lt;code&gt;T&lt;/code&gt; . Es decir, &lt;code&gt;''&lt;/code&gt; ⟨thing⟩ interpreta ⟨thing⟩ en un contexto de tipo.</target>
        </trans-unit>
        <trans-unit id="33bedf4c8810363bab6dbc508687ee9561d27ab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'f&lt;/code&gt; has type &lt;code&gt;Name&lt;/code&gt;, and names the function &lt;code&gt;f&lt;/code&gt;. Similarly &lt;code&gt;'C&lt;/code&gt; has type &lt;code&gt;Name&lt;/code&gt; and names the data constructor &lt;code&gt;C&lt;/code&gt;. In general &lt;code&gt;'&lt;/code&gt;⟨thing⟩ interprets ⟨thing⟩ in an expression context.</source>
          <target state="translated">&lt;code&gt;'f&lt;/code&gt; tiene el tipo &lt;code&gt;Name&lt;/code&gt; y nombra la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; . Del mismo modo &lt;code&gt;'C&lt;/code&gt; tiene un tipo de &lt;code&gt;Name&lt;/code&gt; y los nombres del constructor de datos &lt;code&gt;C&lt;/code&gt; . En general, &lt;code&gt;'&lt;/code&gt; ⟨thing⟩ interpreta ⟨thing⟩ en un contexto de expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="89549fde881d28e2640d612da9d607d96e9efb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'x'#&lt;/code&gt; has type &lt;code&gt;Char#&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'x'#&lt;/code&gt; tiene el tipo &lt;code&gt;Char#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="864de06106fefc4413bf6023c3cff336bdd9149f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#_|#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#_|#)&lt;/code&gt; tiene &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (de un &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; total de 2)</target>
        </trans-unit>
        <trans-unit id="801e4d76be8f842a632ffa7f6e1fe862bc07a710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#_|#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#_|#)&lt;/code&gt; tiene &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 1 (de un &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; total de 2)</target>
        </trans-unit>
        <trans-unit id="6e3fa6ba2606046c17b3691a5433bf858972cf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#|_#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 2 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#|_#)&lt;/code&gt; tiene &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 2 (de un &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; total de 2)</target>
        </trans-unit>
        <trans-unit id="c581aaa03f50b5b66f819f3f0021af20ea8a1208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(#|_#)&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 2 (out of a total &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; of 2)</source>
          <target state="translated">&lt;code&gt;(#|_#)&lt;/code&gt; tiene &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumAlt&quot;&gt;SumAlt&lt;/a&gt;&lt;/code&gt; 2 (de un &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:SumArity&quot;&gt;SumArity&lt;/a&gt;&lt;/code&gt; total de 2)</target>
        </trans-unit>
        <trans-unit id="0bfb45b7fd456c8c285dc647ecdd1a861a468e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(a ~ Char)&lt;/code&gt; context was introduced in &lt;code&gt;4.9.0.0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(a ~ Char)&lt;/code&gt; contexto (a ~ Char) se introdujo en &lt;code&gt;4.9.0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="659dc7caae542df28b0f2a871e77ece5109e2916" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(exposed package)&lt;/code&gt;: Module is available for import.</source>
          <target state="translated">&lt;code&gt;(exposed package)&lt;/code&gt; : el m&amp;oacute;dulo est&amp;aacute; disponible para su importaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8158f65324ac416e5059dd2e9075851ab53611c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(hidden module)&lt;/code&gt;: Module is hidden, and thus will never be available for import.</source>
          <target state="translated">&lt;code&gt;(hidden module)&lt;/code&gt; : el m&amp;oacute;dulo est&amp;aacute; oculto y, por lo tanto, nunca estar&amp;aacute; disponible para su importaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="394381e0d5a1133198e183a87c8508ccf7287292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(hidden package)&lt;/code&gt;: This module is in someone&amp;rsquo;s exported-modules list, but that package is hidden.</source>
          <target state="translated">&lt;code&gt;(hidden package)&lt;/code&gt; : este m&amp;oacute;dulo est&amp;aacute; en la lista de m&amp;oacute;dulos exportados de alguien, pero ese paquete est&amp;aacute; oculto.</target>
        </trans-unit>
        <trans-unit id="2cc64b577c649c1f9e4b08b7500b0f9d4baf9df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(hidden reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt;: This module is available from a reexport of some set of hidden packages.</source>
          <target state="translated">&lt;code&gt;(hidden reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt; : Este m&amp;oacute;dulo est&amp;aacute; disponible a partir de una reexportaci&amp;oacute;n de alg&amp;uacute;n conjunto de paquetes ocultos.</target>
        </trans-unit>
        <trans-unit id="e70327110a6e1e371856c82f8fad9392222951a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(list p)&lt;/code&gt; parses a list of things parsed by &lt;code&gt;p&lt;/code&gt;, using the usual square-bracket syntax.</source>
          <target state="translated">&lt;code&gt;(list p)&lt;/code&gt; analiza una lista de cosas analizadas por &lt;code&gt;p&lt;/code&gt; , utilizando la sintaxis habitual de corchetes.</target>
        </trans-unit>
        <trans-unit id="335b9f1b3faadae17213e9806f00d209b47a9e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(package flag)&lt;/code&gt;: This module export comes from a package flag.</source>
          <target state="translated">&lt;code&gt;(package flag)&lt;/code&gt; : la exportaci&amp;oacute;n de este m&amp;oacute;dulo proviene de una bandera de paquete.</target>
        </trans-unit>
        <trans-unit id="752ebb0b815ec5530f7122a8bdc4e3e186eb97ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(paren p)&lt;/code&gt; parses &quot;(P0)&quot; where &lt;code&gt;p&lt;/code&gt; parses &quot;P0&quot; in precedence context zero</source>
          <target state="translated">&lt;code&gt;(paren p)&lt;/code&gt; analiza &quot;(P0)&quot; donde &lt;code&gt;p&lt;/code&gt; analiza &quot;P0&quot; en el contexto de precedencia cero</target>
        </trans-unit>
        <trans-unit id="26867d1fbabe82425f62a0dcb21532f59c9facd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(parens p)&lt;/code&gt; parses &quot;P&quot;, &quot;(P0)&quot;, &quot;((P0))&quot;, etc, where &lt;code&gt;p&lt;/code&gt; parses &quot;P&quot; in the current precedence context and parses &quot;P0&quot; in precedence context zero</source>
          <target state="translated">&lt;code&gt;(parens p)&lt;/code&gt; analiza &quot;P&quot;, &quot;(P0)&quot;, &quot;((P0))&quot;, etc., donde &lt;code&gt;p&lt;/code&gt; analiza &quot;P&quot; en el contexto de precedencia actual y analiza &quot;P0&quot; en el contexto de precedencia cero</target>
        </trans-unit>
        <trans-unit id="f1e3aa84183c2f145e953ae789a95b3baa73451b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(prec n p)&lt;/code&gt; checks whether the precedence context is less than or equal to &lt;code&gt;n&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;(prec n p)&lt;/code&gt; comprueba si el contexto de precedencia es menor o igual que &lt;code&gt;n&lt;/code&gt; , y</target>
        </trans-unit>
        <trans-unit id="bf2b254f96fb4e778c0f975122b4307344f4d4e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt;: This module is available from a reexport of some set of exposed packages.</source>
          <target state="translated">&lt;code&gt;(reexport by &amp;lt;PACKAGES&amp;gt;)&lt;/code&gt; : Este m&amp;oacute;dulo est&amp;aacute; disponible a partir de una reexportaci&amp;oacute;n de alg&amp;uacute;n conjunto de paquetes expuestos.</target>
        </trans-unit>
        <trans-unit id="3d5e3823b921d85d2e288289b95745b0d8899671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(unusable module)&lt;/code&gt;: Module is unavailable because the package is unusable.</source>
          <target state="translated">&lt;code&gt;(unusable module)&lt;/code&gt; : el m&amp;oacute;dulo no est&amp;aacute; disponible porque el paquete no se puede utilizar.</target>
        </trans-unit>
        <trans-unit id="6f0c90017d48e3760305f283406076fbe27907ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x * y) * z&lt;/code&gt; = &lt;code&gt;x * (y * z)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(x * y) * z&lt;/code&gt; = &lt;code&gt;x * (y * z)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60e83e1bf4a8497e11a38b722f66d89610b9c2d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x + y) + z&lt;/code&gt; = &lt;code&gt;x + (y + z)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(x + y) + z&lt;/code&gt; = &lt;code&gt;x + (y + z)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="164950c5c45fcb737d4f482bd1d0175fefa450ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt;, if &lt;code&gt;y&lt;/code&gt; non-empty.</source>
          <target state="translated">&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt; , si &lt;code&gt;y&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="d707cc51fd6baec9b7c558ca87d5e1e2c9d78326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt;, if &lt;code&gt;y&lt;/code&gt; non-empty.</source>
          <target state="translated">&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt; , si &lt;code&gt;y&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="e24c6293815aebf83bf879696e2707c094991fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt;, if &lt;code&gt;y&lt;/code&gt; non-empty.</source>
          <target state="translated">&lt;code&gt;(x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; y) &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z = x &lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt; (y &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z)&lt;/code&gt; , si &lt;code&gt;y&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="404a6b98653ac321e7493c0b2289cc9eae2515e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; es un elemento de &lt;code&gt;(&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bc76d81258c376540f72de20002d16d046ba520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; es un elemento de &lt;code&gt;(&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85b5ff8d8c8c608aaa3f5805f1f9bcae34663386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; es un elemento de &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df69295fdf9b4cef93e52f258e895ab73de162f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; es un elemento de &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ccdc5a92811d0cf377c1d076be89bf6541d1c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; is an element of &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;(x,&quot;&quot;)&lt;/code&gt; es un elemento de &lt;code&gt;(&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt; d (&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt; d x &quot;&quot;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25bd368e21487c6237c21a0e4a071a27f711f8fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt; (on its first argument)</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt; (en su primer argumento)</target>
        </trans-unit>
        <trans-unit id="56d2c032eec645ac2dba503d009a6475c46bf6cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt;: Pass an option or argument to GHC</source>
          <target state="translated">&lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; : pasa una opci&amp;oacute;n o argumento a GHC</target>
        </trans-unit>
        <trans-unit id="ae71c5a65194ce6c14a8950a13adbb2af6179488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--help&lt;/code&gt;: print usage information.</source>
          <target state="translated">&lt;code&gt;--help&lt;/code&gt; : imprimir informaci&amp;oacute;n de uso.</target>
        </trans-unit>
        <trans-unit id="6018c730291b540d67a6e769db3e74c314533bc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--version&lt;/code&gt;: print version information.</source>
          <target state="translated">&lt;code&gt;--version&lt;/code&gt; : imprime informaci&amp;oacute;n sobre la versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="887da299ca473585e8de7938e2b1443fdd9ee27c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-C&lt;/code&gt;, &lt;code&gt;-S&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-C&lt;/code&gt; , &lt;code&gt;-S&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2991edceded4960cbe7b74de011877718754954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Werror=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Werror=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="translated">&lt;code&gt;-Werror=compat&lt;/code&gt; tiene el mismo efecto que &lt;code&gt;-Werror=...&lt;/code&gt; para cada bandera de advertencia en el grupo de opciones &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="796a388001e70eb30a45a998cbd962e2337e4b42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Werror=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Werror=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e680d8646f716820161cd8fbd2a0c35aad18b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Wwarn=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Wwarn=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="translated">&lt;code&gt;-Wwarn=compat&lt;/code&gt; tiene el mismo efecto que &lt;code&gt;-Wwarn=...&lt;/code&gt; para cada indicador de advertencia en el grupo de opciones &lt;a href=&quot;#ghc-flag--Wcompat&quot;&gt; &lt;code&gt;-Wcompat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="685e71b4710d8f1332e30f87a65f29e0c556345f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-Wwarn=compat&lt;/code&gt; has the same effect as &lt;code&gt;-Wwarn=...&lt;/code&gt; for each warning flag in the &lt;a href=&quot;#ghc-flag--Wno-compat&quot;&gt;&lt;code&gt;-Wcompat&lt;/code&gt;&lt;/a&gt; option group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873d34ab24bb7f7c8276c6167225e0224400ae94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-XUnboxedSums&lt;/code&gt; enables new syntax for anonymous, unboxed sum types. The syntax for an unboxed sum type with N alternatives is</source>
          <target state="translated">&lt;code&gt;-XUnboxedSums&lt;/code&gt; habilita una nueva sintaxis para tipos de suma an&amp;oacute;nimos y sin caja. La sintaxis para un tipo de suma sin caja con N alternativas es</target>
        </trans-unit>
        <trans-unit id="b3f1c4411a51919b14a5370550711aa9f21aa82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-a&lt;/code&gt; &amp;mdash; disable all classes</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; - deshabilitar todas las clases</target>
        </trans-unit>
        <trans-unit id="41da22d097da2cdeebc42eb8ae57b63df60f93db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-dinitial-unique=0 -dunique-increment=1&lt;/code&gt; - current sequential &lt;code&gt;UniqSupply&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-dinitial-unique=0 -dunique-increment=1&lt;/code&gt; - &lt;code&gt;UniqSupply&lt;/code&gt; secuencial actual</target>
        </trans-unit>
        <trans-unit id="d184b462677e351315e61fdfff80e89f7615d8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-dinitial-unique=1 -dunique-increment=PRIME&lt;/code&gt; - where PRIME big enough to overflow often - nonsequential order</source>
          <target state="translated">&lt;code&gt;-dinitial-unique=1 -dunique-increment=PRIME&lt;/code&gt; - donde PRIME es lo suficientemente grande como para desbordarse a menudo - orden no secuencial</target>
        </trans-unit>
        <trans-unit id="6fa7ffa2ee1ff5e9d8700508a9285d23d02c48ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-dinitial-unique=16777215 -dunique-increment=-1&lt;/code&gt; - &lt;code&gt;UniqSupply&lt;/code&gt; that generates in decreasing order</source>
          <target state="translated">&lt;code&gt;-dinitial-unique=16777215 -dunique-increment=-1&lt;/code&gt; - &lt;code&gt;UniqSupply&lt;/code&gt; que genera en orden decreciente</target>
        </trans-unit>
        <trans-unit id="ae088993344d2708bc289cffcd7ddb551ae96b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f /path/to/ghc&lt;/code&gt;: tell runghc the path of GHC executable to use to run the program. By default runghc will search for GHC in the directories in the system search path.</source>
          <target state="translated">&lt;code&gt;-f /path/to/ghc&lt;/code&gt; : indica a runghc la ruta del ejecutable de GHC que se utilizar&amp;aacute; para ejecutar el programa. De forma predeterminada, runghc buscar&amp;aacute; GHC en los directorios de la ruta de b&amp;uacute;squeda del sistema.</target>
        </trans-unit>
        <trans-unit id="b3608b4dd63a246dcb5aeb39df75acccda99bfb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-fproc-alignment=64&lt;/code&gt; can be used to limit alignment impact on performance as each function will start at a cache line. However forcing larger alignments in general reduces performance.</source>
          <target state="translated">&lt;code&gt;-fproc-alignment=64&lt;/code&gt; se puede usar para limitar el impacto de la alineaci&amp;oacute;n en el rendimiento, ya que cada funci&amp;oacute;n comenzar&amp;aacute; en una l&amp;iacute;nea de cach&amp;eacute;. Sin embargo, forzar alineaciones m&amp;aacute;s grandes en general reduce el rendimiento.</target>
        </trans-unit>
        <trans-unit id="3a40868af783d8eaa49ec75aa5c58505aacad4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-fspecialise&lt;/code&gt; will be enabled as the &lt;code&gt;-fno-specialise&lt;/code&gt; is overriden by the &lt;code&gt;-O1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-fspecialise&lt;/code&gt; se habilitar&amp;aacute; ya que &lt;code&gt;-fno-specialise&lt;/code&gt; es &lt;code&gt;-O1&lt;/code&gt; por -O1 .</target>
        </trans-unit>
        <trans-unit id="f35ee646fea69003a7dba16f6a9ae639f1cb0536" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-fspecialise&lt;/code&gt; will not be enabled, since the &lt;code&gt;-fno-specialise&lt;/code&gt; overrides the &lt;code&gt;-fspecialise&lt;/code&gt; implied by &lt;code&gt;-O1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-fspecialise&lt;/code&gt; no estar&amp;aacute; habilitado, ya que &lt;code&gt;-fno-specialise&lt;/code&gt; anula el &lt;code&gt;-fspecialise&lt;/code&gt; impl&amp;iacute;cito en &lt;code&gt;-O1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3def9b94ec2df44d2f88d2b2be757755fc740c11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g0&lt;/code&gt;: no debug information produced</source>
          <target state="translated">&lt;code&gt;-g0&lt;/code&gt; : no se produce informaci&amp;oacute;n de depuraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="b2392fe7cec3729109380cf981f9f5afab3bb143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g1&lt;/code&gt;: produces stack unwinding records for top-level functions (sufficient for basic backtraces)</source>
          <target state="translated">&lt;code&gt;-g1&lt;/code&gt; : produce registros de desenrollado de pila para funciones de nivel superior (suficiente para trazas traseras b&amp;aacute;sicas)</target>
        </trans-unit>
        <trans-unit id="0dba26f5e419b8d0d4f35d19a145925c86e9bd21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g2&lt;/code&gt;: produces stack unwinding records for top-level functions as well as inner blocks (allowing more precise backtraces than with &lt;code&gt;-g1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;-g2&lt;/code&gt; : produce registros de desenrollado de pila para funciones de nivel superior, as&amp;iacute; como bloques internos (lo que permite &lt;code&gt;-g1&lt;/code&gt; atr&amp;aacute;s m&amp;aacute;s precisos que con -g1 ).</target>
        </trans-unit>
        <trans-unit id="553f83a331582237d9731f2b4acd0a7dcc720869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-g3&lt;/code&gt;: same as &lt;code&gt;-g2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-g3&lt;/code&gt; : igual que &lt;code&gt;-g2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a166323a1f5e3746821d5952f0cbe4bac7841638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m0&lt;/code&gt; requests the band limit to be removed. As many bands as necessary are produced. However no key is produced as it won&amp;rsquo;t fit! It is useful for displaying creation time profiles with many bands.</source>
          <target state="translated">&lt;code&gt;-m0&lt;/code&gt; solicita que se elimine el l&amp;iacute;mite de banda. Se producen tantas bandas como sea necesario. Sin embargo, no se produce ninguna llave, ya que no encaja. Es &amp;uacute;til para mostrar perfiles de tiempo de creaci&amp;oacute;n con muchas bandas.</target>
        </trans-unit>
        <trans-unit id="27806393938aedb693d140a511f9eb562b67aff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-package&lt;/code&gt; supports thinning and renaming described in &lt;a href=&quot;#package-thinning-and-renaming&quot;&gt;Thinning and renaming modules&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-package&lt;/code&gt; admite la reducci&amp;oacute;n y el cambio de nombre que se describen en &lt;a href=&quot;#package-thinning-and-renaming&quot;&gt;M&amp;oacute;dulos de&lt;/a&gt; reducci&amp;oacute;n y cambio de nombre .</target>
        </trans-unit>
        <trans-unit id="f5aa924a9e8e61f39f12258f36c6c5551cda9339" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-rtsopts&lt;/code&gt; does not affect RTS options passed via &lt;code&gt;-with-rtsopts&lt;/code&gt;; those are used regardless of &lt;code&gt;-rtsopts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-rtsopts&lt;/code&gt; no afecta las opciones RTS pasadas a trav&amp;eacute;s de &lt;code&gt;-with-rtsopts&lt;/code&gt; ; esos se utilizan independientemente de &lt;code&gt;-rtsopts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d1bc60acc06e846b80883c0f85653d7c7eb1fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-t0&lt;/code&gt; requests no trace elements to be removed from the profile, ensuring that all the data will be displayed.</source>
          <target state="translated">&lt;code&gt;-t0&lt;/code&gt; solicita que no se eliminen elementos traza del perfil, lo que garantiza que se mostrar&amp;aacute;n todos los datos.</target>
        </trans-unit>
        <trans-unit id="09fba409885738e7e3293b42e6afb15e8289d14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-⟨x⟩&lt;/code&gt; &amp;mdash; disable the given class of events, for any event class listed above</source>
          <target state="translated">&lt;code&gt;-⟨x⟩&lt;/code&gt; - deshabilita la clase de eventos dada, para cualquier clase de evento listada arriba</target>
        </trans-unit>
        <trans-unit id="8ff6e2628527b62d9cb31384ed6254560ed7c57c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.hc&lt;/code&gt; or &lt;code&gt;.c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.hc&lt;/code&gt; o &lt;code&gt;.c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1c90a4b1c34e89b2d2bf769a491e30893fcc364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.hc&lt;/code&gt;, &lt;code&gt;.s&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.hc&lt;/code&gt; , &lt;code&gt;.s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="139f7c87cf39cd65bb6ae840341d01159026231c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.hs&lt;/code&gt; (with &lt;code&gt;-cpp&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;.hs&lt;/code&gt; (con &lt;code&gt;-cpp&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6cbd732e56bdbdca06f5c3d625563ae3d82bc67a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0#&lt;/code&gt; if &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is definitely not a prime.</source>
          <target state="translated">&lt;code&gt;0#&lt;/code&gt; si &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; definitivamente no es primo.</target>
        </trans-unit>
        <trans-unit id="a27e7f460a2236ca1d17fd07c416f3588e359bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; which is represented as a 1-limb.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; que se representa como una rama.</target>
        </trans-unit>
        <trans-unit id="be119dd65be819cf327ae6004f71de654945f03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.01&lt;/code&gt; is the same as &lt;code&gt;1/256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.01&lt;/code&gt; es lo mismo que &lt;code&gt;1/256&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da0bf5fe83fb4819f0187ac5ee76e26fbabaff09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1&lt;/code&gt; is the same as &lt;code&gt;1/16&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1&lt;/code&gt; es lo mismo que &lt;code&gt;1/16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97e16b3020cce2dbad319b4314b56c5bf4227e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1p-4&lt;/code&gt; is the same as &lt;code&gt;1/256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1p-4&lt;/code&gt; es lo mismo que &lt;code&gt;1/256&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4bb9c8965e44869786553c787707843f79df510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1p12&lt;/code&gt; is the same as &lt;code&gt;256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1p12&lt;/code&gt; es lo mismo que &lt;code&gt;256&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2382fd4bbe0055b1cf5044a51cc388ccd2d5754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x0.1p4&lt;/code&gt; is the same as &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0x0.1p4&lt;/code&gt; es lo mismo que &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dae497c696d8d46d1345c86623f665eb1d9138c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0xF.FF&lt;/code&gt; is the same as &lt;code&gt;15 + 15/16 + 15/256&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;0xF.FF&lt;/code&gt; es lo mismo que &lt;code&gt;15 + 15/16 + 15/256&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="848a182a5e20d6bbd54472f2f27db9da3955f2f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1#&lt;/code&gt; if &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is a &lt;em&gt;probable prime&lt;/em&gt;, or</source>
          <target state="translated">&lt;code&gt;1#&lt;/code&gt; si &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; es un n&amp;uacute;mero &lt;em&gt;primo probable&lt;/em&gt; , o</target>
        </trans-unit>
        <trans-unit id="d737289d95acfd65f5c88c77f05bfeba4e331acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2#&lt;/code&gt; is returned if &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; is definitely prime,</source>
          <target state="translated">&lt;code&gt;2#&lt;/code&gt; se devuelve si &lt;code&gt;&lt;em&gt;n&lt;/em&gt;&lt;/code&gt; es definitivamente primo,</target>
        </trans-unit>
        <trans-unit id="37a4c5145d90d0657a413c45ab5cf410e055bff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3##&lt;/code&gt; has type &lt;code&gt;Word#&lt;/code&gt;. In general, any non-negative Haskell integer lexeme followed by &lt;code&gt;##&lt;/code&gt; is a &lt;code&gt;Word#&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;3##&lt;/code&gt; tiene el tipo &lt;code&gt;Word#&lt;/code&gt; . En general, cualquier lexema entero de Haskell no negativo seguido de &lt;code&gt;##&lt;/code&gt; es una &lt;code&gt;Word#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="809472264c9b3cda25f8db9c19de8c2f07bb6b48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3#&lt;/code&gt; has type &lt;code&gt;Int#&lt;/code&gt;. In general, any Haskell integer lexeme followed by a &lt;code&gt;#&lt;/code&gt; is an &lt;code&gt;Int#&lt;/code&gt; literal, e.g. &lt;code&gt;-0x3A#&lt;/code&gt; as well as &lt;code&gt;32#&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;3#&lt;/code&gt; tiene tipo &lt;code&gt;Int#&lt;/code&gt; . En general, cualquier lexema entero de Haskell seguido de &lt;code&gt;#&lt;/code&gt; es un literal &lt;code&gt;Int#&lt;/code&gt; , por ejemplo, &lt;code&gt;-0x3A#&lt;/code&gt; as&amp;iacute; como &lt;code&gt;32#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30cfbcf2108a8d771c78517dc7698860ab40b3d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3.2##&lt;/code&gt; has type &lt;code&gt;Double#&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;3.2##&lt;/code&gt; tiene tipo &lt;code&gt;Double#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eeddb35b5b1e9bb90f4ab5701abe8a12226e9d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3.2#&lt;/code&gt; has type &lt;code&gt;Float#&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;3.2#&lt;/code&gt; tiene el tipo &lt;code&gt;Float#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ea1bb6035a270af870f5f8f28c44b4270776188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned if the handle was already closed. Otherwise a PID is returned that remains valid as long as the handle is open. The operating system may reuse the PID as soon as the last handle to the process is closed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; se devuelve nada si la manija ya estaba cerrada. De lo contrario, se devuelve un PID que sigue siendo v&amp;aacute;lido mientras el mango est&amp;eacute; abierto. El sistema operativo puede reutilizar el PID tan pronto como se cierre el &amp;uacute;ltimo identificador del proceso.</target>
        </trans-unit>
        <trans-unit id="7bcd02571a583f11435895429cd46f8786dc3d8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; capabilities will work with software-based terminal types such as &lt;code&gt;xterm&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt;. However, you should use &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; if compatibility with older terminals is important. Additionally, the &lt;code&gt;visualBell&lt;/code&gt; capability which flashes the screen usually produces its effect with a padding directive, so it will only work with &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; capacidades de cadena funcionar&amp;aacute;n con tipos de terminales basados ​​en software como &lt;code&gt;xterm&lt;/code&gt; y &lt;code&gt;linux&lt;/code&gt; . Sin embargo, debe usar &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; si la compatibilidad con terminales m&amp;aacute;s antiguos es importante. Adem&amp;aacute;s, lacapacidad &lt;code&gt;visualBell&lt;/code&gt; que hace parpadear la pantalla generalmente produce su efecto con una directiva de relleno, por lo que solo funcionar&amp;aacute; con &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdddabeefeed501c7e06590b97c6284d6fd7a56c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s are often passed to functions that require them to be null-terminated. If the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; wasn't null terminated, neither will the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; be. It is the programmers responsibility to guarantee that the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; is indeed null terminated. If in doubt, use &lt;code&gt;useAsCString&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; menudo se pasan a funciones que requieren que terminen en nulo. Si el &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; originalno fue terminado en nulo, tampoco lo ser&amp;aacute; el &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; . Es responsabilidad de los programadores garantizar que &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; sea ​​de hecho terminado en nulo. En caso de duda, utilice &lt;code&gt;useAsCString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40bdb818f8a1ed05a96dffff49e80c5a3e4b8f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; deriving</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; deriva</target>
        </trans-unit>
        <trans-unit id="a177d0a03c43d8f4d7516be8ecc65b0dc95b82fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; if the handle is a pipe or socket, and the reading end is closed. (If this is a POSIX system, and the program has not asked to ignore SIGPIPE, then a SIGPIPE may be delivered instead, whose default action is to terminate the program).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; si el mango es una tuber&amp;iacute;a o un enchufe y el extremo de lectura est&amp;aacute; cerrado. (Si este es un sistema POSIX, y el programa no ha solicitado ignorar SIGPIPE, entonces se puede entregar un SIGPIPE en su lugar, cuya acci&amp;oacute;n predeterminada es terminar el programa).</target>
        </trans-unit>
        <trans-unit id="cbcdfda349c50f1a8d22fb86563c3232d3a85a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; proporcionados a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; no se cierran autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="2dc084cfdb3f129240bd4d4a087d065e23de9723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; proporcionados a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; no se cierran autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="001e53a137e59bebbe51172dbdef181fe8f6ce05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations in this package may throw any &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;. No other types of exceptions shall be thrown.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operaciones de IO en este paquete pueden &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; cualquier IOError . No se lanzar&amp;aacute;n otros tipos de excepciones.</target>
        </trans-unit>
        <trans-unit id="c6b36448e55a53b7e52e1c0058f1ad1ff3974bb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources (virtual memory, process file descriptors, physical disk space, etc.) are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Hay recursos insuficientes (memoria virtual, descriptores de archivos de proceso, espacio en disco f&amp;iacute;sico, etc.) disponibles para realizar la operaci&amp;oacute;n. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f2c71aab301bfa94557cd824b0a13f9ea89d66b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Hay recursos insuficientes disponibles para realizar la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="059d61b9d057c893c02f83b627b00c09ca8a79e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Hay recursos insuficientes disponibles para realizar la operaci&amp;oacute;n. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2712b8b8e00758dd16d811f3409320332b670a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Hay recursos insuficientes disponibles para realizar la operaci&amp;oacute;n. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f7e028b42c651c40b10c913ede3d8536eb7431f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the environment variable does not exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; si la variable de entorno no existe.</target>
        </trans-unit>
        <trans-unit id="77ecf14281653812e3375e729f35f38ffe7d1f3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; si el dispositivo est&amp;aacute; lleno;</target>
        </trans-unit>
        <trans-unit id="a95f95a2369ee402f6d985ce7278559f794192f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; si el dispositivo est&amp;aacute; lleno; o</target>
        </trans-unit>
        <trans-unit id="abe0127fb83d2a0444e9e620140fd6c7d7bd7685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; si se excede un l&amp;iacute;mite de recursos del sistema. No se especifica si los caracteres del b&amp;uacute;fer se descartan o se retienen en estas circunstancias.</target>
        </trans-unit>
        <trans-unit id="0c511dd6d9aec607ac4049f7f35e8036133da723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned if the handle was already closed. Otherwise a PID is returned that remains valid as long as the handle is open. The operating system may reuse the PID as soon as the last handle to the process is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535032173c349a258621664091c8723e768de6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; capabilities will work with software-based terminal types such as &lt;code&gt;xterm&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt;. However, you should use &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt; if compatibility with older terminals is important. Additionally, the &lt;code&gt;visualBell&lt;/code&gt; capability which flashes the screen usually produces its effect with a padding directive, so it will only work with &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:TermOutput&quot;&gt;TermOutput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d267e48dfdb3dff0f39c237d586bb819236521d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s are often passed to functions that require them to be null-terminated. If the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; wasn't null terminated, neither will the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; be. It is the programmers responsibility to guarantee that the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; is indeed null terminated. If in doubt, use &lt;code&gt;useAsCString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d37ef87eb89402069ac3a60a6b52ddfc0872ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;control-deepseq#t:NFData&quot;&gt;NFData&lt;/a&gt;&lt;/code&gt; deriving</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fdac6558adbe18e3bc87e8515a217662920f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-exception#v:ResourceVanished&quot;&gt;ResourceVanished&lt;/a&gt;&lt;/code&gt; if the handle is a pipe or socket, and the reading end is closed. (If this is a POSIX system, and the program has not asked to ignore SIGPIPE, then a SIGPIPE may be delivered instead, whose default action is to terminate the program).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb74bdff366fd8ebaa69c1e21b8e4e19b6baf47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386a8469006ef5fb151284805141652ac61bce50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s provided via &lt;code&gt;&lt;a href=&quot;system-process-internals#v:UseHandle&quot;&gt;UseHandle&lt;/a&gt;&lt;/code&gt; are not closed automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cce5e52381daea5e563356cd5a69665194f2f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations in this package may throw any &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;. No other types of exceptions shall be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efda23742927a5e40c89e5a7d4da5c88d154956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources (virtual memory, process file descriptors, physical disk space, etc.) are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7158ccd0c07e772ba56b392de636dcba3236c2b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2fadc1472b1de49ccad3721d32ba93cda8cb3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EDQUOT, ENOSPC, ENOMEM, EMLINK]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1024bd6ca7d98b416793ded2bbbc75e0ff0adee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; Insufficient resources are available to perform the operation. &lt;code&gt;[EMFILE, ENFILE]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db958fa17eaf189debfb45b2f1cbb3e797e9297b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the environment variable does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b071d102feddeab122caef2af3b7b0fc1dbba4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218c0a18dbb2f6736310f880bbcce9739829ed72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59db716d96b331c9ac1b0effe5390501d1d6b7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc722512e5c50c43da422a998bbd6af06647e5e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent#v:myThreadId&quot;&gt;myThreadId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent#v:myThreadId&quot;&gt;myThreadId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d9b83b369ab8138a70e9847f8a2c09d88b8bd23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b33fd99f4068833805c851d6303d9fe4f7e125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; genera laexcepci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; en el hilo dado (solo GHC).</target>
        </trans-unit>
        <trans-unit id="5da42b3fbc3fe76f4a04f453d0990af00d2c939e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; raises an arbitrary exception in the target thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; genera una excepci&amp;oacute;n arbitraria en el hilo de destino (solo GHC).</target>
        </trans-unit>
        <trans-unit id="388568801e446b218c934adcb9bdd96bef3cc42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; is an abstract type representing an unbounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; es un tipo abstracto que representa un canal FIFO ilimitado.</target>
        </trans-unit>
        <trans-unit id="878ae4949965ef2048b765910a175635a2f93b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; operations are always observed to take place in the order they are written in the program, regardless of the memory model of the underlying machine. This is in contrast to &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; operations which may appear out-of-order to another thread in some cases.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; se observa que las operaciones de MVar tienen lugar en el orden en que est&amp;aacute;n escritas en el programa, independientemente del modelo de memoria de la m&amp;aacute;quina subyacente. Esto contrasta con &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; operaciones IORef que pueden parecer desordenadas para otro hilo en algunos casos.</target>
        </trans-unit>
        <trans-unit id="9b2ff7bce8cfe6331fc24a8585be5429641daf47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;s offer more flexibility than &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;s, but less flexibility than &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt;. They are appropriate for building synchronization primitives and performing simple interthread communication; however they are very simple and susceptible to race conditions, deadlocks or uncaught exceptions. Do not use them if you need perform larger atomic operations such as reading from multiple variables: use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; ofrecen m&amp;aacute;s flexibilidad que los &lt;code&gt;&lt;a href=&quot;data-ioref#v:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; , pero menos flexibilidad que &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; . Son apropiados para construir primitivas de sincronizaci&amp;oacute;n y realizar comunicaciones simples entre hilos; sin embargo, son muy simples y susceptibles a condiciones de carrera, interbloqueos o excepciones no detectadas. No los use si necesita realizar operaciones at&amp;oacute;micas m&amp;aacute;s grandes, como leer de m&amp;uacute;ltiples variables: use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="aad1c295086f97746132c22aae6ec6f28cdfb3eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newEmptyMVar&quot;&gt;newEmptyMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newMVar&quot;&gt;newMVar&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newEmptyMVar&quot;&gt;newEmptyMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:newMVar&quot;&gt;newMVar&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ffe05a315c590497a031ba474560b9761c07f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes empty, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; es de activaci&amp;oacute;n &amp;uacute;nica. Es decir, si hay varios subprocesos bloqueados en &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; se vac&amp;iacute;a, solo se despertar&amp;aacute; un subproceso. El tiempo de ejecuci&amp;oacute;n garantiza que el subproceso despertado complete suoperaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d63ae75e5613b14d2e96bab37de58191a8ff213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; is multiple-wakeup, so when multiple readers are blocked on an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, all of them are woken up at the same time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; es de activaci&amp;oacute;n m&amp;uacute;ltiple, por lo que cuando se bloquean varios lectores en un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , todos se activan al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="eac7956a39f185e8aaaeb7dd4ed02cf9da670b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is definitely full, and conversely &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is definitely empty</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; est&amp;aacute; definitivamente lleno y, a la inversa, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; est&amp;aacute; definitivamente vac&amp;iacute;o</target>
        </trans-unit>
        <trans-unit id="47084a07ef5c8e6d7e48cbb5e35ddae0b5f1e0da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes full, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; es de activaci&amp;oacute;n &amp;uacute;nica. Es decir, si hay varios subprocesos bloqueados en &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; se llena, solo se activar&amp;aacute; un subproceso. El tiempo de ejecuci&amp;oacute;n garantiza que el subproceso despertado complete suoperaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20d02f989a568c67798d961cb4e1cc5319f17110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:isEmptyMVar&quot;&gt;isEmptyMVar&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:isEmptyMVar&quot;&gt;isEmptyMVar&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29ac2f42428da8f043e6d8784bbf55bd5dc64d28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt; is an exception-safe wrapper for operating on the contents of an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. This operation is exception-safe: it will replace the original contents of the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; if an exception is raised (see &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;). However, it is only atomic if there are no other producers for this &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt; es un contenedor seguro para excepciones para operar en el contenido de un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Esta operaci&amp;oacute;n es segura para excepciones: reemplazar&amp;aacute; el contenido original del &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; si se genera una excepci&amp;oacute;n (ver&lt;a href=&quot;control-exception&quot;&gt; Control.Exception&lt;/a&gt; ). Sin embargo, solo es at&amp;oacute;mico si no hay otros productores para este &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10470ea7eabb3f813e744d134773a1eb9fea0ac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#t:QSem&quot;&gt;QSem&lt;/a&gt;&lt;/code&gt; is a quantity semaphore in which the resource is acquired and released in units of one. It provides guaranteed FIFO ordering for satisfying blocked &lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#v:waitQSem&quot;&gt;waitQSem&lt;/a&gt;&lt;/code&gt; calls.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#t:QSem&quot;&gt;QSem&lt;/a&gt;&lt;/code&gt; es un sem&amp;aacute;foro de cantidad en el que el recurso se adquiere y se libera en unidades de uno. Proporciona pedidos FIFO garantizados para satisfacer lasllamadas &lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#v:waitQSem&quot;&gt;waitQSem&lt;/a&gt;&lt;/code&gt; bloqueadas.</target>
        </trans-unit>
        <trans-unit id="57adbd171a852b6408aa0ee391c135b85b64c1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#t:QSemN&quot;&gt;QSemN&lt;/a&gt;&lt;/code&gt; is a quantity semaphore in which the resource is acquired and released in units of one. It provides guaranteed FIFO ordering for satisfying blocked &lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#v:waitQSemN&quot;&gt;waitQSemN&lt;/a&gt;&lt;/code&gt; calls.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#t:QSemN&quot;&gt;QSemN&lt;/a&gt;&lt;/code&gt; es un sem&amp;aacute;foro de cantidad en el que el recurso se adquiere y se libera en unidades de uno. Proporciona pedidos FIFO garantizados para satisfacer lasllamadas &lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#v:waitQSemN&quot;&gt;waitQSemN&lt;/a&gt;&lt;/code&gt; bloqueadas.</target>
        </trans-unit>
        <trans-unit id="baa0a00c678205cd61458e38e6f5d08dde5e5cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is a bounded version of &lt;code&gt;TQueue&lt;/code&gt;. The queue has a maximum capacity set when it is created. If the queue already contains the maximum number of elements, then &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:writeTBQueue&quot;&gt;writeTBQueue&lt;/a&gt;&lt;/code&gt; blocks until an element is removed from the queue.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; es una versi&amp;oacute;n limitada de &lt;code&gt;TQueue&lt;/code&gt; . La cola tiene una capacidad m&amp;aacute;xima establecida cuando se crea. Si la cola ya contiene el n&amp;uacute;mero m&amp;aacute;ximo de elementos, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:writeTBQueue&quot;&gt;writeTBQueue&lt;/a&gt;&lt;/code&gt; bloques TBQueue hasta que se elimine un elemento de la cola.</target>
        </trans-unit>
        <trans-unit id="38cc2230cc233c39c3976b3a11f57add18f387ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is an abstract type representing a bounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; es un tipo abstracto que representa un canal FIFO limitado.</target>
        </trans-unit>
        <trans-unit id="67291e93091172577522c614a58cd27fa06f59b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; is an abstract type representing an unbounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; es un tipo abstracto que representa un canal FIFO ilimitado.</target>
        </trans-unit>
        <trans-unit id="a2ebc7038586cc31b699bdb96907420cd10eb337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is an abstract type representing an unbounded FIFO channel.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; es un tipo abstracto que representa un canal FIFO ilimitado.</target>
        </trans-unit>
        <trans-unit id="901bf595fcb1ccf460e62703c972d81d5bf0b70b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; is a transactional semaphore. It holds a certain number of units, and units may be acquired or released by &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:signalTSem&quot;&gt;signalTSem&lt;/a&gt;&lt;/code&gt; respectively. When the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; is empty, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; es un sem&amp;aacute;foro transaccional. Tiene un cierto n&amp;uacute;mero de unidades, y las unidades pueden ser adquiridas o liberadas por &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:signalTSem&quot;&gt;signalTSem&lt;/a&gt;&lt;/code&gt; respectivamente. Cuando el &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; se bloquea.</target>
        </trans-unit>
        <trans-unit id="b0ee04a12bf673b21f99b32245e1ddc093e477d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt;: transactional semaphores.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; : sem&amp;aacute;foros transaccionales.</target>
        </trans-unit>
        <trans-unit id="a9dd4ac92b4520177d7bdf60b6439642ef19e816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; can be useful for forcing pending exceptions, eradicating space leaks, or forcing lazy I/O to happen. It is also useful in conjunction with parallel Strategies (see the &lt;code&gt;parallel&lt;/code&gt; package).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; puede ser &amp;uacute;til para forzar excepciones pendientes, erradicar fugas de espacio o forzar que sucedan E / S perezosas. Tambi&amp;eacute;n es &amp;uacute;til junto con estrategias paralelas (ver elpaquete &lt;code&gt;parallel&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="89f6a6fa7f01287ab72ba6df125445f2130f9384" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; as it traverses data structures deeply, for example, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; will evaluate only to the first constructor in the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; difiere de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; ya que atraviesa estructuras de datos en profundidad, por ejemplo, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; evaluar&amp;aacute; solo al primer constructor de la lista:</target>
        </trans-unit>
        <trans-unit id="5e7083c2d06cb2476baa53a418a822fb187866c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; differs from &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; as it traverses data structures deeply, for example, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:seq&quot;&gt;seq&lt;/a&gt;&lt;/code&gt; will evaluate only to the first constructor in the list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01bfa7769768e8ae2414adac41603b61441b16d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt;: fully evaluates the first argument, before returning the second.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; : eval&amp;uacute;a completamente el primer argumento, antes de devolver el segundo.</target>
        </trans-unit>
        <trans-unit id="21ed2aeeb05386f8b706260b2ead022cf48add36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; can be conveniently used in combination with &lt;code&gt;ViewPatterns&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; se puede usar convenientemente en combinaci&amp;oacute;n con &lt;code&gt;ViewPatterns&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd36ff59c3f224ee6b0fb6af97f9306f24317a01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt; should reduce its argument to normal form (that is, fully evaluate all sub-components), given an argument to reduce &lt;code&gt;a&lt;/code&gt; arguments, and then return &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt; deber&amp;iacute;a reducir su argumento a la forma normal (es decir, evaluar completamente todos los sub-componentes), dado un argumento para reducir &lt;code&gt;a&lt;/code&gt; argumentos, y luego regresar &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7778955e3a371a445a0d4d619f79c035bb646ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt; should reduce its argument to normal form (that is, fully evaluate all sub-components), given functions to reduce &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; arguments respectively, and then return &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt; deber&amp;iacute;a reducir su argumento a la forma normal (es decir, evaluar completamente todos los sub-componentes), funciones para reducir dado &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; argumentos respectivamente, y luego regresar &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1851b7c206dc58e7fa9bdb0f1d57dc2ce6fb69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; should reduce its argument to normal form (that is, fully evaluate all sub-components), and then return &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; deber&amp;iacute;a reducir su argumento a la forma normal (es decir, evaluar completamente todos los subcomponentes) y luego devolver &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e273564c08276dd93dae6e6fc1a746349b6fb0ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; was applied to &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; se aplic&amp;oacute; a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f7d960f0b7e377a693c2a0764e491d6c5dc3e55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; is typically used to uncover any exceptions that a lazy value may contain, and possibly handle them.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; se usa normalmente para descubrir cualquier excepci&amp;oacute;n que pueda contener un valor diferido y posiblemente manejarlas.</target>
        </trans-unit>
        <trans-unit id="a942c5f91b693489833ef7af82dddcc380cadd98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; only evaluates to &lt;em&gt;weak head normal form&lt;/em&gt;. If deeper evaluation is needed, the &lt;code&gt;force&lt;/code&gt; function from &lt;code&gt;Control.DeepSeq&lt;/code&gt; may be handy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; solo eval&amp;uacute;a&lt;em&gt; la forma normal de la cabeza d&amp;eacute;bil&lt;/em&gt; . Si se necesita una evaluaci&amp;oacute;n m&amp;aacute;s profunda, lafunci&amp;oacute;n de &lt;code&gt;force&lt;/code&gt; de &lt;code&gt;Control.DeepSeq&lt;/code&gt; puede ser &amp;uacute;til:</target>
        </trans-unit>
        <trans-unit id="91598790705a8b57d659b0f739546c591a2925cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; (also &lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt;) allows one running thread to raise an arbitrary exception in another thread. The exception is therefore asynchronous with respect to the target thread, which could be doing anything at the time it receives the exception. Great care should be taken with asynchronous exceptions; it is all too easy to introduce race conditions by the over zealous use of &lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; (tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; ) permite que un hilo en ejecuci&amp;oacute;n genere una excepci&amp;oacute;n arbitraria en otro hilo. Por lo tanto, la excepci&amp;oacute;n es asincr&amp;oacute;nica con respecto al hilo de destino, que podr&amp;iacute;a estar haciendo cualquier cosa en el momento en que recibe la excepci&amp;oacute;n. Se debe tener mucho cuidado con las excepciones asincr&amp;oacute;nicas; Es muy f&amp;aacute;cil introducir condiciones de carrera mediante el uso &lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; de throwTo .</target>
        </trans-unit>
        <trans-unit id="199cfc43612e997ee088e3a05147f6949ed7d81f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; raises an arbitrary exception in the target thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; genera una excepci&amp;oacute;n arbitraria en el hilo de destino (solo GHC).</target>
        </trans-unit>
        <trans-unit id="5723df6e950c4f3e0a095cfc262e74bd1b622939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; con sus argumentos invertidos. Para obtener una versi&amp;oacute;n que ignora los resultados, consulte para &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14f41773a9b47e35d892b2f7a359716ee922ce45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; con sus argumentos invertidos. Para una versi&amp;oacute;n que no ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1701e4861dac86aeba88361e1a63c3caec780315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) ma = &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) mb&lt;/code&gt; implies &lt;code&gt;&lt;a href=&quot;control-monad-zip#v:munzip&quot;&gt;munzip&lt;/a&gt; (&lt;a href=&quot;control-monad-zip#v:mzip&quot;&gt;mzip&lt;/a&gt; ma mb) = (ma, mb)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) ma = &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; (&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt; ()) mb&lt;/code&gt; implica &lt;code&gt;&lt;a href=&quot;control-monad-zip#v:munzip&quot;&gt;munzip&lt;/a&gt; (&lt;a href=&quot;control-monad-zip#v:mzip&quot;&gt;mzip&lt;/a&gt; ma mb) = (ma, mb)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71485ff9fdd1a3f1053ea420349d8626d25d83d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt; n act&lt;/code&gt; performs the action &lt;code&gt;n&lt;/code&gt; times, gathering the results.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt; n act&lt;/code&gt; realiza la acci&amp;oacute;n &lt;code&gt;n&lt;/code&gt; veces, recogiendo los resultados.</target>
        </trans-unit>
        <trans-unit id="4a3b6482b2c00888a6305ad232a10fdd4f0ec1f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; discards or ignores the result of evaluation, such as the return value of an &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; descarta o ignora el resultado de la evaluaci&amp;oacute;n, como el valor de retorno de unaacci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36f8c53f58996e42fa4f5a33183783bad078e505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt;&lt;/code&gt; is the extension of &lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM&quot;&gt;zipWithM&lt;/a&gt;&lt;/code&gt; which ignores the final result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM_&quot;&gt;zipWithM_&lt;/a&gt;&lt;/code&gt; es la extensi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM&quot;&gt;zipWithM&lt;/a&gt;&lt;/code&gt; que ignora el resultado final.</target>
        </trans-unit>
        <trans-unit id="698766063baddfd4fac5dd9290cec119cd4cc7ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; can be used to add continuation handling to other monads. Here is an example how to combine it with &lt;code&gt;IO&lt;/code&gt; monad:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; se puede usar para agregar manejo de continuaci&amp;oacute;n a otras m&amp;oacute;nadas. Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;mo combinarlo con lam&amp;oacute;nada &lt;code&gt;IO&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5a7824b0269c1c76e672c6e52873f1f7ffd5ea35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; is not a functor on the category of monads, and many operations cannot be lifted through it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; no es un funtor de la categor&amp;iacute;a de m&amp;oacute;nadas y muchas operaciones no pueden eliminarse a trav&amp;eacute;s de &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="0f2455f1692d24276b4b43b81fa30b2e9ca22ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt;&lt;/code&gt; monad transformer can be used to add error handling to another monad. Here is an example how to combine it with an &lt;code&gt;IO&lt;/code&gt; monad:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt;&lt;/code&gt; transformador de m&amp;oacute;nada ErrorT se puede usar para agregar manejo de errores a otra m&amp;oacute;nada. Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;mo combinarlo con unam&amp;oacute;nada &lt;code&gt;IO&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ed4b8f5d73dc64f3e094f053d41d8ae6056ad90f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; monad transformer can be used to add error handling to another monad. Here is an example how to combine it with an &lt;code&gt;IO&lt;/code&gt; monad:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; se puede usar un transformador de m&amp;oacute;nada para agregar manejo de errores a otra m&amp;oacute;nada. Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;mo combinarlo con unam&amp;oacute;nada &lt;code&gt;IO&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8761e4cd3cd69368b5d04ea058b2b04ad9fb0890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; is the least fixed point of the function &lt;code&gt;f&lt;/code&gt;, i.e. the least defined &lt;code&gt;x&lt;/code&gt; such that &lt;code&gt;f x = x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; es el punto m&amp;iacute;nimo fijo de la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; , es decir, el menos definido &lt;code&gt;x&lt;/code&gt; tal que &lt;code&gt;f x = x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45b283148f01ec708ddadc08ea2d9b6a13bf7e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h . f)  =  &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h (&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (f . h))&lt;/code&gt;, for strict &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (&lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h . f) = &lt;a href=&quot;control-monad#v:liftM&quot;&gt;liftM&lt;/a&gt; h (&lt;a href=&quot;control-monad-fix#v:mfix&quot;&gt;mfix&lt;/a&gt; (f . h))&lt;/code&gt; , para &lt;code&gt;h&lt;/code&gt; estricta.</target>
        </trans-unit>
        <trans-unit id="3e1ffd60008f8758bfd3cb40c03ea595d2233265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;(,) a&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt; a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instancias para &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instancias para &lt;code&gt;(,) a&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt; a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60fafee8474dd6876b3bada419e2b9263c3418d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09f8e2fd068f53ee10167decd1221596f1a4a432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72a12f9e11c87be8767c053218699960d242faa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="210c30b435fa1c3e6425cc6f1e1f6fa165f5b2cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83945982a75ccfb6b7a9b9884f44467948fd4e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (invocaciones internas de &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="59e7f35c18fff31407e103bcebcb993214d8250d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (invocaciones internas de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0c335eb28e505be318be38d4ec71606f73704e75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (invocaciones internas de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="691de6ce30e3dcb71fe19b63fc831959e4faba91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; (invocaciones internas de &lt;code&gt;&lt;a href=&quot;control-monad-st#v:stToIO&quot;&gt;stToIO&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="309c39a88860f4949296061aa3654761045f6ba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeDupableInterleaveST&quot;&gt;unsafeDupableInterleaveST&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;ST a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeDupableInterleaveST&quot;&gt;unsafeDupableInterleaveST&lt;/a&gt;&lt;/code&gt; permitediferir perezosamenteunc&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; . Cuando se pasa un valor de tipo &lt;code&gt;ST a&lt;/code&gt; , elc&amp;aacute;lculo de &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; solo se realizar&amp;aacute; cuando se demande el valor de &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65f0daaca84fb601b03fe27945e5627abc7f7496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeInterleaveST&quot;&gt;unsafeInterleaveST&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;ST a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-unsafe#v:unsafeInterleaveST&quot;&gt;unsafeInterleaveST&lt;/a&gt;&lt;/code&gt; permite que unc&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; se difiera de manera perezosa. Cuando se pasa un valor de tipo &lt;code&gt;ST a&lt;/code&gt; , elc&amp;aacute;lculo de &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; solo se realizar&amp;aacute; cuando se demande el valor de &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba1d8e87af69279a544f5e29ef94f15571547511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="197e5be67488f3f74fa5aac272fbc28bf739243b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9876d907f27326fed4ec55432296520a8b50c52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3452d9c67bb062ea223eb8bd97dc9044b5a5c8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb2bceda70a98fe1240e06bad22c4bddaaff3dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-stm#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; catches any exception thrown by &lt;code&gt;m&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt;, using the function &lt;code&gt;f&lt;/code&gt; to handle the exception. If an exception is thrown, any changes made by &lt;code&gt;m&lt;/code&gt; are rolled back, but changes prior to &lt;code&gt;m&lt;/code&gt; persist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-stm#v:catchSTM&quot;&gt;catchSTM&lt;/a&gt; m f&lt;/code&gt; cualquier excepci&amp;oacute;n lanzada por &lt;code&gt;m&lt;/code&gt; usando &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; , usando la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; para manejar la excepci&amp;oacute;n. Si se lanza una excepci&amp;oacute;n, los cambios realizados por &lt;code&gt;m&lt;/code&gt; se deshacen, pero los cambios anteriores a &lt;code&gt;m&lt;/code&gt; persisten.</target>
        </trans-unit>
        <trans-unit id="119f3d18dbd7ca2cd9d3c9d8c6ff62f182e22994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:add&quot;&gt;add&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:add&quot;&gt;add&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="494e22ba12b97aca4d77b2564abedba9fc5176ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; is an action that fetches all the previously accumulated output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; es una acci&amp;oacute;n que recupera toda la salida acumulada previamente.</target>
        </trans-unit>
        <trans-unit id="847767a23d1f75af58ec2e83454b87d6d26acdad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; is an action that retrieves a function of the previously accumulated output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-accum#v:look&quot;&gt;look&lt;/a&gt;&lt;/code&gt; es una acci&amp;oacute;n que recupera una funci&amp;oacute;n de la salida acumulada previamente.</target>
        </trans-unit>
        <trans-unit id="a6ada2829e2d6bb1f9ca961e29190980627e0077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; is not a functor on the category of monads, and many operations cannot be lifted through it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; no es un funtor de la categor&amp;iacute;a de m&amp;oacute;nadas y muchas operaciones no pueden eliminarse a trav&amp;eacute;s de &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="0064419145b5b0fd25beb8d9ce4639e928267932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:liftLocal&quot;&gt;liftLocal&lt;/a&gt; ask local&lt;/code&gt; yields a &lt;code&gt;local&lt;/code&gt; function for &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt; r m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:liftLocal&quot;&gt;liftLocal&lt;/a&gt; ask local&lt;/code&gt; produce unafunci&amp;oacute;n &lt;code&gt;local&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt; r m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e68d2a9c61d5b6b9fcf3034a4ba7044af100a34b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt; m&lt;/code&gt; delimits the continuation of any &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt; m&lt;/code&gt; delimita la continuaci&amp;oacute;n de cualquier &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; dentro de &lt;code&gt;m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fedd75407707893d471834545d80a4dbed639827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt; m&lt;/code&gt; delimits the continuation of any &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt; m&lt;/code&gt; delimita la continuaci&amp;oacute;n de cualquier &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt;&lt;/code&gt; dentro de &lt;code&gt;m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2c5253bbadcd6231f747beb43054d534ecb1bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt; f&lt;/code&gt; captures the continuation up to the nearest enclosing &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; and passes it to &lt;code&gt;f&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shift&quot;&gt;shift&lt;/a&gt; f&lt;/code&gt; captura la continuaci&amp;oacute;n hasta el &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:reset&quot;&gt;reset&lt;/a&gt;&lt;/code&gt; envolvente m&amp;aacute;s cercanoy lo pasa &lt;code&gt;f&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b1b77c8d74be46673729bbf4456ce78be79aee4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt; f&lt;/code&gt; captures the continuation up to the nearest enclosing &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt;&lt;/code&gt; and passes it to &lt;code&gt;f&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:shiftT&quot;&gt;shiftT&lt;/a&gt; f&lt;/code&gt; captura la continuaci&amp;oacute;n hasta el &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:resetT&quot;&gt;resetT&lt;/a&gt;&lt;/code&gt; envolvente m&amp;aacute;s cercano y lo pasa &lt;code&gt;f&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="396c35f3d11f522294ffdf1374de1b38e67a49fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="98c3847addecd17900fa667f0186054cc4e09d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="ecdf565949562ae9adb390e3d51ad376f2217153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="4f65808261157a6bea2533c9183f417a1b610d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; es una acci&amp;oacute;n que actualiza el estado al resultado de aplicar &lt;code&gt;f&lt;/code&gt; al estado actual.</target>
        </trans-unit>
        <trans-unit id="93065003fa3064601b908d102f8b663edbed2566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="1674ac3f3fea573c9c436e5eaee26d1da34fc85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; establece el estado dentro de la m&amp;oacute;nada en &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82fef3ae413351c10b605089ca602a0403d1c4f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; (&lt;a href=&quot;control-monad-trans-rws-cps#v:mapRWST&quot;&gt;mapRWST&lt;/a&gt; f m) r s = f (&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; m r s)&lt;/code&gt; mapRWST :: (m (a, s, w) -&amp;gt; n (b, s, w')) -&amp;gt; RWST r w s m a -&amp;gt; RWST r w' s n b</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; (&lt;a href=&quot;control-monad-trans-rws-cps#v:mapRWST&quot;&gt;mapRWST&lt;/a&gt; f m) r s = f (&lt;a href=&quot;control-monad-trans-rws-cps#v:runRWST&quot;&gt;runRWST&lt;/a&gt; m r s)&lt;/code&gt; mapRWST :: (m (a, s, w) -&amp;gt; n (b, s, w ')) -&amp;gt; RWST rwsma -&amp;gt; RWST rw' snb</target>
        </trans-unit>
        <trans-unit id="e88ecea7ae61059e63d460764d50bed008ed875b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="705eeac78d7689170ccb3af60582c47a3f6c8484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5140e1fe6cc4e1ec436ab078fdd42b8b03f5c46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-cps#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6530e8391bbe83f87d77c82b689ffda7a5353fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="3e0bea41cefb414c69ffca0f1721f0e77bb605b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="3a240f4de5d7ad104015be49cd313e421a597cd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="c3bc15ddb12d8ddaa0508c4c37236928ea1fd342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; es una acci&amp;oacute;n que actualiza el estado al resultado de aplicar &lt;code&gt;f&lt;/code&gt; al estado actual.</target>
        </trans-unit>
        <trans-unit id="e2cc1e583c0e0c93ab49ad5ae730bf00b75e254d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="72dc16540dcf502f2dfddd7ecfb7f2e3e1a037c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; establece el estado dentro de la m&amp;oacute;nada en &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c98f4454e39780ffb79bd92d034ad11a2e6ac800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebe6da78b25010c4d7e9ab1580207ab0c2f0d9cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da61bc7ac7e13de37dc9b78f815ef936d09725b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-lazy#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce8dc2c9f2d74236aaa2759032708d6efc2be004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="0aa5c5c9d57cdae54e02d2f12819cc886d4a992f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="c6f14a60f1e12e9e64b880f011e51a21cea54701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="211075725eddff85444a6eeab4c4a24b46b5fe3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; es una acci&amp;oacute;n que actualiza el estado al resultado de aplicar &lt;code&gt;f&lt;/code&gt; al estado actual.</target>
        </trans-unit>
        <trans-unit id="052bda782d9601c8c7749babbe1b5fe808da343a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="75ce6a9fad388082976aa1260bf6aa62ab65503a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; establece el estado dentro de la m&amp;oacute;nada en &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89fae10a88789fc4e9c10d1cfd0886cb6ec1733c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fc070d499725015ac5d69349da6e4498ed269f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWS&quot;&gt;withRWS&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a59a13698fed4084e51cc698aa6d4bcaea81bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; with an initial environment and state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-rws-strict#v:withRWST&quot;&gt;withRWST&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; con un entorno inicial y un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d65399116a2ecd5ca4afa5fdf8d1116d82bf7943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-select#t:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; is not a functor on the category of monads, and many operations cannot be lifted through it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-select#t:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; no es un funtor de la categor&amp;iacute;a de m&amp;oacute;nadas y muchas operaciones no pueden eliminarse a trav&amp;eacute;s de &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="ea097c197e185944557cecf52b577ee2547699c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; es una acci&amp;oacute;n que actualiza el estado al resultado de aplicar &lt;code&gt;f&lt;/code&gt; al estado actual.</target>
        </trans-unit>
        <trans-unit id="f62dc5e0ca7bcdfed4fa90c8c63bd56c3030e479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; establece el estado dentro de la m&amp;oacute;nada en &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20e955b7fdc3c64f389bb462817eb10362ce2ffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47402fa3fab42d64a75be6adde8625a84757fd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83d1055019fae23cac3bd4e807e91e2c50876035" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; is an action that updates the state to the result of applying &lt;code&gt;f&lt;/code&gt; to the current state.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:modify&quot;&gt;modify&lt;/a&gt; f&lt;/code&gt; es una acci&amp;oacute;n que actualiza el estado al resultado de aplicar &lt;code&gt;f&lt;/code&gt; al estado actual.</target>
        </trans-unit>
        <trans-unit id="4a98da3eec30ab15d45c3a3e62b1a72c169d836d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; sets the state within the monad to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:put&quot;&gt;put&lt;/a&gt; s&lt;/code&gt; establece el estado dentro de la m&amp;oacute;nada en &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac6618b3bd62691e26085624ea45a1fac4fbf734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withState&quot;&gt;withState&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07bcb42793f10512292aef4a7c29940d35102d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; executes action &lt;code&gt;m&lt;/code&gt; on a state modified by applying &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-state-strict#v:withStateT&quot;&gt;withStateT&lt;/a&gt; f m&lt;/code&gt; ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; en un estado modificado aplicando &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30ce2e6bcde376919088f988d4c38fbd2b83c55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="94b0f75a09583c166211cdd2a8f0772d7aafe4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="a4e3188b60fe8cb6c64a4738d8f9b57256966552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="8ca1c8f5e14d289d380d3c95a66f37656e7a3a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="1720a8c884d1e838847caf5066f4216e36077a29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-cps#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b62ef4a3c265d2e27d8cfff090bc43f1853dbab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="20d7675db30f9d984c5cb5033ff3a1937d13a17c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="a355ce487b136a79c714a96ea99b513298851493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="687c25e34d3ef9ec91fccdd2909776efd4aef04a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="28eb6711d36824cef318e92b5ca78764cfe0f763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16dd8ff7761d65ae71615c719bb585fd9562e1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="73a713921a6d3431d24dabb6c68916860aa6d46e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="fd97b1b2cd86c28979cbe5ee6197ec958220dd56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="64ade79fd45961fa6fd6b1cd9c42c30d16dde6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="75092c13beb4ae8666015ba120d2d9c34e78543b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f5ff442b3de1a303deb433f9f2283f3bd921ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="b6f88e969f69728200d64a1ed5c576e69ee9d586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="0df33ce4c6f596f1144e8fe1c688b2c4cfb733c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="08b563258078b3136f3d98017eae29469b87c66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="fc8a08b4fd029fa21b0d73d6b53f89b640b2fc3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="797a0ea6f32ae768eb09e6d0da9893bea11c90bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; embeds a simple writer action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-class#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; incrusta una acci&amp;oacute;n de escritor simple.</target>
        </trans-unit>
        <trans-unit id="fb4ddbc8b2b8c9593fd10f85433f6d3410313aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="b8e8a315801fbd58fd7f20bac218606dcbcf986d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="4ee50a76441dc7d837885eba71c945d4639ea4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="2274c5a29bef8a4aa510b9c9c3fc0b527d2acabc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="4f188730ef9d6f4efb4d17ed8711f90118c5aeea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae8537445dfe37fdde7a353a20bf0e29a039d034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; embeds a simple writer action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-lazy#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; incrusta una acci&amp;oacute;n de escritor simple.</target>
        </trans-unit>
        <trans-unit id="b7b46ef56d3e6ca836d4b26a830c457b663a3a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and applies the function &lt;code&gt;f&lt;/code&gt; to its output, leaving the return value unchanged.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:censor&quot;&gt;censor&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a su salida, dejando el valor de retorno sin cambios.</target>
        </trans-unit>
        <trans-unit id="35b0672c5b442aa0e6fb413872d677fc358c0bfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds its output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listen&quot;&gt;listen&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; y agrega su salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="988aa76554865354bd8172358bc021a638c875c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt; and adds the result of applying &lt;code&gt;f&lt;/code&gt; to the output to the value of the computation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:listens&quot;&gt;listens&lt;/a&gt; f m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; suma el resultado de aplicar &lt;code&gt;f&lt;/code&gt; a la salida al valor del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="8f0f1a9eac4a0b945f1f0369e206b01b943b3004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; is an action that executes the action &lt;code&gt;m&lt;/code&gt;, which returns a value and a function, and returns the value, applying the function to the output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:pass&quot;&gt;pass&lt;/a&gt; m&lt;/code&gt; es una acci&amp;oacute;n que ejecuta la acci&amp;oacute;n &lt;code&gt;m&lt;/code&gt; , que devuelve un valor y una funci&amp;oacute;n, y devuelve el valor, aplicando la funci&amp;oacute;n a la salida.</target>
        </trans-unit>
        <trans-unit id="a7afc8ee089c28c39633e8af5e57f8ce2f52969f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; is an action that produces the output &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:tell&quot;&gt;tell&lt;/a&gt; w&lt;/code&gt; es una acci&amp;oacute;n que produce la salida &lt;code&gt;w&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4f552f68789baffeb96f136fc9bbd5dc7bd05e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; embeds a simple writer action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-writer-strict#v:writer&quot;&gt;writer&lt;/a&gt; (a,w)&lt;/code&gt; incrusta una acci&amp;oacute;n de escritor simple.</target>
        </trans-unit>
        <trans-unit id="6f8f4d31c2d99b8135ca9cba4835aa7d71001e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3b8bda2bb91d5b482bf131b765aa64eecee9f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dca9f411cc94d3fe3c6b59692fa8eaf362189218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt; f&lt;/code&gt; takes an array and an association list and accumulates pairs from the list into the array with the accumulating function &lt;code&gt;f&lt;/code&gt;. Thus &lt;code&gt;&lt;a href=&quot;data-array#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; can be defined using &lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt; f&lt;/code&gt; toma una matriz y una lista de asociaci&amp;oacute;n y acumula pares de la lista en la matriz con la funci&amp;oacute;n de acumulaci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; . Por tanto, &lt;code&gt;&lt;a href=&quot;data-array#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; se puede definir utilizando &lt;code&gt;&lt;a href=&quot;data-array#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="29d08c04b5776363a20983b3f73d9433bd4806d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array#v:ixmap&quot;&gt;ixmap&lt;/a&gt;&lt;/code&gt; allows for transformations on array indices. It may be thought of as providing function composition on the right with the mapping that the original array embodies.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array#v:ixmap&quot;&gt;ixmap&lt;/a&gt;&lt;/code&gt; permite transformaciones en &amp;iacute;ndices de matriz. Puede pensarse que proporciona una composici&amp;oacute;n de funciones a la derecha con el mapeo que incorpora la matriz original.</target>
        </trans-unit>
        <trans-unit id="74b03f9dc3fc31ad7fd43564d6d0038f34aa4b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55865a474c342376504fb774cf2efc2a4191d37c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="030ee7e47e2173c5c24c8b7d9d4ef5e3cfe0abd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-st#v:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18e9d1ba0fba7a0a9cc5df6cf87b626b7f50793f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2973224b257fe531364ae3290f7b30a280486a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-io#v:IOUArray&quot;&gt;IOUArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f64f8f5584331d1ae434ddef2967565c19986dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;&lt;a href=&quot;data-array-st#v:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22257e577590a3274320774bf5795c8086bd5f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; identifies foldable structures with two different varieties of elements (as opposed to &lt;code&gt;&lt;a href=&quot;data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt;, which has one variety of element). Common examples are &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;(,)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; identifica estructuras plegables con dos variedades diferentes de elementos (a diferencia de &lt;code&gt;&lt;a href=&quot;data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; , que tiene una variedad de elementos). Los ejemplos comunes son &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;(,)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4308834da27fcf6ef846f073a8a5a3f102ee05d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biand&quot;&gt;biand&lt;/a&gt;&lt;/code&gt; returns the conjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biand&quot;&gt;biand&lt;/a&gt;&lt;/code&gt; devuelve la conjunci&amp;oacute;n de un contenedor de Bools. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , el contenedor debe ser finito; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de unvalor &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; finitamente lejos del extremo izquierdo.</target>
        </trans-unit>
        <trans-unit id="2607782d00556fac8ddccfc795d2557ff551f0fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:binotElem&quot;&gt;binotElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bielem&quot;&gt;bielem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:binotElem&quot;&gt;binotElem&lt;/a&gt;&lt;/code&gt; es la negaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bielem&quot;&gt;bielem&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0e7497d5db5d9f90b57b924e97cb257fd7b153c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bior&quot;&gt;bior&lt;/a&gt;&lt;/code&gt; returns the disjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bior&quot;&gt;bior&lt;/a&gt;&lt;/code&gt; devuelve la disyunci&amp;oacute;n de un recipiente de Bools. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , el contenedor debe ser finito; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de una &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; valor Verdadero finitamente lejos del extremo izquierdo.</target>
        </trans-unit>
        <trans-unit id="61be1bca7faa71f5c736d1ed1ef8323c0e6d9ea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denotan secuencias de bytes. Son &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; s donde &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; es la secuencia de longitud cero y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; es la concatenaci&amp;oacute;n, que se ejecuta en O (1).</target>
        </trans-unit>
        <trans-unit id="f03253fa530aa3311f3162aa4d8739a3abeda42f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-binary-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4e166145b3c9bc2c631daead40017018e72c7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-binary-get#v:Fail&quot;&gt;Fail&lt;/a&gt;&lt;/code&gt; will be returned if it runs into an error, together with a message, the position and the remaining input. If it succeeds it will return &lt;code&gt;&lt;a href=&quot;data-binary-get#v:Done&quot;&gt;Done&lt;/a&gt;&lt;/code&gt; with the resulting value, the position and the remaining input.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-binary-get#v:Fail&quot;&gt;Fail&lt;/a&gt;&lt;/code&gt; Se devolver&amp;aacute; la falla si se encuentra con un error, junto con un mensaje, la posici&amp;oacute;n y la entrada restante. Si tiene &amp;eacute;xito, devolver&amp;aacute; &lt;code&gt;&lt;a href=&quot;data-binary-get#v:Done&quot;&gt;Done&lt;/a&gt;&lt;/code&gt; con el valor resultante, la posici&amp;oacute;n y la entrada restante.</target>
        </trans-unit>
        <trans-unit id="8e23cbd1094d60ce7f0490ae2401f01a9d9da1d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; identifies bifunctorial data structures whose elements can be traversed in order, performing &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; actions at each element, and collecting a result structure with the same shape.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; identifica estructuras de datos bifunctoriales cuyos elementos se pueden atravesar en orden, ejecutando &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; acciones M&amp;oacute;nadas en cada elemento y recolectando una estructura de resultados con la misma forma.</target>
        </trans-unit>
        <trans-unit id="3fc4558258f428958d38a43c356206226e713027" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; relates to its superclasses in the following ways:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; relaciona con sus superclases de las siguientes maneras:</target>
        </trans-unit>
        <trans-unit id="8ed10c5b3128fe1bf6b6518112edfdb9576bab78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; with the structure as the first argument. For a version that ignores the results, see &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifor_&quot;&gt;bifor_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; con la estructura como primer argumento. Para una versi&amp;oacute;n que ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifor_&quot;&gt;bifor_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b014210cd26f54f35aa47a1327d8069fc68fbb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; (t . f) (t . g) &amp;equiv; t . &lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; f g&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; (t . f) (t . g) &amp;equiv; t . &lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt; f g&lt;/code&gt; para cada transformaci&amp;oacute;n aplicativa &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b25affbdcb6fcb5b1e4588545e571ed55af492b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:countLeadingZeros&quot;&gt;countLeadingZeros&lt;/a&gt;&lt;/code&gt; can be used to compute log base 2 via</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:countLeadingZeros&quot;&gt;countLeadingZeros&lt;/a&gt;&lt;/code&gt; se puede utilizar para calcular la base de registro 2 a trav&amp;eacute;s de</target>
        </trans-unit>
        <trans-unit id="5d2a434e8ec3c4040c812b931eb15c56b0b3f11f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt; x i&lt;/code&gt; rotates &lt;code&gt;x&lt;/code&gt; left by &lt;code&gt;i&lt;/code&gt; bits if &lt;code&gt;i&lt;/code&gt; is positive, or right by &lt;code&gt;-i&lt;/code&gt; bits otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt; x i&lt;/code&gt; rota &lt;code&gt;x&lt;/code&gt; a la izquierda en &lt;code&gt;i&lt;/code&gt; bits si &lt;code&gt;i&lt;/code&gt; es positivo, oa la derecha en &lt;code&gt;-i&lt;/code&gt; bits en caso contrario.</target>
        </trans-unit>
        <trans-unit id="0204cfc77645dff974ce858e0bac968a15e4bf27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt; x i&lt;/code&gt; shifts &lt;code&gt;x&lt;/code&gt; left by &lt;code&gt;i&lt;/code&gt; bits if &lt;code&gt;i&lt;/code&gt; is positive, or right by &lt;code&gt;-i&lt;/code&gt; bits otherwise. Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the &lt;code&gt;x&lt;/code&gt; is negative and with 0 otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt; x i&lt;/code&gt; desplaza &lt;code&gt;x&lt;/code&gt; a la izquierda en &lt;code&gt;i&lt;/code&gt; bits si &lt;code&gt;i&lt;/code&gt; es positivo, oa la derecha en &lt;code&gt;-i&lt;/code&gt; bits en caso contrario. Los desplazamientos a la derecha realizan la extensi&amp;oacute;n de la se&amp;ntilde;al en tipos de n&amp;uacute;meros firmados; es decir, llenan los bits superiores con 1 si la &lt;code&gt;x&lt;/code&gt; es negativa y con 0 en caso contrario.</target>
        </trans-unit>
        <trans-unit id="02d5197ccd184f9fc9d231ede2541f22d9893e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt; is the value with all bits unset.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt; es el valor con todos los bits sin establecer.</target>
        </trans-unit>
        <trans-unit id="f00a142c8e1bdb42af1e50bd46560b6a73ec009a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if bound threads are supported. If &lt;code&gt;rtsSupportsBoundThreads&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent#v:isCurrentThreadBound&quot;&gt;isCurrentThreadBound&lt;/a&gt;&lt;/code&gt; will always return &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; and both &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent#v:runInBoundThread&quot;&gt;runInBoundThread&lt;/a&gt;&lt;/code&gt; will fail.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si se admiten hilos enlazados. Si &lt;code&gt;rtsSupportsBoundThreads&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent#v:isCurrentThreadBound&quot;&gt;isCurrentThreadBound&lt;/a&gt;&lt;/code&gt; siempre devolver&amp;aacute; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; y tanto &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;&lt;a href=&quot;control-concurrent#v:runInBoundThread&quot;&gt;runInBoundThread&lt;/a&gt;&lt;/code&gt; fallar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="b2fe25f3c9e48edead3895c08fa9ff6afb46061b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE &quot;not-a-number&quot; (NaN) value</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si el argumento es un valor IEEE &quot;no es un n&amp;uacute;mero&quot; (NaN)</target>
        </trans-unit>
        <trans-unit id="042c18414e44de6afc3475fc16a197923bd64f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE floating point number</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si el argumento es un n&amp;uacute;mero de coma flotante IEEE</target>
        </trans-unit>
        <trans-unit id="acfe78efc36c045764172795375babd03dff8cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE infinity or negative infinity</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si el argumento es un infinito IEEE o un infinito negativo</target>
        </trans-unit>
        <trans-unit id="9d1b73738b03e58fd7509c3e3cabd5cd16b9c10d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE negative zero</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si el argumento es un cero negativo IEEE</target>
        </trans-unit>
        <trans-unit id="90906bd5104bae9431696045f8666032eff0a8b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is too small to be represented in normalized format</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si el argumento es demasiado peque&amp;ntilde;o para ser representado en formato normalizado</target>
        </trans-unit>
        <trans-unit id="925fe6db268e1f46b1cf48e48304216b3b0c2115" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bool#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; is defined as the value &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;. It helps to make guards more readable. eg.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bool#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; se define como el valor &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; . Ayuda a que los guardias sean m&amp;aacute;s legibles. p.ej.</target>
        </trans-unit>
        <trans-unit id="bf7e445916d71ae49094632dc3c5c5a61123d862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5c177467307dab7367093bb8d7a8499d4ccbaaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49048d12d2f0d5746d8058563a828f81859230de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakByte&quot;&gt;breakByte&lt;/a&gt;&lt;/code&gt; breaks its ByteString argument at the first occurence of the specified byte. It is more efficient than &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; as it is implemented with &lt;code&gt;memchr(3)&lt;/code&gt;. I.e.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakByte&quot;&gt;breakByte&lt;/a&gt;&lt;/code&gt; rompe su argumento ByteString en la primera aparici&amp;oacute;n del byte especificado. Es m&amp;aacute;s eficiente que &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; ya que se implementa con &lt;code&gt;memchr(3)&lt;/code&gt; . Es decir</target>
        </trans-unit>
        <trans-unit id="814d2591f45f2ac2241967feaf572be0fff86eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; se comporta como &lt;code&gt;&lt;a href=&quot;data-bytestring#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; pero desde el final de &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce1f0320a6669caccb40683ce9ca4ea268d8be9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; devuelve el sufijo restante despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9ec408b4a3abb30eb82e4a987ecc1927f38e5b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (normalmente la identidad izquierda del operador) y un ByteString, reduce el ByteString usando el operador binario, de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="9af08e815de2113b910c01944dd370421022af7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero estricto en el acumulador.</target>
        </trans-unit>
        <trans-unit id="b87be8315731fe7ab44b3a5a6789b6d4ab1e28e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;. An exception will be thrown in the case of an empty ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;ByteStrings&lt;/code&gt; no vac&amp;iacute;os. Se lanzar&amp;aacute; una excepci&amp;oacute;n en el caso de un ByteString vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="b3750fc4b5e98cc041210f7b3d17533c517645dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator. An exception will be thrown in the case of an empty ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; , pero estricto en el acumulador. Se lanzar&amp;aacute; una excepci&amp;oacute;n en el caso de un ByteString vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="d619695c9612199cbee13912587a6d2c03d9fae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (normalmente la identidad derecha del operador) y un ByteString, reduce el ByteString usando el operador binario, de derecha a izquierda.</target>
        </trans-unit>
        <trans-unit id="58d937918819553f46fcccff3b7ad25317536533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; , pero estricto en el acumulador.</target>
        </trans-unit>
        <trans-unit id="6747eee2d2a86ecf6dc3dc123f9f4df38fded661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s An exception will be thrown in the case of an empty ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; sno vac&amp;iacute;os. Se lanzar&amp;aacute; una excepci&amp;oacute;n en el caso de un ByteString vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="549072b964e3da71ece075603043bb808ede4ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1-39-&quot;&gt;foldr1'&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt;, but is strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1-39-&quot;&gt;foldr1'&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; , pero es estricta en el acumulador.</target>
        </trans-unit>
        <trans-unit id="3e20f14daf1c3f52c8eba40e2f2b4f505b9b17a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; se implementa en t&amp;eacute;rminos de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c32ca139445b6d87660501354bdf4600476ccb2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded16728e931ee5bc65014bd9226f8baf3b71328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; es similar a &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero devuelve una lista de valores reducidos sucesivos desde la izquierda. Esta funci&amp;oacute;n se fusionar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="bfc41b5104721edce4a147cd2583a193925ddedb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial. Esta funci&amp;oacute;n se fusionar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="d815ff110c0ffc55443e28a602dc7efeb8763841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial.</target>
        </trans-unit>
        <trans-unit id="69d606d2f7c1c5921b2ca5e320ff4273ddf01ab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; divide ByteString en dos segmentos. Es equivalente a &lt;code&gt;(&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec26108245136e66432e70cd36352ca29526a91b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. We have</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; se comporta como &lt;code&gt;&lt;a href=&quot;data-bytestring#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; pero desde el final de &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Tenemos</target>
        </trans-unit>
        <trans-unit id="6cc4fcf5475892b6109ae9d3bdf0314f7bced609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y a ByteString &lt;code&gt;xs&lt;/code&gt; , devuelve el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de &lt;code&gt;xs&lt;/code&gt; de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91cba81bd76b09e3ff2c131246dfb09a0d15acf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generaliza &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; comprimiendo con la funci&amp;oacute;n dada como primer argumento, en lugar de una funci&amp;oacute;n tupling. Por ejemplo, &lt;code&gt;&lt;a href=&quot;data-bytestring#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; se aplica a dos ByteStrings para producir la lista de sumas correspondientes.</target>
        </trans-unit>
        <trans-unit id="400318b02dea0c256c94b0ecaf903a2fa97af736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; para ejecutar</target>
        </trans-unit>
        <trans-unit id="d32148183d294ca5197aff3f1abec6956419e8c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s are used to efficiently construct sequences of bytes from smaller parts. Typically, such a construction is part of the implementation of an &lt;em&gt;encoding&lt;/em&gt;, i.e., a function for converting Haskell values to sequences of bytes. Examples of encodings are the generation of the sequence of bytes representing a HTML document to be sent in a HTTP response by a web application or the serialization of a Haskell value using a fixed binary format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; se utilizan para construir de manera eficiente secuencias de bytes a partir de partes m&amp;aacute;s peque&amp;ntilde;as. Normalmente, dicha construcci&amp;oacute;n es parte de la implementaci&amp;oacute;n de una&lt;em&gt; codificaci&amp;oacute;n&lt;/em&gt; , es decir, una funci&amp;oacute;n para convertir valores Haskell en secuencias de bytes. Ejemplos de codificaciones son la generaci&amp;oacute;n de la secuencia de bytes que representa un documento HTML para ser enviado en una respuesta HTTP por una aplicaci&amp;oacute;n web o la serializaci&amp;oacute;n de un valor Haskell usando un formato binario fijo.</target>
        </trans-unit>
        <trans-unit id="3b5766e08a6ca06be7c1b0532b50c33472ef57a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denotan secuencias de bytes. Son &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; s donde &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; es la secuencia de longitud cero y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; es la concatenaci&amp;oacute;n, que se ejecuta en O (1).</target>
        </trans-unit>
        <trans-unit id="313b3a7e823d675b0824aac76ab978c244a39843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d145a1aef6a3fb97e6a2b210eb98455f939ce5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildSignal&quot;&gt;BuildSignal&lt;/a&gt;&lt;/code&gt;s abstract signals to the caller of a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;. There are three signals: &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt;, or 'insertChunks signals</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildSignal&quot;&gt;BuildSignal&lt;/a&gt;&lt;/code&gt; abstractas de BuildSignal al llamador de un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; . Hay tres se&amp;ntilde;ales: &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt; o 'insertChunks se&amp;ntilde;ales</target>
        </trans-unit>
        <trans-unit id="b278c6bf1b39978c7c5e2af2ff5da6eadbb5d553" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; that first writes the byte stream of this &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; and then yields the computed value using the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; signal.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; que primero escribe el flujo de bytes de este &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; y luego produce el valor calculado usando lase&amp;ntilde;al &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63b362ab22c1aa510574369c64e24f888fe3bee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; that writes the byte stream of this &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; and signals &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; upon completion.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; que escribe el flujo de bytes de este &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; y las se&amp;ntilde;ales &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; al finalizar.</target>
        </trans-unit>
        <trans-unit id="9ad848a32d7ce3d287f565a89e7732474f6233d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; para ejecutar</target>
        </trans-unit>
        <trans-unit id="0f742d93fc7fc396302c32c5fa4cc5139acfd65d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to run on next &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; para ejecutar en el pr&amp;oacute;ximo &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0f2eb2ceb32c6399fd061a346fe8e2934a7def9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; to run on the next &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;. This &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; may assume that it is called with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; of at least the required minimal size; i.e., the caller of this &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; must guarantee this.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; para ejecutarse en el siguiente &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; . Este &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; puede asumir que se llama con un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; de al menos el tama&amp;ntilde;o m&amp;iacute;nimo requerido; es decir, la persona que llama a este &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; debe garantizar esto.</target>
        </trans-unit>
        <trans-unit id="785590d74b7131ca518af0a5157873272d536817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt;s may be called *multiple times* and they must not rise an async. exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; s se pueden llamar * varias veces * y no deben generar un async. excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5bfcaf542915c49e92ce1dd3be18072ff8ad5609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; para ejecutar</target>
        </trans-unit>
        <trans-unit id="7f395dd725a311873438a74f7e5edcbbf7d48e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to run</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; para ejecutar</target>
        </trans-unit>
        <trans-unit id="325eb71ceaed27c2de7d59edf77336aabfab872d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denotan secuencias de bytes. Son &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; s donde &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; es la secuencia de longitud cero y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; es la concatenaci&amp;oacute;n, que se ejecuta en O (1).</target>
        </trans-unit>
        <trans-unit id="18161b6726dcafe08ce97249e84aaa43ba8b4b54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s denote sequences of bytes. They are &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;s where &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; is the zero-length sequence and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is concatenation, which runs in O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b9bf3298f4b6b1b928a28d0a2e5cb2f1c4368b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; actions are isomorphic to &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s. The functions &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:putBuilder&quot;&gt;putBuilder&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:fromPut&quot;&gt;fromPut&lt;/a&gt;&lt;/code&gt; convert between these two types. Where possible, you should use &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s, as sequencing them is slightly cheaper than sequencing &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s because they do not carry around a computed value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; acciones Put () son isomorfas a las de &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; . Las funciones &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:putBuilder&quot;&gt;putBuilder&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:fromPut&quot;&gt;fromPut&lt;/a&gt;&lt;/code&gt; convierten entre estos dos tipos. Siempre que sea posible, debe utilizar &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s, ya que secuenciarlos es un poco m&amp;aacute;s econ&amp;oacute;mico que secuenciar &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; s porque no llevan un valor calculado.</target>
        </trans-unit>
        <trans-unit id="28516125777a3e91b5c7da1aa4ef89b5b5438980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; to execute</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; a ejecutar</target>
        </trans-unit>
        <trans-unit id="d2613edfde5d01fe61eb572e3b17bf2c93246280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are a generalization of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s. The typical use case is the implementation of an encoding that might fail (e.g., an interface to the &lt;code&gt;zlib&lt;/code&gt; compression library or the conversion from Base64 encoded data to 8-bit data). For a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;, the only way to handle and report such a failure is ignore it or call &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;. In contrast, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; actions are expressive enough to allow reportng and handling such a failure in a pure fashion.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; s es una generalizaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s. El caso de uso t&amp;iacute;pico es la implementaci&amp;oacute;n de una codificaci&amp;oacute;n que puede fallar (por ejemplo, una interfaz a labiblioteca de compresi&amp;oacute;n &lt;code&gt;zlib&lt;/code&gt; o la conversi&amp;oacute;n de datos codificados en Base64 a datos de 8 bits). Para un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; , la &amp;uacute;nica forma de manejar e informar tal falla es ignorarlo o llamar al &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; . Por el contrario, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; acciones son lo suficientemente expresiva para permitir reportng y gastos de un fallo de este tipo de forma pura.</target>
        </trans-unit>
        <trans-unit id="0e0ed8a2e170c305e885e9403f220a3253ae209d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are a generalization of &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s. The typical use case is the implementation of an encoding that might fail (e.g., an interface to the &lt;code&gt;zlib&lt;/code&gt; compression library or the conversion from Base64 encoded data to 8-bit data). For a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;, the only way to handle and report such a failure is ignore it or call &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;. In contrast, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; actions are expressive enough to allow reportng and handling such a failure in a pure fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6259121adec8057275e645a770e122ae792fce7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e20ee2631572cd3418378617a6b39fb1b3d7ed0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1779d7062a7b9d2e0cf8038095e5fd44412988b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:breakEnd&quot;&gt;breakEnd&lt;/a&gt;&lt;/code&gt; se comporta como &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; pero desde el final de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de908e89fcd71a714f73e02fe967c7464ee43a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; devuelve el sufijo restante despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25b6f2a5df3dec6e64aacb22516bd44359882b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (normalmente la identidad izquierda del operador) y un ByteString, reduce el ByteString usando el operador binario, de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="c70b4cacdf42f61d048c68f864d54cd18b74ff87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like foldl, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; es como foldl, pero estricto en el acumulador.</target>
        </trans-unit>
        <trans-unit id="4df93e4558ff853b49fb772930abaa54f0db105b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;ByteStrings&lt;/code&gt; no vac&amp;iacute;os.</target>
        </trans-unit>
        <trans-unit id="3380643737b226992e90d034c89b4da85a2701e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a packed string, reduces the packed string using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (t&amp;iacute;picamente la identidad derecha del operador) y una cadena empaquetada, reduce la cadena empaquetada usando el operador binario, de derecha a izquierda.</target>
        </trans-unit>
        <trans-unit id="532fcd7131ac66e085e552a1b8e49aca1dc2c636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; is a strict variant of foldr</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr-39-&quot;&gt;foldr'&lt;/a&gt;&lt;/code&gt; es una variante estricta de foldr</target>
        </trans-unit>
        <trans-unit id="fa85433d3779461442be4bd86b0a944e37a22af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; sno vac&amp;iacute;os</target>
        </trans-unit>
        <trans-unit id="5c809f7a67fee724a73504afc9cb81685462e1df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; se implementa en t&amp;eacute;rminos de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12e616350352a4f534855d6e461cf5bd0b44bf5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hGet&quot;&gt;hGet&lt;/a&gt;&lt;/code&gt; is implemented in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43f0ff7401e01504ce875520bfd783a6b8dc983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of ByteStrings at newline Chars. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; divide un ByteString en una lista de ByteStrings en caracteres de nueva l&amp;iacute;nea. Las cadenas resultantes no contienen nuevas l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="424eb331c92ebbbb3a4981be7875a219753d0720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; returns the maximum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; devuelve el valor m&amp;aacute;ximo de un &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2679835322a165d84955340ee3adf56ea942979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; returns the minimum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; devuelve el valor m&amp;iacute;nimo de un &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2af16668f08a480c78fa3c78f938bbf51e9f930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; es similar a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero devuelve una lista de valores reducidos sucesivos desde la izquierda:</target>
        </trans-unit>
        <trans-unit id="1e1ed3aefd29b97ec72fa93ff3b7b62516ac204b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial:</target>
        </trans-unit>
        <trans-unit id="9b7ba4dc005673b183182fc40c0040abf6192128" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial.</target>
        </trans-unit>
        <trans-unit id="12a4aa7c1193e751d0bfa19733a577294128f78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; divide ByteString en dos segmentos. Es equivalente a &lt;code&gt;(&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3881481245c3d38ec088e956e450597f8729c4bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; behaves like &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; but from the end of the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. We have</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:spanEnd&quot;&gt;spanEnd&lt;/a&gt;&lt;/code&gt; se comporta como &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; pero desde el final de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Tenemos</target>
        </trans-unit>
        <trans-unit id="1d7fcb99613d90b0f2d9cd56ef6de3d631726ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y a ByteString &lt;code&gt;xs&lt;/code&gt; , devuelve el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de &lt;code&gt;xs&lt;/code&gt; de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e667258ffe15b8bbeebbbda08eefba1e8f103848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; es una operaci&amp;oacute;n inversa a las &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . Une l&amp;iacute;neas, despu&amp;eacute;s de agregar una nueva l&amp;iacute;nea final a cada una.</target>
        </trans-unit>
        <trans-unit id="ae4e0355c15fd4dd38e8c63a95919f9de21f0c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforms a list of pairs of Chars into a pair of ByteStrings. Note that this performs two &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforma una lista de pares de caracteres en un par de ByteStrings. Tenga en cuenta que esto realiza dosoperaciones de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="090063b4cab35d4e6765c1a78f2836fedec300a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of words, which were delimited by Chars representing white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; divide una ByteString en una lista de palabras, que fueron delimitadas por caracteres que representan espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="8b8bb505917b6a014422fda172177dfb7897b3b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generaliza &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; comprimiendo con la funci&amp;oacute;n dada como primer argumento, en lugar de una funci&amp;oacute;n tupling. Por ejemplo, &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; se aplica a dos ByteStrings para producir la lista de sumas correspondientes.</target>
        </trans-unit>
        <trans-unit id="151d4dab32d14a4a55709b5339eefca471e21945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="242996ba6325d0417c385cecb868add36f955a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bd15fc1d44bf6b5d2df186402c0be1aeda9780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite ByteString into a circular one, or equivalently, the infinite repetition of the original ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; vincula un ByteString finito en uno circular, o de manera equivalente, la repetici&amp;oacute;n infinita del ByteString original.</target>
        </trans-unit>
        <trans-unit id="0219cc434dc5f14e7aa2d22e1fa1374ea94481bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; devuelve el sufijo restante despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fadaf40facdb46311f0b253aabfd4a249cbf45b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (normalmente la identidad izquierda del operador) y un ByteString, reduce el ByteString usando el operador binario, de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="637b4b1ae7de090939d1501baf59b05c6b379b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero estricto en el acumulador.</target>
        </trans-unit>
        <trans-unit id="38706bf8bcda5bb152bdadd2bad97f2f16c0362f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;ByteStrings&lt;/code&gt; no vac&amp;iacute;os.</target>
        </trans-unit>
        <trans-unit id="2093c659ced7a21150b96dd391c8e3888ef2b8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; , pero estricto en el acumulador.</target>
        </trans-unit>
        <trans-unit id="569e332d5a21b09df525eca4e7052b1941987723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (normalmente la identidad derecha del operador) y un ByteString, reduce el ByteString usando el operador binario, de derecha a izquierda.</target>
        </trans-unit>
        <trans-unit id="cf50c8d2fc12653b3c7d86d7b1cdeb9cc8850238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; sno vac&amp;iacute;os</target>
        </trans-unit>
        <trans-unit id="f2f33f6db161ebfff3ca891cb8da754d402393d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; returns an infinite ByteString of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; devuelve un ByteString infinito de aplicaciones repetidas de &lt;code&gt;f&lt;/code&gt; a &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="96bbfaf607a708c3811399a361d04f7b7d4cf84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; is an infinite ByteString, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; es un ByteString infinito, con &lt;code&gt;x&lt;/code&gt; el valor de cada elemento.</target>
        </trans-unit>
        <trans-unit id="0363ad05ec2d2dc4b1c954860242b98451f0db15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; es similar a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero devuelve una lista de valores reducidos sucesivos desde la izquierda. Esta funci&amp;oacute;n se fusionar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="c0d244d5aa3ef0785af5bd8b75998f48fedd67cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; divide ByteString en dos segmentos. Es equivalente a &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="623d60d5a2ab5a24d2906c9551e0417f9aecdbb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y a ByteString &lt;code&gt;xs&lt;/code&gt; , devuelve el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de &lt;code&gt;xs&lt;/code&gt; de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37ac37f79289343bf19b065f750e3bf9cf378479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generaliza &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; comprimiendo con la funci&amp;oacute;n dada como primer argumento, en lugar de una funci&amp;oacute;n tupling. Por ejemplo, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; se aplica a dos ByteStrings para producir la lista de sumas correspondientes.</target>
        </trans-unit>
        <trans-unit id="2cc90c20473c1ecd1f5daa9ad1aa28d44089fd39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f91ef5677a2cd4b07b9a0e6bab48e4b9c497f98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7446723c5744081e426f0c68f66f3757ce896ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite ByteString into a circular one, or equivalently, the infinite repetition of the original ByteString.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; vincula un ByteString finito en uno circular, o de manera equivalente, la repetici&amp;oacute;n infinita del ByteString original.</target>
        </trans-unit>
        <trans-unit id="93eae0dd8a677f5e6c557557f531ed87657a455a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; devuelve el sufijo restante despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1826b29d8fb20478b485a25f1dd28e52178bce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the left-identity of the operator), and a ByteString, reduces the ByteString using the binary operator, from left to right.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (normalmente la identidad izquierda del operador) y un ByteString, reduce el ByteString usando el operador binario, de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="1fcf53c62761b162c8305634c382c19038a4b4e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; is like foldl, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; es como foldl, pero estricto en el acumulador.</target>
        </trans-unit>
        <trans-unit id="82f74b552d46d49b2565d579b3c5a5a02e9c764a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;ByteStrings&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;ByteStrings&lt;/code&gt; no vac&amp;iacute;os.</target>
        </trans-unit>
        <trans-unit id="325a3decb3bfb6cda2467fd8a10350dd9300f3e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt;, but strict in the accumulator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1-39-&quot;&gt;foldl1'&lt;/a&gt;&lt;/code&gt; es como &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl1&quot;&gt;foldl1&lt;/a&gt;&lt;/code&gt; , pero estricto en el acumulador.</target>
        </trans-unit>
        <trans-unit id="569f75b64b3fc4f3746a72a6e817f9a9b9adef2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a packed string, reduces the packed string using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (t&amp;iacute;picamente la identidad derecha del operador) y una cadena empaquetada, reduce la cadena empaquetada usando el operador binario, de derecha a izquierda.</target>
        </trans-unit>
        <trans-unit id="6dc9b69bac3a35fcb3da0090cf0d397e24abb308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no starting value argument, and thus must be applied to non-empty &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr1&quot;&gt;foldr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial y, por lo tanto, debe aplicarse a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; sno vac&amp;iacute;os</target>
        </trans-unit>
        <trans-unit id="b308b0398322ef72f763ca8708657195357a35c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; returns an infinite ByteString of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; devuelve un ByteString infinito de aplicaciones repetidas de &lt;code&gt;f&lt;/code&gt; a &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="734c989c0581155fc3c40ecb0495412534befdc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of ByteStrings at newline Chars. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; divide un ByteString en una lista de ByteStrings en caracteres de nueva l&amp;iacute;nea. Las cadenas resultantes no contienen nuevas l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="9142293bc3569e7c4eeebb4fc06306b0fd26e4d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; returns the maximum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; devuelve el valor m&amp;aacute;ximo de un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c73cda03c3c28a246f7653e1fed2ab0065f3583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; returns the minimum value from a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; devuelve el valor m&amp;iacute;nimo de un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70e0d5a7b9b68c43daa9661716c6caf2b782d299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; is an infinite ByteString, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; es un ByteString infinito, con &lt;code&gt;x&lt;/code&gt; el valor de cada elemento.</target>
        </trans-unit>
        <trans-unit id="8cca0cb060471abf20e45753a3219ac297b08afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a list of successive reduced values from the left. This function will fuse.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; es similar a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero devuelve una lista de valores reducidos sucesivos desde la izquierda. Esta funci&amp;oacute;n se fusionar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="12edc84f1c4696c637d33e4f7acb39260212a7a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; breaks the ByteString into two segments. It is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; divide ByteString en dos segmentos. Es equivalente a &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-bytestring-lazy-char8#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8203bbc7abb1550e2252baa6dcb14bf6a84a00bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y a ByteString &lt;code&gt;xs&lt;/code&gt; , devuelve el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de &lt;code&gt;xs&lt;/code&gt; de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d58cb271d54a691f148ceb44ed361defb00b77a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; es una operaci&amp;oacute;n inversa a las &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . Une l&amp;iacute;neas, despu&amp;eacute;s de agregar una nueva l&amp;iacute;nea final a cada una.</target>
        </trans-unit>
        <trans-unit id="e530c8bb5652916eac9c9f9df4955c3e0fb3cef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a ByteString up into a list of words, which were delimited by Chars representing white space. And</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; divide una ByteString en una lista de palabras, que fueron delimitadas por caracteres que representan espacios en blanco. Y</target>
        </trans-unit>
        <trans-unit id="ad56e4b49a938fe1f3e80f8f402a8c312fdaeabd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalises &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; is applied to two ByteStrings to produce the list of corresponding sums.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generaliza &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; comprimiendo con la funci&amp;oacute;n dada como primer argumento, en lugar de una funci&amp;oacute;n tupling. Por ejemplo, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:zipWith&quot;&gt;zipWith&lt;/a&gt; (+)&lt;/code&gt; se aplica a dos ByteStrings para producir la lista de sumas correspondientes.</target>
        </trans-unit>
        <trans-unit id="329983f85b087c850a5ccb1bd56ee80d5dcf0ce4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt;: 4 words; 16 or 32 bytes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; : 4 palabras; 16 o 32 bytes.</target>
        </trans-unit>
        <trans-unit id="5d76a8baa4b918f3c183054588a8a873dd25abde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-complex#v:cis&quot;&gt;cis&lt;/a&gt; t&lt;/code&gt; is a complex value with magnitude &lt;code&gt;1&lt;/code&gt; and phase &lt;code&gt;t&lt;/code&gt; (modulo &lt;code&gt;2*&lt;a href=&quot;numeric#v:pi&quot;&gt;pi&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-complex#v:cis&quot;&gt;cis&lt;/a&gt; t&lt;/code&gt; es un valor complejo con magnitud &lt;code&gt;1&lt;/code&gt; y fase &lt;code&gt;t&lt;/code&gt; (m&amp;oacute;dulo &lt;code&gt;2*&lt;a href=&quot;numeric#v:pi&quot;&gt;pi&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9e63de9563335b37a43219af45dcdab137f1f6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast1&quot;&gt;dataCast1&lt;/a&gt;&lt;/code&gt; should be defined as &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast1&quot;&gt;gcast1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast1&quot;&gt;dataCast1&lt;/a&gt;&lt;/code&gt; debe definirse como &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast1&quot;&gt;gcast1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ebefbd3940b6ffe12c9649942e286513e51ad0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast2&quot;&gt;dataCast2&lt;/a&gt;&lt;/code&gt; should be defined as &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast2&quot;&gt;gcast2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-data#v:dataCast2&quot;&gt;dataCast2&lt;/a&gt;&lt;/code&gt; debe definirse como &lt;code&gt;&lt;a href=&quot;data-typeable#v:gcast2&quot;&gt;gcast2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc62eb41f91e7b2e875fb6cefb9bf5723a3e0d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; Instancia de Eq :</target>
        </trans-unit>
        <trans-unit id="818f2926ad6d9aa6217ebfa029e556150ec908a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; returns the conjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; devuelve la conjunci&amp;oacute;n de un contenedor de Bools. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , el contenedor debe ser finito; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de unvalor &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; finitamente lejos del extremo izquierdo.</target>
        </trans-unit>
        <trans-unit id="09c64733b3cbba386f6416f88a406a90b79b23b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; con sus argumentos invertidos. Para una versi&amp;oacute;n que no ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-traversable#v:forM&quot;&gt;forM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6abaa003bb2958f17b4c25c91f182467a165f9dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; con sus argumentos invertidos. Para una versi&amp;oacute;n que no ignora los resultados ver &lt;code&gt;&lt;a href=&quot;data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77ed5f6754b7a36eabe1c5aa3ba9fe6a28a03db5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;data-foldable#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; es la negaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-foldable#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e86f572d0a95734f99c2f335fa4012221ec9ab3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-foldable#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; returns the disjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; devuelve la disyunci&amp;oacute;n de un contenedor de Bools. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , el contenedor debe ser finito; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de unvalor &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; finitamente lejos del extremo izquierdo.</target>
        </trans-unit>
        <trans-unit id="f0b4fa340bcd1803dd46f9ad92aad6e0876012b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; is a reverse application operator. This provides notational convenience. Its precedence is one higher than that of the forward application operator &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt;, which allows &lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; to be nested in &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; es un operador de aplicaci&amp;oacute;n inversa. Esto proporciona conveniencia de notaci&amp;oacute;n. Su precedencia es mayor que la del operador de aplicaci&amp;oacute;n de reenv&amp;iacute;o &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; , que permite que &lt;code&gt;&lt;a href=&quot;data-function#v:-38-&quot;&gt;&amp;amp;&lt;/a&gt;&lt;/code&gt; est&amp;eacute; anidado en &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1730c5686998b78a3501c910101604876ebc6067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; is the least fixed point of the function &lt;code&gt;f&lt;/code&gt;, i.e. the least defined &lt;code&gt;x&lt;/code&gt; such that &lt;code&gt;f x = x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:fix&quot;&gt;fix&lt;/a&gt; f&lt;/code&gt; es el punto m&amp;iacute;nimo fijo de la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; , es decir, el menos definido &lt;code&gt;x&lt;/code&gt; tal que &lt;code&gt;f x = x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfc2f2d88b56286c1ebf9ed3d80daa53fd96e905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; takes its (first) two arguments in the reverse order of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; toma sus (primeros) dos argumentos en el orden inverso de &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37e5bd55f93a77fdfca4edbda89e3cbbe06f6bba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt; b u x y&lt;/code&gt; runs the binary function &lt;code&gt;b&lt;/code&gt;&lt;em&gt;on&lt;/em&gt; the results of applying unary function &lt;code&gt;u&lt;/code&gt; to two arguments &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. From the opposite perspective, it transforms two inputs and combines the outputs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-function#v:on&quot;&gt;on&lt;/a&gt; b u x y&lt;/code&gt; ejecuta la funci&amp;oacute;n binaria &lt;code&gt;b&lt;/code&gt; &lt;em&gt;en&lt;/em&gt; los resultados de aplicar la funci&amp;oacute;n unaria &lt;code&gt;u&lt;/code&gt; a dos argumentos &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; . Desde la perspectiva opuesta, transforma dos entradas y combina las salidas.</target>
        </trans-unit>
        <trans-unit id="62e9e0d5cd073da4d6b7c6378fa6edc99955e292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; discards or ignores the result of evaluation, such as the return value of an &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor#v:void&quot;&gt;void&lt;/a&gt; value&lt;/code&gt; descarta o ignora el resultado de la evaluaci&amp;oacute;n, como el valor de retorno de unaacci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;system-io#v:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8de5809cf1322027425d66e0e26a6f07dc2283c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt; rp1 rp2 n c'&lt;/code&gt; matches the name of a binary data constructor and then parses its arguments using &lt;code&gt;rp1&lt;/code&gt; and &lt;code&gt;rp2&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt; rp1 rp2 n c'&lt;/code&gt; coincide con el nombre de un constructor de datos binarios y luego analiza sus argumentos utilizando &lt;code&gt;rp1&lt;/code&gt; y &lt;code&gt;rp2&lt;/code&gt; respectivamente.</target>
        </trans-unit>
        <trans-unit id="ccf72b90ad816dea1b11908877441a74beee7d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readData&quot;&gt;readData&lt;/a&gt; p&lt;/code&gt; is a parser for datatypes where each alternative begins with a data constructor. It parses the constructor and passes it to &lt;code&gt;p&lt;/code&gt;. Parsers for various constructors can be constructed with &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt;&lt;/code&gt;, and combined with &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--124--62-&quot;&gt;(&amp;lt;|&amp;gt;)&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;&lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readData&quot;&gt;readData&lt;/a&gt; p&lt;/code&gt; es un analizador de tipos de datos donde cada alternativa comienza con un constructor de datos. Analiza el constructor y lo pasa a &lt;code&gt;p&lt;/code&gt; . Se pueden construir analizadores para varios constructores con &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readBinaryWith&quot;&gt;readBinaryWith&lt;/a&gt;&lt;/code&gt; , y combinarlos con &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--124--62-&quot;&gt;(&amp;lt;|&amp;gt;)&lt;/a&gt;&lt;/code&gt; de laclase &lt;code&gt;&lt;a href=&quot;control-applicative#t:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fd7d89575dc73aa7d75babcbe5618f3b2ca31aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt; rp n c'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;rp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readUnaryWith&quot;&gt;readUnaryWith&lt;/a&gt; rp n c'&lt;/code&gt; coincide con el nombre de un constructor de datos unarios y luego analiza su argumento usando &lt;code&gt;rp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee47685d28202b9bc0ca12619f1cd0bebcd04d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt; n c n'&lt;/code&gt; matches the name of a binary data constructor and then parses its arguments using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt; n c n'&lt;/code&gt; coincide con el nombre de un constructor de datos binarios y luego analiza sus argumentos usando &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75b5d12ec307d4525dd4577645cf26777df6a9fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinaryWith&quot;&gt;readsBinaryWith&lt;/a&gt; rp1 rp2 n c n'&lt;/code&gt; matches the name of a binary data constructor and then parses its arguments using &lt;code&gt;rp1&lt;/code&gt; and &lt;code&gt;rp2&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinaryWith&quot;&gt;readsBinaryWith&lt;/a&gt; rp1 rp2 n c n'&lt;/code&gt; coincide con el nombre de un constructor de datos binarios y luego analiza sus argumentos utilizando &lt;code&gt;rp1&lt;/code&gt; y &lt;code&gt;rp2&lt;/code&gt; respectivamente.</target>
        </trans-unit>
        <trans-unit id="d9f16bab2111fe95700fed25029573a3d2d398c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsData&quot;&gt;readsData&lt;/a&gt; p d&lt;/code&gt; is a parser for datatypes where each alternative begins with a data constructor. It parses the constructor and passes it to &lt;code&gt;p&lt;/code&gt;. Parsers for various constructors can be constructed with &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt;&lt;/code&gt;, and combined with &lt;code&gt;mappend&lt;/code&gt; from the &lt;code&gt;Monoid&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsData&quot;&gt;readsData&lt;/a&gt; p d&lt;/code&gt; es un analizador de tipos de datos donde cada alternativa comienza con un constructor de datos. Analiza el constructor y lo pasa a &lt;code&gt;p&lt;/code&gt; . Parsers para varios constructores se pueden construir con &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsBinary1&quot;&gt;readsBinary1&lt;/a&gt;&lt;/code&gt; , y se combinan con &lt;code&gt;mappend&lt;/code&gt; de la &lt;code&gt;Monoid&lt;/code&gt; clase.</target>
        </trans-unit>
        <trans-unit id="c6e68175751ac7ad4e7ba2cc464dac95d4c7bacf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt; n c n'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary&quot;&gt;readsUnary&lt;/a&gt; n c n'&lt;/code&gt; coincide con el nombre de un constructor de datos unarios y luego analiza su argumento usando &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="565705a2355c81f8c4e2407294fc04361b15cb5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt; n c n'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnary1&quot;&gt;readsUnary1&lt;/a&gt; n c n'&lt;/code&gt; coincide con el nombre de un constructor de datos unarios y luego analiza su argumento usando &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsPrec1&quot;&gt;readsPrec1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d859c3c1c9433e4e320b3df0fb6021b75e688ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnaryWith&quot;&gt;readsUnaryWith&lt;/a&gt; rp n c n'&lt;/code&gt; matches the name of a unary data constructor and then parses its argument using &lt;code&gt;rp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:readsUnaryWith&quot;&gt;readsUnaryWith&lt;/a&gt; rp n c n'&lt;/code&gt; coincide con el nombre de un constructor de datos unarios y luego analiza su argumento usando &lt;code&gt;rp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3c172d2a7ad86490cf652f24903c3649b1aa189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinary1&quot;&gt;showsBinary1&lt;/a&gt; n d x y&lt;/code&gt; produces the string representation of a binary data constructor with name &lt;code&gt;n&lt;/code&gt; and arguments &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinary1&quot;&gt;showsBinary1&lt;/a&gt; n d x y&lt;/code&gt; produce la representaci&amp;oacute;n de cadena de un constructor de datos binarios con nombre &lt;code&gt;n&lt;/code&gt; y argumentos &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;y&lt;/code&gt; , en el contexto de precedencia &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a300ad3475e1a78c005d5d6ddfa8b2b8e08adb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinaryWith&quot;&gt;showsBinaryWith&lt;/a&gt; sp1 sp2 n d x y&lt;/code&gt; produces the string representation of a binary data constructor with name &lt;code&gt;n&lt;/code&gt; and arguments &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsBinaryWith&quot;&gt;showsBinaryWith&lt;/a&gt; sp1 sp2 n d x y&lt;/code&gt; produce la representaci&amp;oacute;n de cadena de un constructor de datos binarios con nombre &lt;code&gt;n&lt;/code&gt; y argumentos &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;y&lt;/code&gt; , en el contexto de precedencia &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d47a16643a75a3c5fab1e61ce0611140717494a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary&quot;&gt;showsUnary&lt;/a&gt; n d x&lt;/code&gt; produces the string representation of a unary data constructor with name &lt;code&gt;n&lt;/code&gt; and argument &lt;code&gt;x&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary&quot;&gt;showsUnary&lt;/a&gt; n d x&lt;/code&gt; produce la representaci&amp;oacute;n de cadena de un constructor de datos unarios con nombre &lt;code&gt;n&lt;/code&gt; y argumento &lt;code&gt;x&lt;/code&gt; , en el contexto de precedencia &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9b0f1af708a14962b0ccd97c41e17ccbff7c404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary1&quot;&gt;showsUnary1&lt;/a&gt; n d x&lt;/code&gt; produces the string representation of a unary data constructor with name &lt;code&gt;n&lt;/code&gt; and argument &lt;code&gt;x&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnary1&quot;&gt;showsUnary1&lt;/a&gt; n d x&lt;/code&gt; produce la representaci&amp;oacute;n de cadena de un constructor de datos unarios con nombre &lt;code&gt;n&lt;/code&gt; y argumento &lt;code&gt;x&lt;/code&gt; , en el contexto de precedencia &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93f3519c64292852fc53002ce6cba77a64fcdd1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnaryWith&quot;&gt;showsUnaryWith&lt;/a&gt; sp n d x&lt;/code&gt; produces the string representation of a unary data constructor with name &lt;code&gt;n&lt;/code&gt; and argument &lt;code&gt;x&lt;/code&gt;, in precedence context &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-classes#v:showsUnaryWith&quot;&gt;showsUnaryWith&lt;/a&gt; sp n d x&lt;/code&gt; produce la representaci&amp;oacute;n de cadena de un constructor de datos unarios con nombre &lt;code&gt;n&lt;/code&gt; y argumento &lt;code&gt;x&lt;/code&gt; , en el contexto de precedencia &lt;code&gt;d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e22281113e9dd1cbe3e2bf5cacab917c5656c03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; functors, sometimes referred to colloquially as &lt;code&gt;Cofunctor&lt;/code&gt;, even though the dual of a &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; is just a &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;. As with &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; the definition of &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; for a given ADT is unambiguous.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; , a veces denominados coloquialmente &lt;code&gt;Cofunctor&lt;/code&gt; , aunque el dual de un &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; es solo un &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; . Al igual que con &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , la definici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; para un ADT dado no es ambigua.</target>
        </trans-unit>
        <trans-unit id="b42c9aeed70440c2245e1bdc0fcccba94bfdeddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; es la operaci&amp;oacute;n m&amp;aacute;s general para trabajar con una clave individual que puede estar o no en un mapa dado.</target>
        </trans-unit>
        <trans-unit id="2ae38a1a4793bb3007d6c675532b7dda58a09433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; se ha trasladado a &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4039febd01d4ad929bda656385767f1832c4f1b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; se ha trasladado a &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac4af7cbb1d410440a980688c976f3fe3c5ff9d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; suelta todas las claves.</target>
        </trans-unit>
        <trans-unit id="79ad5f723e1b7d3813183bfa40d49217771fd0e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; no utiliza elcontexto &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bae7c1b83aea69ace89fdf31420608f09cce39b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d957addf52db3e0213174fd9c1cf59d71de9f689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="723244082bcaaebee329d80c4dcbafe795c08afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; primero &quot;alinear&amp;aacute;&quot; estos mapas por clave:</target>
        </trans-unit>
        <trans-unit id="c66bf261b0f59a091bea447b5e9d24a00bd2565f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f09eafeaf43973b2b4ef052ceb1d95ba6373ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; primero &quot;alinear&amp;aacute;&quot; estos mapas por clave:</target>
        </trans-unit>
        <trans-unit id="2347113bc06e17f32ecf291f762e9885cac24fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; deja todas las entradas solas.</target>
        </trans-unit>
        <trans-unit id="50c663f83c135e82902f8082bebb4a53a45e651f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; suelta todas las claves.</target>
        </trans-unit>
        <trans-unit id="db2a604a33c67a06ac112eaa1312583a9b365e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b90b5585b71b6245394bbd3159a3e9d4e8e2ce16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; primero &quot;alinear&amp;aacute;&quot; estos mapas por clave:</target>
        </trans-unit>
        <trans-unit id="d2913faa37c5de84e945d7fcad5503f42328bb22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="014a1f0b8624ffd74df3114df2903b00b9900bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; primero &quot;alinear&amp;aacute;&quot; estos mapas por clave:</target>
        </trans-unit>
        <trans-unit id="a5df82aec10b0ea129154f63ba5d40a88364ec99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; deja todas las entradas solas.</target>
        </trans-unit>
        <trans-unit id="4891503ae61af9eb3f8ccdce6c57547ed7f1c24e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; es la operaci&amp;oacute;n m&amp;aacute;s general para trabajar con una clave individual que puede estar o no en un mapa dado.</target>
        </trans-unit>
        <trans-unit id="008f5e2416d622a3b4d999e903757574cfc3eb8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; se ha trasladado a &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11d8ccf2d98e7c5a960cd8ff74b21f462cc5d0c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; se ha trasladado a &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b376f16d49952e6c57ad03e3f8587fca1f0a7f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; es la operaci&amp;oacute;n m&amp;aacute;s general para trabajar con una clave individual que puede estar o no en un mapa dado.</target>
        </trans-unit>
        <trans-unit id="7a711168233422c9c61c28211e2d2a8a244ec4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt; se ha trasladado a &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTree&quot;&gt;showTree&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6cbf78f1132522114c918dec1daf7d2cdc9dc3dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; has moved to &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt; se ha trasladado a &lt;code&gt;&lt;a href=&quot;data-intmap-internal-debug#v:showTreeWith&quot;&gt;showTreeWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75fdd3247c18a6f969cc6727a449fcc698c96ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; acts as a barrier to reordering. Multiple &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; operations occur in strict program order. An &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; is never observed to take place ahead of any earlier (in program order) &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; operations, or after any later &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; act&amp;uacute;a como una barrera para el reordenamiento. M&amp;uacute;ltiplesoperaciones &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; ocurren en estricto orden de programa. Nunca se observa queun &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; tenga lugar antes de cualquieroperaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; anterior (en el orden del programa), o despu&amp;eacute;s de cualquieroperaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; posterior.</target>
        </trans-unit>
        <trans-unit id="fc4c8d1102aac436b8f0f5793df40e7ad1a26754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; does not apply the function strictly. This is important to know even if all you are doing is replacing the value. For example, this will leak memory:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; no aplica la funci&amp;oacute;n estrictamente. Es importante saber esto incluso si todo lo que est&amp;aacute; haciendo es reemplazar el valor. Por ejemplo, esto perder&amp;aacute; memoria:</target>
        </trans-unit>
        <trans-unit id="910220a4bf99619613452961e0bdc476f9d31613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; instancia:</target>
        </trans-unit>
        <trans-unit id="17402b6d5cdd5dee68d32bd78a550574909d97f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ix#v:range&quot;&gt;range&lt;/a&gt; (l,u) !! &lt;a href=&quot;data-ix#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;data-ix#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0767e85692cf7971c7128a051317950f4934ce8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ix#v:range&quot;&gt;range&lt;/a&gt; (l,u) &lt;a href=&quot;ghc-list#v:-33--33-&quot;&gt;!!&lt;/a&gt; &lt;a href=&quot;data-ix#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;data-ix#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ix#v:range&quot;&gt;range&lt;/a&gt; (l,u) &lt;a href=&quot;ghc-list#v:-33--33-&quot;&gt;!!&lt;/a&gt; &lt;a href=&quot;data-ix#v:index&quot;&gt;index&lt;/a&gt; (l,u) i == i&lt;/code&gt; , cuando &lt;code&gt;&lt;a href=&quot;data-ix#v:inRange&quot;&gt;inRange&lt;/a&gt; (l,u) i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf08b6775117ab370780f3fa38a2974114429e1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; returns the conjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; devuelve la conjunci&amp;oacute;n de un contenedor de Bools. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , el contenedor debe ser finito; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de unvalor &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; finitamente lejos del extremo izquierdo.</target>
        </trans-unit>
        <trans-unit id="74756822459bc859224ae76949ca4d8451713bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns a tuple where first element is longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that &lt;em&gt;do not satisfy&lt;/em&gt;&lt;code&gt;p&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y una lista &lt;code&gt;xs&lt;/code&gt; , devuelve una tupla donde el primer elemento es el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de &lt;code&gt;xs&lt;/code&gt; de elementos que&lt;em&gt; no satisfacen &lt;/em&gt; &lt;code&gt;p&lt;/code&gt; y el segundo elemento es el resto de la lista:</target>
        </trans-unit>
        <trans-unit id="210cd952b09d40fb666c64e9889ffe2f63e9f918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;data-bool#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb8872c784d6122597f203ddf289f73e17b45998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite list into a circular one, or equivalently, the infinite repetition of the original list. It is the identity on infinite lists.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; vincula una lista finita en una circular, o lo que es lo mismo, la repetici&amp;oacute;n infinita de la lista original. Es la identidad en listas infinitas.</target>
        </trans-unit>
        <trans-unit id="ac47277d251f5f62697c191a6f31151f02eac22c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns the suffix of &lt;code&gt;xs&lt;/code&gt; after the first &lt;code&gt;n&lt;/code&gt; elements, or &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; devuelve el sufijo de &lt;code&gt;xs&lt;/code&gt; despu&amp;eacute;s de los primeros &lt;code&gt;n&lt;/code&gt; elementos, o &lt;code&gt;[]&lt;/code&gt; si &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8a78ffb53dec25cd5b26be402229d91422497247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; devuelve el sufijo restante despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f06c0a3fece83ba56f78ea746b56887b41e3ca0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:intercalate&quot;&gt;intercalate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;xs xss&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;ghc-list#v:concat&quot;&gt;concat&lt;/a&gt; (&lt;a href=&quot;data-list#v:intersperse&quot;&gt;intersperse&lt;/a&gt; xs xss))&lt;/code&gt;. It inserts the list &lt;code&gt;xs&lt;/code&gt; in between the lists in &lt;code&gt;xss&lt;/code&gt; and concatenates the result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:intercalate&quot;&gt;intercalate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;xs xss&lt;/code&gt; es equivalente a &lt;code&gt;(&lt;a href=&quot;ghc-list#v:concat&quot;&gt;concat&lt;/a&gt; (&lt;a href=&quot;data-list#v:intersperse&quot;&gt;intersperse&lt;/a&gt; xs xss))&lt;/code&gt; . Inserta la lista &lt;code&gt;xs&lt;/code&gt; entre las listas en &lt;code&gt;xss&lt;/code&gt; y concatena el resultado.</target>
        </trans-unit>
        <trans-unit id="7aa94079a6d414e0c1d2fbdbedec3c39781ae71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:isSubsequenceOf&quot;&gt;isSubsequenceOf&lt;/a&gt; x y&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt; x (&lt;a href=&quot;data-list#v:subsequences&quot;&gt;subsequences&lt;/a&gt; y)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:isSubsequenceOf&quot;&gt;isSubsequenceOf&lt;/a&gt; x y&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt; x (&lt;a href=&quot;data-list#v:subsequences&quot;&gt;subsequences&lt;/a&gt; y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fea0c7dee1646151d0c41cf7561f5599cf5879c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;f x&lt;/code&gt; returns an infinite list of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;f x&lt;/code&gt; devuelve una lista infinita de aplicaciones repetidas de &lt;code&gt;f&lt;/code&gt; a &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="be77988f619aa34215190c1ce1269e29eb43ec7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; is the strict version of &lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; es la versi&amp;oacute;n estricta de &lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6b355bf6db9bddb3ef42dcc92acecadb62b4464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of strings at newline characters. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; divide una cadena en una lista de cadenas en caracteres de nueva l&amp;iacute;nea. Las cadenas resultantes no contienen nuevas l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="c7c3c526138429917d875b2ee9459d8aae6ac070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; es la negaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-list#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3af813451fee92108450896cacd3ba43d040b727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; returns the disjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; devuelve la disyunci&amp;oacute;n de un contenedor de Bools. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , el contenedor debe ser finito; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de unvalor &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; finitamente lejos del extremo izquierdo.</target>
        </trans-unit>
        <trans-unit id="dda93e3b54862e727a709d21bb63838307051d98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt;&lt;code&gt;x&lt;/code&gt; is an infinite list, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; es una lista infinita, con &lt;code&gt;x&lt;/code&gt; el valor de cada elemento.</target>
        </trans-unit>
        <trans-unit id="bcfd09366714050409a6d88c2b27dc4f007eb601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n x&lt;/code&gt; is a list of length &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt; the value of every element. It is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n x&lt;/code&gt; es una lista de longitud &lt;code&gt;n&lt;/code&gt; con &lt;code&gt;x&lt;/code&gt; el valor de cada elemento. Es una instancia del &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s general, en el que &lt;code&gt;n&lt;/code&gt; puede ser de cualquier tipo integral.</target>
        </trans-unit>
        <trans-unit id="f7447df1dc1e931b7aec5beeb8af2ebc65ca0b42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;&lt;code&gt;xs&lt;/code&gt; returns the elements of &lt;code&gt;xs&lt;/code&gt; in reverse order. &lt;code&gt;xs&lt;/code&gt; must be finite.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; &lt;code&gt;xs&lt;/code&gt; devuelve los elementos de &lt;code&gt;xs&lt;/code&gt; en orden inverso. &lt;code&gt;xs&lt;/code&gt; debe ser finito.</target>
        </trans-unit>
        <trans-unit id="083fae862aceed4ce7a648fe3ae0933d70dfe52c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns a tuple where first element is longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y una lista &lt;code&gt;xs&lt;/code&gt; , devuelve una tupla donde el primer elemento es el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de &lt;code&gt;xs&lt;/code&gt; de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; y el segundo elemento es el resto de la lista:</target>
        </trans-unit>
        <trans-unit id="39942b62d01cd98ef4b7a143e20d00797166b9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; es equivalente a &lt;code&gt;(&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;data-list#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c35e4d5660c3e9b14cdff6f38dd2a70bf23cb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns a tuple where first element is &lt;code&gt;xs&lt;/code&gt; prefix of length &lt;code&gt;n&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; devuelve una tupla donde el primer elemento es elprefijo &lt;code&gt;xs&lt;/code&gt; de longitud &lt;code&gt;n&lt;/code&gt; y el segundo elemento es el resto de la lista:</target>
        </trans-unit>
        <trans-unit id="466cc5d84ae667a0ce4b010de26dcd0964f6b445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;, applied to a list &lt;code&gt;xs&lt;/code&gt;, returns the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;xs&lt;/code&gt; itself if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; , aplicado a una lista &lt;code&gt;xs&lt;/code&gt; , devuelve el prefijo de &lt;code&gt;xs&lt;/code&gt; de longitud &lt;code&gt;n&lt;/code&gt; , o &lt;code&gt;xs&lt;/code&gt; mismo si &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="833b596b8f1f8e4d1db0bf86d8918d3a5fc252ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y una lista &lt;code&gt;xs&lt;/code&gt; , devuelve el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de &lt;code&gt;xs&lt;/code&gt; de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd2190a79520de0176952fdf49bdfd43f47d37aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; es una operaci&amp;oacute;n inversa a las &lt;code&gt;&lt;a href=&quot;data-list#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . Une l&amp;iacute;neas, despu&amp;eacute;s de agregar una nueva l&amp;iacute;nea final a cada una.</target>
        </trans-unit>
        <trans-unit id="2e4a5cb1dbbcdce4dfaa8d5831150a104e973434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt;. It joins words with separating spaces.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; es una operaci&amp;oacute;n inversa a las &lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; . Une palabras con espacios de separaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0c363ff83c052f1a5fda294cf437002219baf309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforms a list of pairs into a list of first components and a list of second components.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforma una lista de pares en una lista de primeros componentes y una lista de segundos componentes.</target>
        </trans-unit>
        <trans-unit id="e9cc205824bdb63c5735dae1cb71a0d4e0ab9fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of words, which were delimited by white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; divide una cadena en una lista de palabras, que fueron delimitadas por espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="58678d61bcb15e844547c926f2c586eeb14116c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; es capaz de fusionar listas, pero est&amp;aacute; restringido a su primer argumento de lista y su lista resultante.</target>
        </trans-unit>
        <trans-unit id="d7e3524c7b6d4f0b5d222eb042dd3e54b3295ebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; es correcto-perezoso:</target>
        </trans-unit>
        <trans-unit id="b350edd90b6983dc064b861394a52cbc6d0f70aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; takes three lists and returns a list of triples, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; toma tres listas y devuelve una lista de triples, an&amp;aacute;loga a &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; . Es capaz de fusionar listas, pero est&amp;aacute; restringido a su primer argumento de lista y su lista resultante.</target>
        </trans-unit>
        <trans-unit id="ee942aefc23cf3c09c0a308b45b8c40b86ed3734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; es capaz de fusionar listas, pero est&amp;aacute; restringido a su primer argumento de lista y su lista resultante.</target>
        </trans-unit>
        <trans-unit id="77e19f46c95897a3af5d30db0ed569e6d75608e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; es correcto-perezoso:</target>
        </trans-unit>
        <trans-unit id="7f2f7b1856e138b6cd58236babce33ec043d03da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:cycle&quot;&gt;cycle&lt;/a&gt; xs&lt;/code&gt; returns the infinite repetition of &lt;code&gt;xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:cycle&quot;&gt;cycle&lt;/a&gt; xs&lt;/code&gt; devuelve la repetici&amp;oacute;n infinita de &lt;code&gt;xs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="054af56edff9d20937f110f2ab9d51b9a0040c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:drop&quot;&gt;drop&lt;/a&gt; n xs&lt;/code&gt; drops the first &lt;code&gt;n&lt;/code&gt; elements off the front of the sequence &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:drop&quot;&gt;drop&lt;/a&gt; n xs&lt;/code&gt; quitalos primeros &lt;code&gt;n&lt;/code&gt; elementos del frente de la secuencia &lt;code&gt;xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="584327d6b02c14505b5ba028043a2580e98bace9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; devuelve el sufijo restante despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e431f5d29be52591f9b0f25baede2048beda700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:filter&quot;&gt;filter&lt;/a&gt; p xs&lt;/code&gt; removes any elements from &lt;code&gt;xs&lt;/code&gt; that do not satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:filter&quot;&gt;filter&lt;/a&gt; p xs&lt;/code&gt; elimina cualquier elemento de &lt;code&gt;xs&lt;/code&gt; que no satisfaga &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71eba07ca95b057934a7e3b90c50564141d3ba82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;, but uses the knowledge that its input is non-empty to produce guaranteed non-empty output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; opera como &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; , pero usa el conocimiento de que su entrada no est&amp;aacute; vac&amp;iacute;a para producir una salida garantizada no vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="f35615eb1cc908ec41c35802dbe3be7ae73d94f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt;, but sorts the list first so that each equivalence class has, at most, one list in the output</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; opera como &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; , pero ordena la lista primero para que cada clase de equivalencia tenga, como m&amp;aacute;ximo, una lista en la salida</target>
        </trans-unit>
        <trans-unit id="1e239517a9fe5ea1cb9170104c3d8431f12aee87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith1&quot;&gt;groupAllWith1&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith1&quot;&gt;groupAllWith1&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupAllWith&quot;&gt;groupAllWith&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97691675b79e2594cbfe7764e120cd20ba5ce58d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;, but uses the provided equality predicate instead of &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; opera como &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; , pero usa el predicado de igualdad proporcionado en lugar de &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6eb7284e219aa035c9e6dfc373f64002dcb799b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy1&quot;&gt;groupBy1&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy1&quot;&gt;groupBy1&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; es a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35233c6d489657e293fdb9ffa426c238f04eee9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; operates like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;, but uses the provided projection when comparing for equality</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; opera como &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; , pero usa la proyecci&amp;oacute;n proporcionada al comparar por igualdad</target>
        </trans-unit>
        <trans-unit id="74b150652bfa039cb7cbac8551f8a113391218f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; is to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith1&quot;&gt;groupWith1&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group1&quot;&gt;group1&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; es a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f0c2464ce2c6c1562dacab4bbc3b28c939a742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:insert&quot;&gt;insert&lt;/a&gt; x xs&lt;/code&gt; inserts &lt;code&gt;x&lt;/code&gt; into the last position in &lt;code&gt;xs&lt;/code&gt; where it is still less than or equal to the next element. In particular, if the list is sorted beforehand, the result will also be sorted.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:insert&quot;&gt;insert&lt;/a&gt; x xs&lt;/code&gt; inserta &lt;code&gt;x&lt;/code&gt; en la &amp;uacute;ltima posici&amp;oacute;n en &lt;code&gt;xs&lt;/code&gt; donde a&amp;uacute;n es menor o igual que el siguiente elemento. En particular, si la lista est&amp;aacute; ordenada de antemano, el resultado tambi&amp;eacute;n se ordenar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e9dad5c32b3e3017653d01d42887df4a7b9c12ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; produces the infinite sequence of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; produce la secuencia infinita de aplicaciones repetidas de &lt;code&gt;f&lt;/code&gt; a &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f96f44d2963142a21029600eb3038c18489dbd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nonEmpty&quot;&gt;nonEmpty&lt;/a&gt;&lt;/code&gt; efficiently turns a normal list into a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; stream, producing &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the input is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nonEmpty&quot;&gt;nonEmpty&lt;/a&gt;&lt;/code&gt; convierte eficientemente una lista normal en unflujo &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; , produciendo &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; si la entrada est&amp;aacute; vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="7dd15d1693ab0823fdd43a8b9040f11bd5d73ffa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; returns a constant stream, where all elements are equal to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; devuelve un flujo constante, donde todos los elementos son iguales &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1d3d7ca5b5b25879b4b578aa032169572f514bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; a finite NonEmpty stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; un flujo no vac&amp;iacute;o finito.</target>
        </trans-unit>
        <trans-unit id="e49ec9e9c616e86e9d7f6c0d3739b142a25da82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a stream of successive reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; es similar a &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero devuelve un flujo de valores reducidos sucesivos desde la izquierda:</target>
        </trans-unit>
        <trans-unit id="c227a365ed6370eb69767b2b0a5537af15cea9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial:</target>
        </trans-unit>
        <trans-unit id="95c281c8e92c5cb31d27882f1ac940f3ec359f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; is the right-to-left dual of &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt;. Note that</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; es el dual de derecha a izquierda de &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; . Tenga en cuenta que</target>
        </trans-unit>
        <trans-unit id="05394d6659db57721ced63e56767a4eb3d58188c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial.</target>
        </trans-unit>
        <trans-unit id="28ce503ec823f7566d170cda10bd6082f83f458f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:some1&quot;&gt;some1&lt;/a&gt; x&lt;/code&gt; sequences &lt;code&gt;x&lt;/code&gt; one or more times.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:some1&quot;&gt;some1&lt;/a&gt; x&lt;/code&gt; secuencias &lt;code&gt;x&lt;/code&gt; una o m&amp;aacute;s veces.</target>
        </trans-unit>
        <trans-unit id="f9968cda9de8e1dcf33132950a70615f3594fc75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt;, behaves the same as &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; , se comporta igual que &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aafd464b59de1f767b81b50e03dfc7e7dba1d729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortWith&quot;&gt;sortWith&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt;, behaves the same as:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:sortWith&quot;&gt;sortWith&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; , se comporta igual que:</target>
        </trans-unit>
        <trans-unit id="a0fe060d05959a2a7dd93da15b7b0431e9a15228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:span&quot;&gt;span&lt;/a&gt; p xs&lt;/code&gt; returns the longest prefix of &lt;code&gt;xs&lt;/code&gt; that satisfies &lt;code&gt;p&lt;/code&gt;, together with the remainder of the stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:span&quot;&gt;span&lt;/a&gt; p xs&lt;/code&gt; devuelve el prefijo m&amp;aacute;s largo de &lt;code&gt;xs&lt;/code&gt; que satisface &lt;code&gt;p&lt;/code&gt; , junto con el resto de la secuencia.</target>
        </trans-unit>
        <trans-unit id="0c11d64a4425643ad97e2869f0795a2189ceb65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:splitAt&quot;&gt;splitAt&lt;/a&gt; n xs&lt;/code&gt; returns a pair consisting of the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt; and the remaining stream immediately following this prefix.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:splitAt&quot;&gt;splitAt&lt;/a&gt; n xs&lt;/code&gt; devuelve un par que consta del prefijo de &lt;code&gt;xs&lt;/code&gt; de longitud &lt;code&gt;n&lt;/code&gt; y el flujo restante inmediatamente despu&amp;eacute;s de este prefijo.</target>
        </trans-unit>
        <trans-unit id="7fa2880890e75dc6279af041efe79530a31916d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:take&quot;&gt;take&lt;/a&gt; n xs&lt;/code&gt; returns the first &lt;code&gt;n&lt;/code&gt; elements of &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:take&quot;&gt;take&lt;/a&gt; n xs&lt;/code&gt; devuelve los primeros &lt;code&gt;n&lt;/code&gt; elementos de &lt;code&gt;xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfff5e0c1961ce72da33aacb70bc3e52b00de0c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; returns the longest prefix of the stream &lt;code&gt;xs&lt;/code&gt; for which the predicate &lt;code&gt;p&lt;/code&gt; holds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; devuelve el prefijo m&amp;aacute;s largo del flujo &lt;code&gt;xs&lt;/code&gt; para el que secumpleel predicado &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aae16adbf20336b4f8d0731d0b64642a76abd6d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt;, behaves the same as &lt;code&gt;&lt;a href=&quot;data-list#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; The rows/columns need not be the same length, in which case &amp;gt; transpose . transpose /= id</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; , se comporta igual que &lt;code&gt;&lt;a href=&quot;data-list#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; Las filas / columnas no necesitan tener la misma longitud, en cuyo caso&amp;gt; transpose. transponer / = id</target>
        </trans-unit>
        <trans-unit id="b72393d40baafdabb1e85c4305e84cd69b6f5e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:uncons&quot;&gt;uncons&lt;/a&gt;&lt;/code&gt; produces the first element of the stream, and a stream of the remaining elements, if any.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:uncons&quot;&gt;uncons&lt;/a&gt;&lt;/code&gt; produce el primer elemento de la secuencia y una secuencia de los elementos restantes, si los hay.</target>
        </trans-unit>
        <trans-unit id="4d772ed13de87ae9af2e65ec8fdf8d4ac8ca681b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unfold&quot;&gt;unfold&lt;/a&gt;&lt;/code&gt; produces a new stream by repeatedly applying the unfolding function to the seed value to produce an element of type &lt;code&gt;b&lt;/code&gt; and a new seed value. When the unfolding function returns &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; instead of a new seed value, the stream ends.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unfold&quot;&gt;unfold&lt;/a&gt;&lt;/code&gt; produce una nueva secuencia aplicando repetidamente la funci&amp;oacute;n de despliegue al valor semilla para producir un elemento de tipo &lt;code&gt;b&lt;/code&gt; y un nuevo valor semilla. Cuando la funci&amp;oacute;n de despliegue devuelve &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; en lugar de un nuevo valor inicial, la secuencia finaliza.</target>
        </trans-unit>
        <trans-unit id="e63e5ab49acf2e686a345f2b62fd1ba3ac5342e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f19443e8765ba74231c687d4090021e7219a2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; es la operaci&amp;oacute;n m&amp;aacute;s general para trabajar con una clave individual que puede estar o no en un mapa dado. Cuando se usa con functors triviales como &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; , a menudo es un poco m&amp;aacute;s lento que los combinadores m&amp;aacute;s especializados como &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; . Sin embargo, cuando el functor no es trivial y la comparaci&amp;oacute;n de claves no es particularmente barata, es la forma m&amp;aacute;s r&amp;aacute;pida.</target>
        </trans-unit>
        <trans-unit id="429ed4dd642c042da53964b688f98097a1d73eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; suelta todas las claves.</target>
        </trans-unit>
        <trans-unit id="c184b6f2a6aba47930850c16198b142c0568ecf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; no utiliza elcontexto &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19a0fb0fc670464e82a77824d6c9a10126a42325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; does not use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e8082e4ea4ec3d98a00b0c4747fe627af06250" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d3f936b3f66cc055ff9f3cb9b908c2fac2ab7aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; primero &quot;alinear&amp;aacute;&quot; estos mapas por clave:</target>
        </trans-unit>
        <trans-unit id="013f79227dfa20297b778672c05e0b43bd63dd8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="793964e4243d7b404fc7cec82a1480ebf9992aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; deja todas las entradas solas.</target>
        </trans-unit>
        <trans-unit id="9d15a27af8d72ad74218e26425c0ff8b310666c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; drops all the keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:dropMissing&quot;&gt;dropMissing&lt;/a&gt;&lt;/code&gt; suelta todas las claves.</target>
        </trans-unit>
        <trans-unit id="ee79e76d399e0968ddbfd51345f30450a442260e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMaybeMissing&quot;&gt;mapMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeMatched&quot;&gt;zipWithMaybeMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09051217dd35d0a7762f1543822b6ef7f86d5218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; primero &quot;alinear&amp;aacute;&quot; estos mapas por clave:</target>
        </trans-unit>
        <trans-unit id="cf3106bb37c3e7721b8913515442f392089c68a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; takes two &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics, a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactic and two maps. It uses the tactics to merge the maps. Its behavior is best understood via its fundamental tactics, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; requiere dost&amp;aacute;cticas &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; , unat&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; y dos mapas. Utiliza las t&amp;aacute;cticas para fusionar los mapas. Su comportamiento se comprende mejor a trav&amp;eacute;s de sus t&amp;aacute;cticas fundamentales, &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:traverseMaybeMissing&quot;&gt;traverseMaybeMissing&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:zipWithMaybeAMatched&quot;&gt;zipWithMaybeAMatched&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bdce71467f909a0006caef007b6a4c488f00f40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; inconsistency</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; Falta inconsistencia</target>
        </trans-unit>
        <trans-unit id="5305ea5f19cbe3258939a5429c4619f0ce44095c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; leaves all the entries alone.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:preserveMissing&quot;&gt;preserveMissing&lt;/a&gt;&lt;/code&gt; deja todas las entradas solas.</target>
        </trans-unit>
        <trans-unit id="b160283fdd8783b175ef47a35061d76f5f823dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039dbc286771a53e2f671d926b118226f632815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; is the most general operation for working with an individual key that may or may not be in a given map. When used with trivial functors like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt;, it is often slightly slower than more specialized combinators like &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;. However, when the functor is non-trivial and key comparison is not particularly cheap, it is the fastest way.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-strict#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; es la operaci&amp;oacute;n m&amp;aacute;s general para trabajar con una clave individual que puede estar o no en un mapa dado. Cuando se usa con functors triviales como &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Map-Internal.html#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; , a menudo es un poco m&amp;aacute;s lento que los combinadores m&amp;aacute;s especializados como &lt;code&gt;&lt;a href=&quot;data-map-strict#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-map-strict#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; . Sin embargo, cuando el functor no es trivial y la comparaci&amp;oacute;n de claves no es particularmente barata, es la forma m&amp;aacute;s r&amp;aacute;pida.</target>
        </trans-unit>
        <trans-unit id="05343277431320ef1bd18b74646a1bba1283ae83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a&lt;/code&gt; is isomorphic to &lt;code&gt;&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt;, but precedes it historically.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a&lt;/code&gt; es isomorfo a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt; , pero lo precede hist&amp;oacute;ricamente.</target>
        </trans-unit>
        <trans-unit id="88e7ab0a03c3bd6f249b097acf0e14dc54a28943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-monoid#t:Last&quot;&gt;Last&lt;/a&gt; a&lt;/code&gt; is isomorphic to &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a)&lt;/code&gt;, and thus to &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#t:Last&quot;&gt;Last&lt;/a&gt; a&lt;/code&gt; es isom&amp;oacute;rfica a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt; a)&lt;/code&gt; y, por tanto, a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Dual&quot;&gt;Dual&lt;/a&gt; (&lt;a href=&quot;data-monoid#t:Alt&quot;&gt;Alt&lt;/a&gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6135655f2ed4d64be31cb32841c5492efb402109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; Instancia de Ord :</target>
        </trans-unit>
        <trans-unit id="8d84ec0f4f68b48892f925c1b4c9273bf7fe62a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-proxy#t:Proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/code&gt; is a type that holds no data, but has a phantom parameter of arbitrary type (or even kind). Its use is to provide type information, even though there is no value available of that type (or it may be too costly to create one).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-proxy#t:Proxy&quot;&gt;Proxy&lt;/a&gt;&lt;/code&gt; es un tipo que no contiene datos, pero tiene un par&amp;aacute;metro fantasma de tipo arbitrario (o incluso tipo). Su uso es para proporcionar informaci&amp;oacute;n de tipo, aunque no hay un valor disponible de ese tipo (o puede ser demasiado costoso crear uno).</target>
        </trans-unit>
        <trans-unit id="d79a8f4b37526f6439cf4cc61e020ede1b643b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-proxy#v:asProxyTypeOf&quot;&gt;asProxyTypeOf&lt;/a&gt;&lt;/code&gt; is a type-restricted version of &lt;code&gt;&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;. It is usually used as an infix operator, and its typing forces its first argument (which is usually overloaded) to have the same type as the tag of the second.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-proxy#v:asProxyTypeOf&quot;&gt;asProxyTypeOf&lt;/a&gt;&lt;/code&gt; es una versi&amp;oacute;n de tipo restringido de &lt;code&gt;&lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; . Por lo general, se usa como un operador infijo, y su escritura obliga a su primer argumento (que generalmente est&amp;aacute; sobrecargado) a tener el mismo tipo que la etiqueta del segundo.</target>
        </trans-unit>
        <trans-unit id="0d3b1fa648ace6d53bef761e60145ede65d3b6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ratio#v:approxRational&quot;&gt;approxRational&lt;/a&gt;&lt;/code&gt;, applied to two real fractional numbers &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;epsilon&lt;/code&gt;, returns the simplest rational number within &lt;code&gt;epsilon&lt;/code&gt; of &lt;code&gt;x&lt;/code&gt;. A rational number &lt;code&gt;y&lt;/code&gt; is said to be &lt;em&gt;simpler&lt;/em&gt; than another &lt;code&gt;y'&lt;/code&gt; if</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ratio#v:approxRational&quot;&gt;approxRational&lt;/a&gt;&lt;/code&gt; , aplicado a dos n&amp;uacute;meros fraccionarios reales &lt;code&gt;x&lt;/code&gt; , y &lt;code&gt;epsilon&lt;/code&gt; , devuelve el n&amp;uacute;mero racional m&amp;aacute;s simple dentro de &lt;code&gt;epsilon&lt;/code&gt; de &lt;code&gt;x&lt;/code&gt; . Sedice queun n&amp;uacute;mero racional &lt;code&gt;y&lt;/code&gt; es&lt;em&gt; m&amp;aacute;s simple&lt;/em&gt; que otro &lt;code&gt;y'&lt;/code&gt; si</target>
        </trans-unit>
        <trans-unit id="dfcf97bb565223c6eb3b9255f09be91cc447203d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y &amp;lt;= &lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y &amp;lt;= &lt;a href=&quot;data-ratio#v:denominator&quot;&gt;denominator&lt;/a&gt; y'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="494ad043d6868962e52a2773f2aa5a2535882016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Arg&quot;&gt;Arg&lt;/a&gt;&lt;/code&gt; isn't itself a &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; in its own right, but it can be placed inside &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Max&quot;&gt;Max&lt;/a&gt;&lt;/code&gt; to compute an arg min or arg max.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Arg&quot;&gt;Arg&lt;/a&gt;&lt;/code&gt; no es en s&amp;iacute; mismo un &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; por derecho propio, pero se puede colocar dentro de &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Max&quot;&gt;Max&lt;/a&gt;&lt;/code&gt; para calcular un arg min o arg max.</target>
        </trans-unit>
        <trans-unit id="85a172a729ba1788b3aeb5176a5da93886becde4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; is effectively &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; with a better instance of &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, built off of an underlying &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instead of an underlying &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; es efectivamente &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; con una mejor instancia de &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; , construido fuera de un valor subyacente &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; en lugar de un valor subyacente &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cca66035d14498dff127111ab13edf2f86047cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt; p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt; (not . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt; p&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt; (not . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8caccf3a1775fed521dc05355f03674544d090a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakr&quot;&gt;breakr&lt;/a&gt; p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt; (not . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:breakr&quot;&gt;breakr&lt;/a&gt; p&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt; (not . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcacd5db44abf09d0a398b9275ce2e7be37d4dff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="349549513fa6e9a97510a4275de631ceeb9ba95b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; finds the leftmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; busca el &amp;iacute;ndice m&amp;aacute;s a la izquierda del elemento especificado, si est&amp;aacute; presente, y en caso contrario &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4df59ca3d89b7dae91c6e31367dc1e0860a390a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexL&quot;&gt;elemIndexL&lt;/a&gt;&lt;/code&gt; finds the leftmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d0d95868c96af6e27bcc9a9570707b0dbe5779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; finds the rightmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; busca el &amp;iacute;ndice m&amp;aacute;s a la derecha del elemento especificado, si est&amp;aacute; presente, y en caso contrario &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2afe2c3b77000f687143a284cf5dffe5c00981b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndexR&quot;&gt;elemIndexR&lt;/a&gt;&lt;/code&gt; finds the rightmost index of the specified element, if it is present, and otherwise &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061c4174b412d693dcfc45ad346e8e75d113372b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesL&quot;&gt;elemIndicesL&lt;/a&gt;&lt;/code&gt; finds the indices of the specified element, from left to right (i.e. in ascending order).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesL&quot;&gt;elemIndicesL&lt;/a&gt;&lt;/code&gt; busca los &amp;iacute;ndices del elemento especificado, de izquierda a derecha (es decir, en orden ascendente).</target>
        </trans-unit>
        <trans-unit id="76efe3cf412c604fb24f66dd2ff0725296c8be3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesR&quot;&gt;elemIndicesR&lt;/a&gt;&lt;/code&gt; finds the indices of the specified element, from right to left (i.e. in descending order).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:elemIndicesR&quot;&gt;elemIndicesR&lt;/a&gt;&lt;/code&gt; busca los &amp;iacute;ndices del elemento especificado, de derecha a izquierda (es decir, en orden descendente).</target>
        </trans-unit>
        <trans-unit id="62adb3cdaec36b26dbe66c755e69747f56a2bb08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexL&quot;&gt;findIndexL&lt;/a&gt; p xs&lt;/code&gt; finds the index of the leftmost element that satisfies &lt;code&gt;p&lt;/code&gt;, if any exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexL&quot;&gt;findIndexL&lt;/a&gt; p xs&lt;/code&gt; encuentra el &amp;iacute;ndice del elemento m&amp;aacute;s a la izquierda que satisface &lt;code&gt;p&lt;/code&gt; , si existe alguno.</target>
        </trans-unit>
        <trans-unit id="2ea02d02ac5428cd396fc026379247aa243b8682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexR&quot;&gt;findIndexR&lt;/a&gt; p xs&lt;/code&gt; finds the index of the rightmost element that satisfies &lt;code&gt;p&lt;/code&gt;, if any exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndexR&quot;&gt;findIndexR&lt;/a&gt; p xs&lt;/code&gt; encuentra el &amp;iacute;ndice del elemento m&amp;aacute;s a la derecha que satisface &lt;code&gt;p&lt;/code&gt; , si existe alguno.</target>
        </trans-unit>
        <trans-unit id="9279c9214a03e64428bb02c5943066d81d1abcc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesL&quot;&gt;findIndicesL&lt;/a&gt; p&lt;/code&gt; finds all indices of elements that satisfy &lt;code&gt;p&lt;/code&gt;, in ascending order.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesL&quot;&gt;findIndicesL&lt;/a&gt; p&lt;/code&gt; encuentra todos los &amp;iacute;ndices de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; , en orden ascendente.</target>
        </trans-unit>
        <trans-unit id="a7e7261cd25b3d825e8fdce65620db0c440b194d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesR&quot;&gt;findIndicesR&lt;/a&gt; p&lt;/code&gt; finds all indices of elements that satisfy &lt;code&gt;p&lt;/code&gt;, in descending order.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:findIndicesR&quot;&gt;findIndicesR&lt;/a&gt; p&lt;/code&gt; encuentra todos los &amp;iacute;ndices de elementos que satisfacen &lt;code&gt;p&lt;/code&gt; , en orden descendente.</target>
        </trans-unit>
        <trans-unit id="e8f64face9d076d01d64b8a54df12491cc3e7d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; es una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; que tambi&amp;eacute;n proporciona acceso al &amp;iacute;ndice de cada elemento.</target>
        </trans-unit>
        <trans-unit id="83961628ff65837cd3310448b4a835452d5495fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldlWithIndex&quot;&gt;foldlWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96009108889952d16914b9ab7ccdb823f360a66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; es una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; que tambi&amp;eacute;n proporciona acceso al &amp;iacute;ndice de cada elemento.</target>
        </trans-unit>
        <trans-unit id="480354c796fae071fc816fa7abac9b01052d8cc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:foldrWithIndex&quot;&gt;foldrWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that also provides access to the index of each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4db6ab233b28447dd68b4c782c2ae20cbe02fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:fromFunction&quot;&gt;fromFunction&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:intersperse&quot;&gt;intersperse&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;data-sequence#v:cycleTaking&quot;&gt;cycleTaking&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:fromFunction&quot;&gt;fromFunction&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:intersperse&quot;&gt;intersperse&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-sequence#v:cycleTaking&quot;&gt;cycleTaking&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc238de9d9d47fc4e5fa2aa4d2033667cd7f02b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9b9543c71540293f3ba846ef7b16bd03296fda3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, and makes \( O(\log n) \) calls to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; es unaversi&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; y realiza llamadas \ (O (\ log n) \) a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b7bf3edc950c74a56b8f5fafc89d4e5267297d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateA&quot;&gt;replicateA&lt;/a&gt;&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, and makes \( O(\log n) \) calls to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68643ac47486e773c84168944b45f31691ec1371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; is a sequence counterpart of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; es una secuencia hom&amp;oacute;loga de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8b8417783932edb90faf79d724db2fa0ae85836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt; is a sequence counterpart of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:replicateM&quot;&gt;replicateM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054a7ca578764ac27c8ffd1aa457876e90476850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a sequence of reduced values from the left:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; es similar a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , pero devuelve una secuencia de valores reducidos desde la izquierda:</target>
        </trans-unit>
        <trans-unit id="747f164f3e3e8ce155637740756db7691ef80099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; is similar to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, but returns a sequence of reduced values from the left:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14fb9573b4bd472b455f2e5e149321aca041d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; that has no starting value argument:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl1&quot;&gt;scanl1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial:</target>
        </trans-unit>
        <trans-unit id="2391c9de1ef61ba5444f9c5f78a01c0b1ea066f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; is the right-to-left dual of &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; es el dual de derecha a izquierda de &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanl&quot;&gt;scanl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cecf7b887bfa3e2a7cfbdeb00889eb6d41cfe5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; that has no starting value argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr1&quot;&gt;scanr1&lt;/a&gt;&lt;/code&gt; es una variante de &lt;code&gt;&lt;a href=&quot;data-sequence#v:scanr&quot;&gt;scanr&lt;/a&gt;&lt;/code&gt; que no tiene un argumento de valor inicial.</target>
        </trans-unit>
        <trans-unit id="de41aee0a3a6df5296ef619f27fac555f8859179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p (&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; xs))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba12c6568bcc79d6937e06fa90d530b2ff5adcbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; that also offers access to the index of each element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; es una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; que tambi&amp;eacute;n ofrece acceso al &amp;iacute;ndice de cada elemento.</target>
        </trans-unit>
        <trans-unit id="c17246ae5777e24eb87beb59d57fc5f68d6f9769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:traverseWithIndex&quot;&gt;traverseWithIndex&lt;/a&gt;&lt;/code&gt; is a version of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; that also offers access to the index of each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b95f1dbacdc04439227115b9f4757db6b5aa836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; es equivalente a &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd53bff77f3a10cf0251fbab7a2c35cc773e04d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence#v:unfoldl&quot;&gt;unfoldl&lt;/a&gt; f x&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:reverse&quot;&gt;reverse&lt;/a&gt; (&lt;a href=&quot;data-sequence#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; swap . f) x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7a51c6fd275d001537d03bea729af274e113b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeIQ&quot;&gt;mergeIQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedQueue&quot;&gt;IndexedQueue&lt;/a&gt;&lt;/code&gt;s, taking into account the original position of the elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeIQ&quot;&gt;mergeIQ&lt;/a&gt;&lt;/code&gt; fusiona dos &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedQueue&quot;&gt;IndexedQueue&lt;/a&gt;&lt;/code&gt; s, teniendo en cuenta la posici&amp;oacute;n original de los elementos.</target>
        </trans-unit>
        <trans-unit id="29e3eecfe9a58cf32d6258380ce6d3ecb89a8837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeITQ&quot;&gt;mergeITQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedTaggedQueue&quot;&gt;IndexedTaggedQueue&lt;/a&gt;&lt;/code&gt;s, based on the tag value, taking into account the original position of the elements.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeITQ&quot;&gt;mergeITQ&lt;/a&gt;&lt;/code&gt; fusiona dos &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:IndexedTaggedQueue&quot;&gt;IndexedTaggedQueue&lt;/a&gt;&lt;/code&gt; s, en funci&amp;oacute;n del valor de la etiqueta, teniendo en cuenta la posici&amp;oacute;n original de los elementos.</target>
        </trans-unit>
        <trans-unit id="ef4a1b58344038614face687cc10d222f6eb5e5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeQ&quot;&gt;mergeQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:Queue&quot;&gt;Queue&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeQ&quot;&gt;mergeQ&lt;/a&gt;&lt;/code&gt; fusiona dos &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:Queue&quot;&gt;Queue&lt;/a&gt;&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="eadfd2f5a60225cf2b4b2522a244deea77577331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeTQ&quot;&gt;mergeTQ&lt;/a&gt;&lt;/code&gt; merges two &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:TaggedQueue&quot;&gt;TaggedQueue&lt;/a&gt;&lt;/code&gt;s, based on the tag value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:mergeTQ&quot;&gt;mergeTQ&lt;/a&gt;&lt;/code&gt; fusiona dos &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#t:TaggedQueue&quot;&gt;TaggedQueue&lt;/a&gt;&lt;/code&gt; s, seg&amp;uacute;n el valor de la etiqueta.</target>
        </trans-unit>
        <trans-unit id="389439fa053a85ce69e40e0adcb65eaf2ceac3a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-set#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-set#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt;, but works only when &lt;code&gt;f&lt;/code&gt; is strictly increasing. &lt;em&gt;The precondition is not checked.&lt;/em&gt; Semi-formally, we have:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-set#v:mapMonotonic&quot;&gt;mapMonotonic&lt;/a&gt; f s == &lt;a href=&quot;data-set#v:map&quot;&gt;map&lt;/a&gt; f s&lt;/code&gt; , pero funciona solo cuando &lt;code&gt;f&lt;/code&gt; aumenta estrictamente. &lt;em&gt;No se comprueba la condici&amp;oacute;n previa. &lt;/em&gt;De manera semiformal, tenemos:</target>
        </trans-unit>
        <trans-unit id="c4501fd973aa63bdd700bbf1dea84ac185fe54b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of strings at newline characters. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; divide una cadena en una lista de cadenas en caracteres de nueva l&amp;iacute;nea. Las cadenas resultantes no contienen nuevas l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="338f0b65219243f996d4bd0a9df7839ef28540da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; es una operaci&amp;oacute;n inversa a las &lt;code&gt;&lt;a href=&quot;data-string#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; . Une l&amp;iacute;neas, despu&amp;eacute;s de agregar una nueva l&amp;iacute;nea final a cada una.</target>
        </trans-unit>
        <trans-unit id="15579fcea85a7ce171343c2db61ceebf2ba06fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt;. It joins words with separating spaces.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; es una operaci&amp;oacute;n inversa a las &lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; . Une palabras con espacios de separaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9bf9d8612f422a3804220034c29ed3447bc56b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of words, which were delimited by white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; divide una cadena en una lista de palabras, que fueron delimitadas por espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="8da7f5dd24b977f3e8d3da7980b697bc40240950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeLatin1&quot;&gt;decodeLatin1&lt;/a&gt;&lt;/code&gt; is semantically equivalent to &lt;code&gt;Data.Text.pack . Data.ByteString.Char8.unpack&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-encoding#v:decodeLatin1&quot;&gt;decodeLatin1&lt;/a&gt;&lt;/code&gt; es sem&amp;aacute;nticamente equivalente a &lt;code&gt;Data.Text.pack . Data.ByteString.Char8.unpack&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5210c279f2048323795906a4d0d43dc5d4273ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs&lt;/code&gt; devuelve el sufijo restante despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="539da5209b7a20f470b14e79366f65b244d088f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, applied to a binary operator, a starting value (typically the right-identity of the operator), and a stream, reduces the stream using the binary operator, from right to left.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; , aplicado a un operador binario, un valor inicial (t&amp;iacute;picamente la identidad derecha del operador) y un flujo, reduce el flujo usando el operador binario, de derecha a izquierda.</target>
        </trans-unit>
        <trans-unit id="3d197d08dbdd44037e2bd5a659b157af2a664c3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a stream, returns the longest prefix (possibly empty) of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; , aplicado a un predicado &lt;code&gt;p&lt;/code&gt; y un flujo, devuelve el prefijo m&amp;aacute;s largo (posiblemente vac&amp;iacute;o) de los elementos que satisfacen &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d31f65b4e2ca1004f666bfa0e541865796fb44f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite, non-empty &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; into a circular one, or equivalently, the infinite repetition of the original &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; vincula un &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; o finito y no vac&amp;iacute;oen uno circular, o lo que es lo mismo, la repetici&amp;oacute;n infinita del &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; o original.</target>
        </trans-unit>
        <trans-unit id="089e0f9b13fe124baa9f8fda724f4357a753ff47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; returns an infinite &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:iterate&quot;&gt;iterate&lt;/a&gt; f x&lt;/code&gt; devuelve un &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; infinitode aplicaciones repetidas de &lt;code&gt;f&lt;/code&gt; a &lt;code&gt;x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="73c1e290e2545227a128295edcd8bbf2ff598503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; is an infinite &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt; x&lt;/code&gt; es un &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; infinito, con &lt;code&gt;x&lt;/code&gt; el valor de cada elemento.</target>
        </trans-unit>
        <trans-unit id="203e04e7646f439ab01ff7c92d4ec3efdae219c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; is time returned by system clock functions. Its semantics depends on the clock function, but the epoch is typically the beginning of 1970. Note that &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; of 1E9 to 2E9-1 can be used to represent leap seconds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-time-clock-system#t:SystemTime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt; es el tiempo devuelto por las funciones del reloj del sistema. Su sem&amp;aacute;ntica depende de la funci&amp;oacute;n del reloj, pero la &amp;eacute;poca suele ser el comienzo de 1970. Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; de 1E9 a 2E9-1 se pueden usar para representar los segundos intercalares.</target>
        </trans-unit>
        <trans-unit id="4e65df23d7b285300818c83d4a41208886c38a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;data-time-format#v:knownTimeZones&quot;&gt;knownTimeZones&lt;/a&gt;&lt;/code&gt; contains only the ten time-zones mentioned in RFC 822 sec. 5: &quot;UT&quot;, &quot;GMT&quot;, &quot;EST&quot;, &quot;EDT&quot;, &quot;CST&quot;, &quot;CDT&quot;, &quot;MST&quot;, &quot;MDT&quot;, &quot;PST&quot;, &quot;PDT&quot;. Note that the parsing functions will regardless parse &quot;UTC&quot;, single-letter military time-zones, and +HHMM format.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-time-format#v:knownTimeZones&quot;&gt;knownTimeZones&lt;/a&gt;&lt;/code&gt; contiene solo las diez zonas horarias mencionadas en RFC 822 sec. 5: &quot;UT&quot;, &quot;GMT&quot;, &quot;EST&quot;, &quot;EDT&quot;, &quot;CST&quot;, &quot;CDT&quot;, &quot;MST&quot;, &quot;MDT&quot;, &quot;PST&quot;, &quot;PDT&quot;. Tenga en cuenta que las funciones de an&amp;aacute;lisis analizar&amp;aacute;n independientemente &quot;UTC&quot;, las zonas horarias militares de una sola letra y el formato + HHMM.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
