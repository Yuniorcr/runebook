<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="de92db23991f110a5535cb1a0f0da9dbe65ef0b4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Case conversion&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversi&amp;oacute;n de caso&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="726d475db8df0ca5e2ed50e55301273ac8711672" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Catchable failure&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Falla detectable&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="32bd769272917f67d9d48c79aed34a78f3870efb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Catching all exceptions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Atrapando todas las excepciones&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="eb03365505347926b1220623be1335b54575e30d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Character encodings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Codificaciones de caracteres&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3e5fe0fe4525c774ee32b2e62e212b83c5c371a6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Checking file existence and permissions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Comprobaci&amp;oacute;n de la existencia y los permisos del archivo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="47fe9babd25675a037ac98f28d0d7f5366121f67" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Classifying I/O errors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Clasificaci&amp;oacute;n de errores de E / S&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="43c4c7f245d6c8ee7bdaa7ff4bc29c7a820325c7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Closing files&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Cerrar archivos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9254043faf4c250f80219eee0299fdba39e4623e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Combinators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Combinators&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d281ad702a8d6dc54e92575ce3f3a1f801b79d65" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Combined allocation and marshalling&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Asignaci&amp;oacute;n y clasificaci&amp;oacute;n combinadas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9394829b672e8aad09d02a6093a3fe10c342d37a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Combining documents&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Combinar documentos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="89390543f4a101a41db21b5da2014e4782c78668" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Common &lt;code&gt;errno&lt;/code&gt; symbols&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;S&amp;iacute;mbolos de &lt;code&gt;errno&lt;/code&gt; comunes&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="da8c2ebb5026c4c03ebcb5b0272cb525db112bad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Compose&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Compose&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cbc825e16917318e3e4f38e15d29199cdc14dbad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conditional execution of monadic expressions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Ejecuci&amp;oacute;n condicional de expresiones mon&amp;aacute;dicas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f1744e479f00dd725a29d32b9a423ed31218d165" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Constructing Builders&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Construyendo constructores&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5cebc8e6c711dd25758035f7880b13007c082c93" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Constructing names&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Construyendo nombres&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4e357b9a349398dbc024af07837e5b7016296ba1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Construction&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Construction&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f93e7af9c257e298d09b59e0d43af8bff6a313ed" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Constructors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Constructors&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b4c3d6b1f41be07100cceabd8af5f40cdf1fde9b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Control-C handling on Unix&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Manejo de Control-C en Unix&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bef3178543045e650997b1afb4c9738d25885720" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Controllable error handling&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Manejo controlable de errores&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fbd4f9bab93661215b82e532fd557852025ea2c8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Convenience function: algebraic data types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funci&amp;oacute;n de conveniencia: tipos de datos algebraicos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6fccf3793c9270ea28ef57e78576144f911b35f1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Convenience functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones de conveniencia&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="903dd38607e462d8846b8ab3216d7e3b5507bdb6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversion to and from Builders&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversi&amp;oacute;n ay desde constructores&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f80ced986705094edbae6db2de3a9155a3314711" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversion&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversion&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cd9bfa298fe01daace936a140ea2cc0ce41d18b2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversions to/from &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversiones a / desde &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0c55b97d1c6b1040a1b5afa93af86653ae99f9a4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversions to/from &lt;code&gt;BigNat&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cb35491b34521b62dbddf9d853357f16f22454" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Converting CStrings to ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversi&amp;oacute;n de CStrings en ByteStrings&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="aa6dacfce55b59a3f703c9db5bfda0fcc61f8f25" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Converting file descriptors to/from Handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversi&amp;oacute;n de descriptores de archivo a / desde Handles&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="448e5db4892c788c6a58778c2cb39f51d4e035f8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Converting from &lt;code&gt;String&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversi&amp;oacute;n de &lt;code&gt;String&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ed7d0b419d1dea031354ba52eb4d324855ef7890" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Copying&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Copying&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d1c55be9bc1b6858cb4d060a89c976a7c8fea1b1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Counting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Counting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="44494bd40326ffcced77fc1ae0277dd81c00fb31" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Covariant maps for tactics&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Mapas covariantes para t&amp;aacute;cticas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="07f5eda6f3a17676977c950d753597e32da3ce84" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Creation&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Creation&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6ee6030b0c7cffe5598b0bdc869f5b9bc8304cc0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Current working directory&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Directorio de trabajo actual&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c4f6bae2bea8fd82c3c8110b6662c437803e78cc" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deadlock&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Deadlock&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a4997fdc08f0e925d2a2f3e0fda43e77cda7f73d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Declarations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Declarations&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="019c4999211cef1c29bfb30c94c621ce50822d38" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Decoding Floats/Doubles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Decodificaci&amp;oacute;n de flotadores / dobles&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fabf5428ac4931f4f8636b1b0e2502c123e14b28" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Decoding Ints&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Decodificaci&amp;oacute;n de Ints&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cf5535461b487dd51145eaec710cc38f488973bd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Decoding Words&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Decodificaci&amp;oacute;n de palabras&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="37bb26bfe43372af1801efb6f187aad1b4912fa0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deconstructing names&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Deconstruyendo nombres&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b01ccdcf52093b7afdb6b7e33de8137db710ff35" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Defining datatype-generic functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Definici&amp;oacute;n de funciones gen&amp;eacute;ricas de tipo de datos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="464400aa0bf46a0cef0d68d67c97ecd1cf82c73b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Delimited continuations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Continuaciones delimitadas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="04e76fc2a21f9edc14a43c469047a2a458142e79" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deprecated general combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funci&amp;oacute;n de combinaci&amp;oacute;n general obsoleta&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="844e07b5276cbb960a46f2b1dd19f40df649465a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deprecated&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Deprecated&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="986ad4f00c6f9db6361b9f2319045940c72be650" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Derived and fundamental representation types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Tipos de representaci&amp;oacute;n derivados y fundamentales&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8c56e4842e35b19a71c6a3c53ec6d93a725c9d1c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Derived combinators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Combinadores derivados&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="73b914d3150880a84ccdc6f7cf2875920fad0568" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Detecting the end of input&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Detectando el final de la entrada&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8fdce8726322a770cfe245e4911b7787ea3f9a9a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Difference&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Difference&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="40240641752f00623c1b52b1cd6ca0d244d05a05" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Disjoint&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Disjoint&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a00bd8c36b8b13e669fab8ff8eb370b5eaf4b4e1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Duplicating file descriptors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Descriptores de archivos duplicados&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ac4d6c796f74689cdf1bffd445751c7087260af6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Dynamic allocation&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Asignaci&amp;oacute;n din&amp;aacute;mica&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b1bee556cff42fef20aad4ff082cfb5ced751a8f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Encoding as UTF-8&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Codificaci&amp;oacute;n como UTF-8&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fb6c44757d7d77a5086bead6927872131c3398cd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Example&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Example&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9c20a7e285fcaf94ffd5baf1776f3a87ef5f54fb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Exception handling in the I/O monad&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Manejo de excepciones en la m&amp;oacute;nada de E / S&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ac20923c6b6cc582d077c6664469f2d95af92720" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Execution&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Execution&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="996d12dbee717592eac755aa32e26112db771811" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Exiting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Exiting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3a41aab85ecea08fd0a8268cea36d7af4d64d11c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Export&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Export&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d0ccc16fa174bc132bbb6c51ef5284f2548189fa" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Expressions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Expressions&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c520c19a3ca4272f278911eeed1eea9202cd7927" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;File locking&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Bloqueo de archivos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4043527142c977cd69d9ae88beb15c7add86dbf3" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;File options&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Opciones de archivo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="078d79b000e812b227514f61bb4e8450bb41d179" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Files&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Files&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1a62237430f585ced78865b90f3332d78d91ccac" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Filling up memory area with required values&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Llenar el &amp;aacute;rea de memoria con los valores requeridos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7e4aec07f1be7140d59cf704074d6d02e45f0581" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Finding the length&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Encontrar la longitud&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cbccb2924a454e44f7c89b65c2c7191af7613693" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Floating types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Tipos flotantes&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7e43c60dee6a8af2ce1020881e1195f93c5e7ead" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Flushing the buffer state&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Limpiar el estado del b&amp;uacute;fer&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d8fdc73f0d707594649f3b22c036006b0f7271da" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Folds and traversals&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pliegues y transversales&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b2458eb1b536930ea029228414f7f441f273b26f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;For binary constructors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Para constructores binarios&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c6f39bdc50c6bcaf0ef3cb32645216cb5a8ef462" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Formatting numbers as text&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Dar formato a n&amp;uacute;meros como texto&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b341cbf31bdc011355439da9497801e044990250" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From Ascending Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;De listas ascendentes&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0751dbf95ef07af008cd9cfa11156104b4bc58ff" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From Descending Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;De listas descendentes&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bf34f66f2fb389020f2fe9942da9038fa102a6ad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From Unordered Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;De listas desordenadas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f0581ae5175bfc92324c7dea4cdfdbd429c1b926" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From strings to constructors and vice versa: all data types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;De cadenas a constructores y viceversa: todos los tipos de datos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2e56a518cb3a5662e2860cb9c14461119bee8900" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Functions on strings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones en cadenas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="11f45421782ed2db13cb39213caa3e0d391bf03f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;General combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funci&amp;oacute;n de combinaci&amp;oacute;n general&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="41b608e8d5ba0c787ffab9c48fd26a90080dd5ee" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;General combining functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones de combinaci&amp;oacute;n generales&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1a5bb0e63a08c8603af1a89d57936409588daf17" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;General rendering&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Representaci&amp;oacute;n general&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cd4351572f1189512dc7ad1db59dadae4aa8a424" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generalisations of list functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Generalizaciones de funciones de lista&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c41e06d430edaf9885e376104305200ab7187ee1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generating and unfolding ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Generando y desplegando ByteStrings&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4b7a5527b2681d3bd89540da57a04b355c8161f8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generation and unfolding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Generaci&amp;oacute;n y desarrollo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="31f6ef509a592006a4b5ad7e0fdd3c929c4f368b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generative Recursion&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a8fcbcf7a48c6a9c07dd50fbf9f27683aa3783" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generic constructor classes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Clases de constructores gen&amp;eacute;ricos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="93df86e480f9a87321a41e85942228858083d030" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Algorithms&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Algoritmos de gr&amp;aacute;ficos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="83753776da45e234c33f0708db289c1c5ffe030f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Construction&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Construcci&amp;oacute;n gr&amp;aacute;fica&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bf90b8089f50dcedf607be04a023abaa4f6d0c9a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Properties&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Propiedades del gr&amp;aacute;fico&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1065c8a4eef04a59375def9d5b497c03fa014388" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Transformations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Transformaciones gr&amp;aacute;ficas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9a9a52adb15fe8d1830bb8b0fefb895e7919835c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Guards for IO operations that may fail&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Protectores para operaciones IO que pueden fallar&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="09f23233a1c95c567f556f732a2806ad6ddf3b74" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Handle properties&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Manejar propiedades&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5c656a45b9c3df26413583f03fd54cc4bbcf1d05" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Handling Type-specific Modifiers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Manejo de modificadores espec&amp;iacute;ficos de tipo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0c967d56d79187f7c5a8e4f919406739484963e6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Haskell threads and Operating System threads&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Hilos de Haskell y subprocesos del sistema operativo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c762d349e0425233d7c8d2b4c8a15329ca7bd369" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Haskellish interface to memcpy and memmove&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Interfaz de Haskellish para memcpy y memmove&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fb000c42917662b68f0437bcfe06266815aeea7c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Heap fragmentation&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Fragmentaci&amp;oacute;n de mont&amp;oacute;n&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d29fbfd02c8897f7bfdaaeac8092c577168a301c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;History&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;History&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c6207dc24f5f68499adeb9905a5168fdb3763c7e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Host-endian, unaligned writes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Escrituras no alineadas de host-endian&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3ee386d24c95d8125df4b790913b3e0d4cd8a907" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;I/O with Handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;E / S con manijas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b1d253e7a2612d3356ada47d620ef6f5d0b6e2b7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Import&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Import&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5790a838d110b13d66bc0d6bb5ced5ea3c08d7f4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Indexing with predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Indexaci&amp;oacute;n con predicados&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="02049e0949a2cc607a771b17dc467849fd3b53de" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Indexing&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Indexing&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9621aa5914499d89446e4f556dc7e557c4e8fa2f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Infinite ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;ByteStrings infinitos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2db10118a8bce66b63638a35232ce66eebbd3522" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Infinite lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Listas infinitas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3286aafca39403a76bce8a1fb7bec38d678dc134" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Insertion/removal&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Insertion/removal&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="dbaaa75f9b923aa8d8387c4fd1080eb435097570" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Inspecting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Inspecting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3be2d22762a3ce4f0c72e7a8f975395cba23f9d5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Int results&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Resultados int&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b511abb310b1a80c188ec476081c7476da0b49eb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Integral types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Tipos integrales&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6afdef42dbe12dc4cdb0eb2edd2e393f4838026a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Interpreter monad&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;M&amp;oacute;nada int&amp;eacute;rprete&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="340af3d4f5e7c19a47d18c08639b68d67ebbc12b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Interpreting flags as concrete values&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Interpretar banderas como valores concretos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="22d719f46a722a341690a40cfecd31e7eee71e5a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Interpreting flags as transformations of an options record&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Interpretaci&amp;oacute;n de banderas como transformaciones de un registro de opciones&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="394b1312a172a520e6485bcfc6e942d359f6c2e5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Intersection&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Intersection&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1cfc483e035e7be0b3d944d0ade35b927caa320a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Iterative construction&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Construcci&amp;oacute;n iterativa&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7a239bea4c8889a65e4620c13e4d0d4c1823cba5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Justification&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Justification&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="094fa64210677a911fa3b29182417f48b9b8ad20" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Labelling trees&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Etiquetado de &amp;aacute;rboles&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7136ff8ab068e64f43c1f31accfeac5c68f8c3da" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Legacy folds&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pliegues heredados&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="74fddd75d91aa4cfb10f3d49162809a44390fe12" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Lists&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5b628bcb1482ea2fd84a3d54e66d847c1f91262a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Little-endian writes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Little-endian escribe&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="37839dbce279cec6b9a4857e7f114f06b9733cd1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Locking&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Locking&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a9a965671753e671abd47c38ce8190b04bc8817d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Low-level capabilities&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Capacidades de bajo nivel&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8468bb9943d545d84713aad27e3d3bffde040457" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Low-level operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operaciones de bajo nivel&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="118c620d8449ee5e8a5cd65615a5c18185f2b21e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling lists of storable objects&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Ordenaci&amp;oacute;n de listas de objetos almacenables&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="790f75b4e9c9f75ec47d63ff02fc0c36176a9d9e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling of Boolean values (non-zero corresponds to &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;)&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Clasificaci&amp;oacute;n de valores booleanos (distinto de cero corresponde a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; )&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="67e0b98305a091c572c1575e77ca9198541e58bd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling of Boolean values (non-zero corresponds to &lt;code&gt;True&lt;/code&gt;)&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b474cd3f5c1f53822ba9e638830ba53589702c56" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling of Maybe values&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Clasificaci&amp;oacute;n de los valores de Maybe&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7b3c8b391fe47db4e7f29be595e9ffd7b42f11a4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Marshalling&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a6cf60d9248493e3ee61d7b5ffa08187bc8c2e55" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Memory Model&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Modelo de memoria&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4234b665d739e9be9b7dacce1371ba9d371cd12d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Memory overhead&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Sobrecarga de memoria&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="73e6c1657535b6ba73babb54c9ea22449a89ada9" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Miscellaneous functions on tactics&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones diversas sobre t&amp;aacute;cticas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="eef70e217ae2fad1ee5181577ca77806b89ad9e6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Miscellaneous functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones miscel&amp;aacute;neas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d37912c89a94f97ae92d1f8ea087b9253e8f4a1f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Mode wrappers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Envoltorios de modo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="457072e61e9b98ca06b0f96a66924ab9f3f0d6b7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Modifying the user environment&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Modificar el entorno del usuario&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8f9187dc6c823fb9fc033e765c31e30f75b4279c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monadic actions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Acciones mon&amp;aacute;dicas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ce5a9a8eff9611407bef51ffc8991624794dcd27" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monadic lifting operators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operadores de elevaci&amp;oacute;n mon&amp;aacute;dicos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="643ce0edebd41c3504ca1c7c59b0aa929bee3c1a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monads and functors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;M&amp;oacute;nadas y functores&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d0a100f58309468bb5a9cd772fc00b866b7d2c6e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monoid functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones monoide&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5989f51e0fb350d5fb1836641c983fa8e9c01112" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Numeric types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Tipos num&amp;eacute;ricos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e3d175ab87cd9d82242d05a1d16f756cb2cc194f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Observers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Observers&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d4b2d22f012a27e15dd4dfcf4d35f4b9919a6454" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Obsolete helpers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Ayudantes obsoletos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3712aed03e312cab018ea160458a4ef08e869c8c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Obtaining file status&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Obtener el estado del archivo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a2d4e5708e503067ab5197dacf78076b88909cbf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Opening and closing files&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Abrir y cerrar archivos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b215b9ab6648f75c1d62b2c6c53e5870d6dd8c97" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Operating on the raw buffer as a Ptr&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operando en el b&amp;uacute;fer sin procesar como Ptr&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="19122e0da0940fdb553e1aa455eaa8a24a9294ab" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operations&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="efb7c5e21e63061207ac9ff4af8075f8d2dde507" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Ordered list&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Lista ordenada&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="195c5acc749595702ba60ebb94942c334d572d0d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Ordered lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Listas ordenadas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="daf792758c307e101c8a282fba2387606747b67d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Other types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Otros tipos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="28e7b486fb7312509f306c8be16c9b527b8286e2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Outputting text&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Salida de texto&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e620e2c5797f2c06627642872c354a470f0f9794" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Packing &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s and pointers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Empaquetar &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; sy punteros&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a93afb941f8a0ba2423ee52a46adebeee3b9730d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Packing &lt;code&gt;CString&lt;/code&gt;s and pointers&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984656fcf94b935a4595408c1bed8f5d7211ec40" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Packing CStrings and pointers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Embalaje de cadenas C y punteros&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="52afa2fa240e9a71da5615735dcf6bd0b01e4241" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Parsing and counting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Analizar y contar&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8fc2573156c1f773fa4ce66a47aa1a703a5ef14e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Patterns&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Patterns&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b03bde8e1c15bc75f153378c2d6b71d4be932bae" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Pipes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pipes&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0f7012e3bba1df1331652323024649aa3910d765" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Platform differences&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Diferencias de plataforma&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2ace7c3cd825383b0e496b3935938006162dd334" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Pre-emption&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pre-emption&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c13917ff6625efa54a43d226e94b125392e996db" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Predicates&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="06ad2fa97536b873106ea249d8fbb0c8e38c462a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Primitive combinators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Combinadores primitivos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="20c6e795bc5cec59a773d8f48836557a52b25e40" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Primitive movement capabilities&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Capacidades de movimiento primitivo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="837d55888a6f6f7d3855eaca664282281fcd2d43" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process environment&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Entorno de proceso&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e4af8de74867b32429646d22e69358f4ee8e89a1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process groups&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Grupos de procesos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bf3057c599d877ef568cb93e92b313e881b557a6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process status&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Estado del proceso&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6c7540963a6d814c14e08a25ab3d33fc935f4dd2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process times&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Tiempos de proceso&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9a2220236e3e29741b22feebd7a7ffa190c87106" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Providing input&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Proporcionar informaci&amp;oacute;n&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7bc2a54365fc541890a7faf479718810508154bd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Pseudoterminal operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operaciones de pseudoterminal&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="77e3c4d6a821efbb65a9d770b9c6d76745d9bc6a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Quantified&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Quantified&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="29d056b26cae661b1cca2a89ca7076d2be4bc65a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Queries&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Queries&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c79264578193c91087db67d3ec4beb27152657d5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Querying file status&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Consultando el estado del archivo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4472e8fa39686626fb5016107788c09c95ce20c7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Raising Errors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Generando errores&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0efc7c5f0d2773badd6b11c2f524f0cb14545613" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Reading and writing&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Leyendo y escribiendo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="93f53728712c6b846d654b737c1b9129dfac2c91" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Reading/writing data&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Leer / escribir datos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4740969b4b31258f2ba635d0828cf57c28b8598f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Recursive and corecursive reduction&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df09d337edf7c9638651c7ee5f30e73b23840c50" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Related utilities&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Utilidades relacionadas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f879dcff2fc0cf0a836915f7a73279992651fcec" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Rendering with a particular style&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Renderizado con un estilo particular&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b358364b4750ee6635c8adf5eb60b1b5728f7288" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Repetition&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Repetition&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8b1b40f4de31acb6d23aa94e76889af1cfcd7ea7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Repositioning handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Reposicionamiento de manijas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="472bd2350e7caa51ceffcd079d21321ab45a273e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Representing datatypes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Representar tipos de datos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cf35efe6bb969f3cc419ec168e9707fdbb68f2c8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Right-to-left variants&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Variantes de derecha a izquierda&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9fb4984e7f911d801854423b4263dd7697d081d8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sample instance&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ec4fc4604bf5745373eea2e832bcf929e74e69" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Scheduling priority&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Prioridad de programaci&amp;oacute;n&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6d8baa5c56bcc7edddeb4f5eb99bc384a110f29e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Search for arbitrary substrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Buscar subcadenas arbitrarias&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4d9a0847083b171dedc83f5c92064f27a7916adf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Searching lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Buscando listas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="28b7d2dae22006102f7e5dcd67ffaebebb07a424" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Searching with a predicate&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Buscando con un predicado&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="26b84aeb5a445e77e2731163a1797868287803e0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Seeking&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Seeking&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b3e5938fad9ffef70901bd58a7ae9d04f4ff66de" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Semigroups and Monoids&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Semigrupos y monoides&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b20c52964c2e9282425f89d5f7cf3cb4d6ff2dc0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sequential searches&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;B&amp;uacute;squedas secuenciales&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5c216dba399e947f5b1687ffb9e5644faf5e7ec1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sessions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Sessions&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7007346e1c619647216d2af2471b343801c87bc8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Setting file modes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Configuraci&amp;oacute;n de modos de archivo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8a94070f77ca09f3b52c32a4fe6f498554d2ef50" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Showing handle state (not portable: GHC only)&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Muestra el estado del identificador (no port&amp;aacute;til: solo GHC)&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="afb8186cce7135210ea355c44a21b6b68944d4ad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Simple derived documents&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Documentos derivados simples&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8203afbd1bee52f76aaa4438661fdc6005080283" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Simple merge tactic types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Tipos de t&amp;aacute;cticas de fusi&amp;oacute;n simples&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b03c00dda87470a64a1e098b3b2f90b11823de32" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Simpler functions for common tasks&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones m&amp;aacute;s simples para tareas comunes&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e55c362179eb9e4a3c4f1b3c4957713032305310" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Size&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Size&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6997ba8dd8491954a278b3b5477f5c27bb3f4460" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Special cases for standard input and output&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Casos especiales para entrada y salida est&amp;aacute;ndar&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c46f841c99db68165c0ed6f56285190c61649b43" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Special cases&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Casos especiales&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d9a56eb6cea09db74f6ec7ce9dcc26152b5f558e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Special folds&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pliegues especiales&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9d9d2641b4c51c6bee8f8c8daa02dc082d379632" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Standard Formatters&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Formateadores est&amp;aacute;ndar&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c297f0a3979a11cf9b67f438435bc6a06c1906e4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Standard handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Asas est&amp;aacute;ndar&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="05104699042312619e63c593455a0328758b0638" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Standard input and output&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Entrada y salida est&amp;aacute;ndar&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8b16d24aa15b70c2a7edf32ff73638490f3ed0ed" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Stream oriented decoding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Decodificaci&amp;oacute;n orientada a la transmisi&amp;oacute;n&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8d311be45f5556a1f23274c11816698d5cbc3019" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Strict folds&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pliegues estrictos&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4b964a9c6a99fdfe4ba39348318c0a23549b8a8b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Strict monadic functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funciones mon&amp;aacute;dicas estrictas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e33102ceed0de8b90b062f72352eedf70ddbd125" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sublists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Sublists&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b7cc2968bd0743d76960f1bc525f8ebba419b50f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Subranges&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Subranges&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b5ff6c7d4170e6cd80ab0b06a345da6194fa2619" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Synonyms for convenience&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Sin&amp;oacute;nimos de conveniencia&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8b6b9366ae00e771f4d41ab68dbb36d8dd5dfb10" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;TermOutput&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;TermOutput&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="31d38cfb088f2a7cc7e805fcf9a255a14f869318" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Terminal operations (not portable: GHC only)&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operaciones de terminal (no port&amp;aacute;til: solo GHC)&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5b59a86977a10525408b59377f3011166dab2baf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Terminal operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operaciones de terminal&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ea7ddda6dce40d1566d205fc42665716ea9547fb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Terminating the program&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Terminar el programa&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7ff01062f7ac7a0eb2f0a9b58004d657e3ab713d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Testing a file descriptor&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Probar un descriptor de archivo&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d24e5cb0adb94cea0caae32f7669f88b4727b554" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Text output&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Salida de texto&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2a1a8c3888cff08e380b98230d559ad47c52f30d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &quot;&lt;code&gt;generic&lt;/code&gt;&quot; operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Las operaciones &quot; &lt;code&gt;generic&lt;/code&gt; &quot;&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="90c2870dc1c39e76f618d9579c6c6b568a184f29" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;catch&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Las funciones de &lt;code&gt;catch&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e0401f02c9c4806a3f11cf9f0b137b0457c185eb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;evaluate&lt;/code&gt; function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;La funci&amp;oacute;n de &lt;code&gt;evaluate&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a83411977b4021fda1b2105c12936e37da5b79ec" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;handle&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Las funciones de la &lt;code&gt;handle&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a6a146fe2a81726d9bdd36f331a050ca6a625ec1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;mapException&lt;/code&gt; function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;La funci&amp;oacute;n &lt;code&gt;mapException&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e1d9e6ad86b3c4f6e78037d9a5cda1060b33c411" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;sequenceA&lt;/code&gt; and &lt;code&gt;sequence&lt;/code&gt; methods&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c3b8cc61782014daf88d61974f04989cadbdc0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;traverse&lt;/code&gt; and &lt;code&gt;mapM&lt;/code&gt; methods&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde1b9d497a2e1863322abcd78da14c7547a1004" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;try&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Las funciones de &lt;code&gt;try&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="505d2d6b9466a018136b18e8ab6d87589b6d81bf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The C-side interface&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;La interfaz del lado C&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2feed7b5f4c2fb037c96bdf3b405b31c61f1dd82" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Threads with affinity&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Hilos con afinidad&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5667a2b27cf86a6facd5a2b6fa1f4781c29ac6d9" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Types&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f4424895aa43af6ebbe8d50bbf31076163846d3f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unboxed representation types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Tipos de representaci&amp;oacute;n sin caja&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a664439103fed00f18cb6cdce6b32f926d837628" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unfolding ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Despliegue de ByteStrings&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0d5771f68b742a9f74f4bd7c018a39ed68315588" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unfolding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Unfolding&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8dc52df211e33097b39795d9eef838f9f1ac2804" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unicode encodings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Codificaciones Unicode&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b2b5eddb362e4ea5f5dc82fbf211f3b59e45b944" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unicode general categories&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Categor&amp;iacute;as generales de Unicode&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="443dc27fe917219c1e227a7cf8e53ea025d70775" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unicode&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Unicode&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8fd4158cdb70f3f3055cfdc3cc464ed1ed7d3f97" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Universal combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funci&amp;oacute;n de combinaci&amp;oacute;n universal&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="517fdf6bd06a90378cad3395f75c6cc48b245d51" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unsafe general combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Funci&amp;oacute;n de combinaci&amp;oacute;n general insegura&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b26c76d647850bb664f2705c2346891893224993" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unsafe low-level operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operaciones inseguras de bajo nivel&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b15736258590f294a5d0ddc7a0d4f4f650f41179" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;User preferences&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Preferencias del usuario&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="60db20aa411384ccaef6650faca7f5abff2675de" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using 8-bit characters&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Usando caracteres de 8 bits&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ffe3313007ea7943427b9e8bc2ca7ca12ef96fcd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Usar ByteStrings como &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; s&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="21208557565a0767548e0863019b63967d4c4dc1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/foreign-c-string#v:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf5012abc592887fc666f4952b0d6fcbc62f929" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as &lt;code&gt;CString&lt;/code&gt;s&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Usar ByteStrings como &lt;code&gt;CString&lt;/code&gt; s&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cb16ea583aafa1b58081ec3eb2d0c8887122c796" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as CStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Usar ByteStrings como CStrings&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b82f965522cfecfb3cda4480153ab4c4d19c1328" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using a locale-dependent encoding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Usar una codificaci&amp;oacute;n dependiente de la configuraci&amp;oacute;n regional&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f71438c3e7b8594191f618585b21c597aca6dc8f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Validation use-case&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1699f9a82ebb8f7f6eb73199d61e5a7a5307616" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;View patterns&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Ver patrones&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="804d3cacb614d4bdfb3822b6bc252249358d8922" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Views&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Views&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f51e2177552c233852d9ff74160572dc49f182af" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Waiting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Waiting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="37bb5bfa7c137d0273fe43774a9b1030467e92f5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Wrapping documents in delimiters&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Envolver documentos en delimitadores&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1e30136dbc83bf7b9d7c8867c26d1e1f7ff6aced" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Zipping and unzipping lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Comprimir y descomprimir listas&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c1444168f592ab0fce2022480f0a9f2a9f9bb636" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Zips and unzip&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Cierra y descomprime&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="548fdcab5af57ada5d0745ff2024ad305fbb17c0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;
&lt;code&gt;WhenMatched&lt;/code&gt; tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt; &lt;code&gt;WhenMatched&lt;/code&gt; T&amp;aacute;cticas de WhenMatched&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="8e616065b0a6197825c343552ec58650250227e4" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;
&lt;code&gt;WhenMissing&lt;/code&gt; tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt; &lt;code&gt;WhenMissing&lt;/code&gt; t&amp;aacute;cticas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="ac9362795cbca4c3542732a5d8411f63ecb7cd9b" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;ASCII (Char7)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;ASCII (Char7)&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="9176450cef042b0783cc277c7f0c97b9a43090d8" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Additional generic representation type constructors&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Constructores de tipos de representaci&amp;oacute;n gen&amp;eacute;ricos adicionales&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="68f754da92347f8b59874ef82624b1b3b07582ce" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Annotation lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;B&amp;uacute;squeda de anotaciones&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="c809d64438f16268f1c6d3f138e8a58adf72ec9c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Applying &lt;code&gt;mask&lt;/code&gt; to an exception handler&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Aplicar &lt;code&gt;mask&lt;/code&gt; a un controlador de excepciones&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="00c0640df734ecc5d66455b1d2d6fd91e8d596a0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Being strict by being lazy&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0975d8227a73928538fe77cd6eac343d85237456" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Big-endian decoding&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Decodificaci&amp;oacute;n big-endian&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="fa0285a97de0a09886998c893a081647ffed8f91" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Big-endian&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Big-endian&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7c7da32152a61af57b6c00c8a832c49357a60e9c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Constructor strictness lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;B&amp;uacute;squeda de rigor de constructor&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="b0e34a5b1e2cad32b7e583d86b7bc5c9231a2713" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Contravariant maps for tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Mapas contravariantes para t&amp;aacute;cticas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="a67a14e75a70c18bc2c5d3a0d9bd0a95f1e8dcfb" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Covariant maps for tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Mapas covariantes para t&amp;aacute;cticas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="4d943a7024335d0559c461d932e194a2e5fa7502" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Decimal numbers&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Numeros decimales&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="8ecfc38c5fee92bb6ff576bf480c95d10cf01db6" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Definition of the generic representation types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Definici&amp;oacute;n de los tipos de representaci&amp;oacute;n gen&amp;eacute;rica&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="87337fe97b4c3f800e3f6cec7217a7a45ff57eaa" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Files&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Files&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7ecd5800a1dae97eb3ce9cf4a775c5b7dced0e39" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Fixed-width hexadecimal numbers&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;N&amp;uacute;meros hexadecimales de ancho fijo&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="caaa4fa73c88a75916b5c100a71bb9cc6506450b" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Fixity lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;B&amp;uacute;squeda de fijeza&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7dfdf0b83215bf99d22a40e73ebe01fc1d3b48a6" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Generic instances&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Instancias gen&amp;eacute;ricas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7b1361562a51404d3b495d552c622f49f011308a" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Hexadecimal numbers&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;N&amp;uacute;meros hexadecimales&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="14c8ba00f2f6df3be186017e56a8f1697d17a26a" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Host-endian, unaligned decoding&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Decodificaci&amp;oacute;n no alineada de host-endian&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="49768d9f737c7a6970d76827fe360fd427ea39c2" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Hybrid folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426ef69626e9d657816ef10fffdf646defa36f63" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;ISO/IEC 8859-1 (Char8)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;ISO / IEC 8859-1 (Char8)&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="91738bf4e64020434749a605c5a0f674e8977f13" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Individual fields of constructors: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Campos individuales de constructores: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; &lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="95aa336f40b13d70987524c498e539051dbc0ab8" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Individual fields of constructors: &lt;code&gt;K1&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff63b17159610c343c47efb18239a6e42bac4a43" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Infinite lists&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Listas infinitas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="d880e1b562ff684e782a8e158dd0c4c38ea616d2" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Input functions&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Funciones de entrada&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="687a671aa68dfd31a2ff9c3065d51a7eb641957d" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Instance lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;B&amp;uacute;squeda de instancia&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="9de2727b3c888c5fe8f595711e7c4e4376446782" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Interruptible operations&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Operaciones interrumpibles&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="a0bdd9e037b2fe3362702cf64a61e10f4ac32133" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Language extension lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;B&amp;uacute;squeda de extensi&amp;oacute;n de idioma&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="971b639c6ae7ec2a143594b47bc2cad3ab23f941" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Lazy corecursive folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f721762f7b5fa0bc36f126e027964f56276d40" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Little-endian decoding&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Decodificaci&amp;oacute;n little-endian&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="3d29315e3e217a9ae85e08ccfa4ff67e3b192c92" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Little-endian&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Little-endian&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="a666b543aad6a27c72f0151395179bb84b642932" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Meta information: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Metainformaci&amp;oacute;n: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; &lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="6eb625c90b481bb9f8dac1ca694c19291bb010a7" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Meta information: &lt;code&gt;M1&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67005a69354063f6b9635aed8692bf413a735e3" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Miscellaneous tactic functions&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Funciones t&amp;aacute;cticas diversas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="cecbf1bcc8e505cea2eb1a4a33120494eedf7271" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Name lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;B&amp;uacute;squeda de nombre&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="987cde202187cbf24eb16085f070a22551579940" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Non-portable, host-dependent&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;No port&amp;aacute;til, depende del host&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="8b77870acfaed7d35670833b7a4631d1264c71db" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Numeric functions&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Funciones num&amp;eacute;ricas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="69d77b9c530f2437dbf511df4e101b3e164c07e5" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Numeric type classes&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Clases de tipo num&amp;eacute;rico&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="00f8a4a19841150cb3fd93a597d12faa3f7f8012" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Omitting generic instances&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Omitir instancias gen&amp;eacute;ricas&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="5448bcba6e6592ebe3e67bb2ea180855211d008e" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of &lt;code&gt;* -&amp;gt; *&lt;/code&gt; types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Representaci&amp;oacute;n de &lt;code&gt;* -&amp;gt; *&lt;/code&gt; tipos&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7326f97b4d5a4fd5ffec8292544b247f245d8e98" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of &lt;code&gt;k -&amp;gt; *&lt;/code&gt; types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Representaci&amp;oacute;n de &lt;code&gt;k -&amp;gt; *&lt;/code&gt; tipos&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="de3a9800dd577d40567dee75709fb63860ef8349" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of types with many constructors or many fields&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Representaci&amp;oacute;n de tipos con muchos constructores o muchos campos.&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7cad31f288fffbdb949315d0a84dd3cbd30da25b" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of unlifted types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Representaci&amp;oacute;n de tipos sin levantar&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="b58791bfb6f34d501ed62ff12d5a2a6306751b4c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Roles lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;B&amp;uacute;squeda de roles&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="92cd228b2eff4a406205b1a1ace4fba53f914435" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Short-circuit folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a07deb727c867cd5e05df55461156dc778541a0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Special folds&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Pliegues especiales&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="9e53aed42127e86ca4a33e0f279437712b1d43ce" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Strict recursive folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33559e84b0368317316237655368f553779abc29" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; class&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;La clase &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; &lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="195ad43f6046b9bf8b178cc1baf4c1cb43629885" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The &lt;code&gt;Generic1&lt;/code&gt; class&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7750057364e0715cc99fd58aef16db57645d3cc6" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The group database&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;La base de datos del grupo&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="cbcbc5964f730c01310985667d916e65e70481c0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The user database&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;La base de datos de usuarios&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="3069839bd83149ea60d26e1a3d7e94ea2b26230c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The wrapper and generic default&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;El contenedor y el valor gen&amp;eacute;rico predeterminado&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="2812b6eeb2f4c2e7b04fb3e3fa0c6fdd6d22130e" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Tuples&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Tuples&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="308da98bdbca78d5a0f07dd48b7cbbe8b9684e48" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Type lookup&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c4955c32dfcd4e322109bccc87b8cfbda5f3fa" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;UTF-8&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;UTF-8&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="6da3f8ab1174a28ae5c2fbdfdc18c1fdeff6406e" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;User-supplied comparison (replacing an &lt;code&gt;Ord&lt;/code&gt; context)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Comparaci&amp;oacute;n proporcionada por el usuario (reemplazando un contexto &lt;code&gt;Ord&lt;/code&gt; )&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="4677b39f0809a550b962e1efbc16e3ccb92962dd" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;User-supplied equality (replacing an &lt;code&gt;Eq&lt;/code&gt; context)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Igualdad proporcionada por el usuario (reemplazando un contexto &lt;code&gt;Eq&lt;/code&gt; )&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="08a890eeac9d05c319be1cea2864ef5cfa38f510" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Constructors without fields: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Constructores sin campos: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt; &lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="b64b327926e4b85702574d65e28fb8ac8b3784e9" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Constructors without fields: &lt;code&gt;U1&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab968abd2f2cbc3d3fe44413917e1b647aacb89" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Decimal numbers&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Numeros decimales&lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="1f72c14c5b2a8e43a50e20e49a2610afb3e60713" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Empty datatypes: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:V1&quot;&gt;V1&lt;/a&gt;&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Tipos de datos vac&amp;iacute;os: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:V1&quot;&gt;V1&lt;/a&gt;&lt;/code&gt; &lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="fb4127e27d20faed0bb0685a7eaf40c0a76b3313" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Empty datatypes: &lt;code&gt;V1&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e605a9a48c2670e40260fb8c8668eb33aa93ad8" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Fixed-width hexadecimal numbers&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;N&amp;uacute;meros hexadecimales de ancho fijo&lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="d0a4a8ae6658c219000895cac58801e5f635b1a2" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Hexadecimal numbers&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;N&amp;uacute;meros hexadecimales&lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="14abccc93409c6f31f9697672cec625f1ab46a59" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;List of lazy functions&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbeb25a3b9ac941834026bd1d1d3b3fbc0fb77c" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;List of short-circuit functions&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c908f2133c4dc0d3cf573eb7b352d866d416f09" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;List of strict functions&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9259d33641d1c26faf14b516e5c6061cacdd428a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;`&lt;/strong&gt; takes an operator function of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b83737f173b7b8104574a74cccaf01f76d7b21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt; takes an operator function of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a997035839cf73ad5947ef88cb4492ea1ee9dd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; is the additive identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; es la identidad aditiva&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d012edc54d76fe1a6fd5a931466b32cb2e48585f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; is the multiplicative identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; es la identidad multiplicativa&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1be9ee6f076b69424c84138762c6785925fb2fe3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-num#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; gives the additive inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-num#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; da el aditivo inverso&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e5db0d22c31c7f6d7b9e88cbcbceca04840e237" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-real#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; gives the multiplicative inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-real#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; da el inverso multiplicativo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b34a48ea58b53c48926fb1d6604c6963ad6425b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; is the additive identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; es la identidad aditiva&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4cbac6b4bcb89975222e88ef9556105acd07884d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; is the multiplicative identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; es la identidad multiplicativa&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39a01ea8c89d72148e323997d4119984e73975bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; gives the additive inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; da el aditivo inverso&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="753334d2f051471b256e5badd522f302be4fb892" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; gives the multiplicative inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; da el inverso multiplicativo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8951ee24d2259235f247886562c09d1c82372a3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; this can fail with an unchecked exception.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Advertencia:&lt;/em&gt;&lt;/strong&gt; esto puede fallar con una excepci&amp;oacute;n sin marcar.</target>
        </trans-unit>
        <trans-unit id="170bdc09cc4472459171d7b9834478eb80feda9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; this is only available on LLVM and can fail with an unchecked exception.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Advertencia:&lt;/em&gt;&lt;/strong&gt; esto solo est&amp;aacute; disponible en LLVM y puede fallar con una excepci&amp;oacute;n sin marcar.</target>
        </trans-unit>
        <trans-unit id="9ed96c0af0623165c6ada4cbcf6ac4951a9d8c89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; this is only available on LLVM.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Advertencia:&lt;/em&gt;&lt;/strong&gt; esto solo est&amp;aacute; disponible en LLVM.</target>
        </trans-unit>
        <trans-unit id="319cba874b46028fdb87bb64fe0d5318e0d1dda0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Antisymmetry&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Antisymmetry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ff5302c36194af0ae673efd623e66220d2859ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Asociatividad de &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4223f519ebc51584d410f0045b220809255cfd13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Asociatividad de &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6116dc5a02e53b126226e38a3af939721aab2c93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Asociatividad de &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="799163cf7b51b0c79eb47b8a26d033faa5a16191" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Asociatividad de &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7925b0c6a04e437163494c8557540ca5b61a3e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Backtracking&lt;/strong&gt;. Lastly, a simple form of &lt;strong&gt;backtracking&lt;/strong&gt; could be introduced. We simply select the first matching axiom we encounter and when the entailment fails, we backtrack and look for other axioms that might match the wanted constraint.</source>
          <target state="translated">&lt;strong&gt;Retroceder&lt;/strong&gt; . Por &amp;uacute;ltimo, se podr&amp;iacute;a introducir una forma simple de &lt;strong&gt;retroceder&lt;/strong&gt; . Simplemente seleccionamos el primer axioma coincidente que encontramos y cuando falla la vinculaci&amp;oacute;n, retrocedemos y buscamos otros axiomas que puedan coincidir con la restricci&amp;oacute;n deseada.</target>
        </trans-unit>
        <trans-unit id="3c4434638d63955669a6ef153af03507483724e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Commutativity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conmutatividad de &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9d507a824ba6df7be3779b954141b766cfe2bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Commutativity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conmutatividad de &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aaca685e072a46196ad726aa484bd084f5030b6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Corecursion&lt;/strong&gt;, which yields intermediate results as it encounters additional input elements. Lazy processing of the remaining elements makes the intermediate results available even before the rest of the input is processed. The input may be unbounded, and the caller can stop processing intermediate results early.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd71e7ce598692e08885d5cfe8581474fda3225a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Distributivity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; with respect to &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Distributividad de &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; con respecto a &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d980dbdc9c76f6a3f781e8be02c04e6dd5479cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Distributivity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; with respect to &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Distributividad de &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; con respecto a &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb7c8e1987eda07393a58eb1e87322de13d342de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;. Suppose we have a C/C++ function to call that will return and then invoke a callback at some point in the future, passing us some data. We want to wait in Haskell for the callback to be called, and retrieve the data. We can do it like this:</source>
          <target state="translated">&lt;strong&gt;Ejemplo&lt;/strong&gt; . Supongamos que tenemos una funci&amp;oacute;n C / C ++ para llamar que regresar&amp;aacute; y luego invocar&amp;aacute; una devoluci&amp;oacute;n de llamada en alg&amp;uacute;n momento en el futuro, pas&amp;aacute;ndonos algunos datos. Queremos esperar en Haskell a que se llame a la devoluci&amp;oacute;n de llamada y recuperar los datos. Podemos hacerlo as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="deaf7df0f7720e67c432ed3a03953663a73c03d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Definiciones de funciones&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6312fe48c479f3415ae6ad3d8c55e86c3b4a9045" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Invariant&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatJ-35-&quot;&gt;NatJ#&lt;/a&gt;&lt;/code&gt; is used &lt;em&gt;iff&lt;/em&gt; value doesn't fit in &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatS-35-&quot;&gt;NatS#&lt;/a&gt;&lt;/code&gt; constructor. NB: Order of constructors *must* coincide with &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; relation</source>
          <target state="translated">&lt;strong&gt;Invariante&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatJ-35-&quot;&gt;NatJ#&lt;/a&gt;&lt;/code&gt; se usa &lt;em&gt;si el&lt;/em&gt; valor de &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatS-35-&quot;&gt;NatS#&lt;/a&gt;&lt;/code&gt; no encaja en el constructor NatS # . NB: El orden de los constructores * debe * coincidir con la relaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="561ae905d7f2789db0c5ce4de85d235050a3ed6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let/where bindings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Let / where bindings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9162040ac128533f617928c245aee81c316ceb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; es una superclase de &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5a4b9ac937e39046d8b983fc94ade6a8cfc792ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2d3664ee37ed2cfa999ff0a501a272001dccb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf9e65ce2fc94787a4c53411b9778d3dffc617d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; es una superclase de &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="df04c2abdfb988143c3b8d479e9f82bb9dcd1990" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; es una superclase de &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="03411ce0e13fe57751c2f82253b492cc9d47c8f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; es una superclase de &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="166aed14653edc6f46dcff3c1dae86631ba0a891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Currently, &lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; exhibits surprising behaviour when applied to a parser &lt;code&gt;p&lt;/code&gt; that doesn't consume any input; specifically</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Actualmente, &lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; muestra un comportamiento sorprendente cuando se aplica a un analizador &lt;code&gt;p&lt;/code&gt; que no consume ninguna entrada; espec&amp;iacute;ficamente</target>
        </trans-unit>
        <trans-unit id="ec9986bf04287187f171a448a6e427d2d4d16d6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Currently, &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; exhibits surprising behaviour when applied to a parser &lt;code&gt;p&lt;/code&gt; that doesn't consume any input; specifically</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Actualmente, &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; muestra un comportamiento sorprendente cuando se aplica a un analizador &lt;code&gt;p&lt;/code&gt; que no consume ninguna entrada; espec&amp;iacute;ficamente</target>
        </trans-unit>
        <trans-unit id="5d16f3693057b662396f898cac3b01fe76debdb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Currently, &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; exhibits surprising behaviour when applied to a parser &lt;code&gt;p&lt;/code&gt; that doesn't consume any input; specifically</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Actualmente, &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; muestra un comportamiento sorprendente cuando se aplica a un analizador &lt;code&gt;p&lt;/code&gt; que no consume ninguna entrada; espec&amp;iacute;ficamente</target>
        </trans-unit>
        <trans-unit id="6818107750bfc6c118df69013440ac82805bba52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Only strict in the reference and not the referenced value.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Solo estricto en la referencia y no en el valor referenciado.</target>
        </trans-unit>
        <trans-unit id="dc20d237e47fdcc6a1702edaefb72cd73590b46d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Prior to &lt;code&gt;deepseq-1.4.4.0&lt;/code&gt; this instance was only defined for &lt;code&gt;base-4.8.0.0&lt;/code&gt; and later.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Antes de &lt;code&gt;deepseq-1.4.4.0&lt;/code&gt; , esta instancia solo se defin&amp;iacute;a para &lt;code&gt;base-4.8.0.0&lt;/code&gt; y posteriores.</target>
        </trans-unit>
        <trans-unit id="7a7733fa013d8d35cc1c5581dc3eef96e5dfd0cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The functions in &lt;code&gt;base-4.12&lt;/code&gt; changed the serialisation in case of a &lt;code&gt;Just 0&lt;/code&gt; precision; this version of &lt;code&gt;text&lt;/code&gt; still provides the serialisation as implemented in &lt;code&gt;base-4.11&lt;/code&gt;. The next major version of &lt;code&gt;text&lt;/code&gt; will switch to the more correct &lt;code&gt;base-4.12&lt;/code&gt; serialisation.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Las funciones en &lt;code&gt;base-4.12&lt;/code&gt; cambiaron la serializaci&amp;oacute;n en caso de una precisi&amp;oacute;n de &lt;code&gt;Just 0&lt;/code&gt; ; esta versi&amp;oacute;n de &lt;code&gt;text&lt;/code&gt; o todav&amp;iacute;a proporciona la serializaci&amp;oacute;n implementada en &lt;code&gt;base-4.11&lt;/code&gt; . La pr&amp;oacute;xima versi&amp;oacute;n principal del &lt;code&gt;text&lt;/code&gt; o cambiar&amp;aacute; a la serializaci&amp;oacute;n &lt;code&gt;base-4.12&lt;/code&gt; m&amp;aacute;s correcta .</target>
        </trans-unit>
        <trans-unit id="77693d6f146c132591a587e160c8af245f51c0df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The intrepid user may notice that &lt;code&gt;HasCallStack&lt;/code&gt; is just an alias for an implicit parameter &lt;code&gt;?callStack :: CallStack&lt;/code&gt;. This is an implementation detail and &lt;strong&gt;should not&lt;/strong&gt; be considered part of the &lt;code&gt;CallStack&lt;/code&gt; API, we may decide to change the implementation in the future.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : El usuario intr&amp;eacute;pido puede notar que &lt;code&gt;HasCallStack&lt;/code&gt; es solo un alias para un par&amp;aacute;metro impl&amp;iacute;cito &lt;code&gt;?callStack :: CallStack&lt;/code&gt; . Este es un detalle de implementaci&amp;oacute;n y &lt;strong&gt;no&lt;/strong&gt; debe considerarse parte de la API de &lt;code&gt;CallStack&lt;/code&gt; ; podemos decidir cambiar la implementaci&amp;oacute;n en el futuro.</target>
        </trans-unit>
        <trans-unit id="2533d0f8b23d21f162cecf82e012550c323eb127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The replacement character returned by &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; MUST be within the BMP plane; surrogate code points will automatically be remapped to the replacement char &lt;code&gt;U+FFFD&lt;/code&gt; (&lt;em&gt;since 0.11.3.0&lt;/em&gt;), whereas code points beyond the BMP will throw an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;since 1.2.3.1&lt;/em&gt;); For earlier versions of &lt;code&gt;text&lt;/code&gt; using those unsupported code points would result in undefined behavior.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : El car&amp;aacute;cter de reemplazo devuelto por &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; DEBE estar dentro del plano BMP; los puntos de c&amp;oacute;digo sustitutos se reasignar&amp;aacute;n autom&amp;aacute;ticamente al car&amp;aacute;cter de reemplazo &lt;code&gt;U+FFFD&lt;/code&gt; ( &lt;em&gt;desde 0.11.3.0&lt;/em&gt; ), mientras que los puntos de c&amp;oacute;digo m&amp;aacute;s all&amp;aacute; del BMP arrojar&amp;aacute;n un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; ( &lt;em&gt;desde 1.2.3.1&lt;/em&gt; ); Para versiones anteriores de &lt;code&gt;text&lt;/code&gt; o,el uso de esos puntos de c&amp;oacute;digo no compatibles dar&amp;iacute;a como resultado un comportamiento indefinido.</target>
        </trans-unit>
        <trans-unit id="f697bb0f17f9be6e8b12d7d542631a6b9b017b47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The replacement character returned by &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; MUST be within the BMP plane; surrogate code points will automatically be remapped to the replacement char &lt;code&gt;U+FFFD&lt;/code&gt; (&lt;em&gt;since 0.11.3.0&lt;/em&gt;), whereas code points beyond the BMP will throw an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;since 1.2.3.1&lt;/em&gt;); For earlier versions of &lt;code&gt;text&lt;/code&gt; using those unsupported code points would result in undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5ede059537538903ed8438e14015f63ad7bc85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The replacement character returned by &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; MUST be within the BMP plane; surrogate code points will automatically be remapped to the replacement char &lt;code&gt;U+FFFD&lt;/code&gt; (&lt;em&gt;since 0.11.3.0&lt;/em&gt;), whereas code points beyond the BMP will throw an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;since 1.2.3.1&lt;/em&gt;); For earlier versions of &lt;code&gt;text&lt;/code&gt; using those unsupported code points would result in undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af85fbdeb1c1548ecdc703b5c39806483adbef4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This instance is only defined for &lt;code&gt;base &amp;gt;= 4.9.0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Esta instancia solo est&amp;aacute; definida para &lt;code&gt;base &amp;gt;= 4.9.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d4e26172ba9fac2189c2280c424438f132a68b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This is not needed anymore since &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; became a superclass of &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; in &lt;em&gt;base-4.11&lt;/em&gt; and this newtype be deprecated at some point in the future.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Esto ya no es necesario ya que &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; se convirti&amp;oacute; en una superclase de &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; en &lt;em&gt;base-4.11&lt;/em&gt; y este nuevo tipo quedar&amp;aacute; obsoleto en alg&amp;uacute;n momento en el futuro.</target>
        </trans-unit>
        <trans-unit id="09bbdeeb23f25384d247711b42a27b30cfbb93e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Este m&amp;eacute;todo es redundante y tiene la implementaci&amp;oacute;n predeterminada &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a54cc0eac403b56d8c90a486bcee12f4b0d2cff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7bee89a50523b2b7f4298406f2f560b7f97e3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Este m&amp;eacute;todo es redundante y tiene la implementaci&amp;oacute;n predeterminada &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="17aedd0e093e0e25223d9534cf1c076f3a8a2cfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53250bceefb8edf3079bcff5effdeb91a06684e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Este m&amp;eacute;todo es redundante y tiene la implementaci&amp;oacute;n predeterminada &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab18beb231b92aa2228a0bd2a20b51f1a2b1860" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5e33ea116bb722425b17e443f5a6fd673821d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : Este m&amp;eacute;todo es redundante y tiene la implementaci&amp;oacute;n predeterminada &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; desde &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4b182cab3c093432cfb21fa9dafb0c11115dbd3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3257a06863bf7f9dc786e6e8ab7f729cc62492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b87531c422bb43abf588cd19cfb145b4b1af212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Negation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Negation&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35fdc70491666deaadbc15762d73d32a5836699b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nested patterns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Patrones anidados&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39c28848aeb5cab86ac6b199bccbac9933f1e95b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Newtypes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Newtypes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0d40e5bd81d1d6957246a1ec75c38216c4704c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No ``-O*``-type option specified:&lt;/strong&gt; This is taken to mean &amp;ldquo;Please compile quickly; I&amp;rsquo;m not over-bothered about compiled-code quality.&amp;rdquo; So, for example, &lt;code&gt;ghc -c Foo.hs&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;No se ha especificado ninguna opci&amp;oacute;n de tipo `` -O * '':&lt;/strong&gt; Esto se considera que significa &lt;strong&gt;``&lt;/strong&gt; Compile r&amp;aacute;pidamente; No me preocupa demasiado la calidad del c&amp;oacute;digo compilado &quot;. Entonces, por ejemplo, &lt;code&gt;ghc -c Foo.hs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1703f964965b565950bc6eb43f0e6d084f01e5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-intmap-strict&quot;&gt;Data.IntMap.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c868bb4011e6208365665fdb4bdf5094e1a4de81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-intmap-strict&quot;&gt;Data.IntMap.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4dbb5c88e424a361334b4d6f21f10b3ce674e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-intmap-strict&quot;&gt;Data.IntMap.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b24fbc9f07667773368a3b7ec8264c0363872e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09385c49980f00ae37579142a86cc82d33d8840d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-map-strict#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fc39334b9319bc0d7d967925cee84740f69bc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This module exports internal implementation details that may change anytime. If you want a more stable API, use &lt;a href=&quot;system-process&quot;&gt;System.Process&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; Este m&amp;oacute;dulo exporta detalles de implementaci&amp;oacute;n interna que pueden cambiar en cualquier momento. Si desea una API m&amp;aacute;s estable, use &lt;a href=&quot;system-process&quot;&gt;System.Process&lt;/a&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="2350c93205902e1c98253ef2f7d2621dcc8098cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The example above should rather be written in terms of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; to ensure releasing file-descriptors in a timely matter (see the description of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; for an example).</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : El ejemplo anterior debe escribirse en t&amp;eacute;rminos de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; para garantizar la publicaci&amp;oacute;n de descriptores de archivo en el momento oportuno (consulte la descripci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; para ver un ejemplo).</target>
        </trans-unit>
        <trans-unit id="47f5cf616517b6eba6447338e761bc574ca481fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The example above should rather be written in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; to ensure releasing file-descriptors in a timely matter (see the description of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; for an example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5985d3f882e48a65109c5dc428706442d6a515de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The example above should rather be written in terms of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; to ensure releasing file-descriptors in a timely matter (see the description of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; for an example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41c2eafe5091226c38a0690d82eb9525b65f556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is a very big hammer. If you only need an absolute path, &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt; is sufficient for removing dependence on the current working directory.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : esta funci&amp;oacute;n es un martillo muy grande. Si solo necesita una ruta absoluta, &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt; es suficiente para eliminar la dependencia del directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="615eff90afa4cc9668282159ebd5fba86b0a2aa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This is an internal GHC module with an API subject to change. It's recommended use the &lt;a href=&quot;numeric-natural&quot;&gt;Numeric.Natural&lt;/a&gt; module to import the &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : Este es un m&amp;oacute;dulo GHC interno con una API sujeta a cambios. Se recomienda utilizar el m&amp;oacute;dulo &lt;a href=&quot;numeric-natural&quot;&gt;Numeric.Natural&lt;/a&gt; para importar el tipo &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60f2ee22884b6646412af01b670fedfd33ce75d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Unlike for the unary &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt;, there is currently no support for generically deriving &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : A diferencia del unario &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt; , actualmente no hay soporte para derivar gen&amp;eacute;ricamente &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f5608392e60fb88bd92846a796785eb6d245173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pattern matching in case expressions, lambdas, do-notation, etc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Coincidencia de patrones en expresiones de casos, lambdas, notaci&amp;oacute;n, etc.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba63c80e3e98efdf17dda0cdece96c022afb21de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pick first&lt;/strong&gt;. We can simply select the &lt;strong&gt;first matching axiom&lt;/strong&gt; we encounter. In the above example, this would be &lt;code&gt;A a =&amp;gt; C a&lt;/code&gt;. We&amp;rsquo;d then need to entail &lt;code&gt;A a&lt;/code&gt;, for which we have no matching axioms available, causing the above program to be rejected.</source>
          <target state="translated">&lt;strong&gt;Elige primero&lt;/strong&gt; . Simplemente podemos seleccionar el &lt;strong&gt;primer axioma coincidente&lt;/strong&gt; que encontremos. En el ejemplo anterior, esto ser&amp;iacute;a &lt;code&gt;A a =&amp;gt; C a&lt;/code&gt; . Entonces necesitar&amp;iacute;amos implicar &lt;code&gt;A a&lt;/code&gt; , para el cual no tenemos axiomas coincidentes disponibles, lo que hace que el programa anterior sea rechazado.</target>
        </trans-unit>
        <trans-unit id="253e3168e251c32ee7395e138a3469c717c976b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Recursive&lt;/strong&gt; reduction, which is strict in all the elements of the structure. This produces a single final result only after processing the entire input structure, and so the input must be finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9db9b2d82045af0ef687f46fd582968b70dfaa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflexivity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reflexivity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b82302cd8a8e37a6d42b327c237c78b4a98d4a8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reject if in doubt&lt;/strong&gt;. An alternative approach would be to check for overlapping axioms, when solving a constraint. When multiple matching axioms are discovered, we &lt;strong&gt;reject the program&lt;/strong&gt;. This approach is a bit conservative, in that it may reject working programs. But it seem much more transparent towards the developer, who can be presented with a clear message, explaining why the program is rejected.</source>
          <target state="translated">&lt;strong&gt;Rechace si tiene dudas&lt;/strong&gt; . Un enfoque alternativo ser&amp;iacute;a verificar si hay axiomas superpuestos al resolver una restricci&amp;oacute;n. Cuando se descubren varios axiomas coincidentes, &lt;strong&gt;rechazamos el programa&lt;/strong&gt; . Este enfoque es un poco conservador, ya que puede rechazar programas de trabajo. Pero parece mucho m&amp;aacute;s transparente para el desarrollador, a quien se le puede presentar un mensaje claro, explicando por qu&amp;eacute; se rechaza el programa.</target>
        </trans-unit>
        <trans-unit id="8155d14fae21297bb2351ad76ac41a99e68aa1a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short-circuit&lt;/strong&gt; reduction, which examines some initial sequence of the input elements, but stops once a termination condition is met, returning a final result based only on the elements considered up to that point. The remaining elements are not considered. The input should generally be finite, because the termination condition might otherwise never be met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f25f822df506cef863bb9a00c96e4fcc1e4bad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Substitutivity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Substitutivity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e45f773e26962ea2903c38d6204599890b0de4a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Symmetry&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Symmetry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ee5c2d79bacdffb4c928966fd9071775b91a7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This extension is currently considered experimental, expect bugs, warts, and bad error messages; everything down to the syntax is subject to change&lt;/strong&gt;. See, in particular, &lt;a href=&quot;#linear-types-limitations&quot;&gt;Limitations&lt;/a&gt; below. We encourage you to experiment with this extension and report issues in the GHC bug tracker &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues&quot;&gt;the GHC bug tracker&lt;/a&gt;, adding the tag &lt;code&gt;LinearTypes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174acfc98226e3aa5c79a549f805f6cffd2f76aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Top level bindings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Enlaces de nivel superior&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75903953dc91115d2e5cd9a4146a4781631d6cb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transitivity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Transitivity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbc186f13791531aa2d22dbaf862de224a352ddf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: It's advised to avoid calling this primitive with negative exponents unless it is guaranteed the inverse exists, as failure to do so will likely cause program abortion due to a divide-by-zero fault. See also &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:recipModInteger&quot;&gt;recipModInteger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Advertencia&lt;/strong&gt; : Se recomienda evitar llamar a esta primitiva con exponentes negativos a menos que se garantice que existe la inversa, ya que de no hacerlo es probable que el programa se interrumpa debido a una falla de divisi&amp;oacute;n por cero. Consulte tambi&amp;eacute;n &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:recipModInteger&quot;&gt;recipModInteger&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="992f7e50f9c1364f8bae8fe4988cebb6afeb5ae8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: The internal implementation of &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; (i.e. which constructors are available) depends on the &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; backend used!</source>
          <target state="translated">&lt;strong&gt;Advertencia&lt;/strong&gt; : La implementaci&amp;oacute;n interna de &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; (es decir, qu&amp;eacute; constructores est&amp;aacute;n disponibles) depende del backend de &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; utilizado.</target>
        </trans-unit>
        <trans-unit id="083d34b27586c0efd3bb96a02d93d956f6452f30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: result may become negative if (at least) one argument is &lt;code&gt;minBound&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Advertencia&lt;/strong&gt; : el resultado puede volverse negativo si (al menos) un argumento es &lt;code&gt;minBound&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58416cb35befd57e074b001d9d43848b0e5f2ef5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hp2ps&lt;/strong&gt; is distributed in &lt;code&gt;ghc/utils/hp2ps&lt;/code&gt; in a GHC source distribution. It was originally developed by Dave Wakeling as part of the HBC/LML heap profiler.</source>
          <target state="translated">&lt;strong&gt;hp2ps&lt;/strong&gt; se distribuye en &lt;code&gt;ghc/utils/hp2ps&lt;/code&gt; en una distribuci&amp;oacute;n de origen GHC. Fue desarrollado originalmente por Dave Wakeling como parte del generador de perfiles de mont&amp;oacute;n HBC / LML.</target>
        </trans-unit>
        <trans-unit id="a2a10c48ea0cdf0ca5edaab63d2e386e55d8c83d" translate="yes" xml:space="preserve">
          <source>= (&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">= ( &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; , &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4d11ca513c5dfa1a04706b4e93d1d42a3f41dd63" translate="yes" xml:space="preserve">
          <source>= (&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80e39b83ebdc23fd3eef2c1399534af7f59d826" translate="yes" xml:space="preserve">
          <source>= (&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9374aa68561e358ba9277ebf67e9a0b2cac65c" translate="yes" xml:space="preserve">
          <source>= [&lt;a href=&quot;language-haskell-th#t:Pred&quot;&gt;Pred&lt;/a&gt;]</source>
          <target state="translated">= [ &lt;a href=&quot;language-haskell-th#t:Pred&quot;&gt;Pred&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a4a112b1856c707441c9370242edae658a769d2" translate="yes" xml:space="preserve">
          <source>= [&lt;a href=&quot;language-haskell-th-syntax#t:Pred&quot;&gt;Pred&lt;/a&gt;]</source>
          <target state="translated">= [ &lt;a href=&quot;language-haskell-th-syntax#t:Pred&quot;&gt;Pred&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f3e53936f3c79bf9c4206c8b91a0a0c917161364" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (&lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</source>
          <target state="translated">=&amp;gt; ( &lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</target>
        </trans-unit>
        <trans-unit id="22500a4bcb96fc197f5175e32ffc6ecdc6564339" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</source>
          <target state="translated">=&amp;gt; ( &lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</target>
        </trans-unit>
        <trans-unit id="98254af121448be337d889b7151e3095f29dfd2e" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (&lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</source>
          <target state="translated">=&amp;gt; ( &lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</target>
        </trans-unit>
        <trans-unit id="87b9b2b6b45827b7ebbf823fd4e6fa2e656b9896" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (a -&amp;gt; &lt;a href=&quot;text-show#t:ShowS&quot;&gt;ShowS&lt;/a&gt;)</source>
          <target state="translated">=&amp;gt; (a -&amp;gt; &lt;a href=&quot;text-show#t:ShowS&quot;&gt;ShowS&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7e543fa87f892cd0310b1be2e1183e668e09b4b6" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (ann -&amp;gt; m r)</source>
          <target state="translated">=&amp;gt; (ann -&amp;gt; se&amp;ntilde;or)</target>
        </trans-unit>
        <trans-unit id="3f837c598bd2a2ea0c21ac7ef916a3ba8c291114" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (e -&amp;gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; b)</source>
          <target state="translated">=&amp;gt; (e -&amp;gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="146ec650c89d3406783a47923e5bcd00b024cf1a" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (e -&amp;gt; a -&amp;gt; e)</source>
          <target state="translated">=&amp;gt; (e -&amp;gt; a -&amp;gt; e)</target>
        </trans-unit>
        <trans-unit id="28b8a020a4a70d67b201ecca5ebfe9b3decfac94" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (e -&amp;gt; e' -&amp;gt; e)</source>
          <target state="translated">=&amp;gt; (e -&amp;gt; e '-&amp;gt; e)</target>
        </trans-unit>
        <trans-unit id="d1cff79143a6b98192e6f5c93021392b3bb26523" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (i, i)</source>
          <target state="translated">=&amp;gt; (yo, yo)</target>
        </trans-unit>
        <trans-unit id="273c01aab4f2aada746f406147099fc43c561169" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (r -&amp;gt; a)</source>
          <target state="translated">=&amp;gt; (r -&amp;gt; a)</target>
        </trans-unit>
        <trans-unit id="98cb27f97fefd7391598e198b2314a4052bd3f10" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (s -&amp;gt; (a, s))</source>
          <target state="translated">=&amp;gt; (s -&amp;gt; (a, s))</target>
        </trans-unit>
        <trans-unit id="40a084ccf2eb50cdea0902780e3641bbeeb218a0" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;Cadena&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a913d2dfb1e9cb8a3706aeccb247062382be5958" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f5a6a0166bf7f1e62a147f1d55aa5e2926c2f4" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f7f76239cb27ca373456dbde8bc8bedbe3e3f1" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="631db25a13c5bd3f3a27fb66e2b126a624973fe7" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Quiz&amp;aacute;s &lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3b4666c0db847e1f4ef59969ccc1e08d98e0fb5" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;Cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83f228b1575a69db7fa34e7e1f31ba1fcc909002" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</target>
        </trans-unit>
        <trans-unit id="9b29c2ad51aea488dc493c38480ca6f86fb32ef5" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c452ca6d503847edaa9b27463d3b870902e52c" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eea19132ccdb3f07c5c85871217ec3b42357147" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a090ffafec70ef99fa90de5566cfbed70873913" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865ea042dc9d3a65bcfb422f98964127f8bc5900" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f972cd68ccad49565c245b300e7fd101e069a4b" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbece24d489fe410096efb4d6d117eb82e5a5278" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ca9e7a5ceefc17b8329679432b242d9666dcae" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c85809d4a3a2bbe15915426aa3ae9d49b837b4" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="881da90599e1b286facbeb80f0b5665a56f022f1" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="c0ed1cf1dee5f53006a4c0bd4c39fd64413da332" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt; e m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt; ema</target>
        </trans-unit>
        <trans-unit id="43faa2c3584d57723d2b7894cdd8de390f7d6ff3" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt; e m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptoT&lt;/a&gt; ema</target>
        </trans-unit>
        <trans-unit id="ed1c848733ee83ef5cfd6f49ba6a222cc681fb5b" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWS&quot;&gt;RWS&lt;/a&gt; r w s a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWS&quot;&gt;RWS&lt;/a&gt; rwsa</target>
        </trans-unit>
        <trans-unit id="0d59b61a3690bc45a5667c7d9d686fd7aae890a6" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="e04a43f264efe742e62b7c872cf3243a4e74e724" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="46a15491d5a54f8e9623cc81bd3b40c08cc35bc5" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="1decabf293013a44ad8fb38d770351c0b3d3eff0" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Din&amp;aacute;mico&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c49f72d1d47fd85210f06fe46bd2fbdba18a7f1" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; fac</target>
        </trans-unit>
        <trans-unit id="c6dd57371651023369288a8ddebf01f317b257ab" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; fac</target>
        </trans-unit>
        <trans-unit id="01807040766915893b46814bd7bc992c2c731d87" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; KAC</target>
        </trans-unit>
        <trans-unit id="f3e23cdc0abf474625d6acfcfc952ed151e46c12" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; fkac</target>
        </trans-unit>
        <trans-unit id="e4ec523b9e7b9c9afd657cd3f09a05fbaa7be373" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; KAC</target>
        </trans-unit>
        <trans-unit id="5b3d889a0b4ee8e84ff7b2d421af97fb78b317dd" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; fkac</target>
        </trans-unit>
        <trans-unit id="998942da66b438367a1103e796eb6fe2d1d3b071" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d97087128e0e8d5868c008414eb04d89f5c495f9" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-time-format#t:TimeLocale&quot;&gt;TimeLocale&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-time-format#t:TimeLocale&quot;&gt;TimeLocale&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16402fa4cd4c09cc613611f7301a7d80b85c6647" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a</target>
        </trans-unit>
        <trans-unit id="64674fd23e15a8758e1e185aedc3564f71140d67" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</target>
        </trans-unit>
        <trans-unit id="7cc439ff40c5b4dedd82f1f56048dc9dea26eb6f" translate="yes" xml:space="preserve">
          <source>=&amp;gt; [(node, key, [key])]</source>
          <target state="translated">=&amp;gt; [(nodo, clave, [clave])]</target>
        </trans-unit>
        <trans-unit id="43c78599b734a8beb8eaf6cf4e3c3a77e20137fe" translate="yes" xml:space="preserve">
          <source>=&amp;gt; a</source>
          <target state="translated">=&amp;gt; a</target>
        </trans-unit>
        <trans-unit id="9ed6660105e653b094e0abb01e8f35fac4855dca" translate="yes" xml:space="preserve">
          <source>=&amp;gt; dev</source>
          <target state="translated">=&amp;gt; dev</target>
        </trans-unit>
        <trans-unit id="6947818ac409551f11fbaa78f0ea6391960aa5b8" translate="yes" xml:space="preserve">
          <source>==</source>
          <target state="translated">==</target>
        </trans-unit>
        <trans-unit id="6bb984861a61b745289ffc16ea1e0057086b9c13" translate="yes" xml:space="preserve">
          <source>@&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:toLazyByteString&quot;&gt;toLazyByteString&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:fromShortByteString&quot;&gt;fromShortByteString&lt;/a&gt;&lt;/code&gt; bs) = &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#v:fromChunks&quot;&gt;fromChunks&lt;/a&gt;&lt;/code&gt; [&lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#v:fromShort&quot;&gt;fromShort&lt;/a&gt;&lt;/code&gt; bs]</source>
          <target state="translated">@ &lt;code&gt;&lt;a href=&quot;data-binary-builder#v:toLazyByteString&quot;&gt;toLazyByteString&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;data-binary-builder#v:fromShortByteString&quot;&gt;fromShortByteString&lt;/a&gt;&lt;/code&gt; bs) = &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#v:fromChunks&quot;&gt;fromChunks&lt;/a&gt;&lt;/code&gt; [ &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#v:fromShort&quot;&gt;fromShort&lt;/a&gt;&lt;/code&gt; bs]</target>
        </trans-unit>
        <trans-unit id="05f62fcb80c6543699d5f5fdd9477911d9bc454c" translate="yes" xml:space="preserve">
          <source>@&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:toLazyByteString&quot;&gt;toLazyByteString&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:fromShortByteString&quot;&gt;fromShortByteString&lt;/a&gt;&lt;/code&gt; bs) = &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring-lazy#v:fromChunks&quot;&gt;fromChunks&lt;/a&gt;&lt;/code&gt; [&lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring-short#v:fromShort&quot;&gt;fromShort&lt;/a&gt;&lt;/code&gt; bs]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7645f8659601261150e344f118c20cdc21f84f1c" translate="yes" xml:space="preserve">
          <source>@since 4.X.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f4dc36787602cc5de507d13c594861d488c7eb" translate="yes" xml:space="preserve">
          <source>A &quot;-&amp;gt;&quot; string</source>
          <target state="translated">Una cadena &quot;-&amp;gt;&quot;</target>
        </trans-unit>
        <trans-unit id="3dbf51df963b10779a311937a8f60e762c73a212" translate="yes" xml:space="preserve">
          <source>A &quot;::&quot; string</source>
          <target state="translated">Una cuerda de &quot;::&quot;</target>
        </trans-unit>
        <trans-unit id="300f220bfe895126a57222e655e8c3d3cabdf03a" translate="yes" xml:space="preserve">
          <source>A &quot;plain&quot; type constructor. &quot;Fancier&quot; type constructors are returned using &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; as appropriate. At present, this reified declaration will never have derived instances attached to it (if you wish to check for an instance, see &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Un constructor de tipo &quot;simple&quot;. Los constructores de tipo &quot;Fancier&quot; se devuelven utilizando &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; seg&amp;uacute;n corresponda. En la actualidad, esta declaraci&amp;oacute;n reificada nunca tendr&amp;aacute; instancias derivadas adjuntas (si desea verificar una instancia, consulte &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="10a841c387fe820bc69427b7c8889b542a6b0766" translate="yes" xml:space="preserve">
          <source>A &quot;plain&quot; type constructor. &quot;Fancier&quot; type constructors are returned using &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; as appropriate. At present, this reified declaration will never have derived instances attached to it (if you wish to check for an instance, see &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Un constructor de tipo &quot;simple&quot;. Los constructores de tipo &quot;Fancier&quot; se devuelven utilizando &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; seg&amp;uacute;n corresponda. En la actualidad, esta declaraci&amp;oacute;n reificada nunca tendr&amp;aacute; instancias derivadas adjuntas (si desea verificar una instancia, consulte &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="32c1213ff43ed2016bf02de4b047ebc7b374b44b" translate="yes" xml:space="preserve">
          <source>A &quot;primitive&quot; type constructor, which can't be expressed with a &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt;. Examples: &lt;code&gt;(-&amp;gt;)&lt;/code&gt;, &lt;code&gt;Int#&lt;/code&gt;.</source>
          <target state="translated">Un tipo &quot;primitivo&quot; constructor, que no puede ser expresado con un &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt; . Ejemplos: &lt;code&gt;(-&amp;gt;)&lt;/code&gt; , &lt;code&gt;Int#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8cadfacc5513088f5ce5adc653861e33911e323" translate="yes" xml:space="preserve">
          <source>A &quot;primitive&quot; type constructor, which can't be expressed with a &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt;. Examples: &lt;code&gt;(-&amp;gt;)&lt;/code&gt;, &lt;code&gt;Int#&lt;/code&gt;.</source>
          <target state="translated">Un tipo &quot;primitivo&quot; constructor, que no puede ser expresado con un &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt; . Ejemplos: &lt;code&gt;(-&amp;gt;)&lt;/code&gt; , &lt;code&gt;Int#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b95014d55a1a5c44f3c7bc23c6504bed812af75" translate="yes" xml:space="preserve">
          <source>A &quot;raw&quot; (disk) device which supports block binary read and write operations and may be seekable only to positions of certain granularity (block- aligned).</source>
          <target state="translated">Un dispositivo &quot;crudo&quot; (disco)que soporta operaciones de lectura y escritura binaria en bloque y que puede ser buscado sólo en posiciones de cierta granularidad (alineadas en bloque).</target>
        </trans-unit>
        <trans-unit id="40dadc0fe1ae92b18009dce1f8fd8927976b9479" translate="yes" xml:space="preserve">
          <source>A &quot;standard&quot; derived instance</source>
          <target state="translated">Una instancia derivada &quot;estándar</target>
        </trans-unit>
        <trans-unit id="a9c3609906f2647fca409f7da980e584e3ef11e0" translate="yes" xml:space="preserve">
          <source>A &quot;value&quot; variable (as opposed to a type variable, see &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Una variable de &quot;valor&quot; (a diferencia de una variable de tipo, consulte &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d2fa3eeda719de99d1617880e4ee077e0acc83a6" translate="yes" xml:space="preserve">
          <source>A &quot;value&quot; variable (as opposed to a type variable, see &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Una variable de &quot;valor&quot; (a diferencia de una variable de tipo, consulte &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7997fc7db9137928c1b509a18708a225d550e901" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;&lt;code&gt;Found hole&lt;/code&gt;&amp;rdquo; error usually terminates compilation, like any other type error. After all, you have omitted some code from your program. Nevertheless, you can run and test a piece of code containing holes, by using the &lt;a href=&quot;../using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt;&lt;code&gt;-fdefer-typed-holes&lt;/code&gt;&lt;/a&gt; flag. This flag defers errors produced by typed holes until runtime, and converts them into compile-time warnings. These warnings can in turn be suppressed entirely by &lt;a href=&quot;../using-warnings#ghc-flag--Wtyped-holes&quot;&gt;&lt;code&gt;-Wno-typed-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d099ba358135489de4b98f8bef8e1700327509fb" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;&lt;code&gt;Found hole&lt;/code&gt;&amp;rdquo; error usually terminates compilation, like any other type error. After all, you have omitted some code from your program. Nevertheless, you can run and test a piece of code containing holes, by using the &lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt;&lt;code&gt;-fdefer-typed-holes&lt;/code&gt;&lt;/a&gt; flag. This flag defers errors produced by typed holes until runtime, and converts them into compile-time warnings. These warnings can in turn be suppressed entirely by &lt;a href=&quot;using-warnings#ghc-flag--Wtyped-holes&quot;&gt;&lt;code&gt;-Wno-typed-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un error de &quot; &lt;code&gt;Found hole&lt;/code&gt; &quot; generalmente termina la compilaci&amp;oacute;n, como cualquier otro tipo de error. Despu&amp;eacute;s de todo, ha omitido alg&amp;uacute;n c&amp;oacute;digo de su programa. No obstante, puede ejecutar y probar un fragmento de c&amp;oacute;digo que contenga huecos, utilizando la &lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt; &lt;code&gt;-fdefer-typed-holes&lt;/code&gt; &lt;/a&gt; . Esta bandera difiere los errores producidos por los agujeros escritos hasta el tiempo de ejecuci&amp;oacute;n y los convierte en advertencias en tiempo de compilaci&amp;oacute;n. Estas advertencias, a su vez, pueden suprimirse por completo mediante &lt;a href=&quot;using-warnings#ghc-flag--Wtyped-holes&quot;&gt; &lt;code&gt;-Wno-typed-holes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03ff9cc92a1ea810e41d8095971be93bdf74f086" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;literate Haskell&amp;rdquo; module.</source>
          <target state="translated">Un m&amp;oacute;dulo de &quot;Haskell alfabetizado&quot;.</target>
        </trans-unit>
        <trans-unit id="8fe0e5fa44b3983941075b4a786a25d59bed2413" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;stable topological sort&amp;rdquo; here, we mean that we perform this algorithm (which we call &lt;em&gt;ScopedSort&lt;/em&gt;):</source>
          <target state="translated">Un &quot;tipo topol&amp;oacute;gico estable&quot; aqu&amp;iacute;, queremos decir que realizamos este algoritmo (que llamamos &lt;em&gt;ScopedSort&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="65e8bde33d0926b669005135d74a4a27a9f4e93e" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;strict pattern match&amp;rdquo; is any pattern match that can fail. For example, &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;(x:xs)&lt;/code&gt;, &lt;code&gt;!z&lt;/code&gt;, and &lt;code&gt;C x&lt;/code&gt; are strict patterns, but &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;~(1,2)&lt;/code&gt; are not. For the purposes of &lt;code&gt;ApplicativeDo&lt;/code&gt;, a pattern match against a &lt;code&gt;newtype&lt;/code&gt; constructor is considered strict.</source>
          <target state="translated">Una &quot;coincidencia de patr&amp;oacute;n estricta&quot; es cualquier coincidencia de patr&amp;oacute;n que puede fallar. Por ejemplo, &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;(x:xs)&lt;/code&gt; , &lt;code&gt;!z&lt;/code&gt; , y &lt;code&gt;C x&lt;/code&gt; son patrones estrictas, pero &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;~(1,2)&lt;/code&gt; no lo son. A los efectos de &lt;code&gt;ApplicativeDo&lt;/code&gt; , una coincidencia de patr&amp;oacute;n contra un &lt;code&gt;newtype&lt;/code&gt; constructor se considera estricta.</target>
        </trans-unit>
        <trans-unit id="f547f0739b0d3ec8b58b70d55fe4382a3dcaab7d" translate="yes" xml:space="preserve">
          <source>A '(' character</source>
          <target state="translated">Un personaje '(')</target>
        </trans-unit>
        <trans-unit id="70d5a19191116accb71ec443cd4b4fc4796865be" translate="yes" xml:space="preserve">
          <source>A ')' character</source>
          <target state="translated">Un personaje de ')'.</target>
        </trans-unit>
        <trans-unit id="5c59fc97f8f16f9e84989be6184e3be3c12f4c4d" translate="yes" xml:space="preserve">
          <source>A ',' character</source>
          <target state="translated">Un ',' personaje</target>
        </trans-unit>
        <trans-unit id="8cea7bc9d7fd5c53754fe5fa302c98ab7ebba9d0" translate="yes" xml:space="preserve">
          <source>A ';' character</source>
          <target state="translated">Un personaje de ';'.</target>
        </trans-unit>
        <trans-unit id="24a06b0596e6f9b715b619a7c1e59cb58205d143" translate="yes" xml:space="preserve">
          <source>A '=' character</source>
          <target state="translated">Un carácter &quot;=&quot;.</target>
        </trans-unit>
        <trans-unit id="f781f6726d451e5c82ca330b01816e92ba6ee9b1" translate="yes" xml:space="preserve">
          <source>A '[' character</source>
          <target state="translated">Un '[]personaje</target>
        </trans-unit>
        <trans-unit id="f989a4679028d9554fb0771f1f50eeed8579ba0d" translate="yes" xml:space="preserve">
          <source>A ']' character</source>
          <target state="translated">Un personaje</target>
        </trans-unit>
        <trans-unit id="fa5fc1c81727f1321da12121ae03096bcaacada5" translate="yes" xml:space="preserve">
          <source>A '{' character</source>
          <target state="translated">Un personaje de '{'.</target>
        </trans-unit>
        <trans-unit id="f0864bd7f5f8f23f2a725f53240aa607578e2ea5" translate="yes" xml:space="preserve">
          <source>A '}' character</source>
          <target state="translated">Un personaje '}'...</target>
        </trans-unit>
        <trans-unit id="0d686b1feab210fa1d571b1cf64d0dc555ea4552" translate="yes" xml:space="preserve">
          <source>A (partial) type signature has the following form: &lt;code&gt;forall a b .. . (C1, C2, ..) =&amp;gt; tau&lt;/code&gt;. It consists of three parts:</source>
          <target state="translated">Una firma de tipo (parcial) tiene la siguiente forma: &lt;code&gt;forall a b .. . (C1, C2, ..) =&amp;gt; tau&lt;/code&gt; . Consta de tres partes:</target>
        </trans-unit>
        <trans-unit id="f80c2a8ab20b3b616d4d4b2f353d1a0756e8af37" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#safe-language&quot;&gt;safe language&lt;/a&gt; dialect of Haskell that provides stricter guarantees about the code. It allows types and module boundaries to be trusted.</source>
          <target state="translated">Un dialecto de &lt;a href=&quot;#safe-language&quot;&gt;lenguaje seguro&lt;/a&gt; de Haskell que proporciona garant&amp;iacute;as m&amp;aacute;s estrictas sobre el c&amp;oacute;digo. Permite que se conf&amp;iacute;e en los tipos y l&amp;iacute;mites de los m&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="240604f168c64bbbbd9cc3f79b1c96c50e4da4c9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#&lt;/code&gt; is followed by optional spaces and tabs, an alphanumeric keyword that describes the kind of processing, and its arguments. Arguments look like C expressions separated by commas (they are not written inside parens). They extend up to the nearest unmatched &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt;, or to the end of line if it occurs outside any &lt;code&gt;() [] {} '' &quot;&quot; /**/&lt;/code&gt; and is not preceded by a backslash. Backslash-newline pairs are stripped.</source>
          <target state="translated">Un &lt;code&gt;#&lt;/code&gt; va seguido de espacios y tabulaciones opcionales, una palabra clave alfanum&amp;eacute;rica que describe el tipo de procesamiento y sus argumentos. Los argumentos tienen el aspecto de expresiones C separadas por comas (no est&amp;aacute;n escritas entre par&amp;eacute;ntesis). Se extienden hasta el no coincidente m&amp;aacute;s cercano &lt;code&gt;)&lt;/code&gt; , &lt;code&gt;]&lt;/code&gt; o &lt;code&gt;}&lt;/code&gt; , o hasta el final de la l&amp;iacute;nea si ocurre fuera de cualquier &lt;code&gt;() [] {} '' &quot;&quot; /**/&lt;/code&gt; y no est&amp;aacute; precedido por una barra invertida. Los pares de barra invertida-nueva l&amp;iacute;nea se eliminan.</target>
        </trans-unit>
        <trans-unit id="ec7d45efe24e17a78b3531b77507cc5b414969c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;:&lt;/code&gt; character</source>
          <target state="translated">A &lt;code&gt;:&lt;/code&gt; personaje</target>
        </trans-unit>
        <trans-unit id="4d77aa84dcc8476d8b0a59a06fc9910da40d4c94" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="translated">Una funci&amp;oacute;n similar a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; , especializada en &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, que aprovecha la estructura interna de &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; para evitar envolverse en &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; en ciertos puntos.</target>
        </trans-unit>
        <trans-unit id="79c191e27824000624b968ce755ce2407b5fc3a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; that describes the error.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; que describe el error.</target>
        </trans-unit>
        <trans-unit id="c8af9e26c7ea200796fafc8da4bdbcb725df4cd0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d400114eea1475d056fa063af7fa6b78840b520" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; that describes the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5923743c66c14ca8fe2bc6adfa2042271bf2976b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc060b93922360079cb1f325af3a9684b198eb3c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; that describes the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58fb0b6ff8af11490e6db18e3159b3eb14567f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an abstract type representing a handle to a thread. &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an instance of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt;, where the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance implements an arbitrary total ordering over &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;s. The &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; instance lets you convert an arbitrary-valued &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; to string form; showing a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; value is occasionally useful when debugging or diagnosing the behaviour of a concurrent program.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es un tipo abstracto que representa un identificador de un hilo. &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es una instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; , donde la instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; implementa un orden total arbitrario sobre &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; s. La instancia de &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; le permite convertir un &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; de valor arbitrario en forma de cadena; mostrar un valor de &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es ocasionalmente &amp;uacute;til al depurar o diagnosticar el comportamiento de un programa concurrente.</target>
        </trans-unit>
        <trans-unit id="ce7ce3c377d39b823d763d8b4302a42e6c97ffce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is a synchronising variable, used for communication between concurrent threads. It can be thought of as a box, which may be empty or full.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; es una variable de sincronizaci&amp;oacute;n que se utiliza para la comunicaci&amp;oacute;n entre subprocesos concurrentes. Se puede considerar como una caja, que puede estar vac&amp;iacute;a o llena.</target>
        </trans-unit>
        <trans-unit id="af4f02e01c3ad2f55652fc8918f170a9b5f03f08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is like a &lt;code&gt;TChan&lt;/code&gt;, with two important differences:</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; es como un &lt;code&gt;TChan&lt;/code&gt; , con dos diferencias importantes:</target>
        </trans-unit>
        <trans-unit id="db398cefd7bed902dc3f0468dccbf2a712235464" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; without a &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; instance may only be used in conjunction with pattern that always match, such as newtypes, tuples, data types with only a single data constructor, and irrefutable patterns (&lt;code&gt;~pat&lt;/code&gt;).</source>
          <target state="translated">A &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; sin un &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; ejemplo, s&amp;oacute;lo se puede usar en conjunci&amp;oacute;n con el modelo que siempre coincide, tales como Newtypes, tuplas, tipos de datos con s&amp;oacute;lo un &amp;uacute;nico constructor de datos, y los patrones irrefutables ( &lt;code&gt;~pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d52facfcc17560b0b9fcad065ab617e3ee01a7a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; without a &lt;code&gt;&lt;a href=&quot;control-monad-fail#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; instance may only be used in conjunction with pattern that always match, such as newtypes, tuples, data types with only a single data constructor, and irrefutable patterns (&lt;code&gt;~pat&lt;/code&gt;).</source>
          <target state="translated">A &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; sin un &lt;code&gt;&lt;a href=&quot;control-monad-fail#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; ejemplo, s&amp;oacute;lo se puede usar en conjunci&amp;oacute;n con el modelo que siempre coincide, tales como Newtypes, tuplas, tipos de datos con s&amp;oacute;lo un &amp;uacute;nico constructor de datos, y los patrones irrefutables ( &lt;code&gt;~pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="98a4293c93b9833b04feec4af599fa4ee1223c1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-monad-catch#t:MonadMask&quot;&gt;MonadMask&lt;/a&gt;&lt;/code&gt; computation may either succeed with a value, abort with an exception, or abort for some other reason. For example, in &lt;code&gt;ExceptT e IO&lt;/code&gt; you can use &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:throwM&quot;&gt;throwM&lt;/a&gt;&lt;/code&gt; to abort with an exception (&lt;code&gt;&lt;a href=&quot;control-monad-catch#v:ExitCaseException&quot;&gt;ExitCaseException&lt;/a&gt;&lt;/code&gt;) or &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-except#v:throwE&quot;&gt;throwE&lt;/a&gt;&lt;/code&gt; to abort with a value of type &lt;code&gt;e&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;control-monad-catch#v:ExitCaseAbort&quot;&gt;ExitCaseAbort&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ad78e77b876113c12279bae00129914cb00534" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; will generally be more efficient (in terms of both time and space) than the equivalent &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; with the same element type. However, &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; is strict in its elements - so don't use &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; if you require the non-strictness that &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; provides.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; generalmente ser&amp;aacute; m&amp;aacute;s eficiente (en t&amp;eacute;rminos de tiempo y espacio) que el &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; equivalente con el mismo tipo de elemento. Sin embargo, &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; es estricto en sus elementos, por lo que no use &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; si necesita la no rigurosidad que proporciona &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="847ef857687e72367977c03ca9ca6353ced7a496" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end yields &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; (short circuit):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387236e394e04d90b9aaa99b8be720f9777a2e5d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value infinitely far from the left end hangs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccaa5a853f1fe133a9c1964f7408ce1ac090820" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end yields &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; (short circuit):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfecb196440667fb82c8f75e4e5a04e16e0c97e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value infinitely far from the left end hangs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d5b0a46bf9ac13012695d647011268c6839438" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contiene bytes de 8 bits, o al usar las operaciones de &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; se puede interpretar que contiene caracteres de 8 bits.</target>
        </trans-unit>
        <trans-unit id="f0361d0a51c1f43d10a9cb740bc7c3263eaf2423" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; represents the result of running a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;. It unfolds as a sequence of chunks of data. These chunks come in two forms:</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; representa el resultado de ejecutar un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; . Se desarrolla como una secuencia de fragmentos de datos. Estos trozos vienen en dos formas:</target>
        </trans-unit>
        <trans-unit id="a2a67d6507558e86947578e9d9e53ccc77b5315b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; together with the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; of free bytes. The filled space starts at offset 0 and ends at the first free byte.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; junto con el &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; de bytes libres. El espacio lleno comienza en el desplazamiento 0 y termina en el primer byte libre.</target>
        </trans-unit>
        <trans-unit id="811beb8fb95b58583e6d93fef1cf1359e8bd2557" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action denotes a computation of a value that writes a stream of bytes as a side-effect. &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are strict in their side-effect; i.e., the stream of bytes will always be written before the computed value is returned.</source>
          <target state="translated">Una acci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; denota un c&amp;aacute;lculo de un valor que escribe un flujo de bytes como efecto secundario. &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; s son estrictos en sus efectos secundarios; es decir, el flujo de bytes siempre se escribir&amp;aacute; antes de que se devuelva el valor calculado.</target>
        </trans-unit>
        <trans-unit id="77ba64f4eea7ca7040ede60a91c0479a0256585a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contiene bytes de 8 bits, o al usar las operaciones de &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; se puede interpretar que contiene caracteres de 8 bits.</target>
        </trans-unit>
        <trans-unit id="3742f257dac22eaeb1f72c5a59a402dd9caed9a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contiene bytes de 8 bits, o al usar las operaciones de &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; se puede interpretar que contiene caracteres de 8 bits.</target>
        </trans-unit>
        <trans-unit id="87acc03140b6a38efd5eb569210acf530d577e77" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; may only represent a monomorphic value; an attempt to create a value of type &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; from a polymorphically-typed expression will result in an ambiguity error (see &lt;code&gt;&lt;a href=&quot;data-dynamic#v:toDyn&quot;&gt;toDyn&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; solo puede representar un valor monom&amp;oacute;rfico; un intento de crear un valor de tipo &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; a partir de una expresi&amp;oacute;n de tipo polim&amp;oacute;rfico resultar&amp;aacute; en un error de ambig&amp;uuml;edad (ver &lt;code&gt;&lt;a href=&quot;data-dynamic#v:toDyn&quot;&gt;toDyn&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7559ec7e510228d1d09527f56d2e4f26a8324238" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Comparison&quot;&gt;Comparison&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, because &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; can apply its function argument to each input of the comparison function.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Comparison&quot;&gt;Comparison&lt;/a&gt;&lt;/code&gt; es un &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; , porque &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; puede aplicar su argumento de funci&amp;oacute;n a cada entrada de la funci&amp;oacute;n de comparaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dfe92df845c7b9c6045ec318c8250ac09ae3d416" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Predicate&quot;&gt;Predicate&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, because &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; can apply its function argument to the input of the predicate.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Predicate&quot;&gt;Predicate&lt;/a&gt;&lt;/code&gt; es un &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; , porque &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; a puede aplicar su argumento de funci&amp;oacute;n a la entrada del predicado.</target>
        </trans-unit>
        <trans-unit id="89f60209ccece04c7a022e1e1c35644383139a1b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; list is one which always has at least one element, but is otherwise identical to the traditional list type in complexity and in terms of API. You will almost certainly want to import this module &lt;code&gt;qualified&lt;/code&gt;.</source>
          <target state="translated">Una lista &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; es aquella que siempre tiene al menos un elemento, pero por lo dem&amp;aacute;s es id&amp;eacute;ntica al tipo de lista tradicional en complejidad y en t&amp;eacute;rminos de API. Es casi seguro que querr&amp;aacute; importar este m&amp;oacute;dulo &lt;code&gt;qualified&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="344c6ff8d7a2bcd44da8bfd8dc8df57dba6e7404" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; with the added requirement of a neutral element. Thus any &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;, but not the other way around.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; es un &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; con el requisito adicional de un elemento neutral. Por lo tanto, cualquier &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; es un &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; , pero no al rev&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="e35d89b46351c9630145c0b8bbf882d79457fee2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a generalization of a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;. Yet unlike the &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; requires the presence of a neutral element (&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt;) in addition to the associative operator. The requirement for a neutral element prevents many types from being a full Monoid, like &lt;a href=&quot;data-list-nonempty-nonempty&quot;&gt;Data.List.NonEmpty.NonEmpty&lt;/a&gt;.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; es una generalizaci&amp;oacute;n de un &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; . Sin embargo, a diferencia del &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; , el &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; requiere la presencia de un elemento neutral ( &lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; ) adem&amp;aacute;s del operador asociativo. El requisito de un elemento neutral evita que muchos tipos sean un &lt;a href=&quot;data-list-nonempty-nonempty&quot;&gt;Monoid&lt;/a&gt; completo, como Data.List.NonEmpty.NonEmpty .</target>
        </trans-unit>
        <trans-unit id="276d119a24c0525aa19868a36000fbee697e666e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="translated">Una funci&amp;oacute;n similar a &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt; , especializada en &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, que aprovecha la estructura interna de &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; para evitar encapsularse en &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; en ciertos puntos.</target>
        </trans-unit>
        <trans-unit id="8fd75af820d1f54d527c5ea90ed335e09bb6599b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84511dcac21ac65b75749687fbca1119e8190ab2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031626d15f769e94dae06fe92bad6c13a12414d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is a list of characters. String constants in Haskell are values of type &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; es una lista de caracteres. Las constantes de cadena en Haskell son valores de tipo &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d557b82ce614c78066224f253d24d1e9e55d7e4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="translated">Un valor de &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; es una secuencia de valores escalares Unicode, como se define en &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definici&amp;oacute;n D76 del est&amp;aacute;ndar Unicode 5.2&lt;/a&gt; . Como tal, un &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; no puede contener valores en el rango U + D800 a U + DFFF inclusive. Las implementaciones de Haskell admiten todos los puntos de c&amp;oacute;digo Unicode ( &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definici&amp;oacute;n D10&lt;/a&gt; ) como valores &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , incluidos los puntos de c&amp;oacute;digo de este rango no v&amp;aacute;lido. Esto significa que hay algunos valores &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; que no son valores escalares Unicode v&amp;aacute;lidos, y las funciones de este m&amp;oacute;dulo deben manejar esos casos.</target>
        </trans-unit>
        <trans-unit id="ba6d7e8a329334a4b1d22a38141853602d817c11" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd09cc4e2dd986cdda3af230a4786350b6847249" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493151274c14fd9063bbd993eabc297404d04a97" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="translated">Un valor de &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; es una secuencia de valores escalares Unicode, como se define en &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definici&amp;oacute;n D76 del est&amp;aacute;ndar Unicode 5.2&lt;/a&gt; . Como tal, un &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; no puede contener valores en el rango U + D800 a U + DFFF inclusive. Las implementaciones de Haskell admiten todos los puntos de c&amp;oacute;digo Unicode ( &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definici&amp;oacute;n D10&lt;/a&gt; ) como valores &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , incluidos los puntos de c&amp;oacute;digo de este rango no v&amp;aacute;lido. Esto significa que hay algunos valores &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; que no son valores escalares Unicode v&amp;aacute;lidos, y las funciones de este m&amp;oacute;dulo deben manejar esos casos.</target>
        </trans-unit>
        <trans-unit id="f4efd90b35c412b075e756ebf2fb1e09bcf9e262" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f04c611bd484409b08efb1ab5363099dd50fe58" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ab4f0a1420ff27eb07a2afba8acbdae44df567" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; represents the version of a software entity.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; representa la versi&amp;oacute;n de una entidad de software.</target>
        </trans-unit>
        <trans-unit id="5972d36864fed9ff33b5afd14a95cb4b9c27b6e1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; es un tipo integral sin firmar, con el mismo tama&amp;ntilde;o que &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3aa7b36dc316c60d893b5f124b1ba5988ceb7f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is a list of characters. String constants in Haskell are values of type &lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; es una lista de caracteres. Las constantes de cadena en Haskell son valores de tipo &lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39546383234ce70932952659423f3ad369b9dc5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an abstract type representing a handle to a thread. &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an instance of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt;, where the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance implements an arbitrary total ordering over &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;s. The &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; instance lets you convert an arbitrary-valued &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; to string form; showing a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; value is occasionally useful when debugging or diagnosing the behaviour of a concurrent program.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es un tipo abstracto que representa un identificador de un hilo. &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es una instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; , donde la instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; implementa un orden total arbitrario sobre &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; s. La instancia de &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; le permite convertir un &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; de valor arbitrario en forma de cadena; mostrar un valor de &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es ocasionalmente &amp;uacute;til al depurar o diagnosticar el comportamiento de un programa concurrente.</target>
        </trans-unit>
        <trans-unit id="6daf9cc92f22cab1cda41ec56fc33fa5bcb5c1b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an abstract type representing a handle to a thread. &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an instance of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt;, where the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance implements an arbitrary total ordering over &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;s. The &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; instance lets you convert an arbitrary-valued &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; to string form; showing a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; value is occasionally useful when debugging or diagnosing the behaviour of a concurrent program.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es un tipo abstracto que representa un identificador de un hilo. &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es una instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; , donde la instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; implementa un orden total arbitrario sobre &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; s. La instancia de &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; le permite convertir un &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; de valor arbitrario en forma de cadena; mostrar un valor de &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; es ocasionalmente &amp;uacute;til al depurar o diagnosticar el comportamiento de un programa concurrente.</target>
        </trans-unit>
        <trans-unit id="c433ed52817c69814ef408474d7e7f0f19916c6d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt;. The &lt;code&gt;String&lt;/code&gt; is the name of function that was called, the &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; is the call-site. The list is ordered with the most recently called function at the head.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; es un &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt; . La &lt;code&gt;String&lt;/code&gt; es el nombre de la funci&amp;oacute;n que se llama, el &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; es la llamada in situ. La lista est&amp;aacute; ordenada con la funci&amp;oacute;n llamada m&amp;aacute;s recientemente al principio.</target>
        </trans-unit>
        <trans-unit id="e99764c1391b456842912477a01318962af2d4bc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; es un tipo integral sin firmar, con el mismo tama&amp;ntilde;o que &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c448caa1f3bf73a5f3c86998ff8b234d23f5d613" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; instance must satisfy the following laws:</source>
          <target state="translated">Una instancia &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; debe cumplir las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="f058fc8709c912eeb2b787983729f79e927817fe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; instance must satisfy the following laws:</source>
          <target state="translated">Una instancia de &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; debe cumplir las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="37bca98687b6539690c105875b7d36949eaf0920" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; is a specification of a conversion scheme between sequences of bytes and sequences of Unicode characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; es una especificaci&amp;oacute;n de un esquema de conversi&amp;oacute;n entre secuencias de bytes y secuencias de caracteres Unicode.</target>
        </trans-unit>
        <trans-unit id="9ccfc506522947e455012faccd5c0641a69d1d0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt;. The &lt;code&gt;String&lt;/code&gt; is the name of function that was called, the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; is the call-site. The list is ordered with the most recently called function at the head.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; es un &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt; . La &lt;code&gt;String&lt;/code&gt; es el nombre de la funci&amp;oacute;n que se llama, el &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; es la llamada in situ. La lista est&amp;aacute; ordenada con la funci&amp;oacute;n llamada m&amp;aacute;s recientemente al principio.</target>
        </trans-unit>
        <trans-unit id="95958acad6af1408745c1c860b5d733b2d323753" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt;. The &lt;code&gt;String&lt;/code&gt; is the name of function that was called, the &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; is the call-site. The list is ordered with the most recently called function at the head.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; es un &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt; . La &lt;code&gt;String&lt;/code&gt; es el nombre de la funci&amp;oacute;n que se llama, el &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; es la llamada in situ. La lista est&amp;aacute; ordenada con la funci&amp;oacute;n llamada m&amp;aacute;s recientemente al principio.</target>
        </trans-unit>
        <trans-unit id="8456cabb368794e2df99a2d1a5a798a5a772942a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; es un tipo integral sin firmar, con el mismo tama&amp;ntilde;o que &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e97ac17514823d55db637532fc8cca228a55594" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghci-resolvedbco#t:ResolvedBCO&quot;&gt;ResolvedBCO&lt;/a&gt;&lt;/code&gt; is one in which all the &lt;code&gt;Name&lt;/code&gt; references have been resolved to actual addresses or &lt;code&gt;RemoteHValues&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghci-resolvedbco#t:ResolvedBCO&quot;&gt;ResolvedBCO&lt;/a&gt;&lt;/code&gt; es aquel en el que todas las referencias de &lt;code&gt;Name&lt;/code&gt; se han resuelto a direcciones reales o &lt;code&gt;RemoteHValues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac3fb4ef717ebd938a5a9ccd1477f18f81bcf827" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;-style resource handler for &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9ca692d8226adf018ac8ce128aabc55c560244" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;-style resource handler for &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un controlador de recursos de estilo &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2efa953b4a158512aba395acdfd3f41d7d9dbfa4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;-style resource handler for &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a5f3927daf976203d0a64fefe6097c6cf2ad69" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance can have any of its values turned into a Template Haskell expression. This is needed when a value used within a Template Haskell quotation is bound outside the Oxford brackets (&lt;code&gt;[| ... |]&lt;/code&gt; or &lt;code&gt;[|| ... ||]&lt;/code&gt;) but not at the top level. As an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20537f017b881ed432aeb6d8c3c69764ad12389" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance can have any of its values turned into a Template Haskell expression. This is needed when a value used within a Template Haskell quotation is bound outside the Oxford brackets (&lt;code&gt;[| ... |]&lt;/code&gt;) but not at the top level. As an example:</source>
          <target state="translated">Una instancia de &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; puede convertir cualquiera de sus valores en una expresi&amp;oacute;n de plantilla Haskell. Esto es necesario cuando un valor utilizado dentro de una cotizaci&amp;oacute;n de plantilla de Haskell est&amp;aacute; limitado fuera de los corchetes de Oxford ( &lt;code&gt;[| ... |]&lt;/code&gt; ) pero no en el nivel superior. Como ejemplo:</target>
        </trans-unit>
        <trans-unit id="c9e2e94c84b5b9cd735447e28ce573e13139de2a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance must satisfy &lt;code&gt;$(lift x) &amp;equiv; x&lt;/code&gt; and &lt;code&gt;$$(liftTyped x) &amp;equiv; x&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;$(...)&lt;/code&gt; and &lt;code&gt;$$(...)&lt;/code&gt; are Template Haskell splices. It is additionally expected that &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lift&quot;&gt;lift&lt;/a&gt; x &amp;equiv; &lt;a href=&quot;language-haskell-th-syntax#v:unTypeQ&quot;&gt;unTypeQ&lt;/a&gt; (&lt;a href=&quot;language-haskell-th-syntax#v:liftTyped&quot;&gt;liftTyped&lt;/a&gt; x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baf8997f83651b56856d51ed22119ab60baf8c6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance must satisfy &lt;code&gt;$(lift x) &amp;equiv; x&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;$(...)&lt;/code&gt; is a Template Haskell splice.</source>
          <target state="translated">Una instancia de &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; debe satisfacer &lt;code&gt;$(lift x) &amp;equiv; x&lt;/code&gt; para todo &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;$(...)&lt;/code&gt; es un empalme Haskell de plantilla.</target>
        </trans-unit>
        <trans-unit id="dc2e529d77216b7e230e75736a12096341b81566" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; without a &lt;code&gt;&lt;a href=&quot;prelude#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; instance may only be used in conjunction with pattern that always match, such as newtypes, tuples, data types with only a single data constructor, and irrefutable patterns (&lt;code&gt;~pat&lt;/code&gt;).</source>
          <target state="translated">A &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; sin un &lt;code&gt;&lt;a href=&quot;prelude#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; ejemplo, s&amp;oacute;lo se puede usar en conjunci&amp;oacute;n con el modelo que siempre coincide, tales como Newtypes, tuplas, tipos de datos con s&amp;oacute;lo un &amp;uacute;nico constructor de datos, y los patrones irrefutables ( &lt;code&gt;~pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="01cb4e7f2872a463ecfc84cecc5fd37176ad2686" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is a list of characters. String constants in Haskell are values of type &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; es una lista de caracteres. Las constantes de cadena en Haskell son valores de tipo &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16c73c4644db1dd430eecd595b2935abcbd70f5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;prelude#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;prelude#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; es un tipo integral sin firmar, con el mismo tama&amp;ntilde;o que &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5384336a86ebc421cc3fe658790659229a2e63f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; is a method for deciding at run-time which type of interaction to use.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; es un m&amp;eacute;todo para decidir en tiempo de ejecuci&amp;oacute;n qu&amp;eacute; tipo de interacci&amp;oacute;n utilizar.</target>
        </trans-unit>
        <trans-unit id="45d218cdb4af63fb065f7347943499e7d49ef9be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;system-console-haskeline-monadexception#t:RunIO&quot;&gt;RunIO&lt;/a&gt;&lt;/code&gt; function takes a monadic action &lt;code&gt;m&lt;/code&gt; as input, and outputs an IO action which performs the underlying impure part of &lt;code&gt;m&lt;/code&gt; and returns the '&lt;code&gt;pure'&lt;/code&gt; part of &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">UNA &lt;code&gt;&lt;a href=&quot;system-console-haskeline-monadexception#t:RunIO&quot;&gt;RunIO&lt;/a&gt;&lt;/code&gt; funci&amp;oacute;n RunIO toma una acci&amp;oacute;n mon&amp;aacute;dica &lt;code&gt;m&lt;/code&gt; como entrada y genera una acci&amp;oacute;n IO que realiza la parte impura subyacente de &lt;code&gt;m&lt;/code&gt; y devuelve la parte ' &lt;code&gt;pure'&lt;/code&gt; de &lt;code&gt;m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3139966130ea6dafab5ae56d42fa83f1c983bce8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; is a specification of a conversion scheme between sequences of bytes and sequences of Unicode characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; es una especificaci&amp;oacute;n de un esquema de conversi&amp;oacute;n entre secuencias de bytes y secuencias de caracteres Unicode.</target>
        </trans-unit>
        <trans-unit id="1a15ba8c0101a0b559f5881de53f7fa0649c9e6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="translated">El combinador de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; genera un &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; mensaje . El argumento es un mensaje de analizador general.</target>
        </trans-unit>
        <trans-unit id="d7c33b518e905e06246fdc3442ce5bfca419239f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e58353acc65029a29c5f94d4523fb7e0eae49d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ef7fe44084ddf44d2e8bb742356ef4d58d6b59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the expected item.</source>
          <target state="translated">El combinador &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; Genera un mensaje &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; . El argumento describe el elemento esperado.</target>
        </trans-unit>
        <trans-unit id="2f54fff1c216809b3a5e0dbc637601d50f8c6c28" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; message is automatically generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; combinator. The argument is the unexpected input.</source>
          <target state="translated">UNA &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; combinador de &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; genera autom&amp;aacute;ticamentemensaje SysUnExpect . El argumento es la entrada inesperada.</target>
        </trans-unit>
        <trans-unit id="cd574240b0c567cd017058a316ed035f46f6524e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the unexpected item.</source>
          <target state="translated">UNA &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; generamensaje UnExpect . El argumento describe el elemento inesperado.</target>
        </trans-unit>
        <trans-unit id="c19aa3725eed1ff35ec390fbcd0c985fd5b931ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="translated">UNA &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; combinador de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; genera mensaje de mensaje . El argumento es un mensaje de analizador general.</target>
        </trans-unit>
        <trans-unit id="c65c2017bc5e0477e9c2b63e9054f9b8989ca0a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6ff3260d341085786c3b5f87f8c725da8326a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbea807bde10982fba750640fdd252b73cdd256c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the expected item.</source>
          <target state="translated">UNA &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; combinador &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; Genera mensaje Expect . El argumento describe el elemento esperado.</target>
        </trans-unit>
        <trans-unit id="a0592092bb04d822c205343ec720a927bd033f59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; message is automatically generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; combinator. The argument is the unexpected input.</source>
          <target state="translated">UNA &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; combinador de &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; genera autom&amp;aacute;ticamentemensaje SysUnExpect . El argumento es la entrada inesperada.</target>
        </trans-unit>
        <trans-unit id="043b63a3a919975f6460c5dd3c3a8b5b0fcacbb9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the unexpected item.</source>
          <target state="translated">UNA &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; generamensaje UnExpect . El argumento describe el elemento inesperado.</target>
        </trans-unit>
        <trans-unit id="97982bdf22f3c28d9d65ec6b0247f3758c15fa0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Builder&lt;/code&gt; is an efficient way to build lazy &lt;code&gt;Text&lt;/code&gt; values. There are several functions for constructing builders, but only one to inspect them: to extract any data, you have to turn them into lazy &lt;code&gt;Text&lt;/code&gt; values using &lt;code&gt;toLazyText&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Builder&lt;/code&gt; es una forma eficaz de crear valores de &lt;code&gt;Text&lt;/code&gt; diferidos. Hay varias funciones para construir constructores, pero solo una para inspeccionarlos: para extraer cualquier dato, debe convertirlos en valores de &lt;code&gt;Text&lt;/code&gt; &lt;code&gt;toLazyText&lt;/code&gt; usando toLazyText .</target>
        </trans-unit>
        <trans-unit id="994c45c3efba13b92d41911d6419360be708120c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DEPRECATED&lt;/code&gt; pragma lets you specify that a particular function, class, or type is deprecated.</source>
          <target state="translated">Un pragma &lt;code&gt;DEPRECATED&lt;/code&gt; le permite especificar que una funci&amp;oacute;n, clase o tipo en particular est&amp;aacute; en desuso.</target>
        </trans-unit>
        <trans-unit id="202df593255e09bcdac86158dc3e1eaaeacee3f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;HasField x r a&lt;/code&gt; constraint represents the fact that &lt;code&gt;x&lt;/code&gt; is a field of type &lt;code&gt;a&lt;/code&gt; belonging to a record type &lt;code&gt;r&lt;/code&gt;. The &lt;code&gt;getField&lt;/code&gt; method gives the record selector function.</source>
          <target state="translated">Una restricci&amp;oacute;n &lt;code&gt;HasField x r a&lt;/code&gt; representa el hecho de que &lt;code&gt;x&lt;/code&gt; es un campo de tipo &lt;code&gt;a&lt;/code&gt; pertenece a un tipo de registro &lt;code&gt;r&lt;/code&gt; . El m&amp;eacute;todo &lt;code&gt;getField&lt;/code&gt; proporciona la funci&amp;oacute;n de selector de registros.</target>
        </trans-unit>
        <trans-unit id="48ba20858c6e487ee442bbf0e918d296f38bac12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Message a&lt;/code&gt; is a message that returns a value of type &lt;code&gt;a&lt;/code&gt;. These are requests sent from GHC to the server.</source>
          <target state="translated">UNA &lt;code&gt;Message a&lt;/code&gt; es un mensaje que devuelve un valor de tipo &lt;code&gt;a&lt;/code&gt; . Estas son solicitudes enviadas desde GHC al servidor.</target>
        </trans-unit>
        <trans-unit id="4cb20e68d9cba85e4c2de51bcc3a4286e1b2b4ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModGuts&lt;/code&gt; holds all of the module&amp;rsquo;s top level bindings which we can examine. These bindings are of type &lt;code&gt;CoreBind&lt;/code&gt; and effectively represent the binding of a name to body of code. Top-level module bindings are part of a &lt;code&gt;ModGuts&lt;/code&gt; in the field &lt;code&gt;mg_binds&lt;/code&gt;. Implementing a pass that manipulates the top level bindings merely needs to iterate over this field, and return a new &lt;code&gt;ModGuts&lt;/code&gt; with an updated &lt;code&gt;mg_binds&lt;/code&gt; field. Because this is such a common case, there is a function provided named &lt;code&gt;bindsOnlyPass&lt;/code&gt; which lifts a function of type &lt;code&gt;([CoreBind] -&amp;gt; CoreM [CoreBind])&lt;/code&gt; to type &lt;code&gt;(ModGuts -&amp;gt; CoreM ModGuts)&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;ModGuts&lt;/code&gt; contiene todos los enlaces de nivel superior del m&amp;oacute;dulo que podemos examinar. Estos enlaces son de tipo &lt;code&gt;CoreBind&lt;/code&gt; y representan efectivamente el enlace de un nombre al cuerpo del c&amp;oacute;digo. Los enlaces de m&amp;oacute;dulo de nivel superior son parte de &lt;code&gt;ModGuts&lt;/code&gt; en el campo &lt;code&gt;mg_binds&lt;/code&gt; . La implementaci&amp;oacute;n de un pase que manipula los enlaces de nivel superior simplemente necesita iterar sobre este campo y devolver un nuevo &lt;code&gt;ModGuts&lt;/code&gt; con un campo &lt;code&gt;mg_binds&lt;/code&gt; actualizado . Debido a que este es un caso tan com&amp;uacute;n, se proporciona una funci&amp;oacute;n llamada &lt;code&gt;bindsOnlyPass&lt;/code&gt; que eleva una funci&amp;oacute;n de tipo &lt;code&gt;([CoreBind] -&amp;gt; CoreM [CoreBind])&lt;/code&gt; a tipo &lt;code&gt;(ModGuts -&amp;gt; CoreM ModGuts)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a70f83cdade171d92c14ec57aaab7b2cf6914937" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MutVar#&lt;/code&gt; behaves like a single-element mutable array.</source>
          <target state="translated">UNA &lt;code&gt;MutVar#&lt;/code&gt; se comporta como una matriz mutable de un solo elemento.</target>
        </trans-unit>
        <trans-unit id="6b8d2e79c3650e0188852b9ee2cfa2dcd42b4114" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Plugin&lt;/code&gt; effectively holds a function which installs a compilation pass into the compiler pipeline. By default there is the empty plugin which does nothing, &lt;code&gt;GHC.Plugins.defaultPlugin&lt;/code&gt;, which you should override with record syntax to specify your installation function. Since the exact fields of the &lt;code&gt;Plugin&lt;/code&gt; type are open to change, this is the best way to ensure your plugins will continue to work in the future with minimal interface impact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6337414644ea4c6c26609fea40acca352b7ea57" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Plugin&lt;/code&gt; effectively holds a function which installs a compilation pass into the compiler pipeline. By default there is the empty plugin which does nothing, &lt;code&gt;GhcPlugins.defaultPlugin&lt;/code&gt;, which you should override with record syntax to specify your installation function. Since the exact fields of the &lt;code&gt;Plugin&lt;/code&gt; type are open to change, this is the best way to ensure your plugins will continue to work in the future with minimal interface impact.</source>
          <target state="translated">Un &lt;code&gt;Plugin&lt;/code&gt; contiene efectivamente una funci&amp;oacute;n que instala un pase de compilaci&amp;oacute;n en la canalizaci&amp;oacute;n del compilador. De forma predeterminada, existe el complemento vac&amp;iacute;o que no hace nada, &lt;code&gt;GhcPlugins.defaultPlugin&lt;/code&gt; , que debe anular con la sintaxis de registro para especificar su funci&amp;oacute;n de instalaci&amp;oacute;n. Dado que los campos exactos del tipo de &lt;code&gt;Plugin&lt;/code&gt; est&amp;aacute;n abiertos a cambios, esta es la mejor manera de garantizar que sus complementos contin&amp;uacute;en funcionando en el futuro con un impacto m&amp;iacute;nimo en la interfaz.</target>
        </trans-unit>
        <trans-unit id="c79966287c7a0289106cbf652df27cd92d1d3c79" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Reader&lt;/code&gt; to run.</source>
          <target state="translated">Un &lt;code&gt;Reader&lt;/code&gt; para ejecutar.</target>
        </trans-unit>
        <trans-unit id="42d146b8c1428a840a06c263b2ea3c6508ddd7d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; has the effect of generating (a) a specialised version of the function and (b) a rewrite rule (see &lt;a href=&quot;#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;) that rewrites a call to the un-specialised function into a call to the specialised one. Moreover, given a &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma for a function &lt;code&gt;f&lt;/code&gt;, GHC will automatically create specialisations for any type-class-overloaded functions called by &lt;code&gt;f&lt;/code&gt;, if they are in the same module as the &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma, or if they are &lt;code&gt;INLINABLE&lt;/code&gt;; and so on, transitively.</source>
          <target state="translated">Un &lt;code&gt;SPECIALIZE&lt;/code&gt; tiene el efecto de generar (a) una versi&amp;oacute;n especializada de la funci&amp;oacute;n y (b) una regla de reescritura (ver &lt;a href=&quot;#rewrite-rules&quot;&gt;Reglas de&lt;/a&gt; reescritura) que reescribe una llamada a la funci&amp;oacute;n no especializada en una llamada a la especializada. Adem&amp;aacute;s, dado un pragma &lt;code&gt;SPECIALIZE&lt;/code&gt; para una funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; , GHC crear&amp;aacute; autom&amp;aacute;ticamente especializaciones para cualquier funci&amp;oacute;n sobrecargada de clase de tipo llamada por &lt;code&gt;f&lt;/code&gt; , si est&amp;aacute;n en el mismo m&amp;oacute;dulo que el &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma SPECIALIZE , o si son &lt;code&gt;INLINABLE&lt;/code&gt; ; y as&amp;iacute; sucesivamente, de forma transitiva.</target>
        </trans-unit>
        <trans-unit id="eea1ba3f2a174923ad0f56aa695c2ab086c3cbf9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; has the effect of generating (a) a specialised version of the function and (b) a rewrite rule (see &lt;a href=&quot;rewrite_rules#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;) that rewrites a call to the un-specialised function into a call to the specialised one. Moreover, given a &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma for a function &lt;code&gt;f&lt;/code&gt;, GHC will automatically create specialisations for any type-class-overloaded functions called by &lt;code&gt;f&lt;/code&gt;, if they are in the same module as the &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma, or if they are &lt;code&gt;INLINABLE&lt;/code&gt;; and so on, transitively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b980d520829db47b0e6b9e92a84de862c7cc8a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma can optionally be followed with a &lt;code&gt;INLINE&lt;/code&gt; or &lt;code&gt;NOINLINE&lt;/code&gt; pragma, optionally followed by a phase, as described in &lt;a href=&quot;#inline-noinline-pragma&quot;&gt;INLINE and NOINLINE pragmas&lt;/a&gt;. The &lt;code&gt;INLINE&lt;/code&gt; pragma affects the specialised version of the function (only), and applies even if the function is recursive. The motivating example is this:</source>
          <target state="translated">Un pragma &lt;code&gt;SPECIALIZE&lt;/code&gt; se puede seguir opcionalmente con un pragma &lt;code&gt;INLINE&lt;/code&gt; o &lt;code&gt;NOINLINE&lt;/code&gt; , seguido opcionalmente de una fase, como se describe en los &lt;a href=&quot;#inline-noinline-pragma&quot;&gt;pragmas INLINE y NOINLINE&lt;/a&gt; . El pragma &lt;code&gt;INLINE&lt;/code&gt; afecta a la versi&amp;oacute;n especializada de la funci&amp;oacute;n (solo) y se aplica incluso si la funci&amp;oacute;n es recursiva. El ejemplo motivador es este:</target>
        </trans-unit>
        <trans-unit id="7b82be1262e45e02f43857ca0ff6515f9db20126" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma for a function can be put anywhere its type signature could be put. Moreover, you can also &lt;code&gt;SPECIALIZE&lt;/code&gt; an &lt;em&gt;imported&lt;/em&gt; function provided it was given an &lt;code&gt;INLINABLE&lt;/code&gt; pragma at its definition site (&lt;a href=&quot;#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;).</source>
          <target state="translated">Un pragma &lt;code&gt;SPECIALIZE&lt;/code&gt; para una funci&amp;oacute;n se puede colocar en cualquier lugar donde se pueda colocar su firma de tipo. Adem&amp;aacute;s, tambi&amp;eacute;n puede &lt;code&gt;SPECIALIZE&lt;/code&gt; una funci&amp;oacute;n &lt;em&gt;importada&lt;/em&gt; siempre que se le haya asignado un &lt;code&gt;INLINABLE&lt;/code&gt; pragma en su sitio de definici&amp;oacute;n ( &lt;a href=&quot;#inlinable-pragma&quot;&gt;pragma INLINABLE&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a25c001444e85ab6f7b0766980538a555f7440b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Span&lt;/code&gt; represents the result of an annotation after a &lt;code&gt;Doc&lt;/code&gt; has been rendered, capturing where the annotation now starts and ends in the rendered output.</source>
          <target state="translated">Un &lt;code&gt;Span&lt;/code&gt; representa el resultado de una anotaci&amp;oacute;n despu&amp;eacute;s de un &lt;code&gt;Doc&lt;/code&gt; se ha prestado, capturando donde la anotaci&amp;oacute;n ahora comienza y termina en la salida mostrada.</target>
        </trans-unit>
        <trans-unit id="9ed158fbad702e89568f4c1dbb871930a8429284" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Stream&lt;/code&gt; instance is responsible for maintaining the &quot;position within the stream&quot; in the stream state &lt;code&gt;s&lt;/code&gt;. This is trivial unless you are using the monad in a non-trivial way.</source>
          <target state="translated">Una &lt;code&gt;Stream&lt;/code&gt; instancia es responsable de mantener la &quot;posici&amp;oacute;n dentro de la corriente&quot; en el estado de flujo &lt;code&gt;s&lt;/code&gt; . Esto es trivial a menos que est&amp;eacute; utilizando la m&amp;oacute;nada de una manera no trivial.</target>
        </trans-unit>
        <trans-unit id="6768d45124fc6209d1d55206e3becea75d2017a7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;data instance&lt;/code&gt; can use GADT syntax for the data constructors, and indeed can define a GADT. For example:</source>
          <target state="translated">UNA &lt;code&gt;data instance&lt;/code&gt; puede usar la sintaxis GADT para los constructores de datos y, de hecho, puede definir una GADT. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="74cabc38aef40d10530f088fa7619bad50be5163" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;newtype&lt;/code&gt; instance actually can have &lt;em&gt;two&lt;/em&gt; return kinds. The first is the kind derived by applying the data family to the patterns provided in the instance declaration. The second is given by a kind annotation. Both return kinds must satisfy the restrictions above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daba80bb3a6be48bbea57e35e9db17367b1d0d13" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;deriving instance&lt;/code&gt; declaration must obey the same rules concerning form and termination as ordinary instance declarations, controlled by the same flags; see &lt;a href=&quot;#instance-decls&quot;&gt;Instance declarations&lt;/a&gt;.</source>
          <target state="translated">Una declaraci&amp;oacute;n de &lt;code&gt;deriving instance&lt;/code&gt; debe obedecer las mismas reglas en cuanto a forma y terminaci&amp;oacute;n que las declaraciones de instancia ordinarias, controladas por los mismos indicadores; consulte &lt;a href=&quot;#instance-decls&quot;&gt;Declaraciones de instancia&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcedd81e3b114ae1f25eaf1d0ce6b61eb1be2f83" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;deriving instance&lt;/code&gt; declaration must obey the same rules concerning form and termination as ordinary instance declarations, controlled by the same flags; see &lt;a href=&quot;instances#instance-decls&quot;&gt;Instance declarations and resolution&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59db072390d4948ccdd767966bcedd58bf2bcf38" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;hs-boot&lt;/code&gt; file is compiled by GHC, just like a &lt;code&gt;hs&lt;/code&gt; file:</source>
          <target state="translated">Una &lt;code&gt;hs-boot&lt;/code&gt; archivo se compila por GHC, al igual que un &lt;code&gt;hs&lt;/code&gt; archivo:</target>
        </trans-unit>
        <trans-unit id="0ee8809aa12d51318c13f6f45ee2d8d36268a40a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;rec&lt;/code&gt;-block tells the compiler where precisely the recursive knot should be tied. It turns out that the placement of the recursive knots can be rather delicate: in particular, we would like the knots to be wrapped around as minimal groups as possible. This process is known as &lt;em&gt;segmentation&lt;/em&gt;, and is described in detail in Section 3.2 of &lt;a href=&quot;http://leventerkok.github.io/papers/recdo.pdf&quot;&gt;A recursive do for Haskell&lt;/a&gt;. Segmentation improves polymorphism and reduces the size of the recursive knot. Most importantly, it avoids unnecessary interference caused by a fundamental issue with the so-called &lt;em&gt;right-shrinking&lt;/em&gt; axiom for monadic recursion. In brief, most monads of interest (IO, strict state, etc.) do &lt;em&gt;not&lt;/em&gt; have recursion operators that satisfy this axiom, and thus not performing segmentation can cause unnecessary interference, changing the termination behavior of the resulting translation. (Details can be found in Sections 3.1 and 7.2.2 of &lt;a href=&quot;http://leventerkok.github.io/papers/erkok-thesis.pdf&quot;&gt;Value Recursion in Monadic Computations&lt;/a&gt;.)</source>
          <target state="translated">Un &lt;code&gt;rec&lt;/code&gt; - bloque le dice al compilador d&amp;oacute;nde se debe atar precisamente el nudo recursivo. Resulta que la colocaci&amp;oacute;n de los nudos recursivos puede ser bastante delicada: en particular, nos gustar&amp;iacute;a que los nudos estuvieran envueltos en grupos tan m&amp;iacute;nimos como sea posible. Este proceso se conoce como &lt;em&gt;segmentaci&amp;oacute;n&lt;/em&gt; y se describe en detalle en la Secci&amp;oacute;n 3.2 de &lt;a href=&quot;http://leventerkok.github.io/papers/recdo.pdf&quot;&gt;A recursive do for Haskell&lt;/a&gt; . La segmentaci&amp;oacute;n mejora el polimorfismo y reduce el tama&amp;ntilde;o del nudo recursivo. M&amp;aacute;s importante a&amp;uacute;n, evita interferencias innecesarias causadas por un problema fundamental con el llamado&lt;em&gt;&lt;/em&gt; axioma de &lt;em&gt;contracci&amp;oacute;n a la derecha&lt;/em&gt; para la recursividad mon&amp;aacute;dica. En resumen, la mayor&amp;iacute;a de las m&amp;oacute;nadas de inter&amp;eacute;s (IO, estado estricto, etc.) &lt;em&gt;no&lt;/em&gt;tienen operadores de recursividad que satisfacen este axioma y, por lo tanto, no realizar la segmentaci&amp;oacute;n puede causar interferencias innecesarias, cambiando el comportamiento de terminaci&amp;oacute;n de la traducci&amp;oacute;n resultante. (Los detalles se pueden encontrar en las Secciones 3.1 y 7.2.2 de Recurrencia de &lt;a href=&quot;http://leventerkok.github.io/papers/erkok-thesis.pdf&quot;&gt;valores en c&amp;aacute;lculos mon&amp;aacute;dicos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="634d8c1c5fc85c63ad48d6c53ca1ba9951fc19ae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;rec&lt;/code&gt;-block tells the compiler where precisely the recursive knot should be tied. It turns out that the placement of the recursive knots can be rather delicate: in particular, we would like the knots to be wrapped around as minimal groups as possible. This process is known as &lt;em&gt;segmentation&lt;/em&gt;, and is described in detail in Section 3.2 of &lt;a href=&quot;https://leventerkok.github.io/papers/recdo.pdf&quot;&gt;A recursive do for Haskell&lt;/a&gt;. Segmentation improves polymorphism and reduces the size of the recursive knot. Most importantly, it avoids unnecessary interference caused by a fundamental issue with the so-called &lt;em&gt;right-shrinking&lt;/em&gt; axiom for monadic recursion. In brief, most monads of interest (IO, strict state, etc.) do &lt;em&gt;not&lt;/em&gt; have recursion operators that satisfy this axiom, and thus not performing segmentation can cause unnecessary interference, changing the termination behavior of the resulting translation. (Details can be found in Sections 3.1 and 7.2.2 of &lt;a href=&quot;https://leventerkok.github.io/papers/erkok-thesis.pdf&quot;&gt;Value Recursion in Monadic Computations&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6424d363fc1534d52bf8f4a0355f089902e52f85" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;safe&lt;/code&gt; call calling into haskell is run on a bound thread by the RTS. This means any nesting of &lt;code&gt;safe&lt;/code&gt; calls will be executed on the same operating system thread. &lt;em&gt;Sequential&lt;/em&gt;&lt;code&gt;safe&lt;/code&gt; calls however do not enjoy this luxury and may be run on arbitrary OS threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdbd6d30e59c1faa209edf1aa68a5deb84cd963" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;lexically scoped type variable&lt;/em&gt; can be bound by:</source>
          <target state="translated">Una &lt;em&gt;variable de tipo de &amp;aacute;mbito l&amp;eacute;xico&lt;/em&gt; puede estar limitada por:</target>
        </trans-unit>
        <trans-unit id="109054251366535f7af799fd6243e0d372229344" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;package environment file&lt;/em&gt; is a file that tells &lt;code&gt;ghc&lt;/code&gt; precisely which packages should be visible. It can be used to create environments for &lt;code&gt;ghc&lt;/code&gt; or &lt;code&gt;ghci&lt;/code&gt; that are local to a shell session or to some file system location. They are intended to be managed by build/package tools, to enable &lt;code&gt;ghc&lt;/code&gt; and &lt;code&gt;ghci&lt;/code&gt; to automatically use an environment created by the tool.</source>
          <target state="translated">Un &lt;em&gt;archivo de entorno de paquete&lt;/em&gt; es un archivo que le dice a &lt;code&gt;ghc&lt;/code&gt; con precisi&amp;oacute;n qu&amp;eacute; paquetes deben estar visibles. Se puede usar para crear entornos para &lt;code&gt;ghc&lt;/code&gt; o &lt;code&gt;ghci&lt;/code&gt; que sean locales para una sesi&amp;oacute;n de shell o para alguna ubicaci&amp;oacute;n del sistema de archivos. Est&amp;aacute;n destinados a ser administrados por herramientas de construcci&amp;oacute;n / paquete, para habilitar &lt;code&gt;ghc&lt;/code&gt; y &lt;code&gt;ghci&lt;/code&gt; usen autom&amp;aacute;ticamente un entorno creado por la herramienta.</target>
        </trans-unit>
        <trans-unit id="c8382233c25160218d5faa2b0244da9d3072c08a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;safe import&lt;/em&gt; extension that specifies that the module being imported must be trusted.</source>
          <target state="translated">Una extensi&amp;oacute;n de &lt;em&gt;importaci&amp;oacute;n segura&lt;/em&gt; que especifica que el m&amp;oacute;dulo que se est&amp;aacute; importando debe ser de confianza.</target>
        </trans-unit>
        <trans-unit id="a2030af640ee35ae911effa3c859071e394be43d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;segment&lt;/em&gt; of a given &lt;code&gt;mdo&lt;/code&gt;-expression is a minimal sequence of generators such that no generator of the sequence depends on an outside generator. As a special case, although it is not a generator, the final expression in an &lt;code&gt;mdo&lt;/code&gt;-expression is considered to form a segment by itself.</source>
          <target state="translated">Un &lt;em&gt;segmento&lt;/em&gt; de una &lt;code&gt;mdo&lt;/code&gt; dada es una secuencia m&amp;iacute;nima de generadores de modo que ning&amp;uacute;n generador de la secuencia depende de un generador externo. Como caso especial, aunque no es un generador, la expresi&amp;oacute;n final en un &lt;code&gt;mdo&lt;/code&gt; forma un segmento por s&amp;iacute; misma.</target>
        </trans-unit>
        <trans-unit id="19ca4e3b6cf814de306149f6c08ac93ed06475ee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;stable pointer&lt;/em&gt; is a reference to a Haskell expression that is guaranteed not to be affected by garbage collection, i.e., it will neither be deallocated nor will the value of the stable pointer itself change during garbage collection (ordinary references may be relocated during garbage collection). Consequently, stable pointers can be passed to foreign code, which can treat it as an opaque reference to a Haskell value.</source>
          <target state="translated">Un &lt;em&gt;puntero estable&lt;/em&gt; es una referencia a una expresi&amp;oacute;n de Haskell que se garantiza que no se ver&amp;aacute; afectada por la recolecci&amp;oacute;n de basura, es decir, no se desasignar&amp;aacute; ni cambiar&amp;aacute; el valor del puntero estable durante la recolecci&amp;oacute;n de basura (las referencias ordinarias pueden reubicarse durante la recolecci&amp;oacute;n de basura ). En consecuencia, los punteros estables se pueden pasar a c&amp;oacute;digo externo, que puede tratarlo como una referencia opaca a un valor Haskell.</target>
        </trans-unit>
        <trans-unit id="9598916c07779e260b1bef0d4810f6ea9d7267b5" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression quotation is written as &lt;code&gt;[|| ... ||]&lt;/code&gt;, or &lt;code&gt;[e|| ... ||]&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is an expression; if the &amp;ldquo;&amp;hellip;&amp;rdquo; expression has type &lt;code&gt;a&lt;/code&gt;, then the quotation has type &lt;code&gt;Q (TExp a)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03966a369ab9f12abf8e596ab2fa4aeb07d6727e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression quotation is written as &lt;code&gt;[|| ... ||]&lt;/code&gt;, or &lt;code&gt;[e|| ... ||]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an expression; if the &amp;rdquo;...&amp;rdquo; expression has type &lt;code&gt;a&lt;/code&gt;, then the quotation has type &lt;code&gt;Q (TExp a)&lt;/code&gt;.</source>
          <target state="translated">Un &lt;em&gt;mecanografiada&lt;/em&gt; cita la expresi&amp;oacute;n se escribe como &lt;code&gt;[|| ... ||]&lt;/code&gt; , o &lt;code&gt;[e|| ... ||]&lt;/code&gt; , donde &quot;...&quot; es una expresi&amp;oacute;n; si la expresi&amp;oacute;n &quot;...&quot; tiene el tipo &lt;code&gt;a&lt;/code&gt; , entonces la cita tiene el tipo &lt;code&gt;Q (TExp a)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff8fea212baa2384e8384f9da14bfcf9a0782e6c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression quotation is written as &lt;code&gt;[|| ... ||]&lt;/code&gt;, or &lt;code&gt;[e|| ... ||]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an expression; if the &amp;rdquo;...&amp;rdquo; expression has type &lt;code&gt;a&lt;/code&gt;, then the quotation has type &lt;code&gt;Quote m =&amp;gt; Code m a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd2d6413fa23bbe46409864d68196768ad43eda" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression splice is written &lt;code&gt;$$x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is an identifier, or &lt;code&gt;$$(...)&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is an arbitrary expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04024bbf6ad0e93c59da416e846a98466aa2e965" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression splice is written &lt;code&gt;$$x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is an identifier, or &lt;code&gt;$$(...)&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an arbitrary expression.</source>
          <target state="translated">Un empalme de expresi&amp;oacute;n con &lt;em&gt;tipo&lt;/em&gt; se escribe &lt;code&gt;$$x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; es un identificador, o &lt;code&gt;$$(...)&lt;/code&gt; , donde &amp;rdquo;...&amp;rdquo; es una expresi&amp;oacute;n arbitraria.</target>
        </trans-unit>
        <trans-unit id="6539c9f66cd3e867ac038f98747ef5ff5abbfbee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression splice is written &lt;code&gt;$$x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is is an arbitrary expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77214962b033f462a16c20eb7078d49bb12efbd" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;wrapper&lt;/em&gt; that for any datatype that is in &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;, performs the conversion between the original value and its &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt;-based representation and then invokes the generic instances.</source>
          <target state="translated">Un &lt;em&gt;contenedor&lt;/em&gt; que para cualquier tipo de datos que est&amp;eacute; en &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; , realiza la conversi&amp;oacute;n entre el valor original y su &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; basada en Rep y luego invoca las instancias gen&amp;eacute;ricas.</target>
        </trans-unit>
        <trans-unit id="b326e9656587b1adc32b0826a631549e0850098e" translate="yes" xml:space="preserve">
          <source>A C &lt;code&gt;printf(3)&lt;/code&gt;-like formatter. This version has been extended by Bart Massey as per the recommendations of John Meacham and Simon Marlow &lt;a href=&quot;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&quot;&gt;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&lt;/a&gt; to support extensible formatting for new datatypes. It has also been extended to support almost all C &lt;code&gt;printf(3)&lt;/code&gt; syntax.</source>
          <target state="translated">Formateador de tipo AC &lt;code&gt;printf(3)&lt;/code&gt; . Esta versi&amp;oacute;n ha sido ampliada por Bart Massey seg&amp;uacute;n las recomendaciones de John Meacham y Simon Marlow &lt;a href=&quot;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&quot;&gt;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&lt;/a&gt; para admitir el formato extensible para nuevos tipos de datos. Tambi&amp;eacute;n se ha ampliado para admitir casi todos los C &lt;code&gt;printf(3)&lt;/code&gt; sintaxis de .</target>
        </trans-unit>
        <trans-unit id="7e0f8ee9d576152373e38d95b4048e53733a3d06" translate="yes" xml:space="preserve">
          <source>A C file not produced by the Haskell compiler.</source>
          <target state="translated">Un archivo C no producido por el compilador de Haskell.</target>
        </trans-unit>
        <trans-unit id="0aad97c64c03d205c1227f534babfb0125731f8e" translate="yes" xml:space="preserve">
          <source>A C string is a reference to an array of C characters terminated by NUL.</source>
          <target state="translated">Una cadena C es una referencia a un conjunto de caracteres C terminados por NUL.</target>
        </trans-unit>
        <trans-unit id="73ba7d14948cc5309d53b24f871c08ff3a2fc5ec" translate="yes" xml:space="preserve">
          <source>A C template should define a macro or function with name prefixed by &lt;code&gt;hsc_&lt;/code&gt; that handles the construct by emitting the expansion to stdout. See &lt;code&gt;template-hsc.h&lt;/code&gt; for examples.</source>
          <target state="translated">La plantilla AC debe definir una macro o funci&amp;oacute;n con el nombre prefijado por &lt;code&gt;hsc_&lt;/code&gt; que maneja la construcci&amp;oacute;n emitiendo la expansi&amp;oacute;n a stdout. Consulte &lt;code&gt;template-hsc.h&lt;/code&gt; para ver ejemplos.</target>
        </trans-unit>
        <trans-unit id="6886031497104d24437d52b2978fb1d3195d1677" translate="yes" xml:space="preserve">
          <source>A C wide string is a reference to an array of C wide characters terminated by NUL.</source>
          <target state="translated">Una cadena de ancho C es una referencia a un conjunto de caracteres de ancho C terminados por NUL.</target>
        </trans-unit>
        <trans-unit id="fff4ba731434913625d1042847648e899bcdc46f" translate="yes" xml:space="preserve">
          <source>A DynFlags plugin allows you to modify the &lt;code&gt;DynFlags&lt;/code&gt; that GHC is going to use when processing a given (set of) file(s). &lt;code&gt;DynFlags&lt;/code&gt; is a record containing all sorts of configuration and command line data, from verbosity level to the integer library to use, including compiler hooks, plugins and pretty-printing options. DynFlags plugins allow plugin authors to update any of those values before GHC starts doing any actual work, effectively meaning that the updates specified by the plugin will be taken into account and influence GHC&amp;rsquo;s behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e325f82925ec97e39b08ddc2fdbd0f77145b84c" translate="yes" xml:space="preserve">
          <source>A GADT can only be declared using GADT-style syntax (&lt;a href=&quot;#gadt-style&quot;&gt;Declaring data types with explicit constructor signatures&lt;/a&gt;); the old Haskell 98 syntax for data declarations always declares an ordinary data type. The result type of each constructor must begin with the type constructor being defined, but for a GADT the arguments to the type constructor can be arbitrary monotypes. For example, in the &lt;code&gt;Term&lt;/code&gt; data type above, the type of each constructor must end with &lt;code&gt;Term ty&lt;/code&gt;, but the &lt;code&gt;ty&lt;/code&gt; need not be a type variable (e.g. the &lt;code&gt;Lit&lt;/code&gt; constructor).</source>
          <target state="translated">Un GADT solo se puede declarar utilizando una sintaxis de estilo GADT ( &lt;a href=&quot;#gadt-style&quot;&gt;declaraci&amp;oacute;n de tipos de datos con firmas de constructor expl&amp;iacute;citas&lt;/a&gt; ); la antigua sintaxis de Haskell 98 para declaraciones de datos siempre declara un tipo de datos ordinario. El tipo de resultado de cada constructor debe comenzar con el constructor de tipo que se est&amp;aacute; definiendo, pero para un GADT, los argumentos del constructor de tipo pueden ser monotipos arbitrarios. Por ejemplo, en el tipo de datos &lt;code&gt;Term&lt;/code&gt; anterior, el tipo de cada constructor debe terminar con &lt;code&gt;Term ty&lt;/code&gt; , pero no es necesario que &lt;code&gt;ty&lt;/code&gt; sea ​​una variable de tipo (por ejemplo, &lt;code&gt;Lit&lt;/code&gt; constructor ).</target>
        </trans-unit>
        <trans-unit id="58b71829716444049200321c5db9b83265dc9dd6" translate="yes" xml:space="preserve">
          <source>A GADT can only be declared using GADT-style syntax (&lt;a href=&quot;gadt_syntax#gadt-style&quot;&gt;Declaring data types with explicit constructor signatures&lt;/a&gt;); the old Haskell 98 syntax for data declarations always declares an ordinary data type. The result type of each constructor must begin with the type constructor being defined, but for a GADT the arguments to the type constructor can be arbitrary monotypes. For example, in the &lt;code&gt;Term&lt;/code&gt; data type above, the type of each constructor must end with &lt;code&gt;Term ty&lt;/code&gt;, but the &lt;code&gt;ty&lt;/code&gt; need not be a type variable (e.g. the &lt;code&gt;Lit&lt;/code&gt; constructor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c115ed6390536f96008338c3a76d6dc97d17be" translate="yes" xml:space="preserve">
          <source>A Haskell equivalent of the C numeric type will be output. It will be one of &lt;code&gt;{Int,Word}{8,16,32,64}&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;LDouble&lt;/code&gt;.</source>
          <target state="translated">Se generar&amp;aacute; un equivalente Haskell del tipo num&amp;eacute;rico C. Ser&amp;aacute; uno de &lt;code&gt;{Int,Word}{8,16,32,64}&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; , &lt;code&gt;LDouble&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="411cbf3d599620cacbd5cc015731fcfe3b92f459" translate="yes" xml:space="preserve">
          <source>A Haskell interface file, probably compiler-generated.</source>
          <target state="translated">Un archivo de interfaz de Haskell,probablemente generado por un compilador.</target>
        </trans-unit>
        <trans-unit id="bea884a4fa9bc97a6459261f9e280deaec7399ff" translate="yes" xml:space="preserve">
          <source>A Haskell module.</source>
          <target state="translated">Un módulo Haskell.</target>
        </trans-unit>
        <trans-unit id="e5aff74609ec235803608003865846be7a8bd1bc" translate="yes" xml:space="preserve">
          <source>A Map from keys &lt;code&gt;k&lt;/code&gt; to values &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Un mapa de las claves &lt;code&gt;k&lt;/code&gt; a los valores &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea3593e9e6a31d8bb148597b7e5fd17de4ea82d" translate="yes" xml:space="preserve">
          <source>A TextDetails represents a fragment of text that will be output at some point in a &lt;code&gt;Doc&lt;/code&gt;.</source>
          <target state="translated">A TextDetails representa un fragmento de texto que ser&amp;aacute; visualizado en alg&amp;uacute;n momento en un &lt;code&gt;Doc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc9ca598a7522d4ced721535fa37974946883f88" translate="yes" xml:space="preserve">
          <source>A TimeZone is a whole number of minutes offset from UTC, together with a name and a &quot;just for summer&quot; flag.</source>
          <target state="translated">Una Zona Horaria es un número entero de minutos compensados de UTC,junto con un nombre y una bandera &quot;sólo para el verano&quot;.</target>
        </trans-unit>
        <trans-unit id="c5ce154a6a02d4026db50fe3f1a5c49edc516fc7" translate="yes" xml:space="preserve">
          <source>A bang only really has an effect if it precedes a variable or wild-card pattern:</source>
          <target state="translated">Una explosión sólo tiene efecto si precede a un patrón variable o comodín:</target>
        </trans-unit>
        <trans-unit id="bdd93c38550cc32cf4aa813352ba8371915da4f4" translate="yes" xml:space="preserve">
          <source>A bang pattern is allowed in a let or where clause, and makes the binding strict. For example:</source>
          <target state="translated">Se permite un patrón de golpeo en una cláusula de &quot;let or where&quot;,y hace que la atadura sea estricta.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="dbe85709a7348f901616c420f38c5dde9ca96cf4" translate="yes" xml:space="preserve">
          <source>A bare kind variable (with &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt; enabled). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbd4e1dd2f2e3557e83084e2d5e15eb20407efb" translate="yes" xml:space="preserve">
          <source>A bare kind variable (with &lt;a href=&quot;poly_kinds#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt; enabled). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8b165584d313eb61a9a907807491cb2de49845" translate="yes" xml:space="preserve">
          <source>A better method is to keep a global list of all child threads which we should wait for at the end of the program:</source>
          <target state="translated">Un mejor método es mantener una lista global de todos los hilos infantiles que debemos esperar al final del programa:</target>
        </trans-unit>
        <trans-unit id="6005fc493cfa098670cf6142c7e4205f8cdf474b" translate="yes" xml:space="preserve">
          <source>A better monoid for Maybe</source>
          <target state="translated">Un mejor monoide para Tal vez</target>
        </trans-unit>
        <trans-unit id="d6fedf65a2cdf1eec5e505a6812db33c8b5b82ec" translate="yes" xml:space="preserve">
          <source>A bidirectional pattern synonym matching an empty sequence.</source>
          <target state="translated">Un sinónimo de patrón bidireccional que coincide con una secuencia vacía.</target>
        </trans-unit>
        <trans-unit id="4177af688c85d2078a0a8ce62a0441115616a0c4" translate="yes" xml:space="preserve">
          <source>A bidirectional pattern synonym viewing the front of a non-empty sequence.</source>
          <target state="translated">Un patrón bidireccional sinónimo de ver el frente de una secuencia no vacía.</target>
        </trans-unit>
        <trans-unit id="81df1a482fca8b73fcc642c85849297fd446593b" translate="yes" xml:space="preserve">
          <source>A bidirectional pattern synonym viewing the rear of a non-empty sequence.</source>
          <target state="translated">Un patrón bidireccional sinónimo de ver la parte posterior de una secuencia no vacía.</target>
        </trans-unit>
        <trans-unit id="9d4dd551ba4445c410acc2d23a963ba185817d09" translate="yes" xml:space="preserve">
          <source>A bifunctor is a type constructor that takes two type arguments and is a functor in &lt;em&gt;both&lt;/em&gt; arguments. That is, unlike with &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, a type constructor such as &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; does not need to be partially applied for a &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; instance, and the methods in this class permit mapping functions over the &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; value or the &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; value, or both at the same time.</source>
          <target state="translated">Un bifunctor es un constructor de tipos que toma dos argumentos de tipo y es un funtor en &lt;em&gt;ambos&lt;/em&gt; argumentos. Es decir, a diferencia de &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , un constructor de tipos como &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; no necesita aplicarse parcialmente para una instancia de &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; , y los m&amp;eacute;todos de esta clase permiten funciones de mapeo sobre el valor &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; , o ambos al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="de0591af67d2bf9b3b0301e6aff8ce08884f0195" translate="yes" xml:space="preserve">
          <source>A big difference with higher-rank kinds as compared with higher-rank types is that &lt;code&gt;forall&lt;/code&gt;s in kinds &lt;em&gt;cannot&lt;/em&gt; be moved. This is best illustrated by example. Suppose we want to have an instance of &lt;code&gt;HTestEquality&lt;/code&gt; for &lt;code&gt;(:~~:)&lt;/code&gt;.</source>
          <target state="translated">Una gran diferencia con los tipos de rango superior en comparaci&amp;oacute;n con los tipos de mayor rango es el &lt;code&gt;forall&lt;/code&gt; s en clases &lt;em&gt;no puede&lt;/em&gt; ser movido. Esto se ilustra mejor con un ejemplo. Supongamos que queremos tener una instancia de &lt;code&gt;HTestEquality&lt;/code&gt; para &lt;code&gt;(:~~:)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="018f1834f8f4ba2f827cc9e9d66782e066f8b4db" translate="yes" xml:space="preserve">
          <source>A big part of what makes the heaps fast is that they're non empty, so the merge function can avoid an extra case match. To take advantage of this, though, we need specialized versions of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;, which can alternate between calling the faster semigroup-like merge when folding over non empty structures (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt;), and the &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt;-like mappend, when folding over structures which can be empty (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Una gran parte de lo que hace que los montones sean r&amp;aacute;pidos es que no est&amp;aacute;n vac&amp;iacute;os, por lo que la funci&amp;oacute;n de combinaci&amp;oacute;n puede evitar una coincidencia de may&amp;uacute;sculas y min&amp;uacute;sculas adicional. Sin embargo, para aprovechar esto, necesitamos versiones especializadas de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt; , que pueden alternar entre llamar a la fusi&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida similar a un semigrupo cuando se pliegan sobre estructuras no vac&amp;iacute;as (como &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt; ), y la &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; -como mappend, cuando se pliega sobre estructuras que pueden estar vac&amp;iacute;as (como &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="47779d8a6c1ed5651ad2278a9f8963fba26cb6a4" translate="yes" xml:space="preserve">
          <source>A big part of what makes the heaps fast is that they're non empty, so the merge function can avoid an extra case match. To take advantage of this, though, we need specialized versions of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;, which can alternate between calling the faster semigroup-like merge when folding over non empty structures (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt;), and the &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt;-like mappend, when folding over structures which can be empty (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bb306a64f6ff04365504486103eca5836b25d3" translate="yes" xml:space="preserve">
          <source>A big part of what makes the heaps fast is that they're non empty, so the merge function can avoid an extra case match. To take advantage of this, though, we need specialized versions of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;, which can alternate between calling the faster semigroup-like merge when folding over non empty structures (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt;), and the &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt;-like mappend, when folding over structures which can be empty (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09cdbe53b7e03819c7930f606ae901636894954" translate="yes" xml:space="preserve">
          <source>A binary tree typically (when balanced, or randomly biased) provides equally efficient access to its left and right subtrees. This makes it possible to define a &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; optimised for &lt;a href=&quot;#corec&quot;&gt;corecursive&lt;/a&gt; folds with operators that are lazy in their first (left) argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59eaf213264b07a33c9b86cc594f16cfebf034b" translate="yes" xml:space="preserve">
          <source>A binding group is &lt;em&gt;fully generalised&lt;/em&gt; if and only if</source>
          <target state="translated">Un grupo vinculante est&amp;aacute; &lt;em&gt;completamente generalizado&lt;/em&gt; si y solo si</target>
        </trans-unit>
        <trans-unit id="f0ac98b71fc651c5cb7838fb8ecc4183a85e5c4f" translate="yes" xml:space="preserve">
          <source>A biographical heap profile displays the portion of the live heap in each of the four states listed above. Usually the most interesting states are the void and drag states: live heap in these states is more likely to be wasted space than heap in the lag or use states.</source>
          <target state="translated">Un perfil biográfico del montón muestra la porción del montón vivo en cada uno de los cuatro estados mencionados.Normalmente los estados más interesantes son los estados de vacío y arrastre:el montón vivo en estos estados es más probable que se desperdicie espacio que el montón en los estados de retraso o uso.</target>
        </trans-unit>
        <trans-unit id="798384519287140522d002a35024512e2c520012" translate="yes" xml:space="preserve">
          <source>A bound thread is a haskell thread that is &lt;em&gt;bound&lt;/em&gt; to an operating system thread. While the bound thread is still scheduled by the Haskell run-time system, the operating system thread takes care of all the foreign calls made by the bound thread.</source>
          <target state="translated">Un hilo vinculado es un hilo de Haskell que est&amp;aacute; &lt;em&gt;vinculado&lt;/em&gt; a un hilo del sistema operativo. Si bien el subproceso vinculado todav&amp;iacute;a est&amp;aacute; programado por el sistema de tiempo de ejecuci&amp;oacute;n de Haskell, el subproceso del sistema operativo se encarga de todas las llamadas externas realizadas por el subproceso vinculado.</target>
        </trans-unit>
        <trans-unit id="3f4f07c153a23dab6881d6b97859240ea5495b6b" translate="yes" xml:space="preserve">
          <source>A buffer allocation strategy for executing &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">Una estrategia de asignaci&amp;oacute;n de b&amp;uacute;fer para ejecutar &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="3acbb589dc6847927b75f04416af1f081adc5cfc" translate="yes" xml:space="preserve">
          <source>A buffer allocation strategy for executing &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">Una estrategia de asignaci&amp;oacute;n de b&amp;uacute;fer para ejecutar &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="b00aec03f8bf511485eb07886b22c54f4f193a13" translate="yes" xml:space="preserve">
          <source>A builder primitive that always results in a sequence of bytes of a pre-determined, fixed size.</source>
          <target state="translated">Un constructor primitivo que siempre resulta en una secuencia de bytes de un tamaño predeterminado y fijo.</target>
        </trans-unit>
        <trans-unit id="218c8868a68984ef2191051e647e5ad44495f1c2" translate="yes" xml:space="preserve">
          <source>A builder primitive that always results in sequence of bytes that is no longer than a pre-determined bound.</source>
          <target state="translated">Un constructor primitivo que siempre resulta en una secuencia de bytes que no es más larga que un límite predeterminado.</target>
        </trans-unit>
        <trans-unit id="cee5a68b267e0b9eedc95f3e5e46dbbcbd9d7c7d" translate="yes" xml:space="preserve">
          <source>A canonical proxy type</source>
          <target state="translated">Un tipo de proxy canónico</target>
        </trans-unit>
        <trans-unit id="f9785a9266197868d744526bac75698ed903dbc4" translate="yes" xml:space="preserve">
          <source>A capability has been deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e42267c559ef0543a396aeedf38ba2368048b9" translate="yes" xml:space="preserve">
          <source>A capability has been disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86896e42132938a37e212fd5cef10f4151fc9477" translate="yes" xml:space="preserve">
          <source>A capability has been enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c58d21d44a4d30e0c00f0ffb699c3dbb7518536" translate="yes" xml:space="preserve">
          <source>A capability has been started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646cfd44f97fd578432c1d7e4ee9f594332ba27b" translate="yes" xml:space="preserve">
          <source>A careful reading of the Haskell 98 Report reveals that fixity declarations (&lt;code&gt;infix&lt;/code&gt;, &lt;code&gt;infixl&lt;/code&gt;, and &lt;code&gt;infixr&lt;/code&gt;) are permitted to appear inside local bindings such those introduced by &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt;. However, the Haskell Report does not specify the semantics of such bindings very precisely.</source>
          <target state="translated">Una lectura cuidadosa del Informe Haskell 98 revela que se permite que las declaraciones de fijeza ( &lt;code&gt;infix&lt;/code&gt; , &lt;code&gt;infixl&lt;/code&gt; e &lt;code&gt;infixr&lt;/code&gt; ) aparezcan dentro de enlaces locales como los introducidos por &lt;code&gt;let&lt;/code&gt; y &lt;code&gt;where&lt;/code&gt; . Sin embargo, el informe Haskell no especifica la sem&amp;aacute;ntica de tales enlaces con mucha precisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6cad22f831909a841240c57158600100ecb21412" translate="yes" xml:space="preserve">
          <source>A caveat: this encoding strategy may not be reliable across different versions of GHC. When deriving a &lt;code&gt;Generic&lt;/code&gt; instance is free to choose any nesting of &lt;code&gt;:+:&lt;/code&gt; and &lt;code&gt;:*:&lt;/code&gt; it chooses, so if GHC chooses &lt;code&gt;(a :+: b) :+: c&lt;/code&gt;, then the encoding for &lt;code&gt;a&lt;/code&gt; would be &lt;code&gt;[O, O]&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; would be &lt;code&gt;[O, I]&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; would be &lt;code&gt;[I]&lt;/code&gt;. However, if GHC chooses &lt;code&gt;a :+: (b :+: c)&lt;/code&gt;, then the encoding for &lt;code&gt;a&lt;/code&gt; would be &lt;code&gt;[O]&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; would be &lt;code&gt;[I, O]&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; would be &lt;code&gt;[I, I]&lt;/code&gt;. (In practice, the current implementation tries to produce a more-or-less balanced nesting of &lt;code&gt;:+:&lt;/code&gt; and &lt;code&gt;:*:&lt;/code&gt; so that the traversal of the structure of the datatype from the root to a particular component can be performed in logarithmic rather than linear time.)</source>
          <target state="translated">Una advertencia: esta estrategia de codificaci&amp;oacute;n puede no ser confiable en diferentes versiones de GHC. Cuando se deriva una instancia &lt;code&gt;Generic&lt;/code&gt; , se puede elegir cualquier anidaci&amp;oacute;n de &lt;code&gt;:+:&lt;/code&gt; y &lt;code&gt;:*:&lt;/code&gt; que elija, por lo que si GHC elige &lt;code&gt;(a :+: b) :+: c&lt;/code&gt; , entonces la codificaci&amp;oacute;n para &lt;code&gt;a&lt;/code&gt; ser&amp;iacute;a &lt;code&gt;[O, O]&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; ser&amp;iacute;a &lt;code&gt;[O, I]&lt;/code&gt; , &lt;code&gt;c&lt;/code&gt; ser&amp;iacute;a &lt;code&gt;[I]&lt;/code&gt; . Sin embargo, si GHC elige &lt;code&gt;a :+: (b :+: c)&lt;/code&gt; , entonces la codificaci&amp;oacute;n para &lt;code&gt;a&lt;/code&gt; ser&amp;iacute;a &lt;code&gt;[O]&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; ser&amp;iacute;a &lt;code&gt;[I, O]&lt;/code&gt; , y &lt;code&gt;c&lt;/code&gt; ser&amp;iacute;a &lt;code&gt;[I, I]&lt;/code&gt; . (En la pr&amp;aacute;ctica, la implementaci&amp;oacute;n actual intenta producir un anidamiento m&amp;aacute;s o menos equilibrado de &lt;code&gt;:+:&lt;/code&gt; y &lt;code&gt;:*:&lt;/code&gt; de modo que el recorrido de la estructura del tipo de datos desde la ra&amp;iacute;z hasta un componente en particular se pueda realizar en logar&amp;iacute;tmico en lugar de tiempo lineal.)</target>
        </trans-unit>
        <trans-unit id="22d4b5245916ddee4003e31bf87953ef290e9b20" translate="yes" xml:space="preserve">
          <source>A class cannot generally have itself as a superclass. So this is illegal</source>
          <target state="translated">Una clase no puede tener en general como una superclase.Así que esto es ilegal</target>
        </trans-unit>
        <trans-unit id="f056b7a04761436a087354198406063da33c9730" translate="yes" xml:space="preserve">
          <source>A class declarations can either be abstract or concrete. An abstract class is one with no superclasses or class methods:</source>
          <target state="translated">Las declaraciones de una clase pueden ser abstractas o concretas.Una clase abstracta es aquella que no tiene superclases o métodos de clase:</target>
        </trans-unit>
        <trans-unit id="1b36f377a6bd2fac28e2b563337bb9c2dc25741e" translate="yes" xml:space="preserve">
          <source>A class for categories. Instances should satisfy the laws</source>
          <target state="translated">Una clase para las categorías.Las instancias deben satisfacer las leyes</target>
        </trans-unit>
        <trans-unit id="3ec4717446a855d06a8c1e87456d78539b17b28b" translate="yes" xml:space="preserve">
          <source>A class for monads in which exceptions may be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b57c7ffb9d24daec9c92510e3dc595c7c4d9f4" translate="yes" xml:space="preserve">
          <source>A class for monads which allow exceptions to be caught, in particular exceptions which were thrown by &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:throwM&quot;&gt;throwM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c880c2de95d653829de3579b5cf0450be8b3f4" translate="yes" xml:space="preserve">
          <source>A class for monads which provide for the ability to account for all possible exit points from a computation, and to mask asynchronous exceptions. Continuation-based monads are invalid instances of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fec2d7334def5a7f37888bee18c8bb561acd718" translate="yes" xml:space="preserve">
          <source>A class for things buildable from static pointers.</source>
          <target state="translated">Una clase para cosas construidas a partir de punteros estáticos.</target>
        </trans-unit>
        <trans-unit id="16f65e9b0b64e45d51e0bcdd76ca8407c6f3cc52" translate="yes" xml:space="preserve">
          <source>A class method</source>
          <target state="translated">Un método de clase</target>
        </trans-unit>
        <trans-unit id="6f3ca3b97f5cb6f003ec47445c70a8cb5a13ebc9" translate="yes" xml:space="preserve">
          <source>A class method without a definition (neither a default definition, nor a definition in the appropriate instance) was called. The &lt;code&gt;String&lt;/code&gt; gives information about which method it was.</source>
          <target state="translated">Se llam&amp;oacute; a un m&amp;eacute;todo de clase sin una definici&amp;oacute;n (ni una definici&amp;oacute;n predeterminada, ni una definici&amp;oacute;n en la instancia apropiada). La &lt;code&gt;String&lt;/code&gt; proporciona informaci&amp;oacute;n sobre qu&amp;eacute; m&amp;eacute;todo fue.</target>
        </trans-unit>
        <trans-unit id="820008a62ac203372438ae344a8da118e60912d3" translate="yes" xml:space="preserve">
          <source>A class of bifunctors that can be fully evaluated.</source>
          <target state="translated">Una clase de bifunctores que puede ser evaluada completamente.</target>
        </trans-unit>
        <trans-unit id="5f62d094b52f200eb67c73fe054a072916deee3f" translate="yes" xml:space="preserve">
          <source>A class of functors that can be fully evaluated.</source>
          <target state="translated">Una clase de functores que puede ser evaluada completamente.</target>
        </trans-unit>
        <trans-unit id="03b36f13be1922d1c74d9e6e0b4b212a81502e1b" translate="yes" xml:space="preserve">
          <source>A class of types that can be fully evaluated.</source>
          <target state="translated">Una clase de tipos que pueden ser evaluados completamente.</target>
        </trans-unit>
        <trans-unit id="18974c638151613690d5d785bcc282ea54126e16" translate="yes" xml:space="preserve">
          <source>A class, with a list of its visible instances</source>
          <target state="translated">Una clase,con una lista de sus instancias visibles</target>
        </trans-unit>
        <trans-unit id="cf9b4ce512562f9b4a68069022cc221d559c7dde" translate="yes" xml:space="preserve">
          <source>A closed type family has a complete signature when all of its type variables are annotated and a return kind (with a top-level &lt;code&gt;::&lt;/code&gt;) is supplied.</source>
          <target state="translated">Una familia de tipos cerrada tiene una firma completa cuando se anotan todas sus variables de tipo y se proporciona un tipo de retorno (con un nivel superior &lt;code&gt;::&lt;/code&gt; :).</target>
        </trans-unit>
        <trans-unit id="5dfadf25c80308dd41216413c27a3be8dce8cf23" translate="yes" xml:space="preserve">
          <source>A closed type family may be declared with no equations. Such closed type families are opaque type-level definitions that will never reduce, are not necessarily injective (unlike empty data types), and cannot be given any instances. This is different from omitting the equations of a closed type family in a &lt;code&gt;hs-boot&lt;/code&gt; file, which uses the syntax &lt;code&gt;where ..&lt;/code&gt;, as in that case there may or may not be equations given in the &lt;code&gt;hs&lt;/code&gt; file.</source>
          <target state="translated">Una familia de tipos cerrada puede declararse sin ecuaciones. Estas familias de tipos cerradas son definiciones opacas a nivel de tipo que nunca se reducir&amp;aacute;n, no son necesariamente inyectables (a diferencia de los tipos de datos vac&amp;iacute;os) y no se les puede dar ninguna instancia. Esto es diferente de omitir las ecuaciones de una familia de tipos cerrada en un archivo &lt;code&gt;hs-boot&lt;/code&gt; , que usa la sintaxis &lt;code&gt;where ..&lt;/code&gt; , ya que en ese caso puede haber o no ecuaciones dadas en el archivo &lt;code&gt;hs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bc12f9a6f357ec15b737234f9f657aacb094303" translate="yes" xml:space="preserve">
          <source>A closed type family may optionally omit its equations, as in the following example:</source>
          <target state="translated">Una familia de tipo cerrado puede opcionalmente omitir sus ecuaciones,como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="560667c66049aeef765aec3cd394fe9074dbfde4" translate="yes" xml:space="preserve">
          <source>A closed type family&amp;rsquo;s equations are tried in order, from top to bottom, when simplifying a type family application. In this example, we declare an instance for &lt;code&gt;F&lt;/code&gt; such that &lt;code&gt;F Int&lt;/code&gt; simplifies to &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;F Bool&lt;/code&gt; simplifies to &lt;code&gt;Char&lt;/code&gt;, and for any other type &lt;code&gt;a&lt;/code&gt; that is known not to be &lt;code&gt;Int&lt;/code&gt; or &lt;code&gt;Bool&lt;/code&gt;, &lt;code&gt;F a&lt;/code&gt; simplifies to &lt;code&gt;String&lt;/code&gt;. Note that GHC must be sure that &lt;code&gt;a&lt;/code&gt; cannot unify with &lt;code&gt;Int&lt;/code&gt; or &lt;code&gt;Bool&lt;/code&gt; in that last case; if a programmer specifies just &lt;code&gt;F a&lt;/code&gt; in their code, GHC will not be able to simplify the type. After all, &lt;code&gt;a&lt;/code&gt; might later be instantiated with &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">Las ecuaciones de una familia tipogr&amp;aacute;fica cerrada se prueban en orden, de arriba a abajo, al simplificar la aplicaci&amp;oacute;n de una familia tipogr&amp;aacute;fica. En este ejemplo, declaramos una instancia para &lt;code&gt;F&lt;/code&gt; tal que &lt;code&gt;F Int&lt;/code&gt; se simplifica a &lt;code&gt;Double&lt;/code&gt; , &lt;code&gt;F Bool&lt;/code&gt; se simplifica a &lt;code&gt;Char&lt;/code&gt; , y para cualquier otro tipo &lt;code&gt;a&lt;/code&gt; que se sepa que no es &lt;code&gt;Int&lt;/code&gt; o &lt;code&gt;Bool&lt;/code&gt; , &lt;code&gt;F a&lt;/code&gt; se simplifica a &lt;code&gt;String&lt;/code&gt; . Tenga en cuenta que GHC debe estar seguro de que &lt;code&gt;a&lt;/code&gt; no puede unificarse con &lt;code&gt;Int&lt;/code&gt; o &lt;code&gt;Bool&lt;/code&gt; en ese &amp;uacute;ltimo caso; si un programador especifica solo &lt;code&gt;F a&lt;/code&gt; en su c&amp;oacute;digo, GHC no podr&amp;aacute; simplificar el tipo. Despu&amp;eacute;s de todo, &lt;code&gt;a&lt;/code&gt; podr&amp;iacute;a ser instanciado m&amp;aacute;s tarde con &lt;code&gt;Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8038c2136e5194f458ce16e855b310af6be8edf" translate="yes" xml:space="preserve">
          <source>A closed type family&amp;rsquo;s equations have the same restrictions and extensions as the equations for open type family instances. For instance, when &lt;a href=&quot;#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt; is enabled, type or kind variables used on the left hand side of an equation can be explicitly bound, such as in:</source>
          <target state="translated">Las ecuaciones de una familia de tipos cerrada tienen las mismas restricciones y extensiones que las ecuaciones para instancias de familias de tipos abiertos. Por ejemplo, cuando &lt;a href=&quot;#extension-ExplicitForAll&quot;&gt; &lt;code&gt;ExplicitForAll&lt;/code&gt; &lt;/a&gt; est&amp;aacute; habilitado, las variables de tipo o tipo que se usan en el lado izquierdo de una ecuaci&amp;oacute;n se pueden vincular expl&amp;iacute;citamente, como en:</target>
        </trans-unit>
        <trans-unit id="2cbb953a48fd83f0a426ad4c7e2aac7e2a21cac0" translate="yes" xml:space="preserve">
          <source>A closed type family&amp;rsquo;s equations have the same restrictions and extensions as the equations for open type family instances. For instance, when &lt;a href=&quot;explicit_forall#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt; is enabled, type or kind variables used on the left hand side of an equation can be explicitly bound, such as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979f0b250d6263823cae5f13007ece9ecedaf23c" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for accessing the Win32 registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55db83fdd426c323b8ba055ddebf0f4927065c0d" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for interfacing with Win32 Console API</source>
          <target state="translated">Una colección de declaraciones FFI para la interfaz con el API de la consola Win32</target>
        </trans-unit>
        <trans-unit id="97dfd9521aba56f50c67376cea085b8e6e134f90" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for interfacing with Win32 mapped files.</source>
          <target state="translated">Una colección de declaraciones de FFI para la interfaz con los archivos mapeados de Win32.</target>
        </trans-unit>
        <trans-unit id="0e9e3c664eeffb3c7374565940d3d04f59d623a4" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for interfacing with Win32.</source>
          <target state="translated">Una colección de declaraciones de FFI para la interfaz con Win32.</target>
        </trans-unit>
        <trans-unit id="15a4c2ec78aa243e78e786440542fa86a3f898c2" translate="yes" xml:space="preserve">
          <source>A combination is &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; only either part is.</source>
          <target state="translated">Una combinaci&amp;oacute;n es &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; solo una de las partes lo es.</target>
        </trans-unit>
        <trans-unit id="0e6111313c9398a428339ebfc1488b4234c0e6df" translate="yes" xml:space="preserve">
          <source>A combination is &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; only if both parts are.</source>
          <target state="translated">Una combinaci&amp;oacute;n es &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; solo si ambas partes lo son.</target>
        </trans-unit>
        <trans-unit id="1cf4024f647ac4b5f1014ad62fdb4551663a3cfd" translate="yes" xml:space="preserve">
          <source>A command line to execute using the shell</source>
          <target state="translated">Una línea de comandos para ejecutar usando el shell</target>
        </trans-unit>
        <trans-unit id="2b42afbfaea58252904aedc72c342409dc5217ec" translate="yes" xml:space="preserve">
          <source>A common example is opening a file:</source>
          <target state="translated">Un ejemplo común es la apertura de un archivo:</target>
        </trans-unit>
        <trans-unit id="e611ccbbca22d800c83d8e50686983d00ac930b7" translate="yes" xml:space="preserve">
          <source>A common interface to a collection of useful concurrency abstractions.</source>
          <target state="translated">Una interfaz común para una colección de útiles abstracciones de concurrencia.</target>
        </trans-unit>
        <trans-unit id="158d48aa333ea6c2ec16fe37bdb3bd252bd76bb9" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;&lt;a href=&quot;control-monad#v:forever&quot;&gt;forever&lt;/a&gt;&lt;/code&gt; is to process input from network sockets, &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s, and channels (e.g. &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#v:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Un uso com&amp;uacute;n de &lt;code&gt;&lt;a href=&quot;control-monad#v:forever&quot;&gt;forever&lt;/a&gt;&lt;/code&gt; es procesar la entrada de los enchufes de red, los &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; y los canales (por ejemplo, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#v:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="de5703326cbd6c93faef0a72782d20b8fe31e5ee" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;&lt;a href=&quot;control-monad#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; is to run an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation returned from an &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transaction, since &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transactions can't perform &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly. Recall that</source>
          <target state="translated">Un uso com&amp;uacute;n de &lt;code&gt;&lt;a href=&quot;control-monad#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; es ejecutar un c&amp;aacute;lculo de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; devuelto por una transacci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; , ya que las transacciones &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; no pueden realizar &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directamente. Recordar que</target>
        </trans-unit>
        <trans-unit id="d6b9bff21670bd6e1dbddd535cfab7c10fd33d82" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;&lt;a href=&quot;ghc-base#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; is to run an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation returned from an &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transaction, since &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transactions can't perform &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly. Recall that</source>
          <target state="translated">Un uso com&amp;uacute;n de &lt;code&gt;&lt;a href=&quot;ghc-base#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; es ejecutar un c&amp;aacute;lculo de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; devuelto por una transacci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; , ya que las transacciones &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; no pueden realizar &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directamente. Recordar que</target>
        </trans-unit>
        <trans-unit id="923f01eefd2602576139719f5c7af323619c5a66" translate="yes" xml:space="preserve">
          <source>A compact representation of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; vector.</source>
          <target state="translated">Una representaci&amp;oacute;n compacta de un vector de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5b6f1851ba64e7fbc006018f91e89cc899a277e" translate="yes" xml:space="preserve">
          <source>A compact representation of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746987a27cba5fc9b09e0af9a8bec6d5a8c190f1" translate="yes" xml:space="preserve">
          <source>A compact representation of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc43ee46b5b21f3e78943bd2860ac98eafb0926" translate="yes" xml:space="preserve">
          <source>A compact representation suitable for storing short byte strings in memory.</source>
          <target state="translated">Una representación compacta adecuada para almacenar cadenas de bytes cortos en la memoria.</target>
        </trans-unit>
        <trans-unit id="4dee1b6583088672899330bd95413844639d24f0" translate="yes" xml:space="preserve">
          <source>A concrete class specifies its superclasses, methods, default method signatures (but not their implementations) and a &lt;code&gt;MINIMAL&lt;/code&gt; pragma. Unlike regular Haskell classes, you don&amp;rsquo;t have to explicitly declare a default for a method to make it optional vis-a-vis the &lt;code&gt;MINIMAL&lt;/code&gt; pragma.</source>
          <target state="translated">Una clase concreta especifica sus superclases, m&amp;eacute;todos, firmas de m&amp;eacute;todos predeterminados (pero no sus implementaciones) y un pragma &lt;code&gt;MINIMAL&lt;/code&gt; . A diferencia de las clases habituales de Haskell, no es necesario declarar expl&amp;iacute;citamente un m&amp;eacute;todo predeterminado para que sea opcional frente al pragma &lt;code&gt;MINIMAL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48e06f28fdc9e894b60b4a1b8a5f1e5767f7a49e" translate="yes" xml:space="preserve">
          <source>A concrete representation of &lt;code&gt;Version&lt;/code&gt;</source>
          <target state="translated">Una representaci&amp;oacute;n concreta de &lt;code&gt;Version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cb20f59e5f2e9ba3dec010b3eb3028f911a9a31" translate="yes" xml:space="preserve">
          <source>A concrete representation of a (monomorphic) type. &lt;code&gt;&lt;a href=&quot;type-reflection#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; supports reasonably efficient equality.</source>
          <target state="translated">Una representaci&amp;oacute;n concreta de tipo (monom&amp;oacute;rfico). &lt;code&gt;&lt;a href=&quot;type-reflection#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; admite una igualdad razonablemente eficiente.</target>
        </trans-unit>
        <trans-unit id="11422484bfa14bcef95a9aa3860b69ba994b65fb" translate="yes" xml:space="preserve">
          <source>A concrete representation of a (monomorphic) type. &lt;code&gt;&lt;a href=&quot;type-reflection-unsafe#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; supports reasonably efficient equality.</source>
          <target state="translated">Una representaci&amp;oacute;n concreta de tipo (monom&amp;oacute;rfico). &lt;code&gt;&lt;a href=&quot;type-reflection-unsafe#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; admite una igualdad razonablemente eficiente.</target>
        </trans-unit>
        <trans-unit id="0e1fa2e1fdd32663fb32988ae8b548b810674d4a" translate="yes" xml:space="preserve">
          <source>A concrete type constructor applied to some types.</source>
          <target state="translated">Un constructor de tipo concreto aplicado a algunos tipos.</target>
        </trans-unit>
        <trans-unit id="8bad079c8885ff9572beaf6828f7450891b38608" translate="yes" xml:space="preserve">
          <source>A concrete type literal.:</source>
          <target state="translated">Un tipo concreto literal.:</target>
        </trans-unit>
        <trans-unit id="5d4c61340ac65e2aef91e6fee099cfe89ce3d06e" translate="yes" xml:space="preserve">
          <source>A concrete, promotable proxy type, for use at the kind level. There are no instances for this because it is intended at the kind level only</source>
          <target state="translated">Un tipo de proxy concreto y promocionable,para ser usado a nivel de clase.No hay instancias para esto porque está destinado sólo al nivel de tipo</target>
        </trans-unit>
        <trans-unit id="63ae3dab5a2e143c3ea2383adfe2778d5d710d0b" translate="yes" xml:space="preserve">
          <source>A constraint in the type signature is not used in the code it covers:</source>
          <target state="translated">Una restricción en el tipo de firma no se utiliza en el código que cubre:</target>
        </trans-unit>
        <trans-unit id="84193f4f755d1c0b1057183b2a0adc6bf73de7fb" translate="yes" xml:space="preserve">
          <source>A constructor signature may mention type class constraints, which can differ for different constructors. For example, this is fine:</source>
          <target state="translated">La firma de un constructor puede mencionar restricciones de clase de tipo,que pueden diferir para diferentes constructores.Por ejemplo,esto está bien:</target>
        </trans-unit>
        <trans-unit id="1fe5ae7286a52f71d84c6187f3fe447df9c9228a" translate="yes" xml:space="preserve">
          <source>A contrived addition example. Works only with positive numbers:</source>
          <target state="translated">Un ejemplo de adición artificial.Funciona sólo con números positivos:</target>
        </trans-unit>
        <trans-unit id="0df890da0fb3e9db7fe956f05674d4d8aa062f47" translate="yes" xml:space="preserve">
          <source>A conversion specification begins with the character &lt;code&gt;%&lt;/code&gt;, followed by zero or more of the following flags:</source>
          <target state="translated">Una especificaci&amp;oacute;n de conversi&amp;oacute;n comienza con el car&amp;aacute;cter &lt;code&gt;%&lt;/code&gt; , seguido de cero o m&amp;aacute;s de los siguientes indicadores:</target>
        </trans-unit>
        <trans-unit id="dd84caa4cb664b8bd50303514ba4d2b0f6763dd8" translate="yes" xml:space="preserve">
          <source>A corresponding Haskell value looks like this:</source>
          <target state="translated">Un valor Haskell correspondiente se ve así:</target>
        </trans-unit>
        <trans-unit id="2f782e63a1f3f05e6a16c8d7b64076664f462677" translate="yes" xml:space="preserve">
          <source>A cost-centre from GHC's cost-center profiler.</source>
          <target state="translated">Un centro de costos del perfilador de centros de costos del GHC.</target>
        </trans-unit>
        <trans-unit id="ba083c36a70a7120687138d63b14bdaf702d8dac" translate="yes" xml:space="preserve">
          <source>A cost-centre stack from GHC's cost-center profiler.</source>
          <target state="translated">Una pila de centro de costos del perfil de centro de costos de GHC.</target>
        </trans-unit>
        <trans-unit id="50ea9d5bdb5ec17d018609e47a9ec22b64ecd54e" translate="yes" xml:space="preserve">
          <source>A couple of things to notice:</source>
          <target state="translated">Un par de cosas a tener en cuenta:</target>
        </trans-unit>
        <trans-unit id="3dc945323c54ee396119be0717674ee79090c303" translate="yes" xml:space="preserve">
          <source>A custom &lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; which completes the word immediately to the left of the cursor, and takes into account the line contents to the left of the word.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; personalizada que completa la palabra inmediatamente a la izquierda del cursor y tiene en cuenta el contenido de la l&amp;iacute;nea a la izquierda de la palabra.</target>
        </trans-unit>
        <trans-unit id="8c0d52f3762ec276383b7f73f082f54d2df5f0bc" translate="yes" xml:space="preserve">
          <source>A custom &lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; which completes the word immediately to the left of the cursor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; personalizado que completa la palabra inmediatamente a la izquierda del cursor.</target>
        </trans-unit>
        <trans-unit id="5862453396404797aa7de7142dce28109cb9b288" translate="yes" xml:space="preserve">
          <source>A custom pre-processor is run over your Haskell source file only if the &lt;code&gt;-F&lt;/code&gt; option is given.</source>
          <target state="translated">Se ejecuta un preprocesador personalizado sobre su archivo fuente Haskell solo si se da la opci&amp;oacute;n &lt;code&gt;-F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1599a4a0a331f022d3d429faece9bf7cf541b2b9" translate="yes" xml:space="preserve">
          <source>A custom pretty printing function can be used, for example, to format tree-like and nested structures in a more readable way.</source>
          <target state="translated">Por ejemplo,se puede utilizar una bonita función de impresión personalizada para dar formato a las estructuras arbóreas y anidadas de una manera más legible.</target>
        </trans-unit>
        <trans-unit id="f8eb6d3c983aaf3cde12f740cd4904b0498bd294" translate="yes" xml:space="preserve">
          <source>A data constructor</source>
          <target state="translated">Un constructor de datos</target>
        </trans-unit>
        <trans-unit id="b5d4cb00190598ddeec4823830bc239b1485a236" translate="yes" xml:space="preserve">
          <source>A data family instance declaration can use the full expressiveness of ordinary &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;newtype&lt;/code&gt; declarations:</source>
          <target state="translated">Una declaraci&amp;oacute;n de la instancia de la familia de datos puede utilizar la expresividad llena de corrientes &lt;code&gt;data&lt;/code&gt; o &lt;code&gt;newtype&lt;/code&gt; declaraciones:</target>
        </trans-unit>
        <trans-unit id="f190b4f01195b249d3555778e7d04af0949a28aa" translate="yes" xml:space="preserve">
          <source>A data or type synonym family can be declared as part of a type class, thus:</source>
          <target state="translated">Una familia de sinónimos de datos o de tipos puede ser declarada como parte de una clase de tipos,por lo tanto:</target>
        </trans-unit>
        <trans-unit id="4fab55b5200474635e47e3680a86e7055016af5b" translate="yes" xml:space="preserve">
          <source>A data type declaration can either be given in full, exactly as in Haskell, or it can be given abstractly, by omitting the &amp;lsquo;=&amp;rsquo; sign and everything that follows. For example:</source>
          <target state="translated">Una declaraci&amp;oacute;n de tipo de datos se puede dar en su totalidad, exactamente como en Haskell, o se puede dar de forma abstracta, omitiendo el signo '=' y todo lo que sigue. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="3df736aafe2d3db3e69d9a2a8f83fab7d3cd7998" translate="yes" xml:space="preserve">
          <source>A data type has no type parameters (e.g., &lt;code&gt;data Nothing = Nothing&lt;/code&gt;).</source>
          <target state="translated">Un tipo de datos no tiene par&amp;aacute;metros de tipo (por ejemplo, &lt;code&gt;data Nothing = Nothing&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="586827d4266b3d644377c42c18624801ae4ad40a" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in a &lt;a href=&quot;#extension-DatatypeContexts&quot;&gt;&lt;code&gt;DatatypeContexts&lt;/code&gt;&lt;/a&gt; constraint (e.g., &lt;code&gt;data Ord a =&amp;gt; O a = O a&lt;/code&gt;).</source>
          <target state="translated">La &amp;uacute;ltima variable de tipo de un tipo de datos se usa en una restricci&amp;oacute;n &lt;a href=&quot;#extension-DatatypeContexts&quot;&gt; &lt;code&gt;DatatypeContexts&lt;/code&gt; &lt;/a&gt; (por ejemplo, &lt;code&gt;data Ord a =&amp;gt; O a = O a&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cc7a41bf1a92f066b2f5370019dbc0cca08e6499" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in a &lt;a href=&quot;datatype_contexts#extension-DatatypeContexts&quot;&gt;&lt;code&gt;DatatypeContexts&lt;/code&gt;&lt;/a&gt; constraint (e.g., &lt;code&gt;data Ord a =&amp;gt; O a = O a&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541952865f0bce99dfba54b59c18bf4d90b79e63" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in an &lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt;&lt;code&gt;ExistentialQuantification&lt;/code&gt;&lt;/a&gt; constraint, or is refined in a GADT. For example,</source>
          <target state="translated">La &amp;uacute;ltima variable de tipo de un tipo de datos se utiliza en una restricci&amp;oacute;n &lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt; &lt;code&gt;ExistentialQuantification&lt;/code&gt; &lt;/a&gt; o se refina en una GADT. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="df53ab812109e5455de48a78e896649f6237dc82" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in an &lt;a href=&quot;existential_quantification#extension-ExistentialQuantification&quot;&gt;&lt;code&gt;ExistentialQuantification&lt;/code&gt;&lt;/a&gt; constraint, or is refined in a GADT. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d82223d3ac86e9e0f5a1e86033ba159dc2adca" translate="yes" xml:space="preserve">
          <source>A datatype-generic function comprises two parts:</source>
          <target state="translated">Una función genérica de tipo de datos comprende dos partes:</target>
        </trans-unit>
        <trans-unit id="6264b318464960e93f9c184b690473f5a5728225" translate="yes" xml:space="preserve">
          <source>A declaration type signature (&lt;a href=&quot;#decl-type-sigs&quot;&gt;Declaration type signatures&lt;/a&gt;)</source>
          <target state="translated">Un tipo de declaraci&amp;oacute;n de firma ( &lt;a href=&quot;#decl-type-sigs&quot;&gt;declaraci&amp;oacute;n de tipo de firmas&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ee69366de998246ce67952ee9a1a1b3b6c96d4af" translate="yes" xml:space="preserve">
          <source>A declaration type signature that has &lt;em&gt;explicit&lt;/em&gt; quantification (using &lt;code&gt;forall&lt;/code&gt;) brings into scope the explicitly-quantified type variables, in the definition of the named function. For example:</source>
          <target state="translated">Una firma de tipo de declaraci&amp;oacute;n que tiene cuantificaci&amp;oacute;n &lt;em&gt;expl&amp;iacute;cita&lt;/em&gt; (usando &lt;code&gt;forall&lt;/code&gt; ) trae al alcance las variables de tipo cuantificadas expl&amp;iacute;citamente, en la definici&amp;oacute;n de la funci&amp;oacute;n nombrada. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7a000f3b48bd252b4ec5f85b4c427ccb663838bd" translate="yes" xml:space="preserve">
          <source>A decoder procuced by running a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Un decodificador obtenido mediante la ejecuci&amp;oacute;n de una m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d17b00ef4a90f5cabfdbf829a677b6db008e640" translate="yes" xml:space="preserve">
          <source>A default declaration is not permitted for an associated &lt;em&gt;data&lt;/em&gt; type.</source>
          <target state="translated">No se permite una declaraci&amp;oacute;n predeterminada para un tipo de &lt;em&gt;datos&lt;/em&gt; asociado .</target>
        </trans-unit>
        <trans-unit id="13508033e2c27b5de3214a6e0b6e522b009a007b" translate="yes" xml:space="preserve">
          <source>A default definition of &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; in terms of the &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">Una definici&amp;oacute;n predeterminada de &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; en t&amp;eacute;rminos de las operaciones &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5b5443d78a52a0405c2f0d6239820bf3007f82e" translate="yes" xml:space="preserve">
          <source>A default definition of &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; in terms of the &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">Una definici&amp;oacute;n predeterminada de &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; en t&amp;eacute;rminos de las operaciones de &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8979aa9d1894c898d3c726fca41fdca65c4a33d5" translate="yes" xml:space="preserve">
          <source>A default element</source>
          <target state="translated">Un elemento predeterminado</target>
        </trans-unit>
        <trans-unit id="6b0ba2dc21c07d694dd7ceb37775a8c3eee889d5" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; debe cumplir las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="a180dbe254c504564dcc326aee311c425f63e9ec" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; debe satisfacer las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="16de260f1c6cac6529ed6b018b65c836efe37f81" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; debe satisfacer las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="47d9196fc9df3f1fb6cf5bd564f834d9d06f81f1" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; debe satisfacer las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="dc3862240a73ca7ad48aba38069f60afa153c34d" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; debe satisfacer las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="06c816889d8c0a0e486735490b0238ade51de818" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;safeDiv&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;&lt;code&gt;do&lt;/code&gt;-notation:</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;code&gt;safeDiv&lt;/code&gt; usando &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt; ia y &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; &lt;code&gt;do&lt;/code&gt; -notation:</target>
        </trans-unit>
        <trans-unit id="c1670eef1322c0d7b707d0ae468ed9e809e67e91" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;safeDiv&lt;/code&gt; using guards, but not &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;code&gt;safeDiv&lt;/code&gt; usando guardias, pero no &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="006a6845e3a856bbfba4df0255e3848a4a860831" translate="yes" xml:space="preserve">
          <source>A definition of &lt;em&gt;trust&lt;/em&gt; (or safety) and how it operates, along with ways of defining and changing the trust of modules and packages.</source>
          <target state="translated">Una definici&amp;oacute;n de &lt;em&gt;confianza&lt;/em&gt; (o seguridad) y c&amp;oacute;mo opera, junto con formas de definir y cambiar la confianza de m&amp;oacute;dulos y paquetes.</target>
        </trans-unit>
        <trans-unit id="1fb7cf11f58e4e4a3003926053464a1496f9bd2f" translate="yes" xml:space="preserve">
          <source>A deprecated alias of &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un alias obsoleto de &lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c13f98be7b9473c582b30f2dd1c5005c007bdc07" translate="yes" xml:space="preserve">
          <source>A derived instance is derived only for declarations of these forms (after expansion of any type synonyms)</source>
          <target state="translated">Una instancia derivada se deriva sólo para las declaraciones de estas formas (después de la expansión de cualquier tipo de sinónimos)</target>
        </trans-unit>
        <trans-unit id="fd8f6757bd0323a7730e959138361a06c176f799" translate="yes" xml:space="preserve">
          <source>A description of a custom type error.</source>
          <target state="translated">Una descripción de un error de tipo personalizado.</target>
        </trans-unit>
        <trans-unit id="97496eb0e26835b32d2dfe1ae69ecf8a627e29cb" translate="yes" xml:space="preserve">
          <source>A descriptive string roughly identifying the cost-centre.</source>
          <target state="translated">Una cadena descriptiva que identifica aproximadamente el centro de costos.</target>
        </trans-unit>
        <trans-unit id="1814a528e490de53f22aa61afcafb8d5feeb8d24" translate="yes" xml:space="preserve">
          <source>A different approach is to group the option values in a record of type &lt;code&gt;Options&lt;/code&gt;, and have each flag yield a function of type &lt;code&gt;Options -&amp;gt; Options&lt;/code&gt; transforming this record.</source>
          <target state="translated">Un enfoque diferente es agrupar los valores de las opciones en un registro de tipo &lt;code&gt;Options&lt;/code&gt; , y hacer que cada indicador produzca una funci&amp;oacute;n de tipo &lt;code&gt;Options -&amp;gt; Options&lt;/code&gt; transforman este registro.</target>
        </trans-unit>
        <trans-unit id="bbb68a110439919741a19755964df2e6fa3244b4" translate="yes" xml:space="preserve">
          <source>A directory contains a series of entries, each of which is a named reference to a file system object (file, directory etc.). Some entries may be hidden, inaccessible, or have some administrative function (e.g. &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt; under &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399&quot;&gt;POSIX&lt;/a&gt;), but in this standard all such entries are considered to form part of the directory contents. Entries in sub-directories are not, however, considered to form part of the directory contents.</source>
          <target state="translated">Un directorio contiene una serie de entradas, cada una de las cuales es una referencia con nombre a un objeto del sistema de archivos (archivo, directorio, etc.). Algunas entradas pueden estar ocultos, inaccesibles, o tienen alguna funci&amp;oacute;n administrativa (por ejemplo &lt;code&gt;.&lt;/code&gt; , O &lt;code&gt;..&lt;/code&gt; bajo &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399&quot;&gt;POSIX&lt;/a&gt; ), pero en esta norma todas estas entradas se considera que forman parte de los contenidos del directorio. Sin embargo, no se considera que las entradas en subdirectorios formen parte del contenido del directorio.</target>
        </trans-unit>
        <trans-unit id="b8bc02a67c4fcfc20a0a309702e42070cfdd3a1e" translate="yes" xml:space="preserve">
          <source>A directory contains a series of entries, each of which is a named reference to a file system object (file, directory etc.). Some entries may be hidden, inaccessible, or have some administrative function (e.g. &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt; under &lt;a href=&quot;https://www.opengroup.org/onlinepubs/009695399&quot;&gt;POSIX&lt;/a&gt;), but in this standard all such entries are considered to form part of the directory contents. Entries in sub-directories are not, however, considered to form part of the directory contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cea28c5c17737eb22d5290576e72180db68e967" translate="yes" xml:space="preserve">
          <source>A document of height 1 containing a literal string. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; satisfies the following laws:</source>
          <target state="translated">Un documento de altura 1 que contiene una cadena literal. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; cumple las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="a7c0af88c561dd3e381e4c0c9eb468d9f9adda7d" translate="yes" xml:space="preserve">
          <source>A document of height 1 containing a literal string. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; satisfies the following laws:</source>
          <target state="translated">Un documento de altura 1 que contiene una cadena literal. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; cumple las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="b60445ccdc10943dbfcb65b6302d60eef3c3dd3b" translate="yes" xml:space="preserve">
          <source>A document of height 1 containing a literal string. &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; satisfies the following laws:</source>
          <target state="translated">Un documento de altura 1 que contiene una cadena literal. &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; cumple las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="688bfb4bbd29b21c2ae8d691c138d77983de8115" translate="yes" xml:space="preserve">
          <source>A document of height and width 1, containing a literal character.</source>
          <target state="translated">Un documento de altura y anchura 1,que contiene un carácter literal.</target>
        </trans-unit>
        <trans-unit id="6b6ebd185f2a3b55592691251680ab65322061fe" translate="yes" xml:space="preserve">
          <source>A duplex communications channel (results in creation of a duplex &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;). The standard libraries use this device type when creating &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s for open sockets.</source>
          <target state="translated">Un canal de comunicaciones d&amp;uacute;plex (da como resultado la creaci&amp;oacute;n de un &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; d&amp;uacute;plex ). Las bibliotecas est&amp;aacute;ndar utilizan este tipo de dispositivo al crear &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; s para sockets abiertos.</target>
        </trans-unit>
        <trans-unit id="86a3012ad906142a305a738b9de653227862c657" translate="yes" xml:space="preserve">
          <source>A expression quotation is written in Oxford brackets, thus:</source>
          <target state="translated">Una cita de expresión está escrita entre paréntesis en Oxford,por lo tanto:</target>
        </trans-unit>
        <trans-unit id="5e47ffa147be43069d678d8783f87f9374b92f8d" translate="yes" xml:space="preserve">
          <source>A feature or operation which a &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Terminal&quot;&gt;Terminal&lt;/a&gt;&lt;/code&gt; may define.</source>
          <target state="translated">Una caracter&amp;iacute;stica u operaci&amp;oacute;n que puede definir una &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Terminal&quot;&gt;Terminal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e098e337088120cd46a6eee334387a102be1a6" translate="yes" xml:space="preserve">
          <source>A few caveats apply here. First, it is illegal to export an entity which refers to a locally defined type which itself is not exported (GHC will report an error in this case). Second, signatures which come from dependencies which expose modules cannot be thinned in this way (after all, the dependency itself may need the entity); these requirements are unconditionally exported. Finally, any module reexports must refer to modules imported by the local signature (even if an inherited signature exported the module).</source>
          <target state="translated">Aquí se aplican algunas advertencias.En primer lugar,es ilegal exportar una entidad que se refiere a un tipo definido localmente que a su vez no se exporta (GHC informará de un error en este caso).En segundo lugar,las firmas que proceden de dependencias que exponen módulos no pueden diluirse de esta manera (después de todo,la propia dependencia puede necesitar la entidad);estos requisitos se exportan incondicionalmente.Por último,toda reexportación de módulos debe referirse a los módulos importados por la firma local (aunque una firma heredada haya exportado el módulo).</target>
        </trans-unit>
        <trans-unit id="ebd630669cc76942437803b1fb8107b3e2063e84" translate="yes" xml:space="preserve">
          <source>A few functors support an implementation of &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one.</source>
          <target state="translated">Algunos functores admiten una implementaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; que es m&amp;aacute;s eficiente que la predeterminada.</target>
        </trans-unit>
        <trans-unit id="4e9bb325d8e94370ab23120a7426d9ee7ea2c654" translate="yes" xml:space="preserve">
          <source>A few functors support an implementation of &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one.</source>
          <target state="translated">Algunos functores admiten una implementaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; que es m&amp;aacute;s eficiente que la predeterminada.</target>
        </trans-unit>
        <trans-unit id="feddbc495dd6f9bc1a1874e911421fb2030f4453" translate="yes" xml:space="preserve">
          <source>A few functors support an implementation of &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one.</source>
          <target state="translated">Algunos functores admiten una implementaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; que es m&amp;aacute;s eficiente que la predeterminada.</target>
        </trans-unit>
        <trans-unit id="412108fee011dff2957aa26fc118a779db7cb3e1" translate="yes" xml:space="preserve">
          <source>A field must be in scope for the corresponding &lt;code&gt;HasField&lt;/code&gt; constraint to be solved. This retains the existing representation hiding mechanism, whereby a module may choose not to export a field, preventing client modules from accessing or updating it directly.</source>
          <target state="translated">Un campo debe estar dentro del alcance para que se &lt;code&gt;HasField&lt;/code&gt; restricci&amp;oacute;n de HasField correspondiente . Esto conserva el mecanismo de ocultaci&amp;oacute;n de representaci&amp;oacute;n existente, mediante el cual un m&amp;oacute;dulo puede optar por no exportar un campo, evitando que los m&amp;oacute;dulos del cliente accedan o actualicen directamente.</target>
        </trans-unit>
        <trans-unit id="647667c77d993eaf0e249337caf2de0283b2f13c" translate="yes" xml:space="preserve">
          <source>A file created by the preprocessor.</source>
          <target state="translated">Un archivo creado por el preprocesador.</target>
        </trans-unit>
        <trans-unit id="10a6f21acebb16166b923fe8816f24879cac7dc7" translate="yes" xml:space="preserve">
          <source>A file descriptor registration cookie.</source>
          <target state="translated">Una galleta de registro de descriptores de archivos.</target>
        </trans-unit>
        <trans-unit id="b7ff63f15803ad313bc70e86c0b9af3bd034d57c" translate="yes" xml:space="preserve">
          <source>A file that may be read or written, and also may be seekable.</source>
          <target state="translated">Un archivo que puede ser leído o escrito,y también puede ser buscado.</target>
        </trans-unit>
        <trans-unit id="3fc8729fc9cba21c227493e06ca57c42259f5fbc" translate="yes" xml:space="preserve">
          <source>A file-header pragma must precede the &lt;code&gt;module&lt;/code&gt; keyword in the file.</source>
          <target state="translated">Un pragma de encabezado de archivo debe preceder a la palabra clave del &lt;code&gt;module&lt;/code&gt; en el archivo.</target>
        </trans-unit>
        <trans-unit id="ee69f3557f209a70b6dbd3e30733ef3266ad45c4" translate="yes" xml:space="preserve">
          <source>A finalizer is not always called after its weak pointer's object becomes unreachable. There are two situations that can cause this:</source>
          <target state="translated">Un finalizador no siempre se llama después de que el objeto de su débil puntero se vuelve inalcanzable.Hay dos situaciones que pueden causar esto:</target>
        </trans-unit>
        <trans-unit id="c83751e185497b34efc04696de873a6948bad996" translate="yes" xml:space="preserve">
          <source>A finalizer is represented as a pointer to a foreign function that, at finalisation time, gets as an argument a plain pointer variant of the foreign pointer that the finalizer is associated with.</source>
          <target state="translated">Un finalizador se representa como un puntero a una función extranjera que,en el momento de la finalización,obtiene como argumento una variante de puntero simple del puntero extranjero con el que se asocia el finalizador.</target>
        </trans-unit>
        <trans-unit id="1df6acc2d101561b7dc4207a365d517cbb075848" translate="yes" xml:space="preserve">
          <source>A fixed-precision integer type with at least the range &lt;code&gt;[-2^29 .. 2^29-1]&lt;/code&gt;. The exact range for a given implementation can be determined by using &lt;code&gt;&lt;a href=&quot;prelude#v:minBound&quot;&gt;minBound&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:maxBound&quot;&gt;maxBound&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;&lt;a href=&quot;prelude#v:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">Un tipo entero de precisi&amp;oacute;n fija con al menos el rango &lt;code&gt;[-2^29 .. 2^29-1]&lt;/code&gt; . El rango exacto para una implementaci&amp;oacute;n dada se puede determinar usando &lt;code&gt;&lt;a href=&quot;prelude#v:minBound&quot;&gt;minBound&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;prelude#v:maxBound&quot;&gt;maxBound&lt;/a&gt;&lt;/code&gt; de la clase &lt;code&gt;&lt;a href=&quot;prelude#v:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5c0b209d881b38e76f482af23564dfb8494b98b" translate="yes" xml:space="preserve">
          <source>A flag to disable Safe Haskell checks:</source>
          <target state="translated">Una bandera para desactivar los cheques de Safe Haskell:</target>
        </trans-unit>
        <trans-unit id="5e83789a4d462ba5ff17578c25dbd53a56499d15" translate="yes" xml:space="preserve">
          <source>A flexible variation parameterised in a type constructor</source>
          <target state="translated">Una variación flexible parametrizada en un constructor tipo</target>
        </trans-unit>
        <trans-unit id="ae7acb61d64b5e1b08a76042f669d06cf246bf79" translate="yes" xml:space="preserve">
          <source>A fmap-like operator for builder primitives, both bounded and fixed size.</source>
          <target state="translated">Un operador tipo fmap para los primitivos constructores,tanto de tamaño limitado como fijo.</target>
        </trans-unit>
        <trans-unit id="3156de946a16b219e4da74bb691b1f317bcde8a4" translate="yes" xml:space="preserve">
          <source>A frontend plugin allows you to add new major modes to GHC. You may prefer this over a traditional program which calls the GHC API, as GHC manages a lot of parsing flags and administrative nonsense which can be difficult to manage manually. To load a frontend plugin exported by &lt;code&gt;Foo.FrontendPlugin&lt;/code&gt;, we just invoke GHC with the &lt;code&gt;--frontend ⟨module⟩&lt;/code&gt; flag as follows:</source>
          <target state="translated">Un complemento de interfaz le permite agregar nuevos modos principales a GHC. Es posible que prefiera esto a un programa tradicional que llama a la API de GHC, ya que GHC administra una gran cantidad de indicadores de an&amp;aacute;lisis y tonter&amp;iacute;as administrativas que pueden ser dif&amp;iacute;ciles de administrar manualmente. Para cargar un complemento de frontend exportado por &lt;code&gt;Foo.FrontendPlugin&lt;/code&gt; , simplemente invocamos GHC con el &lt;code&gt;--frontend ⟨module⟩&lt;/code&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3516f3e003c81729d4f4111a23b0b9b529ebe196" translate="yes" xml:space="preserve">
          <source>A function &lt;code&gt;f&lt;/code&gt; is linear if: when its result is consumed &lt;em&gt;exactly once&lt;/em&gt;, then its argument is consumed &lt;em&gt;exactly once&lt;/em&gt;. Intuitively, it means that in every branch of the definition of &lt;code&gt;f&lt;/code&gt;, its argument &lt;code&gt;x&lt;/code&gt; must be used exactly once. Which can be done by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ca1012af98c96815c71a4e1c588fc523445abe" translate="yes" xml:space="preserve">
          <source>A function can request its call-site with the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; constraint. For example, we can define</source>
          <target state="translated">Una funci&amp;oacute;n puede solicitar su sitio de llamada con la restricci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; . Por ejemplo, podemos definir</target>
        </trans-unit>
        <trans-unit id="85ce5ed93025fc855be629c4ba88fa8a1670bc1d" translate="yes" xml:space="preserve">
          <source>A function can request its call-site with the &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; constraint. For example, we can define</source>
          <target state="translated">Una funci&amp;oacute;n puede solicitar su sitio de llamada con la restricci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; . Por ejemplo, podemos definir</target>
        </trans-unit>
        <trans-unit id="b827823da9db0cd7f4da87d2bab81acb959e4419" translate="yes" xml:space="preserve">
          <source>A function can request its call-site with the &lt;code&gt;HasCallStack&lt;/code&gt; constraint and access it as a Haskell value by using &lt;code&gt;callStack&lt;/code&gt;.</source>
          <target state="translated">Una funci&amp;oacute;n puede solicitar su sitio de llamada con la restricci&amp;oacute;n &lt;code&gt;HasCallStack&lt;/code&gt; y acceder a &amp;eacute;l como un valor Haskell mediante &lt;code&gt;callStack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="959c41ee1afd55fc73fec6ad553ce55c337100e6" translate="yes" xml:space="preserve">
          <source>A function that accepts another &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. That string will be assumed to directly follow the string that was passed as input to the original function, and it will in turn be decoded.</source>
          <target state="translated">Una funci&amp;oacute;n que acepta otra &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Se supondr&amp;aacute; que esa cadena sigue directamente a la cadena que se pas&amp;oacute; como entrada a la funci&amp;oacute;n original y, a su vez, se decodificar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="da28dee5583d50081afa31b6dd484807a9fdb272" translate="yes" xml:space="preserve">
          <source>A function that accepts another &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. That string will be assumed to directly follow the string that was passed as input to the original function, and it will in turn be decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146f819aeac6eebc6c002e437bb527a05441309a" translate="yes" xml:space="preserve">
          <source>A function that fills a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;, calls the continuation with the updated &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; and its computed value once its done, and signals its caller how to proceed using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt; signals.</source>
          <target state="translated">Una funci&amp;oacute;n que llena un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; , llama a la continuaci&amp;oacute;n con el &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; actualizado y su valor calculado una vez hecho, y le indica a la persona que llama c&amp;oacute;mo proceder con las se&amp;ntilde;ales &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9fe9550377f39c1dda07402c3e5dd3c52deb055" translate="yes" xml:space="preserve">
          <source>A function that fills a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;, calls the continuation with the updated &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; once its done, and signals its caller how to proceed using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una funci&amp;oacute;n que llena un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; , llama a la continuaci&amp;oacute;n con el &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; actualizado una vez hecho, y le indica a su llamador c&amp;oacute;mo proceder con &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a1cfa6ac431e810bfaf7276b3ed3786ed71fd59" translate="yes" xml:space="preserve">
          <source>A function that peeks a field of a C struct will be output. It will have the type &lt;code&gt;Storable b =&amp;gt; Ptr a -&amp;gt; IO b&lt;/code&gt;. The intention is that &lt;code&gt;#peek&lt;/code&gt; and &lt;code&gt;#poke&lt;/code&gt; can be used for implementing the operations of class &lt;code&gt;Storable&lt;/code&gt; for a given C struct (see the &lt;code&gt;Foreign.Storable&lt;/code&gt; module in the library documentation).</source>
          <target state="translated">Se generar&amp;aacute; una funci&amp;oacute;n que asoma un campo de una estructura C. Tendr&amp;aacute; el tipo &lt;code&gt;Storable b =&amp;gt; Ptr a -&amp;gt; IO b&lt;/code&gt; . La intenci&amp;oacute;n es que &lt;code&gt;#peek&lt;/code&gt; y &lt;code&gt;#poke&lt;/code&gt; se puedan usar para implementar las operaciones de la clase &lt;code&gt;Storable&lt;/code&gt; para una estructura C determinada (consulte el m&amp;oacute;dulo &lt;code&gt;Foreign.Storable&lt;/code&gt; en la documentaci&amp;oacute;n de la biblioteca).</target>
        </trans-unit>
        <trans-unit id="d2ef8a015f90280c78a9e52d4eaee96c355e724d" translate="yes" xml:space="preserve">
          <source>A function to check if the current terminal uses MinTTY. Much of this code was originally authored by Phil Ruffwind and the git-for-windows project.</source>
          <target state="translated">Una función para comprobar si la terminal actual usa MinTTY.Mucho de este código fue originalmente escrito por Phil Ruffwind y el proyecto git-for-windows.</target>
        </trans-unit>
        <trans-unit id="31ba468a5f0c3b9552cf7091416e0dd2026254a0" translate="yes" xml:space="preserve">
          <source>A function to increment a counter. Taken from the paper &quot;Generalising Monads to Arrows&quot;, John Hughes (&lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/&quot;&gt;http://www.cse.chalmers.se/~rjmh/&lt;/a&gt;), November 1998:</source>
          <target state="translated">Una funci&amp;oacute;n para incrementar un contador. Tomado del documento &quot;Generalising Monads to Arrows&quot;, John Hughes ( &lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/&quot;&gt;http://www.cse.chalmers.se/~rjmh/&lt;/a&gt; ), noviembre de 1998:</target>
        </trans-unit>
        <trans-unit id="05dac60b6df39a2cc430ba2715bb82eb9d50346b" translate="yes" xml:space="preserve">
          <source>A function to increment a counter. Taken from the paper &lt;em&gt;Generalising Monads to Arrows&lt;/em&gt;, John Hughes (&lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&quot;&gt;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&lt;/a&gt;), November 1998:</source>
          <target state="translated">Una funci&amp;oacute;n para incrementar un contador. Tomado del art&amp;iacute;culo &lt;em&gt;Generalising Monads to Arrows&lt;/em&gt; , John Hughes ( &lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&quot;&gt;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&lt;/a&gt; ), noviembre de 1998:</target>
        </trans-unit>
        <trans-unit id="cba486e1fb914bff3d0a304947268224d9af2b9a" translate="yes" xml:space="preserve">
          <source>A function to increment a counter. Taken from the paper &lt;em&gt;Generalising Monads to Arrows&lt;/em&gt;, John Hughes (&lt;a href=&quot;http://www.math.chalmers.se/~rjmh/&quot;&gt;http://www.math.chalmers.se/~rjmh/&lt;/a&gt;), November 1998:</source>
          <target state="translated">Una funci&amp;oacute;n para incrementar un contador. Tomado del art&amp;iacute;culo &lt;em&gt;Generalising Monads to Arrows&lt;/em&gt; , John Hughes ( &lt;a href=&quot;http://www.math.chalmers.se/~rjmh/&quot;&gt;http://www.math.chalmers.se/~rjmh/&lt;/a&gt; ), noviembre de 1998:</target>
        </trans-unit>
        <trans-unit id="0853cd0ac4addf801d952885147dabfee851dfba" translate="yes" xml:space="preserve">
          <source>A function will not be split into worker and wrapper if the number of value arguments of the resulting worker exceeds both that of the original function and this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407bdfca3acdcf3e83644e05bb20353353df0c81" translate="yes" xml:space="preserve">
          <source>A functor with application, providing operations to</source>
          <target state="translated">Un functor con aplicación,que proporciona operaciones a</target>
        </trans-unit>
        <trans-unit id="672c26b34e9f1b6a9e0ef2bedd270f00f9598669" translate="yes" xml:space="preserve">
          <source>A garbage collection pass has been finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74eb92ae3094b3fdb42750a32df490044fa7fa7c" translate="yes" xml:space="preserve">
          <source>A garbage collection pass has been started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b56072e77298e15569c00276b7c0299340640ae" translate="yes" xml:space="preserve">
          <source>A general library for representation and manipulation of versions.</source>
          <target state="translated">Una biblioteca general para la representación y manipulación de las versiones.</target>
        </trans-unit>
        <trans-unit id="3bc20610754970931bb56e207d89ee27df2c440a" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; takes a mapping function that also depends on the element's index, and applies it to every element in the sequence.</source>
          <target state="translated">Una generalizaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; toma una funci&amp;oacute;n de mapeo que tambi&amp;eacute;n depende del &amp;iacute;ndice del elemento y la aplica a cada elemento en la secuencia.</target>
        </trans-unit>
        <trans-unit id="4ed89134d2ae1ba346467054c2cbd0888a87f736" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; takes a mapping function that also depends on the element's index, and applies it to every element in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c9af6b1dc84796a6a950216f71a6548a6cabaf" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; takes a mapping function that also depends on the element's index, and applies it to every element in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b0bb9b6108641f8e5517af378b5cb49562a948" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; to an arbitrary &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;. May fail to terminate for some values in some semigroups.</source>
          <target state="translated">Una generalizaci&amp;oacute;n del &lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; arbitrario . Puede fallar al terminar para algunos valores en algunos semigrupos.</target>
        </trans-unit>
        <trans-unit id="77f905e58da65369e96fec7038c896faa77152dc" translate="yes" xml:space="preserve">
          <source>A generalized version of &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; which uses &lt;code&gt;&lt;a href=&quot;control-monad-catch#t:ExitCase&quot;&gt;ExitCase&lt;/a&gt;&lt;/code&gt; to distinguish the different exit cases, and returns the values of both the &lt;code&gt;use&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; actions. In practice, this extra information is rarely needed, so it is often more convenient to use one of the simpler functions which are defined in terms of this one, such as &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onError&quot;&gt;onError&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracketOnError&quot;&gt;bracketOnError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ff4b7505fb166fcbe7f642bd27c36a8063bf48" translate="yes" xml:space="preserve">
          <source>A generator with side-effects.</source>
          <target state="translated">Un generador con efectos secundarios.</target>
        </trans-unit>
        <trans-unit id="862450f7f65fc829d17b888581dcf9423b4a7480" translate="yes" xml:space="preserve">
          <source>A generator ⟨g⟩ &lt;em&gt;depends&lt;/em&gt; on a textually following generator ⟨g&amp;rsquo;⟩, if</source>
          <target state="translated">Un generador ⟨g⟩ &lt;em&gt;depende&lt;/em&gt; de un generador que sigue textualmente ⟨g'⟩, si</target>
        </trans-unit>
        <trans-unit id="62ae38d3598e1153af86caff741ce7f45b481a95" translate="yes" xml:space="preserve">
          <source>A generic function is defined by creating a class and giving instances for each of the representation types of &lt;code&gt;GHC.Generics&lt;/code&gt;. As an example we show generic serialization:</source>
          <target state="translated">Una funci&amp;oacute;n gen&amp;eacute;rica se define creando una clase y dando instancias para cada uno de los tipos de representaci&amp;oacute;n de &lt;code&gt;GHC.Generics&lt;/code&gt; . Como ejemplo mostramos la serializaci&amp;oacute;n gen&amp;eacute;rica:</target>
        </trans-unit>
        <trans-unit id="1c195a4fb48a9a5e0bec2f551debfe0bebac3b3f" translate="yes" xml:space="preserve">
          <source>A generic monadic transformation that maps over the immediate subterms</source>
          <target state="translated">Una transformación monádica genérica que mapea los subterfugios inmediatos</target>
        </trans-unit>
        <trans-unit id="2371a81d45c2bb3b8a13c0d110026806d7062e4b" translate="yes" xml:space="preserve">
          <source>A generic query that processes one child by index (zero-based)</source>
          <target state="translated">Una consulta genérica que procesa un niño por índice (basado en cero)</target>
        </trans-unit>
        <trans-unit id="b30dda47587e5c218c84c8765cbfb57d7c32ee07" translate="yes" xml:space="preserve">
          <source>A generic query that processes the immediate subterms and returns a list of results. The list is given in the same order as originally specified in the declaration of the data constructors.</source>
          <target state="translated">Una consulta genérica que procesa los subterfugios inmediatos y devuelve una lista de resultados.La lista se da en el mismo orden que se especificó originalmente en la declaración de los constructores de datos.</target>
        </trans-unit>
        <trans-unit id="51d2a5deead9d5e63a49652af5db4d773df15f2a" translate="yes" xml:space="preserve">
          <source>A generic query with a left-associative binary operator</source>
          <target state="translated">Una consulta genérica con un operador binario asociado a la izquierda</target>
        </trans-unit>
        <trans-unit id="f172406f53434c2c85e3e88b3b734c76fe4cbf1f" translate="yes" xml:space="preserve">
          <source>A generic query with a right-associative binary operator</source>
          <target state="translated">Una consulta genérica con un operador binario asociado al derecho</target>
        </trans-unit>
        <trans-unit id="aa8f907ef342f61225b3aaaca537bb6131e08eed" translate="yes" xml:space="preserve">
          <source>A generic transformation that maps over the immediate subterms</source>
          <target state="translated">Una transformación genérica que mapea los subterfugios inmediatos</target>
        </trans-unit>
        <trans-unit id="263bda9728b8670fff6c73f321e0c1114a53a098" translate="yes" xml:space="preserve">
          <source>A graph where the out-list references unspecified nodes (&lt;code&gt;'c'&lt;/code&gt;), these are ignored.</source>
          <target state="translated">Un gr&amp;aacute;fico donde la lista excluida hace referencia a nodos no especificados ( &lt;code&gt;'c'&lt;/code&gt; ), estos se ignoran.</target>
        </trans-unit>
        <trans-unit id="547e608af651f4f8ae6ad4968c6a78fb1a5f9911" translate="yes" xml:space="preserve">
          <source>A graph with 3 vertices: (&quot;a&quot;) -&amp;gt; (&quot;b&quot;) -&amp;gt; (&quot;c&quot;)</source>
          <target state="translated">Un gr&amp;aacute;fico con 3 v&amp;eacute;rtices: (&quot;a&quot;) -&amp;gt; (&quot;b&quot;) -&amp;gt; (&quot;c&quot;)</target>
        </trans-unit>
        <trans-unit id="12b3806c7a4a6d3f01bcf0d2c455af966755af91" translate="yes" xml:space="preserve">
          <source>A group of implicit-parameter bindings may occur anywhere a normal group of Haskell bindings can occur, except at top level. That is, they can occur in a &lt;code&gt;let&lt;/code&gt; (including in a list comprehension, or do-notation, or pattern guards), or a &lt;code&gt;where&lt;/code&gt; clause. Note the following points:</source>
          <target state="translated">Un grupo de enlaces de par&amp;aacute;metros impl&amp;iacute;citos puede ocurrir en cualquier lugar donde pueda ocurrir un grupo normal de enlaces de Haskell, excepto en el nivel superior. Es decir, pueden aparecer en un &lt;code&gt;let&lt;/code&gt; (incluso en una lista de comprensi&amp;oacute;n, o notaci&amp;oacute;n do, o patrones de protecci&amp;oacute;n), o en una cl&amp;aacute;usula &lt;code&gt;where&lt;/code&gt; . Tenga en cuenta los siguientes puntos:</target>
        </trans-unit>
        <trans-unit id="65051f92e572963e4acdb9bb33b4d2b90e5a8b97" translate="yes" xml:space="preserve">
          <source>A handle managing input from the Haskell program's standard input channel.</source>
          <target state="translated">Una manija que maneja la entrada del canal de entrada estándar del programa Haskell.</target>
        </trans-unit>
        <trans-unit id="e751926f8fa8be7abe2938c68d0bde4c6028d510" translate="yes" xml:space="preserve">
          <source>A handle managing output to the Haskell program's standard error channel.</source>
          <target state="translated">Una manija que maneja la salida del canal de error estándar del programa de Haskell.</target>
        </trans-unit>
        <trans-unit id="2d2d9310b94785cb31fe1e4c863bde58a3090d7e" translate="yes" xml:space="preserve">
          <source>A handle managing output to the Haskell program's standard output channel.</source>
          <target state="translated">Una manija que maneja la salida del canal de salida estándar del programa de Haskell.</target>
        </trans-unit>
        <trans-unit id="d7a3e5b5484f784fade78cfdf6ff6413b1996492" translate="yes" xml:space="preserve">
          <source>A handle to a process, which can be used to wait for termination of the process using &lt;code&gt;&lt;a href=&quot;system-process#v:waitForProcess&quot;&gt;waitForProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Identificador de un proceso, que se puede usar para esperar la terminaci&amp;oacute;n del proceso mediante &lt;code&gt;&lt;a href=&quot;system-process#v:waitForProcess&quot;&gt;waitForProcess&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="703580b3dc907bb3f23c64f76055da6a35b3d742" translate="yes" xml:space="preserve">
          <source>A handler for a decoding error.</source>
          <target state="translated">Un controlador para un error de decodificación.</target>
        </trans-unit>
        <trans-unit id="e5858ba1a84179526a85d088788e5ed04cd3ca67" translate="yes" xml:space="preserve">
          <source>A handler for an encoding error.</source>
          <target state="translated">Un controlador para un error de codificación.</target>
        </trans-unit>
        <trans-unit id="a61fb6766aecc9004ee1afd5c6ce82d376d98ad4" translate="yes" xml:space="preserve">
          <source>A handler function to handle previous errors and return to normal execution. A common idiom is:</source>
          <target state="translated">Una función de manejo para manejar los errores anteriores y volver a la ejecución normal.Un modismo común es:</target>
        </trans-unit>
        <trans-unit id="be659a8b5b88eca4628da85b8cd673c423ac389e" translate="yes" xml:space="preserve">
          <source>A heap object is &lt;em&gt;reachable&lt;/em&gt; if:</source>
          <target state="translated">Un objeto mont&amp;oacute;n es &lt;em&gt;alcanzable&lt;/em&gt; si:</target>
        </trans-unit>
        <trans-unit id="ea694877df8a08ed123b92ef6005435d0a5c6bc8" translate="yes" xml:space="preserve">
          <source>A heap residency census will follow. Since events may only be up to 2^16^ bytes in length a single sample may need to be split among multiple &lt;code&gt;EVENT_HEAP_PROF_SAMPLE&lt;/code&gt; events. The precise format of the census entries is determined by the break-down type.</source>
          <target state="translated">Seguir&amp;aacute; un censo de residencia de mont&amp;oacute;n. Dado que los eventos solo pueden tener hasta 2 ^ 16 ^ bytes de longitud, es posible que una sola muestra deba dividirse entre varios eventos &lt;code&gt;EVENT_HEAP_PROF_SAMPLE&lt;/code&gt; . El formato preciso de las entradas del censo est&amp;aacute; determinado por el tipo de desglose.</target>
        </trans-unit>
        <trans-unit id="f721eb8b4b3c875c9b3039562674d9428b85321c" translate="yes" xml:space="preserve">
          <source>A helper module that defines some language definitions that can be used to instantiate a token parser (see &lt;a href=&quot;text-parsec-token&quot;&gt;Text.Parsec.Token&lt;/a&gt;).</source>
          <target state="translated">Un m&amp;oacute;dulo auxiliar que define algunas definiciones de lenguaje que se pueden utilizar para crear una instancia de un analizador de tokens (consulte &lt;a href=&quot;text-parsec-token&quot;&gt;Text.Parsec.Token&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="020709edaa36d2287275fd9547b133a13203df95" translate="yes" xml:space="preserve">
          <source>A helper module to parse &quot;expressions&quot;. Builds a parser given a table of operators and associativities.</source>
          <target state="translated">Un módulo de ayuda para analizar las &quot;expresiones&quot;.Construye un analizador dado una tabla de operadores y asociatividades.</target>
        </trans-unit>
        <trans-unit id="150ba12f35ac6072514bd31b5f915a96dc42b4c6" translate="yes" xml:space="preserve">
          <source>A helper module to parse lexical elements (tokens). See &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; for a description of how to use it.</source>
          <target state="translated">Un m&amp;oacute;dulo auxiliar para analizar elementos l&amp;eacute;xicos (tokens). Consulte &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; para obtener una descripci&amp;oacute;n de c&amp;oacute;mo usarlo.</target>
        </trans-unit>
        <trans-unit id="0383b225a4de83038268fe176e36b5324f8b57bd" translate="yes" xml:space="preserve">
          <source>A hs-boot file is written in a subset of Haskell:</source>
          <target state="translated">Un archivo hs-boot está escrito en un subconjunto de Haskell:</target>
        </trans-unit>
        <trans-unit id="beb39b13efdd6752b158de82a3a13e416589e21f" translate="yes" xml:space="preserve">
          <source>A hs-boot file need only contain the bare minimum of information needed to get the bootstrapping process started. For example, it doesn&amp;rsquo;t need to contain declarations for &lt;em&gt;everything&lt;/em&gt; that module &lt;code&gt;A&lt;/code&gt; exports, only the things required by the module(s) that import &lt;code&gt;A&lt;/code&gt; recursively.</source>
          <target state="translated">Un archivo hs-boot solo necesita contener el m&amp;iacute;nimo de informaci&amp;oacute;n necesaria para iniciar el proceso de arranque. Por ejemplo, no es necesario que contenga declaraciones para &lt;em&gt;todo lo&lt;/em&gt; que el m&amp;oacute;dulo &lt;code&gt;A&lt;/code&gt; exporta, solo las cosas requeridas por los m&amp;oacute;dulos que importan &lt;code&gt;A&lt;/code&gt; de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="aabdc6334ac103ac81c28f41f91111e372570439" translate="yes" xml:space="preserve">
          <source>A hypothetical application of the above is to validate a structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d62d7c94b294b753091beb25073b072165f534" translate="yes" xml:space="preserve">
          <source>A key distinction is between left-associative and right-associative folds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6d3cf5164d3e0790c51b498cf4792069b594e1" translate="yes" xml:space="preserve">
          <source>A key feature of lazy ByteStrings is the means to manipulate large or unbounded streams of data without requiring the entire sequence to be resident in memory. To take advantage of this you have to write your functions in a lazy streaming style, e.g. classic pipeline composition. The default I/O chunk size is 32k, which should be good in most circumstances.</source>
          <target state="translated">Una característica clave de los ByteStrings perezosos es el medio de manipular grandes o ilimitadas corrientes de datos sin necesidad de que la secuencia completa resida en la memoria.Para aprovechar esto,hay que escribir las funciones en un estilo de flujo perezoso,por ejemplo,la clásica composición de tuberías.El tamaño del trozo de E/S por defecto es de 32k,lo que debería ser bueno en la mayoría de las circunstancias.</target>
        </trans-unit>
        <trans-unit id="325a2bf823d17d06d93a99292962d2fd916a91fe" translate="yes" xml:space="preserve">
          <source>A key for &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt;s that can be serialized and used with &lt;code&gt;&lt;a href=&quot;ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;unsafeLookupStaticPtr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una clave para &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt; s que se puede serializar y usar con &lt;code&gt;&lt;a href=&quot;ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;unsafeLookupStaticPtr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e03259c4d4eaef67f0780d176664c739ae643fea" translate="yes" xml:space="preserve">
          <source>A key issue with lists, when used generatively as &lt;em&gt;iterators&lt;/em&gt;, rather than as poor-man's containers (see &lt;a href=&quot;#uselistsnot&quot;&gt;[1]&lt;/a&gt;), is that such iterators tend to consume memory when used more than once. A single traversal of a list-as-iterator will run in constant space, but as soon as the list is retained for reuse, its entire element sequence is stored in memory, and the second traversal reads the copy, rather than regenerates the elements. It is sometimes better to recompute the elements rather than memoise the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036affe5e2067ef8e5a7e25cb46bbfbf0c7d82cb" translate="yes" xml:space="preserve">
          <source>A kind signature is considered to be outermost regardless of redundant parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b381dc7ee35453cc6200cb73ab6f7a29da015f" translate="yes" xml:space="preserve">
          <source>A kind variable can also be bound implicitly in a LHS type pattern, as in this example:</source>
          <target state="translated">Una variable tipo también puede estar ligada implícitamente en un patrón de tipo LHS,como en este ejemplo:</target>
        </trans-unit>
        <trans-unit id="fed1bf023551f5e183a777d4ad8f17c745a4596e" translate="yes" xml:space="preserve">
          <source>A lazier version of Data.List.intersperse. The other version causes space leaks!</source>
          <target state="translated">Una versión más perezosa de Data.List.intersperse.¡La otra versión causa fugas en el espacio!</target>
        </trans-unit>
        <trans-unit id="54d1e3a19df5bd11488b091ae905ebe5fef9f311" translate="yes" xml:space="preserve">
          <source>A lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; diferido contiene bytes de 8 bits, o mediante el uso de las operaciones de &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; se puede interpretar que contiene caracteres de 8 bits.</target>
        </trans-unit>
        <trans-unit id="5a2fd64b80af2ff85d7158cad974f3b8d6d3fa1e" translate="yes" xml:space="preserve">
          <source>A lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; diferido contiene bytes de 8 bits, o mediante el uso de las operaciones de &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; se puede interpretar que contiene caracteres de 8 bits.</target>
        </trans-unit>
        <trans-unit id="4f64b98de52b0b6fa53b16083b06816797fde862" translate="yes" xml:space="preserve">
          <source>A lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; diferido contiene bytes de 8 bits, o mediante el uso de las operaciones de &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; se puede interpretar que contiene caracteres de 8 bits.</target>
        </trans-unit>
        <trans-unit id="15d0c3d1a9e330b475d899c85089d3a45d5191af" translate="yes" xml:space="preserve">
          <source>A leading (or &quot;high&quot;) surrogate code unit (0xD800&amp;ndash;0xDBFF) must always be followed by a trailing (or &quot;low&quot;) surrogate code unit (0xDC00-0xDFFF). A trailing surrogate code unit must always be preceded by a leading surrogate code unit.</source>
          <target state="translated">Una unidad de c&amp;oacute;digo sustituto inicial (o &quot;alta&quot;) (0xD800&amp;ndash;0xDBFF) siempre debe ir seguida de una unidad de c&amp;oacute;digo sustituto final (o &quot;baja&quot;) (0xDC00-0xDFFF). Una unidad de c&amp;oacute;digo sustituto final siempre debe estar precedida por una unidad de c&amp;oacute;digo sustituto principal.</target>
        </trans-unit>
        <trans-unit id="7f944c37522b758dfc630e9f692d2c4ea18427aa" translate="yes" xml:space="preserve">
          <source>A left fold of a structure that is infinite on the right cannot terminate, even when for any finite input the fold just returns the initial accumulator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f7c0bc99a71677d388689dcc2d6ba4d8f6ecf2" translate="yes" xml:space="preserve">
          <source>A left fold over the elements</source>
          <target state="translated">Un pliegue izquierdo sobre los elementos</target>
        </trans-unit>
        <trans-unit id="875903e7616532ab0681456be555fa6ab6806498" translate="yes" xml:space="preserve">
          <source>A left fold over the elements with no starting value</source>
          <target state="translated">Un pliegue izquierdo sobre los elementos sin valor inicial</target>
        </trans-unit>
        <trans-unit id="063a39e2610d5a3659863c33a33d21aa0ae832bd" translate="yes" xml:space="preserve">
          <source>A left-associative variant of &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; that is strict in the accumulator. Use this method for strict reduction when partial results are merged via &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13379849e3da0988f874c759315290aea7600c73" translate="yes" xml:space="preserve">
          <source>A less contrived example shows the use of &lt;code&gt;cases&lt;/code&gt; instead of &lt;code&gt;lets&lt;/code&gt; to get stricter code (a good thing):</source>
          <target state="translated">Un ejemplo menos elaborado muestra el uso de &lt;code&gt;cases&lt;/code&gt; lugar de &lt;code&gt;lets&lt;/code&gt; obtener un c&amp;oacute;digo m&amp;aacute;s estricto (algo bueno):</target>
        </trans-unit>
        <trans-unit id="fd8adda1f5cdce432835cce105d7c84fdbd2dac1" translate="yes" xml:space="preserve">
          <source>A lexer for the haskell language.</source>
          <target state="translated">Un lexer para el lenguaje haskell.</target>
        </trans-unit>
        <trans-unit id="6b7e5a3a0abc0bd6645cddccc0976a9582cc8903" translate="yes" xml:space="preserve">
          <source>A lexer for the mondrian language.</source>
          <target state="translated">Un lexer para la lengua mondriana.</target>
        </trans-unit>
        <trans-unit id="1726ba2f885b524251e70e59cf6b4178dcd2f11f" translate="yes" xml:space="preserve">
          <source>A library for &lt;code&gt;&lt;a href=&quot;system-filepath-posix#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; manipulations, using Posix style paths on all platforms. Importing &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; is usually better.</source>
          <target state="translated">Una biblioteca para manipulaciones de &lt;code&gt;&lt;a href=&quot;system-filepath-posix#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; , utilizando rutas de estilo Posix en todas las plataformas. Importar &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; suele ser mejor.</target>
        </trans-unit>
        <trans-unit id="d22f4e61fa94ecb3258b9cf1c0bad6a5edb3b1fc" translate="yes" xml:space="preserve">
          <source>A library for &lt;code&gt;&lt;a href=&quot;system-filepath-windows#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; manipulations, using Windows style paths on all platforms. Importing &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; is usually better.</source>
          <target state="translated">Una biblioteca para manipulaciones de &lt;code&gt;&lt;a href=&quot;system-filepath-windows#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; , usando rutas de estilo de Windows en todas las plataformas. Importar &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; suele ser mejor.</target>
        </trans-unit>
        <trans-unit id="bf071838763971ee6b13aa8cf3fa8382989daf38" translate="yes" xml:space="preserve">
          <source>A lifted BigNat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b736f738e6fcd73b3f446e3ef506bfbfaf5591f3" translate="yes" xml:space="preserve">
          <source>A line recording the dependence of the object file on the source file.</source>
          <target state="translated">Una línea que registra la dependencia del archivo de objeto del archivo de origen.</target>
        </trans-unit>
        <trans-unit id="dc910a705047942aa6596ecdf81615bb378b5bf0" translate="yes" xml:space="preserve">
          <source>A list containing child cost-centre stacks.</source>
          <target state="translated">Una lista que contiene las pilas del centro de costos para niños.</target>
        </trans-unit>
        <trans-unit id="a5dad55926d22c2d61986b7de9e0d931acff5efa" translate="yes" xml:space="preserve">
          <source>A list of all known keys.</source>
          <target state="translated">Una lista de todas las llaves conocidas.</target>
        </trans-unit>
        <trans-unit id="bc1c4d836fb10a25fe5cebecf7f03642a53de4ec" translate="yes" xml:space="preserve">
          <source>A list of all supported language extensions can be obtained by invoking &lt;code&gt;ghc --supported-extensions&lt;/code&gt; (see &lt;a href=&quot;../using#ghc-flag---supported-extensions&quot;&gt;&lt;code&gt;--supported-extensions&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a068c69873917f77c92591cc3eed569ea30b4268" translate="yes" xml:space="preserve">
          <source>A list of all supported language extensions can be obtained by invoking &lt;code&gt;ghc --supported-extensions&lt;/code&gt; (see &lt;a href=&quot;using#ghc-flag---supported-extensions&quot;&gt;&lt;code&gt;--supported-extensions&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Puede obtener una lista de todas las extensiones de idioma admitidas invocando &lt;code&gt;ghc --supported-extensions&lt;/code&gt; (consulte &lt;a href=&quot;using#ghc-flag---supported-extensions&quot;&gt; &lt;code&gt;--supported-extensions&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9020f71c1c4e09df1fb37e8eb8a85e9c837975c2" translate="yes" xml:space="preserve">
          <source>A list of separate command line arguments to the program</source>
          <target state="translated">Una lista de argumentos de línea de comando separados para el programa</target>
        </trans-unit>
        <trans-unit id="5f31632c64a2a83d396013e71426f91b56565679" translate="yes" xml:space="preserve">
          <source>A list of the program&amp;rsquo;s cost centres</source>
          <target state="translated">Una lista de los centros de costos del programa.</target>
        </trans-unit>
        <trans-unit id="73940efd2676f199ed1ac86bfd84a3386d46652a" translate="yes" xml:space="preserve">
          <source>A list of zero or more usernames that are members (gr_mem)</source>
          <target state="translated">Una lista de cero o más nombres de usuario que son miembros (gr_mem)</target>
        </trans-unit>
        <trans-unit id="bb14c26279814204dd8eba9acbc9f2cc037cda91" translate="yes" xml:space="preserve">
          <source>A list producer that can be fused with &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;. This function is merely</source>
          <target state="translated">Un productor de listas que se puede fusionar con &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; . Esta funci&amp;oacute;n es simplemente</target>
        </trans-unit>
        <trans-unit id="7609384306d65c392d73d1f946dd577e1543b1ed" translate="yes" xml:space="preserve">
          <source>A list producer that can be fused with &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;. This function is merely</source>
          <target state="translated">Un productor de listas que se puede fusionar con &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; . Esta funci&amp;oacute;n es simplemente</target>
        </trans-unit>
        <trans-unit id="3157123a0be7934993229fbac35bb2de4bfc150e" translate="yes" xml:space="preserve">
          <source>A literal POSIX file path</source>
          <target state="translated">Una ruta de archivo POSIX literal</target>
        </trans-unit>
        <trans-unit id="616e39ecf2bde53027e5f642d48b139e07322230" translate="yes" xml:space="preserve">
          <source>A local time together with a time zone.</source>
          <target state="translated">Una hora local junto con un huso horario.</target>
        </trans-unit>
        <trans-unit id="edcfe1b56e989ad66407f462968b76cf02bda336" translate="yes" xml:space="preserve">
          <source>A location in the original program source.</source>
          <target state="translated">Una ubicación en la fuente del programa original.</target>
        </trans-unit>
        <trans-unit id="8d5a785c724a8eba79d22f8cfdbe656e03ea3ef1" translate="yes" xml:space="preserve">
          <source>A log message from the runtime system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb40e6b7e0ea76eae404b014920691442447d08" translate="yes" xml:space="preserve">
          <source>A logically uninhabited data type, used to indicate that a given term should not exist.</source>
          <target state="translated">Un tipo de datos lógicamente deshabitado,utilizado para indicar que un determinado término no debe existir.</target>
        </trans-unit>
        <trans-unit id="4fae0237e62dbac5cce6d600545ee02ceb780eef" translate="yes" xml:space="preserve">
          <source>A long GC sync can be caused by a mutator thread that is inside an &lt;code&gt;unsafe&lt;/code&gt; FFI call, or running in a loop that doesn&amp;rsquo;t allocate memory and so doesn&amp;rsquo;t yield. To fix the former, make the call &lt;code&gt;safe&lt;/code&gt;, and to fix the latter, either avoid calling the code in question or compile it with &lt;a href=&quot;using-optimisation#ghc-flag--fomit-yields&quot;&gt;&lt;code&gt;-fomit-yields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Una sincronizaci&amp;oacute;n GC larga puede ser causada por un subproceso mutador que se encuentra dentro de una llamada FFI &lt;code&gt;unsafe&lt;/code&gt; o que se ejecuta en un bucle que no asigna memoria y, por lo tanto, no cede. Para solucionar el primero, haga que la llamada sea &lt;code&gt;safe&lt;/code&gt; y para solucionar el segundo, evite llamar al c&amp;oacute;digo en cuesti&amp;oacute;n o &lt;a href=&quot;using-optimisation#ghc-flag--fomit-yields&quot;&gt; &lt;code&gt;-fomit-yields&lt;/code&gt; &lt;/a&gt; con -fomit-yields .</target>
        </trans-unit>
        <trans-unit id="05cad06e7cb8bda737ea7d67ec36667703119c82" translate="yes" xml:space="preserve">
          <source>A low-level I/O provider where the data is bytes in memory.</source>
          <target state="translated">Un proveedor de E/S de bajo nivel donde los datos son bytes en la memoria.</target>
        </trans-unit>
        <trans-unit id="29a420d2bda1c2230ff18f10c36a8d31a7dc978a" translate="yes" xml:space="preserve">
          <source>A low-level I/O provider where the data is bytes in memory. The Word64 offsets currently have no effect on POSIX system or consoles where the implicit behaviour of the C runtime is assume to move the file pointer on every read/write without needing an explicit seek.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c87eeefae8a2c24218a0a414358507070126796" translate="yes" xml:space="preserve">
          <source>A low-tech way: grep (search) your interface files for overloaded type signatures. You can view interface files using the &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt; option (see &lt;a href=&quot;separate_compilation#hi-options&quot;&gt;Other options related to interface files&lt;/a&gt;).</source>
          <target state="translated">Una forma de baja tecnolog&amp;iacute;a: grep (buscar) sus archivos de interfaz para firmas de tipos sobrecargadas. Puede ver los archivos de interfaz utilizando la opci&amp;oacute;n &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt; (consulte &lt;a href=&quot;separate_compilation#hi-options&quot;&gt;Otras opciones relacionadas con los archivos de interfaz&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f6dadb395de3d2b9d69bc143f67ef70d410699b4" translate="yes" xml:space="preserve">
          <source>A lower-case identifier &lt;code&gt;foo&lt;/code&gt;. GHC assumes that the main function is &lt;code&gt;Main.foo&lt;/code&gt;.</source>
          <target state="translated">Un identificador en min&amp;uacute;sculas &lt;code&gt;foo&lt;/code&gt; . GHC asume que la funci&amp;oacute;n principal es &lt;code&gt;Main.foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68062c83cacf82d9a90ab7e0cc7ea387cf2a996a" translate="yes" xml:space="preserve">
          <source>A map of integers to values &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Un mapa de n&amp;uacute;meros enteros a valores &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65d761f61d1d8b61018c0927736bc1f2164bec10" translate="yes" xml:space="preserve">
          <source>A masking character; e.g., &lt;code&gt;Just '*'&lt;/code&gt;</source>
          <target state="translated">Un personaje enmascarador; p. ej., &lt;code&gt;Just '*'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec043ff4717214a6d38bc8fbb175d1fdb2e2c0b5" translate="yes" xml:space="preserve">
          <source>A maximal set of mutually reachable vertices.</source>
          <target state="translated">Un conjunto máximo de vértices mutuamente alcanzables.</target>
        </trans-unit>
        <trans-unit id="11966b51fe1d27560b215138baa79271c17219dd" translate="yes" xml:space="preserve">
          <source>A memory pool.</source>
          <target state="translated">Un fondo de memoria.</target>
        </trans-unit>
        <trans-unit id="068781bc49acfb4cc274e15ab83d09598ea7b38a" translate="yes" xml:space="preserve">
          <source>A minimal &lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; definition consists of either &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldr&quot;&gt;bifoldr&lt;/a&gt;&lt;/code&gt;. When defining more than this minimal set, one should ensure that the following identities hold:</source>
          <target state="translated">Una definici&amp;oacute;n m&amp;iacute;nima de &lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; consiste en &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldr&quot;&gt;bifoldr&lt;/a&gt;&lt;/code&gt; . Al definir m&amp;aacute;s de este conjunto m&amp;iacute;nimo, uno debe asegurarse de que se mantengan las siguientes identidades:</target>
        </trans-unit>
        <trans-unit id="3ca5616e71a7726aa5bd2663b7f524e751a256d8" translate="yes" xml:space="preserve">
          <source>A minimal complete definition must include implementations of &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and of either &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt;. If it defines both, then they must behave the same as their default definitions:</source>
          <target state="translated">Una definici&amp;oacute;n m&amp;iacute;nima completa debe incluir implementaciones de &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; y de &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; . Si define ambos, deben comportarse igual que sus definiciones predeterminadas:</target>
        </trans-unit>
        <trans-unit id="c69118482cffeb2b76367b869803b6611f4079d3" translate="yes" xml:space="preserve">
          <source>A minimal complete definition must include implementations of &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and of either &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt;. If it defines both, then they must behave the same as their default definitions:</source>
          <target state="translated">Una definici&amp;oacute;n m&amp;iacute;nima completa debe incluir implementaciones de &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; y de &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; . Si define ambos, deben comportarse igual que sus definiciones predeterminadas:</target>
        </trans-unit>
        <trans-unit id="a11f1b1fc9f85e87f7328e93a0fe87efd1a62782" translate="yes" xml:space="preserve">
          <source>A minimal complete definition must include implementations of &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and of either &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt;. If it defines both, then they must behave the same as their default definitions:</source>
          <target state="translated">Una definici&amp;oacute;n m&amp;iacute;nima completa debe incluir implementaciones de &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; y de &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; . Si define ambos, deben comportarse igual que sus definiciones predeterminadas:</target>
        </trans-unit>
        <trans-unit id="b8c72a19154aaf8d59b6b3ec9d5c79b6d054c147" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una imagen especular de la &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9728f4924a2cece6cd9f3bd1f1fb2a3d7d63e51" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228cb9e2e60bf9edb999f975c52ca86b23a2deaa" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2014f989a9d241989c62fe055f679a0c74c7b1b5" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una imagen especular de la &lt;code&gt;&lt;a href=&quot;control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11fd433555f19114cd7accfaf208363211897740" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;control-arrow#v:left&quot;&gt;left&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una imagen especular de la &lt;code&gt;&lt;a href=&quot;control-arrow#v:left&quot;&gt;left&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b38d2272521d203ef9738b678b691090ceb2c2a7" translate="yes" xml:space="preserve">
          <source>A mode that determines the effect of &lt;code&gt;&lt;a href=&quot;system-io#v:hSeek&quot;&gt;hSeek&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl mode i&lt;/code&gt;.</source>
          <target state="translated">Un modo que determina el efecto del &lt;code&gt;hdl mode i&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:hSeek&quot;&gt;hSeek&lt;/a&gt;&lt;/code&gt; hdl i .</target>
        </trans-unit>
        <trans-unit id="5f6374097118c76813d909ba13b814c9cd41e81e" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; in a package &lt;code&gt;P&lt;/code&gt; is trusted by a client C if and only if:</source>
          <target state="translated">Un cliente C conf&amp;iacute;a en un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; en un paquete &lt;code&gt;P&lt;/code&gt; si y solo si:</target>
        </trans-unit>
        <trans-unit id="79f16cbaafdc9bfd2ba1ca22d71d2c674b761102" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; that is &lt;code&gt;{-# SOURCE #-}&lt;/code&gt;-imported in a program will usually also be ordinarily imported elsewhere. If not, &lt;code&gt;ghc --make&lt;/code&gt; automatically adds &lt;code&gt;M&lt;/code&gt; to the set of modules it tries to compile and link, to ensure that &lt;code&gt;M&lt;/code&gt;&amp;lsquo;s implementation is included in the final program.</source>
          <target state="translated">Un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; que es &lt;code&gt;{-# SOURCE #-}&lt;/code&gt; -importado en un programa normalmente tambi&amp;eacute;n se importar&amp;aacute; en otro lugar. Si no es as&amp;iacute;, &lt;code&gt;ghc --make&lt;/code&gt; agrega autom&amp;aacute;ticamente &lt;code&gt;M&lt;/code&gt; al conjunto de m&amp;oacute;dulos que intenta compilar y vincular, para asegurar que la implementaci&amp;oacute;n de &lt;code&gt;M&lt;/code&gt; est&amp;eacute; incluida en el programa final.</target>
        </trans-unit>
        <trans-unit id="987f7b14a3141b967b7850d7f7657d68e62459f9" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; that is &lt;code&gt;{-# SOURCE #-}&lt;/code&gt;-imported in a program will usually also be ordinarily imported elsewhere. If not, &lt;code&gt;ghc --make&lt;/code&gt; automatically adds &lt;code&gt;M&lt;/code&gt; to the set of modules it tries to compile and link, to ensure that &lt;code&gt;M&lt;/code&gt;&amp;rsquo;s implementation is included in the final program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519fe32d3643ce1e03ac2bab30bb1bdcc52d189b" translate="yes" xml:space="preserve">
          <source>A module containing &lt;em&gt;unsafe&lt;/em&gt; operations, for &lt;em&gt;very very careful&lt;/em&gt; use in &lt;em&gt;heavily tested&lt;/em&gt; code.</source>
          <target state="translated">Un m&amp;oacute;dulo que contiene operaciones &lt;em&gt;inseguras&lt;/em&gt; , para &lt;em&gt;un&lt;/em&gt; uso &lt;em&gt;muy cuidadoso&lt;/em&gt; en c&amp;oacute;digo &lt;em&gt;muy probado&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="461ba4ff0cf5d9d0e690d1653b0296554ff09c30" translate="yes" xml:space="preserve">
          <source>A module containing private &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. Modules which extend the &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; system may need to use this module.</source>
          <target state="translated">Un m&amp;oacute;dulo que contiene elementos internos de &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; privados . Esto expone la representaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; y las funciones de construcci&amp;oacute;n de bajo nivel. Los m&amp;oacute;dulos que ampl&amp;iacute;an el sistema de &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; pueden necesitar utilizar este m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="9355e89a95e098cf87e4b9b4d4b0c731bdb2c1ad" translate="yes" xml:space="preserve">
          <source>A module containing private &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. Modules which extend the &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; system may need to use this module.</source>
          <target state="translated">Un m&amp;oacute;dulo que contiene elementos internos de &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; privados . Esto expone la representaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; y las funciones de construcci&amp;oacute;n de bajo nivel. Los m&amp;oacute;dulos que ampl&amp;iacute;an el sistema de &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; pueden necesitar utilizar este m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="d6002f28ce7de42f2068e2f04b1e0c26f91c712e" translate="yes" xml:space="preserve">
          <source>A module containing semi-public &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. As such all the functions in this module are unsafe. The API is also not stable.</source>
          <target state="translated">Un m&amp;oacute;dulo que contiene &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; internos de ByteString semip&amp;uacute;blicos . Esto expone la representaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y las funciones de construcci&amp;oacute;n de bajo nivel. Como tal, todas las funciones de este m&amp;oacute;dulo no son seguras. La API tampoco es estable.</target>
        </trans-unit>
        <trans-unit id="1bd1a012965931778304a7fe9b5fbe73d7d293aa" translate="yes" xml:space="preserve">
          <source>A module containing semi-public &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. Modules which extend the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; system will need to use this module while ideally most users will be able to make do with the public interface modules.</source>
          <target state="translated">Un m&amp;oacute;dulo que contiene &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; internos de ByteString semip&amp;uacute;blicos . Esto expone la representaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y las funciones de construcci&amp;oacute;n de bajo nivel. Los m&amp;oacute;dulos que ampl&amp;iacute;an el sistema &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; necesitar&amp;aacute;n usar este m&amp;oacute;dulo, mientras que, idealmente, la mayor&amp;iacute;a de los usuarios podr&amp;aacute;n arregl&amp;aacute;rselas con los m&amp;oacute;dulos de interfaz p&amp;uacute;blica.</target>
        </trans-unit>
        <trans-unit id="23bf84d5c3edc452896e02cf0360a0e8d1e320af" translate="yes" xml:space="preserve">
          <source>A module containing unsafe &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">Un m&amp;oacute;dulo que contiene operaciones de &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; no seguras .</target>
        </trans-unit>
        <trans-unit id="6d9f0c8a370cea074b5aff281e49729218f6c1e7" translate="yes" xml:space="preserve">
          <source>A module containing unsafe &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; operations, for very very careful use in heavily tested code.</source>
          <target state="translated">Un m&amp;oacute;dulo que contiene operaciones de &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; inseguras , para un uso muy cuidadoso en c&amp;oacute;digo muy probado.</target>
        </trans-unit>
        <trans-unit id="af7a45c55bc3dff94ebe92e041da9cd2e519eb81" translate="yes" xml:space="preserve">
          <source>A module implementing &lt;code&gt;A&lt;/code&gt; would have to export the function &lt;code&gt;double&lt;/code&gt; with a type definitionally equal to the signature. Note that this means you can&amp;rsquo;t implement &lt;code&gt;double&lt;/code&gt; using a polymorphic function &lt;code&gt;double :: Num a =&amp;gt; a -&amp;gt; a&lt;/code&gt;.</source>
          <target state="translated">Un m&amp;oacute;dulo que implementa &lt;code&gt;A&lt;/code&gt; tendr&amp;iacute;a que exportar la funci&amp;oacute;n &lt;code&gt;double&lt;/code&gt; con un tipo definidamente igual a la firma. Tenga en cuenta que esto significa que no puede implementar el &lt;code&gt;double&lt;/code&gt; usando una funci&amp;oacute;n polim&amp;oacute;rfica &lt;code&gt;double :: Num a =&amp;gt; a -&amp;gt; a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab6705ee3245e4112a8338653bc894373bc0218c" translate="yes" xml:space="preserve">
          <source>A module name &lt;code&gt;A&lt;/code&gt;. GHC assumes that the main function is &lt;code&gt;A.main&lt;/code&gt;.</source>
          <target state="translated">Un nombre de m&amp;oacute;dulo &lt;code&gt;A&lt;/code&gt; . GHC asume que la funci&amp;oacute;n principal es &lt;code&gt;A.main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa8da0aa9a3feddea78d0a337a370d07af5012b" translate="yes" xml:space="preserve">
          <source>A module which imports &lt;code&gt;MyNum(..)&lt;/code&gt; from &lt;code&gt;Example&lt;/code&gt; and then re-exports &lt;code&gt;MyNum(..)&lt;/code&gt; will also export any pattern synonyms bundled with &lt;code&gt;MyNum&lt;/code&gt; in &lt;code&gt;Example&lt;/code&gt;. A more complete specification can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms/AssociatingSynonyms&quot;&gt;wiki.&lt;/a&gt;</source>
          <target state="translated">Un m&amp;oacute;dulo que importa &lt;code&gt;MyNum(..)&lt;/code&gt; de &lt;code&gt;Example&lt;/code&gt; y luego reexporta &lt;code&gt;MyNum(..)&lt;/code&gt; tambi&amp;eacute;n exportar&amp;aacute; cualquier patr&amp;oacute;n sin&amp;oacute;nimo incluido con &lt;code&gt;MyNum&lt;/code&gt; en &lt;code&gt;Example&lt;/code&gt; . Puede encontrar una especificaci&amp;oacute;n m&amp;aacute;s completa en la &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms/AssociatingSynonyms&quot;&gt;wiki.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46205c3964ea4b2def4e3d5de0a91193b170cf06" translate="yes" xml:space="preserve">
          <source>A module which imports &lt;code&gt;MyNum(..)&lt;/code&gt; from &lt;code&gt;Example&lt;/code&gt; and then re-exports &lt;code&gt;MyNum(..)&lt;/code&gt; will also export any pattern synonyms bundled with &lt;code&gt;MyNum&lt;/code&gt; in &lt;code&gt;Example&lt;/code&gt;. A more complete specification can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms/associating-synonyms&quot;&gt;wiki.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11caca4dfe7a2e6647b187af096af9ce16cdb9c3" translate="yes" xml:space="preserve">
          <source>A monad containing an environment of type &lt;code&gt;r&lt;/code&gt;, output of type &lt;code&gt;w&lt;/code&gt; and an updatable state of type &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Una m&amp;oacute;nada que contiene un entorno de tipo &lt;code&gt;r&lt;/code&gt; , una salida de tipo &lt;code&gt;w&lt;/code&gt; y un estado actualizable de tipo &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44b463ce5ac795e0357256636d6bb8abafd3b888" translate="yes" xml:space="preserve">
          <source>A monad is said to be &lt;em&gt;strict&lt;/em&gt; if its &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operation is strict in its first argument. The base monads &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; are strict:</source>
          <target state="translated">Se dice que una m&amp;oacute;nada es &lt;em&gt;estricta&lt;/em&gt; si su operaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; es estricta en su primer argumento. Las m&amp;oacute;nadas base &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; son estrictas:</target>
        </trans-unit>
        <trans-unit id="880b41c9b53dfefef049250c9c1a2e53c78a0d3b" translate="yes" xml:space="preserve">
          <source>A monad is said to be &lt;em&gt;strict&lt;/em&gt; if its &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operation is strict in its first argument. The base monads &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; are strict:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838ec5c60886531f50cec97ff01bdfacdd5b0b2a" translate="yes" xml:space="preserve">
          <source>A monad is said to be &lt;em&gt;strict&lt;/em&gt; if its &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operation is strict in its first argument. The base monads &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; are strict:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a2e0dd83579c01e51b5cfcae453a98e588af94" translate="yes" xml:space="preserve">
          <source>A monad supporting atomic memory transactions.</source>
          <target state="translated">Una mónada que apoya las transacciones de la memoria atómica.</target>
        </trans-unit>
        <trans-unit id="84ed5327cac92c7ef6e8588da5238de45965557c" translate="yes" xml:space="preserve">
          <source>A monad that can execute GHCi statements by lifting them out of m into the IO monad. (e.g state monads)</source>
          <target state="translated">Una mónada que puede ejecutar las declaraciones de GHCi levantándolas de m a la mónada IO.(por ejemplo,mónadas de estado)</target>
        </trans-unit>
        <trans-unit id="2d83f98faa29021325e93148f624ac116d49fdd7" translate="yes" xml:space="preserve">
          <source>A monad that doesn't allow any IO.</source>
          <target state="translated">Una mónada que no permite ningún IO.</target>
        </trans-unit>
        <trans-unit id="475de8d1c4ced9051885211b80d0128a644d0a1b" translate="yes" xml:space="preserve">
          <source>A monad transformer adding reading an environment of type &lt;code&gt;r&lt;/code&gt;, collecting an output of type &lt;code&gt;w&lt;/code&gt; and updating a state of type &lt;code&gt;s&lt;/code&gt; to an inner monad &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">Un transformador de m&amp;oacute;nada que agrega lectura de un entorno de tipo &lt;code&gt;r&lt;/code&gt; , recopila una salida de tipo &lt;code&gt;w&lt;/code&gt; y actualiza un estado de tipo &lt;code&gt;s&lt;/code&gt; a una m&amp;oacute;nada interna &lt;code&gt;m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec0442bcbea355903251a46fae40d37d907ac64e" translate="yes" xml:space="preserve">
          <source>A monad transformer embedding lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un transformador de m&amp;oacute;nada que incorpora &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; perezoso en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . El par&amp;aacute;metro &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; indica que el estado interno utilizado por el c&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; es uno especial proporcionado por el &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; m&amp;oacute;nada y, por tanto, distinto de los utilizados por las invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21a5486c71e41350dc1ca87d78fb4f0bce729afa" translate="yes" xml:space="preserve">
          <source>A monad transformer embedding lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un transformador de m&amp;oacute;nada que incorpora &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; perezoso en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . El par&amp;aacute;metro &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; indica que el estado interno utilizado por el c&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; es uno especial proporcionado por el &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; m&amp;oacute;nada y, por tanto, distinto de los utilizados por las invocaciones de &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="601b40dc8531d619de3d6e429600341c4287841e" translate="yes" xml:space="preserve">
          <source>A monad transformer makes a new monad out of an existing monad, such that computations of the old monad may be embedded in the new one. To construct a monad with a desired set of features, one typically starts with a base monad, such as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and applies a sequence of monad transformers.</source>
          <target state="translated">Un transformador de m&amp;oacute;nada crea una nueva m&amp;oacute;nada a partir de una m&amp;oacute;nada existente, de modo que los c&amp;aacute;lculos de la m&amp;oacute;nada antigua pueden incrustarse en la nueva. Para construir una m&amp;oacute;nada con un conjunto deseado de caracter&amp;iacute;sticas, normalmente se comienza con una m&amp;oacute;nada base, como &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , y se aplica una secuencia de transformadores de m&amp;oacute;nada.</target>
        </trans-unit>
        <trans-unit id="b365f46b9cfdefb11fdd9add50d3c78cbda728a5" translate="yes" xml:space="preserve">
          <source>A monad transformer makes a new monad out of an existing monad, such that computations of the old monad may be embedded in the new one. To construct a monad with a desired set of features, one typically starts with a base monad, such as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and applies a sequence of monad transformers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6ea457401e45545ac3dfea75911c233e6ec31b" translate="yes" xml:space="preserve">
          <source>A monad transformer makes a new monad out of an existing monad, such that computations of the old monad may be embedded in the new one. To construct a monad with a desired set of features, one typically starts with a base monad, such as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and applies a sequence of monad transformers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7cb8e57886d5e86aabfd267501ad0211c3d9f3" translate="yes" xml:space="preserve">
          <source>A monad transformer that adds exceptions to other monads.</source>
          <target state="translated">Un transformador de mónadas que añade excepciones a otras mónadas.</target>
        </trans-unit>
        <trans-unit id="6426c40e7452ced39d0234fd45fc21a33bd3cc41" translate="yes" xml:space="preserve">
          <source>A monad transformer that combines &lt;code&gt;ReaderT&lt;/code&gt;, &lt;code&gt;WriterT&lt;/code&gt; and &lt;code&gt;StateT&lt;/code&gt;. This version is lazy; for a constant-space version with almost the same interface, see &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt;.</source>
          <target state="translated">Un transformador de m&amp;oacute;nada que combina &lt;code&gt;ReaderT&lt;/code&gt; , &lt;code&gt;WriterT&lt;/code&gt; y &lt;code&gt;StateT&lt;/code&gt; . Esta versi&amp;oacute;n es perezosa; para una versi&amp;oacute;n de espacio constante con casi la misma interfaz, consulte &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2547fe70b78fa47777714df77c0add427abe3628" translate="yes" xml:space="preserve">
          <source>A monad transformer that combines &lt;code&gt;ReaderT&lt;/code&gt;, &lt;code&gt;WriterT&lt;/code&gt; and &lt;code&gt;StateT&lt;/code&gt;. This version is strict; for a lazy version with the same interface, see &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;. Although the output is built strictly, it is not possible to achieve constant space behaviour with this transformer: for that, use &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt; instead.</source>
          <target state="translated">Un transformador de m&amp;oacute;nada que combina &lt;code&gt;ReaderT&lt;/code&gt; , &lt;code&gt;WriterT&lt;/code&gt; y &lt;code&gt;StateT&lt;/code&gt; . Esta versi&amp;oacute;n es estricta; para una versi&amp;oacute;n perezosa con la misma interfaz, consulte &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt; . Aunque la salida est&amp;aacute; construida estrictamente, no es posible lograr un comportamiento de espacio constante con este transformador: para eso, use &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="e9a2ee9baf8f5856a19298f4db328fc74a1d39bd" translate="yes" xml:space="preserve">
          <source>A monad transformer that combines &lt;code&gt;ReaderT&lt;/code&gt;, &lt;code&gt;WriterT&lt;/code&gt; and &lt;code&gt;StateT&lt;/code&gt;. This version uses continuation-passing-style for the writer part to achieve constant space usage. For a lazy version with the same interface, see &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;.</source>
          <target state="translated">Un transformador de m&amp;oacute;nada que combina &lt;code&gt;ReaderT&lt;/code&gt; , &lt;code&gt;WriterT&lt;/code&gt; y &lt;code&gt;StateT&lt;/code&gt; . Esta versi&amp;oacute;n utiliza el estilo de continuaci&amp;oacute;n-paso para la parte del escritor para lograr un uso constante del espacio. Para una versi&amp;oacute;n perezosa con la misma interfaz, consulte &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="500a320bcd121d2c8283ae8852b2515080dcee31" translate="yes" xml:space="preserve">
          <source>A monad transformer which carries all of the state and settings relevant to a line-reading application.</source>
          <target state="translated">Un transformador de mónada que lleva todos los estados y ajustes relevantes para una aplicación de lectura de línea.</target>
        </trans-unit>
        <trans-unit id="f7f92818234c049ae409685d4444b37152111dc8" translate="yes" xml:space="preserve">
          <source>A monoid on applicative functors.</source>
          <target state="translated">Un monoide en los functores de aplicación.</target>
        </trans-unit>
        <trans-unit id="fe60158aa8a2b3958c4da9fb0fee916548d774b6" translate="yes" xml:space="preserve">
          <source>A monoid on arrows.</source>
          <target state="translated">Un monoide en las flechas.</target>
        </trans-unit>
        <trans-unit id="5ee64c556c0433795d77b436a1a7b436c51d6e3c" translate="yes" xml:space="preserve">
          <source>A more detailed description can be found in the overview section of &lt;a href=&quot;data-foldable#overview&quot;&gt;Data.Foldable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b89f084823136ae1433b3d27925f91dc6bb6035" translate="yes" xml:space="preserve">
          <source>A more detailed description can be found in the overview section of &lt;a href=&quot;data-traversable#overview&quot;&gt;Data.Traversable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a21663d6e752b5cb512178e5bc40818c9525d6" translate="yes" xml:space="preserve">
          <source>A more general example is &lt;code&gt;&lt;a href=&quot;data-foldable#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt;, which applies a predicate to each input element in turn until it finds the first one for which the predicate is true, at which point it returns success. If, in an infinite input stream the predicate is false for all the elements, &lt;code&gt;&lt;a href=&quot;data-foldable#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; will not terminate, but since it runs in constant space, it typically won't run out of memory, it'll just loop forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985dc66669594864a05f74a53c35b9231ca89cb8" translate="yes" xml:space="preserve">
          <source>A more generalized way of determining which exceptions to catch at run time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5845b618bce8288ed7fd6ae679531f4a7a5b077f" translate="yes" xml:space="preserve">
          <source>A more precise specification is as follows. The willingness to be overlapped or incoherent is a property of the &lt;em&gt;instance declaration&lt;/em&gt; itself, controlled as follows:</source>
          <target state="translated">Una especificaci&amp;oacute;n m&amp;aacute;s precisa es la siguiente. La voluntad de superponerse o ser incoherente es una propiedad del&lt;em&gt; declaraci&amp;oacute;n de instancia en&lt;/em&gt; s&amp;iacute;, controlada de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="f0e63911e5dfc97bc3c592219078a690d8ed2ff3" translate="yes" xml:space="preserve">
          <source>A mutable array of bytes that can be passed to foreign functions.</source>
          <target state="translated">Un conjunto mutable de bytes que pueden pasar a funciones externas.</target>
        </trans-unit>
        <trans-unit id="aaaa00796670cca26a60ac72f4e07d8b337ab183" translate="yes" xml:space="preserve">
          <source>A mutable array with unboxed elements, that can be manipulated in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Una matriz mutable con elementos sin caja, que se puede manipular en el &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; m&amp;oacute;nada ST . Los argumentos de tipo son los siguientes:</target>
        </trans-unit>
        <trans-unit id="3387c300ae3f8914517cc0cd6aa9b1be1561eb1a" translate="yes" xml:space="preserve">
          <source>A mutable array with unboxed elements, that can be manipulated in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc2bfa672fe2f680fb75b734f6f8b70d25e0e65" translate="yes" xml:space="preserve">
          <source>A mutable array with unboxed elements, that can be manipulated in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6994baa9908c386c8aa2378b6690cc491d3b838a" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="translated">Una variable mutable en el &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; m&amp;oacute;nada IO</target>
        </trans-unit>
        <trans-unit id="86d8cb4c41428c71956a58b3affc3d3a67e5a624" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbad323a47ac9bc70e75ccd7f2a3ebe5beec48d5" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985e8387b10ebbbd6e5ab332eab6588b350aa36d" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="translated">Una variable mutable en el &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; m&amp;oacute;nada IO</target>
        </trans-unit>
        <trans-unit id="a954d6c35420d409169ad1a91fbdf2cc6fa8fd09" translate="yes" xml:space="preserve">
          <source>A name can be quoted with either one or two prefix single quotes:</source>
          <target state="translated">Un nombre puede ser citado con uno o dos prefijos entre comillas:</target>
        </trans-unit>
        <trans-unit id="6eac8d924312d7747867fd052a0984825adb6ab0" translate="yes" xml:space="preserve">
          <source>A name whose second character is a single quote (sadly) cannot be quoted in this way, because it will be parsed instead as a quoted character. For example, if the function is called &lt;code&gt;f'7&lt;/code&gt; (which is a legal Haskell identifier), an attempt to quote it as &lt;code&gt;'f'7&lt;/code&gt; would be parsed as the character literal &lt;code&gt;'f'&lt;/code&gt; followed by the numeric literal &lt;code&gt;7&lt;/code&gt;. There is no current escape mechanism in this (unusual) situation.</source>
          <target state="translated">Un nombre cuyo segundo car&amp;aacute;cter es una comilla simple (lamentablemente) no se puede citar de esta manera, porque se analizar&amp;aacute; en su lugar como un car&amp;aacute;cter entre comillas. Por ejemplo, si la funci&amp;oacute;n se llama &lt;code&gt;f'7&lt;/code&gt; (que es un identificador Haskell legal), un intento de citarla como &lt;code&gt;'f'7&lt;/code&gt; se analizar&amp;iacute;a como el car&amp;aacute;cter literal &lt;code&gt;'f'&lt;/code&gt; seguido del literal num&amp;eacute;rico &lt;code&gt;7&lt;/code&gt; . No existe un mecanismo de escape actual en esta (inusual) situaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7f16e7f677a6d8e62b9e97a39d3de36debfc79cc" translate="yes" xml:space="preserve">
          <source>A name's package, if it exists.</source>
          <target state="translated">El paquete de un nombre,si existe.</target>
        </trans-unit>
        <trans-unit id="7598a3dc426907ef37ba1a8eb3a99bc5a30b0e87" translate="yes" xml:space="preserve">
          <source>A new chunk of heap has been allocated by the indicated capability set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6919dce57a8f508bed2b02c9c8ad2d961f4e47dd" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; function attempts to put the value &lt;code&gt;a&lt;/code&gt; into the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it was successful, or &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">Una versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; intenta poner el valor &lt;code&gt;a&lt;/code&gt; en el &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , devolviendo &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si tuvo &amp;eacute;xito, o &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; en caso contrario.</target>
        </trans-unit>
        <trans-unit id="1adb02601e1d9275c9a9312a596d444889d03e7a" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; regresa inmediatamente, con &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba vac&amp;iacute;o, o &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba lleno de contenido &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ccd9ca2458eb3a684692c3f8141733d7490bf75" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;. After &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">Una versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; regresa inmediatamente, con &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba vac&amp;iacute;o, o &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba lleno de contenido &lt;code&gt;a&lt;/code&gt; . Despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; , el &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; se deja vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="e55cff29c2c9733e10c5a0b338cfcec2b5ad75a2" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; function attempts to put the value &lt;code&gt;a&lt;/code&gt; into the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it was successful, or &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">Una versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; intenta poner el valor &lt;code&gt;a&lt;/code&gt; en el &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , devolviendo &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si tuvo &amp;eacute;xito, o &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; en caso contrario.</target>
        </trans-unit>
        <trans-unit id="206f440a2076bebff809698fc93d8fc54da5d7ab" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; regresa inmediatamente, con &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba vac&amp;iacute;o, o &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba lleno de contenido &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c36e2f146526d2510dab34b468a2981631693ee" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;. After &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">Una versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; regresa inmediatamente, con &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba vac&amp;iacute;o, o &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; si el &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; estaba lleno de contenido &lt;code&gt;a&lt;/code&gt; . Despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; , el &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; se deja vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="2569960f87e4b3b548288102fd577f9229d2fab8" translate="yes" xml:space="preserve">
          <source>A non-indexed type representation.</source>
          <target state="translated">Una representación de tipo no indexada.</target>
        </trans-unit>
        <trans-unit id="e9d1290f4bd898d7ad62e94e9d30ceb6655bd011" translate="yes" xml:space="preserve">
          <source>A non-inlined version of &lt;code&gt;&lt;a href=&quot;data-text-internal#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n no alineada de &lt;code&gt;&lt;a href=&quot;data-text-internal#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f03b8899bb7d9e29bd30f804a030dd4fd076a1a" translate="yes" xml:space="preserve">
          <source>A note on evaluation order: the expression &lt;code&gt;seq a b&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; guarantee that &lt;code&gt;a&lt;/code&gt; will be evaluated before &lt;code&gt;b&lt;/code&gt;. The only guarantee given by &lt;code&gt;seq&lt;/code&gt; is that the both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will be evaluated before &lt;code&gt;seq&lt;/code&gt; returns a value. In particular, this means that &lt;code&gt;b&lt;/code&gt; may be evaluated before &lt;code&gt;a&lt;/code&gt;. If you need to guarantee a specific order of evaluation, you must use the function &lt;code&gt;pseq&lt;/code&gt; from the &quot;parallel&quot; package.</source>
          <target state="translated">Una nota sobre el orden de evaluaci&amp;oacute;n: la expresi&amp;oacute;n &lt;code&gt;seq a b&lt;/code&gt; no &lt;em&gt;no&lt;/em&gt; garantiza que &lt;code&gt;a&lt;/code&gt; ser&amp;aacute; evaluado antes de &lt;code&gt;b&lt;/code&gt; . La &amp;uacute;nica garant&amp;iacute;a que ofrece &lt;code&gt;seq&lt;/code&gt; es que tanto &lt;code&gt;a&lt;/code&gt; como &lt;code&gt;b&lt;/code&gt; se evaluar&amp;aacute;n antes de que &lt;code&gt;seq&lt;/code&gt; devuelva un valor. En particular, esto significa que &lt;code&gt;b&lt;/code&gt; puede evaluarse antes que &lt;code&gt;a&lt;/code&gt; . Si necesita garantizar un orden espec&amp;iacute;fico de evaluaci&amp;oacute;n, debe utilizar la funci&amp;oacute;n &lt;code&gt;pseq&lt;/code&gt; del paquete &quot;paralelo&quot;.</target>
        </trans-unit>
        <trans-unit id="3c16b58b80137c1a8cc002192b71e052aeb6a9ce" translate="yes" xml:space="preserve">
          <source>A number of restrictions apply to use of annotations:</source>
          <target state="translated">Se aplican varias restricciones al uso de las anotaciones:</target>
        </trans-unit>
        <trans-unit id="711bb74ca36d3d4c1868e4f33ea8af8c9700a708" translate="yes" xml:space="preserve">
          <source>A package database is where the details about installed packages are stored. It is a directory, usually called &lt;code&gt;package.conf.d&lt;/code&gt;, that contains a file for each package, together with a binary cache of the package data in the file &lt;code&gt;package.cache&lt;/code&gt;. Normally you won&amp;rsquo;t need to look at or modify the contents of a package database directly; all management of package databases can be done through the &lt;strong&gt;ghc-pkg&lt;/strong&gt; tool (see &lt;a href=&quot;#package-management&quot;&gt;Package management (the ghc-pkg command)&lt;/a&gt;).</source>
          <target state="translated">Una base de datos de paquetes es donde se almacenan los detalles sobre los paquetes instalados. Es un directorio, generalmente llamado &lt;code&gt;package.conf.d&lt;/code&gt; , que contiene un archivo para cada paquete, junto con un cach&amp;eacute; binario de los datos del paquete en el archivo &lt;code&gt;package.cache&lt;/code&gt; . Normalmente no necesitar&amp;aacute; mirar o modificar el contenido de una base de datos de paquetes directamente; Toda la gesti&amp;oacute;n de las bases de datos de paquetes se puede realizar a trav&amp;eacute;s de la herramienta &lt;strong&gt;ghc-pkg&lt;/strong&gt; (consulte &lt;a href=&quot;#package-management&quot;&gt;Gesti&amp;oacute;n de paquetes (el comando ghc-pkg)&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e6482c111ff88fbc29ede2ddeea4102525681832" translate="yes" xml:space="preserve">
          <source>A package description consists of a number of field/value pairs. A field starts with the field name in the left-hand column followed by a &amp;ldquo;&lt;code&gt;:&lt;/code&gt;&amp;rdquo;, and the value continues until the next line that begins in the left-hand column, or the end of file.</source>
          <target state="translated">La descripci&amp;oacute;n de un paquete consta de varios pares de campo / valor. Un campo comienza con el nombre del campo en la columna de la izquierda seguido de un &amp;ldquo; &lt;code&gt;:&lt;/code&gt; &amp;rdquo;, y el valor contin&amp;uacute;a hasta la siguiente l&amp;iacute;nea que comienza en la columna de la izquierda o el final del archivo.</target>
        </trans-unit>
        <trans-unit id="f0d41efbca1f6d8a23338adade26a83c1583e8be" translate="yes" xml:space="preserve">
          <source>A package is a library of Haskell modules known to the compiler. GHC comes with several packages: see the accompanying &lt;a href=&quot;../libraries/index&quot;&gt;library documentation&lt;/a&gt;. More packages to install can be obtained from &lt;a href=&quot;http://hackage.haskell.org/packages/hackage.html&quot;&gt;HackageDB&lt;/a&gt;.</source>
          <target state="translated">Un paquete es una biblioteca de m&amp;oacute;dulos Haskell conocida por el compilador. GHC viene con varios paquetes: consulte la &lt;a href=&quot;../libraries/index&quot;&gt;documentaci&amp;oacute;n de la biblioteca&lt;/a&gt; adjunta . Se pueden obtener m&amp;aacute;s paquetes para instalar en &lt;a href=&quot;http://hackage.haskell.org/packages/hackage.html&quot;&gt;HackageDB&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c520c7aa2b71fcf3f1e8b3c7af68b75aff8a5221" translate="yes" xml:space="preserve">
          <source>A package is a library of Haskell modules known to the compiler. GHC comes with several packages: see the accompanying &lt;a href=&quot;../libraries/index&quot;&gt;library documentation&lt;/a&gt;. More packages to install can be obtained from &lt;a href=&quot;https://hackage.haskell.org/packages/hackage.html&quot;&gt;HackageDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dbde045ae446b9fd85968f7cfc7dbefc9f7710" translate="yes" xml:space="preserve">
          <source>A package specification is a Haskell record; in particular, it is the record &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/Cabal-3.2.0.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt;Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; in the module Distribution.InstalledPackageInfo, which is part of the Cabal package distributed with GHC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c877a3844ef3dc7d9601200a6497a731da7b2b16" translate="yes" xml:space="preserve">
          <source>A package specification is a Haskell record; in particular, it is the record &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/Cabal-3.0.1.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt;Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; in the module Distribution.InstalledPackageInfo, which is part of the Cabal package distributed with GHC.</source>
          <target state="translated">Una especificaci&amp;oacute;n de paquete es un registro de Haskell; en particular, es el r&amp;eacute;cord&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/Cabal-3.0.1.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt; Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; en el m&amp;oacute;dulo Distribution.InstalledPackageInfo, que es parte del paquete Cabal distribuido con GHC.</target>
        </trans-unit>
        <trans-unit id="060689afe5f9becdf3b195ee863bbe73de610b9c" translate="yes" xml:space="preserve">
          <source>A package specification is a Haskell record; in particular, it is the record &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/Cabal-3.4.0.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt;Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; in the module Distribution.InstalledPackageInfo, which is part of the Cabal package distributed with GHC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7ab63973f7143650edb4489cbabd9755f0dae2" translate="yes" xml:space="preserve">
          <source>A pair of an open type family equations is checked by attempting to unify their RHSs. If the RHSs don&amp;rsquo;t unify this pair does not violate injectivity annotation. If unification succeeds with a substitution then LHSs of unified equations must be identical under that substitution. If they are not identical then GHC reports that the type family is not injective.</source>
          <target state="translated">Se verifica un par de ecuaciones de una familia de tipos abiertos al intentar unificar sus RHS. Si los RHS no unifican, este par no viola la anotaci&amp;oacute;n de inyectividad. Si la unificaci&amp;oacute;n tiene &amp;eacute;xito con una sustituci&amp;oacute;n, entonces las LHS de las ecuaciones unificadas deben ser id&amp;eacute;nticas bajo esa sustituci&amp;oacute;n. Si no son id&amp;eacute;nticos, GHC informa que la familia de tipos no es inyectable.</target>
        </trans-unit>
        <trans-unit id="84d2773400375ccf44e88b72599837fd03633672" translate="yes" xml:space="preserve">
          <source>A pairing heap tagged with both a key and the original position of its elements, for use in &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un mont&amp;oacute;n de emparejamiento etiquetado con una clave y la posici&amp;oacute;n original de sus elementos, para usar en &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dd62e14bc9431464958571d2b435d03d28b2f82" translate="yes" xml:space="preserve">
          <source>A pairing heap tagged with some key for sorting elements, for use in &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un mont&amp;oacute;n de emparejamiento etiquetado con alguna clave para ordenar elementos, para usar en &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08959b3dc19b34612dd713a20c89a35536c5c8b1" translate="yes" xml:space="preserve">
          <source>A pairing heap tagged with the original position of elements, to allow for stable sorting.</source>
          <target state="translated">Un montón de pares etiquetados con la posición original de los elementos,para permitir una clasificación estable.</target>
        </trans-unit>
        <trans-unit id="179683aea0f779b8d62f71ce768d02e25c23258e" translate="yes" xml:space="preserve">
          <source>A pairing/concatenation operator for builder primitives, both bounded and fixed size.</source>
          <target state="translated">Un operador de emparejamiento/concentración para los primitivos constructores,tanto de tamaño limitado como fijo.</target>
        </trans-unit>
        <trans-unit id="a9abb3b7589ecd20d1d2b93e90cc7db6542915ba" translate="yes" xml:space="preserve">
          <source>A parallel garbage collection has been requested by a capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b720794f2dd0a7c18f79f3dbbf604879cd4d39c" translate="yes" xml:space="preserve">
          <source>A parallel list comprehension has multiple independent branches of qualifier lists, each separated by a &lt;code&gt;|&lt;/code&gt; symbol. For example, the following zips together two lists:</source>
          <target state="translated">Una comprensi&amp;oacute;n de lista paralela tiene m&amp;uacute;ltiples ramas independientes de listas de calificadores, cada una separada por un &lt;code&gt;|&lt;/code&gt; s&amp;iacute;mbolo. Por ejemplo, lo siguiente comprime dos listas:</target>
        </trans-unit>
        <trans-unit id="3fb86b841f661b45cc569b86782f61f203ff3263" translate="yes" xml:space="preserve">
          <source>A parameter to specify the number of lines affected. Some capabilities (e.g., &lt;code&gt;clear&lt;/code&gt; and &lt;code&gt;dch1&lt;/code&gt;) use this parameter on some terminals to compute variable-length padding.</source>
          <target state="translated">Un par&amp;aacute;metro para especificar el n&amp;uacute;mero de l&amp;iacute;neas afectadas. Algunas capacidades (por ejemplo, &lt;code&gt;clear&lt;/code&gt; y &lt;code&gt;dch1&lt;/code&gt; ) usan este par&amp;aacute;metro en algunos terminales para calcular el relleno de longitud variable.</target>
        </trans-unit>
        <trans-unit id="3c7816b5381405514fd134ab41157f7a1b19dbb1" translate="yes" xml:space="preserve">
          <source>A parser for a type &lt;code&gt;a&lt;/code&gt;, represented as a function that takes a &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and returns a list of possible parses as &lt;code&gt;(a,&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; pairs.</source>
          <target state="translated">Un analizador para un tipo &lt;code&gt;a&lt;/code&gt; , representado como una funci&amp;oacute;n que toma un &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; y devuelve una lista de posibles an&amp;aacute;lisis como pares &lt;code&gt;(a,&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ef40a705741b0fa0c05e60da025feb810b08af8" translate="yes" xml:space="preserve">
          <source>A parser for a type &lt;code&gt;a&lt;/code&gt;, represented as a function that takes a &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and returns a list of possible parses as &lt;code&gt;(a,&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; pairs.</source>
          <target state="translated">Un analizador para un tipo &lt;code&gt;a&lt;/code&gt; , representado como una funci&amp;oacute;n que toma un &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; y devuelve una lista de posibles an&amp;aacute;lisis como pares &lt;code&gt;(a,&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77e31a3f5862591f06987b3fcab3d8cc7ae35a42" translate="yes" xml:space="preserve">
          <source>A parser for versions in the format produced by &lt;code&gt;&lt;a href=&quot;data-version#v:showVersion&quot;&gt;showVersion&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un analizador de versiones en el formato producido por &lt;code&gt;&lt;a href=&quot;data-version#v:showVersion&quot;&gt;showVersion&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00189f74465df92aa0eb7c3be6fb9e5d018cbddf" translate="yes" xml:space="preserve">
          <source>A partial type signature is a type signature containing special placeholders called &lt;em&gt;wildcards&lt;/em&gt;. A wildcard is written as an underscore (e.g. &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo;) or, if &lt;a href=&quot;#extension-NamedWildCards&quot;&gt;&lt;code&gt;NamedWildCards&lt;/code&gt;&lt;/a&gt; is enabled, any identifier with a leading underscore (e.g. &amp;ldquo;&lt;code&gt;_foo&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_bar&lt;/code&gt;&amp;rdquo;). Partial type signatures are to type signatures what &lt;a href=&quot;#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; are to expressions. During compilation these wildcards or holes will generate an error message that describes which type was inferred at the hole&amp;rsquo;s location, and information about the origin of any free type variables. GHC reports such error messages by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d0b796bf5c4ddb7dc5dc483c396f91df528a67" translate="yes" xml:space="preserve">
          <source>A partial type signature is a type signature containing special placeholders called &lt;em&gt;wildcards&lt;/em&gt;. A wildcard is written as an underscore (e.g. &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo;) or, if &lt;a href=&quot;#extension-NamedWildCards&quot;&gt;&lt;code&gt;NamedWildCards&lt;/code&gt;&lt;/a&gt; is enabled, any identifier with a leading underscore (e.g. &amp;ldquo;&lt;code&gt;_foo&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_bar&lt;/code&gt;&amp;rdquo;). Partial type signatures are to type signatures what &lt;a href=&quot;typed_holes#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; are to expressions. During compilation these wildcards or holes will generate an error message that describes which type was inferred at the hole&amp;rsquo;s location, and information about the origin of any free type variables. GHC reports such error messages by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8d03f9fe4fb54a82d09df64d310f7a60062a82" translate="yes" xml:space="preserve">
          <source>A partial type signature is a type signature containing special placeholders written with a leading underscore (e.g., &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_foo&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_bar&lt;/code&gt;&amp;rdquo;) called &lt;em&gt;wildcards&lt;/em&gt;. Partial type signatures are to type signatures what &lt;a href=&quot;#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; are to expressions. During compilation these wildcards or holes will generate an error message that describes which type was inferred at the hole&amp;rsquo;s location, and information about the origin of any free type variables. GHC reports such error messages by default.</source>
          <target state="translated">Una firma de tipo parcial es una firma de tipo que contiene marcadores de posici&amp;oacute;n especiales escritos con un subrayado &lt;code&gt;_foo&lt;/code&gt; (por ejemplo, &quot; &lt;code&gt;_&lt;/code&gt; &quot;, &quot; _foo &quot;, &quot; &lt;code&gt;_bar&lt;/code&gt; &quot;) llamados &lt;em&gt;comodines&lt;/em&gt; . Las firmas de tipos parciales son firmas de tipo lo que los &lt;a href=&quot;#typed-holes&quot;&gt;huecos&lt;/a&gt; con tipo son para las expresiones. Durante la compilaci&amp;oacute;n, estos comodines o agujeros generar&amp;aacute;n un mensaje de error que describe qu&amp;eacute; tipo se infiri&amp;oacute; en la ubicaci&amp;oacute;n del agujero e informaci&amp;oacute;n sobre el origen de cualquier variable de tipo libre. GHC informa dichos mensajes de error de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="0ce90625442120850b40e55bce20778556220c5e" translate="yes" xml:space="preserve">
          <source>A pattern</source>
          <target state="translated">Un patrón</target>
        </trans-unit>
        <trans-unit id="433fae1ea61aa93f2a83f57ff1684a275dd099f0" translate="yes" xml:space="preserve">
          <source>A pattern match failed. The &lt;code&gt;String&lt;/code&gt; gives information about the source location of the pattern.</source>
          <target state="translated">Fall&amp;oacute; una coincidencia de patr&amp;oacute;n. La &lt;code&gt;String&lt;/code&gt; proporciona informaci&amp;oacute;n sobre la ubicaci&amp;oacute;n de origen del patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="252b18a2db7ed609ee5f049df36aa764455492be" translate="yes" xml:space="preserve">
          <source>A pattern quasiquoter &lt;em&gt;may&lt;/em&gt; generate binders that scope over the right-hand side of a definition because these binders are in scope lexically. For example, given a quasiquoter &lt;code&gt;haskell&lt;/code&gt; that parses Haskell, in the following code, the &lt;code&gt;y&lt;/code&gt; in the right-hand side of &lt;code&gt;f&lt;/code&gt; refers to the &lt;code&gt;y&lt;/code&gt; bound by the &lt;code&gt;haskell&lt;/code&gt; pattern quasiquoter, &lt;em&gt;not&lt;/em&gt; the top-level &lt;code&gt;y = 7&lt;/code&gt;.</source>
          <target state="translated">Un cuasicuador de patr&amp;oacute;n &lt;em&gt;puede&lt;/em&gt; generar aglutinantes que abarcan el lado derecho de una definici&amp;oacute;n porque estos aglutinantes tienen un alcance l&amp;eacute;xico. Por ejemplo, dado un haskell de &lt;code&gt;haskell&lt;/code&gt; que analiza Haskell, en el siguiente c&amp;oacute;digo, la &lt;code&gt;y&lt;/code&gt; en el lado derecho de &lt;code&gt;f&lt;/code&gt; se refiere al l&amp;iacute;mite de &lt;code&gt;y&lt;/code&gt; por el &lt;code&gt;haskell&lt;/code&gt; patr&amp;oacute;n de haskell, &lt;em&gt;no&lt;/em&gt; al nivel superior &lt;code&gt;y = 7&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ac55497c2a5f3f9d1f6ff0844f5381d5d90653d" translate="yes" xml:space="preserve">
          <source>A pattern synonym</source>
          <target state="translated">Un sinónimo de patrón</target>
        </trans-unit>
        <trans-unit id="b17af7c644158ae7e89b62cef1f1583e8c015c62" translate="yes" xml:space="preserve">
          <source>A pattern synonym declaration can be either unidirectional, bidirectional or explicitly bidirectional. The syntax for unidirectional pattern synonyms is:</source>
          <target state="translated">Una declaración de sinónimo patrón puede ser unidireccional,bidireccional o explícitamente bidireccional.La sintaxis de los sinónimos de patrón unidireccional es:</target>
        </trans-unit>
        <trans-unit id="55cb5ca64df4e9f9ca70699a5130d9563eece58c" translate="yes" xml:space="preserve">
          <source>A pattern synonym occurrence in a pattern is evaluated by first matching against the pattern synonym itself, and then on the argument patterns.</source>
          <target state="translated">La aparición de un sinónimo de patrón en un patrón se evalúa comparando primero con el sinónimo del patrón mismo,y luego con los patrones de argumento.</target>
        </trans-unit>
        <trans-unit id="6a294e72d5a00c5790ab20aeadfe0fb6770ada67" translate="yes" xml:space="preserve">
          <source>A pattern synonym's argument type.</source>
          <target state="translated">El tipo de argumento de un sinónimo de patrón.</target>
        </trans-unit>
        <trans-unit id="cc5e6ef416da30039d54dd764052a16e266e5fba" translate="yes" xml:space="preserve">
          <source>A pattern synonym's directionality.</source>
          <target state="translated">Un patrón sinónimo de direccionalidad.</target>
        </trans-unit>
        <trans-unit id="dbbd0987654018a69ab48de461e219d56cbd0973" translate="yes" xml:space="preserve">
          <source>A pattern synonym's type signature.</source>
          <target state="translated">Un patrón de sinónimo de firma de tipo.</target>
        </trans-unit>
        <trans-unit id="57cf5046220efabc22f8328901a49323d7f92001" translate="yes" xml:space="preserve">
          <source>A pattern synonym's type. Note that a pattern synonym's &lt;em&gt;fully&lt;/em&gt; specified type has a peculiar shape coming with two forall quantifiers and two constraint contexts. For example, consider the pattern synonym</source>
          <target state="translated">Tipo de sin&amp;oacute;nimo de patr&amp;oacute;n. Tenga en cuenta que el tipo &lt;em&gt;completamente&lt;/em&gt; especificado de un sin&amp;oacute;nimo de patr&amp;oacute;n tiene una forma peculiar que viene con dos cuantificadores para todos y dos contextos de restricci&amp;oacute;n. Por ejemplo, considere el sin&amp;oacute;nimo de patr&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="eb6f155dcdcf6384b306398b26156bf38f28d6e1" translate="yes" xml:space="preserve">
          <source>A pattern type signature (&lt;a href=&quot;#pattern-type-sigs&quot;&gt;Pattern type signatures&lt;/a&gt;)</source>
          <target state="translated">Una firma de tipo de patr&amp;oacute;n (firmas &lt;a href=&quot;#pattern-type-sigs&quot;&gt;de tipo de patr&amp;oacute;n&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a7c69d52227bddae63e60e9734e227c6257070e0" translate="yes" xml:space="preserve">
          <source>A pattern variable may optionally have a type signature. If the type of the pattern variable is polymorphic, it &lt;em&gt;must&lt;/em&gt; have a type signature. For example, here is the &lt;code&gt;foldr/build&lt;/code&gt; rule:</source>
          <target state="translated">Una variable de patr&amp;oacute;n puede tener opcionalmente una firma de tipo. Si el tipo de la variable de patr&amp;oacute;n es polim&amp;oacute;rfico, &lt;em&gt;debe&lt;/em&gt; tener una firma de tipo. Por ejemplo, aqu&amp;iacute; est&amp;aacute; la regla &lt;code&gt;foldr/build&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a9bf5dd0f5b938cd3b48a5e6e85a85c3767d1a0" translate="yes" xml:space="preserve">
          <source>A pattern with a bang at the outermost level is not allowed at the top level of a module.</source>
          <target state="translated">No se permite un patrón con una explosión en el nivel más exterior en el nivel superior de un módulo.</target>
        </trans-unit>
        <trans-unit id="a45544682b3f8a207a4592a867670905952dce9d" translate="yes" xml:space="preserve">
          <source>A periodic reporting of various statistics of spark evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9808c24500197f32f662437a4166807e09da1b17" translate="yes" xml:space="preserve">
          <source>A permutation phrase is a sequence of elements (possibly of different types) in which each element occurs exactly once and the order is irrelevant. Some of the permutable elements may be optional.</source>
          <target state="translated">Una frase de permutación es una secuencia de elementos (posiblemente de diferentes tipos)en la que cada elemento ocurre exactamente una vez y el orden es irrelevante.Algunos de los elementos permutables pueden ser opcionales.</target>
        </trans-unit>
        <trans-unit id="d61867d436a630172f4b894664bb8d6ce4e454da" translate="yes" xml:space="preserve">
          <source>A pinned byte array is one that the garbage collector is not allowed to move. Consequently, it has a stable address that can be safely requested with &lt;code&gt;byteArrayContents#&lt;/code&gt;. There are a handful of primitive functions in &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/GHC-Prim.html&quot;&gt;GHC.Prim&lt;/a&gt; used to enforce or check for pinnedness: &lt;code&gt;isByteArrayPinned#&lt;/code&gt;, &lt;code&gt;isMutableByteArrayPinned#&lt;/code&gt;, and &lt;code&gt;newPinnedByteArray#&lt;/code&gt;. A byte array can be pinned as a result of three possible causes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbcb4942ca58cf7831c96fb91a0838412cc4bba" translate="yes" xml:space="preserve">
          <source>A pinned byte array is one that the garbage collector is not allowed to move. Consequently, it has a stable address that can be safely requested with &lt;code&gt;byteArrayContents#&lt;/code&gt;. There are a handful of primitive functions in GHC.Prim &amp;lt;GHC-Prim.html&amp;gt; used to enforce or check for pinnedness: &lt;code&gt;isByteArrayPinned#&lt;/code&gt;, &lt;code&gt;isMutableByteArrayPinned#&lt;/code&gt;, and &lt;code&gt;newPinnedByteArray#&lt;/code&gt;. A byte array can be pinned as a result of three possible causes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d2f58da1fb581a9ce7c0820def592bde3a97f6" translate="yes" xml:space="preserve">
          <source>A plugin which declares itself impure using &lt;code&gt;ForceRecompile&lt;/code&gt; will always trigger a recompilation of the current module. &lt;code&gt;NoForceRecompile&lt;/code&gt; is used for &amp;ldquo;pure&amp;rdquo; plugins which don&amp;rsquo;t need to be rerun unless a module would ordinarily be recompiled. &lt;code&gt;MaybeRecompile&lt;/code&gt; computes a &lt;code&gt;Fingerprint&lt;/code&gt; and if this &lt;code&gt;Fingerprint&lt;/code&gt; is different to a previously computed &lt;code&gt;Fingerprint&lt;/code&gt; for the plugin, then we recompile the module.</source>
          <target state="translated">Un complemento que se declara impuro usando &lt;code&gt;ForceRecompile&lt;/code&gt; siempre activar&amp;aacute; una recompilaci&amp;oacute;n del m&amp;oacute;dulo actual. &lt;code&gt;NoForceRecompile&lt;/code&gt; se utiliza para complementos &quot;puros&quot; que no necesitan volver a ejecutarse a menos que normalmente se recompile un m&amp;oacute;dulo. &lt;code&gt;MaybeRecompile&lt;/code&gt; calcula una &lt;code&gt;Fingerprint&lt;/code&gt; y si esta &lt;code&gt;Fingerprint&lt;/code&gt; es diferente a una &lt;code&gt;Fingerprint&lt;/code&gt; calculada previamente para el complemento, volvemos a compilar el m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="a3bc90dc2dc45d7f4fd4afcd9ae1bd1af634697a" translate="yes" xml:space="preserve">
          <source>A plugin&amp;rsquo;s installation function (&lt;code&gt;install&lt;/code&gt; in the above example) takes a list of &lt;code&gt;CoreToDo&lt;/code&gt;s and returns a list of &lt;code&gt;CoreToDo&lt;/code&gt;. Before GHC begins compiling modules, it enumerates all the needed plugins you tell it to load, and runs all of their installation functions, initially on a list of passes that GHC specifies itself. After doing this for every plugin, the final list of passes is given to the optimizer, and are run by simply going over the list in order.</source>
          <target state="translated">La funci&amp;oacute;n de instalaci&amp;oacute;n de un complemento ( &lt;code&gt;install&lt;/code&gt; en el ejemplo anterior) toma una lista de &lt;code&gt;CoreToDo&lt;/code&gt; sy devuelve una lista de &lt;code&gt;CoreToDo&lt;/code&gt; . Antes de que GHC comience a compilar m&amp;oacute;dulos, enumera todos los complementos necesarios que le indica que cargue y ejecuta todas sus funciones de instalaci&amp;oacute;n, inicialmente en una lista de pases que GHC especifica. Despu&amp;eacute;s de hacer esto para cada complemento, la lista final de pases se entrega al optimizador y se ejecuta simplemente repasando la lista en orden.</target>
        </trans-unit>
        <trans-unit id="c3c0c15abdc47e8b410d77eeddeb4ff60204efc9" translate="yes" xml:space="preserve">
          <source>A pointer to a foreign function equivalent to &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:free&quot;&gt;free&lt;/a&gt;&lt;/code&gt;, which may be used as a finalizer (cf &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;) for storage allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:realloc&quot;&gt;realloc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:reallocBytes&quot;&gt;reallocBytes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un puntero a una funci&amp;oacute;n for&amp;aacute;nea equivalente a &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:free&quot;&gt;free&lt;/a&gt;&lt;/code&gt; , que puede usarse como finalizador (cf &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; ) para el almacenamiento asignado con &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:realloc&quot;&gt;realloc&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:reallocBytes&quot;&gt;reallocBytes&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed62f36de9a3053add8b5f383c46d4ea22035d53" translate="yes" xml:space="preserve">
          <source>A pointer, but &lt;em&gt;not&lt;/em&gt; to a Haskell value</source>
          <target state="translated">Un puntero, pero &lt;em&gt;no&lt;/em&gt; a un valor Haskell</target>
        </trans-unit>
        <trans-unit id="12c3c6eef2eab225b82c10e7756d7d1120735999" translate="yes" xml:space="preserve">
          <source>A positive initial counter value denotes availability of units &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; can acquire.</source>
          <target state="translated">Un valor de contador inicial positivo indica la disponibilidad de unidades que &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; puede adquirir.</target>
        </trans-unit>
        <trans-unit id="4607e3c8d43d975a9d5043b9fe5325adef419139" translate="yes" xml:space="preserve">
          <source>A possible reason for this is that &lt;code&gt;readLitChar&lt;/code&gt; accepts hex and octal escapes, so it seems inconsistent not to do so for integers too.</source>
          <target state="translated">Una posible raz&amp;oacute;n para esto es que &lt;code&gt;readLitChar&lt;/code&gt; acepta escapes hexadecimales y octales, por lo que parece inconsistente no hacerlo tambi&amp;eacute;n para enteros.</target>
        </trans-unit>
        <trans-unit id="ee0df3315cf15090b8170db19c00adae9d086669" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList&quot;&gt;liftReadList&lt;/a&gt;&lt;/code&gt; method. This is only needed for &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrecDefault&quot;&gt;liftReadListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList&quot;&gt;liftReadList&lt;/a&gt;&lt;/code&gt; . Esto solo es necesario para &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; instancias de &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; donde liftReadListPrec no est&amp;aacute; definido como &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrecDefault&quot;&gt;liftReadListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d38c3479f89f023338692e638f45fe5ac188bd2d" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList2&quot;&gt;liftReadList2&lt;/a&gt;&lt;/code&gt; method. This is only needed for &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read2&quot;&gt;Read2&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2Default&quot;&gt;liftReadListPrec2Default&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList2&quot;&gt;liftReadList2&lt;/a&gt;&lt;/code&gt; . Esto solo es necesario para &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read2&quot;&gt;Read2&lt;/a&gt;&lt;/code&gt; instancias de &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; donde liftReadListPrec2 no est&amp;aacute; definido como &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2Default&quot;&gt;liftReadListPrec2Default&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1d027bf72f3911128c132d8c54e0a8ef6c5c888" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec&quot;&gt;liftReadPrec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; , definido mediante &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec&quot;&gt;liftReadPrec&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d373fa8bb2d277c322dacc2f2dcc3f3d824b4e2" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec2&quot;&gt;liftReadPrec2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; , definido mediante &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec2&quot;&gt;liftReadPrec2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29364a8e8891d9c56243d372544806d4d546619b" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; method (GHC only). This is only needed for GHC, and even then only for &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; (solo GHC). Esto solo es necesario para GHC, e incluso entonces solo para instancias de &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; donde &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; definido como &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68ae1239307d70eba9e18971c894baa48ad11cf4" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (GHC only).</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; , definido mediante &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (solo GHC).</target>
        </trans-unit>
        <trans-unit id="f80e2bb9e234ed027f7e8ba6d593f983b80c8933" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; method (GHC only). This is only needed for GHC, and even then only for &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; (solo GHC). Esto solo es necesario para GHC, e incluso entonces solo para instancias de &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; donde &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; no est&amp;aacute; definido como &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f98f636cd56d17e711ba559f0f71c4bdebdffa1" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (GHC only).</source>
          <target state="translated">Una posible definici&amp;oacute;n de reemplazo para el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; , definido mediante &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (solo GHC).</target>
        </trans-unit>
        <trans-unit id="b157127674bef09a54a1bf4952fda41dd1808377" translate="yes" xml:space="preserve">
          <source>A postfix '&lt;code&gt;M&lt;/code&gt;' always stands for a function in the Kleisli category: The monad type constructor &lt;code&gt;m&lt;/code&gt; is added to function results (modulo currying) and nowhere else. So, for example,</source>
          <target state="translated">Un sufijo ' &lt;code&gt;M&lt;/code&gt; ' siempre representa una funci&amp;oacute;n en la categor&amp;iacute;a Kleisli: el constructor de tipo m&amp;oacute;nada &lt;code&gt;m&lt;/code&gt; se agrega a los resultados de la funci&amp;oacute;n (modulo de curado) y en ning&amp;uacute;n otro lugar. As&amp;iacute; por ejemplo,</target>
        </trans-unit>
        <trans-unit id="4f57aca0d9a4c899e484cd901e67bacaa13d70b9" translate="yes" xml:space="preserve">
          <source>A postfix '&lt;code&gt;_&lt;/code&gt;' changes the result type from &lt;code&gt;(m a)&lt;/code&gt; to &lt;code&gt;(m ())&lt;/code&gt;. Thus, for example:</source>
          <target state="translated">Un sufijo ' &lt;code&gt;_&lt;/code&gt; ' cambia el tipo de resultado de &lt;code&gt;(m a)&lt;/code&gt; a &lt;code&gt;(m ())&lt;/code&gt; . As&amp;iacute;, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="46921428c3bbaa58265d19bfda0ee3268636763a" translate="yes" xml:space="preserve">
          <source>A precise semantics</source>
          <target state="translated">Una semántica precisa</target>
        </trans-unit>
        <trans-unit id="47f994aa80408a0bd45b4587fcafe17e6fd888ec" translate="yes" xml:space="preserve">
          <source>A predicate &lt;code&gt;trim used allocated&lt;/code&gt; returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, if the buffer should be trimmed before it is returned.</source>
          <target state="translated">Se &lt;code&gt;trim used allocated&lt;/code&gt; predicado asignado que devuelve &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , si el b&amp;uacute;fer se debe recortar antes de devolverlo.</target>
        </trans-unit>
        <trans-unit id="d580afd63f73de0a796d71c734098f93fa407b93" translate="yes" xml:space="preserve">
          <source>A predicate &lt;code&gt;trim used allocated&lt;/code&gt; returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, if the buffer should be trimmed before it is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c817efef5f5e7b5e45c1fb0dd7b99d6342536f7" translate="yes" xml:space="preserve">
          <source>A predicate &lt;code&gt;trim used allocated&lt;/code&gt; returning &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, if the buffer should be trimmed before it is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7be90e7ccc0906e803e54dbfc057396ec04901" translate="yes" xml:space="preserve">
          <source>A prefix '&lt;code&gt;m&lt;/code&gt;' generalizes an existing function to a monadic form. Thus, for example:</source>
          <target state="translated">Un prefijo ' &lt;code&gt;m&lt;/code&gt; ' generaliza una funci&amp;oacute;n existente a una forma mon&amp;aacute;dica. As&amp;iacute;, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d70f07d0fd97e79392191dc0d1a1d9c0b6a7f1e2" translate="yes" xml:space="preserve">
          <source>A primitive C-style string, type &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7685a5ab3153d56bb49c042dcd22463fc1d995f8" translate="yes" xml:space="preserve">
          <source>A primitive C-style string, type &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ba2753b7a938dad018da0fd6997dc0b76bb953" translate="yes" xml:space="preserve">
          <source>A primitive C-style string, type Addr#</source>
          <target state="translated">Una cuerda primitiva de estilo C,tipo Addr#</target>
        </trans-unit>
        <trans-unit id="f28dde23b4ee72f0bc2a782151d6569a43780c6c" translate="yes" xml:space="preserve">
          <source>A priority search queue, with timeouts as priorities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d0a23e976121bc1cfab9f6f18718ab2b9d2383" translate="yes" xml:space="preserve">
          <source>A process in the process group</source>
          <target state="translated">Un proceso en el grupo de procesos</target>
        </trans-unit>
        <trans-unit id="e2978f6c6d0c2493478216f46bf15eb08160b4e7" translate="yes" xml:space="preserve">
          <source>A program that fails in any other way is treated as if it had called &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt;. A program that terminates successfully without calling &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; explicitly is treated as if it had called &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-exit#v:ExitSuccess&quot;&gt;ExitSuccess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un programa que falla de cualquier otra forma se trata como si hubiera llamado a &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt; . Un programa que termina con &amp;eacute;xito sin llamar a &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;citamente se trata como si hubiera llamado a &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-exit#v:ExitSuccess&quot;&gt;ExitSuccess&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="106e5d7fb17753020184a4433ee767b6d5411226" translate="yes" xml:space="preserve">
          <source>A programmer may use &lt;code&gt;forall&lt;/code&gt; in a type to introduce new quantified type variables. These variables may depend on each other, even in the same &lt;code&gt;forall&lt;/code&gt;. However, GHC requires that the dependency be inferrable from the body of the &lt;code&gt;forall&lt;/code&gt;. Here are some examples:</source>
          <target state="translated">Un programador puede usar &lt;code&gt;forall&lt;/code&gt; en un tipo para introducir nuevas variables de tipo cuantificadas. Estas variables pueden depender unos de otros, incluso en la misma &lt;code&gt;forall&lt;/code&gt; . Sin embargo, GHC requiere que la dependencia sea inferible del cuerpo del &lt;code&gt;forall&lt;/code&gt; . Aqu&amp;iacute; hay unos ejemplos:</target>
        </trans-unit>
        <trans-unit id="71ba773b3259e537cc66acd4ec6d24f2384a5425" translate="yes" xml:space="preserve">
          <source>A programmer-defined error value constructed using &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un valor de error definido por el programador construido usando &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7217616c7698f7547fd2c1e5c701e62f18577563" translate="yes" xml:space="preserve">
          <source>A pun on a qualified field name is expanded by stripping off the module qualifier. For example:</source>
          <target state="translated">Un juego de palabras en un nombre de campo calificado se amplía quitando el calificador del módulo.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c36208f7850763edf61643d27d80bde39732dac8" translate="yes" xml:space="preserve">
          <source>A qualified name &lt;code&gt;A.foo&lt;/code&gt;. GHC assumes that the main function is &lt;code&gt;A.foo&lt;/code&gt;.</source>
          <target state="translated">Un nombre calificado A. &lt;code&gt;A.foo&lt;/code&gt; . GHC asume que la funci&amp;oacute;n principal es &lt;code&gt;A.foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1f854f70933a723bf95a735c3aa4de5afabd5c6" translate="yes" xml:space="preserve">
          <source>A qualified name; dynamically bound</source>
          <target state="translated">Un nombre calificado;vinculado dinámicamente</target>
        </trans-unit>
        <trans-unit id="a8f9eb9db19a1818e7c75d1fe1ee9a6205220c54" translate="yes" xml:space="preserve">
          <source>A quantified type representation.</source>
          <target state="translated">Una representación de tipo cuantificado.</target>
        </trans-unit>
        <trans-unit id="e82bbf975220aa7ab5228dfdba9164c275fc91d4" translate="yes" xml:space="preserve">
          <source>A quasi-quotation can appear in a pattern, type, expression, or declaration context and is also written in Oxford brackets:</source>
          <target state="translated">Una cuasi-cita puede aparecer en un contexto de patrón,tipo,expresión o declaración y también se escribe entre paréntesis en Oxford:</target>
        </trans-unit>
        <trans-unit id="9598087296773252828f5341b4828654c30bd8a1" translate="yes" xml:space="preserve">
          <source>A quasi-quote has the form &lt;code&gt;[quoter| string |]&lt;/code&gt;.</source>
          <target state="translated">Una cuasi-cita tiene la forma &lt;code&gt;[quoter| string |]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1cb587055071e4fb0d1b0454a870959e6f9fa49" translate="yes" xml:space="preserve">
          <source>A quasi-quote is expanded by applying the appropriate parser to the string enclosed by the Oxford brackets. The context of the quasi-quote (expression, pattern, type, declaration) determines which of the parsers is called.</source>
          <target state="translated">Una cuasi-cita se amplía aplicando el analizador apropiado a la cuerda encerrada por los corchetes de Oxford.El contexto de la cuasi-cita (expresión,patrón,tipo,declaración)determina cuál de los analizadores se llama.</target>
        </trans-unit>
        <trans-unit id="cdcde5d2df86936b559e312ff74aff26f8e4d03f" translate="yes" xml:space="preserve">
          <source>A quasiquote may appear in place of</source>
          <target state="translated">Una cuasi cita puede aparecer en lugar de</target>
        </trans-unit>
        <trans-unit id="a001d4fd181336f68b683e872533d57d619d5b7e" translate="yes" xml:space="preserve">
          <source>A question that we often want to ask when debugging a program is &amp;ldquo;how did I get here?&amp;rdquo;. Traditional imperative debuggers usually provide some kind of stack-tracing feature that lets you see the stack of active function calls (sometimes called the &amp;ldquo;lexical call stack&amp;rdquo;), describing a path through the code to the current location. Unfortunately this is hard to provide in Haskell, because execution proceeds on a demand-driven basis, rather than a depth-first basis as in strict languages. The &amp;ldquo;stack&amp;ldquo; in GHC&amp;rsquo;s execution engine bears little resemblance to the lexical call stack. Ideally GHCi would maintain a separate lexical call stack in addition to the dynamic call stack, and in fact this is exactly what our profiling system does (&lt;a href=&quot;profiling#profiling&quot;&gt;Profiling&lt;/a&gt;), and what some other Haskell debuggers do. For the time being, however, GHCi doesn&amp;rsquo;t maintain a lexical call stack (there are some technical challenges to be overcome). Instead, we provide a way to backtrack from a breakpoint to previous evaluation steps: essentially this is like single-stepping backwards, and should in many cases provide enough information to answer the &amp;ldquo;how did I get here?&amp;rdquo; question.</source>
          <target state="translated">Una pregunta que a menudo queremos hacer al depurar un programa es &quot;&amp;iquest;c&amp;oacute;mo llegu&amp;eacute; aqu&amp;iacute;?&quot;. Los depuradores imperativos tradicionales suelen proporcionar alg&amp;uacute;n tipo de funci&amp;oacute;n de seguimiento de la pila que le permite ver la pila de llamadas a funciones activas (a veces llamadas &quot;pila de llamadas l&amp;eacute;xicas&quot;), describiendo una ruta a trav&amp;eacute;s del c&amp;oacute;digo a la ubicaci&amp;oacute;n actual. Desafortunadamente, esto es dif&amp;iacute;cil de proporcionar en Haskell, porque la ejecuci&amp;oacute;n se basa en la demanda, en lugar de hacerlo en profundidad como en lenguajes estrictos. La &quot;pila&quot; en el motor de ejecuci&amp;oacute;n de GHC tiene poca semejanza con la pila de llamadas l&amp;eacute;xicas. Idealmente, GHCi mantendr&amp;iacute;a una pila de llamadas l&amp;eacute;xica separada adem&amp;aacute;s de la pila de llamadas din&amp;aacute;micas y, de hecho, esto es exactamente lo que hace nuestro sistema de creaci&amp;oacute;n de &lt;a href=&quot;profiling#profiling&quot;&gt;perfiles&lt;/a&gt; (creaci&amp;oacute;n de perfiles) y lo que hacen otros depuradores de Haskell. Sin embargo, por el momento, GHCi no mantiene una pila de llamadas l&amp;eacute;xicas (hay algunos desaf&amp;iacute;os t&amp;eacute;cnicos que superar). En su lugar, proporcionamos una forma de retroceder desde un punto de interrupci&amp;oacute;n hasta los pasos de evaluaci&amp;oacute;n anteriores: esencialmente, esto es como retroceder un solo paso y, en muchos casos, deber&amp;iacute;a proporcionar suficiente informaci&amp;oacute;n para responder a la pregunta &quot;&amp;iquest;c&amp;oacute;mo llegu&amp;eacute; aqu&amp;iacute;?&quot; pregunta.</target>
        </trans-unit>
        <trans-unit id="189d1cf3fab3e51e460ff7ce2b8a93636027c0d7" translate="yes" xml:space="preserve">
          <source>A quoter is a value of type &lt;a href=&quot;../../libraries/template-haskell-2.17.0.0/language-haskell-th-quote#t:QuasiQuoter&quot;&gt;Language.Haskell.TH.Quote.QuasiQuoter&lt;/a&gt;, which is defined thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0242b7d03d75d9ad4b17787a60e3e615d37d16" translate="yes" xml:space="preserve">
          <source>A quoter is a value of type &lt;code&gt;Language.Haskell.TH.Quote.QuasiQuoter&lt;/code&gt;, which is defined thus:</source>
          <target state="translated">Un quoter es un valor de tipo &lt;code&gt;Language.Haskell.TH.Quote.QuasiQuoter&lt;/code&gt; , que se define as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a48ce4817f3e54a0532248a31d1f099d88b1351f" translate="yes" xml:space="preserve">
          <source>A range of bytes in a buffer represented by the pointer to the first byte of the range and the pointer to the first byte &lt;em&gt;after&lt;/em&gt; the range.</source>
          <target state="translated">Un rango de bytes en un b&amp;uacute;fer representado por el puntero al primer byte del rango y el puntero al primer byte &lt;em&gt;despu&amp;eacute;s&lt;/em&gt; del rango.</target>
        </trans-unit>
        <trans-unit id="b28c56da049e38013f1fcf4d02dcb6b1f0080a5c" translate="yes" xml:space="preserve">
          <source>A record GADT may have a restricted type for a selector function, which may lead to additional unification when solving &lt;code&gt;HasField&lt;/code&gt; constraints. For example,</source>
          <target state="translated">Un registro GADT puede tener un tipo restringido para una funci&amp;oacute;n de selector, lo que puede conducir a una unificaci&amp;oacute;n adicional al resolver restricciones de &lt;code&gt;HasField&lt;/code&gt; . Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="b338877827c7ed29adfee9e9d6b0b8e5a63641d8" translate="yes" xml:space="preserve">
          <source>A record selector was applied to a constructor without the appropriate field. This can only happen with a datatype with multiple constructors, where some fields are in one constructor but not another. The &lt;code&gt;String&lt;/code&gt; gives information about the source location of the record selector.</source>
          <target state="translated">Se aplic&amp;oacute; un selector de registros a un constructor sin el campo apropiado. Esto solo puede suceder con un tipo de datos con varios constructores, donde algunos campos est&amp;aacute;n en un constructor pero no en otro. La &lt;code&gt;String&lt;/code&gt; proporciona informaci&amp;oacute;n sobre la ubicaci&amp;oacute;n de origen del selector de registros.</target>
        </trans-unit>
        <trans-unit id="c21fec8a784a0df6d796742b5beccbbdfb0d37ed" translate="yes" xml:space="preserve">
          <source>A record update was performed on a constructor without the appropriate field. This can only happen with a datatype with multiple constructors, where some fields are in one constructor but not another. The &lt;code&gt;String&lt;/code&gt; gives information about the source location of the record update.</source>
          <target state="translated">Se realiz&amp;oacute; una actualizaci&amp;oacute;n de registro en un constructor sin el campo apropiado. Esto solo puede suceder con un tipo de datos con varios constructores, donde algunos campos est&amp;aacute;n en un constructor pero no en otro. La &lt;code&gt;String&lt;/code&gt; proporciona informaci&amp;oacute;n sobre la ubicaci&amp;oacute;n de origen de la actualizaci&amp;oacute;n del registro.</target>
        </trans-unit>
        <trans-unit id="92fb5684ae95209348bfee7f9aea2ce376b9a4d4" translate="yes" xml:space="preserve">
          <source>A redundant constraint within the type signature itself:</source>
          <target state="translated">Una restricción redundante dentro de la propia firma tipo:</target>
        </trans-unit>
        <trans-unit id="54a410c09496ec54abde3e9710dcb3fcce5da06f" translate="yes" xml:space="preserve">
          <source>A reference to a remote value. These are allocated and freed explicitly.</source>
          <target state="translated">Una referencia a un valor remoto.Estos son asignados y liberados explícitamente.</target>
        </trans-unit>
        <trans-unit id="fb2a2acd6cd218a5be6c4d95fa1ad4daf16624a7" translate="yes" xml:space="preserve">
          <source>A reference to a value of type &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Una referencia a un valor de tipo &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0361e89442d5407a746896c1f1424c0385608b9b" translate="yes" xml:space="preserve">
          <source>A rendering style. Allows us to specify constraints to choose among the many different rendering options.</source>
          <target state="translated">Un estilo de representación.Permite especificar las restricciones para elegir entre las diferentes opciones de renderización.</target>
        </trans-unit>
        <trans-unit id="8d7030617d8d95c457294c3464041259a9a37116" translate="yes" xml:space="preserve">
          <source>A result of the naturality law is a purity law for &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c6ef26d60ed2cc5371309971291f1535cedbfd" translate="yes" xml:space="preserve">
          <source>A result of the naturality law is a purity law for &lt;code&gt;&lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7715c19cf7faa5dc45883c88b4e480b883a9aa" translate="yes" xml:space="preserve">
          <source>A retainer is either the system stack, an unevaluated closure (thunk), or an explicitly mutable object.</source>
          <target state="translated">Un retenedor es la pila del sistema,un cierre no evaluado (thunk),o un objeto explícitamente mutable.</target>
        </trans-unit>
        <trans-unit id="c17ab32a3bf231aeb0c4cd50ac9f91c26d98d0f8" translate="yes" xml:space="preserve">
          <source>A rewrite rule in a module &lt;code&gt;M&lt;/code&gt; is an &lt;em&gt;orphan rule&lt;/em&gt; orphan rule if none of the variables, type constructors, or classes that are free in the left hand side of the rule are declared in &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">Una regla de reescritura en un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; es una &lt;em&gt;regla hu&amp;eacute;rfano&lt;/em&gt; regla hu&amp;eacute;rfano si ninguna de las variables, los constructores de tipos o clases que est&amp;aacute;n libres en el lado izquierdo de la regla se declaran en &lt;code&gt;M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7576507e849494c245f578b7b08c722c72b9e4b" translate="yes" xml:space="preserve">
          <source>A rich user interface for line input in command-line programs. Haskeline is Unicode-aware and runs both on POSIX-compatible systems and on Windows.</source>
          <target state="translated">Una rica interfaz de usuario para la entrada de línea en los programas de línea de comandos.Haskeline es compatible con Unicode y funciona tanto en sistemas POSIX como en Windows.</target>
        </trans-unit>
        <trans-unit id="5fe62b863adf6df34977b49f0095efaac4aba5e7" translate="yes" xml:space="preserve">
          <source>A right fold over the elements</source>
          <target state="translated">Un pliegue derecho sobre los elementos</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
