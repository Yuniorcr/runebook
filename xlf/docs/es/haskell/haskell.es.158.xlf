<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="d84ebfc6fbaa58496dbe73b158b5610e0f005524" translate="yes" xml:space="preserve">
          <source>Make sure that the either you switch off let-floating (&lt;code&gt;-fno-full-laziness&lt;/code&gt;), or that the call to &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; cannot float outside a lambda. For example, if you say: &lt;code&gt;
           f x = unsafePerformIO (newIORef [])
        &lt;/code&gt; you may get only one reference cell shared between all calls to &lt;code&gt;f&lt;/code&gt;. Better would be &lt;code&gt;
           f x = unsafePerformIO (newIORef [x])
        &lt;/code&gt; because now it can't float outside the lambda.</source>
          <target state="translated">Aseg&amp;uacute;rese de que desactiva let-floating ( &lt;code&gt;-fno-full-laziness&lt;/code&gt; ) o que la llamada a &lt;code&gt;&lt;a href=&quot;ghc-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no puede flotar fuera de un lambda. Por ejemplo, si dice: &lt;code&gt; f x = unsafePerformIO (newIORef []) &lt;/code&gt; , puede obtener solo una celda de referencia compartida entre todas las llamadas a &lt;code&gt;f&lt;/code&gt; . Mejor ser&amp;iacute;a &lt;code&gt; f x = unsafePerformIO (newIORef [x]) &lt;/code&gt; porque ahora no puede flotar fuera de la lambda.</target>
        </trans-unit>
        <trans-unit id="156fd7ebd73ad9d7d9ba6f146870be0be3263cef" translate="yes" xml:space="preserve">
          <source>Make sure that the either you switch off let-floating (&lt;code&gt;-fno-full-laziness&lt;/code&gt;), or that the call to &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; cannot float outside a lambda. For example, if you say: &lt;code&gt;
           f x = unsafePerformIO (newIORef [])
        &lt;/code&gt; you may get only one reference cell shared between all calls to &lt;code&gt;f&lt;/code&gt;. Better would be &lt;code&gt;
           f x = unsafePerformIO (newIORef [x])
        &lt;/code&gt; because now it can't float outside the lambda.</source>
          <target state="translated">Aseg&amp;uacute;rese de que desactiva let-floating ( &lt;code&gt;-fno-full-laziness&lt;/code&gt; ) o que la llamada a &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; no puede flotar fuera de un lambda. Por ejemplo, si dice: &lt;code&gt; f x = unsafePerformIO (newIORef []) &lt;/code&gt; , puede obtener solo una celda de referencia compartida entre todas las llamadas a &lt;code&gt;f&lt;/code&gt; . Mejor ser&amp;iacute;a &lt;code&gt; f x = unsafePerformIO (newIORef [x]) &lt;/code&gt; porque ahora no puede flotar fuera de la lambda.</target>
        </trans-unit>
        <trans-unit id="4240c3ab8260bb583d13050ed2064bbaae7bc43b" translate="yes" xml:space="preserve">
          <source>Make the interface loader be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el cargador de interfaz sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="4358699704291b8174b75e1e492414b400dba246" translate="yes" xml:space="preserve">
          <source>Make the pattern match exhaustiveness checker be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el verificador exhaustivo de coincidencias de patrones sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="d42a1e2a4e6f039639430d0f8ec96b5efe794a51" translate="yes" xml:space="preserve">
          <source>Make the renamer be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el renombrador sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="8cd12a9927ea510906e14322831e59cfe0a4baca" translate="yes" xml:space="preserve">
          <source>Make the type checker be &lt;em&gt;real&lt;/em&gt; chatty about what it is up to.</source>
          <target state="translated">Haga que el verificador de tipos sea &lt;em&gt;realmente&lt;/em&gt; hablador sobre lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="15d9abd622590033f2c411d33953dd776c5be50c" translate="yes" xml:space="preserve">
          <source>Makes a &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; for an arbitrary object. The object passed as the first argument is not evaluated by &lt;code&gt;&lt;a href=&quot;ghc-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Hace un &lt;code&gt;&lt;a href=&quot;ghc-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; para un objeto arbitrario. El objeto pasado como primer argumento no es evaluado por &lt;code&gt;&lt;a href=&quot;ghc-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c12968a0552ecdcf1b9de9b4f5c5bede7e5bbb53" translate="yes" xml:space="preserve">
          <source>Makes a &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; for an arbitrary object. The object passed as the first argument is not evaluated by &lt;code&gt;&lt;a href=&quot;system-mem-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Hace un &lt;code&gt;&lt;a href=&quot;system-mem-stablename#t:StableName&quot;&gt;StableName&lt;/a&gt;&lt;/code&gt; para un objeto arbitrario. El objeto pasado como primer argumento no es evaluado por &lt;code&gt;&lt;a href=&quot;system-mem-stablename#v:makeStableName&quot;&gt;makeStableName&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa32c2b4fd707872dac37cc6dbc8a7e855f28d02" translate="yes" xml:space="preserve">
          <source>Makes a binary Handle. This is for historical reasons; it should probably be a text Handle with the default encoding and newline translation instead.</source>
          <target state="translated">Hace una manija binaria.Esto es por razones históricas;probablemente debería ser un Handle de texto con la codificación por defecto y la traducción de la nueva línea en su lugar.</target>
        </trans-unit>
        <trans-unit id="d4e61217ddb45f4a69f77fed47cefb695ba63354" translate="yes" xml:space="preserve">
          <source>Makes a constructor for &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Hace un constructor para &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="675f8bacbe562ad639f450df630ba3e1d4142613" translate="yes" xml:space="preserve">
          <source>Makes a pointer to a field struct. It will have the type &lt;code&gt;Ptr a -&amp;gt; Ptr b&lt;/code&gt;.</source>
          <target state="translated">Hace un puntero a una estructura de campo. Tendr&amp;aacute; el tipo &lt;code&gt;Ptr a -&amp;gt; Ptr b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15d722c20f3a7b347acb5b13726b5fa9b1a3a525" translate="yes" xml:space="preserve">
          <source>Makes a specific warning into a fatal error. The warning will be enabled if it hasn&amp;rsquo;t been enabled yet. Can be reversed with &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Convierte una advertencia espec&amp;iacute;fica en un error fatal. La advertencia se habilitar&amp;aacute; si a&amp;uacute;n no se ha habilitado. Puede invertirse con &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b11cc1ed06b4ae510e6c368934b3332b8443ad9c" translate="yes" xml:space="preserve">
          <source>Makes any warning into a fatal error. Useful so that you don&amp;rsquo;t miss warnings when doing batch compilation. To reverse &lt;code&gt;-Werror&lt;/code&gt; and stop treating any warnings as errors use &lt;code&gt;-Wwarn&lt;/code&gt;, or use &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt; to stop treating specific warnings as errors.</source>
          <target state="translated">Convierte cualquier advertencia en un error fatal. &amp;Uacute;til para que no se pierda las advertencias al realizar la compilaci&amp;oacute;n por lotes. Para revertir &lt;code&gt;-Werror&lt;/code&gt; y dejar de tratar las advertencias como errores, use &lt;code&gt;-Wwarn&lt;/code&gt; , o use &lt;code&gt;-Wwarn=&amp;lt;wflag&amp;gt;&lt;/code&gt; para dejar de tratar advertencias espec&amp;iacute;ficas como errores.</target>
        </trans-unit>
        <trans-unit id="bbf1ed151ae759b693edba02d868a0ae08a8295e" translate="yes" xml:space="preserve">
          <source>Makes the second handle a duplicate of the first handle. The second handle will be closed first, if it is not already.</source>
          <target state="translated">Hace que el segundo mango sea un duplicado del primero.El segundo mango se cerrará primero,si no lo está ya.</target>
        </trans-unit>
        <trans-unit id="610ca9a4f461051b57571e94ee46024ad1945482" translate="yes" xml:space="preserve">
          <source>Making functors whose elements are notionally in the reverse order from the original functor.</source>
          <target state="translated">Haciendo functores cuyos elementos están teóricamente en el orden inverso al del functor original.</target>
        </trans-unit>
        <trans-unit id="de10c11c39a04c2dd93935591757ad821f0de619" translate="yes" xml:space="preserve">
          <source>Making functors with an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instance that performs actions in the reverse order.</source>
          <target state="translated">Haciendo functores con una instancia &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; que realiza acciones en orden inverso.</target>
        </trans-unit>
        <trans-unit id="289b3ce3f004eadb698cbe23952c8692f75647d6" translate="yes" xml:space="preserve">
          <source>Making functors with an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instance that performs actions in the reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316f89b1fd653898886f6125de784c38a5ec08fb" translate="yes" xml:space="preserve">
          <source>Making functors with an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instance that performs actions in the reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155fd1571bb064a261bef3cb9235ad72ee317621" translate="yes" xml:space="preserve">
          <source>Malloc some data and return a &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:RemotePtr&quot;&gt;RemotePtr&lt;/a&gt;&lt;/code&gt; to it</source>
          <target state="translated">Malloc algunos datos y devolver un &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:RemotePtr&quot;&gt;RemotePtr&lt;/a&gt;&lt;/code&gt; a ella</target>
        </trans-unit>
        <trans-unit id="357e8ecf448ec27f6c58902a75153131236e9618" translate="yes" xml:space="preserve">
          <source>Manage separate memory pools for each node.</source>
          <target state="translated">Administre los grupos de memoria separados para cada nodo.</target>
        </trans-unit>
        <trans-unit id="27a837f8eed8146ea6300d174b2ba753bef518d3" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt;.</source>
          <target state="translated">Manipular la &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; utilizando s &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operaciones. Todos los caracteres se truncar&amp;aacute;n a 8 bits. Es de esperar que estas funciones se ejecutar&amp;aacute;n a velocidades id&amp;eacute;nticas a sus &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalentes en &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8d02698e3a7db40c93071ad0130d603170bdbf3" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b134cb33755b44d8cb28b21abf1877659563685" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6f1aebfb4c2d76356eff64760ef8d083e1ea9b" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;em&gt;lazy&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#v:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring-lazy&quot;&gt;Data.ByteString.Lazy&lt;/a&gt;.</source>
          <target state="translated">Manipular &lt;em&gt;perezoso &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; utilizando s &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operaciones. Todos los caracteres se truncar&amp;aacute;n a 8 bits. Es de esperar que estas funciones se ejecutar&amp;aacute;n a velocidades id&amp;eacute;nticas a sus &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#v:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalentes en &lt;a href=&quot;data-bytestring-lazy&quot;&gt;Data.ByteString.Lazy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0938573170c5ad64ab547628da8f4334a36723ce" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;em&gt;lazy&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#v:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring-lazy&quot;&gt;Data.ByteString.Lazy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847ea03503ee75bf6cb87556d6d49608481050a3" translate="yes" xml:space="preserve">
          <source>Manipulate &lt;em&gt;lazy&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; operations. All Chars will be truncated to 8 bits. It can be expected that these functions will run at identical speeds to their &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#v:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; equivalents in &lt;a href=&quot;data-bytestring-lazy&quot;&gt;Data.ByteString.Lazy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b2945c3b95e9ba030912e565f7997d2afceb6a" translate="yes" xml:space="preserve">
          <source>Many codecs are not stateful, and in these case the state can be represented as &lt;code&gt;()&lt;/code&gt;. Other codecs maintain a state. For example, UTF-16 recognises a BOM (byte-order-mark) character at the beginning of the input, and remembers thereafter whether to use big-endian or little-endian mode. In this case, the state of the codec would include two pieces of information: whether we are at the beginning of the stream (the BOM only occurs at the beginning), and if not, whether to use the big or little-endian encoding.</source>
          <target state="translated">Muchos c&amp;oacute;decs no tienen estado y, en estos casos, el estado se puede representar como &lt;code&gt;()&lt;/code&gt; . Otros c&amp;oacute;decs mantienen un estado. Por ejemplo, UTF-16 reconoce un car&amp;aacute;cter de BOM (marca de orden de bytes) al principio de la entrada y, a partir de entonces, recuerda si se debe utilizar el modo big-endian o little-endian. En este caso, el estado del c&amp;oacute;dec incluir&amp;iacute;a dos piezas de informaci&amp;oacute;n: si estamos al principio de la secuencia (la lista de materiales solo aparece al principio) y, si no, si debemos usar la codificaci&amp;oacute;n big o little-endian.</target>
        </trans-unit>
        <trans-unit id="24d0ab19e4e99147773dbcbe9263cdf0c945a575" translate="yes" xml:space="preserve">
          <source>Many functions in this module have the same names as functions in the &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; or in &lt;a href=&quot;../base-4.13.0.0/data-list&quot;&gt;Data.List&lt;/a&gt;. In almost all cases, these functions behave analogously. For example, &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a sequence in exactly the same way that &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.&lt;a href=&quot;../base-4.13.0.0/prelude#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a list. The only major exception is the &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; function, which is based on the function by that name in &lt;a href=&quot;data-intmap&quot;&gt;Data.IntMap&lt;/a&gt; rather than the one in &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo tienen los mismos nombres que las funciones de &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; o &lt;a href=&quot;../base-4.13.0.0/data-list&quot;&gt;Data.List&lt;/a&gt; . En casi todos los casos, estas funciones se comportan de forma an&amp;aacute;loga. Por ejemplo, &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filtra una secuencia exactamente de la misma forma que &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.&lt;a href=&quot;../base-4.13.0.0/prelude#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filtra una lista. La &amp;uacute;nica excepci&amp;oacute;n importante es la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; , que se basa en la funci&amp;oacute;n con ese nombre en &lt;a href=&quot;data-intmap&quot;&gt;Data.IntMap&lt;/a&gt; en lugar de la de &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c62b5fa473677017f2721ca5795d98e992c22e65" translate="yes" xml:space="preserve">
          <source>Many functions in this module have the same names as functions in the &lt;a href=&quot;../base-4.14.1.0/prelude&quot;&gt;Prelude&lt;/a&gt; or in &lt;a href=&quot;../base-4.14.1.0/data-list&quot;&gt;Data.List&lt;/a&gt;. In almost all cases, these functions behave analogously. For example, &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a sequence in exactly the same way that &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude&quot;&gt;Prelude&lt;/a&gt;.&lt;a href=&quot;../base-4.14.1.0/prelude#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a list. The only major exception is the &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; function, which is based on the function by that name in &lt;a href=&quot;data-intmap&quot;&gt;Data.IntMap&lt;/a&gt; rather than the one in &lt;a href=&quot;../base-4.14.1.0/prelude&quot;&gt;Prelude&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ed30cfd1996dd6a729e9c45a8bc70a6cf0b6f3" translate="yes" xml:space="preserve">
          <source>Many functions in this module have the same names as functions in the &lt;a href=&quot;../base-4.15.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; or in &lt;a href=&quot;../base-4.15.0.0/data-list&quot;&gt;Data.List&lt;/a&gt;. In almost all cases, these functions behave analogously. For example, &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a sequence in exactly the same way that &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.&lt;a href=&quot;../base-4.15.0.0/prelude#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; filters a list. The only major exception is the &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; function, which is based on the function by that name in &lt;a href=&quot;data-intmap&quot;&gt;Data.IntMap&lt;/a&gt; rather than the one in &lt;a href=&quot;../base-4.15.0.0/prelude&quot;&gt;Prelude&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f58e0bdebbef9653cf1bc7b5100f112ff0653f" translate="yes" xml:space="preserve">
          <source>Many instances of &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--124--62-&quot;&gt;&amp;lt;|&amp;gt;&lt;/a&gt;&lt;/code&gt; (e.g. the &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; instance) are conditionally lazy, and use or don't use their second argument depending on the value of the first. These are used with the folds below, which terminate as early as possible, but otherwise generally keep going. Some instances (e.g. for List) are always strict, but the result is lazy in the tail of the output, so that &lt;code&gt;&lt;a href=&quot;data-foldable#v:asum&quot;&gt;asum&lt;/a&gt;&lt;/code&gt; for a list of lists is in fact corecursive. These folds are defined in terms of &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54ffbaf5c6091b870718ed3779391643593140a" translate="yes" xml:space="preserve">
          <source>Many operations have a worst-case complexity of O(min(n,W)). This means that the operation can become linear in the number of elements with a maximum of &lt;em&gt;W&lt;/em&gt; -- the number of bits in an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 or 64).</source>
          <target state="translated">Muchas operaciones tienen una complejidad en el peor de los casos de O (min (n, W)). Esto significa que la operaci&amp;oacute;n puede volverse lineal en el n&amp;uacute;mero de elementos con un m&amp;aacute;ximo de &lt;em&gt;W&lt;/em&gt; , el n&amp;uacute;mero de bits en un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 o 64).</target>
        </trans-unit>
        <trans-unit id="98a01da62d47f087f540e76f8d5b26b5e49b62ce" translate="yes" xml:space="preserve">
          <source>Many operations have a worst-case complexity of O(min(n,W)). This means that the operation can become linear in the number of elements with a maximum of &lt;em&gt;W&lt;/em&gt; -- the number of bits in an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 or 64).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acf6964d94c05eea3598cac6c4c82a9ac869d16" translate="yes" xml:space="preserve">
          <source>Many operations have a worst-case complexity of O(min(n,W)). This means that the operation can become linear in the number of elements with a maximum of &lt;em&gt;W&lt;/em&gt; -- the number of bits in an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 or 64).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="9eaadd708e5d269baf72848cf514c6218e594037" translate="yes" xml:space="preserve">
          <source>Map &lt;code&gt;'\r\n'&lt;/code&gt; into &lt;code&gt;'\n'&lt;/code&gt; on input, and &lt;code&gt;'\n'&lt;/code&gt; to the native newline representation on output. This mode can be used on any platform, and works with text files using any newline convention. The downside is that &lt;code&gt;readFile &amp;gt;&amp;gt;= writeFile&lt;/code&gt; might yield a different file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7b80f10f3a81cda5d3d90fed79ebb948d0265b" translate="yes" xml:space="preserve">
          <source>Map &lt;code&gt;'\r\n'&lt;/code&gt; into &lt;code&gt;'\n'&lt;/code&gt; on input, and &lt;code&gt;'\n'&lt;/code&gt; to the native newline represetnation on output. This mode can be used on any platform, and works with text files using any newline convention. The downside is that &lt;code&gt;readFile &amp;gt;&amp;gt;= writeFile&lt;/code&gt; might yield a different file.</source>
          <target state="translated">Asigne &lt;code&gt;'\r\n'&lt;/code&gt; a &lt;code&gt;'\n'&lt;/code&gt; en la entrada y &lt;code&gt;'\n'&lt;/code&gt; a la representaci&amp;oacute;n nativa de nueva l&amp;iacute;nea en la salida. Este modo se puede utilizar en cualquier plataforma y funciona con archivos de texto utilizando cualquier convenci&amp;oacute;n de nueva l&amp;iacute;nea. La desventaja es que &lt;code&gt;readFile &amp;gt;&amp;gt;= writeFile&lt;/code&gt; puede producir un archivo diferente.</target>
        </trans-unit>
        <trans-unit id="6d55454f009aa8f95f75c772db0fb5ae0e9a9272" translate="yes" xml:space="preserve">
          <source>Map &lt;code&gt;m1&lt;/code&gt;</source>
          <target state="translated">Mapa &lt;code&gt;m1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d73f39524fe5ef1af56ec8e22806ecc515086be" translate="yes" xml:space="preserve">
          <source>Map &lt;code&gt;m2&lt;/code&gt;</source>
          <target state="translated">Mapa &lt;code&gt;m2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9983700cca6f292aa903742f89b52d541c8d933e" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;-safe value.</source>
          <target state="translated">Asignar una &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; a un &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; valor de la caja fuerte.</target>
        </trans-unit>
        <trans-unit id="18e38d5e5d89b044de0e37bb9b26db6369ce574d" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;-safe value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e654d2c2aeead91ee951837f20bb89e6b191fd36" translate="yes" xml:space="preserve">
          <source>Map a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;-safe value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0766fa419be24fb2dc55e7497743d52826668e62" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="15035b59f86fdfce06c5503b47c04b11e811e80d" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="b46e7ebb5140a1447b3c89113a3d9ae22bb0b79b" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="6903ae5c580a3f2ab80be5d8534af3c46567f965" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and concatenate the results</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre un &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; y concatenar los resultados</target>
        </trans-unit>
        <trans-unit id="9f9558286be8174c824362eb946ace711872dbf8" translate="yes" xml:space="preserve">
          <source>Map a function over a &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; stream.</source>
          <target state="translated">Asignar una funci&amp;oacute;n sobre una secuencia no &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21fd99a4595253dffd079844b719d83735a7905f" translate="yes" xml:space="preserve">
          <source>Map a function over a list and concatenate the results.</source>
          <target state="translated">Mapea una función sobre una lista y concatena los resultados.</target>
        </trans-unit>
        <trans-unit id="9800e72be66dc6c45d2ad289e20ef1a9a51d98ad" translate="yes" xml:space="preserve">
          <source>Map a function over a stream that results in a stream and concatenate the results.</source>
          <target state="translated">Mapear una función sobre una corriente que resulta en una corriente y concatenar los resultados.</target>
        </trans-unit>
        <trans-unit id="ad689681c3a3649d48f9aaad672101632605a134" translate="yes" xml:space="preserve">
          <source>Map a function over all the elements of a container and concatenate the resulting lists.</source>
          <target state="translated">Mapear una función sobre todos los elementos de un contenedor y concatenar las listas resultantes.</target>
        </trans-unit>
        <trans-unit id="552e1bebb738ef9f96de04d70a982bb350a641c3" translate="yes" xml:space="preserve">
          <source>Map a function returning a list over a list and concatenate the results. &lt;code&gt;&lt;a href=&quot;ghc-list#v:concatMap&quot;&gt;concatMap&lt;/a&gt;&lt;/code&gt; can be seen as the composition of &lt;code&gt;&lt;a href=&quot;ghc-list#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-list#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fff69e6935c5ce977d35f21f04166c5be20d3c" translate="yes" xml:space="preserve">
          <source>Map a function returning a list over a list and concatenate the results. &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:concatMap&quot;&gt;concatMap&lt;/a&gt;&lt;/code&gt; can be seen as the composition of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8247db8adfeefa619b1655afff9beae6787d09" translate="yes" xml:space="preserve">
          <source>Map a user interaction by modifying the base monad computation.</source>
          <target state="translated">Mapea la interacción del usuario modificando el cálculo de la mónada base.</target>
        </trans-unit>
        <trans-unit id="7edbce9966aa6d05b4981154c3d88123653a0c5d" translate="yes" xml:space="preserve">
          <source>Map between &lt;code&gt;&lt;a href=&quot;control-monad-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; computations.</source>
          <target state="translated">Mapa entre c&amp;aacute;lculos &lt;code&gt;&lt;a href=&quot;control-monad-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="712af23920428aa8ce829c6c9a926052d19c882a" translate="yes" xml:space="preserve">
          <source>Map between &lt;code&gt;&lt;a href=&quot;control-monad-trans-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; computations.</source>
          <target state="translated">Mapa entre c&amp;aacute;lculos &lt;code&gt;&lt;a href=&quot;control-monad-trans-list#t:ListT&quot;&gt;ListT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45e2cd283ebb4c611280d82cee74660fbe85bf94" translate="yes" xml:space="preserve">
          <source>Map both the return value and final state of a computation using the given function.</source>
          <target state="translated">Mapea tanto el valor de retorno como el estado final de un cálculo usando la función dada.</target>
        </trans-unit>
        <trans-unit id="4273e77ff1728ba48d1f840696e743d1da1ee755" translate="yes" xml:space="preserve">
          <source>Map both the return value and output of a computation using the given function.</source>
          <target state="translated">Mapea tanto el valor de retorno como la salida de un cálculo usando la función dada.</target>
        </trans-unit>
        <trans-unit id="803e1322fde156db8cc3128774fd2f8d4c99abec" translate="yes" xml:space="preserve">
          <source>Map capabilities to NUMA nodes. Capability C is mapped to NUMA node C mod N.</source>
          <target state="translated">Capacidades de mapeo a los nodos NUMA.La capacidad C está mapeada al nodo NUMA C mod N.</target>
        </trans-unit>
        <trans-unit id="21de922b618d81f2e317aafc9cbebc99176766bc" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f _ y z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f _ y z&lt;/code&gt; contravariable sobre un WhenMatched f _ yz .</target>
        </trans-unit>
        <trans-unit id="aa119e405295642a5bcf3b77b05b9cefc544c124" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x _ z&lt;/code&gt;.</source>
          <target state="translated">Asignar de forma contravariable sobre un &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x _ z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7245e811517b83cae4b9adf19d8a5924072530a7" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f _ x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f _ x&lt;/code&gt; contravariable sobre un WhenMissing f _ x .</target>
        </trans-unit>
        <trans-unit id="09e23d7bb6cd983f23a248d179ee216a8f59e394" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k _ y z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k _ y z&lt;/code&gt; contravariable sobre un WhenMatched fk _ yz .</target>
        </trans-unit>
        <trans-unit id="2569c1d7ccbe6013b4e6c78fb8e786a9a6095e76" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x _ z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x _ z&lt;/code&gt; contravariable sobre un WhenMatched fkx _ z .</target>
        </trans-unit>
        <trans-unit id="a14103f7c1f26a2fcbb71bbe285a99bdcde54ff7" translate="yes" xml:space="preserve">
          <source>Map contravariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k _ x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k _ x&lt;/code&gt; contravariable sobre un WhenMissing fk _ x .</target>
        </trans-unit>
        <trans-unit id="a8eb552837e87415b9d4df127dcd174fef924114" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y&lt;/code&gt;.</source>
          <target state="translated">Asignar covariantemente sobre un &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f x y&lt;/code&gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46bcbb877a60019cf521e9ab67aa98b003657bfd" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f x&lt;/code&gt;.</source>
          <target state="translated">Asignar covariantemente sobre un &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f x&lt;/code&gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9d6ab9d11a41a76d9162b3143fae97f6b16f455" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt; covariantemente sobre un fkxy WhenMatched .</target>
        </trans-unit>
        <trans-unit id="3f706796547b811fccb9bd7e5484d305853862eb" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt; covariantemente sobre un fkx WhenMissing .</target>
        </trans-unit>
        <trans-unit id="80246f23eba01c63a2b57d2f1b0b002711c39d9f" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt; covariantemente sobre un fkxy WhenMatched .</target>
        </trans-unit>
        <trans-unit id="a5cd585d64a0c1fc4c937dd0ee8ee4b052b09370" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt; covariantemente sobre un fkx WhenMissing .</target>
        </trans-unit>
        <trans-unit id="ce99df6d5a6c7da2f980fb998d55fe0e027d1fd2" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt; f k x y&lt;/code&gt; covariantemente sobre un fkxy WhenMatched .</target>
        </trans-unit>
        <trans-unit id="2de75aa8ae3777dc3c106e78b70228d497cabfb4" translate="yes" xml:space="preserve">
          <source>Map covariantly over a &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k x&lt;/code&gt; covariantemente sobre un fkx WhenMissing .</target>
        </trans-unit>
        <trans-unit id="1414775fb27f647a11edd9afbabc9f1f96d002c5" translate="yes" xml:space="preserve">
          <source>Map covariantly over the first argument.</source>
          <target state="translated">Traza un mapa covariable sobre el primer argumento.</target>
        </trans-unit>
        <trans-unit id="d189acaf26502066081e31e150c1693816dae853" translate="yes" xml:space="preserve">
          <source>Map covariantly over the second argument.</source>
          <target state="translated">Traza un mapa covariable sobre el segundo argumento.</target>
        </trans-unit>
        <trans-unit id="66f098667a15e2db24bb8373340e33eb8b6f8853" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to a monadic action, evaluate these actions from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b66d8ea2cb272c74911fcfbdc7cf4ca77953fb" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to a monadic action, evaluate these actions from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n mon&amp;aacute;dica, eval&amp;uacute;e estas acciones de izquierda a derecha y recopile los resultados. Para una versi&amp;oacute;n que ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9faa2d5ff3705c067b9b5226876c908059a5fa59" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to a monadic action, evaluate these actions from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;prelude#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dfb7e92c38e4214d51e2b9595047ff1b8f9b31" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to a monadic action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n mon&amp;aacute;dica, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para una versi&amp;oacute;n que no ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapM&quot;&gt;mapM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbfeb99bf3039f3b9bd94716be1697f7c672a217" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e288a8969f8edd9a984979987138d0017375a217" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29efd3765dfabc72142232cb82d864034ee72729" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and collect the results. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n, eval&amp;uacute;e estas acciones de izquierda a derecha y recopile los resultados. Para una versi&amp;oacute;n que ignora los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d22dd22b104dd621f77d9d5650ccd532318e02da" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para obtener una versi&amp;oacute;n que no ignora los resultados, consulte el &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43e6de6decbbed7c2a5b1c6751631f378ba334b2" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4417d32b4f323c831d7b4ced61e67f600e01b3fb" translate="yes" xml:space="preserve">
          <source>Map each element of a structure to an action, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Asigne cada elemento de una estructura a una acci&amp;oacute;n, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para obtener una versi&amp;oacute;n que no ignora los resultados, consulte el &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c124d6dfa5bddefa553c4516b6211d2cf0661762" translate="yes" xml:space="preserve">
          <source>Map each element of a structure using one of two actions, evaluate these actions from left to right, and ignore the results. For a version that doesn't ignore the results, see &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Mapee cada elemento de una estructura usando una de dos acciones, eval&amp;uacute;e estas acciones de izquierda a derecha e ignore los resultados. Para obtener una versi&amp;oacute;n que no ignore los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="539eacbc27d41b07bf8575009d83f8bccfbf1214" translate="yes" xml:space="preserve">
          <source>Map each element of the structure into a monoid, and combine the results with &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;. This fold is right-associative and lazy in the accumulator. For strict left-associative folds consider &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;` instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa8b74f971e12062a8ab201e009a282f51b7016" translate="yes" xml:space="preserve">
          <source>Map each element of the structure into a monoid, and combine the results with &lt;code&gt;(&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;. This fold is right-associative and lazy in the accumulator. For strict left-associative folds consider &lt;code&gt;&lt;a href=&quot;prelude#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;` instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e14cd9471b9b06b4f5f3069e4de360f95948a3" translate="yes" xml:space="preserve">
          <source>Map each element of the structure to a monoid, and combine the results.</source>
          <target state="translated">Mapea cada elemento de la estructura a un monoide,y combina los resultados.</target>
        </trans-unit>
        <trans-unit id="cb44df1644994b6e9bedbd4295f2ba757e01b134" translate="yes" xml:space="preserve">
          <source>Map leap-second values to the start of the following second. The resulting &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; will always be in the range 0 to 1E9-1.</source>
          <target state="translated">Asigne los valores del segundo intercalar al inicio del segundo siguiente. Los &lt;code&gt;&lt;a href=&quot;data-time-clock-system#v:systemNanoseconds&quot;&gt;systemNanoseconds&lt;/a&gt;&lt;/code&gt; resultante siempre estar&amp;aacute;n en el rango de 0 a 1E9-1.</target>
        </trans-unit>
        <trans-unit id="f67b9485e617340983ccecc0a0a8ab8a5398d3f1" translate="yes" xml:space="preserve">
          <source>Map over both arguments at the same time.</source>
          <target state="translated">Mapea los dos argumentos al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="820bfb2b876cadb7ba21577ea1191e745febb6e2" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="042a8e608fdbf1be1815be0ba68d9d8129c0d45e" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="7446b734119c67e4a15eea3901f43f333f1d45b7" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="f20f45f5901d5da69a8a8bd25afdefdf94fb0463" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map, optionally removing some. This is the most powerful &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; tactic, but others are usually more efficient.</source>
          <target state="translated">Mapa sobre las entradas cuyas claves faltan en el otro mapa, eliminando opcionalmente algunas. Esta es la t&amp;aacute;ctica &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt;&lt;/code&gt; m&amp;aacute;s poderosa , pero otras suelen ser m&amp;aacute;s eficientes.</target>
        </trans-unit>
        <trans-unit id="27b9407877fd74e4c60e5bb3f11429e5468cc32d" translate="yes" xml:space="preserve">
          <source>Map over the entries whose keys are missing from the other map.</source>
          <target state="translated">Mapea las entradas a las que les faltan las claves del otro mapa.</target>
        </trans-unit>
        <trans-unit id="4972444ee92a42eeb10783a738cee55cc20ccb73" translate="yes" xml:space="preserve">
          <source>Map the inner computation using the given function.</source>
          <target state="translated">Mapea el cálculo interno usando la función dada.</target>
        </trans-unit>
        <trans-unit id="f01bd56150a44e5c1e36c99b2ce32a4952f1afda" translate="yes" xml:space="preserve">
          <source>Map the return value, final state and output of a computation using the given function.</source>
          <target state="translated">Mapea el valor de retorno,el estado final y la salida de un cálculo usando la función dada.</target>
        </trans-unit>
        <trans-unit id="611b5e106ea059979f2f1779bbc5d5819342b37e" translate="yes" xml:space="preserve">
          <source>Map the unwrapped computation using the given function.</source>
          <target state="translated">Mapea el cálculo desenvuelto usando la función dada.</target>
        </trans-unit>
        <trans-unit id="9a3aa11de5ca9a6bdbea1dfb4fae341156bcff0a" translate="yes" xml:space="preserve">
          <source>Map type</source>
          <target state="translated">Tipo de mapa</target>
        </trans-unit>
        <trans-unit id="1810f098d7eac5bae7e2406903ecfc11787e8374" translate="yes" xml:space="preserve">
          <source>MapCRtoLF</source>
          <target state="translated">MapCRtoLF</target>
        </trans-unit>
        <trans-unit id="28b80a5d51a036d17e03dadde928449b953d85da" translate="yes" xml:space="preserve">
          <source>MapLFtoCR</source>
          <target state="translated">MapLFtoCR</target>
        </trans-unit>
        <trans-unit id="0f7287b611e3434635c4078dcc64979ba53c31bb" translate="yes" xml:space="preserve">
          <source>MapiFlag</source>
          <target state="translated">MapiFlag</target>
        </trans-unit>
        <trans-unit id="509e216767250bbf0cec7134cc87bd8db88ff863" translate="yes" xml:space="preserve">
          <source>MapiFreeBufferType</source>
          <target state="translated">MapiFreeBufferType</target>
        </trans-unit>
        <trans-unit id="f6693d804c9943e70a4a0323060d0df51aa65dfa" translate="yes" xml:space="preserve">
          <source>MapiFuncs</source>
          <target state="translated">MapiFuncs</target>
        </trans-unit>
        <trans-unit id="cd9c46f0be135a23d65b90dc10dbdb8e6bf7bb43" translate="yes" xml:space="preserve">
          <source>MapiLoaded</source>
          <target state="translated">MapiLoaded</target>
        </trans-unit>
        <trans-unit id="fa7f40372f1e4c545567caf67dc788efc58735dc" translate="yes" xml:space="preserve">
          <source>MapiLogoffType</source>
          <target state="translated">MapiLogoffType</target>
        </trans-unit>
        <trans-unit id="36cb3aec5c1c5fe73d8e8e0fc96d8a25e6742274" translate="yes" xml:space="preserve">
          <source>MapiLogonType</source>
          <target state="translated">MapiLogonType</target>
        </trans-unit>
        <trans-unit id="7a12682bc39d4a4b9b85256454d88deeb97151f5" translate="yes" xml:space="preserve">
          <source>MapiRecipDesc</source>
          <target state="translated">MapiRecipDesc</target>
        </trans-unit>
        <trans-unit id="dd6f6d1599d7119a2a1666a29fe8913e02817cc0" translate="yes" xml:space="preserve">
          <source>MapiResolveNameType</source>
          <target state="translated">MapiResolveNameType</target>
        </trans-unit>
        <trans-unit id="e806730edd68685562cf8c1233b6d49d37ab11ba" translate="yes" xml:space="preserve">
          <source>MapiSendMailType</source>
          <target state="translated">MapiSendMailType</target>
        </trans-unit>
        <trans-unit id="09e81b0440d9e7e7c46c283e70fc598be2643acd" translate="yes" xml:space="preserve">
          <source>Mapped object, from withMappedFile</source>
          <target state="translated">Objeto mapeado,de conMappedFile</target>
        </trans-unit>
        <trans-unit id="782e4fafad5e3beb16ef35319d6126950de58292" translate="yes" xml:space="preserve">
          <source>MappedObject</source>
          <target state="translated">MappedObject</target>
        </trans-unit>
        <trans-unit id="6f8944015d37918b217a17f41aec65c11bca6197" translate="yes" xml:space="preserve">
          <source>Mapping of C types to corresponding Haskell types.</source>
          <target state="translated">Mapeo de los tipos C a los correspondientes tipos Haskell.</target>
        </trans-unit>
        <trans-unit id="bfccc2a90a967ca2c9726fa59c31448b51ea07bc" translate="yes" xml:space="preserve">
          <source>Maps an old state to a new state inside a state monad. The old state is thrown away.</source>
          <target state="translated">Traza un mapa de un viejo estado a un nuevo estado dentro de una mónada estatal.El viejo estado es desechado.</target>
        </trans-unit>
        <trans-unit id="0a1978af85dd59fcc87cee4e7808720188940a44" translate="yes" xml:space="preserve">
          <source>Maps area into memory.</source>
          <target state="translated">El área de los mapas en la memoria.</target>
        </trans-unit>
        <trans-unit id="12d3f218c041a3e94409cd521a65703707ec7d30" translate="yes" xml:space="preserve">
          <source>Maps file fully and returns ForeignPtr and length of the mapped area. The mapped file is opened read-only and shared reading.</source>
          <target state="translated">Los mapas se archivan completamente y devuelven ForeignPtr y la longitud del área mapeada.El archivo mapeado se abre en modo de sólo lectura y lectura compartida.</target>
        </trans-unit>
        <trans-unit id="3936cc3f677a76a2eedb9a68dae98afcd381cc69" translate="yes" xml:space="preserve">
          <source>Mark a module as unsafe so that it can&amp;rsquo;t be imported by code compiled with &lt;a href=&quot;#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt;. Also enable the Safe Import extension so that a module can require a dependency to be trusted.</source>
          <target state="translated">Marque un m&amp;oacute;dulo como inseguro para que no se pueda importar mediante c&amp;oacute;digo compilado con &lt;a href=&quot;#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt; . Tambi&amp;eacute;n habilite la extensi&amp;oacute;n Safe Import para que un m&amp;oacute;dulo pueda requerir una dependencia para ser confiable.</target>
        </trans-unit>
        <trans-unit id="b2469915cb8350f4b45d32b9fb09eae8014a2fd7" translate="yes" xml:space="preserve">
          <source>MarkParityErrors</source>
          <target state="translated">MarkParityErrors</target>
        </trans-unit>
        <trans-unit id="cf1e479bca0990aa370eb4cace42655c1749155a" translate="yes" xml:space="preserve">
          <source>Markers let us do this: we can annotate the program to emit a marker at an appropriate point during execution and then see that in a profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfae789a5691468edf927d3fcc545f317911943" translate="yes" xml:space="preserve">
          <source>Marks a capability flushing its local update remembered set accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749ef48ee39365b34972946cb74471d0eed9c084" translate="yes" xml:space="preserve">
          <source>Marks if the datatype is actually a newtype</source>
          <target state="translated">Marca si el tipo de datos es realmente un nuevo tipo</target>
        </trans-unit>
        <trans-unit id="2e31ff5a5bf802580a8893f8699ba55f6d3ac5b7" translate="yes" xml:space="preserve">
          <source>Marks if this constructor is a record</source>
          <target state="translated">Marca si este constructor es un récord</target>
        </trans-unit>
        <trans-unit id="c3400456e0dc9b11aa991afcb8dd85aa615efa2c" translate="yes" xml:space="preserve">
          <source>Marks the beginning of a heap profile sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdb9356e7d55128f5fe9e41f811cbba7086dbb4" translate="yes" xml:space="preserve">
          <source>Marks the beginning of a time profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11481cc8464a72c6d603970383a2b8035b849cba" translate="yes" xml:space="preserve">
          <source>Marks the beginning of marking by the concurrent collector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5867d7dd9a19fc447a637c38b43c98746f7ab60" translate="yes" xml:space="preserve">
          <source>Marks the beginning of the concurrent garbage collector&amp;rsquo;s post-mark synchronization phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e14a218bcc85c7d4dcb33742d978559eff47dc5" translate="yes" xml:space="preserve">
          <source>Marks the beginning of the concurrent garbage collector&amp;rsquo;s sweep phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5ce64099ae9eb2d5c99a4e160328562b3336ca" translate="yes" xml:space="preserve">
          <source>Marks the creation of a Haskell thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e940d86df5e1c669573ec00f380d2004c19a2e" translate="yes" xml:space="preserve">
          <source>Marks the creation of a task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3821a3cd57a76c02636f3ef5d01798bb2876d2d" translate="yes" xml:space="preserve">
          <source>Marks the end of a heap profile sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e59b472cf539a835c888dd89568d8c7535aa244" translate="yes" xml:space="preserve">
          <source>Marks the end of concurrent scavenging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bb2a224b54670e5e30b20bb4395fd09c0df40e" translate="yes" xml:space="preserve">
          <source>Marks the end of marking by the concurrent collector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640deea39fa19db976a137734b54b69c77f77688" translate="yes" xml:space="preserve">
          <source>Marks the end of the concurrent garbage collector&amp;rsquo;s post-mark synchronization phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff67171565b14a0ac19b21e97b897585fbd8895f" translate="yes" xml:space="preserve">
          <source>Marks the end of the concurrent garbage collector&amp;rsquo;s sweep phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769d2819dbb6bff931272f20731d9d45442d5b36" translate="yes" xml:space="preserve">
          <source>Marks the migration of a task to a new capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1e650924ea24ab3b1b0f295ccf2fdea9b1307a" translate="yes" xml:space="preserve">
          <source>Marks the start of concurrent scavenging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e626c3e7759a64e59e9a89ccd39a484ef5b02cf" translate="yes" xml:space="preserve">
          <source>Marshal a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; into a C string encoded as UTF-8 in temporary storage, with explicit length information. The encoded string may contain NUL bytes, and is not followed by a trailing NUL byte.</source>
          <target state="translated">Ordene un &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; en una cadena C codificada como UTF-8 en un almacenamiento temporal, con informaci&amp;oacute;n expl&amp;iacute;cita sobre la longitud. La cadena codificada puede contener bytes NUL y no va seguida de un byte NUL final.</target>
        </trans-unit>
        <trans-unit id="e194c0bfa99200c6de46b0a0dae4f141264ffb6b" translate="yes" xml:space="preserve">
          <source>Marshal a C string with explicit length into a Haskell string.</source>
          <target state="translated">Ponga una cuerda de Do con longitud explícita en una cuerda de Haskell.</target>
        </trans-unit>
        <trans-unit id="50198af1318b58c7e70f40d2d8b8dc415ec720f2" translate="yes" xml:space="preserve">
          <source>Marshal a C wide string with explicit length into a Haskell string.</source>
          <target state="translated">Ponga una cuerda en Do con longitud explícita en una cuerda de Haskell.</target>
        </trans-unit>
        <trans-unit id="3c5b68516d82d4c37cb3d40678d4531758ba74e2" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C string (ie, character array) in temporary storage, with explicit length information.</source>
          <target state="translated">Poner una cadena Haskell en una cadena C (es decir,una matriz de caracteres)en almacenamiento temporal,con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="062175c88aeda03668433b163d83cb6364af626e" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C string (ie, character array) with explicit length information.</source>
          <target state="translated">Convierte una cadena de Haskell en una cadena de C (es decir,una matriz de caracteres)con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="912dd885ff9b0a2ea4a16995e74ae7cc0940d45e" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C wide string (i.e. wide character array) in temporary storage, with explicit length information.</source>
          <target state="translated">Marcar una cadena de Haskell en una cadena de ancho C (es decir,una amplia gama de caracteres)en almacenamiento temporal,con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="f77c471f3c7f74d5609487ca9b39a6878b13f8dd" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a C wide string (ie, wide character array) with explicit length information.</source>
          <target state="translated">Marcar una cadena de Haskell en una cadena de C ancha (es decir,una amplia gama de caracteres)con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="c98ce6c5f02b8c9585848448e89dbd65dcaf47e3" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C string using temporary storage.</source>
          <target state="translated">Ponga una cuerda Haskell en una cuerda C terminada NUL usando almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="fdda91a4f111ed1a0fc6f2a8775b98e089fe921b" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C string.</source>
          <target state="translated">Mariscal una cuerda Haskell en una cuerda C terminada NUL.</target>
        </trans-unit>
        <trans-unit id="4a04b9cb2051b02b522faee9650a0d495e9ac7e2" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C wide string using temporary storage.</source>
          <target state="translated">Ponga una cuerda Haskell en una cuerda NUL terminada en C ancho usando almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="4054981272596d06fac239f84b099d399356e48b" translate="yes" xml:space="preserve">
          <source>Marshal a Haskell string into a NUL terminated C wide string.</source>
          <target state="translated">Mariscal una cuerda Haskell en una cuerda C ancha terminada NUL.</target>
        </trans-unit>
        <trans-unit id="09d48aea89cc33b11ec8033bc15b6483354cf103" translate="yes" xml:space="preserve">
          <source>Marshal a NUL terminated C string into a Haskell string.</source>
          <target state="translated">El mariscal de campo un NUL terminó la cadena C en una cadena Haskell.</target>
        </trans-unit>
        <trans-unit id="4311d7c39509b4fe039bef36ba55dfd320cecd73" translate="yes" xml:space="preserve">
          <source>Marshal a NUL terminated C wide string into a Haskell string.</source>
          <target state="translated">El mariscal de campo un NUL terminó la cuerda C ancha en una cuerda Haskell.</target>
        </trans-unit>
        <trans-unit id="4c47a3a8839a6fd68ae9716c3fa1ce5197fbd8d4" translate="yes" xml:space="preserve">
          <source>Marshal a dummy Haskell string into a C wide string (i.e. wide character array) in temporary storage, with explicit length information.</source>
          <target state="translated">Poner una cadena de Haskell falsa en una cadena de C (es decir,una amplia gama de caracteres)en almacenamiento temporal,con información explícita sobre la longitud.</target>
        </trans-unit>
        <trans-unit id="6d86041ec3d2e84d33ddd1dd6cfc24550f14836a" translate="yes" xml:space="preserve">
          <source>Marshal a dummy Haskell string into a NUL terminated C wide string using temporary storage.</source>
          <target state="translated">Ponga una cuerda Haskell falsa en una cuerda NUL terminada en C con almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="e0dade00c021cdaf9d0ee91f43d69115b6f80912" translate="yes" xml:space="preserve">
          <source>Marshal a list of Haskell strings into an array of NUL terminated C strings using temporary storage.</source>
          <target state="translated">Ordena una lista de cuerdas Haskell en un conjunto de cuerdas C terminadas NUL usando almacenamiento temporal.</target>
        </trans-unit>
        <trans-unit id="cc6b108a5f57dc6b9a05c1b127e58f7eca9629cd" translate="yes" xml:space="preserve">
          <source>Marshalling</source>
          <target state="translated">Marshalling</target>
        </trans-unit>
        <trans-unit id="f0ad063d68044737957ed0f797a2cae2aa208116" translate="yes" xml:space="preserve">
          <source>Marshalling arrays</source>
          <target state="translated">Las matrices de clasificación...</target>
        </trans-unit>
        <trans-unit id="36c846ee62dfe999f6767389bfae195bd57e0465" translate="yes" xml:space="preserve">
          <source>Marshalling lists of storable objects</source>
          <target state="translated">Listas de clasificación de objetos almacenables</target>
        </trans-unit>
        <trans-unit id="0dba1cb48010c84cd2d29279809f66a88be05516" translate="yes" xml:space="preserve">
          <source>Marshalling of Boolean values (non-zero corresponds to &lt;code&gt;True&lt;/code&gt;)</source>
          <target state="translated">Clasificaci&amp;oacute;n de valores booleanos (distinto de cero corresponde a &lt;code&gt;True&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ab71dfd4eb06d44348ff90d0b69db22a5328f47d" translate="yes" xml:space="preserve">
          <source>Marshalling of Maybe values</source>
          <target state="translated">La ordenación de los valores de &quot;quizás&quot;...</target>
        </trans-unit>
        <trans-unit id="239b1e2996122625ab9c3b095db2c1aaf212e151" translate="yes" xml:space="preserve">
          <source>Marshalling support</source>
          <target state="translated">El apoyo de los mariscales</target>
        </trans-unit>
        <trans-unit id="2768b4d93d7521d0bb9c22088cc6e109b9cb0751" translate="yes" xml:space="preserve">
          <source>Marshalling support. Unsafe API.</source>
          <target state="translated">Apoyo de los mariscales.API inseguro.</target>
        </trans-unit>
        <trans-unit id="2ac6f66636ae68e7acfa888a200b00a6c8d691d3" translate="yes" xml:space="preserve">
          <source>Marshalling support: routines allocating, storing, and retrieving Haskell lists that are represented as arrays in the foreign language</source>
          <target state="translated">Apoyo a la clasificación:rutinas de asignación,almacenamiento y recuperación de las listas de Haskell que se representan como matrices en el idioma extranjero</target>
        </trans-unit>
        <trans-unit id="2eec1eaadfce2f2343fb8a58e72120839ce594dd" translate="yes" xml:space="preserve">
          <source>Martin Escardo and Paulo Oliva. &quot;Selection functions, bar recursion and backward induction&quot;, &lt;em&gt;Mathematical Structures in Computer Science&lt;/em&gt; 20:2 (2010), pp. 127-168. &lt;a href=&quot;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&quot;&gt;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&lt;/a&gt;</source>
          <target state="translated">Mart&amp;iacute;n Escardo y Paulo Oliva. &quot;Funciones de selecci&amp;oacute;n, recursividad de barras e inducci&amp;oacute;n hacia atr&amp;aacute;s&quot;, &lt;em&gt;Estructuras matem&amp;aacute;ticas en inform&amp;aacute;tica&lt;/em&gt; 20: 2 (2010), pp. 127-168. &lt;a href=&quot;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&quot;&gt;https://www.cs.bham.ac.uk/~mhe/papers/selection-escardo-oliva.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aadf1657da58cb6e5ae063fb1322736bf6002e4" translate="yes" xml:space="preserve">
          <source>Mask</source>
          <target state="translated">Mask</target>
        </trans-unit>
        <trans-unit id="30b6cc635afcf7d59efbff7d871b3f85ca41ffeb" translate="yes" xml:space="preserve">
          <source>MaskedInterruptible</source>
          <target state="translated">MaskedInterruptible</target>
        </trans-unit>
        <trans-unit id="f8a86f7a0ad149ff28451b56d2a010763bd9ea96" translate="yes" xml:space="preserve">
          <source>MaskedUninterruptible</source>
          <target state="translated">MaskedUninterruptible</target>
        </trans-unit>
        <trans-unit id="55a3d416a9f5e2d65bbae417b235dd396b7e87d1" translate="yes" xml:space="preserve">
          <source>MaskingState</source>
          <target state="translated">MaskingState</target>
        </trans-unit>
        <trans-unit id="0335207f5e840d81afa158c6c2bb6e3fa02653b4" translate="yes" xml:space="preserve">
          <source>Match</source>
          <target state="translated">Match</target>
        </trans-unit>
        <trans-unit id="d8e65ef19404e901265ea66bdd78cf07c84d55f3" translate="yes" xml:space="preserve">
          <source>Match &lt;code&gt;v1&lt;/code&gt; against &lt;code&gt;p1&lt;/code&gt;, &lt;code&gt;v2&lt;/code&gt; against &lt;code&gt;p2&lt;/code&gt; and so on. If any of these matches fail or diverge, so does the whole match.</source>
          <target state="translated">&lt;code&gt;v1&lt;/code&gt; coincidir v1 con &lt;code&gt;p1&lt;/code&gt; , &lt;code&gt;v2&lt;/code&gt; con &lt;code&gt;p2&lt;/code&gt; y as&amp;iacute; sucesivamente. Si alguno de estos partidos falla o diverge, tambi&amp;eacute;n lo har&amp;aacute; todo el partido.</target>
        </trans-unit>
        <trans-unit id="6ceb6ea323bd13a9e935c2eb466741cf2f979c72" translate="yes" xml:space="preserve">
          <source>Match and Clause</source>
          <target state="translated">Coincidencia y Cláusula</target>
        </trans-unit>
        <trans-unit id="dd7924a1ec8896d061a233f605e42f91781e1add" translate="yes" xml:space="preserve">
          <source>Match the value &lt;code&gt;v&lt;/code&gt; against &lt;code&gt;p&lt;/code&gt;. If this match fails or diverges, so does the whole (pattern synonym) match. Otherwise the match against &lt;code&gt;p&lt;/code&gt; must bind the variables &lt;code&gt;x1 ... xn&lt;/code&gt;; let them be bound to values &lt;code&gt;v1 ... vn&lt;/code&gt;.</source>
          <target state="translated">Haga coincidir el valor &lt;code&gt;v&lt;/code&gt; con &lt;code&gt;p&lt;/code&gt; . Si esta coincidencia falla o diverge, tambi&amp;eacute;n lo hace todo (sin&amp;oacute;nimo de patr&amp;oacute;n). De lo contrario, la coincidencia con &lt;code&gt;p&lt;/code&gt; debe vincular las variables &lt;code&gt;x1 ... xn&lt;/code&gt; ; d&amp;eacute;jelos estar ligados a los valores &lt;code&gt;v1 ... vn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6763e6cca4e80df18fa4d5f912665ef97a375c19" translate="yes" xml:space="preserve">
          <source>MatchQ</source>
          <target state="translated">MatchQ</target>
        </trans-unit>
        <trans-unit id="4895b24f6bce36c2cd9b44590b52713fb09b4922" translate="yes" xml:space="preserve">
          <source>Matching an expression &lt;code&gt;e&lt;/code&gt; against a pattern &lt;code&gt;!p&lt;/code&gt; is done by first evaluating &lt;code&gt;e&lt;/code&gt; (to WHNF) and then matching the result against &lt;code&gt;p&lt;/code&gt;. Example:</source>
          <target state="translated">La comparaci&amp;oacute;n de una expresi&amp;oacute;n &lt;code&gt;e&lt;/code&gt; con un patr&amp;oacute;n &lt;code&gt;!p&lt;/code&gt; se realiza evaluando primero &lt;code&gt;e&lt;/code&gt; (a WHNF) y luego comparando el resultado con &lt;code&gt;p&lt;/code&gt; . Ejemplo:</target>
        </trans-unit>
        <trans-unit id="70016ff14223778abe33ce54933e1dcebf537bde" translate="yes" xml:space="preserve">
          <source>Matching function for the token to parse.</source>
          <target state="translated">Función de coincidencia para la ficha para analizar.</target>
        </trans-unit>
        <trans-unit id="469df59ba37712c09add7e5bdd4e7279148a045b" translate="yes" xml:space="preserve">
          <source>Matching is carried out on GHC&amp;rsquo;s intermediate language, which includes type abstractions and applications. So a rule only matches if the types match too. See &lt;a href=&quot;#rule-spec&quot;&gt;Specialisation&lt;/a&gt; below.</source>
          <target state="translated">El emparejamiento se lleva a cabo en el lenguaje intermedio de GHC, que incluye abstracciones de tipos y aplicaciones. Entonces, una regla solo coincide si los tipos tambi&amp;eacute;n coinciden. Consulte la &lt;a href=&quot;#rule-spec&quot;&gt;especializaci&amp;oacute;n a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="78b96c127877ae96cfefda73d72a8baba84838aa" translate="yes" xml:space="preserve">
          <source>Matching on &lt;code&gt;App&lt;/code&gt; directly is both hard to read and error prone to write. And the situation is even worse when the matching is nested:</source>
          <target state="translated">Hacer coincidir en la &lt;code&gt;App&lt;/code&gt; directamente es dif&amp;iacute;cil de leer y propenso a errores de escritura. Y la situaci&amp;oacute;n es a&amp;uacute;n peor cuando la coincidencia est&amp;aacute; anidada:</target>
        </trans-unit>
        <trans-unit id="042bacca5d8f713d47eab01491aa815bdbd55203" translate="yes" xml:space="preserve">
          <source>Matching the pattern &lt;code&gt;!pat&lt;/code&gt; against a value &lt;code&gt;v&lt;/code&gt; behaves as follows:</source>
          <target state="translated">Hacer coincidir el patr&amp;oacute;n &lt;code&gt;!pat&lt;/code&gt; con un valor &lt;code&gt;v&lt;/code&gt; se comporta de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3d675806f239e11d4b41b67aa65a5606104824d2" translate="yes" xml:space="preserve">
          <source>Matching: To the equations in Section 3.17.3 of the &lt;a href=&quot;http://www.haskell.org/onlinereport/&quot;&gt;Haskell 98 Report&lt;/a&gt;, add the following:</source>
          <target state="translated">Coincidencia: a las ecuaciones de la Secci&amp;oacute;n 3.17.3 del &lt;a href=&quot;http://www.haskell.org/onlinereport/&quot;&gt;Informe Haskell 98&lt;/a&gt; , agregue lo siguiente:</target>
        </trans-unit>
        <trans-unit id="d87072f110a398a070f07e3107f06ad006b827b3" translate="yes" xml:space="preserve">
          <source>Matching: To the equations in Section 3.17.3 of the &lt;a href=&quot;https://www.haskell.org/onlinereport/&quot;&gt;Haskell 98 Report&lt;/a&gt;, add the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2376240265e2ddbf31297cb5bda027216f1ebd9" translate="yes" xml:space="preserve">
          <source>MathSymbol</source>
          <target state="translated">MathSymbol</target>
        </trans-unit>
        <trans-unit id="a95e85aed56318093b024674e217cae0bd30241d" translate="yes" xml:space="preserve">
          <source>Max</source>
          <target state="translated">Max</target>
        </trans-unit>
        <trans-unit id="c189943b0e68bf52ade04ebce38ce6c7c78d6eea" translate="yes" xml:space="preserve">
          <source>Maximum length of a line, in characters.</source>
          <target state="translated">Longitud máxima de una línea,en caracteres.</target>
        </trans-unit>
        <trans-unit id="144a9206977b57448e4faf5e1062274633d6193e" translate="yes" xml:space="preserve">
          <source>Maximum live data (including large objects + compact regions) in the heap. Updated after a major GC.</source>
          <target state="translated">Máximo de datos en vivo (incluyendo objetos grandes+regiones compactas)en el montón.Actualizado después de un GC mayor.</target>
        </trans-unit>
        <trans-unit id="159b778d9454be206f67d4893bca54a49e9b8c77" translate="yes" xml:space="preserve">
          <source>Maximum live data in compact regions</source>
          <target state="translated">Máximo de datos en vivo en regiones compactas</target>
        </trans-unit>
        <trans-unit id="a16695344254fdba02129e66db3ad3e63cb1016e" translate="yes" xml:space="preserve">
          <source>Maximum live data in large objects</source>
          <target state="translated">Máximo de datos en vivo en objetos grandes</target>
        </trans-unit>
        <trans-unit id="240702bae0f29e273fb09ffdba7773ca8777719c" translate="yes" xml:space="preserve">
          <source>Maximum memory in use by the RTS</source>
          <target state="translated">Memoria máxima en uso por la RTS</target>
        </trans-unit>
        <trans-unit id="d8099e9d8479df145a140dbad71866cd985cafd7" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to read</source>
          <target state="translated">Número máximo de bytes a leer</target>
        </trans-unit>
        <trans-unit id="29145ea756091c42d8b8df72e4191a60b4a54c6e" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to write</source>
          <target state="translated">Número máximo de bytes a escribir</target>
        </trans-unit>
        <trans-unit id="9e69850923d54429a417c753e43ca53a7ffd31d5" translate="yes" xml:space="preserve">
          <source>Maximum number of unmatched patterns to be shown in warnings generated by &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-patterns&quot;&gt;&lt;code&gt;-Wincomplete-patterns&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-uni-patterns&quot;&gt;&lt;code&gt;-Wincomplete-uni-patterns&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">N&amp;uacute;mero m&amp;aacute;ximo de patrones no &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-patterns&quot;&gt; &lt;code&gt;-Wincomplete-patterns&lt;/code&gt; &lt;/a&gt; que se mostrar&amp;aacute;n en las advertencias generadas por -Wincomplete-patterns y &lt;a href=&quot;using-warnings#ghc-flag--Wincomplete-uni-patterns&quot;&gt; &lt;code&gt;-Wincomplete-uni-patterns&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f5b0947f46a97bb1ec7fe07a7eee8499d030c8e" translate="yes" xml:space="preserve">
          <source>Maximum of two size hints.</source>
          <target state="translated">Un máximo de dos pistas de tamaño.</target>
        </trans-unit>
        <trans-unit id="bdf18c00bb82701af0218115bcf257f5be6c13bb" translate="yes" xml:space="preserve">
          <source>Maximum slop</source>
          <target state="translated">Máxima pendiente</target>
        </trans-unit>
        <trans-unit id="15683050ba4f95be274c22da707d4d37cc680acd" translate="yes" xml:space="preserve">
          <source>May be overlapped by more specific instances</source>
          <target state="translated">Puede estar superpuesta por instancias más específicas</target>
        </trans-unit>
        <trans-unit id="9d13a4f70e986c78366878d8a4b23da17275d3fb" translate="yes" xml:space="preserve">
          <source>May overlap a more general instance</source>
          <target state="translated">Puede superponerse a una instancia más general</target>
        </trans-unit>
        <trans-unit id="bc53972d25b2dda7267fd09725c8dd41aac97859" translate="yes" xml:space="preserve">
          <source>May throw an exception if this is an invalid descriptor.</source>
          <target state="translated">Puede hacer una excepción si este es un descriptor inválido.</target>
        </trans-unit>
        <trans-unit id="56dd8d0bbe9dcb95403cd2c187064106af47af84" translate="yes" xml:space="preserve">
          <source>Maybe</source>
          <target state="translated">Maybe</target>
        </trans-unit>
        <trans-unit id="bef155b2a43310adf81b6d1bb8637732d86f34c0" translate="yes" xml:space="preserve">
          <source>Maybe include (or exclude) replacement locales?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92babb5409c0a6ec95584469ae7d91df0ca8969" translate="yes" xml:space="preserve">
          <source>Maybe monoid returning the leftmost non-Nothing value.</source>
          <target state="translated">Tal vez el monoide devuelva el valor de no-nada más a la izquierda.</target>
        </trans-unit>
        <trans-unit id="018b50df30620e3a51db9ef52260cf832edd1f4d" translate="yes" xml:space="preserve">
          <source>Maybe monoid returning the rightmost non-Nothing value.</source>
          <target state="translated">Tal vez el monoide devuelva el valor de no-nada más a la derecha.</target>
        </trans-unit>
        <trans-unit id="fc0be6aa40a87f2c34d21604241fc126b3d008fc" translate="yes" xml:space="preserve">
          <source>Maybe type</source>
          <target state="translated">Tal vez escriba</target>
        </trans-unit>
        <trans-unit id="aa7807fd2f555e6dc07cae0194859e7c01ce8cb6" translate="yes" xml:space="preserve">
          <source>Maybe values</source>
          <target state="translated">Tal vez los valores</target>
        </trans-unit>
        <trans-unit id="e3265936ce333fe37c9404fe3bfe54fa2731aec4" translate="yes" xml:space="preserve">
          <source>MaybeT</source>
          <target state="translated">MaybeT</target>
        </trans-unit>
        <trans-unit id="3fbd96571113d60d1ec28c5fc4754c91f3088410" translate="yes" xml:space="preserve">
          <source>MbATOM</source>
          <target state="translated">MbATOM</target>
        </trans-unit>
        <trans-unit id="55d8534107e7b0b303e6aa4feb48079bd26d10e8" translate="yes" xml:space="preserve">
          <source>MbHANDLE</source>
          <target state="translated">MbHANDLE</target>
        </trans-unit>
        <trans-unit id="e5248b4829d90843e057bd4eca3e14ec6c01b898" translate="yes" xml:space="preserve">
          <source>MbHINSTANCE</source>
          <target state="translated">MbHINSTANCE</target>
        </trans-unit>
        <trans-unit id="863abdca342d4cbfd84104bbc0ff83f945b49e3b" translate="yes" xml:space="preserve">
          <source>MbHMODULE</source>
          <target state="translated">MbHMODULE</target>
        </trans-unit>
        <trans-unit id="3d9c03cdc0330cc84e5101070b081063867dbc28" translate="yes" xml:space="preserve">
          <source>MbINT</source>
          <target state="translated">MbINT</target>
        </trans-unit>
        <trans-unit id="ecea6b01153b85a30965344164775b06fbcb69a4" translate="yes" xml:space="preserve">
          <source>MbLPCSTR</source>
          <target state="translated">MbLPCSTR</target>
        </trans-unit>
        <trans-unit id="e5be102041dc49217c1540606dd21365b89afc4f" translate="yes" xml:space="preserve">
          <source>MbLPCTSTR</source>
          <target state="translated">MbLPCTSTR</target>
        </trans-unit>
        <trans-unit id="53d96f8a97cd2285858b07956c5ce9cae6040aba" translate="yes" xml:space="preserve">
          <source>MbLPOVERLAPPED</source>
          <target state="translated">MbLPOVERLAPPED</target>
        </trans-unit>
        <trans-unit id="1bab356846186170a8b4b1f5b81a7ad37bab46a7" translate="yes" xml:space="preserve">
          <source>MbLPSECURITY_ATTRIBUTES</source>
          <target state="translated">MbLPSECURITY_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="48504feb90b785c6491d7d2c1926298c2bd30054" translate="yes" xml:space="preserve">
          <source>MbLPVOID</source>
          <target state="translated">MbLPVOID</target>
        </trans-unit>
        <trans-unit id="96d0adb31743d4f3821a0e34427fd9d3c6b05a6e" translate="yes" xml:space="preserve">
          <source>MbPos</source>
          <target state="translated">MbPos</target>
        </trans-unit>
        <trans-unit id="e4fd24ce7545ffe7c595a6b3e7a83dba23199af3" translate="yes" xml:space="preserve">
          <source>MbString</source>
          <target state="translated">MbString</target>
        </trans-unit>
        <trans-unit id="ce9329746fe501a099093f13e3edca7c47f40a51" translate="yes" xml:space="preserve">
          <source>Mc: Mark, Spacing Combining</source>
          <target state="translated">Mark,la combinación del espacio</target>
        </trans-unit>
        <trans-unit id="e2c8f4a8900f070fa946c771890c8638e1827848" translate="yes" xml:space="preserve">
          <source>Me: Mark, Enclosing</source>
          <target state="translated">Yo:Mark,adjunto</target>
        </trans-unit>
        <trans-unit id="5613874632be97c00f6099463fe7f3e041473ea8" translate="yes" xml:space="preserve">
          <source>Meanings of specific keywords:</source>
          <target state="translated">Significado de palabras clave específicas:</target>
        </trans-unit>
        <trans-unit id="1aedf6c2f14dc3df6a343ae9b734d4a0213e9822" translate="yes" xml:space="preserve">
          <source>Means &amp;ldquo;turn off all optimisation&amp;rdquo;, reverting to the same settings as if no &lt;code&gt;-O&lt;/code&gt; options had been specified. Saying &lt;code&gt;-O0&lt;/code&gt; can be useful if e.g. &lt;code&gt;make&lt;/code&gt; has inserted a &lt;code&gt;-O&lt;/code&gt; on the command line already.</source>
          <target state="translated">Significa &quot;desactivar toda la optimizaci&amp;oacute;n&quot;, volviendo a la misma configuraci&amp;oacute;n que si no se hubiera especificado ninguna opci&amp;oacute;n &lt;code&gt;-O&lt;/code&gt; . Decir &lt;code&gt;-O0&lt;/code&gt; puede ser &amp;uacute;til si, por ejemplo, &lt;code&gt;make&lt;/code&gt; ya ha insertado &lt;code&gt;-O&lt;/code&gt; en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="1b4aa9a4c3b5df0d65ca9349e71ddf30cd0d7394" translate="yes" xml:space="preserve">
          <source>Means: &amp;ldquo;Apply every non-dangerous optimisation, even if it means significantly longer compile times.&amp;rdquo;</source>
          <target state="translated">Significa: &quot;Aplicar todas las optimizaciones no peligrosas, incluso si eso significa tiempos de compilaci&amp;oacute;n significativamente m&amp;aacute;s largos&quot;.</target>
        </trans-unit>
        <trans-unit id="c3bbe6c8c39ed5248e3ca18003eb3d6900b1a45b" translate="yes" xml:space="preserve">
          <source>Means: &amp;ldquo;Generate good-quality code without taking too long about it.&amp;rdquo; Thus, for example: &lt;code&gt;ghc -c -O Main.lhs&lt;/code&gt;</source>
          <target state="translated">Significa: &quot;Generar c&amp;oacute;digo de buena calidad sin tardar demasiado&quot;. As&amp;iacute;, por ejemplo: &lt;code&gt;ghc -c -O Main.lhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe31d4f25bb8cbbdafdbd4fc62d7fc6cf17c7656" translate="yes" xml:space="preserve">
          <source>Mediate types and binary type constructors.</source>
          <target state="translated">Tipos mediatos y constructores de tipo binario.</target>
        </trans-unit>
        <trans-unit id="517ef4fa125305a5305a3a02844f3bb72b3175b5" translate="yes" xml:space="preserve">
          <source>Mediate types and unary type constructors.</source>
          <target state="translated">Tipos mediatos y constructores de tipo unario.</target>
        </trans-unit>
        <trans-unit id="e4fbd39576ea76f4b6886965b788cbf9b98faaa4" translate="yes" xml:space="preserve">
          <source>Memoisation happens because the built-in Haskell list &lt;strong&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/strong&gt; is represented as &lt;strong&gt;data&lt;/strong&gt;, either empty or a &lt;em&gt;cons-cell&lt;/em&gt; holding the first element and the tail of the list. The &lt;code&gt;Foldable&lt;/code&gt; class enables a variant representation of iterators as &lt;em&gt;functions&lt;/em&gt;, which take an operator and a starting accumulator and output a summary result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bf368dfa41af6966ac27794caf5006abecc398" translate="yes" xml:space="preserve">
          <source>Memory Model</source>
          <target state="translated">Modelo de memoria</target>
        </trans-unit>
        <trans-unit id="49364f57d947f17b4af9ef59269db84acaef977a" translate="yes" xml:space="preserve">
          <source>Memory addresses are represented as values of type &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt;, for some &lt;code&gt;a&lt;/code&gt; which is an instance of class &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt;. The type argument to &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; helps provide some valuable type safety in FFI code (you can't mix pointers of different types without an explicit cast), while helping the Haskell type system figure out which marshalling method is needed for a given pointer.</source>
          <target state="translated">Las direcciones de memoria se representan como valores de tipo &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt; , para algunos &lt;code&gt;a&lt;/code&gt; , que es una instancia de la clase &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; . El argumento de tipo para &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; ayuda a proporcionar una seguridad de tipo valiosa en el c&amp;oacute;digo FFI (no se pueden mezclar punteros de diferentes tipos sin una conversi&amp;oacute;n expl&amp;iacute;cita), mientras que ayuda al sistema de tipos de Haskell a determinar qu&amp;eacute; m&amp;eacute;todo de clasificaci&amp;oacute;n es necesario para un puntero determinado.</target>
        </trans-unit>
        <trans-unit id="8ccc7c7227622171674639dfab2d7182af83111c" translate="yes" xml:space="preserve">
          <source>Memory addresses are represented as values of type &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt;, for some &lt;code&gt;a&lt;/code&gt; which is an instance of class &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt;. The type argument to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; helps provide some valuable type safety in FFI code (you can't mix pointers of different types without an explicit cast), while helping the Haskell type system figure out which marshalling method is needed for a given pointer.</source>
          <target state="translated">Las direcciones de memoria se representan como valores de tipo &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt; a&lt;/code&gt; , para algunos &lt;code&gt;a&lt;/code&gt; , que es una instancia de la clase &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; . El argumento de tipo para &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; ayuda a proporcionar una seguridad de tipo valiosa en el c&amp;oacute;digo FFI (no se pueden mezclar punteros de diferentes tipos sin una conversi&amp;oacute;n expl&amp;iacute;cita), mientras que ayuda al sistema de tipos de Haskell a determinar qu&amp;eacute; m&amp;eacute;todo de clasificaci&amp;oacute;n es necesario para un puntero determinado.</target>
        </trans-unit>
        <trans-unit id="b61b70edbe3a97caa2ecb5ac100b7aca209a1cba" translate="yes" xml:space="preserve">
          <source>Memory allocation</source>
          <target state="translated">Asignación de memoria</target>
        </trans-unit>
        <trans-unit id="403b42e453dae36d100f182dddf88973e094f006" translate="yes" xml:space="preserve">
          <source>Memory containing the data to write</source>
          <target state="translated">La memoria que contiene los datos a escribir</target>
        </trans-unit>
        <trans-unit id="94713b6ce43e5b0b6c83500725c2f66aaf33bf20" translate="yes" xml:space="preserve">
          <source>Memory in which to put the data</source>
          <target state="translated">La memoria en la que poner los datos</target>
        </trans-unit>
        <trans-unit id="6dc9de36a01521f350aa26cecadb8b40753a93e7" translate="yes" xml:space="preserve">
          <source>Memory occupied by threads and their stacks is labelled as &amp;ldquo;TSO&amp;rdquo; and &amp;ldquo;STACK&amp;rdquo; respectively when displaying the profile by closure description or type description.</source>
          <target state="translated">La memoria ocupada por los subprocesos y sus pilas se etiqueta como &quot;TSO&quot; y &quot;STACK&quot; respectivamente cuando se muestra el perfil por descripci&amp;oacute;n de cierre o descripci&amp;oacute;n de tipo.</target>
        </trans-unit>
        <trans-unit id="4c76fe9817202da64040fc649066dabc0e7eed8e" translate="yes" xml:space="preserve">
          <source>Memory overhead</source>
          <target state="translated">Memoria por encima de la cabeza</target>
        </trans-unit>
        <trans-unit id="76cf8b1754b778b2d89d0e21d90207ed29dcf08d" translate="yes" xml:space="preserve">
          <source>Memory-related system things.</source>
          <target state="translated">Cosas del sistema relacionadas con la memoria.</target>
        </trans-unit>
        <trans-unit id="d10533e6a3289c9df349dcd02b8d8d7f9c80176b" translate="yes" xml:space="preserve">
          <source>Merge immediately-nested case expressions that scrutinise the same variable. For example,</source>
          <target state="translated">Fusionar expresiones de casos anidados inmediatamente que escudriñan la misma variable.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="5d3ef442f47f2ad90bddd19466398680ce25d8b8" translate="yes" xml:space="preserve">
          <source>Merge two maps.</source>
          <target state="translated">Fusiona dos mapas.</target>
        </trans-unit>
        <trans-unit id="01d28a50eda177ec75942bb24c131250cdadabfb" translate="yes" xml:space="preserve">
          <source>Merges</source>
          <target state="translated">Merges</target>
        </trans-unit>
        <trans-unit id="19c032c62dd34ab443e91cd122c550a6e77893b2" translate="yes" xml:space="preserve">
          <source>Merging the contribution of the current element with an accumulator value from a partial result is performed by an &lt;em&gt;operator&lt;/em&gt; function, either explicitly provided by the caller as in &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, implicit as in &lt;code&gt;&lt;a href=&quot;data-foldable#v:length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, or partly implicit as in &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; (where each element is mapped into a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, and the monoid's &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; operator performs the merge).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="024d721d7acc6f792bdb94402861b9353228512e" translate="yes" xml:space="preserve">
          <source>Messages sent back to GHC from GHCi.TH, to implement the methods of &lt;code&gt;Quasi&lt;/code&gt;. For an overview of how TH works with Remote GHCi, see Note [Remote Template Haskell] in GHCi.TH.</source>
          <target state="translated">Mensajes enviados de vuelta a GHC desde GHCi.TH, para implementar los m&amp;eacute;todos de &lt;code&gt;Quasi&lt;/code&gt; . Para obtener una descripci&amp;oacute;n general de c&amp;oacute;mo funciona TH con Remote GHCi, consulte la Nota [Plantilla remota Haskell] en GHCi.TH.</target>
        </trans-unit>
        <trans-unit id="8d546a6dea9ff90d517b51c25b35319931ae4e04" translate="yes" xml:space="preserve">
          <source>Meta</source>
          <target state="translated">Meta</target>
        </trans-unit>
        <trans-unit id="b4c38ae701ee7b9a08939eed835436caf60c6814" translate="yes" xml:space="preserve">
          <source>Meta information: &lt;code&gt;M1&lt;/code&gt;</source>
          <target state="translated">Metainformaci&amp;oacute;n: &lt;code&gt;M1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbd5ac6aaff1e4e5e3680f3fcf71d0e95837cf76" translate="yes" xml:space="preserve">
          <source>Meta-information</source>
          <target state="translated">Meta-information</target>
        </trans-unit>
        <trans-unit id="1704ec077999acd78a98ea2ae7222e509894be96" translate="yes" xml:space="preserve">
          <source>Meta-information (constructor names, etc.)</source>
          <target state="translated">Meta-información (nombres de los constructores,etc.)</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="1ce80809f59fb3e44fb71f48daaa5004423cdbcf" translate="yes" xml:space="preserve">
          <source>Methods for the RealFrac instances for &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;, with specialised versions for &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">M&amp;eacute;todos para las instancias de RealFrac para &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; , con versiones especializadas para &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="056ba157b3837c9d7e53cf9a40b8f90212f59c28" translate="yes" xml:space="preserve">
          <source>Micro</source>
          <target state="translated">Micro</target>
        </trans-unit>
        <trans-unit id="064b3c6c13a563b40aaf45097d6cc83685cba7e9" translate="yes" xml:space="preserve">
          <source>Milan Straka 2014</source>
          <target state="translated">Milán Straka 2014</target>
        </trans-unit>
        <trans-unit id="90b5d11de357d4d026169517972bc20fb4c73559" translate="yes" xml:space="preserve">
          <source>Milli</source>
          <target state="translated">Milli</target>
        </trans-unit>
        <trans-unit id="7eb0cee888ab55b559592d38eec027e9118d7d35" translate="yes" xml:space="preserve">
          <source>Min</source>
          <target state="translated">Min</target>
        </trans-unit>
        <trans-unit id="2afa51042312a9e6905578605fd22a3a6cf486b0" translate="yes" xml:space="preserve">
          <source>Min/Max</source>
          <target state="translated">Min/Max</target>
        </trans-unit>
        <trans-unit id="e4a689975026b0f86f50d77f497034f70d01b4fa" translate="yes" xml:space="preserve">
          <source>Minimal complete definition</source>
          <target state="translated">Definición mínima completa</target>
        </trans-unit>
        <trans-unit id="ac6d77ddd397a6c5eefaab2dc1cbd2ec7a9c37eb" translate="yes" xml:space="preserve">
          <source>Minimal complete definition: &lt;code&gt;&lt;a href=&quot;control-monad-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Definici&amp;oacute;n m&amp;iacute;nima completa: &lt;code&gt;&lt;a href=&quot;control-monad-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;control-monad-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="665f3b3bb2b72327a6fd69442668299a386cb99c" translate="yes" xml:space="preserve">
          <source>Minimal complete definition: &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Definici&amp;oacute;n m&amp;iacute;nima completa: &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;control-monad-error-class#v:strMsg&quot;&gt;strMsg&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab7e52c60d681dae189f8720979ee422a3d05064" translate="yes" xml:space="preserve">
          <source>Minimal complete definition: &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Definici&amp;oacute;n m&amp;iacute;nima completa: &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:noMsg&quot;&gt;noMsg&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#v:strMsg&quot;&gt;strMsg&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fd6feae02a9278c6dea240fd40b8aeb536aa561" translate="yes" xml:space="preserve">
          <source>Minimal complete definition: either &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-eq#v:-47--61-&quot;&gt;/=&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Definici&amp;oacute;n m&amp;iacute;nima completa: ya sea &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-eq#v:-47--61-&quot;&gt;/=&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f44945409c6023d19bee5e3d0ed6a60092084206" translate="yes" xml:space="preserve">
          <source>Minimal complete definition: either &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-ord#v:-60--61-&quot;&gt;&amp;lt;=&lt;/a&gt;&lt;/code&gt;. Using &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; can be more efficient for complex types.</source>
          <target state="translated">Definici&amp;oacute;n m&amp;iacute;nima completa: &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-ord#v:-60--61-&quot;&gt;&amp;lt;=&lt;/a&gt;&lt;/code&gt; . El uso de &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; puede ser m&amp;aacute;s eficaz para tipos complejos.</target>
        </trans-unit>
        <trans-unit id="af209dc37f96b74f9773c4c4d607b8e40fe1baaf" translate="yes" xml:space="preserve">
          <source>Minimal complete definition: either &lt;code&gt;&lt;a href=&quot;prelude#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;prelude#v:-47--61-&quot;&gt;/=&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Definici&amp;oacute;n m&amp;iacute;nima completa: ya sea &lt;code&gt;&lt;a href=&quot;prelude#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;prelude#v:-47--61-&quot;&gt;/=&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7953d2f2689ba6cdd1d813d83ee82da633d40079" translate="yes" xml:space="preserve">
          <source>Minimal complete definition: either &lt;code&gt;&lt;a href=&quot;prelude#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;prelude#v:-60--61-&quot;&gt;&amp;lt;=&lt;/a&gt;&lt;/code&gt;. Using &lt;code&gt;&lt;a href=&quot;prelude#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; can be more efficient for complex types.</source>
          <target state="translated">Definici&amp;oacute;n m&amp;iacute;nima completa: &lt;code&gt;&lt;a href=&quot;prelude#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;prelude#v:-60--61-&quot;&gt;&amp;lt;=&lt;/a&gt;&lt;/code&gt; . El uso de &lt;code&gt;&lt;a href=&quot;prelude#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; puede ser m&amp;aacute;s eficaz para tipos complejos.</target>
        </trans-unit>
        <trans-unit id="8799ac72cc46a81952dd429d7c4af0260005305d" translate="yes" xml:space="preserve">
          <source>Minimal definition is either both of &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt; or just &lt;code&gt;state&lt;/code&gt;</source>
          <target state="translated">La definici&amp;oacute;n m&amp;iacute;nima es tanto &lt;code&gt;get&lt;/code&gt; como &lt;code&gt;put&lt;/code&gt; o simplemente &lt;code&gt;state&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af4f6aa56d4f948a03f18d3a1d4d1605a2212012" translate="yes" xml:space="preserve">
          <source>Minimal size of next &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tama&amp;ntilde;o m&amp;iacute;nimo del siguiente &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36461254172845cccb18d0bf80dba5e9c41d913e" translate="yes" xml:space="preserve">
          <source>Minimal verbosity: print one line per compilation (this is the default when &lt;a href=&quot;#ghc-flag---make&quot;&gt;&lt;code&gt;--make&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ghc-flag---interactive&quot;&gt;&lt;code&gt;--interactive&lt;/code&gt;&lt;/a&gt; is on).</source>
          <target state="translated">Verbosidad m&amp;iacute;nima: imprime una l&amp;iacute;nea por compilaci&amp;oacute;n (este es el valor predeterminado cuando &lt;a href=&quot;#ghc-flag---make&quot;&gt; &lt;code&gt;--make&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#ghc-flag---interactive&quot;&gt; &lt;code&gt;--interactive&lt;/code&gt; &lt;/a&gt; est&amp;aacute; activado ).</target>
        </trans-unit>
        <trans-unit id="13dd082aed431f232c24aac55d18467c2b663e2e" translate="yes" xml:space="preserve">
          <source>Minimum % ⟨n⟩ of heap which must be available for allocation.</source>
          <target state="translated">Mínimo % ⟨n⟩ del montón que debe estar disponible para su asignación.</target>
        </trans-unit>
        <trans-unit id="b2c5225f522390e3a01cad15518a7fad4845c00b" translate="yes" xml:space="preserve">
          <source>Minimum of two size hints.</source>
          <target state="translated">Un mínimo de dos pistas de tamaño.</target>
        </trans-unit>
        <trans-unit id="6375390ec9f90418a19031fe946ea7c8b08c7ed6" translate="yes" xml:space="preserve">
          <source>Minor utilities for the HPC tools.</source>
          <target state="translated">Utilidades menores para las herramientas HPC.</target>
        </trans-unit>
        <trans-unit id="0f40575a4f8fcd450cc8e24d023e408e6a539894" translate="yes" xml:space="preserve">
          <source>MiscFlags</source>
          <target state="translated">MiscFlags</target>
        </trans-unit>
        <trans-unit id="2aa593cd19b234155d3652986effbe2cabb181f4" translate="yes" xml:space="preserve">
          <source>Miscelaneous information available for debugging purposes.</source>
          <target state="translated">Información miscelánea disponible para fines de depuración.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="6b75dbc2d8c884fa76ebd1fab5321c113f5bdcc6" translate="yes" xml:space="preserve">
          <source>Miscellaneous GMP-provided operations</source>
          <target state="translated">Operaciones misceláneas proporcionadas por GMP</target>
        </trans-unit>
        <trans-unit id="5e68c0546c69483d4d1cb26b8fe241467b0b0496" translate="yes" xml:space="preserve">
          <source>Miscellaneous backend dumps</source>
          <target state="translated">Varios vertederos de fondo</target>
        </trans-unit>
        <trans-unit id="314bb4fc83d55b365225efaa4fc333e95057e960" translate="yes" xml:space="preserve">
          <source>Miscellaneous functions</source>
          <target state="translated">Funciones misceláneas</target>
        </trans-unit>
        <trans-unit id="766dde0dd177116968305ecf5af25276425044a7" translate="yes" xml:space="preserve">
          <source>Miscellaneous functions on tactics</source>
          <target state="translated">Funciones misceláneas en las tácticas</target>
        </trans-unit>
        <trans-unit id="fc807e2d7976d257c9171d114a6eb3efc8cab20a" translate="yes" xml:space="preserve">
          <source>Miscellaneous information about the system environment.</source>
          <target state="translated">Información miscelánea sobre el entorno del sistema.</target>
        </trans-unit>
        <trans-unit id="bddea403651e35362ffdbaad6b7106a982b909aa" translate="yes" xml:space="preserve">
          <source>Miscellaneous information available for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142e1b72c08ab742f64274e6c7d575bbcc8429f4" translate="yes" xml:space="preserve">
          <source>Miscellaneous parameters</source>
          <target state="translated">Parámetros misceláneos</target>
        </trans-unit>
        <trans-unit id="75614093589ee1a6ed1d6b3a9a321b001454bfa9" translate="yes" xml:space="preserve">
          <source>Miscellaneous tactic functions</source>
          <target state="translated">Funciones tácticas diversas</target>
        </trans-unit>
        <trans-unit id="120f9c9998409369934eaac96bbbad1e69990044" translate="yes" xml:space="preserve">
          <source>Mismatch between the argument types and the format string, as well as any other syntactic or semantic errors in the format string, will cause an exception to be thrown at runtime.</source>
          <target state="translated">El desajuste entre los tipos de argumentos y la cadena de formato,así como cualquier otro error sintáctico o semántico en la cadena de formato,hará que se lance una excepción en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="fd7391b6720b809c7c41ed50cf63fdc87dac6b9d" translate="yes" xml:space="preserve">
          <source>Mix</source>
          <target state="translated">Mix</target>
        </trans-unit>
        <trans-unit id="a5446b7cafd6f64fa36d064009daafea44ba609c" translate="yes" xml:space="preserve">
          <source>Mix DataStructure</source>
          <target state="translated">Mezclar la estructura de datos</target>
        </trans-unit>
        <trans-unit id="832e98200646adcbff0ea6a3b2b8398b73caa5ed" translate="yes" xml:space="preserve">
          <source>MixEntry</source>
          <target state="translated">MixEntry</target>
        </trans-unit>
        <trans-unit id="517dcc2aab9ff981e3d03a30ce6935c8e5ebac7e" translate="yes" xml:space="preserve">
          <source>MixEntryDom</source>
          <target state="translated">MixEntryDom</target>
        </trans-unit>
        <trans-unit id="d6840928afb9e96dced0538038e4e1c1eac39e1f" translate="yes" xml:space="preserve">
          <source>MkSystemTime</source>
          <target state="translated">MkSystemTime</target>
        </trans-unit>
        <trans-unit id="30376c6ee888990666c554e49bebf998120a5703" translate="yes" xml:space="preserve">
          <source>Mn: Mark, Non-Spacing</source>
          <target state="translated">Mn:Mark,sin espaciar</target>
        </trans-unit>
        <trans-unit id="f388dbfb78ec3e8821ae0844a947cecd488dd5ff" translate="yes" xml:space="preserve">
          <source>Mod</source>
          <target state="translated">Mod</target>
        </trans-unit>
        <trans-unit id="f149e0b10681e7408d843a0239621f9345205680" translate="yes" xml:space="preserve">
          <source>ModJulianDate</source>
          <target state="translated">ModJulianDate</target>
        </trans-unit>
        <trans-unit id="7a6df6254eeab02c96836922ac0139d166dad965" translate="yes" xml:space="preserve">
          <source>ModName</source>
          <target state="translated">ModName</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="e6c089b7ef71ad84d0b5ea7857ddf7e884d95cec" translate="yes" xml:space="preserve">
          <source>Mode wrappers</source>
          <target state="translated">Los envoltorios de modo</target>
        </trans-unit>
        <trans-unit id="6fd961190d330e230cb25033021abb41924a952f" translate="yes" xml:space="preserve">
          <source>Mode: A mode may be used on the command line only. You can pass only one mode flag. For example, &lt;a href=&quot;#ghc-flag---make&quot;&gt;&lt;code&gt;--make&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ghc-flag--E&quot;&gt;&lt;code&gt;-E&lt;/code&gt;&lt;/a&gt;. The available modes are listed in &lt;a href=&quot;#modes&quot;&gt;Modes of operation&lt;/a&gt;.</source>
          <target state="translated">Modo: se puede utilizar un modo solo en la l&amp;iacute;nea de comandos. Solo puede pasar una bandera de modo. Por ejemplo, &lt;a href=&quot;#ghc-flag---make&quot;&gt; &lt;code&gt;--make&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#ghc-flag--E&quot;&gt; &lt;code&gt;-E&lt;/code&gt; &lt;/a&gt; . Los modos disponibles se enumeran en &lt;a href=&quot;#modes&quot;&gt;Modos de funcionamiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0b30babf16ffbe6c525df9ecff6598de4eeedcf" translate="yes" xml:space="preserve">
          <source>ModifiedJulianDay</source>
          <target state="translated">ModifiedJulianDay</target>
        </trans-unit>
        <trans-unit id="ad8932265b6513f8f4632598479d16d811295a0e" translate="yes" xml:space="preserve">
          <source>ModifierLetter</source>
          <target state="translated">ModifierLetter</target>
        </trans-unit>
        <trans-unit id="06e78e77af950abb3de1917e6c715f81fbe8971c" translate="yes" xml:space="preserve">
          <source>ModifierParser</source>
          <target state="translated">ModifierParser</target>
        </trans-unit>
        <trans-unit id="a6384fc88bd1c896276b41e4e1213a85a46e0ff7" translate="yes" xml:space="preserve">
          <source>ModifierSymbol</source>
          <target state="translated">ModifierSymbol</target>
        </trans-unit>
        <trans-unit id="612cabf63b0ae37796ad667f19fbb51eec48245e" translate="yes" xml:space="preserve">
          <source>Modify the ambient monad used during code generation. For example, you can use &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:hoistCode&quot;&gt;hoistCode&lt;/a&gt;&lt;/code&gt; to handle a state effect: &lt;code&gt;
  handleState :: Code (StateT Int Q) a -&amp;gt; Code Q a
  handleState = hoistCode (flip runState 0)
 &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb225bd76a44ecd21f3cad93b922d790b638f86" translate="yes" xml:space="preserve">
          <source>Modify the ambient monad used during code generation. For example, you can use &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:hoistCode&quot;&gt;hoistCode&lt;/a&gt;&lt;/code&gt; to handle a state effect: &lt;code&gt;
  handleState :: Code (StateT Int Q) a -&amp;gt; Code Q a
  handleState = hoistCode (flip runState 0)
 &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6320257ec347ce7461b6559133a0cc26667c4e6d" translate="yes" xml:space="preserve">
          <source>Modify the contents of a &lt;code&gt;MutVar#&lt;/code&gt;, returning the previous contents and the result of applying the given function to the previous contents.</source>
          <target state="translated">Modifica el contenido de un &lt;code&gt;MutVar#&lt;/code&gt; , devolviendo el contenido anterior y el resultado de aplicar la funci&amp;oacute;n dada a los contenidos anteriores.</target>
        </trans-unit>
        <trans-unit id="f0a2b227aefd779ece79d3f6ad8baef4e51ab448" translate="yes" xml:space="preserve">
          <source>Modify the contents of a &lt;code&gt;MutVar#&lt;/code&gt;, returning the previous contents and the result of applying the given function to the previous contents. Note that this isn't strictly speaking the correct type for this function; it should really be &lt;code&gt;MutVar# s a -&amp;gt; (a -&amp;gt; (a,b)) -&amp;gt; State# s -&amp;gt; (# State# s, a, (a, b) #)&lt;/code&gt;, but we don't know about pairs here.</source>
          <target state="translated">Modifica el contenido de un &lt;code&gt;MutVar#&lt;/code&gt; , devolviendo el contenido anterior y el resultado de aplicar la funci&amp;oacute;n dada a los contenidos anteriores. Tenga en cuenta que este no es, estrictamente hablando, el tipo correcto para esta funci&amp;oacute;n; Realmente deber&amp;iacute;a ser &lt;code&gt;MutVar# s a -&amp;gt; (a -&amp;gt; (a,b)) -&amp;gt; State# s -&amp;gt; (# State# s, a, (a, b) #)&lt;/code&gt; , pero no sabemos acerca de los pares aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="6ecabc24fa376f8bfdd5f9771659364d02446fee" translate="yes" xml:space="preserve">
          <source>Modify the depth of the evaluation history tracked by GHCi.</source>
          <target state="translated">Modificar la profundidad del historial de evaluación rastreado por el GHCi.</target>
        </trans-unit>
        <trans-unit id="18199c686f30decfd6449ba999c8002260a92575" translate="yes" xml:space="preserve">
          <source>Modify the value of an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Modifica el valor de un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34813144ec19f74db4ddda85d08e6849e3f1487f" translate="yes" xml:space="preserve">
          <source>Modifying the code slightly, however, produces code which will not compile:</source>
          <target state="translated">Modificando el código ligeramente,sin embargo,produce un código que no se compila:</target>
        </trans-unit>
        <trans-unit id="4c32fd82ceb8daf13a6616a1ab5a958038171a59" translate="yes" xml:space="preserve">
          <source>Modifying the user environment</source>
          <target state="translated">Modificación del entorno del usuario</target>
        </trans-unit>
        <trans-unit id="e075617bae1ed6d213cacf5b4a1963cf2b558270" translate="yes" xml:space="preserve">
          <source>Modular arithmetic</source>
          <target state="translated">Aritmética modular</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="40b31c77d57b0de63020f3b87cedcf39795f6b82" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt; provides the interface of storable arrays. They are instances of class &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; (with the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad).</source>
          <target state="translated">Module &lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt; proporciona la interfaz de matrices almacenables. Son instancias de clase &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; (con la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dfbffd6a6167f932043b8ceb3531f4ecd4669be4" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt; provides the interface of storable arrays. They are instances of class &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; (with the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b407bb0936075a0d89e6cf1e7e32901f003e72c" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt; provides the interface of storable arrays. They are instances of class &lt;code&gt;&lt;a href=&quot;data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; (with the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fc78cc7268113b6d14c7ba3a0c68ede04edd9f" translate="yes" xml:space="preserve">
          <source>Module &lt;code&gt;Y&lt;/code&gt; exports all the entities defined in &lt;code&gt;Y&lt;/code&gt;, namely the data constructors &lt;code&gt;D1&lt;/code&gt; and &lt;code&gt;D2&lt;/code&gt;, and &lt;em&gt;implicitly&lt;/em&gt; the data family &lt;code&gt;D&lt;/code&gt;, even though it&amp;rsquo;s defined in &lt;code&gt;X&lt;/code&gt;. This means you can write &lt;code&gt;import Y( D(D1,D2) )&lt;/code&gt;&lt;em&gt;without&lt;/em&gt; giving an explicit export list like this:</source>
          <target state="translated">M&amp;oacute;dulo &lt;code&gt;Y&lt;/code&gt; exporta todas las entidades definidas en &lt;code&gt;Y&lt;/code&gt; , a saber, el constructores de datos &lt;code&gt;D1&lt;/code&gt; y &lt;code&gt;D2&lt;/code&gt; , y &lt;em&gt;de manera impl&amp;iacute;cita&lt;/em&gt; la familia de datos &lt;code&gt;D&lt;/code&gt; , a pesar de que est&amp;aacute; definido en &lt;code&gt;X&lt;/code&gt; . Esto significa que puede escribir &lt;code&gt;import Y( D(D1,D2) )&lt;/code&gt; &lt;em&gt;sin&lt;/em&gt; dar una lista de exportaci&amp;oacute;n expl&amp;iacute;cita como esta:</target>
        </trans-unit>
        <trans-unit id="7ca5283a9401b368ad7082d2368aee85af976008" translate="yes" xml:space="preserve">
          <source>Module Data.Typeable re-exported for convenience</source>
          <target state="translated">Datos del módulo.Se pueden mecanografiar y reexportar para mayor comodidad.</target>
        </trans-unit>
        <trans-unit id="ec22b40d47f573ceb3764447b0fd39403f6d6c2d" translate="yes" xml:space="preserve">
          <source>Module authors using the &lt;a href=&quot;#extension-Trustworthy&quot;&gt;&lt;code&gt;Trustworthy&lt;/code&gt;&lt;/a&gt; language extension for a module &lt;code&gt;M&lt;/code&gt; should ensure that &lt;code&gt;M&lt;/code&gt;&amp;lsquo;s public API (the symbols exposed by its export list) can&amp;rsquo;t be used in an unsafe manner. This mean that symbols exported should respect type safety and referential transparency.</source>
          <target state="translated">Los autores de m&amp;oacute;dulos que utilicen la extensi&amp;oacute;n de lenguaje &lt;a href=&quot;#extension-Trustworthy&quot;&gt; &lt;code&gt;Trustworthy&lt;/code&gt; &lt;/a&gt; para un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; deben asegurarse de que la API p&amp;uacute;blica de &lt;code&gt;M&lt;/code&gt; (los s&amp;iacute;mbolos expuestos por su lista de exportaci&amp;oacute;n) no se puedan utilizar de forma insegura. Esto significa que los s&amp;iacute;mbolos exportados deben respetar la seguridad de los tipos y la transparencia referencial.</target>
        </trans-unit>
        <trans-unit id="91ba4bca6673e09b576e66d35a05c3026f377972" translate="yes" xml:space="preserve">
          <source>Module authors using the &lt;a href=&quot;#extension-Trustworthy&quot;&gt;&lt;code&gt;Trustworthy&lt;/code&gt;&lt;/a&gt; language extension for a module &lt;code&gt;M&lt;/code&gt; should ensure that &lt;code&gt;M&lt;/code&gt;&amp;rsquo;s public API (the symbols exposed by its export list) can&amp;rsquo;t be used in an unsafe manner. This mean that symbols exported should respect type safety and referential transparency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b8208bcfdac835bd589f0a0f394caee9130541" translate="yes" xml:space="preserve">
          <source>Module names</source>
          <target state="translated">Nombres de los módulos</target>
        </trans-unit>
        <trans-unit id="9ae357fac1f871ab051702ee0509a637ca73c454" translate="yes" xml:space="preserve">
          <source>Module over monad operator for &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Code&quot;&gt;Code&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb27714f2a03885159601b0fa4f8b118e5c3a120" translate="yes" xml:space="preserve">
          <source>Module prefix of a name, if it exists.</source>
          <target state="translated">Prefijo del módulo de un nombre,si existe.</target>
        </trans-unit>
        <trans-unit id="00d767e865b30777f85d5e023407cb4c65ee4110" translate="yes" xml:space="preserve">
          <source>Module signatures actually consist of two closely related features:</source>
          <target state="translated">Las firmas de los módulos consisten en realidad en dos características estrechamente relacionadas:</target>
        </trans-unit>
        <trans-unit id="80246c9711a49a29d3a5e03817c371dd6ae4cbfc" translate="yes" xml:space="preserve">
          <source>ModuleAnnotation</source>
          <target state="translated">ModuleAnnotation</target>
        </trans-unit>
        <trans-unit id="538831de95e10dc8de9dab5d4714b91d07aa6e76" translate="yes" xml:space="preserve">
          <source>ModuleInfo</source>
          <target state="translated">ModuleInfo</target>
        </trans-unit>
        <trans-unit id="17c49dd9a2601ed05a4293ce1094e4ae4f9be60b" translate="yes" xml:space="preserve">
          <source>Modules compiled with this option can be freely mixed with modules compiled without it; indeed, most libraries will typically be compiled without &lt;a href=&quot;#ghc-flag--fhpc&quot;&gt;&lt;code&gt;-fhpc&lt;/code&gt;&lt;/a&gt;. When the program is run, coverage data will only be generated for those modules that were compiled with &lt;a href=&quot;#ghc-flag--fhpc&quot;&gt;&lt;code&gt;-fhpc&lt;/code&gt;&lt;/a&gt;, and the &lt;strong&gt;hpc&lt;/strong&gt; tool will only show information about those modules.</source>
          <target state="translated">Los m&amp;oacute;dulos compilados con esta opci&amp;oacute;n se pueden mezclar libremente con m&amp;oacute;dulos compilados sin ella; de hecho, la mayor&amp;iacute;a de las bibliotecas normalmente se compilan sin &lt;a href=&quot;#ghc-flag--fhpc&quot;&gt; &lt;code&gt;-fhpc&lt;/code&gt; &lt;/a&gt; . Cuando se ejecuta el programa, los datos de cobertura solo se generar&amp;aacute;n para aquellos m&amp;oacute;dulos que se compilaron con &lt;a href=&quot;#ghc-flag--fhpc&quot;&gt; &lt;code&gt;-fhpc&lt;/code&gt; &lt;/a&gt; , y la herramienta &lt;strong&gt;hpc&lt;/strong&gt; solo mostrar&amp;aacute; informaci&amp;oacute;n sobre esos m&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="7f34a515a9849c6d1d6359aa243ee958639d54b5" translate="yes" xml:space="preserve">
          <source>Modules reexported by this package. This list takes the form of &lt;code&gt;pkg:OldName as NewName (A@orig-pkg-0.1-HASH)&lt;/code&gt;: the first portion of the string is the user-written reexport specification (possibly omitting the package qualifier and the renaming), while the parenthetical is the original package which exposed the module under are particular name. Reexported modules have a relaxed overlap constraint: it&amp;rsquo;s permissible for two packages to reexport the same module as the same name if the reexported moduleis identical.</source>
          <target state="translated">M&amp;oacute;dulos reexportados por este paquete. Esta lista toma la forma de &lt;code&gt;pkg:OldName as NewName (A@orig-pkg-0.1-HASH)&lt;/code&gt; : la primera parte de la cadena es la especificaci&amp;oacute;n de reexportaci&amp;oacute;n escrita por el usuario (posiblemente omitiendo el calificador del paquete y el cambio de nombre), mientras que el par&amp;eacute;ntesis es el paquete original que expuso el m&amp;oacute;dulo bajo un nombre particular. Los m&amp;oacute;dulos reexportados tienen una restricci&amp;oacute;n de superposici&amp;oacute;n relajada: est&amp;aacute; permitido que dos paquetes reexporten el mismo m&amp;oacute;dulo con el mismo nombre si el m&amp;oacute;dulo reexportado es id&amp;eacute;ntico.</target>
        </trans-unit>
        <trans-unit id="44309d68cfcd4f5d92e2cc5899604b23cc2ee7ad" translate="yes" xml:space="preserve">
          <source>Modules using unboxed tuples or sums will automatically enable &lt;a href=&quot;phases#ghc-flag--fobject-code&quot;&gt;&lt;code&gt;-fobject-code&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bc4d952ccd3346da0175b0abdc685fcb3a3272" translate="yes" xml:space="preserve">
          <source>Modulus of natural numbers. &lt;code&gt;Mod x 0&lt;/code&gt; is undefined (i.e., it cannot be reduced).</source>
          <target state="translated">M&amp;oacute;dulo de n&amp;uacute;meros naturales. &lt;code&gt;Mod x 0&lt;/code&gt; no est&amp;aacute; definido (es decir, no se puede reducir).</target>
        </trans-unit>
        <trans-unit id="11531c3c6a7c6d49562c188b9bdc843a54288d30" translate="yes" xml:space="preserve">
          <source>Monad</source>
          <target state="translated">Monad</target>
        </trans-unit>
        <trans-unit id="f117e306f3bfe1ed114c24f6bd68d2322d3b742f" translate="yes" xml:space="preserve">
          <source>Monad comprehensions generalise the list comprehension notation, including parallel comprehensions (&lt;a href=&quot;#parallel-list-comprehensions&quot;&gt;Parallel List Comprehensions&lt;/a&gt;) and transform comprehensions (&lt;a href=&quot;#generalised-list-comprehensions&quot;&gt;Generalised (SQL-like) List Comprehensions&lt;/a&gt;) to work for any monad.</source>
          <target state="translated">Las comprensiones de m&amp;oacute;nadas generalizan la notaci&amp;oacute;n de comprensi&amp;oacute;n de listas, incluidas las comprensiones paralelas ( &lt;a href=&quot;#parallel-list-comprehensions&quot;&gt;Comprensiones de&lt;/a&gt; listas paralelas ) y las comprensiones de transformaci&amp;oacute;n ( Comprensiones de listas &lt;a href=&quot;#generalised-list-comprehensions&quot;&gt;generalizadas (similares a SQL)&lt;/a&gt; ) para que funcionen con cualquier m&amp;oacute;nada.</target>
        </trans-unit>
        <trans-unit id="e9a1db2a2bc244dd09436f1dc6c3b604a440f9fe" translate="yes" xml:space="preserve">
          <source>Monad comprehensions generalise the list comprehension notation, including parallel comprehensions (&lt;a href=&quot;parallel_list_comprehensions#parallel-list-comprehensions&quot;&gt;Parallel List Comprehensions&lt;/a&gt;) and transform comprehensions (&lt;a href=&quot;generalised_list_comprehensions#generalised-list-comprehensions&quot;&gt;Generalised (SQL-like) List Comprehensions&lt;/a&gt;) to work for any monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b154b6a867643b57ffe3e50fb7555800ae79d0a" translate="yes" xml:space="preserve">
          <source>Monad comprehensions support rebindable syntax (&lt;a href=&quot;#rebindable-syntax&quot;&gt;Rebindable syntax and the implicit Prelude import&lt;/a&gt;). Without rebindable syntax, the operators from the &amp;ldquo;standard binding&amp;rdquo; module are used; with rebindable syntax, the operators are looked up in the current lexical scope. For example, parallel comprehensions will be typechecked and desugared using whatever &amp;ldquo;&lt;code&gt;mzip&lt;/code&gt;&amp;rdquo; is in scope.</source>
          <target state="translated">Las comprensiones de m&amp;oacute;nadas admiten la sintaxis rebindable (sintaxis &lt;a href=&quot;#rebindable-syntax&quot;&gt;Rebindable y la importaci&amp;oacute;n impl&amp;iacute;cita de Prelude&lt;/a&gt; ). Sin sintaxis rebindable, se utilizan los operadores del m&amp;oacute;dulo &quot;enlace est&amp;aacute;ndar&quot;; con sintaxis que se puede volver a enlazar, los operadores se buscan en el &amp;aacute;mbito l&amp;eacute;xico actual. Por ejemplo, las comprensiones paralelas ser&amp;aacute;n revisadas y desazucaradas usando cualquier &quot; &lt;code&gt;mzip&lt;/code&gt; &quot; que est&amp;eacute; dentro del alcance.</target>
        </trans-unit>
        <trans-unit id="7cb902b1da8088200b68ff6ba9cddaada5c6c71a" translate="yes" xml:space="preserve">
          <source>Monad comprehensions support rebindable syntax (&lt;a href=&quot;rebindable_syntax#rebindable-syntax&quot;&gt;Rebindable syntax and the implicit Prelude import&lt;/a&gt;). Without rebindable syntax, the operators from the &amp;ldquo;standard binding&amp;rdquo; module are used; with rebindable syntax, the operators are looked up in the current lexical scope. For example, parallel comprehensions will be typechecked and desugared using whatever &amp;ldquo;&lt;code&gt;mzip&lt;/code&gt;&amp;rdquo; is in scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9118814255c8cbff0f92707b31e2747bffbb4a14" translate="yes" xml:space="preserve">
          <source>Monad comprehensions support:</source>
          <target state="translated">Apoyo a la comprensión de la mónada:</target>
        </trans-unit>
        <trans-unit id="ccf5f31df2b47a5c8b3c7b4b8bec553c0e566b1a" translate="yes" xml:space="preserve">
          <source>Monad transformation</source>
          <target state="translated">Transformación de la mónada</target>
        </trans-unit>
        <trans-unit id="1c0fd921dbc28d4c0620875213e77e22d440c417" translate="yes" xml:space="preserve">
          <source>Monad transformations</source>
          <target state="translated">Transformaciones de la mónada</target>
        </trans-unit>
        <trans-unit id="b85021f1542ee4ad142b965dc1641cf10fd4260f" translate="yes" xml:space="preserve">
          <source>Monad values are functions from the environment to a value. The bound function is applied to the bound value, and both have access to the shared environment.</source>
          <target state="translated">Los valores de la mónada son funciones del medio ambiente a un valor.La función ligada se aplica al valor ligado,y ambos tienen acceso al entorno compartido.</target>
        </trans-unit>
        <trans-unit id="5a1aa98499a1d957e619f8fa4af2de6d1152500b" translate="yes" xml:space="preserve">
          <source>MonadComprehensions</source>
          <target state="translated">MonadComprehensions</target>
        </trans-unit>
        <trans-unit id="c6fb342904057550b8ef01f426ca92e465116ed4" translate="yes" xml:space="preserve">
          <source>MonadCont</source>
          <target state="translated">MonadCont</target>
        </trans-unit>
        <trans-unit id="89861c606303650c7e7f0d7c743da67de31d69c7" translate="yes" xml:space="preserve">
          <source>MonadCont class</source>
          <target state="translated">Clase de MonadCont</target>
        </trans-unit>
        <trans-unit id="39a661caab336fa22d832d7beffd7388def93e46" translate="yes" xml:space="preserve">
          <source>MonadError</source>
          <target state="translated">MonadError</target>
        </trans-unit>
        <trans-unit id="6971cd3387fcb89462309d104896a63aacd3ef19" translate="yes" xml:space="preserve">
          <source>MonadException</source>
          <target state="translated">MonadException</target>
        </trans-unit>
        <trans-unit id="16fc28da849b4c8c2a56c99fe357bebb2ee341a7" translate="yes" xml:space="preserve">
          <source>MonadFail</source>
          <target state="translated">MonadFail</target>
        </trans-unit>
        <trans-unit id="7fdd52d0e4c29c94ae163aa3e69f06596bf4ebd0" translate="yes" xml:space="preserve">
          <source>MonadFailDesugaring</source>
          <target state="translated">MonadFailDesugaring</target>
        </trans-unit>
        <trans-unit id="8cd3e027e126ef51355bf4e476d5b9c913c5824c" translate="yes" xml:space="preserve">
          <source>MonadFix</source>
          <target state="translated">MonadFix</target>
        </trans-unit>
        <trans-unit id="464a90d352252a57d56693a4858884c98810e3a1" translate="yes" xml:space="preserve">
          <source>MonadIO</source>
          <target state="translated">MonadIO</target>
        </trans-unit>
        <trans-unit id="741fdf5e9791ce30c278a5afdbd3129dd2c1ead9" translate="yes" xml:space="preserve">
          <source>MonadPlus</source>
          <target state="translated">MonadPlus</target>
        </trans-unit>
        <trans-unit id="e59b4d8e1e1b084ca225560b46a86c3f02b6c3c8" translate="yes" xml:space="preserve">
          <source>MonadReader</source>
          <target state="translated">MonadReader</target>
        </trans-unit>
        <trans-unit id="a68c00a3ea80c75e5ccf937dfcb38fee6f14dbc7" translate="yes" xml:space="preserve">
          <source>MonadReader class</source>
          <target state="translated">Clase de MonadReader</target>
        </trans-unit>
        <trans-unit id="4dbbde36c5c41657a758435796e76b6fee9c0240" translate="yes" xml:space="preserve">
          <source>MonadState</source>
          <target state="translated">MonadState</target>
        </trans-unit>
        <trans-unit id="f176c139b4727308ec824a9344e742f670f0aa3b" translate="yes" xml:space="preserve">
          <source>MonadState class</source>
          <target state="translated">Clase MonadState</target>
        </trans-unit>
        <trans-unit id="a2e64d3be4f20e02142a613432a291ee3dae4677" translate="yes" xml:space="preserve">
          <source>MonadState class.</source>
          <target state="translated">Clase MonadState.</target>
        </trans-unit>
        <trans-unit id="29e37501f89d2caf27053c9fb3f8913750d9897a" translate="yes" xml:space="preserve">
          <source>MonadTrans</source>
          <target state="translated">MonadTrans</target>
        </trans-unit>
        <trans-unit id="3f2f8d76eb3c2357f757275d57fffc9c8d4ee396" translate="yes" xml:space="preserve">
          <source>MonadTrans (&lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt; s u)</source>
          <target state="translated">MonadTrans ( &lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt; su)</target>
        </trans-unit>
        <trans-unit id="60a504062889fae8b9e846460fc07b21f50fb371" translate="yes" xml:space="preserve">
          <source>MonadTrans (&lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt; s u)</source>
          <target state="translated">MonadTrans ( &lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt; su)</target>
        </trans-unit>
        <trans-unit id="652f00fb36c1c38645bc9e90431a168567726128" translate="yes" xml:space="preserve">
          <source>MonadWriter</source>
          <target state="translated">MonadWriter</target>
        </trans-unit>
        <trans-unit id="f9be51da3714e0cf4aee03cf4cecccec8f06c1ad" translate="yes" xml:space="preserve">
          <source>MonadWriter class</source>
          <target state="translated">Clase de MonadWriter</target>
        </trans-unit>
        <trans-unit id="52dae74b8add8e5bac5ef90f8e6def33af0626f8" translate="yes" xml:space="preserve">
          <source>MonadZip</source>
          <target state="translated">MonadZip</target>
        </trans-unit>
        <trans-unit id="37921d15310812cb15bb950e0e8c69478968709e" translate="yes" xml:space="preserve">
          <source>Monadic actions</source>
          <target state="translated">Acciones monádicas</target>
        </trans-unit>
        <trans-unit id="be38a4e3e1a34b178a11a5fbcae21f0a5b3e86dc" translate="yes" xml:space="preserve">
          <source>Monadic fixpoints.</source>
          <target state="translated">Fichas monádicas.</target>
        </trans-unit>
        <trans-unit id="79464d099a2a04a0be206b18bf0034c16bdc124c" translate="yes" xml:space="preserve">
          <source>Monadic fold over the elements of a structure, associating to the left, i.e. from left to right.</source>
          <target state="translated">Pliegue monádico sobre los elementos de una estructura,asociándose a la izquierda,es decir,de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="0f4ba0ee1732f5a3212ba30683790be701be210c" translate="yes" xml:space="preserve">
          <source>Monadic fold over the elements of a structure, associating to the right, i.e. from right to left.</source>
          <target state="translated">Pliegue monádico sobre los elementos de una estructura,asociándose a la derecha,es decir,de derecha a izquierda.</target>
        </trans-unit>
        <trans-unit id="ccb232023546e12a237e28f888ebb5702510f0c0" translate="yes" xml:space="preserve">
          <source>Monadic fold over the elements of a structure. This type of fold is left-associative in the monadic effects, and right-associative in the output value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2c7207e0e94b1363bbea4d7345d4fdd0da8444" translate="yes" xml:space="preserve">
          <source>Monadic fold over the elements of a structure. This type of fold is right-associative in the monadic effects, and left-associative in the output value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5595a6b57f768b1b94cd5faeef182cec9288c190" translate="yes" xml:space="preserve">
          <source>Monadic forest builder, in breadth-first order</source>
          <target state="translated">Constructor de bosques monádicos,en primer orden de amplitud</target>
        </trans-unit>
        <trans-unit id="8b5e9251f6a7731c5728c4734b226c8f0fb9eb58" translate="yes" xml:space="preserve">
          <source>Monadic forest builder, in depth-first order</source>
          <target state="translated">Constructora de bosques monádicos,en primer orden de profundidad</target>
        </trans-unit>
        <trans-unit id="92e8f6d8093ef19a3fbeb20205bdce42d7b88c0f" translate="yes" xml:space="preserve">
          <source>Monadic front-end to Text.PrettyPrint</source>
          <target state="translated">El front-end monádico de Text.PrettyPrint</target>
        </trans-unit>
        <trans-unit id="4700a1dc5dbcbeb872e70164fe9a3ec9d66a7714" translate="yes" xml:space="preserve">
          <source>Monadic lifting operators</source>
          <target state="translated">Operadores de elevación monádicos</target>
        </trans-unit>
        <trans-unit id="cb3f1c0525f059418665af747bb13d9f2d7d0703" translate="yes" xml:space="preserve">
          <source>Monadic state transformer.</source>
          <target state="translated">Transformador de estado monádico.</target>
        </trans-unit>
        <trans-unit id="afd12b25574336c915d17d02eed63bdd6790c29d" translate="yes" xml:space="preserve">
          <source>Monadic tree builder, in breadth-first order.</source>
          <target state="translated">Constructor de árboles monádicos,en orden de amplitud.</target>
        </trans-unit>
        <trans-unit id="1c0844a453139b42e240b3dbd8899eb7e45afa2d" translate="yes" xml:space="preserve">
          <source>Monadic tree builder, in depth-first order.</source>
          <target state="translated">Constructor de árboles monádicos,en primer orden de profundidad.</target>
        </trans-unit>
        <trans-unit id="751701098af9ceab4eca10e3e9e72843e8819c96" translate="yes" xml:space="preserve">
          <source>Monadic variation on &lt;code&gt;&lt;a href=&quot;data-data#v:fromConstrB&quot;&gt;fromConstrB&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Variaci&amp;oacute;n mon&amp;aacute;dica de &lt;code&gt;&lt;a href=&quot;data-data#v:fromConstrB&quot;&gt;fromConstrB&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9159bd85753caa0996e8d4ad3b128a9014c50e05" translate="yes" xml:space="preserve">
          <source>Monadic zipping (used for monad comprehensions)</source>
          <target state="translated">Cremallera monádica (utilizada para la comprensión de la mónada)</target>
        </trans-unit>
        <trans-unit id="250083fc6df0956d1673cca1cb1611bfc11ab137" translate="yes" xml:space="preserve">
          <source>Monads and functors</source>
          <target state="translated">Las mónadas y los functores</target>
        </trans-unit>
        <trans-unit id="9fade08cca7ae6ce3b29ed4f480ac77d554be713" translate="yes" xml:space="preserve">
          <source>Monads having fixed points with a 'knot-tying' semantics. Instances of &lt;code&gt;&lt;a href=&quot;control-monad-fix#t:MonadFix&quot;&gt;MonadFix&lt;/a&gt;&lt;/code&gt; should satisfy the following laws:</source>
          <target state="translated">M&amp;oacute;nadas que tienen puntos fijos con una sem&amp;aacute;ntica de 'atar nudos'. Las instancias de &lt;code&gt;&lt;a href=&quot;control-monad-fix#t:MonadFix&quot;&gt;MonadFix&lt;/a&gt;&lt;/code&gt; deben cumplir las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="3ab257a5f129af1981f621c8ddf84b2fd68c88ba" translate="yes" xml:space="preserve">
          <source>Monads in which &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computations may be embedded. Any monad built by applying a sequence of monad transformers to the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad will be an instance of this class.</source>
          <target state="translated">M&amp;oacute;nadas en las que pueden incorporarse c&amp;aacute;lculos de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Cualquier m&amp;oacute;nada construida aplicando una secuencia de transformadores de m&amp;oacute;nada a la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; ser&amp;aacute; una instancia de esta clase.</target>
        </trans-unit>
        <trans-unit id="bec921c5487ea6eaf795a69781d0904af33f534a" translate="yes" xml:space="preserve">
          <source>Monads that also support choice and failure.</source>
          <target state="translated">Mónadas que también apoyan la elección y el fracaso.</target>
        </trans-unit>
        <trans-unit id="20f29bb326b4b655b5b0354aa1b0ff90343d0044" translate="yes" xml:space="preserve">
          <source>Monads with error handling</source>
          <target state="translated">Mónadas con manejo de errores</target>
        </trans-unit>
        <trans-unit id="932eeb1076c85e522f02e15441fa371e3fd000ac" translate="yes" xml:space="preserve">
          <source>Monday</source>
          <target state="translated">Monday</target>
        </trans-unit>
        <trans-unit id="36181aae20a5a2ae5ba1584c42b3b9779dffec5e" translate="yes" xml:space="preserve">
          <source>Monday-starting week number (as &lt;code&gt;%W&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">N&amp;uacute;mero de la semana de inicio del lunes (como &lt;code&gt;%W&lt;/code&gt; en &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b5307adf2da7c702cf60f2a0dad66c188a1c8b3b" translate="yes" xml:space="preserve">
          <source>MonoLocalBinds</source>
          <target state="translated">MonoLocalBinds</target>
        </trans-unit>
        <trans-unit id="db3026559eb3ab8db4d183918b45caef643c418f" translate="yes" xml:space="preserve">
          <source>MonoPatBinds</source>
          <target state="translated">MonoPatBinds</target>
        </trans-unit>
        <trans-unit id="9c5483b826379f2567e8ee89ca55b9c52e011529" translate="yes" xml:space="preserve">
          <source>Monoid</source>
          <target state="translated">Monoid</target>
        </trans-unit>
        <trans-unit id="0220c03411dbd64cddd0b0ccca5475f10ebe0331" translate="yes" xml:space="preserve">
          <source>Monoid functions</source>
          <target state="translated">Funciones monoides</target>
        </trans-unit>
        <trans-unit id="e0ac9d688b93e0a5de738795a1f225343db79584" translate="yes" xml:space="preserve">
          <source>Monoid operations</source>
          <target state="translated">Operaciones monoides</target>
        </trans-unit>
        <trans-unit id="3a1b4f214513abdcdf27e4ab6401c3d176d9757e" translate="yes" xml:space="preserve">
          <source>Monoid under &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--124--62-&quot;&gt;&amp;lt;|&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Monoide debajo de &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--124--62-&quot;&gt;&amp;lt;|&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f6543d6abb3998d23fb62d545057fa1ab18548a" translate="yes" xml:space="preserve">
          <source>Monoid under addition.</source>
          <target state="translated">Monoide bajo adición.</target>
        </trans-unit>
        <trans-unit id="7029b0947bbd5af2e213d2e9bb3c221593a86f9d" translate="yes" xml:space="preserve">
          <source>Monoid under multiplication.</source>
          <target state="translated">Monoide en la multiplicación.</target>
        </trans-unit>
        <trans-unit id="3e61bbeed3f08fcc986f97d9c436530dd737834a" translate="yes" xml:space="preserve">
          <source>Monomorphic equality operators</source>
          <target state="translated">Operadores de igualdad monomórfica</target>
        </trans-unit>
        <trans-unit id="129d16939021f97809d6e9d8b3a79a644e52d05b" translate="yes" xml:space="preserve">
          <source>MonomorphismRestriction</source>
          <target state="translated">MonomorphismRestriction</target>
        </trans-unit>
        <trans-unit id="b9bd340d94bbe1799fa2827ad776ca607d3614ba" translate="yes" xml:space="preserve">
          <source>Morally, builder primitives are like functions &lt;code&gt;a -&amp;gt; Builder&lt;/code&gt;, that is they take a value and encode it as a sequence of bytes, represented as a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;. Of course their implementation is a bit more specialised.</source>
          <target state="translated">Moralmente, las primitivas de constructor son como funciones &lt;code&gt;a -&amp;gt; Builder&lt;/code&gt; , es decir, toman un valor y lo codifican como una secuencia de bytes, representada como &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; . Por supuesto, su implementaci&amp;oacute;n es un poco m&amp;aacute;s especializada.</target>
        </trans-unit>
        <trans-unit id="d66f6edcbd906b2619c8ac8ef5055169fffaa86c" translate="yes" xml:space="preserve">
          <source>More concretely, if &lt;code&gt;nameAndLineCount&lt;/code&gt; counts the number of lines in a file, returning a pair with input filename and the line count, then traversal over a list of file names produces an IO action that evaluates to a list of &lt;strong&gt;&lt;code&gt;(fileName, lineCount)&lt;/code&gt;&lt;/strong&gt; pairs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9713777f0ffc9301f9aa702f90a88fc96cd4daa" translate="yes" xml:space="preserve">
          <source>More concretely, the input to a command consists of a pair of an environment and a stack. Each value on the stack is paired with the remainder of the stack, with an empty stack being &lt;code&gt;()&lt;/code&gt;. So operators like &lt;code&gt;handleA&lt;/code&gt; that pass extra inputs to their subcommands can be designed for use with the notation by placing the values on the stack paired with the environment in this way. More precisely, the type of each argument of the operator (and its result) should have the form</source>
          <target state="translated">M&amp;aacute;s concretamente, la entrada a un comando consta de un par de un entorno y una pila. Cada valor de la pila se empareja con el resto de la pila, siendo una pila vac&amp;iacute;a &lt;code&gt;()&lt;/code&gt; . Entonces, los operadores como &lt;code&gt;handleA&lt;/code&gt; que pasan entradas adicionales a sus subcomandos pueden dise&amp;ntilde;arse para usar con la notaci&amp;oacute;n colocando los valores en la pila emparejados con el entorno de esta manera. M&amp;aacute;s precisamente, el tipo de cada argumento del operador (y su resultado) debe tener la forma</target>
        </trans-unit>
        <trans-unit id="8806e84b84beada4d40a025a8b169a5dd3603418" translate="yes" xml:space="preserve">
          <source>More crucially, we can also directly define the key building block for generative recursion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b13373cbfa12cceaf613513d103c95459cbf88" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;debugging#options-debugging&quot;&gt;Debugging the compiler&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;debugging#options-debugging&quot;&gt;Depurar el compilador&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0cecd44911066c36d923fdbe5a19b53168e3dcf" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;extending_ghc#compiler-plugins&quot;&gt;Compiler Plugins&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;extending_ghc#compiler-plugins&quot;&gt;complementos del compilador&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17420796ed603dd509d02e3a8d1da517181cd7d5" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;ghci#ghci-dot-files&quot;&gt;The .ghci and .haskeline files&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en los &lt;a href=&quot;ghci#ghci-dot-files&quot;&gt;archivos .ghci y .haskeline&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37e9d2c958040b445e2912cfe73b6aa30dc6a6e6" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;packages#packages&quot;&gt;Packages&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;packages#packages&quot;&gt;Paquetes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baf1294ef868c2abc05ce0421bd9b43c7f792cad" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;phases#c-pre-processor&quot;&gt;Options affecting the C pre-processor&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;phases#c-pre-processor&quot;&gt;Opciones que afectan al preprocesador C&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51d1ab0e22b2ab0d231fb2c5972d2be780b12e73" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;phases#forcing-options-through&quot;&gt;Forcing options to a particular phase&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;phases#forcing-options-through&quot;&gt;Forzar opciones a una fase en particular&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7983553fdee60c62d0851647dd220831bd52e4c8" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;phases#options-codegen&quot;&gt;Options affecting code generation&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;phases#options-codegen&quot;&gt;Opciones que afectan la generaci&amp;oacute;n de c&amp;oacute;digo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a16863701609094692f0c3f835ccc3d878e7e100" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;phases#options-linker&quot;&gt;Options affecting linking&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;phases#options-linker&quot;&gt;Opciones que afectan a la vinculaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8adac53d0127ee0d97906718b6336057dbda2f90" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;phases#replacing-phases&quot;&gt;Replacing the program for one or more phases&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;phases#replacing-phases&quot;&gt;Reemplazo del programa para una o m&amp;aacute;s fases&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31663a68122cfc30712ddae060ef7c0c26fb2a9b" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;profiling#hpc&quot;&gt;Observing Code Coverage&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;profiling#hpc&quot;&gt;Observaci&amp;oacute;n de la cobertura del c&amp;oacute;digo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2f3306e90d0fd9056b2e721c5d6c4dbfb662ff2" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;profiling#profiling&quot;&gt;Profiling&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;profiling#profiling&quot;&gt;Perfiles&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57bc71d308e6ee5ef978190de473b462803d8a22" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;separate_compilation#hi-options&quot;&gt;Other options related to interface files&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;separate_compilation#hi-options&quot;&gt;Otras opciones relacionadas con archivos de interfaz&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32f905a10099284e5b8eb48c14cea142a33e05ef" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;separate_compilation#keeping-intermediates&quot;&gt;Keeping Intermediate Files&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;separate_compilation#keeping-intermediates&quot;&gt;Conservaci&amp;oacute;n de archivos intermedios&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01ef1b0434fb54d267252cfe67e63278a877ae6d" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;separate_compilation#options-output&quot;&gt;Redirecting the compilation output(s)&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;separate_compilation#options-output&quot;&gt;Redirigir las salidas de la compilaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eac718647e3fed68fe7ca2678bdddded1bfb9bff" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;separate_compilation#recomp&quot;&gt;The recompilation checker&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;separate_compilation#recomp&quot;&gt;el comprobador de recopilaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a74b1204653431c31312edd9978554b178635f3f" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;separate_compilation#search-path&quot;&gt;The search path&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;separate_compilation#search-path&quot;&gt;La ruta de b&amp;uacute;squeda&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9dc4a10a5929dae029a66e7ac4365b025fb671f9" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;separate_compilation#temp-files&quot;&gt;Redirecting temporary files&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;separate_compilation#temp-files&quot;&gt;Redirigir archivos temporales&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0af5bfe303303a371ced3d780b07e43b27e4b3ba" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;using#modes&quot;&gt;Modes of operation&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;using#modes&quot;&gt;Modos de funcionamiento&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1408534385bbc206247b2d0cacd5fc927e1376cf" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;using#options-help&quot;&gt;Verbosity options&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en las &lt;a href=&quot;using#options-help&quot;&gt;opciones de verbosidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4561b34d24c52f31aefc4effb398748be0d2b234" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;using#options-order&quot;&gt;Batch compiler mode&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en el &lt;a href=&quot;using#options-order&quot;&gt;modo compilador por lotes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="968f4ed399272e126f045721eacf076df218221c" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;using#options-platform&quot;&gt;Platform-specific Flags&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;using#options-platform&quot;&gt;Banderas espec&amp;iacute;ficas de la plataforma&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="920c16a3909f0ffbf5534e62118ba2d6b6ff57fd" translate="yes" xml:space="preserve">
          <source>More details in &lt;a href=&quot;using-warnings#options-sanity&quot;&gt;Warnings and sanity-checking&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s detalles en &lt;a href=&quot;using-warnings#options-sanity&quot;&gt;Advertencias y comprobaci&amp;oacute;n de cordura&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50fd034f800c349a7431cd23c8f6ce2a124f77fa" translate="yes" xml:space="preserve">
          <source>More details:</source>
          <target state="translated">Más detalles:</target>
        </trans-unit>
        <trans-unit id="a5c3d993dce9c18048d2dd451f76a4bbd8fe5e29" translate="yes" xml:space="preserve">
          <source>More documentation can be found in the &lt;a href=&quot;https://wiki.haskell.org/Functional_dependencies&quot;&gt;Haskell Wiki&lt;/a&gt;.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s documentaci&amp;oacute;n en la &lt;a href=&quot;https://wiki.haskell.org/Functional_dependencies&quot;&gt;Wiki de Haskell&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6ff0bd29737185cd5b1918e0904197bf24a1392" translate="yes" xml:space="preserve">
          <source>More formally, the desugaring is as follows. We write &lt;code&gt;D[ e | Q]&lt;/code&gt; to mean the desugaring of the monad comprehension &lt;code&gt;[ e | Q]&lt;/code&gt;:</source>
          <target state="translated">M&amp;aacute;s formalmente, el desugaring es el siguiente. Escribimos &lt;code&gt;D[ e | Q]&lt;/code&gt; para significar el desugaring de la comprensi&amp;oacute;n de la m&amp;oacute;nada &lt;code&gt;[ e | Q]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2085068fa8f84e11b2c779916cc311b96fc67d3f" translate="yes" xml:space="preserve">
          <source>More generally, dependencies take the form &lt;code&gt;x1 ... xn -&amp;gt; y1 ... ym&lt;/code&gt;, where &lt;code&gt;x1&lt;/code&gt;, &amp;hellip;, &lt;code&gt;xn&lt;/code&gt;, and &lt;code&gt;y1&lt;/code&gt;, &amp;hellip;, &lt;code&gt;yn&lt;/code&gt; are type variables with n&amp;gt;0 and m&amp;gt;=0, meaning that the &lt;code&gt;y&lt;/code&gt; parameters are uniquely determined by the &lt;code&gt;x&lt;/code&gt; parameters. Spaces can be used as separators if more than one variable appears on any single side of a dependency, as in &lt;code&gt;t -&amp;gt; a b&lt;/code&gt;. Note that a class may be annotated with multiple dependencies using commas as separators, as in the definition of &lt;code&gt;E&lt;/code&gt; above. Some dependencies that we can write in this notation are redundant, and will be rejected because they don&amp;rsquo;t serve any useful purpose, and may instead indicate an error in the program. Examples of dependencies like this include &lt;code&gt;a -&amp;gt; a&lt;/code&gt;, &lt;code&gt;a -&amp;gt; a a&lt;/code&gt;, &lt;code&gt;a -&amp;gt;&lt;/code&gt;, etc. There can also be some redundancy if multiple dependencies are given, as in &lt;code&gt;a-&amp;gt;b&lt;/code&gt;, &lt;code&gt;b-&amp;gt;c&lt;/code&gt;, &lt;code&gt;a-&amp;gt;c&lt;/code&gt;, and in which some subset implies the remaining dependencies. Examples like this are not treated as errors. Note that dependencies appear only in class declarations, and not in any other part of the language. In particular, the syntax for instance declarations, class constraints, and types is completely unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce620eb436f6437f620c767d1f4df6c98830db2" translate="yes" xml:space="preserve">
          <source>More generally, dependencies take the form &lt;code&gt;x1 ... xn -&amp;gt; y1 ... ym&lt;/code&gt;, where &lt;code&gt;x1&lt;/code&gt;, ..., &lt;code&gt;xn&lt;/code&gt;, and &lt;code&gt;y1&lt;/code&gt;, ..., &lt;code&gt;yn&lt;/code&gt; are type variables with n&amp;gt;0 and m&amp;gt;=0, meaning that the &lt;code&gt;y&lt;/code&gt; parameters are uniquely determined by the &lt;code&gt;x&lt;/code&gt; parameters. Spaces can be used as separators if more than one variable appears on any single side of a dependency, as in &lt;code&gt;t -&amp;gt; a b&lt;/code&gt;. Note that a class may be annotated with multiple dependencies using commas as separators, as in the definition of &lt;code&gt;E&lt;/code&gt; above. Some dependencies that we can write in this notation are redundant, and will be rejected because they don&amp;rsquo;t serve any useful purpose, and may instead indicate an error in the program. Examples of dependencies like this include &lt;code&gt;a -&amp;gt; a&lt;/code&gt;, &lt;code&gt;a -&amp;gt; a a&lt;/code&gt;, &lt;code&gt;a -&amp;gt;&lt;/code&gt;, etc. There can also be some redundancy if multiple dependencies are given, as in &lt;code&gt;a-&amp;gt;b&lt;/code&gt;, &lt;code&gt;b-&amp;gt;c&lt;/code&gt;, &lt;code&gt;a-&amp;gt;c&lt;/code&gt;, and in which some subset implies the remaining dependencies. Examples like this are not treated as errors. Note that dependencies appear only in class declarations, and not in any other part of the language. In particular, the syntax for instance declarations, class constraints, and types is completely unchanged.</source>
          <target state="translated">De manera m&amp;aacute;s general, las dependencias toman la forma &lt;code&gt;x1 ... xn -&amp;gt; y1 ... ym&lt;/code&gt; , donde &lt;code&gt;x1&lt;/code&gt; , ..., &lt;code&gt;xn&lt;/code&gt; y &lt;code&gt;y1&lt;/code&gt; , ..., &lt;code&gt;yn&lt;/code&gt; son variables de tipo con n&amp;gt; 0 ym&amp;gt; = 0, lo que significa que los par&amp;aacute;metros &lt;code&gt;y&lt;/code&gt; est&amp;aacute;n determinados de forma &amp;uacute;nica por los par&amp;aacute;metros &lt;code&gt;x&lt;/code&gt; . Los espacios se pueden usar como separadores si aparece m&amp;aacute;s de una variable en cualquier lado de una dependencia, como en &lt;code&gt;t -&amp;gt; a b&lt;/code&gt; . Tenga en cuenta que una clase se puede anotar con m&amp;uacute;ltiples dependencias usando comas como separadores, como en la definici&amp;oacute;n de &lt;code&gt;E&lt;/code&gt; encima. Algunas dependencias que podemos escribir en esta notaci&amp;oacute;n son redundantes y ser&amp;aacute;n rechazadas porque no sirven para ning&amp;uacute;n prop&amp;oacute;sito &amp;uacute;til y, en cambio, pueden indicar un error en el programa. Ejemplos de dependencias como esta incluyen &lt;code&gt;a -&amp;gt; a&lt;/code&gt; , &lt;code&gt;a -&amp;gt; a a&lt;/code&gt; , &lt;code&gt;a -&amp;gt;&lt;/code&gt; , etc. Tambi&amp;eacute;n puede haber algo de redundancia si se dan m&amp;uacute;ltiples dependencias, como en &lt;code&gt;a-&amp;gt;b&lt;/code&gt; , &lt;code&gt;b-&amp;gt;c&lt;/code&gt; , &lt;code&gt;a-&amp;gt;c&lt;/code&gt; , y en el que alg&amp;uacute;n subconjunto implica las dependencias restantes. Ejemplos como este no se tratan como errores. Tenga en cuenta que las dependencias aparecen solo en las declaraciones de clase y no en ninguna otra parte del lenguaje. En particular, la sintaxis, por ejemplo, declaraciones, restricciones de clase y tipos, no ha cambiado por completo.</target>
        </trans-unit>
        <trans-unit id="174c1aad58978f69590dd72b60851d08b234e600" translate="yes" xml:space="preserve">
          <source>More in-depth information can be found on the &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Roles&quot;&gt;Roles wiki page&lt;/a&gt;</source>
          <target state="translated">Puede encontrar informaci&amp;oacute;n m&amp;aacute;s detallada en la &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Roles&quot;&gt;p&amp;aacute;gina wiki de Roles&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f30bdf45636fdc98dcf55a5628219c150e7f67cd" translate="yes" xml:space="preserve">
          <source>More in-depth information can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/roles&quot;&gt;Roles wiki page&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14ab6cf4fdb8d4413797b405b5b9102d3c1bc86" translate="yes" xml:space="preserve">
          <source>More information is given for explicit holes (i.e. ones that start with an underscore), than for out-of-scope variables, because the latter are often unintended typos, so the extra information is distracting. If you want the detailed information, use a leading underscore to make explicit your intent to use a hole.</source>
          <target state="translated">Se da más información para los agujeros explícitos (es decir,los que comienzan con un guión bajo),que para las variables fuera de alcance,porque estas últimas suelen ser errores tipográficos involuntarios,por lo que la información adicional distrae.Si se desea la información detallada,se utiliza un guión bajo para hacer explícita la intención de utilizar un agujero.</target>
        </trans-unit>
        <trans-unit id="cdb9413519e4acd2573608f8f06f43a109139ea4" translate="yes" xml:space="preserve">
          <source>More precisely, the scoping rules are:</source>
          <target state="translated">Más precisamente,las reglas de alcance son:</target>
        </trans-unit>
        <trans-unit id="1f08e1cae5fd42d45181559f708b9f948ac50f46" translate="yes" xml:space="preserve">
          <source>More precisely, the semantics of pattern matching is given in &lt;a href=&quot;https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-580003.17&quot;&gt;Section 3.17 of the Haskell 2010 report&lt;/a&gt;. To the informal semantics in Section 3.17.2 we add this extra rule:</source>
          <target state="translated">M&amp;aacute;s precisamente, la sem&amp;aacute;ntica de la coincidencia de patrones se da en la &lt;a href=&quot;https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-580003.17&quot;&gt;Secci&amp;oacute;n 3.17 del informe Haskell 2010&lt;/a&gt; . A la sem&amp;aacute;ntica informal de la Secci&amp;oacute;n 3.17.2 agregamos esta regla adicional:</target>
        </trans-unit>
        <trans-unit id="e4c589fb3b275a240038aa72aafa4cfbf0c4831b" translate="yes" xml:space="preserve">
          <source>More precisely, warn if a binding brings into scope a variable that is not used, except if the variable&amp;rsquo;s name starts with an underscore. The &amp;ldquo;starts-with-underscore&amp;rdquo; condition provides a way to selectively disable the warning.</source>
          <target state="translated">M&amp;aacute;s precisamente, advierta si un enlace trae al alcance una variable que no se usa, excepto si el nombre de la variable comienza con un gui&amp;oacute;n bajo. La condici&amp;oacute;n &quot;comienza con subrayado&quot; proporciona una forma de deshabilitar selectivamente la advertencia.</target>
        </trans-unit>
        <trans-unit id="4e142cf9dbc576682f7db5f9767bc39f19e16ad2" translate="yes" xml:space="preserve">
          <source>More sophisticated combinators for expressing parallelism are available from the &lt;code&gt;Control.Parallel.Strategies&lt;/code&gt; module in the &lt;a href=&quot;http://hackage.haskell.org/package/parallel&quot;&gt;parallel package&lt;/a&gt;. This module builds functionality around &lt;code&gt;par&lt;/code&gt;, expressing more elaborate patterns of parallel computation, such as parallel &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">Combinadores m&amp;aacute;s sofisticados para expresar paralelismo est&amp;aacute;n disponibles en el m&amp;oacute;dulo &lt;code&gt;Control.Parallel.Strategies&lt;/code&gt; en el &lt;a href=&quot;http://hackage.haskell.org/package/parallel&quot;&gt;paquete paralelo&lt;/a&gt; . Este m&amp;oacute;dulo crea una funcionalidad en torno a &lt;code&gt;par&lt;/code&gt; , expresando patrones m&amp;aacute;s elaborados de c&amp;aacute;lculo paralelo, como el &lt;code&gt;map&lt;/code&gt; a paralelo .</target>
        </trans-unit>
        <trans-unit id="8ed6b588d942e43b985dc1ef91eaa6acb3407601" translate="yes" xml:space="preserve">
          <source>More sophisticated combinators for expressing parallelism are available from the &lt;code&gt;Control.Parallel.Strategies&lt;/code&gt; module in the &lt;a href=&quot;https://hackage.haskell.org/package/parallel&quot;&gt;parallel package&lt;/a&gt;. This module builds functionality around &lt;code&gt;par&lt;/code&gt;, expressing more elaborate patterns of parallel computation, such as parallel &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efbe8954f7d8bb33318735e14097d00de7a9a64" translate="yes" xml:space="preserve">
          <source>More specifically these byte strings are taken to be in the subset of Unicode covered by code points 0-255. This covers Unicode Basic Latin, Latin-1 Supplement and C0+C1 Controls.</source>
          <target state="translated">Más específicamente,estas cadenas de bytes se consideran en el subconjunto de Unicode cubierto por los puntos de código 0-255.Esto cubre el latín básico de Unicode,el suplemento del latín-1 y los controles C0+C1.</target>
        </trans-unit>
        <trans-unit id="86749f35327922682f80058567d622a5b5a74e48" translate="yes" xml:space="preserve">
          <source>More specifically, consider the following modules:</source>
          <target state="translated">Más específicamente,considere los siguientes módulos:</target>
        </trans-unit>
        <trans-unit id="49ae26a58091afd7797c7d608cef98d9b3bd88ed" translate="yes" xml:space="preserve">
          <source>More substantially, an anonymous records library could provide &lt;code&gt;HasField&lt;/code&gt; instances for its anonymous records, and thus be compatible with the polymorphic record selectors introduced by this proposal. For example, something like this makes it possible to use &lt;code&gt;getField&lt;/code&gt; to access &lt;code&gt;Record&lt;/code&gt; values with the appropriate string in the type-level list of fields:</source>
          <target state="translated">M&amp;aacute;s sustancialmente, una biblioteca de registros an&amp;oacute;nimos podr&amp;iacute;a proporcionar instancias de &lt;code&gt;HasField&lt;/code&gt; para sus registros an&amp;oacute;nimos y, por lo tanto, ser compatible con los selectores de registros polim&amp;oacute;rficos introducidos por esta propuesta. Por ejemplo, algo como esto hace posible usar &lt;code&gt;getField&lt;/code&gt; para acceder a los valores de &lt;code&gt;Record&lt;/code&gt; con la cadena apropiada en la lista de campos de nivel de tipo:</target>
        </trans-unit>
        <trans-unit id="005be1b0ad130c7c10cd96e65aa29871ac012aff" translate="yes" xml:space="preserve">
          <source>Moreover genuinely-recursive superclasses are sometimes useful. Here&amp;rsquo;s a real-life example (#10318)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fbf1fc9f3d27864af0185af07555a2ed71738b" translate="yes" xml:space="preserve">
          <source>Moreover genuninely-recursive superclasses are sometimes useful. Here&amp;rsquo;s a real-life example (#10318)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee6d8add66d57251c294e797e38ba98f856c59e" translate="yes" xml:space="preserve">
          <source>Moreover genuninely-recursive superclasses are sometimes useful. Here&amp;rsquo;s a real-life example (Trac #10318)</source>
          <target state="translated">Adem&amp;aacute;s, las superclases genuninamente recursivas a veces son &amp;uacute;tiles. Aqu&amp;iacute; hay un ejemplo de la vida real (Trac # 10318)</target>
        </trans-unit>
        <trans-unit id="9daae4c546da3c409b18a41ad5d587143e25c7b1" translate="yes" xml:space="preserve">
          <source>Moreover you often don&amp;rsquo;t even need the &lt;a href=&quot;#pragma-SPECIALIZE&quot;&gt;&lt;code&gt;SPECIALIZE&lt;/code&gt;&lt;/a&gt; pragma in the first place. When compiling a module &lt;code&gt;M&lt;/code&gt;, GHC&amp;rsquo;s optimiser (when given the &lt;a href=&quot;../using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; flag) automatically considers each top-level overloaded function declared in &lt;code&gt;M&lt;/code&gt;, and specialises it for the different types at which it is called in &lt;code&gt;M&lt;/code&gt;. The optimiser &lt;em&gt;also&lt;/em&gt; considers each &lt;em&gt;imported&lt;/em&gt;&lt;a href=&quot;#pragma-INLINABLE&quot;&gt;&lt;code&gt;INLINABLE&lt;/code&gt;&lt;/a&gt; overloaded function, and specialises it for the different types at which it is called in &lt;code&gt;M&lt;/code&gt;. So in our example, it would be enough for &lt;code&gt;lookup&lt;/code&gt; to be called at type &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9d1405f104daf49ed40d4d63a24458c96232a6" translate="yes" xml:space="preserve">
          <source>Moreover you often don&amp;rsquo;t even need the &lt;a href=&quot;#pragma-SPECIALIZE&quot;&gt;&lt;code&gt;SPECIALIZE&lt;/code&gt;&lt;/a&gt; pragma in the first place. When compiling a module &lt;code&gt;M&lt;/code&gt;, GHC&amp;rsquo;s optimiser (when given the &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; flag) automatically considers each top-level overloaded function declared in &lt;code&gt;M&lt;/code&gt;, and specialises it for the different types at which it is called in &lt;code&gt;M&lt;/code&gt;. The optimiser &lt;em&gt;also&lt;/em&gt; considers each &lt;em&gt;imported&lt;/em&gt;&lt;a href=&quot;#pragma-INLINABLE&quot;&gt;&lt;code&gt;INLINABLE&lt;/code&gt;&lt;/a&gt; overloaded function, and specialises it for the different types at which it is called in &lt;code&gt;M&lt;/code&gt;. So in our example, it would be enough for &lt;code&gt;lookup&lt;/code&gt; to be called at type &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">Adem&amp;aacute;s, a menudo ni siquiera necesitas el pragma &lt;a href=&quot;#pragma-SPECIALIZE&quot;&gt; &lt;code&gt;SPECIALIZE&lt;/code&gt; &lt;/a&gt; en primer lugar. Al compilar un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; , optimizador de GHC (cuando se administra el &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt; flag) considera autom&amp;aacute;ticamente cada funci&amp;oacute;n sobrecargada de nivel superior declarada en &lt;code&gt;M&lt;/code&gt; , y se especializa para los diferentes tipos a la que se llama en &lt;code&gt;M&lt;/code&gt; . El optimizador &lt;em&gt;tambi&amp;eacute;n&lt;/em&gt; considera cada &lt;em&gt;importado &lt;/em&gt;&lt;a href=&quot;#pragma-INLINABLE&quot;&gt; &lt;code&gt;INLINABLE&lt;/code&gt; &lt;/a&gt; funci&amp;oacute;n sobrecargada, y se especializa para los diferentes tipos a la que se llama en &lt;code&gt;M&lt;/code&gt; . Entonces, en nuestro ejemplo, ser&amp;iacute;a suficiente que se llamara a la &lt;code&gt;lookup&lt;/code&gt; en el tipo &lt;code&gt;T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1b09c524376f62eb132cfc4d87068c7c414ce987" translate="yes" xml:space="preserve">
          <source>Moreover, GHC will only inline the function if it is &lt;em&gt;fully applied&lt;/em&gt;, where &amp;ldquo;fully applied&amp;rdquo; means applied to as many arguments as appear (syntactically) on the LHS of the function definition. For example:</source>
          <target state="translated">Adem&amp;aacute;s, GHC solo integrar&amp;aacute; la funci&amp;oacute;n si se &lt;em&gt;aplica completamente&lt;/em&gt; , donde &quot;completamente aplicado&quot; significa aplicado a tantos argumentos como aparecen (sint&amp;aacute;cticamente) en el lado izquierdo de la definici&amp;oacute;n de funci&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6284ba052c710bcfe1b333b0499c004a62fd7cbd" translate="yes" xml:space="preserve">
          <source>Moreover, a local fixity declaration &lt;em&gt;must&lt;/em&gt; accompany a local binding of that name: it is not possible to revise the fixity of name bound elsewhere, as in</source>
          <target state="translated">Adem&amp;aacute;s, una declaraci&amp;oacute;n de fijeza local &lt;em&gt;debe&lt;/em&gt; acompa&amp;ntilde;ar a un enlace local de ese nombre: no es posible revisar la fijeza del nombre enlazado en otro lugar, como en</target>
        </trans-unit>
        <trans-unit id="435226f4fb8d01545e71ad9e8e0b16ea37149391" translate="yes" xml:space="preserve">
          <source>Moreover, every module that imports &lt;code&gt;Client&lt;/code&gt; (or imports a module that imports &lt;code&gt;Client&lt;/code&gt;, transitively) will &amp;ldquo;see&amp;rdquo;, and make use of, the specialised version of &lt;code&gt;lookup&lt;/code&gt;. You don&amp;rsquo;t need to put a &lt;a href=&quot;#pragma-SPECIALIZE&quot;&gt;&lt;code&gt;SPECIALIZE&lt;/code&gt;&lt;/a&gt; pragma in every module.</source>
          <target state="translated">Adem&amp;aacute;s, cada m&amp;oacute;dulo que importe &lt;code&gt;Client&lt;/code&gt; e (o importe un m&amp;oacute;dulo que importe &lt;code&gt;Client&lt;/code&gt; e , de forma transitiva) &quot;ver&amp;aacute;&quot; y har&amp;aacute; uso de la versi&amp;oacute;n especializada de &lt;code&gt;lookup&lt;/code&gt; . No es necesario poner un pragma &lt;a href=&quot;#pragma-SPECIALIZE&quot;&gt; &lt;code&gt;SPECIALIZE&lt;/code&gt; &lt;/a&gt; en cada m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="641bceca79503a5b46c154c94304a197aa140c0b" translate="yes" xml:space="preserve">
          <source>Moreover, in &lt;code&gt;Applicative&lt;/code&gt; instance declarations:</source>
          <target state="translated">Adem&amp;aacute;s, en &lt;code&gt;Applicative&lt;/code&gt; declaraciones de instancia:</target>
        </trans-unit>
        <trans-unit id="97508f66cdde54922c388601bbdb4ef006e66daf" translate="yes" xml:space="preserve">
          <source>Moreover, in &lt;code&gt;MonadFail&lt;/code&gt; instance declarations:</source>
          <target state="translated">Adem&amp;aacute;s, en las declaraciones de instancia de &lt;code&gt;MonadFail&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="667b008ae7d33f2434031b95fad3289972f0f759" translate="yes" xml:space="preserve">
          <source>Moreover, in &lt;code&gt;Semigroup&lt;/code&gt; instance declarations:</source>
          <target state="translated">Adem&amp;aacute;s, en las declaraciones de instancia de &lt;code&gt;Semigroup&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9b463d35e3037a7b25fba6436d573b43c738063f" translate="yes" xml:space="preserve">
          <source>Moreover, we can ask &lt;code&gt;gdb&lt;/code&gt; to tell us the flow of execution that lead us to this point in the program,</source>
          <target state="translated">Adem&amp;aacute;s, podemos pedirle a &lt;code&gt;gdb&lt;/code&gt; que nos indique el flujo de ejecuci&amp;oacute;n que nos lleva a este punto del programa,</target>
        </trans-unit>
        <trans-unit id="8feac72447d42dc6b03b07306f6ad6196a53f4dd" translate="yes" xml:space="preserve">
          <source>Most GHC users will not need to worry about levity polymorphism or unboxed types. For these users, seeing the levity polymorphism in the type of &lt;code&gt;$&lt;/code&gt; is unhelpful. And thus, by default, it is suppressed, by supposing all type variables of type &lt;code&gt;RuntimeRep&lt;/code&gt; to be &lt;code&gt;'LiftedRep&lt;/code&gt; when printing, and printing &lt;code&gt;TYPE 'LiftedRep&lt;/code&gt; as &lt;code&gt;Type&lt;/code&gt; (or &lt;code&gt;*&lt;/code&gt; when &lt;a href=&quot;#extension-StarIsType&quot;&gt;&lt;code&gt;StarIsType&lt;/code&gt;&lt;/a&gt; is on).</source>
          <target state="translated">La mayor&amp;iacute;a de los usuarios de GHC no tendr&amp;aacute;n que preocuparse por el polimorfismo de ligereza o los tipos sin caja. Para estos usuarios, ver el polimorfismo de ligereza en el tipo de &lt;code&gt;$&lt;/code&gt; es in&amp;uacute;til. Y as&amp;iacute;, de forma predeterminada, se suprime, suponiendo que todas las variables de tipo de tipo &lt;code&gt;RuntimeRep&lt;/code&gt; sean &lt;code&gt;'LiftedRep&lt;/code&gt; al imprimir, e imprimiendo &lt;code&gt;TYPE 'LiftedRep&lt;/code&gt; como &lt;code&gt;Type&lt;/code&gt; (o &lt;code&gt;*&lt;/code&gt; cuando &lt;a href=&quot;#extension-StarIsType&quot;&gt; &lt;code&gt;StarIsType&lt;/code&gt; &lt;/a&gt; est&amp;aacute; activado ).</target>
        </trans-unit>
        <trans-unit id="17b1a5f71734de963b1a50b74875ef3731d2a5ac" translate="yes" xml:space="preserve">
          <source>Most GHC users will not need to worry about levity polymorphism or unboxed types. For these users, seeing the levity polymorphism in the type of &lt;code&gt;$&lt;/code&gt; is unhelpful. And thus, by default, it is suppressed, by supposing all type variables of type &lt;code&gt;RuntimeRep&lt;/code&gt; to be &lt;code&gt;'LiftedRep&lt;/code&gt; when printing, and printing &lt;code&gt;TYPE 'LiftedRep&lt;/code&gt; as &lt;code&gt;Type&lt;/code&gt; (or &lt;code&gt;*&lt;/code&gt; when &lt;a href=&quot;poly_kinds#extension-StarIsType&quot;&gt;&lt;code&gt;StarIsType&lt;/code&gt;&lt;/a&gt; is on).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bfd07736bd17bc98ea30aef5ff00a2993638a7" translate="yes" xml:space="preserve">
          <source>Most handles will also have a current I/O position indicating where the next input or output operation will occur. A handle is &lt;em&gt;readable&lt;/em&gt; if it manages only input or both input and output; likewise, it is &lt;em&gt;writable&lt;/em&gt; if it manages only output or both input and output. A handle is &lt;em&gt;open&lt;/em&gt; when first allocated. Once it is closed it can no longer be used for either input or output, though an implementation cannot re-use its storage while references remain to it. Handles are in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; classes. The string produced by showing a handle is system dependent; it should include enough information to identify the handle for debugging. A handle is equal according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; only to itself; no attempt is made to compare the internal state of different handles for equality.</source>
          <target state="translated">La mayor&amp;iacute;a de las manijas tambi&amp;eacute;n tendr&amp;aacute;n una posici&amp;oacute;n de E / S actual que indica d&amp;oacute;nde ocurrir&amp;aacute; la siguiente operaci&amp;oacute;n de entrada o salida. Un identificador es &lt;em&gt;legible&lt;/em&gt; si administra solo la entrada o tanto la entrada como la salida; del mismo modo, se puede &lt;em&gt;escribir&lt;/em&gt; si administra solo la salida o tanto la entrada como la salida. Una manija est&amp;aacute; &lt;em&gt;abierta&lt;/em&gt; cuando se asigna por primera vez. Una vez que est&amp;aacute; cerrado, ya no se puede usar para entrada o salida, aunque una implementaci&amp;oacute;n no puede reutilizar su almacenamiento mientras queden referencias a &amp;eacute;l. Los mangos est&amp;aacute;n en las clases &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; . La cadena producida al mostrar un mango depende del sistema; debe incluir suficiente informaci&amp;oacute;n para identificar el identificador para la depuraci&amp;oacute;n. Un mango es igual seg&amp;uacute;n &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; solo para s&amp;iacute; mismo; no se intenta comparar el estado interno de diferentes identificadores para determinar la igualdad.</target>
        </trans-unit>
        <trans-unit id="56a261d402c64f03bfdfa4dbbe6dc5df89e9511b" translate="yes" xml:space="preserve">
          <source>Most handles will also have a current I/O position indicating where the next input or output operation will occur. A handle is &lt;em&gt;readable&lt;/em&gt; if it manages only input or both input and output; likewise, it is &lt;em&gt;writable&lt;/em&gt; if it manages only output or both input and output. A handle is &lt;em&gt;open&lt;/em&gt; when first allocated. Once it is closed it can no longer be used for either input or output, though an implementation cannot re-use its storage while references remain to it. Handles are in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; classes. The string produced by showing a handle is system dependent; it should include enough information to identify the handle for debugging. A handle is equal according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; only to itself; no attempt is made to compare the internal state of different handles for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26dd0443f8df18358fdb53a2bfd90e3b2ecb015a" translate="yes" xml:space="preserve">
          <source>Most handles will also have a current I/O position indicating where the next input or output operation will occur. A handle is &lt;em&gt;readable&lt;/em&gt; if it manages only input or both input and output; likewise, it is &lt;em&gt;writable&lt;/em&gt; if it manages only output or both input and output. A handle is &lt;em&gt;open&lt;/em&gt; when first allocated. Once it is closed it can no longer be used for either input or output, though an implementation cannot re-use its storage while references remain to it. Handles are in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; classes. The string produced by showing a handle is system dependent; it should include enough information to identify the handle for debugging. A handle is equal according to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; only to itself; no attempt is made to compare the internal state of different handles for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2995cc8024bf7aa8ba13dcae171563836b90420" translate="yes" xml:space="preserve">
          <source>Most handles will also have a current I/O position indicating where the next input or output operation will occur. A handle is &lt;em&gt;readable&lt;/em&gt; if it manages only input or both input and output; likewise, it is &lt;em&gt;writable&lt;/em&gt; if it manages only output or both input and output. A handle is &lt;em&gt;open&lt;/em&gt; when first allocated. Once it is closed it can no longer be used for either input or output, though an implementation cannot re-use its storage while references remain to it. Handles are in the &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; classes. The string produced by showing a handle is system dependent; it should include enough information to identify the handle for debugging. A handle is equal according to &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; only to itself; no attempt is made to compare the internal state of different handles for equality.</source>
          <target state="translated">La mayor&amp;iacute;a de las manijas tambi&amp;eacute;n tendr&amp;aacute;n una posici&amp;oacute;n de E / S actual que indica d&amp;oacute;nde ocurrir&amp;aacute; la siguiente operaci&amp;oacute;n de entrada o salida. Un identificador es &lt;em&gt;legible&lt;/em&gt; si administra solo la entrada o tanto la entrada como la salida; del mismo modo, se puede &lt;em&gt;escribir&lt;/em&gt; si administra solo la salida o tanto la entrada como la salida. Una manija est&amp;aacute; &lt;em&gt;abierta&lt;/em&gt; cuando se asigna por primera vez. Una vez que est&amp;aacute; cerrado, ya no se puede usar para entrada o salida, aunque una implementaci&amp;oacute;n no puede reutilizar su almacenamiento mientras queden referencias a &amp;eacute;l. Los mangos est&amp;aacute;n en las clases &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; . La cadena producida al mostrar un mango depende del sistema; debe incluir suficiente informaci&amp;oacute;n para identificar el identificador para la depuraci&amp;oacute;n. Un mango es igual seg&amp;uacute;n &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; solo para s&amp;iacute; mismo; no se intenta comparar el estado interno de diferentes identificadores para determinar la igualdad.</target>
        </trans-unit>
        <trans-unit id="9be69b82ce264090f2137a15a7648633cb206f8e" translate="yes" xml:space="preserve">
          <source>Most monad transformer modules include the special case of applying the transformer to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;. For example, &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:State&quot;&gt;State&lt;/a&gt; s&lt;/code&gt; is an abbreviation for &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:StateT&quot;&gt;StateT&lt;/a&gt; s &lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">La mayor&amp;iacute;a de los m&amp;oacute;dulos de transformadores de m&amp;oacute;nada incluyen el caso especial de aplicar el transformador a la &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; . Por ejemplo, &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:State&quot;&gt;State&lt;/a&gt; s&lt;/code&gt; es una abreviatura de &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:StateT&quot;&gt;StateT&lt;/a&gt; s &lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0c60abd2cf0ff60dc7be795cfcb03f696cc8115" translate="yes" xml:space="preserve">
          <source>Most monad transformer modules include the special case of applying the transformer to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;. For example, &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:State&quot;&gt;State&lt;/a&gt; s&lt;/code&gt; is an abbreviation for &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:StateT&quot;&gt;StateT&lt;/a&gt; s &lt;a href=&quot;../base-4.14.1.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f05ad7826cba7566bcebc4116870e810986741e" translate="yes" xml:space="preserve">
          <source>Most monad transformer modules include the special case of applying the transformer to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;. For example, &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:State&quot;&gt;State&lt;/a&gt; s&lt;/code&gt; is an abbreviation for &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:StateT&quot;&gt;StateT&lt;/a&gt; s &lt;a href=&quot;../base-4.15.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1446d57bbc11269458b5fff18c4a2fbea47e1423" translate="yes" xml:space="preserve">
          <source>Most of the command-line options accepted by GHC (see &lt;a href=&quot;using#using-ghc&quot;&gt;Using GHC&lt;/a&gt;) also make sense in interactive mode. The ones that don&amp;rsquo;t make sense are mostly obvious.</source>
          <target state="translated">La mayor&amp;iacute;a de las opciones de l&amp;iacute;nea de comandos aceptadas por GHC (consulte &lt;a href=&quot;using#using-ghc&quot;&gt;Uso de GHC&lt;/a&gt; ) tambi&amp;eacute;n tienen sentido en el modo interactivo. Los que no tienen sentido son en su mayor&amp;iacute;a obvios.</target>
        </trans-unit>
        <trans-unit id="d49b83194eaa0ec88c028d8df0d8eb5797ada48a" translate="yes" xml:space="preserve">
          <source>Most of the conventions GHC expects when using packages are described in &lt;a href=&quot;packages#building-packages&quot;&gt;Building a package from Haskell source&lt;/a&gt;. In addition note that GHC expects the &lt;code&gt;.hi&lt;/code&gt; files to use the extension &lt;code&gt;.dyn_hi&lt;/code&gt;. The other requirements are the same as for C libraries and are described below, in particular the use of the flags &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;phases#ghc-flag--fPIC&quot;&gt;&lt;code&gt;-fPIC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phases#ghc-flag--shared&quot;&gt;&lt;code&gt;-shared&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La mayor&amp;iacute;a de las convenciones que GHC espera al usar paquetes se describen en &lt;a href=&quot;packages#building-packages&quot;&gt;Creaci&amp;oacute;n de un paquete a partir de la fuente Haskell&lt;/a&gt; . Adem&amp;aacute;s, tenga en cuenta que GHC espera que los archivos &lt;code&gt;.hi&lt;/code&gt; usen la extensi&amp;oacute;n &lt;code&gt;.dyn_hi&lt;/code&gt; . Los otros requisitos son los mismos que para las bibliotecas C y se describen a continuaci&amp;oacute;n, en particular, el uso de los indicadores &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;phases#ghc-flag--fPIC&quot;&gt; &lt;code&gt;-fPIC&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;phases#ghc-flag--shared&quot;&gt; &lt;code&gt;-shared&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c17ee9cdb3b8c7cbc538d3e35bb5401d0f3d8af1" translate="yes" xml:space="preserve">
          <source>Most of the functions in this module are subject to &lt;em&gt;fusion&lt;/em&gt;, meaning that a pipeline of such functions will usually allocate at most one &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones de este m&amp;oacute;dulo est&amp;aacute;n sujetas a &lt;em&gt;fusi&amp;oacute;n&lt;/em&gt; , lo que significa que una canalizaci&amp;oacute;n de dichas funciones normalmente asignar&amp;aacute; como m&amp;aacute;ximo un valor de &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cff6fb1dc40bd9bd236bb1c241939a66f53cfba3" translate="yes" xml:space="preserve">
          <source>Most of the functions in this module are subject to &lt;em&gt;fusion&lt;/em&gt;, meaning that a pipeline of such functions will usually allocate at most one &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones de este m&amp;oacute;dulo est&amp;aacute;n sujetas a &lt;em&gt;fusi&amp;oacute;n&lt;/em&gt; , lo que significa que una canalizaci&amp;oacute;n de dichas funciones normalmente asignar&amp;aacute; como m&amp;aacute;ximo un valor de &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b644a39e26dfc78bdc3acb69da17cabd5dd58c1" translate="yes" xml:space="preserve">
          <source>Most of the performance gain stems from using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:primMapListBounded&quot;&gt;primMapListBounded&lt;/a&gt;&lt;/code&gt;, which encodes a list of values from left-to-right with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;. It exploits the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; internals to avoid unnecessary function compositions (i.e., concatenations). In the future, we might expect the compiler to perform the optimizations implemented in &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:primMapListBounded&quot;&gt;primMapListBounded&lt;/a&gt;&lt;/code&gt;. However, it seems that the code is currently to complicated for the compiler to see through. Therefore, we provide the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; escape hatch, which allows data structures to provide very efficient encoding traversals, like &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:primMapListBounded&quot;&gt;primMapListBounded&lt;/a&gt;&lt;/code&gt; for lists.</source>
          <target state="translated">La mayor parte de la ganancia de rendimiento proviene del uso de &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:primMapListBounded&quot;&gt;primMapListBounded&lt;/a&gt;&lt;/code&gt; , que codifica una lista de valores de izquierda a derecha con un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; . Aprovecha los &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; internos de Builder para evitar composiciones de funciones innecesarias (es decir, concatenaciones). En el futuro, podr&amp;iacute;amos esperar que el compilador realice las optimizaciones implementadas en &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:primMapListBounded&quot;&gt;primMapListBounded&lt;/a&gt;&lt;/code&gt; . Sin embargo, parece que el c&amp;oacute;digo es actualmente demasiado complicado para que el compilador lo vea. Por lo tanto, proporcionamos la &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; escape BoundedPrim , que permite que las estructuras de datos proporcionen recorridos de codificaci&amp;oacute;n muy eficientes, como &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:primMapListBounded&quot;&gt;primMapListBounded&lt;/a&gt;&lt;/code&gt; para listas.</target>
        </trans-unit>
        <trans-unit id="93a85b72f189888c0727de2215a65f643a090a37" translate="yes" xml:space="preserve">
          <source>Most of these options are boolean and have options to turn them both &amp;ldquo;on&amp;rdquo; and &amp;ldquo;off&amp;rdquo; (beginning with the prefix &lt;code&gt;no-&lt;/code&gt;). For instance, while &lt;code&gt;-fspecialise&lt;/code&gt; enables specialisation, &lt;code&gt;-fno-specialise&lt;/code&gt; disables it. When multiple flags for the same option appear in the command-line they are evaluated from left to right. For instance, &lt;code&gt;-fno-specialise -fspecialise&lt;/code&gt; will enable specialisation.</source>
          <target state="translated">La mayor&amp;iacute;a de estas opciones son booleanas y tienen opciones para &quot;activarlas&quot; y &quot;desactivarlas&quot; (comenzando con el prefijo &lt;code&gt;no-&lt;/code&gt; ). Por ejemplo, mientras &lt;code&gt;-fspecialise&lt;/code&gt; habilita la especializaci&amp;oacute;n, &lt;code&gt;-fno-specialise&lt;/code&gt; deshabilita. Cuando aparecen varios indicadores para la misma opci&amp;oacute;n en la l&amp;iacute;nea de comandos, se eval&amp;uacute;an de izquierda a derecha. Por ejemplo, &lt;code&gt;-fno-specialise -fspecialise&lt;/code&gt; habilitar&amp;aacute; la especializaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b4872c5b9a708f91ab972a558b461f19d44ba677" translate="yes" xml:space="preserve">
          <source>Most packages (see &lt;a href=&quot;packages#using-packages&quot;&gt;Using Packages&lt;/a&gt;) are available without needing to specify any extra flags at all: they will be automatically loaded the first time they are needed.</source>
          <target state="translated">La mayor&amp;iacute;a de los paquetes (consulte &lt;a href=&quot;packages#using-packages&quot;&gt;Uso de paquetes&lt;/a&gt; ) est&amp;aacute;n disponibles sin necesidad de especificar ning&amp;uacute;n indicador adicional: se cargar&amp;aacute;n autom&amp;aacute;ticamente la primera vez que se necesiten.</target>
        </trans-unit>
        <trans-unit id="f17588b3f000b1c04f72f8264ac2012d913333ca" translate="yes" xml:space="preserve">
          <source>Most profiling runtime options are only available when you compile your program for profiling (see &lt;a href=&quot;profiling#prof-compiler-options&quot;&gt;Compiler options for profiling&lt;/a&gt;, and &lt;a href=&quot;profiling#rts-options-heap-prof&quot;&gt;RTS options for heap profiling&lt;/a&gt; for the runtime options). However, there is one profiling option that is available for ordinary non-profiled executables:</source>
          <target state="translated">La mayor&amp;iacute;a de las opciones de tiempo de ejecuci&amp;oacute;n de creaci&amp;oacute;n de perfiles solo est&amp;aacute;n disponibles cuando compila su programa para la creaci&amp;oacute;n de perfiles (consulte &lt;a href=&quot;profiling#prof-compiler-options&quot;&gt;Opciones del compilador para la creaci&amp;oacute;n de perfiles&lt;/a&gt; y &lt;a href=&quot;profiling#rts-options-heap-prof&quot;&gt;Opciones de RTS para la creaci&amp;oacute;n&lt;/a&gt; de perfiles de pila para las opciones de tiempo de ejecuci&amp;oacute;n). Sin embargo, hay una opci&amp;oacute;n de generaci&amp;oacute;n de perfiles que est&amp;aacute; disponible para los ejecutables ordinarios sin perfiles:</target>
        </trans-unit>
        <trans-unit id="7dd31ae39f49dd0f0c21b3aa4545a982531a6c6b" translate="yes" xml:space="preserve">
          <source>Most programs should not worry about the canonicity of a path. In particular, despite the name, the function does not truly guarantee canonicity of the returned path due to the presence of hard links, mount points, etc.</source>
          <target state="translated">La mayoría de los programas no deberían preocuparse por la canonicidad de un camino.En particular,a pesar del nombre,la función no garantiza verdaderamente la canonicidad del camino de retorno debido a la presencia de enlaces duros,puntos de montaje,etc.</target>
        </trans-unit>
        <trans-unit id="f735bd28bb08e83da41ac3d34e730c92c26193d9" translate="yes" xml:space="preserve">
          <source>Most specific instance, &lt;code&gt;Ix&lt;/code&gt;, defined in an &lt;code&gt;-XSafe&lt;/code&gt; compiled module.</source>
          <target state="translated">La instancia m&amp;aacute;s espec&amp;iacute;fica, &lt;code&gt;Ix&lt;/code&gt; , definida en un m&amp;oacute;dulo compilado &lt;code&gt;-XSafe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16ea8e72c52685784f78037d3d05d2240b22d1c7" translate="yes" xml:space="preserve">
          <source>Most types in GHC are boxed, which means that values of that type are represented by a pointer to a heap object. The representation of a Haskell &lt;code&gt;Int&lt;/code&gt;, for example, is a two-word heap object. An unboxed type, however, is represented by the value itself, no pointers or heap allocation are involved.</source>
          <target state="translated">La mayor&amp;iacute;a de los tipos de GHC est&amp;aacute;n encuadrados, lo que significa que los valores de ese tipo est&amp;aacute;n representados por un puntero a un objeto de mont&amp;oacute;n. La representaci&amp;oacute;n de un Haskell &lt;code&gt;Int&lt;/code&gt; , por ejemplo, es un objeto de mont&amp;oacute;n de dos palabras. Sin embargo, un tipo sin caja est&amp;aacute; representado por el valor en s&amp;iacute; mismo, no se incluyen punteros ni asignaci&amp;oacute;n de mont&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="26a91b89d1f0afee1a3b838d3e07c9dda8c7019a" translate="yes" xml:space="preserve">
          <source>Most users don&amp;rsquo;t need to worry about the details described in this section. This discussion is primarily targeted at tooling authors who need to interpret the GHC-specific DWARF annotations contained in compiled binaries.</source>
          <target state="translated">La mayor&amp;iacute;a de los usuarios no necesitan preocuparse por los detalles descritos en esta secci&amp;oacute;n. Esta discusi&amp;oacute;n est&amp;aacute; dirigida principalmente a los autores de herramientas que necesitan interpretar las anotaciones DWARF espec&amp;iacute;ficas de GHC contenidas en binarios compilados.</target>
        </trans-unit>
        <trans-unit id="50978952002c3f3475a398ad4c47f7515dcb5f8c" translate="yes" xml:space="preserve">
          <source>Move forward ⟨n⟩ steps in the history. ⟨n⟩ is one if omitted. See &lt;a href=&quot;#tracing&quot;&gt;Tracing and history&lt;/a&gt; for more about GHCi&amp;rsquo;s debugging facilities. See also: &lt;a href=&quot;#ghci-cmd-:trace&quot;&gt;&lt;code&gt;:trace&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:history&quot;&gt;&lt;code&gt;:history&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:back&quot;&gt;&lt;code&gt;:back&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Avanzar ⟨n⟩ pasos en el historial. ⟨N⟩ es uno si se omite. Consulte &lt;a href=&quot;#tracing&quot;&gt;Seguimiento e historial&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las funciones de depuraci&amp;oacute;n de GHCi. V&amp;eacute;ase tambi&amp;eacute;n: &lt;a href=&quot;#ghci-cmd-:trace&quot;&gt; &lt;code&gt;:trace&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:history&quot;&gt; &lt;code&gt;:history&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:back&quot;&gt; &lt;code&gt;:back&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ba04ac0c40eac8685578c04462bb11965eb4878" translate="yes" xml:space="preserve">
          <source>Move the last two elements from the end of the first list onto the beginning of the second one.</source>
          <target state="translated">Mueve los dos últimos elementos del final de la primera lista al principio de la segunda.</target>
        </trans-unit>
        <trans-unit id="2bb8ee2f3add85c2116c7a3a51024dad403c385b" translate="yes" xml:space="preserve">
          <source>MoveFileFlag</source>
          <target state="translated">MoveFileFlag</target>
        </trans-unit>
        <trans-unit id="5a8dfd20d44353d4ab01bf308e18462987143fb9" translate="yes" xml:space="preserve">
          <source>Moved to their own module to not bloat GHC.Float further.</source>
          <target state="translated">Se trasladaron a su propio módulo para no inflar el GHC.Flotar más.</target>
        </trans-unit>
        <trans-unit id="14766b11b99f48495ad4c21d250367a73f20edac" translate="yes" xml:space="preserve">
          <source>Msg</source>
          <target state="translated">Msg</target>
        </trans-unit>
        <trans-unit id="d136009ea859ae789c419997ed8d15cac71cf2c5" translate="yes" xml:space="preserve">
          <source>Much like lists can be constructed and matched using the &lt;code&gt;:&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt; constructors, sequences can be constructed and matched using the &lt;code&gt;&lt;a href=&quot;data-sequence#v:Empty&quot;&gt;Empty&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v::-60--124-&quot;&gt;:&amp;lt;|&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;data-sequence#v::-124--62-&quot;&gt;:|&amp;gt;&lt;/a&gt;&lt;/code&gt; pattern synonyms.</source>
          <target state="translated">Al igual que las listas pueden ser construidos y emparejados usando el &lt;code&gt;:&lt;/code&gt; y &lt;code&gt;[]&lt;/code&gt; constructores, las secuencias pueden ser construidos y emparejados usando el &lt;code&gt;&lt;a href=&quot;data-sequence#v:Empty&quot;&gt;Empty&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v::-60--124-&quot;&gt;:&amp;lt;|&lt;/a&gt;&lt;/code&gt; , y &lt;code&gt;&lt;a href=&quot;data-sequence#v::-124--62-&quot;&gt;:|&amp;gt;&lt;/a&gt;&lt;/code&gt; sin&amp;oacute;nimos de patrones.</target>
        </trans-unit>
        <trans-unit id="3985ab0ae942e14710d14c6d2571f7087252a32c" translate="yes" xml:space="preserve">
          <source>Much of &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;s interface can be implemented with &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alter&quot;&gt;alter&lt;/a&gt;&lt;/code&gt;. Some of the rest can be implemented with a new &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; function and either &lt;code&gt;&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-monoid#t:Last&quot;&gt;Last&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Gran parte de la interfaz de &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; se puede implementar con &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alter&quot;&gt;alter&lt;/a&gt;&lt;/code&gt; . Parte del resto se puede implementar con una nueva funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; y ya sea &lt;code&gt;&lt;a href=&quot;data-monoid#t:First&quot;&gt;First&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-monoid#t:Last&quot;&gt;Last&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae55e00af65836b6d405f596f97e4f57bbe9ffb4" translate="yes" xml:space="preserve">
          <source>MulArrowT</source>
          <target state="translated">MulArrowT</target>
        </trans-unit>
        <trans-unit id="5cc6d803a39452a5550042d0878f9a4d2b3338ea" translate="yes" xml:space="preserve">
          <source>Multi-parameter type classes are permitted, with extension &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt;&lt;code&gt;MultiParamTypeClasses&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">Se permiten clases de tipos de m&amp;uacute;ltiples par&amp;aacute;metros, con extensi&amp;oacute;n &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt; &lt;code&gt;MultiParamTypeClasses&lt;/code&gt; &lt;/a&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="791ab6cd505e26e3db8530867157bb7dff3226cc" translate="yes" xml:space="preserve">
          <source>Multi-signal a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Multi-se&amp;ntilde;al a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb0ebb79c7eefbdf0b5b3cf945169c1e60647b5a" translate="yes" xml:space="preserve">
          <source>Multi-way Trees and Forests</source>
          <target state="translated">Árboles y bosques multidireccionales</target>
        </trans-unit>
        <trans-unit id="639132eb39afa461a8de30e021cb71678c2bd9f6" translate="yes" xml:space="preserve">
          <source>Multi-way if expressions introduce a new layout context. So the example above is equivalent to:</source>
          <target state="translated">Multidireccional si las expresiones introducen un nuevo contexto de diseño.Así que el ejemplo anterior es equivalente a:</target>
        </trans-unit>
        <trans-unit id="9be2f47cbdcfe4a4ba58091a84da2eccde0463fc" translate="yes" xml:space="preserve">
          <source>MultiParamTypeClasses</source>
          <target state="translated">MultiParamTypeClasses</target>
        </trans-unit>
        <trans-unit id="16bfc155ed662e5fdfa3b7a44cb917e2896838df" translate="yes" xml:space="preserve">
          <source>MultiShot</source>
          <target state="translated">MultiShot</target>
        </trans-unit>
        <trans-unit id="7081cd2ce6a6f92ebb8e5d3af341d3d4335873da" translate="yes" xml:space="preserve">
          <source>MultiWayIf</source>
          <target state="translated">MultiWayIf</target>
        </trans-unit>
        <trans-unit id="0393d78dbbfc9e70fdf48e5344e361858dbe507c" translate="yes" xml:space="preserve">
          <source>Multiline mode is useful when entering monadic &lt;code&gt;do&lt;/code&gt; statements:</source>
          <target state="translated">El modo multil&amp;iacute;nea es &amp;uacute;til al ingresar sentencias &lt;code&gt;do&lt;/code&gt; mon&amp;aacute;dicas :</target>
        </trans-unit>
        <trans-unit id="2e295ccb8d7c53c8f3ea7ba9cfb2f93b20c6dd1d" translate="yes" xml:space="preserve">
          <source>Multiplication of type-level naturals.</source>
          <target state="translated">Multiplicación de los naturales de nivel de tipo.</target>
        </trans-unit>
        <trans-unit id="c3daf9662fef96010a16df2f6f60f2f626bb4ea3" translate="yes" xml:space="preserve">
          <source>Multiplicity polymorphism is incomplete and experimental. You may have success using it, or you may not. Expect it to be really unreliable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abaf136782049164460366f9afe2dee04f6b2e91" translate="yes" xml:space="preserve">
          <source>Multiply two &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">Multiplicar dos &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="909b32ffe66a26d38ff55c0ae1de2d5a81a56aaf" translate="yes" xml:space="preserve">
          <source>Multiply two vectors element-wise.</source>
          <target state="translated">Multiplica dos vectores en el sentido de los elementos.</target>
        </trans-unit>
        <trans-unit id="05a69b1ec67732f09635ef86734c3b1a99517a9c" translate="yes" xml:space="preserve">
          <source>Multiply-defined array elements not checked</source>
          <target state="translated">Los elementos de la matriz de definición múltiple no se han comprobado</target>
        </trans-unit>
        <trans-unit id="5848ccab6e8123c4df2d4c1561fe81cd64b56b8f" translate="yes" xml:space="preserve">
          <source>MutVar#</source>
          <target state="translated">MutVar#</target>
        </trans-unit>
        <trans-unit id="52b9d6898e795eda124f4c552cab7ce01664480c" translate="yes" xml:space="preserve">
          <source>Mutable array type, for use in the ST monad.</source>
          <target state="translated">Tipo de matriz mutable,para usar en la mónada ST.</target>
        </trans-unit>
        <trans-unit id="215e56b349d3105e5186b842d419bb7207c023b0" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st#v:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Arreglos mutables en caja y sin caja en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st#v:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="515636c71d60349203d8732bedde03c1e6d4b604" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Arreglos mutables en caja y sin caja en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c7c15d19968866fe48793de76acdf671dc080e3" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st#v:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31247b9a8722b87ffd65d7883ea3909ce04233ac" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f85576fded6d39e38070c85bed31a7dca70f0a1" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st#v:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619a054c943d7350b1a002ab683879f563a166f9" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcf35d6b49f587009acea897dbec9a7205cd79b" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the IO monad.</source>
          <target state="translated">Matrices mutables encajadas y no encajadas en la mónada IO.</target>
        </trans-unit>
        <trans-unit id="440cc7a8eb8ee990439d9b0c275e863e6bd50dfb" translate="yes" xml:space="preserve">
          <source>Mutable boxed and unboxed arrays in the IO monad. . Safe API only of &lt;a href=&quot;data-array-io&quot;&gt;Data.Array.IO&lt;/a&gt;.</source>
          <target state="translated">Arreglos mutables en caja y sin caja en la m&amp;oacute;nada IO. . API segura solo de &lt;a href=&quot;data-array-io&quot;&gt;Data.Array.IO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb3ae51bcbb4d7a420b0ebdc8a4c6115c91d585" translate="yes" xml:space="preserve">
          <source>Mutable references in the (strict) ST monad.</source>
          <target state="translated">Referencias mutables en la (estricta)mónada ST.</target>
        </trans-unit>
        <trans-unit id="42749e4461b51d539ec768df8df05dca87a2bacc" translate="yes" xml:space="preserve">
          <source>Mutable references in the IO monad.</source>
          <target state="translated">Múltiples referencias en la mónada IO.</target>
        </trans-unit>
        <trans-unit id="1f817ca4b49a2a2210c658ea8fd1e259ead274d2" translate="yes" xml:space="preserve">
          <source>Mutable references in the lazy ST monad.</source>
          <target state="translated">Múltiples referencias en la perezosa mónada ST.</target>
        </trans-unit>
        <trans-unit id="04916e4ec1fe3dc428e8538332487b612dc2bd11" translate="yes" xml:space="preserve">
          <source>Mutable, boxed, non-strict arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Arreglos mutables, en caja, no estrictos en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; . Los argumentos de tipo son los siguientes:</target>
        </trans-unit>
        <trans-unit id="211618f366b0b487ea1225369f9859d9b05e4ebf" translate="yes" xml:space="preserve">
          <source>Mutable, boxed, non-strict arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11382766a0d791915a7503d6ac8e7df2555a1f47" translate="yes" xml:space="preserve">
          <source>Mutable, boxed, non-strict arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f88ae9ac44602611ed4f45283d41180f01bbf0" translate="yes" xml:space="preserve">
          <source>Mutable, boxed, non-strict arrays in the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Arreglos mutables, en caja, no estrictos en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; . Los argumentos de tipo son los siguientes:</target>
        </trans-unit>
        <trans-unit id="6cb43316285255ffc42363e8387f0053efdb7cd7" translate="yes" xml:space="preserve">
          <source>Mutable, unboxed, strict arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Matrices estrictas, mutables y sin caja en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Los argumentos de tipo son los siguientes:</target>
        </trans-unit>
        <trans-unit id="a301c7b2f899d4e9c83b2d431bcea04bd569480b" translate="yes" xml:space="preserve">
          <source>Mutable, unboxed, strict arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1956fd705ef698a7aa6808b42979d8096d57754" translate="yes" xml:space="preserve">
          <source>Mutable, unboxed, strict arrays in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9925971623b1ac9311a057c1e6621841f8a448f7" translate="yes" xml:space="preserve">
          <source>MutableArray#</source>
          <target state="translated">MutableArray#</target>
        </trans-unit>
        <trans-unit id="40bb1cc17c060c6bd43dbf016d618af652f8c837" translate="yes" xml:space="preserve">
          <source>MutableArrayArray#</source>
          <target state="translated">MutableArrayArray#</target>
        </trans-unit>
        <trans-unit id="68b676eacbb0a7843cf46324a527ccbb0beed645" translate="yes" xml:space="preserve">
          <source>MutableByteArray#</source>
          <target state="translated">MutableByteArray#</target>
        </trans-unit>
        <trans-unit id="ddc210a400b5481a3abcf1bcd6083f807abd8b39" translate="yes" xml:space="preserve">
          <source>Mutate the contents of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;N.B.&lt;/em&gt;, this version is non-strict.</source>
          <target state="translated">Muta el contenido de un &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; . &lt;em&gt;NB&lt;/em&gt; , esta versi&amp;oacute;n no es estricta.</target>
        </trans-unit>
        <trans-unit id="29f6dd6604a4083b037e5b08c77d32e780b2deac" translate="yes" xml:space="preserve">
          <source>Mutate the contents of an &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Mute el contenido de un &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65a480fe4d2e3102f2ecc2852d563e994ffa8ae8" translate="yes" xml:space="preserve">
          <source>Mutate the contents of an &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Mute el contenido de un &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beef505a6a01c0417026ebb4ed6aa4fbdd93ebfe" translate="yes" xml:space="preserve">
          <source>Mutation: In both &lt;code&gt;foreign import unsafe&lt;/code&gt; and &lt;code&gt;foreign import safe&lt;/code&gt; FFI calls, it is safe to mutate a &lt;code&gt;MutableByteArray&lt;/code&gt;. Mutating any other type of array leads to undefined behavior. Reason: Mutable arrays of heap objects record writes for the purpose of garbage collection. An array of heap objects is passed to a foreign C function, the runtime does not record any writes. Consequently, it is not safe to write to an array of heap objects in a foreign function. Since the runtime has no facilities for tracking mutation of a &lt;code&gt;MutableByteArray#&lt;/code&gt;, these can be safely mutated in any foreign function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d35073b15c0f266e315c4a406057c1c9e30791" translate="yes" xml:space="preserve">
          <source>NB! This is a legacy feature, see &lt;a href=&quot;#extension-StandaloneKindSignatures&quot;&gt;&lt;code&gt;StandaloneKindSignatures&lt;/code&gt;&lt;/a&gt; for the modern replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4bc7da7f8019e6ba579c7168ed8ef8e123de9f" translate="yes" xml:space="preserve">
          <source>NB. Be very careful with these finalizers. One common trap is that if a finalizer references another finalized value, it does not prevent that value from being finalized. In particular, &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s are finalized objects, so a finalizer should not refer to a &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; (including &lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;system-io#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">N&amp;Oacute;TESE BIEN. Tenga mucho cuidado con estos finalizadores. Una trampa com&amp;uacute;n es que si un finalizador hace referencia a otro valor finalizado, no impide que ese valor se finalice. En particular, los &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; son objetos finalizados, por lo que un finalizador no debe hacer referencia a un &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; (incluidos &lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;system-io#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="374a0e14aef11d696ae0e12a6af249af24d04c07" translate="yes" xml:space="preserve">
          <source>NB. This macro is set when pre-processing both Haskell source and C source, including the C source generated from a Haskell module (i.e. &lt;code&gt;.hs&lt;/code&gt;, &lt;code&gt;.lhs&lt;/code&gt;, &lt;code&gt;.c&lt;/code&gt; and &lt;code&gt;.hc&lt;/code&gt; files).</source>
          <target state="translated">N&amp;Oacute;TESE BIEN. Esta macro se establece cuando pre-procesamiento tanto de c&amp;oacute;digo Haskell y la fuente de C, incluyendo la fuente de C generado a partir de un m&amp;oacute;dulo de Haskell (es decir &lt;code&gt;.hs&lt;/code&gt; , &lt;code&gt;.lhs&lt;/code&gt; , &lt;code&gt;.c&lt;/code&gt; y &lt;code&gt;.hc&lt;/code&gt; archivos).</target>
        </trans-unit>
        <trans-unit id="ef6198823084d192389d02aee66353f70e110347" translate="yes" xml:space="preserve">
          <source>NB: &lt;code&gt;isValidBigNat# nullBigNat&lt;/code&gt; is false</source>
          <target state="translated">NB: &lt;code&gt;isValidBigNat# nullBigNat&lt;/code&gt; es falso</target>
        </trans-unit>
        <trans-unit id="ccbbb1b26af40cc778cde005c4f658b4a6d44e97" translate="yes" xml:space="preserve">
          <source>NB: This treatment of superclasses goes beyond &lt;a href=&quot;http://i.cs.hku.hk/~bruno//papers/hs2017.pdf&quot;&gt;the paper&lt;/a&gt;, but is specifically desired by users.</source>
          <target state="translated">NB: Este tratamiento de las superclases va m&amp;aacute;s all&amp;aacute; &lt;a href=&quot;http://i.cs.hku.hk/~bruno//papers/hs2017.pdf&quot;&gt;del papel&lt;/a&gt; , pero es espec&amp;iacute;ficamente deseado por los usuarios.</target>
        </trans-unit>
        <trans-unit id="5cfb84a3255f99b3a5dc5c0b199025e1ab8a956d" translate="yes" xml:space="preserve">
          <source>NFData</source>
          <target state="translated">NFData</target>
        </trans-unit>
        <trans-unit id="8bef8898d5726a9645ab52735e823a1b3b2a58ed" translate="yes" xml:space="preserve">
          <source>NFData1</source>
          <target state="translated">NFData1</target>
        </trans-unit>
        <trans-unit id="418a51c8aef1b7b43f9f69603188a3fc934fb298" translate="yes" xml:space="preserve">
          <source>NFData2</source>
          <target state="translated">NFData2</target>
        </trans-unit>
        <trans-unit id="8157bf312f87194c1b8385054be3f190c76145cd" translate="yes" xml:space="preserve">
          <source>NLSVERSIONINFOEX</source>
          <target state="translated">NLSVERSIONINFOEX</target>
        </trans-unit>
        <trans-unit id="a74c32096f555276472737ff5840787516207d4d" translate="yes" xml:space="preserve">
          <source>NOTE for GHC users: unless you use the &lt;code&gt;-threaded&lt;/code&gt; flag, &lt;code&gt;hWaitForInput hdl t&lt;/code&gt; where &lt;code&gt;t &amp;gt;= 0&lt;/code&gt; will block all other Haskell threads for the duration of the call. It behaves like a &lt;code&gt;safe&lt;/code&gt; foreign call in this respect.</source>
          <target state="translated">NOTA para usuarios de GHC: a menos que use la &lt;code&gt;-threaded&lt;/code&gt; , &lt;code&gt;hWaitForInput hdl t&lt;/code&gt; donde &lt;code&gt;t &amp;gt;= 0&lt;/code&gt; bloquear&amp;aacute; todos los dem&amp;aacute;s hilos de Haskell durante la llamada. Se comporta como una llamada extranjera &lt;code&gt;safe&lt;/code&gt; a este respecto.</target>
        </trans-unit>
        <trans-unit id="f8bec3400a00d95de2aca056e95477c68ba1eb54" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hIsEOF&quot;&gt;hIsEOF&lt;/a&gt;&lt;/code&gt; may block, because it has to attempt to read from the stream to determine whether there is any more data to be read.</source>
          <target state="translated">NOTA: &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hIsEOF&quot;&gt;hIsEOF&lt;/a&gt;&lt;/code&gt; puede bloquearse, porque tiene que intentar leer de la secuencia para determinar si hay m&amp;aacute;s datos para leer.</target>
        </trans-unit>
        <trans-unit id="e177a44ba2f2969ccf14799a97fd335989430f30" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;&lt;a href=&quot;system-io#v:hIsEOF&quot;&gt;hIsEOF&lt;/a&gt;&lt;/code&gt; may block, because it has to attempt to read from the stream to determine whether there is any more data to be read.</source>
          <target state="translated">NOTA: &lt;code&gt;&lt;a href=&quot;system-io#v:hIsEOF&quot;&gt;hIsEOF&lt;/a&gt;&lt;/code&gt; puede bloquearse, porque tiene que intentar leer de la secuencia para determinar si hay m&amp;aacute;s datos para leer.</target>
        </trans-unit>
        <trans-unit id="b1bbe2aede4f3fac96050d9ca6e8622d57dc7d43" translate="yes" xml:space="preserve">
          <source>NOTE: Since this library is built on top of the curses interface, it is not thread-safe.</source>
          <target state="translated">NOTA:Como esta biblioteca está construida sobre la interfaz de las maldiciones,no es segura para los hilos.</target>
        </trans-unit>
        <trans-unit id="63561186ffbbc0f2e4ac1c402f5b46d5450d885c" translate="yes" xml:space="preserve">
          <source>NOTE: The implicit parameter &lt;code&gt;?callStack :: CallStack&lt;/code&gt; is an implementation detail and &lt;strong&gt;should not&lt;/strong&gt; be considered part of the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; API, we may decide to change the implementation in the future.</source>
          <target state="translated">NOTA: El par&amp;aacute;metro impl&amp;iacute;cito &lt;code&gt;?callStack :: CallStack&lt;/code&gt; es un detalle de implementaci&amp;oacute;n y &lt;strong&gt;no&lt;/strong&gt; debe considerarse parte de la API de &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; , podemos decidir cambiar la implementaci&amp;oacute;n en el futuro.</target>
        </trans-unit>
        <trans-unit id="73283dfca92bcfe835f52a5a26a21a5f2a2e5acc" translate="yes" xml:space="preserve">
          <source>NOTE: The implicit parameter &lt;code&gt;?callStack :: CallStack&lt;/code&gt; is an implementation detail and &lt;strong&gt;should not&lt;/strong&gt; be considered part of the &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; API, we may decide to change the implementation in the future.</source>
          <target state="translated">NOTA: El par&amp;aacute;metro impl&amp;iacute;cito &lt;code&gt;?callStack :: CallStack&lt;/code&gt; es un detalle de implementaci&amp;oacute;n y &lt;strong&gt;no&lt;/strong&gt; debe considerarse parte de la API de &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; , podemos decidir cambiar la implementaci&amp;oacute;n en el futuro.</target>
        </trans-unit>
        <trans-unit id="98b32b5a6dce9bba2f73fac9f444388673ea544d" translate="yes" xml:space="preserve">
          <source>NOTE: The intrepid user may notice that &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; is just an alias for an implicit parameter &lt;code&gt;?callStack :: CallStack&lt;/code&gt;. This is an implementation detail and &lt;strong&gt;should not&lt;/strong&gt; be considered part of the &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; API, we may decide to change the implementation in the future.</source>
          <target state="translated">NOTA: El usuario intr&amp;eacute;pido puede notar que &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; es solo un alias para un par&amp;aacute;metro impl&amp;iacute;cito &lt;code&gt;?callStack :: CallStack&lt;/code&gt; . Este es un detalle de implementaci&amp;oacute;n y &lt;strong&gt;no&lt;/strong&gt; debe considerarse parte de la API de &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; ; podemos decidir cambiar la implementaci&amp;oacute;n en el futuro.</target>
        </trans-unit>
        <trans-unit id="d4652f803bbd5a4299b501fa174c8494ddc7084c" translate="yes" xml:space="preserve">
          <source>NOTE: The intrepid user may notice that &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; is just an alias for an implicit parameter &lt;code&gt;?callStack :: CallStack&lt;/code&gt;. This is an implementation detail and &lt;strong&gt;should not&lt;/strong&gt; be considered part of the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; API, we may decide to change the implementation in the future.</source>
          <target state="translated">NOTA: El usuario intr&amp;eacute;pido puede notar que &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; es solo un alias para un par&amp;aacute;metro impl&amp;iacute;cito &lt;code&gt;?callStack :: CallStack&lt;/code&gt; . Este es un detalle de implementaci&amp;oacute;n y &lt;strong&gt;no&lt;/strong&gt; debe considerarse parte de la API de &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; ; podemos decidir cambiar la implementaci&amp;oacute;n en el futuro.</target>
        </trans-unit>
        <trans-unit id="04964a8b393aeb4c81203022d841d735724a3657" translate="yes" xml:space="preserve">
          <source>NOTE: The intrepid user may notice that &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; is just an alias for an implicit parameter &lt;code&gt;?callStack :: CallStack&lt;/code&gt;. This is an implementation detail and &lt;strong&gt;should not&lt;/strong&gt; be considered part of the &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; API, we may decide to change the implementation in the future.</source>
          <target state="translated">NOTA: El usuario intr&amp;eacute;pido puede notar que &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; es solo un alias para un par&amp;aacute;metro impl&amp;iacute;cito &lt;code&gt;?callStack :: CallStack&lt;/code&gt; . Este es un detalle de implementaci&amp;oacute;n y &lt;strong&gt;no&lt;/strong&gt; debe considerarse parte de la API de &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; ; podemos decidir cambiar la implementaci&amp;oacute;n en el futuro.</target>
        </trans-unit>
        <trans-unit id="74a3caaaf7af6b131af05747420d7f407dc4b9e0" translate="yes" xml:space="preserve">
          <source>NOTE: createHardLink is &lt;em&gt;flipped arguments&lt;/em&gt; to provide compatibility for Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173f40eb49608b0a9f5c7dfe7826130ac61ad0f2" translate="yes" xml:space="preserve">
          <source>NOTE: createHardLink is &lt;em&gt;flipped arguments&lt;/em&gt; to provide compatiblity for Unix.</source>
          <target state="translated">NOTA: createHardLink son &lt;em&gt;argumentos invertidos&lt;/em&gt; para proporcionar compatibilidad para Unix.</target>
        </trans-unit>
        <trans-unit id="4d19907a6a79e56c857a5f3e68218d937122f148" translate="yes" xml:space="preserve">
          <source>NOTE: createSymbolicLink* functions are &lt;em&gt;flipped arguments&lt;/em&gt; to provide compatibility for Unix, except &lt;code&gt;&lt;a href=&quot;system-win32-symboliclink#v:createSymbolicLink-39-&quot;&gt;createSymbolicLink'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65538d1f35d9ff80cfc7afb1ba3058d20b90d2b2" translate="yes" xml:space="preserve">
          <source>NOTE: createSymbolicLink* functions are &lt;em&gt;flipped arguments&lt;/em&gt; to provide compatiblity for Unix, except &lt;code&gt;&lt;a href=&quot;system-win32-symboliclink#v:createSymbolicLink-39-&quot;&gt;createSymbolicLink'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">NOTA: las funciones createSymbolicLink * son &lt;em&gt;argumentos invertidos&lt;/em&gt; para proporcionar compatibilidad con Unix, excepto &lt;code&gt;&lt;a href=&quot;system-win32-symboliclink#v:createSymbolicLink-39-&quot;&gt;createSymbolicLink'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a289febc0a62ac0fd3ddf47889458ad201b28af" translate="yes" xml:space="preserve">
          <source>NOTE: on Windows, this function does not work correctly; it behaves identically to &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">NOTA: en Windows, esta funci&amp;oacute;n no funciona correctamente; se comporta de forma id&amp;eacute;ntica a &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27648f423ffb7efa59e5c0832d0545992c2e7a71" translate="yes" xml:space="preserve">
          <source>NOTE: on Windows, this function does not work correctly; it behaves identically to &lt;code&gt;&lt;a href=&quot;ghc-io-handle-text#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">NOTA: en Windows, esta funci&amp;oacute;n no funciona correctamente; se comporta de forma id&amp;eacute;ntica a &lt;code&gt;&lt;a href=&quot;ghc-io-handle-text#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2f5862ab04e7d70c9d237cade16ad082f1f892f" translate="yes" xml:space="preserve">
          <source>NOTE: on Windows, this function does not work correctly; it behaves identically to &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">NOTA: en Windows, esta funci&amp;oacute;n no funciona correctamente; se comporta de forma id&amp;eacute;ntica a &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="217551d8f091b6742427b78f8d4d21b8576d5bcf" translate="yes" xml:space="preserve">
          <source>NPlusKPatterns</source>
          <target state="translated">NPlusKPatterns</target>
        </trans-unit>
        <trans-unit id="16011665a1d6a1793f7af5691f78690f7db8e797" translate="yes" xml:space="preserve">
          <source>NT namespace: &lt;code&gt;\&lt;/code&gt;</source>
          <target state="translated">Espacio de nombres NT: &lt;code&gt;\&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09b181fc210e2f1a3662ae262c26a3cf3bb2036d" translate="yes" xml:space="preserve">
          <source>NTFS only supprts this functionality.</source>
          <target state="translated">El NTFS sólo soporta esta funcionalidad.</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="e11bc388c83c1b8b82ae73a235837ab0ef1b8869" translate="yes" xml:space="preserve">
          <source>Name lookup</source>
          <target state="translated">Búsqueda de nombres</target>
        </trans-unit>
        <trans-unit id="c1dd5c5a3c784d1dc660322bd2d8b0aadd9447a3" translate="yes" xml:space="preserve">
          <source>Name of the Haskell file.</source>
          <target state="translated">El nombre del archivo de Haskell.</target>
        </trans-unit>
        <trans-unit id="d34370b884a4e0c6661e9211124b058e6efe6336" translate="yes" xml:space="preserve">
          <source>Name of the module where the static pointer is defined</source>
          <target state="translated">Nombre del módulo donde se define el puntero estático</target>
        </trans-unit>
        <trans-unit id="241f55c9dbd4332d828c31c2528891c3f79c4291" translate="yes" xml:space="preserve">
          <source>NameFlavour</source>
          <target state="translated">NameFlavour</target>
        </trans-unit>
        <trans-unit id="43bd2e139f7efc3fb707f38288858777f7d29f55" translate="yes" xml:space="preserve">
          <source>NameIs</source>
          <target state="translated">NameIs</target>
        </trans-unit>
        <trans-unit id="e784a5acc01d14b30b1b161e2114eac0f9da4a44" translate="yes" xml:space="preserve">
          <source>NameS</source>
          <target state="translated">NameS</target>
        </trans-unit>
        <trans-unit id="285f33209f1413ce6482de704071ed860f4ee1f7" translate="yes" xml:space="preserve">
          <source>NameSpace</source>
          <target state="translated">NameSpace</target>
        </trans-unit>
        <trans-unit id="af5f97c76eceeda41176655ffdf797f38db674a9" translate="yes" xml:space="preserve">
          <source>Named arguments can also be given explicit kind signatures if needed. Just as with &lt;a href=&quot;#gadt&quot;&gt;GADT declarations&lt;/a&gt; named arguments are entirely optional, so that we can declare &lt;code&gt;Array&lt;/code&gt; alternatively with</source>
          <target state="translated">Los argumentos con nombre tambi&amp;eacute;n pueden recibir firmas de tipo expl&amp;iacute;citas si es necesario. Al igual que con &lt;a href=&quot;#gadt&quot;&gt;las declaraciones de GADT, los&lt;/a&gt; argumentos con nombre son completamente opcionales, por lo que podemos declarar &lt;code&gt;Array&lt;/code&gt; alternativamente con</target>
        </trans-unit>
        <trans-unit id="e62d156320deceb36f700d974fa40eaf6fd11436" translate="yes" xml:space="preserve">
          <source>Named arguments can also be given explicit kind signatures if needed. Just as with &lt;a href=&quot;gadt#gadt&quot;&gt;GADT declarations&lt;/a&gt; named arguments are entirely optional, so that we can declare &lt;code&gt;Array&lt;/code&gt; alternatively with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453d20a6d115195746f780ef6b881f77130889c3" translate="yes" xml:space="preserve">
          <source>Named wildcards &lt;em&gt;should not be confused with type variables&lt;/em&gt;. Even though syntactically similar, named wildcards can unify with monotypes as well as be generalised over (and behave as type variables).</source>
          <target state="translated">Los comodines con nombre &lt;em&gt;no deben confundirse con variables de tipo&lt;/em&gt; . Aunque sint&amp;aacute;cticamente similares, los comodines con nombre pueden unificarse con monotipos, as&amp;iacute; como generalizarse (y comportarse como variables de tipo).</target>
        </trans-unit>
        <trans-unit id="efd83b1022b74e5c3478447290339e566cb15ae5" translate="yes" xml:space="preserve">
          <source>NamedWildCards</source>
          <target state="translated">NamedWildCards</target>
        </trans-unit>
        <trans-unit id="2b7c08c3ab75f37e2da656c1aab228f5f3a793b1" translate="yes" xml:space="preserve">
          <source>Names</source>
          <target state="translated">Names</target>
        </trans-unit>
        <trans-unit id="b2390be51f0839e05354a4edc7bfb9b402fb9775" translate="yes" xml:space="preserve">
          <source>Names constructed using &lt;code&gt;newName&lt;/code&gt; and &lt;code&gt;mkName&lt;/code&gt; may be used in bindings (such as &lt;code&gt;let x = ...&lt;/code&gt; or &lt;code&gt;x -&amp;gt; ...&lt;/code&gt;), but names constructed using &lt;code&gt;lookupValueName&lt;/code&gt;, &lt;code&gt;lookupTypeName&lt;/code&gt;, &lt;code&gt;'f&lt;/code&gt;, &lt;code&gt;''T&lt;/code&gt; may not.</source>
          <target state="translated">Los nombres construidos usando &lt;code&gt;newName&lt;/code&gt; y &lt;code&gt;mkName&lt;/code&gt; pueden usarse en enlaces (como &lt;code&gt;let x = ...&lt;/code&gt; o &lt;code&gt;x -&amp;gt; ...&lt;/code&gt; ), pero los nombres construidos usando &lt;code&gt;lookupValueName&lt;/code&gt; , &lt;code&gt;lookupTypeName&lt;/code&gt; , &lt;code&gt;'f&lt;/code&gt; , &lt;code&gt;''T&lt;/code&gt; pueden no.</target>
        </trans-unit>
        <trans-unit id="34803b64f16548b242233b7132d75f6e5f8fe8e6" translate="yes" xml:space="preserve">
          <source>Naming conventions</source>
          <target state="translated">Convenciones de nombres</target>
        </trans-unit>
        <trans-unit id="9f71fd1007f8c4abc458163409fae654630b9e86" translate="yes" xml:space="preserve">
          <source>Nano</source>
          <target state="translated">Nano</target>
        </trans-unit>
        <trans-unit id="2e3e963e975a60a6a8a003da6ed817e4d4499a19" translate="yes" xml:space="preserve">
          <source>Nat</source>
          <target state="translated">Nat</target>
        </trans-unit>
        <trans-unit id="fcc28bb1503dac338f555a7ce7320bdbab52e7c3" translate="yes" xml:space="preserve">
          <source>Nat Kind</source>
          <target state="translated">Nat Kind</target>
        </trans-unit>
        <trans-unit id="7322348943287d68f8c176b2c1566795ccc03b7e" translate="yes" xml:space="preserve">
          <source>Native code generator</source>
          <target state="translated">Generador de código nativo</target>
        </trans-unit>
        <trans-unit id="ea26876daa9a0a0caf49391472053413ac06277e" translate="yes" xml:space="preserve">
          <source>Natural</source>
          <target state="translated">Natural</target>
        </trans-unit>
        <trans-unit id="7f0b8727de826105bbce9ba7b95859488d5a3633" translate="yes" xml:space="preserve">
          <source>Natural number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfc30c819c79fca570a6d67601933511b292394" translate="yes" xml:space="preserve">
          <source>Naturality</source>
          <target state="translated">Naturality</target>
        </trans-unit>
        <trans-unit id="a6a233fd10e66b739809092ee7ea7beda5f628ec" translate="yes" xml:space="preserve">
          <source>Nd: Number, Decimal</source>
          <target state="translated">Nd:Número,decimal</target>
        </trans-unit>
        <trans-unit id="58af6d921b3520c3002a4fbc054962eb72c7ec5b" translate="yes" xml:space="preserve">
          <source>Needed to optimize support for different IO Managers on Windows. See Note [The need for getIoManagerFlag]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee52746bd96005ef182ba2d9b60655a4e0ac20d1" translate="yes" xml:space="preserve">
          <source>Negate &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Negar &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06b8058bc282e46c01399ffa04dcfaf5551d96ef" translate="yes" xml:space="preserve">
          <source>Negate element-wise.</source>
          <target state="translated">Negar los elementos.</target>
        </trans-unit>
        <trans-unit id="1c22f0963e34858feada46efcb0a5e32c38f2754" translate="yes" xml:space="preserve">
          <source>Negation (e.g. &amp;ldquo;&lt;code&gt;- (f x)&lt;/code&gt;&amp;rdquo;) means &amp;ldquo;&lt;code&gt;negate (f x)&lt;/code&gt;&amp;rdquo;, both in numeric patterns, and expressions.</source>
          <target state="translated">Negaci&amp;oacute;n (por ejemplo, &amp;ldquo; &lt;code&gt;- (f x)&lt;/code&gt; &amp;rdquo;) significa &amp;ldquo; &lt;code&gt;negate (f x)&lt;/code&gt; &amp;rdquo;, tanto en patrones num&amp;eacute;ricos como en expresiones.</target>
        </trans-unit>
        <trans-unit id="dd048e1f91db2495004257dbd5282e263424faee" translate="yes" xml:space="preserve">
          <source>Negative exponents are supported if an inverse modulo &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; exists.</source>
          <target state="translated">Se admiten exponentes negativos si existe un m&amp;oacute;dulo inverso &lt;code&gt;&lt;em&gt;m&lt;/em&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4f4481fb4d6d71c0fcfc0047e37c0bbb90861f5" translate="yes" xml:space="preserve">
          <source>Negative literals, such as &lt;code&gt;-3&lt;/code&gt;, are specified by (a careful reading of) the Haskell Report as meaning &lt;code&gt;Prelude.negate (Prelude.fromInteger 3)&lt;/code&gt;. So &lt;code&gt;-2147483648&lt;/code&gt; means &lt;code&gt;negate (fromInteger 2147483648)&lt;/code&gt;. Since &lt;code&gt;fromInteger&lt;/code&gt; takes the lower 32 bits of the representation, &lt;code&gt;fromInteger (2147483648::Integer)&lt;/code&gt;, computed at type &lt;code&gt;Int&lt;/code&gt; is &lt;code&gt;-2147483648::Int&lt;/code&gt;. The &lt;code&gt;negate&lt;/code&gt; operation then overflows, but it is unchecked, so &lt;code&gt;negate (-2147483648::Int)&lt;/code&gt; is just &lt;code&gt;-2147483648&lt;/code&gt;. In short, one can write &lt;code&gt;minBound::Int&lt;/code&gt; as a literal with the expected meaning (but that is not in general guaranteed).</source>
          <target state="translated">Los literales negativos, como &lt;code&gt;-3&lt;/code&gt; , son especificados por (una lectura cuidadosa de) el Informe Haskell con el significado de &lt;code&gt;Prelude.negate (Prelude.fromInteger 3)&lt;/code&gt; . Entonces &lt;code&gt;-2147483648&lt;/code&gt; significa &lt;code&gt;negate (fromInteger 2147483648)&lt;/code&gt; . Dado que &lt;code&gt;fromInteger&lt;/code&gt; toma los 32 bits inferiores de la representaci&amp;oacute;n, &lt;code&gt;fromInteger (2147483648::Integer)&lt;/code&gt; , calculado en el tipo &lt;code&gt;Int&lt;/code&gt; es &lt;code&gt;-2147483648::Int&lt;/code&gt; . La operaci&amp;oacute;n de &lt;code&gt;negate&lt;/code&gt; se desborda, pero no est&amp;aacute; marcada, por lo que &lt;code&gt;negate (-2147483648::Int)&lt;/code&gt; es solo &lt;code&gt;-2147483648&lt;/code&gt; . En resumen, se puede escribir &lt;code&gt;minBound::Int&lt;/code&gt; como un literal con el significado esperado (pero eso no est&amp;aacute; garantizado en general).</target>
        </trans-unit>
        <trans-unit id="3e0a90cf89e0e38e6ded6a27d6e570ec770c082d" translate="yes" xml:space="preserve">
          <source>Negative numbers must be parenthesized when they appear in function argument position. &lt;code&gt;f (-5)&lt;/code&gt; is correct, whereas &lt;code&gt;f -5&lt;/code&gt; is parsed as &lt;code&gt;(-) f 5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52baec47edee13dda9979236d74b3a6e53bb526" translate="yes" xml:space="preserve">
          <source>Negative precision is taken as 0. The meaning of the precision depends on the conversion type.</source>
          <target state="translated">La precisión negativa se toma como 0.El significado de la precisión depende del tipo de conversión.</target>
        </trans-unit>
        <trans-unit id="f622cbbe6dc0bf9f80a40c77e1e302b16367df00" translate="yes" xml:space="preserve">
          <source>NegativeLiterals</source>
          <target state="translated">NegativeLiterals</target>
        </trans-unit>
        <trans-unit id="ac634bf99f709c9e754d7e578de589c844f2186a" translate="yes" xml:space="preserve">
          <source>Neither name of the University nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522182dd21569f6be17220e3cac4e333aa5e69ba" translate="yes" xml:space="preserve">
          <source>Nest (or indent) a document by a given number of positions (which may also be negative). &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:nest&quot;&gt;nest&lt;/a&gt;&lt;/code&gt; satisfies the laws:</source>
          <target state="translated">Anidar (o sangrar) un documento por un n&amp;uacute;mero determinado de posiciones (que tambi&amp;eacute;n puede ser negativo). &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:nest&quot;&gt;nest&lt;/a&gt;&lt;/code&gt; cumple las leyes:</target>
        </trans-unit>
        <trans-unit id="949a22e40a67eb32fd127980e8bf7757812da720" translate="yes" xml:space="preserve">
          <source>Nest (or indent) a document by a given number of positions (which may also be negative). &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:nest&quot;&gt;nest&lt;/a&gt;&lt;/code&gt; satisfies the laws:</source>
          <target state="translated">Anidar (o sangrar) un documento por un n&amp;uacute;mero determinado de posiciones (que tambi&amp;eacute;n puede ser negativo). &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:nest&quot;&gt;nest&lt;/a&gt;&lt;/code&gt; cumple las leyes:</target>
        </trans-unit>
        <trans-unit id="2fd44f8ebe0a7e3b2bea5c918f154b8513f223e1" translate="yes" xml:space="preserve">
          <source>Nest (or indent) a document by a given number of positions (which may also be negative). &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:nest&quot;&gt;nest&lt;/a&gt;&lt;/code&gt; satisfies the laws:</source>
          <target state="translated">Anidar (o sangrar) un documento por un n&amp;uacute;mero determinado de posiciones (que tambi&amp;eacute;n puede ser negativo). &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:nest&quot;&gt;nest&lt;/a&gt;&lt;/code&gt; cumple las leyes:</target>
        </trans-unit>
        <trans-unit id="2344677d8f01e8e2fca317a5c561cc80f092e37c" translate="yes" xml:space="preserve">
          <source>Nested</source>
          <target state="translated">Nested</target>
        </trans-unit>
        <trans-unit id="720741a1472872a68ca3c388c3c11a286d659bd3" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;do&lt;/code&gt; blocks do not affect each other&amp;rsquo;s meanings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67a4e0cdcad34714be98100536800680402b530" translate="yes" xml:space="preserve">
          <source>NestedAtomically</source>
          <target state="translated">NestedAtomically</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="a2577c561d86f6ba3c73b6eefeafce792f6e11cc" translate="yes" xml:space="preserve">
          <source>Nevertheless one can pretend that the following three kinds of instances exist. First, as a trivial base-case:</source>
          <target state="translated">Sin embargo,se puede pretender que existen los siguientes tres tipos de instancias.Primero,como un caso base trivial:</target>
        </trans-unit>
        <trans-unit id="cfe594798e5ee5a9536eb68772725a21269ab358" translate="yes" xml:space="preserve">
          <source>New parsing functions</source>
          <target state="translated">Nuevas funciones de análisis sintáctico</target>
        </trans-unit>
        <trans-unit id="1523c8acdb2ee4d7786ae768261d0c785a7a6dd4" translate="yes" xml:space="preserve">
          <source>New path</source>
          <target state="translated">Nuevo camino</target>
        </trans-unit>
        <trans-unit id="2f086c7950ef417a974e200114c1f6896effacb4" translate="yes" xml:space="preserve">
          <source>New reserved words and symbols: character sequences which are no longer available for use as identifiers in the program.</source>
          <target state="translated">Nuevas palabras y símbolos reservados:secuencias de caracteres que ya no están disponibles para su uso como identificadores en el programa.</target>
        </trans-unit>
        <trans-unit id="2b86793d71ec22bae7c09d67603a4b5ca57fee12" translate="yes" xml:space="preserve">
          <source>New size of array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d706a7f27906e3a8bf4f4fed0f9c3d7edc4a240a" translate="yes" xml:space="preserve">
          <source>Newline</source>
          <target state="translated">Newline</target>
        </trans-unit>
        <trans-unit id="08342fdb7e4d5979ac614e4583b9d664b9d3d88c" translate="yes" xml:space="preserve">
          <source>Newline conversion</source>
          <target state="translated">Conversión de nueva línea</target>
        </trans-unit>
        <trans-unit id="ada069b2de824a0d3a8b152fde78626a8e8b8ade" translate="yes" xml:space="preserve">
          <source>NewlineMode</source>
          <target state="translated">NewlineMode</target>
        </trans-unit>
        <trans-unit id="9b709dfae84cfac1c978bbe397d4df6e001163d1" translate="yes" xml:space="preserve">
          <source>Newly created slots initialized to this element. Only used when array is grown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d70c1effde2f8c015bfb84f7838e84613e007f3" translate="yes" xml:space="preserve">
          <source>NewtypeStrategy</source>
          <target state="translated">NewtypeStrategy</target>
        </trans-unit>
        <trans-unit id="ca33c65ffa7a8e2e461597acbdf8adbf2c6312c3" translate="yes" xml:space="preserve">
          <source>Newtypes are better than datatypes:</source>
          <target state="translated">Los nuevos tipos son mejores que los tipos de datos:</target>
        </trans-unit>
        <trans-unit id="bc981983e7f547dc62e19a1e383acfe00782a6d5" translate="yes" xml:space="preserve">
          <source>Next</source>
          <target state="translated">Next</target>
        </trans-unit>
        <trans-unit id="bb1a13dad76ab6476212d16d134ffcbc89390074" translate="yes" xml:space="preserve">
          <source>Next free byte in current &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Siguiente byte libre en &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; actual</target>
        </trans-unit>
        <trans-unit id="4ae9c52b894383b8025369fa03e4f1485c55d887" translate="yes" xml:space="preserve">
          <source>Next free byte in current &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Siguiente byte libre en &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; actual .</target>
        </trans-unit>
        <trans-unit id="6ae27512f7d04b93e6ab0f5a142fdb6a159a3a6d" translate="yes" xml:space="preserve">
          <source>Next position calculating function.</source>
          <target state="translated">Función de cálculo de la siguiente posición.</target>
        </trans-unit>
        <trans-unit id="499df2c9156f9e7492c202932262c12764a363a7" translate="yes" xml:space="preserve">
          <source>Next there is information about the garbage collections done. For each generation it says how many garbage collections were done, how many of those collections were done in parallel, the total CPU time used for garbage collecting that generation, and the total wall clock time elapsed while garbage collecting that generation.</source>
          <target state="translated">A continuación,hay información sobre las recolecciones de basura realizadas.Para cada generación dice cuántas recolecciones de basura se hicieron,cuántas de esas recolecciones se hicieron en paralelo,el tiempo total de la CPU usado para la recolección de basura de esa generación,y el tiempo total del reloj de pared transcurrido mientras se recolectaba la basura de esa generación.</target>
        </trans-unit>
        <trans-unit id="833ff1d27fbdf158e7b505b01c19b8b1b95cec80" translate="yes" xml:space="preserve">
          <source>Next there is the CPU time and wall clock time elapsed broken down by what the runtime system was doing at the time. INIT is the runtime system initialisation. MUT is the mutator time, i.e. the time spent actually running your code. GC is the time spent doing garbage collection. RP is the time spent doing retainer profiling. PROF is the time spent doing other profiling. EXIT is the runtime system shutdown time. And finally, Total is, of course, the total.</source>
          <target state="translated">Luego está el tiempo de la CPU y el tiempo del reloj de pared transcurrido desglosado por lo que el sistema de tiempo de ejecución estaba haciendo en ese momento.INICIO es la inicialización del sistema de tiempo de ejecución.MUT es el tiempo del mutador,es decir,el tiempo que pasó realmente ejecutando su código.GC es el tiempo empleado en la recogida de basura.RP es el tiempo que se pasa haciendo perfiles de retención.PROF es el tiempo que se pasa haciendo otros perfiles.EXIT es el tiempo de parada del sistema en tiempo de ejecución.Y finalmente,Total es,por supuesto,el total.</target>
        </trans-unit>
        <trans-unit id="6e08ae4fe787b1e828f2d0c8f144343e2fec4132" translate="yes" xml:space="preserve">
          <source>Next to &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; there are a few more type constructors that occur in the representations of other datatypes.</source>
          <target state="translated">Al lado de &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; hay unas cuantas m&amp;aacute;s constructores de tipos que se producen en las representaciones de otros tipos de datos.</target>
        </trans-unit>
        <trans-unit id="64a331e6f60cb1a7ad554cbc5ac1d707fce97281" translate="yes" xml:space="preserve">
          <source>Next, it will perform the actions in the &lt;code&gt;actions&lt;/code&gt; list in order from left to right.</source>
          <target state="translated">A continuaci&amp;oacute;n, realizar&amp;aacute; las acciones de la lista de &lt;code&gt;actions&lt;/code&gt; en orden de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="c916da70cd4a32512ca71d70e5cc765d00357df4" translate="yes" xml:space="preserve">
          <source>Nil</source>
          <target state="translated">Nil</target>
        </trans-unit>
        <trans-unit id="01254dc62ba02c8f98ce116687b65348bfae9d10" translate="yes" xml:space="preserve">
          <source>Nils Anders Danielsson 2006</source>
          <target state="translated">Nils Anders Danielsson 2006</target>
        </trans-unit>
        <trans-unit id="c6b76279a253069e49509991acb2a0fc6c0289e6" translate="yes" xml:space="preserve">
          <source>Nl: Number, Letter</source>
          <target state="translated">Nl:Número,letra</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="e18dd77372be6a1409a708e6d14bcd9b7f68a5f9" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;-RTS&lt;/code&gt; option is required if the runtime-system options extend to the end of the command line, as in this example:</source>
          <target state="translated">No se &lt;code&gt;-RTS&lt;/code&gt; opci&amp;oacute;n -RTS si las opciones del sistema de tiempo de ejecuci&amp;oacute;n se extienden hasta el final de la l&amp;iacute;nea de comandos, como en este ejemplo:</target>
        </trans-unit>
        <trans-unit id="707c81ee0c3909e525ac07b27c0a7023a5bea3e3" translate="yes" xml:space="preserve">
          <source>No finalizer. If there is no intent to add a finalizer at any point in the future, consider &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:FinalPtr&quot;&gt;FinalPtr&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:PlainPtr&quot;&gt;PlainPtr&lt;/a&gt;&lt;/code&gt; instead since these perform fewer allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899c963a8035b8eff10bff6d0639741ad4e409cb" translate="yes" xml:space="preserve">
          <source>No guarantee is made as to the sizes of the pieces; an internal, but deterministic process determines this. However, it is guaranteed that the pieces returned will be in ascending order (all elements in the first submap less than all elements in the second, and so on).</source>
          <target state="translated">No se garantiza el tamaño de las piezas;un proceso interno,pero determinante,lo determina.Sin embargo,se garantiza que las piezas devueltas estarán en orden ascendente (todos los elementos del primer submapa menos que todos los elementos del segundo,y así sucesivamente).</target>
        </trans-unit>
        <trans-unit id="5b4acda8d542358f213b8f3e4e1650164df9bfe7" translate="yes" xml:space="preserve">
          <source>No guarantee is made as to the sizes of the pieces; an internal, but deterministic process determines this. However, it is guaranteed that the pieces returned will be in ascending order (all elements in the first subset less than all elements in the second, and so on).</source>
          <target state="translated">No se garantiza el tamaño de las piezas;un proceso interno,pero determinante,lo determina.Sin embargo,se garantiza que las piezas devueltas estarán en orden ascendente (todos los elementos del primer subconjunto menos que todos los elementos del segundo,y así sucesivamente).</target>
        </trans-unit>
        <trans-unit id="77c3849165d91154401b080a528c1f07258f9117" translate="yes" xml:space="preserve">
          <source>No indentation, infinitely long lines (&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignored), but explicit new lines, i.e., &lt;code&gt;text &quot;one&quot; $$ text &quot;two&quot;&lt;/code&gt;, are respected.</source>
          <target state="translated">Sin sangr&amp;iacute;a, l&amp;iacute;neas infinitamente largas ( &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignorado), pero l&amp;iacute;neas nuevas expl&amp;iacute;citas, es decir, &lt;code&gt;text &quot;one&quot; $$ text &quot;two&quot;&lt;/code&gt; , se respetan.</target>
        </trans-unit>
        <trans-unit id="d21eb7c7dc916ac561e541148784eed9a679e1bb" translate="yes" xml:space="preserve">
          <source>No indentation, infinitely long lines (&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignored), but explicit new lines, i.e., &lt;code&gt;text &quot;one&quot; $$ text &quot;two&quot;&lt;/code&gt;, are respected.</source>
          <target state="translated">Sin sangr&amp;iacute;a, l&amp;iacute;neas infinitamente largas ( &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignorado), pero l&amp;iacute;neas nuevas expl&amp;iacute;citas, es decir, &lt;code&gt;text &quot;one&quot; $$ text &quot;two&quot;&lt;/code&gt; , se respetan.</target>
        </trans-unit>
        <trans-unit id="538a5adae1b6b87754931f19e7d8936b73a4e244" translate="yes" xml:space="preserve">
          <source>No indentation, infinitely long lines (&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignored), but explicit new lines, i.e., &lt;code&gt;text &quot;one&quot; $$ text &quot;two&quot;&lt;/code&gt;, are respected.</source>
          <target state="translated">Sin sangr&amp;iacute;a, l&amp;iacute;neas infinitamente largas ( &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignorado), pero l&amp;iacute;neas nuevas expl&amp;iacute;citas, es decir, &lt;code&gt;text &quot;one&quot; $$ text &quot;two&quot;&lt;/code&gt; , se respetan.</target>
        </trans-unit>
        <trans-unit id="cbe83843190c4d65bded786e194509b323e2b4b6" translate="yes" xml:space="preserve">
          <source>No language extension is required to use typed holes. The lexeme &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo; was previously illegal in Haskell, but now has a more informative error message. The lexeme &amp;ldquo;&lt;code&gt;_x&lt;/code&gt;&amp;rdquo; is a perfectly legal variable, and its behaviour is unchanged when it is in scope. For example</source>
          <target state="translated">No se requiere una extensi&amp;oacute;n de idioma para usar huecos escritos. El lexema &quot; &lt;code&gt;_&lt;/code&gt; &quot; anteriormente era ilegal en Haskell, pero ahora tiene un mensaje de error m&amp;aacute;s informativo. El lexema &amp;ldquo; &lt;code&gt;_x&lt;/code&gt; &amp;rdquo; es una variable perfectamente legal, y su comportamiento no cambia cuando est&amp;aacute; dentro del alcance. Por ejemplo</target>
        </trans-unit>
        <trans-unit id="e9413c2cb6cce1148a677bc74e708c4b678606be" translate="yes" xml:space="preserve">
          <source>No longer set the special variable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">Ya no establezca la variable especial &lt;code&gt;it&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba52b26fd5e250674e73b63230f34aa9f35b6cbc" translate="yes" xml:space="preserve">
          <source>No permissions.</source>
          <target state="translated">No hay permisos.</target>
        </trans-unit>
        <trans-unit id="ed1a8e9d366a2d42a52953aa766c21a8b8f47167" translate="yes" xml:space="preserve">
          <source>No thread can be blocked indefinitely on an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; unless another thread holds that &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; indefinitely. One usual implementation of this fairness guarantee is that threads blocked on an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; are served in a first-in-first-out fashion, but this is not guaranteed in the semantics.</source>
          <target state="translated">Ning&amp;uacute;n subproceso puede bloquearse indefinidamente en un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; a menos que otro subproceso mantenga ese &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; indefinidamente. Una implementaci&amp;oacute;n habitual de esta garant&amp;iacute;a de equidad es que los subprocesos bloqueados en un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; se sirven de la manera primero en entrar, primero en salir, pero esto no est&amp;aacute; garantizado en la sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="e89a24f8be4016dc5286a75b757316d4b7da6b5e" translate="yes" xml:space="preserve">
          <source>No type variable has more occurrences in the constraint than in the head</source>
          <target state="translated">Ninguna variable de tipo tiene más ocurrencias en la restricción que en la cabeza</target>
        </trans-unit>
        <trans-unit id="55d4b4e7dd7bd572505570594fa8970268f4ed9d" translate="yes" xml:space="preserve">
          <source>No variable may have a levity-polymorphic type.</source>
          <target state="translated">Ninguna variable puede tener un tipo de levedad polimórfica.</target>
        </trans-unit>
        <trans-unit id="8537ab3e90e8c51e2b9081150af774e31041f634" translate="yes" xml:space="preserve">
          <source>No: Number, Other</source>
          <target state="translated">No:Número,Otro</target>
        </trans-unit>
        <trans-unit id="fa97e7279198646152703496467a958452203e8b" translate="yes" xml:space="preserve">
          <source>NoBuffering</source>
          <target state="translated">NoBuffering</target>
        </trans-unit>
        <trans-unit id="0d317c9df796aacafead371d325df7dc06bab899" translate="yes" xml:space="preserve">
          <source>NoFinalizers</source>
          <target state="translated">NoFinalizers</target>
        </trans-unit>
        <trans-unit id="187e10d0186766ac8ef38b6b2737dbcd0a0167a3" translate="yes" xml:space="preserve">
          <source>NoFlushOnInterrupt</source>
          <target state="translated">NoFlushOnInterrupt</target>
        </trans-unit>
        <trans-unit id="70c98d57d8ada0b33fa9e5d439c03bb6aa7f0530" translate="yes" xml:space="preserve">
          <source>NoGCStats</source>
          <target state="translated">NoGCStats</target>
        </trans-unit>
        <trans-unit id="e97b63987d7eba398a31aaf58656483d162d92ad" translate="yes" xml:space="preserve">
          <source>NoHeapProfiling</source>
          <target state="translated">NoHeapProfiling</target>
        </trans-unit>
        <trans-unit id="c0bb723db37af9d0e89d2d4da6bdcdd3458e352e" translate="yes" xml:space="preserve">
          <source>NoIO</source>
          <target state="translated">NoIO</target>
        </trans-unit>
        <trans-unit id="6ded8bea31740baa2d151730d57c270b35577c09" translate="yes" xml:space="preserve">
          <source>NoInline</source>
          <target state="translated">NoInline</target>
        </trans-unit>
        <trans-unit id="444ea91c7df550f94f3d747738c1f1a3466e0cc6" translate="yes" xml:space="preserve">
          <source>NoMethodError</source>
          <target state="translated">NoMethodError</target>
        </trans-unit>
        <trans-unit id="0574b23b4939ce65f86fe9caa145b7ac867f74b5" translate="yes" xml:space="preserve">
          <source>NoRep</source>
          <target state="translated">NoRep</target>
        </trans-unit>
        <trans-unit id="1f05476b651d40952a09c240ebf9fac1ee2f0ecf" translate="yes" xml:space="preserve">
          <source>NoSig</source>
          <target state="translated">NoSig</target>
        </trans-unit>
        <trans-unit id="4f1a01f2c1623f4835ba19bede7f20adf4398de2" translate="yes" xml:space="preserve">
          <source>NoSignalSpecificInfo</source>
          <target state="translated">NoSignalSpecificInfo</target>
        </trans-unit>
        <trans-unit id="3d74bf1957091d8e6ef1871b6be8c6329c5dc42a" translate="yes" xml:space="preserve">
          <source>NoSourceStrictness</source>
          <target state="translated">NoSourceStrictness</target>
        </trans-unit>
        <trans-unit id="0c2a4e95086b0b409bb4f59152de8186a4620e2e" translate="yes" xml:space="preserve">
          <source>NoSourceUnpackedness</source>
          <target state="translated">NoSourceUnpackedness</target>
        </trans-unit>
        <trans-unit id="2c12d214fa2aec0228a5d637aa7ea65cc010993a" translate="yes" xml:space="preserve">
          <source>NoSpecConstr</source>
          <target state="translated">NoSpecConstr</target>
        </trans-unit>
        <trans-unit id="c87682f274a125492ffb6e8e300878ad8dfd10c4" translate="yes" xml:space="preserve">
          <source>NoStream</source>
          <target state="translated">NoStream</target>
        </trans-unit>
        <trans-unit id="a07ff5298c0951a2189ecc18db227733a60fe41f" translate="yes" xml:space="preserve">
          <source>NoSuchThing</source>
          <target state="translated">NoSuchThing</target>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="7b31028629115aecb301b21cc97f7edef2c73b0d" translate="yes" xml:space="preserve">
          <source>Noindex:</source>
          <target state="translated">Noindex:</target>
        </trans-unit>
        <trans-unit id="80e02bcdfb29620da030c45545609a5abf4202d6" translate="yes" xml:space="preserve">
          <source>NominalDiffTime</source>
          <target state="translated">NominalDiffTime</target>
        </trans-unit>
        <trans-unit id="abf94255694225d9e3e43eaf362134e8526f6ae7" translate="yes" xml:space="preserve">
          <source>NominalR</source>
          <target state="translated">NominalR</target>
        </trans-unit>
        <trans-unit id="037918d2c5120c9cbb587548e13bc313033ab3b2" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;../base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="translated">Esta variante no detecta las excepciones que no son de E / S; para capturar todas las excepciones, use la &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; de &lt;a href=&quot;../base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20d74269687af42f4b4b46a0d3082a85e712f116" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;../base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="translated">Esta variante no detecta las excepciones que no son de E / S; para capturar todas las excepciones, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;../base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="807536be49abd7e4ede9ecfbdfd745c107cf953a" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25418d52199dc7c513f4cee3f73d6d7310cf1f5c" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89158cc3bd13635840be9cbac3e6748db2d907e1" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;../base-4.15.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712bf5b3c0722204bbfa5e5b29cc7f28e9d26a6a" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;../base-4.15.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170135375b67e03b02c70f49ab98d2f0cdc114a4" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="translated">Esta variante no detecta las excepciones que no son de E / S; para capturar todas las excepciones, use la &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; de &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07172365937f11c692e2378e135c9de0a6c4fc1d" translate="yes" xml:space="preserve">
          <source>Non-I/O exceptions are not caught by this variant; to catch all exceptions, use &lt;code&gt;&lt;a href=&quot;control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="translated">Esta variante no detecta las excepciones que no son de E / S; para capturar todas las excepciones, use &lt;code&gt;&lt;a href=&quot;control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a175d95577964fb56cb4711f1d7a40794f1985b" translate="yes" xml:space="preserve">
          <source>Non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25aed430b07f146833188f2c98703c7e3ef2511c" translate="yes" xml:space="preserve">
          <source>Non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Versi&amp;oacute;n sin bloqueo de &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15bf21e487b389622890a596e34f6fc7e8f358bf" translate="yes" xml:space="preserve">
          <source>Non-breaking space.</source>
          <target state="translated">Espacio sin romper.</target>
        </trans-unit>
        <trans-unit id="657f262735772874a296a8f71e1b1c62bf07d9a2" translate="yes" xml:space="preserve">
          <source>Non-empty (and non-strict) list type.</source>
          <target state="translated">Tipo de lista no vacía (y no estricta).</target>
        </trans-unit>
        <trans-unit id="b5705ef9b6ed9ffaa0586c5a035fc344b83d2dc7" translate="yes" xml:space="preserve">
          <source>Non-empty stream transformations</source>
          <target state="translated">Transformaciones de corrientes no vacías</target>
        </trans-unit>
        <trans-unit id="66475509406517f2fea398ae5c038a688074d402" translate="yes" xml:space="preserve">
          <source>Non-empty, possibly infinite, multi-way trees; also known as &lt;em&gt;rose trees&lt;/em&gt;.</source>
          <target state="translated">&amp;Aacute;rboles no vac&amp;iacute;os, posiblemente infinitos, de m&amp;uacute;ltiples direcciones; tambi&amp;eacute;n conocido como &lt;em&gt;rosales&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="118fcb6b47ea6e15234cae7f675b98f3c5573c53" translate="yes" xml:space="preserve">
          <source>Non-orphan &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance only defined for &lt;code&gt;base-4.9.0.0&lt;/code&gt; and later; orphan instances for older GHCs are provided by the &lt;a href=&quot;http://hackage.haskell.org/package/semigroups&quot;&gt;semigroups&lt;/a&gt; package</source>
          <target state="translated">Instancia de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; no hu&amp;eacute;rfana solo definida para &lt;code&gt;base-4.9.0.0&lt;/code&gt; y posterior; Las instancias hu&amp;eacute;rfanas para GHC m&amp;aacute;s antiguas las proporciona el paquete de &lt;a href=&quot;http://hackage.haskell.org/package/semigroups&quot;&gt;semigrupos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ecdd09903f2088ad3dbc8beaa6ad86be3ab5df1c" translate="yes" xml:space="preserve">
          <source>Non-orphan &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance only defined for &lt;code&gt;base-4.9.0.0&lt;/code&gt; and later; orphan instances for older GHCs are provided by the &lt;a href=&quot;http://hackage.haskell.org/package/semigroups&quot;&gt;semigroups&lt;/a&gt; package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92086f9c87448dcbfcc888dbd80a2acee59efe1" translate="yes" xml:space="preserve">
          <source>Non-orphan &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance only defined for &lt;code&gt;base-4.9.0.0&lt;/code&gt; and later; orphan instances for older GHCs are provided by the &lt;a href=&quot;https://hackage.haskell.org/package/semigroups&quot;&gt;semigroups&lt;/a&gt; package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a62670f2797b774ced2a5536c4d0d7d1acb628" translate="yes" xml:space="preserve">
          <source>Non-portable (Win32 API)</source>
          <target state="translated">No portátil (Win32 API)</target>
        </trans-unit>
        <trans-unit id="de79a7eacd9c8f0b77168b00c602dc91ea05f6b2" translate="yes" xml:space="preserve">
          <source>Non-portable, host-dependent</source>
          <target state="translated">No portátil,dependiente del anfitrión</target>
        </trans-unit>
        <trans-unit id="92677a20e8a5fd94c0d5c1b4a2da0341122cf84c" translate="yes" xml:space="preserve">
          <source>NonBlockingRead</source>
          <target state="translated">NonBlockingRead</target>
        </trans-unit>
        <trans-unit id="5b969d02f949f3f49405f19ebd47eac2c53d5a3b" translate="yes" xml:space="preserve">
          <source>NonEmpty</source>
          <target state="translated">NonEmpty</target>
        </trans-unit>
        <trans-unit id="40c6def45ece9471c76046198d964195df309603" translate="yes" xml:space="preserve">
          <source>NonSpacingMark</source>
          <target state="translated">NonSpacingMark</target>
        </trans-unit>
        <trans-unit id="b990552d62e10bbd5a741b4ac2ab3d4c18f945d9" translate="yes" xml:space="preserve">
          <source>NonTermination</source>
          <target state="translated">NonTermination</target>
        </trans-unit>
        <trans-unit id="3784bca2cdaf835e7f86ca7f9511c965f0a8c209" translate="yes" xml:space="preserve">
          <source>NondecreasingIndentation</source>
          <target state="translated">NondecreasingIndentation</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="bfdd57f5fd1d7e78a4d4d0ea99c256bf3ed1633e" translate="yes" xml:space="preserve">
          <source>None of the process-creation functions in this library wait for termination: they all return a &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt; which may be used to wait for the process later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c599027fb1d35ffa00b3e30d51774d4325f6d3cd" translate="yes" xml:space="preserve">
          <source>None of the process-creation functions in this library wait for termination: they all return a &lt;code&gt;&lt;a href=&quot;system-process-internals#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt; which may be used to wait for the process later.</source>
          <target state="translated">Ninguna de las funciones de creaci&amp;oacute;n de procesos en esta biblioteca espera la terminaci&amp;oacute;n: todas devuelven un &lt;code&gt;&lt;a href=&quot;system-process-internals#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt; que puede usarse para esperar el proceso m&amp;aacute;s tarde.</target>
        </trans-unit>
        <trans-unit id="64d718b604b802439e898076aa4d8e2656afd5eb" translate="yes" xml:space="preserve">
          <source>None of these restrictions are enforced at compile time. Failure to heed these restrictions will lead to runtime errors that can be very difficult to track down. (The errors likely will not manifest until garbage collection happens.) In tabular form, these restrictions are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179bfbb77ce151401fc8902ad181e29e5aa72b44" translate="yes" xml:space="preserve">
          <source>None of these scenarios gives rise to an error on its own &lt;a href=&quot;#id6&quot; id=&quot;id3&quot;&gt;1&lt;/a&gt;, but they may have some interesting consequences. For instance, if you have a type &lt;code&gt;M.T&lt;/code&gt; from version 1 of package &lt;code&gt;P&lt;/code&gt;, then this is &lt;em&gt;not&lt;/em&gt; the same as the type &lt;code&gt;M.T&lt;/code&gt; from version 2 of package &lt;code&gt;P&lt;/code&gt;, and GHC will report an error if you try to use one where the other is expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a74eb719911afcf06b21975147c785a0bc25d01" translate="yes" xml:space="preserve">
          <source>None of these scenarios gives rise to an error on its own &lt;a href=&quot;#id6&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;, but they may have some interesting consequences. For instance, if you have a type &lt;code&gt;M.T&lt;/code&gt; from version 1 of package &lt;code&gt;P&lt;/code&gt;, then this is &lt;em&gt;not&lt;/em&gt; the same as the type &lt;code&gt;M.T&lt;/code&gt; from version 2 of package &lt;code&gt;P&lt;/code&gt;, and GHC will report an error if you try to use one where the other is expected.</source>
          <target state="translated">Ninguno de estos escenarios da lugar a un error por s&amp;iacute; solo &lt;a href=&quot;#id6&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt; , pero pueden tener algunas consecuencias interesantes. Por ejemplo, si tiene un tipo &lt;code&gt;M.T&lt;/code&gt; de la versi&amp;oacute;n 1 del paquete &lt;code&gt;P&lt;/code&gt; , entonces este &lt;em&gt;no&lt;/em&gt; es el mismo que el tipo &lt;code&gt;M.T&lt;/code&gt; de la versi&amp;oacute;n 2 del paquete &lt;code&gt;P&lt;/code&gt; , y GHC informar&amp;aacute; un error si intenta usar uno donde se espera el otro. .</target>
        </trans-unit>
        <trans-unit id="69de0eaa26a62ea07b1802cfb77025b19669e630" translate="yes" xml:space="preserve">
          <source>None, one or many flags: FORCE_DOWNLOAD, NEW_SESSION, LOGON_UI, PASSWORD_UI</source>
          <target state="translated">Ninguna,una o muchas banderas:FORCE_DOWNLOAD,NEW_SESSION,LOGON_UI,PASSWORD_UI</target>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="3956b2dc6672b7a8aeba865f33ebd6d3f65e6bf3" translate="yes" xml:space="preserve">
          <source>Nor this, since we can&amp;rsquo;t match the type variable &lt;code&gt;b&lt;/code&gt; with the concrete type &lt;code&gt;Int&lt;/code&gt;:</source>
          <target state="translated">Tampoco esto, ya que no podemos hacer coincidir la variable de tipo &lt;code&gt;b&lt;/code&gt; con el tipo concreto &lt;code&gt;Int&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d20bdaf69fe8a19867cb42c9cdb8f5cb996bbe72" translate="yes" xml:space="preserve">
          <source>Normal GHC command-line options may also be set using &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt;. For example, to turn on &lt;a href=&quot;using-warnings#ghc-flag--Wmissing-signatures&quot;&gt;&lt;code&gt;-Wmissing-signatures&lt;/code&gt;&lt;/a&gt;, you would say:</source>
          <target state="translated">Las opciones normales de la l&amp;iacute;nea de comandos de GHC tambi&amp;eacute;n se pueden configurar usando &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; . Por ejemplo, para activar &lt;a href=&quot;using-warnings#ghc-flag--Wmissing-signatures&quot;&gt; &lt;code&gt;-Wmissing-signatures&lt;/code&gt; &lt;/a&gt; , dir&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="513df9742a975687401c53473a16fb97236fc768" translate="yes" xml:space="preserve">
          <source>Normal rendering (&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; respected').</source>
          <target state="translated">Prestaci&amp;oacute;n normal ( &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; respetados ').</target>
        </trans-unit>
        <trans-unit id="8783461cc620ec6206ab159d2917107156d93ac4" translate="yes" xml:space="preserve">
          <source>Normal rendering (&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; respected').</source>
          <target state="translated">Prestaci&amp;oacute;n normal ( &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; respetados ').</target>
        </trans-unit>
        <trans-unit id="1141a9ad4c5428e5700498684f4c71b8dcf76603" translate="yes" xml:space="preserve">
          <source>Normal rendering (&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; respected').</source>
          <target state="translated">Prestaci&amp;oacute;n normal ( &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; respetados ').</target>
        </trans-unit>
        <trans-unit id="22f3e78d5abb68171706a8fafe82f673d997000a" translate="yes" xml:space="preserve">
          <source>Normalise a file</source>
          <target state="translated">Normalizar un archivo</target>
        </trans-unit>
        <trans-unit id="611ffe5a187425b7883a55311ee06c6a7a49d00e" translate="yes" xml:space="preserve">
          <source>Normally &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; replaces the default package stack. For example, all of the following commands are equivalent, creating a stack with db1 at the top followed by db2 (use &lt;code&gt;;&lt;/code&gt; instead of &lt;code&gt;:&lt;/code&gt; on Windows):</source>
          <target state="translated">Normalmente, &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; reemplaza la pila de paquetes predeterminada. Por ejemplo, todos los siguientes mandatos son equivalentes, creando una pila con db1 en la parte superior seguido de db2 (utilice &lt;code&gt;;&lt;/code&gt; en lugar de &lt;code&gt;:&lt;/code&gt; en Windows):</target>
        </trans-unit>
        <trans-unit id="c4d28ac1c5fe75c0d62d49db7673ea2ff1f98808" translate="yes" xml:space="preserve">
          <source>Normally GHC will do a reasonable job of deciding by itself when it is a good idea to inline a function. However, sometimes you might want to override the default behaviour. For example, if you have a key function that is important to inline because it leads to further optimisations, but GHC judges it to be too big to inline.</source>
          <target state="translated">Normalmente el GHC hará un trabajo razonable para decidir por sí mismo cuando es una buena idea para inlinear una función.Sin embargo,a veces puede querer anular el comportamiento por defecto.Por ejemplo,si tienes una función clave que es importante para la línea porque conduce a más optimizaciones,pero GHC juzga que es demasiado grande para la línea.</target>
        </trans-unit>
        <trans-unit id="eded18b2562ae6d637501fe2701b0cdec14061a3" translate="yes" xml:space="preserve">
          <source>Normally GHCi runs the interpreted code in the same process as GHC itself, on top of the same RTS and sharing the same heap. However, if the flag &lt;a href=&quot;#ghc-flag--fexternal-interpreter&quot;&gt;&lt;code&gt;-fexternal-interpreter&lt;/code&gt;&lt;/a&gt; is given, then GHC will spawn a separate process for running interpreted code, and communicate with it using messages over a pipe.</source>
          <target state="translated">Normalmente, GHCi ejecuta el c&amp;oacute;digo interpretado en el mismo proceso que GHC mismo, sobre el mismo RTS y compartiendo el mismo mont&amp;oacute;n. Sin embargo, si se proporciona el indicador &lt;a href=&quot;#ghc-flag--fexternal-interpreter&quot;&gt; &lt;code&gt;-fexternal-interpreter&lt;/code&gt; &lt;/a&gt; , GHC generar&amp;aacute; un proceso separado para ejecutar el c&amp;oacute;digo interpretado y se comunicar&amp;aacute; con &amp;eacute;l mediante mensajes a trav&amp;eacute;s de una tuber&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="c241ae0454c5e6b2d8549ed450bb4a03abf609b0" translate="yes" xml:space="preserve">
          <source>Normally a profile is limited to 20 bands with additional identifiers being grouped into an &lt;code&gt;OTHER&lt;/code&gt; band. The &lt;code&gt;-l&lt;/code&gt; flag removes this 20 band and limit, producing as many bands as necessary. No key is produced as it won&amp;rsquo;t fit!. It is useful for creation time profiles with many bands.</source>
          <target state="translated">Normalmente, un perfil est&amp;aacute; limitado a 20 bandas y los identificadores adicionales se agrupan en una banda &lt;code&gt;OTHER&lt;/code&gt; . La bandera &lt;code&gt;-l&lt;/code&gt; elimina esta banda y l&amp;iacute;mite de 20, produciendo tantas bandas como sea necesario. No se produce ninguna llave porque no encaja. Es &amp;uacute;til para crear perfiles de tiempo con muchas bandas.</target>
        </trans-unit>
        <trans-unit id="64c59b3d2432ce6c3b8d68909de92442ecb84597" translate="yes" xml:space="preserve">
          <source>Normally a profile is limited to 20 bands with additional identifiers being grouped into an &lt;code&gt;OTHER&lt;/code&gt; band. The &lt;code&gt;-m&lt;/code&gt; flag specifies an alternative band limit (the maximum is 20).</source>
          <target state="translated">Normalmente, un perfil est&amp;aacute; limitado a 20 bandas y los identificadores adicionales se agrupan en una banda &lt;code&gt;OTHER&lt;/code&gt; . La bandera &lt;code&gt;-m&lt;/code&gt; especifica un l&amp;iacute;mite de banda alternativo (el m&amp;aacute;ximo es 20).</target>
        </trans-unit>
        <trans-unit id="558fdf57db5511e0c5ebfaa119295e9295b0c4b3" translate="yes" xml:space="preserve">
          <source>Normally pre-compiled code for a module will be loaded if available, or otherwise the module will be compiled to byte-code. Using the &lt;code&gt;*&lt;/code&gt; prefix forces a module to be loaded as byte-code.</source>
          <target state="translated">Normalmente, el c&amp;oacute;digo precompilado para un m&amp;oacute;dulo se cargar&amp;aacute; si est&amp;aacute; disponible, o de lo contrario, el m&amp;oacute;dulo se compilar&amp;aacute; en c&amp;oacute;digo de bytes. El uso del prefijo &lt;code&gt;*&lt;/code&gt; obliga a que un m&amp;oacute;dulo se cargue como c&amp;oacute;digo de bytes.</target>
        </trans-unit>
        <trans-unit id="ecdcacb1582613bd12eb621f5b461a7931c33bbc" translate="yes" xml:space="preserve">
          <source>Normally there is no fixed relationship between Haskell threads and OS threads. This means that when you make a foreign call, that call may take place in an unspecified OS thread. Furthermore, there is no guarantee that multiple calls made by one Haskell thread will be made by the same OS thread.</source>
          <target state="translated">Normalmente no hay una relación fija entre los hilos de Haskell y los hilos del sistema operativo.Esto significa que cuando haces una llamada al extranjero,esa llamada puede tener lugar en un hilo OS no especificado.Además,no hay garantía de que las múltiples llamadas realizadas por un hilo de Haskell sean realizadas por el mismo hilo del SO.</target>
        </trans-unit>
        <trans-unit id="937628f8a7dc9eb81b2263a9e21be33c5aea1828" translate="yes" xml:space="preserve">
          <source>Normally trace elements which sum to a total of less than 1% of the profile are removed from the profile. The &lt;code&gt;-t&lt;/code&gt; option allows this percentage to be modified (maximum 5%).</source>
          <target state="translated">Normalmente, los oligoelementos que suman un total de menos del 1% del perfil se eliminan del perfil. La opci&amp;oacute;n &lt;code&gt;-t&lt;/code&gt; permite modificar este porcentaje (m&amp;aacute;ximo 5%).</target>
        </trans-unit>
        <trans-unit id="4d52c3563db7da009beb065365791027b03554cf" translate="yes" xml:space="preserve">
          <source>Normally ⟨x⟩ should be chosen to match the number of CPU cores on the machine &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. For example, on a dual-core machine we would probably use &lt;code&gt;+RTS -N2 -RTS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1424cc5421e827770c2528e2d213a27497f17fe" translate="yes" xml:space="preserve">
          <source>Normally ⟨x⟩ should be chosen to match the number of CPU cores on the machine &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;. For example, on a dual-core machine we would probably use &lt;code&gt;+RTS -N2 -RTS&lt;/code&gt;.</source>
          <target state="translated">Normalmente se debe elegir ⟨x chosen para que coincida con el n&amp;uacute;mero de n&amp;uacute;cleos de CPU en la m&amp;aacute;quina &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; . Por ejemplo, en una m&amp;aacute;quina de doble n&amp;uacute;cleo probablemente &lt;code&gt;+RTS -N2 -RTS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adae5b8f3d2301963310d04fce57a7e110596baf" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;hp2ps&lt;/code&gt; puts the title of the graph in a small box at the top of the page. However, if the JOB string is too long to fit in a small box (more than 35 characters), then &lt;code&gt;hp2ps&lt;/code&gt; will choose to use a big box instead. The &lt;code&gt;-b&lt;/code&gt; option forces &lt;code&gt;hp2ps&lt;/code&gt; to use a big box.</source>
          <target state="translated">Normalmente, &lt;code&gt;hp2ps&lt;/code&gt; coloca el t&amp;iacute;tulo del gr&amp;aacute;fico en un peque&amp;ntilde;o cuadro en la parte superior de la p&amp;aacute;gina. Sin embargo, si la cadena JOB es demasiado larga para caber en un cuadro peque&amp;ntilde;o (m&amp;aacute;s de 35 caracteres), &lt;code&gt;hp2ps&lt;/code&gt; optar&amp;aacute; por utilizar un cuadro grande en su lugar. La opci&amp;oacute;n &lt;code&gt;-b&lt;/code&gt; obliga a &lt;code&gt;hp2ps&lt;/code&gt; a utilizar una caja grande.</target>
        </trans-unit>
        <trans-unit id="c386c8961f160187b7f41a883437a0e96c21de44" translate="yes" xml:space="preserve">
          <source>Normally, &lt;em&gt;constraints&lt;/em&gt; (which appear in types to the left of the &lt;code&gt;=&amp;gt;&lt;/code&gt; arrow) have a very restricted syntax. They can only be:</source>
          <target state="translated">Normalmente, las &lt;em&gt;restricciones&lt;/em&gt; (que aparecen en tipos a la izquierda de la flecha &lt;code&gt;=&amp;gt;&lt;/code&gt; ) tienen una sintaxis muy restringida. Solo pueden ser:</target>
        </trans-unit>
        <trans-unit id="5f3b656a0be36fb8e60655756fc57d49ccf589ac" translate="yes" xml:space="preserve">
          <source>Normally, GHC&amp;rsquo;s runtime system provides a &lt;code&gt;main()&lt;/code&gt;, which arranges to invoke &lt;code&gt;Main.main&lt;/code&gt; in the Haskell program. However, you might want to link some Haskell code into a program which has a main function written in another language, say C. In order to do this, you have to initialize the Haskell runtime system explicitly.</source>
          <target state="translated">Normalmente, el sistema de tiempo de ejecuci&amp;oacute;n de GHC proporciona un &lt;code&gt;main()&lt;/code&gt; , que se encarga de invocar &lt;code&gt;Main.main&lt;/code&gt; en el programa Haskell. Sin embargo, es posible que desee vincular alg&amp;uacute;n c&amp;oacute;digo de Haskell a un programa que tenga una funci&amp;oacute;n principal escrita en otro idioma, digamos C. Para hacer esto, debe inicializar el sistema de ejecuci&amp;oacute;n de Haskell expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="b5878d2676aa27f57a51768346833740d2d73c3e" translate="yes" xml:space="preserve">
          <source>Normally, a permutation parser is first build with special operators like (&lt;code&gt;&lt;a href=&quot;text-parsec-perm#v:-60--124--124--62-&quot;&gt;&amp;lt;||&amp;gt;&lt;/a&gt;&lt;/code&gt;) and than transformed into a normal parser using &lt;code&gt;&lt;a href=&quot;text-parsec-perm#v:permute&quot;&gt;permute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Normalmente, un analizador de permutaci&amp;oacute;n se construye primero con operadores especiales como ( &lt;code&gt;&lt;a href=&quot;text-parsec-perm#v:-60--124--124--62-&quot;&gt;&amp;lt;||&amp;gt;&lt;/a&gt;&lt;/code&gt; ) y luego se transforma en un analizador normal usando &lt;code&gt;&lt;a href=&quot;text-parsec-perm#v:permute&quot;&gt;permute&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be63fc241b13b25bbbfbb8119202738448bc7f25" translate="yes" xml:space="preserve">
          <source>Normally, any evaluation of top-level expressions (otherwise known as CAFs or Constant Applicative Forms) in loaded modules is retained between evaluations. Turning on &lt;code&gt;+r&lt;/code&gt; causes all evaluation of top-level expressions to be discarded after each evaluation (they are still retained &lt;em&gt;during&lt;/em&gt; a single evaluation).</source>
          <target state="translated">Normalmente, cualquier evaluaci&amp;oacute;n de expresiones de nivel superior (tambi&amp;eacute;n conocidas como CAF o formularios de aplicaci&amp;oacute;n constante) en los m&amp;oacute;dulos cargados se retiene entre evaluaciones. Al activar &lt;code&gt;+r&lt;/code&gt; , todas las evaluaciones de las expresiones de nivel superior se descartan despu&amp;eacute;s de cada evaluaci&amp;oacute;n (a&amp;uacute;n se retienen &lt;em&gt;durante&lt;/em&gt; una &amp;uacute;nica evaluaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="cd32d0c154484c3ec18509a839994848298d2636" translate="yes" xml:space="preserve">
          <source>Normally, setting the &lt;a href=&quot;#rts-flag--V%20%E2%9F%A8secs%E2%9F%A9&quot;&gt;&lt;code&gt;-V ⟨secs⟩&lt;/code&gt;&lt;/a&gt; option directly is not necessary: the resolution of the RTS timer is adjusted automatically if a short interval is requested with the &lt;code&gt;-C ⟨s⟩&lt;/code&gt; or &lt;a href=&quot;#rts-flag--i%20%E2%9F%A8secs%E2%9F%A9&quot;&gt;&lt;code&gt;-i
⟨secs⟩&lt;/code&gt;&lt;/a&gt; options. However, setting &lt;a href=&quot;#rts-flag--V%20%E2%9F%A8secs%E2%9F%A9&quot;&gt;&lt;code&gt;-V ⟨secs⟩&lt;/code&gt;&lt;/a&gt; is required in order to increase the resolution of the time profiler.</source>
          <target state="translated">Normalmente, configurar la opci&amp;oacute;n &lt;a href=&quot;#rts-flag--V%20%E2%9F%A8secs%E2%9F%A9&quot;&gt; &lt;code&gt;-V ⟨secs⟩&lt;/code&gt; &lt;/a&gt; directamente no es necesario: la resoluci&amp;oacute;n del temporizador RTS se ajusta autom&amp;aacute;ticamente si se solicita un intervalo corto con las &lt;code&gt;-C ⟨s⟩&lt;/code&gt; o &lt;a href=&quot;#rts-flag--i%20%E2%9F%A8secs%E2%9F%A9&quot;&gt; &lt;code&gt;-i ⟨secs⟩&lt;/code&gt; &lt;/a&gt; . Sin embargo, es necesario configurar &lt;a href=&quot;#rts-flag--V%20%E2%9F%A8secs%E2%9F%A9&quot;&gt; &lt;code&gt;-V ⟨secs⟩&lt;/code&gt; &lt;/a&gt; para aumentar la resoluci&amp;oacute;n del generador de perfiles de tiempo.</target>
        </trans-unit>
        <trans-unit id="ca1dd39379254ab3f3c73dbffb0d03d628b27d20" translate="yes" xml:space="preserve">
          <source>Not</source>
          <target state="translated">Not</target>
        </trans-unit>
        <trans-unit id="78ccb4fb66097bf7ec98982f1e04cc05bbdcec21" translate="yes" xml:space="preserve">
          <source>Not all subexpressions are potential breakpoint locations. Single variables are typically not considered to be breakpoint locations (unless the variable is the right-hand-side of a function definition, lambda, or case alternative). The rule of thumb is that all redexes are breakpoint locations, together with the bodies of functions, lambdas, case alternatives and binding statements. There is normally no breakpoint on a let expression, but there will always be a breakpoint on its body, because we are usually interested in inspecting the values of the variables bound by the let.</source>
          <target state="translated">No todas las subexpresiones son potenciales puntos de ruptura.Normalmente no se considera que las variables individuales sean ubicaciones de puntos de ruptura (a menos que la variable sea el lado derecho de una definición de función,lambda o alternativa de caso).La regla empírica es que todos los redexes son ubicaciones de puntos de ruptura,junto con los cuerpos de las funciones,lambdas,alternativas del caso y declaraciones vinculantes.Normalmente no existe un punto de ruptura en una expresión de let,pero siempre habrá un punto de ruptura en su cuerpo,porque normalmente nos interesa inspeccionar los valores de las variables ligadas por el let.</target>
        </trans-unit>
        <trans-unit id="4ab7fbf9aa0be7d87015cd3b43f6141b9208bf3f" translate="yes" xml:space="preserve">
          <source>Not all systems support &lt;code&gt;utimensat&lt;/code&gt;, in which case the function can only emulate the behavior by reading the access time and then setting both the access and modification times together. On systems where &lt;code&gt;utimensat&lt;/code&gt; is supported, the modification time is set atomically with nanosecond precision.</source>
          <target state="translated">No todos los sistemas admiten &lt;code&gt;utimensat&lt;/code&gt; , en cuyo caso la funci&amp;oacute;n solo puede emular el comportamiento leyendo el tiempo de acceso y luego configurando los tiempos de acceso y modificaci&amp;oacute;n juntos. En los sistemas en los que se admite &lt;code&gt;utimensat&lt;/code&gt; , el tiempo de modificaci&amp;oacute;n se establece at&amp;oacute;micamente con una precisi&amp;oacute;n de nanosegundos.</target>
        </trans-unit>
        <trans-unit id="fa0085970940cf874c9d2594cf9d4dd7a8d8194f" translate="yes" xml:space="preserve">
          <source>Not all systems support &lt;code&gt;utimensat&lt;/code&gt;, in which case the function can only emulate the behavior by reading the modification time and then setting both the access and modification times together. On systems where &lt;code&gt;utimensat&lt;/code&gt; is supported, the access time is set atomically with nanosecond precision.</source>
          <target state="translated">No todos los sistemas admiten &lt;code&gt;utimensat&lt;/code&gt; , en cuyo caso la funci&amp;oacute;n solo puede emular el comportamiento leyendo el tiempo de modificaci&amp;oacute;n y luego configurando los tiempos de acceso y modificaci&amp;oacute;n juntos. En los sistemas en los que se admite &lt;code&gt;utimensat&lt;/code&gt; , el tiempo de acceso se establece at&amp;oacute;micamente con precisi&amp;oacute;n de nanosegundos.</target>
        </trans-unit>
        <trans-unit id="b2afb94fa1ad8b2117ab0fcdb5aa0be0a87a1018" translate="yes" xml:space="preserve">
          <source>Not combined (tricky):</source>
          <target state="translated">No combinado (difícil):</target>
        </trans-unit>
        <trans-unit id="c0dd126e18fca943161e0d20a36b21e212c3c99b" translate="yes" xml:space="preserve">
          <source>Not combined:</source>
          <target state="translated">No combinado:</target>
        </trans-unit>
        <trans-unit id="78133acc4cfff50b8f073295fd4a15e10edaae9e" translate="yes" xml:space="preserve">
          <source>Not every index within the bounds of the array need appear in the association list, but the values associated with indices that do not appear will be undefined (i.e. bottom).</source>
          <target state="translated">No es necesario que todos los índices dentro de los límites del conjunto aparezcan en la lista de asociación,pero los valores asociados a los índices que no aparezcan serán indefinidos (es decir,inferiores).</target>
        </trans-unit>
        <trans-unit id="a5c24f03828759592657815b91d4e8eac318fcb9" translate="yes" xml:space="preserve">
          <source>Not every index within the bounds of the array need appear in the association list, but the values associated with indices that do not appear will be undefined.</source>
          <target state="translated">No es necesario que todos los índices dentro de los límites de la matriz aparezcan en la lista de asociación,pero los valores asociados a los índices que no aparezcan serán indefinidos.</target>
        </trans-unit>
        <trans-unit id="b8634acd7e6ee3c03ecde3208f3a307f2f045508" translate="yes" xml:space="preserve">
          <source>Not only do we now know the type of &lt;code&gt;left&lt;/code&gt;, but all the other partial types have also been resolved. So we can ask for the value of &lt;code&gt;a&lt;/code&gt;, for example:</source>
          <target state="translated">No solo sabemos ahora el tipo de &lt;code&gt;left&lt;/code&gt; , sino que tambi&amp;eacute;n se han resuelto todos los dem&amp;aacute;s tipos parciales. Entonces podemos preguntar por el valor de &lt;code&gt;a&lt;/code&gt; , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4035b9c2b5847ce2b4b7d233cc698ae5fa143ff0" translate="yes" xml:space="preserve">
          <source>Not-equal predicate.</source>
          <target state="translated">Un predicado no igual.</target>
        </trans-unit>
        <trans-unit id="122fe604627a6b3c6c7479e2e3d9b217a06c8a81" translate="yes" xml:space="preserve">
          <source>NotAssigned</source>
          <target state="translated">NotAssigned</target>
        </trans-unit>
        <trans-unit id="029164befa1985fe4c7c950daf75d5070657a309" translate="yes" xml:space="preserve">
          <source>NotAssociative</source>
          <target state="translated">NotAssociative</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="54ab9353b38cfd8cfc741410b64bcd8b4ace3d86" translate="yes" xml:space="preserve">
          <source>Note also that the following declaration is not allowed, even by itself:</source>
          <target state="translated">Obsérvese también que la siguiente declaración no está permitida,ni siquiera por sí misma:</target>
        </trans-unit>
        <trans-unit id="e14be39fd5d5beacf8aca731e7b645e488e01620" translate="yes" xml:space="preserve">
          <source>Note also the following points</source>
          <target state="translated">Tenga en cuenta también los siguientes puntos</target>
        </trans-unit>
        <trans-unit id="e391e16c3d6dadad7a54ff544e2321aabfc38d3d" translate="yes" xml:space="preserve">
          <source>Note also the inter-module dependencies at the end of the Makefile, which take the form</source>
          <target state="translated">Obsérvense también las dependencias intermódicas al final del Makefile,que adoptan la forma de</target>
        </trans-unit>
        <trans-unit id="0f69bf791521771e7eed4606436969fb2e27e8cf" translate="yes" xml:space="preserve">
          <source>Note how this operator resembles function composition &lt;code&gt;(&lt;a href=&quot;../base-4.13.0.0/data-function#v:.&quot;&gt;.&lt;/a&gt;)&lt;/code&gt;:</source>
          <target state="translated">Observe c&amp;oacute;mo este operador se asemeja a la composici&amp;oacute;n de funciones &lt;code&gt;(&lt;a href=&quot;../base-4.13.0.0/data-function#v:.&quot;&gt;.&lt;/a&gt;)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c5d2df4cb0a27c46da53e1c8dd36d7ee084e8ccd" translate="yes" xml:space="preserve">
          <source>Note how this operator resembles function composition &lt;code&gt;(&lt;a href=&quot;../base-4.14.1.0/data-function#v:.&quot;&gt;.&lt;/a&gt;)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdf7a8e9b7d9967c0312d67976a62b0219eb7cd" translate="yes" xml:space="preserve">
          <source>Note how this operator resembles function composition &lt;code&gt;(&lt;a href=&quot;../base-4.15.0.0/data-function#v:.&quot;&gt;.&lt;/a&gt;)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c74ad1a011259a6e943fb74b3e3c3c2695a3b0" translate="yes" xml:space="preserve">
          <source>Note how this operator resembles function composition &lt;code&gt;(&lt;a href=&quot;data-function#v:.&quot;&gt;.&lt;/a&gt;)&lt;/code&gt;:</source>
          <target state="translated">Observe c&amp;oacute;mo este operador se asemeja a la composici&amp;oacute;n de funciones &lt;code&gt;(&lt;a href=&quot;data-function#v:.&quot;&gt;.&lt;/a&gt;)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9feb1e502abb28d277cb1a7670feb6125b53c153" translate="yes" xml:space="preserve">
          <source>Note how we can define a uniform instance for &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt;, because we completely disregard all meta-information:</source>
          <target state="translated">Observe c&amp;oacute;mo podemos definir una instancia uniforme para &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; , porque ignoramos por completo toda la metainformaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="45519c1953b86b55e65ecc080a301283fb324351" translate="yes" xml:space="preserve">
          <source>Note how we write an initial tag byte to indicate each variant of the data type.</source>
          <target state="translated">Fíjese en cómo escribimos un byte de etiqueta inicial para indicar cada variante del tipo de datos.</target>
        </trans-unit>
        <trans-unit id="c9cb756c35baef541318a2fa53e969cf959a31f5" translate="yes" xml:space="preserve">
          <source>Note in particular that the main program thread (the thread running &lt;code&gt;Main.main&lt;/code&gt;) is always a bound thread, so for good concurrency performance you should ensure that the main thread is not doing repeated communication with other threads in the system. Typically this means forking subthreads to do the work using &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, and waiting for the results in the main thread.</source>
          <target state="translated">Tenga en cuenta en particular que el subproceso principal del programa (el subproceso que ejecuta &lt;code&gt;Main.main&lt;/code&gt; ) es siempre un subproceso enlazado, por lo que para un buen rendimiento de concurrencia debe asegurarse de que el subproceso principal no se comunica repetidamente con otros subprocesos en el sistema. Normalmente, esto significa bifurcar subprocesos para hacer el trabajo usando &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; y esperar los resultados en el hilo principal.</target>
        </trans-unit>
        <trans-unit id="31f3f6f5adc996e06ed48014b2b93cc6d3ecc2dc" translate="yes" xml:space="preserve">
          <source>Note in particular that the translation for a &lt;code&gt;rec&lt;/code&gt; block only involves wrapping a call to &lt;code&gt;mfix&lt;/code&gt;: it performs no other analysis on the bindings. The latter is the task for the &lt;code&gt;mdo&lt;/code&gt; notation, which is described next.</source>
          <target state="translated">Tenga en cuenta, en particular, que la traducci&amp;oacute;n de un bloque &lt;code&gt;rec&lt;/code&gt; solo implica envolver una llamada a &lt;code&gt;mfix&lt;/code&gt; : no realiza ning&amp;uacute;n otro an&amp;aacute;lisis sobre los enlaces. Esta &amp;uacute;ltima es la tarea de la notaci&amp;oacute;n &lt;code&gt;mdo&lt;/code&gt; , que se describe a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3639d52b7d40ee212b47bb683d401fdb19f2b8d7" translate="yes" xml:space="preserve">
          <source>Note on rewrite rules:</source>
          <target state="translated">Nota sobre las reglas de reescritura:</target>
        </trans-unit>
        <trans-unit id="da7038b6159ab37164aeb7442907c881108aff7e" translate="yes" xml:space="preserve">
          <source>Note that</source>
          <target state="translated">Tengan en cuenta que...</target>
        </trans-unit>
        <trans-unit id="2bbeb687e1b7425b59bec3bcf47cccd24fd58a0f" translate="yes" xml:space="preserve">
          <source>Note that (7.) and (8.) do &lt;em&gt;not&lt;/em&gt; require &lt;code&gt;&lt;a href=&quot;data-ord#v:min&quot;&gt;min&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-ord#v:max&quot;&gt;max&lt;/a&gt;&lt;/code&gt; to return either of their arguments. The result is merely required to &lt;em&gt;equal&lt;/em&gt; one of the arguments in terms of &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;(==)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e828fd5138d7798acc9021c701b389b03f3b726" translate="yes" xml:space="preserve">
          <source>Note that (7.) and (8.) do &lt;em&gt;not&lt;/em&gt; require &lt;code&gt;&lt;a href=&quot;prelude#v:min&quot;&gt;min&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:max&quot;&gt;max&lt;/a&gt;&lt;/code&gt; to return either of their arguments. The result is merely required to &lt;em&gt;equal&lt;/em&gt; one of the arguments in terms of &lt;code&gt;&lt;a href=&quot;prelude#v:-61--61-&quot;&gt;(==)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041e17d2804b0af5a76a5a97a0bba4a277288826" translate="yes" xml:space="preserve">
          <source>Note that 0 &amp;lt;= &lt;code&gt;&lt;a href=&quot;data-time-localtime#v:todSec&quot;&gt;todSec&lt;/a&gt;&lt;/code&gt; &amp;lt; 61, accomodating leap seconds. Any local minute may have a leap second, since leap seconds happen in all zones simultaneously</source>
          <target state="translated">Tenga en cuenta que 0 &amp;lt;= &lt;code&gt;&lt;a href=&quot;data-time-localtime#v:todSec&quot;&gt;todSec&lt;/a&gt;&lt;/code&gt; &amp;lt;61, que admite segundos intercalares . Cualquier minuto local puede tener un segundo intercalar, ya que los segundos intercalares ocurren en todas las zonas simult&amp;aacute;neamente</target>
        </trans-unit>
        <trans-unit id="4fc3cfabe43b8bcfa1705a3dbc018667744dc410" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#extension-DerivingVia&quot;&gt;&lt;code&gt;DerivingVia&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;#deriving-via&quot;&gt;Deriving via&lt;/a&gt;) uses essentially the same specification to derive instances of associated type families as well (except that it uses the &lt;code&gt;via&lt;/code&gt; type instead of the underlying &lt;code&gt;rep-type&lt;/code&gt; of a newtype).</source>
          <target state="translated">Tenga en cuenta que &lt;a href=&quot;#extension-DerivingVia&quot;&gt; &lt;code&gt;DerivingVia&lt;/code&gt; &lt;/a&gt; (consulte &lt;a href=&quot;#deriving-via&quot;&gt;Deriving via&lt;/a&gt; ) usa esencialmente la misma especificaci&amp;oacute;n para derivar instancias de familias de tipos asociadas tambi&amp;eacute;n (excepto que usa el tipo &lt;code&gt;via&lt;/code&gt; en lugar del &lt;code&gt;rep-type&lt;/code&gt; subyacente de un nuevo tipo).</target>
        </trans-unit>
        <trans-unit id="20cfa8d6154c21f756b99008f5e887fb998ca694" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#ghc-flag--Wunused-matches&quot;&gt;&lt;code&gt;-Wunused-matches&lt;/code&gt;&lt;/a&gt; does not warn about variables which arise from type-level patterns, as found in type family and data family instances. This must be enabled separately through the &lt;a href=&quot;#ghc-flag--Wunused-type-patterns&quot;&gt;&lt;code&gt;-Wunused-type-patterns&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">Tenga en cuenta que &lt;a href=&quot;#ghc-flag--Wunused-matches&quot;&gt; &lt;code&gt;-Wunused-matches&lt;/code&gt; &lt;/a&gt; no advierte sobre las variables que surgen de los patrones de nivel de tipo, como se encuentran en las instancias de familias de tipos y de datos. Esto debe habilitarse por separado a trav&amp;eacute;s de la &lt;a href=&quot;#ghc-flag--Wunused-type-patterns&quot;&gt; &lt;code&gt;-Wunused-type-patterns&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0394f5adfc4a1a13e3b86c72f2c51c040f42596" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#rts-flag---nonmoving-gc&quot;&gt;&lt;code&gt;--nonmoving-gc&lt;/code&gt;&lt;/a&gt; cannot be used with &lt;code&gt;-G1&lt;/code&gt;, &lt;a href=&quot;profiling#rts-flag--hc&quot;&gt;&lt;code&gt;profiling&lt;/code&gt;&lt;/a&gt; nor &lt;a href=&quot;#rts-flag--c&quot;&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115cb711c4af39c249438db0b383137d0cb50d56" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;deriving_via#extension-DerivingVia&quot;&gt;&lt;code&gt;DerivingVia&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;deriving_via#deriving-via&quot;&gt;Deriving via&lt;/a&gt;) uses essentially the same specification to derive instances of associated type families as well (except that it uses the &lt;code&gt;via&lt;/code&gt; type instead of the underlying &lt;code&gt;rep-type&lt;/code&gt; of a newtype).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7f360a57aee7e3f0b50c89a317cf8b42dfa6db" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;(&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;)&lt;/code&gt; is levity-polymorphic in its result type, so that &lt;code&gt;foo &lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt; True&lt;/code&gt; where &lt;code&gt;foo :: Bool -&amp;gt; Int#&lt;/code&gt; is well-typed.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;(&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;)&lt;/code&gt; es levemente polim&amp;oacute;rfico en su tipo de resultado, por lo que &lt;code&gt;foo &lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt; True&lt;/code&gt; donde &lt;code&gt;foo :: Bool -&amp;gt; Int#&lt;/code&gt; est&amp;aacute; bien escrito.</target>
        </trans-unit>
        <trans-unit id="50352b9744490cab4f40a77337fe0f29b0ce0106" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt;)&lt;/code&gt; is levity-polymorphic in its result type, so that &lt;code&gt;foo &lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt; True&lt;/code&gt; where &lt;code&gt;foo :: Bool -&amp;gt; Int#&lt;/code&gt; is well-typed.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;(&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt;)&lt;/code&gt; es levemente polim&amp;oacute;rfico en su tipo de resultado, por lo que &lt;code&gt;foo &lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt; True&lt;/code&gt; donde &lt;code&gt;foo :: Bool -&amp;gt; Int#&lt;/code&gt; est&amp;aacute; bien escrito.</target>
        </trans-unit>
        <trans-unit id="e8b2b6839b756e03ca674d6cc20259793fba403d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;(&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt;)&lt;/code&gt; is levity-polymorphic in its result type, so that &lt;code&gt;foo &lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt; True&lt;/code&gt; where &lt;code&gt;foo :: Bool -&amp;gt; Int#&lt;/code&gt; is well-typed.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;(&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt;)&lt;/code&gt; es levemente polim&amp;oacute;rfico en su tipo de resultado, por lo que &lt;code&gt;foo &lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt; True&lt;/code&gt; donde &lt;code&gt;foo :: Bool -&amp;gt; Int#&lt;/code&gt; est&amp;aacute; bien escrito.</target>
        </trans-unit>
        <trans-unit id="123d4fdb08ddd5f13ffc17d9c9b8108ebcc613a2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;(RunIO return)&lt;/code&gt; is an incorrect implementation, since it does not separate the pure and impure parts of the monadic action. This module defines implementations for several common monad transformers.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;(RunIO return)&lt;/code&gt; es una implementaci&amp;oacute;n incorrecta, ya que no separa las partes puras e impuras de la acci&amp;oacute;n mon&amp;aacute;dica. Este m&amp;oacute;dulo define implementaciones para varios transformadores de m&amp;oacute;nada comunes.</target>
        </trans-unit>
        <trans-unit id="2364cca1f2893be828dc285c3d3e946361aaaff8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;-rtsopts&lt;/code&gt; has no effect when used with &lt;a href=&quot;#ghc-flag--no-hs-main&quot;&gt;&lt;code&gt;-no-hs-main&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;exts/ffi#using-own-main&quot;&gt;Using your own main()&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f5f5ff16e9a38088c4dc6203d56f4f8fc6a9aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;-rtsopts&lt;/code&gt; has no effect when used with &lt;a href=&quot;#ghc-flag--no-hs-main&quot;&gt;&lt;code&gt;-no-hs-main&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;Using your own main()&lt;/a&gt; for details.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;-rtsopts&lt;/code&gt; no tiene ning&amp;uacute;n efecto cuando se usa con &lt;a href=&quot;#ghc-flag--no-hs-main&quot;&gt; &lt;code&gt;-no-hs-main&lt;/code&gt; &lt;/a&gt; ; consulte &lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;Uso de su propio main ()&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f7093e90bb866365952af6e50a0522c2320078eb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;-with-rtsopts&lt;/code&gt; has no effect when used with &lt;code&gt;-no-hs-main&lt;/code&gt;; see &lt;a href=&quot;exts/ffi#using-own-main&quot;&gt;Using your own main()&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce579c6f316db1c83cacd820fffea2c995a62db3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;-with-rtsopts&lt;/code&gt; has no effect when used with &lt;code&gt;-no-hs-main&lt;/code&gt;; see &lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;Using your own main()&lt;/a&gt; for details.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;-with-rtsopts&lt;/code&gt; no tiene ning&amp;uacute;n efecto cuando se usa con &lt;code&gt;-no-hs-main&lt;/code&gt; ; consulte &lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;Uso de su propio main ()&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3251b2749b31476313c89aa83d9865be6457e1bf" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; has no concept of fairness, and there is no guarantee that threads blocked in &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; will be unblocked in the same order; in fact they will all be unblocked at the same time and will fight over the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt;. Hence &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; is not suitable if you expect there to be a high number of threads contending for the resource. However, like other STM abstractions, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; is composable.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; no tiene un concepto de equidad y no hay garant&amp;iacute;a de que los hilos bloqueados en &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; se desbloqueen en el mismo orden; de hecho, todos ser&amp;aacute;n desbloqueados al mismo tiempo y luchar&amp;aacute;n por el &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; . Por &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; tanto, TSem no es adecuado si espera que haya una gran cantidad de subprocesos compitiendo por el recurso. Sin embargo, al igual que otras abstracciones de STM, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; se puede componer.</target>
        </trans-unit>
        <trans-unit id="23d023ee2a96a8f414c4d59de19543cf5936dac9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; and friends &lt;em&gt;do not&lt;/em&gt; have a similar default, because there is no exception handler in this case. Don't use &lt;code&gt;&lt;a href=&quot;control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; for recovering from an asynchronous exception.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; and friends &lt;em&gt;no&lt;/em&gt; tiene un valor predeterminado similar, porque no hay un controlador de excepci&amp;oacute;n en este caso. No use &lt;code&gt;&lt;a href=&quot;control-exception#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; para recuperarse de una excepci&amp;oacute;n asincr&amp;oacute;nica.</target>
        </trans-unit>
        <trans-unit id="2718dae009fe5e3d1238b1c135ae52c90ac37837" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;s are a bit verbose, but quite versatile. Here is an example of a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; for combined HTML escaping and UTF-8 encoding. It exploits that the escaped character with the maximal Unicode codepoint is '&amp;gt;'.</source>
          <target state="translated">Tenga en cuenta que los &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; s son un poco detallados, pero bastante vers&amp;aacute;tiles. A continuaci&amp;oacute;n, se muestra un ejemplo de &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; para el escape HTML combinado y la codificaci&amp;oacute;n UTF-8. Explota que el car&amp;aacute;cter de escape con el punto de c&amp;oacute;digo Unicode m&amp;aacute;ximo es '&amp;gt;'.</target>
        </trans-unit>
        <trans-unit id="cde3b09d583614c69aacef3bde117f6bdd3d0e24" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;s are &lt;code&gt;Contrafunctors&lt;/code&gt;&lt;a href=&quot;http://hackage.haskell.org/package/contravariant&quot;&gt;http://hackage.haskell.org/package/contravariant&lt;/a&gt;. Hence, the following laws hold.</source>
          <target state="translated">Tenga en cuenta que los &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; son &lt;code&gt;Contrafunctors&lt;/code&gt; &lt;a href=&quot;http://hackage.haskell.org/package/contravariant&quot;&gt;http://hackage.haskell.org/package/contravariant&lt;/a&gt; . Por tanto, se cumplen las siguientes leyes.</target>
        </trans-unit>
        <trans-unit id="2dc83523aa02bd92c967a0a3d0ae6d7af0d9ac4f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;s are &lt;code&gt;Contravariant&lt;/code&gt;&lt;a href=&quot;https://hackage.haskell.org/package/contravariant&quot;&gt;http://hackage.haskell.org/package/contravariant&lt;/a&gt;. Hence, the following laws hold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee6deeaabf24f4412e1e49868879a0b5b1aa1c9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-complex#t:Complex&quot;&gt;Complex&lt;/a&gt;&lt;/code&gt;'s instances inherit the deficiencies from the type parameter's. For example, &lt;code&gt;Complex Float&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance has similar problems to &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s.</source>
          <target state="translated">Tenga en cuenta que las instancias de &lt;code&gt;&lt;a href=&quot;data-complex#t:Complex&quot;&gt;Complex&lt;/a&gt;&lt;/code&gt; heredan las deficiencias de los par&amp;aacute;metros de tipo. Por ejemplo, la instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;Complex Float&lt;/code&gt; tiene problemas similares a los de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e1f90e9e322b989e73d82fdede82115af771f84" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-list#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; has the following strictness property: &lt;code&gt;inits (xs ++ _|_) = inits xs ++ _|_&lt;/code&gt;</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;data-list#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; tiene la siguiente propiedad de rigor: &lt;code&gt;inits (xs ++ _|_) = inits xs ++ _|_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dced2e98ed0e357e8b533e5a5a89a9d764b8df7" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; is lazy, potentially leading to thunk build-up if the consumer doesn't force each iterate. See &lt;code&gt;&lt;a href=&quot;data-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; for a strict variant of this function.</source>
          <target state="translated">Tenga en cuenta que la &lt;code&gt;&lt;a href=&quot;data-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; es perezosa, lo que puede conducir a la acumulaci&amp;oacute;n de thunk si el consumidor no fuerza cada iteraci&amp;oacute;n. Consulte &lt;code&gt;&lt;a href=&quot;data-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; para obtener una variante estricta de esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2dedd1659c7efcc5ad810d0e5c4b39237ba9eb03" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-list#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt; has the following strictness property: &lt;code&gt;tails _|_ = _|_ : _|_&lt;/code&gt;</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;data-list#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt; tiene la siguiente propiedad de rigor: &lt;code&gt;tails _|_ = _|_ : _|_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60f7565d417c50efc94986aa99cb5f4a947f5ff6" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;data-ratio#t:Ratio&quot;&gt;Ratio&lt;/a&gt;&lt;/code&gt;'s instances inherit the deficiencies from the type parameter's. For example, &lt;code&gt;Ratio Natural&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance has similar problems to &lt;code&gt;&lt;a href=&quot;numeric-natural#v:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;'s.</source>
          <target state="translated">Tenga en cuenta que las instancias de &lt;code&gt;&lt;a href=&quot;data-ratio#t:Ratio&quot;&gt;Ratio&lt;/a&gt;&lt;/code&gt; heredan las deficiencias de los par&amp;aacute;metros de tipo. Por ejemplo, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;Ratio Natural&lt;/code&gt; tiene problemas similares a los de &lt;code&gt;&lt;a href=&quot;numeric-natural#v:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cefd424b19607d5edc1403e68699fc8f6d2f620" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; (in the guise of &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rec0&quot;&gt;Rec0&lt;/a&gt;&lt;/code&gt;) can still occur in a &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep1&quot;&gt;Rep1&lt;/a&gt;&lt;/code&gt; representation, namely when the datatype has a field that does not mention the parameter.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; (bajo la apariencia de &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rec0&quot;&gt;Rec0&lt;/a&gt;&lt;/code&gt; ) todav&amp;iacute;a puede ocurrir en una representaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep1&quot;&gt;Rep1&lt;/a&gt;&lt;/code&gt; , es decir, cuando el tipo de datos tiene un campo que no menciona el par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="281ca52e047c00d45cb2f86224fe53a9a4fae794" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; is lazy, potentially leading to thunk build-up if the consumer doesn't force each iterate. See &lt;code&gt;&lt;a href=&quot;ghc-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; for a strict variant of this function.</source>
          <target state="translated">Tenga en cuenta que la &lt;code&gt;&lt;a href=&quot;ghc-list#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; es perezosa, lo que puede conducir a la acumulaci&amp;oacute;n de thunk si el consumidor no fuerza cada iteraci&amp;oacute;n. Consulte &lt;code&gt;&lt;a href=&quot;ghc-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; para obtener una variante estricta de esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1a858cff92b21869646f30a2b371df6ee5495052" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance isn't a ring: no element but 0 has an additive inverse. It is a semiring though.</source>
          <target state="translated">Tenga en cuenta que la instancia &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; no es un anillo: ning&amp;uacute;n elemento excepto 0 tiene un inverso aditivo. Aunque es un semirr&amp;iacute;gido.</target>
        </trans-unit>
        <trans-unit id="fc2f4f0bfb855f7375943aa12d1fb8ac219a3580" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance isn't a ring: no element but 0 has an additive inverse. It is a semiring though.</source>
          <target state="translated">Tenga en cuenta que la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; no es un anillo: ning&amp;uacute;n elemento excepto 0 tiene un inverso aditivo. Aunque es un semirr&amp;iacute;gido.</target>
        </trans-unit>
        <trans-unit id="6dbd9a25c551eff23fa22c53698220086818ffcf" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; has the following strictness property: &lt;code&gt;inits (xs ++ _|_) = inits xs ++ _|_&lt;/code&gt;</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; tiene la siguiente propiedad de rigor: &lt;code&gt;inits (xs ++ _|_) = inits xs ++ _|_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd1e7ed5d4e140984d3791f7195f3b569e53a3a5" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; is lazy, potentially leading to thunk build-up if the consumer doesn't force each iterate. See &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; for a strict variant of this function.</source>
          <target state="translated">Tenga en cuenta que la &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; es perezosa, lo que puede conducir a la acumulaci&amp;oacute;n de thunk si el consumidor no fuerza cada iteraci&amp;oacute;n. Consulte &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; para obtener una variante estricta de esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3220254f0cec09ffeb96b93db4b6d62483e447b2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt; has the following strictness property: &lt;code&gt;tails _|_ = _|_ : _|_&lt;/code&gt;</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt; tiene la siguiente propiedad de rigor: &lt;code&gt;tails _|_ = _|_ : _|_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6e52e647e2604f5fb2a960fb656ed98c28cb82a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-read#v:readField&quot;&gt;readField&lt;/a&gt;&lt;/code&gt; does not suffice for this purpose due to &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/5041&quot;&gt;Trac #5041&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;ghc-read#v:readField&quot;&gt;readField&lt;/a&gt;&lt;/code&gt; no es suficiente para este prop&amp;oacute;sito debido a &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/5041&quot;&gt;Trac # 5041&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4590a66ec7900e5ee4d377de0bdd011b81fe11e5" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-read#v:readField&quot;&gt;readField&lt;/a&gt;&lt;/code&gt; does not suffice for this purpose due to &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/5041&quot;&gt;#5041&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f4018cb49ca32078d9a1bef08f427eb4907a21" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;ghc-real#t:Ratio&quot;&gt;Ratio&lt;/a&gt;&lt;/code&gt;'s instances inherit the deficiencies from the type parameter's. For example, &lt;code&gt;Ratio Natural&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance has similar problems to &lt;code&gt;&lt;a href=&quot;numeric-natural#v:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;'s.</source>
          <target state="translated">Tenga en cuenta que las instancias de &lt;code&gt;&lt;a href=&quot;ghc-real#t:Ratio&quot;&gt;Ratio&lt;/a&gt;&lt;/code&gt; heredan las deficiencias de los par&amp;aacute;metros de tipo. Por ejemplo, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;Ratio Natural&lt;/code&gt; tiene problemas similares a los de &lt;code&gt;&lt;a href=&quot;numeric-natural#v:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="042d76d30eab792b60df6af7b09723fdf10e8be4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;numeric-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance isn't a ring: no element but 0 has an additive inverse. It is a semiring though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88d411cc968059e325ae13439252f0afd371b01" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;numeric-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance isn't a ring: no element but 0 has an additive inverse. It is a semiring though.</source>
          <target state="translated">Tenga en cuenta que la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;numeric-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; no es un anillo: ning&amp;uacute;n elemento excepto 0 tiene un inverso aditivo. Aunque es un semirr&amp;iacute;gido.</target>
        </trans-unit>
        <trans-unit id="1e81757f506803c58656ee3360e5e3fcdb790671" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;prelude#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; is lazy, potentially leading to thunk build-up if the consumer doesn't force each iterate. See &lt;code&gt;&lt;a href=&quot;ghc-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; for a strict variant of this function.</source>
          <target state="translated">Tenga en cuenta que la &lt;code&gt;&lt;a href=&quot;prelude#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; es perezosa, lo que puede conducir a la acumulaci&amp;oacute;n de thunk si el consumidor no fuerza cada iteraci&amp;oacute;n. Consulte &lt;code&gt;&lt;a href=&quot;ghc-list#v:iterate-39-&quot;&gt;iterate'&lt;/a&gt;&lt;/code&gt; para obtener una variante estricta de esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="692875f553a19ed51b447480be26cc2da0a377bb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;prelude#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:appendFile&quot;&gt;appendFile&lt;/a&gt;&lt;/code&gt; write a literal string to a file. To write a value of any printable type, as with &lt;code&gt;&lt;a href=&quot;prelude#v:print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, use the &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; function to convert the value to a string first.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;prelude#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;prelude#v:appendFile&quot;&gt;appendFile&lt;/a&gt;&lt;/code&gt; escriben una cadena literal en un archivo. Para escribir un valor de cualquier tipo imprimible, como con &lt;code&gt;&lt;a href=&quot;prelude#v:print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , use la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; para convertir el valor en una cadena primero.</target>
        </trans-unit>
        <trans-unit id="82ee7c2d72b3eb91473ef9443731d0f34073a559" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;system-io#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-io#v:appendFile&quot;&gt;appendFile&lt;/a&gt;&lt;/code&gt; write a literal string to a file. To write a value of any printable type, as with &lt;code&gt;&lt;a href=&quot;system-io#v:print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, use the &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; function to convert the value to a string first.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;system-io#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;system-io#v:appendFile&quot;&gt;appendFile&lt;/a&gt;&lt;/code&gt; escriben una cadena literal en un archivo. Para escribir un valor de cualquier tipo imprimible, como con &lt;code&gt;&lt;a href=&quot;system-io#v:print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , use la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; para convertir el valor en una cadena primero.</target>
        </trans-unit>
        <trans-unit id="b7939772f8f7e35e3f9e1df2549a55f3569ee2cb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;F0&lt;/code&gt;, &lt;code&gt;F1&lt;/code&gt;, &lt;code&gt;F2&lt;/code&gt;, &lt;code&gt;FD1&lt;/code&gt;, and &lt;code&gt;FD2&lt;/code&gt; all have identical standalone kind signatures. The arity is inferred from the type family header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ad5d4ac1dbd955a15cabf62ecf4ebbe8794aa4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;FUN m a b&lt;/code&gt; permits levity-polymorphism in both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, so that types like &lt;code&gt;Int# -&amp;gt; Int#&lt;/code&gt; can still be well-kinded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5d841ba3035a60d47bde6683188e551f1ba64a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Handle&lt;/code&gt;s provided for &lt;code&gt;std_in&lt;/code&gt; or &lt;code&gt;std_out&lt;/code&gt; via the CreateProcess record will be ignored.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;Handle&lt;/code&gt; s prevista &lt;code&gt;std_in&lt;/code&gt; o &lt;code&gt;std_out&lt;/code&gt; a trav&amp;eacute;s del registro CreateProcess ser&amp;aacute; ignorado.</target>
        </trans-unit>
        <trans-unit id="146678c0e776f2ff851c7e2c8dcebc022186f041" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Handle&lt;/code&gt;s provided for &lt;code&gt;std_in&lt;/code&gt;, &lt;code&gt;std_out&lt;/code&gt;, or &lt;code&gt;std_err&lt;/code&gt; via the &lt;code&gt;UseHandle&lt;/code&gt; constructor will be closed by calling this function. This is not always the desired behavior. In cases where you would like to leave the &lt;code&gt;Handle&lt;/code&gt; open after spawning the child process, please use &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess_&quot;&gt;createProcess_&lt;/a&gt;&lt;/code&gt; instead. All created &lt;code&gt;Handle&lt;/code&gt;s are initially in text mode; if you need them to be in binary mode then use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que los &lt;code&gt;Handle&lt;/code&gt; proporcionados para &lt;code&gt;std_in&lt;/code&gt; , &lt;code&gt;std_out&lt;/code&gt; o &lt;code&gt;std_err&lt;/code&gt; a trav&amp;eacute;s del constructor &lt;code&gt;UseHandle&lt;/code&gt; se cerrar&amp;aacute;n llamando a esta funci&amp;oacute;n. Este no es siempre el comportamiento deseado. En los casos en los que desee dejar el &lt;code&gt;Handle&lt;/code&gt; abierto despu&amp;eacute;s de generar el proceso secundario, utilice &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess_&quot;&gt;createProcess_&lt;/a&gt;&lt;/code&gt; en su lugar. Todos los &lt;code&gt;Handle&lt;/code&gt; creados est&amp;aacute;n inicialmente en modo texto; si necesita que est&amp;eacute;n en modo binario, utilice &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ff010b0f63ecc96eaf9bd3fa189d17e640c8eb8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Handle&lt;/code&gt;s provided for &lt;code&gt;std_in&lt;/code&gt;, &lt;code&gt;std_out&lt;/code&gt;, or &lt;code&gt;std_err&lt;/code&gt; via the &lt;code&gt;UseHandle&lt;/code&gt; constructor will be closed by calling this function. This is not always the desired behavior. In cases where you would like to leave the &lt;code&gt;Handle&lt;/code&gt; open after spawning the child process, please use &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess_&quot;&gt;createProcess_&lt;/a&gt;&lt;/code&gt; instead. All created &lt;code&gt;Handle&lt;/code&gt;s are initially in text mode; if you need them to be in binary mode then use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060ea5a8335f3e38195f74d7156afc215fb95950" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Handle&lt;/code&gt;s provided for &lt;code&gt;std_in&lt;/code&gt;, &lt;code&gt;std_out&lt;/code&gt;, or &lt;code&gt;std_err&lt;/code&gt; via the &lt;code&gt;UseHandle&lt;/code&gt; constructor will be closed by calling this function. This is not always the desired behavior. In cases where you would like to leave the &lt;code&gt;Handle&lt;/code&gt; open after spawning the child process, please use &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess_&quot;&gt;createProcess_&lt;/a&gt;&lt;/code&gt; instead. All created &lt;code&gt;Handle&lt;/code&gt;s are initially in text mode; if you need them to be in binary mode then use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#v:hSetBinaryMode&quot;&gt;hSetBinaryMode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bc50405f92753187a855ca32c150ffebfb1ca1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Handle&lt;/code&gt;s provided for &lt;code&gt;std_in&lt;/code&gt;, &lt;code&gt;std_out&lt;/code&gt;, or &lt;code&gt;std_err&lt;/code&gt; via the CreateProcess record will be ignored.</source>
          <target state="translated">Tenga en cuenta que los &lt;code&gt;Handle&lt;/code&gt; proporcionados para &lt;code&gt;std_in&lt;/code&gt; , &lt;code&gt;std_out&lt;/code&gt; o &lt;code&gt;std_err&lt;/code&gt; a trav&amp;eacute;s del registro CreateProcess ser&amp;aacute;n ignorados.</target>
        </trans-unit>
        <trans-unit id="741bc7436d7860a8b9d202657fd8dd01f62d1a12" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;M.join&lt;/code&gt; is only needed if the final expression is not identifiably a &lt;code&gt;return&lt;/code&gt;. With &lt;code&gt;-XQualifiedDo&lt;/code&gt; enabled, &lt;code&gt;-XApplicativeDo&lt;/code&gt; looks only for the qualified &lt;code&gt;return&lt;/code&gt;/&lt;code&gt;pure&lt;/code&gt; in a qualified do-block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb75a50ee8a25d92207e02df9efd12ab2bbd9b08" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;\case&lt;/code&gt; starts a layout, so you can write</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;\case&lt;/code&gt; inicia un dise&amp;ntilde;o, por lo que puede escribir</target>
        </trans-unit>
        <trans-unit id="ef8c98fb1e9ccb919f4d179a7222663f9bc06990" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;f&lt;/code&gt; is not overloaded; the &lt;code&gt;Eq&lt;/code&gt; constraint arising from the use of &lt;code&gt;==&lt;/code&gt; is discharged by the pattern match on &lt;code&gt;T1&lt;/code&gt; and similarly the &lt;code&gt;Show&lt;/code&gt; constraint arising from the use of &lt;code&gt;show&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;f&lt;/code&gt; no est&amp;aacute; sobrecargado; la restricci&amp;oacute;n de &lt;code&gt;Eq&lt;/code&gt; que surge del uso de &lt;code&gt;==&lt;/code&gt; es eliminada por la coincidencia de patrones en &lt;code&gt;T1&lt;/code&gt; y, de manera similar, la restricci&amp;oacute;n &lt;code&gt;Show&lt;/code&gt; que surge del uso de &lt;code&gt;show&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01a09441c6e85b11dd8ac3855c0f8d219030d13a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ghc -M&lt;/code&gt; needs to find a &lt;em&gt;source file&lt;/em&gt; for each module in the dependency graph, so that it can parse the import declarations and follow dependencies. Any pre-compiled modules without source files must therefore belong to a package &lt;a href=&quot;#id5&quot; id=&quot;id4&quot;&gt;1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d5971cd304a24fd7e0c3cb761f12d88c0c5300" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ghc -M&lt;/code&gt; needs to find a &lt;em&gt;source file&lt;/em&gt; for each module in the dependency graph, so that it can parse the import declarations and follow dependencies. Any pre-compiled modules without source files must therefore belong to a package &lt;a href=&quot;#id5&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;ghc -M&lt;/code&gt; necesita encontrar un &lt;em&gt;archivo fuente&lt;/em&gt; para cada m&amp;oacute;dulo en el gr&amp;aacute;fico de dependencia, de modo que pueda analizar las declaraciones de importaci&amp;oacute;n y seguir las dependencias. Por lo tanto, cualquier m&amp;oacute;dulo precompilado sin archivos fuente debe pertenecer a un paquete &lt;a href=&quot;#id5&quot; id=&quot;id4&quot;&gt;[1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9ad10b105a7bebae4f8165fa8685e319e4cd138" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;hTestEquality&lt;/code&gt; takes two arguments where the type variable &lt;code&gt;t&lt;/code&gt; is applied to types of different kinds. That type variable must then be polykinded. Accordingly, the kind of &lt;code&gt;HTestEquality&lt;/code&gt; (the class) is &lt;code&gt;(forall k. k -&amp;gt; Type) -&amp;gt; Constraint&lt;/code&gt;, a higher-rank kind.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;hTestEquality&lt;/code&gt; toma dos argumentos donde la variable de tipo &lt;code&gt;t&lt;/code&gt; se aplica a tipos de diferentes tipos. Ese tipo de variable debe ser poliquinizado. En consecuencia, el tipo de &lt;code&gt;HTestEquality&lt;/code&gt; (la clase) es &lt;code&gt;(forall k. k -&amp;gt; Type) -&amp;gt; Constraint&lt;/code&gt; , un tipo de rango superior.</target>
        </trans-unit>
        <trans-unit id="d49f48cab2336da3b33335456da6ac1c62fd042c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;isSubmapOfBy (_ _ -&amp;gt; True) m1 m2&lt;/code&gt; tests whether all the keys in &lt;code&gt;m1&lt;/code&gt; are also keys in &lt;code&gt;m2&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;isSubmapOfBy (_ _ -&amp;gt; True) m1 m2&lt;/code&gt; prueba si todas las claves en &lt;code&gt;m1&lt;/code&gt; tambi&amp;eacute;n son claves en &lt;code&gt;m2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d87919fed4910f020e65cc52017097a20305800" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;it&lt;/code&gt; is shadowed by the new value each time you evaluate a new expression, and the old value of &lt;code&gt;it&lt;/code&gt; is lost.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;it&lt;/code&gt; est&amp;aacute; ensombrecido por el nuevo valor cada vez que se eval&amp;uacute;a una nueva expresi&amp;oacute;n, y el valor antiguo del &lt;code&gt;it&lt;/code&gt; se ha perdido.</target>
        </trans-unit>
        <trans-unit id="8965b5ad7e3a3d0f07f953f01997900513413179" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;k2&lt;/code&gt; is placed &lt;em&gt;before&lt;/em&gt;&lt;code&gt;k&lt;/code&gt;, and that &lt;code&gt;k&lt;/code&gt; is placed &lt;em&gt;before&lt;/em&gt;&lt;code&gt;a&lt;/code&gt;. Also, note that &lt;code&gt;k2&lt;/code&gt; is written here in braces. As explained with &lt;a href=&quot;#extension-TypeApplications&quot;&gt;&lt;code&gt;TypeApplications&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#inferred-vs-specified&quot;&gt;Inferred vs. specified type variables&lt;/a&gt;), type and kind variables that GHC generalises over, but not written in the original program, are not available for visible type application. (These are called &lt;em&gt;inferred&lt;/em&gt; variables.) Such variables are written in braces with &lt;a href=&quot;using#ghc-flag--fprint-explicit-foralls&quot;&gt;&lt;code&gt;-fprint-explicit-foralls&lt;/code&gt;&lt;/a&gt; enabled.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;k2&lt;/code&gt; se coloca &lt;em&gt;antes de &lt;/em&gt; &lt;code&gt;k&lt;/code&gt; , y que &lt;code&gt;k&lt;/code&gt; se coloca &lt;em&gt;antes de &lt;/em&gt; &lt;code&gt;a&lt;/code&gt; . Adem&amp;aacute;s, tenga en cuenta que &lt;code&gt;k2&lt;/code&gt; se escribe aqu&amp;iacute; entre llaves. Como se explica con &lt;a href=&quot;#extension-TypeApplications&quot;&gt; &lt;code&gt;TypeApplications&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;#inferred-vs-specified&quot;&gt;variables de tipo inferidas frente a especificadas&lt;/a&gt; ), las variables de tipo y tipo sobre las que GHC generaliza, pero que no est&amp;aacute;n escritas en el programa original, no est&amp;aacute;n disponibles para la aplicaci&amp;oacute;n de tipo visible. (Se denominan variables &lt;em&gt;inferidas&lt;/em&gt; ). Dichas variables se escriben entre llaves con &lt;a href=&quot;using#ghc-flag--fprint-explicit-foralls&quot;&gt; &lt;code&gt;-fprint-explicit-foralls&lt;/code&gt; &lt;/a&gt; habilitado.</target>
        </trans-unit>
        <trans-unit id="816ae0198397860aa9fd60cc59c11d1ed2b5d997" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;k2&lt;/code&gt; is placed &lt;em&gt;before&lt;/em&gt;&lt;code&gt;k&lt;/code&gt;, and that &lt;code&gt;k&lt;/code&gt; is placed &lt;em&gt;before&lt;/em&gt;&lt;code&gt;a&lt;/code&gt;. Also, note that &lt;code&gt;k2&lt;/code&gt; is written here in braces. As explained with &lt;a href=&quot;type_applications#extension-TypeApplications&quot;&gt;&lt;code&gt;TypeApplications&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;type_applications#inferred-vs-specified&quot;&gt;Inferred vs. specified type variables&lt;/a&gt;), type and kind variables that GHC generalises over, but not written in the original program, are not available for visible type application. (These are called &lt;em&gt;inferred&lt;/em&gt; variables.) Such variables are written in braces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a55de5915599f1590abb3356c8fe6ece583ed02" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;let&lt;/code&gt; bindings do not automatically print the value bound, unlike monadic bindings.</source>
          <target state="translated">Tenga en cuenta que los enlaces &lt;code&gt;let&lt;/code&gt; no imprimen autom&amp;aacute;ticamente el l&amp;iacute;mite de valor, a diferencia de los enlaces mon&amp;aacute;dicos.</target>
        </trans-unit>
        <trans-unit id="5f999ecaeb1e7a69b4163c053a67ca1cf1c9ff63" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;mkName&lt;/code&gt; may be used with qualified names:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;mkName&lt;/code&gt; se puede usar con nombres calificados:</target>
        </trans-unit>
        <trans-unit id="01c07aa245695205a32a04f4daab1815beac9b5c" translate="yes" xml:space="preserve">
          <source>Note that GHC can only follow dependencies if it has the source file available, so if your program includes a module for which there is no source file, even if you have an object and an interface file for the module, then GHC will complain. The exception to this rule is for package modules, which may or may not have source files.</source>
          <target state="translated">Tenga en cuenta que GHC sólo puede seguir las dependencias si tiene el archivo fuente disponible,así que si su programa incluye un módulo para el que no hay un archivo fuente,incluso si tiene un objeto y un archivo de interfaz para el módulo,entonces GHC se quejará.La excepción a esta regla es para los módulos del paquete,que pueden o no tener archivos de origen.</target>
        </trans-unit>
        <trans-unit id="628959edf33f1bf4af75378e5117a34fc0ac8086" translate="yes" xml:space="preserve">
          <source>Note that a &quot;minute&quot; of &lt;code&gt;DiffTime&lt;/code&gt; is simply 60 SI seconds, rather than a minute of civil time. Use &lt;code&gt;NominalDiffTime&lt;/code&gt; to work with civil time, ignoring any leap seconds.</source>
          <target state="translated">Tenga en cuenta que un &quot;minuto&quot; de &lt;code&gt;DiffTime&lt;/code&gt; es simplemente 60 segundos SI, en lugar de un minuto de tiempo civil. Utilice &lt;code&gt;NominalDiffTime&lt;/code&gt; para trabajar con tiempo civil, ignorando los segundos intercalares .</target>
        </trans-unit>
        <trans-unit id="db63214ed45116be549d0295c81ce0bf585bc000" translate="yes" xml:space="preserve">
          <source>Note that a given &lt;code&gt;mdo&lt;/code&gt; expression can cause the creation of multiple &lt;code&gt;rec&lt;/code&gt; blocks. If there are no recursive dependencies, &lt;code&gt;mdo&lt;/code&gt; will introduce no &lt;code&gt;rec&lt;/code&gt; blocks. In this latter case an &lt;code&gt;mdo&lt;/code&gt; expression is precisely the same as a &lt;code&gt;do&lt;/code&gt; expression, as one would expect.</source>
          <target state="translated">Tenga en cuenta que una expresi&amp;oacute;n &lt;code&gt;mdo&lt;/code&gt; determinada puede provocar la creaci&amp;oacute;n de varios bloques &lt;code&gt;rec&lt;/code&gt; . Si no hay dependencias recursivas, &lt;code&gt;mdo&lt;/code&gt; no introducir&amp;aacute; bloques &lt;code&gt;rec&lt;/code&gt; . En este &amp;uacute;ltimo caso, una expresi&amp;oacute;n &lt;code&gt;mdo&lt;/code&gt; es exactamente lo mismo que una expresi&amp;oacute;n &lt;code&gt;do&lt;/code&gt; , como cabr&amp;iacute;a esperar.</target>
        </trans-unit>
        <trans-unit id="edb8824abf3adc676b8fc9d4d2a15be4648aabba" translate="yes" xml:space="preserve">
          <source>Note that after splitting the string at newline characters, the last part of the string is considered a line even if it doesn't end with a newline. For example,</source>
          <target state="translated">Observe que después de dividir la cadena en caracteres de nueva línea,la última parte de la cadena se considera una línea aunque no termine con una nueva línea.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="e48d232edc1ec00a99a6fd6c27346f29f36049ef" translate="yes" xml:space="preserve">
          <source>Note that after the closing brace, GHCi knows that the current statement is finished, so no empty line is required.</source>
          <target state="translated">Tenga en cuenta que después del cierre de la abrazadera,GHCi sabe que la declaración actual ha terminado,por lo que no se requiere una línea vacía.</target>
        </trans-unit>
        <trans-unit id="629c79c2f8b660ab85b6013a5e3159a0a225a4a6" translate="yes" xml:space="preserve">
          <source>Note that although the above translation suggests that &lt;code&gt;let&lt;/code&gt;-bound variables like &lt;code&gt;z&lt;/code&gt; must be monomorphic, the actual translation produces Core, so polymorphic variables are allowed.</source>
          <target state="translated">Tenga en cuenta que aunque la traducci&amp;oacute;n anterior sugiere que las variables vinculadas a &lt;code&gt;let&lt;/code&gt; como &lt;code&gt;z&lt;/code&gt; deben ser monom&amp;oacute;rficas, la traducci&amp;oacute;n real produce Core, por lo que se permiten variables polim&amp;oacute;rficas.</target>
        </trans-unit>
        <trans-unit id="629818198328cd462665ec73736ee33ba93fceb4" translate="yes" xml:space="preserve">
          <source>Note that an explicit &lt;code&gt;forall&lt;/code&gt; is often absolutely essential. Consider the rose-tree example</source>
          <target state="translated">Tenga en cuenta que, a menudo, es absolutamente esencial &lt;code&gt;forall&lt;/code&gt; un forall expl&amp;iacute;cito . Considere el ejemplo del rosal</target>
        </trans-unit>
        <trans-unit id="92e28e232c8219184dccc4e81df68cd45a16bf4c" translate="yes" xml:space="preserve">
          <source>Note that an explicit &lt;code&gt;forall&lt;/code&gt; must appear at the front of the type signature and is not permitted to appear nested within the type, as in the following (erroneous) examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fedd4b9525d691022adec17bbc58c0482f1424f" translate="yes" xml:space="preserve">
          <source>Note that any multi-parameter constraints &lt;code&gt;(D a b)&lt;/code&gt; or &lt;code&gt;(D [a] Int)&lt;/code&gt; do not participate in the process (either to help or to hinder); but they must of course be soluble once the defaulting process is complete.</source>
          <target state="translated">Tenga en cuenta que cualquier restricci&amp;oacute;n de m&amp;uacute;ltiples par&amp;aacute;metros &lt;code&gt;(D a b)&lt;/code&gt; o &lt;code&gt;(D [a] Int)&lt;/code&gt; no participa en el proceso (ya sea para ayudar o para obstaculizar); pero, por supuesto, deben ser solubles una vez que se completa el proceso de incumplimiento.</target>
        </trans-unit>
        <trans-unit id="c67cc7b453618af847cc15ad44d064d4550a5b4a" translate="yes" xml:space="preserve">
          <source>Note that any non-flag arguments are never passed to GHC. An unused non-flag argument will be considered as the name of the program to run. If a GHC flag takes an argument use &lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; to pass the argument to GHC. For example, if you want to pass &lt;code&gt;-package foo&lt;/code&gt; to GHC use any of the following:</source>
          <target state="translated">Tenga en cuenta que los argumentos que no sean de marca nunca se pasan a GHC. Un argumento sin indicador no utilizado se considerar&amp;aacute; como el nombre del programa que se ejecutar&amp;aacute;. Si una bandera GHC toma un argumento, use &lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; para pasar el argumento a GHC. Por ejemplo, si desea pasar &lt;code&gt;-package foo&lt;/code&gt; a GHC, use cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="1d2d4c489f4d5c10bf98bfdb6c95992494ea1737" translate="yes" xml:space="preserve">
          <source>Note that because constraints are just handled as types of a particular kind, this extension allows type constraint synonyms:</source>
          <target state="translated">Obsérvese que,dado que las restricciones sólo se manejan como tipos de un tipo particular,esta extensión permite sinónimos de restricción de tipo:</target>
        </trans-unit>
        <trans-unit id="1e70909e8298e18a428bd14a078ccbac8a33b1c3" translate="yes" xml:space="preserve">
          <source>Note that because the array is possibly not copied, any subsequent modifications made to the mutable version of the array may be shared with the immutable version. It is only safe to use, therefore, if the immutable array is never referenced again in this thread, and there is no possibility that it can be also referenced in another thread. If you use an unsafeThaw&lt;em&gt;write&lt;/em&gt;unsafeFreeze sequence in a multi-threaded setting, then you must ensure that this sequence is atomic with respect to other threads, or a garbage collector crash may result (because the write may be writing to a frozen array).</source>
          <target state="translated">Tenga en cuenta que debido a que es posible que la matriz no se copie, cualquier modificaci&amp;oacute;n posterior realizada en la versi&amp;oacute;n mutable de la matriz puede compartirse con la versi&amp;oacute;n inmutable. Por lo tanto, solo es seguro de usar si la matriz inmutable nunca se vuelve a hacer referencia en este hilo, y no hay posibilidad de que tambi&amp;eacute;n se pueda hacer referencia a ella en otro hilo. Si usa una secuencia inseguraThaw &lt;em&gt;write&lt;/em&gt; unsafeFreeze en una configuraci&amp;oacute;n de subprocesos m&amp;uacute;ltiples, entonces debe asegurarse de que esta secuencia sea at&amp;oacute;mica con respecto a otros subprocesos, o podr&amp;iacute;a producirse un bloqueo del recolector de basura (porque la escritura puede estar escribiendo en una matriz congelada).</target>
        </trans-unit>
        <trans-unit id="312ce308d507158c0dbd1448754583dfb49275af" translate="yes" xml:space="preserve">
          <source>Note that because the array is possibly not copied, any subsequent modifications made to the mutable version of the array may be shared with the immutable version. It is safe to use, therefore, if the mutable version is never modified after the freeze operation.</source>
          <target state="translated">Tenga en cuenta que,como es posible que la matriz no se copie,cualquier modificación posterior que se haga a la versión mutable de la matriz puede compartirse con la versión inmutable.Por lo tanto,es seguro utilizarla si la versión mutable no se modifica nunca después de la operación de congelación.</target>
        </trans-unit>
        <trans-unit id="cf2145147a60ace311fa33d22d382ca44077b49d" translate="yes" xml:space="preserve">
          <source>Note that calling `breakSubstring x` does some preprocessing work, so you should avoid unnecessarily duplicating breakSubstring calls with the same pattern.</source>
          <target state="translated">Ten en cuenta que llamar a &quot;breakSubstring x&quot; hace un cierto trabajo de preprocesamiento,por lo que debes evitar duplicar innecesariamente las llamadas a &quot;breakSubstring&quot; con el mismo patrón.</target>
        </trans-unit>
        <trans-unit id="fc9763765bf9b4fd333d384e2c7f6d48a5f90bb7" translate="yes" xml:space="preserve">
          <source>Note that class instances are always for particular &lt;em&gt;instances&lt;/em&gt; of a data family and never for an entire family as a whole. This is for essentially the same reasons that we cannot define a toplevel function that performs pattern matching on the data constructors of &lt;em&gt;different&lt;/em&gt; instances of a single type family. It would require a form of extensible case construct.</source>
          <target state="translated">Tenga en cuenta que las instancias de clase son siempre para &lt;em&gt;instancias&lt;/em&gt; particulares de una familia de datos y nunca para una familia completa como un todo. Esto se debe esencialmente a las mismas razones por las que no podemos definir una funci&amp;oacute;n de nivel superior que realice la coincidencia de patrones en los constructores de datos de &lt;em&gt;diferentes&lt;/em&gt; instancias de una &amp;uacute;nica familia de tipos. Requerir&amp;iacute;a una forma de construcci&amp;oacute;n de caso extensible.</target>
        </trans-unit>
        <trans-unit id="3fd26db2c5a937cd006a71ef434cb9a6ac571280" translate="yes" xml:space="preserve">
          <source>Note that command-line options are &lt;em&gt;order-dependent&lt;/em&gt;, with arguments being evaluated from left-to-right. This can have seemingly strange effects in the presence of flag implication. For instance, consider &lt;a href=&quot;using-optimisation#ghc-flag--fspecialise&quot;&gt;&lt;code&gt;-fno-specialise&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;using-optimisation#ghc-flag--O1&quot;&gt;&lt;code&gt;-O1&lt;/code&gt;&lt;/a&gt; (which implies &lt;a href=&quot;using-optimisation#ghc-flag--fspecialise&quot;&gt;&lt;code&gt;-fspecialise&lt;/code&gt;&lt;/a&gt;). These two command lines mean very different things:</source>
          <target state="translated">Tenga en cuenta que las opciones de la l&amp;iacute;nea de comandos &lt;em&gt;dependen del orden y los&lt;/em&gt; argumentos se eval&amp;uacute;an de izquierda a derecha. Esto puede tener efectos aparentemente extra&amp;ntilde;os en presencia de una implicaci&amp;oacute;n de bandera. Por ejemplo, considere &lt;a href=&quot;using-optimisation#ghc-flag--fspecialise&quot;&gt; &lt;code&gt;-fno-specialise&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;using-optimisation#ghc-flag--O1&quot;&gt; &lt;code&gt;-O1&lt;/code&gt; &lt;/a&gt; (que implica &lt;a href=&quot;using-optimisation#ghc-flag--fspecialise&quot;&gt; &lt;code&gt;-fspecialise&lt;/code&gt; &lt;/a&gt; ). Estas dos l&amp;iacute;neas de comando significan cosas muy diferentes:</target>
        </trans-unit>
        <trans-unit id="76091aaf5e35a41319f5ec500de56fcd89951658" translate="yes" xml:space="preserve">
          <source>Note that deriving &lt;code&gt;Eq&lt;/code&gt; is necessary for the pattern matching to work since it gets translated into an equality comparison.</source>
          <target state="translated">Tenga en cuenta que es necesario derivar la &lt;code&gt;Eq&lt;/code&gt; para que funcione la coincidencia de patrones, ya que se traduce en una comparaci&amp;oacute;n de igualdad.</target>
        </trans-unit>
        <trans-unit id="5e66a3c265c4c5b432263a07a725a136b6324e29" translate="yes" xml:space="preserve">
          <source>Note that due to Haskell's unspecified evaluation order, an expression may throw one of several possible exceptions: consider the expression &lt;code&gt;(error &quot;urk&quot;) + (1 `div` 0)&lt;/code&gt;. Does the expression throw &lt;code&gt;ErrorCall &quot;urk&quot;&lt;/code&gt;, or &lt;code&gt;DivideByZero&lt;/code&gt;?</source>
          <target state="translated">Tenga en cuenta que debido al orden de evaluaci&amp;oacute;n no especificado de Haskell, una expresi&amp;oacute;n puede arrojar una de varias posibles excepciones: considere la expresi&amp;oacute;n &lt;code&gt;(error &quot;urk&quot;) + (1 `div` 0)&lt;/code&gt; . &amp;iquest;La expresi&amp;oacute;n arroja &lt;code&gt;ErrorCall &quot;urk&quot;&lt;/code&gt; o &lt;code&gt;DivideByZero&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="a38e6766cff20e461dc54ded66126b634b012173" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="0ef6487a6a1f23d9e6d0eab035203c36999e612c" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="718b6ec1eedc7b0e6b0505f3537b21d4d5090824" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="b2e8c03bc2025303c4c75357649bb45ee1572579" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="8bb133570167aeb8235fd7aa64e771323ce317b8" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="b8c80f9a804d45f8387d652852d3f1b319e89bab" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="abaa8283c8c82c454b3f39dc4e8b3b95dea832bf" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="efa258be8dec869f272beb6b3b0719e9c9136d95" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="cc8602ae6c9f5374c5b3e2f4892e8ddead96cf59" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="434b11a6a2c5a23f490c3dca6b67c53a554a0d1b" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="6077357d3de95b1c68b9540f7bddf5fc70a526b4" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="2043553ccd4d376d49787321f94def08da904851" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="194e7c783a359ef09d66938c7b166d817c622581" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="9890f34bd7580f2b47b85fe9349066eb034aa874" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="9dcbc1e84d812484382f7054b4ea09eece714d9c" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="20c322bafd53e5e4ac584f0f4c7683ecf396fc66" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance does not satisfy reflexivity.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la reflexividad.</target>
        </trans-unit>
        <trans-unit id="e775258fb33a9c99aae311b322919c0b7003500f" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; have an additive inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; tienen un aditivo inverso.</target>
        </trans-unit>
        <trans-unit id="1f89c3ca9731aeeb8476c132b53e6e61c23b4594" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; have an multiplicative inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; tienen un inverso multiplicativo.</target>
        </trans-unit>
        <trans-unit id="24ad6371739df6cce2c9d49e41a79e67a4549c98" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; have an additive inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; tienen un aditivo inverso.</target>
        </trans-unit>
        <trans-unit id="59b02bd4bf7fdf2cce1cbde77a7195b31de26236" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; have an multiplicative inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; tienen un inverso multiplicativo.</target>
        </trans-unit>
        <trans-unit id="5b8a7de16c8d613620813c9851308e5845856e62" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; have an additive inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; tienen un aditivo inverso.</target>
        </trans-unit>
        <trans-unit id="c868d72c8e906befa9b0e16299d79ca57971708c" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; have an multiplicative inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; tienen un inverso multiplicativo.</target>
        </trans-unit>
        <trans-unit id="da59b4a14361d344a87c211c8c8c17fcca4de300" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; have an additive inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; tienen un aditivo inverso.</target>
        </trans-unit>
        <trans-unit id="96f2507b88b419212359ae0a529d1957a3da8fe1" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; have an multiplicative inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; tienen un inverso multiplicativo.</target>
        </trans-unit>
        <trans-unit id="6105c208b7c6f44c6b239700c54851ff6acd9f7c" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; have an additive inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; tienen un aditivo inverso.</target>
        </trans-unit>
        <trans-unit id="9187cd519377bc44a76fe47963badb1dfb10c1de" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; have an multiplicative inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; tienen un inverso multiplicativo.</target>
        </trans-unit>
        <trans-unit id="0dc5c80ae44926709a883abad455c22674f3d607" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; have an additive inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; tienen un aditivo inverso.</target>
        </trans-unit>
        <trans-unit id="7935bc741f62235ae7bf01a48ecac728f0a179e3" translate="yes" xml:space="preserve">
          <source>Note that due to the presence of &lt;code&gt;NaN&lt;/code&gt;, not all elements of &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; have an multiplicative inverse.</source>
          <target state="translated">Tenga en cuenta que debido a la presencia de &lt;code&gt;NaN&lt;/code&gt; , no todos los elementos de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; tienen un inverso multiplicativo.</target>
        </trans-unit>
        <trans-unit id="eeb5083fb742894713808d1bf407187ed8b72976" translate="yes" xml:space="preserve">
          <source>Note that even if the underlying &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instances are lawful, for most &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;s, this instance will not be lawful. If you use this instance with the list &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, the following customary laws will not hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3853fcb3c30f45ae120a9243010c94f95839f0f3" translate="yes" xml:space="preserve">
          <source>Note that even if the underlying &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instances are lawful, for most &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;s, this instance will not be lawful. If you use this instance with the list &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, the following customary laws will not hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27585464cfdd8d01e677b0406967c001ac3c9e76" translate="yes" xml:space="preserve">
          <source>Note that even if the underlying &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; instances are lawful, for most &lt;code&gt;&lt;a href=&quot;prelude#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;s, this instance will not be lawful. If you use this instance with the list &lt;code&gt;&lt;a href=&quot;prelude#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, the following customary laws will not hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646e8b4539cacf2e9e9d3ae0b8e3c032a0312c22" translate="yes" xml:space="preserve">
          <source>Note that even with &lt;code&gt;--install-signal-handlers=no&lt;/code&gt;, the RTS interval timer signal is still enabled. The timer signal is either SIGVTALRM or SIGALRM, depending on the RTS configuration and OS capabilities. To disable the timer signal, use the &lt;code&gt;-V0&lt;/code&gt; RTS option (see &lt;code&gt;-V ⟨secs⟩&lt;/code&gt;).</source>
          <target state="translated">Tenga en cuenta que incluso con &lt;code&gt;--install-signal-handlers=no&lt;/code&gt; , la se&amp;ntilde;al del temporizador de intervalo RTS todav&amp;iacute;a est&amp;aacute; habilitada. La se&amp;ntilde;al del temporizador es SIGVTALRM o SIGALRM, seg&amp;uacute;n la configuraci&amp;oacute;n de RTS y las capacidades del sistema operativo. Para deshabilitar la se&amp;ntilde;al del temporizador, use la opci&amp;oacute;n &lt;code&gt;-V0&lt;/code&gt; RTS (vea &lt;code&gt;-V ⟨secs⟩&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4432323376182dfbdca3fdc7130f34b9170ab0c0" translate="yes" xml:space="preserve">
          <source>Note that exceptions which are thrown to the current thread are thrown in turn to the thread that is executing the given computation. This ensures there's always a way of killing the forked thread.</source>
          <target state="translated">Obsérvese que las excepciones que se lanzan al hilo actual se lanzan a su vez al hilo que está ejecutando el cálculo dado.Esto asegura que siempre hay una forma de matar el hilo bifurcado.</target>
        </trans-unit>
        <trans-unit id="4e7cb7371c58bd222ab2560f3a7d99af3af20d16" translate="yes" xml:space="preserve">
          <source>Note that fixed primitives can be considered as a special case of bounded primitives, and we can lift from fixed to bounded.</source>
          <target state="translated">Obsérvese que los primitivos fijos pueden considerarse como un caso especial de primitivos delimitados,y podemos pasar de fijos a delimitados.</target>
        </trans-unit>
        <trans-unit id="56b0f705789ec7ac7e04637b1063cafb79dc672b" translate="yes" xml:space="preserve">
          <source>Note that for consistency &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;Word64&lt;/code&gt;, and &lt;code&gt;Int64&lt;/code&gt; constructor fields are unpacked on 32-bit platforms, even though they are technically larger than a pointer on those platforms.</source>
          <target state="translated">Tenga en cuenta que , por &lt;code&gt;Word64&lt;/code&gt; , los campos de constructor &lt;code&gt;Double&lt;/code&gt; , Word64 e &lt;code&gt;Int64&lt;/code&gt; se descomprimen en plataformas de 32 bits, aunque t&amp;eacute;cnicamente son m&amp;aacute;s grandes que un puntero en esas plataformas.</target>
        </trans-unit>
        <trans-unit id="6128c2afaa4b4099fa2f7f80159c3c3eb7d037da" translate="yes" xml:space="preserve">
          <source>Note that for non-C languages (for example C++) &lt;code&gt;extern &lt;a href=&quot;c&quot;&gt;C&lt;/a&gt;&lt;/code&gt; directives must be used to get symbols that we can access from Haskell.</source>
          <target state="translated">Tenga en cuenta que para los lenguajes que no son C (por ejemplo, C ++), se deben usar directivas &lt;code&gt;extern &lt;a href=&quot;c&quot;&gt;C&lt;/a&gt;&lt;/code&gt; externas para obtener s&amp;iacute;mbolos a los que podamos acceder desde Haskell.</target>
        </trans-unit>
        <trans-unit id="250d6d584d95f50004937c03dc209e45f1572a99" translate="yes" xml:space="preserve">
          <source>Note that for scripts and interactive sessions, this is the path to the interpreter (e.g. ghci.)</source>
          <target state="translated">Tenga en cuenta que para los guiones y las sesiones interactivas,este es el camino hacia el intérprete (por ejemplo,ghci.)</target>
        </trans-unit>
        <trans-unit id="2a64a1dfeaac3f04e05a2dfa765d6f00da1d204a" translate="yes" xml:space="preserve">
          <source>Note that for the &lt;code&gt;package-db&lt;/code&gt; directive, if a relative path is given it must be relative to the location of the package environment file.</source>
          <target state="translated">Tenga en cuenta que para la directiva &lt;code&gt;package-db&lt;/code&gt; , si se proporciona una ruta relativa, debe ser relativa a la ubicaci&amp;oacute;n del archivo de entorno del paquete.</target>
        </trans-unit>
        <trans-unit id="96e9f8d44f9309d061a4735a30dbfcf393329303" translate="yes" xml:space="preserve">
          <source>Note that for the purpose of injectivity check in bullets (4) and (5) GHC uses a special variant of unification algorithm that treats type family applications as possibly unifying with anything.</source>
          <target state="translated">Obsérvese que a los efectos de la comprobación de la inyectabilidad en los puntos (4)y (5),el GHC utiliza una variante especial del algoritmo de unificación que trata las aplicaciones de la familia de tipos como posiblemente unificables con cualquier cosa.</target>
        </trans-unit>
        <trans-unit id="b361a1480c4039f0cd985063822cba34298460c6" translate="yes" xml:space="preserve">
          <source>Note that foreign calls made by different Haskell threads may execute in &lt;em&gt;parallel&lt;/em&gt;, even when the &lt;code&gt;+RTS -N&lt;/code&gt; flag is not being used (&lt;a href=&quot;../using-concurrent#parallel-options&quot;&gt;RTS options for SMP parallelism&lt;/a&gt;). The &lt;code&gt;-N ⟨x⟩&lt;/code&gt; flag controls parallel execution of Haskell threads, but there may be an arbitrary number of foreign calls in progress at any one time, regardless of the &lt;code&gt;+RTS -N&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa639807aa32c333508357828c548fb4190cf20" translate="yes" xml:space="preserve">
          <source>Note that foreign calls made by different Haskell threads may execute in &lt;em&gt;parallel&lt;/em&gt;, even when the &lt;code&gt;+RTS -N&lt;/code&gt; flag is not being used (&lt;a href=&quot;using-concurrent#parallel-options&quot;&gt;RTS options for SMP parallelism&lt;/a&gt;). The &lt;code&gt;-N ⟨x⟩&lt;/code&gt; flag controls parallel execution of Haskell threads, but there may be an arbitrary number of foreign calls in progress at any one time, regardless of the &lt;code&gt;+RTS -N&lt;/code&gt; value.</source>
          <target state="translated">Tenga en cuenta que las llamadas externas realizadas por diferentes subprocesos de Haskell pueden ejecutarse en &lt;em&gt;paralelo&lt;/em&gt; , incluso cuando no se est&amp;aacute; utilizando el indicador &lt;code&gt;+RTS -N&lt;/code&gt; ( &lt;a href=&quot;using-concurrent#parallel-options&quot;&gt;opciones RTS para el paralelismo SMP&lt;/a&gt; ). El &lt;code&gt;-N ⟨x⟩&lt;/code&gt; controla la ejecuci&amp;oacute;n paralela de subprocesos Haskell, pero puede haber un n&amp;uacute;mero arbitrario de llamadas externas en curso en cualquier momento, independientemente del valor &lt;code&gt;+RTS -N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b570082e206f3882d05ae56cc37de0fcb8caa829" translate="yes" xml:space="preserve">
          <source>Note that functions marked with &quot;&lt;em&gt;Heavy inlining.&lt;/em&gt;&quot; are forced to be inlined because they must be specialized for concrete encodings, but are rather heavy in terms of code size. We recommend to define a top-level function for every concrete instantiation of such a function in order to share its code. A typical example is the function &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:byteStringHex&quot;&gt;byteStringHex&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;data-bytestring-builder-ascii&quot;&gt;Data.ByteString.Builder.ASCII&lt;/a&gt;, which is implemented as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12827f70b05908494f598eac9c4f60068827e87" translate="yes" xml:space="preserve">
          <source>Note that functions marked with &quot;&lt;em&gt;Heavy inlining.&lt;/em&gt;&quot; are forced to be inlined because they must be specialized for concrete encodings, but are rather heavy in terms of code size. We recommend to define a top-level function for every concrete instantiation of such a function in order to share its code. A typical example is the function &lt;code&gt;byteStringHex&lt;/code&gt; from &lt;a href=&quot;data-bytestring-builder-ascii&quot;&gt;Data.ByteString.Builder.ASCII&lt;/a&gt;, which is implemented as follows.</source>
          <target state="translated">Tenga en cuenta que las funciones marcadas con &quot; &lt;em&gt;Heavy inlining.&lt;/em&gt; &quot; Est&amp;aacute;n obligadas a incluirlas porque deben estar especializadas para codificaciones concretas, pero son bastante pesadas en t&amp;eacute;rminos de tama&amp;ntilde;o de c&amp;oacute;digo. Recomendamos definir una funci&amp;oacute;n de nivel superior para cada instanciaci&amp;oacute;n concreta de dicha funci&amp;oacute;n con el fin de compartir su c&amp;oacute;digo. Un ejemplo t&amp;iacute;pico es la funci&amp;oacute;n &lt;code&gt;byteStringHex&lt;/code&gt; de &lt;a href=&quot;data-bytestring-builder-ascii&quot;&gt;Data.ByteString.Builder.ASCII&lt;/a&gt; , que se implementa de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="a81cbfbf457be603965ed8e6e32f7b3176154d2b" translate="yes" xml:space="preserve">
          <source>Note that functions requiring varargs arguments are unsupported by the &lt;code&gt;ccall&lt;/code&gt; calling convention. Foreign imports needing to call such functions should rather use the &lt;code&gt;capi&lt;/code&gt; convention, giving an explicit signature for the needed call-pattern. For instance, one could write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2216bc2850d8b97233a3efc13f854171f19bee87" translate="yes" xml:space="preserve">
          <source>Note that higher optimisation levels cause more cross-module optimisation to be performed, which can have an impact on how much of your program needs to be recompiled when you change something. This is one reason to stick to no-optimisation when developing code.</source>
          <target state="translated">Tenga en cuenta que los niveles de optimización más altos hacen que se realice una mayor optimización de los módulos cruzados,lo que puede tener un impacto en la cantidad de su programa que debe ser recompilado cuando cambie algo.Esta es una razón para mantener la no-optimización cuando se desarrolla código.</target>
        </trans-unit>
        <trans-unit id="30a1f39225163748211fd926207dd09b8855fbec" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c0dcced941ac54917c55caf21e22d4636d250c" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que si se llama a &lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; con el subproceso actual como objetivo, la excepci&amp;oacute;n se lanzar&amp;aacute; incluso si el subproceso est&amp;aacute; actualmente dentro de la &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2364a113ff09ab00bf106323a9ba1b4c3714d917" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;control-concurrent#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11abb5f8d9b5fba3f33fa0b7e155694cf82d23ad" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-exception#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que si se llama a &lt;code&gt;&lt;a href=&quot;control-exception#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; con el subproceso actual como objetivo, la excepci&amp;oacute;n se lanzar&amp;aacute; incluso si el subproceso est&amp;aacute; actualmente dentro de la &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;control-exception#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="620ca9a9df68bf26044f5d872190781472e76ff1" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ba0c9a076ac9b515d71482f78bc92a96d264e8" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que si se llama a &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; con el subproceso actual como objetivo, la excepci&amp;oacute;n se lanzar&amp;aacute; incluso si el subproceso est&amp;aacute; actualmente dentro de la &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ade933651993a04a370b1b74f8baa0d698471747" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66210fda4350eaec16e5b09b559810cf819baea" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bdddcd649e7c0b18af6cbb0a2342c2614754df" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que si se llama a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; con el subproceso actual como objetivo, la excepci&amp;oacute;n se lanzar&amp;aacute; incluso si el subproceso est&amp;aacute; actualmente dentro de la &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12809b4532f5331b24f07fd2836313e5463fa8a2" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; is called with the current thread as the target, the exception will be thrown even if the thread is currently inside &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:uninterruptibleMask&quot;&gt;uninterruptibleMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd84aceb1741c1097100af32525f39087b79c2c" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;C&lt;/code&gt; does not contain any class methods, the instance context is wholly unnecessary, and as such GHC will instead generate:</source>
          <target state="translated">Tenga en cuenta que si &lt;code&gt;C&lt;/code&gt; no contiene ning&amp;uacute;n m&amp;eacute;todo de clase, el contexto de la instancia es totalmente innecesario y, como tal, GHC generar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="28c37978b95dd575e513b0b23b8deb28631dd7fb" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;f&lt;/code&gt; is strict, &lt;code&gt;&lt;a href=&quot;control-monad-st#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que si &lt;code&gt;f&lt;/code&gt; es estricta, &lt;code&gt;&lt;a href=&quot;control-monad-st#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="288715920cc43c37cbcf03237a6afbc9e9f1ca44" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;f&lt;/code&gt; is strict, &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que si &lt;code&gt;f&lt;/code&gt; es estricta, &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23075918281a3d4a9a4393210ab00757f30add13" translate="yes" xml:space="preserve">
          <source>Note that if Haskeline is built against a version of the &lt;code&gt;Win32&lt;/code&gt; library earlier than 2.5, &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:getPassword&quot;&gt;getPassword&lt;/a&gt;&lt;/code&gt; will incorrectly echo back input on MinTTY consoles (such as Cygwin or MSYS).</source>
          <target state="translated">Tenga en cuenta que si Haskeline se compila con una versi&amp;oacute;n de la biblioteca &lt;code&gt;Win32&lt;/code&gt; anterior a la 2.5, &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:getPassword&quot;&gt;getPassword&lt;/a&gt;&lt;/code&gt; repetir&amp;aacute; incorrectamente la entrada en las consolas MinTTY (como Cygwin o MSYS).</target>
        </trans-unit>
        <trans-unit id="748b314274792a265ed7c2434a739a0777fcbd47" translate="yes" xml:space="preserve">
          <source>Note that if the expression can&amp;rsquo;t be translated into uses of &lt;code&gt;&amp;lt;$&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; only, then it will incur a &lt;code&gt;Monad&lt;/code&gt; constraint as usual. This happens when there is a dependency on a value produced by an earlier statement in the &lt;code&gt;do&lt;/code&gt;-block:</source>
          <target state="translated">Tenga en cuenta que si la expresi&amp;oacute;n no se puede traducir a los usos de &lt;code&gt;&amp;lt;$&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; &amp;uacute;nicamente, incurrir&amp;aacute; en una restricci&amp;oacute;n de &lt;code&gt;Monad&lt;/code&gt; como de costumbre. Esto sucede cuando hay una dependencia de un valor producido por una declaraci&amp;oacute;n anterior en el bloque &lt;code&gt;do&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3cbb7152b808b31e2c0cac825f8fb2dae7c7b28d" translate="yes" xml:space="preserve">
          <source>Note that if you do need to interpret file paths or environment strings as text, then some Unicode encoding or decoding should be applied first.</source>
          <target state="translated">Tenga en cuenta que si necesita interpretar las rutas de los archivos o las cadenas de entorno como texto,primero debe aplicarse alguna codificación o descodificación de Unicode.</target>
        </trans-unit>
        <trans-unit id="727e91ac7cf7235ceb01512e066f5fa194d7f879" translate="yes" xml:space="preserve">
          <source>Note that if you want an efficient left-fold, you probably want to use &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl-39-&quot;&gt;bifoldl'&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt;. The reason is that the latter does not force the &quot;inner&quot; results, resulting in a thunk chain which then must be evaluated from the outside-in.</source>
          <target state="translated">Tenga en cuenta que si desea un pliegue a la izquierda eficiente, probablemente desee utilizar &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl-39-&quot;&gt;bifoldl'&lt;/a&gt;&lt;/code&gt; lugar de &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt; . La raz&amp;oacute;n es que este &amp;uacute;ltimo no fuerza los resultados &quot;internos&quot;, lo que da como resultado una cadena thunk que luego debe evaluarse desde afuera hacia adentro.</target>
        </trans-unit>
        <trans-unit id="3f920b899f0a93de7b234be63afb284d817b0204" translate="yes" xml:space="preserve">
          <source>Note that in &lt;code&gt;S2&lt;/code&gt; and &lt;code&gt;S3&lt;/code&gt;, the kind of the right-hand side is rather apparent, but it is still not considered to have a complete signature &amp;ndash; no inference can be done before detecting the signature.</source>
          <target state="translated">Tenga en cuenta que en &lt;code&gt;S2&lt;/code&gt; y &lt;code&gt;S3&lt;/code&gt; , el tipo del lado derecho es bastante evidente, pero a&amp;uacute;n no se considera que tenga una firma completa; no se puede hacer ninguna inferencia antes de detectar la firma.</target>
        </trans-unit>
        <trans-unit id="1ed65ace60cec8fe502a481f05e3dda7d603ff35" translate="yes" xml:space="preserve">
          <source>Note that in GHCi, and &lt;a href=&quot;using#ghc-flag---make&quot;&gt;&lt;code&gt;--make&lt;/code&gt;&lt;/a&gt; mode, the &lt;a href=&quot;separate_compilation#ghc-flag--i&quot;&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/a&gt; option is used to specify the search path for &lt;em&gt;source&lt;/em&gt; files, whereas in standard batch-compilation mode the &lt;a href=&quot;separate_compilation#ghc-flag--i&quot;&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/a&gt; option is used to specify the search path for interface files, see &lt;a href=&quot;separate_compilation#search-path&quot;&gt;The search path&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que en el modo &lt;a href=&quot;using#ghc-flag---make&quot;&gt; &lt;code&gt;--make&lt;/code&gt; &lt;/a&gt; y --make , la opci&amp;oacute;n &lt;a href=&quot;separate_compilation#ghc-flag--i&quot;&gt; &lt;code&gt;-i&lt;/code&gt; &lt;/a&gt; se usa para especificar la ruta de b&amp;uacute;squeda de los archivos de &lt;em&gt;origen&lt;/em&gt; , mientras que en el modo de compilaci&amp;oacute;n por lotes est&amp;aacute;ndar, la opci&amp;oacute;n &lt;a href=&quot;separate_compilation#ghc-flag--i&quot;&gt; &lt;code&gt;-i&lt;/code&gt; &lt;/a&gt; se usa para especificar la ruta de b&amp;uacute;squeda de los archivos de interfaz, consulte &lt;a href=&quot;separate_compilation#search-path&quot;&gt;la ruta de b&amp;uacute;squeda&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f74e9b413c970241bf9e71c360a313d3c98064d3" translate="yes" xml:space="preserve">
          <source>Note that in the last example, it&amp;rsquo;s impossible to learn that &lt;code&gt;a&lt;/code&gt; depends on &lt;code&gt;k&lt;/code&gt; in the body of the &lt;code&gt;forall&lt;/code&gt; (that is, the &lt;code&gt;Sing k -&amp;gt; Sing a -&amp;gt; ()&lt;/code&gt;). And so GHC rejects the program.</source>
          <target state="translated">Tenga en cuenta que en el &amp;uacute;ltimo ejemplo, es imposible aprender que &lt;code&gt;a&lt;/code&gt; depende de &lt;code&gt;k&lt;/code&gt; en el cuerpo del &lt;code&gt;forall&lt;/code&gt; (es decir, &lt;code&gt;Sing k -&amp;gt; Sing a -&amp;gt; ()&lt;/code&gt; ). Y entonces GHC rechaza el programa.</target>
        </trans-unit>
        <trans-unit id="585d2c2d29d7e260cd5cf60d36a2bb2eded38317" translate="yes" xml:space="preserve">
          <source>Note that in this example, &lt;code&gt;a&lt;/code&gt; is a universal variable in the data type &lt;code&gt;T&lt;/code&gt;, where &lt;code&gt;b&lt;/code&gt; is existential. When writing the pattern synonym, both types are allowed to be specified or inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3f39847ba19e77a6a582f15278eee9d18590bf" translate="yes" xml:space="preserve">
          <source>Note that invariant checking (namely the &lt;code&gt;always&lt;/code&gt; and &lt;code&gt;alwaysSucceeds&lt;/code&gt; functions) has been removed. See ticket &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/14324&quot;&gt;#14324&lt;/a&gt; and the &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0011-deprecate-stm-invariants.rst&quot;&gt;removal proposal&lt;/a&gt;. Existing users are encouraged to encapsulate their STM operations in safe abstractions which can perform the invariant checking without help from the runtime system.</source>
          <target state="translated">Tenga en cuenta que la verificaci&amp;oacute;n invariante (es decir, las funciones &lt;code&gt;always&lt;/code&gt; y &lt;code&gt;alwaysSucceeds&lt;/code&gt; ) se ha eliminado. Vea el ticket &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/14324&quot;&gt;# 14324&lt;/a&gt; y la &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0011-deprecate-stm-invariants.rst&quot;&gt;propuesta de remoci&amp;oacute;n&lt;/a&gt; . Se anima a los usuarios existentes a encapsular sus operaciones STM en abstracciones seguras que pueden realizar la comprobaci&amp;oacute;n invariante sin la ayuda del sistema de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bfd5ca80319611f2ad6a6d58665d93fcbb3c156f" translate="yes" xml:space="preserve">
          <source>Note that it &lt;em&gt;isn't&lt;/em&gt; customarily expected that a type instance of &lt;code&gt;&lt;a href=&quot;ghc-real#t:Fractional&quot;&gt;Fractional&lt;/a&gt;&lt;/code&gt; implement a field. However, all instances in &lt;code&gt;base&lt;/code&gt; do.</source>
          <target state="translated">Tenga en cuenta que no &lt;em&gt;se&lt;/em&gt; espera habitualmente que una instancia de tipo de &lt;code&gt;&lt;a href=&quot;ghc-real#t:Fractional&quot;&gt;Fractional&lt;/a&gt;&lt;/code&gt; implemente un campo. Sin embargo, todas las instancias en la &lt;code&gt;base&lt;/code&gt; lo hacen.</target>
        </trans-unit>
        <trans-unit id="525bc9621da46140b66110bf09981d8c0a2b7083" translate="yes" xml:space="preserve">
          <source>Note that it &lt;em&gt;isn't&lt;/em&gt; customarily expected that a type instance of &lt;code&gt;&lt;a href=&quot;prelude#t:Fractional&quot;&gt;Fractional&lt;/a&gt;&lt;/code&gt; implement a field. However, all instances in &lt;code&gt;base&lt;/code&gt; do.</source>
          <target state="translated">Tenga en cuenta que no &lt;em&gt;se&lt;/em&gt; espera habitualmente que una instancia de tipo de &lt;code&gt;&lt;a href=&quot;prelude#t:Fractional&quot;&gt;Fractional&lt;/a&gt;&lt;/code&gt; implemente un campo. Sin embargo, todas las instancias en la &lt;code&gt;base&lt;/code&gt; lo hacen.</target>
        </trans-unit>
        <trans-unit id="ccaf9ee57d711da801bed84dfadd525a75d70df7" translate="yes" xml:space="preserve">
          <source>Note that it &lt;em&gt;isn't&lt;/em&gt; customarily expected that a type instance of both &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; implement an ordered ring. Indeed, in &lt;code&gt;base&lt;/code&gt; only &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-ratio#v:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; do.</source>
          <target state="translated">Tenga en cuenta que no &lt;em&gt;se&lt;/em&gt; suele esperar que una instancia de tipo de &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; implemente un anillo ordenado. De hecho, en &lt;code&gt;base&lt;/code&gt; solo lo hacen &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-ratio#v:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b0ebefaf6a8fd7841a426ebbf90075219fca0d8" translate="yes" xml:space="preserve">
          <source>Note that it &lt;em&gt;isn't&lt;/em&gt; customarily expected that a type instance of both &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; implement an ordered ring. Indeed, in &lt;code&gt;base&lt;/code&gt; only &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-ratio#v:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; do.</source>
          <target state="translated">Tenga en cuenta que no &lt;em&gt;se&lt;/em&gt; suele esperar que una instancia de tipo de &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; implemente un anillo ordenado. De hecho, en &lt;code&gt;base&lt;/code&gt; solo lo hacen &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-ratio#v:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2c82e2d7986abad0ba04ff393eba4038a79448c" translate="yes" xml:space="preserve">
          <source>Note that it &lt;strong&gt;does not&lt;/strong&gt; regard CR (&lt;code&gt;'\r'&lt;/code&gt;) as a newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b265c3aed4a0fae4215ed6797047f0fad0de3ff1" translate="yes" xml:space="preserve">
          <source>Note that it doesn&amp;rsquo;t fully negate the effects of &lt;code&gt;-Werror=&amp;lt;wflag&amp;gt;&lt;/code&gt; - the warning will still be enabled.</source>
          <target state="translated">Tenga en cuenta que no niega completamente los efectos de &lt;code&gt;-Werror=&amp;lt;wflag&amp;gt;&lt;/code&gt; ; la advertencia seguir&amp;aacute; estando habilitada.</target>
        </trans-unit>
        <trans-unit id="3552763f2d02369b30ff3cbbef7706ae37b7af80" translate="yes" xml:space="preserve">
          <source>Note that it is acceptable to use parentheses in a &lt;code&gt;inst_head&lt;/code&gt;. For instance, &lt;code&gt;instance (C a)&lt;/code&gt; is accepted, as is &lt;code&gt;instance forall a. (C a)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6254822cea7a64100f40aab8def82b94101fda" translate="yes" xml:space="preserve">
          <source>Note that it is acceptable to use parentheses in a &lt;code&gt;prefix_gadt_body&lt;/code&gt;. For instance, &lt;code&gt;MkV1 :: forall a. (a) -&amp;gt; (V1)&lt;/code&gt; is acceptable, as is &lt;code&gt;MkV2 :: forall a. (a -&amp;gt; V2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83014bf24d82bb0e1a70474d5dce7c56ea55a43" translate="yes" xml:space="preserve">
          <source>Note that it is safe to call &lt;code&gt;waitForProcess&lt;/code&gt; for the same process in multiple threads. When the process ends, threads blocking on this call will wake in FIFO order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7005610565a4c7898f3b659dd8d96fce7be60db0" translate="yes" xml:space="preserve">
          <source>Note that line numbers start counting at one, but column numbers start at zero. This choice was made to follow existing convention (i.e. this is how Emacs does it).</source>
          <target state="translated">Observe que los números de línea empiezan a contar desde el uno,pero los números de columna empiezan desde el cero.Esta elección se hizo para seguir la convención existente (es decir,así es como lo hace Emacs).</target>
        </trans-unit>
        <trans-unit id="b58c5082533c6ce920a238e2630b3a0a649c4aa4" translate="yes" xml:space="preserve">
          <source>Note that memory allocation is unrelated to &lt;em&gt;live memory&lt;/em&gt;, also known as &lt;em&gt;heap residency&lt;/em&gt;. A thread can allocate a large amount of memory and retain anything between none and all of it. It is better to think of the allocation limit as a limit on &lt;em&gt;CPU time&lt;/em&gt;, rather than a limit on memory.</source>
          <target state="translated">Tenga en cuenta que la asignaci&amp;oacute;n de memoria no est&amp;aacute; relacionada con la &lt;em&gt;memoria en vivo&lt;/em&gt; , tambi&amp;eacute;n conocida como &lt;em&gt;residencia de pila&lt;/em&gt; . Un hilo puede asignar una gran cantidad de memoria y retener cualquier cosa entre nada y todo. Es mejor pensar en el l&amp;iacute;mite de asignaci&amp;oacute;n como un l&amp;iacute;mite en &lt;em&gt;el tiempo de la CPU&lt;/em&gt; , en lugar de un l&amp;iacute;mite en la memoria.</target>
        </trans-unit>
        <trans-unit id="273d41914c5c6dac58d5704a8903f640ae883fcf" translate="yes" xml:space="preserve">
          <source>Note that module &lt;code&gt;D&lt;/code&gt; was compiled, but in this instance because its source hadn&amp;rsquo;t really changed, its interface remained the same, and the recompilation checker determined that &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; didn&amp;rsquo;t need to be recompiled.</source>
          <target state="translated">Tenga en cuenta que el m&amp;oacute;dulo &lt;code&gt;D&lt;/code&gt; se compil&amp;oacute;, pero en este caso, debido a que su fuente no hab&amp;iacute;a cambiado realmente, su interfaz permaneci&amp;oacute; igual y el comprobador de recompilaci&amp;oacute;n determin&amp;oacute; que &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; y &lt;code&gt;C&lt;/code&gt; no necesitaban ser recompilados.</target>
        </trans-unit>
        <trans-unit id="aa9b10733e365e8f6145122de16aa95fd734e161" translate="yes" xml:space="preserve">
          <source>Note that no assumptions may be made about the values representing stable pointers. In fact, they need not even be valid memory addresses. The only guarantee provided is that if they are passed back to Haskell land, the function &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; will be able to reconstruct the Haskell value referred to by the stable pointer.</source>
          <target state="translated">Tenga en cuenta que no se pueden hacer suposiciones sobre los valores que representan punteros estables. De hecho, ni siquiera necesitan ser direcciones de memoria v&amp;aacute;lidas. La &amp;uacute;nica garant&amp;iacute;a proporcionada es que si se devuelven a Haskell land, la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; podr&amp;aacute; reconstruir el valor de Haskell al que hace referencia el puntero estable.</target>
        </trans-unit>
        <trans-unit id="ebfa96acca93e187bf978a8f0c66831f5deb550f" translate="yes" xml:space="preserve">
          <source>Note that no warning is given for syntax that implicitly refers to the Prelude, even if &lt;a href=&quot;exts/rebindable_syntax#extension-NoImplicitPrelude&quot;&gt;&lt;code&gt;NoImplicitPrelude&lt;/code&gt;&lt;/a&gt; would change whether it refers to the Prelude. For example, no warning is given when &lt;code&gt;368&lt;/code&gt; means &lt;code&gt;Prelude.fromInteger (368::Prelude.Integer)&lt;/code&gt; (where &lt;code&gt;Prelude&lt;/code&gt; refers to the actual Prelude module, regardless of the imports of the module being compiled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4fefad8cc30b2189f543b2c01f22060d9ca1a7" translate="yes" xml:space="preserve">
          <source>Note that no warning is given for syntax that implicitly refers to the Prelude, even if &lt;a href=&quot;glasgow_exts#extension-NoImplicitPrelude&quot;&gt;&lt;code&gt;-XNoImplicitPrelude&lt;/code&gt;&lt;/a&gt; would change whether it refers to the Prelude. For example, no warning is given when &lt;code&gt;368&lt;/code&gt; means &lt;code&gt;Prelude.fromInteger (368::Prelude.Integer)&lt;/code&gt; (where &lt;code&gt;Prelude&lt;/code&gt; refers to the actual Prelude module, regardless of the imports of the module being compiled).</source>
          <target state="translated">Tenga en cuenta que no se da ninguna advertencia para la sintaxis que se refiere impl&amp;iacute;citamente al Preludio, incluso si &lt;a href=&quot;glasgow_exts#extension-NoImplicitPrelude&quot;&gt; &lt;code&gt;-XNoImplicitPrelude&lt;/code&gt; &lt;/a&gt; cambiara si se refiere al Preludio. Por ejemplo, no se da ninguna advertencia cuando &lt;code&gt;368&lt;/code&gt; significa &lt;code&gt;Prelude.fromInteger (368::Prelude.Integer)&lt;/code&gt; (donde &lt;code&gt;Prelude&lt;/code&gt; se refiere al m&amp;oacute;dulo Prelude real, independientemente de las importaciones del m&amp;oacute;dulo que se est&amp;aacute; compilando).</target>
        </trans-unit>
        <trans-unit id="49a7cd2da732a498264fe69cdc55ccc2e5f59d22" translate="yes" xml:space="preserve">
          <source>Note that no warning is given for syntax that implicitly refers to the Prelude, even if &lt;a href=&quot;glasgow_exts#extension-NoImplicitPrelude&quot;&gt;&lt;code&gt;NoImplicitPrelude&lt;/code&gt;&lt;/a&gt; would change whether it refers to the Prelude. For example, no warning is given when &lt;code&gt;368&lt;/code&gt; means &lt;code&gt;Prelude.fromInteger (368::Prelude.Integer)&lt;/code&gt; (where &lt;code&gt;Prelude&lt;/code&gt; refers to the actual Prelude module, regardless of the imports of the module being compiled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3961e6b1d44470d139a066bd7e5e99b36cc380d" translate="yes" xml:space="preserve">
          <source>Note that numeric digits outside the ASCII range (such as arabic-indic digits like e.g. &quot;٤&quot; or &lt;code&gt;U+0664&lt;/code&gt;), as well as numeric characters which aren't digits, are parsed by this function but not by &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:digit&quot;&gt;digit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que los d&amp;iacute;gitos num&amp;eacute;ricos fuera del rango ASCII (como d&amp;iacute;gitos ar&amp;aacute;bigos-&amp;iacute;ndicos como, por ejemplo, &quot;٤&quot; o &lt;code&gt;U+0664&lt;/code&gt; ), as&amp;iacute; como los caracteres num&amp;eacute;ricos que no son d&amp;iacute;gitos, se analizan mediante esta funci&amp;oacute;n, pero no por &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:digit&quot;&gt;digit&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7ed51f37ef06c30fed9104ea5ecb01d29f66f7e" translate="yes" xml:space="preserve">
          <source>Note that numeric digits outside the ASCII range (such as arabic-indic digits like e.g. &quot;٤&quot; or &lt;code&gt;U+0664&lt;/code&gt;), as well as numeric characters which aren't digits, are parsed by this function but not by &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-char#v:digit&quot;&gt;digit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que los d&amp;iacute;gitos num&amp;eacute;ricos fuera del rango ASCII (como d&amp;iacute;gitos ar&amp;aacute;bigos-&amp;iacute;ndicos como, por ejemplo, &quot;٤&quot; o &lt;code&gt;U+0664&lt;/code&gt; ), as&amp;iacute; como los caracteres num&amp;eacute;ricos que no son d&amp;iacute;gitos, se analizan mediante esta funci&amp;oacute;n, pero no por &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-char#v:digit&quot;&gt;digit&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3aca93abfde5ec064588876b85a983dba2e1d897" translate="yes" xml:space="preserve">
          <source>Note that numeric digits outside the ASCII range, as well as numeric characters which aren't digits, are selected by this function but not by &lt;code&gt;&lt;a href=&quot;data-char#v:isDigit&quot;&gt;isDigit&lt;/a&gt;&lt;/code&gt;. Such characters may be part of identifiers but are not used by the printer and reader to represent numbers.</source>
          <target state="translated">Tenga en cuenta que los d&amp;iacute;gitos num&amp;eacute;ricos fuera del rango ASCII, as&amp;iacute; como los caracteres num&amp;eacute;ricos que no son d&amp;iacute;gitos, son seleccionados por esta funci&amp;oacute;n pero no por &lt;code&gt;&lt;a href=&quot;data-char#v:isDigit&quot;&gt;isDigit&lt;/a&gt;&lt;/code&gt; . Estos caracteres pueden formar parte de identificadores, pero la impresora y el lector no los utilizan para representar n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="f6ca479e6c19d19f7cbdf53fa1975eb3bf201fe0" translate="yes" xml:space="preserve">
          <source>Note that numeric digits outside the ASCII range, as well as numeric characters which aren't digits, are selected by this function but not by &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isDigit&quot;&gt;isDigit&lt;/a&gt;&lt;/code&gt;. Such characters may be part of identifiers but are not used by the printer and reader to represent numbers.</source>
          <target state="translated">Tenga en cuenta que los d&amp;iacute;gitos num&amp;eacute;ricos fuera del rango ASCII, as&amp;iacute; como los caracteres num&amp;eacute;ricos que no son d&amp;iacute;gitos, son seleccionados por esta funci&amp;oacute;n pero no por &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isDigit&quot;&gt;isDigit&lt;/a&gt;&lt;/code&gt; . Estos caracteres pueden formar parte de identificadores, pero la impresora y el lector no los utilizan para representar n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="00198523cbc0082fb3428e68e1d61ecf58a45ae8" translate="yes" xml:space="preserve">
          <source>Note that on Windows parent directories &lt;code&gt;..&lt;/code&gt; are always fully expanded before the symbolic links, as consistent with the rest of the Windows API (such as &lt;code&gt;GetFullPathName&lt;/code&gt;). In contrast, on POSIX systems parent directories &lt;code&gt;..&lt;/code&gt; are expanded alongside symbolic links from left to right. To put this more concretely: if &lt;code&gt;L&lt;/code&gt; is a symbolic link for &lt;code&gt;R/P&lt;/code&gt;, then on Windows &lt;code&gt;L\..&lt;/code&gt; refers to &lt;code&gt;.&lt;/code&gt;, whereas on other operating systems &lt;code&gt;L/..&lt;/code&gt; refers to &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que en los directorios principales de Windows &lt;code&gt;..&lt;/code&gt; . siempre se expanden por completo antes de los enlaces simb&amp;oacute;licos, en consonancia con el resto de la API de Windows (como &lt;code&gt;GetFullPathName&lt;/code&gt; ). Por el contrario, en los sistemas POSIX, los directorios principales &lt;code&gt;..&lt;/code&gt; . se expanden junto con los enlaces simb&amp;oacute;licos de izquierda a derecha. Para poner esto m&amp;aacute;s concretamente: si &lt;code&gt;L&lt;/code&gt; es un enlace simb&amp;oacute;lico para &lt;code&gt;R/P&lt;/code&gt; , entonces en Windows &lt;code&gt;L\..&lt;/code&gt; refiere a &lt;code&gt;.&lt;/code&gt; , Mientras que en otros sistemas operativos &lt;code&gt;L/..&lt;/code&gt; se refiere a &lt;code&gt;R&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cce57e0602bd626d4114bc65f1120819b7a872c0" translate="yes" xml:space="preserve">
          <source>Note that packages only contain compiled code, so debugging a package requires finding its source and loading that directly.</source>
          <target state="translated">Tenga en cuenta que los paquetes sólo contienen código compilado,por lo que la depuración de un paquete requiere encontrar su fuente y cargarlo directamente.</target>
        </trans-unit>
        <trans-unit id="92c2203dfd5a194d5612dfeec8df42a4f09f5338" translate="yes" xml:space="preserve">
          <source>Note that primitives are &lt;code&gt;Contrafunctors&lt;/code&gt;&lt;a href=&quot;http://hackage.haskell.org/package/contravariant&quot;&gt;http://hackage.haskell.org/package/contravariant&lt;/a&gt;. Hence, the following laws hold.</source>
          <target state="translated">Tenga en cuenta que las primitivas son &lt;code&gt;Contrafunctors&lt;/code&gt; &lt;a href=&quot;http://hackage.haskell.org/package/contravariant&quot;&gt;http://hackage.haskell.org/package/contravariant&lt;/a&gt; . Por tanto, se cumplen las siguientes leyes.</target>
        </trans-unit>
        <trans-unit id="9748416b7c720b60f4c8302a487524d4091598b0" translate="yes" xml:space="preserve">
          <source>Note that primitives are &lt;code&gt;Contravariant&lt;/code&gt;&lt;a href=&quot;https://hackage.haskell.org/package/contravariant&quot;&gt;http://hackage.haskell.org/package/contravariant&lt;/a&gt;. Hence, the following laws hold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b038144c16c5927ecb1a6490213329a05b30c08f" translate="yes" xml:space="preserve">
          <source>Note that processes which use the POSIX &lt;code&gt;exec&lt;/code&gt; system call (e.g. &lt;code&gt;gcc&lt;/code&gt;) require special care on Windows. Specifically, the &lt;code&gt;msvcrt&lt;/code&gt; C runtime used frequently on Windows emulates &lt;code&gt;exec&lt;/code&gt; in a non-POSIX compliant manner, where the caller will be terminated (with exit code 0) and execution will continue in a new process. As a result, on Windows it will appear as though a child process which has called &lt;code&gt;exec&lt;/code&gt; has terminated despite the fact that the process would still be running on a POSIX-compliant platform.</source>
          <target state="translated">Tenga en cuenta que los procesos que utilizan la llamada al sistema POSIX &lt;code&gt;exec&lt;/code&gt; (por ejemplo, &lt;code&gt;gcc&lt;/code&gt; ) requieren un cuidado especial en Windows. Espec&amp;iacute;ficamente, el tiempo de ejecuci&amp;oacute;n de &lt;code&gt;msvcrt&lt;/code&gt; C que se usa con frecuencia en Windows emula a &lt;code&gt;exec&lt;/code&gt; de una manera no compatible con POSIX, donde la persona que llama terminar&amp;aacute; (con el c&amp;oacute;digo de salida 0) y la ejecuci&amp;oacute;n continuar&amp;aacute; en un nuevo proceso. Como resultado, en Windows, parecer&amp;aacute; que un proceso hijo que llam&amp;oacute; a &lt;code&gt;exec&lt;/code&gt; ha terminado a pesar de que el proceso todav&amp;iacute;a se ejecutar&amp;aacute; en una plataforma compatible con POSIX.</target>
        </trans-unit>
        <trans-unit id="5e2096ed561c2bf3900c21383006ef3f61805855" translate="yes" xml:space="preserve">
          <source>Note that references from a finalizer do not necessarily prevent another object from being finalized. If A's finalizer refers to B (perhaps using &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt;, then the only guarantee is that B's finalizer will never be started before A's. If both A and B are unreachable, then both finalizers will start together. See &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; for more on finalizer ordering.</source>
          <target state="translated">Tenga en cuenta que las referencias de un finalizador no impiden necesariamente que se finalice otro objeto. Si el finalizador de A se refiere a B (quiz&amp;aacute;s usando &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; , entonces la &amp;uacute;nica garant&amp;iacute;a es que el finalizador de B nunca se iniciar&amp;aacute; antes que el de A. Si no se puede acceder a A y B, ambos finalizadores comenzar&amp;aacute;n juntos. Consulte &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el pedido de finalizadores.</target>
        </trans-unit>
        <trans-unit id="e1e90d7572d19320cf7344ae3b1d0ce896d5029a" translate="yes" xml:space="preserve">
          <source>Note that references from a finalizer do not necessarily prevent another object from being finalized. If A's finalizer refers to B (perhaps using &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt;, then the only guarantee is that B's finalizer will never be started before A's. If both A and B are unreachable, then both finalizers will start together. See &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; for more on finalizer ordering.</source>
          <target state="translated">Tenga en cuenta que las referencias de un finalizador no impiden necesariamente que se finalice otro objeto. Si el finalizador de A se refiere a B (quiz&amp;aacute;s usando &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; , entonces la &amp;uacute;nica garant&amp;iacute;a es que el finalizador de B nunca se iniciar&amp;aacute; antes que el de A. Si no se puede acceder a A y B, ambos finalizadores comenzar&amp;aacute;n juntos. Consulte &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el pedido de finalizadores.</target>
        </trans-unit>
        <trans-unit id="cc356b8793bb083a67ad53425e549e6eaf817f79" translate="yes" xml:space="preserve">
          <source>Note that right-associativity of &lt;code&gt;:^:&lt;/code&gt; is ignored. For example,</source>
          <target state="translated">Tenga en cuenta que la asociatividad a la derecha de &lt;code&gt;:^:&lt;/code&gt; se ignora. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="ea16129864c9bc69b1267cd317e60b8e1cd54033" translate="yes" xml:space="preserve">
          <source>Note that right-associativity of &lt;code&gt;:^:&lt;/code&gt; is unused.</source>
          <target state="translated">Tenga en cuenta que la asociatividad a la derecha de &lt;code&gt;:^:&lt;/code&gt; no se utiliza.</target>
        </trans-unit>
        <trans-unit id="cb25fb232eaa8d92d1074e6f26210af239a4d814" translate="yes" xml:space="preserve">
          <source>Note that sequences are typically &lt;em&gt;slower&lt;/em&gt; than lists when using only operations for which they have the same big-(O) complexity: sequences make rather mediocre stacks!</source>
          <target state="translated">Tenga en cuenta que las secuencias suelen ser &lt;em&gt;m&amp;aacute;s lentas&lt;/em&gt; que las listas cuando se utilizan solo operaciones para las que tienen la misma complejidad grande (O): &amp;iexcl;las secuencias forman pilas bastante mediocres!</target>
        </trans-unit>
        <trans-unit id="c723aeed4af9dd83a9b82069c07b9c3ccbc5da99" translate="yes" xml:space="preserve">
          <source>Note that signature matching does check if &lt;em&gt;fixity&lt;/em&gt; matches, so be sure specify fixity of ordinary identifiers if you intend to use them with backticks.</source>
          <target state="translated">Tenga en cuenta que la coincidencia de firmas comprueba si la &lt;em&gt;fijeza&lt;/em&gt; coincide, as&amp;iacute; que aseg&amp;uacute;rese de especificar la fijeza de los identificadores ordinarios si tiene la intenci&amp;oacute;n de usarlos con comillas invertidas.</target>
        </trans-unit>
        <trans-unit id="f095c03ad06a310fd52b2a6d717b98f26776e7da" translate="yes" xml:space="preserve">
          <source>Note that since &lt;code&gt;integer-gmp&lt;/code&gt; does not depend on &lt;code&gt;base&lt;/code&gt;, error reporting via exceptions, &lt;code&gt;error&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; is not available. Instead, the low-level functions will crash the runtime if called with invalid arguments.</source>
          <target state="translated">Tenga en cuenta que dado que &lt;code&gt;integer-gmp&lt;/code&gt; no depende de la &lt;code&gt;base&lt;/code&gt; , el informe de errores mediante excepciones, &lt;code&gt;error&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; no est&amp;aacute; disponible. En cambio, las funciones de bajo nivel bloquear&amp;aacute;n el tiempo de ejecuci&amp;oacute;n si se llaman con argumentos no v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="9b83514c0ce414a47b834dc48f510e88bcd807c9" translate="yes" xml:space="preserve">
          <source>Note that since an expression splice is unable to refer to declarations in the same declaration group, we can introduce a top-level (empty) splice to break up the declaration group</source>
          <target state="translated">Obsérvese que como una expresión empalme no puede referirse a declaraciones del mismo grupo de declaración,podemos introducir un empalme de nivel superior (vacío)para dividir el grupo de declaración</target>
        </trans-unit>
        <trans-unit id="19af66470dd0fd372aaa290faf9416a29cb5103d" translate="yes" xml:space="preserve">
          <source>Note that since the head of the resulting expression is produced by an application of the operator to the first element of the list, given an operator lazy in its right argument, &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; can produce a terminating expression from an unbounded list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edeaaceca22d9e6e48a4ec76b65a79cb29fc0dc" translate="yes" xml:space="preserve">
          <source>Note that since the head of the resulting expression is produced by an application of the operator to the first element of the list, given an operator lazy in its right argument, &lt;code&gt;&lt;a href=&quot;data-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; can produce a terminating expression from an unbounded list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa5cc95e997d42e3f9b2f8917f3475eae62b8bc" translate="yes" xml:space="preserve">
          <source>Note that since the head of the resulting expression is produced by an application of the operator to the first element of the list, given an operator lazy in its right argument, &lt;code&gt;&lt;a href=&quot;prelude#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; can produce a terminating expression from an unbounded list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74f896437a88c7d014238b3770a7c1c62b51099" translate="yes" xml:space="preserve">
          <source>Note that the 32-bit x86 native code generator only supports excess-precision mode, so neither &lt;code&gt;-fexcess-precision&lt;/code&gt; nor &lt;code&gt;-fno-excess-precision&lt;/code&gt; has any effect. This is a known bug, see &lt;a href=&quot;bugs#bugs-ghc&quot;&gt;Bugs in GHC&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que el generador de c&amp;oacute;digo nativo x86 de 32 bits solo admite el modo de exceso de precisi&amp;oacute;n, por lo que ni &lt;code&gt;-fexcess-precision&lt;/code&gt; ni &lt;code&gt;-fno-excess-precision&lt;/code&gt; tienen ning&amp;uacute;n efecto. Este es un error conocido, consulte &lt;a href=&quot;bugs#bugs-ghc&quot;&gt;Errores en GHC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="330613fe18f73ee23466f7511d7b202676e5cd38" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;-odir&lt;/code&gt; option does &lt;em&gt;not&lt;/em&gt; affect where the interface files are put; use the &lt;code&gt;-hidir&lt;/code&gt; option for that. In the above example, they would still be put in &lt;code&gt;parse/Foo.hi&lt;/code&gt;, &lt;code&gt;parse/Bar.hi&lt;/code&gt;, and &lt;code&gt;gurgle/Bumble.hi&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que la opci&amp;oacute;n &lt;code&gt;-odir&lt;/code&gt; &lt;em&gt;no&lt;/em&gt; afecta d&amp;oacute;nde se colocan los archivos de interfaz; use la opci&amp;oacute;n &lt;code&gt;-hidir&lt;/code&gt; para eso. En el ejemplo anterior, todav&amp;iacute;a se colocar&amp;iacute;an en &lt;code&gt;parse/Foo.hi&lt;/code&gt; , &lt;code&gt;parse/Bar.hi&lt;/code&gt; y &lt;code&gt;gurgle/Bumble.hi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="309a5bb3e84ee602253ec738970608aecfccc201" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; method, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, is not particularly lazy. It will take time proportional to the sum of the logarithms of the individual result sequences to produce anything whatsoever.</source>
          <target state="translated">Tenga en cuenta que el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; , no es particularmente perezoso. Se necesitar&amp;aacute; un tiempo proporcional a la suma de los logaritmos de las secuencias de resultados individuales para producir cualquier cosa.</target>
        </trans-unit>
        <trans-unit id="ecf7bfd1b411f608d1147e0ef0a9518d1e3597b7" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; method, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, is not particularly lazy. It will take time proportional to the sum of the logarithms of the individual result sequences to produce anything whatsoever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baa0deab26388879fdb97317652cc5b58ef6ba5" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; method, &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, is not particularly lazy. It will take time proportional to the sum of the logarithms of the individual result sequences to produce anything whatsoever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6f2cf53da86d8f316c7d0c0ffc6df711b35a02" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; remembers nothing about the state of the encoder/decoder in use on this &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. For example, if the encoding in use is UTF-16, then using &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetEncoding&quot;&gt;hGetEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; to save and restore the encoding may result in an extra byte-order-mark being written to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532a96aa546fe516b65f4c317f8d98964d1adb0b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; remembers nothing about the state of the encoder/decoder in use on this &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. For example, if the encoding in use is UTF-16, then using &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetEncoding&quot;&gt;hGetEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; to save and restore the encoding may result in an extra byte-order-mark being written to the file.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; no recuerda nada sobre el estado del codificador / decodificador en uso en este &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Por ejemplo, si la codificaci&amp;oacute;n en uso es UTF-16, entonces el uso de &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetEncoding&quot;&gt;hGetEncoding&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; para guardar y restaurar la codificaci&amp;oacute;n puede dar como resultado que se escriba una marca de orden de bytes adicional en el archivo.</target>
        </trans-unit>
        <trans-unit id="5177125357c8ba392c64ff5a83db619e0110c256" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; remembers nothing about the state of the encoder/decoder in use on this &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. For example, if the encoding in use is UTF-16, then using &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetEncoding&quot;&gt;hGetEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; to save and restore the encoding may result in an extra byte-order-mark being written to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2204063e4c34f1c3a4a4b15d40a00171735eecd7" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; remembers nothing about the state of the encoder/decoder in use on this &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. For example, if the encoding in use is UTF-16, then using &lt;code&gt;&lt;a href=&quot;system-io#v:hGetEncoding&quot;&gt;hGetEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-io#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; to save and restore the encoding may result in an extra byte-order-mark being written to the file.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; no recuerda nada sobre el estado del codificador / decodificador en uso en este &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Por ejemplo, si la codificaci&amp;oacute;n en uso es UTF-16, entonces el uso de &lt;code&gt;&lt;a href=&quot;system-io#v:hGetEncoding&quot;&gt;hGetEncoding&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;system-io#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; para guardar y restaurar la codificaci&amp;oacute;n puede dar como resultado que se escriba una marca de orden de bytes adicional en el archivo.</target>
        </trans-unit>
        <trans-unit id="2b693c1b448bc94cf66607a78730b10d509a368a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Lift&lt;/code&gt; typeclass takes advantage of &lt;a href=&quot;#runtime-rep&quot;&gt;Levity polymorphism&lt;/a&gt; in order to support instances involving unboxed types. This means &lt;a href=&quot;#extension-DeriveLift&quot;&gt;&lt;code&gt;DeriveLift&lt;/code&gt;&lt;/a&gt; also works for these types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0b7ebca01c04086bce79e74e8b55a503cf518c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Lift&lt;/code&gt; typeclass takes advantage of &lt;a href=&quot;levity_polymorphism#runtime-rep&quot;&gt;Levity polymorphism&lt;/a&gt; in order to support instances involving unboxed types. This means &lt;a href=&quot;#extension-DeriveLift&quot;&gt;&lt;code&gt;DeriveLift&lt;/code&gt;&lt;/a&gt; also works for these types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1e65aa301e4b1be82f664f9499398a1e7e1f92" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Prelude&lt;/code&gt; import is marked as implicit. It can be overridden with an explicit &lt;code&gt;Prelude&lt;/code&gt; import, just like in a Haskell module.</source>
          <target state="translated">Tenga en cuenta que la importaci&amp;oacute;n de &lt;code&gt;Prelude&lt;/code&gt; est&amp;aacute; marcada como impl&amp;iacute;cita. Se puede anular con una importaci&amp;oacute;n de &lt;code&gt;Prelude&lt;/code&gt; expl&amp;iacute;cita , como en un m&amp;oacute;dulo de Haskell.</target>
        </trans-unit>
        <trans-unit id="502132d21d5978b3a8ec6cd6de231a4d98125ce2" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;nominal&lt;/code&gt; type arguments are equal, the &lt;code&gt;representational&lt;/code&gt; type arguments can differ, but need to have a &lt;code&gt;Coercible&lt;/code&gt; instance themself, and the &lt;code&gt;phantom&lt;/code&gt; type arguments can be changed arbitrarily.</source>
          <target state="translated">Tenga en cuenta que los argumentos de tipo &lt;code&gt;nominal&lt;/code&gt; son iguales, los argumentos de tipo &lt;code&gt;representational&lt;/code&gt; pueden diferir, pero deben tener una instancia &lt;code&gt;Coercible&lt;/code&gt; mismos, y los argumentos de tipo &lt;code&gt;phantom&lt;/code&gt; se pueden cambiar arbitrariamente.</target>
        </trans-unit>
        <trans-unit id="e840ae12e6ff09c359b921347e60a8e6a051ed31" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;restore&lt;/code&gt; action passed to the argument to &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; does not necessarily unmask asynchronous exceptions, it just restores the masking state to that of the enclosing context. Thus if asynchronous exceptions are already masked, &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; cannot be used to unmask exceptions again. This is so that if you call a library function with exceptions masked, you can be sure that the library call will not be able to unmask exceptions again. If you are writing library code and need to use asynchronous exceptions, the only way is to create a new thread; see &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que la acci&amp;oacute;n de &lt;code&gt;restore&lt;/code&gt; pasada al argumento para &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; no necesariamente desenmascara las excepciones asincr&amp;oacute;nicas, simplemente restaura el estado de enmascaramiento al del contexto adjunto. Por lo tanto, si las excepciones asincr&amp;oacute;nicas ya est&amp;aacute;n enmascaradas, la &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; no se puede usar para desenmascarar las excepciones nuevamente. Esto es para que si llama a una funci&amp;oacute;n de biblioteca con excepciones enmascaradas, puede estar seguro de que la llamada a la biblioteca no podr&amp;aacute; volver a desenmascarar las excepciones. Si est&amp;aacute; escribiendo c&amp;oacute;digo de biblioteca y necesita usar excepciones asincr&amp;oacute;nicas, la &amp;uacute;nica forma es crear un nuevo hilo; consulte &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87a7979be5edffeddb07b20613db6dbe774e135f" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;restore&lt;/code&gt; action passed to the argument to &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; does not necessarily unmask asynchronous exceptions, it just restores the masking state to that of the enclosing context. Thus if asynchronous exceptions are already masked, &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; cannot be used to unmask exceptions again. This is so that if you call a library function with exceptions masked, you can be sure that the library call will not be able to unmask exceptions again. If you are writing library code and need to use asynchronous exceptions, the only way is to create a new thread; see &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que la acci&amp;oacute;n de &lt;code&gt;restore&lt;/code&gt; pasada al argumento para &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; no necesariamente desenmascara las excepciones asincr&amp;oacute;nicas, simplemente restaura el estado de enmascaramiento al del contexto adjunto. Por lo tanto, si las excepciones asincr&amp;oacute;nicas ya est&amp;aacute;n enmascaradas, la &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; no se puede usar para desenmascarar las excepciones nuevamente. Esto es para que si llama a una funci&amp;oacute;n de biblioteca con excepciones enmascaradas, puede estar seguro de que la llamada a la biblioteca no podr&amp;aacute; volver a desenmascarar las excepciones. Si est&amp;aacute; escribiendo c&amp;oacute;digo de biblioteca y necesita usar excepciones asincr&amp;oacute;nicas, la &amp;uacute;nica forma es crear un nuevo hilo; consulte &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="454010dcf1120ceeb3132c227f791c724eec83d9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;restore&lt;/code&gt; action passed to the argument to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; does not necessarily unmask asynchronous exceptions, it just restores the masking state to that of the enclosing context. Thus if asynchronous exceptions are already masked, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; cannot be used to unmask exceptions again. This is so that if you call a library function with exceptions masked, you can be sure that the library call will not be able to unmask exceptions again. If you are writing library code and need to use asynchronous exceptions, the only way is to create a new thread; see &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que la acci&amp;oacute;n de &lt;code&gt;restore&lt;/code&gt; pasada al argumento para &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; no necesariamente desenmascara las excepciones asincr&amp;oacute;nicas, simplemente restaura el estado de enmascaramiento al del contexto adjunto. Por lo tanto, si las excepciones asincr&amp;oacute;nicas ya est&amp;aacute;n enmascaradas, la &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; no se puede usar para desenmascarar las excepciones nuevamente. Esto es para que si llama a una funci&amp;oacute;n de biblioteca con excepciones enmascaradas, puede estar seguro de que la llamada a la biblioteca no podr&amp;aacute; volver a desenmascarar las excepciones. Si est&amp;aacute; escribiendo c&amp;oacute;digo de biblioteca y necesita usar excepciones asincr&amp;oacute;nicas, la &amp;uacute;nica forma es crear un nuevo hilo; consulte &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="170a4ee31f2d0f202d220168ec1fdc8ad29400b0" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;restore&lt;/code&gt; action passed to the argument to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; does not necessarily unmask asynchronous exceptions, it just restores the masking state to that of the enclosing context. Thus if asynchronous exceptions are already masked, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; cannot be used to unmask exceptions again. This is so that if you call a library function with exceptions masked, you can be sure that the library call will not be able to unmask exceptions again. If you are writing library code and need to use asynchronous exceptions, the only way is to create a new thread; see &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3624d40bf59c16249f1f5a20a1a937e21d71882b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;restore&lt;/code&gt; action passed to the argument to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; does not necessarily unmask asynchronous exceptions, it just restores the masking state to that of the enclosing context. Thus if asynchronous exceptions are already masked, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; cannot be used to unmask exceptions again. This is so that if you call a library function with exceptions masked, you can be sure that the library call will not be able to unmask exceptions again. If you are writing library code and need to use asynchronous exceptions, the only way is to create a new thread; see &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent#v:forkIOWithUnmask&quot;&gt;forkIOWithUnmask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60d714ad07dfbcb448ae9178edf63b83c268312" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;via&lt;/code&gt; type does not have to be a &lt;code&gt;newtype&lt;/code&gt;. The only restriction is that it is coercible with the original data type. This means there can be arbitrary nesting of newtypes, as in the following example:</source>
          <target state="translated">Tenga en cuenta que el tipo de &lt;code&gt;via&lt;/code&gt; no tiene que ser un tipo &lt;code&gt;newtype&lt;/code&gt; . La &amp;uacute;nica restricci&amp;oacute;n es que es coercible con el tipo de datos original. Esto significa que puede haber un anidamiento arbitrario de nuevos tipos, como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="49a9ad3bbf35b1a32c2be7eda4a33ddd430bcebb" translate="yes" xml:space="preserve">
          <source>Note that the ASCII encoding is a subset of the UTF-8 encoding, which is why we can use the optimized function &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; to encode an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; as a decimal number with UTF-8 encoded digits. Using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; is more efficient than &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:stringUtf8&quot;&gt;stringUtf8&lt;/a&gt; . &lt;a href=&quot;../base-4.13.0.0/text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;, as it avoids constructing an intermediate &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;. Avoiding this intermediate data structure significantly improves performance because encoding &lt;code&gt;Cell&lt;/code&gt;s is the core operation for rendering CSV-tables. See &lt;a href=&quot;data-bytestring-builder-prim&quot;&gt;Data.ByteString.Builder.Prim&lt;/a&gt; for further information on how to improve the performance of &lt;code&gt;renderString&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que la codificaci&amp;oacute;n ASCII es un subconjunto de la codificaci&amp;oacute;n UTF-8, por lo que podemos usar la funci&amp;oacute;n optimizada &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; para codificar un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; como un n&amp;uacute;mero decimal con d&amp;iacute;gitos codificados en UTF-8. Usar &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; es m&amp;aacute;s eficiente que &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:stringUtf8&quot;&gt;stringUtf8&lt;/a&gt; . &lt;a href=&quot;../base-4.13.0.0/text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; , ya que evita la construcci&amp;oacute;n de una &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; intermedia . Evitar esta estructura de datos intermedia mejora significativamente el rendimiento porque la codificaci&amp;oacute;n de &lt;code&gt;Cell&lt;/code&gt; s es la operaci&amp;oacute;n principal para representar tablas CSV. Consulte &lt;a href=&quot;data-bytestring-builder-prim&quot;&gt;Data.ByteString.Builder.Prim&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo mejorar el rendimiento de &lt;code&gt;renderString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0dbdccc6b0227bdbf0bac2e7e966328224fe997" translate="yes" xml:space="preserve">
          <source>Note that the ASCII encoding is a subset of the UTF-8 encoding, which is why we can use the optimized function &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; to encode an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; as a decimal number with UTF-8 encoded digits. Using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; is more efficient than &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:stringUtf8&quot;&gt;stringUtf8&lt;/a&gt; . &lt;a href=&quot;../base-4.14.1.0/text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;, as it avoids constructing an intermediate &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;. Avoiding this intermediate data structure significantly improves performance because encoding &lt;code&gt;Cell&lt;/code&gt;s is the core operation for rendering CSV-tables. See &lt;a href=&quot;data-bytestring-builder-prim&quot;&gt;Data.ByteString.Builder.Prim&lt;/a&gt; for further information on how to improve the performance of &lt;code&gt;renderString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72baf6503424ff97ce5c5dd03531e15932ab0bf3" translate="yes" xml:space="preserve">
          <source>Note that the ASCII encoding is a subset of the UTF-8 encoding, which is why we can use the optimized function &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; to encode an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; as a decimal number with UTF-8 encoded digits. Using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:intDec&quot;&gt;intDec&lt;/a&gt;&lt;/code&gt; is more efficient than &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#v:stringUtf8&quot;&gt;stringUtf8&lt;/a&gt; . &lt;a href=&quot;../base-4.15.0.0/text-show#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt;, as it avoids constructing an intermediate &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;. Avoiding this intermediate data structure significantly improves performance because encoding &lt;code&gt;Cell&lt;/code&gt;s is the core operation for rendering CSV-tables. See &lt;a href=&quot;data-bytestring-builder-prim&quot;&gt;Data.ByteString.Builder.Prim&lt;/a&gt; for further information on how to improve the performance of &lt;code&gt;renderString&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f06bfc55bfbd403475823742e13e429c0ca2e0" translate="yes" xml:space="preserve">
          <source>Note that the RTS will not set CPU affinity for bound threads and threads entering Haskell from C/C++, so if your program uses bound threads you should ensure that each bound thread calls the RTS API &lt;code&gt;rts_setInCallCapability(c,1)&lt;/code&gt; from C/C++ before calling into Haskell. Otherwise there could be a mismatch between the CPU that the thread is running on and the memory it is using while running Haskell code, which will negate any benefits of &lt;code&gt;--numa&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que el RTS no establecer&amp;aacute; la afinidad de la CPU para los subprocesos vinculados y los subprocesos que ingresan a Haskell desde C / C ++, por lo que si su programa usa subprocesos vinculados, debe asegurarse de que cada subproceso vinculado llame a la API de RTS &lt;code&gt;rts_setInCallCapability(c,1)&lt;/code&gt; desde C / C ++ antes llamando a Haskell. De lo contrario, podr&amp;iacute;a haber una discrepancia entre la CPU en la que se est&amp;aacute; ejecutando el hilo y la memoria que est&amp;aacute; usando mientras se ejecuta el c&amp;oacute;digo Haskell, lo que anular&amp;aacute; cualquier beneficio de &lt;code&gt;--numa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33e79ebf6a7ee502ff6ae1da2ae2588427c0bcf7" translate="yes" xml:space="preserve">
          <source>Note that the ability to catch an exception does &lt;em&gt;not&lt;/em&gt; guarantee that we can deal with all possible exit points from a computation. Some monads, such as continuation-based stacks, allow for more than just a success/failure strategy, and therefore &lt;code&gt;catch&lt;/code&gt;&lt;em&gt;cannot&lt;/em&gt; be used by those monads to properly implement a function such as &lt;code&gt;finally&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;control-monad-catch#t:MonadMask&quot;&gt;MonadMask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d5dd0ddd0336b419dba13d539e292846c264a2" translate="yes" xml:space="preserve">
          <source>Note that the application of &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceM&quot;&gt;traceM&lt;/a&gt;&lt;/code&gt; is not an action in the &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; context, as &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; is in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; type. While the fresh bindings in the following example will force the &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceM&quot;&gt;traceM&lt;/a&gt;&lt;/code&gt; expressions to be reduced every time the &lt;code&gt;do&lt;/code&gt;-block is executed, &lt;code&gt;traceM &quot;not crashed&quot;&lt;/code&gt; would only be reduced once, and the message would only be printed once. If your monad is in &lt;code&gt;&lt;a href=&quot;control-monad-io-class#v:MonadIO&quot;&gt;MonadIO&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-monad-io-class#v:liftIO&quot;&gt;liftIO&lt;/a&gt; . &lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; may be a better option.</source>
          <target state="translated">Tenga en cuenta que la aplicaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceM&quot;&gt;traceM&lt;/a&gt;&lt;/code&gt; no es una acci&amp;oacute;n en el contexto &lt;code&gt;&lt;a href=&quot;control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; , ya que &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; est&amp;aacute; en el tipo &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Si bien las nuevas vinculaciones en el siguiente ejemplo obligar&amp;aacute;n a que las expresiones &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceM&quot;&gt;traceM&lt;/a&gt;&lt;/code&gt; se reduzcan cada vez &lt;code&gt;do&lt;/code&gt; ejecute do -block, &lt;code&gt;traceM &quot;not crashed&quot;&lt;/code&gt; solo se reducir&amp;iacute;a una vez y el mensaje solo se imprimir&amp;iacute;a una vez. Si su m&amp;oacute;nada est&amp;aacute; en &lt;code&gt;&lt;a href=&quot;control-monad-io-class#v:MonadIO&quot;&gt;MonadIO&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-monad-io-class#v:liftIO&quot;&gt;liftIO&lt;/a&gt; . &lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; puede ser una mejor opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="84f82e7fb65a174913c30b1e72c6c8b2742829f2" translate="yes" xml:space="preserve">
          <source>Note that the bang has no effect at all in this case</source>
          <target state="translated">Tenga en cuenta que el estallido no tiene ningún efecto en este caso</target>
        </trans-unit>
        <trans-unit id="b4b32cd6cbf824718f0bdfb9b704b062cdf90b8a" translate="yes" xml:space="preserve">
          <source>Note that the current implementation does not return more than three submaps, but you should not depend on this behaviour because it can change in the future without notice.</source>
          <target state="translated">Tenga en cuenta que la aplicación actual no devuelve más de tres submapas,pero no debe depender de este comportamiento porque puede cambiar en el futuro sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="68d7fa1f654e15d8602e5a0f9e4ae840941c5c24" translate="yes" xml:space="preserve">
          <source>Note that the current implementation does not return more than three subsets, but you should not depend on this behaviour because it can change in the future without notice.</source>
          <target state="translated">Tenga en cuenta que la aplicación actual no devuelve más de tres subconjuntos,pero no debe depender de este comportamiento porque puede cambiar en el futuro sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="adfda92db68ba407dc5fdfba24f554547fcbb251" translate="yes" xml:space="preserve">
          <source>Note that the current implementation does not return more than two submaps, but you should not depend on this behaviour because it can change in the future without notice.</source>
          <target state="translated">Obsérvese que la aplicación actual no devuelve más de dos submapas,pero no se debe depender de este comportamiento porque puede cambiar en el futuro sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="a8b5ab808606c44886a770fd7971f5bf90a9f368" translate="yes" xml:space="preserve">
          <source>Note that the current implementation does not return more than two subsets, but you should not depend on this behaviour because it can change in the future without notice. Also, the current version does not continue splitting all the way to individual singleton sets -- it stops at some point.</source>
          <target state="translated">Tenga en cuenta que la aplicación actual no devuelve más de dos subconjuntos,pero no debe depender de este comportamiento porque puede cambiar en el futuro sin previo aviso.Además,la versión actual no continúa dividiéndose hasta llegar a los conjuntos individuales de singleton-se detiene en algún momento.</target>
        </trans-unit>
        <trans-unit id="086a1162aacfb2236087d8ed35712ce6942f14ad" translate="yes" xml:space="preserve">
          <source>Note that the datatype &lt;code&gt;G&lt;/code&gt; is used at different kinds in its body, and therefore that kind-indexed GADTs use a form of polymorphic recursion. It is thus only possible to use this feature if you have provided a complete user-supplied kind signature for the datatype (&lt;a href=&quot;#complete-kind-signatures&quot;&gt;Complete user-supplied kind signatures and polymorphic recursion&lt;/a&gt;).</source>
          <target state="translated">Tenga en cuenta que el tipo de datos &lt;code&gt;G&lt;/code&gt; se usa en diferentes tipos en su cuerpo y, por lo tanto, los GADT indexados por tipo usan una forma de recursividad polim&amp;oacute;rfica. Por lo tanto, solo es posible utilizar esta funci&amp;oacute;n si ha proporcionado una firma completa proporcionada por el &lt;a href=&quot;#complete-kind-signatures&quot;&gt;usuario&lt;/a&gt; para el tipo de datos (firmas completas proporcionadas por el usuario y recursividad polim&amp;oacute;rfica ).</target>
        </trans-unit>
        <trans-unit id="442f6f35f8b2e112d5cfdda0a46fff2deeaa6cc5" translate="yes" xml:space="preserve">
          <source>Note that the following operator interactions are expected to hold:</source>
          <target state="translated">Tenga en cuenta que se espera que las siguientes interacciones con el operador se mantengan:</target>
        </trans-unit>
        <trans-unit id="c120d45347ef3551abdd412d6c3c744d162a17b6" translate="yes" xml:space="preserve">
          <source>Note that the foreign function &lt;em&gt;must&lt;/em&gt; use the &lt;code&gt;ccall&lt;/code&gt; calling convention.</source>
          <target state="translated">Tenga en cuenta que la funci&amp;oacute;n for&amp;aacute;nea &lt;em&gt;debe&lt;/em&gt; utilizar la convenci&amp;oacute;n de llamada &lt;code&gt;ccall&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b614124ab834b2d7b11895f2dcc340c5cee01ee" translate="yes" xml:space="preserve">
          <source>Note that the formatting for &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; types is currently a bit different from that of C &lt;code&gt;printf(3)&lt;/code&gt;, conforming instead to &lt;code&gt;&lt;a href=&quot;numeric#v:showEFloat&quot;&gt;showEFloat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;numeric#v:showFFloat&quot;&gt;showFFloat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;numeric#v:showGFloat&quot;&gt;showGFloat&lt;/a&gt;&lt;/code&gt; (and their alternate versions &lt;code&gt;&lt;a href=&quot;numeric#v:showFFloatAlt&quot;&gt;showFFloatAlt&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;numeric#v:showGFloatAlt&quot;&gt;showGFloatAlt&lt;/a&gt;&lt;/code&gt;). This is hard to fix: the fixed versions would format in a backward-incompatible way. In any case the Haskell behavior is generally more sensible than the C behavior. A brief summary of some key differences:</source>
          <target state="translated">Tenga en cuenta que el formato para los tipos &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; es actualmente un poco diferente al de C &lt;code&gt;printf(3)&lt;/code&gt; , y en cambio se ajusta a &lt;code&gt;&lt;a href=&quot;numeric#v:showEFloat&quot;&gt;showEFloat&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;numeric#v:showFFloat&quot;&gt;showFFloat&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;numeric#v:showGFloat&quot;&gt;showGFloat&lt;/a&gt;&lt;/code&gt; (y sus versiones alternativas &lt;code&gt;&lt;a href=&quot;numeric#v:showFFloatAlt&quot;&gt;showFFloatAlt&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;numeric#v:showGFloatAlt&quot;&gt;showGFloatAlt&lt;/a&gt;&lt;/code&gt; ). Esto es dif&amp;iacute;cil de solucionar: las versiones arregladas se formatear&amp;iacute;an de una manera incompatible con las versiones anteriores. En cualquier caso, el comportamiento de Haskell es generalmente m&amp;aacute;s sensato que el comportamiento de C. Un breve resumen de algunas diferencias clave:</target>
        </trans-unit>
        <trans-unit id="6333d0cd3c8a1c9277e720de89a814eceeaca59c" translate="yes" xml:space="preserve">
          <source>Note that the functions &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:eitherB&quot;&gt;eitherB&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:pairB&quot;&gt;pairB&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:contramapB&quot;&gt;contramapB&lt;/a&gt;&lt;/code&gt; (written below using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:-62--36--60-&quot;&gt;&amp;gt;$&amp;lt;&lt;/a&gt;&lt;/code&gt;) suffice to construct &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;s for all non-recursive algebraic datatypes. For example,</source>
          <target state="translated">Tenga en cuenta que las funciones &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:eitherB&quot;&gt;eitherB&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:pairB&quot;&gt;pairB&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:contramapB&quot;&gt;contramapB&lt;/a&gt;&lt;/code&gt; (escritas a continuaci&amp;oacute;n con &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:-62--36--60-&quot;&gt;&amp;gt;$&amp;lt;&lt;/a&gt;&lt;/code&gt; ) son suficientes para construir &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; s para todos los tipos de datos algebraicos no recursivos. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="e5834f94034f4c9c7099a4fe839728a49c4d2727" translate="yes" xml:space="preserve">
          <source>Note that the functions &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:eitherB&quot;&gt;eitherB&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:pairB&quot;&gt;pairB&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:contramapB&quot;&gt;contramapB&lt;/a&gt;&lt;/code&gt; (written below using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:-62--36--60-&quot;&gt;&amp;gt;$&amp;lt;&lt;/a&gt;&lt;/code&gt;) suffice to construct &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt;s for all non-recursive algebraic datatypes. For example,</source>
          <target state="translated">Tenga en cuenta que las funciones &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:eitherB&quot;&gt;eitherB&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:pairB&quot;&gt;pairB&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:contramapB&quot;&gt;contramapB&lt;/a&gt;&lt;/code&gt; (escritas a continuaci&amp;oacute;n con &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#v:-62--36--60-&quot;&gt;&amp;gt;$&amp;lt;&lt;/a&gt;&lt;/code&gt; ) son suficientes para construir &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; s para todos los tipos de datos algebraicos no recursivos. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="8f8de4b46e9fc5311e12637212df5e73b817991a" translate="yes" xml:space="preserve">
          <source>Note that the graph colouring allocator is a bit experimental and may fail when faced with code with high register pressure &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/8657&quot;&gt;#8657&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45346d36f74c21a2830e97a59a45b659f59ada4b" translate="yes" xml:space="preserve">
          <source>Note that the graph colouring allocator is a bit experimental and may fail when faced with code with high register pressure &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/8657&quot;&gt;Issue #8657&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que el asignador de color de gr&amp;aacute;ficos es un poco experimental y puede fallar cuando se enfrenta a un c&amp;oacute;digo con alta presi&amp;oacute;n de registro &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/8657&quot;&gt;Problema # 8657&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96e6fa4ccd6707887b270260302a346013c42cc4" translate="yes" xml:space="preserve">
          <source>Note that the implementation is &lt;em&gt;left-biased&lt;/em&gt; -- the elements of a first argument are always preferred to the second, for example in &lt;code&gt;&lt;a href=&quot;data-map-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n est&amp;aacute; &lt;em&gt;sesgada a la izquierda&lt;/em&gt; : los elementos de un primer argumento siempre se prefieren al segundo, por ejemplo, en &lt;code&gt;&lt;a href=&quot;data-map-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26e0c734ac95701d148351fdd4b47d9138fb0c9b" translate="yes" xml:space="preserve">
          <source>Note that the implementation is generally &lt;em&gt;left-biased&lt;/em&gt;. Functions that take two maps as arguments and combine them, such as &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt;, prefer the values in the first argument to those in the second.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n generalmente tiene &lt;em&gt;un sesgo&lt;/em&gt; hacia la &lt;em&gt;izquierda&lt;/em&gt; . Las funciones que toman dos mapas como argumentos y los combinan, como &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; , prefieren los valores del primer argumento a los del segundo.</target>
        </trans-unit>
        <trans-unit id="259d0e9c405d160a835af61c7ce39b23637e93f5" translate="yes" xml:space="preserve">
          <source>Note that the implementation is generally &lt;em&gt;left-biased&lt;/em&gt;. Functions that take two maps as arguments and combine them, such as &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt;, prefer the values in the first argument to those in the second.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n generalmente tiene &lt;em&gt;un sesgo&lt;/em&gt; hacia la &lt;em&gt;izquierda&lt;/em&gt; . Las funciones que toman dos mapas como argumentos y los combinan, como &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; , prefieren los valores del primer argumento a los del segundo.</target>
        </trans-unit>
        <trans-unit id="70bb8bafe9d5794e15a6e0a9bc59a3fd519eaaca" translate="yes" xml:space="preserve">
          <source>Note that the implementation is generally &lt;em&gt;left-biased&lt;/em&gt;. Functions that take two maps as arguments and combine them, such as &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt;, prefer the values in the first argument to those in the second.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n generalmente tiene &lt;em&gt;un sesgo&lt;/em&gt; hacia la &lt;em&gt;izquierda&lt;/em&gt; . Las funciones que toman dos mapas como argumentos y los combinan, como &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; , prefieren los valores del primer argumento a los del segundo.</target>
        </trans-unit>
        <trans-unit id="f2ac01eed48e680198fa41a99d8fed147ac41510" translate="yes" xml:space="preserve">
          <source>Note that the implementation is generally &lt;em&gt;left-biased&lt;/em&gt;. Functions that take two maps as arguments and combine them, such as &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt;, prefer the values in the first argument to those in the second.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n generalmente tiene &lt;em&gt;un sesgo&lt;/em&gt; hacia la &lt;em&gt;izquierda&lt;/em&gt; . Las funciones que toman dos mapas como argumentos y los combinan, como &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; , prefieren los valores del primer argumento a los del segundo.</target>
        </trans-unit>
        <trans-unit id="38d11ff08ef387c96608bffa08a777dba57a2a33" translate="yes" xml:space="preserve">
          <source>Note that the implementation is generally &lt;em&gt;left-biased&lt;/em&gt;. Functions that take two maps as arguments and combine them, such as &lt;code&gt;&lt;a href=&quot;data-map-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-strict#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt;, prefer the values in the first argument to those in the second.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n generalmente tiene &lt;em&gt;un sesgo&lt;/em&gt; hacia la &lt;em&gt;izquierda&lt;/em&gt; . Las funciones que toman dos mapas como argumentos y los combinan, como &lt;code&gt;&lt;a href=&quot;data-map-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-map-strict#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; , prefieren los valores del primer argumento a los del segundo.</target>
        </trans-unit>
        <trans-unit id="cb352c04cf593932ccc7109649ee4df971ea1e0e" translate="yes" xml:space="preserve">
          <source>Note that the implementation is generally &lt;em&gt;left-biased&lt;/em&gt;. Functions that take two sets as arguments and combine them, such as &lt;code&gt;&lt;a href=&quot;data-set#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-set#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt;, prefer the entries in the first argument to those in the second. Of course, this bias can only be observed when equality is an equivalence relation instead of structural equality.</source>
          <target state="translated">Tenga en cuenta que la implementaci&amp;oacute;n generalmente tiene &lt;em&gt;un sesgo&lt;/em&gt; hacia la &lt;em&gt;izquierda&lt;/em&gt; . Las funciones que toman dos conjuntos como argumentos y los combinan, como &lt;code&gt;&lt;a href=&quot;data-set#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; e &lt;code&gt;&lt;a href=&quot;data-set#v:intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; , prefieren las entradas del primer argumento a las del segundo. Por supuesto, este sesgo solo se puede observar cuando la igualdad es una relaci&amp;oacute;n de equivalencia en lugar de una igualdad estructural.</target>
        </trans-unit>
        <trans-unit id="42a24a4ea20d65f2df9e64aaf0077349c30737f9" translate="yes" xml:space="preserve">
          <source>Note that the kind of &lt;code&gt;a&lt;/code&gt; is specified in the kind of &lt;code&gt;C&lt;/code&gt; but inferred in the kind of &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b863c9095848a793815119dcb80b73aa065664bb" translate="yes" xml:space="preserve">
          <source>Note that the line information in this section is not nearly as rich as the information provided in &lt;code&gt;.debug_info&lt;/code&gt;. Whereas &lt;code&gt;.debug_line&lt;/code&gt; requires that each instruction is assigned exactly one source location, the DIEs in &lt;code&gt;.debug_info&lt;/code&gt; can be used to identify all relevant sources locations.</source>
          <target state="translated">Tenga en cuenta que la informaci&amp;oacute;n de l&amp;iacute;nea en esta secci&amp;oacute;n no es tan rica como la informaci&amp;oacute;n proporcionada en &lt;code&gt;.debug_info&lt;/code&gt; . Mientras que &lt;code&gt;.debug_line&lt;/code&gt; requiere que a cada instrucci&amp;oacute;n se le asigne exactamente una ubicaci&amp;oacute;n de origen, los DIE en &lt;code&gt;.debug_info&lt;/code&gt; se pueden usar para identificar todas las ubicaciones de fuentes relevantes.</target>
        </trans-unit>
        <trans-unit id="cf810684fcb41725f6886705bdc64d801b1f9b52" translate="yes" xml:space="preserve">
          <source>Note that the local variables at each step in the history have been preserved, and can be examined as usual. Also note that the prompt has changed to indicate that we&amp;rsquo;re currently examining the first step in the history: &lt;code&gt;-1&lt;/code&gt;. The command &lt;a href=&quot;#ghci-cmd-:forward&quot;&gt;&lt;code&gt;:forward&lt;/code&gt;&lt;/a&gt; can be used to traverse forward in the history.</source>
          <target state="translated">Tenga en cuenta que las variables locales en cada paso del historial se han conservado y se pueden examinar como de costumbre. Tambi&amp;eacute;n tenga en cuenta que el mensaje ha cambiado para indicar que actualmente estamos examinando el primer paso del historial: &lt;code&gt;-1&lt;/code&gt; . El comando &lt;a href=&quot;#ghci-cmd-:forward&quot;&gt; &lt;code&gt;:forward&lt;/code&gt; &lt;/a&gt; se puede utilizar para avanzar en el historial.</target>
        </trans-unit>
        <trans-unit id="d8e761e2ee0af0b91555a2d86f5cd5907f02009f" translate="yes" xml:space="preserve">
          <source>Note that the operations to be qualified must be in scope for QualifiedDo to work. I.e. &lt;code&gt;import MAC (label)&lt;/code&gt; in the example above would result in an error, since &lt;code&gt;MAC.&amp;gt;&amp;gt;=&lt;/code&gt; and &lt;code&gt;MAC.&amp;gt;&amp;gt;&lt;/code&gt; would not be in scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cdea8f3371da06ac1a345345c3c5002304f5fa" translate="yes" xml:space="preserve">
          <source>Note that the package might still end up being linked into the final program, if it is a dependency (direct or indirect) of another exposed package.</source>
          <target state="translated">Tenga en cuenta que el paquete puede terminar siendo vinculado al programa final,si se trata de una dependencia (directa o indirecta)de otro paquete expuesto.</target>
        </trans-unit>
        <trans-unit id="654350bad2f19f9da14ea79da18d4e92d82c3375" translate="yes" xml:space="preserve">
          <source>Note that the peek and poke functions might require properly aligned addresses to function correctly. This is architecture dependent; thus, portable code should ensure that when peeking or poking values of some type &lt;code&gt;a&lt;/code&gt;, the alignment constraint for &lt;code&gt;a&lt;/code&gt;, as given by the function &lt;code&gt;&lt;a href=&quot;foreign-storable#v:alignment&quot;&gt;alignment&lt;/a&gt;&lt;/code&gt; is fulfilled.</source>
          <target state="translated">Tenga en cuenta que las funciones de peek and poke pueden requerir direcciones alineadas correctamente para funcionar correctamente. Esto depende de la arquitectura; por lo tanto, el c&amp;oacute;digo port&amp;aacute;til debe garantizar que cuando se miren o se pinchen valores de alg&amp;uacute;n tipo &lt;code&gt;a&lt;/code&gt; , se cumpla la restricci&amp;oacute;n de alineaci&amp;oacute;n para &lt;code&gt;a&lt;/code&gt; , dada por la &lt;code&gt;&lt;a href=&quot;foreign-storable#v:alignment&quot;&gt;alignment&lt;/a&gt;&lt;/code&gt; la funci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="3e394d38fdeaac337578117a43906351c1d79b5f" translate="yes" xml:space="preserve">
          <source>Note that the peek and poke functions might require properly aligned addresses to function correctly. This is architecture dependent; thus, portable code should ensure that when peeking or poking values of some type &lt;code&gt;a&lt;/code&gt;, the alignment constraint for &lt;code&gt;a&lt;/code&gt;, as given by the function &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:alignment&quot;&gt;alignment&lt;/a&gt;&lt;/code&gt; is fulfilled.</source>
          <target state="translated">Tenga en cuenta que las funciones de peek and poke pueden requerir direcciones alineadas correctamente para funcionar correctamente. Esto depende de la arquitectura; por lo tanto, el c&amp;oacute;digo port&amp;aacute;til debe garantizar que cuando se miren o se pinchen valores de alg&amp;uacute;n tipo &lt;code&gt;a&lt;/code&gt; , se cumpla la restricci&amp;oacute;n de alineaci&amp;oacute;n para &lt;code&gt;a&lt;/code&gt; , dada por la &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:alignment&quot;&gt;alignment&lt;/a&gt;&lt;/code&gt; la funci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="e73723a6b46c23d5ed4a216d4c7a2b7c6b5806fa" translate="yes" xml:space="preserve">
          <source>Note that the precedence level is a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; so there is an unlimited number of levels. This module re-exports &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/Text-PrettyPrint.html#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que el nivel de precedencia es &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; por lo que hay un n&amp;uacute;mero ilimitado de niveles. Este m&amp;oacute;dulo reexporta &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/pretty-1.1.3.6/Text-PrettyPrint.html#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d82712c12c8cee5b77f4ba6fbc419e98e702525b" translate="yes" xml:space="preserve">
          <source>Note that the precedence level is a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; so there is an unlimited number of levels. This module re-exports &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que el nivel de precedencia es &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; por lo que hay un n&amp;uacute;mero ilimitado de niveles. Este m&amp;oacute;dulo reexporta &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22e279d3458c2e34319e6e20c6829368879e2a50" translate="yes" xml:space="preserve">
          <source>Note that the precedence level is a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; so there is an unlimited number of levels. This module re-exports &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/pretty-1.1.3.6/Text-PrettyPrint.html#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1166a95e8823cf3e0d0bc99a95c0278ded704bed" translate="yes" xml:space="preserve">
          <source>Note that the precedence level is a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; so there is an unlimited number of levels. This module re-exports &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfbd6466cf9031a0e65d2f5ee134d92903f93ba" translate="yes" xml:space="preserve">
          <source>Note that the precedence level is a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; so there is an unlimited number of levels. This module re-exports &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/pretty-1.1.3.6/Text-PrettyPrint.html#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48307915548614ed31e55439a104a2889c670ae0" translate="yes" xml:space="preserve">
          <source>Note that the precedence level is a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Rational&quot;&gt;Rational&lt;/a&gt;&lt;/code&gt; so there is an unlimited number of levels. This module re-exports &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:HughesPJ&quot;&gt;HughesPJ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8de5a86d574b2ca399eee3e30f64be312fc9bc" translate="yes" xml:space="preserve">
          <source>Note that the rather verbose syntax for composition stems from the requirement to be able to compute the size / size bound at compile time.</source>
          <target state="translated">Obsérvese que la sintaxis más bien verbosa de la composición se deriva del requisito de poder computar el tamaño/tamaño delimitado en el momento de la compilación.</target>
        </trans-unit>
        <trans-unit id="54b1d4f1be10b0845077542d67e90448dc344e0a" translate="yes" xml:space="preserve">
          <source>Note that the second example has a &lt;code&gt;forall&lt;/code&gt; that binds both a kind &lt;code&gt;k&lt;/code&gt; and a type variable &lt;code&gt;a&lt;/code&gt; of kind &lt;code&gt;k&lt;/code&gt;. In general, there is no limit to how deeply nested this sort of dependency can work. However, the dependency must be well-scoped: &lt;code&gt;forall (a :: k) k. ...&lt;/code&gt; is an error.</source>
          <target state="translated">Nota que el segundo ejemplo tiene una &lt;code&gt;forall&lt;/code&gt; que se une tanto una especie &lt;code&gt;k&lt;/code&gt; y una variable de tipo &lt;code&gt;a&lt;/code&gt; de tipo &lt;code&gt;k&lt;/code&gt; . En general, no hay l&amp;iacute;mite para la profundidad con la que este tipo de dependencia puede funcionar. Sin embargo, la dependencia debe tener un buen alcance: &lt;code&gt;forall (a :: k) k. ...&lt;/code&gt; es un error.</target>
        </trans-unit>
        <trans-unit id="1b1310d229e7aede634064e0ec7e66e799d19c89" translate="yes" xml:space="preserve">
          <source>Note that the second item only at the &lt;em&gt;head&lt;/em&gt; of the quantified constraint, not its context. Reason: the head is the new goal that has to be solved if we use the instance declaration.</source>
          <target state="translated">Tenga en cuenta que el segundo elemento solo est&amp;aacute; al &lt;em&gt;principio&lt;/em&gt; de la restricci&amp;oacute;n cuantificada, no su contexto. Raz&amp;oacute;n: la cabeza es el nuevo objetivo que hay que resolver si usamos la declaraci&amp;oacute;n de instancia.</target>
        </trans-unit>
        <trans-unit id="3c8c63d3b44c41dfd3ecc9855ec677afa1387569" translate="yes" xml:space="preserve">
          <source>Note that the strictness of &lt;code&gt;f&lt;/code&gt; differs from that of &lt;code&gt;g&lt;/code&gt; defined below:</source>
          <target state="translated">Tenga en cuenta que el rigor de &lt;code&gt;f&lt;/code&gt; difiere del de &lt;code&gt;g&lt;/code&gt; definido a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b0d67f48c00a6048890cd9462dc5217e24546eeb" translate="yes" xml:space="preserve">
          <source>Note that the suffix rules are all repeated twice, once for normal Haskell source files, and once for &lt;code&gt;hs-boot&lt;/code&gt; files (see &lt;a href=&quot;#mutual-recursion&quot;&gt;How to compile mutually recursive modules&lt;/a&gt;).</source>
          <target state="translated">Tenga en cuenta que todas las reglas de sufijo se repiten dos veces, una para los archivos fuente normales de Haskell y otra para &lt;code&gt;hs-boot&lt;/code&gt; archivos hs-boot (consulte &lt;a href=&quot;#mutual-recursion&quot;&gt;C&amp;oacute;mo compilar m&amp;oacute;dulos recursivos mutuos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca6ebf983fc1a2fd926f4a83f66b04b8d23d1437" translate="yes" xml:space="preserve">
          <source>Note that the unmask function passed to the child thread should only be used in that thread; the behaviour is undefined if it is invoked in a different thread.</source>
          <target state="translated">Obsérvese que la función de desenmascarar pasada al hilo hijo sólo debe usarse en ese hilo;el comportamiento es indefinido si se invoca en un hilo diferente.</target>
        </trans-unit>
        <trans-unit id="cf747bb4028682f6c8c46cd28564c6d642c94e32" translate="yes" xml:space="preserve">
          <source>Note that the use of &lt;a href=&quot;#id1&quot;&gt;&lt;span id=&quot;id2&quot;&gt;``&lt;/span&gt;&lt;/a&gt;forall``s in instance declarations is somewhat restricted in comparison to other types. For example, instance declarations are not allowed to contain nested &lt;a href=&quot;#id3&quot;&gt;&lt;span id=&quot;id4&quot;&gt;``&lt;/span&gt;&lt;/a&gt;forall``s. See &lt;a href=&quot;instances#formal-instance-syntax&quot;&gt;Formal syntax for instance declaration types&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c671757e9a3af40d5bdde86bfebfd0651c0310" translate="yes" xml:space="preserve">
          <source>Note that the use of &lt;code&gt;(&amp;lt;&amp;gt;)&lt;/code&gt; in this module conflicts with an operator with the same name that is being exported by &lt;a href=&quot;data-monoid&quot;&gt;Data.Monoid&lt;/a&gt;. However, this package re-exports (most of) the contents of Data.Monoid, so to use semigroups and monoids in the same package just</source>
          <target state="translated">Tenga en cuenta que el uso de &lt;code&gt;(&amp;lt;&amp;gt;)&lt;/code&gt; en este m&amp;oacute;dulo entra en conflicto con un operador con el mismo nombre que est&amp;aacute; siendo exportado por &lt;a href=&quot;data-monoid&quot;&gt;Data.Monoid&lt;/a&gt; . Sin embargo, este paquete reexporta (la mayor&amp;iacute;a de) el contenido de Data.Monoid, por lo que para usar semigrupos y monoides en el mismo paquete simplemente</target>
        </trans-unit>
        <trans-unit id="da3869327f08d21fab9f4a7548818e33dbc49531" translate="yes" xml:space="preserve">
          <source>Note that there is an orphan &lt;code&gt;Binary&lt;/code&gt; instance for this type supplied by the &lt;a href=&quot;ghc-languageextensions&quot;&gt;GHC.LanguageExtensions&lt;/a&gt; module provided by &lt;code&gt;ghc-boot&lt;/code&gt;. We can't provide here as this would require adding transitive dependencies to the &lt;code&gt;template-haskell&lt;/code&gt; package, which must have a minimal dependency set.</source>
          <target state="translated">Tenga en cuenta que hay una instancia &lt;code&gt;Binary&lt;/code&gt; hu&amp;eacute;rfana para este tipo proporcionada por el m&amp;oacute;dulo &lt;a href=&quot;ghc-languageextensions&quot;&gt;GHC.LanguageExtensions&lt;/a&gt; proporcionado por &lt;code&gt;ghc-boot&lt;/code&gt; . No podemos proporcionar aqu&amp;iacute;, ya que esto requerir&amp;iacute;a agregar dependencias transitivas al paquete &lt;code&gt;template-haskell&lt;/code&gt; , que debe tener un conjunto de dependencias m&amp;iacute;nimo.</target>
        </trans-unit>
        <trans-unit id="25f165099a7186900fe29f29d734746be66f7ff0" translate="yes" xml:space="preserve">
          <source>Note that there is no support for using upper-case characters. Please contact the maintainer if your application cannot work without hexadecimal encodings that use upper-case characters.</source>
          <target state="translated">Tenga en cuenta que no hay soporte para el uso de caracteres en mayúsculas.Por favor,póngase en contacto con el encargado de mantenimiento si su aplicación no puede funcionar sin codificaciones hexadecimales que utilicen caracteres en mayúsculas.</target>
        </trans-unit>
        <trans-unit id="42fd927f1ef5d9b3a3e3d4ec201b36298d76dcdc" translate="yes" xml:space="preserve">
          <source>Note that there is no support for using upper-case characters. Please contact the maintainer, if your application cannot work without hexadecimal encodings that use upper-case characters.</source>
          <target state="translated">Tenga en cuenta que no hay soporte para el uso de caracteres en mayúsculas.Por favor,póngase en contacto con el encargado del mantenimiento,si su aplicación no puede funcionar sin las codificaciones hexadecimales que utilizan caracteres en mayúsculas.</target>
        </trans-unit>
        <trans-unit id="815e86136be57ff7983e8867a1653ca3748062a4" translate="yes" xml:space="preserve">
          <source>Note that this GHC release expects an LLVM version in the 7 release series.</source>
          <target state="translated">Tengan en cuenta que este lanzamiento del GHC espera una versión LLVM en la serie de 7 lanzamientos.</target>
        </trans-unit>
        <trans-unit id="054fc5bfe46fd252b25912f49de7b42d063bf60e" translate="yes" xml:space="preserve">
          <source>Note that this GHC release expects an LLVM version in the 9 release series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140a5a874045474c447887a9c7534e65797715b8" translate="yes" xml:space="preserve">
          <source>Note that this change relies on an existing meta-rule to resolve ambiguities:</source>
          <target state="translated">Nótese que este cambio se basa en una meta-regla existente para resolver ambigüedades:</target>
        </trans-unit>
        <trans-unit id="6daa68880e86cbbf8117c1ecf2aaa1d59b601a6d" translate="yes" xml:space="preserve">
          <source>Note that this compatibility condition is independent of whether the type family is associated or not, and it is not only a matter of consistency, but one of type safety.</source>
          <target state="translated">Nótese que esta condición de compatibilidad es independiente de si la familia de tipos está asociada o no,y no es sólo una cuestión de consistencia,sino de seguridad del tipo.</target>
        </trans-unit>
        <trans-unit id="6a49b31c7b3933e096f19de10387ce395bfc388b" translate="yes" xml:space="preserve">
          <source>Note that this feature is intended for debugging, and should not be relied on for the correct operation of your program. There is no guarantee that the garbage collector will be accurate enough to detect your deadlock, and no guarantee that the garbage collector will run in a timely enough manner. Basically, the same caveats as for finalizers apply to deadlock detection.</source>
          <target state="translated">Tenga en cuenta que esta función está pensada para la depuración,y no se debe confiar en ella para el correcto funcionamiento de su programa.No hay garantía de que el recolector de basura sea lo suficientemente preciso para detectar su bloqueo,y no hay garantía de que el recolector de basura funcione de manera oportuna.Básicamente,las mismas advertencias que para los finalizadores se aplican a la detección del punto muerto.</target>
        </trans-unit>
        <trans-unit id="09a81f8404822ee34cd07d9b5aaca225d5f7984b" translate="yes" xml:space="preserve">
          <source>Note that this flag makes GHC&amp;rsquo;s parser more strict so programs which are accepted without Haddock may be rejected with &lt;a href=&quot;#ghc-flag--haddock&quot;&gt;&lt;code&gt;-haddock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93e105b95e71dad1e256717f21218ff603f0e60" translate="yes" xml:space="preserve">
          <source>Note that this function is &lt;em&gt;strict&lt;/em&gt; in the action. That is, &lt;code&gt;catchAny undefined b == _|_&lt;/code&gt;. See  for details.</source>
          <target state="translated">Tenga en cuenta que esta funci&amp;oacute;n es &lt;em&gt;estricta&lt;/em&gt; en la acci&amp;oacute;n. Es decir, &lt;code&gt;catchAny undefined b == _|_&lt;/code&gt; . Consulte para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4a3f1beae872eb8d0767738fe954a7102092701f" translate="yes" xml:space="preserve">
          <source>Note that this function is &lt;em&gt;strict&lt;/em&gt; in the action. That is, &lt;code&gt;catchException undefined b == _|_&lt;/code&gt;. See  for details.</source>
          <target state="translated">Tenga en cuenta que esta funci&amp;oacute;n es &lt;em&gt;estricta&lt;/em&gt; en la acci&amp;oacute;n. Es decir, &lt;code&gt;catchException undefined b == _|_&lt;/code&gt; . Consulte para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="164ca1931ad3e1b8b8f22ee4c67b74af2bb32823" translate="yes" xml:space="preserve">
          <source>Note that this function may be called by multiple threads simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be14bcfbfa87beefee836b26fb76d5e01c5bceae" translate="yes" xml:space="preserve">
          <source>Note that this function should not be used to express dependencies between finalizers on &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;s. For example, if the finalizer for a &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;F1&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; on a second &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;F2&lt;/code&gt;, then the only guarantee is that the finalizer for &lt;code&gt;F2&lt;/code&gt; is never started before the finalizer for &lt;code&gt;F1&lt;/code&gt;. They might be started together if for example both &lt;code&gt;F1&lt;/code&gt; and &lt;code&gt;F2&lt;/code&gt; are otherwise unreachable, and in that case the scheduler might end up running the finalizer for &lt;code&gt;F2&lt;/code&gt; first.</source>
          <target state="translated">Tenga en cuenta que esta funci&amp;oacute;n no debe usarse para expresar dependencias entre finalizadores en &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; s. Por ejemplo, si el finalizador de &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;F1&lt;/code&gt; llama a &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; en un segundo &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;F2&lt;/code&gt; , entonces la &amp;uacute;nica garant&amp;iacute;a es que el finalizador de &lt;code&gt;F2&lt;/code&gt; nunca se inicia antes que el finalizador de &lt;code&gt;F1&lt;/code&gt; . Pueden iniciarse juntos si, por ejemplo, &lt;code&gt;F1&lt;/code&gt; y &lt;code&gt;F2&lt;/code&gt; son inalcanzables y, en ese caso, el programador podr&amp;iacute;a terminar ejecutando el finalizador para &lt;code&gt;F2&lt;/code&gt; primero.</target>
        </trans-unit>
        <trans-unit id="4677b22a99bb8480062aaee7c99a3069c99501b0" translate="yes" xml:space="preserve">
          <source>Note that this function should not be used to express dependencies between finalizers on &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;s. For example, if the finalizer for a &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;F1&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; on a second &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;F2&lt;/code&gt;, then the only guarantee is that the finalizer for &lt;code&gt;F2&lt;/code&gt; is never started before the finalizer for &lt;code&gt;F1&lt;/code&gt;. They might be started together if for example both &lt;code&gt;F1&lt;/code&gt; and &lt;code&gt;F2&lt;/code&gt; are otherwise unreachable, and in that case the scheduler might end up running the finalizer for &lt;code&gt;F2&lt;/code&gt; first.</source>
          <target state="translated">Tenga en cuenta que esta funci&amp;oacute;n no debe usarse para expresar dependencias entre finalizadores en &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; s. Por ejemplo, si el finalizador de &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;F1&lt;/code&gt; llama a &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; en un segundo &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;F2&lt;/code&gt; , entonces la &amp;uacute;nica garant&amp;iacute;a es que el finalizador de &lt;code&gt;F2&lt;/code&gt; nunca se inicia antes que el finalizador de &lt;code&gt;F1&lt;/code&gt; . Pueden iniciarse juntos si, por ejemplo, &lt;code&gt;F1&lt;/code&gt; y &lt;code&gt;F2&lt;/code&gt; son inalcanzables y, en ese caso, el programador podr&amp;iacute;a terminar ejecutando el finalizador para &lt;code&gt;F2&lt;/code&gt; primero.</target>
        </trans-unit>
        <trans-unit id="204ab198814021ed6627310d82463388c4393515" translate="yes" xml:space="preserve">
          <source>Note that this function should not be used to express dependencies between finalizers on &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;s. For example, if the finalizer for a &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;F1&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; on a second &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;F2&lt;/code&gt;, then the only guarantee is that the finalizer for &lt;code&gt;F2&lt;/code&gt; is never started before the finalizer for &lt;code&gt;F1&lt;/code&gt;. They might be started together if for example both &lt;code&gt;F1&lt;/code&gt; and &lt;code&gt;F2&lt;/code&gt; are otherwise unreachable, and in that case the scheduler might end up running the finalizer for &lt;code&gt;F2&lt;/code&gt; first.</source>
          <target state="translated">Tenga en cuenta que esta funci&amp;oacute;n no debe usarse para expresar dependencias entre finalizadores en &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; s. Por ejemplo, si el finalizador de &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;F1&lt;/code&gt; llama a &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:touchForeignPtr&quot;&gt;touchForeignPtr&lt;/a&gt;&lt;/code&gt; en un segundo &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;F2&lt;/code&gt; , entonces la &amp;uacute;nica garant&amp;iacute;a es que el finalizador de &lt;code&gt;F2&lt;/code&gt; nunca se inicia antes que el finalizador de &lt;code&gt;F1&lt;/code&gt; . Pueden iniciarse juntos si, por ejemplo, &lt;code&gt;F1&lt;/code&gt; y &lt;code&gt;F2&lt;/code&gt; son inalcanzables y, en ese caso, el programador podr&amp;iacute;a terminar ejecutando el finalizador para &lt;code&gt;F2&lt;/code&gt; primero.</target>
        </trans-unit>
        <trans-unit id="6e3ecf4648736200d9ff929266ddf8cefc397759" translate="yes" xml:space="preserve">
          <source>Note that this is a &quot;shallow&quot; test; the declarations returned merely have instance heads which unify with &lt;code&gt;nm tys&lt;/code&gt;, they need not actually be satisfiable.</source>
          <target state="translated">Tenga en cuenta que esta es una prueba &quot;superficial&quot;; las declaraciones devueltas simplemente tienen cabezas de instancia que se unifican con &lt;code&gt;nm tys&lt;/code&gt; , en realidad no necesitan ser satisfactorias.</target>
        </trans-unit>
        <trans-unit id="439905505d9474fed9ffc65381b6ac6111a52311" translate="yes" xml:space="preserve">
          <source>Note that this is a change of behaviour for consistency with &lt;code&gt;&lt;a href=&quot;data-map#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; &amp;ndash; versions prior to 0.5 threw an error if the &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; was already empty.</source>
          <target state="translated">Tenga en cuenta que este es un cambio de comportamiento para la coherencia con &lt;code&gt;&lt;a href=&quot;data-map#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; : las versiones anteriores a 0.5 arrojaban un error si el &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; ya estaba vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="a0ff55b445dc3b8027838fa247f8b759ea676ef6" translate="yes" xml:space="preserve">
          <source>Note that this is a change of behaviour for consistency with &lt;code&gt;&lt;a href=&quot;data-map#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; &amp;ndash; versions prior to 0.5 threw an error if the &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; was already empty.</source>
          <target state="translated">Tenga en cuenta que este es un cambio de comportamiento para la coherencia con &lt;code&gt;&lt;a href=&quot;data-map#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; : las versiones anteriores a 0.5 arrojaban un error si el &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; ya estaba vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="159781685c28a0f652ef7a2657affedee9b597c8" translate="yes" xml:space="preserve">
          <source>Note that this is a change of behaviour for consistency with &lt;code&gt;&lt;a href=&quot;data-map#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; &amp;ndash; versions prior to 0.5 threw an error if the &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; was already empty.</source>
          <target state="translated">Tenga en cuenta que este es un cambio de comportamiento para la coherencia con &lt;code&gt;&lt;a href=&quot;data-map#v:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; : las versiones anteriores a 0.5 arrojaban un error si el &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; ya estaba vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="ade4eadc51bb90be35da5528bf329479e583e59a" translate="yes" xml:space="preserve">
          <source>Note that this is a change of behaviour for consistency with &lt;code&gt;&lt;a href=&quot;data-set#v:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; &amp;ndash; versions prior to 0.5 threw an error if the &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; was already empty.</source>
          <target state="translated">Tenga en cuenta que este es un cambio de comportamiento para la coherencia con &lt;code&gt;&lt;a href=&quot;data-set#v:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; : las versiones anteriores a 0.5 arrojaban un error si el &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; ya estaba vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="191887df22eeccf7c1081143dfdd938d7b2699e9" translate="yes" xml:space="preserve">
          <source>Note that this is a change of behaviour for consistency with &lt;code&gt;&lt;a href=&quot;data-set#v:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; &amp;ndash; versions prior to 0.5 threw an error if the &lt;code&gt;&lt;a href=&quot;data-intset-internal#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; was already empty.</source>
          <target state="translated">Tenga en cuenta que este es un cambio de comportamiento para la coherencia con &lt;code&gt;&lt;a href=&quot;data-set#v:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; : las versiones anteriores a 0.5 arrojaban un error si el &lt;code&gt;&lt;a href=&quot;data-intset-internal#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; ya estaba vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="b569264b0537b82b52a587dd6185d1e70e6667fe" translate="yes" xml:space="preserve">
          <source>Note that this is an &lt;em&gt;expensive&lt;/em&gt; operation that forces the whole lazy ByteString into memory and then copies all the data. If possible, try to avoid converting back and forth between strict and lazy bytestrings.</source>
          <target state="translated">Tenga en cuenta que esta es una operaci&amp;oacute;n &lt;em&gt;costosa&lt;/em&gt; que fuerza a toda la ByteString diferida a la memoria y luego copia todos los datos. Si es posible, intente evitar la conversi&amp;oacute;n entre cadenas de bytes estrictas y perezosas.</target>
        </trans-unit>
        <trans-unit id="94e1d743d6549fd6c8f8a3e5156f86de80dc015d" translate="yes" xml:space="preserve">
          <source>Note that this is essentially a type-specialized version of &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:generalBracket&quot;&gt;generalBracket&lt;/a&gt;&lt;/code&gt;. This function has a more common signature (matching the signature from &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;), and is often more convenient to use. By contrast, &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:generalBracket&quot;&gt;generalBracket&lt;/a&gt;&lt;/code&gt; is more expressive, allowing us to implement other functions like &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracketOnError&quot;&gt;bracketOnError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df90bf5e787f12773d403c246b319494ad6a673" translate="yes" xml:space="preserve">
          <source>Note that this is essentially a type-specialized version of &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:generalBracket&quot;&gt;generalBracket&lt;/a&gt;&lt;/code&gt;. This function has a more common signature (matching the signature from &lt;a href=&quot;../base-4.15.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;), and is often more convenient to use. By contrast, &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:generalBracket&quot;&gt;generalBracket&lt;/a&gt;&lt;/code&gt; is more expressive, allowing us to implement other functions like &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracketOnError&quot;&gt;bracketOnError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6aebbc89aa137801ec2b9b8db93a16d46e98c00" translate="yes" xml:space="preserve">
          <source>Note that this is not the same thing as a grapheme (e.g. a composition of code points that form one visual symbol). For instance, consider the grapheme &quot;&amp;auml;&quot;. This symbol has two Unicode representations: a single code-point representation &lt;code&gt;U+00E4&lt;/code&gt; (the &lt;code&gt;LATIN SMALL LETTER A WITH DIAERESIS&lt;/code&gt; code point), and a two code point representation &lt;code&gt;U+0061&lt;/code&gt; (the &quot;&lt;code&gt;A&lt;/code&gt;&quot; code point) and &lt;code&gt;U+0308&lt;/code&gt; (the &lt;code&gt;COMBINING DIAERESIS&lt;/code&gt; code point).</source>
          <target state="translated">Tenga en cuenta que esto no es lo mismo que un grafema (por ejemplo, una composici&amp;oacute;n de puntos de c&amp;oacute;digo que forman un s&amp;iacute;mbolo visual). Por ejemplo, considere el grafema &quot;&amp;auml;&quot;. Este s&amp;iacute;mbolo tiene dos representaciones Unicode: una representaci&amp;oacute;n de un solo punto de c&amp;oacute;digo &lt;code&gt;U+00E4&lt;/code&gt; (la &lt;code&gt;LATIN SMALL LETTER A WITH DIAERESIS&lt;/code&gt; punto de c&amp;oacute;digo), y una representaci&amp;oacute;n de dos puntos de c&amp;oacute;digo &lt;code&gt;U+0061&lt;/code&gt; (el punto de c&amp;oacute;digo &quot; &lt;code&gt;A&lt;/code&gt; &quot;) y &lt;code&gt;U+0308&lt;/code&gt; ( el punto de c&amp;oacute;digo &lt;code&gt;COMBINING DIAERESIS&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f1fb7a0e32b7e5f879759dbeacfe592b9604fb63" translate="yes" xml:space="preserve">
          <source>Note that this is only a specification, not necessarily the concrete implementation of the function.</source>
          <target state="translated">Nótese que esto es sólo una especificación,no necesariamente la implementación concreta de la función.</target>
        </trans-unit>
        <trans-unit id="669d9533b1634ff933892e992fae9bef3085f70e" translate="yes" xml:space="preserve">
          <source>Note that this is unsafe as it allows you to construct ill-kinded types.</source>
          <target state="translated">Tenga en cuenta que esto es inseguro,ya que le permite construir tipos malintencionados.</target>
        </trans-unit>
        <trans-unit id="d02571c77536bd22aa42f3d92c1dd568dc209d06" translate="yes" xml:space="preserve">
          <source>Note that this kind of backtracking parser is very inefficient; reading a large structure may be quite slow (cf &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Tenga en cuenta que este tipo de analizador de retroceso es muy ineficaz; leer una estructura grande puede resultar bastante lento ( &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="436febebad9716edb3813b0bdb233588fd016eb7" translate="yes" xml:space="preserve">
          <source>Note that this option also has an effect on code generation (see above).</source>
          <target state="translated">Obsérvese que esta opción también tiene un efecto en la generación de códigos (véase más arriba).</target>
        </trans-unit>
        <trans-unit id="a6b15405a93ed10e85a7b3a620cdf673c82ced0d" translate="yes" xml:space="preserve">
          <source>Note that this policy has changed slightly in GHC 7.4.1 relative to earlier versions, and may yet change further, feedback is welcome.</source>
          <target state="translated">Obsérvese que esta política ha cambiado ligeramente en el GHC 7.4.1 en relación con las versiones anteriores,y puede cambiar aún más,los comentarios son bienvenidos.</target>
        </trans-unit>
        <trans-unit id="b69c87ebe8336d7ccf7274b115a1b224456d8a37" translate="yes" xml:space="preserve">
          <source>Note that this warning will not throw errors if used with &lt;a href=&quot;#ghc-flag--Werror&quot;&gt;&lt;code&gt;-Werror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que esta advertencia no arrojar&amp;aacute; errores si se usa con &lt;a href=&quot;#ghc-flag--Werror&quot;&gt; &lt;code&gt;-Werror&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="371339dae687a1a51a3fb07f036275ab96d4f0aa" translate="yes" xml:space="preserve">
          <source>Note that this warning will not throw errors if used with &lt;a href=&quot;#ghc-flag--Wwarn&quot;&gt;&lt;code&gt;-Werror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690fcd2d09231ef4b1eb51f1d47ac594a9ff2305" translate="yes" xml:space="preserve">
          <source>Note that this will also match a function type,</source>
          <target state="translated">Tenga en cuenta que esto también coincidirá con un tipo de función,</target>
        </trans-unit>
        <trans-unit id="38577a39855d6c49037bc139ad505bfea55af18e" translate="yes" xml:space="preserve">
          <source>Note that to avoid wasting space, this value should typically be less than 10% of the size of a stack chunk (&lt;a href=&quot;#rts-flag--kc%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-kc ⟨size⟩&lt;/code&gt;&lt;/a&gt;), because in a chain of stack chunks, each chunk will have a gap of unused space of this size.</source>
          <target state="translated">Tenga en cuenta que para evitar desperdiciar espacio, este valor normalmente debe ser menos del 10% del tama&amp;ntilde;o de un fragmento de pila ( &lt;a href=&quot;#rts-flag--kc%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-kc ⟨size⟩&lt;/code&gt; &lt;/a&gt; ), porque en una cadena de fragmentos de pila, cada fragmento tendr&amp;aacute; un espacio de espacio no utilizado de este Talla.</target>
        </trans-unit>
        <trans-unit id="50c38f07d65fbe728d13e67127cf7478adb9040c" translate="yes" xml:space="preserve">
          <source>Note that to change some, but not all permissions, a construct on the following lines must be used.</source>
          <target state="translated">Tenga en cuenta que para cambiar algunos,pero no todos los permisos,se debe utilizar una construcción en las siguientes líneas.</target>
        </trans-unit>
        <trans-unit id="66851a84c14b94c80085f7f6434bc9436c845696" translate="yes" xml:space="preserve">
          <source>Note that to produce the outermost application of the operator the entire input list must be traversed. Like all left-associative folds, &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; will diverge if given an infinite list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61c274d0b954c6dca484514778958a431247b5e" translate="yes" xml:space="preserve">
          <source>Note that to produce the outermost application of the operator the entire input list must be traversed. Like all left-associative folds, &lt;code&gt;&lt;a href=&quot;data-list#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; will diverge if given an infinite list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b90a1692bdb0a28629187868f305ac5e1a54c18" translate="yes" xml:space="preserve">
          <source>Note that to produce the outermost application of the operator the entire input list must be traversed. Like all left-associative folds, &lt;code&gt;&lt;a href=&quot;prelude#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; will diverge if given an infinite list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948767acfa623815c2e53deacab04e0b2b72ef49" translate="yes" xml:space="preserve">
          <source>Note that to produce the outermost application of the operator the entire input list must be traversed. This means that &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; will diverge if given an infinite list.</source>
          <target state="translated">Tenga en cuenta que para producir la aplicaci&amp;oacute;n m&amp;aacute;s externa del operador, se debe recorrer toda la lista de entrada. Esto significa que &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; diverger&amp;aacute; si se le da una lista infinita.</target>
        </trans-unit>
        <trans-unit id="1c06bd2a9205927068bd825ef9aa825d38908e90" translate="yes" xml:space="preserve">
          <source>Note that to produce the outermost application of the operator the entire input list must be traversed. This means that &lt;code&gt;&lt;a href=&quot;data-list#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; will diverge if given an infinite list.</source>
          <target state="translated">Tenga en cuenta que para producir la aplicaci&amp;oacute;n m&amp;aacute;s externa del operador, se debe recorrer toda la lista de entrada. Esto significa que &lt;code&gt;&lt;a href=&quot;data-list#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; diverger&amp;aacute; si se le da una lista infinita.</target>
        </trans-unit>
        <trans-unit id="09a9ad7f696385ace7655fee5e3964335e8ceabd" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;&lt;a href=&quot;data-set#v:insert&quot;&gt;insert&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-set#v:alterF&quot;&gt;alterF&lt;/a&gt;&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; replace an element equal to the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639bcb4a8a84771a9594ddef615c26a4482fa193" translate="yes" xml:space="preserve">
          <source>Note that using this option when linking causes GHC to link against shared libraries.</source>
          <target state="translated">Tenga en cuenta que el uso de esta opción al enlazar hace que el GHC se vincule con las bibliotecas compartidas.</target>
        </trans-unit>
        <trans-unit id="15c08fdbeb90f2cad5ab816623c21e3981596c4c" translate="yes" xml:space="preserve">
          <source>Note that variables not used later in the composition are projected out. After simplification using rewrite rules (see &lt;a href=&quot;#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;) defined in the &lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module, this reduces to</source>
          <target state="translated">Tenga en cuenta que las variables que no se utilizan posteriormente en la composici&amp;oacute;n se proyectan. Despu&amp;eacute;s de simplificaci&amp;oacute;n utilizando reglas de reescritura (ver &lt;a href=&quot;#rewrite-rules&quot;&gt;reglas de reescritura&lt;/a&gt; ) definido en el &lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; m&amp;oacute;dulo, esto se reduce a</target>
        </trans-unit>
        <trans-unit id="d081dca768500d8bfebb68333b03740fb45995ab" translate="yes" xml:space="preserve">
          <source>Note that variables not used later in the composition are projected out. After simplification using rewrite rules (see &lt;a href=&quot;#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;) defined in the &lt;a href=&quot;../libraries/base-4.14.1.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module, this reduces to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afd9087ab3e281f2d9f79e8753dffedc3950893" translate="yes" xml:space="preserve">
          <source>Note that variables not used later in the composition are projected out. After simplification using rewrite rules (see &lt;a href=&quot;rewrite_rules#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;) defined in the &lt;a href=&quot;../../libraries/base-4.15.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module, this reduces to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5449f9493cc87f80694124b3b78a072657bfaa5" translate="yes" xml:space="preserve">
          <source>Note that we do promote existential data constructors that are otherwise suitable. For example, consider the following:</source>
          <target state="translated">Tenga en cuenta que promovemos los constructores de datos existenciales que de otra manera son adecuados.Por ejemplo,considere lo siguiente:</target>
        </trans-unit>
        <trans-unit id="314ff3aa2a3753338a78c5d3b1a3ae5cc49a2871" translate="yes" xml:space="preserve">
          <source>Note that we have to give a type signature to &lt;code&gt;e&lt;/code&gt;, or the program will not typecheck as the type is ambiguous. While it is possible to catch exceptions of any type, see the section &quot;Catching all exceptions&quot; (in &lt;a href=&quot;../base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;) for an explanation of the problems with doing so.</source>
          <target state="translated">Tenga en cuenta que tenemos que dar una declaraci&amp;oacute;n de tipo de &lt;code&gt;e&lt;/code&gt; , o el programa no typecheck como el tipo es ambigua. Si bien es posible detectar excepciones de cualquier tipo, consulte la secci&amp;oacute;n &quot;Capturar todas las excepciones&quot; (en &lt;a href=&quot;../base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt; ) para obtener una explicaci&amp;oacute;n de los problemas al hacerlo.</target>
        </trans-unit>
        <trans-unit id="7e4fcbcc185ba6453250d12b73264bd5a24e8c57" translate="yes" xml:space="preserve">
          <source>Note that we have to give a type signature to &lt;code&gt;e&lt;/code&gt;, or the program will not typecheck as the type is ambiguous. While it is possible to catch exceptions of any type, see the section &quot;Catching all exceptions&quot; (in &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;) for an explanation of the problems with doing so.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
