<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="7defbd1e72da7e4dd78ff7b670071a5b458cf24a" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;data-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no base case, and thus may only be applied to non-empty structures.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;data-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; que no tiene caso base y, por lo tanto, solo se puede aplicar a estructuras no vac&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="e9ee1d48660b932b3bb180c1aaef20eee11c73c0" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; with the arguments reversed.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; con los argumentos invertidos.</target>
        </trans-unit>
        <trans-unit id="d32ebdebb4f9a3837e2e7d4648c8bd7eceb6c9f2" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;ghc-err#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; that does not produce a stack trace.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;ghc-err#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; que no produce un seguimiento de pila.</target>
        </trans-unit>
        <trans-unit id="f23407f9c31b9d9550363e44222113e312af065d" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228eb2d34fa954a72d817265f3ac30a2c4d0f77c" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7861d5890086af48309a590da6181c625683ee1f" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5f00d655edd846275d9f60a79ac5425b4f77f7" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e8eb5a5f4093ff8d82e55e0f565658eec94954" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0680130bb0f4b8f4cbc7c8b028930fd44a3af9ce" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; que solo se puede usar dentro de la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ec4492419779cfaef51be94d2b8f28e80c4545f" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; que solo se puede usar dentro de la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;control-monad-stm#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="491efa58eb1f11c0cb3815ae8f348ca0c034ce84" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; que solo se puede usar dentro de la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;ghc-conc#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47d036c06686a27eae150f0188962179aa6b3b53" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; que solo se puede usar dentro de la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da53c6399c31d81bfdb2f650d84ca62634038b07" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; that can only be used within the &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; que solo se puede usar dentro de la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73f171fdb5237d901b1c481374b6861edf14fa56" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; that does not produce a stack trace.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; que no produce un seguimiento de pila.</target>
        </trans-unit>
        <trans-unit id="47f3f2679bc0ad75bdf30646c6761ef6c4b68243" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;prelude#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; that has no base case, and thus may only be applied to non-empty structures.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;prelude#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; que no tiene caso base y, por lo tanto, solo se puede aplicar a estructuras no vac&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="477f918f68cdb05044cf99fdb58a555808faeff3" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;prelude#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; that has no base case, and thus may only be applied to non-empty structures.</source>
          <target state="translated">Una variante de &lt;code&gt;&lt;a href=&quot;prelude#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; que no tiene caso base y, por lo tanto, solo se puede aplicar a estructuras no vac&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="6911589d252df6b0d320b35e4685df9e30028055" translate="yes" xml:space="preserve">
          <source>A variant of &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; where the return value from the first computation is not required.</source>
          <target state="translated">Una variante del &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; donde no se requiere el valor de retorno del primer c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="add459265a4128073f2963ebb449fbb05ec6cb08" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; which omits the checks on &lt;code&gt;n&lt;/code&gt; so there is an obligation on the programmer to provide a proof that &lt;code&gt;0 &amp;lt;= n &amp;lt;= &lt;a href=&quot;../base-4.13.0.0/data-foldable#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">Una variedad de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; que omite las comprobaciones de &lt;code&gt;n&lt;/code&gt; , por lo que el programador tiene la obligaci&amp;oacute;n de proporcionar una prueba de que &lt;code&gt;0 &amp;lt;= n &amp;lt;= &lt;a href=&quot;../base-4.13.0.0/data-foldable#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="022677c1577a85e404387475e8f412822a05da7e" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:head&quot;&gt;head&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt; omits the check for the empty case, so there is an obligation on the programmer to provide a proof that the ByteString is non-empty.</source>
          <target state="translated">Una variedad de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:head&quot;&gt;head&lt;/a&gt;&lt;/code&gt; para ByteStrings no vac&amp;iacute;os. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt; omite la comprobaci&amp;oacute;n del caso vac&amp;iacute;o, por lo que el programador tiene la obligaci&amp;oacute;n de proporcionar una prueba de que ByteString no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="8b4ffb4fe31d0195b8acddfad454298b4604216b" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeInit&quot;&gt;unsafeInit&lt;/a&gt;&lt;/code&gt; omits the check for the empty case. As with &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt;, the programmer must provide a separate proof that the ByteString is non-empty.</source>
          <target state="translated">Una variedad de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; para ByteStrings no vac&amp;iacute;os. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeInit&quot;&gt;unsafeInit&lt;/a&gt;&lt;/code&gt; omite la comprobaci&amp;oacute;n de la caja vac&amp;iacute;a. Al igual que con &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt; , el programador debe proporcionar una prueba separada de que ByteString no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="1d777dc5f4859f53e852d78b2a883751d3a5e477" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeLast&quot;&gt;unsafeLast&lt;/a&gt;&lt;/code&gt; omits the check for the empty case. As with &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt;, the programmer must provide a separate proof that the ByteString is non-empty.</source>
          <target state="translated">Una variedad de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; para ByteStrings no vac&amp;iacute;os. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeLast&quot;&gt;unsafeLast&lt;/a&gt;&lt;/code&gt; omite la comprobaci&amp;oacute;n de la caja vac&amp;iacute;a. Al igual que con &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt; , el programador debe proporcionar una prueba separada de que ByteString no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="d0e791ecae2adcb55aa4c85c7e30c588765957cb" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeTail&quot;&gt;unsafeTail&lt;/a&gt;&lt;/code&gt; omits the check for the empty case. As with &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt;, the programmer must provide a separate proof that the ByteString is non-empty.</source>
          <target state="translated">Una variedad de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt; para ByteStrings no vac&amp;iacute;os. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeTail&quot;&gt;unsafeTail&lt;/a&gt;&lt;/code&gt; omite la comprobaci&amp;oacute;n de la caja vac&amp;iacute;a. Al igual que con &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt; , el programador debe proporcionar una prueba separada de que ByteString no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="cd0eca831b19e2193bae89b92f0b4e215f8baf4c" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; which omits the checks on &lt;code&gt;n&lt;/code&gt; so there is an obligation on the programmer to provide a proof that &lt;code&gt;0 &amp;lt;= n &amp;lt;= &lt;a href=&quot;../base-4.13.0.0/data-foldable#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">Una variedad de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; que omite las comprobaciones de &lt;code&gt;n&lt;/code&gt; , por lo que el programador tiene la obligaci&amp;oacute;n de proporcionar una prueba de que &lt;code&gt;0 &amp;lt;= n &amp;lt;= &lt;a href=&quot;../base-4.13.0.0/data-foldable#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d61fdfe5cc2564d603aac91be2fa83ba8aa2a7c" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; which omits the checks on &lt;code&gt;n&lt;/code&gt; so there is an obligation on the programmer to provide a proof that &lt;code&gt;0 &amp;lt;= n &amp;lt;= &lt;a href=&quot;../base-4.14.1.0/data-foldable#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fb91e894a0b25610b75a5af5b9808209630d25" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:head&quot;&gt;head&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt; omits the check for the empty case, so there is an obligation on the programmer to provide a proof that the ByteString is non-empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdce50acace32ba6eb0fe5af8f10f59503ea5260" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeInit&quot;&gt;unsafeInit&lt;/a&gt;&lt;/code&gt; omits the check for the empty case. As with &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt;, the programmer must provide a separate proof that the ByteString is non-empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416bf67712d94a4092fa1366ed0a1243511ca321" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeLast&quot;&gt;unsafeLast&lt;/a&gt;&lt;/code&gt; omits the check for the empty case. As with &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt;, the programmer must provide a separate proof that the ByteString is non-empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73173fcba7dc4f1755bea5939f3721c98a85b2cb" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt; for non-empty ByteStrings. &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeTail&quot;&gt;unsafeTail&lt;/a&gt;&lt;/code&gt; omits the check for the empty case. As with &lt;code&gt;&lt;a href=&quot;data-bytestring-unsafe#v:unsafeHead&quot;&gt;unsafeHead&lt;/a&gt;&lt;/code&gt;, the programmer must provide a separate proof that the ByteString is non-empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ba6eac709468119bb502dc4a786ac25beaa443" translate="yes" xml:space="preserve">
          <source>A variety of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; which omits the checks on &lt;code&gt;n&lt;/code&gt; so there is an obligation on the programmer to provide a proof that &lt;code&gt;0 &amp;lt;= n &amp;lt;= &lt;a href=&quot;../base-4.14.1.0/data-foldable#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011da0f3d1d6c75639ffb6db3b663d10df8596d2" translate="yes" xml:space="preserve">
          <source>A version can be tagged with an arbitrary list of strings. The interpretation of the list of tags is entirely dependent on the entity that this version applies to.</source>
          <target state="translated">Una versión puede ser etiquetada con una lista arbitraria de cadenas.La interpretación de la lista de etiquetas depende totalmente de la entidad a la que se aplica esta versión.</target>
        </trans-unit>
        <trans-unit id="ecaf2ca21f3f2373e5185cd515851b6e67ee803a" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:peekTBQueue&quot;&gt;peekTBQueue&lt;/a&gt;&lt;/code&gt; which does not retry. Instead it returns &lt;code&gt;Nothing&lt;/code&gt; if no value is available.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:peekTBQueue&quot;&gt;peekTBQueue&lt;/a&gt;&lt;/code&gt; que no vuelve a intentarlo. En su lugar, devuelve &lt;code&gt;Nothing&lt;/code&gt; si no hay ning&amp;uacute;n valor disponible.</target>
        </trans-unit>
        <trans-unit id="60ffeb4910a01e5cd6d72fcebc814ef710471656" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:readTBQueue&quot;&gt;readTBQueue&lt;/a&gt;&lt;/code&gt; which does not retry. Instead it returns &lt;code&gt;Nothing&lt;/code&gt; if no value is available.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:readTBQueue&quot;&gt;readTBQueue&lt;/a&gt;&lt;/code&gt; que no vuelve a intentarlo. En su lugar, devuelve &lt;code&gt;Nothing&lt;/code&gt; si no hay ning&amp;uacute;n valor disponible.</target>
        </trans-unit>
        <trans-unit id="0b08df2ea8c4c791467734758ae49b0aa839c743" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:peekTChan&quot;&gt;peekTChan&lt;/a&gt;&lt;/code&gt; which does not retry. Instead it returns &lt;code&gt;Nothing&lt;/code&gt; if no value is available.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:peekTChan&quot;&gt;peekTChan&lt;/a&gt;&lt;/code&gt; que no vuelve a intentarlo. En su lugar, devuelve &lt;code&gt;Nothing&lt;/code&gt; si no hay ning&amp;uacute;n valor disponible.</target>
        </trans-unit>
        <trans-unit id="ef5e78e2ce5a1352cca108846156255775dd7108" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:readTChan&quot;&gt;readTChan&lt;/a&gt;&lt;/code&gt; which does not retry. Instead it returns &lt;code&gt;Nothing&lt;/code&gt; if no value is available.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:readTChan&quot;&gt;readTChan&lt;/a&gt;&lt;/code&gt; que no vuelve a intentarlo. En su lugar, devuelve &lt;code&gt;Nothing&lt;/code&gt; si no hay ning&amp;uacute;n valor disponible.</target>
        </trans-unit>
        <trans-unit id="ff76e55acfcccd02a15d736db81fe96146722925" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; that does not &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryPutTMVar&quot;&gt;tryPutTMVar&lt;/a&gt;&lt;/code&gt; function attempts to put the value &lt;code&gt;a&lt;/code&gt; into the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it was successful, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; que no vuelve a &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryPutTMVar&quot;&gt;tryPutTMVar&lt;/a&gt;&lt;/code&gt; intenta poner el valor &lt;code&gt;a&lt;/code&gt; en &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; , devolviendo &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; si tuvo &amp;eacute;xito o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; en caso contrario.</target>
        </trans-unit>
        <trans-unit id="28577cb8a660e56c217a279acfd2976c3b7454ed" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; that does not &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryPutTMVar&quot;&gt;tryPutTMVar&lt;/a&gt;&lt;/code&gt; function attempts to put the value &lt;code&gt;a&lt;/code&gt; into the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it was successful, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01dc8f0973fefa88de9a13d12ee694150980b61d" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:readTMVar&quot;&gt;readTMVar&lt;/a&gt;&lt;/code&gt; which does not retry. Instead it returns &lt;code&gt;Nothing&lt;/code&gt; if no value is available.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:readTMVar&quot;&gt;readTMVar&lt;/a&gt;&lt;/code&gt; que no vuelve a intentarlo. En su lugar, devuelve &lt;code&gt;Nothing&lt;/code&gt; si no hay ning&amp;uacute;n valor disponible.</target>
        </trans-unit>
        <trans-unit id="ed2b50c296f40c959a6e33c87f8de3078552d7bb" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:takeTMVar&quot;&gt;takeTMVar&lt;/a&gt;&lt;/code&gt; that does not &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryTakeTMVar&quot;&gt;tryTakeTMVar&lt;/a&gt;&lt;/code&gt; function returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;. After &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryTakeTMVar&quot;&gt;tryTakeTMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:takeTMVar&quot;&gt;takeTMVar&lt;/a&gt;&lt;/code&gt; que no vuelve a &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryTakeTMVar&quot;&gt;tryTakeTMVar&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; si la &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; estaba vac&amp;iacute;a, o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; si la &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; estaba llena de contenido &lt;code&gt;a&lt;/code&gt; . Despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryTakeTMVar&quot;&gt;tryTakeTMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; se deja vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="5433d7bb6120760452598bf6c542c3024a31c810" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:takeTMVar&quot;&gt;takeTMVar&lt;/a&gt;&lt;/code&gt; that does not &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryTakeTMVar&quot;&gt;tryTakeTMVar&lt;/a&gt;&lt;/code&gt; function returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;. After &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:tryTakeTMVar&quot;&gt;tryTakeTMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30f3fd19a32279f9ca43fcf5051a4b725b4afb0" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#v:peekTQueue&quot;&gt;peekTQueue&lt;/a&gt;&lt;/code&gt; which does not retry. Instead it returns &lt;code&gt;Nothing&lt;/code&gt; if no value is available.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#v:peekTQueue&quot;&gt;peekTQueue&lt;/a&gt;&lt;/code&gt; que no vuelve a intentarlo. En su lugar, devuelve &lt;code&gt;Nothing&lt;/code&gt; si no hay ning&amp;uacute;n valor disponible.</target>
        </trans-unit>
        <trans-unit id="2433a0ad5e90f34ad9f4bf45621e0ceb170fdea6" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#v:readTQueue&quot;&gt;readTQueue&lt;/a&gt;&lt;/code&gt; which does not retry. Instead it returns &lt;code&gt;Nothing&lt;/code&gt; if no value is available.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#v:readTQueue&quot;&gt;readTQueue&lt;/a&gt;&lt;/code&gt; que no vuelve a intentarlo. En su lugar, devuelve &lt;code&gt;Nothing&lt;/code&gt; si no hay ning&amp;uacute;n valor disponible.</target>
        </trans-unit>
        <trans-unit id="4fc561502aa5288942ce875d139d9631abcf512c" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; with the arguments swapped around; useful in situations where the code for the handler is shorter. For example:</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; con los argumentos intercambiados; &amp;uacute;til en situaciones donde el c&amp;oacute;digo para el controlador es m&amp;aacute;s corto. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1c3e44a662ef33517cd5d56bc8e42cf32ad0c3d0" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;control-exception#v:catchJust&quot;&gt;catchJust&lt;/a&gt;&lt;/code&gt; with the arguments swapped around (see &lt;code&gt;&lt;a href=&quot;control-exception#v:handle&quot;&gt;handle&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-exception#v:catchJust&quot;&gt;catchJust&lt;/a&gt;&lt;/code&gt; con los argumentos intercambiados (ver &lt;code&gt;&lt;a href=&quot;control-exception#v:handle&quot;&gt;handle&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e66efe0c3f15c8fafbf44d9ce27299363bc807ef" translate="yes" xml:space="preserve">
          <source>A version of &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; that forces the (pair) result of the function.</source>
          <target state="translated">Una versi&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; que fuerza el resultado (par) de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bef2aa5115f3db1a79e2efec0dfffeeae204b525" translate="yes" xml:space="preserve">
          <source>A vertical bar denotes disjunction, i.e. one of the two sides is required. A comma denotes conjunction, i.e. both sides are required. Conjunction binds stronger than disjunction.</source>
          <target state="translated">Una barra vertical denota la disyunción,es decir,se requiere uno de los dos lados.Una coma denota conjunción,es decir,se requieren ambos lados.La conjunción se une más fuerte que la disyunción.</target>
        </trans-unit>
        <trans-unit id="edf34a57d05a3c5d4ea50057dd0ce34f6a6b36fa" translate="yes" xml:space="preserve">
          <source>A very experimental flag that makes dictionary-valued expressions seem cheap to the optimiser.</source>
          <target state="translated">Una bandera muy experimental que hace que las expresiones valoradas en el diccionario parezcan baratas para el optimista.</target>
        </trans-unit>
        <trans-unit id="7c65e4b2cb887d618e9c4063061a15033cdc0051" translate="yes" xml:space="preserve">
          <source>A violation of the &amp;ldquo;forall-or-nothing&amp;rdquo; rule looks like this:</source>
          <target state="translated">Una violaci&amp;oacute;n de la regla &quot;para todo o nada&quot; se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a5feb9baead6354d4dfbb9ad7fa5678327d72c84" translate="yes" xml:space="preserve">
          <source>A visible type application is preceded with an &lt;code&gt;@&lt;/code&gt; sign. (To disambiguate the syntax, the &lt;code&gt;@&lt;/code&gt; must be preceded with a non-identifier letter, usually a space. For example, &lt;code&gt;read@Int 5&lt;/code&gt; would not parse.) It can be used whenever the full polymorphic type of the function is known. If the function is an identifier (the common case), its type is considered known only when the identifier has been given a type signature. If the identifier does not have a type signature, visible type application cannot be used.</source>
          <target state="translated">Una solicitud de tipo visible est&amp;aacute; precedida por un signo &lt;code&gt;@&lt;/code&gt; . (Para eliminar la ambig&amp;uuml;edad de la sintaxis, la &lt;code&gt;@&lt;/code&gt; debe ir precedida de una letra no identificadora, generalmente un espacio. Por ejemplo, &lt;code&gt;read@Int 5&lt;/code&gt; no analizar&amp;iacute;a). Puede usarse siempre que se conozca el tipo polim&amp;oacute;rfico completo de la funci&amp;oacute;n. Si la funci&amp;oacute;n es un identificador (el caso com&amp;uacute;n), su tipo se considera conocido solo cuando al identificador se le ha dado una firma de tipo. Si el identificador no tiene una firma de tipo, no se puede utilizar la aplicaci&amp;oacute;n de tipo visible.</target>
        </trans-unit>
        <trans-unit id="f7aecd3b32383a90db727ba6bc951dd96bb7555b" translate="yes" xml:space="preserve">
          <source>A way of creating ByteStrings outside the IO monad. The &lt;code&gt;Int&lt;/code&gt; argument gives the final size of the ByteString.</source>
          <target state="translated">Una forma de crear ByteStrings fuera de la m&amp;oacute;nada IO. El argumento &lt;code&gt;Int&lt;/code&gt; da el tama&amp;ntilde;o final de ByteString.</target>
        </trans-unit>
        <trans-unit id="ae700162fd083eb51a2e5484581b63431c6cf961" translate="yes" xml:space="preserve">
          <source>A weak pointer expresses a relationship between two objects, the &lt;em&gt;key&lt;/em&gt; and the &lt;em&gt;value&lt;/em&gt;: if the key is considered to be alive by the garbage collector, then the value is also alive. A reference from the value to the key does &lt;em&gt;not&lt;/em&gt; keep the key alive.</source>
          <target state="translated">Un puntero d&amp;eacute;bil expresa una relaci&amp;oacute;n entre dos objetos, la &lt;em&gt;clave&lt;/em&gt; y el &lt;em&gt;valor&lt;/em&gt; : si el recolector de basura considera que la clave est&amp;aacute; viva, entonces el valor tambi&amp;eacute;n lo est&amp;aacute;. Una referencia del valor a la clave &lt;em&gt;no&lt;/em&gt; mantiene viva la clave.</target>
        </trans-unit>
        <trans-unit id="4c0a7ed1da2479162371079b8163cabf26c83c98" translate="yes" xml:space="preserve">
          <source>A weak pointer may also have a finalizer of type &lt;code&gt;IO ()&lt;/code&gt;; if it does, then the finalizer will be run at most once, at a time after the key has become unreachable by the program (&quot;dead&quot;). The storage manager attempts to run the finalizer(s) for an object soon after the object dies, but promptness is not guaranteed.</source>
          <target state="translated">Un puntero d&amp;eacute;bil tambi&amp;eacute;n puede tener un finalizador de tipo &lt;code&gt;IO ()&lt;/code&gt; ; si lo hace, el finalizador se ejecutar&amp;aacute; como m&amp;aacute;ximo una vez, a la vez, despu&amp;eacute;s de que el programa no pueda acceder a la clave (&quot;muerta&quot;). El administrador de almacenamiento intenta ejecutar los finalizadores de un objeto poco despu&amp;eacute;s de que el objeto muere, pero no se garantiza la rapidez.</target>
        </trans-unit>
        <trans-unit id="a955a161a9eee216cd6b80d8d47df1c807c9be34" translate="yes" xml:space="preserve">
          <source>A weak pointer object with a key and a value. The value has type &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Un objeto puntero d&amp;eacute;bil con una clave y un valor. El valor tiene tipo &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b5c16f462f6b8ca64b6aee48fd180f321af7cba" translate="yes" xml:space="preserve">
          <source>A whole String fragment</source>
          <target state="translated">Un fragmento de cuerda entero</target>
        </trans-unit>
        <trans-unit id="1306d902863c6c0a77b6f4d1230a385868937f62" translate="yes" xml:space="preserve">
          <source>A wide character string with explicit length information in &lt;code&gt;&lt;a href=&quot;foreign-c-types#t:CWchar&quot;&gt;CWchar&lt;/a&gt;&lt;/code&gt;s instead of a terminating NUL (allowing NUL characters in the middle of the string).</source>
          <target state="translated">Una cadena de caracteres ancha con informaci&amp;oacute;n de longitud expl&amp;iacute;cita en &lt;code&gt;&lt;a href=&quot;foreign-c-types#t:CWchar&quot;&gt;CWchar&lt;/a&gt;&lt;/code&gt; s en lugar de un NUL de terminaci&amp;oacute;n (que permite caracteres NUL en el medio de la cadena).</target>
        </trans-unit>
        <trans-unit id="987253a26575543a06fc7e055fbc0251b63eb205" translate="yes" xml:space="preserve">
          <source>A word begins either at the start of the line or after an unescaped whitespace character.</source>
          <target state="translated">Una palabra comienza al principio de la línea o después de un personaje de espacio en blanco no escapado.</target>
        </trans-unit>
        <trans-unit id="98bca88a2b006e940b1f7f785915d961c11c9f72" translate="yes" xml:space="preserve">
          <source>A writer monad parameterized by the type &lt;code&gt;w&lt;/code&gt; of output to accumulate.</source>
          <target state="translated">Una m&amp;oacute;nada de escritura parametrizada por el tipo &lt;code&gt;w&lt;/code&gt; de salida a acumular.</target>
        </trans-unit>
        <trans-unit id="07ef82639a79658d53d1fcd5bfce5876d5b9adb5" translate="yes" xml:space="preserve">
          <source>A writer monad parameterized by:</source>
          <target state="translated">Una mónada escritora parametrizada por:</target>
        </trans-unit>
        <trans-unit id="3f08cc0b30779a95143aa2ad65f0531b4ad12960" translate="yes" xml:space="preserve">
          <source>ACL</source>
          <target state="translated">ACL</target>
        </trans-unit>
        <trans-unit id="882edca3292f207f02c04f0e4d828075132b5c5b" translate="yes" xml:space="preserve">
          <source>ADDATTRS</source>
          <target state="translated">ADDATTRS</target>
        </trans-unit>
        <trans-unit id="d37db076be2c745cf98c9bb60cf88dbf2626e6b7" translate="yes" xml:space="preserve">
          <source>AM/PM symbols</source>
          <target state="translated">Símbolos AM/PM</target>
        </trans-unit>
        <trans-unit id="94090230b1f8c256f7ac5dc5a70bd3b20ee4ff15" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>
        </trans-unit>
        <trans-unit id="e95867ec94d8c275a2d1d9afac6a1d2ffb7fd390" translate="yes" xml:space="preserve">
          <source>ASCII (Char7)</source>
          <target state="translated">ASCII (Char7)</target>
        </trans-unit>
        <trans-unit id="2f934a30b8b57fba10b2b745dc320b339724b1b7" translate="yes" xml:space="preserve">
          <source>ASCII &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt; are all numbers:</source>
          <target state="translated">ASCII &lt;code&gt;'0'&lt;/code&gt; a &lt;code&gt;'9'&lt;/code&gt; son todos n&amp;uacute;meros:</target>
        </trans-unit>
        <trans-unit id="cae061a530cef71c477f974034de1fd1d9b43ecb" translate="yes" xml:space="preserve">
          <source>ATOM</source>
          <target state="translated">ATOM</target>
        </trans-unit>
        <trans-unit id="09116156619580f2fa8233d5bca8cf8644f9c359" translate="yes" xml:space="preserve">
          <source>Abandon evaluation of a statement after a breakpoint</source>
          <target state="translated">Abandonar la evaluación de una declaración después de un punto de ruptura</target>
        </trans-unit>
        <trans-unit id="c38c6ea6c11538ed82fd288d53c904871944106f" translate="yes" xml:space="preserve">
          <source>Abandons the current evaluation (only available when stopped at a breakpoint).</source>
          <target state="translated">Abandona la evaluación actual (sólo disponible cuando se detiene en un punto de ruptura).</target>
        </trans-unit>
        <trans-unit id="f07c8230701366b843cd68845fafa5d65a1de2d9" translate="yes" xml:space="preserve">
          <source>About validity:</source>
          <target state="translated">Sobre la validez:</target>
        </trans-unit>
        <trans-unit id="05edf0d68cd3c84475eb832e7d283639e6bdeca9" translate="yes" xml:space="preserve">
          <source>Above, except that if the last line of the first argument stops at least one position before the first line of the second begins, these two lines are overlapped. For example:</source>
          <target state="translated">Arriba,excepto que si la última línea del primer argumento se detiene al menos una posición antes de que comience la primera línea del segundo,estas dos líneas se superponen.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ef82336eb495d4e5324f732f879ad3b7c7dd9b61" translate="yes" xml:space="preserve">
          <source>Above, with no overlapping. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-36--43--36-&quot;&gt;$+$&lt;/a&gt;&lt;/code&gt; is associative, with identity &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Arriba, sin superposici&amp;oacute;n. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-36--43--36-&quot;&gt;$+$&lt;/a&gt;&lt;/code&gt; es asociativo, con identidad &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a7dc34cb7ea60a4e1ddaf0a591cdafbc0e403cf" translate="yes" xml:space="preserve">
          <source>Above, with no overlapping. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--43--36-&quot;&gt;$+$&lt;/a&gt;&lt;/code&gt; is associative, with identity &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Arriba, sin superposici&amp;oacute;n. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--43--36-&quot;&gt;$+$&lt;/a&gt;&lt;/code&gt; es asociativo, con identidad &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2d972269377ed5359cdd2dcc108f0e3936d78b1" translate="yes" xml:space="preserve">
          <source>Above, with no overlapping. &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-36--43--36-&quot;&gt;$+$&lt;/a&gt;&lt;/code&gt; is associative, with identity &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Arriba, sin superposici&amp;oacute;n. &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-36--43--36-&quot;&gt;$+$&lt;/a&gt;&lt;/code&gt; es asociativo, con identidad &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88874691ade84811a148df43dee3e898c7993db4" translate="yes" xml:space="preserve">
          <source>Above, without dovetailing.</source>
          <target state="translated">Arriba,sin encajar.</target>
        </trans-unit>
        <trans-unit id="ffc84c11cb600f5730c837f24132ad44932f0e4a" translate="yes" xml:space="preserve">
          <source>Above; if there is no overlap it &quot;dovetails&quot; the two</source>
          <target state="translated">Arriba;si no hay superposición &quot;encaja&quot; los dos</target>
        </trans-unit>
        <trans-unit id="2c7fe8b95b08b1e64796580d91044372f5603e8d" translate="yes" xml:space="preserve">
          <source>Absolute cursor movements</source>
          <target state="translated">Movimientos absolutos del cursor</target>
        </trans-unit>
        <trans-unit id="44530d6a736fdaae47537dfbad7f8dda6f90c1ca" translate="yes" xml:space="preserve">
          <source>Absolute intervals</source>
          <target state="translated">Intervalos absolutos</target>
        </trans-unit>
        <trans-unit id="05675a8df55f00a801d7267f15ceae258c856842" translate="yes" xml:space="preserve">
          <source>Absolute value.</source>
          <target state="translated">Valor absoluto.</target>
        </trans-unit>
        <trans-unit id="be11481292069bbf4e5d32f6f22e3e0ba35a6c06" translate="yes" xml:space="preserve">
          <source>AbsoluteSeek</source>
          <target state="translated">AbsoluteSeek</target>
        </trans-unit>
        <trans-unit id="d18ae99534459c5602deda227d35dbfc2f1e9957" translate="yes" xml:space="preserve">
          <source>AbsoluteTime</source>
          <target state="translated">AbsoluteTime</target>
        </trans-unit>
        <trans-unit id="434cecc208a8b4bb275114bca8d90f1c47541833" translate="yes" xml:space="preserve">
          <source>AbsoluteTime is TAI, time as measured by a clock.</source>
          <target state="translated">El Tiempo Absoluto es TAI,el tiempo medido por un reloj.</target>
        </trans-unit>
        <trans-unit id="667a8cf10407b19099b8b8a8c853533598abd554" translate="yes" xml:space="preserve">
          <source>Abstract data types can be implemented not only with data declarations, but also newtypes and type synonyms (with the restriction that a type synonym must be fully eta-reduced, e.g., &lt;code&gt;type T = ...&lt;/code&gt; to be accepted.) For example, the following are all valid implementations of the T above:</source>
          <target state="translated">Los tipos de datos abstractos se pueden implementar no solo con declaraciones de datos, sino tambi&amp;eacute;n nuevos tipos y sin&amp;oacute;nimos de tipo (con la restricci&amp;oacute;n de que un sin&amp;oacute;nimo de tipo debe estar completamente reducido en eta, por ejemplo, &lt;code&gt;type T = ...&lt;/code&gt; para ser aceptado). A continuaci&amp;oacute;n se muestran todas las implementaciones v&amp;aacute;lidas de la T anterior:</target>
        </trans-unit>
        <trans-unit id="beb8fcf15e248371df65aec656beac0bfea7c0b8" translate="yes" xml:space="preserve">
          <source>Abstract representation of vertices.</source>
          <target state="translated">Representación abstracta de los vértices.</target>
        </trans-unit>
        <trans-unit id="f326ddf7104d3df6fa13479c593c244c4623b73c" translate="yes" xml:space="preserve">
          <source>Abstract syntax definitions for Template Haskell.</source>
          <target state="translated">Definiciones de sintaxis abstracta para la plantilla Haskell.</target>
        </trans-unit>
        <trans-unit id="71b7aef56068b7e751389cca7071da4abd7a1c80" translate="yes" xml:space="preserve">
          <source>Accept leading and trailing whitespace?</source>
          <target state="translated">¿Aceptar el espacio blanco que va delante y detrás?</target>
        </trans-unit>
        <trans-unit id="95d34f3b555d7e27b1e17d75f2e37485b204658e" translate="yes" xml:space="preserve">
          <source>Accept leading whitespace?</source>
          <target state="translated">¿Aceptar el liderazgo del espacio blanco?</target>
        </trans-unit>
        <trans-unit id="bc52205c7ec889cf4cba765533bcd4e5d13957bc" translate="yes" xml:space="preserve">
          <source>Acceptable data</source>
          <target state="translated">Datos aceptables</target>
        </trans-unit>
        <trans-unit id="3a8a3f0706793232d22f7100e8ea68a2faa1f5f0" translate="yes" xml:space="preserve">
          <source>Access to GHC's call-stack simulation</source>
          <target state="translated">Acceso a la simulación de la pila de llamadas del GHC</target>
        </trans-unit>
        <trans-unit id="4756089d5cd10709a1d37fad3e346fb021462dee" translate="yes" xml:space="preserve">
          <source>AccessMode</source>
          <target state="translated">AccessMode</target>
        </trans-unit>
        <trans-unit id="f9fce24b3c49b79586973841924c190bcf8769f7" translate="yes" xml:space="preserve">
          <source>Accessing arrays</source>
          <target state="translated">Acceder a las matrices</target>
        </trans-unit>
        <trans-unit id="aff0bc5a5aaa0b373eac340c6aadb774a3a23049" translate="yes" xml:space="preserve">
          <source>Accessing the pointer to the array contents</source>
          <target state="translated">Accediendo al puntero del contenido de la matriz</target>
        </trans-unit>
        <trans-unit id="3efd139cf44f823a7b553a058c94da8090307f52" translate="yes" xml:space="preserve">
          <source>Accessors to GHC RTS flags. Descriptions of flags can be seen in &lt;a href=&quot;https://www.haskell.org/ghc/docs/latest/html/users_guide/runtime_control.html&quot;&gt;GHC User's Guide&lt;/a&gt;, or by running RTS help message using &lt;code&gt;+RTS --help&lt;/code&gt;.</source>
          <target state="translated">Accesores a las banderas GHC RTS. Las descripciones de las banderas se pueden ver en &lt;a href=&quot;https://www.haskell.org/ghc/docs/latest/html/users_guide/runtime_control.html&quot;&gt;la Gu&amp;iacute;a del usuario de GHC&lt;/a&gt; o ejecutando el mensaje de ayuda de RTS usando &lt;code&gt;+RTS --help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7edca54ae2bf350d49cd477266ad9dd7d55aedcd" translate="yes" xml:space="preserve">
          <source>According to [1]:</source>
          <target state="translated">De acuerdo con [1]:</target>
        </trans-unit>
        <trans-unit id="2d6dfb6165d33d7dc1b66480f6a0d421d69dd337" translate="yes" xml:space="preserve">
          <source>According to the GMP documentation, the underlying function &lt;code&gt;mpz_nextprime()&lt;/code&gt; &quot;uses a probabilistic algorithm to identify primes. For practical purposes it's adequate, the chance of a composite passing will be extremely small.&quot;</source>
          <target state="translated">De acuerdo con la documentaci&amp;oacute;n de GMP, la funci&amp;oacute;n subyacente &lt;code&gt;mpz_nextprime()&lt;/code&gt; &quot;usa un algoritmo probabil&amp;iacute;stico para identificar n&amp;uacute;meros primos. Para prop&amp;oacute;sitos pr&amp;aacute;cticos, es adecuado, la posibilidad de un pase compuesto ser&amp;aacute; extremadamente peque&amp;ntilde;a&quot;.</target>
        </trans-unit>
        <trans-unit id="a91ad95de89488856c8210673c103c15b4491b35" translate="yes" xml:space="preserve">
          <source>According to the rules above &lt;code&gt;X&lt;/code&gt; has a CUSK. Yet, the kind of &lt;code&gt;k&lt;/code&gt; is undetermined. It is thus quantified over, giving &lt;code&gt;X&lt;/code&gt; the kind &lt;code&gt;forall k1 (k :: k1). Proxy k -&amp;gt; Type&lt;/code&gt;.</source>
          <target state="translated">De acuerdo con las reglas anteriores, &lt;code&gt;X&lt;/code&gt; tiene un CUSK. Sin embargo, el tipo de &lt;code&gt;k&lt;/code&gt; no est&amp;aacute; determinado. Por lo tanto, se cuantifica, dando a &lt;code&gt;X&lt;/code&gt; el tipo de todo &lt;code&gt;forall k1 (k :: k1). Proxy k -&amp;gt; Type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5e0f0e68219f2793950ff4f739b0707416bc38" translate="yes" xml:space="preserve">
          <source>Accordingly, the rule for kind quantification in higher-rank contexts has changed slightly. In GHC 7, if a kind variable was mentioned for the first time in the kind of a variable bound in a non-top-level &lt;code&gt;forall&lt;/code&gt;, the kind variable was bound there, too. That is, in &lt;code&gt;f :: (forall (a :: k). ...) -&amp;gt; ...&lt;/code&gt;, the &lt;code&gt;k&lt;/code&gt; was bound by the same &lt;code&gt;forall&lt;/code&gt; as the &lt;code&gt;a&lt;/code&gt;. In GHC 8, however, all kind variables mentioned in a type are bound at the outermost level. If you want one bound in a higher-rank &lt;code&gt;forall&lt;/code&gt;, include it explicitly.</source>
          <target state="translated">En consecuencia, la regla para la cuantificaci&amp;oacute;n de tipos en contextos de rango superior ha cambiado ligeramente. En GHC 7, si una variable tipo fue mencionada por primera vez en el tipo de una variable atado en un no-nivel superior &lt;code&gt;forall&lt;/code&gt; , la variable tipo estaba destinado all&amp;iacute;, tambi&amp;eacute;n. Es decir, en &lt;code&gt;f :: (forall (a :: k). ...) -&amp;gt; ...&lt;/code&gt; , la &lt;code&gt;k&lt;/code&gt; estaba vinculada por la misma &lt;code&gt;forall&lt;/code&gt; que &lt;code&gt;a&lt;/code&gt; . En GHC 8, sin embargo, todas las variables de tipo mencionadas en un tipo est&amp;aacute;n vinculadas al nivel m&amp;aacute;s externo. Si desea un l&amp;iacute;mite en un grupo de rango superior, &lt;code&gt;forall&lt;/code&gt; expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="1bb0023c7c1fa4cd60dd0df32c9589498220f1d0" translate="yes" xml:space="preserve">
          <source>Accordingly, the type environment seen by &lt;code&gt;reify&lt;/code&gt; includes all the top-level declarations up to the end of the immediately preceding declaration group, but no more.</source>
          <target state="translated">En consecuencia, el entorno de tipos visto por &lt;code&gt;reify&lt;/code&gt; incluye todas las declaraciones de nivel superior hasta el final del grupo de declaraciones inmediatamente anterior, pero no m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="82bedfe88009972d90237d52b7f414b23e6d5eb6" translate="yes" xml:space="preserve">
          <source>Accum</source>
          <target state="translated">Accum</target>
        </trans-unit>
        <trans-unit id="50b4f3d88aa3c9059e12c063f7c950d2f9b4b778" translate="yes" xml:space="preserve">
          <source>Accum operations</source>
          <target state="translated">Operaciones de acumulación</target>
        </trans-unit>
        <trans-unit id="cd4bf7ea6fd4060189e1e1baaa24ebb42d7660ad" translate="yes" xml:space="preserve">
          <source>AccumT</source>
          <target state="translated">AccumT</target>
        </trans-unit>
        <trans-unit id="50412c7500ef5d04ef8c2e37d60a2b1db38c9207" translate="yes" xml:space="preserve">
          <source>Accumulating maps</source>
          <target state="translated">Acumulación de mapas</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="6347206826a895475f5f91774a889e897ffc7d63" translate="yes" xml:space="preserve">
          <source>Action &lt;code&gt;askString&lt;/code&gt; requests user to enter a string, and passes it to the continuation. &lt;code&gt;askString&lt;/code&gt; takes as a parameter a continuation taking a string parameter, and returning &lt;code&gt;IO ()&lt;/code&gt;. Compare its signature to &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:runContT&quot;&gt;runContT&lt;/a&gt;&lt;/code&gt; definition.</source>
          <target state="translated">La acci&amp;oacute;n &lt;code&gt;askString&lt;/code&gt; solicita al usuario que ingrese una cadena y la pasa a la continuaci&amp;oacute;n. &lt;code&gt;askString&lt;/code&gt; toma como par&amp;aacute;metro una continuaci&amp;oacute;n que toma un par&amp;aacute;metro de cadena y devuelve &lt;code&gt;IO ()&lt;/code&gt; . Compare su firma con la definici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:runContT&quot;&gt;runContT&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2f1b38e49644d95f7b46650e509c991d77060f8" translate="yes" xml:space="preserve">
          <source>Action to be executed</source>
          <target state="translated">Acción a ejecutar</target>
        </trans-unit>
        <trans-unit id="f5278c8649d913f335c11a62f866017db4429c6b" translate="yes" xml:space="preserve">
          <source>Actions on directories</source>
          <target state="translated">Acciones en los directorios</target>
        </trans-unit>
        <trans-unit id="696ed90b8efd0baea13c573b2e7c286d011d6b3c" translate="yes" xml:space="preserve">
          <source>Actions on files</source>
          <target state="translated">Acciones en los archivos</target>
        </trans-unit>
        <trans-unit id="7083b72c48cfaf651eebc9aa10754311beefc8de" translate="yes" xml:space="preserve">
          <source>Activate cross-compilation mode (see &lt;a href=&quot;#hsc2hs-cross&quot;&gt;Cross-compilation&lt;/a&gt;).</source>
          <target state="translated">Active el modo de compilaci&amp;oacute;n cruzada (consulte &lt;a href=&quot;#hsc2hs-cross&quot;&gt;Compilaci&amp;oacute;n cruzada&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="583d9a705b86bbdfe3e1d9047b3ea1485ccadeeb" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;&lt;a href=&quot;system-posix-files#v:getFileStatus&quot;&gt;getFileStatus&lt;/a&gt;&lt;/code&gt; except when the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; refers to a symbolic link. In that case the &lt;code&gt;FileStatus&lt;/code&gt; information of the symbolic link itself is returned instead of that of the file it points to.</source>
          <target state="translated">Act&amp;uacute;a como &lt;code&gt;&lt;a href=&quot;system-posix-files#v:getFileStatus&quot;&gt;getFileStatus&lt;/a&gt;&lt;/code&gt; excepto cuando &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; se refiere a un enlace simb&amp;oacute;lico. En ese caso, se &lt;code&gt;FileStatus&lt;/code&gt; informaci&amp;oacute;n FileStatus del propio enlace simb&amp;oacute;lico en lugar de la del archivo al que apunta.</target>
        </trans-unit>
        <trans-unit id="7d65523818024ea88107f6287927f036ddf6afd4" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;&lt;a href=&quot;system-posix-files#v:getFileStatus&quot;&gt;getFileStatus&lt;/a&gt;&lt;/code&gt; except when the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; refers to a symbolic link. In that case the &lt;code&gt;FileStatus&lt;/code&gt; information of the symbolic link itself is returned instead of that of the file it points to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb8dd245b9cb57f179bf3b4b88042343c063795" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;&lt;a href=&quot;system-posix-files#v:setOwnerAndGroup&quot;&gt;setOwnerAndGroup&lt;/a&gt;&lt;/code&gt; but does not follow symlinks (and thus changes permissions on the link itself).</source>
          <target state="translated">Act&amp;uacute;a como &lt;code&gt;&lt;a href=&quot;system-posix-files#v:setOwnerAndGroup&quot;&gt;setOwnerAndGroup&lt;/a&gt;&lt;/code&gt; pero no sigue enlaces simb&amp;oacute;licos (y por lo tanto cambia los permisos en el propio enlace).</target>
        </trans-unit>
        <trans-unit id="00b98c6571c6f97fdd25d5e837fe03213c325e22" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:getFileStatus&quot;&gt;getFileStatus&lt;/a&gt;&lt;/code&gt; except when the &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; refers to a symbolic link. In that case the &lt;code&gt;FileStatus&lt;/code&gt; information of the symbolic link itself is returned instead of that of the file it points to.</source>
          <target state="translated">Act&amp;uacute;a como &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:getFileStatus&quot;&gt;getFileStatus&lt;/a&gt;&lt;/code&gt; excepto cuando &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; hace referencia a un enlace simb&amp;oacute;lico. En ese caso, se &lt;code&gt;FileStatus&lt;/code&gt; informaci&amp;oacute;n FileStatus del propio enlace simb&amp;oacute;lico en lugar de la del archivo al que apunta.</target>
        </trans-unit>
        <trans-unit id="cbcea92f66c4289d12fcd3463f6bb4e3fab3bda6" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:setOwnerAndGroup&quot;&gt;setOwnerAndGroup&lt;/a&gt;&lt;/code&gt; but does not follow symlinks (and thus changes permissions on the link itself).</source>
          <target state="translated">Act&amp;uacute;a como &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:setOwnerAndGroup&quot;&gt;setOwnerAndGroup&lt;/a&gt;&lt;/code&gt; pero no sigue enlaces simb&amp;oacute;licos (y por lo tanto cambia los permisos en el propio enlace).</target>
        </trans-unit>
        <trans-unit id="6a6c3ff29419f1c7034849f1db0a070b794f9ad2" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;setFileSize&lt;/code&gt; but uses a file descriptor instead of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Act&amp;uacute;a como &lt;code&gt;setFileSize&lt;/code&gt; pero usa un descriptor de archivo en lugar de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49be567080d7b410e84b47729961520e4de920c4" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;setFileSize&lt;/code&gt; but uses a file descriptor instead of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b7078adb2d96736d050720e01d8ae82392b27c" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;setOwnerAndGroup&lt;/code&gt; but uses a file descriptor instead of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Act&amp;uacute;a como &lt;code&gt;setOwnerAndGroup&lt;/code&gt; pero usa un descriptor de archivo en lugar de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f40c80358e12a1e2aaf02b1148d6c20fcfd4ba45" translate="yes" xml:space="preserve">
          <source>Acts as &lt;code&gt;setOwnerAndGroup&lt;/code&gt; but uses a file descriptor instead of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce17679436ea260fadec4591a677de22164d0f8" translate="yes" xml:space="preserve">
          <source>Actually &lt;code&gt;hsc2hs&lt;/code&gt; does not output the Haskell file directly. It creates a C program that includes the headers, gets automatically compiled and run. That program outputs the Haskell code.</source>
          <target state="translated">En realidad, &lt;code&gt;hsc2hs&lt;/code&gt; no genera el archivo Haskell directamente. Crea un programa en C que incluye los encabezados, se compila y ejecuta autom&amp;aacute;ticamente. Ese programa genera el c&amp;oacute;digo Haskell.</target>
        </trans-unit>
        <trans-unit id="4f047ea892e21f4553c30a3d6ef7ff19933e3fa6" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;&lt;a href=&quot;control-monad-catch#t:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; handling abilities to a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4c8a6633849d6709d07c9f3e63104f63a51077" translate="yes" xml:space="preserve">
          <source>Add a finalizer that will run in the Q monad after the current module has been type checked. This only makes sense when run within a top-level splice.</source>
          <target state="translated">Añade un finalizador que se ejecutará en la mónada Q después de que se haya comprobado el tipo de módulo actual.Esto sólo tiene sentido cuando se ejecuta dentro de un empalme de nivel superior.</target>
        </trans-unit>
        <trans-unit id="de0de177dcddf4173fd744c404b8ba61f96637ed" translate="yes" xml:space="preserve">
          <source>Add a finalizer to an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; (GHC only). See &lt;a href=&quot;foreign-foreignptr&quot;&gt;Foreign.ForeignPtr&lt;/a&gt; and &lt;a href=&quot;system-mem-weak&quot;&gt;System.Mem.Weak&lt;/a&gt; for more about finalizers.</source>
          <target state="translated">Agregue un finalizador a un &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; (solo GHC). Consulte &lt;a href=&quot;foreign-foreignptr&quot;&gt;Foreign.ForeignPtr&lt;/a&gt; y &lt;a href=&quot;system-mem-weak&quot;&gt;System.Mem.Weak&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los finalizadores.</target>
        </trans-unit>
        <trans-unit id="87eb63d6dca38f792891dceb6d3068ba951d4549" translate="yes" xml:space="preserve">
          <source>Add a line to the history unless it matches the previously recorded line.</source>
          <target state="translated">Añade una línea al historial a menos que coincida con la línea registrada anteriormente.</target>
        </trans-unit>
        <trans-unit id="aaca03fa0d32c5a3d402a6fb5fcc0ded2bb915ec" translate="yes" xml:space="preserve">
          <source>Add a line to the history, and remove all previous entries which are the same as it.</source>
          <target state="translated">Añade una línea al historial,y elimina todas las entradas anteriores que sean iguales.</target>
        </trans-unit>
        <trans-unit id="1d7fd5dfa46b0f645d5db42f20504f6c3caf7358" translate="yes" xml:space="preserve">
          <source>Add a trailing file path separator if one is not already present.</source>
          <target state="translated">Añade un separador de ruta de archivos si no hay uno ya presente.</target>
        </trans-unit>
        <trans-unit id="c5f1a8ca3a641a6b0ef6dbe461171ca7f604eb5a" translate="yes" xml:space="preserve">
          <source>Add additional top-level declarations. The added declarations will be type checked along with the current declaration group.</source>
          <target state="translated">Añada declaraciones adicionales de alto nivel.Las declaraciones añadidas se comprobarán junto con el grupo de declaración actual.</target>
        </trans-unit>
        <trans-unit id="cecd1aea8fe88c39fcc8f71681a3e087791c984b" translate="yes" xml:space="preserve">
          <source>Add an extension, even if there is already one there, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Agregue una extensi&amp;oacute;n, incluso si ya hay una, equivalente a &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34878ebb3f1e96601aafa913d00d7bd263cdc36c" translate="yes" xml:space="preserve">
          <source>Add an extension, even if there is already one there, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Agregue una extensi&amp;oacute;n, incluso si ya existe una, equivalente a &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89357b09335d29d387cf17547863b974b8decc59" translate="yes" xml:space="preserve">
          <source>Add an extension, even if there is already one there, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Agregue una extensi&amp;oacute;n, incluso si ya hay una, equivalente a &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60-.-62-&quot;&gt;&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12e0f266814b31f57d2a4d4f2e065ebded03e6c4" translate="yes" xml:space="preserve">
          <source>Add an extension, even if there is already one there, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Agregue una extensi&amp;oacute;n, incluso si ya existe una, equivalente a &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88bd486d89c4fede722e2d2391a03c0fd1f29c23" translate="yes" xml:space="preserve">
          <source>Add entries to the Static Pointer Table</source>
          <target state="translated">Añadir entradas a la tabla de punteros estáticos</target>
        </trans-unit>
        <trans-unit id="573b000c455e2582361374a0f2d5ce932b4443a5" translate="yes" xml:space="preserve">
          <source>Add months (clipped to last day), then add days</source>
          <target state="translated">Añade los meses (recortados al último día),luego añade los días</target>
        </trans-unit>
        <trans-unit id="11f2dacfd6ba9147a205050f051361aedae62583" translate="yes" xml:space="preserve">
          <source>Add months (rolling over to next month), then add days</source>
          <target state="translated">Añade los meses (pasando al mes siguiente),luego añade los días</target>
        </trans-unit>
        <trans-unit id="b015364a9bf90321fb61c3a98f1cdc612fdf7a8d" translate="yes" xml:space="preserve">
          <source>Add months, with days past the last day of the month clipped to the last day. For instance, 2005-01-30 + 1 month = 2005-02-28.</source>
          <target state="translated">Añade meses,con los días pasados el último día del mes recortados al último día.Por ejemplo,2005-01-30+1 mes=2005-02-28.</target>
        </trans-unit>
        <trans-unit id="1ce9d4dd3c00c35abdeda445f12f814c42604388" translate="yes" xml:space="preserve">
          <source>Add months, with days past the last day of the month rolling over to the next month. For instance, 2005-01-30 + 1 month = 2005-03-02.</source>
          <target state="translated">Añade meses,con los días pasados el último día del mes pasando al mes siguiente.Por ejemplo,2005-01-30+1 mes=2005-03-02.</target>
        </trans-unit>
        <trans-unit id="45aa2700c673ebfa0acebc5efea925be3a17cb6f" translate="yes" xml:space="preserve">
          <source>Add one to the given number using the state monad:</source>
          <target state="translated">Añade uno al número dado usando la mónada estatal:</target>
        </trans-unit>
        <trans-unit id="ad0277793f67d2e393175d08b52db34131c5ef10" translate="yes" xml:space="preserve">
          <source>Add signed integers reporting overflow. First member of result is the sum truncated to an &lt;code&gt;Int#&lt;/code&gt;; second member is zero if the true sum fits in an &lt;code&gt;Int#&lt;/code&gt;, nonzero if overflow occurred (the sum is either too large or too small to fit in an &lt;code&gt;Int#&lt;/code&gt;).</source>
          <target state="translated">Agregue el desbordamiento de informes de enteros firmados. El primer miembro del resultado es la suma truncada en un &lt;code&gt;Int#&lt;/code&gt; ; el segundo miembro es cero si la suma verdadera cabe en un &lt;code&gt;Int#&lt;/code&gt; , distinto de cero si se produjo un desbordamiento (la suma es demasiado grande o demasiado peque&amp;ntilde;a para caber en un &lt;code&gt;Int#&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b0fcd5e56314036018a9f0cac00e78ef55a1787b" translate="yes" xml:space="preserve">
          <source>Add some helper code that starts up and shuts down the Haskell RTS:</source>
          <target state="translated">Añade un código de ayuda que encienda y apague el Haskell RTS:</target>
        </trans-unit>
        <trans-unit id="985586c7f3031f00d6269e644d3adc10e6ea07bc" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;-s [⟨file⟩]&lt;/code&gt; RTS option when running the program to see timing stats, which will help to tell you whether your program got faster by using more CPUs or not. If the user time is greater than the elapsed time, then the program used more than one CPU. You should also run the program without &lt;a href=&quot;#rts-flag--N%20%E2%9F%A8x%E2%9F%A9&quot;&gt;&lt;code&gt;-N ⟨x⟩&lt;/code&gt;&lt;/a&gt; for comparison.</source>
          <target state="translated">Agregue la opci&amp;oacute;n &lt;code&gt;-s [⟨file⟩]&lt;/code&gt; RTS cuando ejecute el programa para ver las estad&amp;iacute;sticas de tiempo, lo que le ayudar&amp;aacute; a saber si su programa se aceler&amp;oacute; al usar m&amp;aacute;s CPU o no. Si el tiempo del usuario es mayor que el tiempo transcurrido, entonces el programa us&amp;oacute; m&amp;aacute;s de una CPU. Tambi&amp;eacute;n debe ejecutar el programa sin &lt;a href=&quot;#rts-flag--N%20%E2%9F%A8x%E2%9F%A9&quot;&gt; &lt;code&gt;-N ⟨x⟩&lt;/code&gt; &lt;/a&gt; para comparar.</target>
        </trans-unit>
        <trans-unit id="343b1a229f6a10110d459f27e6591278cc0810b3" translate="yes" xml:space="preserve">
          <source>Add the global package database on top of the current stack. This option can be used after &lt;a href=&quot;#ghc-flag--no-global-package-db&quot;&gt;&lt;code&gt;-no-global-package-db&lt;/code&gt;&lt;/a&gt; to specify the position in the stack where the global package database should be loaded.</source>
          <target state="translated">Agregue la base de datos de paquetes global encima de la pila actual. Esta opci&amp;oacute;n se puede usar despu&amp;eacute;s de &lt;a href=&quot;#ghc-flag--no-global-package-db&quot;&gt; &lt;code&gt;-no-global-package-db&lt;/code&gt; &lt;/a&gt; para especificar la posici&amp;oacute;n en la pila donde se debe cargar la base de datos del paquete global.</target>
        </trans-unit>
        <trans-unit id="24dc1f25cbb780084188d4ff897a81d5104622f0" translate="yes" xml:space="preserve">
          <source>Add the global package db to the stack.</source>
          <target state="translated">Añade el paquete global db a la pila.</target>
        </trans-unit>
        <trans-unit id="fe975763255492732af82ca06ecb5eda5e5fa904" translate="yes" xml:space="preserve">
          <source>Add the package database ⟨file⟩ on top of the current stack.</source>
          <target state="translated">Añade la base de datos de paquetes ⟨file⟩ encima de la pila actual.</target>
        </trans-unit>
        <trans-unit id="6134bf2d1b2295efc8fa6b7e828ec4d22ba2e38e" translate="yes" xml:space="preserve">
          <source>Add the user&amp;rsquo;s package database on top of the current stack. This option can be used after &lt;a href=&quot;#ghc-flag--no-user-package-db&quot;&gt;&lt;code&gt;-no-user-package-db&lt;/code&gt;&lt;/a&gt; to specify the position in the stack where the user&amp;rsquo;s package database should be loaded.</source>
          <target state="translated">Agregue la base de datos de paquetes del usuario encima de la pila actual. Esta opci&amp;oacute;n se puede usar despu&amp;eacute;s de &lt;a href=&quot;#ghc-flag--no-user-package-db&quot;&gt; &lt;code&gt;-no-user-package-db&lt;/code&gt; &lt;/a&gt; para especificar la posici&amp;oacute;n en la pila donde se debe cargar la base de datos del paquete del usuario.</target>
        </trans-unit>
        <trans-unit id="30d336c4a71c8e660819935f8d9b591c05d3839d" translate="yes" xml:space="preserve">
          <source>Add the user&amp;rsquo;s package db to the stack.</source>
          <target state="translated">Agregue la base de datos del paquete del usuario a la pila.</target>
        </trans-unit>
        <trans-unit id="f0c714c0819e829fa65b99edbce416f762fa1cd5" translate="yes" xml:space="preserve">
          <source>Add the user's package db to the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e83704b0c13e474a873f78d2503ff9d5058a2e" translate="yes" xml:space="preserve">
          <source>Add two &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">A&amp;ntilde;adir dos &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="42140a41e27de0c19e086f86091f816243e8209e" translate="yes" xml:space="preserve">
          <source>Add two non-negative numbers. Errors out on overflow.</source>
          <target state="translated">Sume dos números no negativos.Errores en el desbordamiento.</target>
        </trans-unit>
        <trans-unit id="e2856c1714aa39e0ac4378840b55f10a1492a342" translate="yes" xml:space="preserve">
          <source>Add two vectors element-wise.</source>
          <target state="translated">Añade dos vectores por elemento.</target>
        </trans-unit>
        <trans-unit id="d21ffb0b2e887326fe4eaccd172c45b78c0f6321" translate="yes" xml:space="preserve">
          <source>Add unsigned integers reporting overflow. The first element of the pair is the result. The second element is the carry flag, which is nonzero on overflow. See also &lt;code&gt;plusWord2#&lt;/code&gt;.</source>
          <target state="translated">Agregue n&amp;uacute;meros enteros sin firmar que reporten desbordamiento. El primer elemento del par es el resultado. El segundo elemento es la bandera de acarreo, que no es cero en caso de desbordamiento. Consulte tambi&amp;eacute;n &lt;code&gt;plusWord2#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4224f11c255c4982dd554902608b0a229771245f" translate="yes" xml:space="preserve">
          <source>Add unsigned integers, with the high part (carry) in the first component of the returned pair and the low part in the second component of the pair. See also &lt;code&gt;addWordC#&lt;/code&gt;.</source>
          <target state="translated">Sume enteros sin signo, con la parte alta (acarreo) en el primer componente del par devuelto y la parte baja en el segundo componente del par. Consulte tambi&amp;eacute;n &lt;code&gt;addWordC#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7bc6acbb336def5a2fed21adc84cf2eba8c8695" translate="yes" xml:space="preserve">
          <source>Add years, matching month and day, with Feb 29th clipped to Feb 28th if necessary. For instance, 2004-02-29 + 2 years = 2006-02-28.</source>
          <target state="translated">Añade años,emparejando mes y día,con el 29 de febrero recortado al 28 de febrero si es necesario.Por ejemplo,2004-02-29+2 años=2006-02-28.</target>
        </trans-unit>
        <trans-unit id="00a5a0f630ddf36709167f1d67babdf5ba438d3b" translate="yes" xml:space="preserve">
          <source>Add years, matching month and day, with Feb 29th rolled over to Mar 1st if necessary. For instance, 2004-02-29 + 2 years = 2006-03-01.</source>
          <target state="translated">Añade los años,emparejando el mes y el día,con el 29 de febrero pasado al 1 de marzo si es necesario.Por ejemplo,2004-02-29+2 años=2006-03-01.</target>
        </trans-unit>
        <trans-unit id="b78eacb0dc09583fbc5860e25537c0fbd17b2217" translate="yes" xml:space="preserve">
          <source>Add ⟨dir⟩ to the directory search list for &lt;code&gt;#include&lt;/code&gt; files</source>
          <target state="translated">Agregue ⟨dir⟩ a la lista de b&amp;uacute;squeda del directorio para &lt;code&gt;#include&lt;/code&gt; archivos</target>
        </trans-unit>
        <trans-unit id="3af3cf99d9bd473db5a8f166f611704c815a0e2a" translate="yes" xml:space="preserve">
          <source>Add ⟨dir⟩ to the list of directories searched for libraries</source>
          <target state="translated">Añade ⟨dir⟩ a la lista de directorios buscados para las bibliotecas</target>
        </trans-unit>
        <trans-unit id="22a6f927fd045f27916f2841389ceb5619f2f520" translate="yes" xml:space="preserve">
          <source>Add ⟨file⟩ to the package db stack.</source>
          <target state="translated">Añade ⟨file⟩ al paquete db stack.</target>
        </trans-unit>
        <trans-unit id="fd862d70f0a0e1b3f98b9cfd9a82f7a12719414c" translate="yes" xml:space="preserve">
          <source>Add ⟨module⟩(s) to the current target set, and perform a reload. Normally pre-compiled code for the module will be loaded if available, or otherwise the module will be compiled to byte-code. Using the &lt;code&gt;*&lt;/code&gt; prefix forces the module to be loaded as byte-code.</source>
          <target state="translated">Agregue ⟨m&amp;oacute;dulo⟩ (s) al conjunto de destino actual y realice una recarga. Normalmente, el c&amp;oacute;digo precompilado para el m&amp;oacute;dulo se cargar&amp;aacute; si est&amp;aacute; disponible, o de lo contrario, el m&amp;oacute;dulo se compilar&amp;aacute; en c&amp;oacute;digo de bytes. El uso del prefijo &lt;code&gt;*&lt;/code&gt; obliga a que el m&amp;oacute;dulo se cargue como c&amp;oacute;digo de bytes.</target>
        </trans-unit>
        <trans-unit id="d5c0d264184b29e5240b822c85a976bae183083b" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;~&lt;/code&gt; in front of &lt;code&gt;x&lt;/code&gt; gives the regular lazy behavior.</source>
          <target state="translated">Agregar &lt;code&gt;~&lt;/code&gt; delante de &lt;code&gt;x&lt;/code&gt; da el comportamiento perezoso habitual.</target>
        </trans-unit>
        <trans-unit id="320069f40befc715427528e74af5fccc8e33c273" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;~&lt;/code&gt; in front of &lt;code&gt;x&lt;/code&gt; gives the regular lazy behavior. The general rule is that we add an implicit bang on the outermost pattern, unless disabled with &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">Agregar &lt;code&gt;~&lt;/code&gt; delante de &lt;code&gt;x&lt;/code&gt; da el comportamiento perezoso habitual. La regla general es que agregamos una explosi&amp;oacute;n impl&amp;iacute;cita en el patr&amp;oacute;n m&amp;aacute;s externo, a menos que se desactive con &lt;code&gt;~&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d83058e490d2d8e416a97aa6b2da12e694c423cc" translate="yes" xml:space="preserve">
          <source>Adding a new kind of pure computation to an applicative functor.</source>
          <target state="translated">Añadiendo un nuevo tipo de computación pura a un functor de aplicación.</target>
        </trans-unit>
        <trans-unit id="3e22ec51f6417f07ed5484e9c1f31e458834a41e" translate="yes" xml:space="preserve">
          <source>Adding a type signature dramatically changes the result! This is a rather counter-intuitive phenomenon, worth watching out for.</source>
          <target state="translated">¡Agregar una firma de tipo cambia dramáticamente el resultado! Este es un fenómeno más bien contraintuitivo,del que vale la pena cuidarse.</target>
        </trans-unit>
        <trans-unit id="99385bb5ea9d50b509bba76a80c6d5cf02fdad9b" translate="yes" xml:space="preserve">
          <source>Adding the optional &amp;ldquo;&lt;code&gt;!&lt;/code&gt;&amp;rdquo; turns type errors into warnings while loading. This allows to use the portions of the module that are correct, even if there are type errors in some definitions. Effectively, the &amp;ldquo;-fdefer-type-errors&amp;rdquo; flag is set before loading and unset after loading if the flag has not already been set before. See &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Deferring type errors to runtime&lt;/a&gt; for further motivation and details.</source>
          <target state="translated">A&amp;ntilde;adiendo el opcional &amp;ldquo; &lt;code&gt;!&lt;/code&gt; &amp;rdquo;Convierte los errores de tipo en advertencias durante la carga. Esto permite utilizar las partes del m&amp;oacute;dulo que son correctas, incluso si hay errores de tipo en algunas definiciones. Efectivamente, la bandera &amp;ldquo;-fdefer-type-errors&amp;rdquo; se activa antes de la carga y se desarma despu&amp;eacute;s de la carga si la bandera no se ha establecido antes. Consulte &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;Aplazamiento de errores de tipo al tiempo&lt;/a&gt; de ejecuci&amp;oacute;n para obtener m&amp;aacute;s motivaci&amp;oacute;n y detalles.</target>
        </trans-unit>
        <trans-unit id="00f220c3a56210a9843d04890d61a40e6f8811dd" translate="yes" xml:space="preserve">
          <source>Addition of type-level naturals.</source>
          <target state="translated">Adición de naturales de nivel de tipo.</target>
        </trans-unit>
        <trans-unit id="1d55c4561961d726b476a4d113ce4ac1271e1f3d" translate="yes" xml:space="preserve">
          <source>Additional &lt;code&gt;Integer&lt;/code&gt; operations</source>
          <target state="translated">Operaciones de &lt;code&gt;Integer&lt;/code&gt; adicionales</target>
        </trans-unit>
        <trans-unit id="452f31724597f25fbb7b21a77fe4b6fccc9c9f11" translate="yes" xml:space="preserve">
          <source>Additional arguments to the pre-processor can be passed in using the &lt;a href=&quot;#ghc-flag--optF%20%E2%9F%A8option%E2%9F%A9&quot;&gt;&lt;code&gt;-optF ⟨option⟩&lt;/code&gt;&lt;/a&gt; option. These are fed to ⟨cmd⟩ on the command line after the three standard input and output arguments.</source>
          <target state="translated">Se pueden pasar argumentos adicionales al preprocesador usando la opci&amp;oacute;n &lt;a href=&quot;#ghc-flag--optF%20%E2%9F%A8option%E2%9F%A9&quot;&gt; &lt;code&gt;-optF ⟨option⟩&lt;/code&gt; &lt;/a&gt; . Estos se env&amp;iacute;an a ⟨cmd⟩ en la l&amp;iacute;nea de comando despu&amp;eacute;s de los tres argumentos est&amp;aacute;ndar de entrada y salida.</target>
        </trans-unit>
        <trans-unit id="ba84f116cccb8aaddf33910d85c19273f9b5c33d" translate="yes" xml:space="preserve">
          <source>Additional conversion operations to &lt;code&gt;Integer&lt;/code&gt;</source>
          <target state="translated">Operaciones de conversi&amp;oacute;n adicionales a &lt;code&gt;Integer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05dd2fde350699cecd8602584538e2a5301a7997" translate="yes" xml:space="preserve">
          <source>Additional functions for deconstructing sequences are available via the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; instance of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Las funciones adicionales para deconstruir secuencias est&amp;aacute;n disponibles a trav&amp;eacute;s de la instancia &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cf2915563496656545c5e0888c8da42599eb5f8" translate="yes" xml:space="preserve">
          <source>Additional functions for deconstructing sequences are available via the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; instance of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33810ea2f256277dbeeee354b4b9748e64cd54e7" translate="yes" xml:space="preserve">
          <source>Additional generic representation type constructors</source>
          <target state="translated">Constructores adicionales del tipo de representación genérica</target>
        </trans-unit>
        <trans-unit id="fefa8177b546e09c697ef3ccda7dfb9a8468dadd" translate="yes" xml:space="preserve">
          <source>Additional submodules</source>
          <target state="translated">Submódulos adicionales</target>
        </trans-unit>
        <trans-unit id="d5fc75cb6b2328204ad6e4f5c7b8aa1503974318" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;ghc-pkg list&lt;/code&gt; reminds you that there are broken packages and suggests &lt;code&gt;ghc-pkg check&lt;/code&gt;, which displays more information about the nature of the failure:</source>
          <target state="translated">Adem&amp;aacute;s, la &lt;code&gt;ghc-pkg list&lt;/code&gt; le recuerda que hay paquetes rotos y sugiere la &lt;code&gt;ghc-pkg check&lt;/code&gt; , que muestra m&amp;aacute;s informaci&amp;oacute;n sobre la naturaleza de la falla:</target>
        </trans-unit>
        <trans-unit id="4dc57812bc7acb080b8b1b3c9a8dc29f687921a8" translate="yes" xml:space="preserve">
          <source>Additionally, any files specified with &lt;a href=&quot;#ghc-flag--ghci-script&quot;&gt;&lt;code&gt;-ghci-script&lt;/code&gt;&lt;/a&gt; flags will be read after the standard files, allowing the use of custom .ghci files.</source>
          <target state="translated">Adem&amp;aacute;s, cualquier archivo especificado con los indicadores &lt;a href=&quot;#ghc-flag--ghci-script&quot;&gt; &lt;code&gt;-ghci-script&lt;/code&gt; &lt;/a&gt; se leer&amp;aacute; despu&amp;eacute;s de los archivos est&amp;aacute;ndar, lo que permite el uso de archivos .ghci personalizados.</target>
        </trans-unit>
        <trans-unit id="8273902569bf382d8f68303982acb32861c6cbb8" translate="yes" xml:space="preserve">
          <source>Additionally, in function definitions, variables bound by matching earlier curried arguments may be used in view pattern expressions in later arguments:</source>
          <target state="translated">Además,en las definiciones de las funciones,las variables unidas por la coincidencia de los argumentos anteriores de curry pueden utilizarse para ver las expresiones de patrones en los argumentos posteriores:</target>
        </trans-unit>
        <trans-unit id="f89673843f1be6757860a64501f5bc027e357960" translate="yes" xml:space="preserve">
          <source>Additionally, the following flags are accepted by &lt;code&gt;ghc-pkg&lt;/code&gt;:</source>
          <target state="translated">Adem&amp;aacute;s, las siguientes banderas son aceptadas por &lt;code&gt;ghc-pkg&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6098dd57b05f9b5adb478e7eb1c70e1499221dae" translate="yes" xml:space="preserve">
          <source>Additionally, the use of &lt;a href=&quot;extending_ghc#annotation-pragmas&quot;&gt;annotations&lt;/a&gt; is forbidden, as that would allow bypassing Safe Haskell restrictions. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/10826&quot;&gt;#10826&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea07a4f598cd1862ca91a8d811d4455a836c0db0" translate="yes" xml:space="preserve">
          <source>Additionally, the use of &lt;a href=&quot;extending_ghc#annotation-pragmas&quot;&gt;annotations&lt;/a&gt; is forbidden, as that would allow bypassing Safe Haskell restrictions. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/10826&quot;&gt;Issue #10826&lt;/a&gt; for details.</source>
          <target state="translated">Adem&amp;aacute;s, el uso de &lt;a href=&quot;extending_ghc#annotation-pragmas&quot;&gt;anotaciones&lt;/a&gt; est&amp;aacute; prohibido, ya que eso permitir&amp;iacute;a eludir las restricciones de Safe Haskell. Consulte el &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/10826&quot;&gt;n&amp;uacute;mero 10826&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="ba7d071e5cf6b03c15819e3ffdf6a64a0ef17bfa" translate="yes" xml:space="preserve">
          <source>Additionally, this implementation places bitmaps in the leaves of the tree. Their size is the natural size of a machine word (32 or 64 bits) and greatly reduce memory footprint and execution times for dense sets, e.g. sets where it is likely that many values lie close to each other. The asymptotics are not affected by this optimization.</source>
          <target state="translated">Además,esta implementación coloca mapas de bits en las hojas del árbol.Su tamaño es el tamaño natural de una palabra de máquina (32 ó 64 bits)y reduce enormemente la huella de la memoria y los tiempos de ejecución de conjuntos densos,por ejemplo,conjuntos en los que es probable que muchos valores se encuentren cerca unos de otros.Los asintóticos no se ven afectados por esta optimización.</target>
        </trans-unit>
        <trans-unit id="9433cfd346f8c54358a2f7edce3cb77efb148924" translate="yes" xml:space="preserve">
          <source>Additionally, this implementation places bitmaps in the leaves of the tree. Their size is the natural size of a machine word (32 or 64 bits) and greatly reduces the memory footprint and execution times for dense sets, e.g. sets where it is likely that many values lie close to each other. The asymptotics are not affected by this optimization.</source>
          <target state="translated">Además,esta implementación coloca mapas de bits en las hojas del árbol.Su tamaño es el tamaño natural de una palabra de máquina (32 ó 64 bits)y reduce enormemente la huella de la memoria y los tiempos de ejecución de conjuntos densos,por ejemplo,conjuntos en los que es probable que muchos valores se encuentren cerca unos de otros.Los asintóticos no se ven afectados por esta optimización.</target>
        </trans-unit>
        <trans-unit id="1bf2d76785594ad916dd8c2e5e99f51e13db7893" translate="yes" xml:space="preserve">
          <source>Additionally, unless &lt;code&gt;-hide-all-packages&lt;/code&gt; is specified &lt;code&gt;ghc&lt;/code&gt; will also look for the package environment in the following locations:</source>
          <target state="translated">Adem&amp;aacute;s, a menos &lt;code&gt;-hide-all-packages&lt;/code&gt; se especifique -hide-all-packages, &lt;code&gt;ghc&lt;/code&gt; tambi&amp;eacute;n buscar&amp;aacute; el entorno del paquete en las siguientes ubicaciones:</target>
        </trans-unit>
        <trans-unit id="2aa983ad06fdb2dac09d7b6232814da70747e9ee" translate="yes" xml:space="preserve">
          <source>Additive</source>
          <target state="translated">Additive</target>
        </trans-unit>
        <trans-unit id="0d42cec26dbc762aafe43e05a50f969d0b7505d7" translate="yes" xml:space="preserve">
          <source>Addr</source>
          <target state="translated">Addr</target>
        </trans-unit>
        <trans-unit id="e78f3509a8a9919b87bca8268eb67a1992a398dd" translate="yes" xml:space="preserve">
          <source>Addr#</source>
          <target state="translated">Addr#</target>
        </trans-unit>
        <trans-unit id="9693f97edb3f213e60bf04638a2964d95c0a8e70" translate="yes" xml:space="preserve">
          <source>AddrRep</source>
          <target state="translated">AddrRep</target>
        </trans-unit>
        <trans-unit id="e1bcdaba63c737122befb027c96355aebd956e8a" translate="yes" xml:space="preserve">
          <source>Address range information necessary for efficient lookup in debug information.</source>
          <target state="translated">Información sobre el rango de direcciones necesaria para una búsqueda eficiente en la información de depuración.</target>
        </trans-unit>
        <trans-unit id="2bea019ec2ca9ce8cba25638cef6e4ebf912a40d" translate="yes" xml:space="preserve">
          <source>Adds a core plugin to the compilation pipeline.</source>
          <target state="translated">Añade un plugin de núcleo a la tubería de compilación.</target>
        </trans-unit>
        <trans-unit id="f141d838836915fbdfd335ae66e883d10b2bee58" translate="yes" xml:space="preserve">
          <source>Adds a location description and maybe a file path and file handle to an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;. If any of the file handle or file path is not given the corresponding value in the &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; remains unaltered.</source>
          <target state="translated">Agrega una descripci&amp;oacute;n de la ubicaci&amp;oacute;n y tal vez una ruta de archivo y un identificador de archivo a un &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; . Si no se proporciona alguno de los identificadores de archivo o ruta de archivo, el valor correspondiente en el &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; permanece inalterado.</target>
        </trans-unit>
        <trans-unit id="14518bca79b10a8d6a6afac2dc2d74ba60c9789a" translate="yes" xml:space="preserve">
          <source>Adds an automatic &lt;code&gt;SCC&lt;/code&gt; annotation to all &lt;em&gt;call sites&lt;/em&gt;. This is particularly useful when using profiling for the purposes of generating stack traces; see the function &lt;a href=&quot;../libraries/base-4.13.0.0/debug-trace#v:traceShow&quot;&gt;Debug.Trace.traceShow&lt;/a&gt;, or the &lt;a href=&quot;runtime_control#rts-flag--xc&quot;&gt;&lt;code&gt;-xc&lt;/code&gt;&lt;/a&gt; RTS flag (&lt;a href=&quot;runtime_control#rts-options-debugging&quot;&gt;RTS options for hackers, debuggers, and over-interested souls&lt;/a&gt;) for more details.</source>
          <target state="translated">Agrega una anotaci&amp;oacute;n &lt;code&gt;SCC&lt;/code&gt; autom&amp;aacute;tica a todos los &lt;em&gt;sitios de llamadas&lt;/em&gt; . Esto es particularmente &amp;uacute;til cuando se utiliza la creaci&amp;oacute;n de perfiles con el fin de generar seguimientos de pila; consulte la funci&amp;oacute;n &lt;a href=&quot;../libraries/base-4.13.0.0/debug-trace#v:traceShow&quot;&gt;Debug.Trace.traceShow&lt;/a&gt; , o el &lt;a href=&quot;runtime_control#rts-flag--xc&quot;&gt; &lt;code&gt;-xc&lt;/code&gt; &lt;/a&gt; RTS ( &lt;a href=&quot;runtime_control#rts-options-debugging&quot;&gt;opciones RTS para piratas inform&amp;aacute;ticos, depuradores y almas demasiado interesadas&lt;/a&gt; ) para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4dd58b10c5df43531b5419e150eab3428f317659" translate="yes" xml:space="preserve">
          <source>Adds an automatic &lt;code&gt;SCC&lt;/code&gt; annotation to all &lt;em&gt;call sites&lt;/em&gt;. This is particularly useful when using profiling for the purposes of generating stack traces; see the function &lt;a href=&quot;../libraries/base-4.14.1.0/debug-trace#v:traceShow&quot;&gt;Debug.Trace.traceShow&lt;/a&gt;, or the &lt;a href=&quot;runtime_control#rts-flag--xc&quot;&gt;&lt;code&gt;-xc&lt;/code&gt;&lt;/a&gt; RTS flag (&lt;a href=&quot;runtime_control#rts-options-debugging&quot;&gt;RTS options for hackers, debuggers, and over-interested souls&lt;/a&gt;) for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fd2a08806dfb482db344074817b7f6e5c01441" translate="yes" xml:space="preserve">
          <source>Adds ⟨file⟩ to the stack of package databases. Additionally, ⟨file⟩ will also be the database modified by a &lt;code&gt;register&lt;/code&gt;, &lt;code&gt;unregister&lt;/code&gt;, &lt;code&gt;expose&lt;/code&gt; or &lt;code&gt;hide&lt;/code&gt; command, unless it is overridden by a later &lt;code&gt;--package-db&lt;/code&gt;, &lt;code&gt;--user&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; option.</source>
          <target state="translated">Agrega ⟨file⟩ a la pila de bases de datos de paquetes. Adem&amp;aacute;s, ⟨file⟩ tambi&amp;eacute;n ser&amp;aacute; la base de datos modificada por un &lt;code&gt;register&lt;/code&gt; , &lt;code&gt;unregister&lt;/code&gt; , &lt;code&gt;expose&lt;/code&gt; comando u &lt;code&gt;hide&lt;/code&gt; , a menos que sea anulado por una &lt;code&gt;--package-db&lt;/code&gt; posterior --package-db , &lt;code&gt;--user&lt;/code&gt; o &lt;code&gt;--global&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b704187610182fd9bd374b8590aaa1ef187a2e9" translate="yes" xml:space="preserve">
          <source>Adjacency list representation of a graph, mapping each vertex to its list of successors.</source>
          <target state="translated">Representación de la lista de adyacencia de un gráfico,mapeando cada vértice a su lista de sucesores.</target>
        </trans-unit>
        <trans-unit id="b54a06cdf203c292a9600afc8f4877852335267a" translate="yes" xml:space="preserve">
          <source>Adjust the size of an array</source>
          <target state="translated">Ajustar el tamaño de una matriz</target>
        </trans-unit>
        <trans-unit id="90ae8e7c61f1d870875dbba75294d0ee30d78240" translate="yes" xml:space="preserve">
          <source>Adjust the size of an array in the given pool.</source>
          <target state="translated">Ajustar el tamaño de un arreglo en la piscina dada.</target>
        </trans-unit>
        <trans-unit id="0f13658ace97bdbb476bffd14472478597823d14" translate="yes" xml:space="preserve">
          <source>Adjust the size of an array including an extra position for the end marker.</source>
          <target state="translated">Ajustar el tamaño de una matriz incluyendo una posición extra para el marcador final.</target>
        </trans-unit>
        <trans-unit id="8f64f3b151b220c78b035080db416951b86c9133" translate="yes" xml:space="preserve">
          <source>Adjust the size of an array with an end marker in the given pool.</source>
          <target state="translated">Ajustar el tamaño de una matriz con un marcador final en la piscina dada.</target>
        </trans-unit>
        <trans-unit id="22c056b1203c0d0dbe4975dcb12541b083750969" translate="yes" xml:space="preserve">
          <source>Adjust the storage area for an element in the pool to the given size of the required type.</source>
          <target state="translated">Ajustar la zona de almacenamiento de un elemento en la piscina al tamaño dado del tipo requerido.</target>
        </trans-unit>
        <trans-unit id="7b78d30e021c76a4d2cd9b8d7c83d0401635e998" translate="yes" xml:space="preserve">
          <source>Adjust the storage area for an element in the pool to the given size.</source>
          <target state="translated">Ajustar el área de almacenamiento de un elemento en la piscina al tamaño dado.</target>
        </trans-unit>
        <trans-unit id="483b6c748f94c6096a813d4e1202da0abec1197a" translate="yes" xml:space="preserve">
          <source>Administration: errors, locations and IO</source>
          <target state="translated">Administración:errores,localizaciones y IO</target>
        </trans-unit>
        <trans-unit id="e796c7c730ff7dabd900a81e118126dd63495d56" translate="yes" xml:space="preserve">
          <source>Advance a pointer into an array by the given number of elements</source>
          <target state="translated">Avanzar un puntero en una matriz por el número dado de elementos</target>
        </trans-unit>
        <trans-unit id="260fc09cb1bd463d426655ad971e67b80c27f04d" translate="yes" xml:space="preserve">
          <source>Advances the given address by the given offset in bytes.</source>
          <target state="translated">Adelanta la dirección dada por el desplazamiento dado en bytes.</target>
        </trans-unit>
        <trans-unit id="8295b736050208f7764a760aab4c1497c80f65b8" translate="yes" xml:space="preserve">
          <source>Advice</source>
          <target state="translated">Advice</target>
        </trans-unit>
        <trans-unit id="1f3b7ab3442ed00e15ed0541b2686cab5245f648" translate="yes" xml:space="preserve">
          <source>Advice parameter for &lt;code&gt;&lt;a href=&quot;system-posix-fcntl#v:fileAdvise&quot;&gt;fileAdvise&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">Par&amp;aacute;metro de &lt;code&gt;&lt;a href=&quot;system-posix-fcntl#v:fileAdvise&quot;&gt;fileAdvise&lt;/a&gt;&lt;/code&gt; para la operaci&amp;oacute;n fileAdvise .</target>
        </trans-unit>
        <trans-unit id="641791da837ed200728e9e50c3a7a04bddd511ba" translate="yes" xml:space="preserve">
          <source>AdviceDontNeed</source>
          <target state="translated">AdviceDontNeed</target>
        </trans-unit>
        <trans-unit id="ea4292d4f711440375ee49d21953e80b5e52f970" translate="yes" xml:space="preserve">
          <source>AdviceNoReuse</source>
          <target state="translated">AdviceNoReuse</target>
        </trans-unit>
        <trans-unit id="74d7e2511ff18bffd6e754606fb5eef4017e56ae" translate="yes" xml:space="preserve">
          <source>AdviceNormal</source>
          <target state="translated">AdviceNormal</target>
        </trans-unit>
        <trans-unit id="81df8c0f743f838767314197c10a01806cad2ee1" translate="yes" xml:space="preserve">
          <source>AdviceRandom</source>
          <target state="translated">AdviceRandom</target>
        </trans-unit>
        <trans-unit id="ccfd39209774bc0bd28a1949494a57c9a708ab38" translate="yes" xml:space="preserve">
          <source>AdviceSequential</source>
          <target state="translated">AdviceSequential</target>
        </trans-unit>
        <trans-unit id="42c90330aa2e9c8f79a56b93334f2cee6565ec83" translate="yes" xml:space="preserve">
          <source>AdviceWillNeed</source>
          <target state="translated">AdviceWillNeed</target>
        </trans-unit>
        <trans-unit id="ed7d231de2d15caa7608638f366b36b040083e12" translate="yes" xml:space="preserve">
          <source>After &amp;ldquo;for each class constraint &lt;code&gt;(C t1 ... tn)&lt;/code&gt;&amp;rdquo;, add &amp;ldquo;or each quantified constraint &lt;code&gt;(forall as. context =&amp;gt; C t1 .. tn)&lt;/code&gt;&amp;ldquo;</source>
          <target state="translated">Despu&amp;eacute;s de &quot;para cada restricci&amp;oacute;n de clase &lt;code&gt;(C t1 ... tn)&lt;/code&gt; &quot;, agregue &quot;o cada restricci&amp;oacute;n cuantificada &lt;code&gt;(forall as. context =&amp;gt; C t1 .. tn)&lt;/code&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="962b02c7a62413f64f2ece2fa9269c59c618e145" translate="yes" xml:space="preserve">
          <source>After &amp;ldquo;for each class constraint &lt;code&gt;(C t1 ... tn)&lt;/code&gt;&amp;rdquo;, add &amp;ldquo;or each quantified constraint &lt;code&gt;(forall as. context =&amp;gt; C t1 .. tn)&lt;/code&gt;&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0f8ce28395257ee72603489cfcfd39f2ac90c3" translate="yes" xml:space="preserve">
          <source>After a &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; command, the current context is set to:</source>
          <target state="translated">Despu&amp;eacute;s de un comando &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; , el contexto actual se establece en:</target>
        </trans-unit>
        <trans-unit id="07383eb16f1578a01af993380c0758317c77da4a" translate="yes" xml:space="preserve">
          <source>After analysing this declaration, GHC will discover that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; can be kind-polymorphic, with &lt;code&gt;a :: k2 -&amp;gt; Type&lt;/code&gt; and &lt;code&gt;c :: k2&lt;/code&gt;. We thus infer the following kind:</source>
          <target state="translated">Despu&amp;eacute;s de analizar esta declaraci&amp;oacute;n, GHC descubrir&amp;aacute; que &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;c&lt;/code&gt; puede ser un poco polim&amp;oacute;rfica, con &lt;code&gt;a :: k2 -&amp;gt; Type&lt;/code&gt; y &lt;code&gt;c :: k2&lt;/code&gt; . De este modo inferimos el siguiente tipo:</target>
        </trans-unit>
        <trans-unit id="43eb39a82773f2a643009be434c6a85d6547dd46" translate="yes" xml:space="preserve">
          <source>After calling this function the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; shares the underlying byte buffer with the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Thus modifying the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;, either in C, or using poke, will cause the contents of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to change, breaking referential transparency. Other &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s created by sharing (such as those produced via &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;) will also reflect these changes. Modifying the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; will break referential transparency. To avoid this, use &lt;code&gt;useAsCString&lt;/code&gt;, which makes a copy of the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Despu&amp;eacute;s de llamar a esta funci&amp;oacute;n, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; comparte el b&amp;uacute;fer de bytes subyacente con el &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; original . Por lo tanto, modificar &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; , ya sea en C, o usando poke, har&amp;aacute; que el contenido de &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; cambie, rompiendo la transparencia referencial. Otros &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; creados al compartir (como los producidos mediante &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; ) tambi&amp;eacute;n reflejar&amp;aacute;n estos cambios. La modificaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; romper&amp;aacute; la transparencia referencial. Para evitar esto, use &lt;code&gt;useAsCString&lt;/code&gt; , que hace una copia del &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; original .</target>
        </trans-unit>
        <trans-unit id="f34b11d2d5cf5b9fa61ceda45199281dda85ee6f" translate="yes" xml:space="preserve">
          <source>After calling this function the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt; shares the underlying byte buffer with the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Thus modifying the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt;, either in C, or using poke, will cause the contents of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to change, breaking referential transparency. Other &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s created by sharing (such as those produced via &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;) will also reflect these changes. Modifying the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt; will break referential transparency. To avoid this, use &lt;code&gt;useAsCStringLen&lt;/code&gt;, which makes a copy of the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Despu&amp;eacute;s de llamar a esta funci&amp;oacute;n, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt; comparte el b&amp;uacute;fer de bytes subyacente con el &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; original . Por lo tanto, modificar &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt; , ya sea en C, o usando poke, har&amp;aacute; que el contenido de &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; cambie, rompiendo la transparencia referencial. Otros &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; creados al compartir (como los producidos mediante &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; ) tambi&amp;eacute;n reflejar&amp;aacute;n estos cambios. La modificaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt; romper&amp;aacute; la transparencia referencial. Para evitar esto, use &lt;code&gt;useAsCStringLen&lt;/code&gt; , que hace una copia del &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; original .</target>
        </trans-unit>
        <trans-unit id="82a058ea48e1049a3153e84c6e2e32200ba90877" translate="yes" xml:space="preserve">
          <source>After calling this function the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; shares the underlying byte buffer with the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Thus modifying the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;, either in C, or using poke, will cause the contents of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to change, breaking referential transparency. Other &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s created by sharing (such as those produced via &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;) will also reflect these changes. Modifying the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; will break referential transparency. To avoid this, use &lt;code&gt;useAsCString&lt;/code&gt;, which makes a copy of the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb3d574900104a74408c8731d7eda427531f654" translate="yes" xml:space="preserve">
          <source>After calling this function the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt; shares the underlying byte buffer with the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Thus modifying the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt;, either in C, or using poke, will cause the contents of the &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to change, breaking referential transparency. Other &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s created by sharing (such as those produced via &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;) will also reflect these changes. Modifying the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-string#t:CStringLen&quot;&gt;CStringLen&lt;/a&gt;&lt;/code&gt; will break referential transparency. To avoid this, use &lt;code&gt;useAsCStringLen&lt;/code&gt;, which makes a copy of the original &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6923804e768f3da3c4e34a50b537baa1cecaa53f" translate="yes" xml:space="preserve">
          <source>After expanding the synonym, &lt;code&gt;f&lt;/code&gt; has the legal (in GHC) type:</source>
          <target state="translated">Despu&amp;eacute;s de expandir el sin&amp;oacute;nimo, &lt;code&gt;f&lt;/code&gt; tiene el tipo legal (en GHC):</target>
        </trans-unit>
        <trans-unit id="e94a959addb55b4d2ce5f3c538f5e0b4451a9198" translate="yes" xml:space="preserve">
          <source>After expanding the synonym, &lt;code&gt;foo&lt;/code&gt; has the legal (in GHC) type:</source>
          <target state="translated">Despu&amp;eacute;s de expandir el sin&amp;oacute;nimo, &lt;code&gt;foo&lt;/code&gt; tiene el tipo legal (en GHC):</target>
        </trans-unit>
        <trans-unit id="06d0d43c4a9a4534a91da534db4a4831101176f7" translate="yes" xml:space="preserve">
          <source>After expanding type synonyms, GHC does validity checking on types, looking for the following malformedness which isn&amp;rsquo;t detected simply by kind checking:</source>
          <target state="translated">Despu&amp;eacute;s de expandir los sin&amp;oacute;nimos de tipos, GHC realiza una verificaci&amp;oacute;n de validez de los tipos, buscando las siguientes anomal&amp;iacute;as que no se detectan simplemente mediante la verificaci&amp;oacute;n de tipos:</target>
        </trans-unit>
        <trans-unit id="0449647915398655b7a878613d9a9af3cfaf3fda" translate="yes" xml:space="preserve">
          <source>After running a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; action there are three possibilities for what comes next:</source>
          <target state="translated">Despu&amp;eacute;s de ejecutar un &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; acci&amp;oacute;n , hay tres posibilidades para lo que viene a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="f4bbb708c55cef458c6b0bed0fa5801c96a405ff" translate="yes" xml:space="preserve">
          <source>After starting &lt;code&gt;remote-iserv ⟨tmp_dir⟩ ⟨port⟩&lt;/code&gt; on the target and providing it with a temporary folder (where it will copy the necessary libraries to load to) and port it will listen for the proxy to connect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8861d66315ce749c004b7e24b472e22e1345c7" translate="yes" xml:space="preserve">
          <source>After we&amp;rsquo;ve finished invoking our Haskell functions, we can call &lt;code&gt;hs_exit()&lt;/code&gt;, which terminates the RTS.</source>
          <target state="translated">Una vez que hayamos terminado de invocar nuestras funciones de Haskell, podemos llamar a &lt;code&gt;hs_exit()&lt;/code&gt; , que finaliza el RTS.</target>
        </trans-unit>
        <trans-unit id="2fa08ab3cb629ae0630f4dccf9a63999f34ccc01" translate="yes" xml:space="preserve">
          <source>Again, if &lt;code&gt;C&lt;/code&gt; contains no class methods, the instance context will be redundant, so GHC will instead generate &lt;code&gt;instance C c_1 c_2 ... c_(m-1) (N n_1 n_2 ... n_q)&lt;/code&gt;.</source>
          <target state="translated">Nuevamente, si &lt;code&gt;C&lt;/code&gt; no contiene m&amp;eacute;todos de clase, el contexto de la instancia ser&amp;aacute; redundante, por lo que GHC generar&amp;aacute; la &lt;code&gt;instance C c_1 c_2 ... c_(m-1) (N n_1 n_2 ... n_q)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80611142c1da75771c803bc1306de5dd47e954cb" translate="yes" xml:space="preserve">
          <source>Alexander Berntsen 2014</source>
          <target state="translated">Alexander Berntsen 2014</target>
        </trans-unit>
        <trans-unit id="0f9d329fecfee776bcba1d14e6bca4840fae8ece" translate="yes" xml:space="preserve">
          <source>Algebraic data types specified in a signature cannot be implemented using pattern synonyms. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/12717&quot;&gt;#12717&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70df90ba28c32aa3934681405622b497740ae050" translate="yes" xml:space="preserve">
          <source>Algebraic data types specified in a signature cannot be implemented using pattern synonyms. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/12717&quot;&gt;Issue #12717&lt;/a&gt;</source>
          <target state="translated">Los tipos de datos algebraicos especificados en una firma no se pueden implementar utilizando sin&amp;oacute;nimos de patrones. Vea el &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/12717&quot;&gt;n&amp;uacute;mero 12717&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a995fe628ebfb0ac7cc0c0b98a66a1d60308575a" translate="yes" xml:space="preserve">
          <source>Algebraic properties:</source>
          <target state="translated">Propiedades algebraicas:</target>
        </trans-unit>
        <trans-unit id="00fe36cee0a001e71e45449595c2a673824d1b79" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biasum&quot;&gt;biasum&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Alias ​​de &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biasum&quot;&gt;biasum&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="308d7f644aaa00a5665368fb713217dcb84b51ce" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifor_&quot;&gt;bifor_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Alias ​​de &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifor_&quot;&gt;bifor_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cdf35744dcefb67854cfd9303dbe37b27518062" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisequence_&quot;&gt;bisequence_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Alias ​​de &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisequence_&quot;&gt;bisequence_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="107c8c77b99ddea22e0d4483b070454ccd2a71ae" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bitraverse_&quot;&gt;bitraverse_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Alias ​​de &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bitraverse_&quot;&gt;bitraverse_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23f78602884a7b538f91b984806e37d22c871f3b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Alias ​​de &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c1b2d82c320084f6a2ecaa9b2bb2ee948dec368" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bisequence&quot;&gt;bisequence&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Alias ​​de &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bisequence&quot;&gt;bisequence&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60cc1b8e67da53fd1ea040fa3bfb7016cc924b7f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Alias ​​de &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc75b7adfd72cadf1d0c28de54a66b5886fa0528" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;&lt;a href=&quot;ghc-exts#v:tagToEnum-35-&quot;&gt;tagToEnum#&lt;/a&gt;&lt;/code&gt;. Returns True if its parameter is 1# and False if it is 0#.</source>
          <target state="translated">Alias ​​para &lt;code&gt;&lt;a href=&quot;ghc-exts#v:tagToEnum-35-&quot;&gt;tagToEnum#&lt;/a&gt;&lt;/code&gt; . Devuelve True si su par&amp;aacute;metro es 1 # y False si es 0 #.</target>
        </trans-unit>
        <trans-unit id="b5417a2480ca72a7d0a8e8c2b271f31533da5d02" translate="yes" xml:space="preserve">
          <source>Align functions at given boundary.</source>
          <target state="translated">Alinear las funciones en un límite determinado.</target>
        </trans-unit>
        <trans-unit id="309cb56d1cbd5360ce8e4fa89688161c57474b68" translate="yes" xml:space="preserve">
          <source>Align functions to multiples of the given value. Only valid values are powers of two.</source>
          <target state="translated">Alinear las funciones a múltiplos del valor dado.Sólo los valores válidos son potencias de dos.</target>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">All</target>
        </trans-unit>
        <trans-unit id="be7cbc9171e2709ef932f92879b2fa92b735095e" translate="yes" xml:space="preserve">
          <source>All are based directly on their similarly-named &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; counterparts.</source>
          <target state="translated">Todos se basan directamente en sus hom&amp;oacute;logos de &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readp#t:ReadP&quot;&gt;ReadP&lt;/a&gt;&lt;/code&gt; con nombres similares.</target>
        </trans-unit>
        <trans-unit id="a6cd8f76353135f8eca4c08f035ed3722d4ad99a" translate="yes" xml:space="preserve">
          <source>All arithmetic is performed modulo 2^n, where &lt;code&gt;n&lt;/code&gt; is the number of bits in the type.</source>
          <target state="translated">Toda la aritm&amp;eacute;tica se realiza en m&amp;oacute;dulo 2 ^ n, donde &lt;code&gt;n&lt;/code&gt; es el n&amp;uacute;mero de bits del tipo.</target>
        </trans-unit>
        <trans-unit id="5c996c3cc62dedfc6f0f7accd3202c5cbe66b76c" translate="yes" xml:space="preserve">
          <source>All arithmetic is performed modulo 2^n, where n is the number of bits in the type. One non-obvious consequence of this is that &lt;code&gt;&lt;a href=&quot;prelude#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; should &lt;em&gt;not&lt;/em&gt; raise an error on negative arguments.</source>
          <target state="translated">Toda la aritm&amp;eacute;tica se realiza en m&amp;oacute;dulo 2 ^ n, donde n es el n&amp;uacute;mero de bits del tipo. Una consecuencia no obvia de esto es que &lt;code&gt;&lt;a href=&quot;prelude#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; &lt;em&gt; no&lt;/em&gt; deber&amp;iacute;a generar un error en los argumentos negativos.</target>
        </trans-unit>
        <trans-unit id="0cb70b7dc62c8932f9a5fdafd462f49e1a9ac846" translate="yes" xml:space="preserve">
          <source>All data that is read will be decoded as UTF-8.</source>
          <target state="translated">Todos los datos que se lean serán decodificados como UTF-8.</target>
        </trans-unit>
        <trans-unit id="63944b6a06201ae38dfb9a4d0c8e79dcd222ae47" translate="yes" xml:space="preserve">
          <source>All formats</source>
          <target state="translated">Todos los formatos</target>
        </trans-unit>
        <trans-unit id="3da05872e313e33621f92f71c99a716c25b4c06e" translate="yes" xml:space="preserve">
          <source>All marshalling between Haskell and a foreign language ultimately boils down to translating Haskell data structures into the binary representation of a corresponding data structure of the foreign language and vice versa. To code this marshalling in Haskell, it is necessary to manipulate primitive data types stored in unstructured memory blocks. The class &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; facilitates this manipulation on all types for which it is instantiated, which are the standard basic types of Haskell, the fixed size &lt;code&gt;Int&lt;/code&gt; types (&lt;code&gt;&lt;a href=&quot;data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;), the fixed size &lt;code&gt;Word&lt;/code&gt; types (&lt;code&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;foreign-stableptr#t:StablePtr&quot;&gt;StablePtr&lt;/a&gt;&lt;/code&gt;, all types from &lt;a href=&quot;foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;, as well as &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Toda la clasificaci&amp;oacute;n entre Haskell y un idioma extranjero, en &amp;uacute;ltima instancia, se reduce a traducir las estructuras de datos de Haskell a la representaci&amp;oacute;n binaria de una estructura de datos correspondiente del idioma extranjero y viceversa. Para codificar esta clasificaci&amp;oacute;n en Haskell, es necesario manipular tipos de datos primitivos almacenados en bloques de memoria no estructurados. La clase &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; facilita esta manipulaci&amp;oacute;n en todos los tipos para los que se instancia, que son los tipos b&amp;aacute;sicos est&amp;aacute;ndar de Haskell, los tipos &lt;code&gt;Int&lt;/code&gt; de tama&amp;ntilde;o fijo ( &lt;code&gt;&lt;a href=&quot;data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; ), los tipos de &lt;code&gt;Word&lt;/code&gt; de tama&amp;ntilde;o fijo ( &lt;code&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; ), &lt;code&gt;&lt;a href=&quot;foreign-stableptr#t:StablePtr&quot;&gt;StablePtr&lt;/a&gt;&lt;/code&gt; , todos los tipos de &lt;a href=&quot;foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt; , as&amp;iacute; como &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cffe145534643d9c1142d3476b91e58e7cb0edd7" translate="yes" xml:space="preserve">
          <source>All marshalling between Haskell and a foreign language ultimately boils down to translating Haskell data structures into the binary representation of a corresponding data structure of the foreign language and vice versa. To code this marshalling in Haskell, it is necessary to manipulate primitive data types stored in unstructured memory blocks. The class &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; facilitates this manipulation on all types for which it is instantiated, which are the standard basic types of Haskell, the fixed size &lt;code&gt;Int&lt;/code&gt; types (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;), the fixed size &lt;code&gt;Word&lt;/code&gt; types (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-stableptr#t:StablePtr&quot;&gt;StablePtr&lt;/a&gt;&lt;/code&gt;, all types from &lt;a href=&quot;../base-4.13.0.0/foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;, as well as &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Toda la clasificaci&amp;oacute;n entre Haskell y un idioma extranjero, en &amp;uacute;ltima instancia, se reduce a traducir las estructuras de datos de Haskell a la representaci&amp;oacute;n binaria de una estructura de datos correspondiente del idioma extranjero y viceversa. Para codificar esta clasificaci&amp;oacute;n en Haskell, es necesario manipular tipos de datos primitivos almacenados en bloques de memoria no estructurados. La clase &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; facilita esta manipulaci&amp;oacute;n en todos los tipos para los que se instancia, que son los tipos b&amp;aacute;sicos est&amp;aacute;ndar de Haskell, los tipos &lt;code&gt;Int&lt;/code&gt; de tama&amp;ntilde;o fijo ( &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; ), los tipos de &lt;code&gt;Word&lt;/code&gt; de tama&amp;ntilde;o fijo ( &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; ), &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-stableptr#t:StablePtr&quot;&gt;StablePtr&lt;/a&gt;&lt;/code&gt; , todos los tipos de &lt;a href=&quot;../base-4.13.0.0/foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt; , as&amp;iacute; como &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ce405ee1194b3ce0523423637671f91407135a7" translate="yes" xml:space="preserve">
          <source>All marshalling between Haskell and a foreign language ultimately boils down to translating Haskell data structures into the binary representation of a corresponding data structure of the foreign language and vice versa. To code this marshalling in Haskell, it is necessary to manipulate primitive data types stored in unstructured memory blocks. The class &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; facilitates this manipulation on all types for which it is instantiated, which are the standard basic types of Haskell, the fixed size &lt;code&gt;Int&lt;/code&gt; types (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int8&quot;&gt;Int8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int16&quot;&gt;Int16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;), the fixed size &lt;code&gt;Word&lt;/code&gt; types (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;), &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-stableptr#t:StablePtr&quot;&gt;StablePtr&lt;/a&gt;&lt;/code&gt;, all types from &lt;a href=&quot;../base-4.14.1.0/foreign-c-types&quot;&gt;Foreign.C.Types&lt;/a&gt;, as well as &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd19ff0d458c57b97295494e47d40838d1850a87" translate="yes" xml:space="preserve">
          <source>All of &lt;code&gt;M&lt;/code&gt;&amp;lsquo;s direct &lt;em&gt;safe imports&lt;/em&gt; are trusted by C</source>
          <target state="translated">C conf&amp;iacute;a en todas las &lt;em&gt;importaciones seguras&lt;/em&gt; directas de &lt;code&gt;M&lt;/code&gt; &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ef5ded9d2dd453646aebbde6bc1e77e258d91ac" translate="yes" xml:space="preserve">
          <source>All of &lt;code&gt;M&lt;/code&gt;&amp;lsquo;s direct imports are trusted by C</source>
          <target state="translated">Todas las importaciones directas de &lt;code&gt;M&lt;/code&gt; cuentan con la confianza de C</target>
        </trans-unit>
        <trans-unit id="ef4a7530bfdff42a708223449593af312fe8738b" translate="yes" xml:space="preserve">
          <source>All of &lt;code&gt;M&lt;/code&gt;&amp;lsquo;s direct safe imports are trusted by C</source>
          <target state="translated">C conf&amp;iacute;a en todas las importaciones seguras directas de &lt;code&gt;M&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5408f6679dcddf6cf10903e40871b1051e396da" translate="yes" xml:space="preserve">
          <source>All of &lt;code&gt;M&lt;/code&gt;&amp;rsquo;s direct &lt;em&gt;safe imports&lt;/em&gt; are trusted by C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e797d2c20c300f4f341eb1a8bbafe469bcca673e" translate="yes" xml:space="preserve">
          <source>All of &lt;code&gt;M&lt;/code&gt;&amp;rsquo;s direct imports are trusted by C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1624840fe46a64a971c34a839de2cd6166d7cc15" translate="yes" xml:space="preserve">
          <source>All of &lt;code&gt;M&lt;/code&gt;&amp;rsquo;s direct safe imports are trusted by C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26ff1c50009409908cc1dc4184f2fa494a5bb4b" translate="yes" xml:space="preserve">
          <source>All of M&amp;rsquo;s direct imports are trusted by C</source>
          <target state="translated">Todas las importaciones directas de M cuentan con la confianza de C</target>
        </trans-unit>
        <trans-unit id="6bbff3b9a2342fa6a7328cc64d9d064b0c59177f" translate="yes" xml:space="preserve">
          <source>All of the following are permissible:</source>
          <target state="translated">Todo lo siguiente está permitido:</target>
        </trans-unit>
        <trans-unit id="07a302413e8b75e6da91c912ef456b8df520f40e" translate="yes" xml:space="preserve">
          <source>All of the functions fail on an empty queue.</source>
          <target state="translated">Todas las funciones fallan en una cola vacía.</target>
        </trans-unit>
        <trans-unit id="459b9c097e1f48899719948d13092addea8d683b" translate="yes" xml:space="preserve">
          <source>All of the heaps are defined to be non-empty, which speeds up the merge functions.</source>
          <target state="translated">Todos los montones se definen como no vacíos,lo que acelera las funciones de fusión.</target>
        </trans-unit>
        <trans-unit id="a6d572146a4416cc21d822c5b9122cc28fefd404" translate="yes" xml:space="preserve">
          <source>All of the monad transformers except &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; are functors on the category of monads: in addition to defining a mapping of monads, they also define a mapping from transformations between base monads to transformations between transformed monads, called &lt;code&gt;map&lt;/code&gt;&lt;em&gt;XXX&lt;/em&gt;&lt;code&gt;T&lt;/code&gt;. Thus given a monad transformation &lt;code&gt;t :: M a -&amp;gt; N a&lt;/code&gt;, the combinator &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:mapStateT&quot;&gt;mapStateT&lt;/a&gt;&lt;/code&gt; constructs a monad transformation</source>
          <target state="translated">Todos los transformadores monad excepto &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#v:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; son funtores en la categor&amp;iacute;a de m&amp;oacute;nadas: adem&amp;aacute;s de definir un mapeo de m&amp;oacute;nadas, que tambi&amp;eacute;n definen un mapeo de transformaciones entre m&amp;oacute;nadas de base a transformaciones entre m&amp;oacute;nadas transformadas, llamado &lt;code&gt;map&lt;/code&gt; a&lt;em&gt;XXX &lt;/em&gt; &lt;code&gt;T&lt;/code&gt; . As&amp;iacute;, dada una transformaci&amp;oacute;n de m&amp;oacute;nada &lt;code&gt;t :: M a -&amp;gt; N a&lt;/code&gt; , el combinador &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:mapStateT&quot;&gt;mapStateT&lt;/a&gt;&lt;/code&gt; construye una transformaci&amp;oacute;n de m&amp;oacute;nada</target>
        </trans-unit>
        <trans-unit id="9ff4cf753e2cbc29b4117cb6c949a3dcfef8b652" translate="yes" xml:space="preserve">
          <source>All of the single-parameter functions for decoding bytestrings encoded in one of the Unicode Transformation Formats (UTF) operate in a &lt;em&gt;strict&lt;/em&gt; mode: each will throw an exception if given invalid input.</source>
          <target state="translated">Todas las funciones de un solo par&amp;aacute;metro para decodificar cadenas de bytes codificadas en uno de los formatos de transformaci&amp;oacute;n Unicode (UTF) operan en un modo &lt;em&gt;estricto&lt;/em&gt; : cada una generar&amp;aacute; una excepci&amp;oacute;n si se le da una entrada no v&amp;aacute;lida.</target>
        </trans-unit>
        <trans-unit id="c1146584e3cb478bf3265f7c6f72fec49b0f80d2" translate="yes" xml:space="preserve">
          <source>All of the type variables mentioned are bound by the class declaration, and none is locally quantified. Examples:</source>
          <target state="translated">Todas las variables de tipo mencionadas están vinculadas por la declaración de clase,y ninguna está cuantificada localmente.Ejemplos:</target>
        </trans-unit>
        <trans-unit id="d683e41b047bddec21ed6f58cd355ac5da8d7ca4" translate="yes" xml:space="preserve">
          <source>All on one line, &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignored and explicit new lines (&lt;code&gt;$$&lt;/code&gt;) are turned into spaces.</source>
          <target state="translated">Todo en una l&amp;iacute;nea, &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignorado y las nuevas l&amp;iacute;neas expl&amp;iacute;citas ( &lt;code&gt;$$&lt;/code&gt; ) se convierten en espacios.</target>
        </trans-unit>
        <trans-unit id="d04619ab3f8398e576bbe00b547d8d28a39b93a6" translate="yes" xml:space="preserve">
          <source>All on one line, &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignored and explicit new lines (&lt;code&gt;$$&lt;/code&gt;) are turned into spaces.</source>
          <target state="translated">Todo en una l&amp;iacute;nea, &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignorado y las nuevas l&amp;iacute;neas expl&amp;iacute;citas ( &lt;code&gt;$$&lt;/code&gt; ) se convierten en espacios.</target>
        </trans-unit>
        <trans-unit id="8734d083f84649d66cdee2cb45a731a5deb1ea31" translate="yes" xml:space="preserve">
          <source>All on one line, &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignored and explicit new lines (&lt;code&gt;$$&lt;/code&gt;) are turned into spaces.</source>
          <target state="translated">Todo en una l&amp;iacute;nea, &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; ignorado y las nuevas l&amp;iacute;neas expl&amp;iacute;citas ( &lt;code&gt;$$&lt;/code&gt; ) se convierten en espacios.</target>
        </trans-unit>
        <trans-unit id="9bd92a106884eb39d74915dc625e8a2eeded96d9" translate="yes" xml:space="preserve">
          <source>All other type errors are reported immediately, and cannot be deferred; for example, an ill-kinded type signature, an instance declaration that is non-terminating or ill-formed, a type-family instance that does not obey the declared injectivity constraints, etc etc.</source>
          <target state="translated">Todos los demás errores de tipo se notifican de inmediato y no pueden aplazarse;por ejemplo,una firma de tipo malintencionada,una declaración de instancia no terminada o mal formada,una instancia de tipo familiar que no obedece a las limitaciones de inyectabilidad declaradas,etc.</target>
        </trans-unit>
        <trans-unit id="100083b95ff688c1be21a4288351839a84f80d50" translate="yes" xml:space="preserve">
          <source>All previously loaded modules, except package modules, are forgotten. The new set of modules is known as the target set. Note that &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; can be used without any arguments to unload all the currently loaded modules and bindings.</source>
          <target state="translated">Todos los m&amp;oacute;dulos cargados anteriormente, excepto los m&amp;oacute;dulos de paquete, se olvidan. El nuevo conjunto de m&amp;oacute;dulos se conoce como conjunto de destino. Tenga en cuenta que &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; se puede utilizar sin ning&amp;uacute;n argumento para descargar todos los m&amp;oacute;dulos y enlaces cargados actualmente.</target>
        </trans-unit>
        <trans-unit id="6827c99a0f2492e5c37fe7d9438e06c6b6af14e1" translate="yes" xml:space="preserve">
          <source>All rules are implicitly exported from the module, and are therefore in force in any module that imports the module that defined the rule, directly or indirectly. (That is, if A imports B, which imports C, then C&amp;rsquo;s rules are in force when compiling A.) The situation is very similar to that for instance declarations.</source>
          <target state="translated">Todas las reglas se exportan impl&amp;iacute;citamente desde el m&amp;oacute;dulo y, por lo tanto, est&amp;aacute;n vigentes en cualquier m&amp;oacute;dulo que importe el m&amp;oacute;dulo que defini&amp;oacute; la regla, directa o indirectamente. (Es decir, si A importa B, que importa C, entonces las reglas de C est&amp;aacute;n vigentes al compilar A.) La situaci&amp;oacute;n es muy similar a la de, por ejemplo, las declaraciones.</target>
        </trans-unit>
        <trans-unit id="7dbe1320fffcde509144ec4167268e2f24928720" translate="yes" xml:space="preserve">
          <source>All special processing is triggered by the &lt;code&gt;#&lt;/code&gt; operator. To output a literal &lt;code&gt;#&lt;/code&gt;, write it twice: &lt;code&gt;##&lt;/code&gt;. Inside string literals and comments &lt;code&gt;#&lt;/code&gt; characters are not processed.</source>
          <target state="translated">Todo el procesamiento especial es activado por el operador &lt;code&gt;#&lt;/code&gt; . Para generar un literal &lt;code&gt;#&lt;/code&gt; , escr&amp;iacute;balo dos veces: &lt;code&gt;##&lt;/code&gt; . Literales y comentarios cadena dentro de &lt;code&gt;#&lt;/code&gt; caracteres no se procesan.</target>
        </trans-unit>
        <trans-unit id="e754d606e9f071f8917ddf678a8be51138905754" translate="yes" xml:space="preserve">
          <source>All storage allocated by functions that allocate based on a &lt;em&gt;size in bytes&lt;/em&gt; must be sufficiently aligned for any of the basic foreign types that fits into the newly allocated storage. All storage allocated by functions that allocate based on a specific type must be sufficiently aligned for that type. Array allocation routines need to obey the same alignment constraints for each array element.</source>
          <target state="translated">Todo el almacenamiento asignado por las funciones que se asignan en funci&amp;oacute;n de un &lt;em&gt;tama&amp;ntilde;o en bytes&lt;/em&gt; debe estar suficientemente alineado para cualquiera de los tipos externos b&amp;aacute;sicos que se ajustan al almacenamiento reci&amp;eacute;n asignado. Todo el almacenamiento asignado por funciones que asignan en funci&amp;oacute;n de un tipo espec&amp;iacute;fico debe estar suficientemente alineado para ese tipo. Las rutinas de asignaci&amp;oacute;n de matrices deben obedecer las mismas restricciones de alineaci&amp;oacute;n para cada elemento de la matriz.</target>
        </trans-unit>
        <trans-unit id="0f41064ade872ca46f2cce357b6f0f602bb6c9f2" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt;, including a header.</source>
          <target state="translated">Todo el &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt;&lt;/code&gt; , incluido un encabezado.</target>
        </trans-unit>
        <trans-unit id="8191f2288d30ed04618d8a7f6947ee07d2f827e8" translate="yes" xml:space="preserve">
          <source>All the classes &lt;code&gt;Ci&lt;/code&gt; are standard.</source>
          <target state="translated">Todas las clases &lt;code&gt;Ci&lt;/code&gt; son est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="27b13a294aaa6ffa8890f192e7f1dee01b865654" translate="yes" xml:space="preserve">
          <source>All the instance does is apply and remove the &lt;code&gt;newtype&lt;/code&gt; constructor. It is particularly galling that, since the constructor doesn&amp;rsquo;t appear at run-time, this instance declaration defines a dictionary which is &lt;em&gt;wholly equivalent&lt;/em&gt; to the &lt;code&gt;Int&lt;/code&gt; dictionary, only slower!</source>
          <target state="translated">Todo lo que hace la instancia es aplicar y eliminar el constructor &lt;code&gt;newtype&lt;/code&gt; . Es particularmente irritante que, dado que el constructor no aparece en tiempo de ejecuci&amp;oacute;n, esta declaraci&amp;oacute;n de instancia define un diccionario que es &lt;em&gt;totalmente equivalente&lt;/em&gt; al diccionario &lt;code&gt;Int&lt;/code&gt; , &amp;iexcl;solo que m&amp;aacute;s lento!</target>
        </trans-unit>
        <trans-unit id="3560dcf83b04004c14094e6b1d3cd4500f468374" translate="yes" xml:space="preserve">
          <source>All these features are described in the papers mentioned earlier.</source>
          <target state="translated">Todas estas características se describen en los documentos mencionados anteriormente.</target>
        </trans-unit>
        <trans-unit id="9f289fff56ff75be648fe75fd05b62eefadc5aae" translate="yes" xml:space="preserve">
          <source>All these features are enabled by default if the &lt;a href=&quot;#extension-MonadComprehensions&quot;&gt;&lt;code&gt;MonadComprehensions&lt;/code&gt;&lt;/a&gt; extension is enabled. The types and more detailed examples on how to use comprehensions are explained in the previous chapters &lt;a href=&quot;#generalised-list-comprehensions&quot;&gt;Generalised (SQL-like) List Comprehensions&lt;/a&gt; and &lt;a href=&quot;#parallel-list-comprehensions&quot;&gt;Parallel List Comprehensions&lt;/a&gt;. In general you just have to replace the type &lt;code&gt;[a]&lt;/code&gt; with the type &lt;code&gt;Monad m =&amp;gt; m a&lt;/code&gt; for monad comprehensions.</source>
          <target state="translated">Todas estas funciones est&amp;aacute;n habilitadas de forma predeterminada si la extensi&amp;oacute;n &lt;a href=&quot;#extension-MonadComprehensions&quot;&gt; &lt;code&gt;MonadComprehensions&lt;/code&gt; &lt;/a&gt; est&amp;aacute; habilitada. Los tipos y ejemplos m&amp;aacute;s detallados sobre c&amp;oacute;mo utilizar las comprensiones se explican en los cap&amp;iacute;tulos anteriores &lt;a href=&quot;#generalised-list-comprehensions&quot;&gt;Comprensiones de&lt;/a&gt; listas generalizadas (similares a SQL) y Comprensiones de listas &lt;a href=&quot;#parallel-list-comprehensions&quot;&gt;paralelas&lt;/a&gt; . En general, solo tiene que reemplazar el tipo &lt;code&gt;[a]&lt;/code&gt; con el tipo &lt;code&gt;Monad m =&amp;gt; m a&lt;/code&gt; para las comprensiones de m&amp;oacute;nadas.</target>
        </trans-unit>
        <trans-unit id="f320750508ae8a4bdfcecfb3e8588bc22cc54930" translate="yes" xml:space="preserve">
          <source>All these functions evaluate the message completely before printing it; so if the message is not fully defined, none of it will be printed.</source>
          <target state="translated">Todas estas funciones evalúan el mensaje completamente antes de imprimirlo;por lo tanto,si el mensaje no está completamente definido,no se imprimirá nada.</target>
        </trans-unit>
        <trans-unit id="fcd3e8296e242f3b3d9e914ad0a98eb399c9d926" translate="yes" xml:space="preserve">
          <source>All these primitive data types and operations are exported by the library &lt;code&gt;GHC.Prim&lt;/code&gt;, for which there is detailed online documentation &amp;lt;GHC.Prim.&amp;gt;. (This documentation is generated from the file &lt;code&gt;compiler/prelude/primops.txt.pp&lt;/code&gt;.)</source>
          <target state="translated">Todos estos tipos de datos primitivos y operaciones son exportados por la biblioteca &lt;code&gt;GHC.Prim&lt;/code&gt; , para la cual existe documentaci&amp;oacute;n en l&amp;iacute;nea detallada &amp;lt;GHC.Prim.&amp;gt;. (Esta documentaci&amp;oacute;n se genera a partir del archivo &lt;code&gt;compiler/prelude/primops.txt.pp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="11d822b519b4d27d4c90f7025aa2f37e057b1573" translate="yes" xml:space="preserve">
          <source>All this applies to constructors declared using the syntax of &lt;a href=&quot;#existential-with-context&quot;&gt;Existentials and type classes&lt;/a&gt;. For example, the &lt;code&gt;NumInst&lt;/code&gt; data type above could equivalently be declared like this:</source>
          <target state="translated">Todo esto se aplica a los constructores declarados utilizando la sintaxis de &lt;a href=&quot;#existential-with-context&quot;&gt;existenciales y clases de tipos&lt;/a&gt; . Por ejemplo, el tipo de datos &lt;code&gt;NumInst&lt;/code&gt; anterior podr&amp;iacute;a declararse de manera equivalente de esta manera:</target>
        </trans-unit>
        <trans-unit id="70df367f1e5c153af04770d26e6bb6e5662b24b1" translate="yes" xml:space="preserve">
          <source>All this behaviour contrasts with Haskell 98&amp;rsquo;s peculiar treatment of contexts on a data type declaration (Section 4.2.1 of the Haskell 98 Report). In Haskell 98 the definition</source>
          <target state="translated">Todo este comportamiento contrasta con el tratamiento peculiar de Haskell 98 de los contextos en una declaraci&amp;oacute;n de tipo de datos (Secci&amp;oacute;n 4.2.1 del Informe Haskell 98). En Haskell 98 la definici&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="3d7f2d606f261a5fba2db68b6939910c2cd2ece4" translate="yes" xml:space="preserve">
          <source>All this looks quite promising; we have a class and a range of interesting implementations. Unfortunately, there are some serious problems with the class declaration. First, the empty function has an ambiguous type:</source>
          <target state="translated">Todo esto parece muy prometedor;tenemos una clase y una gama de implementaciones interesantes.Desafortunadamente,hay algunos problemas serios con la declaración de clase.En primer lugar,la función de vacío tiene un tipo ambiguo:</target>
        </trans-unit>
        <trans-unit id="c67f8504ed498a898f1ab818b85763d53fddcf77" translate="yes" xml:space="preserve">
          <source>All three of these examples would compile without issue. On the other hand:</source>
          <target state="translated">Los tres ejemplos se compilarán sin problemas.Por otro lado:</target>
        </trans-unit>
        <trans-unit id="9677956077fa96efb5b69b5a1ae7ad4b38e3313b" translate="yes" xml:space="preserve">
          <source>All types are classified as one of these classes: 32bit word, 64bit word, 32bit float, 64bit float, pointer.</source>
          <target state="translated">Todos los tipos se clasifican como una de estas clases:Palabra de 32 bits,palabra de 64 bits,flotador de 32 bits,flotador de 64 bits,puntero.</target>
        </trans-unit>
        <trans-unit id="057ac441b399eb9586ae68f5c1eb9f47b4178362" translate="yes" xml:space="preserve">
          <source>All unbound identifiers are treated as typed holes, &lt;em&gt;whether or not they start with an underscore&lt;/em&gt;. The only difference is in the error message:</source>
          <target state="translated">Todos los identificadores no vinculados se tratan como huecos escritos, &lt;em&gt;ya sea que comiencen con un gui&amp;oacute;n bajo o no&lt;/em&gt; . La &amp;uacute;nica diferencia est&amp;aacute; en el mensaje de error:</target>
        </trans-unit>
        <trans-unit id="fd53184b2d10dc248ec6c9e2385390b9b65b470a" translate="yes" xml:space="preserve">
          <source>AllPhases</source>
          <target state="translated">AllPhases</target>
        </trans-unit>
        <trans-unit id="86266bd7ede6bd6ba8469405abe76d387f23e4e4" translate="yes" xml:space="preserve">
          <source>Allocate a block of memory and marshal a value into it (the combination of &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;foreign-storable#v:poke&quot;&gt;poke&lt;/a&gt;&lt;/code&gt;). The size of the area allocated is determined by the &lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt;&lt;/code&gt; method from the instance of &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; for the appropriate type.</source>
          <target state="translated">Asigne un bloque de memoria y calcule un valor en &amp;eacute;l (la combinaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;foreign-storable#v:poke&quot;&gt;poke&lt;/a&gt;&lt;/code&gt; ). El tama&amp;ntilde;o del &amp;aacute;rea asignada se determina mediante el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt;&lt;/code&gt; de la instancia de &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; para el tipo apropiado.</target>
        </trans-unit>
        <trans-unit id="bd8c715cc3db061ff535eb5c0524be9fac0fa2b8" translate="yes" xml:space="preserve">
          <source>Allocate a block of memory of the given number of bytes. The block of memory is sufficiently aligned for any of the basic foreign types that fits into a memory block of the allocated size.</source>
          <target state="translated">Asignar un bloque de memoria del número de bytes dado.El bloque de memoria está suficientemente alineado para cualquiera de los tipos extranjeros básicos que quepa en un bloque de memoria del tamaño asignado.</target>
        </trans-unit>
        <trans-unit id="48f50994b06d1d5671f516b19482a827582f3624" translate="yes" xml:space="preserve">
          <source>Allocate a block of memory that is sufficient to hold values of type &lt;code&gt;a&lt;/code&gt;. The size of the area allocated is determined by the &lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt;&lt;/code&gt; method from the instance of &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; for the appropriate type.</source>
          <target state="translated">Asigne un bloque de memoria que sea suficiente para contener valores de tipo &lt;code&gt;a&lt;/code&gt; . El tama&amp;ntilde;o del &amp;aacute;rea asignada se determina mediante el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt;&lt;/code&gt; de la instancia de &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; para el tipo apropiado.</target>
        </trans-unit>
        <trans-unit id="945eac0de6e1530ab37e60133056c31933f7e0c0" translate="yes" xml:space="preserve">
          <source>Allocate a fresh memory pool.</source>
          <target state="translated">Asignar un nuevo fondo de memoria.</target>
        </trans-unit>
        <trans-unit id="bf161f8d2ef1099082c0d5528c3c029bcc71adc8" translate="yes" xml:space="preserve">
          <source>Allocate a new buffer of the given size.</source>
          <target state="translated">Asignar un nuevo buffer del tamaño dado.</target>
        </trans-unit>
        <trans-unit id="797966dc728422a87321bee745962bf7b9b2105b" translate="yes" xml:space="preserve">
          <source>Allocate consecutive storage for a list of values in the given pool and marshal these values into it, terminating the end with the given marker.</source>
          <target state="translated">Asigne un almacenamiento consecutivo para una lista de valores en la piscina dada y organice estos valores en ella,terminando el final con el marcador dado.</target>
        </trans-unit>
        <trans-unit id="f5067d72f839d0ca801793aa2138ada31d2918c8" translate="yes" xml:space="preserve">
          <source>Allocate consecutive storage for a list of values in the given pool and marshal these values into it.</source>
          <target state="translated">Asigne un almacenamiento consecutivo para una lista de valores en la piscina dada y organice estos valores en ella.</target>
        </trans-unit>
        <trans-unit id="4f94873e14ae1ca0d376362647204a8cbf513639" translate="yes" xml:space="preserve">
          <source>Allocate some memory and return a &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; to it. The memory will be released automatically when the &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; is discarded.</source>
          <target state="translated">Asigne algo de memoria y devu&amp;eacute;lvale un &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; . La memoria se liberar&amp;aacute; autom&amp;aacute;ticamente cuando se descarte el &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adc10905359d2ad848031b0da8c89829871951ed" translate="yes" xml:space="preserve">
          <source>Allocate some memory and return a &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; to it. The memory will be released automatically when the &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; is discarded.</source>
          <target state="translated">Asigne algo de memoria y devu&amp;eacute;lvale un &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; . La memoria se liberar&amp;aacute; autom&amp;aacute;ticamente cuando se descarte el &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7a74b5000fcb22d46c63fd1403958268121cb0e" translate="yes" xml:space="preserve">
          <source>Allocate some memory and return a &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; to it. The memory will be released automatically when the &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; is discarded.</source>
          <target state="translated">Asigne algo de memoria y devu&amp;eacute;lvale un &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; . La memoria se liberar&amp;aacute; autom&amp;aacute;ticamente cuando se descarte el &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18d53cff546da86cca443415642d6098c6313605" translate="yes" xml:space="preserve">
          <source>Allocate space for storable type in the given pool. The size of the area allocated is determined by the &lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt;&lt;/code&gt; method from the instance of &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; for the appropriate type.</source>
          <target state="translated">Asignar espacio para el tipo almacenable en el grupo dado. El tama&amp;ntilde;o del &amp;aacute;rea asignada se determina mediante el m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;foreign-storable#v:sizeOf&quot;&gt;sizeOf&lt;/a&gt;&lt;/code&gt; de la instancia de &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; para el tipo apropiado.</target>
        </trans-unit>
        <trans-unit id="d0faf0f0921366d35115d853c768adb58bbc217c" translate="yes" xml:space="preserve">
          <source>Allocate storage and marshal a storable value wrapped into a &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Asigne almacenamiento y organice un valor almacenable envuelto en un &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85a29b1e9713abbc38e1d1724333822128176095" translate="yes" xml:space="preserve">
          <source>Allocate storage for a value in the given pool and marshal the value into this storage.</source>
          <target state="translated">Asignar el almacenamiento de un valor en la piscina dada y reunir el valor en este almacenamiento.</target>
        </trans-unit>
        <trans-unit id="a751dea2f39999181b1d506f2ded5ae31093a057" translate="yes" xml:space="preserve">
          <source>Allocate storage for the given number of elements of a storable type (like &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="translated">Asignar almacenamiento para el n&amp;uacute;mero dado de elementos de un tipo almacenable (como &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; , pero para varios elementos).</target>
        </trans-unit>
        <trans-unit id="b8bd206b599ec8ecb129ced0e29abca1ece50440" translate="yes" xml:space="preserve">
          <source>Allocate storage for the given number of elements of a storable type in the pool, but leave room for an extra element to signal the end of the array.</source>
          <target state="translated">Asignar el almacenamiento para el número dado de elementos de un tipo almacenable en la piscina,pero dejar espacio para un elemento adicional para señalar el final del conjunto.</target>
        </trans-unit>
        <trans-unit id="3c6502a8f26acdc89616720173572f6835f4395f" translate="yes" xml:space="preserve">
          <source>Allocate storage for the given number of elements of a storable type in the pool.</source>
          <target state="translated">Asignar el almacenamiento para el número dado de elementos de un tipo almacenable en la piscina.</target>
        </trans-unit>
        <trans-unit id="dfb0511a4ae80d311521dfea2fd5a589ea804b6a" translate="yes" xml:space="preserve">
          <source>Allocate the given number of bytes of storage in the pool.</source>
          <target state="translated">Asignar el número dado de bytes de almacenamiento en la piscina.</target>
        </trans-unit>
        <trans-unit id="74c31d0f81c37ba9952fac9ee09d5580d40e7044" translate="yes" xml:space="preserve">
          <source>Allocate the nursery from node-local memory.</source>
          <target state="translated">Asignar la guardería de la memoria nodal-local.</target>
        </trans-unit>
        <trans-unit id="489efe43727a84928b21db7c885a4647eec79612" translate="yes" xml:space="preserve">
          <source>Allocating managed memory</source>
          <target state="translated">Asignar la memoria administrada</target>
        </trans-unit>
        <trans-unit id="1b5c021aee14bea734803bc4262d3ac794a7f664" translate="yes" xml:space="preserve">
          <source>Allocation</source>
          <target state="translated">Allocation</target>
        </trans-unit>
        <trans-unit id="a371c9709f159b54fa290c4ef85af0337a88411e" translate="yes" xml:space="preserve">
          <source>Allocation accounting is accurate only to about 4Kbytes.</source>
          <target state="translated">La contabilidad de la asignación es exacta sólo hasta unos 4Kbytes.</target>
        </trans-unit>
        <trans-unit id="672bb521be73595aa99b0bcb407ba5c8a04ff65e" translate="yes" xml:space="preserve">
          <source>Allocation counter and limit</source>
          <target state="translated">Contador de asignación y límite</target>
        </trans-unit>
        <trans-unit id="6be4e23bfb8b2d85b4d8e47ee554151801bbfd62" translate="yes" xml:space="preserve">
          <source>Allocation counter and limits</source>
          <target state="translated">Contador de asignación y límites</target>
        </trans-unit>
        <trans-unit id="f863a7852bc37e781471622e1a75707f51a4b50b" translate="yes" xml:space="preserve">
          <source>Allocation counter and quota</source>
          <target state="translated">Contador de asignación y cuota</target>
        </trans-unit>
        <trans-unit id="6714f70908a1447bb325aa721caef6aa021fb67a" translate="yes" xml:space="preserve">
          <source>AllocationLimitExceeded</source>
          <target state="translated">AllocationLimitExceeded</target>
        </trans-unit>
        <trans-unit id="78fee5f8d19c1012e15c9cb754371db736ef10f0" translate="yes" xml:space="preserve">
          <source>AllocationStrategy</source>
          <target state="translated">AllocationStrategy</target>
        </trans-unit>
        <trans-unit id="1e0ddb13f2d7482f1d9d4401e43c0f7c159e3d27" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;#&lt;/code&gt; as a postfix modifier on identifiers.</source>
          <target state="translated">Permitir &lt;code&gt;#&lt;/code&gt; como modificador de sufijo en identificadores.</target>
        </trans-unit>
        <trans-unit id="487b72f96ce687ab0a0c0c91a3747ce245eb86bd" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;do&lt;/code&gt; blocks and other constructs as function arguments.</source>
          <target state="translated">Permita bloques &lt;code&gt;do&lt;/code&gt; y otras construcciones como argumentos de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f3d4d6a5ae1b8e8556bffe5a2051a8a7eeb9bcd1" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;do&lt;/code&gt; expressions, lambda expressions, etc. to be directly used as a function argument.</source>
          <target state="translated">Permitir &lt;code&gt;do&lt;/code&gt; expresiones do , lambda, etc. se utilicen directamente como argumento de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="57b2197ae6b5696247d5182d09e77a732fad1d01" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;forall&lt;/code&gt; quantifiers in constraints.</source>
          <target state="translated">Permiten &lt;code&gt;forall&lt;/code&gt; cuantificadores en limitaciones.</target>
        </trans-unit>
        <trans-unit id="48fb284220c7e71266222e272e89501b5da2de4e" translate="yes" xml:space="preserve">
          <source>Allow all superclass constraints, including those that may result in non-termination of the typechecker.</source>
          <target state="translated">Permitir todas las restricciones de superclase,incluidas las que pueden dar lugar a la no terminación de la verificación de tipo.</target>
        </trans-unit>
        <trans-unit id="80eb231dd3933ab2efd3d5dfa5c44bae12bc9d69" translate="yes" xml:space="preserve">
          <source>Allow an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed an action of type &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt;&lt;code&gt;s&lt;/code&gt;&lt;code&gt;a&lt;/code&gt;, the action will only be performed when the value of &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">Permita que un c&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; se difiera perezosamente. Cuando se pasa una acci&amp;oacute;n de tipo &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; , la acci&amp;oacute;n solo se realizar&amp;aacute; cuando se demande el valor de &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a2ecf66e99906eb20d2eca046ddaa3ae040e446" translate="yes" xml:space="preserve">
          <source>Allow an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed an action of type &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt;&lt;code&gt;s&lt;/code&gt;&lt;code&gt;a&lt;/code&gt;, the action will only be performed when the value of &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1750d76ce07b95cdb172cc776a34f360d5d4cd29" translate="yes" xml:space="preserve">
          <source>Allow asynchronous exceptions to be raised even inside &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, making the operation interruptible (see the discussion of &quot;Interruptible operations&quot; in &lt;code&gt;&lt;a href=&quot;control#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Permita que se generen excepciones asincr&amp;oacute;nicas incluso dentro de la &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; , haciendo que la operaci&amp;oacute;n sea interrumpible (consulte la discusi&amp;oacute;n sobre &quot;Operaciones interrumpibles&quot; en &lt;code&gt;&lt;a href=&quot;control#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="780a200a64ac9433b47b1da40e2581b24c295f40" translate="yes" xml:space="preserve">
          <source>Allow asynchronous exceptions to be raised even inside &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;, making the operation interruptible (see the discussion of &quot;Interruptible operations&quot; in &lt;code&gt;&lt;a href=&quot;control#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Permita que se generen excepciones asincr&amp;oacute;nicas incluso dentro de la &lt;code&gt;&lt;a href=&quot;ghc-io#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; , haciendo que la operaci&amp;oacute;n sea interrumpible (consulte la discusi&amp;oacute;n sobre &quot;Operaciones interrumpibles&quot; en &lt;code&gt;&lt;a href=&quot;control#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8baf535a4dbc587a727d88078ccbc03106a8d4ba" translate="yes" xml:space="preserve">
          <source>Allow automatic deriving of instances for the &lt;code&gt;Foldable&lt;/code&gt; typeclass.</source>
          <target state="translated">Permitir la derivaci&amp;oacute;n autom&amp;aacute;tica de instancias para la clase de tipos &lt;code&gt;Foldable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f96512299d9639cbf383164f1db522bd120f323" translate="yes" xml:space="preserve">
          <source>Allow automatic deriving of instances for the &lt;code&gt;Functor&lt;/code&gt; typeclass.</source>
          <target state="translated">Permitir la derivaci&amp;oacute;n autom&amp;aacute;tica de instancias para la clase de tipos &lt;code&gt;Functor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb4259796e51e2d950e57edd562f9cf8982dd300" translate="yes" xml:space="preserve">
          <source>Allow automatic deriving of instances for the &lt;code&gt;Generic&lt;/code&gt; typeclass.</source>
          <target state="translated">Permitir la derivaci&amp;oacute;n autom&amp;aacute;tica de instancias para la clase de tipos &lt;code&gt;Generic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7632af3ddef7069071f3bf8a7c397be4ca59fcd" translate="yes" xml:space="preserve">
          <source>Allow automatic deriving of instances for the &lt;code&gt;Traversable&lt;/code&gt; typeclass.</source>
          <target state="translated">Permitir la derivaci&amp;oacute;n autom&amp;aacute;tica de instancias para la clase de tipos &lt;code&gt;Traversable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="add95d26da022101d791b89213499080da94e3a9" translate="yes" xml:space="preserve">
          <source>Allow constant folding in case expressions that scrutinise some primops: For example,</source>
          <target state="translated">Permita el plegado constante en caso de expresiones que escudriñen algunos primops:Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="934cc159b35ac28d99ae334c8a54aa36d7a7c39a" translate="yes" xml:space="preserve">
          <source>Allow constraints to quantify over types.</source>
          <target state="translated">Permita que las restricciones se cuantifiquen sobre los tipos.</target>
        </trans-unit>
        <trans-unit id="2ce51b30b9da5f59ff139ceec6637a831ee564b6" translate="yes" xml:space="preserve">
          <source>Allow contexts on &lt;code&gt;data&lt;/code&gt; types.</source>
          <target state="translated">Permitir contextos en tipos de &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eab095a3e387bb8b63300500e130636d41df289c" translate="yes" xml:space="preserve">
          <source>Allow defaulting to take place for more than just numeric classes.</source>
          <target state="translated">Permitir que el incumplimiento tenga lugar para algo más que clases numéricas.</target>
        </trans-unit>
        <trans-unit id="926119bf4ff3119fe5a37dc0cb8f3089e82d4ec6" translate="yes" xml:space="preserve">
          <source>Allow definition of empty &lt;code&gt;data&lt;/code&gt; types.</source>
          <target state="translated">Permitir la definici&amp;oacute;n de tipos de &lt;code&gt;data&lt;/code&gt; vac&amp;iacute;os .</target>
        </trans-unit>
        <trans-unit id="36885bc6f326d61d2bc2d18c723dc0b2ce083841" translate="yes" xml:space="preserve">
          <source>Allow definition of functions expecting implicit parameters.</source>
          <target state="translated">Permitir la definición de funciones esperando parámetros implícitos.</target>
        </trans-unit>
        <trans-unit id="b8fdd0e51a265a2c590d00cb6abc3adad2684d61" translate="yes" xml:space="preserve">
          <source>Allow definition of record types with identically-named fields.</source>
          <target state="translated">Permitir la definición de tipos de registro con campos de nombre idéntico.</target>
        </trans-unit>
        <trans-unit id="726294c3f294ef13dd773189e75ae54c6d6e3bbd" translate="yes" xml:space="preserve">
          <source>Allow definition of type class instances for type synonyms.</source>
          <target state="translated">Permitir la definición de instancias de clase de tipo para los sinónimos de tipo.</target>
        </trans-unit>
        <trans-unit id="7f2a1ee40ed67cae653a504bd6f3545fe705b983" translate="yes" xml:space="preserve">
          <source>Allow definition of type class instances with arbitrary nested types in the instance head.</source>
          <target state="translated">Permitir la definición de instancias de clase de tipo con tipos anidados arbitrariamente en la cabeza de la instancia.</target>
        </trans-unit>
        <trans-unit id="86966622a20e13b1ac31de8f45367c263a8977cf" translate="yes" xml:space="preserve">
          <source>Allow deriving instances of standard type classes for empty data types.</source>
          <target state="translated">Permitir la derivación de instancias de clases de tipo estándar para tipos de datos vacíos.</target>
        </trans-unit>
        <trans-unit id="60943beab02466a2c26e0ab7a51efa95c6e2a7fe" translate="yes" xml:space="preserve">
          <source>Allow empty case alternatives.</source>
          <target state="translated">Permita alternativas de cajas vacías.</target>
        </trans-unit>
        <trans-unit id="025c491c399c735d766d5a9892dd9e6ee33b7e08" translate="yes" xml:space="preserve">
          <source>Allow empty case expressions.</source>
          <target state="translated">Permita expresiones con mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="6c84f72d8d262e69d1f9faa234eff6fdf37f2369" translate="yes" xml:space="preserve">
          <source>Allow existentially quantified type variables in types.</source>
          <target state="translated">Permitir variables de tipo existencialmente cuantificadas en los tipos.</target>
        </trans-unit>
        <trans-unit id="1ab319c3adc39803249aca0e24d447b1fb428579" translate="yes" xml:space="preserve">
          <source>Allow explicit kind signatures on type variables.</source>
          <target state="translated">Permitir firmas de tipo explícitas en las variables de tipo.</target>
        </trans-unit>
        <trans-unit id="17fa756b705f1fa52e127048ab38d27914f60aba" translate="yes" xml:space="preserve">
          <source>Allow functional dependency annotations on type families. This allows one to define injective type families.</source>
          <target state="translated">Permitir las anotaciones de dependencia funcional en las familias de tipos.Esto permite definir familias de tipos inyectables.</target>
        </trans-unit>
        <trans-unit id="6eb8b184e2bcabb5b3fa790e938afe5ac1becfb4" translate="yes" xml:space="preserve">
          <source>Allow impredicative polymorphic types.</source>
          <target state="translated">Permitir los tipos polimórficos impredicativos.</target>
        </trans-unit>
        <trans-unit id="2433b80c1b9d57252941872fdc1b781f2a3699e6" translate="yes" xml:space="preserve">
          <source>Allow kind polymorphic types.</source>
          <target state="translated">Permitir los tipos polimórficos.</target>
        </trans-unit>
        <trans-unit id="cdff7073df11b6e1c05a0eceb6acaa80701d67af" translate="yes" xml:space="preserve">
          <source>Allow multiple &lt;code&gt;deriving&lt;/code&gt;, each optionally qualified with a &lt;em&gt;strategy&lt;/em&gt;.</source>
          <target state="translated">Permita m&amp;uacute;ltiples &lt;code&gt;deriving&lt;/code&gt; , cada una opcionalmente calificada con una &lt;em&gt;estrategia&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="76ba8a634a12bd3f74b9359ac050a7de5e913037" translate="yes" xml:space="preserve">
          <source>Allow naming of wildcards (e.g. &lt;code&gt;_x&lt;/code&gt;) in type signatures.</source>
          <target state="translated">Permitir nombrar comodines (por ejemplo, &lt;code&gt;_x&lt;/code&gt; ) en las firmas de tipo.</target>
        </trans-unit>
        <trans-unit id="70463e61ddc2770c5bfd923aebb592b3ba442123" translate="yes" xml:space="preserve">
          <source>Allow nested contexts to be at the same indentation level as its enclosing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24b90b3b696d68b4a53058736b07d9593258864" translate="yes" xml:space="preserve">
          <source>Allow other process to set Window to Foreground by using &lt;code&gt;&lt;a href=&quot;graphics-win32-window-foregroundwindow#v:setForegroundWindow&quot;&gt;setForegroundWindow&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Permita que otro proceso establezca la ventana en primer plano mediante la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;graphics-win32-window-foregroundwindow#v:setForegroundWindow&quot;&gt;setForegroundWindow&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3466dbeb7cfb661d1b3d5d9ae06ef44c39d689be" translate="yes" xml:space="preserve">
          <source>Allow parallel list comprehension syntax.</source>
          <target state="translated">Permite una sintaxis de comprensión de listas paralelas.</target>
        </trans-unit>
        <trans-unit id="3ed92111f1838c96b6c033cdfe95611654ed8c96" translate="yes" xml:space="preserve">
          <source>Allow promotion of data types to kind level.</source>
          <target state="translated">Permitir la promoción de los tipos de datos a nivel de tipo.</target>
        </trans-unit>
        <trans-unit id="260dca80fe27608e688cf5033c080a2cfba5b239" translate="yes" xml:space="preserve">
          <source>Allow role annotation syntax.</source>
          <target state="translated">Permitir la sintaxis de anotación de funciones.</target>
        </trans-unit>
        <trans-unit id="87a0f4cf411c10836ab0efbb3303960a1c45e4a3" translate="yes" xml:space="preserve">
          <source>Allow the compiler to apply rewrite rules to the source program.</source>
          <target state="translated">Permita que el compilador aplique reglas de reescritura al programa fuente.</target>
        </trans-unit>
        <trans-unit id="6b09bb1ac28b5b0c583dc8ebf98fba2849116608" translate="yes" xml:space="preserve">
          <source>Allow the compiler to automatically choose between identically-named record selectors based on type (if the choice is unambiguous).</source>
          <target state="translated">Permitir que el compilador elija automáticamente entre selectores de registro de nombre idéntico según el tipo (si la elección es inequívoca).</target>
        </trans-unit>
        <trans-unit id="83c47b742b143b98b73e92a9a5de1c9e32c641ec" translate="yes" xml:space="preserve">
          <source>Allow the definition of pattern synonyms.</source>
          <target state="translated">Permita la definición de sinónimos de patrones.</target>
        </trans-unit>
        <trans-unit id="fe2a8646e41c100c7ad5651319a6e065e997f85a" translate="yes" xml:space="preserve">
          <source>Allow the definition of typeclasses with more than one parameter.</source>
          <target state="translated">Permite la definición de clases tipo con más de un parámetro.</target>
        </trans-unit>
        <trans-unit id="d185ff37afe97c8a5c9c099b699c25563f19c7b7" translate="yes" xml:space="preserve">
          <source>Allow the result of an &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be used (lazily) inside the computation.</source>
          <target state="translated">Permita que el resultado de un c&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; se utilice (perezosamente) dentro del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="ce75fe6b08dfb2e2c5aeb7a05bc37771108792fd" translate="yes" xml:space="preserve">
          <source>Allow the result of an &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be used (lazily) inside the computation. Note that if &lt;code&gt;f&lt;/code&gt; is strict, &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt;.</source>
          <target state="translated">Permita que el resultado de un c&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; se utilice (perezosamente) dentro del c&amp;aacute;lculo. Tenga en cuenta que si &lt;code&gt;f&lt;/code&gt; es estricta, &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71db9c7ef93f554ac579b40d6689938982ec9dda" translate="yes" xml:space="preserve">
          <source>Allow the result of an &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be used (lazily) inside the computation. Note that if &lt;code&gt;f&lt;/code&gt; is strict, &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt;.</source>
          <target state="translated">Permita que el resultado de un c&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; se utilice (perezosamente) dentro del c&amp;aacute;lculo. Tenga en cuenta que si &lt;code&gt;f&lt;/code&gt; es estricta, &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:fixST&quot;&gt;fixST&lt;/a&gt; f = _|_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67e53378677db7eb448650e4848cf3af89d1c7b5" translate="yes" xml:space="preserve">
          <source>Allow the result of an &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be used (lazily) inside the computation.</source>
          <target state="translated">Permita que el resultado de un c&amp;aacute;lculo &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; se utilice (perezosamente) dentro del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="a25778334adcda643e0a1777a4a1308851238bc9" translate="yes" xml:space="preserve">
          <source>Allow the use and definition of types with operator names.</source>
          <target state="translated">Permitir el uso y la definición de tipos con nombres de operadores.</target>
        </trans-unit>
        <trans-unit id="ffa6e2a8241cb1d89e5bfc36b1a5b18d2b5d635a" translate="yes" xml:space="preserve">
          <source>Allow the use of GADT syntax in data type definitions (but not GADTs themselves; for this see &lt;a href=&quot;#extension-GADTs&quot;&gt;&lt;code&gt;GADTs&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">Permitir el uso de la sintaxis de GADT en las definiciones de tipos de datos (pero no en los propios GADT; para esto, consulte &lt;a href=&quot;#extension-GADTs&quot;&gt; &lt;code&gt;GADTs&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="59b4b3836b0ad08f877b34af9e4fa8b8a8d4a012" translate="yes" xml:space="preserve">
          <source>Allow the use of binary notation in integer literals.</source>
          <target state="translated">Permitir el uso de la notación binaria en los literales enteros.</target>
        </trans-unit>
        <trans-unit id="efcd29c7bce33303e5d32e6ccbc57335b0acff65" translate="yes" xml:space="preserve">
          <source>Allow the use of complex constraints in class declaration contexts.</source>
          <target state="translated">Permitir el uso de restricciones complejas en contextos de declaración de clase.</target>
        </trans-unit>
        <trans-unit id="702e6903368de34c7b00d4d1faab5cc980b6ff20" translate="yes" xml:space="preserve">
          <source>Allow the use of floating-point literal syntax for integral types.</source>
          <target state="translated">Permitir el uso de la sintaxis literal de punto flotante para los tipos integrales.</target>
        </trans-unit>
        <trans-unit id="2f2df53ac2aa65699d533256ce56f3e679075bdf" translate="yes" xml:space="preserve">
          <source>Allow the use of lambda-case syntax.</source>
          <target state="translated">Permita el uso de la sintaxis de la caja lambda.</target>
        </trans-unit>
        <trans-unit id="76a7a3b4a067b229370029d02bfb2c0e97e8bc7f" translate="yes" xml:space="preserve">
          <source>Allow the use of multi-way-&lt;code&gt;if&lt;/code&gt; syntax.</source>
          <target state="translated">Permitir el uso de sintaxis &lt;code&gt;if&lt;/code&gt; multidireccional .</target>
        </trans-unit>
        <trans-unit id="4acbbed0487deb8857b5f7e688836829f142c6f1" translate="yes" xml:space="preserve">
          <source>Allow the use of package-qualified &lt;code&gt;import&lt;/code&gt; syntax.</source>
          <target state="translated">Permitir el uso de sintaxis de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n calificada por paquetes .</target>
        </trans-unit>
        <trans-unit id="eea333a314c924e9102b9616473c6ae74d1b2886" translate="yes" xml:space="preserve">
          <source>Allow the use of post-fix operators</source>
          <target state="translated">Permitir el uso de operadores post-fijación</target>
        </trans-unit>
        <trans-unit id="adb08d203af69b5b4cd4dd423b7318efffc8b20f" translate="yes" xml:space="preserve">
          <source>Allow the use of recursive &lt;code&gt;do&lt;/code&gt; notation.</source>
          <target state="translated">Permitir el uso de notaci&amp;oacute;n &lt;code&gt;do&lt;/code&gt; recursiva .</target>
        </trans-unit>
        <trans-unit id="b0029babcf620375a925cb0f309e07f9eef805a4" translate="yes" xml:space="preserve">
          <source>Allow the use of stand-alone &lt;code&gt;deriving&lt;/code&gt; declarations.</source>
          <target state="translated">Permitir el uso de declaraciones &lt;code&gt;deriving&lt;/code&gt; independientes .</target>
        </trans-unit>
        <trans-unit id="6ffc26d958cddfc3a794521475014c76922cd906" translate="yes" xml:space="preserve">
          <source>Allow the use of standalone kind signatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86686087092ab757a3c44071e8cdb958a2e740ab" translate="yes" xml:space="preserve">
          <source>Allow the use of tuple section syntax</source>
          <target state="translated">Permitir el uso de la sintaxis de la sección tupla</target>
        </trans-unit>
        <trans-unit id="f62761563b5f41d61ca0ecbb5ad968019d4409d7" translate="yes" xml:space="preserve">
          <source>Allow the use of type application syntax.</source>
          <target state="translated">Permitir el uso de la sintaxis de la aplicación de tipos.</target>
        </trans-unit>
        <trans-unit id="5675777ef0f98250d6e550ff440d842beeff404c" translate="yes" xml:space="preserve">
          <source>Allow the use of underscores in numeric literals.</source>
          <target state="translated">Permitir el uso de subrayados en los literales numéricos.</target>
        </trans-unit>
        <trans-unit id="eee4b36605984e0b63f2119e25dc26be8151e070" translate="yes" xml:space="preserve">
          <source>Allow the use of wildcards in record construction and pattern matching.</source>
          <target state="translated">Permitir el uso de comodines en la construcción de registros y en la comparación de patrones.</target>
        </trans-unit>
        <trans-unit id="1a6687c47ecd5f08e5cbe5a2d433f777d1b2ba65" translate="yes" xml:space="preserve">
          <source>Allow the user to write ambiguous types, and the type inference engine to infer them.</source>
          <target state="translated">Permitir al usuario escribir tipos ambiguos y al motor de inferencia de tipos inferirlos.</target>
        </trans-unit>
        <trans-unit id="86a368ced00c7e3c3b92de7fbdde36c04126fbd7" translate="yes" xml:space="preserve">
          <source>Allow turning known into unknown calls while performing late lambda lifting.</source>
          <target state="translated">Permite convertir las llamadas conocidas en desconocidas mientras se realiza el levantamiento de lambda tardío.</target>
        </trans-unit>
        <trans-unit id="3cbe6d10b7f1a1883fd95b6bb21627c693dfd0bb" translate="yes" xml:space="preserve">
          <source>Allow turning known into unknown calls while performing late lambda lifting. This is deemed non-beneficial, so it&amp;rsquo;s off by default.</source>
          <target state="translated">Permita convertir llamadas conocidas en desconocidas mientras realiza un levantamiento lambda tard&amp;iacute;o. Esto se considera no beneficioso, por lo que est&amp;aacute; desactivado de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="274c2026d3d9723dc92cd98f7d9326abfd5773f8" translate="yes" xml:space="preserve">
          <source>Allow type signatures for members in instance definitions.</source>
          <target state="translated">Permitir firmas de tipo para los miembros en definiciones de ejemplo.</target>
        </trans-unit>
        <trans-unit id="da5bb70ccf69edfc067bb0ecac09b8b7fa946e39" translate="yes" xml:space="preserve">
          <source>Allow type signatures which appear that they would result in an unusable binding.</source>
          <target state="translated">Permitir firmas de tipo que parezcan que darían lugar a una encuadernación inutilizable.</target>
        </trans-unit>
        <trans-unit id="7f9ebd8bc90d2c97f8f8af6055daef8a66d58b11" translate="yes" xml:space="preserve">
          <source>Allow types of arbitrary rank.</source>
          <target state="translated">Permitir tipos de rangos arbitrarios.</target>
        </trans-unit>
        <trans-unit id="72c06cac8ca4e2cc8c6349ed8e7e17158f9a5bef" translate="yes" xml:space="preserve">
          <source>Allow types of kind &lt;code&gt;Constraint&lt;/code&gt; to be used in contexts.</source>
          <target state="translated">Permitir que se utilicen tipos de &lt;code&gt;Constraint&lt;/code&gt; de tipo en contextos.</target>
        </trans-unit>
        <trans-unit id="a7e55900edd38daa3e986afd90affccc2a45f441" translate="yes" xml:space="preserve">
          <source>Allow use and definition of indexed type and data families.</source>
          <target state="translated">Permitir el uso y la definición de tipos y familias de datos indexados.</target>
        </trans-unit>
        <trans-unit id="6e40b71ea659cf26b3075e17e0c63e65704ae662" translate="yes" xml:space="preserve">
          <source>Allow use of &lt;code&gt;Applicative&lt;/code&gt;&lt;code&gt;do&lt;/code&gt; notation.</source>
          <target state="translated">Permitir el uso de &lt;code&gt;Applicative&lt;/code&gt; &lt;code&gt;do&lt;/code&gt; notaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9bed755b4d0a566202ee360d2e8141648215487c" translate="yes" xml:space="preserve">
          <source>Allow use of Generalised Algebraic Data Types (GADTs).</source>
          <target state="translated">Permitir el uso de los Tipos de Datos Algebraicos Generalizados (GADT).</target>
        </trans-unit>
        <trans-unit id="b42306fa5c185a7862be6bb52526be30dbac6894" translate="yes" xml:space="preserve">
          <source>Allow use of any typeclass in &lt;code&gt;deriving&lt;/code&gt; clauses.</source>
          <target state="translated">Permitir el uso de cualquier clase de tipos en cl&amp;aacute;usulas &lt;code&gt;deriving&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a457c798a55fb26f0dd47dc4032be39a59a6341" translate="yes" xml:space="preserve">
          <source>Allow use of bang pattern syntax.</source>
          <target state="translated">Permitir el uso de la sintaxis del patrón de explosión.</target>
        </trans-unit>
        <trans-unit id="c23bf1d512a631794fb404638276aacd4f32df67" translate="yes" xml:space="preserve">
          <source>Allow use of functional dependencies in class declarations.</source>
          <target state="translated">Permitir el uso de dependencias funcionales en las declaraciones de clase.</target>
        </trans-unit>
        <trans-unit id="2d060a642a2f52d17e449b4e275108c16d94164a" translate="yes" xml:space="preserve">
          <source>Allow use of generalised list (SQL-like) comprehension syntax. This introduces the &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;by&lt;/code&gt;, and &lt;code&gt;using&lt;/code&gt; keywords.</source>
          <target state="translated">Permitir el uso de sintaxis de comprensi&amp;oacute;n de lista generalizada (similar a SQL). Esto presenta al &lt;code&gt;group&lt;/code&gt; , &lt;code&gt;by&lt;/code&gt; y &lt;code&gt;using&lt;/code&gt; palabras clave.</target>
        </trans-unit>
        <trans-unit id="6416480874a524bb16d12732baf7a1a42b48283b" translate="yes" xml:space="preserve">
          <source>Allow use of record puns.</source>
          <target state="translated">Permitir el uso de juegos de palabras de registro.</target>
        </trans-unit>
        <trans-unit id="62089014435f225ba326e9329061e5e4a53f0bb5" translate="yes" xml:space="preserve">
          <source>Allow use of static pointer syntax.</source>
          <target state="translated">Permitir el uso de la sintaxis de los punteros estáticos.</target>
        </trans-unit>
        <trans-unit id="8f3abc6ee81a5c4909fa0b404e4d5cc274c88e29" translate="yes" xml:space="preserve">
          <source>Allow use of the &lt;code&gt;forall&lt;/code&gt; keyword in places where universal quantification is implicit.</source>
          <target state="translated">Permitir el uso de la palabra clave &lt;code&gt;forall&lt;/code&gt; en lugares donde la cuantificaci&amp;oacute;n universal est&amp;aacute; impl&amp;iacute;cita.</target>
        </trans-unit>
        <trans-unit id="f830fe1b81f5dd2916e893293dc917cf10ac1a5f" translate="yes" xml:space="preserve">
          <source>Allow use of the Haskell foreign function interface.</source>
          <target state="translated">Permitir el uso de la interfaz de funciones externas de Haskell.</target>
        </trans-unit>
        <trans-unit id="d2ec09e108221e720d271bb74180facf527b037f" translate="yes" xml:space="preserve">
          <source>Allow use of view pattern syntax.</source>
          <target state="translated">Permitir el uso de la sintaxis del patrón de visión.</target>
        </trans-unit>
        <trans-unit id="d8d0040f1860796d1680868b0c0c97a27e733ecd" translate="yes" xml:space="preserve">
          <source>Allow worker-wrapper to convert a function closure into a thunk if the function does not use any of its arguments. Off by default.</source>
          <target state="translated">Permitir que el trabajador-envoltura convierta el cierre de una función en un pensamiento si la función no utiliza ninguno de sus argumentos.Desactivado por defecto.</target>
        </trans-unit>
        <trans-unit id="0bf61d77eeec666128b4e93e100c46e62621a2b9" translate="yes" xml:space="preserve">
          <source>Allow writing floating point literals using hexadecimal notation.</source>
          <target state="translated">Permitir la escritura de literales en punto flotante usando la notación hexadecimal.</target>
        </trans-unit>
        <trans-unit id="44b76e5dbcac70fa19335f3f6dd1767846c2ae45" translate="yes" xml:space="preserve">
          <source>AllowAmbiguousTypes</source>
          <target state="translated">AllowAmbiguousTypes</target>
        </trans-unit>
        <trans-unit id="f568f29db39d6daee9c168b5db2b40a0f82b6e78" translate="yes" xml:space="preserve">
          <source>Allows the definition of default method signatures in class definitions.</source>
          <target state="translated">Permite definir las firmas de los métodos por defecto en las definiciones de las clases.</target>
        </trans-unit>
        <trans-unit id="39a8bda3c1c817a2744fbe48c428dd732e29b994" translate="yes" xml:space="preserve">
          <source>Allows the definition of further constraints on individual class methods.</source>
          <target state="translated">Permite definir nuevas limitaciones para los métodos de clases individuales.</target>
        </trans-unit>
        <trans-unit id="795662519537fb732dd1a2476e8a6962c0c19569" translate="yes" xml:space="preserve">
          <source>Allows the use definition of type classes with no parameters. This extension has been replaced by &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt;&lt;code&gt;MultiParamTypeClasses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Permite la definici&amp;oacute;n de uso de clases de tipos sin par&amp;aacute;metros. Esta extensi&amp;oacute;n ha sido reemplazada por &lt;a href=&quot;#extension-MultiParamTypeClasses&quot;&gt; &lt;code&gt;MultiParamTypeClasses&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2018e3c7850e7133b41fccedea329900b1f4d76e" translate="yes" xml:space="preserve">
          <source>Alone</source>
          <target state="translated">Alone</target>
        </trans-unit>
        <trans-unit id="ac58ae5ab26ea9f98150373e68429bafad7728e6" translate="yes" xml:space="preserve">
          <source>Along with traverseMaybeMissing, witnesses the isomorphism between &lt;code&gt;WhenMissing f k x y&lt;/code&gt; and &lt;code&gt;k -&amp;gt; x -&amp;gt; f (Maybe y)&lt;/code&gt;.</source>
          <target state="translated">Junto con traverseMaybeMissing, es testigo del isomorfismo entre &lt;code&gt;WhenMissing f k x y&lt;/code&gt; y &lt;code&gt;k -&amp;gt; x -&amp;gt; f (Maybe y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7eaf4e6487782093547b308bb962d31222393a9b" translate="yes" xml:space="preserve">
          <source>Along with traverseMaybeMissing, witnesses the isomorphism between &lt;code&gt;WhenMissing f x y&lt;/code&gt; and &lt;code&gt;Key -&amp;gt; x -&amp;gt; f (Maybe y)&lt;/code&gt;.</source>
          <target state="translated">Junto con traverseMaybeMissing, es testigo del isomorfismo entre &lt;code&gt;WhenMissing f x y&lt;/code&gt; y &lt;code&gt;Key -&amp;gt; x -&amp;gt; f (Maybe y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fceb538d6e1da23d3f3babb9155dbc45ee7239e4" translate="yes" xml:space="preserve">
          <source>Along with zipWithMaybeAMatched, witnesses the isomorphism between &lt;code&gt;WhenMatched f k x y z&lt;/code&gt; and &lt;code&gt;k -&amp;gt; x -&amp;gt; y -&amp;gt; f (Maybe z)&lt;/code&gt;.</source>
          <target state="translated">Junto con zipWithMaybeAMatched, es testigo del isomorfismo entre &lt;code&gt;WhenMatched f k x y z&lt;/code&gt; y &lt;code&gt;k -&amp;gt; x -&amp;gt; y -&amp;gt; f (Maybe z)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88e74dd86e7cd0c0ee3739f6c7a769d3ff6c7c44" translate="yes" xml:space="preserve">
          <source>Along with zipWithMaybeAMatched, witnesses the isomorphism between &lt;code&gt;WhenMatched f x y z&lt;/code&gt; and &lt;code&gt;Key -&amp;gt; x -&amp;gt; y -&amp;gt; f (Maybe z)&lt;/code&gt;.</source>
          <target state="translated">Junto con zipWithMaybeAMatched, es testigo del isomorfismo entre &lt;code&gt;WhenMatched f x y z&lt;/code&gt; y &lt;code&gt;Key -&amp;gt; x -&amp;gt; y -&amp;gt; f (Maybe z)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19ad299afbc240cf0075ef975ed7558787fe489f" translate="yes" xml:space="preserve">
          <source>AlreadyExists</source>
          <target state="translated">AlreadyExists</target>
        </trans-unit>
        <trans-unit id="630df194c5b10abfa95d9d050a3cb36c24a133d2" translate="yes" xml:space="preserve">
          <source>Also</source>
          <target state="translated">Also</target>
        </trans-unit>
        <trans-unit id="50722218b035a878cd9ffc30a73ebfebc7a35f8b" translate="yes" xml:space="preserve">
          <source>Also causes a warning to be emitted when a module is re-exported, but that module exports nothing.</source>
          <target state="translated">También hace que se emita una advertencia cuando se reexporta un módulo,pero ese módulo no exporta nada.</target>
        </trans-unit>
        <trans-unit id="746c9d1259ee19f74bffdc1d68a458f59b53388d" translate="yes" xml:space="preserve">
          <source>Also for newtypes, &lt;code&gt;Functor&lt;/code&gt;, &lt;code&gt;Foldable&lt;/code&gt; and &lt;code&gt;Enum&lt;/code&gt; are derived using the &lt;code&gt;newtype&lt;/code&gt; strategy if &lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt; is enabled and the derivation succeeds.</source>
          <target state="translated">Tambi&amp;eacute;n para newtypes, &lt;code&gt;Functor&lt;/code&gt; , &lt;code&gt;Foldable&lt;/code&gt; y &lt;code&gt;Enum&lt;/code&gt; se derivan usando la estrategia &lt;code&gt;newtype&lt;/code&gt; si &lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt; est&amp;aacute; habilitado y la derivaci&amp;oacute;n es exitosa.</target>
        </trans-unit>
        <trans-unit id="9b5456c8967e8ed475ed23a6be13064c4931fe49" translate="yes" xml:space="preserve">
          <source>Also in the same way as &lt;a href=&quot;#data-instance-declarations&quot;&gt;Data instance declarations&lt;/a&gt;, when &lt;a href=&quot;#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt; is enabled, type and kind variables can be explicilty bound in a type instance declaration.</source>
          <target state="translated">Tambi&amp;eacute;n de la misma manera que las &lt;a href=&quot;#data-instance-declarations&quot;&gt;declaraciones de instancia de datos&lt;/a&gt; , cuando &lt;a href=&quot;#extension-ExplicitForAll&quot;&gt; &lt;code&gt;ExplicitForAll&lt;/code&gt; &lt;/a&gt; est&amp;aacute; habilitado, las variables de tipo y tipo pueden vincularse expl&amp;iacute;citamente en una declaraci&amp;oacute;n de instancia de tipo.</target>
        </trans-unit>
        <trans-unit id="6cdbfaf0e12c5c669a436bbe3f3e6d1b8921e00e" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="92256f9554b50ce0b2fea7c43d4cb8cc3cb75d44" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="691fd7629064f3b051f676bcbfa6149c61d9b342" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="406dc1c18625f274ff0dc94719e4b6be8d808a02" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="810701a878272ce093eceec04b908e8284d8a9c5" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="8d40d8b2532580731c8434c5f67b1078551988ae" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="dd8ee350e8fa89eeaea33735d33ccaffdcefe56b" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="e30beaf60ec387590381b5355c5af1eb18030345" translate="yes" xml:space="preserve">
          <source>Also note that &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance does not satisfy substitutivity:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no satisface la sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="aab6ba61f08a0ca3c95484013fb136c6e751322c" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="f4786dd3fd2bcdff58d3b26007350033e063a192" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="3e16b7f498e9a6b4b83f2652ce5ef38935a94752" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="3e9f33b522d825dd8a332d37d794d47c3815cced" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="40cdf5e6225f275daf21fe333e66b5c010a69778" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="b45d0d39ada80fe3208a871ffe74aeb25503276e" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="1f433875b8e4b77573f0f23895a49894977730bb" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="c6e30397e70af87af894b6d2572b73af0484f5e2" translate="yes" xml:space="preserve">
          <source>Also note that due to the presence of -0, &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; instance doesn't have an additive identity</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a la presencia de -0, la instancia &lt;code&gt;&lt;a href=&quot;prelude#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; no tiene una identidad aditiva</target>
        </trans-unit>
        <trans-unit id="b4cc23b0b0763553e0311dddd73a34a9e4dee8d5" translate="yes" xml:space="preserve">
          <source>Also note that if you want an efficient left-fold, you probably want to use &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;. The reason for this is that latter does not force the &quot;inner&quot; results (e.g. &lt;code&gt;z `f` x1&lt;/code&gt; in the above example) before applying them to the operator (e.g. to &lt;code&gt;(`f` x2)&lt;/code&gt;). This results in a thunk chain &lt;code&gt;O(n)&lt;/code&gt; elements long, which then must be evaluated from the outside-in.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que si desea un doblez a la izquierda eficiente, probablemente quiera usar &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; lugar de &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; . La raz&amp;oacute;n de esto es que este &amp;uacute;ltimo no fuerza los resultados &quot;internos&quot; (por ejemplo, &lt;code&gt;z `f` x1&lt;/code&gt; en el ejemplo anterior) antes de aplicarlos al operador (por ejemplo, a &lt;code&gt;(`f` x2)&lt;/code&gt; ). Esto da como resultado una cadena thunk de &lt;code&gt;O(n)&lt;/code&gt; elementos de largo, que luego deben evaluarse desde afuera hacia adentro.</target>
        </trans-unit>
        <trans-unit id="ac14b968b5bbba0075fe9bfd17b35d0cc2b952eb" translate="yes" xml:space="preserve">
          <source>Also note that if you want an efficient left-fold, you probably want to use &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;. The reason for this is that latter does not force the &quot;inner&quot; results (e.g. &lt;code&gt;z `f` x1&lt;/code&gt; in the above example) before applying them to the operator (e.g. to &lt;code&gt;(`f` x2)&lt;/code&gt;). This results in a thunk chain \(\mathcal{O}(n)\) elements long, which then must be evaluated from the outside-in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed5ac80b0447d75eb36a8e1088f826de1949152" translate="yes" xml:space="preserve">
          <source>Also note that if you want an efficient left-fold, you probably want to use &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;prelude#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;. The reason for this is that latter does not force the &quot;inner&quot; results (e.g. &lt;code&gt;z `f` x1&lt;/code&gt; in the above example) before applying them to the operator (e.g. to &lt;code&gt;(`f` x2)&lt;/code&gt;). This results in a thunk chain &lt;code&gt;O(n)&lt;/code&gt; elements long, which then must be evaluated from the outside-in.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que si desea un doblez a la izquierda eficiente, probablemente quiera usar &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; lugar de &lt;code&gt;&lt;a href=&quot;prelude#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; . La raz&amp;oacute;n de esto es que este &amp;uacute;ltimo no fuerza los resultados &quot;internos&quot; (por ejemplo, &lt;code&gt;z `f` x1&lt;/code&gt; en el ejemplo anterior) antes de aplicarlos al operador (por ejemplo, a &lt;code&gt;(`f` x2)&lt;/code&gt; ). Esto da como resultado una cadena thunk de &lt;code&gt;O(n)&lt;/code&gt; elementos de largo, que luego deben evaluarse desde afuera hacia adentro.</target>
        </trans-unit>
        <trans-unit id="f372abd57a7f3cac154979340cbe51baeec9bbfb" translate="yes" xml:space="preserve">
          <source>Also note that if you want an efficient left-fold, you probably want to use &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;prelude#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;. The reason for this is that latter does not force the &quot;inner&quot; results (e.g. &lt;code&gt;z `f` x1&lt;/code&gt; in the above example) before applying them to the operator (e.g. to &lt;code&gt;(`f` x2)&lt;/code&gt;). This results in a thunk chain \(\mathcal{O}(n)\) elements long, which then must be evaluated from the outside-in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0312e92e764c438aa064f2113437c35a6539b369" translate="yes" xml:space="preserve">
          <source>Also note that if you want an efficient left-fold, you probably want to use &lt;code&gt;&lt;a href=&quot;data-list#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;data-list#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;. The reason for this is that latter does not force the &quot;inner&quot; results (e.g. &lt;code&gt;z `f` x1&lt;/code&gt; in the above example) before applying them to the operator (e.g. to &lt;code&gt;(`f` x2)&lt;/code&gt;). This results in a thunk chain &lt;code&gt;O(n)&lt;/code&gt; elements long, which then must be evaluated from the outside-in.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que si desea un doblez a la izquierda eficiente, probablemente quiera usar &lt;code&gt;&lt;a href=&quot;data-list#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; lugar de &lt;code&gt;&lt;a href=&quot;data-list#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; . La raz&amp;oacute;n de esto es que este &amp;uacute;ltimo no fuerza los resultados &quot;internos&quot; (por ejemplo, &lt;code&gt;z `f` x1&lt;/code&gt; en el ejemplo anterior) antes de aplicarlos al operador (por ejemplo, a &lt;code&gt;(`f` x2)&lt;/code&gt; ). Esto da como resultado una cadena thunk de &lt;code&gt;O(n)&lt;/code&gt; elementos de largo, que luego deben evaluarse desde afuera hacia adentro.</target>
        </trans-unit>
        <trans-unit id="adb136095ed6cc375f6a3f0659e9e4fe69576dda" translate="yes" xml:space="preserve">
          <source>Also note that if you want an efficient left-fold, you probably want to use &lt;code&gt;&lt;a href=&quot;data-list#v:foldl-39-&quot;&gt;foldl'&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;data-list#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;. The reason for this is that latter does not force the &quot;inner&quot; results (e.g. &lt;code&gt;z `f` x1&lt;/code&gt; in the above example) before applying them to the operator (e.g. to &lt;code&gt;(`f` x2)&lt;/code&gt;). This results in a thunk chain \(\mathcal{O}(n)\) elements long, which then must be evaluated from the outside-in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acbfc03f5d47fca9d6b436cb055a438d6d24adc" translate="yes" xml:space="preserve">
          <source>Also note that the argument to &lt;code&gt;DEPRECATED&lt;/code&gt; and &lt;code&gt;WARNING&lt;/code&gt; can also be a list of strings, in which case the strings will be presented on separate lines in the resulting warning message,</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que el argumento de &lt;code&gt;DEPRECATED&lt;/code&gt; y &lt;code&gt;WARNING&lt;/code&gt; tambi&amp;eacute;n puede ser una lista de cadenas, en cuyo caso las cadenas se presentar&amp;aacute;n en l&amp;iacute;neas separadas en el mensaje de advertencia resultante,</target>
        </trans-unit>
        <trans-unit id="aa8f340d5595cab499d451cc0ad91fefbf788a96" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cde3b82cd7b9ecd782961c29d79052d748e75c8a" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="41ccfa2353a09113f0c811d9cb51cb48399720bc" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="235d629ac464213b855f299b5269fbab1821ac2a" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;ghc-float#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a09b8126190a3493d9f5d149861112b275c4a820" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="df2b6faed2041cbc5f8775d83e79ec068a616bf0" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f982812ed18e181efb5f1842c282247a56bf7ec3" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="27a6d2f2099e869b6c35b0b33e690f3dbb98988d" translate="yes" xml:space="preserve">
          <source>Also note that, due to the same, &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;'s operator interactions are not respected by &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;'s instance:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, debido a lo mismo, las interacciones del operador de &lt;code&gt;&lt;a href=&quot;prelude#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; no son respetadas por la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="220abdef84f1e02ea77807f44da3633ce41b62f6" translate="yes" xml:space="preserve">
          <source>Also note the use of &lt;a href=&quot;ghci#ghci-cmd-:type%20+v&quot;&gt;&lt;code&gt;:type +v&lt;/code&gt;&lt;/a&gt; in the GHCi session above instead of &lt;a href=&quot;ghci#ghci-cmd-:type&quot;&gt;&lt;code&gt;:type&lt;/code&gt;&lt;/a&gt;. This is because &lt;a href=&quot;ghci#ghci-cmd-:type&quot;&gt;&lt;code&gt;:type&lt;/code&gt;&lt;/a&gt; gives you the type that would be inferred for a variable assigned to the expression provided (that is, the type of &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;let x = &amp;lt;expr&amp;gt;&lt;/code&gt;). As we saw above with &lt;code&gt;myLength2&lt;/code&gt;, this type will have no variables available to visible type application. On the other hand, &lt;a href=&quot;ghci#ghci-cmd-:type%20+v&quot;&gt;&lt;code&gt;:type +v&lt;/code&gt;&lt;/a&gt; gives you the actual type of the expression provided. To illustrate this:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta el uso de &lt;a href=&quot;ghci#ghci-cmd-:type%20+v&quot;&gt; &lt;code&gt;:type +v&lt;/code&gt; &lt;/a&gt; en la sesi&amp;oacute;n de GHCi anterior en lugar de &lt;a href=&quot;ghci#ghci-cmd-:type&quot;&gt; &lt;code&gt;:type&lt;/code&gt; &lt;/a&gt; . Esto se debe a que &lt;a href=&quot;ghci#ghci-cmd-:type&quot;&gt; &lt;code&gt;:type&lt;/code&gt; &lt;/a&gt; le da el tipo que se inferir&amp;iacute;a para una variable asignada a la expresi&amp;oacute;n proporcionada (es decir, el tipo de &lt;code&gt;x&lt;/code&gt; en &lt;code&gt;let x = &amp;lt;expr&amp;gt;&lt;/code&gt; ). Como vimos anteriormente con &lt;code&gt;myLength2&lt;/code&gt; , este tipo no tendr&amp;aacute; variables disponibles para la aplicaci&amp;oacute;n de tipo visible. Por otro lado &lt;a href=&quot;ghci#ghci-cmd-:type%20+v&quot;&gt; &lt;code&gt;:type +v&lt;/code&gt; &lt;/a&gt; le da el tipo real de expresi&amp;oacute;n proporcionada. Para ilustrar esto:</target>
        </trans-unit>
        <trans-unit id="2513c4a2bdd30848586867d45397f58c5275a1ec" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;extra-libraries&lt;/code&gt; are placed on the linker command line after the &lt;code&gt;hs-libraries&lt;/code&gt; for the same package. If your package has dependencies in the other direction (i.e. &lt;code&gt;extra-libraries&lt;/code&gt; depends on &lt;code&gt;hs-libraries&lt;/code&gt;), and the libraries are static, you might need to make two separate packages.</source>
          <target state="translated">Adem&amp;aacute;s, &lt;code&gt;extra-libraries&lt;/code&gt; se colocan en la l&amp;iacute;nea de comando del vinculador despu&amp;eacute;s de las &lt;code&gt;hs-libraries&lt;/code&gt; para el mismo paquete. Si su paquete tiene dependencias en la otra direcci&amp;oacute;n (es decir &lt;code&gt;extra-libraries&lt;/code&gt; dependen de las bibliotecas &lt;code&gt;hs-libraries&lt;/code&gt; ) y las bibliotecas son est&amp;aacute;ticas, es posible que deba crear dos paquetes separados.</target>
        </trans-unit>
        <trans-unit id="40984f68323bbc3a5e0662d8396443ffd212990b" translate="yes" xml:space="preserve">
          <source>Also, you may need to use the &lt;a href=&quot;#ghc-flag--rdynamic&quot;&gt;&lt;code&gt;-rdynamic&lt;/code&gt;&lt;/a&gt; flag to ensure that that symbols are not dropped from your PIE objects.</source>
          <target state="translated">Adem&amp;aacute;s, es posible que deba usar la bandera &lt;a href=&quot;#ghc-flag--rdynamic&quot;&gt; &lt;code&gt;-rdynamic&lt;/code&gt; &lt;/a&gt; para asegurarse de que los s&amp;iacute;mbolos no se caigan de sus objetos PIE.</target>
        </trans-unit>
        <trans-unit id="e30eff925100b7c3e119ed678e39009e962455b0" translate="yes" xml:space="preserve">
          <source>Alt</source>
          <target state="translated">Alt</target>
        </trans-unit>
        <trans-unit id="e429c5fc3a2401f13f505fe2471ed35cea126252" translate="yes" xml:space="preserve">
          <source>Alternate completion to perform if the cursor is not at a quoted word</source>
          <target state="translated">Alternativa de finalización a realizar si el cursor no está en una palabra citada</target>
        </trans-unit>
        <trans-unit id="3b74e96e489cf616e54374e5e92ff3290101f441" translate="yes" xml:space="preserve">
          <source>Alternative</source>
          <target state="translated">Alternative</target>
        </trans-unit>
        <trans-unit id="f427a4339b88ab5730e552c0af40d96b9c132d30" translate="yes" xml:space="preserve">
          <source>AlternativeLayoutRule</source>
          <target state="translated">AlternativeLayoutRule</target>
        </trans-unit>
        <trans-unit id="a87adb1730114f941ad55c79898057fd80fd74d1" translate="yes" xml:space="preserve">
          <source>AlternativeLayoutRuleTransitional</source>
          <target state="translated">AlternativeLayoutRuleTransitional</target>
        </trans-unit>
        <trans-unit id="76d5f5130ef008f32d0f9b4ea42dc455c34353b6" translate="yes" xml:space="preserve">
          <source>Alternatively &lt;code&gt;Coll&lt;/code&gt; might be rewritten</source>
          <target state="translated">Alternativamente, &lt;code&gt;Coll&lt;/code&gt; podr&amp;iacute;a reescribirse</target>
        </trans-unit>
        <trans-unit id="a65a8212521ccdabba5ba2d4d0578992c935fe0f" translate="yes" xml:space="preserve">
          <source>Alternatively you can use &lt;a href=&quot;#ghc-flag--funbox-small-strict-fields&quot;&gt;&lt;code&gt;-funbox-small-strict-fields&lt;/code&gt;&lt;/a&gt; to only unbox strict fields which are &amp;ldquo;small&amp;rdquo;.</source>
          <target state="translated">Alternativamente, puede usar &lt;a href=&quot;#ghc-flag--funbox-small-strict-fields&quot;&gt; &lt;code&gt;-funbox-small-strict-fields&lt;/code&gt; &lt;/a&gt; para desempaquetar solo los campos estrictos que son &quot;peque&amp;ntilde;os&quot;.</target>
        </trans-unit>
        <trans-unit id="0139c0df4a42fccf86ef595e9d7e4a89d60e0341" translate="yes" xml:space="preserve">
          <source>Alternatively, core plugins can be specified with Template Haskell.</source>
          <target state="translated">Alternativamente,los plugins de núcleo pueden ser especificados con Template Haskell.</target>
        </trans-unit>
        <trans-unit id="1bde40f6b099fd2459055a9d8eec8e840639306e" translate="yes" xml:space="preserve">
          <source>Alternatively, if you want to build GHC yourself, head on over to the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/Building&quot;&gt;GHC Building Guide&lt;/a&gt; to find out how to get the sources, and build it on your system. Note that GHC itself is written in Haskell, so you will still need to install GHC in order to build it.</source>
          <target state="translated">Alternativamente, si desea construir GHC usted mismo, dir&amp;iacute;jase a la &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/Building&quot;&gt;Gu&amp;iacute;a de construcci&amp;oacute;n de GHC&lt;/a&gt; para averiguar c&amp;oacute;mo obtener las fuentes y compilarlas en su sistema. Tenga en cuenta que GHC en s&amp;iacute; est&amp;aacute; escrito en Haskell, por lo que a&amp;uacute;n necesitar&amp;aacute; instalar GHC para construirlo.</target>
        </trans-unit>
        <trans-unit id="487925a0dfe33b56fabdc308b58c83700f73524a" translate="yes" xml:space="preserve">
          <source>Alternatively, if you want to build GHC yourself, head on over to the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/building&quot;&gt;GHC Building Guide&lt;/a&gt; to find out how to get the sources, and build it on your system. Note that GHC itself is written in Haskell, so you will still need to install GHC in order to build it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb5e0c35bffdb5bac67b4158b85ee94fc664745" translate="yes" xml:space="preserve">
          <source>Alternatively, use your &lt;code id=&quot;index-14&quot;&gt;TMPDIR&lt;/code&gt; environment variable. Set it to the name of the directory where temporary files should be put. GCC and other programs will honour the &lt;code id=&quot;index-15&quot;&gt;TMPDIR&lt;/code&gt; variable as well.</source>
          <target state="translated">Alternativamente, use su variable de entorno &lt;code id=&quot;index-14&quot;&gt;TMPDIR&lt;/code&gt; . Config&amp;uacute;relo con el nombre del directorio donde se deben colocar los archivos temporales. GCC y otros programas tambi&amp;eacute;n respetar&amp;aacute;n la variable &lt;code id=&quot;index-15&quot;&gt;TMPDIR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b0162a0bbd1d38dbdfc269cc088cc5f731a6ba2" translate="yes" xml:space="preserve">
          <source>Alternatively, you can give a type signature to the enclosing context, which GHC can &amp;ldquo;push down&amp;rdquo; to find the type for the variable:</source>
          <target state="translated">Alternativamente, puede dar una firma de tipo al contexto adjunto, que GHC puede &quot;presionar hacia abajo&quot; para encontrar el tipo de la variable:</target>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">Alternatives</target>
        </trans-unit>
        <trans-unit id="369a93d4fce888d55a59c31d08c7fb3c46433a3b" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;control-exception#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;control-exception#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="translated">Aunque &lt;code&gt;&lt;a href=&quot;control-exception#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; tiene un tipo que es una instancia del tipo de &lt;code&gt;&lt;a href=&quot;control-exception#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; , las dos funciones son sutilmente diferentes:</target>
        </trans-unit>
        <trans-unit id="29cf9aad2a6fbceeb5608717dde74a1b736195b5" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14f8d1451ab6b8eb4e7c4771d4a0ca47ed0fa3c" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="translated">Aunque &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; tiene un tipo que es una instancia del tipo de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; , las dos funciones son sutilmente diferentes:</target>
        </trans-unit>
        <trans-unit id="9d4b54010820702fe99161a26c1a3fd6da57d30a" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabfacf44a025fa1709c2ce0bc2ca417b25be0c8" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="translated">Aunque &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; tiene un tipo que es una instancia del tipo de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; , las dos funciones son sutilmente diferentes:</target>
        </trans-unit>
        <trans-unit id="2f75950244ae1b83eb1fa765162dcee833eb2b00" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f69795c586d406dd4511ba9d5155c1a42f2617" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="translated">Aunque &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwSTM&quot;&gt;throwSTM&lt;/a&gt;&lt;/code&gt; tiene un tipo que es una instancia del tipo de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; , las dos funciones son sutilmente diferentes:</target>
        </trans-unit>
        <trans-unit id="8f38ab9e9f8dc1070a59ba1354c8cbcf7666ec61" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;ghc-io#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9ddf09d766d5f9ca39130ead484571fe0feced" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;ghc-io#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="translated">Aunque &lt;code&gt;&lt;a href=&quot;ghc-io#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; tiene un tipo que es una instancia del tipo de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; , las dos funciones son sutilmente diferentes:</target>
        </trans-unit>
        <trans-unit id="832b928147d026a938c7c9c4f9b77b788e8f12a1" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8713c63104594f55f79cca79583e8fe10117c5e" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; has a type that is an instance of the type of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt;, the two functions are subtly different:</source>
          <target state="translated">Aunque &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:throwIO&quot;&gt;throwIO&lt;/a&gt;&lt;/code&gt; tiene un tipo que es una instancia del tipo de &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; , las dos funciones son sutilmente diferentes:</target>
        </trans-unit>
        <trans-unit id="e2ed5be7a335e3dba8612b72e2da7b9e639f8124" translate="yes" xml:space="preserve">
          <source>Although GHC allows the user to pass all unlifted boxed types to foreign functions, some of them are not amenable to useful work. Although &lt;code&gt;Array#&lt;/code&gt; is unlifted, the elements in its payload are lifted, and a foreign C function cannot safely force thunks. Consequently, a foreign C function may not dereference any of the addresses that comprise the payload of the &lt;code&gt;Array#&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6b65048b50606bfc86ae17bba6c11487ce8b27" translate="yes" xml:space="preserve">
          <source>Although all open type families are considered to have a complete user-supplied kind signature, we can relax this condition for closed type families, where we have equations on which to perform kind inference. GHC will infer kinds for the arguments and result types of a closed type family.</source>
          <target state="translated">Aunque se considera que todas las familias de tipos abiertos tienen una firma tipo completa suministrada por el usuario,podemos relajar esta condición para las familias de tipos cerrados,donde tenemos ecuaciones sobre las que realizar la inferencia tipo.El GHC inferirá tipos para los argumentos y tipos de resultados de una familia de tipos cerrados.</target>
        </trans-unit>
        <trans-unit id="a8ba660b18337f8755c5f957412710cfb811a48b" translate="yes" xml:space="preserve">
          <source>Although it is equivalent to running GHC twice, using &lt;code&gt;-dynamic-too&lt;/code&gt; is more efficient, because the earlier phases of the compiler up to code generation are performed just once.</source>
          <target state="translated">Aunque es equivalente a ejecutar GHC dos veces, usar &lt;code&gt;-dynamic-too&lt;/code&gt; es m&amp;aacute;s eficiente, porque las primeras fases del compilador hasta la generaci&amp;oacute;n de c&amp;oacute;digo se realizan solo una vez.</target>
        </trans-unit>
        <trans-unit id="17fe55cf03ef562c44820f718c2ff2b873fd70ad" translate="yes" xml:space="preserve">
          <source>Although it is unusual, there (currently) can be &lt;em&gt;multiple&lt;/em&gt; instances for an associated family in a single instance declaration. For example, this is legitimate:</source>
          <target state="translated">Aunque es inusual, (actualmente) puede haber &lt;em&gt;varias&lt;/em&gt; instancias para una familia asociada en una sola declaraci&amp;oacute;n de instancia. Por ejemplo, esto es leg&amp;iacute;timo:</target>
        </trans-unit>
        <trans-unit id="c0e0fc4143b94596d60f1c94c3fec1d4b047aa5e" translate="yes" xml:space="preserve">
          <source>Although names generated by &lt;code&gt;newName&lt;/code&gt; cannot &lt;em&gt;be captured&lt;/em&gt;, they can &lt;em&gt;capture&lt;/em&gt; other names. For example, this:</source>
          <target state="translated">Aunque los nombres generados por &lt;code&gt;newName&lt;/code&gt; no se &lt;em&gt;pueden capturar&lt;/em&gt; , pueden &lt;em&gt;capturar&lt;/em&gt; otros nombres. Por ejemplo, esto:</target>
        </trans-unit>
        <trans-unit id="051c31d13e18e01e98444eb19f8ca75e805e3ed3" translate="yes" xml:space="preserve">
          <source>Although not recommended, the deprecated &lt;a href=&quot;#ghc-flag--fglasgow-exts&quot;&gt;&lt;code&gt;-fglasgow-exts&lt;/code&gt;&lt;/a&gt; flag enables a large swath of the extensions supported by GHC at once.</source>
          <target state="translated">Aunque no se recomienda, el &lt;a href=&quot;#ghc-flag--fglasgow-exts&quot;&gt; &lt;code&gt;-fglasgow-exts&lt;/code&gt; &lt;/a&gt; obsoleto -fglasgow-exts habilita una gran parte de las extensiones compatibles con GHC a la vez.</target>
        </trans-unit>
        <trans-unit id="fca41e21a6d4cf355148dfe827eb5a105a329d84" translate="yes" xml:space="preserve">
          <source>Although only GHC implements arrow notation directly, there is also a preprocessor (available from the &lt;a href=&quot;http://www.haskell.org/arrows/&quot;&gt;arrows web page&lt;/a&gt;) that translates arrow notation into Haskell 98 for use with other Haskell systems. You would still want to check arrow programs with GHC; tracing type errors in the preprocessor output is not easy. Modules intended for both GHC and the preprocessor must observe some additional restrictions:</source>
          <target state="translated">Aunque solo GHC implementa la notaci&amp;oacute;n de flechas directamente, tambi&amp;eacute;n hay un preprocesador (disponible en la &lt;a href=&quot;http://www.haskell.org/arrows/&quot;&gt;p&amp;aacute;gina web de flechas&lt;/a&gt; ) que traduce la notaci&amp;oacute;n de flechas a Haskell 98 para su uso con otros sistemas Haskell. A&amp;uacute;n querr&amp;aacute; verificar los programas de flechas con GHC; rastrear errores de tipo en la salida del preprocesador no es f&amp;aacute;cil. Los m&amp;oacute;dulos destinados tanto para GHC como para el preprocesador deben respetar algunas restricciones adicionales:</target>
        </trans-unit>
        <trans-unit id="030de1c351ae0b62dc7102e4cd4c0fd4463e840e" translate="yes" xml:space="preserve">
          <source>Although quantified constraints are a little like local instance declarations, they differ in one big way: the local instances are written by the compiler, not the user, and hence cannot introduce incoherence. Consider</source>
          <target state="translated">Aunque las limitaciones cuantificadas son un poco como las declaraciones de instancias locales,difieren en gran medida:las instancias locales son escritas por el compilador,no por el usuario,y por lo tanto no pueden introducir incoherencias.Considere</target>
        </trans-unit>
        <trans-unit id="917df874b8dc3f0710c076dbfbabbd379b501cb5" translate="yes" xml:space="preserve">
          <source>Although the distinction between &lt;em&gt;file&lt;/em&gt; symbolic links and &lt;em&gt;directory&lt;/em&gt; symbolic links does not exist on POSIX systems, on Windows this is an intrinsic property of every symbolic link and cannot be changed without recreating the link. A file symbolic link that actually points to a directory will fail to dereference and vice versa. Moreover, creating symbolic links on Windows may require privileges unavailable to users outside the Administrators group. Portable programs that use symbolic links should take both into consideration.</source>
          <target state="translated">Aunque la distinci&amp;oacute;n entre enlaces simb&amp;oacute;licos de &lt;em&gt;archivos&lt;/em&gt; y enlaces simb&amp;oacute;licos de &lt;em&gt;directorios&lt;/em&gt; no existe en los sistemas POSIX, en Windows esta es una propiedad intr&amp;iacute;nseca de cada enlace simb&amp;oacute;lico y no se puede cambiar sin volver a crear el enlace. Un enlace simb&amp;oacute;lico de archivo que en realidad apunta a un directorio no podr&amp;aacute; eliminar la referencia y viceversa. Adem&amp;aacute;s, la creaci&amp;oacute;n de enlaces simb&amp;oacute;licos en Windows puede requerir privilegios que no est&amp;aacute;n disponibles para los usuarios fuera del grupo de administradores. Los programas port&amp;aacute;tiles que utilizan enlaces simb&amp;oacute;licos deben tener en cuenta ambos.</target>
        </trans-unit>
        <trans-unit id="99e9a14b3e8cd2cda9b0d1073e9a3e3d417a68e2" translate="yes" xml:space="preserve">
          <source>Although typechecking &lt;code&gt;T MyInt&lt;/code&gt; will terminate, GHC&amp;rsquo;s termination checker isn&amp;rsquo;t sophisticated enough to determine this, so you&amp;rsquo;ll need to enable &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt; in order to use this derived instance. If you do go down this route, make sure you can convince yourself that all of the type family instances you&amp;rsquo;re deriving will eventually terminate if used!</source>
          <target state="translated">Aunque la verificaci&amp;oacute;n de tipo &lt;code&gt;T MyInt&lt;/code&gt; terminar&amp;aacute;, el verificador de terminaci&amp;oacute;n de GHC no es lo suficientemente sofisticado para determinar esto, por lo que deber&amp;aacute; habilitar &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt; &lt;code&gt;UndecidableInstances&lt;/code&gt; &lt;/a&gt; para usar esta instancia derivada. Si sigue esta ruta, aseg&amp;uacute;rese de poder convencerse de que todas las instancias de familias de tipos que est&amp;aacute; derivando eventualmente terminar&amp;aacute;n si se usan.</target>
        </trans-unit>
        <trans-unit id="6fee9b71141e5521bd00d271e9f736a2cbff6c7d" translate="yes" xml:space="preserve">
          <source>Although we have given only a few examples here, it should be clear that the addition of dependency information can help to make multiple parameter classes more useful in practice, avoiding ambiguity problems, and allowing more general sets of instance declarations.</source>
          <target state="translated">Aunque aquí hemos dado sólo unos pocos ejemplos,debe quedar claro que la adición de información sobre dependencia puede contribuir a que las clases de parámetros múltiples sean más útiles en la práctica,evitando problemas de ambigüedad y permitiendo conjuntos de declaraciones de instancia más generales.</target>
        </trans-unit>
        <trans-unit id="d34157ee16cf986f86cc94da23a34f265af1348f" translate="yes" xml:space="preserve">
          <source>Although, a data family is &lt;em&gt;introduced&lt;/em&gt; with the keyword &amp;ldquo;&lt;code&gt;data&lt;/code&gt;&amp;rdquo;, a data family &lt;em&gt;instance&lt;/em&gt; can use either &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;newtype&lt;/code&gt;. For example:</source>
          <target state="translated">Aunque una familia de datos se &lt;em&gt;introduce&lt;/em&gt; con la palabra clave &quot; &lt;code&gt;data&lt;/code&gt; &quot;, una &lt;em&gt;instancia de&lt;/em&gt; familia de datos puede utilizar &lt;code&gt;data&lt;/code&gt; o un &lt;code&gt;newtype&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="dc69fe6d4cdd92804a7734b80adc8316333f1f44" translate="yes" xml:space="preserve">
          <source>Always fails.</source>
          <target state="translated">Siempre falla.</target>
        </trans-unit>
        <trans-unit id="d694f7e3dcf06959f0a7fcce2057e4016e3a9632" translate="yes" xml:space="preserve">
          <source>Always write interface files</source>
          <target state="translated">Siempre escriba los archivos de la interfaz</target>
        </trans-unit>
        <trans-unit id="acb5edef3f602d225f892db47fe7ee1f895d055d" translate="yes" xml:space="preserve">
          <source>Always write interface files. GHC will normally write interface files automatically, but this flag is useful with &lt;a href=&quot;#ghc-flag--fno-code&quot;&gt;&lt;code&gt;-fno-code&lt;/code&gt;&lt;/a&gt;, which normally suppresses generation of interface files. This is useful if you want to type check over multiple runs of GHC without compiling dependencies.</source>
          <target state="translated">Escriba siempre archivos de interfaz. GHC normalmente escribir&amp;aacute; archivos de interfaz autom&amp;aacute;ticamente, pero este indicador es &amp;uacute;til con &lt;a href=&quot;#ghc-flag--fno-code&quot;&gt; &lt;code&gt;-fno-code&lt;/code&gt; &lt;/a&gt; , que normalmente suprime la generaci&amp;oacute;n de archivos de interfaz. Esto es &amp;uacute;til si desea escribir check sobre m&amp;uacute;ltiples ejecuciones de GHC sin compilar dependencias.</target>
        </trans-unit>
        <trans-unit id="770876e2d8a6f234b57db2323d7a120bd5cefd2f" translate="yes" xml:space="preserve">
          <source>Ambiguity can be subtle. Consider this example which uses functional dependencies:</source>
          <target state="translated">La ambigüedad puede ser sutil.Consideremos este ejemplo que utiliza dependencias funcionales:</target>
        </trans-unit>
        <trans-unit id="3ee65b18fc60dcabb8937e100f2503fb55e37a11" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pragma-NOINLINE&quot;&gt;&lt;code&gt;NOINLINE&lt;/code&gt;&lt;/a&gt; pragma may have a &lt;a href=&quot;#pragma-CONLIKE&quot;&gt;&lt;code&gt;CONLIKE&lt;/code&gt;&lt;/a&gt; modifier, which affects matching in &lt;a href=&quot;#pragma-RULES&quot;&gt;&lt;code&gt;RULE&lt;/code&gt;&lt;/a&gt;s (only). See &lt;a href=&quot;#conlike&quot;&gt;How rules interact with CONLIKE pragmas&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03a800321c3532f62fd50dbd5f813f55dc2c76d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pragma-NOINLINE&quot;&gt;&lt;code&gt;NOINLINE&lt;/code&gt;&lt;/a&gt; pragma may have a &lt;code&gt;CONLIKE&lt;/code&gt; modifier, which affects matching in &lt;code&gt;RULE&lt;/code&gt;s (only). See &lt;a href=&quot;#conlike&quot;&gt;How rules interact with CONLIKE pragmas&lt;/a&gt;.</source>
          <target state="translated">Un pragma &lt;a href=&quot;#pragma-INLINE&quot;&gt; &lt;code&gt;INLINE&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#pragma-NOINLINE&quot;&gt; &lt;code&gt;NOINLINE&lt;/code&gt; &lt;/a&gt; puede tener un modificador &lt;code&gt;CONLIKE&lt;/code&gt; , que afecta la coincidencia en &lt;code&gt;RULE&lt;/code&gt; s (solo). Consulte &lt;a href=&quot;#conlike&quot;&gt;C&amp;oacute;mo interact&amp;uacute;an las reglas con los pragmas CONLIKE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de96fd13e454f7d0ced988da0b0fe6591f42a8af" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt; t&lt;/code&gt; is mutable location that is either empty or contains a value of type &lt;code&gt;t&lt;/code&gt;. It has two fundamental operations: &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; which fills an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; if it is empty and blocks otherwise, and &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; which empties an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; if it is full and blocks otherwise. They can be used in multiple different ways:</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt; t&lt;/code&gt; es una ubicaci&amp;oacute;n mutable que est&amp;aacute; vac&amp;iacute;a o contiene un valor de tipo &lt;code&gt;t&lt;/code&gt; . Tiene dos operaciones fundamentales: &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; que llena un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; si est&amp;aacute; vac&amp;iacute;o y bloquea en caso contrario, y &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; que vac&amp;iacute;a un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; si est&amp;aacute; lleno y bloquea en caso contrario. Se pueden utilizar de varias formas diferentes:</target>
        </trans-unit>
        <trans-unit id="bfc651b7b6015a5d38e8dc9b2d2cd9a41bf19609" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; (pronounced &quot;em-var&quot;) is a synchronising variable, used for communication between concurrent threads. It can be thought of as a box, which may be empty or full.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; (pronunciado &quot;em-var&quot;) es una variable de sincronizaci&amp;oacute;n, utilizada para la comunicaci&amp;oacute;n entre subprocesos concurrentes. Se puede considerar como una caja, que puede estar vac&amp;iacute;a o llena.</target>
        </trans-unit>
        <trans-unit id="52e415725c78688d42711652a7e4079f14251bb6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;data-array-io#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; is a mutable, boxed, non-strict array in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-array-io#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; es un arreglo mutable, en caja, no estricto en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Los argumentos de tipo son los siguientes:</target>
        </trans-unit>
        <trans-unit id="e750e5e924cba57bf36a0ebd4161427cec7557d4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;data-array-io#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; is a mutable, boxed, non-strict array in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c3205df3a50720edd8ad6a1e53cf3a8ebdb0c5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;data-array-io-safe#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; is a mutable, boxed, non-strict array in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-array-io-safe#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; es un arreglo mutable, en caja, no estricto en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Los argumentos de tipo son los siguientes:</target>
        </trans-unit>
        <trans-unit id="4f847ae13cb0b0976d90acd768ce3eab18b000b5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;data-array-io-safe#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; is a mutable, boxed, non-strict array in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47281938d8ea8fab14ec059d784740642bb1fcd7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;data-array-st#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; will generally be more efficient (in terms of both time and space) than the equivalent boxed version (&lt;code&gt;&lt;a href=&quot;data-array-st#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt;) with the same element type. However, &lt;code&gt;&lt;a href=&quot;data-array-st#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; is strict in its elements - so don't use &lt;code&gt;&lt;a href=&quot;data-array-st#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; if you require the non-strictness that &lt;code&gt;&lt;a href=&quot;data-array-st#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; provides.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-array-st#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; generalmente ser&amp;aacute; m&amp;aacute;s eficiente (en t&amp;eacute;rminos de tiempo y espacio) que la versi&amp;oacute;n en caja equivalente ( &lt;code&gt;&lt;a href=&quot;data-array-st#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; ) con el mismo tipo de elemento. Sin embargo, &lt;code&gt;&lt;a href=&quot;data-array-st#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; es estricto en sus elementos, por lo que no utilice &lt;code&gt;&lt;a href=&quot;data-array-st#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; si necesita la no rigurosidad que proporciona &lt;code&gt;&lt;a href=&quot;data-array-st#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10ab056c484cefd1634f35523d774bd2bf27bc81" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; will generally be more efficient (in terms of both time and space) than the equivalent boxed version (&lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt;) with the same element type. However, &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; is strict in its elements - so don't use &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; if you require the non-strictness that &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; provides.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; generalmente ser&amp;aacute; m&amp;aacute;s eficiente (en t&amp;eacute;rminos de tiempo y espacio) que la versi&amp;oacute;n en caja equivalente ( &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; ) con el mismo tipo de elemento. Sin embargo, &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; es estricto en sus elementos, por lo que no utilice &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STUArray&quot;&gt;STUArray&lt;/a&gt;&lt;/code&gt; si necesita la no rigurosidad que proporciona &lt;code&gt;&lt;a href=&quot;data-array-st-safe#t:STArray&quot;&gt;STArray&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c72c0a99e8a213a03ed1ff5d7bad4f8d34a4fe41" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; instance is always required (but it can just ignore the meta-information, as is the case for &lt;code&gt;encode&lt;/code&gt; above).</source>
          <target state="translated">Siempre se requiere una instancia &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; (pero puede simplemente ignorar la metainformaci&amp;oacute;n, como es el caso de la &lt;code&gt;encode&lt;/code&gt; anterior).</target>
        </trans-unit>
        <trans-unit id="c6430d754f6ee1e74237537560c890d61207b930" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; is a mutable, boxed, non-strict array in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; es un arreglo mutable, en caja, no estricto en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Los argumentos de tipo son los siguientes:</target>
        </trans-unit>
        <trans-unit id="9fec238ef2447aa47087bb9d112fb0dd69cdcd4c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; (pronounced &quot;em-var&quot;) is a synchronising variable, used for communication between concurrent threads. It can be thought of as a box, which may be empty or full.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; (pronunciado &quot;em-var&quot;) es una variable de sincronizaci&amp;oacute;n, utilizada para la comunicaci&amp;oacute;n entre subprocesos concurrentes. Se puede considerar como una caja, que puede estar vac&amp;iacute;a o llena.</target>
        </trans-unit>
        <trans-unit id="e64ebf00aaf703cb98269bd37718878465c05c15" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INLINE&lt;/code&gt; function is not worker/wrappered by strictness analysis. It&amp;rsquo;s going to be inlined wholesale instead.</source>
          <target state="translated">Una funci&amp;oacute;n &lt;code&gt;INLINE&lt;/code&gt; no es trabajadora / envuelta por an&amp;aacute;lisis de rigor. En su lugar, se incluir&amp;aacute; en l&amp;iacute;nea al por mayor.</target>
        </trans-unit>
        <trans-unit id="683b56235dbe6d9de132b9c32113d5f5fe04aa0c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;InstalledPackageInfo&lt;/code&gt; has a human readable/writable syntax. The functions &lt;code&gt;parseInstalledPackageInfo&lt;/code&gt; and &lt;code&gt;showInstalledPackageInfo&lt;/code&gt; read and write this syntax respectively. Here&amp;rsquo;s an example of the &lt;code&gt;InstalledPackageInfo&lt;/code&gt; for the &lt;code&gt;unix&lt;/code&gt; package:</source>
          <target state="translated">Un &lt;code&gt;InstalledPackageInfo&lt;/code&gt; tiene una sintaxis de escritura / lectura humana. Las funciones &lt;code&gt;parseInstalledPackageInfo&lt;/code&gt; y &lt;code&gt;showInstalledPackageInfo&lt;/code&gt; leen y escriben esta sintaxis respectivamente. Aqu&amp;iacute; hay un ejemplo de &lt;code&gt;InstalledPackageInfo&lt;/code&gt; para el paquete &lt;code&gt;unix&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3a2c03ccefc5072e12ca70273302c1ee7ab6f1d5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;OperatorTable s u m a&lt;/code&gt; is a list of &lt;code&gt;Operator s u m a&lt;/code&gt; lists. The list is ordered in descending precedence. All operators in one list have the same precedence (but may have a different associativity).</source>
          <target state="translated">Un &lt;code&gt;OperatorTable s u m a&lt;/code&gt; es una lista de listas de &lt;code&gt;Operator s u m a&lt;/code&gt; . La lista est&amp;aacute; ordenada en orden descendente. Todos los operadores de una lista tienen la misma precedencia (pero pueden tener una asociatividad diferente).</target>
        </trans-unit>
        <trans-unit id="0f9933684475c3885933d3cb45f7d700d24f1bf2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;{-# INLINABLE f #-}&lt;/code&gt; pragma on a function &lt;code&gt;f&lt;/code&gt; has the following behaviour:</source>
          <target state="translated">Un pragma &lt;code&gt;{-# INLINABLE f #-}&lt;/code&gt; en una funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; tiene el siguiente comportamiento:</target>
        </trans-unit>
        <trans-unit id="b9ded8006363b78c478c9d256d512759af3de706" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;orphan module&lt;/em&gt; orphan module contains at least one &lt;em&gt;orphan instance&lt;/em&gt; or at least one &lt;em&gt;orphan rule&lt;/em&gt;.</source>
          <target state="translated">Un &lt;em&gt;m&amp;oacute;dulo hu&amp;eacute;rfano m&amp;oacute;dulo&lt;/em&gt; hu&amp;eacute;rfano contiene al menos una &lt;em&gt;instancia hu&amp;eacute;rfana&lt;/em&gt; o al menos una &lt;em&gt;regla hu&amp;eacute;rfana&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e3de3cb88319a179768b2746e40461a71f436143" translate="yes" xml:space="preserve">
          <source>An FFI binding to the hot key part of the Win32 API.</source>
          <target state="translated">Un enlace FFI a la parte de la llave caliente de la API de Win32.</target>
        </trans-unit>
        <trans-unit id="cbfb652fdf79531cc3d86d6d11da84e45c07abbf" translate="yes" xml:space="preserve">
          <source>An FFI binding to the system part of the Win32 API.</source>
          <target state="translated">Un FFI vinculante para la parte del sistema de la API de Win32.</target>
        </trans-unit>
        <trans-unit id="451395d3497bffe11685a4808d989a520d0e956e" translate="yes" xml:space="preserve">
          <source>An HValueRef with a finalizer</source>
          <target state="translated">Un HValueRef con un finalizador</target>
        </trans-unit>
        <trans-unit id="d2d296bd0d9d97c26c27e28a4f8f9fc312ec86a0" translate="yes" xml:space="preserve">
          <source>An I/O event.</source>
          <target state="translated">Un evento de I/O.</target>
        </trans-unit>
        <trans-unit id="9d61e77c59f8de3e6e0f09bd0569bdcfd960fe05" translate="yes" xml:space="preserve">
          <source>An IO monad wrapped in &lt;code&gt;StateT&lt;/code&gt; inside of &lt;code&gt;ErrorT&lt;/code&gt;:</source>
          <target state="translated">Una m&amp;oacute;nada IO envuelta en &lt;code&gt;StateT&lt;/code&gt; dentro de &lt;code&gt;ErrorT&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7426b52720da94bc2bc36c2af36224d9d16ed966" translate="yes" xml:space="preserve">
          <source>An ML-style language usually generalises the type of any &lt;code&gt;let&lt;/code&gt;-bound or &lt;code&gt;where&lt;/code&gt;-bound variable, so that it is as polymorphic as possible. With the extension &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt;&lt;code&gt;MonoLocalBinds&lt;/code&gt;&lt;/a&gt; GHC implements a slightly more conservative policy, using the following rules:</source>
          <target state="translated">Un lenguaje de estilo ML generalmente generaliza el tipo de cualquier variable &lt;code&gt;let&lt;/code&gt; -bound o &lt;code&gt;where&lt;/code&gt; -bound, para que sea lo m&amp;aacute;s polim&amp;oacute;rfica posible. Con la extensi&amp;oacute;n &lt;a href=&quot;#extension-MonoLocalBinds&quot;&gt; &lt;code&gt;MonoLocalBinds&lt;/code&gt; &lt;/a&gt; GHC implementa una pol&amp;iacute;tica un poco m&amp;aacute;s conservadora, usando las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="9cefabc3584d4516f625a578f6ab414f96911025" translate="yes" xml:space="preserve">
          <source>An RTS debugging flag; only available if the program was linked with the &lt;a href=&quot;phases#ghc-flag--debug&quot;&gt;&lt;code&gt;-debug&lt;/code&gt;&lt;/a&gt; option. Various values of ⟨x⟩ are provided to enable debug messages and additional runtime sanity checks in different subsystems in the RTS, for example &lt;code&gt;+RTS -Ds -RTS&lt;/code&gt; enables debug messages from the scheduler. Use &lt;code&gt;+RTS -?&lt;/code&gt; to find out which debug flags are supported.</source>
          <target state="translated">Una bandera de depuraci&amp;oacute;n RTS; solo disponible si el programa estaba vinculado con la opci&amp;oacute;n &lt;a href=&quot;phases#ghc-flag--debug&quot;&gt; &lt;code&gt;-debug&lt;/code&gt; &lt;/a&gt; . Se proporcionan varios valores de ⟨x⟩ para habilitar mensajes de depuraci&amp;oacute;n y comprobaciones de cordura en tiempo de ejecuci&amp;oacute;n adicionales en diferentes subsistemas en el RTS, por ejemplo &lt;code&gt;+RTS -Ds -RTS&lt;/code&gt; habilita mensajes de depuraci&amp;oacute;n del planificador. Usar &lt;code&gt;+RTS -?&lt;/code&gt; para averiguar qu&amp;eacute; indicadores de depuraci&amp;oacute;n son compatibles.</target>
        </trans-unit>
        <trans-unit id="4e45674dc1c637028f0f01799a8815e6ecb98130" translate="yes" xml:space="preserve">
          <source>An XHTML combinator library.</source>
          <target state="translated">An XHTML combinator library.</target>
        </trans-unit>
        <trans-unit id="09858e905a1c37c93edf149194a2d9bb2ce3582b" translate="yes" xml:space="preserve">
          <source>An abstract interface to a unique symbol generator.</source>
          <target state="translated">Una interfaz abstracta para un generador de símbolos único.</target>
        </trans-unit>
        <trans-unit id="c3d4f7cf1abe842d95a74003b96fc062bd25f990" translate="yes" xml:space="preserve">
          <source>An abstract name for an object, that supports equality and hashing.</source>
          <target state="translated">Un nombre abstracto para un objeto,que apoya la igualdad y el hashing.</target>
        </trans-unit>
        <trans-unit id="c7780c030353da535248bab25cc8ad315039483b" translate="yes" xml:space="preserve">
          <source>An abstract type representing names in the syntax tree.</source>
          <target state="translated">Un tipo abstracto que representa los nombres en el árbol de sintaxis.</target>
        </trans-unit>
        <trans-unit id="3739511153de0d9b79bcbb692e2cd72c742f7bd7" translate="yes" xml:space="preserve">
          <source>An abstract type that contains a value for each variant of &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un tipo abstracto que contiene un valor para cada variante de &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="580e2ee0cc2d32003a3cd07143debcb038d87924" translate="yes" xml:space="preserve">
          <source>An abstract type that contains a value for each variant of &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un tipo abstracto que contiene un valor para cada variante de &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4efb40389fa8d66e189c71d212784428f0bae6b2" translate="yes" xml:space="preserve">
          <source>An abstract type that contains a value for each variant of &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un tipo abstracto que contiene un valor para cada variante de &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35eff700132dbe6d90bfc15821db76d5acbdf25d" translate="yes" xml:space="preserve">
          <source>An abstract unique object. Objects of type &lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt; may be compared for equality and ordering and hashed into &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un objeto &amp;uacute;nico abstracto. Los objetos de tipo &lt;code&gt;&lt;a href=&quot;data-unique#t:Unique&quot;&gt;Unique&lt;/a&gt;&lt;/code&gt; se pueden comparar para la igualdad y el orden y se pueden aplicar hash en &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21c7f832db5783c3e7a8088c500d2962ed9384be" translate="yes" xml:space="preserve">
          <source>An accumulating function</source>
          <target state="translated">Una función de acumulación</target>
        </trans-unit>
        <trans-unit id="b61c87037791a3b504bed8e01931aafc2fc5942c" translate="yes" xml:space="preserve">
          <source>An accumulation monad parameterized by the type &lt;code&gt;w&lt;/code&gt; of output to accumulate.</source>
          <target state="translated">Una m&amp;oacute;nada de acumulaci&amp;oacute;n parametrizada por el tipo &lt;code&gt;w&lt;/code&gt; de salida a acumular.</target>
        </trans-unit>
        <trans-unit id="f7cc330fe5c9abb7f58e424cead33a14c496fa0c" translate="yes" xml:space="preserve">
          <source>An accumulation monad parameterized by:</source>
          <target state="translated">Una monada de acumulación parametrizada por:</target>
        </trans-unit>
        <trans-unit id="282bf0a0b47e57c828188f0a009349e911a1315e" translate="yes" xml:space="preserve">
          <source>An action which sends output to the terminal. That output may mix plain text with control characters and escape sequences, along with delays (called &quot;padding&quot;) required by some older terminals.</source>
          <target state="translated">Una acción que envía la salida a la terminal.Esa salida puede mezclar texto simple con caracteres de control y secuencias de escape,junto con los retardos (llamados &quot;acolchados&quot;)requeridos por algunas terminales más antiguas.</target>
        </trans-unit>
        <trans-unit id="40621b0cc1f828021b505715d70a5c3153c57b8e" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#ghc-flag--ddump-ticked&quot;&gt;&lt;code&gt;-ddump-ticked&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un alias para &lt;a href=&quot;#ghc-flag--ddump-ticked&quot;&gt; &lt;code&gt;-ddump-ticked&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35feeff338058bf37c6e24f0244366473367a8b7" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#rts-flag---nonmoving-gc&quot;&gt;&lt;code&gt;--nonmoving-gc&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbb51b39bb5ee9826d87215f4821611643eee9b" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;debugging#ghc-flag--ddump-ticked&quot;&gt;&lt;code&gt;-ddump-ticked&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un alias para &lt;a href=&quot;debugging#ghc-flag--ddump-ticked&quot;&gt; &lt;code&gt;-ddump-ticked&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b292908bf0d2936fbcd16984eafba397dbc968a" translate="yes" xml:space="preserve">
          <source>An alias for &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un alias para &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a37301a9d0fe7303c2440af029087f787465968c" translate="yes" xml:space="preserve">
          <source>An alias for &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un alias para &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39f245d534c3b422c9edc0bbe9598133641be7f8" translate="yes" xml:space="preserve">
          <source>An alias for modifyState for backwards compatibility.</source>
          <target state="translated">Un alias para modifyState para compatibilidad con el pasado.</target>
        </trans-unit>
        <trans-unit id="99e294020522b0531d3dadc4d8bef2d2fd79bf01" translate="yes" xml:space="preserve">
          <source>An alias for putState for backwards compatibility.</source>
          <target state="translated">Un alias de putState para la compatibilidad con el pasado.</target>
        </trans-unit>
        <trans-unit id="709a0f933c96849749d91e33427992ea15ebf916" translate="yes" xml:space="preserve">
          <source>An allocation strategy that does not trim any of the filled buffers before converting it to a chunk</source>
          <target state="translated">Una estrategia de asignación que no recorta ninguno de los buffers llenos antes de convertirlo en un trozo</target>
        </trans-unit>
        <trans-unit id="7cb706568d5dabeb772af56d1f92199b0a7ee949" translate="yes" xml:space="preserve">
          <source>An allocation strategy that guarantees that at least half of the allocated memory is used for live data</source>
          <target state="translated">Una estrategia de asignación que garantice que al menos la mitad de la memoria asignada se utilice para datos en vivo</target>
        </trans-unit>
        <trans-unit id="c8a358c8e089a8a6ad543274e213736fdd805423" translate="yes" xml:space="preserve">
          <source>An alternative sort. Sorts by checking which hole fits subsume other hole fits, such that if hole fit a could be used as hole fits for hole fit b, then b appears before a in the output. It is more precise than the default sort, but also a lot slower, since a subsumption check has to be run for each pair of valid hole fits.</source>
          <target state="translated">Un tipo alternativo.Se clasifica comprobando qué agujero se ajusta a subsumir otros ajustes de agujeros,de tal manera que si el ajuste del agujero a podría utilizarse como ajuste del agujero b,entonces b aparece antes que a en la salida.Es más precisa que la clasificación por defecto,pero también mucho más lenta,ya que hay que hacer una comprobación de subsunción para cada par de ajustes de agujeros válidos.</target>
        </trans-unit>
        <trans-unit id="85c8ea4d2925dfd094cde7445f68c6da3c037dbf" translate="yes" xml:space="preserve">
          <source>An ambiguous selector may be disambiguated by the type being &amp;ldquo;pushed down&amp;rdquo; to the occurrence of the selector (see &lt;a href=&quot;#higher-rank-type-inference&quot;&gt;Type inference&lt;/a&gt; for more details on what &amp;ldquo;pushed down&amp;rdquo; means). For example, the following are permitted:</source>
          <target state="translated">Un selector ambiguo puede eliminarse la ambig&amp;uuml;edad por el tipo que se &quot;empuja hacia abajo&quot; hasta la aparici&amp;oacute;n del selector (consulte &lt;a href=&quot;#higher-rank-type-inference&quot;&gt;Inferencia de tipos&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre lo que significa &quot;empujar hacia abajo&quot;). Por ejemplo, se permiten los siguientes:</target>
        </trans-unit>
        <trans-unit id="cb9d0b854775c17b2c5aff97ccac59e5200fac6e" translate="yes" xml:space="preserve">
          <source>An amortized running time is given for each operation, with &lt;em&gt;n&lt;/em&gt; referring to the length of the sequence and &lt;em&gt;i&lt;/em&gt; being the integral index used by some operations. These bounds hold even in a persistent (shared) setting.</source>
          <target state="translated">Se da un tiempo de ejecuci&amp;oacute;n amortizado para cada operaci&amp;oacute;n, donde &lt;em&gt;n se&lt;/em&gt; refiere a la longitud de la secuencia e &lt;em&gt;i&lt;/em&gt; es el &amp;iacute;ndice integral utilizado por algunas operaciones. Estos l&amp;iacute;mites se mantienen incluso en un entorno persistente (compartido).</target>
        </trans-unit>
        <trans-unit id="6ce9dd94558d3a6cb7c491d6ce3c6738daadefaa" translate="yes" xml:space="preserve">
          <source>An annotation (side-metadata) attached at a particular point in a &lt;code&gt;Doc&lt;/code&gt;. Allows carrying non-pretty-printed data around in a &lt;code&gt;Doc&lt;/code&gt; that is attached at particular points in the structure. Once the &lt;code&gt;Doc&lt;/code&gt; is render to an output type (such as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;), we can also retrieve where in the rendered document our annotations start and end (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:renderSpans&quot;&gt;renderSpans&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Una anotaci&amp;oacute;n (de lado metadatos) fijado en un punto particular en un &lt;code&gt;Doc&lt;/code&gt; . Permite que lleva datos no bastante impresos-alrededor en un &lt;code&gt;Doc&lt;/code&gt; que est&amp;aacute; unido en puntos particulares en la estructura. Una vez que el &lt;code&gt;Doc&lt;/code&gt; se hacen a un tipo de salida (como &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ), tambi&amp;eacute;n podemos recuperar en qu&amp;eacute; parte del documento representado nuestras anotaciones de inicio y fin (ver &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:renderSpans&quot;&gt;renderSpans&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="11d313098b3ec3f985281ba5d03b5e871c638cd4" translate="yes" xml:space="preserve">
          <source>An annotation (side-metadata) attached at a particular point in a &lt;code&gt;Doc&lt;/code&gt;. Allows carrying non-pretty-printed data around in a &lt;code&gt;Doc&lt;/code&gt; that is attached at particular points in the structure. Once the &lt;code&gt;Doc&lt;/code&gt; is render to an output type (such as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;), we can also retrieve where in the rendered document our annotations start and end (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:renderSpans&quot;&gt;renderSpans&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a5bd4a90cc650cc053e5d8d2d60daef1c2e891" translate="yes" xml:space="preserve">
          <source>An applicative functor that collects a monoid (e.g. lists) of errors. A sequence of computations fails if any of its components do, but unlike monads made with &lt;code&gt;ExceptT&lt;/code&gt; from &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;, these computations continue after an error, collecting all the errors.</source>
          <target state="translated">Un funtor aplicativo que recopila un monoide (por ejemplo, listas) de errores. Una secuencia de c&amp;aacute;lculos falla si alguno de sus componentes falla, pero a diferencia de las m&amp;oacute;nadas hechas con &lt;code&gt;ExceptT&lt;/code&gt; de &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt; , estos c&amp;aacute;lculos contin&amp;uacute;an despu&amp;eacute;s de un error, recopilando todos los errores.</target>
        </trans-unit>
        <trans-unit id="bc070c7328fa5d3571a45acb079f74b2dde0b0b6" translate="yes" xml:space="preserve">
          <source>An applicative version of &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n aplicativa de &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cf3d115218ff8bff3d10483bba1404c9ab4c403" translate="yes" xml:space="preserve">
          <source>An applicative version of &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n aplicativa de &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97a468ebf5cf1c674abd871e054ea2dee404c992" translate="yes" xml:space="preserve">
          <source>An applicative version of &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n aplicativa de &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="714a850af4acc6ad522e25162362c1e340e36f2e" translate="yes" xml:space="preserve">
          <source>An applicative version of &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n aplicativa de &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e4069001a63b95ceb7dda105321002b8f3e3ba6" translate="yes" xml:space="preserve">
          <source>An arbitrary machine address assumed to point outside the garbage-collected heap.</source>
          <target state="translated">Una dirección arbitraria de la máquina que se supone que apunta fuera del montón de basura.</target>
        </trans-unit>
        <trans-unit id="8bf5023dfbbe40314a1c91c2950b274f9f5333cc" translate="yes" xml:space="preserve">
          <source>An array type has the form &lt;code&gt;(a i e)&lt;/code&gt; where &lt;code&gt;a&lt;/code&gt; is the array type constructor (kind &lt;code&gt;* -&amp;gt; * -&amp;gt; *&lt;/code&gt;), &lt;code&gt;i&lt;/code&gt; is the index type (a member of the class &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;), and &lt;code&gt;e&lt;/code&gt; is the element type.</source>
          <target state="translated">Un tipo de matriz tiene la forma &lt;code&gt;(a i e)&lt;/code&gt; donde &lt;code&gt;a&lt;/code&gt; es el constructor del tipo de matriz (kind &lt;code&gt;* -&amp;gt; * -&amp;gt; *&lt;/code&gt; ), &lt;code&gt;i&lt;/code&gt; es el tipo de &amp;iacute;ndice (un miembro de la clase &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; ) y &lt;code&gt;e&lt;/code&gt; es el tipo de elemento.</target>
        </trans-unit>
        <trans-unit id="f333085677822b91b2d6266691a5fadac493bad0" translate="yes" xml:space="preserve">
          <source>An array type has the form &lt;code&gt;(a i e)&lt;/code&gt; where &lt;code&gt;a&lt;/code&gt; is the array type constructor (kind &lt;code&gt;* -&amp;gt; * -&amp;gt; *&lt;/code&gt;), &lt;code&gt;i&lt;/code&gt; is the index type (a member of the class &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;), and &lt;code&gt;e&lt;/code&gt; is the element type. The &lt;code&gt;IArray&lt;/code&gt; class is parameterised over both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt;, so that instances specialised to certain element types can be defined.</source>
          <target state="translated">Un tipo de matriz tiene la forma &lt;code&gt;(a i e)&lt;/code&gt; donde &lt;code&gt;a&lt;/code&gt; es el constructor del tipo de matriz (kind &lt;code&gt;* -&amp;gt; * -&amp;gt; *&lt;/code&gt; ), &lt;code&gt;i&lt;/code&gt; es el tipo de &amp;iacute;ndice (un miembro de la clase &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; ) y &lt;code&gt;e&lt;/code&gt; es el tipo de elemento. La clase &lt;code&gt;IArray&lt;/code&gt; se parametriza tanto en &lt;code&gt;a&lt;/code&gt; como en &lt;code&gt;e&lt;/code&gt; , de modo que se puedan definir instancias especializadas para ciertos tipos de elementos.</target>
        </trans-unit>
        <trans-unit id="fd0764a85da5b607f0944932a419f16b24701a2a" translate="yes" xml:space="preserve">
          <source>An array type has the form &lt;code&gt;(a i e)&lt;/code&gt; where &lt;code&gt;a&lt;/code&gt; is the array type constructor (kind &lt;code&gt;* -&amp;gt; * -&amp;gt; *&lt;/code&gt;), &lt;code&gt;i&lt;/code&gt; is the index type (a member of the class &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;), and &lt;code&gt;e&lt;/code&gt; is the element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b79318296e9a1df365be13462713df9a22390f7" translate="yes" xml:space="preserve">
          <source>An array type has the form &lt;code&gt;(a i e)&lt;/code&gt; where &lt;code&gt;a&lt;/code&gt; is the array type constructor (kind &lt;code&gt;* -&amp;gt; * -&amp;gt; *&lt;/code&gt;), &lt;code&gt;i&lt;/code&gt; is the index type (a member of the class &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;), and &lt;code&gt;e&lt;/code&gt; is the element type. The &lt;code&gt;IArray&lt;/code&gt; class is parameterised over both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt;, so that instances specialised to certain element types can be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15133cd1e98c4cec2d0b6095c794ad5b60cd611" translate="yes" xml:space="preserve">
          <source>An assembly-language source file, usually produced by the compiler.</source>
          <target state="translated">Un archivo fuente en lenguaje ensamblador,normalmente producido por el compilador.</target>
        </trans-unit>
        <trans-unit id="e94a0acd4447829f7e16f2e0681abc5b94e72a47" translate="yes" xml:space="preserve">
          <source>An associated type or data family declaration has a CUSK precisely if its enclosing class has a CUSK.</source>
          <target state="translated">Una declaración de tipo o familia de datos asociada tiene un CUSK precisamente si su clase adjunta tiene un CUSK.</target>
        </trans-unit>
        <trans-unit id="9a839446e60f1231647068f143a30b2ecfe17004" translate="yes" xml:space="preserve">
          <source>An association is a pair of the form &lt;code&gt;(i,x)&lt;/code&gt;, which defines the value of the array at index &lt;code&gt;i&lt;/code&gt; to be &lt;code&gt;x&lt;/code&gt;. The array is undefined if any index in the list is out of bounds. If any two associations in the list have the same index, the value at that index is implementation-dependent. (In GHC, the last value specified for that index is used. Other implementations will also do this for unboxed arrays, but Haskell 98 requires that for &lt;code&gt;Array&lt;/code&gt; the value at such indices is bottom.)</source>
          <target state="translated">Una asociaci&amp;oacute;n es un par de la forma &lt;code&gt;(i,x)&lt;/code&gt; , que define el valor de la matriz en el &amp;iacute;ndice &lt;code&gt;i&lt;/code&gt; como &lt;code&gt;x&lt;/code&gt; . La matriz no est&amp;aacute; definida si alg&amp;uacute;n &amp;iacute;ndice de la lista est&amp;aacute; fuera de los l&amp;iacute;mites. Si dos asociaciones de la lista tienen el mismo &amp;iacute;ndice, el valor de ese &amp;iacute;ndice depende de la implementaci&amp;oacute;n. (En GHC, se usa el &amp;uacute;ltimo valor especificado para ese &amp;iacute;ndice. Otras implementaciones tambi&amp;eacute;n har&amp;aacute;n esto para arreglos sin caja, pero Haskell 98 requiere que para &lt;code&gt;Array&lt;/code&gt; el valor en dichos &amp;iacute;ndices sea inferior).</target>
        </trans-unit>
        <trans-unit id="3afb607a33ed15aef025831322f63f1a04d9a09d" translate="yes" xml:space="preserve">
          <source>An associative binary operation</source>
          <target state="translated">Una operación binaria asociativa</target>
        </trans-unit>
        <trans-unit id="1147ac2d130bd449477786144a5c8a1b76f89092" translate="yes" xml:space="preserve">
          <source>An associative operation</source>
          <target state="translated">Una operación asociativa</target>
        </trans-unit>
        <trans-unit id="8ce47487694776c0a4231b6d5c5f44ab8e16a07a" translate="yes" xml:space="preserve">
          <source>An associative operation with identity &lt;code&gt;&lt;a href=&quot;control-arrow#v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una operaci&amp;oacute;n asociativa con identidad &lt;code&gt;&lt;a href=&quot;control-arrow#v:zeroArrow&quot;&gt;zeroArrow&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f702f0949aff10d3524aea50e9531b4e09362c3" translate="yes" xml:space="preserve">
          <source>An associative operation.</source>
          <target state="translated">Una operación asociativa.</target>
        </trans-unit>
        <trans-unit id="d3660f5f8cdd17a078c28b99ce21ad421e42c7b8" translate="yes" xml:space="preserve">
          <source>An associative operation. The default definition is</source>
          <target state="translated">Una operación asociativa.La definición por defecto es</target>
        </trans-unit>
        <trans-unit id="e8163d537de96930d1551a2bbdc32c863286eb63" translate="yes" xml:space="preserve">
          <source>An attempt was made to evaluate an element of an array that had not been initialized.</source>
          <target state="translated">Se intentó evaluar un elemento de un conjunto que no había sido inicializado.</target>
        </trans-unit>
        <trans-unit id="578f42dbdd127ca4fccb4e419110bd0c78e68ac1" translate="yes" xml:space="preserve">
          <source>An attempt was made to index an array outside its declared bounds.</source>
          <target state="translated">Se intentó indexar un conjunto fuera de sus límites declarados.</target>
        </trans-unit>
        <trans-unit id="424d796a4ce39c6e1c11527f6f9821335c409254" translate="yes" xml:space="preserve">
          <source>An easy extension is to allow arbitrary contexts before the constructor. For example:</source>
          <target state="translated">Una extensión fácil es permitir contextos arbitrarios ante el constructor.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="aa4b3e7e1ba4fecc1be2a9b715baa31cf5742128" translate="yes" xml:space="preserve">
          <source>An edge from the first vertex to the second.</source>
          <target state="translated">Un borde desde el primer vértice al segundo.</target>
        </trans-unit>
        <trans-unit id="4dfc37a5d88a5cef62918450d61f82ec135f66a3" translate="yes" xml:space="preserve">
          <source>An efficient deserialiser of &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un deserializador eficiente de &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9abf3b4b588f08354857f088c37e909380ccb8c8" translate="yes" xml:space="preserve">
          <source>An efficient get method for lazy ByteStrings. Fails if fewer than &lt;code&gt;n&lt;/code&gt; bytes are left in the input.</source>
          <target state="translated">Un m&amp;eacute;todo de obtenci&amp;oacute;n eficiente para ByteStrings perezosos. Falla si quedan menos de &lt;code&gt;n&lt;/code&gt; bytes en la entrada.</target>
        </trans-unit>
        <trans-unit id="779d338d8d1396567da301a0915991a8253fcb3d" translate="yes" xml:space="preserve">
          <source>An efficient get method for strict ByteStrings. Fails if fewer than &lt;code&gt;n&lt;/code&gt; bytes are left in the input. If &lt;code&gt;n &amp;lt;= 0&lt;/code&gt; then the empty string is returned.</source>
          <target state="translated">Un m&amp;eacute;todo de obtenci&amp;oacute;n eficiente para ByteStrings estrictos. Falla si quedan menos de &lt;code&gt;n&lt;/code&gt; bytes en la entrada. Si &lt;code&gt;n &amp;lt;= 0&lt;/code&gt; , se devuelve la cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="64a0398b712134b5c921639d4662413422147955" translate="yes" xml:space="preserve">
          <source>An efficient implementation of integer sets.</source>
          <target state="translated">Una aplicación eficiente de los conjuntos de números enteros.</target>
        </trans-unit>
        <trans-unit id="ed7ff4240488108e796dda83b8f8a885a21e7f97" translate="yes" xml:space="preserve">
          <source>An efficient implementation of maps from integer keys to values (dictionaries).</source>
          <target state="translated">Una implementación eficiente de los mapas desde las claves de números enteros hasta los valores (diccionarios).</target>
        </trans-unit>
        <trans-unit id="300c10f93efb7d8e708d1538e08d8d7e538b4d21" translate="yes" xml:space="preserve">
          <source>An efficient implementation of ordered maps from keys to values (dictionaries).</source>
          <target state="translated">Una implementación eficiente de mapas ordenados desde las claves hasta los valores (diccionarios).</target>
        </trans-unit>
        <trans-unit id="9c17d2bea255ffe0974a30b48457084e4d307e5f" translate="yes" xml:space="preserve">
          <source>An efficient primitive to write a strict ByteString into the output buffer. It flushes the current buffer, and writes the argument into a new chunk.</source>
          <target state="translated">Una primitiva eficiente para escribir una estricta ByteString en el buffer de salida.Descarta el buffer actual,y escribe el argumento en un nuevo trozo.</target>
        </trans-unit>
        <trans-unit id="409ad01192a6191df9780f4e796153ec80522cce" translate="yes" xml:space="preserve">
          <source>An efficient serialiser of &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un serializador eficiente de &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6015ce2daa6533d6818de8c86f4d41b485e9542" translate="yes" xml:space="preserve">
          <source>An empty document</source>
          <target state="translated">Un documento vacío</target>
        </trans-unit>
        <trans-unit id="ce3be77c03c4e3699f0fd72a41b3ed4e3a5f892e" translate="yes" xml:space="preserve">
          <source>An empty graph.</source>
          <target state="translated">Un gráfico vacío.</target>
        </trans-unit>
        <trans-unit id="60a7cfffba592bf3fc0701b5fe4cb99cba424d1c" translate="yes" xml:space="preserve">
          <source>An empty immutable array.</source>
          <target state="translated">Un conjunto inmutable vacío.</target>
        </trans-unit>
        <trans-unit id="110c4ac770ed6cac3b6a8ac6f3769b9a42dfce56" translate="yes" xml:space="preserve">
          <source>An empty piece of HTML.</source>
          <target state="translated">Un trozo de HTML vacío.</target>
        </trans-unit>
        <trans-unit id="863735067735f8b0df4ec524f2091a6814c632b6" translate="yes" xml:space="preserve">
          <source>An encoding in which Unicode code points are translated to bytes by taking the code point modulo 256. When decoding, bytes are translated directly into the equivalent code point.</source>
          <target state="translated">Una codificación en la que los puntos de código Unicode se traducen a bytes tomando el punto de código del módulo 256.Al decodificar,los bytes se traducen directamente al punto de código equivalente.</target>
        </trans-unit>
        <trans-unit id="379731e74a8a7303ee4ec5e7849e8a388a898a4e" translate="yes" xml:space="preserve">
          <source>An equivalent form for that example, avoiding explicit &lt;code&gt;forall&lt;/code&gt; uses &lt;a href=&quot;#pattern-type-sigs&quot;&gt;Pattern type signatures&lt;/a&gt;:</source>
          <target state="translated">Una forma equivalente para ese ejemplo, evitando expl&amp;iacute;cita &lt;code&gt;forall&lt;/code&gt; utiliza &lt;a href=&quot;#pattern-type-sigs&quot;&gt;las firmas de tipos Patr&amp;oacute;n&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2317b7500211efb11dba6702f8ff358cab78a9f0" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because one of its arguments already exists.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque uno de sus argumentos ya existe.</target>
        </trans-unit>
        <trans-unit id="9c5c1ab24132ff1db5fc41f514c9dd3d02f6830b" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because one of its arguments does not exist.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque uno de sus argumentos no existe.</target>
        </trans-unit>
        <trans-unit id="a44dec7bdac91aad0789fdf13b8614448d0c3e1b" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the operation was not possible. Any computation which returns an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; result may fail with &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt;. In some cases, an implementation will not be able to distinguish between the possible error causes. In this case it should fail with &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque la operaci&amp;oacute;n no fue posible. Cualquier c&amp;aacute;lculo que devuelva un resultado de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; puede fallar con &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt; . En algunos casos, una implementaci&amp;oacute;n no podr&amp;aacute; distinguir entre las posibles causas de error. En este caso, deber&amp;iacute;a fallar con &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f839fc9cbc9a7a46f4c3ef068799b74f941ae12" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the user does not have sufficient operating system privilege to perform that operation.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque el usuario no tiene suficientes privilegios de sistema operativo para realizar esa operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="353bc4608932aa64def2cb47401212891190e861" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because one of its arguments already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afac72a08e880e338eb3054c3cc4cb3b2c8d874a" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because one of its arguments does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa08b0c059f66a3dd7b2f5959546d1e6588e7a9f" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the operation was not possible. Any computation which returns an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; result may fail with &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt;. In some cases, an implementation will not be able to distinguish between the possible error causes. In this case it should fail with &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fdd36f108f41c6140824253d332a12f73fc5123" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the user does not have sufficient operating system privilege to perform that operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66b1c80ba834855aae9f9d43d3592e67e98a671" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because one of its arguments already exists.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque uno de sus argumentos ya existe.</target>
        </trans-unit>
        <trans-unit id="84e040a37ce664544af44aa14d72c1c5b1f5fdf7" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because one of its arguments does not exist.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque uno de sus argumentos no existe.</target>
        </trans-unit>
        <trans-unit id="3aaf153bc2f4b4a705a6640c9e8a13f49833a532" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because one of its arguments is a single-use resource, which is already being used (for example, opening the same file twice for writing might give this error).</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque uno de sus argumentos es un recurso de un solo uso, que ya se est&amp;aacute; utilizando (por ejemplo, abrir el mismo archivo dos veces para escribir podr&amp;iacute;a dar este error).</target>
        </trans-unit>
        <trans-unit id="fbdf1497d8ba0761ae0294d7cba12faf35e238d8" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the device is full.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque el dispositivo est&amp;aacute; lleno.</target>
        </trans-unit>
        <trans-unit id="587d82956d47a090dc9d6a33c66777d643e7e317" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the end of file has been reached.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque se alcanz&amp;oacute; el final del archivo.</target>
        </trans-unit>
        <trans-unit id="0cfca5871ab77adff3cb578bb0516ceb582413e3" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the operation was not possible. Any computation which returns an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; result may fail with &lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt;. In some cases, an implementation will not be able to distinguish between the possible error causes. In this case it should fail with &lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque la operaci&amp;oacute;n no fue posible. Cualquier c&amp;aacute;lculo que devuelva un resultado de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; puede fallar con &lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt; . En algunos casos, una implementaci&amp;oacute;n no podr&amp;aacute; distinguir entre las posibles causas de error. En este caso, deber&amp;iacute;a fallar con &lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f1a557e45ff222ff19723cc3b00907ab8191320" translate="yes" xml:space="preserve">
          <source>An error indicating that an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operation failed because the user does not have sufficient operating system privilege to perform that operation.</source>
          <target state="translated">Un error que indica que una operaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; fall&amp;oacute; porque el usuario no tiene suficientes privilegios de sistema operativo para realizar esa operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="502a1695e398902350a22b419e2e0b7872570bf2" translate="yes" xml:space="preserve">
          <source>An error indicating that the operation failed because the resource vanished. See &lt;code&gt;&lt;a href=&quot;system-io-error#v:resourceVanishedErrorType&quot;&gt;resourceVanishedErrorType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8588ea4ffd2451e25b457e42e986ce533b40b9" translate="yes" xml:space="preserve">
          <source>An example from &lt;em&gt;The Craft of Functional Programming&lt;/em&gt;, Simon Thompson (&lt;a href=&quot;http://www.cs.kent.ac.uk/people/staff/sjt/&quot;&gt;http://www.cs.kent.ac.uk/people/staff/sjt/&lt;/a&gt;), Addison-Wesley 1999: &quot;Given an arbitrary tree, transform it to a tree of integers in which the original elements are replaced by natural numbers, starting from 0. The same element has to be replaced by the same number at every occurrence, and when we meet an as-yet-unvisited element we have to find a 'new' number to match it with:&quot;</source>
          <target state="translated">Un ejemplo de &lt;em&gt;The Craft of Functional Programming&lt;/em&gt; , Simon Thompson ( &lt;a href=&quot;http://www.cs.kent.ac.uk/people/staff/sjt/&quot;&gt;http://www.cs.kent.ac.uk/people/staff/sjt/&lt;/a&gt; ), Addison-Wesley 1999: &quot;Dado un &amp;aacute;rbol arbitrario, transf&amp;oacute;rmalo en un &amp;aacute;rbol de enteros en los que los elementos originales son reemplazados por n&amp;uacute;meros naturales, comenzando desde 0. El mismo elemento tiene que ser reemplazado por el mismo n&amp;uacute;mero en cada ocurrencia, y cuando nos encontramos con un elemento a&amp;uacute;n no visitado tenemos que encontrar un 'nuevo 'n&amp;uacute;mero para que coincida con: &quot;</target>
        </trans-unit>
        <trans-unit id="26553b69de76ef603493e22f9b56e8e8f0e7cc55" translate="yes" xml:space="preserve">
          <source>An example in which using &lt;code&gt;RULES&lt;/code&gt; for specialisation will Win Big:</source>
          <target state="translated">Un ejemplo en el que el uso de &lt;code&gt;RULES&lt;/code&gt; para la especializaci&amp;oacute;n ganar&amp;aacute; a lo grande:</target>
        </trans-unit>
        <trans-unit id="d94ee3fed69a3a2d6cbb28624b1e2c3a6d9674bc" translate="yes" xml:space="preserve">
          <source>An example is shown in the opening example, where &lt;code&gt;sortWith&lt;/code&gt; is supplied with a function that lets it find out the &lt;code&gt;sum salary&lt;/code&gt; for any item in the list comprehension it transforms.</source>
          <target state="translated">Se muestra un ejemplo en el ejemplo de apertura, donde &lt;code&gt;sortWith&lt;/code&gt; se proporciona con una funci&amp;oacute;n que le permite averiguar el &lt;code&gt;sum salary&lt;/code&gt; para cualquier elemento en la comprensi&amp;oacute;n de la lista que transforma.</target>
        </trans-unit>
        <trans-unit id="92f996a82b303141412a037410a747eab994f16e" translate="yes" xml:space="preserve">
          <source>An example of a pre-processor is to convert your source files to the input encoding that GHC expects, i.e. create a script &lt;code&gt;convert.sh&lt;/code&gt; containing the lines:</source>
          <target state="translated">Un ejemplo de un preprocesador es convertir sus archivos fuente a la codificaci&amp;oacute;n de entrada que espera GHC, es decir, crear un script &lt;code&gt;convert.sh&lt;/code&gt; que contenga las l&amp;iacute;neas:</target>
        </trans-unit>
        <trans-unit id="46db75079dc947994d3c8f73c95f7d8d5b14f912" translate="yes" xml:space="preserve">
          <source>An example of a suitable Euclidean function, for &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;'s instance, is &lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un ejemplo de una funci&amp;oacute;n euclidiana adecuada, para el caso de &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; , es &lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c01fc02e927a60926df24dbe6dfbd1b4746279b" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; might be to sort a &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; of strings according to their length:</source>
          <target state="translated">Un ejemplo del uso &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; podr&amp;iacute;a ser la de ordenar una &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; de cadenas seg&amp;uacute;n su longitud:</target>
        </trans-unit>
        <trans-unit id="bd7ad3a60a7ec7010ecf8274734b34b569a3aa76" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; might be to sort a &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; of strings according to their length:</source>
          <target state="translated">Un ejemplo del uso &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; podr&amp;iacute;a ser la de ordenar una &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; de cadenas seg&amp;uacute;n su longitud:</target>
        </trans-unit>
        <trans-unit id="fd78ec4b25edfc34c070db47b86faa55268ea5fe" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; might be to sort a &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; of strings according to their length:</source>
          <target state="translated">Un ejemplo del uso &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; podr&amp;iacute;a ser la de ordenar una &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; de cadenas seg&amp;uacute;n su longitud:</target>
        </trans-unit>
        <trans-unit id="2aef6af3f5288d7dec723009106ae656cb18d0ec" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; might be to sort a &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; of strings according to their length:</source>
          <target state="translated">Un ejemplo del uso &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; podr&amp;iacute;a ser la de ordenar una &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; de cadenas seg&amp;uacute;n su longitud:</target>
        </trans-unit>
        <trans-unit id="37825ef9057435b5d70e42055abe88a2f5caa9ef" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;Adder.dll&lt;/code&gt; from C++ is:</source>
          <target state="translated">Un ejemplo del uso de &lt;code&gt;Adder.dll&lt;/code&gt; desde C ++ es:</target>
        </trans-unit>
        <trans-unit id="284aba923f06dcb4f47c7f3c609dae9afb54f97b" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;Adder.dll&lt;/code&gt; from VBA is:</source>
          <target state="translated">Un ejemplo del uso de &lt;code&gt;Adder.dll&lt;/code&gt; de VBA es:</target>
        </trans-unit>
        <trans-unit id="0a2f6a683146590a81cb59662a6f31a14e0007fe" translate="yes" xml:space="preserve">
          <source>An example of using &lt;code&gt;lookup&lt;/code&gt;:</source>
          <target state="translated">Un ejemplo de uso de &lt;code&gt;lookup&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="62a7372438651bafa2669d1145fa021654f7a3ee" translate="yes" xml:space="preserve">
          <source>An example use of this library for a simple read-eval-print loop (REPL) is the following:</source>
          <target state="translated">Un ejemplo de uso de esta biblioteca para un simple bucle de lectura-evaluación-impresión (REPL)es el siguiente:</target>
        </trans-unit>
        <trans-unit id="57f1733124f33be242778620a4eb6cdc6409382d" translate="yes" xml:space="preserve">
          <source>An example using &lt;code&gt;&lt;a href=&quot;control-monad#v:mfilter&quot;&gt;mfilter&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; monad:</source>
          <target state="translated">Un ejemplo usando &lt;code&gt;&lt;a href=&quot;control-monad#v:mfilter&quot;&gt;mfilter&lt;/a&gt;&lt;/code&gt; con la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="translated">Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="381e8e3e19da9b996ca14e0adbfa4195c12da0b2" translate="yes" xml:space="preserve">
          <source>An exception thrown to a thread by &lt;code&gt;&lt;a href=&quot;system-timeout#v:timeout&quot;&gt;timeout&lt;/a&gt;&lt;/code&gt; to interrupt a timed-out computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a213b0b1515044c4c78bd78637c0113c5cd8be80" translate="yes" xml:space="preserve">
          <source>An exception to be thrown.</source>
          <target state="translated">Una excepción para ser lanzada.</target>
        </trans-unit>
        <trans-unit id="fdf570a64c3420a5e9dc66825959db440f96c3c1" translate="yes" xml:space="preserve">
          <source>An exception type for representing Unicode encoding errors.</source>
          <target state="translated">Un tipo de excepción para representar los errores de codificación de Unicode.</target>
        </trans-unit>
        <trans-unit id="efb9885da89ae0153ca6bd437d81d85bcf6d2a5e" translate="yes" xml:space="preserve">
          <source>An exception-safe wrapper for modifying the contents of an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. Like &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:modifyMVar&quot;&gt;modifyMVar&lt;/a&gt;&lt;/code&gt; will replace the original contents of the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; if an exception is raised during the operation. This function is only atomic if there are no other producers for this &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un contenedor seguro para excepciones para modificar el contenido de un &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Al igual que &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:withMVar&quot;&gt;withMVar&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:modifyMVar&quot;&gt;modifyMVar&lt;/a&gt;&lt;/code&gt; reemplazar&amp;aacute; el contenido original de &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; si se genera una excepci&amp;oacute;n durante la operaci&amp;oacute;n. Esta funci&amp;oacute;n solo es at&amp;oacute;mica si no hay otros productores para este &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7bad0722f6e1639c9b8bf58917fbc9a749282ca" translate="yes" xml:space="preserve">
          <source>An experimental flag to expose all unfoldings, even for very large or recursive functions. This allows for all functions to be inlined while usually GHC would avoid inlining larger functions.</source>
          <target state="translated">Una bandera experimental para exponer todos los despliegues,incluso para funciones muy grandes o recursivas.Esto permite que todas las funciones estén alineadas,mientras que normalmente el GHC evitaría alinear funciones más grandes.</target>
        </trans-unit>
        <trans-unit id="fcc169bba3c04120ce581359b5205c6e6861fa64" translate="yes" xml:space="preserve">
          <source>An expression</source>
          <target state="translated">Una expresión</target>
        </trans-unit>
        <trans-unit id="5b3e9db1ce65c03995d328bea346bec14a73a082" translate="yes" xml:space="preserve">
          <source>An expression that didn't typecheck during compile time was called. This is only possible with -fdefer-type-errors. The &lt;code&gt;String&lt;/code&gt; gives details about the failed type check.</source>
          <target state="translated">Se llam&amp;oacute; a una expresi&amp;oacute;n que no verific&amp;oacute; el tipo durante el tiempo de compilaci&amp;oacute;n. Esto solo es posible con -fdefer-type-errors. La &lt;code&gt;String&lt;/code&gt; proporciona detalles sobre la verificaci&amp;oacute;n de tipo fallida.</target>
        </trans-unit>
        <trans-unit id="23d6c8ea4520ef478bc2079b23a73769921d85ca" translate="yes" xml:space="preserve">
          <source>An expression type signature (&lt;a href=&quot;#exp-type-sigs&quot;&gt;Expression type signatures&lt;/a&gt;)</source>
          <target state="translated">Una firma de tipo de expresi&amp;oacute;n ( &lt;a href=&quot;#exp-type-sigs&quot;&gt;firmas de tipo de expresi&amp;oacute;n&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="befd82a9275f38fcab59cee9b3a9893ec9498cda" translate="yes" xml:space="preserve">
          <source>An expression type signature that has &lt;em&gt;explicit&lt;/em&gt; quantification (using &lt;code&gt;forall&lt;/code&gt;) brings into scope the explicitly-quantified type variables, in the annotated expression. For example:</source>
          <target state="translated">Una firma de tipo de expresi&amp;oacute;n que tiene cuantificaci&amp;oacute;n &lt;em&gt;expl&amp;iacute;cita&lt;/em&gt; (usando &lt;code&gt;forall&lt;/code&gt; ) trae al alcance las variables de tipo cuantificadas expl&amp;iacute;citamente, en la expresi&amp;oacute;n anotada. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b82cc29cb694eff0d6c543cfd3b0fa40875fc57b" translate="yes" xml:space="preserve">
          <source>An extended Haskell interface file, produced by the Haskell compiler.</source>
          <target state="translated">Un archivo de interfaz extendido de Haskell,producido por el compilador de Haskell.</target>
        </trans-unit>
        <trans-unit id="06078bbc223f3f2c54001e817424da6925e7e456" translate="yes" xml:space="preserve">
          <source>An extra flag to pass to the C compiler.</source>
          <target state="translated">Una bandera extra para pasar al compilador C.</target>
        </trans-unit>
        <trans-unit id="4ada7ba8223269b5dc2b7e6f71e6be14db026a01" translate="yes" xml:space="preserve">
          <source>An extra flag to pass to the linker.</source>
          <target state="translated">Una bandera extra para pasar al enlazador.</target>
        </trans-unit>
        <trans-unit id="ff063cb1c991404edd003923980f0718291bfcf8" translate="yes" xml:space="preserve">
          <source>An extra-constraints wildcard can also lead to zero extra constraints to be inferred, e.g.</source>
          <target state="translated">Un comodín de restricciones adicionales también puede llevar a que no haya ninguna restricción adicional que inferir,por ejemplo</target>
        </trans-unit>
        <trans-unit id="8737dcbc364a0104937da45530e573d364b0ae37" translate="yes" xml:space="preserve">
          <source>An extra-constraints wildcard shouldn&amp;rsquo;t prevent the programmer from already listing the constraints he knows or wants to annotate, e.g.</source>
          <target state="translated">Un comod&amp;iacute;n de restricciones adicionales no deber&amp;iacute;a evitar que el programador ya enumere las restricciones que conoce o desea anotar, por ejemplo</target>
        </trans-unit>
        <trans-unit id="d29ed66c17bed0542d86b370f6bc6043d2a378e4" translate="yes" xml:space="preserve">
          <source>An extremely light-weight, fast, and limited representation of a string of up to (2*WORDSIZE - 2) bits. In fact, there are two representations, misleadingly named bit queue builder and bit queue. The builder supports only &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:emptyQB&quot;&gt;emptyQB&lt;/a&gt;&lt;/code&gt;, creating an empty builder, and &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:snocQB&quot;&gt;snocQB&lt;/a&gt;&lt;/code&gt;, enqueueing a bit. The bit queue builder is then turned into a bit queue using &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:buildQ&quot;&gt;buildQ&lt;/a&gt;&lt;/code&gt;, after which bits can be removed one by one using &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:unconsQ&quot;&gt;unconsQ&lt;/a&gt;&lt;/code&gt;. If the size limit is exceeded, further operations will silently produce nonsense.</source>
          <target state="translated">Una representaci&amp;oacute;n extremadamente ligera, r&amp;aacute;pida y limitada de una cadena de hasta (2 * WORDSIZE - 2) bits. De hecho, hay dos representaciones, generador de colas de bits con nombres enga&amp;ntilde;osos y cola de bits. El constructor solo admite &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:emptyQB&quot;&gt;emptyQB&lt;/a&gt;&lt;/code&gt; , creando un constructor vac&amp;iacute;o, y &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:snocQB&quot;&gt;snocQB&lt;/a&gt;&lt;/code&gt; , poniendo un poco en cola. Luego, el constructor de colas de bits se convierte en una cola de bits usando &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:buildQ&quot;&gt;buildQ&lt;/a&gt;&lt;/code&gt; , despu&amp;eacute;s de lo cual los bits se pueden eliminar uno por uno usando &lt;code&gt;&lt;a href=&quot;utils-containers-internal-bitqueue#v:unconsQ&quot;&gt;unconsQ&lt;/a&gt;&lt;/code&gt; . Si se excede el l&amp;iacute;mite de tama&amp;ntilde;o, las operaciones posteriores producir&amp;aacute;n tonter&amp;iacute;as silenciosamente.</target>
        </trans-unit>
        <trans-unit id="4a1b2653a1c9d958510f1ed844f74e8ecb8d1c49" translate="yes" xml:space="preserve">
          <source>An idiom that is common in some languages is to find the numeric offset of a character or substring, then use that number to split or trim the searched string. With a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value, this approach would require two O(n) operations: one to perform the search, and one to operate from wherever the search ended.</source>
          <target state="translated">Un modismo que es com&amp;uacute;n en algunos idiomas es encontrar el desplazamiento num&amp;eacute;rico de un car&amp;aacute;cter o subcadena, luego usar ese n&amp;uacute;mero para dividir o recortar la cadena buscada. Con un valor de &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; o , este enfoque requerir&amp;iacute;a dos operaciones O (n): una para realizar la b&amp;uacute;squeda y otra para operar desde donde termin&amp;oacute; la b&amp;uacute;squeda.</target>
        </trans-unit>
        <trans-unit id="67c017344c03d68395eeb6821615e8a8bfe1033a" translate="yes" xml:space="preserve">
          <source>An idle-time garbage collection has been started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d426bd25abbccce84e0bdf47cb062c833bbb269" translate="yes" xml:space="preserve">
          <source>An illustrative example for these strictness properties is the implementation of Base64 decoding (&lt;a href=&quot;http://en.wikipedia.org/wiki/Base64&quot;&gt;http://en.wikipedia.org/wiki/Base64&lt;/a&gt;).</source>
          <target state="translated">Un ejemplo ilustrativo de estas propiedades de rigurosidad es la implementaci&amp;oacute;n de la decodificaci&amp;oacute;n Base64 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Base64&quot;&gt;http://en.wikipedia.org/wiki/Base64&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d20888eadb4852094fcef2f3603d26df3e4539de" translate="yes" xml:space="preserve">
          <source>An implementation is entitled to assume the following laws about these operations:</source>
          <target state="translated">Una ejecución tiene derecho a asumir las siguientes leyes sobre estas operaciones:</target>
        </trans-unit>
        <trans-unit id="5dd9779568fb3b84f00870e9c9dc5e99b34e41c6" translate="yes" xml:space="preserve">
          <source>An implementation is free to flush the buffer more frequently, but not less frequently, than specified above. The output buffer is emptied as soon as it has been written out.</source>
          <target state="translated">Una aplicación puede limpiar la memoria intermedia con más frecuencia,pero no menos,que la especificada anteriormente.El búfer de salida se vacía tan pronto como se ha escrito.</target>
        </trans-unit>
        <trans-unit id="764ec8855ef58c6a8f42aecb228f30ad41274dec" translate="yes" xml:space="preserve">
          <source>An implementation of the old &lt;code&gt;atomicModifyMutVar#&lt;/code&gt; primop in terms of the new &lt;code&gt;&lt;a href=&quot;ghc-exts#v:atomicModifyMutVar2-35-&quot;&gt;atomicModifyMutVar2#&lt;/a&gt;&lt;/code&gt; primop, for backwards compatibility. The type of this function is a bit bogus. It's best to think of it as having type</source>
          <target state="translated">Una implementaci&amp;oacute;n del antiguo &lt;code&gt;atomicModifyMutVar#&lt;/code&gt; primop en t&amp;eacute;rminos del nuevo &lt;code&gt;&lt;a href=&quot;ghc-exts#v:atomicModifyMutVar2-35-&quot;&gt;atomicModifyMutVar2#&lt;/a&gt;&lt;/code&gt; primop, para compatibilidad con versiones anteriores. El tipo de esta funci&amp;oacute;n es un poco falso. Es mejor pensar que tiene tipo</target>
        </trans-unit>
        <trans-unit id="055bfb77bc4911c1d902e9c7e877458502ecd8a2" translate="yes" xml:space="preserve">
          <source>An implicit parameter is &lt;em&gt;bound&lt;/em&gt; using the standard &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;where&lt;/code&gt; binding forms. For example, we define the &lt;code&gt;min&lt;/code&gt; function by binding &lt;code&gt;cmp&lt;/code&gt;.</source>
          <target state="translated">Un par&amp;aacute;metro impl&amp;iacute;cito se &lt;em&gt;enlaza&lt;/em&gt; usando el est&amp;aacute;ndar &lt;code&gt;let&lt;/code&gt; o &lt;code&gt;where&lt;/code&gt; binding. Por ejemplo, definimos la funci&amp;oacute;n &lt;code&gt;min&lt;/code&gt; vinculando &lt;code&gt;cmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83f900390293c670e8a8d65bb9afeb5cc8fcf2b6" translate="yes" xml:space="preserve">
          <source>An implicit parameter occurs in an expression using the special form &lt;code&gt;?x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is any valid identifier (e.g. &lt;code&gt;ord ?x&lt;/code&gt; is a valid expression). Use of this construct also introduces a new dynamic-binding constraint in the type of the expression. For example, the following definition shows how we can define an implicitly parameterised sort function in terms of an explicitly parameterised &lt;code&gt;sortBy&lt;/code&gt; function:</source>
          <target state="translated">Un par&amp;aacute;metro impl&amp;iacute;cito ocurre en una expresi&amp;oacute;n que usa la forma especial &lt;code&gt;?x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; es cualquier identificador v&amp;aacute;lido (por ejemplo, &lt;code&gt;ord ?x&lt;/code&gt; es una expresi&amp;oacute;n v&amp;aacute;lida). El uso de esta construcci&amp;oacute;n tambi&amp;eacute;n introduce una nueva restricci&amp;oacute;n de enlace din&amp;aacute;mico en el tipo de expresi&amp;oacute;n. Por ejemplo, la siguiente definici&amp;oacute;n muestra c&amp;oacute;mo podemos definir una funci&amp;oacute;n de ordenaci&amp;oacute;n parametrizada impl&amp;iacute;citamente en t&amp;eacute;rminos de una funci&amp;oacute;n &lt;code&gt;sortBy&lt;/code&gt; parametrizada expl&amp;iacute;citamente :</target>
        </trans-unit>
        <trans-unit id="2e728fe00beb5b98842848d858c512e28ed428db" translate="yes" xml:space="preserve">
          <source>An implicit-parameter binding group must be a collection of simple bindings to implicit-style variables (no function-style bindings, and no type signatures); these bindings are neither polymorphic or recursive.</source>
          <target state="translated">Un grupo de encuadernación de parámetros implícitos debe ser una colección de encuadernaciones simples a variables de estilo implícito (sin encuadernaciones de estilo de función y sin firmas de tipo);estas encuadernaciones no son ni polimórficas ni recursivas.</target>
        </trans-unit>
        <trans-unit id="055d0a98d0fca1648c6546c9fc6ca5cb2c9b9157" translate="yes" xml:space="preserve">
          <source>An implicit-parameter type constraint differs from other type class constraints in the following way: All uses of a particular implicit parameter must have the same type. This means that the type of &lt;code&gt;(?x, ?x)&lt;/code&gt; is &lt;code&gt;(?x::a) =&amp;gt; (a,a)&lt;/code&gt;, and not &lt;code&gt;(?x::a, ?x::b) =&amp;gt; (a, b)&lt;/code&gt;, as would be the case for type class constraints.</source>
          <target state="translated">Una restricci&amp;oacute;n de tipo de par&amp;aacute;metro impl&amp;iacute;cito difiere de otras restricciones de clase de tipo de la siguiente manera: Todos los usos de un par&amp;aacute;metro impl&amp;iacute;cito particular deben tener el mismo tipo. Esto significa que el tipo de &lt;code&gt;(?x, ?x)&lt;/code&gt; es &lt;code&gt;(?x::a) =&amp;gt; (a,a)&lt;/code&gt; , y no &lt;code&gt;(?x::a, ?x::b) =&amp;gt; (a, b)&lt;/code&gt; , como ser&amp;iacute;a el caso de las restricciones de clase de tipo.</target>
        </trans-unit>
        <trans-unit id="41e571a04d49adc778f99f9915a653a4d8383f97" translate="yes" xml:space="preserve">
          <source>An infix synonym for &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un sin&amp;oacute;nimo infijo de &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="676b0466c764d24182ade55c20826949e1613615" translate="yes" xml:space="preserve">
          <source>An infix synonym for &lt;code&gt;&lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un sin&amp;oacute;nimo infijo de &lt;code&gt;&lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45e7ca78829cc48699173c5bd84e19553844a4fb" translate="yes" xml:space="preserve">
          <source>An initial environment.</source>
          <target state="translated">Un entorno inicial.</target>
        </trans-unit>
        <trans-unit id="032f25891e62fb8921b2ffd173fccd585c489d81" translate="yes" xml:space="preserve">
          <source>An installed package is either &lt;em&gt;exposed&lt;/em&gt; or &lt;em&gt;hidden&lt;/em&gt; by default. Packages hidden by default are listed in parentheses (e.g. &lt;code&gt;(lang-1.0)&lt;/code&gt;), or possibly in blue if your terminal supports colour, in the output of &lt;code&gt;ghc-pkg list&lt;/code&gt;. Command-line flags, described below, allow you to expose a hidden package or hide an exposed one. Only modules from exposed packages may be imported by your Haskell code; if you try to import a module from a hidden package, GHC will emit an error message. It should be noted that a hidden package might still get linked with your program as a dependency of an exposed package, it is only restricted from direct imports.</source>
          <target state="translated">Un paquete instalado est&amp;aacute; &lt;em&gt;expuesto&lt;/em&gt; u &lt;em&gt;oculto&lt;/em&gt; de forma predeterminada. Los paquetes ocultos por defecto se enumeran entre par&amp;eacute;ntesis (por ejemplo, &lt;code&gt;(lang-1.0)&lt;/code&gt; ), o posiblemente en azul si su terminal admite color, en la salida de la &lt;code&gt;ghc-pkg list&lt;/code&gt; . Los indicadores de la l&amp;iacute;nea de comandos, que se describen a continuaci&amp;oacute;n, le permiten exponer un paquete oculto u ocultar uno expuesto. Su c&amp;oacute;digo Haskell solo puede importar m&amp;oacute;dulos de paquetes expuestos; si intenta importar un m&amp;oacute;dulo de un paquete oculto, GHC emitir&amp;aacute; un mensaje de error. Cabe se&amp;ntilde;alar que un paquete oculto a&amp;uacute;n puede vincularse con su programa como una dependencia de un paquete expuesto, solo est&amp;aacute; restringido a las importaciones directas.</target>
        </trans-unit>
        <trans-unit id="6e9e64155c356c6955cab41597813ffebcaa65a5" translate="yes" xml:space="preserve">
          <source>An instance can define either this and &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateL&quot;&gt;rotateL&lt;/a&gt;&lt;/code&gt; or the unified &lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt;&lt;/code&gt;, depending on which is more convenient for the type in question.</source>
          <target state="translated">Una instancia puede definir esto y &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateL&quot;&gt;rotateL&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt;&lt;/code&gt; unificado , dependiendo de cu&amp;aacute;l sea m&amp;aacute;s conveniente para el tipo en cuesti&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d84b0a9b1da15cdbb5efba9440685e88ebcccf36" translate="yes" xml:space="preserve">
          <source>An instance can define either this and &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateR&quot;&gt;rotateR&lt;/a&gt;&lt;/code&gt; or the unified &lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt;&lt;/code&gt;, depending on which is more convenient for the type in question.</source>
          <target state="translated">Una instancia puede definir esto y &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateR&quot;&gt;rotateR&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt;&lt;/code&gt; unificado , dependiendo de cu&amp;aacute;l sea m&amp;aacute;s conveniente para el tipo en cuesti&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="771255935064afcdb9c5d67ea14ceedd0c402b64" translate="yes" xml:space="preserve">
          <source>An instance can define either this and &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftL&quot;&gt;shiftL&lt;/a&gt;&lt;/code&gt; or the unified &lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, depending on which is more convenient for the type in question.</source>
          <target state="translated">Una instancia puede definir esto y &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftL&quot;&gt;shiftL&lt;/a&gt;&lt;/code&gt; o el &lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; unificado , dependiendo de cu&amp;aacute;l sea m&amp;aacute;s conveniente para el tipo en cuesti&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c91e8ae7413d71da86962a384a3de3aff328dd8d" translate="yes" xml:space="preserve">
          <source>An instance can define either this and &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftR&quot;&gt;shiftR&lt;/a&gt;&lt;/code&gt; or the unified &lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, depending on which is more convenient for the type in question.</source>
          <target state="translated">Una instancia puede definir esto y &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftR&quot;&gt;shiftR&lt;/a&gt;&lt;/code&gt; o el &lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; unificado , dependiendo de cu&amp;aacute;l sea m&amp;aacute;s conveniente para el tipo en cuesti&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9505be87e1ced40bfc25bab37f391a9491bdd4ef" translate="yes" xml:space="preserve">
          <source>An instance can define either this unified &lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateL&quot;&gt;rotateL&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateR&quot;&gt;rotateR&lt;/a&gt;&lt;/code&gt;, depending on which is more convenient for the type in question.</source>
          <target state="translated">Una instancia puede definir este &lt;code&gt;&lt;a href=&quot;data-bits#v:rotate&quot;&gt;rotate&lt;/a&gt;&lt;/code&gt; unificado o &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateL&quot;&gt;rotateL&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-bits#v:rotateR&quot;&gt;rotateR&lt;/a&gt;&lt;/code&gt; , dependiendo de cu&amp;aacute;l sea m&amp;aacute;s conveniente para el tipo en cuesti&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1f6f1ff04bfa289ae107fe2cb73d2dc665d5edae" translate="yes" xml:space="preserve">
          <source>An instance can define either this unified &lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftL&quot;&gt;shiftL&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftR&quot;&gt;shiftR&lt;/a&gt;&lt;/code&gt;, depending on which is more convenient for the type in question.</source>
          <target state="translated">Una instancia puede definir este &lt;code&gt;&lt;a href=&quot;data-bits#v:shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; unificado o &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftL&quot;&gt;shiftL&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;data-bits#v:shiftR&quot;&gt;shiftR&lt;/a&gt;&lt;/code&gt; , dependiendo de cu&amp;aacute;l sea m&amp;aacute;s conveniente para el tipo en cuesti&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b91c1218cc10bd9b2d241b41fc654dedb75905ac" translate="yes" xml:space="preserve">
          <source>An instance declaration has the form</source>
          <target state="translated">Una declaración de instancia tiene la forma</target>
        </trans-unit>
        <trans-unit id="0422a1c1ceadfc36e077b4145e342be0d4fe9752" translate="yes" xml:space="preserve">
          <source>An instance declaration in a module &lt;code&gt;M&lt;/code&gt; is an &lt;em&gt;orphan instance&lt;/em&gt; if orphan instance</source>
          <target state="translated">Una declaraci&amp;oacute;n de instancia en un m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; es una &lt;em&gt;instancia&lt;/em&gt; hu&amp;eacute;rfana si una &lt;em&gt;instancia&lt;/em&gt; hu&amp;eacute;rfana</target>
        </trans-unit>
        <trans-unit id="f659879efb627bdd5cecbbab282a1e9e47a6cd51" translate="yes" xml:space="preserve">
          <source>An instance declaration is &lt;em&gt;more specific&lt;/em&gt; than another iff the head of former is a substitution instance of the latter. For example (D) is &amp;ldquo;more specific&amp;rdquo; than (C) because you can get from (C) to (D) by substituting &lt;code&gt;a := Int&lt;/code&gt;.</source>
          <target state="translated">Una declaraci&amp;oacute;n de instancia es &lt;em&gt;m&amp;aacute;s espec&amp;iacute;fica&lt;/em&gt; que otra si el encabezado de la primera es una instancia de sustituci&amp;oacute;n de la &amp;uacute;ltima. Por ejemplo, (D) es &quot;m&amp;aacute;s espec&amp;iacute;fico&quot; que (C) porque puede ir de (C) a (D) sustituyendo &lt;code&gt;a := Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a925b49f0219e891d285365b66dce29fa02d0e7e" translate="yes" xml:space="preserve">
          <source>An instance for an associated family can only appear as part of an instance declarations of the class in which the family was declared, just as with the equations of the methods of a class.</source>
          <target state="translated">Una instancia para una familia asociada sólo puede aparecer como parte de una declaración de instancia de la clase en la que se declaró la familia,al igual que con las ecuaciones de los métodos de una clase.</target>
        </trans-unit>
        <trans-unit id="6797a394b5a38cb77951470781b2ae0ce53d676c" translate="yes" xml:space="preserve">
          <source>An instance is &lt;em&gt;incoherent&lt;/em&gt; if: it has an &lt;code&gt;INCOHERENT&lt;/code&gt; pragma; or if the instance has no pragma and it appears in a module compiled with &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt;&lt;code&gt;IncoherentInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Una instancia es &lt;em&gt;incoherente&lt;/em&gt; si: tiene un pragma &lt;code&gt;INCOHERENT&lt;/code&gt; E ; o si la instancia no tiene pragma y aparece en un m&amp;oacute;dulo compilado con &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt; &lt;code&gt;IncoherentInstances&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b66884ab42d5d8b014e6fc23b4324da15721d24" translate="yes" xml:space="preserve">
          <source>An instance is &lt;em&gt;overlappable&lt;/em&gt; if: it has an &lt;code&gt;OVERLAPPABLE&lt;/code&gt; or &lt;code&gt;OVERLAPS&lt;/code&gt; pragma; or if the instance has no pragma and it appears in a module compiled with &lt;a href=&quot;#extension-OverlappingInstances&quot;&gt;&lt;code&gt;OverlappingInstances&lt;/code&gt;&lt;/a&gt;; or if the instance is incoherent.</source>
          <target state="translated">Una instancia se puede &lt;em&gt;superponer&lt;/em&gt; si: tiene un pragma &lt;code&gt;OVERLAPPABLE&lt;/code&gt; u &lt;code&gt;OVERLAPS&lt;/code&gt; ; o si la instancia no tiene pragma y aparece en un m&amp;oacute;dulo compilado con &lt;a href=&quot;#extension-OverlappingInstances&quot;&gt; &lt;code&gt;OverlappingInstances&lt;/code&gt; &lt;/a&gt; ; o si la instancia es incoherente.</target>
        </trans-unit>
        <trans-unit id="c64945d958795bcda270b74e76ecf8e08588cfbe" translate="yes" xml:space="preserve">
          <source>An instance is &lt;em&gt;overlapping&lt;/em&gt; if: it has an &lt;code&gt;OVERLAPPING&lt;/code&gt; or &lt;code&gt;OVERLAPS&lt;/code&gt; pragma; or if the instance has no pragma and it appears in a module compiled with &lt;a href=&quot;#extension-OverlappingInstances&quot;&gt;&lt;code&gt;OverlappingInstances&lt;/code&gt;&lt;/a&gt;; or if the instance is incoherent.</source>
          <target state="translated">Una instancia es &lt;em&gt;la superposici&amp;oacute;n&lt;/em&gt; si: tiene una &lt;code&gt;OVERLAPPING&lt;/code&gt; o &lt;code&gt;OVERLAPS&lt;/code&gt; pragma; o si la instancia no tiene pragma y aparece en un m&amp;oacute;dulo compilado con &lt;a href=&quot;#extension-OverlappingInstances&quot;&gt; &lt;code&gt;OverlappingInstances&lt;/code&gt; &lt;/a&gt; ; o si la instancia es incoherente.</target>
        </trans-unit>
        <trans-unit id="da552798a9dccf85004f0b6505ae33c512663e04" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; is provided, which implements exact equality modulo reordering of the tags in the &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt; field.</source>
          <target state="translated">Se proporciona una instancia de &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , que implementa el reordenamiento de m&amp;oacute;dulo de igualdad exacta de las etiquetas en el campo &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41664f4a7f5f1d180ac492e6274bf660ab0d02d1" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; is also provided, which gives lexicographic ordering on the &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt; fields (i.e. 2.1 &amp;gt; 2.0, 1.2.3 &amp;gt; 1.2.2, etc.). This is expected to be sufficient for many uses, but note that you may need to use a more specific ordering for your versioning scheme. For example, some versioning schemes may include pre-releases which have tags &lt;code&gt;&quot;pre1&quot;&lt;/code&gt;, &lt;code&gt;&quot;pre2&quot;&lt;/code&gt;, and so on, and these would need to be taken into account when determining ordering. In some cases, date ordering may be more appropriate, so the application would have to look for &lt;code&gt;date&lt;/code&gt; tags in the &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt; field and compare those. The bottom line is, don't always assume that &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; and other &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; operations are the right thing for every &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n se proporciona una instancia de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; , que proporciona un orden lexicogr&amp;aacute;fico en los campos &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt; (es decir, 2.1&amp;gt; 2.0, 1.2.3&amp;gt; 1.2.2, etc.). Se espera que esto sea suficiente para muchos usos, pero tenga en cuenta que es posible que deba utilizar un orden m&amp;aacute;s espec&amp;iacute;fico para su esquema de control de versiones. Por ejemplo, algunos esquemas de control de versiones pueden incluir versiones preliminares que tienen etiquetas &lt;code&gt;&quot;pre1&quot;&lt;/code&gt; , &lt;code&gt;&quot;pre2&quot;&lt;/code&gt; , etc., y es necesario tenerlas en cuenta al determinar el pedido. En algunos casos, el orden por fecha puede ser m&amp;aacute;s apropiado, por lo que la aplicaci&amp;oacute;n tendr&amp;iacute;a que buscar etiquetas de &lt;code&gt;date&lt;/code&gt; en el campo &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt; y compararlas. La conclusi&amp;oacute;n es que no siempre asuma que &lt;code&gt;&lt;a href=&quot;data-ord#v:compare&quot;&gt;compare&lt;/a&gt;&lt;/code&gt; y otras operaciones de &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; son las adecuadas para cada &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdfa656ab79a71bc26c499aa546810046ca396ff" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;&lt;a href=&quot;system-console-haskeline-monadexception#t:MonadException&quot;&gt;MonadException&lt;/a&gt;&lt;/code&gt; is generally made up of monad transformers layered on top of the IO monad.</source>
          <target state="translated">Una instancia de &lt;code&gt;&lt;a href=&quot;system-console-haskeline-monadexception#t:MonadException&quot;&gt;MonadException&lt;/a&gt;&lt;/code&gt; generalmente se compone de transformadores de m&amp;oacute;nada superpuestos a la m&amp;oacute;nada IO.</target>
        </trans-unit>
        <trans-unit id="8ef31ea41a9ba018762805e0743531d210cd6284" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Stream&lt;/code&gt; has stream type &lt;code&gt;s&lt;/code&gt;, underlying monad &lt;code&gt;m&lt;/code&gt; and token type &lt;code&gt;t&lt;/code&gt; determined by the stream</source>
          <target state="translated">Una instancia de &lt;code&gt;Stream&lt;/code&gt; tiene el tipo de flujo &lt;code&gt;s&lt;/code&gt; , la m&amp;oacute;nada subyacente &lt;code&gt;m&lt;/code&gt; y el tipo de token &lt;code&gt;t&lt;/code&gt; determinado por el flujo</target>
        </trans-unit>
        <trans-unit id="182b96f131379637cff152270abf17ec6ecf1c40" translate="yes" xml:space="preserve">
          <source>An integer denoting the number &lt;code&gt;l&lt;/code&gt; of printed completions,</source>
          <target state="translated">Un entero que denota el n&amp;uacute;mero &lt;code&gt;l&lt;/code&gt; de terminaciones impresas,</target>
        </trans-unit>
        <trans-unit id="5705ba72313d6782ee3dec31edcfe71a4e6bfe65" translate="yes" xml:space="preserve">
          <source>An integer literal &lt;code&gt;368&lt;/code&gt; means &amp;ldquo;&lt;code&gt;fromInteger (368::Integer)&lt;/code&gt;&amp;rdquo;, rather than &amp;ldquo;&lt;code&gt;Prelude.fromInteger (368::Integer)&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">Un literal entero &lt;code&gt;368&lt;/code&gt; significa &quot; &lt;code&gt;fromInteger (368::Integer)&lt;/code&gt; &quot;, en lugar de &quot; &lt;code&gt;Prelude.fromInteger (368::Integer)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="7fcfdbe8f2cac93c2ec79190607c573c3d60d86c" translate="yes" xml:space="preserve">
          <source>An intermediate result in a scan.</source>
          <target state="translated">Un resultado intermedio en una exploración.</target>
        </trans-unit>
        <trans-unit id="4fdb6e08d830a1c3979bfdc3fd7343eb5abdfb8f" translate="yes" xml:space="preserve">
          <source>An invocation of GHC takes the following form:</source>
          <target state="translated">Una invocación de GHC toma la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="edb1f7c1dc03b67ee6b809077f9e5604578eb554" translate="yes" xml:space="preserve">
          <source>An llvm-intermediate-language bitcode file, usually produced by the compiler.</source>
          <target state="translated">Un archivo de código de bits de lenguaje intermedio de llvm,normalmente producido por el compilador.</target>
        </trans-unit>
        <trans-unit id="11d0526a9a9e3e29d8774eda5075a8938912393d" translate="yes" xml:space="preserve">
          <source>An llvm-intermediate-language source file, usually produced by the compiler.</source>
          <target state="translated">Un archivo de fuente de lenguaje intermedio de llvm,normalmente producido por el compilador.</target>
        </trans-unit>
        <trans-unit id="2e0a23e4bb2863d568c7f363da30cd3b735cae06" translate="yes" xml:space="preserve">
          <source>An object &lt;code&gt;B&lt;/code&gt; retains object &lt;code&gt;A&lt;/code&gt; if (i) &lt;code&gt;B&lt;/code&gt; is a retainer object and (ii) object &lt;code&gt;A&lt;/code&gt; can be reached by recursively following pointers starting from object &lt;code&gt;B&lt;/code&gt;, but not meeting any other retainer objects on the way. Each live object is retained by one or more retainer objects, collectively called its retainer set, or its retainer set, or its retainers.</source>
          <target state="translated">Un objeto &lt;code&gt;B&lt;/code&gt; retiene el objeto &lt;code&gt;A&lt;/code&gt; si (i) &lt;code&gt;B&lt;/code&gt; es un objeto retenedor y (ii) se puede alcanzar el objeto &lt;code&gt;A&lt;/code&gt; siguiendo recursivamente punteros a partir del objeto &lt;code&gt;B&lt;/code&gt; , pero sin encontrar ning&amp;uacute;n otro objeto retenedor en el camino. Cada objeto vivo es retenido por uno o m&amp;aacute;s objetos retenedores, llamados colectivamente su conjunto retenedor, o su conjunto retenedor, o sus retenedores.</target>
        </trans-unit>
        <trans-unit id="42910c59b4eb5fc3b9c19c32b311eab9e4bf6a36" translate="yes" xml:space="preserve">
          <source>An object file, produced by an assembler.</source>
          <target state="translated">Un archivo de objetos,producido por un ensamblador.</target>
        </trans-unit>
        <trans-unit id="18c88b3ac1bd46ecfef3ff8276bc55927b9a64fe" translate="yes" xml:space="preserve">
          <source>An object which is never used is said to be in the void state for its whole lifetime.</source>
          <target state="translated">Se dice que un objeto que nunca se usa está en estado de vacío durante toda su vida.</target>
        </trans-unit>
        <trans-unit id="5199083ec8a4ed3cb5139c93d4aeb1ab1a44d8f3" translate="yes" xml:space="preserve">
          <source>An offset, counted in bytes.</source>
          <target state="translated">Una compensación,contada en bytes.</target>
        </trans-unit>
        <trans-unit id="4e93ce4db75561be705e22c1086fdc986365d26d" translate="yes" xml:space="preserve">
          <source>An operator version of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una versi&amp;oacute;n de operador de &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="269ede13d98d287f0dd18a20f718823a44965f42" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;E&lt;/code&gt; character indicates an alternate formatting. Currently this only affects &lt;code&gt;%Z&lt;/code&gt; and &lt;code&gt;%z&lt;/code&gt;.</source>
          <target state="translated">Un car&amp;aacute;cter &lt;code&gt;E&lt;/code&gt; opcional indica un formato alternativo. Actualmente, esto solo afecta a &lt;code&gt;%Z&lt;/code&gt; y &lt;code&gt;%z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="147554bd72cb36203ba4e437f86b5856939ecef7" translate="yes" xml:space="preserve">
          <source>An optional escape character</source>
          <target state="translated">Un personaje de escape opcional</target>
        </trans-unit>
        <trans-unit id="470bd4645aa2a37d61b6006cf88e182f77dda35b" translate="yes" xml:space="preserve">
          <source>An overloaded interface to mutable arrays. For array types which can be used with this interface, see &lt;a href=&quot;data-array-io&quot;&gt;Data.Array.IO&lt;/a&gt;, &lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST&lt;/a&gt;, and &lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable&lt;/a&gt;.</source>
          <target state="translated">Una interfaz sobrecargada para matrices mutables. Para conocer los tipos de matrices que se pueden utilizar con esta interfaz, consulte &lt;a href=&quot;data-array-io&quot;&gt;Data.Array.IO&lt;/a&gt; , &lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST&lt;/a&gt; y &lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed76ddf939d258125a9d07e26bf81d6563190100" translate="yes" xml:space="preserve">
          <source>An overloaded interface to mutable arrays. For array types which can be used with this interface, see &lt;a href=&quot;data-array-io&quot;&gt;Data.Array.IO&lt;/a&gt;, &lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST&lt;/a&gt;, and &lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable&lt;/a&gt;. . Safe API only of &lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt;.</source>
          <target state="translated">Una interfaz sobrecargada para matrices mutables. Para conocer los tipos de matrices que se pueden utilizar con esta interfaz, consulte &lt;a href=&quot;data-array-io&quot;&gt;Data.Array.IO&lt;/a&gt; , &lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST&lt;/a&gt; y &lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable&lt;/a&gt; . . API segura solo de &lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b46b21c3d0ad448b7dbfafad15287d739812f46d" translate="yes" xml:space="preserve">
          <source>An overloaded label &amp;ldquo;&lt;code&gt;#foo&lt;/code&gt;&amp;rdquo; means &amp;ldquo;&lt;code&gt;fromLabel @&quot;foo&quot;&lt;/code&gt;&amp;rdquo;, rather than &amp;ldquo;&lt;code&gt;GHC.OverloadedLabels.fromLabel @&quot;foo&quot;&lt;/code&gt;&amp;rdquo; (see &lt;a href=&quot;#overloaded-labels&quot;&gt;Overloaded labels&lt;/a&gt;).</source>
          <target state="translated">Una etiqueta sobrecargada &amp;ldquo; &lt;code&gt;#foo&lt;/code&gt; &amp;rdquo; significa &amp;ldquo; &lt;code&gt;fromLabel @&quot;foo&quot;&lt;/code&gt; &amp;rdquo;, en lugar de &amp;ldquo; &lt;code&gt;GHC.OverloadedLabels.fromLabel @&quot;foo&quot;&lt;/code&gt; &amp;rdquo; (consulte &lt;a href=&quot;#overloaded-labels&quot;&gt;Etiquetas sobrecargadas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9468ea5c26fba1b901ed7aacb46a3a82ed93f64b" translate="yes" xml:space="preserve">
          <source>An un-associated open type or data family declaration &lt;em&gt;always&lt;/em&gt; has a CUSK; un-annotated type variables default to kind &lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">Una declaraci&amp;oacute;n de familia de datos o tipo abierto no asociado &lt;em&gt;siempre&lt;/em&gt; tiene una CUSK; las variables de tipo sin anotaciones predeterminadas son de tipo &lt;code&gt;Type&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="130b0c42eca7246bf15b8c958b406f7273873440" translate="yes" xml:space="preserve">
          <source>An unbounded size unsigned integer type is available with &lt;code&gt;&lt;a href=&quot;numeric-natural#v:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Un tipo de entero sin signo de tama&amp;ntilde;o ilimitado est&amp;aacute; disponible con &lt;code&gt;&lt;a href=&quot;numeric-natural#v:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="860459917b5a02de589e908d125eff6b77571ea2" translate="yes" xml:space="preserve">
          <source>An unboxed sum of the given reps</source>
          <target state="translated">Una suma sin caja de los representantes dados</target>
        </trans-unit>
        <trans-unit id="7a6c34e18a2ffbd1385e4ed434dc780b5897e179" translate="yes" xml:space="preserve">
          <source>An unboxed tuple of the given reps</source>
          <target state="translated">Una tupla sin caja de los representantes dados</target>
        </trans-unit>
        <trans-unit id="58d8e58dbcaf88f766575185e1685146830b08ca" translate="yes" xml:space="preserve">
          <source>An unevaluated spark has been garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc5e3262cb4421f0eecc8b241d84ce50b4e2631" translate="yes" xml:space="preserve">
          <source>An uninitialised record field was used. The &lt;code&gt;String&lt;/code&gt; gives information about the source location where the record was constructed.</source>
          <target state="translated">Se utiliz&amp;oacute; un campo de registro no inicializado. La &lt;code&gt;String&lt;/code&gt; proporciona informaci&amp;oacute;n sobre la ubicaci&amp;oacute;n de origen donde se construy&amp;oacute; el registro.</target>
        </trans-unit>
        <trans-unit id="35d4a9def65ccb498f533dbeaee2b2071da0bbc7" translate="yes" xml:space="preserve">
          <source>An unqualified name; dynamically bound</source>
          <target state="translated">Un nombre no calificado;atado dinámicamente</target>
        </trans-unit>
        <trans-unit id="dd607d2def70825ae686680e0742f5955f4c5559" translate="yes" xml:space="preserve">
          <source>An unsigned integral type that can be losslessly converted to and from &lt;code&gt;Ptr&lt;/code&gt;. This type is also compatible with the C99 type &lt;code&gt;uintptr_t&lt;/code&gt;, and can be marshalled to and from that type safely.</source>
          <target state="translated">Un tipo integral sin firmar que se puede convertir sin p&amp;eacute;rdidas hacia y desde &lt;code&gt;Ptr&lt;/code&gt; . Este tipo tambi&amp;eacute;n es compatible con el tipo C99 &lt;code&gt;uintptr_t&lt;/code&gt; , y se puede clasificar hacia y desde ese tipo de forma segura.</target>
        </trans-unit>
        <trans-unit id="14042e31bb5752011e77595736a7c337f4b6cf90" translate="yes" xml:space="preserve">
          <source>And a response file &lt;code&gt;args.txt&lt;/code&gt;:</source>
          <target state="translated">Y un archivo de respuesta &lt;code&gt;args.txt&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cbd0ba0de747b34708a0f30527430f5a5c552189" translate="yes" xml:space="preserve">
          <source>And five warning flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523755b21b99024bbe43a1c9df96976e561c8e78" translate="yes" xml:space="preserve">
          <source>And inside &lt;code&gt;scheduleCallback&lt;/code&gt;, we create a callback that will in due course store the result data in the &lt;code&gt;Ptr Result&lt;/code&gt;, and then call &lt;code&gt;hs_try_putmvar()&lt;/code&gt;.</source>
          <target state="translated">Y dentro de &lt;code&gt;scheduleCallback&lt;/code&gt; , creamos una devoluci&amp;oacute;n de llamada que, a su debido tiempo, almacenar&amp;aacute; los datos del resultado en &lt;code&gt;Ptr Result&lt;/code&gt; , y luego llamaremos a &lt;code&gt;hs_try_putmvar()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c289bb0b2889358d5359dfed88823350fe8916e4" translate="yes" xml:space="preserve">
          <source>And multi-line spans are possible too:</source>
          <target state="translated">Y los tramos de varias líneas también son posibles:</target>
        </trans-unit>
        <trans-unit id="5e61586d1382fe8ad684bf10b7ab8931fb17aed0" translate="yes" xml:space="preserve">
          <source>And one general flag:</source>
          <target state="translated">Y una bandera general:</target>
        </trans-unit>
        <trans-unit id="dea1f9e397867b9cb1063d86c4c517eae2eedcd1" translate="yes" xml:space="preserve">
          <source>And read back with:</source>
          <target state="translated">Y leer de nuevo con:</target>
        </trans-unit>
        <trans-unit id="fc6d8473bdc84d9a5a02e5f55e8ffba9c7a1eadb" translate="yes" xml:space="preserve">
          <source>And the program will loop at runtime. Similarly, an &lt;code&gt;Applicative&lt;/code&gt; instance like this</source>
          <target state="translated">Y el programa se repetir&amp;aacute; en tiempo de ejecuci&amp;oacute;n. Del mismo modo, una instancia de &lt;code&gt;Applicative&lt;/code&gt; como esta</target>
        </trans-unit>
        <trans-unit id="91b7607b548e3de2b58aab9b4afde889d7ecf3e4" translate="yes" xml:space="preserve">
          <source>And three warning flags:</source>
          <target state="translated">Y tres banderas de advertencia:</target>
        </trans-unit>
        <trans-unit id="0194dd87cfa77e0f7f90bc726fd0703ab0c251ba" translate="yes" xml:space="preserve">
          <source>And we could have built an equivalent path with the following expressions:</source>
          <target state="translated">Y podríamos haber construido un camino equivalente con las siguientes expresiones:</target>
        </trans-unit>
        <trans-unit id="f04f47a0bf05c20c03ec6759fd8321b4e440f4b6" translate="yes" xml:space="preserve">
          <source>And with &lt;a href=&quot;#unboxed-sums&quot;&gt;UnboxedSums&lt;/a&gt; enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1853f8dddb99a8c160df02448f14aeb5c7e0b7" translate="yes" xml:space="preserve">
          <source>And write a value to disk</source>
          <target state="translated">Y escribir un valor en el disco</target>
        </trans-unit>
        <trans-unit id="0b691ef27c0c127676c790709cff2ef33778d7eb" translate="yes" xml:space="preserve">
          <source>And you attempt to derive it using &lt;a href=&quot;#extension-DeriveAnyClass&quot;&gt;&lt;code&gt;DeriveAnyClass&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">E intenta derivarlo usando &lt;a href=&quot;#extension-DeriveAnyClass&quot;&gt; &lt;code&gt;DeriveAnyClass&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="495577bd97a225b48a7e5b45336021b982d75dbc" translate="yes" xml:space="preserve">
          <source>And you tried to derive an instance for it:</source>
          <target state="translated">Y trataste de derivar una instancia para ello:</target>
        </trans-unit>
        <trans-unit id="b8ad3365893a0b275281ec83a50665e9f2d6834f" translate="yes" xml:space="preserve">
          <source>And, among other things, lazy pattern-matching is your enemy.</source>
          <target state="translated">Y,entre otras cosas,la perezosa coincidencia de patrones es tu enemigo.</target>
        </trans-unit>
        <trans-unit id="8c4a82e242cf12aed8b85b58f58b0968fee82178" translate="yes" xml:space="preserve">
          <source>Andy Gill and Simon Marlow have written a parser-generator for Haskell, called &lt;code&gt;happy&lt;/code&gt;. &lt;code&gt;Happy&lt;/code&gt; is to Haskell what &lt;code&gt;Yacc&lt;/code&gt; is to C.</source>
          <target state="translated">Andy Gill y Simon Marlow han escrito un analizador-generador para Haskell, llamado &lt;code&gt;happy&lt;/code&gt; . &lt;code&gt;Happy&lt;/code&gt; es para Haskell lo que &lt;code&gt;Yacc&lt;/code&gt; es para C.</target>
        </trans-unit>
        <trans-unit id="74661a73b0dde5f32e46ef5440b8f7c212e3dd3f" translate="yes" xml:space="preserve">
          <source>AnnLookup</source>
          <target state="translated">AnnLookup</target>
        </trans-unit>
        <trans-unit id="c1da64c83c4be735ccac640316d60131dd4381db" translate="yes" xml:space="preserve">
          <source>AnnTarget</source>
          <target state="translated">AnnTarget</target>
        </trans-unit>
        <trans-unit id="f1b790e1da14310f6ece84c62bb58322fef3c9fc" translate="yes" xml:space="preserve">
          <source>AnnotDetails</source>
          <target state="translated">AnnotDetails</target>
        </trans-unit>
        <trans-unit id="bf34615f46f75f35e2f9ccc197db2f929dd6a301" translate="yes" xml:space="preserve">
          <source>AnnotStart</source>
          <target state="translated">AnnotStart</target>
        </trans-unit>
        <trans-unit id="1e19b78b16e2a7b6a1e4f80c0a4d231548b5500d" translate="yes" xml:space="preserve">
          <source>Annotate the Template Haskell expression with a type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665edccbf78492c3059856c8597043ed30b15ce4" translate="yes" xml:space="preserve">
          <source>Annotating documents</source>
          <target state="translated">Anotar documentos</target>
        </trans-unit>
        <trans-unit id="0d453d564eadde058c35ace639f7bec19eccb3ee" translate="yes" xml:space="preserve">
          <source>Annotation lookup</source>
          <target state="translated">Búsqueda de anotaciones</target>
        </trans-unit>
        <trans-unit id="11129140d62298b72f4c953d972b05a50da295ea" translate="yes" xml:space="preserve">
          <source>Annotation rendering</source>
          <target state="translated">La representación de la anotación</target>
        </trans-unit>
        <trans-unit id="112cca03c76acb3cca2a892f6e3fa24c275d9756" translate="yes" xml:space="preserve">
          <source>Annotation target for reifyAnnotations</source>
          <target state="translated">Objetivo de la anotación para reifyAnnotations</target>
        </trans-unit>
        <trans-unit id="fddbd22c104843c74d2c00f8cf2af89a7f68516f" translate="yes" xml:space="preserve">
          <source>Annotations are small pragmas that allow you to attach data to identifiers in source code, which are persisted when compiled. These pieces of data can then inspected and utilized when using GHC as a library or writing a compiler plugin.</source>
          <target state="translated">Las anotaciones son pequeños pragmas que permiten adjuntar datos a identificadores en el código fuente,que se persiguen al ser compilados.Estos datos pueden ser inspeccionados y utilizados cuando se usa el GHC como biblioteca o se escribe un plugin de compilación.</target>
        </trans-unit>
        <trans-unit id="e5b762d7dbaed9bb5ebd61e64b87ad52b2d8a6ca" translate="yes" xml:space="preserve">
          <source>Anonymous and named wildcards &lt;em&gt;can&lt;/em&gt; occur on the left hand side of a type or data instance declaration; see &lt;a href=&quot;#type-wildcards-lhs&quot;&gt;Wildcards on the LHS of data and type family instances&lt;/a&gt;.</source>
          <target state="translated">Los comodines an&amp;oacute;nimos y con nombre &lt;em&gt;pueden&lt;/em&gt; aparecer en el lado izquierdo de una declaraci&amp;oacute;n de tipo o instancia de datos; consulte &lt;a href=&quot;#type-wildcards-lhs&quot;&gt;Comodines en el LHS de las instancias de familias de tipos y datos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cf2947ec117ab6af4c3e63853ae6bc974a4aab5" translate="yes" xml:space="preserve">
          <source>Anonymous wildcards are also allowed in visible type applications/ visible kind applications (&lt;a href=&quot;#visible-type-application&quot;&gt;Visible type application&lt;/a&gt;). If you want to specify only the second type argument to &lt;code&gt;wurble&lt;/code&gt;, then you can say &lt;code&gt;wurble @_ @Int&lt;/code&gt; where the first argument is a wildcard.</source>
          <target state="translated">Los comodines an&amp;oacute;nimos tambi&amp;eacute;n se permiten en aplicaciones de tipo visible / aplicaciones de tipo visible ( &lt;a href=&quot;#visible-type-application&quot;&gt;aplicaci&amp;oacute;n de tipo visible&lt;/a&gt; ). Si desea especificar solo el segundo tipo de argumento para &lt;code&gt;wurble&lt;/code&gt; , puede decir &lt;code&gt;wurble @_ @Int&lt;/code&gt; donde el primer argumento es un comod&amp;iacute;n.</target>
        </trans-unit>
        <trans-unit id="b4f913427243fca5da364b9f4af093e1c132cd45" translate="yes" xml:space="preserve">
          <source>Another common question that comes up when debugging is &amp;ldquo;where did this exception come from?&amp;rdquo;. Exceptions such as those raised by &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;head []&lt;/code&gt; have no context information attached to them. Finding which particular call to &lt;code&gt;head&lt;/code&gt; in your program resulted in the error can be a painstaking process, usually involving &lt;code&gt;Debug.Trace.trace&lt;/code&gt;, or compiling with profiling and using &lt;code&gt;Debug.Trace.traceStack&lt;/code&gt; or &lt;code&gt;+RTS -xc&lt;/code&gt; (see &lt;a href=&quot;runtime_control#rts-flag--xc&quot;&gt;&lt;code&gt;-xc&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Otra pregunta com&amp;uacute;n que surge durante la depuraci&amp;oacute;n es &quot;&amp;iquest;de d&amp;oacute;nde vino esta excepci&amp;oacute;n?&quot;. Las excepciones como las planteadas por &lt;code&gt;error&lt;/code&gt; o &lt;code&gt;head []&lt;/code&gt; no tienen informaci&amp;oacute;n de contexto adjunta. Encontrar qu&amp;eacute; llamada en particular a la &lt;code&gt;head&lt;/code&gt; en su programa result&amp;oacute; en el error puede ser un proceso laborioso, generalmente involucrando &lt;code&gt;Debug.Trace.trace&lt;/code&gt; , o compilando con perfiles y usando &lt;code&gt;Debug.Trace.traceStack&lt;/code&gt; o &lt;code&gt;+RTS -xc&lt;/code&gt; (vea &lt;a href=&quot;runtime_control#rts-flag--xc&quot;&gt; &lt;code&gt;-xc&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8a901bb130edd93de354a92729369e7eb8a77ff7" translate="yes" xml:space="preserve">
          <source>Another common use is to ensure any exceptions hidden within lazy fields of a data structure do not leak outside the scope of the exception handler, or to force evaluation of a data structure in one thread, before passing to another thread (preventing work moving to the wrong threads).</source>
          <target state="translated">Otro uso común es asegurar que las excepciones ocultas en los campos perezosos de una estructura de datos no se filtren fuera del alcance del manejador de excepciones,o forzar la evaluación de una estructura de datos en un hilo,antes de pasar a otro hilo (evitando que el trabajo se desplace a los hilos equivocados).</target>
        </trans-unit>
        <trans-unit id="312336ad458ea40ebadf4c791b596f396bc92d0d" translate="yes" xml:space="preserve">
          <source>Another difference between higher-rank kinds and types can be found in their treatment of inferred and user-specified type variables. Consider the following program:</source>
          <target state="translated">Otra diferencia entre los tipos de rango superior y los tipos puede encontrarse en su tratamiento de las variables de tipo inferidas y especificadas por el usuario.Considere el siguiente programa:</target>
        </trans-unit>
        <trans-unit id="619e7f27cda3e42e4615c75dcb4975c0f4f68283" translate="yes" xml:space="preserve">
          <source>Another difficulty with the memo table is that the value of a key/value pair might itself contain a pointer to the key. So the memo table keeps the value alive, which keeps the key alive, even though there may be no other references to the key so both should die. The weak pointers in this library provide a slight generalisation of the basic weak-pointer idea, in which each weak pointer actually contains both a key and a value.</source>
          <target state="translated">Otra dificultad con la tabla de notas es que el valor de un par clave/valor podría contener un puntero a la clave.Así que la tabla de notas mantiene vivo el valor,lo que mantiene viva la clave,aunque no haya otras referencias a la clave,por lo que ambos deben morir.Los punteros débiles de esta biblioteca proporcionan una ligera generalización de la idea básica de puntero débil,en la que cada puntero débil contiene en realidad tanto una clave como un valor.</target>
        </trans-unit>
        <trans-unit id="3139c4c3d9fe163dd31667b3304a7a4a55378c8e" translate="yes" xml:space="preserve">
          <source>Another extremely efficient way to make your program snappy is to use library code that has been Seriously Tuned By Someone Else. You &lt;em&gt;might&lt;/em&gt; be able to write a better quicksort than the one in &lt;code&gt;Data.List&lt;/code&gt;, but it will take you much longer than typing &lt;code&gt;import Data.List&lt;/code&gt;.</source>
          <target state="translated">Otra forma extremadamente eficiente de hacer que su programa sea &amp;aacute;gil es usar el c&amp;oacute;digo de la biblioteca que ha sido seriamente ajustado por alguien m&amp;aacute;s. Es &lt;em&gt;posible&lt;/em&gt; que pueda escribir una &lt;code&gt;Data.List&lt;/code&gt; r&amp;aacute;pida mejor que la de Data.List , pero le llevar&amp;aacute; mucho m&amp;aacute;s tiempo que escribir &lt;code&gt;import Data.List&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0192d00c4c561122179982081c286d8efe43c16b" translate="yes" xml:space="preserve">
          <source>Another form of command is a form of &lt;code&gt;do&lt;/code&gt;-notation. For example, you can write</source>
          <target state="translated">Otra forma de comando es una forma de notaci&amp;oacute;n &lt;code&gt;do&lt;/code&gt; . Por ejemplo, puedes escribir</target>
        </trans-unit>
        <trans-unit id="ca7ae7aaeace3e8afcdea81b5fff39694bdaa3a2" translate="yes" xml:space="preserve">
          <source>Another important difference between the two types of binding is that the monadic bind (&lt;code&gt;p &amp;lt;- e&lt;/code&gt;) is &lt;em&gt;strict&lt;/em&gt; (it evaluates &lt;code&gt;e&lt;/code&gt;), whereas with the &lt;code&gt;let&lt;/code&gt; form, the expression isn&amp;rsquo;t evaluated immediately:</source>
          <target state="translated">Otra diferencia importante entre los dos tipos de enlace es que el enlace mon&amp;aacute;dico ( &lt;code&gt;p &amp;lt;- e&lt;/code&gt; ) es &lt;em&gt;estricto&lt;/em&gt; (eval&amp;uacute;a &lt;code&gt;e&lt;/code&gt; ), mientras que con la forma &lt;code&gt;let&lt;/code&gt; , la expresi&amp;oacute;n no se eval&amp;uacute;a inmediatamente:</target>
        </trans-unit>
        <trans-unit id="fa6d0d044f8316bb0266e4594b9afdb9ea5faf82" translate="yes" xml:space="preserve">
          <source>Another point to bear in mind: By far the best way to improve a program&amp;rsquo;s performance &lt;em&gt;dramatically&lt;/em&gt; is to use better algorithms. Once profiling has thrown the spotlight on the guilty time-consumer(s), it may be better to re-think your program than to try all the tweaks listed below.</source>
          <target state="translated">Otro punto a tener en cuenta: la mejor manera de mejorar &lt;em&gt;dr&amp;aacute;sticamente el&lt;/em&gt; rendimiento de un programa es utilizar mejores algoritmos. Una vez que la elaboraci&amp;oacute;n de perfiles ha centrado la atenci&amp;oacute;n en los consumidores de tiempo culpables, puede que sea mejor reconsiderar su programa que intentar todos los ajustes que se enumeran a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d787e6c2588a53fddf149a1d181b21e1640ac274" translate="yes" xml:space="preserve">
          <source>Another useful application is to combine &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; in order to force deep evaluation relative to other &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations:</source>
          <target state="translated">Otra aplicaci&amp;oacute;n &amp;uacute;til es combinar la &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; con la &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; para forzar una evaluaci&amp;oacute;n profunda en relaci&amp;oacute;n con otras operaciones &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="748a1e04935a7f3501001c42790b9f7f7d64ce9f" translate="yes" xml:space="preserve">
          <source>Another useful application is to combine &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:evaluate&quot;&gt;evaluate&lt;/a&gt;&lt;/code&gt; in order to force deep evaluation relative to other &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16541def5ea587ac69bfcc99daad84a959043da" translate="yes" xml:space="preserve">
          <source>Another valid monoid instance of &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-monoid#t:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt; It is defined by multiplication and `1` as neutral element:</source>
          <target state="translated">Otra instancia v&amp;aacute;lida de monoide de &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;data-monoid#t:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt; It se define por multiplicaci&amp;oacute;n y `1` como elemento neutral:</target>
        </trans-unit>
        <trans-unit id="988994d9ba9baaa058f970931250d478f9f37dc1" translate="yes" xml:space="preserve">
          <source>Another way of getting rid of the ambiguity at the call site is to use the &lt;a href=&quot;#extension-TypeApplications&quot;&gt;&lt;code&gt;TypeApplications&lt;/code&gt;&lt;/a&gt; extension to specify the types. For example:</source>
          <target state="translated">Otra forma de deshacerse de la ambig&amp;uuml;edad en el sitio de la llamada es usar la extensi&amp;oacute;n &lt;a href=&quot;#extension-TypeApplications&quot;&gt; &lt;code&gt;TypeApplications&lt;/code&gt; &lt;/a&gt; para especificar los tipos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c9ca1d00f2ba6c9bdc216ddca02e1e03260d4bda" translate="yes" xml:space="preserve">
          <source>Another way to manipulate the scope is to use the &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; command, whose syntax is this:</source>
          <target state="translated">Otra forma de manipular el alcance es usar el comando &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt; , cuya sintaxis es esta:</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="55329b02c1416b447df48dea23b5ad00b5ee2f0a" translate="yes" xml:space="preserve">
          <source>Any -On where n &amp;gt; 2 is the same as -O2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed001ecb885bcbc05312253a4102a733b569260" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s passed to &lt;code&gt;&lt;a href=&quot;system-process#v:runProcess&quot;&gt;runProcess&lt;/a&gt;&lt;/code&gt; are placed immediately in the closed state.</source>
          <target state="translated">Cualquier &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; pase a &lt;code&gt;&lt;a href=&quot;system-process#v:runProcess&quot;&gt;runProcess&lt;/a&gt;&lt;/code&gt; se coloca inmediatamente en el estado cerrado.</target>
        </trans-unit>
        <trans-unit id="bcbdf5a60ce9ec92529281711b09ee9755999301" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s passed to &lt;code&gt;&lt;a href=&quot;system-process#v:runProcess&quot;&gt;runProcess&lt;/a&gt;&lt;/code&gt; are placed immediately in the closed state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91b45192e9b0774cf7aefe77d4d40c0d29cd8a2" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;COMPLETE&lt;/code&gt; sets of type &lt;code&gt;T&lt;/code&gt;</source>
          <target state="translated">Cualquier &lt;code&gt;COMPLETE&lt;/code&gt; de tipo &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dfb3cd648c868b374f6e2677fac36fbe2978a3c" translate="yes" xml:space="preserve">
          <source>Any GHC command-line option that is designated as dynamic (see the table in &lt;a href=&quot;flags#flag-reference&quot;&gt;Flag reference&lt;/a&gt;), may be set using &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt;. To unset an option, you can set the reverse option:</source>
          <target state="translated">Cualquier opci&amp;oacute;n de l&amp;iacute;nea de comandos de GHC que se designe como din&amp;aacute;mica (consulte la tabla en &lt;a href=&quot;flags#flag-reference&quot;&gt;Referencia de indicadores&lt;/a&gt; ) se puede configurar mediante &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; . Para desactivar una opci&amp;oacute;n, puede configurar la opci&amp;oacute;n inversa:</target>
        </trans-unit>
        <trans-unit id="6f5306564b28b058683860c0dbb58f6e1ae386c4" translate="yes" xml:space="preserve">
          <source>Any I/O errors encountered while a handle is semi-closed are simply discarded.</source>
          <target state="translated">Cualquier error de E/S encontrado mientras una manija está semicerrada es simplemente descartado.</target>
        </trans-unit>
        <trans-unit id="0c84ffa38e0d42fe1e3c4aafd67e2a273e5029ca" translate="yes" xml:space="preserve">
          <source>Any arbitrary string, no interpretation or parsing is done.</source>
          <target state="translated">No se hace ninguna cadena arbitraria,ninguna interpretación o análisis.</target>
        </trans-unit>
        <trans-unit id="0452f2ab13ab3b0881a1a304cec756faecd5a100" translate="yes" xml:space="preserve">
          <source>Any data type that can be declared in standard Haskell 98 syntax can also be declared using GADT-style syntax. The choice is largely stylistic, but GADT-style declarations differ in one important respect: they treat class constraints on the data constructors differently. Specifically, if the constructor is given a type-class context, that context is made available by pattern matching. For example:</source>
          <target state="translated">Cualquier tipo de datos que pueda declararse en la sintaxis estándar de Haskell 98 también puede declararse utilizando la sintaxis de estilo GADT.La elección es en gran medida estilística,pero las declaraciones de estilo GADT difieren en un aspecto importante:tratan de manera diferente las limitaciones de clase de los constructores de datos.Concretamente,si se da al constructor un contexto de clase de tipo,ese contexto se pone a su disposición mediante la concordancia de patrones.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7d3011ab0c7b5aa4a9a177dbc0ce024f6e055225" translate="yes" xml:space="preserve">
          <source>Any exceptions raised during the evaluation or execution of the statement are caught and printed by the GHCi command line interface (for more information on exceptions, see the module &lt;a href=&quot;../libraries/base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt; in the libraries documentation.</source>
          <target state="translated">Cualquier excepci&amp;oacute;n que surja durante la evaluaci&amp;oacute;n o ejecuci&amp;oacute;n de la declaraci&amp;oacute;n se captura e imprime mediante la interfaz de l&amp;iacute;nea de comandos de GHCi (para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las excepciones, consulte el m&amp;oacute;dulo &lt;a href=&quot;../libraries/base-4.13.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt; en la documentaci&amp;oacute;n de las bibliotecas.</target>
        </trans-unit>
        <trans-unit id="d671ba93c9259d42fd317ba91ce67c391a4d8b7f" translate="yes" xml:space="preserve">
          <source>Any exceptions raised during the evaluation or execution of the statement are caught and printed by the GHCi command line interface (for more information on exceptions, see the module &lt;a href=&quot;../libraries/base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt; in the libraries documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb34342e0a6715040492745b6bae6bc125156350" translate="yes" xml:space="preserve">
          <source>Any expression that has both &lt;code&gt;Typeable&lt;/code&gt; and &lt;code&gt;Data&lt;/code&gt; instances may be attached to a top-level value binding using an &lt;code&gt;ANN&lt;/code&gt; pragma. In particular, this means you can use &lt;code&gt;ANN&lt;/code&gt; to annotate data constructors (e.g. &lt;code&gt;Just&lt;/code&gt;) as well as normal values (e.g. &lt;code&gt;take&lt;/code&gt;). By way of example, to annotate the function &lt;code&gt;foo&lt;/code&gt; with the annotation &lt;code&gt;Just &quot;Hello&quot;&lt;/code&gt; you would do this:</source>
          <target state="translated">Cualquier expresi&amp;oacute;n que tenga instancias &lt;code&gt;Typeable&lt;/code&gt; y &lt;code&gt;Data&lt;/code&gt; puede adjuntarse a un enlace de valor de nivel superior utilizando un pragma &lt;code&gt;ANN&lt;/code&gt; . En particular, esto significa que puede usar &lt;code&gt;ANN&lt;/code&gt; para anotar constructores de datos (por ejemplo, &lt;code&gt;Just&lt;/code&gt; ) as&amp;iacute; como valores normales (por ejemplo, &lt;code&gt;take&lt;/code&gt; ). A modo de ejemplo, para anotar la funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; con la anotaci&amp;oacute;n &lt;code&gt;Just &quot;Hello&quot;&lt;/code&gt; , har&amp;iacute;a esto:</target>
        </trans-unit>
        <trans-unit id="01212113a76fa0770e6b80bde8974e88d8560b27" translate="yes" xml:space="preserve">
          <source>Any extension from the &lt;code&gt;Extension&lt;/code&gt; type defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/Cabal-3.2.0.0/Language-Haskell-Extension.html&quot;&gt;Language.Haskell.Extension&lt;/a&gt; may be used. GHC will report an error if any of the requested extensions are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b940cc0f6bd9befa4dc2cd571bce369cc78d6f" translate="yes" xml:space="preserve">
          <source>Any extension from the &lt;code&gt;Extension&lt;/code&gt; type defined in &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/Cabal-3.0.1.0/Language-Haskell-Extension.html&quot;&gt;Language.Haskell.Extension&lt;/a&gt; may be used. GHC will report an error if any of the requested extensions are not supported.</source>
          <target state="translated">Se puede utilizar cualquier extensi&amp;oacute;n del tipo de &lt;code&gt;Extension&lt;/code&gt; definido en &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/Cabal-3.0.1.0/Language-Haskell-Extension.html&quot;&gt;Language.Haskell.Extension&lt;/a&gt; . GHC informar&amp;aacute; un error si alguna de las extensiones solicitadas no es compatible.</target>
        </trans-unit>
        <trans-unit id="45294fce8a408e067f71fcddc66e44fa9a3aa925" translate="yes" xml:space="preserve">
          <source>Any field width is followed optionally by a precision:</source>
          <target state="translated">Cualquier ancho de campo es seguido opcionalmente por una precisión:</target>
        </trans-unit>
        <trans-unit id="ca99cdb1b6224c8f2acca56e49dc80e277ef33e9" translate="yes" xml:space="preserve">
          <source>Any flags are followed optionally by a field width:</source>
          <target state="translated">Cualquier bandera es seguida opcionalmente por un ancho de campo:</target>
        </trans-unit>
        <trans-unit id="fe6292886945b8678502b2eed862908e6596bec8" translate="yes" xml:space="preserve">
          <source>Any flags not recognized by runghc are automatically passed to GHC. If a flag is recognized by both runghc and GHC but you want to pass it to GHC then you can place it after a &lt;code&gt;--&lt;/code&gt; separator. Flags after the separator are treated as GHC only flags. Alternatively you can use the runghc option &lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; to pass any flag or argument directly to GHC.</source>
          <target state="translated">Cualquier indicador no reconocido por runghc se pasa autom&amp;aacute;ticamente a GHC. Si runghc y GHC reconocen una bandera, pero desea pasarla a GHC, puede colocarla despu&amp;eacute;s de un &lt;code&gt;--&lt;/code&gt; separador. Los indicadores posteriores al separador se tratan como indicadores exclusivos de GHC. Alternativamente, puede usar la opci&amp;oacute;n &lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; para pasar cualquier indicador o argumento directamente a GHC.</target>
        </trans-unit>
        <trans-unit id="d3a24acb0ed73105a63c6aa8b83c5ce57f71ebe7" translate="yes" xml:space="preserve">
          <source>Any instance of &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowApply&quot;&gt;ArrowApply&lt;/a&gt;&lt;/code&gt; can be made into an instance of &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowChoice&quot;&gt;ArrowChoice&lt;/a&gt;&lt;/code&gt; by defining &lt;code&gt;&lt;a href=&quot;control-arrow#v:left&quot;&gt;left&lt;/a&gt;&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;control-arrow#v:leftApp&quot;&gt;leftApp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Cualquier instancia de &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowApply&quot;&gt;ArrowApply&lt;/a&gt;&lt;/code&gt; se puede convertir en una instancia de &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowChoice&quot;&gt;ArrowChoice&lt;/a&gt;&lt;/code&gt; definiendo &lt;code&gt;&lt;a href=&quot;control-arrow#v:left&quot;&gt;left&lt;/a&gt;&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;control-arrow#v:leftApp&quot;&gt;leftApp&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c46287c62f0868214d45f152801a23db51bd59d4" translate="yes" xml:space="preserve">
          <source>Any instance should be subject to the following laws:</source>
          <target state="translated">Toda instancia debe estar sujeta a las siguientes leyes:</target>
        </trans-unit>
        <trans-unit id="b4adffce07a1e96f7b4aa9f3335793d174570cf6" translate="yes" xml:space="preserve">
          <source>Any modifiers found.</source>
          <target state="translated">Cualquier modificador encontrado.</target>
        </trans-unit>
        <trans-unit id="5cecd2c65d9c46eca630a92c4797e911edc247d7" translate="yes" xml:space="preserve">
          <source>Any number of source file names or module names may be specified; GHC will figure out all the modules in the program by following the imports from these initial modules. It will then attempt to compile each module which is out of date, and finally, if there is a &lt;code&gt;Main&lt;/code&gt; module, the program will also be linked into an executable.</source>
          <target state="translated">Se puede especificar cualquier n&amp;uacute;mero de nombres de archivos de origen o nombres de m&amp;oacute;dulos; GHC descubrir&amp;aacute; todos los m&amp;oacute;dulos del programa siguiendo las importaciones de estos m&amp;oacute;dulos iniciales. A continuaci&amp;oacute;n, intentar&amp;aacute; compilar cada m&amp;oacute;dulo que est&amp;eacute; desactualizado y, finalmente, si hay un m&amp;oacute;dulo &lt;code&gt;Main&lt;/code&gt; , el programa tambi&amp;eacute;n se vincular&amp;aacute; a un ejecutable.</target>
        </trans-unit>
        <trans-unit id="8a7ee0a6d4ed7c475e886db91c9ca4af5ab7c3c0" translate="yes" xml:space="preserve">
          <source>Any of the command-line options described in the rest of this chapter can be used with &lt;code&gt;--make&lt;/code&gt;, but note that any options you give on the command line will apply to all the source files compiled, so if you want any options to apply to a single source file only, you&amp;rsquo;ll need to use an &lt;code&gt;OPTIONS_GHC&lt;/code&gt; pragma (see &lt;a href=&quot;#source-file-options&quot;&gt;Command line options in source files&lt;/a&gt;).</source>
          <target state="translated">Cualquiera de las opciones de la l&amp;iacute;nea de comandos descritas en el resto de este cap&amp;iacute;tulo se puede usar con &lt;code&gt;--make&lt;/code&gt; , pero tenga en cuenta que cualquier opci&amp;oacute;n que proporcione en la l&amp;iacute;nea de comando se aplicar&amp;aacute; a todos los archivos fuente compilados, as&amp;iacute; que si desea que se aplique alguna opci&amp;oacute;n a un solo archivo de origen, deber&amp;aacute; utilizar un pragma &lt;code&gt;OPTIONS_GHC&lt;/code&gt; (consulte &lt;a href=&quot;#source-file-options&quot;&gt;Opciones de la l&amp;iacute;nea de comandos en los archivos de origen&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4fcac47fb48917b29ef16b080f9169cd49dcd808" translate="yes" xml:space="preserve">
          <source>Any operation that fails because a handle is closed, also fails if a handle is semi-closed. The only exception is &lt;code&gt;&lt;a href=&quot;system-io#v:hClose&quot;&gt;hClose&lt;/a&gt;&lt;/code&gt;. A semi-closed handle becomes closed:</source>
          <target state="translated">Cualquier operaci&amp;oacute;n que falle porque una manija est&amp;aacute; cerrada, tambi&amp;eacute;n falla si una manija est&amp;aacute; semicerrada. La &amp;uacute;nica excepci&amp;oacute;n es &lt;code&gt;&lt;a href=&quot;system-io#v:hClose&quot;&gt;hClose&lt;/a&gt;&lt;/code&gt; . Un mango semicerrado se cierra:</target>
        </trans-unit>
        <trans-unit id="74cf8930fe96c667f6ee4ecd6012b01ea066396e" translate="yes" xml:space="preserve">
          <source>Any orphan instances which are brought into scope by an import from a signature are unconditionally considered in scope, even if the eventual implementing module doesn&amp;rsquo;t actually import the same orphans.</source>
          <target state="translated">Cualquier instancia hu&amp;eacute;rfana que se incluye en el alcance mediante una importaci&amp;oacute;n desde una firma se considera incondicionalmente dentro del alcance, incluso si el m&amp;oacute;dulo de implementaci&amp;oacute;n eventual no importa realmente los mismos hu&amp;eacute;rfanos.</target>
        </trans-unit>
        <trans-unit id="2fbfab23f62ec3e48e80e1e5422619cb69668f7f" translate="yes" xml:space="preserve">
          <source>Any other exceptions which are not matched by the predicate are re-raised, and may be caught by an enclosing &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-exception#v:catchJust&quot;&gt;catchJust&lt;/a&gt;&lt;/code&gt;, etc.</source>
          <target state="translated">Cualquier otra excepci&amp;oacute;n que no coincida con el predicado se vuelve a &lt;code&gt;&lt;a href=&quot;control-exception#v:catchJust&quot;&gt;catchJust&lt;/a&gt;&lt;/code&gt; y puede ser detectada por un &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; , catchJust , etc.</target>
        </trans-unit>
        <trans-unit id="a712b26d1cb0416ca0ddd0555d9306a2c267be27" translate="yes" xml:space="preserve">
          <source>Any precision is followed optionally for Integral types by a width modifier; the only use of this modifier being to set the implicit size of the operand for conversion of a negative operand to unsigned:</source>
          <target state="translated">Cualquier precisión es seguida opcionalmente para los tipos integrales por un modificador de anchura;el único uso de este modificador es establecer el tamaño implícito del operando para la conversión de un operando negativo a sin signo:</target>
        </trans-unit>
        <trans-unit id="d8c91f9f9f6e75c41b02098e931d3439ddcf440f" translate="yes" xml:space="preserve">
          <source>Any real interval contains a unique simplest rational; in particular, note that &lt;code&gt;0/1&lt;/code&gt; is the simplest rational of all.</source>
          <target state="translated">Cualquier intervalo real contiene un &amp;uacute;nico racional m&amp;aacute;s simple; en particular, tenga en cuenta que &lt;code&gt;0/1&lt;/code&gt; es el racional m&amp;aacute;s simple de todos.</target>
        </trans-unit>
        <trans-unit id="bd6fa11933cdfcdc743d92e3ae1b1b26d19d69a2" translate="yes" xml:space="preserve">
          <source>Any single-constructor data is eligible for unpacking; for example</source>
          <target state="translated">Cualquier dato de un solo constructor puede ser desempacado;por ejemplo</target>
        </trans-unit>
        <trans-unit id="a18603a852f4e4b843d8b21962152ae0dc60595e" translate="yes" xml:space="preserve">
          <source>Any threads that are blocked on the file descriptor via &lt;code&gt;&lt;a href=&quot;ghc-conc#v:threadWaitRead&quot;&gt;threadWaitRead&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-conc#v:threadWaitWrite&quot;&gt;threadWaitWrite&lt;/a&gt;&lt;/code&gt; will be unblocked by having IO exceptions thrown.</source>
          <target state="translated">Cualquier hilo que est&amp;eacute; bloqueado en el descriptor de archivo a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;ghc-conc#v:threadWaitRead&quot;&gt;threadWaitRead&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;ghc-conc#v:threadWaitWrite&quot;&gt;threadWaitWrite&lt;/a&gt;&lt;/code&gt; ser&amp;aacute; desbloqueado al lanzar excepciones IO.</target>
        </trans-unit>
        <trans-unit id="769148ddf54673e79970f08b70786bcc3aab11e0" translate="yes" xml:space="preserve">
          <source>Any threads that are blocked on the file descriptor via &lt;code&gt;&lt;a href=&quot;ghc-conc-io#v:threadWaitRead&quot;&gt;threadWaitRead&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-conc-io#v:threadWaitWrite&quot;&gt;threadWaitWrite&lt;/a&gt;&lt;/code&gt; will be unblocked by having IO exceptions thrown.</source>
          <target state="translated">Cualquier hilo que est&amp;eacute; bloqueado en el descriptor de archivo a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;ghc-conc-io#v:threadWaitRead&quot;&gt;threadWaitRead&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;ghc-conc-io#v:threadWaitWrite&quot;&gt;threadWaitWrite&lt;/a&gt;&lt;/code&gt; ser&amp;aacute; desbloqueado al lanzar excepciones IO.</target>
        </trans-unit>
        <trans-unit id="87c36f7b926ac2fbec6f667eb5439c00c637c3ef" translate="yes" xml:space="preserve">
          <source>Any type that you wish to throw or catch as an exception must be an instance of the &lt;code&gt;Exception&lt;/code&gt; class. The simplest case is a new exception type directly below the root:</source>
          <target state="translated">Cualquier tipo que desee lanzar o capturar como excepci&amp;oacute;n debe ser una instancia de la clase &lt;code&gt;Exception&lt;/code&gt; . El caso m&amp;aacute;s simple es un nuevo tipo de excepci&amp;oacute;n directamente debajo de la ra&amp;iacute;z:</target>
        </trans-unit>
        <trans-unit id="b1bd8e562d1fefda868c7d1ff0cda571db4a02aa" translate="yes" xml:space="preserve">
          <source>Any variables in ⟨exp⟩ are bound occurrences, but variables bound &amp;ldquo;to the left&amp;rdquo; in a pattern are in scope. This feature permits, for example, one argument to a function to be used in the view of another argument. For example, the function &lt;code&gt;clunky&lt;/code&gt; from &lt;a href=&quot;#pattern-guards&quot;&gt;Pattern guards&lt;/a&gt; can be written using view patterns as follows:</source>
          <target state="translated">Cualquier variable en ⟨exp⟩ son ocurrencias ligadas, pero las variables ligadas &quot;a la izquierda&quot; en un patr&amp;oacute;n est&amp;aacute;n dentro del alcance. Esta caracter&amp;iacute;stica permite, por ejemplo, utilizar un argumento de una funci&amp;oacute;n en la vista de otro argumento. Por ejemplo, la funci&amp;oacute;n &lt;code&gt;clunky&lt;/code&gt; de &lt;a href=&quot;#pattern-guards&quot;&gt;Pattern guards&lt;/a&gt; se puede escribir usando patrones de vista de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="b0f483f182aa56813d1000ce4df4790bcbe905f1" translate="yes" xml:space="preserve">
          <source>Any whitespace which appears outside of either of the quoting and escaping mechanisms, is interpreted as having been added by this special concatenation process to designate where the boundaries are between the original, un-concatenated list of strings. These added whitespace characters are removed from the output.</source>
          <target state="translated">Todo espacio en blanco que aparezca fuera de cualquiera de los mecanismos de cita y fuga,se interpreta como añadido por este proceso especial de concatenación para designar dónde están los límites entre la lista original y no concatenada de cuerdas.Estos caracteres de espacio en blanco añadidos se eliminan de la salida.</target>
        </trans-unit>
        <trans-unit id="86fba8724925018bcafcede041fc92c898e3eb9b" translate="yes" xml:space="preserve">
          <source>AnyclassStrategy</source>
          <target state="translated">AnyclassStrategy</target>
        </trans-unit>
        <trans-unit id="2d219c6ebc1efaae092effbbdcf3fa6d485c6699" translate="yes" xml:space="preserve">
          <source>Anything else throws an exception:</source>
          <target state="translated">Cualquier otra cosa hace una excepción:</target>
        </trans-unit>
        <trans-unit id="036d8f7bd31769453184842860e1d5ca8c639fff" translate="yes" xml:space="preserve">
          <source>Anything which is already valid as a constraint without the flag: saturated applications to type classes, implicit parameter and equality constraints.</source>
          <target state="translated">Todo lo que ya es válido como restricción sin la bandera:aplicaciones saturadas de clases de tipos,parámetros implícitos y restricciones de igualdad.</target>
        </trans-unit>
        <trans-unit id="ad26f77e74f38dbef3399b317d10c13e53d32aa2" translate="yes" xml:space="preserve">
          <source>Anything whose form is not yet known, but the user has declared to have kind &lt;code&gt;Constraint&lt;/code&gt; (for which they need to import it from &lt;code&gt;Data.Kind&lt;/code&gt;). So for example &lt;code&gt;type Foo (f :: Type -&amp;gt; Constraint) = forall b. f b =&amp;gt; b -&amp;gt; b&lt;/code&gt; is allowed, as well as examples involving type families:</source>
          <target state="translated">Cualquier cosa cuya forma a&amp;uacute;n no se conozca, pero el usuario haya declarado que tiene una &lt;code&gt;Constraint&lt;/code&gt; tipo (para lo cual debe importarla desde &lt;code&gt;Data.Kind&lt;/code&gt; ). Entonces, por ejemplo, &lt;code&gt;type Foo (f :: Type -&amp;gt; Constraint) = forall b. f b =&amp;gt; b -&amp;gt; b&lt;/code&gt; est&amp;aacute; permitido, as&amp;iacute; como ejemplos que involucran familias de tipos:</target>
        </trans-unit>
        <trans-unit id="b920fb3adf34d73af2cb7b5c93d8efbc94cd36f7" translate="yes" xml:space="preserve">
          <source>Ap</source>
          <target state="translated">Ap</target>
        </trans-unit>
        <trans-unit id="53d21ca24e640bdf8e7b761f501faaae7e4e72fb" translate="yes" xml:space="preserve">
          <source>Apart from removing intermediate data-structures, encodings can be optimized further by fine-tuning their execution parameters using the functions in &lt;a href=&quot;data-bytestring-builder-extra&quot;&gt;Data.ByteString.Builder.Extra&lt;/a&gt; and their &quot;inner loops&quot; using the functions in &lt;a href=&quot;data-bytestring-builder-prim&quot;&gt;Data.ByteString.Builder.Prim&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de eliminar estructuras de datos intermedias, las codificaciones se pueden optimizar a&amp;uacute;n m&amp;aacute;s ajustando sus par&amp;aacute;metros de ejecuci&amp;oacute;n usando las funciones en &lt;a href=&quot;data-bytestring-builder-extra&quot;&gt;Data.ByteString.Builder.Extra&lt;/a&gt; y sus &quot;bucles internos&quot; usando las funciones en &lt;a href=&quot;data-bytestring-builder-prim&quot;&gt;Data.ByteString.Builder.Prim&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14dc219def5159ae2ab7cfd4d71881c1c3903e70" translate="yes" xml:space="preserve">
          <source>Apart from the &lt;code&gt;:{ ... :}&lt;/code&gt; syntax for multi-line input mentioned above, GHCi also has a multiline mode, enabled by &lt;code&gt;:set +m&lt;/code&gt;, &lt;code&gt;:set +m&lt;/code&gt; in which GHCi detects automatically when the current statement is unfinished and allows further lines to be added. A multi-line input is terminated with an empty line. For example:</source>
          <target state="translated">Aparte de la &lt;code&gt;:{ ... :}&lt;/code&gt; sintaxis para la entrada de varias l&amp;iacute;neas se mencion&amp;oacute; anteriormente, GHCi tambi&amp;eacute;n tiene un modo multil&amp;iacute;nea, habilitado por &lt;code&gt;:set +m&lt;/code&gt; , &lt;code&gt;:set +m&lt;/code&gt; en el que GHCi detecta autom&amp;aacute;ticamente cuando el estado de cuenta actual est&amp;aacute; sin terminar y permite se agregar&amp;aacute;n m&amp;aacute;s l&amp;iacute;neas. Una entrada multil&amp;iacute;nea se termina con una l&amp;iacute;nea vac&amp;iacute;a. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fc4a695f02a8a53a129dcb9ace91e91ee1e7feb9" translate="yes" xml:space="preserve">
          <source>App</source>
          <target state="translated">App</target>
        </trans-unit>
        <trans-unit id="c607b075485b6dc8c400c818769a9c892ea0ffc4" translate="yes" xml:space="preserve">
          <source>Append a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; una ByteString a un archivo.</target>
        </trans-unit>
        <trans-unit id="f664580544f7f0aa77f101d16e0efbbe807fa6e5" translate="yes" xml:space="preserve">
          <source>Append a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; una ByteString a un archivo.</target>
        </trans-unit>
        <trans-unit id="e26661dc8c698ec289349a6aeecab4d0a5e5ec82" translate="yes" xml:space="preserve">
          <source>Append a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; una ByteString a un archivo.</target>
        </trans-unit>
        <trans-unit id="345b0c25bf20f673449b84d7d686b5c70bebf7c2" translate="yes" xml:space="preserve">
          <source>Append a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; una ByteString a un archivo.</target>
        </trans-unit>
        <trans-unit id="4ebc23e4c1b65a48a70d373d483fafb1ccae8ba3" translate="yes" xml:space="preserve">
          <source>Append two lists, i.e.,</source>
          <target state="translated">Añade dos listas,es decir,</target>
        </trans-unit>
        <trans-unit id="3e0bf0178a1d360f27255c9a7f025fc03359dcd5" translate="yes" xml:space="preserve">
          <source>AppendHandle</source>
          <target state="translated">AppendHandle</target>
        </trans-unit>
        <trans-unit id="374c012a038cea614a313e941a993048c6cf1210" translate="yes" xml:space="preserve">
          <source>AppendMode</source>
          <target state="translated">AppendMode</target>
        </trans-unit>
        <trans-unit id="3916a3175dfaa3fd999b22f53277fe454f6b7b38" translate="yes" xml:space="preserve">
          <source>AppendOnWrite</source>
          <target state="translated">AppendOnWrite</target>
        </trans-unit>
        <trans-unit id="dbe098d861d9a244dfef0444bcf8ab0f87546a7d" translate="yes" xml:space="preserve">
          <source>AppendSymbol</source>
          <target state="translated">AppendSymbol</target>
        </trans-unit>
        <trans-unit id="b67fd654b8abfbeb1a717ca3d11ec607e6526062" translate="yes" xml:space="preserve">
          <source>Applicability</source>
          <target state="translated">Applicability</target>
        </trans-unit>
        <trans-unit id="d311231658a1b3353cd77d4859248f1e061c4cc1" translate="yes" xml:space="preserve">
          <source>Application operator. This operator is redundant, since ordinary application &lt;code&gt;(f x)&lt;/code&gt; means the same as &lt;code&gt;(f &lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt; x)&lt;/code&gt;. However, &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; has low, right-associative binding precedence, so it sometimes allows parentheses to be omitted; for example:</source>
          <target state="translated">Operador de aplicaci&amp;oacute;n. Este operador es redundante, ya que la aplicaci&amp;oacute;n ordinaria &lt;code&gt;(f x)&lt;/code&gt; significa lo mismo que &lt;code&gt;(f &lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt; x)&lt;/code&gt; . Sin embargo, &lt;code&gt;&lt;a href=&quot;data-function#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; tiene una baja precedencia de enlace asociativa a la derecha, por lo que a veces permite omitir los par&amp;eacute;ntesis; por ejemplo:</target>
        </trans-unit>
        <trans-unit id="43dbefc4fd00eee5d8e84d6de5dadb9d229d56a1" translate="yes" xml:space="preserve">
          <source>Application operator. This operator is redundant, since ordinary application &lt;code&gt;(f x)&lt;/code&gt; means the same as &lt;code&gt;(f &lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt; x)&lt;/code&gt;. However, &lt;code&gt;&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; has low, right-associative binding precedence, so it sometimes allows parentheses to be omitted; for example:</source>
          <target state="translated">Operador de aplicaci&amp;oacute;n. Este operador es redundante, ya que la aplicaci&amp;oacute;n ordinaria &lt;code&gt;(f x)&lt;/code&gt; significa lo mismo que &lt;code&gt;(f &lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt; x)&lt;/code&gt; . Sin embargo, &lt;code&gt;&lt;a href=&quot;ghc-base#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; tiene una baja precedencia de enlace asociativa a la derecha, por lo que a veces permite omitir los par&amp;eacute;ntesis; por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f58752dc50f3a1aa349659b655c647ebed7f8f30" translate="yes" xml:space="preserve">
          <source>Application operator. This operator is redundant, since ordinary application &lt;code&gt;(f x)&lt;/code&gt; means the same as &lt;code&gt;(f &lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt; x)&lt;/code&gt;. However, &lt;code&gt;&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; has low, right-associative binding precedence, so it sometimes allows parentheses to be omitted; for example:</source>
          <target state="translated">Operador de aplicaci&amp;oacute;n. Este operador es redundante, ya que la aplicaci&amp;oacute;n ordinaria &lt;code&gt;(f x)&lt;/code&gt; significa lo mismo que &lt;code&gt;(f &lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt; x)&lt;/code&gt; . Sin embargo, &lt;code&gt;&lt;a href=&quot;prelude#v:-36-&quot;&gt;$&lt;/a&gt;&lt;/code&gt; tiene una baja precedencia de enlace asociativa a la derecha, por lo que a veces permite omitir los par&amp;eacute;ntesis; por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4bf898ba305639dbde7f1d71fe68cf723d6796d1" translate="yes" xml:space="preserve">
          <source>Application-specific customizations to the user interface.</source>
          <target state="translated">Personalizaciones específicas de la interfaz de usuario.</target>
        </trans-unit>
        <trans-unit id="0b8a1b21fc212c72c3e7976ca547d1f598c5e314" translate="yes" xml:space="preserve">
          <source>Applicative</source>
          <target state="translated">Applicative</target>
        </trans-unit>
        <trans-unit id="c42b346f9e6450034a0b493919801528c343e948" translate="yes" xml:space="preserve">
          <source>Applicative actions</source>
          <target state="translated">Medidas de aplicación</target>
        </trans-unit>
        <trans-unit id="98c9a7602c91954ae00f88c84bb4db90472de9d3" translate="yes" xml:space="preserve">
          <source>Applicative do-notation desugaring preserves the original semantics, provided that the &lt;code&gt;Applicative&lt;/code&gt; instance satisfies &lt;code&gt;&amp;lt;*&amp;gt; = ap&lt;/code&gt; and &lt;code&gt;pure = return&lt;/code&gt; (these are true of all the common monadic types). Thus, you can normally turn on &lt;a href=&quot;#extension-ApplicativeDo&quot;&gt;&lt;code&gt;ApplicativeDo&lt;/code&gt;&lt;/a&gt; without fear of breaking your program. There is one pitfall to watch out for; see &lt;a href=&quot;#applicative-do-pitfall&quot;&gt;Things to watch out for&lt;/a&gt;.</source>
          <target state="translated">El desugaring de la do-notaci&amp;oacute;n aplicativa conserva la sem&amp;aacute;ntica original, siempre que la instancia &lt;code&gt;Applicative&lt;/code&gt; satisfaga &lt;code&gt;&amp;lt;*&amp;gt; = ap&lt;/code&gt; y &lt;code&gt;pure = return&lt;/code&gt; (estos son verdaderos para todos los tipos mon&amp;aacute;dicos comunes). Por lo tanto, normalmente puede activar &lt;a href=&quot;#extension-ApplicativeDo&quot;&gt; &lt;code&gt;ApplicativeDo&lt;/code&gt; &lt;/a&gt; sin temor a romper su programa. Hay una trampa a tener en cuenta; consulte &lt;a href=&quot;#applicative-do-pitfall&quot;&gt;Cosas a tener en cuenta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3040a310341680e034eec3985152bc5a9e486ec2" translate="yes" xml:space="preserve">
          <source>Applicative functor formed by adding pure computations to a given applicative functor.</source>
          <target state="translated">Functor de aplicación formado por la adición de cálculos puros a un determinado functor de aplicación.</target>
        </trans-unit>
        <trans-unit id="65f268e6aa6cb1e22480a2a575f39395d4e90f10" translate="yes" xml:space="preserve">
          <source>Applicative functors</source>
          <target state="translated">Functores de aplicación</target>
        </trans-unit>
        <trans-unit id="e1507c25dc6a64376527010df0e4de108198887a" translate="yes" xml:space="preserve">
          <source>Applicative general combining function</source>
          <target state="translated">Función combinatoria general aplicativa</target>
        </trans-unit>
        <trans-unit id="ba83691e2c1dcc5de53cc3e4b25ca28fcf3f9a3b" translate="yes" xml:space="preserve">
          <source>Applicative merge tactic types</source>
          <target state="translated">Los tipos de tácticas de fusión de aplicaciones</target>
        </trans-unit>
        <trans-unit id="3bb211f1db0886c20dbcbe3aec098bfa4c51a870" translate="yes" xml:space="preserve">
          <source>ApplicativeDo</source>
          <target state="translated">ApplicativeDo</target>
        </trans-unit>
        <trans-unit id="a3e4a569ead07c8bc4d8de675cfd615c69dad24a" translate="yes" xml:space="preserve">
          <source>Applied</source>
          <target state="translated">Applied</target>
        </trans-unit>
        <trans-unit id="919e6fc623e0dc282b30825056bd5dda3c4e6c46" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determines if all elements of the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisfy the predicate.</source>
          <target state="translated">Aplicado a un predicado y una &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determina si todos los elementos de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisfacen el predicado.</target>
        </trans-unit>
        <trans-unit id="637b1e1d5c8efd54c8949c6a43abe4555350a327" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determines if all elements of the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisfy the predicate.</source>
          <target state="translated">Aplicado a un predicado y una &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determina si todos los elementos de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisfacen el predicado.</target>
        </trans-unit>
        <trans-unit id="9e82bc67b89a4b9e5b1ef1666971641ffcc4ec35" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a ByteString, &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determines if any element of the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisfies the predicate.</source>
          <target state="translated">Aplicado a un predicado y a ByteString, &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determina si alg&amp;uacute;n elemento de &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisface el predicado.</target>
        </trans-unit>
        <trans-unit id="bbb6d3ed7b10d0b6c91c1b6b6102c1501910cf5b" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a ByteString, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determines if any element of the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisfies the predicate.</source>
          <target state="translated">Aplicado a un predicado y a ByteString, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determina si alg&amp;uacute;n elemento de &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; satisface el predicado.</target>
        </trans-unit>
        <trans-unit id="b1b160142b2aab409abf2571e6a42ee896b8231e" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a list, &lt;code&gt;&lt;a href=&quot;ghc-list#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determines if all elements of the list satisfy the predicate. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the list must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value for the predicate applied to an element at a finite index of a finite or infinite list.</source>
          <target state="translated">Aplicado a un predicado y una lista, &lt;code&gt;&lt;a href=&quot;ghc-list#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determina si todos los elementos de la lista satisfacen el predicado. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , la lista debe ser finita; Sin embargo, &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; resulta de un valor &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; para el predicado aplicado a un elemento en un &amp;iacute;ndice finito de una lista finita o infinita.</target>
        </trans-unit>
        <trans-unit id="1bb3df1dee5942308d7549a4ff4e6623460c1a98" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a list, &lt;code&gt;&lt;a href=&quot;ghc-list#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determines if any element of the list satisfies the predicate. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the list must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value for the predicate applied to an element at a finite index of a finite or infinite list.</source>
          <target state="translated">Aplicado a un predicado y una lista, &lt;code&gt;&lt;a href=&quot;ghc-list#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determina si alg&amp;uacute;n elemento de la lista satisface el predicado. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , la lista debe ser finita; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de un valor &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; para el predicado aplicado a un elemento en un &amp;iacute;ndice finito de una lista finita o infinita.</target>
        </trans-unit>
        <trans-unit id="649319403532f404d1828c385726fa18cf17318d" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a list, &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determines if all elements of the list satisfy the predicate. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the list must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value for the predicate applied to an element at a finite index of a finite or infinite list.</source>
          <target state="translated">Aplicado a un predicado y una lista, &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; determina si todos los elementos de la lista satisfacen el predicado. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , la lista debe ser finita; Sin embargo, &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; resulta de un valor &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; para el predicado aplicado a un elemento en un &amp;iacute;ndice finito de una lista finita o infinita.</target>
        </trans-unit>
        <trans-unit id="96fd46ee7a807ee87c60e5d0b9ca946dc3e911cb" translate="yes" xml:space="preserve">
          <source>Applied to a predicate and a list, &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determines if any element of the list satisfies the predicate. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the list must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value for the predicate applied to an element at a finite index of a finite or infinite list.</source>
          <target state="translated">Aplicado a un predicado y una lista, &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; determina si alg&amp;uacute;n elemento de la lista satisface el predicado. Para que el resultado sea &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , la lista debe ser finita; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , sin embargo, resulta de un valor &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; para el predicado aplicado a un elemento en un &amp;iacute;ndice finito de una lista finita o infinita.</target>
        </trans-unit>
        <trans-unit id="be0613a1194858373863a5914ef44b595dda15fa" translate="yes" xml:space="preserve">
          <source>Applies a type to a function type. Returns: &lt;code&gt;Just u&lt;/code&gt; if the first argument represents a function of type &lt;code&gt;t -&amp;gt; u&lt;/code&gt; and the second argument represents a function of type &lt;code&gt;t&lt;/code&gt;. Otherwise, returns &lt;code&gt;Nothing&lt;/code&gt;.</source>
          <target state="translated">Aplica un tipo a un tipo de funci&amp;oacute;n. Devuelve: &lt;code&gt;Just u&lt;/code&gt; si el primer argumento representa una funci&amp;oacute;n de tipo &lt;code&gt;t -&amp;gt; u&lt;/code&gt; y el segundo argumento representa una funci&amp;oacute;n de tipo &lt;code&gt;t&lt;/code&gt; . De lo contrario, devuelve &lt;code&gt;Nothing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fee4a02d62b3b562a9c374f2e31932813920bd3d" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;(+1)&lt;/code&gt; to a list, a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Aplicar &lt;code&gt;(+1)&lt;/code&gt; a una lista, un &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; o y un &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7560eee7a783d22baf2bd6d4444f64f9c9a496fc" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;prelude#v:even&quot;&gt;even&lt;/a&gt;&lt;/code&gt; to the second element of a pair:</source>
          <target state="translated">Aplicar &lt;code&gt;&lt;a href=&quot;prelude#v:even&quot;&gt;even&lt;/a&gt;&lt;/code&gt; al segundo elemento de un par:</target>
        </trans-unit>
        <trans-unit id="11040b63f3921092eab408bc2b85dc0c41f9e594" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;Maybe Int&lt;/code&gt;. If we have &lt;code&gt;Just n&lt;/code&gt;, we want to show the underlying &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;. But if we have &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, we return the empty string instead of (for example) &quot;Nothing&quot;:</source>
          <target state="translated">Aplicar &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; a un evento de &lt;code&gt;Maybe Int&lt;/code&gt; . Si tenemos &lt;code&gt;Just n&lt;/code&gt; , queremos mostrar el &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; subyacente . Pero si tenemos &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , devolvemos la cadena vac&amp;iacute;a en lugar de (por ejemplo) &quot;Nothing&quot;:</target>
        </trans-unit>
        <trans-unit id="615a1ddaf7551b2a4174858609db8c4f030df5a1" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;Maybe Int&lt;/code&gt;. If we have &lt;code&gt;Just n&lt;/code&gt;, we want to show the underlying &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;. But if we have &lt;code&gt;&lt;a href=&quot;prelude#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, we return the empty string instead of (for example) &quot;Nothing&quot;:</source>
          <target state="translated">Aplicar &lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; a un evento de &lt;code&gt;Maybe Int&lt;/code&gt; . Si tenemos &lt;code&gt;Just n&lt;/code&gt; , queremos mostrar el &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; subyacente . Pero si tenemos &lt;code&gt;&lt;a href=&quot;prelude#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , devolvemos la cadena vac&amp;iacute;a en lugar de (por ejemplo) &quot;Nothing&quot;:</target>
        </trans-unit>
        <trans-unit id="edd6c71ec52ff9bccf29d84188bba0b21ce69446" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:braces&quot;&gt;braces&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplique &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:braces&quot;&gt;braces&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="b6b9c8416c76cb38545167e06e3308ec9286dc30" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplique &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="6ad84cd5aa8118e1f8b36881b3b884a1d00f4857" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:doubleQuotes&quot;&gt;doubleQuotes&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplique &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:doubleQuotes&quot;&gt;doubleQuotes&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="9745cca7883787ea648c32cd3f515d25f4cb991e" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:parens&quot;&gt;parens&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplicar &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:parens&quot;&gt;parens&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="96e48ba2760c93e4e34b159d49c1dbbc56799681" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:quotes&quot;&gt;quotes&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplicar &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:quotes&quot;&gt;quotes&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="9854504f7be6e574e7bfe679f44b4ee0c6be89cc" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:braces&quot;&gt;braces&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplique &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:braces&quot;&gt;braces&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="1f46147f015f62456e6f042fc1fdd0a4e456ff05" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplique &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:brackets&quot;&gt;brackets&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="d053cfa4369b1863e68c118fa964a1a17e42f125" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:doubleQuotes&quot;&gt;doubleQuotes&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplique &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:doubleQuotes&quot;&gt;doubleQuotes&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="21bdb9c521d1c7d41257920a997db5a1c432b4d7" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:parens&quot;&gt;parens&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplicar &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:parens&quot;&gt;parens&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="83bd5f5c6340c2876e03bdf5c78f42f0045fcd17" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:quotes&quot;&gt;quotes&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; if boolean is true.</source>
          <target state="translated">Aplicar &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:quotes&quot;&gt;quotes&lt;/a&gt;&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#t:Doc&quot;&gt;Doc&lt;/a&gt;&lt;/code&gt; si boolean es verdadero.</target>
        </trans-unit>
        <trans-unit id="b00536f11c69e40c7baa6a53f5c52fe55c8806e5" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;f&lt;/code&gt;-actions in the reverse order.</source>
          <target state="translated">Aplicar &lt;code&gt;f&lt;/code&gt; -acciones en orden inverso.</target>
        </trans-unit>
        <trans-unit id="a7fd738556716f25c4a33b181a4727d226b4c919" translate="yes" xml:space="preserve">
          <source>Apply a function to a &lt;code&gt;&lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; &lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; token. When manually applying a function to &lt;code&gt;realWorld#&lt;/code&gt;, it is necessary to use &lt;code&gt;NOINLINE&lt;/code&gt; to prevent semantically undesirable floating. &lt;code&gt;&lt;a href=&quot;ghc-exts#v:runRW-35-&quot;&gt;runRW#&lt;/a&gt;&lt;/code&gt; is inlined, but only very late in compilation after all floating is complete.</source>
          <target state="translated">Aplicar una funci&amp;oacute;n a un token &lt;code&gt;&lt;a href=&quot;ghc-exts#t:State-35-&quot;&gt;State#&lt;/a&gt; &lt;a href=&quot;ghc-exts#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; . Al aplicar manualmente una funci&amp;oacute;n a &lt;code&gt;realWorld#&lt;/code&gt; , es necesario utilizar &lt;code&gt;NOINLINE&lt;/code&gt; para evitar la flotaci&amp;oacute;n sem&amp;aacute;nticamente indeseable. &lt;code&gt;&lt;a href=&quot;ghc-exts#v:runRW-35-&quot;&gt;runRW#&lt;/a&gt;&lt;/code&gt; est&amp;aacute; en l&amp;iacute;nea, pero solo muy tarde en la compilaci&amp;oacute;n despu&amp;eacute;s de que se complete todo el flotante.</target>
        </trans-unit>
        <trans-unit id="15923e60f19aafe01135e2792144867deb99400e" translate="yes" xml:space="preserve">
          <source>Apply a function to the first element of an optional pair.</source>
          <target state="translated">Aplicar una función al primer elemento de un par opcional.</target>
        </trans-unit>
        <trans-unit id="a5aee8e5a78690a96a71ac571dd01657b03993bb" translate="yes" xml:space="preserve">
          <source>Apply a function to transform the continuation passed to a CPS computation.</source>
          <target state="translated">Aplicar una función para transformar la continuación pasada a un cálculo CPS.</target>
        </trans-unit>
        <trans-unit id="35e3f909c25395866110729633dad59aecf7af3c" translate="yes" xml:space="preserve">
          <source>Apply a function to transform the result of a continuation-passing computation.</source>
          <target state="translated">Aplicar una función para transformar el resultado de un cálculo de paso de continuación.</target>
        </trans-unit>
        <trans-unit id="4ff89ef704740fc048b9ba990998fdecd8670f9c" translate="yes" xml:space="preserve">
          <source>Apply a function to transform the result of a continuation-passing computation. This has a more restricted type than the &lt;code&gt;map&lt;/code&gt; operations for other monad transformers, because &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; does not define a functor in the category of monads.</source>
          <target state="translated">Aplicar una funci&amp;oacute;n para transformar el resultado de un c&amp;aacute;lculo de paso de continuaci&amp;oacute;n. Esto tiene un tipo m&amp;aacute;s restringido que las operaciones de &lt;code&gt;map&lt;/code&gt; a para otros transformadores de m&amp;oacute;nadas, porque &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; no define un funtor en la categor&amp;iacute;a de m&amp;oacute;nadas.</target>
        </trans-unit>
        <trans-unit id="d4993fc434940195f4b64a80d66593316a376d43" translate="yes" xml:space="preserve">
          <source>Apply a function to transform the result of a continuation-passing computation. This has a more restricted type than the &lt;code&gt;map&lt;/code&gt; operations for other monad transformers, because &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; does not define a functor in the category of monads.</source>
          <target state="translated">Aplicar una funci&amp;oacute;n para transformar el resultado de un c&amp;aacute;lculo de paso de continuaci&amp;oacute;n. Esto tiene un tipo m&amp;aacute;s restringido que las operaciones de &lt;code&gt;map&lt;/code&gt; a para otros transformadores de m&amp;oacute;nadas, porque &lt;code&gt;&lt;a href=&quot;control-monad-trans-cont#t:ContT&quot;&gt;ContT&lt;/a&gt;&lt;/code&gt; no define un funtor en la categor&amp;iacute;a de m&amp;oacute;nadas.</target>
        </trans-unit>
        <trans-unit id="b51211dea86c79bd6e381cda63ad155fa030e446" translate="yes" xml:space="preserve">
          <source>Apply a function to transform the result of a selection computation.</source>
          <target state="translated">Aplicar una función para transformar el resultado de un cálculo de selección.</target>
        </trans-unit>
        <trans-unit id="119d0767fcb8340ed73d84a60d5eb57b7349f3e5" translate="yes" xml:space="preserve">
          <source>Apply a function to transform the result of a selection computation. This has a more restricted type than the &lt;code&gt;map&lt;/code&gt; operations for other monad transformers, because &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#t:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; does not define a functor in the category of monads.</source>
          <target state="translated">Aplicar una funci&amp;oacute;n para transformar el resultado de un c&amp;aacute;lculo de selecci&amp;oacute;n. Esto tiene un tipo m&amp;aacute;s restringido que las operaciones de &lt;code&gt;map&lt;/code&gt; a para otros transformadores de m&amp;oacute;nadas, porque &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#t:SelectT&quot;&gt;SelectT&lt;/a&gt;&lt;/code&gt; no define un functor en la categor&amp;iacute;a de m&amp;oacute;nadas.</target>
        </trans-unit>
        <trans-unit id="90c1bc3308702f2e877e752823a6f576e30aa537" translate="yes" xml:space="preserve">
          <source>Apply a transformation to the other computation.</source>
          <target state="translated">Aplicar una transformación a la otra computación.</target>
        </trans-unit>
        <trans-unit id="6b6f2a899229fc5c6cb94a1a620e95652b86a4f6" translate="yes" xml:space="preserve">
          <source>Apply one equality to another, respectively</source>
          <target state="translated">Aplicar una igualdad a otra,respectivamente</target>
        </trans-unit>
        <trans-unit id="3915aaeccbb6370f41a8ba795caff78447316b72" translate="yes" xml:space="preserve">
          <source>Applying &lt;code&gt;mask&lt;/code&gt; to an exception handler</source>
          <target state="translated">Aplicar &lt;code&gt;mask&lt;/code&gt; a un controlador de excepciones</target>
        </trans-unit>
        <trans-unit id="7940fbb624b272a2fc9b14574cab25dadfa00758" translate="yes" xml:space="preserve">
          <source>Applying functions of dynamic type</source>
          <target state="translated">Aplicando funciones de tipo dinámico</target>
        </trans-unit>
        <trans-unit id="8d3c6b448377adca963a9a043ce17ad5b59ebdc9" translate="yes" xml:space="preserve">
          <source>Arbitrary precision integers. In contrast with fixed-size integral types such as &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; type represents the entire infinite range of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c0f892889dcc2a8ebf1f6c5901067143d19b65" translate="yes" xml:space="preserve">
          <source>Arbitrary precision integers. In contrast with fixed-size integral types such as &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-prim-0.6.1/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; type represents the entire infinite range of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4918ddd1f06d48d8245e6c5a8235cc03f138f53" translate="yes" xml:space="preserve">
          <source>Arbitrary precision integers. In contrast with fixed-size integral types such as &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; type represents the entire infinite range of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a6b0961bc685e7241bda505e193149b1b6e1e7" translate="yes" xml:space="preserve">
          <source>Arbitrary-precision rational numbers, represented as a ratio of two &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; values. A rational number may be constructed using the &lt;code&gt;&lt;a href=&quot;data-ratio#v:-37-&quot;&gt;%&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">N&amp;uacute;meros racionales de precisi&amp;oacute;n arbitraria, representados como una proporci&amp;oacute;n de dos valores &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; . Se puede construir un n&amp;uacute;mero racional usando el operador &lt;code&gt;&lt;a href=&quot;data-ratio#v:-37-&quot;&gt;%&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f570f682fb6c172cde8b33c6dce79b95de7ed61" translate="yes" xml:space="preserve">
          <source>Arbitrary-precision rational numbers, represented as a ratio of two &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; values. A rational number may be constructed using the &lt;code&gt;&lt;a href=&quot;ghc-real#v:-37-&quot;&gt;%&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">N&amp;uacute;meros racionales de precisi&amp;oacute;n arbitraria, representados como una proporci&amp;oacute;n de dos valores &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; . Se puede construir un n&amp;uacute;mero racional usando el operador &lt;code&gt;&lt;a href=&quot;ghc-real#v:-37-&quot;&gt;%&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29a35ec82756568480404c0269911333a81119f5" translate="yes" xml:space="preserve">
          <source>Arbitrary-sized tuples</source>
          <target state="translated">Tuplas de tamaño arbitrario</target>
        </trans-unit>
        <trans-unit id="27cb7fb1af71b4cc6c9c97447cc986c742906de1" translate="yes" xml:space="preserve">
          <source>Arg</source>
          <target state="translated">Arg</target>
        </trans-unit>
        <trans-unit id="9932a4cb0405a0729daea0726dad5bca21f86edb" translate="yes" xml:space="preserve">
          <source>ArgDescr</source>
          <target state="translated">ArgDescr</target>
        </trans-unit>
        <trans-unit id="ffc2c4751c406dfe729e68e12fca79cd5235bbd5" translate="yes" xml:space="preserve">
          <source>ArgMax</source>
          <target state="translated">ArgMax</target>
        </trans-unit>
        <trans-unit id="ff6dd3f82d1ef3b64409b1d48173a3489bd3a0de" translate="yes" xml:space="preserve">
          <source>ArgMin</source>
          <target state="translated">ArgMin</target>
        </trans-unit>
        <trans-unit id="33b3818348e9a7abc5ad4f8c9119835de808618f" translate="yes" xml:space="preserve">
          <source>ArgMin, ArgMax</source>
          <target state="translated">ArgMin,ArgMax</target>
        </trans-unit>
        <trans-unit id="24257e1e26a78c97f1a7d50aeb70e00749ebb9e9" translate="yes" xml:space="preserve">
          <source>ArgOrder</source>
          <target state="translated">ArgOrder</target>
        </trans-unit>
        <trans-unit id="54486629b7690ae513c392c789d163e099b5b87d" translate="yes" xml:space="preserve">
          <source>Argument Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e753ec7f8245ae5fdc7a8b075baae341353e5ea" translate="yes" xml:space="preserve">
          <source>ArgumentLimit</source>
          <target state="translated">ArgumentLimit</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="41c35f0b16b9faa92a29f4ed3edbe5f0ea7a74af" translate="yes" xml:space="preserve">
          <source>Arguments to pass to the executable</source>
          <target state="translated">Los argumentos para pasar al ejecutable</target>
        </trans-unit>
        <trans-unit id="e1cbb100861b9948d58a53b976c856c97d398433" translate="yes" xml:space="preserve">
          <source>Arguments which look like &lt;code&gt;@foo&lt;/code&gt; will be replaced with the contents of file &lt;code&gt;foo&lt;/code&gt;. A gcc-like syntax for response files arguments is expected. This must re-constitute the argument list by doing an inverse of the escaping mechanism done by the calling-program side.</source>
          <target state="translated">Los argumentos que se parecen a &lt;code&gt;@foo&lt;/code&gt; ser&amp;aacute;n reemplazados por el contenido del archivo &lt;code&gt;foo&lt;/code&gt; . Se espera una sintaxis similar a gcc para los argumentos de los archivos de respuesta. Esto debe reconstituir la lista de argumentos haciendo una operaci&amp;oacute;n inversa del mecanismo de escape realizado por el lado del programa de llamada.</target>
        </trans-unit>
        <trans-unit id="c4a70a3f41d906934cb39fa13410a07666b58dc9" translate="yes" xml:space="preserve">
          <source>ArithException</source>
          <target state="translated">ArithException</target>
        </trans-unit>
        <trans-unit id="45f053dc732762c8c17889da40821807b746247b" translate="yes" xml:space="preserve">
          <source>Arithmetic</source>
          <target state="translated">Arithmetic</target>
        </trans-unit>
        <trans-unit id="bb08cbe0a6134017a6f7cf472ab8010209d07a2f" translate="yes" xml:space="preserve">
          <source>Arithmetic exceptions.</source>
          <target state="translated">Excepciones aritméticas.</target>
        </trans-unit>
        <trans-unit id="a9d7caa767383fc4926cd95d59576ba33ee0a3dc" translate="yes" xml:space="preserve">
          <source>Arithmetic on &lt;code&gt;Int&lt;/code&gt; is unchecked for overflow&lt;code&gt;Int&lt;/code&gt;, so all operations on &lt;code&gt;Int&lt;/code&gt; happen modulo 2&lt;sup&gt;⟨n⟩&lt;/sup&gt; where ⟨n⟩ is the size in bits of the &lt;code&gt;Int&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202699f8498d7982cc53b20732251548a363465a" translate="yes" xml:space="preserve">
          <source>Arithmetic on &lt;code&gt;Int&lt;/code&gt; is unchecked for overflowoverflow&lt;code&gt;Int&lt;/code&gt;, so all operations on &lt;code&gt;Int&lt;/code&gt; happen modulo 2&lt;sup&gt;⟨n⟩&lt;/sup&gt; where ⟨n⟩ is the size in bits of the &lt;code&gt;Int&lt;/code&gt; type.</source>
          <target state="translated">La aritm&amp;eacute;tica en &lt;code&gt;Int&lt;/code&gt; no est&amp;aacute; marcada para overflowoverflow &lt;code&gt;Int&lt;/code&gt; , por lo que todas las operaciones en &lt;code&gt;Int&lt;/code&gt; suceden m&amp;oacute;dulo 2 &lt;sup&gt;⟨n⟩&lt;/sup&gt; donde ⟨n⟩ es el tama&amp;ntilde;o en bits del tipo &lt;code&gt;Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fc0feb17ac2848b9f01591a445a367739c560da" translate="yes" xml:space="preserve">
          <source>Arithmetic operations</source>
          <target state="translated">Operaciones aritméticas</target>
        </trans-unit>
        <trans-unit id="3fecae258b41570e5190fa75b10edfa2c67f433e" translate="yes" xml:space="preserve">
          <source>Arithmetic shift-right operation</source>
          <target state="translated">Operación aritmética de cambio de turno de derecha</target>
        </trans-unit>
        <trans-unit id="9d9b31e17e60151ad825cdde7693ca0fcca238c9" translate="yes" xml:space="preserve">
          <source>Arity</source>
          <target state="translated">Arity</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="a070934e81973445b297f3e432a70f43cd9eb647" translate="yes" xml:space="preserve">
          <source>Array classes</source>
          <target state="translated">Clases de arreglos...</target>
        </trans-unit>
        <trans-unit id="1f72bc74b6f28918205f9e6e811785a34a99cae8" translate="yes" xml:space="preserve">
          <source>Array construction</source>
          <target state="translated">Construcción de la matriz</target>
        </trans-unit>
        <trans-unit id="b9be2aa72950b9c68024a84de0f4b74e90523e2c" translate="yes" xml:space="preserve">
          <source>Array in which to place the values</source>
          <target state="translated">Matriz en la que colocar los valores</target>
        </trans-unit>
        <trans-unit id="35664ac437e521792c86de2c050b2b9616ad2f9b" translate="yes" xml:space="preserve">
          <source>Array to resize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f55ab0f2f0b52c9ee209db3b03b78882aa29c9" translate="yes" xml:space="preserve">
          <source>Array to write from</source>
          <target state="translated">Arreglos para escribir desde</target>
        </trans-unit>
        <trans-unit id="2dfdceb734024f39f314a3c0b8391586228fb921" translate="yes" xml:space="preserve">
          <source>Array#</source>
          <target state="translated">Array#</target>
        </trans-unit>
        <trans-unit id="898837d96f33bff85a3be5478164cfc6afd0eadc" translate="yes" xml:space="preserve">
          <source>ArrayArray#</source>
          <target state="translated">ArrayArray#</target>
        </trans-unit>
        <trans-unit id="592acb75a6da231d0a2a2173d588c93486db96f4" translate="yes" xml:space="preserve">
          <source>ArrayException</source>
          <target state="translated">ArrayException</target>
        </trans-unit>
        <trans-unit id="93c35e8fd0d3491f05295cbaa9fc1ec445fdc9e3" translate="yes" xml:space="preserve">
          <source>Arrays of &lt;code&gt;Storable&lt;/code&gt; things.</source>
          <target state="translated">Matrices de cosas &lt;code&gt;Storable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f11fdf73ec1f7aec4ea144e79eb109ff942b709" translate="yes" xml:space="preserve">
          <source>Arrays with unboxed elements</source>
          <target state="translated">Arreglos con elementos no empaquetados</target>
        </trans-unit>
        <trans-unit id="9d7392dc546e184e07e6daaacd277a5d43a5c7da" translate="yes" xml:space="preserve">
          <source>Arrays with unboxed elements. Instances of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt; are provided for &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; with certain element types (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, etc.; see the &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; class for a full list).</source>
          <target state="translated">Matrices con elementos sin caja. Se proporcionan instancias de &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; con ciertos tipos de elementos ( &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , etc .; consulte la clase &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; para obtener una lista completa).</target>
        </trans-unit>
        <trans-unit id="641e7befb70fe85093114258ec0852dc24a766bf" translate="yes" xml:space="preserve">
          <source>Arrays with unboxed elements. Instances of &lt;code&gt;&lt;a href=&quot;data-array-iarray#t:IArray&quot;&gt;IArray&lt;/a&gt;&lt;/code&gt; are provided for &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; with certain element types (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, etc.; see the &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; class for a full list).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4758c3cc8dac2d76026d0733816741f9b21d43" translate="yes" xml:space="preserve">
          <source>Arrow</source>
          <target state="translated">Arrow</target>
        </trans-unit>
        <trans-unit id="4a7111dcaf1b4237c13ed045e218a14996e9fbe6" translate="yes" xml:space="preserve">
          <source>Arrow application</source>
          <target state="translated">Aplicación de la flecha</target>
        </trans-unit>
        <trans-unit id="e65665c0319750f55e0fe69874130a1cf6d4ed0a" translate="yes" xml:space="preserve">
          <source>Arrow keys</source>
          <target state="translated">Teclas de flecha</target>
        </trans-unit>
        <trans-unit id="a6216e2bed8396214323ababdee0bc0041b0726d" translate="yes" xml:space="preserve">
          <source>Arrow notation (see &lt;a href=&quot;#arrow-notation&quot;&gt;Arrow notation&lt;/a&gt;) uses whatever &lt;code&gt;arr&lt;/code&gt;, &lt;code&gt;(&amp;gt;&amp;gt;&amp;gt;)&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;(|||)&lt;/code&gt; and &lt;code&gt;loop&lt;/code&gt; functions are in scope. But unlike the other constructs, the types of these functions must match the Prelude types very closely. Details are in flux; if you want to use this, ask!</source>
          <target state="translated">La notaci&amp;oacute;n de flechas (ver &lt;a href=&quot;#arrow-notation&quot;&gt;Notaci&amp;oacute;n de flechas&lt;/a&gt; ) usa cualquier funci&amp;oacute;n de &lt;code&gt;arr&lt;/code&gt; , &lt;code&gt;(&amp;gt;&amp;gt;&amp;gt;)&lt;/code&gt; , &lt;code&gt;first&lt;/code&gt; , &lt;code&gt;app&lt;/code&gt; , &lt;code&gt;(|||)&lt;/code&gt; y &lt;code&gt;loop&lt;/code&gt; que est&amp;eacute;n dentro del alcance. Pero a diferencia de las otras construcciones, los tipos de estas funciones deben coincidir muy de cerca con los tipos de Prelude. Los detalles est&amp;aacute;n cambiando; si quieres usar esto, pregunta!</target>
        </trans-unit>
        <trans-unit id="8f1f0db1f62fbb0e92d1c7e980a5aefb808bd919" translate="yes" xml:space="preserve">
          <source>ArrowApply</source>
          <target state="translated">ArrowApply</target>
        </trans-unit>
        <trans-unit id="3c11beff8b02b8f9cbaa16ca3ab20327c65da1ba" translate="yes" xml:space="preserve">
          <source>ArrowChoice</source>
          <target state="translated">ArrowChoice</target>
        </trans-unit>
        <trans-unit id="47595fe84f8dd1e9405b5200e89860454330a77e" translate="yes" xml:space="preserve">
          <source>ArrowLoop</source>
          <target state="translated">ArrowLoop</target>
        </trans-unit>
        <trans-unit id="e45164f39602039a081dfdb414a58cdcb90fce01" translate="yes" xml:space="preserve">
          <source>ArrowMonad</source>
          <target state="translated">ArrowMonad</target>
        </trans-unit>
        <trans-unit id="31cc2db65fb67d75aaa03855c6522bc61f0c5f08" translate="yes" xml:space="preserve">
          <source>ArrowPlus</source>
          <target state="translated">ArrowPlus</target>
        </trans-unit>
        <trans-unit id="a6cef6a13748337ec64d72cbbfdef1e1d56c28ba" translate="yes" xml:space="preserve">
          <source>ArrowT</source>
          <target state="translated">ArrowT</target>
        </trans-unit>
        <trans-unit id="c5b3adde056c0b01047cb4ee63a6ade2f14b6bf6" translate="yes" xml:space="preserve">
          <source>ArrowZero</source>
          <target state="translated">ArrowZero</target>
        </trans-unit>
        <trans-unit id="0cf604cb001bdc6112fda3affb0c7674d1c4481b" translate="yes" xml:space="preserve">
          <source>Arrows</source>
          <target state="translated">Arrows</target>
        </trans-unit>
        <trans-unit id="c27973de6a30851ee83300e482ede863a41f7f94" translate="yes" xml:space="preserve">
          <source>Arrows are a generalisation of monads introduced by John Hughes. For more details, see</source>
          <target state="translated">Las flechas son una generalización de las mónadas introducidas por John Hughes.Para más detalles,ver</target>
        </trans-unit>
        <trans-unit id="50de5e9983b77e93c151fa7abf423177ee062d7f" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt;, but strict in the result of the reduction functions at each step.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt; , pero estricto en el resultado de las funciones de reducci&amp;oacute;n en cada paso.</target>
        </trans-unit>
        <trans-unit id="192565b6bc1ac3ccf6bc1023c2ebb1325b5351f9" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldr&quot;&gt;bifoldr&lt;/a&gt;&lt;/code&gt;, but strict in the result of the reduction functions at each step.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldr&quot;&gt;bifoldr&lt;/a&gt;&lt;/code&gt; , pero estricto en el resultado de las funciones de reducci&amp;oacute;n en cada paso.</target>
        </trans-unit>
        <trans-unit id="5af372b8d1d974d76bfe10c942fe9d73af03dd9b" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bitraverse_&quot;&gt;bitraverse_&lt;/a&gt;&lt;/code&gt;, but with the structure as the primary argument. For a version that doesn't ignore the results, see &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bitraverse_&quot;&gt;bitraverse_&lt;/a&gt;&lt;/code&gt; , pero con la estructura como argumento principal. Para obtener una versi&amp;oacute;n que no ignore los resultados, consulte &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bifor&quot;&gt;bifor&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa8707f2ab83f8daca8094457adcacefc1dfcf09" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; are just binary operators, one might ask what happens if the datatype has more than two constructors, or a constructor with more than two fields. The answer is simple: the operators are used several times, to combine all the constructors and fields as needed. However, users /should not rely on a specific nesting strategy/ for &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; being used. The compiler is free to choose any nesting it prefers. (In practice, the current implementation tries to produce a more-or-less balanced nesting, so that the traversal of the structure of the datatype from the root to a particular component can be performed in logarithmic rather than linear time.)</source>
          <target state="translated">Como &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; son solo operadores binarios, uno podr&amp;iacute;a preguntarse qu&amp;eacute; sucede si el tipo de datos tiene m&amp;aacute;s de dos constructores, o un constructor con m&amp;aacute;s de dos campos. La respuesta es simple: los operadores se utilizan varias veces para combinar todos los constructores y campos seg&amp;uacute;n sea necesario. Sin embargo, los usuarios / no deben confiar en una estrategia de anidamiento espec&amp;iacute;fica / para &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; que se utilizan. El compilador es libre de elegir cualquier anidado que prefiera. (En la pr&amp;aacute;ctica, la implementaci&amp;oacute;n actual intenta producir un anidamiento m&amp;aacute;s o menos equilibrado, de modo que el recorrido de la estructura del tipo de datos desde la ra&amp;iacute;z hasta un componente en particular se pueda realizar en tiempo logar&amp;iacute;tmico en lugar de lineal).</target>
        </trans-unit>
        <trans-unit id="d1abb43b60664f44000bb7f5a55f0ee83b119b80" translate="yes" xml:space="preserve">
          <source>As GHC&amp;rsquo;s compilation products don&amp;rsquo;t map perfectly onto DWARF constructs, GHC takes advantage of the extensibility of the DWARF standard to provide additional information.</source>
          <target state="translated">Como los productos de compilaci&amp;oacute;n de GHC no se asignan perfectamente a las construcciones DWARF, GHC aprovecha la extensibilidad del est&amp;aacute;ndar DWARF para proporcionar informaci&amp;oacute;n adicional.</target>
        </trans-unit>
        <trans-unit id="e35067b51e094e56d5ae4f8f876dfb483b8f92fd" translate="yes" xml:space="preserve">
          <source>As a binary semaphore &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt; ()&lt;/code&gt;, with &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; as wait and signal.</source>
          <target state="translated">Como un sem&amp;aacute;foro binario &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt; ()&lt;/code&gt; , con &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; como espera y se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="86cdad137d8956982af57685ad5fdd7f0b7b6c9c" translate="yes" xml:space="preserve">
          <source>As a consequence of the &lt;a href=&quot;#levity-polymorphic-restrictions&quot;&gt;levity-polymorphic binder restriction&lt;/a&gt;, levity-polymorphic fields are disallowed in data constructors of data types declared using &lt;code&gt;data&lt;/code&gt;. However, since &lt;code&gt;newtype&lt;/code&gt; data constructor application is implemented as a coercion instead of as function application, this restriction does not apply to the field inside a &lt;code&gt;newtype&lt;/code&gt; data constructor. Thus, the type checker accepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bbfcb820033011b427f73f5d8e7b567bf9a401" translate="yes" xml:space="preserve">
          <source>As a consequence of these laws, the &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;f&lt;/code&gt; will satisfy</source>
          <target state="translated">Como consecuencia de estas leyes, la instancia de &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;f&lt;/code&gt; satisfar&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="f93309e1645a680e5a41f639c6d8007d29bdfd58" translate="yes" xml:space="preserve">
          <source>As a consequence of these laws, the &lt;code&gt;&lt;a href=&quot;ghc-base#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;f&lt;/code&gt; will satisfy</source>
          <target state="translated">Como consecuencia de estas leyes, la instancia de &lt;code&gt;&lt;a href=&quot;ghc-base#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;f&lt;/code&gt; satisfar&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="80b0e3a1e8c000dc891586ccc71861ad6328cf11" translate="yes" xml:space="preserve">
          <source>As a consequence of these laws, the &lt;code&gt;&lt;a href=&quot;prelude#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;f&lt;/code&gt; will satisfy</source>
          <target state="translated">Como consecuencia de estas leyes, la instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; para &lt;code&gt;f&lt;/code&gt; satisfar&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="429a16b965fd947d5a1e23ea21fc9c7acb81cf44" translate="yes" xml:space="preserve">
          <source>As a constructor</source>
          <target state="translated">Como constructor</target>
        </trans-unit>
        <trans-unit id="5d801d83cd9e0b19d834377699e0695ddc3ca42e" translate="yes" xml:space="preserve">
          <source>As a constructor with record syntax</source>
          <target state="translated">Como constructor con sintaxis de registro</target>
        </trans-unit>
        <trans-unit id="9189865da8d3692a10ab79cac723aaeb6eea7be7" translate="yes" xml:space="preserve">
          <source>As a convenience, GHC allows you to omit the quote mark when the name is unambiguous. However, our experience has shown that the quote mark helps to make code more readable and less error-prone. GHC thus supports &lt;a href=&quot;using-warnings#ghc-flag--Wunticked-promoted-constructors&quot;&gt;&lt;code&gt;-Wunticked-promoted-constructors&lt;/code&gt;&lt;/a&gt; that will warn you if you use a promoted data constructor without a preceding quote mark.</source>
          <target state="translated">Para su comodidad, GHC le permite omitir las comillas cuando el nombre no es ambiguo. Sin embargo, nuestra experiencia ha demostrado que las comillas ayudan a que el c&amp;oacute;digo sea m&amp;aacute;s legible y menos propenso a errores. Por lo tanto, GHC admite &lt;a href=&quot;using-warnings#ghc-flag--Wunticked-promoted-constructors&quot;&gt; &lt;code&gt;-Wunticked-promoted-constructors&lt;/code&gt; &lt;/a&gt; que le advertir&amp;aacute;n si utiliza un constructor de datos promocionado sin comillas anteriores.</target>
        </trans-unit>
        <trans-unit id="ce1486ef373f517210a834efa7f6eeb842e7f926" translate="yes" xml:space="preserve">
          <source>As a general rule, if a data type has a derived &lt;code&gt;Functor&lt;/code&gt; instance and its last type parameter occurs on the right-hand side of the data declaration, then either it must (1) occur bare (e.g., &lt;code&gt;newtype Id a = Id a&lt;/code&gt;), or (2) occur as the last argument of a type constructor (as in &lt;code&gt;Right&lt;/code&gt; above).</source>
          <target state="translated">Como regla general, si un tipo de datos tiene una instancia de &lt;code&gt;Functor&lt;/code&gt; derivada y su &amp;uacute;ltimo par&amp;aacute;metro de tipo ocurre en el lado derecho de la declaraci&amp;oacute;n de datos, entonces debe (1) aparecer desnudo (por ejemplo, &lt;code&gt;newtype Id a = Id a&lt;/code&gt; ) , o (2) ocurren como el &amp;uacute;ltimo argumento de un constructor de tipos (como en la &lt;code&gt;Right&lt;/code&gt; arriba).</target>
        </trans-unit>
        <trans-unit id="e5b650f5b24353725153d71d0ace5287fade8a17" translate="yes" xml:space="preserve">
          <source>As a more comprehensive alternative for debugging Parsec parsers, there's also the &lt;a href=&quot;http://hackage.haskell.org/package/parsec-free&quot;&gt;parsec-free&lt;/a&gt; package.</source>
          <target state="translated">Como alternativa m&amp;aacute;s completa para depurar analizadores de Parsec, tambi&amp;eacute;n existe el paquete &lt;a href=&quot;http://hackage.haskell.org/package/parsec-free&quot;&gt;sin parsec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="826ab8729c5c6b675ee7477d0a06b532fb5de96a" translate="yes" xml:space="preserve">
          <source>As a more substantial example of the rules in action, consider</source>
          <target state="translated">Como un ejemplo más sustancial de las reglas en acción,considere</target>
        </trans-unit>
        <trans-unit id="8478fed6cf150b0bde8267af58280dff83b3ef83" translate="yes" xml:space="preserve">
          <source>As a quick example, here is a frontend plugin that prints the arguments that were passed to it, and then exits.</source>
          <target state="translated">Como un ejemplo rápido,aquí hay un plugin frontal que imprime los argumentos que se le pasaron,y luego sale.</target>
        </trans-unit>
        <trans-unit id="991de1e28384a51531170b3384f7afcc4d87ef71" translate="yes" xml:space="preserve">
          <source>As a quick example, here is a simple plugin that just does nothing and just returns the original compilation pipeline, unmodified, and says &amp;lsquo;Hello&amp;rsquo;:</source>
          <target state="translated">Como ejemplo r&amp;aacute;pido, aqu&amp;iacute; hay un complemento simple que simplemente no hace nada y simplemente devuelve la canalizaci&amp;oacute;n de compilaci&amp;oacute;n original, sin modificar, y dice 'Hola':</target>
        </trans-unit>
        <trans-unit id="85bb4cc8874a7fe78368b1f43fbe3cade8bd0615" translate="yes" xml:space="preserve">
          <source>As a result of this extension, all derived instances in newtype declarations are treated uniformly (and implemented just by reusing the dictionary for the representation type), &lt;em&gt;except&lt;/em&gt;&lt;code&gt;Show&lt;/code&gt; and &lt;code&gt;Read&lt;/code&gt;, which really behave differently for the newtype and its representation.</source>
          <target state="translated">Como resultado de esta extensi&amp;oacute;n, todas las instancias derivadas en declaraciones newtype se tratan uniformemente (y se implementan simplemente reutilizando el diccionario para el tipo de representaci&amp;oacute;n), &lt;em&gt;excepto &lt;/em&gt; &lt;code&gt;Show&lt;/code&gt; y &lt;code&gt;Read&lt;/code&gt; , que realmente se comportan de manera diferente para el newtype y su representaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b46bedb78774bd2cc4f8ff31c4366eaf33f5bd61" translate="yes" xml:space="preserve">
          <source>As a result, it requires approximately twice as much memory as its result to construct its result. For files more than a half of available RAM in size, this may result in memory exhaustion.</source>
          <target state="translated">Como resultado,requiere aproximadamente el doble de memoria que su resultado para construir su resultado.Para los archivos de más de la mitad de la RAM disponible,esto puede resultar en el agotamiento de la memoria.</target>
        </trans-unit>
        <trans-unit id="6e9d8d378558658c4bde3d6e6c2d01732f382a26" translate="yes" xml:space="preserve">
          <source>As a simple example of an encoding implementation, we show how to efficiently convert the following representation of mixed-data tables to an UTF-8 encoded Comma-Separated-Values (CSV) table.</source>
          <target state="translated">Como ejemplo simple de una implementación de codificación,mostramos cómo convertir eficientemente la siguiente representación de tablas de datos mixtos en una tabla de valores separados por comas (CSV)codificada en UTF-8.</target>
        </trans-unit>
        <trans-unit id="ca12c18463b6879d5a860720c0092cdccee7f627" translate="yes" xml:space="preserve">
          <source>As a single extra-constraints wildcard is enough to infer any number of constraints, only one is allowed in a type signature and it should come last in the list of constraints.</source>
          <target state="translated">Dado que un solo comodín de extra-limitaciones es suficiente para inferir cualquier número de restricciones,sólo se permite una en una firma tipo y debe venir en último lugar en la lista de restricciones.</target>
        </trans-unit>
        <trans-unit id="ba8ae9d2e67cab36cf8dbfe80e256d78b5863ef7" translate="yes" xml:space="preserve">
          <source>As a workaround, we allow to bind &lt;code&gt;(*)&lt;/code&gt; in prefix form:</source>
          <target state="translated">Como soluci&amp;oacute;n alternativa, permitimos enlazar &lt;code&gt;(*)&lt;/code&gt; en forma de prefijo:</target>
        </trans-unit>
        <trans-unit id="b52875799ff2828c6eeb24db51f51ce6b5d35654" translate="yes" xml:space="preserve">
          <source>As always, for RTS options that take ⟨size⟩s: If the last character of ⟨size⟩ is a K or k, multiply by 1000; if an M or m, by 1,000,000; if a G or G, by 1,000,000,000. (And any wraparound in the counters is &lt;em&gt;your&lt;/em&gt; fault!)</source>
          <target state="translated">Como siempre, para las opciones RTS que toman ⟨size⟩s: Si el &amp;uacute;ltimo car&amp;aacute;cter de ⟨size es una K o k, multiplique por 1000; si es M om, por 1.000.000; si es G o G, por 1,000,000,000. (&amp;iexcl;Y cualquier envoltura en los mostradores es &lt;em&gt;tu&lt;/em&gt; culpa!)</target>
        </trans-unit>
        <trans-unit id="99567f4b6e834794323885b782256cd2c328ea5e" translate="yes" xml:space="preserve">
          <source>As always, type synonyms must be fully applied. You cannot, for example, write:</source>
          <target state="translated">Como siempre,los sinónimos de los tipos deben aplicarse plenamente.No se puede,por ejemplo,escribir:</target>
        </trans-unit>
        <trans-unit id="13c3594421b98bd2bf10cd954eb77cee53d78c7c" translate="yes" xml:space="preserve">
          <source>As an &lt;code&gt;&lt;a href=&quot;system-exit#t:ExitCode&quot;&gt;ExitCode&lt;/a&gt;&lt;/code&gt; is not an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; bypasses the error handling in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad and cannot be intercepted by &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; from the &lt;a href=&quot;prelude&quot;&gt;Prelude&lt;/a&gt;. However it is a &lt;code&gt;&lt;a href=&quot;control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt;, and can be caught using the functions of &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;. This means that cleanup computations added with &lt;code&gt;&lt;a href=&quot;control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; (from &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;) are also executed properly on &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a64b93c54367f32283d34b8466c83c540d04226" translate="yes" xml:space="preserve">
          <source>As an &lt;code&gt;&lt;a href=&quot;system-exit#t:ExitCode&quot;&gt;ExitCode&lt;/a&gt;&lt;/code&gt; is not an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; bypasses the error handling in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad and cannot be intercepted by &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; from the &lt;a href=&quot;prelude&quot;&gt;Prelude&lt;/a&gt;. However it is a &lt;code&gt;&lt;a href=&quot;control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt;, and can be caught using the functions of &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;. This means that cleanup computations added with &lt;code&gt;&lt;a href=&quot;control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; (from &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt;) are also executed properly on &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Como un &lt;code&gt;&lt;a href=&quot;system-exit#t:ExitCode&quot;&gt;ExitCode&lt;/a&gt;&lt;/code&gt; no es un &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; evita el manejo de errores en la m&amp;oacute;nada &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; y no puede ser interceptado por la &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; del &lt;a href=&quot;prelude&quot;&gt;Preludio&lt;/a&gt; . Sin embargo, es una &lt;code&gt;&lt;a href=&quot;control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; y puede detectarse utilizando las funciones de &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt; . Esto significa que los c&amp;aacute;lculos de limpieza agregados con &lt;code&gt;&lt;a href=&quot;control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; (de &lt;a href=&quot;control-exception&quot;&gt;Control.Exception&lt;/a&gt; ) tambi&amp;eacute;n se ejecutan correctamente en &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a4cafca22cd8d1a307b13e29242f4d26666e5a9" translate="yes" xml:space="preserve">
          <source>As an example of signaling an error in the error monad &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, consider a safe division function &lt;code&gt;safeDiv x y&lt;/code&gt; that returns &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; when the denominator &lt;code&gt;y&lt;/code&gt; is zero and &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (x `div`
 y)&lt;/code&gt; otherwise. For example:</source>
          <target state="translated">Como ejemplo de se&amp;ntilde;alizaci&amp;oacute;n de un error en la m&amp;oacute;nada de error &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; , considere una funci&amp;oacute;n de divisi&amp;oacute;n segura &lt;code&gt;safeDiv x y&lt;/code&gt; que devuelve &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; cuando el denominador &lt;code&gt;y&lt;/code&gt; es cero y &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (x `div` y)&lt;/code&gt; caso contrario. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c06e5fe5eaba60d194f35398d388c5324d3e8468" translate="yes" xml:space="preserve">
          <source>As an example which does &lt;em&gt;not&lt;/em&gt; work, consider</source>
          <target state="translated">Como ejemplo que &lt;em&gt;no&lt;/em&gt; funciona, considere</target>
        </trans-unit>
        <trans-unit id="6347b158715a28dac26c8c73ed1a2953999b56f9" translate="yes" xml:space="preserve">
          <source>As an example, consider a simple pretty-printer class &lt;code&gt;SPretty&lt;/code&gt;, which outputs pretty strings:</source>
          <target state="translated">Como ejemplo, considere una simple clase de impresora bonita &lt;code&gt;SPretty&lt;/code&gt; , que genera cadenas bonitas:</target>
        </trans-unit>
        <trans-unit id="522dfa47c182924ecba88bb21606211e4b6f02fd" translate="yes" xml:space="preserve">
          <source>As an example, consider the following pipeline:</source>
          <target state="translated">Como ejemplo,consideremos la siguiente tubería:</target>
        </trans-unit>
        <trans-unit id="42d246ca4c667eae440bdea085741dec65a2d440" translate="yes" xml:space="preserve">
          <source>As an example, consider the type of predicate functions &lt;code&gt;a -&amp;gt; Bool&lt;/code&gt;. One such predicate might be &lt;code&gt;negative x = x &amp;lt; 0&lt;/code&gt;, which classifies integers as to whether they are negative. However, given this predicate, we can re-use it in other situations, providing we have a way to map values &lt;em&gt;to&lt;/em&gt; integers. For instance, we can use the &lt;code&gt;negative&lt;/code&gt; predicate on a person's bank balance to work out if they are currently overdrawn:</source>
          <target state="translated">Como ejemplo, considere el tipo de funciones de predicado &lt;code&gt;a -&amp;gt; Bool&lt;/code&gt; . Uno de esos predicados podr&amp;iacute;a ser &lt;code&gt;negative x = x &amp;lt; 0&lt;/code&gt; , que clasifica los n&amp;uacute;meros enteros en cuanto a si son negativos. Sin embargo, dado este predicado, podemos reutilizarlo en otras situaciones, siempre que tengamos una forma de asignar valores &lt;em&gt;a&lt;/em&gt; n&amp;uacute;meros enteros. Por ejemplo, podemos usar el predicado &lt;code&gt;negative&lt;/code&gt; del saldo bancario de una persona para determinar si actualmente est&amp;aacute; sobregirada:</target>
        </trans-unit>
        <trans-unit id="9c76375fc08b8bec18373864d63325042996901b" translate="yes" xml:space="preserve">
          <source>As an example, in order to load the plugin exported by &lt;code&gt;Foo.Plugin&lt;/code&gt; in the package &lt;code&gt;foo-ghc-plugin&lt;/code&gt;, and give it the parameter &amp;ldquo;baz&amp;rdquo;, we would invoke GHC like this:</source>
          <target state="translated">Como ejemplo, para cargar el complemento exportado por &lt;code&gt;Foo.Plugin&lt;/code&gt; en el paquete &lt;code&gt;foo-ghc-plugin&lt;/code&gt; , y darle el par&amp;aacute;metro &quot;baz&quot;, invocar&amp;iacute;amos GHC as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="362dc967d86ad4ea9a7d9c73fea6acc2cbd89dbf" translate="yes" xml:space="preserve">
          <source>As an example, let us look at a function &lt;code&gt;encode&lt;/code&gt; that produces a naive, but lossless bit encoding of values of various datatypes. So we are aiming to define a function</source>
          <target state="translated">Como ejemplo, veamos una funci&amp;oacute;n de &lt;code&gt;encode&lt;/code&gt; que produce una codificaci&amp;oacute;n de bits ingenua pero sin p&amp;eacute;rdidas de valores de varios tipos de datos. As&amp;iacute; que nuestro objetivo es definir una funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="33852151126c630432f1fdab8e0ba978ca5481a5" translate="yes" xml:space="preserve">
          <source>As an example, let&amp;rsquo;s define an interface for a plugin system where the plugin authors are untrusted, possibly malicious third-parties. We do this by restricting the plugin interface to pure functions or to a restricted &lt;code&gt;IO&lt;/code&gt; monad that we have defined. The restricted &lt;code&gt;IO&lt;/code&gt; monad will only allow a safe subset of &lt;code&gt;IO&lt;/code&gt; actions to be executed. We define the plugin interface so that it requires the plugin module, &lt;code&gt;Danger&lt;/code&gt;, to export a single computation, &lt;code&gt;Danger.runMe&lt;/code&gt;, of type &lt;code&gt;RIO ()&lt;/code&gt;, where &lt;code&gt;RIO&lt;/code&gt; is a monad defined as follows:</source>
          <target state="translated">Como ejemplo, definamos una interfaz para un sistema de complementos donde los autores de los complementos no son de confianza, posiblemente terceros malintencionados. Hacemos esto restringiendo la interfaz del complemento a funciones puras o a una m&amp;oacute;nada &lt;code&gt;IO&lt;/code&gt; restringida que hemos definido. La m&amp;oacute;nada de &lt;code&gt;IO&lt;/code&gt; restringida solo permitir&amp;aacute; que se ejecute un subconjunto seguro de acciones de &lt;code&gt;IO&lt;/code&gt; S. Definimos la interfaz del complemento para que requiera el m&amp;oacute;dulo de complemento, &lt;code&gt;Danger&lt;/code&gt; , para exportar un &amp;uacute;nico c&amp;aacute;lculo, &lt;code&gt;Danger.runMe&lt;/code&gt; , de tipo &lt;code&gt;RIO ()&lt;/code&gt; , donde &lt;code&gt;RIO&lt;/code&gt; es una m&amp;oacute;nada definida de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="70582809de8cd9e89c6a9bd154c02621c8e3fe1c" translate="yes" xml:space="preserve">
          <source>As an example, suppose we have following special printing module:</source>
          <target state="translated">Como ejemplo,supongamos que tenemos el siguiente módulo de impresión especial:</target>
        </trans-unit>
        <trans-unit id="6adf45b29a6631ff6d424f3a35e51b0c62f84184" translate="yes" xml:space="preserve">
          <source>As an example, suppose you read a large string, of which you need only a small portion. If you do not use &lt;code&gt;&lt;a href=&quot;data-text#v:copy&quot;&gt;copy&lt;/a&gt;&lt;/code&gt;, the entire original array will be kept alive in memory by the smaller string. Making a copy &quot;breaks the link&quot; to the original array, allowing it to be garbage collected if there are no other live references to it.</source>
          <target state="translated">Como ejemplo, suponga que lee una cadena grande, de la cual solo necesita una peque&amp;ntilde;a porci&amp;oacute;n. Si no usa la &lt;code&gt;&lt;a href=&quot;data-text#v:copy&quot;&gt;copy&lt;/a&gt;&lt;/code&gt; , toda la matriz original se mantendr&amp;aacute; viva en la memoria por la cadena m&amp;aacute;s peque&amp;ntilde;a. Hacer una copia &quot;rompe el enlace&quot; a la matriz original, lo que permite que sea recolectado como basura si no hay otras referencias en vivo a &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="d63ea3a1b75b9abed859b37118efd2bdfeda9979" translate="yes" xml:space="preserve">
          <source>As an example, this data declaration:</source>
          <target state="translated">Como ejemplo,esta declaración de datos:</target>
        </trans-unit>
        <trans-unit id="490082850527086dedfac3775659ee1738c0ae5d" translate="yes" xml:space="preserve">
          <source>As another example, this is the layout for the unboxed version of &lt;code&gt;Maybe a&lt;/code&gt; type, &lt;code&gt;(# (# #) | a #)&lt;/code&gt;:</source>
          <target state="translated">Como otro ejemplo, este es el dise&amp;ntilde;o de la versi&amp;oacute;n sin caja de &lt;code&gt;Maybe a&lt;/code&gt; type, &lt;code&gt;(# (# #) | a #)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="18151bc795d27e140f421a3a96b2c553b0826f0d" translate="yes" xml:space="preserve">
          <source>As another example, we can consider a type &lt;code&gt;Set a&lt;/code&gt; that represents a set of data, ordered according to &lt;code&gt;a&lt;/code&gt;&amp;lsquo;s &lt;code&gt;Ord&lt;/code&gt; instance. While it would generally be type-safe to consider &lt;code&gt;a&lt;/code&gt; to be at role representational, it is possible that a &lt;code&gt;newtype&lt;/code&gt; and its base type have &lt;em&gt;different&lt;/em&gt; orderings encoded in their respective &lt;code&gt;Ord&lt;/code&gt; instances. This would lead to misbehavior at runtime. So, the author of the &lt;code&gt;Set&lt;/code&gt; datatype would like its parameter to be at role nominal. This would be done with a declaration</source>
          <target state="translated">Como otro ejemplo, podemos considerar un tipo &lt;code&gt;Set a&lt;/code&gt; que representa un conjunto de datos, ordenada de acuerdo con &lt;code&gt;a&lt;/code&gt; 's &lt;code&gt;Ord&lt;/code&gt; ejemplo. Si bien ser&amp;iacute;a generalmente de tipo seguro para considerar &lt;code&gt;a&lt;/code&gt; ser en funci&amp;oacute;n de representaci&amp;oacute;n, es posible que un &lt;code&gt;newtype&lt;/code&gt; y su tipo base tienen &lt;em&gt;diferentes&lt;/em&gt; ordenamientos codificados en sus respectivos &lt;code&gt;Ord&lt;/code&gt; casos. Esto conducir&amp;iacute;a a un mal comportamiento en tiempo de ejecuci&amp;oacute;n. Por lo tanto, al autor del tipo de datos &lt;code&gt;Set&lt;/code&gt; le gustar&amp;iacute;a que su par&amp;aacute;metro estuviera en el rol nominal. Esto se har&amp;iacute;a con una declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9e081e131ffbc4e13afc7b95b1192b51f216cb4d" translate="yes" xml:space="preserve">
          <source>As another example, we can consider a type &lt;code&gt;Set a&lt;/code&gt; that represents a set of data, ordered according to &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s &lt;code&gt;Ord&lt;/code&gt; instance. While it would generally be type-safe to consider &lt;code&gt;a&lt;/code&gt; to be at role representational, it is possible that a &lt;code&gt;newtype&lt;/code&gt; and its base type have &lt;em&gt;different&lt;/em&gt; orderings encoded in their respective &lt;code&gt;Ord&lt;/code&gt; instances. This would lead to misbehavior at runtime. So, the author of the &lt;code&gt;Set&lt;/code&gt; datatype would like its parameter to be at role nominal. This would be done with a declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971f3c8e7fa04aa11b176990e12b0d8a905825b5" translate="yes" xml:space="preserve">
          <source>As before, only one selector function is generated here, that for &lt;code&gt;tag&lt;/code&gt;. Nevertheless, you can still use all the field names in pattern matching and record construction.</source>
          <target state="translated">Como antes, aqu&amp;iacute; solo se genera una funci&amp;oacute;n de selector, la de &lt;code&gt;tag&lt;/code&gt; . No obstante, a&amp;uacute;n puede utilizar todos los nombres de campo en la comparaci&amp;oacute;n de patrones y la construcci&amp;oacute;n de registros.</target>
        </trans-unit>
        <trans-unit id="1b294469f3600688f3c16a9375ab450bd92e329f" translate="yes" xml:space="preserve">
          <source>As before, the &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt; flag specifies that this library links against the shared library versions of the &lt;code&gt;rts&lt;/code&gt; and &lt;code&gt;base&lt;/code&gt; package. The &lt;a href=&quot;phases#ghc-flag--fPIC&quot;&gt;&lt;code&gt;-fPIC&lt;/code&gt;&lt;/a&gt; flag is required for all code that will end up in a shared library. The &lt;a href=&quot;phases#ghc-flag--shared&quot;&gt;&lt;code&gt;-shared&lt;/code&gt;&lt;/a&gt; flag specifies to make a shared library rather than a program. To make this clearer we can break this down into separate compilation and link steps:</source>
          <target state="translated">Como antes, el indicador &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt; especifica que esta biblioteca se vincula con las versiones de biblioteca compartida del paquete &lt;code&gt;rts&lt;/code&gt; y &lt;code&gt;base&lt;/code&gt; . El indicador &lt;a href=&quot;phases#ghc-flag--fPIC&quot;&gt; &lt;code&gt;-fPIC&lt;/code&gt; &lt;/a&gt; es necesario para todo el c&amp;oacute;digo que terminar&amp;aacute; en una biblioteca compartida. La &lt;a href=&quot;phases#ghc-flag--shared&quot;&gt; &lt;code&gt;-shared&lt;/code&gt; &lt;/a&gt; especifica crear una biblioteca compartida en lugar de un programa. Para aclarar esto, podemos dividirlo en pasos separados de compilaci&amp;oacute;n y enlace:</target>
        </trans-unit>
        <trans-unit id="7075fa9b7f0c6ece6ef586ef8232718a3c4e1adf" translate="yes" xml:space="preserve">
          <source>As channels, with &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; as receive and send, and</source>
          <target state="translated">Como canales, con &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; como recibir y enviar, y</target>
        </trans-unit>
        <trans-unit id="5f8a308216057de51dc8e2d87492c599832235ef" translate="yes" xml:space="preserve">
          <source>As described above, the way in which a file is processed by GHC depends on its suffix. This behaviour can be overridden using the &lt;a href=&quot;#ghc-flag--x%20%E2%9F%A8suffix%E2%9F%A9&quot;&gt;&lt;code&gt;-x ⟨suffix⟩&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">Como se describi&amp;oacute; anteriormente, la forma en que GHC procesa un archivo depende de su sufijo. Este comportamiento se puede anular usando la opci&amp;oacute;n &lt;a href=&quot;#ghc-flag--x%20%E2%9F%A8suffix%E2%9F%A9&quot;&gt; &lt;code&gt;-x ⟨suffix⟩&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ac41a6f7a2ba794206a1881f72e83bfc76ecc4c5" translate="yes" xml:space="preserve">
          <source>As discussed earlier, use &lt;code&gt;--&lt;/code&gt; or &lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; to disambiguate GHC flags when needed. For example, &lt;code&gt;-f&lt;/code&gt; is recognized by runghc, therefore to pass &lt;code&gt;-fliberate-case&lt;/code&gt; to GHC use any of the following:</source>
          <target state="translated">Como se discuti&amp;oacute; anteriormente, use &lt;code&gt;--&lt;/code&gt; o &lt;code&gt;--ghc-arg=&amp;lt;arg&amp;gt;&lt;/code&gt; para eliminar la ambig&amp;uuml;edad de los indicadores GHC cuando sea necesario. Por ejemplo, &lt;code&gt;-f&lt;/code&gt; es reconocido por runghc, por lo tanto, para pasar &lt;code&gt;-fliberate-case&lt;/code&gt; a GHC utilizar cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="fe90224af19846dad1a17ef9f898f327403d732c" translate="yes" xml:space="preserve">
          <source>As for all splitting functions in this library, this function does not copy the substrings, it just constructs new &lt;code&gt;ByteStrings&lt;/code&gt; that are slices of the original.</source>
          <target state="translated">En cuanto a todas las funciones de divisi&amp;oacute;n en esta biblioteca, esta funci&amp;oacute;n no copia las subcadenas, solo construye nuevas &lt;code&gt;ByteStrings&lt;/code&gt; que son partes del original.</target>
        </trans-unit>
        <trans-unit id="66418d326af7c7178dbcf345c383fa758cb34200" translate="yes" xml:space="preserve">
          <source>As for type signatures, implicit quantification happens for non-overloaded types too. So if you write this:</source>
          <target state="translated">En cuanto a las firmas de tipos,la cuantificación implícita también ocurre para los tipos no sobrecargados.Así que si escribes esto:</target>
        </trans-unit>
        <trans-unit id="131c4ed80f84ad7adaad005b0b251d5561f2e9bd" translate="yes" xml:space="preserve">
          <source>As iconv is missing in some minimal environments (e.g. #10298), this checks to ensure that iconv is working properly before returning the encoding, returning &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if not.</source>
          <target state="translated">Como iconv falta en algunos entornos m&amp;iacute;nimos (por ejemplo, # 10298), esto comprueba que iconv funciona correctamente antes de devolver la codificaci&amp;oacute;n, devolviendo &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; si no.</target>
        </trans-unit>
        <trans-unit id="9a094fb6c3fac4ea42a5b01e068a43a07a1612b8" translate="yes" xml:space="preserve">
          <source>As if the appropriate &lt;code&gt;#define&lt;/code&gt; directive was placed in the source.</source>
          <target state="translated">Como si la directiva &lt;code&gt;#define&lt;/code&gt; apropiada estuviera colocada en la fuente.</target>
        </trans-unit>
        <trans-unit id="0b3a2a9b0861349d1000eb5c63f5fe83939ea7af" translate="yes" xml:space="preserve">
          <source>As if the appropriate &lt;code&gt;#include&lt;/code&gt; directive was placed in the source.</source>
          <target state="translated">Como si la directiva &lt;code&gt;#include&lt;/code&gt; apropiada estuviera colocada en la fuente.</target>
        </trans-unit>
        <trans-unit id="beaf430a25d7c8a7463fc714eeb5bef652c1ca18" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;#id6&quot; id=&quot;id8&quot;&gt;2&lt;/a&gt;, the FFI is not actually needed for this. &lt;code&gt;GHC.Exts&lt;/code&gt; includes primitives for reading from on &lt;code&gt;ArrayArray#&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3704be0b1f85ea495e4739ed1a37ef32e604634f" translate="yes" xml:space="preserve">
          <source>As in Haskell 98, the class hierarchy must be acyclic. However, the definition of &amp;ldquo;acyclic&amp;rdquo; involves only the superclass relationships. For example, this is okay:</source>
          <target state="translated">Como en Haskell 98, la jerarqu&amp;iacute;a de clases debe ser ac&amp;iacute;clica. Sin embargo, la definici&amp;oacute;n de &quot;ac&amp;iacute;clico&quot; involucra solo las relaciones de superclase. Por ejemplo, esto est&amp;aacute; bien:</target>
        </trans-unit>
        <trans-unit id="a18ecf9c948be4e27d139d19b812430b86052cfe" translate="yes" xml:space="preserve">
          <source>As in the case of existentials declared using the Haskell-98-like record syntax (&lt;a href=&quot;#existential-records&quot;&gt;Record Constructors&lt;/a&gt;), record-selector functions are generated only for those fields that have well-typed selectors. Here is the example of that section, in GADT-style syntax:</source>
          <target state="translated">Como en el caso de existenciales declarados usando la sintaxis de registros similar a Haskell-98 ( &lt;a href=&quot;#existential-records&quot;&gt;Constructores de registros&lt;/a&gt; ), las funciones de selector de registros se generan solo para aquellos campos que tienen selectores bien escritos. Aqu&amp;iacute; est&amp;aacute; el ejemplo de esa secci&amp;oacute;n, en sintaxis estilo GADT:</target>
        </trans-unit>
        <trans-unit id="e3cd19795acf719bdbdadfeb240558bb97933bfa" translate="yes" xml:space="preserve">
          <source>As kinds and types are the same, kinds can (with &lt;a href=&quot;#extension-TypeInType&quot;&gt;&lt;code&gt;TypeInType&lt;/code&gt;&lt;/a&gt;) contain type constraints. However, only equality constraints are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b688c040bfb0b19971fb0ce773edf49cba5c5c6c" translate="yes" xml:space="preserve">
          <source>As long as a type variable is constrained by one of these classes, defaulting will occur, as outlined above.</source>
          <target state="translated">Mientras una variable de tipo esté restringida por una de estas clases,se producirá un incumplimiento,como se ha señalado anteriormente.</target>
        </trans-unit>
        <trans-unit id="44161a74606a6af43d39c349f3c26f8c14875c50" translate="yes" xml:space="preserve">
          <source>As long as you are happy to only be able to link to the DLL using &lt;code&gt;GetProcAddress&lt;/code&gt; and friends, you can supply the &lt;a href=&quot;#ghc-flag--fno-shared-implib&quot;&gt;&lt;code&gt;-fno-shared-implib&lt;/code&gt;&lt;/a&gt; flag to disable the creation of the import library entirely.</source>
          <target state="translated">Siempre que est&amp;eacute; contento de poder vincular solo a la DLL utilizando &lt;code&gt;GetProcAddress&lt;/code&gt; y amigos, puede proporcionar la &lt;a href=&quot;#ghc-flag--fno-shared-implib&quot;&gt; &lt;code&gt;-fno-shared-implib&lt;/code&gt; &lt;/a&gt; para deshabilitar la creaci&amp;oacute;n de la biblioteca de importaci&amp;oacute;n por completo.</target>
        </trans-unit>
        <trans-unit id="2e315249f68fda8aaff176e296d66a05a6132ca0" translate="yes" xml:space="preserve">
          <source>As mapFile, but returns ByteString</source>
          <target state="translated">Como mapFile,pero devuelve ByteString</target>
        </trans-unit>
        <trans-unit id="a545221512e878619258ca5f17df48cfac240523" translate="yes" xml:space="preserve">
          <source>As mentioned above, derived &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances in GHC will implement &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;. The default implementations of &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; (and its cousin, &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;) will simply use &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; under the hood. If you are writing a &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance by hand, it is recommended to write it like so:</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, las instancias de &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; derivadas en GHC implementar&amp;aacute;n &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; . Las implementaciones predeterminadas de &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; (y su primo, &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; ) simplemente usar&amp;aacute;n &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; bajo el cap&amp;oacute;. Si est&amp;aacute; escribiendo una instancia de &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; mano, se recomienda escribirla as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="6e1afd64bce824d5669c2abf1ae7f5ca39a54331" translate="yes" xml:space="preserve">
          <source>As mentioned above, derived &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances in GHC will implement &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;. The default implementations of &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; (and its cousin, &lt;code&gt;&lt;a href=&quot;prelude#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;) will simply use &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; under the hood. If you are writing a &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance by hand, it is recommended to write it like so:</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, las instancias de &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; derivadas en GHC implementar&amp;aacute;n &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; . Las implementaciones predeterminadas de &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; (y su primo, &lt;code&gt;&lt;a href=&quot;prelude#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; ) simplemente usar&amp;aacute;n &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; bajo el cap&amp;oacute;. Si est&amp;aacute; escribiendo una instancia de &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; mano, se recomienda escribirla as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="6a668f275f9aa656c990c93f68c69e117d56a6a9" translate="yes" xml:space="preserve">
          <source>As mentioned above, derived &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances in GHC will implement &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;. The default implementations of &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; (and its cousin, &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;) will simply use &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; under the hood. If you are writing a &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance by hand, it is recommended to write it like so:</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, las instancias de &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; derivadas en GHC implementar&amp;aacute;n &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; en lugar de &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; . Las implementaciones predeterminadas de &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; (y su primo, &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; ) simplemente usar&amp;aacute;n &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; bajo el cap&amp;oacute;. Si est&amp;aacute; escribiendo una instancia de &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; mano, se recomienda escribirla as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f65b46df8fe6c264c596a4ee57c977d2fcd44935" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;#gadt-style&quot;&gt;Declaring data types with explicit constructor signatures&lt;/a&gt;, record syntax is supported. For example:</source>
          <target state="translated">Como se menciona en &lt;a href=&quot;#gadt-style&quot;&gt;Declaraci&amp;oacute;n de tipos de datos con firmas de constructor expl&amp;iacute;citas&lt;/a&gt; , se admite la sintaxis de registros. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2b20aa3bf540201cc843068062611e2c68e78f44" translate="yes" xml:space="preserve">
          <source>As of 1.3.5.0, the environment variable is ignored if set to a relative path, per revised XDG Base Directory Specification. See &lt;a href=&quot;https://github.com/haskell/directory/issues/100&quot;&gt;#100&lt;/a&gt;.</source>
          <target state="translated">A partir de 1.3.5.0, la variable de entorno se ignora si se establece en una ruta relativa, seg&amp;uacute;n la Especificaci&amp;oacute;n de directorio base XDG revisada. Ver &lt;a href=&quot;https://github.com/haskell/directory/issues/100&quot;&gt;# 100&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66155d480946b24160dbc04cb1009ec185e9eb15" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Strict&quot;&gt;Strict&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Bang&quot;&gt;Bang&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Strict&quot;&gt;Strict&lt;/a&gt;&lt;/code&gt; ha sido reemplazado por &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Bang&quot;&gt;Bang&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d54fac1ed5477bc40ff0f48a11003303f605712" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Strict&quot;&gt;Strict&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Bang&quot;&gt;Bang&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Strict&quot;&gt;Strict&lt;/a&gt;&lt;/code&gt; ha sido reemplazado por &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Bang&quot;&gt;Bang&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68bb1e4d347f7e14f0730566cfe86c41cf0cf621" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:StrictType&quot;&gt;StrictType&lt;/a&gt;&lt;/code&gt; ha sido reemplazado por &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:BangType&quot;&gt;BangType&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="431c3d0f7612a40f6ff5eb1278e282741242a19d" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; has been replaced by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de &lt;code&gt;template-haskell-2.11.0.0&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarStrictType&quot;&gt;VarStrictType&lt;/a&gt;&lt;/code&gt; ha sido reemplazado por &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:VarBangType&quot;&gt;VarBangType&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff725c4e2000e4c32e7a70322b85a55a85f4f248" translate="yes" xml:space="preserve">
          <source>As of GHC version 6.8, we have adopted the following policy for numbering GHC versions:</source>
          <target state="translated">A partir de la versión 6.8 del GHC,hemos adoptado la siguiente política para la numeración de las versiones del GHC:</target>
        </trans-unit>
        <trans-unit id="6667e67a30d7295682c9410cb1e7f0f855d9f77a" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;control-monad#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; es solo &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="189b02d51b70039f2bb98397c33331f99f38f72e" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;control-monad#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; es simplemente &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ffe502c088313295fc8544881ef2e7de642be25" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;control-monad#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;control-monad#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; es solo &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4755017eb545075e257326e642258214d89957c4" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;data-foldable#v:forM_&quot;&gt;forM_&lt;/a&gt;&lt;/code&gt; es solo &lt;code&gt;&lt;a href=&quot;data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0be1d09e17e8e02c7031393483495ad5d61f69b4" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;data-foldable#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; es simplemente &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f37649ade650085aa0f65cecdda074623b0b69e" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; es solo &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="995d3e4e58500aa9b1bd3701177a6dbe6d9b1cb8" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;prelude#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;prelude#v:mapM_&quot;&gt;mapM_&lt;/a&gt;&lt;/code&gt; es simplemente &lt;code&gt;&lt;a href=&quot;data-foldable#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0137e920b69fe62239fad821757f41940234bff2" translate="yes" xml:space="preserve">
          <source>As of base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;prelude#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; is just &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt;, specialized to &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">A partir de la base 4.8.0.0, &lt;code&gt;&lt;a href=&quot;prelude#v:sequence_&quot;&gt;sequence_&lt;/a&gt;&lt;/code&gt; es solo &lt;code&gt;&lt;a href=&quot;data-foldable#v:sequenceA_&quot;&gt;sequenceA_&lt;/a&gt;&lt;/code&gt; , especializado en &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63452b7c7f465acb4dded12e10643c0a80c59e1c" translate="yes" xml:space="preserve">
          <source>As of bytestring 0.9.0.3, this function is stricter than its list cousin.</source>
          <target state="translated">A partir de la cadena de bytes 0.9.0.3,esta función es más estricta que su prima de lista.</target>
        </trans-unit>
        <trans-unit id="039bbe9675865514fb60ebed364f1df32b98df77" translate="yes" xml:space="preserve">
          <source>As opposed to &lt;code&gt;&lt;a href=&quot;data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; data structures, which have one variety of element on which an action can be performed, &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; data structures have two such varieties of elements.</source>
          <target state="translated">A diferencia de las estructuras de datos &lt;code&gt;&lt;a href=&quot;data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; , que tienen una variedad de elementos en los que se puede realizar una acci&amp;oacute;n, las estructuras de datos de &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; tienen dos variedades de elementos.</target>
        </trans-unit>
        <trans-unit id="1ae607bddf78967e412e95f44ed5f98b62257887" translate="yes" xml:space="preserve">
          <source>As part of the same extension, you can put kind annotations in types as well. Thus:</source>
          <target state="translated">Como parte de la misma extensión,también puedes poner anotaciones amables en los tipos.Así:</target>
        </trans-unit>
        <trans-unit id="7699c90ab29019673b3fd8db1b1767ae9771115b" translate="yes" xml:space="preserve">
          <source>As soon as GHC plus its &amp;ldquo;fellow citizens&amp;rdquo; (other processes on your machine) start using more than the &lt;em&gt;real memory&lt;/em&gt; on your machine, and the machine starts &amp;ldquo;thrashing,&amp;rdquo; &lt;em&gt;the party is over&lt;/em&gt;. Compile times will be worse than terrible! Use something like the csh builtin &lt;strong&gt;time&lt;/strong&gt; command to get a report on how many page faults you&amp;rsquo;re getting.</source>
          <target state="translated">Tan pronto como GHC y sus &quot;conciudadanos&quot; (otros procesos en su m&amp;aacute;quina) comiencen a usar m&amp;aacute;s que la &lt;em&gt;memoria real&lt;/em&gt; en su m&amp;aacute;quina, y la m&amp;aacute;quina comience a &quot;batirse&quot;, &lt;em&gt;la fiesta habr&amp;aacute; terminado&lt;/em&gt; . &amp;iexcl;Los tiempos de compilaci&amp;oacute;n ser&amp;aacute;n peores que terribles! Use algo como el comando de &lt;strong&gt;tiempo&lt;/strong&gt; incorporado csh para obtener un informe sobre cu&amp;aacute;ntas fallas de p&amp;aacute;gina est&amp;aacute; obteniendo.</target>
        </trans-unit>
        <trans-unit id="5c65dae701ef99ffffbad1ccc118a5d026621cac" translate="yes" xml:space="preserve">
          <source>As such, &lt;code&gt;purePlugin&lt;/code&gt; is defined as a function which always returns &lt;code&gt;NoForceRecompile&lt;/code&gt;.</source>
          <target state="translated">Como tal, &lt;code&gt;purePlugin&lt;/code&gt; se define como una funci&amp;oacute;n que siempre devuelve &lt;code&gt;NoForceRecompile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83c27882ec4f84c2b1c7547fee6d29bef6299680" translate="yes" xml:space="preserve">
          <source>As synchronized mutable variables,</source>
          <target state="translated">Como variables mutables sincronizadas,</target>
        </trans-unit>
        <trans-unit id="8c68344402c4c848cd9948b1b997a6cdee8b6472" translate="yes" xml:space="preserve">
          <source>As text to standard output, for debugging purposes.</source>
          <target state="translated">Como texto a la salida estándar,para propósitos de depuración.</target>
        </trans-unit>
        <trans-unit id="181b02f4903ccd97fffcaf58addb10482aefc450" translate="yes" xml:space="preserve">
          <source>As the argument of a constructor, or type of a field, in a data type declaration. For example, any of the &lt;code&gt;f1, f2, f3, g1, g2&lt;/code&gt; above would be valid field type signatures.</source>
          <target state="translated">Como argumento de un constructor, o tipo de campo, en una declaraci&amp;oacute;n de tipo de datos. Por ejemplo, cualquiera de las &lt;code&gt;f1, f2, f3, g1, g2&lt;/code&gt; anteriores ser&amp;iacute;an firmas de tipo de campo v&amp;aacute;lidas.</target>
        </trans-unit>
        <trans-unit id="2c75efee694fce1348012a0f71a5ff8152fe1dea" translate="yes" xml:space="preserve">
          <source>As the dual of &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:oneOf&quot;&gt;oneOf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;noneOf cs&lt;/code&gt; succeeds if the current character &lt;em&gt;not&lt;/em&gt; in the supplied list of characters &lt;code&gt;cs&lt;/code&gt;. Returns the parsed character.</source>
          <target state="translated">Como dual de &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:oneOf&quot;&gt;oneOf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;noneOf cs&lt;/code&gt; tiene &amp;eacute;xito si el car&amp;aacute;cter actual &lt;em&gt;no est&amp;aacute;&lt;/em&gt; en la lista de caracteres &lt;code&gt;cs&lt;/code&gt; . Devuelve el car&amp;aacute;cter analizado.</target>
        </trans-unit>
        <trans-unit id="ccb0b2bddb73f4bc8b6273e372d5253cba90fe8b" translate="yes" xml:space="preserve">
          <source>As the dual of &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-char#v:oneOf&quot;&gt;oneOf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;noneOf cs&lt;/code&gt; succeeds if the current character &lt;em&gt;not&lt;/em&gt; in the supplied list of characters &lt;code&gt;cs&lt;/code&gt;. Returns the parsed character.</source>
          <target state="translated">Como dual de &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-char#v:oneOf&quot;&gt;oneOf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;noneOf cs&lt;/code&gt; tiene &amp;eacute;xito si el car&amp;aacute;cter actual &lt;em&gt;no est&amp;aacute;&lt;/em&gt; en la lista de caracteres &lt;code&gt;cs&lt;/code&gt; . Devuelve el car&amp;aacute;cter analizado.</target>
        </trans-unit>
        <trans-unit id="595d79d9d63a7ad5c2be3b061e3dc58b00a5d260" translate="yes" xml:space="preserve">
          <source>As the type of an implicit parameter</source>
          <target state="translated">Como el tipo de parámetro implícito</target>
        </trans-unit>
        <trans-unit id="d153cbf6806b7b35bd0413a66f8a99b8d11cec38" translate="yes" xml:space="preserve">
          <source>As this suggests, each occurrence is replaced exactly once. So if &lt;code&gt;needle&lt;/code&gt; occurs in &lt;code&gt;replacement&lt;/code&gt;, that occurrence will &lt;em&gt;not&lt;/em&gt; itself be replaced recursively:</source>
          <target state="translated">Como sugiere esto, cada aparici&amp;oacute;n se reemplaza exactamente una vez. Entonces, si la &lt;code&gt;needle&lt;/code&gt; se &lt;code&gt;replacement&lt;/code&gt; , esa ocurrencia &lt;em&gt;no&lt;/em&gt; se reemplazar&amp;aacute; recursivamente:</target>
        </trans-unit>
        <trans-unit id="e53867775e4428028623be9fceee714ed0171be0" translate="yes" xml:space="preserve">
          <source>As usual, for every constructor that has a field &lt;code&gt;f&lt;/code&gt;, the type of field &lt;code&gt;f&lt;/code&gt; must be the same (modulo alpha conversion). The &lt;code&gt;Child&lt;/code&gt; constructor above shows that the signature may have a context, existentially-quantified variables, and strictness annotations, just as in the non-record case. (NB: the &amp;ldquo;type&amp;rdquo; that follows the double-colon is not really a type, because of the record syntax and strictness annotations. A &amp;ldquo;type&amp;rdquo; of this form can appear only in a constructor signature.)</source>
          <target state="translated">Como es habitual, para cada constructor que tiene un campo &lt;code&gt;f&lt;/code&gt; , el tipo de campo &lt;code&gt;f&lt;/code&gt; debe ser el mismo (conversi&amp;oacute;n m&amp;oacute;dulo alfa). El constructor &lt;code&gt;Child&lt;/code&gt; anterior muestra que la firma puede tener un contexto, variables cuantificadas existencialmente y anotaciones de rigor, al igual que en el caso sin registro. (Nota: el &quot;tipo&quot; que sigue a los dos puntos dobles no es realmente un tipo, debido a la sintaxis del registro y las anotaciones de rigor. Un &quot;tipo&quot; de este formulario solo puede aparecer en una firma de constructor).</target>
        </trans-unit>
        <trans-unit id="424c7f952d5ac1aa74645c5f27a67eda13f56e6f" translate="yes" xml:space="preserve">
          <source>As usual, the meta-variables &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; etc., can be arbitrary patterns. In general, the statement &lt;code&gt;rec ss&lt;/code&gt; is desugared to the statement</source>
          <target state="translated">Como es habitual, las metavariables &lt;code&gt;b&lt;/code&gt; , &lt;code&gt;c&lt;/code&gt; , etc., pueden ser patrones arbitrarios. En general, el enunciado &lt;code&gt;rec ss&lt;/code&gt; se desaconseja con el enunciado</target>
        </trans-unit>
        <trans-unit id="3cf1bb90d2a6c5267034d92cb3db4ce82d1bfdff" translate="yes" xml:space="preserve">
          <source>As we demonstrated earlier (&lt;a href=&quot;#breakpoints&quot;&gt;Breakpoints and inspecting variables&lt;/a&gt;), the debugger has some intelligence built-in to update the type of &lt;code&gt;f&lt;/code&gt; whenever the types of &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;_result&lt;/code&gt; are discovered. So what we do in this scenario is force &lt;code&gt;x&lt;/code&gt; a bit, in order to recover both its type and the argument part of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">Como demostramos anteriormente ( &lt;a href=&quot;#breakpoints&quot;&gt;Puntos de interrupci&amp;oacute;n e inspecci&amp;oacute;n de variables&lt;/a&gt; ), el depurador tiene algo de inteligencia incorporada para actualizar el tipo de &lt;code&gt;f&lt;/code&gt; siempre que se descubren los tipos de &lt;code&gt;x&lt;/code&gt; o &lt;code&gt;_result&lt;/code&gt; . Entonces, lo que hacemos en este escenario es forzar un poco &lt;code&gt;x&lt;/code&gt; , para recuperar tanto su tipo como la parte de argumento de &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="480449ae21e88b5153c176f83519328d5843ab58" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;re seen, arrow notation provides constructs, modelled on those for expressions, for sequencing, value recursion and conditionals. But suitable combinators, which you can define in ordinary Haskell, may also be used to build new commands out of existing ones. The basic idea is that a command defines an arrow from environments to values. These environments assign values to the free local variables of the command. Thus combinators that produce arrows from arrows may also be used to build commands from commands. For example, the &lt;code&gt;ArrowPlus&lt;/code&gt; class includes a combinator</source>
          <target state="translated">Como hemos visto, la notaci&amp;oacute;n de flechas proporciona constructos, modelados en los de expresiones, para secuenciaci&amp;oacute;n, recursividad de valores y condicionales. Pero los combinadores adecuados, que puede definir en Haskell ordinario, tambi&amp;eacute;n se pueden usar para construir nuevos comandos a partir de los existentes. La idea b&amp;aacute;sica es que un comando define una flecha de entornos a valores. Estos entornos asignan valores a las variables locales libres del comando. Por lo tanto, los combinadores que producen flechas a partir de flechas tambi&amp;eacute;n pueden usarse para construir comandos a partir de comandos. Por ejemplo, la clase &lt;code&gt;ArrowPlus&lt;/code&gt; incluye un combinador</target>
        </trans-unit>
        <trans-unit id="196191205f2b62c541cf8a5ff3836b4bc01787da" translate="yes" xml:space="preserve">
          <source>As well avoid unnecessary pattern matching it also helps avoid unnecessary allocation. This applies when a argument is strict in the recursive call to itself but not on the initial entry. As strict recursive branch of the function is created similar to the above example.</source>
          <target state="translated">Además de evitar la coincidencia de patrones innecesarios,también ayuda a evitar la asignación innecesaria.Esto se aplica cuando un argumento es estricto en la llamada recursiva a sí mismo pero no en la entrada inicial.Como la rama recursiva estricta de la función se crea de forma similar al ejemplo anterior.</target>
        </trans-unit>
        <trans-unit id="8c16e4471532afea529c20b4ff2e8a8a16601be0" translate="yes" xml:space="preserve">
          <source>As well in type signatures, you can also use an explicit &lt;code&gt;forall&lt;/code&gt; in an instance declaration:</source>
          <target state="translated">Adem&amp;aacute;s de las firmas de tipo, tambi&amp;eacute;n puede utilizar un &lt;code&gt;forall&lt;/code&gt; expl&amp;iacute;cito en una declaraci&amp;oacute;n de instancia:</target>
        </trans-unit>
        <trans-unit id="ead26c4f8d8b65c7691881f1d8045e494c57debb" translate="yes" xml:space="preserve">
          <source>As with all known Haskell systems, GHC implements some extensions to the standard Haskell language. They can all be enabled or disabled by command line flags or language pragmas. By default GHC understands the most recent Haskell version it supports, plus a handful of extensions.</source>
          <target state="translated">Como todos los sistemas conocidos de Haskell,el GHC implementa algunas extensiones del lenguaje estándar de Haskell.Todas ellas pueden ser activadas o desactivadas mediante banderas de línea de comandos o pragmas de lenguaje.Por defecto,GHC entiende la versión más reciente de Haskell que soporta,además de un puñado de extensiones.</target>
        </trans-unit>
        <trans-unit id="fcd43e9a7f0adbd4e1cdcb63a469dbf86f84b840" translate="yes" xml:space="preserve">
          <source>As with ordinary variable bindings, later definitions shadow earlier ones, so you can re-enter a declaration to fix a problem with it or extend it. But there&amp;rsquo;s a gotcha: when a new type declaration shadows an older one, there might be other declarations that refer to the old type. The thing to remember is that the old type still exists, and these other declarations still refer to the old type. However, while the old and the new type have the same name, GHCi will treat them as distinct. For example:</source>
          <target state="translated">Al igual que con los enlaces de variables ordinarios, las definiciones posteriores ocultan las anteriores, por lo que puede volver a ingresar una declaraci&amp;oacute;n para solucionar un problema con ella o extenderla. Pero hay un problema: cuando una declaraci&amp;oacute;n de tipo nuevo oculta a una anterior, puede haber otras declaraciones que se refieran al tipo anterior. Lo que hay que recordar es que el tipo antiguo todav&amp;iacute;a existe, y estas otras declaraciones todav&amp;iacute;a se refieren al tipo antiguo. Sin embargo, mientras que el tipo antiguo y el nuevo tienen el mismo nombre, GHCi los tratar&amp;aacute; como distintos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="637fa52fc6437e00230d9db2fe6b3adca8d89276" translate="yes" xml:space="preserve">
          <source>As with other type signatures, you can give a single signature for several data constructors. In this example we give a single signature for &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt;:</source>
          <target state="translated">Al igual que con otras firmas de tipo, puede dar una sola firma para varios constructores de datos. En este ejemplo, damos una &amp;uacute;nica firma para &lt;code&gt;T1&lt;/code&gt; y &lt;code&gt;T2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a5d0276624512bf5b98fc03c361aa6bea31b80c" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; function, if any two associations in the list have the same index, the value at that index is implementation-dependent. (In GHC, the last value specified for that index is used. Other implementations will also do this for unboxed arrays, but Haskell 98 requires that for &lt;code&gt;Array&lt;/code&gt; the value at such indices is bottom.)</source>
          <target state="translated">Al igual que con la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; , si dos asociaciones de la lista tienen el mismo &amp;iacute;ndice, el valor de ese &amp;iacute;ndice depende de la implementaci&amp;oacute;n. (En GHC, se usa el &amp;uacute;ltimo valor especificado para ese &amp;iacute;ndice. Otras implementaciones tambi&amp;eacute;n har&amp;aacute;n esto para arreglos sin caja, pero Haskell 98 requiere que para &lt;code&gt;Array&lt;/code&gt; el valor en dichos &amp;iacute;ndices sea inferior).</target>
        </trans-unit>
        <trans-unit id="290e57760e517898d7b9efcc098bc5d22f645f5f" translate="yes" xml:space="preserve">
          <source>As you can guess &lt;code&gt;justOnes&lt;/code&gt; will evaluate to &lt;code&gt;Just [-1,-1,-1,...&lt;/code&gt;.</source>
          <target state="translated">Como se puede adivinar &lt;code&gt;justOnes&lt;/code&gt; evaluar&amp;aacute;n a &lt;code&gt;Just [-1,-1,-1,...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44e503436bbd1b51c2f4671a6a4bc6e7cfdbb40d" translate="yes" xml:space="preserve">
          <source>As you can see, using operators in this way is not very useful, and Haskell 98 does not even allow you to write them infix.</source>
          <target state="translated">Como puede ver,usar operadores de esta manera no es muy útil,y Haskell 98 ni siquiera le permite escribirles infijos.</target>
        </trans-unit>
        <trans-unit id="67dc44d97f00c988807bcf67aa9d1c8f84fff7c6" translate="yes" xml:space="preserve">
          <source>Ascii Drawings</source>
          <target state="translated">Dibujos de Ascii</target>
        </trans-unit>
        <trans-unit id="cca21e0df87aca3b913734b67e2e333b718bae99" translate="yes" xml:space="preserve">
          <source>Ashley Yakeley &amp;lt;ashley@semantic.org&amp;gt;</source>
          <target state="translated">Ashley Yakeley &amp;lt;ashley@semantic.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7f327535400c99b415e9d1ddaa6d9904d1bfafa2" translate="yes" xml:space="preserve">
          <source>Ask that GHC specialize a polymorphic value to a particular type.</source>
          <target state="translated">Pide que el GHC especialice un valor polimórfico a un tipo particular.</target>
        </trans-unit>
        <trans-unit id="bc24cd3c8b6ddb112a336c5966d0506d3b2fd9ca" translate="yes" xml:space="preserve">
          <source>Assembly language (.s)</source>
          <target state="translated">Lenguaje de ensamblaje (.s)</target>
        </trans-unit>
        <trans-unit id="d8e00d7a54a273c595978f5b3e92d75c8e0981a9" translate="yes" xml:space="preserve">
          <source>Assertion failures can be caught, see the documentation for the &lt;a href=&quot;../libraries/base-4.13.0.0/control#t:Exception&quot;&gt;Control.Exception&lt;/a&gt; library for the details.</source>
          <target state="translated">Los fallos de afirmaci&amp;oacute;n se pueden detectar, consulte la documentaci&amp;oacute;n de la biblioteca &lt;a href=&quot;../libraries/base-4.13.0.0/control#t:Exception&quot;&gt;Control.Exception&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="cde31a8393d46785fc228979a73996dac43391ba" translate="yes" xml:space="preserve">
          <source>Assertion failures can be caught, see the documentation for the &lt;a href=&quot;../libraries/base-4.14.1.0/control#t:Exception&quot;&gt;Control.Exception&lt;/a&gt; library for the details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74319d6a5a4eb02ecd1401e7a9faed7d9660ea69" translate="yes" xml:space="preserve">
          <source>AssertionFailed</source>
          <target state="translated">AssertionFailed</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="e8ddc914ca09e8e31648b53bc077284126a4cbdc" translate="yes" xml:space="preserve">
          <source>Assertions can normally be turned on or off with a compiler flag (for GHC, assertions are normally on unless optimisation is turned on with &lt;code&gt;-O&lt;/code&gt; or the &lt;code&gt;-fignore-asserts&lt;/code&gt; option is given). When assertions are turned off, the first argument to &lt;code&gt;&lt;a href=&quot;control-exception#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; is ignored, and the second argument is returned as the result.</source>
          <target state="translated">Las afirmaciones normalmente se pueden activar o desactivar con un indicador de compilador (para GHC, las afirmaciones normalmente est&amp;aacute;n activadas a menos que la optimizaci&amp;oacute;n est&amp;eacute; activada con &lt;code&gt;-O&lt;/code&gt; o se &lt;code&gt;-fignore-asserts&lt;/code&gt; opci&amp;oacute;n -fignore-asserts ). Cuando se desactivan las &lt;code&gt;&lt;a href=&quot;control-exception#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; se ignora el primer argumento para afirmar y se devuelve el segundo argumento como resultado.</target>
        </trans-unit>
        <trans-unit id="492da7da6121915584e059d74109845fdbc2bb99" translate="yes" xml:space="preserve">
          <source>Assertions can normally be turned on or off with a compiler flag (for GHC, assertions are normally on unless optimisation is turned on with &lt;code&gt;-O&lt;/code&gt; or the &lt;code&gt;-fignore-asserts&lt;/code&gt; option is given). When assertions are turned off, the first argument to &lt;code&gt;&lt;a href=&quot;ghc-base#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; is ignored, and the second argument is returned as the result.</source>
          <target state="translated">Las afirmaciones normalmente se pueden activar o desactivar con un indicador de compilador (para GHC, las afirmaciones normalmente est&amp;aacute;n activadas a menos que la optimizaci&amp;oacute;n est&amp;eacute; activada con &lt;code&gt;-O&lt;/code&gt; o se &lt;code&gt;-fignore-asserts&lt;/code&gt; opci&amp;oacute;n -fignore-asserts ). Cuando se desactivan las &lt;code&gt;&lt;a href=&quot;ghc-base#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; se ignora el primer argumento para afirmar y se devuelve el segundo argumento como resultado.</target>
        </trans-unit>
        <trans-unit id="2a67c621ce56962ea20451247e4968660972fdfe" translate="yes" xml:space="preserve">
          <source>Assoc</source>
          <target state="translated">Assoc</target>
        </trans-unit>
        <trans-unit id="68b22545bb595a6b43f06bac583241d8e11a31a0" translate="yes" xml:space="preserve">
          <source>AssocLeft</source>
          <target state="translated">AssocLeft</target>
        </trans-unit>
        <trans-unit id="aa2f28d5f211bc5ecef78542598f880f8e318baa" translate="yes" xml:space="preserve">
          <source>AssocNone</source>
          <target state="translated">AssocNone</target>
        </trans-unit>
        <trans-unit id="56894dfcf0b1ff176191c0989a9045db04e81fe2" translate="yes" xml:space="preserve">
          <source>AssocRight</source>
          <target state="translated">AssocRight</target>
        </trans-unit>
        <trans-unit id="26904b659cb34afa59632d8007e5d7c3c1f7672c" translate="yes" xml:space="preserve">
          <source>Associated Types</source>
          <target state="translated">Tipos asociados</target>
        </trans-unit>
        <trans-unit id="28d556f025319f64419ff88734b119ab1b87004b" translate="yes" xml:space="preserve">
          <source>Associated type and data instance declarations do not inherit any context specified on the enclosing instance. For type instance declarations, it is unclear what the context would mean. For data instance declarations, it is unlikely a user would want the context repeated for every data constructor. The only place where the context might likely be useful is in a &lt;code&gt;deriving&lt;/code&gt; clause of an associated data instance. However, even here, the role of the outer instance context is murky. So, for clarity, we just stick to the rule above: the enclosing instance context is ignored. If you need to use a non-trivial context on a derived instance, use a &lt;a href=&quot;#extension-StandaloneDeriving&quot;&gt;&lt;code&gt;standalone deriving&lt;/code&gt;&lt;/a&gt; clause (at the top level).</source>
          <target state="translated">Las declaraciones de instancia de datos y tipos asociados no heredan ning&amp;uacute;n contexto especificado en la instancia adjunta. Para las declaraciones de instancia de tipo, no est&amp;aacute; claro qu&amp;eacute; significar&amp;iacute;a el contexto. Para las declaraciones de instancias de datos, es poco probable que un usuario quiera que el contexto se repita para cada constructor de datos. El &amp;uacute;nico lugar donde el contexto podr&amp;iacute;a ser &amp;uacute;til es en una cl&amp;aacute;usula &lt;code&gt;deriving&lt;/code&gt; de una instancia de datos asociada. Sin embargo, incluso aqu&amp;iacute;, el papel del contexto de la instancia externa es turbio. Entonces, para mayor claridad, nos atenemos a la regla anterior: se ignora el contexto de la instancia adjunta. Si necesita usar un contexto no trivial en una instancia derivada, use una cl&amp;aacute;usula de &lt;a href=&quot;#extension-StandaloneDeriving&quot;&gt; &lt;code&gt;standalone deriving&lt;/code&gt; &lt;/a&gt; (en el nivel superior).</target>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="1c3f48563bf3394a3a3f951813cae0818e684494" translate="yes" xml:space="preserve">
          <source>Associativity is not used to reduce the occurrence of parentheses, although precedence may be.</source>
          <target state="translated">La asociatividad no se utiliza para reducir la aparición de paréntesis,aunque la precedencia puede serlo.</target>
        </trans-unit>
        <trans-unit id="6b99ff8f8291b4b50e3921986b0bce0e781dbc7e" translate="yes" xml:space="preserve">
          <source>Assuming a &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; value signifies some sort of error, we can use &lt;code&gt;&lt;a href=&quot;data-either#v:isLeft&quot;&gt;isLeft&lt;/a&gt;&lt;/code&gt; to write a very simple error-reporting function that does absolutely nothing in the case of success, and outputs &quot;ERROR&quot; if any error occurred.</source>
          <target state="translated">Suponiendo que un valor &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; significa alg&amp;uacute;n tipo de error, podemos usar &lt;code&gt;&lt;a href=&quot;data-either#v:isLeft&quot;&gt;isLeft&lt;/a&gt;&lt;/code&gt; para escribir una funci&amp;oacute;n muy simple de reporte de errores que no hace absolutamente nada en el caso de &amp;eacute;xito, y genera &quot;ERROR&quot; si ocurre alg&amp;uacute;n error.</target>
        </trans-unit>
        <trans-unit id="d055592ad02200007ba459bbee0ab4e26e918369" translate="yes" xml:space="preserve">
          <source>Assuming a &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; value signifies some sort of error, we can use &lt;code&gt;&lt;a href=&quot;data-either#v:isRight&quot;&gt;isRight&lt;/a&gt;&lt;/code&gt; to write a very simple reporting function that only outputs &quot;SUCCESS&quot; when a computation has succeeded.</source>
          <target state="translated">Suponiendo que un valor de &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; significa alg&amp;uacute;n tipo de error, podemos usar &lt;code&gt;&lt;a href=&quot;data-either#v:isRight&quot;&gt;isRight&lt;/a&gt;&lt;/code&gt; para escribir una funci&amp;oacute;n de informe muy simple que solo genera &quot;SUCCESS&quot; cuando un c&amp;aacute;lculo ha tenido &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="1c834581788562362bcf330136a30982991522f6" translate="yes" xml:space="preserve">
          <source>Assumption: Integer is strictly positive</source>
          <target state="translated">Asunción:El número entero es estrictamente positivo</target>
        </trans-unit>
        <trans-unit id="77fd17f027574bb2f7df35f4ef90ead2e9b60836" translate="yes" xml:space="preserve">
          <source>AsyncException</source>
          <target state="translated">AsyncException</target>
        </trans-unit>
        <trans-unit id="603f73055272502639dd306a8bca156dc618be89" translate="yes" xml:space="preserve">
          <source>AsyncIOAvailable</source>
          <target state="translated">AsyncIOAvailable</target>
        </trans-unit>
        <trans-unit id="e1aac0f84af1ee48fafd058955607776e453cc9b" translate="yes" xml:space="preserve">
          <source>Asynchronous Exceptions</source>
          <target state="translated">Excepciones asincrónicas</target>
        </trans-unit>
        <trans-unit id="1fde34ce4b1dca7f44eebcbaf7ae6171e5ddd42a" translate="yes" xml:space="preserve">
          <source>Asynchronous exception control</source>
          <target state="translated">Control de excepciones asíncrono</target>
        </trans-unit>
        <trans-unit id="90e8f43c2f265d7e22350697496f72118afa53f2" translate="yes" xml:space="preserve">
          <source>Asynchronous exceptions are so-called because they arise due to external influences, and can be raised at any point during execution. &lt;code&gt;&lt;a href=&quot;control-exception#v:StackOverflow&quot;&gt;StackOverflow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-exception#v:HeapOverflow&quot;&gt;HeapOverflow&lt;/a&gt;&lt;/code&gt; are two examples of system-generated asynchronous exceptions.</source>
          <target state="translated">Las excepciones asincr&amp;oacute;nicas se denominan as&amp;iacute; porque surgen debido a influencias externas y se pueden generar en cualquier momento durante la ejecuci&amp;oacute;n. &lt;code&gt;&lt;a href=&quot;control-exception#v:StackOverflow&quot;&gt;StackOverflow&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;control-exception#v:HeapOverflow&quot;&gt;HeapOverflow&lt;/a&gt;&lt;/code&gt; son dos ejemplos de excepciones asincr&amp;oacute;nicas generadas por el sistema.</target>
        </trans-unit>
        <trans-unit id="e9087c26270e45969905025ed0c6876268b8e459" translate="yes" xml:space="preserve">
          <source>Asynchronous exceptions may still be received while in the masked state if the masked thread &lt;em&gt;blocks&lt;/em&gt; in certain ways; see &lt;a href=&quot;../base-4.13.0.0/control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="translated">Las excepciones asincr&amp;oacute;nicas a&amp;uacute;n pueden recibirse mientras se encuentra en el estado enmascarado si el hilo enmascarado se &lt;em&gt;bloquea&lt;/em&gt; de ciertas formas; ver &lt;a href=&quot;../base-4.13.0.0/control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="303a11aed286b513643b565c89072a6a7aa3770b" translate="yes" xml:space="preserve">
          <source>Asynchronous exceptions may still be received while in the masked state if the masked thread &lt;em&gt;blocks&lt;/em&gt; in certain ways; see &lt;a href=&quot;../base-4.14.1.0/control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6f92d83ff3d5f34604121aadc15840ac708368" translate="yes" xml:space="preserve">
          <source>Asynchronous exceptions may still be received while in the masked state if the masked thread &lt;em&gt;blocks&lt;/em&gt; in certain ways; see &lt;a href=&quot;control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt;.</source>
          <target state="translated">Las excepciones asincr&amp;oacute;nicas a&amp;uacute;n pueden recibirse mientras se encuentra en el estado enmascarado si el hilo enmascarado se &lt;em&gt;bloquea&lt;/em&gt; de ciertas formas; ver &lt;a href=&quot;control-exception#interruptible&quot;&gt;Control.Exception&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="631cd36315ff03e677e0243fa4a94f4335edad65" translate="yes" xml:space="preserve">
          <source>Asynchronous exceptions.</source>
          <target state="translated">Excepciones asincrónicas.</target>
        </trans-unit>
        <trans-unit id="de23bf55d43f3cb1369402e7877d3faa61f2949f" translate="yes" xml:space="preserve">
          <source>At a function call, GHC takes the stack stored in the function being called (which for a top-level function will be empty), and &lt;em&gt;appends&lt;/em&gt; it to the current stack, ignoring any prefix that is identical to a prefix of the current stack.</source>
          <target state="translated">En una llamada de funci&amp;oacute;n, GHC toma la pila almacenada en la funci&amp;oacute;n que se llama (que para una funci&amp;oacute;n de nivel superior estar&amp;aacute; vac&amp;iacute;a) y la &lt;em&gt;agrega&lt;/em&gt; a la pila actual, ignorando cualquier prefijo que sea id&amp;eacute;ntico a un prefijo de la pila actual.</target>
        </trans-unit>
        <trans-unit id="bb19257a1286f9e500a61c5dfeacaecfe019ec79" translate="yes" xml:space="preserve">
          <source>At any time you can use the command &lt;a href=&quot;#ghci-cmd-:show%20modules&quot;&gt;&lt;code&gt;:show modules&lt;/code&gt;&lt;/a&gt; to get a list of the modules currently loaded into GHCi:</source>
          <target state="translated">En cualquier momento puede usar el comando &lt;a href=&quot;#ghci-cmd-:show%20modules&quot;&gt; &lt;code&gt;:show modules&lt;/code&gt; &lt;/a&gt; para obtener una lista de los m&amp;oacute;dulos cargados actualmente en GHCi:</target>
        </trans-unit>
        <trans-unit id="3461cf3addc608aea10037826585d0df504e072e" translate="yes" xml:space="preserve">
          <source>At definition site, the arity determines what inputs can be matched on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7e513d6fe875bf90b4a728f124a7f9ff012de2" translate="yes" xml:space="preserve">
          <source>At first blush, &lt;code&gt;UnEx&lt;/code&gt; seems poorly-kinded. The return kind &lt;code&gt;k&lt;/code&gt; is not mentioned in the arguments, and thus it would seem that an instance would have to return a member of &lt;code&gt;k&lt;/code&gt;&lt;em&gt;for any&lt;/em&gt;&lt;code&gt;k&lt;/code&gt;. However, this is not the case. The type family &lt;code&gt;UnEx&lt;/code&gt; is a kind-indexed type family. The return kind &lt;code&gt;k&lt;/code&gt; is an implicit parameter to &lt;code&gt;UnEx&lt;/code&gt;. The elaborated definitions are as follows (where implicit parameters are denoted by braces):</source>
          <target state="translated">A primera vista, &lt;code&gt;UnEx&lt;/code&gt; parece poco amable. El tipo de retorno &lt;code&gt;k&lt;/code&gt; no se menciona en los argumentos y, por tanto, parecer&amp;iacute;a que una instancia tendr&amp;iacute;a que devolver un miembro de &lt;code&gt;k&lt;/code&gt; &lt;em&gt;para cualquier &lt;/em&gt; &lt;code&gt;k&lt;/code&gt; . Sin embargo, &amp;eacute;ste no es el caso. La familia de tipos &lt;code&gt;UnEx&lt;/code&gt; es una familia de tipos indexada por tipos. El tipo de retorno &lt;code&gt;k&lt;/code&gt; es un par&amp;aacute;metro impl&amp;iacute;cito de &lt;code&gt;UnEx&lt;/code&gt; . Las definiciones elaboradas son las siguientes (donde los par&amp;aacute;metros impl&amp;iacute;citos se indican mediante llaves):</target>
        </trans-unit>
        <trans-unit id="082a6d8510562c71bea9da704521358ac4884d2e" translate="yes" xml:space="preserve">
          <source>At least one of the classes &lt;code&gt;Ci&lt;/code&gt; is numeric.</source>
          <target state="translated">Al menos una de las clases &lt;code&gt;Ci&lt;/code&gt; es num&amp;eacute;rica.</target>
        </trans-unit>
        <trans-unit id="da4d3ab8aa4bf1c457aa64eadbb0f7599f12c862" translate="yes" xml:space="preserve">
          <source>At least one overlapped instance, &lt;code&gt;Iy&lt;/code&gt;, is both:</source>
          <target state="translated">Al menos una instancia superpuesta, &lt;code&gt;Iy&lt;/code&gt; , es ambas:</target>
        </trans-unit>
        <trans-unit id="95b0afae80408c0a928a6ff24b58dae9588bff21" translate="yes" xml:space="preserve">
          <source>At present, &lt;code&gt;-O2&lt;/code&gt; is nearly indistinguishable from &lt;code&gt;-O&lt;/code&gt;.</source>
          <target state="translated">En la actualidad, &lt;code&gt;-O2&lt;/code&gt; es casi indistinguible de &lt;code&gt;-O&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d06e4b175297e1faf1e01c3741923b7d7eb11e9" translate="yes" xml:space="preserve">
          <source>At present, GHC is quite limited in its reasoning about arithmetic: it will only evaluate the arithmetic type functions and compare the results&amp;mdash; in the same way that it does for any other type function. In particular, it does not know more general facts about arithmetic, such as the commutativity and associativity of &lt;code&gt;(+)&lt;/code&gt;, for example.</source>
          <target state="translated">En la actualidad, GHC es bastante limitado en su razonamiento sobre aritm&amp;eacute;tica: solo evaluar&amp;aacute; las funciones de tipo aritm&amp;eacute;tico y comparar&amp;aacute; los resultados, de la misma manera que lo hace para cualquier otra funci&amp;oacute;n de tipo. En particular, no conoce hechos m&amp;aacute;s generales sobre aritm&amp;eacute;tica, como la conmutatividad y asociatividad de &lt;code&gt;(+)&lt;/code&gt; , por ejemplo.</target>
        </trans-unit>
        <trans-unit id="14a75af6823b475d201cdaf02b67cfc7b30f5d3d" translate="yes" xml:space="preserve">
          <source>At runtime, whenever a term containing a type error would need to be evaluated, the error is converted into a runtime exception of type &lt;code&gt;TypeError&lt;/code&gt;. Note that type errors are deferred as much as possible during runtime, but invalid coercions are never performed, even when they would ultimately result in a value of the correct type. For example, given the following code:</source>
          <target state="translated">En tiempo de ejecuci&amp;oacute;n, siempre que sea necesario evaluar un t&amp;eacute;rmino que contiene un error de tipo, el error se convierte en una excepci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n del tipo &lt;code&gt;TypeError&lt;/code&gt; . Tenga en cuenta que los errores de tipo se aplazan tanto como sea posible durante el tiempo de ejecuci&amp;oacute;n, pero las coacciones no v&amp;aacute;lidas nunca se realizan, incluso cuando finalmente dar&amp;iacute;an como resultado un valor del tipo correcto. Por ejemplo, dado el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="3b1e7a17deca9b74f37ec0a39800ad357611600d" translate="yes" xml:space="preserve">
          <source>At the GHCi prompt you can also enter any top-level Haskell declaration, including &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;newtype&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;instance&lt;/code&gt;, &lt;code&gt;deriving&lt;/code&gt;, and &lt;code&gt;foreign&lt;/code&gt; declarations. For example:</source>
          <target state="translated">En el indicador de GHCi tambi&amp;eacute;n puede ingresar cualquier declaraci&amp;oacute;n de Haskell de nivel superior, incluidos &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;newtype&lt;/code&gt; tipo , &lt;code&gt;class&lt;/code&gt; , &lt;code&gt;instance&lt;/code&gt; , &lt;code&gt;deriving&lt;/code&gt; y declaraciones &lt;code&gt;foreign&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="cd0949a6c29925c12d1d048d17633d245e1a3ebf" translate="yes" xml:space="preserve">
          <source>At the GHCi prompt, or with GHC if the &lt;a href=&quot;#extension-ExtendedDefaultRules&quot;&gt;&lt;code&gt;ExtendedDefaultRules&lt;/code&gt;&lt;/a&gt; flag is given, the types are instead resolved with the following method:</source>
          <target state="translated">En el indicador de GHCi, o con GHC si se proporciona el indicador &lt;a href=&quot;#extension-ExtendedDefaultRules&quot;&gt; &lt;code&gt;ExtendedDefaultRules&lt;/code&gt; &lt;/a&gt; , los tipos se resuelven con el siguiente m&amp;eacute;todo:</target>
        </trans-unit>
        <trans-unit id="faae2aa7c10c0885466c17a8edd2f6d0318681f4" translate="yes" xml:space="preserve">
          <source>At the end of the sample period the &lt;code&gt;EVENT_HEAP_PROF_SAMPLE_END&lt;/code&gt; event if emitted. This is useful to properly delimit the sampling period and to record the total time spent profiling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7cac97440198fcc962770e0f96df4e013c2492" translate="yes" xml:space="preserve">
          <source>At the moment, the &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; command doesn&amp;rsquo;t support any kind of quoting in its arguments: quotes will not be removed and cannot be used to group words together. For example, &lt;code&gt;:set -DFOO='BAR BAZ'&lt;/code&gt; will not do what you expect.</source>
          <target state="translated">Por el momento, el comando &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; no admite ning&amp;uacute;n tipo de comillas en sus argumentos: las comillas no se eliminar&amp;aacute;n y no se pueden usar para agrupar palabras. Por ejemplo &lt;code&gt;:set -DFOO='BAR BAZ'&lt;/code&gt; no har&amp;aacute; lo que esperabas.</target>
        </trans-unit>
        <trans-unit id="82ba5640e0de386d6cc85d3de209bb9cdb633f12" translate="yes" xml:space="preserve">
          <source>At the moment, the only way to specify a dependency on a plugin in Cabal is to put it in &lt;code&gt;build-depends&lt;/code&gt; (which uses the conventional &lt;code&gt;-package-id ⟨unit-id⟩&lt;/code&gt; flag); however, in the future there will be a separate field for specifying plugin dependencies specifically.</source>
          <target state="translated">Por el momento, la &amp;uacute;nica forma de especificar una dependencia de un complemento en Cabal es ponerlo en &lt;code&gt;build-depends&lt;/code&gt; (que usa el &lt;code&gt;-package-id ⟨unit-id⟩&lt;/code&gt; convencional -package-id ⟨unit-id⟩ ); sin embargo, en el futuro habr&amp;aacute; un campo separado para especificar dependencias de complementos espec&amp;iacute;ficamente.</target>
        </trans-unit>
        <trans-unit id="36f6fc6a8b5e23e239eeef3e4a0f085a44f79d37" translate="yes" xml:space="preserve">
          <source>At use sites, the arity determines if the definition can be used in a higher-rank scenario:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f078fc66826e48322f51a990469bfd247658746" translate="yes" xml:space="preserve">
          <source>Atomic blocks.</source>
          <target state="translated">Bloques atómicos.</target>
        </trans-unit>
        <trans-unit id="92c10450c672866027afd2c75b1a19f1a5daa4db" translate="yes" xml:space="preserve">
          <source>Atomically apply a function to the contents of an &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; and return the old and new values. The result of the function is forced.</source>
          <target state="translated">Aplicar at&amp;oacute;micamente una funci&amp;oacute;n al contenido de un &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; y devolver los valores nuevos y antiguos. El resultado de la funci&amp;oacute;n es forzado.</target>
        </trans-unit>
        <trans-unit id="2e8c029e8fddf8615e7bdb4f7438b3feba64ae42" translate="yes" xml:space="preserve">
          <source>Atomically apply a function to the contents of an &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; and return the old and new values. The result of the function is not forced. As this can lead to a memory leak, it is usually better to use &lt;code&gt;&lt;a href=&quot;ghc-ioref#v:atomicModifyIORef-39-_&quot;&gt;atomicModifyIORef'_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Aplicar at&amp;oacute;micamente una funci&amp;oacute;n al contenido de un &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; y devolver los valores nuevos y antiguos. El resultado de la funci&amp;oacute;n no se fuerza. Como esto puede provocar una p&amp;eacute;rdida de memoria, generalmente es mejor usar &lt;code&gt;&lt;a href=&quot;ghc-ioref#v:atomicModifyIORef-39-_&quot;&gt;atomicModifyIORef'_&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="420f4999cbf62263237bdbe7d15cefd4576bc583" translate="yes" xml:space="preserve">
          <source>Atomically modifies the contents of an &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Modifica at&amp;oacute;micamente el contenido de una &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5976845b8f84b952ac2fc7192f0a75f69d2927f0" translate="yes" xml:space="preserve">
          <source>Atomically read the contents of an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; is guaranteed to receive the next &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Leer at&amp;oacute;micamente el contenido de un &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Si el &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o actualmente, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; esperar&amp;aacute; hasta que est&amp;eacute; lleno. Se garantiza que &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; recibir&amp;aacute; el pr&amp;oacute;ximo &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
