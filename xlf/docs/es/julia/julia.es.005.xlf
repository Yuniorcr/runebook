<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="julia">
    <body>
      <group id="julia">
        <trans-unit id="e370a7226632723025763723f6dafd8d5d0d959c" translate="yes" xml:space="preserve">
          <source>And With Dot</source>
          <target state="translated">Y con Dot</target>
        </trans-unit>
        <trans-unit id="fbef2e39e8fb91e6824e3edcfe418b3f32f423c2" translate="yes" xml:space="preserve">
          <source>And using that testset looks like:</source>
          <target state="translated">Y usando ese juego de pruebas parece que:</target>
        </trans-unit>
        <trans-unit id="1f5999305ceff8dd17e050846ba5e997ba6e59ae" translate="yes" xml:space="preserve">
          <source>Anger Symbol</source>
          <target state="translated">Símbolo de la ira</target>
        </trans-unit>
        <trans-unit id="1fd70473fb3de634b409d4acaf49ffc1f90aae1f" translate="yes" xml:space="preserve">
          <source>Angle</source>
          <target state="translated">Angle</target>
        </trans-unit>
        <trans-unit id="b2a770be59cfda02ac18ae81ca3c69433ca33eac" translate="yes" xml:space="preserve">
          <source>Angle With S Inside</source>
          <target state="translated">Ángulo con S en el interior</target>
        </trans-unit>
        <trans-unit id="2f17bd9fe54b168046c3599d1ee65207477b51c2" translate="yes" xml:space="preserve">
          <source>Angle With Underbar</source>
          <target state="translated">Ángulo con la barra inferior</target>
        </trans-unit>
        <trans-unit id="235bfce3d68318529750179e362f5eb792952c9e" translate="yes" xml:space="preserve">
          <source>Angry Face</source>
          <target state="translated">Cara enfadada</target>
        </trans-unit>
        <trans-unit id="5dcf9d8e34d0e0dc6accf2e555a98e501316d5eb" translate="yes" xml:space="preserve">
          <source>Angstrom Sign / Angstrom Unit</source>
          <target state="translated">Signo de angustia/Unidad de angustia</target>
        </trans-unit>
        <trans-unit id="51cb7e1a070afb2a7be72806c484010b0b12881a" translate="yes" xml:space="preserve">
          <source>Anguished Face</source>
          <target state="translated">Cara angustiada</target>
        </trans-unit>
        <trans-unit id="0a391a1d197db6b3528b4037a38a99b886bf2ca2" translate="yes" xml:space="preserve">
          <source>Annotate a &lt;code&gt;for&lt;/code&gt; loop to allow the compiler to take extra liberties to allow loop re-ordering</source>
          <target state="translated">Anote un bucle &lt;code&gt;for&lt;/code&gt; para permitir que el compilador se tome libertades adicionales para permitir el reordenamiento del bucle</target>
        </trans-unit>
        <trans-unit id="7c44ae2875c05d9e420a1ee94f547ea8d42d5f9f" translate="yes" xml:space="preserve">
          <source>Annotate values taken from untyped locations</source>
          <target state="translated">Anota valores tomados de lugares sin escribir</target>
        </trans-unit>
        <trans-unit id="80abb045be1e210007d2a8998883d6f2947e4f8f" translate="yes" xml:space="preserve">
          <source>Annotates the expression &lt;code&gt;blk&lt;/code&gt; as a bounds checking block, allowing it to be elided by &lt;a href=&quot;#Base.@inbounds&quot;&gt;&lt;code&gt;@inbounds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Anota la expresi&amp;oacute;n &lt;code&gt;blk&lt;/code&gt; como un bloque de verificaci&amp;oacute;n de l&amp;iacute;mites, lo que permite que &lt;a href=&quot;#Base.@inbounds&quot;&gt; &lt;code&gt;@inbounds&lt;/code&gt; elida&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f497993755de46018a5ff1778be3f6bc999629d" translate="yes" xml:space="preserve">
          <source>Anonymous Functions</source>
          <target state="translated">Funciones anónimas</target>
        </trans-unit>
        <trans-unit id="3f2245e0442788d1d0364df60f4a6e67754d3e89" translate="yes" xml:space="preserve">
          <source>Another common solution is to separate the reader and writer of the pipeline into separate &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;s:</source>
          <target state="translated">Otra soluci&amp;oacute;n com&amp;uacute;n es separar el lector y el escritor de la canalizaci&amp;oacute;n en &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; separadas :</target>
        </trans-unit>
        <trans-unit id="fcd743f506f81055a92cce92b547fdb1e7daceb8" translate="yes" xml:space="preserve">
          <source>Another helper type is currently available for other cases, &lt;code&gt;Random.SamplerTag&lt;/code&gt;, but is considered as internal API, and can break at any time without proper deprecations.</source>
          <target state="translated">Otro tipo de ayuda est&amp;aacute; disponible actualmente para otros casos, &lt;code&gt;Random.SamplerTag&lt;/code&gt; , pero se considera una API interna y puede fallar en cualquier momento sin las debidas depreciaciones.</target>
        </trans-unit>
        <trans-unit id="9b1d07d46031acec2c359f730da8bb2e51e75efb" translate="yes" xml:space="preserve">
          <source>Another non-standard version specification extension allows one to use a trailing &lt;code&gt;+&lt;/code&gt; to express an upper limit on build versions, e.g. &lt;code&gt;VERSION &amp;gt; v&quot;0.2-rc1+&quot;&lt;/code&gt; can be used to mean any version above &lt;code&gt;0.2-rc1&lt;/code&gt; and any of its builds: it will return &lt;code&gt;false&lt;/code&gt; for version &lt;code&gt;v&quot;0.2-rc1+win64&quot;&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;v&quot;0.2-rc2&quot;&lt;/code&gt;.</source>
          <target state="translated">Otra extensi&amp;oacute;n de especificaci&amp;oacute;n de versi&amp;oacute;n no est&amp;aacute;ndar permite usar un &lt;code&gt;+&lt;/code&gt; final para expresar un l&amp;iacute;mite superior en las versiones de compilaci&amp;oacute;n, por ejemplo, &lt;code&gt;VERSION &amp;gt; v&quot;0.2-rc1+&quot;&lt;/code&gt; se puede usar para referirse a cualquier versi&amp;oacute;n por encima de &lt;code&gt;0.2-rc1&lt;/code&gt; y cualquiera de sus compilaciones: devolver&amp;aacute; &lt;code&gt;false&lt;/code&gt; para la versi&amp;oacute;n &lt;code&gt;v&quot;0.2-rc1+win64&quot;&lt;/code&gt; y &lt;code&gt;true&lt;/code&gt; para &lt;code&gt;v&quot;0.2-rc2&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f1f671807b09bc4fbe1759ebf099879c030bdbf" translate="yes" xml:space="preserve">
          <source>Another operation that applies to some types is &lt;a href=&quot;../../base/base/index#Base.supertype&quot;&gt;&lt;code&gt;supertype&lt;/code&gt;&lt;/a&gt;, which reveals a type's supertype. Only declared types (&lt;code&gt;DataType&lt;/code&gt;) have unambiguous supertypes:</source>
          <target state="translated">Otra operaci&amp;oacute;n que se aplica a algunos tipos es el &lt;a href=&quot;../../base/base/index#Base.supertype&quot;&gt; &lt;code&gt;supertype&lt;/code&gt; &lt;/a&gt; , que revela el supertipo de un tipo. Solo los tipos declarados ( &lt;code&gt;DataType&lt;/code&gt; ) tienen supertipos inequ&amp;iacute;vocos:</target>
        </trans-unit>
        <trans-unit id="937a3e6d6c5697202a728546d5a94531a97deb3c" translate="yes" xml:space="preserve">
          <source>Another possibility is the following, which could useful to adapt to cases where the parameter &lt;code&gt;T&lt;/code&gt; would need to be matched more narrowly:</source>
          <target state="translated">Otra posibilidad es la siguiente, que podr&amp;iacute;a ser &amp;uacute;til para adaptarse a los casos en los que el par&amp;aacute;metro &lt;code&gt;T&lt;/code&gt; deber&amp;iacute;a coincidir de forma m&amp;aacute;s estrecha:</target>
        </trans-unit>
        <trans-unit id="934eafc149de740d97fce8516adf5aa645737af2" translate="yes" xml:space="preserve">
          <source>Another useful non-standard string literal is the byte-array string literal: &lt;code&gt;b&quot;...&quot;&lt;/code&gt;. This form lets you use string notation to express read only literal byte arrays &amp;ndash; i.e. arrays of &lt;a href=&quot;../../base/numbers/index#Core.UInt8&quot;&gt;&lt;code&gt;UInt8&lt;/code&gt;&lt;/a&gt; values. The type of those objects is &lt;code&gt;CodeUnits{UInt8, String}&lt;/code&gt;. The rules for byte array literals are the following:</source>
          <target state="translated">Otro literal de cadena no est&amp;aacute;ndar &amp;uacute;til es el literal de cadena de matriz de bytes: &lt;code&gt;b&quot;...&quot;&lt;/code&gt; . Este formulario le permite usar la notaci&amp;oacute;n de cadena para expresar matrices de bytes literales de solo lectura, es decir, matrices de valores &lt;a href=&quot;../../base/numbers/index#Core.UInt8&quot;&gt; &lt;code&gt;UInt8&lt;/code&gt; &lt;/a&gt; . El tipo de esos objetos es &lt;code&gt;CodeUnits{UInt8, String}&lt;/code&gt; . Las reglas para los literales de matriz de bytes son las siguientes:</target>
        </trans-unit>
        <trans-unit id="30b18c65665f6fdbc3c1e0c1e53afe0ef7b0746f" translate="yes" xml:space="preserve">
          <source>Another way to create a sparse array is to convert a dense array into a sparse array using the &lt;a href=&quot;#SparseArrays.sparse&quot;&gt;&lt;code&gt;sparse&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Otra forma de crear una matriz dispersa es convertir una matriz densa en una matriz dispersa usando la funci&amp;oacute;n &lt;a href=&quot;#SparseArrays.sparse&quot;&gt; &lt;code&gt;sparse&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d71bbbddbab448cf2f4551f57f136f71cf39aeab" translate="yes" xml:space="preserve">
          <source>Another way to view expressions is with &lt;code&gt;Meta.show_sexpr&lt;/code&gt;, which displays the &lt;a href=&quot;https://en.wikipedia.org/wiki/S-expression&quot;&gt;S-expression&lt;/a&gt; form of a given &lt;code&gt;Expr&lt;/code&gt;, which may look very familiar to users of Lisp. Here's an example illustrating the display on a nested &lt;code&gt;Expr&lt;/code&gt;:</source>
          <target state="translated">Otra forma de ver expresiones es con &lt;code&gt;Meta.show_sexpr&lt;/code&gt; , que muestra la forma de &lt;a href=&quot;https://en.wikipedia.org/wiki/S-expression&quot;&gt;expresi&amp;oacute;n S&lt;/a&gt; de un &lt;code&gt;Expr&lt;/code&gt; dado , que puede parecer muy familiar a los usuarios de Lisp. Aqu&amp;iacute; hay un ejemplo que ilustra la visualizaci&amp;oacute;n en un &lt;code&gt;Expr&lt;/code&gt; anidado :</target>
        </trans-unit>
        <trans-unit id="5468d9df43f9dcdfb8b8b349ce3a001cd05b665d" translate="yes" xml:space="preserve">
          <source>Another way, which used to be the only correct way before the advent of triangular dispatch in Julia v0.6, is:</source>
          <target state="translated">Otra forma,que solía ser la única correcta antes del advenimiento del despacho triangular en Julia v0.6,es:</target>
        </trans-unit>
        <trans-unit id="02cc2a69720bd8bf1661deb23018e16470c069da" translate="yes" xml:space="preserve">
          <source>Ant</source>
          <target state="translated">Ant</target>
        </trans-unit>
        <trans-unit id="e25592206c84c0ddd18d548ca6206d3d080aef04" translate="yes" xml:space="preserve">
          <source>Antenna With Bars</source>
          <target state="translated">Antena con barras</target>
        </trans-unit>
        <trans-unit id="27823909809855dca3ee48ccda6c67818ef39511" translate="yes" xml:space="preserve">
          <source>Anticlockwise Contour Integral</source>
          <target state="translated">Contorno integral en sentido contrario a las agujas del reloj</target>
        </trans-unit>
        <trans-unit id="777a29798f3d057ac8c6bab9cead4b05d966905b" translate="yes" xml:space="preserve">
          <source>Anticlockwise Downwards And Upwards Open Circle Arrows</source>
          <target state="translated">Flechas de círculo abierto hacia abajo y hacia arriba en sentido antihorario</target>
        </trans-unit>
        <trans-unit id="e5cdf19e981398168cc33d41c80123d3c30a5081" translate="yes" xml:space="preserve">
          <source>Anticlockwise Integration</source>
          <target state="translated">Integración en sentido contrario a las agujas del reloj</target>
        </trans-unit>
        <trans-unit id="4ffeb49d53fc5643e555514643bbb1df4f049794" translate="yes" xml:space="preserve">
          <source>Anticlockwise Open Circle Arrow</source>
          <target state="translated">Flecha de círculo abierto en sentido antihorario</target>
        </trans-unit>
        <trans-unit id="a52271b2a7c6cb5d3c1c456396438c1ddb68a4f9" translate="yes" xml:space="preserve">
          <source>Anticlockwise Top Semicircle Arrow</source>
          <target state="translated">Flecha de semicírculo superior en sentido antihorario</target>
        </trans-unit>
        <trans-unit id="b661ec502ce7eec63576ef6980de816514a82733" translate="yes" xml:space="preserve">
          <source>Any changes you make to the array values (e.g., &lt;code&gt;A[3] = 0&lt;/code&gt;) will also change the values on disk</source>
          <target state="translated">Cualquier cambio que realice en los valores de la matriz (por ejemplo, &lt;code&gt;A[3] = 0&lt;/code&gt; ) tambi&amp;eacute;n cambiar&amp;aacute; los valores en el disco</target>
        </trans-unit>
        <trans-unit id="3c5cca19d4f5741a5bb3f294473a79e10b7adbb5" translate="yes" xml:space="preserve">
          <source>Any code that is performance critical or being benchmarked should be inside a function.</source>
          <target state="translated">Cualquier código que sea de rendimiento crítico o que esté siendo evaluado debería estar dentro de una función.</target>
        </trans-unit>
        <trans-unit id="ba5b886162caf15daa7473ff8070c0f84e6be971" translate="yes" xml:space="preserve">
          <source>Any custom array of scalar indices that is a subtype of &lt;code&gt;AbstractArray&lt;/code&gt;</source>
          <target state="translated">Cualquier matriz personalizada de &amp;iacute;ndices escalares que sea un subtipo de &lt;code&gt;AbstractArray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2973d806e6f61582719d2e58b280fa916079cead" translate="yes" xml:space="preserve">
          <source>Any custom testset type (subtype of &lt;code&gt;AbstractTestSet&lt;/code&gt;) can be given and it will also be used for any nested &lt;code&gt;@testset&lt;/code&gt; invocations. The given options are only applied to the test set where they are given. The default test set type does not take any options.</source>
          <target state="translated">Se puede proporcionar cualquier tipo de conjunto de pruebas personalizado (subtipo de &lt;code&gt;AbstractTestSet&lt;/code&gt; ) y tambi&amp;eacute;n se utilizar&amp;aacute; para cualquier invocaci&amp;oacute;n de &lt;code&gt;@testset&lt;/code&gt; anidada . Las opciones dadas solo se aplican al conjunto de prueba donde se dan. El tipo de conjunto de prueba predeterminado no admite ninguna opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="31544d9a7acaba7c1156850319c97b90ce13cb9b" translate="yes" xml:space="preserve">
          <source>Any error stops &lt;code&gt;pmap&lt;/code&gt; from processing the remainder of the collection. To override this behavior you can specify an error handling function via argument &lt;code&gt;on_error&lt;/code&gt; which takes in a single argument, i.e., the exception. The function can stop the processing by rethrowing the error, or, to continue, return any value which is then returned inline with the results to the caller.</source>
          <target state="translated">Cualquier error impide que &lt;code&gt;pmap&lt;/code&gt; procese el resto de la colecci&amp;oacute;n. Para anular este comportamiento, puede especificar una funci&amp;oacute;n de manejo de errores a trav&amp;eacute;s del argumento &lt;code&gt;on_error&lt;/code&gt; que toma un solo argumento, es decir, la excepci&amp;oacute;n. La funci&amp;oacute;n puede detener el procesamiento volviendo a generar el error o, para continuar, devolver cualquier valor que luego se devuelve en l&amp;iacute;nea con los resultados a la persona que llama.</target>
        </trans-unit>
        <trans-unit id="fc28c907456157bf36df33491d1dd60e94bbee1e" translate="yes" xml:space="preserve">
          <source>Any exceptions thrown by &lt;code&gt;f&lt;/code&gt; are printed to &lt;a href=&quot;../../base/io-network/index#Base.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt; on the remote worker.</source>
          <target state="translated">Cualquier excepci&amp;oacute;n lanzada por &lt;code&gt;f&lt;/code&gt; se imprime en &lt;a href=&quot;../../base/io-network/index#Base.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt; en el trabajador remoto.</target>
        </trans-unit>
        <trans-unit id="74b6431314c500d9367b1ee7e25039a738c25b54" translate="yes" xml:space="preserve">
          <source>Any keyword arguments passed to &lt;code&gt;eigen&lt;/code&gt; are passed through to the lower-level &lt;a href=&quot;#LinearAlgebra.eigen!&quot;&gt;&lt;code&gt;eigen!&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&amp;iexcl;Cualquier argumento de palabra clave que se pase a &lt;code&gt;eigen&lt;/code&gt; se pasa al &lt;a href=&quot;#LinearAlgebra.eigen!&quot;&gt; &lt;code&gt;eigen!&lt;/code&gt; &lt;/a&gt; nivel inferior ! funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="409446f789565d016b86ac80357893528260dc10" translate="yes" xml:space="preserve">
          <source>Any number of expressions many be documented together in this way. This syntax can be useful when two functions are related, such as non-mutating and mutating versions &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;f!&lt;/code&gt;.</source>
          <target state="translated">Cualquier n&amp;uacute;mero de expresiones se pueden documentar juntas de esta manera. Esta sintaxis puede ser &amp;uacute;til cuando dos funciones est&amp;aacute;n relacionadas, como las versiones &lt;code&gt;f&lt;/code&gt; y &lt;code&gt;f!&lt;/code&gt; sin mutaci&amp;oacute;n y mutaci&amp;oacute;n . .</target>
        </trans-unit>
        <trans-unit id="0687dd78d1b30c2783be213375797ef6105a33d2" translate="yes" xml:space="preserve">
          <source>Any object that defines this function is iterable and can be used in the &lt;a href=&quot;../../base/collections/index#lib-collections-iteration&quot;&gt;many functions that rely upon iteration&lt;/a&gt;. It can also be used directly in a &lt;a href=&quot;../../base/base/index#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop since the syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23555229abe2136eae4796de9adb4981c0efa50" translate="yes" xml:space="preserve">
          <source>Any object that defines this function is iterable and can be used in the &lt;a href=&quot;../../base/collections/index#lib-collections-iteration-1&quot;&gt;many functions that rely upon iteration&lt;/a&gt;. It can also be used directly in a &lt;a href=&quot;../../base/base/index#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop since the syntax:</source>
          <target state="translated">Cualquier objeto que defina esta funci&amp;oacute;n es iterable y puede usarse en &lt;a href=&quot;../../base/collections/index#lib-collections-iteration-1&quot;&gt;muchas funciones que dependen de la iteraci&amp;oacute;n&lt;/a&gt; . Tambi&amp;eacute;n se puede usar directamente en un bucle &lt;a href=&quot;../../base/base/index#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt; ya que la sintaxis:</target>
        </trans-unit>
        <trans-unit id="14a4faaa9263f21666bc118177b8030fb0ebed4a" translate="yes" xml:space="preserve">
          <source>Any object that is not a type is not an instance of &lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">Cualquier objeto que no sea un tipo no es una instancia de &lt;code&gt;Type&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5099776907c27052bfc78cf7373b0d68a21ec5f2" translate="yes" xml:space="preserve">
          <source>Any operation that throws an error is probably currently unimplemented and should be posted as a bug so that it can be resolved.</source>
          <target state="translated">Cualquier operación que arroje un error probablemente no esté actualmente implementada y debería ser publicada como un error para que pueda ser resuelta.</target>
        </trans-unit>
        <trans-unit id="f91c503ff4942107fdfd3a5ddc75b8099dc08779" translate="yes" xml:space="preserve">
          <source>Any process with a reference to a &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt; can put and take items from the channel. Data is automatically sent to (or retrieved from) the process a &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt; is associated with.</source>
          <target state="translated">Cualquier proceso con una referencia a un &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt; &lt;code&gt;RemoteChannel&lt;/code&gt; &lt;/a&gt; puede poner y tomar elementos del canal. Los datos se env&amp;iacute;an autom&amp;aacute;ticamente (o se recuperan) del proceso &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt; &lt;code&gt;RemoteChannel&lt;/code&gt; &lt;/a&gt; est&amp;aacute; asociado un RemoteChannel .</target>
        </trans-unit>
        <trans-unit id="7c010ba08796a2114052ab863fb8a9d226c9dd13" translate="yes" xml:space="preserve">
          <source>Apl Functional Symbol Backslash Bar</source>
          <target state="translated">Barra de retroceso de símbolos funcionales de Apl</target>
        </trans-unit>
        <trans-unit id="36d891e0ee22f437cc243dd2e9ea0702d961b80f" translate="yes" xml:space="preserve">
          <source>Apl Functional Symbol Circle Stile</source>
          <target state="translated">Símbolo funcional de Apl Círculo de la Estilete</target>
        </trans-unit>
        <trans-unit id="39c46b8ef7910ae74868b76b650aa07198ab578c" translate="yes" xml:space="preserve">
          <source>Apl Functional Symbol I-Beam</source>
          <target state="translated">Símbolo funcional de Apl I-Beam</target>
        </trans-unit>
        <trans-unit id="d0546025dd10b13f2435dc3fcaee9e017037a2e5" translate="yes" xml:space="preserve">
          <source>Apl Functional Symbol Quad Question</source>
          <target state="translated">Símbolo funcional Apl Pregunta cuádruple</target>
        </trans-unit>
        <trans-unit id="4d565c437bb750fa8a1eb8171844a8039a97d351" translate="yes" xml:space="preserve">
          <source>Apl Functional Symbol Quad Up Caret</source>
          <target state="translated">Símbolo funcional de Apl Quad Up Caret</target>
        </trans-unit>
        <trans-unit id="2b164c5aca8328b895ebe3a8c42bb636c6e38b33" translate="yes" xml:space="preserve">
          <source>Apl Functional Symbol Slash Bar</source>
          <target state="translated">Barra de barra de símbolos funcionales de Apl</target>
        </trans-unit>
        <trans-unit id="259f6ae1ad06c26f4f50971a4ed64fd704fd9a77" translate="yes" xml:space="preserve">
          <source>Append &lt;code&gt;!&lt;/code&gt; to names of functions that modify their arguments</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; Adjuntar ! a nombres de funciones que modifican sus argumentos</target>
        </trans-unit>
        <trans-unit id="93f34880658a83722dbec3227ce96d931d512e39" translate="yes" xml:space="preserve">
          <source>Append an item &lt;code&gt;v&lt;/code&gt; to the channel &lt;code&gt;c&lt;/code&gt;. Blocks if the channel is full.</source>
          <target state="translated">Agregue un elemento &lt;code&gt;v&lt;/code&gt; al canal &lt;code&gt;c&lt;/code&gt; . Se bloquea si el canal est&amp;aacute; lleno.</target>
        </trans-unit>
        <trans-unit id="b03f369e152e908d0c3e87c0759a78a3bbb83fd8" translate="yes" xml:space="preserve">
          <source>Applied to a function argument name, hints to the compiler that the method should not be specialized for different types of that argument, but instead to use precisely the declared type for each argument. This is only a hint for avoiding excess code generation. Can be applied to an argument within a formal argument list, or in the function body. When applied to an argument, the macro must wrap the entire argument expression. When used in a function body, the macro must occur in statement position and before any code.</source>
          <target state="translated">Aplicado a un nombre de argumento de función,insinúa al compilador que el método no debe especializarse para diferentes tipos de ese argumento,sino que debe utilizar precisamente el tipo declarado para cada argumento.Esto es sólo una pista para evitar un exceso de generación de código.Puede aplicarse a un argumento dentro de una lista formal de argumentos,o en el cuerpo de la función.Cuando se aplica a un argumento,la macro debe envolver toda la expresión del argumento.Cuando se usa en un cuerpo de función,la macro debe ocurrir en la posición de la declaración y antes de cualquier código.</target>
        </trans-unit>
        <trans-unit id="8ab87eebb7a11b086ff8353783cc2be68600a9ff" translate="yes" xml:space="preserve">
          <source>Applied to a function or macro call, it evaluates the arguments to the specified call, and returns a tuple &lt;code&gt;(filename,line)&lt;/code&gt; giving the location for the method that would be called for those arguments. It calls out to the &lt;code&gt;functionloc&lt;/code&gt; function.</source>
          <target state="translated">Aplicado a una funci&amp;oacute;n o llamada de macro, eval&amp;uacute;a los argumentos de la llamada especificada y devuelve una tupla &lt;code&gt;(filename,line)&lt;/code&gt; proporciona la ubicaci&amp;oacute;n del m&amp;eacute;todo que se llamar&amp;iacute;a para esos argumentos. Llama a la &lt;code&gt;functionloc&lt;/code&gt; functionloc.</target>
        </trans-unit>
        <trans-unit id="10b1d88dbbba24ca44bfc0cd98b524dd2c753624" translate="yes" xml:space="preserve">
          <source>Applied to a function or macro call, it evaluates the arguments to the specified call, and returns the &lt;code&gt;Method&lt;/code&gt; object for the method that would be called for those arguments. Applied to a variable, it returns the module in which the variable was bound. It calls out to the &lt;code&gt;which&lt;/code&gt; function.</source>
          <target state="translated">Aplicado a una funci&amp;oacute;n o llamada de macro, eval&amp;uacute;a los argumentos de la llamada especificada y devuelve el objeto &lt;code&gt;Method&lt;/code&gt; para el m&amp;eacute;todo que se llamar&amp;iacute;a para esos argumentos. Aplicado a una variable, devuelve el m&amp;oacute;dulo al que se enlaz&amp;oacute; la variable. Llama a la funci&amp;oacute;n &lt;code&gt;which&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbb092978ae173971f51dbbabbad7be81b9e017d" translate="yes" xml:space="preserve">
          <source>Applies a function to the preceding argument. This allows for easy function chaining.</source>
          <target state="translated">Aplica una función al argumento anterior.Esto permite encadenar fácilmente las funciones.</target>
        </trans-unit>
        <trans-unit id="df9997f06ef19d21e85df7f2a8d3fde509d61f00" translate="yes" xml:space="preserve">
          <source>Apply function &lt;code&gt;f&lt;/code&gt; to each element(s) in &lt;code&gt;itrs&lt;/code&gt;, and then reduce the result using the binary function &lt;code&gt;op&lt;/code&gt;. If provided, &lt;code&gt;init&lt;/code&gt; must be a neutral element for &lt;code&gt;op&lt;/code&gt; that will be returned for empty collections. It is unspecified whether &lt;code&gt;init&lt;/code&gt; is used for non-empty collections. In general, it will be necessary to provide &lt;code&gt;init&lt;/code&gt; to work with empty collections.</source>
          <target state="translated">Aplique la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a cada elemento (s) en &lt;code&gt;itrs&lt;/code&gt; , y luego reduzca el resultado usando la funci&amp;oacute;n binaria &lt;code&gt;op&lt;/code&gt; . Si se proporciona, &lt;code&gt;init&lt;/code&gt; debe ser un elemento neutral para &lt;code&gt;op&lt;/code&gt; que se devolver&amp;aacute; para colecciones vac&amp;iacute;as. No se especifica si &lt;code&gt;init&lt;/code&gt; se usa para colecciones no vac&amp;iacute;as. En general, ser&amp;aacute; necesario proporcionar &lt;code&gt;init&lt;/code&gt; para trabajar con colecciones vac&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="abde153c82249beeebbf8921343e0e5bfbfeae0c" translate="yes" xml:space="preserve">
          <source>Apply function &lt;code&gt;f&lt;/code&gt; to the git repository &lt;code&gt;repo&lt;/code&gt;, taking a &lt;a href=&quot;#LibGit2.snapshot&quot;&gt;&lt;code&gt;snapshot&lt;/code&gt;&lt;/a&gt; before applying &lt;code&gt;f&lt;/code&gt;. If an error occurs within &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;repo&lt;/code&gt; will be returned to its snapshot state using &lt;a href=&quot;#LibGit2.restore&quot;&gt;&lt;code&gt;restore&lt;/code&gt;&lt;/a&gt;. The error which occurred will be rethrown, but the state of &lt;code&gt;repo&lt;/code&gt; will not be corrupted.</source>
          <target state="translated">Aplicar la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; en el repositorio git &lt;code&gt;repo&lt;/code&gt; , tomando una &lt;a href=&quot;#LibGit2.snapshot&quot;&gt; &lt;code&gt;snapshot&lt;/code&gt; &lt;/a&gt; antes de aplicar &lt;code&gt;f&lt;/code&gt; . Si se produce un error dentro de &lt;code&gt;f&lt;/code&gt; , el &lt;code&gt;repo&lt;/code&gt; sitorio volver&amp;aacute; a su estado de instant&amp;aacute;nea mediante la &lt;a href=&quot;#LibGit2.restore&quot;&gt; &lt;code&gt;restore&lt;/code&gt; &lt;/a&gt; . El error que ocurri&amp;oacute; se volver&amp;aacute; a generar, pero el estado del &lt;code&gt;repo&lt;/code&gt; sitorio no se corromper&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="f6b68e61d0fe49a5c4e043952feeeef90f5166fd" translate="yes" xml:space="preserve">
          <source>Apply the function &lt;code&gt;f&lt;/code&gt; to each element of array &lt;code&gt;A&lt;/code&gt; and take the mean over dimensions &lt;code&gt;dims&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3a1ca726a424329c0ade2ec9d0c7202e4993c0" translate="yes" xml:space="preserve">
          <source>Apply the function &lt;code&gt;f&lt;/code&gt; to each element of collection &lt;code&gt;itr&lt;/code&gt; and take the mean.</source>
          <target state="translated">Aplique la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; a cada elemento de la colecci&amp;oacute;n &lt;code&gt;itr&lt;/code&gt; y obtenga la media.</target>
        </trans-unit>
        <trans-unit id="939711ce79fa9b7db5fc7f83d19a0a73f949253d" translate="yes" xml:space="preserve">
          <source>Apply the function &lt;code&gt;f&lt;/code&gt; to the result of &lt;a href=&quot;#Base.Filesystem.mktemp-Tuple%7BAbstractString%7D&quot;&gt;&lt;code&gt;mktemp(parent)&lt;/code&gt;&lt;/a&gt; and remove the temporary file upon completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc364f76459203bdb0d1fe7d66f3331843d77fb" translate="yes" xml:space="preserve">
          <source>Apply the function &lt;code&gt;f&lt;/code&gt; to the result of &lt;a href=&quot;#Base.Filesystem.mktemp-Tuple%7BAny%7D&quot;&gt;&lt;code&gt;mktemp(parent)&lt;/code&gt;&lt;/a&gt; and remove the temporary file upon completion.</source>
          <target state="translated">Aplique la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; al resultado de &lt;a href=&quot;#Base.Filesystem.mktemp-Tuple%7BAny%7D&quot;&gt; &lt;code&gt;mktemp(parent)&lt;/code&gt; &lt;/a&gt; y elimine el archivo temporal al finalizar.</target>
        </trans-unit>
        <trans-unit id="2dbf8268105b7901616a7ac6d30feda3dbda5ed9" translate="yes" xml:space="preserve">
          <source>Apply the function &lt;code&gt;f&lt;/code&gt; to the result of &lt;a href=&quot;#Base.Filesystem.mktempdir-Tuple%7BAbstractString%7D&quot;&gt;&lt;code&gt;mktempdir(parent; prefix)&lt;/code&gt;&lt;/a&gt; and remove the temporary directory all of its contents upon completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d833cb24f42c76580b0926f643d9e169ba73703" translate="yes" xml:space="preserve">
          <source>Apply the function &lt;code&gt;f&lt;/code&gt; to the result of &lt;a href=&quot;#Base.Filesystem.mktempdir-Tuple%7BAny%7D&quot;&gt;&lt;code&gt;mktempdir(parent; prefix)&lt;/code&gt;&lt;/a&gt; and remove the temporary directory all of its contents upon completion.</source>
          <target state="translated">Aplique la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; al resultado de &lt;a href=&quot;#Base.Filesystem.mktempdir-Tuple%7BAny%7D&quot;&gt; &lt;code&gt;mktempdir(parent; prefix)&lt;/code&gt; &lt;/a&gt; y elimine el directorio temporal con todo su contenido al finalizar.</target>
        </trans-unit>
        <trans-unit id="c30fb3d590d21605851a7bb8d8b8ee272dad26bb" translate="yes" xml:space="preserve">
          <source>Apply the function &lt;code&gt;f&lt;/code&gt; to the result of &lt;code&gt;open(args...; kwargs...)&lt;/code&gt; and close the resulting file descriptor upon completion.</source>
          <target state="translated">Aplique la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; al resultado de &lt;code&gt;open(args...; kwargs...)&lt;/code&gt; y cierre el descriptor de archivo resultante al finalizar.</target>
        </trans-unit>
        <trans-unit id="47f0920b156c6fa088e0adafa06695882e8a1ce9" translate="yes" xml:space="preserve">
          <source>Applying it to any other types of arguments will result in a &lt;a href=&quot;../../base/base/index#Core.MethodError&quot;&gt;&lt;code&gt;MethodError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Aplicarlo a cualquier otro tipo de argumentos resultar&amp;aacute; en un &lt;a href=&quot;../../base/base/index#Core.MethodError&quot;&gt; &lt;code&gt;MethodError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7fea34195bef9eda50f65dd470da25827c0b940a" translate="yes" xml:space="preserve">
          <source>Approaches The Limit</source>
          <target state="translated">Se acerca al límite</target>
        </trans-unit>
        <trans-unit id="36af3f4430ffa874f1e260736d3734767175bb17" translate="yes" xml:space="preserve">
          <source>Approximate floating point number &lt;code&gt;x&lt;/code&gt; as a &lt;a href=&quot;../numbers/index#Base.Rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt; number with components of the given integer type. The result will differ from &lt;code&gt;x&lt;/code&gt; by no more than &lt;code&gt;tol&lt;/code&gt;.</source>
          <target state="translated">N&amp;uacute;mero de coma flotante aproximado &lt;code&gt;x&lt;/code&gt; como un n&amp;uacute;mero &lt;a href=&quot;../numbers/index#Base.Rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt; con componentes del tipo de entero dado. El resultado diferir&amp;aacute; de &lt;code&gt;x&lt;/code&gt; en no m&amp;aacute;s de &lt;code&gt;tol&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86cdef7d39fe1e6ca08d22290dae380c71b22482" translate="yes" xml:space="preserve">
          <source>Approximately But Not Actually Equal To</source>
          <target state="translated">Aproximadamente pero no realmente igual a</target>
        </trans-unit>
        <trans-unit id="a398789ce28e88dc00a7a33731c788d8238f5ac2" translate="yes" xml:space="preserve">
          <source>Approximately Equal Or Equal To</source>
          <target state="translated">Aproximadamente igual o igual a</target>
        </trans-unit>
        <trans-unit id="110d059e67ed3348bbc8fc7fc9a8a4830c0240e6" translate="yes" xml:space="preserve">
          <source>Approximately Equal To</source>
          <target state="translated">Aproximadamente igual a</target>
        </trans-unit>
        <trans-unit id="9d91d063fbecc40e31adb06a0bdab3785430bae5" translate="yes" xml:space="preserve">
          <source>Approximately Equal To Or The Image Of</source>
          <target state="translated">Aproximadamente igual a o la imagen de</target>
        </trans-unit>
        <trans-unit id="3e026e6d2a8adcf8897cf07eecff80b0380f276d" translate="yes" xml:space="preserve">
          <source>Aquarius</source>
          <target state="translated">Aquarius</target>
        </trans-unit>
        <trans-unit id="d037d2935a703a621340fc357146d1188aae9fef" translate="yes" xml:space="preserve">
          <source>Arbitrary Precision Arithmetic</source>
          <target state="translated">Aritmética de precisión arbitraria</target>
        </trans-unit>
        <trans-unit id="ec0bee1bcca32dcc4d82f1af9b35b9a4e833d243" translate="yes" xml:space="preserve">
          <source>Arbitrary precision floating point number type.</source>
          <target state="translated">Un tipo de número de punto flotante de precisión arbitraria.</target>
        </trans-unit>
        <trans-unit id="f38bd661446c82eb63be7e7f1e9af6fa5a6cfaaa" translate="yes" xml:space="preserve">
          <source>Arbitrary precision integer type.</source>
          <target state="translated">Tipo entero de precisión arbitraria.</target>
        </trans-unit>
        <trans-unit id="853a983f6b8abdb9ecba43da2ceda1641c9d519f" translate="yes" xml:space="preserve">
          <source>Arc</source>
          <target state="translated">Arc</target>
        </trans-unit>
        <trans-unit id="dbf6ae45c2a646ca9f7ecaf4480259128f85d936" translate="yes" xml:space="preserve">
          <source>Argument &lt;code&gt;waitfor&lt;/code&gt; specifies how long to wait for the workers to shut down:</source>
          <target state="translated">El argumento &lt;code&gt;waitfor&lt;/code&gt; especifica cu&amp;aacute;nto tiempo se debe esperar a que se apaguen los trabajadores:</target>
        </trans-unit>
        <trans-unit id="0d26bcd474b23ab47569a6a1a0ca62a2c9eb9205" translate="yes" xml:space="preserve">
          <source>Argument Passing Behavior</source>
          <target state="translated">Argumento Comportamiento de paso</target>
        </trans-unit>
        <trans-unit id="938cc4ebe6a5288bbfb1485b585ece93ff21a6fc" translate="yes" xml:space="preserve">
          <source>Argument destructuring</source>
          <target state="translated">Desestructuración de los argumentos</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="ccfbfffe30467d0556e9822f3a3009bcd6857e77" translate="yes" xml:space="preserve">
          <source>Arguments to be passed to the LLVM backend.</source>
          <target state="translated">Los argumentos se pasarán a la parte trasera de la LLVM.</target>
        </trans-unit>
        <trans-unit id="f480e0686764de02407b1abe1545f3d34ae95935" translate="yes" xml:space="preserve">
          <source>Aries</source>
          <target state="translated">Aries</target>
        </trans-unit>
        <trans-unit id="6104f39ed22a2cd32e98536a3447a01c4b9f4781" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators</source>
          <target state="translated">Operadores aritméticos</target>
        </trans-unit>
        <trans-unit id="6ba961184ebd546b1a3177abda88c03934fb089a" translate="yes" xml:space="preserve">
          <source>Arithmetic on the &lt;code&gt;Ptr&lt;/code&gt; type in Julia (e.g. using &lt;code&gt;+&lt;/code&gt;) does not behave the same as C's pointer arithmetic. Adding an integer to a &lt;code&gt;Ptr&lt;/code&gt; in Julia always moves the pointer by some number of &lt;em&gt;bytes&lt;/em&gt;, not elements. This way, the address values obtained from pointer arithmetic do not depend on the element types of pointers.</source>
          <target state="translated">La aritm&amp;eacute;tica del tipo &lt;code&gt;Ptr&lt;/code&gt; en Julia (por ejemplo, usando &lt;code&gt;+&lt;/code&gt; ) no se comporta igual que la aritm&amp;eacute;tica de puntero de C. Agregar un n&amp;uacute;mero entero a un &lt;code&gt;Ptr&lt;/code&gt; en Julia siempre mueve el puntero por un n&amp;uacute;mero de &lt;em&gt;bytes&lt;/em&gt; , no elementos. De esta forma, los valores de direcci&amp;oacute;n obtenidos de la aritm&amp;eacute;tica de punteros no dependen de los tipos de elementos de punteros.</target>
        </trans-unit>
        <trans-unit id="1595977488274506444762a7d4b561a282b06666" translate="yes" xml:space="preserve">
          <source>Arithmetic operations on sparse matrices also work as they do on dense matrices. Indexing of, assignment into, and concatenation of sparse matrices work in the same way as dense matrices. Indexing operations, especially assignment, are expensive, when carried out one element at a time. In many cases it may be better to convert the sparse matrix into &lt;code&gt;(I,J,V)&lt;/code&gt; format using &lt;a href=&quot;#SparseArrays.findnz&quot;&gt;&lt;code&gt;findnz&lt;/code&gt;&lt;/a&gt;, manipulate the values or the structure in the dense vectors &lt;code&gt;(I,J,V)&lt;/code&gt;, and then reconstruct the sparse matrix.</source>
          <target state="translated">Las operaciones aritm&amp;eacute;ticas en matrices dispersas tambi&amp;eacute;n funcionan como lo hacen en matrices densas. La indexaci&amp;oacute;n, la asignaci&amp;oacute;n y la concatenaci&amp;oacute;n de matrices dispersas funcionan de la misma manera que las matrices densas. Las operaciones de indexaci&amp;oacute;n, especialmente la asignaci&amp;oacute;n, son costosas cuando se realizan un elemento a la vez. En muchos casos, puede ser mejor convertir la matriz dispersa al formato &lt;code&gt;(I,J,V)&lt;/code&gt; usando &lt;a href=&quot;#SparseArrays.findnz&quot;&gt; &lt;code&gt;findnz&lt;/code&gt; &lt;/a&gt; , manipular los valores o la estructura en los vectores densos &lt;code&gt;(I,J,V)&lt;/code&gt; y luego reconstruir la matriz dispersa.</target>
        </trans-unit>
        <trans-unit id="6b6663a1569cf067a646e962adc2c809327f2a1d" translate="yes" xml:space="preserve">
          <source>Array and Vectorized Operators and Functions</source>
          <target state="translated">Operadores y funciones de matrices y vectorizados</target>
        </trans-unit>
        <trans-unit id="272896e88f7076a29401b63fcba504c622f100cf" translate="yes" xml:space="preserve">
          <source>Array functions</source>
          <target state="translated">Funciones de la matriz</target>
        </trans-unit>
        <trans-unit id="051f0d6bd098df06454138ddf1bfe22d07625d2a" translate="yes" xml:space="preserve">
          <source>Array literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6e2a8a6e3331d091fde070355048d6a50fbdb0" translate="yes" xml:space="preserve">
          <source>Array traits</source>
          <target state="translated">Rasgos de la matriz</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="a0d486c491afc0a11a53591657e1748ec0e15c70" translate="yes" xml:space="preserve">
          <source>Arrays With Missing Values</source>
          <target state="translated">Arreglos con valores perdidos</target>
        </trans-unit>
        <trans-unit id="14eed9a557bdf809c1d72ce7ef06aab3ac832f66" translate="yes" xml:space="preserve">
          <source>Arrays allowing for missing values can be constructed with the standard syntax. Use &lt;code&gt;Array{Union{Missing, T}}(missing, dims)&lt;/code&gt; to create arrays filled with missing values:</source>
          <target state="translated">Las matrices que permiten valores perdidos se pueden construir con la sintaxis est&amp;aacute;ndar. Utilice &lt;code&gt;Array{Union{Missing, T}}(missing, dims)&lt;/code&gt; para crear matrices llenas de valores faltantes:</target>
        </trans-unit>
        <trans-unit id="d5a5bd6d399fb4d5330301010e8df836c12ff36c" translate="yes" xml:space="preserve">
          <source>Arrays are stored contiguously in memory, lending themselves to CPU vectorization and fewer memory accesses due to caching. These are the same reasons that it is recommended to access arrays in column-major order (see above). Irregular access patterns and non-contiguous views can drastically slow down computations on arrays because of non-sequential memory access.</source>
          <target state="translated">Las matrices se almacenan contiguamente en la memoria,lo que se presta a la vectorización de la CPU y a menos accesos a la memoria debido al almacenamiento en caché.Estas son las mismas razones por las que se recomienda acceder a los arreglos en orden de columnas (véase más arriba).Los patrones de acceso irregulares y las vistas no contiguas pueden ralentizar drásticamente los cálculos en las matrices debido al acceso no secuencial a la memoria.</target>
        </trans-unit>
        <trans-unit id="2cd16e2399bb6c0b0c5a0ea05fbdc7c6bf1a6ee2" translate="yes" xml:space="preserve">
          <source>Arrays can also be directly constructed with square braces; the syntax &lt;code&gt;[A, B, C, ...]&lt;/code&gt; creates a one dimensional array (i.e., a vector) containing the comma-separated arguments as its elements. The element type (&lt;a href=&quot;../../base/collections/index#Base.eltype&quot;&gt;&lt;code&gt;eltype&lt;/code&gt;&lt;/a&gt;) of the resulting array is automatically determined by the types of the arguments inside the braces. If all the arguments are the same type, then that is its &lt;code&gt;eltype&lt;/code&gt;. If they all have a common &lt;a href=&quot;../conversion-and-promotion/index#conversion-and-promotion&quot;&gt;promotion type&lt;/a&gt; then they get converted to that type using &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt; and that type is the array's &lt;code&gt;eltype&lt;/code&gt;. Otherwise, a heterogeneous array that can hold anything &amp;mdash; a &lt;code&gt;Vector{Any}&lt;/code&gt; &amp;mdash; is constructed; this includes the literal &lt;code&gt;[]&lt;/code&gt; where no arguments are given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804cb53914986dde77e394241b65af0a2493a576" translate="yes" xml:space="preserve">
          <source>Arrays can be constructed and also concatenated using the following functions:</source>
          <target state="translated">Las matrices pueden ser construidas y también concatenadas usando las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="9a14bfc250b9401c09f27dc8758fb64c6d1849ec" translate="yes" xml:space="preserve">
          <source>Arrays can easily be sorted according to an arbitrary transformation of their values:</source>
          <target state="translated">Las matrices pueden ser fácilmente clasificadas según una transformación arbitraria de sus valores:</target>
        </trans-unit>
        <trans-unit id="aa747a7d1d6f608a0335baa21f343f3341f91936" translate="yes" xml:space="preserve">
          <source>Arrays containing missing values can be created like other arrays</source>
          <target state="translated">Las matrices que contienen valores perdidos pueden ser creadas como otras matrices</target>
        </trans-unit>
        <trans-unit id="ca4d2abddb6904030658a8e61f4450fbbd938fdf" translate="yes" xml:space="preserve">
          <source>Arrays of &lt;code&gt;CartesianIndex{N}&lt;/code&gt; (see below for more details)</source>
          <target state="translated">Matrices de &lt;code&gt;CartesianIndex{N}&lt;/code&gt; (consulte a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles)</target>
        </trans-unit>
        <trans-unit id="075c9f606a29f390bc16b51c28be22f3d814f931" translate="yes" xml:space="preserve">
          <source>Arrays of &lt;code&gt;CartesianIndex{N}&lt;/code&gt; are also supported. They represent a collection of scalar indices that each span &lt;code&gt;N&lt;/code&gt; dimensions, enabling a form of indexing that is sometimes referred to as pointwise indexing. For example, it enables accessing the diagonal elements from the first &quot;page&quot; of &lt;code&gt;A&lt;/code&gt; from above:</source>
          <target state="translated">Tambi&amp;eacute;n se admiten matrices de &lt;code&gt;CartesianIndex{N}&lt;/code&gt; . Representan una colecci&amp;oacute;n de &amp;iacute;ndices escalares que cada uno abarca &lt;code&gt;N&lt;/code&gt; dimensiones, lo que permite una forma de indexaci&amp;oacute;n que a veces se denomina indexaci&amp;oacute;n puntual. Por ejemplo, permite acceder a los elementos diagonales desde la primera &quot;p&amp;aacute;gina&quot; de &lt;code&gt;A&lt;/code&gt; desde arriba:</target>
        </trans-unit>
        <trans-unit id="3d6407685d9a3a1c2957e4566ba6f78f8b15e030" translate="yes" xml:space="preserve">
          <source>Arrays of booleans, which select elements at their &lt;code&gt;true&lt;/code&gt; indices (see below for more details)</source>
          <target state="translated">Matrices de valores booleanos, que seleccionan elementos en sus &amp;iacute;ndices &lt;code&gt;true&lt;/code&gt; (consulte a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles)</target>
        </trans-unit>
        <trans-unit id="36fa144c795f904dbf232a8e653525a3d0ba71b7" translate="yes" xml:space="preserve">
          <source>Arrays of parameters can be expressed with &lt;code&gt;NTuple&lt;/code&gt;. For example, the struct in C notation written as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0969583730964394602b74ac92dacfa507bac99b" translate="yes" xml:space="preserve">
          <source>Arrays of parameters can be expressed with &lt;code&gt;NTuple&lt;/code&gt;:</source>
          <target state="translated">Las matrices de par&amp;aacute;metros se pueden expresar con &lt;code&gt;NTuple&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7c5854ca021fe589728b87432b4e259d1c8248d3" translate="yes" xml:space="preserve">
          <source>Arrays of plain data types exhibit the same behavior.</source>
          <target state="translated">Los conjuntos de tipos de datos simples exhiben el mismo comportamiento.</target>
        </trans-unit>
        <trans-unit id="6f655e915f910f157fee32ed03ecdc2ad3b9d1df" translate="yes" xml:space="preserve">
          <source>Arrays of unknown size (C99-compliant variable length structs specified by &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;[0]&lt;/code&gt;) are not directly supported. Often the best way to deal with these is to deal with the byte offsets directly. For example, if a C library declared a proper string type and returned a pointer to it:</source>
          <target state="translated">Las matrices de tama&amp;ntilde;o desconocido (estructuras de longitud variable compatibles con C99 especificadas por &lt;code&gt;[]&lt;/code&gt; o &lt;code&gt;[0]&lt;/code&gt; ) no se admiten directamente. A menudo, la mejor manera de lidiar con esto es lidiar con las compensaciones de bytes directamente. Por ejemplo, si una biblioteca de C declar&amp;oacute; un tipo de cadena adecuado y le devolvi&amp;oacute; un puntero:</target>
        </trans-unit>
        <trans-unit id="0a4fe1e9982ed026b7b75e0b6640d07c49b347a1" translate="yes" xml:space="preserve">
          <source>Arrow Pointing Rightwards Then Curving Downwards</source>
          <target state="translated">La flecha apunta hacia la derecha y luego se curva hacia abajo</target>
        </trans-unit>
        <trans-unit id="d5a8479391be26e8e773c26793b7bf6d542adbb0" translate="yes" xml:space="preserve">
          <source>Arrow Pointing Rightwards Then Curving Upwards</source>
          <target state="translated">La flecha apunta hacia la derecha y luego se curva hacia arriba</target>
        </trans-unit>
        <trans-unit id="56cbb3f16cd1ca93b5689f5cddec6758302ebb86" translate="yes" xml:space="preserve">
          <source>Arthur C. Clarke, &lt;em&gt;Profiles of the Future&lt;/em&gt; (1961): Clarke's Third Law.</source>
          <target state="translated">Arthur C. Clarke, &lt;em&gt;Perfiles del futuro&lt;/em&gt; (1961): Tercera ley de Clarke.</target>
        </trans-unit>
        <trans-unit id="4be4b541c7c3be1117af5726c8607678780b96ca" translate="yes" xml:space="preserve">
          <source>Articulated Lorry</source>
          <target state="translated">Camión articulado</target>
        </trans-unit>
        <trans-unit id="b1aa57e2147913434d8d33e99a2a302c3d412560" translate="yes" xml:space="preserve">
          <source>Artist Palette</source>
          <target state="translated">Paleta de artistas</target>
        </trans-unit>
        <trans-unit id="07d39beaf4ec4f6ab344410b6e2ddcbafeee07b5" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;missing&lt;/code&gt; is a normal Julia object, this propagation rule only works for functions which have opted in to implement this behavior. This can be achieved either via a specific method defined for arguments of type &lt;code&gt;Missing&lt;/code&gt;, or simply by accepting arguments of this type, and passing them to functions which propagate them (like standard math operators). Packages should consider whether it makes sense to propagate missing values when defining new functions, and define methods appropriately if that is the case. Passing a &lt;code&gt;missing&lt;/code&gt; value to a function for which no method accepting arguments of type &lt;code&gt;Missing&lt;/code&gt; is defined throws a &lt;a href=&quot;../../base/base/index#Core.MethodError&quot;&gt;&lt;code&gt;MethodError&lt;/code&gt;&lt;/a&gt;, just like for any other type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b55172c20f3a3018d935f94f15f420d19dd799" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;missing&lt;/code&gt; is a normal Julia object, this propagation rule only works for functions which have opted in to implement this behavior. This can be achieved either via a specific method defined for arguments of type &lt;code&gt;Missing&lt;/code&gt;, or simply by accepting arguments of this type, and passing them to functions which propagate them (like standard operators). Packages should consider whether it makes sense to propagate missing values when defining new functions, and define methods appropriately if that is the case. Passing a &lt;code&gt;missing&lt;/code&gt; value to a function for which no method accepting arguments of type &lt;code&gt;Missing&lt;/code&gt; is defined throws a &lt;a href=&quot;../../base/base/index#Core.MethodError&quot;&gt;&lt;code&gt;MethodError&lt;/code&gt;&lt;/a&gt;, just like for any other type.</source>
          <target state="translated">Como &lt;code&gt;missing&lt;/code&gt; un objeto de Julia normal, esta regla de propagaci&amp;oacute;n solo funciona para funciones que han optado por implementar este comportamiento. Esto se puede lograr mediante un m&amp;eacute;todo espec&amp;iacute;fico definido para argumentos de tipo &lt;code&gt;Missing&lt;/code&gt; , o simplemente aceptando argumentos de este tipo y pas&amp;aacute;ndolos a funciones que los propagan (como operadores est&amp;aacute;ndar). Los paquetes deben considerar si tiene sentido propagar los valores perdidos al definir nuevas funciones y definir m&amp;eacute;todos de manera apropiada si ese es el caso. Pasar un valor &lt;code&gt;missing&lt;/code&gt; a una funci&amp;oacute;n para la cual no se define ning&amp;uacute;n m&amp;eacute;todo que acepte argumentos de tipo &lt;code&gt;Missing&lt;/code&gt; arroja un &lt;a href=&quot;../../base/base/index#Core.MethodError&quot;&gt; &lt;code&gt;MethodError&lt;/code&gt; &lt;/a&gt; , al igual que para cualquier otro tipo.</target>
        </trans-unit>
        <trans-unit id="6c7f12d083082a8b358b33648f5e922218bf6328" translate="yes" xml:space="preserve">
          <source>As Julia &lt;a href=&quot;#Dates.Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; values are represented according to the ISO 8601 standard, &lt;code&gt;0000-01-01T00:00:00&lt;/code&gt; was chosen as base (or &quot;rounding epoch&quot;) from which to begin the count of days (and milliseconds) used in rounding calculations. (Note that this differs slightly from Julia's internal representation of &lt;a href=&quot;#Dates.Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; s using Rata Die notation; but since the ISO 8601 standard is most visible to the end user, &lt;code&gt;0000-01-01T00:00:00&lt;/code&gt; was chosen as the rounding epoch instead of the &lt;code&gt;0000-12-31T00:00:00&lt;/code&gt; used internally to minimize confusion.)</source>
          <target state="translated">Como los valores de Julia &lt;a href=&quot;#Dates.Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#Dates.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; se representan de acuerdo con la norma ISO 8601, se &lt;code&gt;0000-01-01T00:00:00&lt;/code&gt; como base (o &quot;&amp;eacute;poca de redondeo&quot;) a partir de la cual comenzar el recuento de d&amp;iacute;as (y milisegundos) utilizados en el redondeo. c&amp;aacute;lculos. (Tenga en cuenta que esto difiere ligeramente de la representaci&amp;oacute;n interna de Julia de &lt;a href=&quot;#Dates.Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; s usando la notaci&amp;oacute;n Rata Die; pero dado que el est&amp;aacute;ndar ISO 8601 es m&amp;aacute;s visible para el usuario final, se &lt;code&gt;0000-01-01T00:00:00&lt;/code&gt; como la &amp;eacute;poca de redondeo en lugar de la &lt;code&gt;0000-12-31T00:00:00&lt;/code&gt; utilizado internamente para minimizar la confusi&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="018f199ee4bce38a37225bf7cf902f1a94cfebe8" translate="yes" xml:space="preserve">
          <source>As a bonus, all period arithmetic objects work directly with ranges:</source>
          <target state="translated">Como bonus,todos los objetos aritméticos del período trabajan directamente con rangos:</target>
        </trans-unit>
        <trans-unit id="1d37396b19dff556a9f0928d3fb79a1f9a87b4bb" translate="yes" xml:space="preserve">
          <source>As a complete but simple example, the following calls the &lt;code&gt;clock&lt;/code&gt; function from the standard C library on most Unix-derived systems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d0293122d46f12e2772f00b98fe234a30f7099" translate="yes" xml:space="preserve">
          <source>As a complete but simple example, the following calls the &lt;code&gt;clock&lt;/code&gt; function from the standard C library:</source>
          <target state="translated">Como ejemplo completo pero simple, lo siguiente llama a la funci&amp;oacute;n de &lt;code&gt;clock&lt;/code&gt; de la biblioteca C est&amp;aacute;ndar:</target>
        </trans-unit>
        <trans-unit id="539ad19d9070448cc3bfdfe89f4f38e027fe5c6c" translate="yes" xml:space="preserve">
          <source>As a convenience, constructing a &lt;code&gt;CartesianIndices&lt;/code&gt; from an array makes a range of its indices.</source>
          <target state="translated">Para su comodidad, la construcci&amp;oacute;n de &amp;iacute;ndices &lt;code&gt;CartesianIndices&lt;/code&gt; partir de una matriz genera un rango de sus &amp;iacute;ndices.</target>
        </trans-unit>
        <trans-unit id="0b5625230c61073f2e6e2ee043f6240a0a3c7016" translate="yes" xml:space="preserve">
          <source>As a general rule, the Base library uses the following order of arguments to functions, as applicable:</source>
          <target state="translated">Como regla general,la biblioteca de la Base utiliza el siguiente orden de argumentos a las funciones,según corresponda:</target>
        </trans-unit>
        <trans-unit id="0aeaa033e5a0e531782e60f4be3543a306118072" translate="yes" xml:space="preserve">
          <source>As a heuristic, Julia avoids automatically specializing on argument type parameters in three specific cases: &lt;code&gt;Type&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, and &lt;code&gt;Vararg&lt;/code&gt;. Julia will always specialize when the argument is used within the method, but not if the argument is just passed through to another function. This usually has no performance impact at runtime and &lt;a href=&quot;https://docs.julialang.org/en/v1.5.3/devdocs/functions/#compiler-efficiency-issues&quot;&gt;improves compiler performance&lt;/a&gt;. If you find it does have a performance impact at runtime in your case, you can trigger specialization by adding a type parameter to the method declaration. Here are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876317f2ed373be8c206ea71cf8b7c051cb11062" translate="yes" xml:space="preserve">
          <source>As a more complicated example, let's define our own toy N-dimensional sparse-like array type built on top of &lt;a href=&quot;../../base/collections/index#Base.Dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Como un ejemplo m&amp;aacute;s complicado, definamos nuestro propio tipo de matriz de juguete N-dimensional de tipo disperso construido sobre &lt;a href=&quot;../../base/collections/index#Base.Dict&quot;&gt; &lt;code&gt;Dict&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e8594cf6335bb7f066fe658c47ad7b64d5f8a844" translate="yes" xml:space="preserve">
          <source>As a more extended and complex example, consider running the following &quot;kernel&quot; in parallel:</source>
          <target state="translated">Como ejemplo más extenso y complejo,considere la posibilidad de ejecutar el siguiente &quot;núcleo&quot; en paralelo:</target>
        </trans-unit>
        <trans-unit id="abc7b3fc409ca00052233fccf9f3605c7724641a" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, the single-line &lt;code&gt;show&lt;/code&gt; method should print a valid Julia expression for creating the shown object. When this &lt;code&gt;show&lt;/code&gt; method contains infix operators, such as the multiplication operator (&lt;code&gt;*&lt;/code&gt;) in our single-line &lt;code&gt;show&lt;/code&gt; method for &lt;code&gt;Polar&lt;/code&gt; above, it may not parse correctly when printed as part of another object. To see this, consider the expression object (see &lt;a href=&quot;../metaprogramming/index#Program-representation&quot;&gt;Program representation&lt;/a&gt;) which takes the square of a specific instance of our &lt;code&gt;Polar&lt;/code&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2067a667a08ddb9964ef86bab532db4e31b7d596" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, the single-line &lt;code&gt;show&lt;/code&gt; method should print a valid Julia expression for creating the shown object. When this &lt;code&gt;show&lt;/code&gt; method contains infix operators, such as the multiplication operator (&lt;code&gt;*&lt;/code&gt;) in our single-line &lt;code&gt;show&lt;/code&gt; method for &lt;code&gt;Polar&lt;/code&gt; above, it may not parse correctly when printed as part of another object. To see this, consider the expression object (see &lt;a href=&quot;../metaprogramming/index#Program-representation-1&quot;&gt;Program representation&lt;/a&gt;) which takes the square of a specific instance of our &lt;code&gt;Polar&lt;/code&gt; type:</source>
          <target state="translated">Como regla general, el m&amp;eacute;todo &lt;code&gt;show&lt;/code&gt; de una sola l&amp;iacute;nea debe imprimir una expresi&amp;oacute;n de Julia v&amp;aacute;lida para crear el objeto mostrado. Cuando este m&amp;eacute;todo &lt;code&gt;show&lt;/code&gt; contiene operadores infijos, como el operador de multiplicaci&amp;oacute;n ( &lt;code&gt;*&lt;/code&gt; ) en nuestro m&amp;eacute;todo &lt;code&gt;show&lt;/code&gt; de una sola l&amp;iacute;nea para &lt;code&gt;Polar&lt;/code&gt; anterior, es posible que no se analice correctamente cuando se imprime como parte de otro objeto. Para ver esto, considere el objeto de expresi&amp;oacute;n (ver &lt;a href=&quot;../metaprogramming/index#Program-representation-1&quot;&gt;Representaci&amp;oacute;n del programa&lt;/a&gt; ) que toma el cuadrado de una instancia espec&amp;iacute;fica de nuestro tipo &lt;code&gt;Polar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="37e79152e5cc53d02dd6543f1f031bc76326d65b" translate="yes" xml:space="preserve">
          <source>As a special case, all names defined in &lt;code&gt;Main&lt;/code&gt; are considered &quot;exported&quot;, since it is not idiomatic to explicitly export names from &lt;code&gt;Main&lt;/code&gt;.</source>
          <target state="translated">Como caso especial, todos los nombres definidos en &lt;code&gt;Main&lt;/code&gt; se consideran &quot;exportados&quot;, ya que no es idiom&amp;aacute;tico exportar expl&amp;iacute;citamente nombres de &lt;code&gt;Main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ead86dd43c44d522a7884aedc1fd88eb5becf75" translate="yes" xml:space="preserve">
          <source>As a special case, functions can only be actually deep-copied if they are anonymous, otherwise they are just copied. The difference is only relevant in the case of closures, i.e. functions which may contain hidden internal references.</source>
          <target state="translated">Como caso especial,las funciones sólo pueden ser realmente copiadas en profundidad si son anónimas,de lo contrario sólo se copian.La diferencia sólo es relevante en el caso de los cierres,es decir,las funciones que pueden contener referencias internas ocultas.</target>
        </trans-unit>
        <trans-unit id="d76af4d473b8d2d40c642b61a1fbe0edf6927389" translate="yes" xml:space="preserve">
          <source>As a special case, if &lt;code&gt;x&lt;/code&gt; is an &lt;code&gt;AbstractString&lt;/code&gt; (for textual MIME types) or a &lt;code&gt;Vector{UInt8}&lt;/code&gt; (for binary MIME types), the &lt;code&gt;repr&lt;/code&gt; function assumes that &lt;code&gt;x&lt;/code&gt; is already in the requested &lt;code&gt;mime&lt;/code&gt; format and simply returns &lt;code&gt;x&lt;/code&gt;. This special case does not apply to the &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; MIME type. This is useful so that raw data can be passed to &lt;code&gt;display(m::MIME, x)&lt;/code&gt;.</source>
          <target state="translated">Como caso especial, si &lt;code&gt;x&lt;/code&gt; es un &lt;code&gt;AbstractString&lt;/code&gt; (para tipos MIME textuales) o un &lt;code&gt;Vector{UInt8}&lt;/code&gt; (para tipos MIME binarios), la funci&amp;oacute;n &lt;code&gt;repr&lt;/code&gt; asume que &lt;code&gt;x&lt;/code&gt; ya est&amp;aacute; en el formato &lt;code&gt;mime&lt;/code&gt; solicitado y simplemente devuelve &lt;code&gt;x&lt;/code&gt; . Este caso especial no se aplica al tipo MIME &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; . Esto es &amp;uacute;til para que los datos sin procesar se puedan pasar a la &lt;code&gt;display(m::MIME, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62d11f9f9e158c0b2c2708640ce2ac613943fd82" translate="yes" xml:space="preserve">
          <source>As a special part of this syntax, the &lt;code&gt;end&lt;/code&gt; keyword may be used to represent the last index of each dimension within the indexing brackets, as determined by the size of the innermost array being indexed. Indexing syntax without the &lt;code&gt;end&lt;/code&gt; keyword is equivalent to a call to &lt;a href=&quot;../../base/collections/index#Base.getindex&quot;&gt;&lt;code&gt;getindex&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Como parte especial de esta sintaxis, la palabra clave &lt;code&gt;end&lt;/code&gt; puede usarse para representar el &amp;uacute;ltimo &amp;iacute;ndice de cada dimensi&amp;oacute;n dentro de los corchetes de indexaci&amp;oacute;n, seg&amp;uacute;n lo determinado por el tama&amp;ntilde;o de la matriz m&amp;aacute;s interna que se indexa. La sintaxis de indexaci&amp;oacute;n sin la palabra clave &lt;code&gt;end&lt;/code&gt; es equivalente a una llamada a &lt;a href=&quot;../../base/collections/index#Base.getindex&quot;&gt; &lt;code&gt;getindex&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="bae7191c8b712d7ed7a7918d6d667ad51becb2b6" translate="yes" xml:space="preserve">
          <source>As already elaborated in &lt;a href=&quot;../../stdlib/repl/index#The-Julia-REPL&quot;&gt;The Julia REPL&lt;/a&gt;, Julia's REPL provides rich functionality that facilitates an efficient interactive workflow. Here are some tips that might further enhance your experience at the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5535efde9a5741aaf5f5e686571434213ecef6c2" translate="yes" xml:space="preserve">
          <source>As already elaborated in &lt;a href=&quot;../../stdlib/repl/index#The-Julia-REPL-1&quot;&gt;The Julia REPL&lt;/a&gt;, Julia's REPL provides rich functionality that facilitates an efficient interactive workflow. Here are some tips that might further enhance your experience at the command line.</source>
          <target state="translated">Como ya se explic&amp;oacute; en &lt;a href=&quot;../../stdlib/repl/index#The-Julia-REPL-1&quot;&gt;The Julia REPL&lt;/a&gt; , Julia's REPL proporciona una rica funcionalidad que facilita un flujo de trabajo interactivo eficiente. A continuaci&amp;oacute;n, se ofrecen algunos consejos que pueden mejorar a&amp;uacute;n m&amp;aacute;s su experiencia en la l&amp;iacute;nea de comandos.</target>
        </trans-unit>
        <trans-unit id="06e64cdbccd93a2d388ef16dd274049eaf25b515" translate="yes" xml:space="preserve">
          <source>As an alternative for very simple cases, it is possible to just create a global container of type &lt;code&gt;Vector{Any}&lt;/code&gt; and fetch the elements from that when necessary, or even to create one global variable per pointer using</source>
          <target state="translated">Como alternativa para casos muy simples, es posible crear un contenedor global de tipo &lt;code&gt;Vector{Any}&lt;/code&gt; y obtener los elementos de ese cuando sea necesario, o incluso crear una variable global por puntero usando</target>
        </trans-unit>
        <trans-unit id="d6c52d7f67846f1ec223096b1fa72569e5539d74" translate="yes" xml:space="preserve">
          <source>As an assertion to help confirm that your program works the way you expect,</source>
          <target state="translated">Como una afirmación para ayudar a confirmar que su programa funciona de la manera que usted espera,</target>
        </trans-unit>
        <trans-unit id="18c9d397fe2fae6bb521c88b045f04eec75021c6" translate="yes" xml:space="preserve">
          <source>As an example let us see how the &lt;code&gt;LocalManager&lt;/code&gt;, the manager responsible for starting workers on the same host, is implemented:</source>
          <target state="translated">Como ejemplo, veamos c&amp;oacute;mo se &lt;code&gt;LocalManager&lt;/code&gt; , el administrador responsable de iniciar a los trabajadores en el mismo host:</target>
        </trans-unit>
        <trans-unit id="5ea2f3f22affe5b0503e1b98807df2e143d66e8a" translate="yes" xml:space="preserve">
          <source>As an example of a non-TCP/IP transport, an implementation may choose to use MPI, in which case &lt;code&gt;--worker&lt;/code&gt; must NOT be specified. Instead, newly launched workers should call &lt;code&gt;init_worker(cookie)&lt;/code&gt; before using any of the parallel constructs.</source>
          <target state="translated">Como ejemplo de un transporte que no es TCP / IP, una implementaci&amp;oacute;n puede optar por utilizar MPI, en cuyo caso NO se debe especificar &lt;code&gt;--worker&lt;/code&gt; . En cambio, los trabajadores reci&amp;eacute;n lanzados deben llamar a &lt;code&gt;init_worker(cookie)&lt;/code&gt; antes de usar cualquiera de las construcciones paralelas.</target>
        </trans-unit>
        <trans-unit id="ab91e9f8f6b72a78ebd5768f4d6d25cd797012df" translate="yes" xml:space="preserve">
          <source>As an example, consider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fdf4e4340eb940fd457afeeed7b812831f6609" translate="yes" xml:space="preserve">
          <source>As an example, consider this call to &lt;a href=&quot;../../base/collections/index#Base.get&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d94b4e364183ef3f6a858e77d060fb33ee15b1a" translate="yes" xml:space="preserve">
          <source>As an example, suppose a package directory has the following structure and content:</source>
          <target state="translated">Como ejemplo,supongamos que el directorio de un paquete tiene la siguiente estructura y contenido:</target>
        </trans-unit>
        <trans-unit id="1237948f9e574bfd646187c2b196cb56c33c770b" translate="yes" xml:space="preserve">
          <source>As an example, suppose you wanted to define multiplication on symbols in a module:</source>
          <target state="translated">Como ejemplo,supongamos que quisieras definir la multiplicación en los símbolos de un módulo:</target>
        </trans-unit>
        <trans-unit id="59a193ac31c3261e6bf490ce9642a1cb05737a81" translate="yes" xml:space="preserve">
          <source>As an example, the builtin &lt;code&gt;AbstractRange&lt;/code&gt; objects use this machinery to optimize pieces of broadcasted expressions that can be eagerly evaluated purely in terms of the start, step, and length (or stop) instead of computing every single element. Just like all the other machinery, &lt;code&gt;broadcasted&lt;/code&gt; also computes and exposes the combined broadcast style of its arguments, so instead of specializing on &lt;code&gt;broadcasted(f, args...)&lt;/code&gt;, you can specialize on &lt;code&gt;broadcasted(::DestStyle, f, args...)&lt;/code&gt; for any combination of style, function, and arguments.</source>
          <target state="translated">Como ejemplo, los objetos &lt;code&gt;AbstractRange&lt;/code&gt; incorporados utilizan esta maquinaria para optimizar piezas de expresiones difundidas que pueden evaluarse con entusiasmo &amp;uacute;nicamente en t&amp;eacute;rminos de inicio, paso y longitud (o parada) en lugar de calcular cada elemento. Al igual que todas las dem&amp;aacute;s m&amp;aacute;quinas, &lt;code&gt;broadcasted&lt;/code&gt; tambi&amp;eacute;n calcula y expone el estilo de transmisi&amp;oacute;n combinado de sus argumentos, por lo que en lugar de especializarse en &lt;code&gt;broadcasted(f, args...)&lt;/code&gt; , puede especializarse en &lt;code&gt;broadcasted(::DestStyle, f, args...)&lt;/code&gt; para cualquier combinaci&amp;oacute;n de estilo, funci&amp;oacute;n y argumentos.</target>
        </trans-unit>
        <trans-unit id="dddf73cd98dcce7c884fe24956533693e61e8e3f" translate="yes" xml:space="preserve">
          <source>As an example:</source>
          <target state="translated">Como ejemplo:</target>
        </trans-unit>
        <trans-unit id="87ed434d0000a98d4576d846e0e095b93bb4582f" translate="yes" xml:space="preserve">
          <source>As an extension of this, in cases where the algorithm needs a copy of the input array, &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt; is insufficient as the return value may alias the original input. Combining &lt;a href=&quot;../../base/arrays/index#Base.similar&quot;&gt;&lt;code&gt;similar&lt;/code&gt;&lt;/a&gt; (to make the output array) and &lt;a href=&quot;../../base/c/index#Base.copyto!&quot;&gt;&lt;code&gt;copyto!&lt;/code&gt;&lt;/a&gt; (to fill it with the input data) is a generic way to express the requirement for a mutable copy of the input argument:</source>
          <target state="translated">Como una extensi&amp;oacute;n de esto, en los casos en los que el algoritmo necesita una copia de la matriz de entrada, &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt; &lt;code&gt;convert&lt;/code&gt; ir&lt;/a&gt; es insuficiente ya que el valor de retorno puede alias de la entrada original. Combinando &lt;a href=&quot;../../base/arrays/index#Base.similar&quot;&gt; &lt;code&gt;similar&lt;/code&gt; &lt;/a&gt; (para hacer la matriz de salida) y &lt;a href=&quot;../../base/c/index#Base.copyto!&quot;&gt; &lt;code&gt;copyto!&lt;/code&gt; &lt;/a&gt;(para llenarlo con los datos de entrada) es una forma gen&amp;eacute;rica de expresar el requisito de una copia mutable del argumento de entrada:</target>
        </trans-unit>
        <trans-unit id="f8ea3b19e7de523c7e9925d469ae1f1489b7d884" translate="yes" xml:space="preserve">
          <source>As another example, here is a function that doubles any numeric argument, but leaves expressions alone:</source>
          <target state="translated">Como otro ejemplo,he aquí una función que duplica cualquier argumento numérico,pero deja las expresiones en paz:</target>
        </trans-unit>
        <trans-unit id="5a98ec0590a6653411278e5178b7dfd6cf089ca2" translate="yes" xml:space="preserve">
          <source>As calculations on floating-point values can be imprecise, you can perform approximate equality checks using either &lt;code&gt;@test a &amp;asymp; b&lt;/code&gt; (where &lt;code&gt;&amp;asymp;&lt;/code&gt;, typed via tab completion of &lt;code&gt;\approx&lt;/code&gt;, is the &lt;a href=&quot;../../base/math/index#Base.isapprox&quot;&gt;&lt;code&gt;isapprox&lt;/code&gt;&lt;/a&gt; function) or use &lt;a href=&quot;../../base/math/index#Base.isapprox&quot;&gt;&lt;code&gt;isapprox&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">Como los c&amp;aacute;lculos en valores de punto flotante pueden ser imprecisos, puede realizar verificaciones de igualdad aproximadas usando &lt;code&gt;@test a &amp;asymp; b&lt;/code&gt; (donde &lt;code&gt;&amp;asymp;&lt;/code&gt; , escrito a trav&amp;eacute;s de la finalizaci&amp;oacute;n de tabulaci&amp;oacute;n de &lt;code&gt;\approx&lt;/code&gt; , es la funci&amp;oacute;n &lt;a href=&quot;../../base/math/index#Base.isapprox&quot;&gt; &lt;code&gt;isapprox&lt;/code&gt; &lt;/a&gt; ) o use &lt;a href=&quot;../../base/math/index#Base.isapprox&quot;&gt; &lt;code&gt;isapprox&lt;/code&gt; &lt;/a&gt; directamente.</target>
        </trans-unit>
        <trans-unit id="671cfcc401170439c76fc45750de84c7f63c05ee" translate="yes" xml:space="preserve">
          <source>As can be seen once again, a remote call onto the local node behaves just like a direct invocation. The call modifies local objects passed as arguments. In the remote invocation, it operates on a copy of the arguments.</source>
          <target state="translated">Como puede verse una vez más,una llamada remota al nodo local se comporta como una invocación directa.La llamada modifica los objetos locales pasados como argumentos.En la invocación remota,opera sobre una copia de los argumentos.</target>
        </trans-unit>
        <trans-unit id="3cc0d715da9528bac336fc93fd62b1b74187bec5" translate="yes" xml:space="preserve">
          <source>As can be seen, &lt;code&gt;A&lt;/code&gt; is changed to the sorted array &lt;code&gt;[-2.7, 1.3, 3.1, 4.4]&lt;/code&gt;. Note that Julia knows how to convert an array into a &lt;code&gt;Ptr{Cdouble}&lt;/code&gt;, how to compute the size of a type in bytes (identical to C's &lt;code&gt;sizeof&lt;/code&gt; operator), and so on. For fun, try inserting a &lt;code&gt;println(&quot;mycompare($a, $b)&quot;)&lt;/code&gt; line into &lt;code&gt;mycompare&lt;/code&gt;, which will allow you to see the comparisons that &lt;code&gt;qsort&lt;/code&gt; is performing (and to verify that it is really calling the Julia function that you passed to it).</source>
          <target state="translated">Como puede verse, &lt;code&gt;A&lt;/code&gt; se cambia a la matriz ordenada &lt;code&gt;[-2.7, 1.3, 3.1, 4.4]&lt;/code&gt; . Note que Julia sabe c&amp;oacute;mo convertir una matriz en un &lt;code&gt;Ptr{Cdouble}&lt;/code&gt; , c&amp;oacute;mo calcular el tama&amp;ntilde;o de un tipo en bytes (id&amp;eacute;ntico al operador &lt;code&gt;sizeof&lt;/code&gt; de C ), y as&amp;iacute; sucesivamente. Para divertirse, intente insertar una l&amp;iacute;nea &lt;code&gt;println(&quot;mycompare($a, $b)&quot;)&lt;/code&gt; en &lt;code&gt;mycompare&lt;/code&gt; , que le permitir&amp;aacute; ver las comparaciones que realiza &lt;code&gt;qsort&lt;/code&gt; (y verificar que realmente est&amp;aacute; llamando a la funci&amp;oacute;n de Julia que pas&amp;oacute; lo).</target>
        </trans-unit>
        <trans-unit id="4b96915d6aea30f8cc88503d183daf83b43b1570" translate="yes" xml:space="preserve">
          <source>As can be seen, &lt;code&gt;put!&lt;/code&gt; on a locally owned &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt; with the same object &lt;code&gt;v&lt;/code&gt; modifed between calls results in the same single object instance stored. As opposed to copies of &lt;code&gt;v&lt;/code&gt; being created when the node owning &lt;code&gt;rc&lt;/code&gt; is a different node.</source>
          <target state="translated">Como se puede ver, &lt;code&gt;put!&lt;/code&gt; en un &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt; &lt;code&gt;RemoteChannel&lt;/code&gt; de&lt;/a&gt; propiedad local con el mismo objeto &lt;code&gt;v&lt;/code&gt; modificado entre llamadas da como resultado la misma instancia de objeto &amp;uacute;nico almacenada. A diferencia de las copias de &lt;code&gt;v&lt;/code&gt; que se crean cuando el nodo que posee &lt;code&gt;rc&lt;/code&gt; es un nodo diferente.</target>
        </trans-unit>
        <trans-unit id="e253ba428da9355b11a09e17058388a067c23f87" translate="yes" xml:space="preserve">
          <source>As can be seen, global variable &lt;code&gt;A&lt;/code&gt; is defined on worker 2, but &lt;code&gt;B&lt;/code&gt; is captured as a local variable and hence a binding for &lt;code&gt;B&lt;/code&gt; does not exist on worker 2.</source>
          <target state="translated">Como puede verse, la variable global &lt;code&gt;A&lt;/code&gt; se define en el trabajador 2, pero &lt;code&gt;B&lt;/code&gt; se captura como una variable local y, por lo tanto , no existe un enlace para &lt;code&gt;B&lt;/code&gt; en el trabajador 2.</target>
        </trans-unit>
        <trans-unit id="76f93ab509f4540b19db8475dd078bd3d9ad56c4" translate="yes" xml:space="preserve">
          <source>As convenient as date-period arithmetic is, often the kinds of calculations needed on dates take on a &lt;em&gt;calendrical&lt;/em&gt; or &lt;em&gt;temporal&lt;/em&gt; nature rather than a fixed number of periods. Holidays are a perfect example; most follow rules such as &quot;Memorial Day = Last Monday of May&quot;, or &quot;Thanksgiving = 4th Thursday of November&quot;. These kinds of temporal expressions deal with rules relative to the calendar, like first or last of the month, next Tuesday, or the first and third Wednesdays, etc.</source>
          <target state="translated">Por muy conveniente que sea la aritm&amp;eacute;tica de fechas y per&amp;iacute;odos, a menudo los tipos de c&amp;aacute;lculos necesarios en las fechas adoptan una naturaleza &lt;em&gt;calend&amp;aacute;rica&lt;/em&gt; o &lt;em&gt;temporal en&lt;/em&gt; lugar de un n&amp;uacute;mero fijo de per&amp;iacute;odos. Las vacaciones son un ejemplo perfecto; la mayor&amp;iacute;a sigue reglas como &quot;D&amp;iacute;a de los Ca&amp;iacute;dos = &amp;uacute;ltimo lunes de mayo&quot; o &quot;Acci&amp;oacute;n de Gracias = 4to jueves de noviembre&quot;. Este tipo de expresiones temporales tratan con reglas relativas al calendario, como el primero o el &amp;uacute;ltimo del mes, el pr&amp;oacute;ximo martes, o el primer y tercer mi&amp;eacute;rcoles, etc.</target>
        </trans-unit>
        <trans-unit id="a1c026427d4e0f63d2dc15ae37577d2f94eafa8a" translate="yes" xml:space="preserve">
          <source>As expected we saw &quot;Hello World&quot; printed. So, let's actually analyze what happened behind the scenes. When we called &lt;code&gt;connect&lt;/code&gt;, we connect to the server we had just created. Meanwhile, the accept function returns a server-side connection to the newly created socket and prints &quot;Hello World&quot; to indicate that the connection was successful.</source>
          <target state="translated">Como era de esperar, vimos impreso &quot;Hello World&quot;. Entonces, analicemos realmente lo que sucedi&amp;oacute; detr&amp;aacute;s de escena. Cuando llamamos a &lt;code&gt;connect&lt;/code&gt; , nos conectamos al servidor que acab&amp;aacute;bamos de crear. Mientras tanto, la funci&amp;oacute;n de aceptaci&amp;oacute;n devuelve una conexi&amp;oacute;n del lado del servidor al socket reci&amp;eacute;n creado e imprime &quot;Hello World&quot; para indicar que la conexi&amp;oacute;n fue exitosa.</target>
        </trans-unit>
        <trans-unit id="a7387cbdd9f992b642e060d8d4bc6f44c8177451" translate="yes" xml:space="preserve">
          <source>As for &lt;a href=&quot;#SparseArrays.SparseMatrixCSC&quot;&gt;&lt;code&gt;SparseMatrixCSC&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;SparseVector&lt;/code&gt; type can also contain explicitly stored zeros. (See &lt;a href=&quot;#man-csc&quot;&gt;Sparse Matrix Storage&lt;/a&gt;.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb0a271b40c54ec6b4884cb957952b84f3d4f5b" translate="yes" xml:space="preserve">
          <source>As for &lt;a href=&quot;#SparseArrays.SparseMatrixCSC&quot;&gt;&lt;code&gt;SparseMatrixCSC&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;SparseVector&lt;/code&gt; type can also contain explicitly stored zeros. (See &lt;a href=&quot;#man-csc-1&quot;&gt;Sparse Matrix Storage&lt;/a&gt;.).</source>
          <target state="translated">En cuanto a &lt;a href=&quot;#SparseArrays.SparseMatrixCSC&quot;&gt; &lt;code&gt;SparseMatrixCSC&lt;/code&gt; &lt;/a&gt; , el tipo &lt;code&gt;SparseVector&lt;/code&gt; tambi&amp;eacute;n puede contener ceros almacenados expl&amp;iacute;citamente. (Consulte &lt;a href=&quot;#man-csc-1&quot;&gt;Almacenamiento de matriz dispersa&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fc146c2940c0c078ab8141567616fc6c9d0de40c" translate="yes" xml:space="preserve">
          <source>As for hexadecimal literals, binary and octal literals produce unsigned integer types. The size of the binary data item is the minimal needed size, if the leading digit of the literal is not &lt;code&gt;0&lt;/code&gt;. In the case of leading zeros, the size is determined by the minimal needed size for a literal, which has the same length but leading digit &lt;code&gt;1&lt;/code&gt;. That allows the user to control the size. Values which cannot be stored in &lt;code&gt;UInt128&lt;/code&gt; cannot be written as such literals.</source>
          <target state="translated">En cuanto a los literales hexadecimales, los literales binarios y octales producen tipos enteros sin signo. El tama&amp;ntilde;o del elemento de datos binarios es el tama&amp;ntilde;o m&amp;iacute;nimo necesario, si el d&amp;iacute;gito inicial del literal no es &lt;code&gt;0&lt;/code&gt; . En el caso de ceros iniciales, el tama&amp;ntilde;o est&amp;aacute; determinado por el tama&amp;ntilde;o m&amp;iacute;nimo necesario para un literal, que tiene la misma longitud pero el d&amp;iacute;gito inicial &lt;code&gt;1&lt;/code&gt; . Eso permite al usuario controlar el tama&amp;ntilde;o. Los valores que no se pueden almacenar en &lt;code&gt;UInt128&lt;/code&gt; no se pueden escribir como literales.</target>
        </trans-unit>
        <trans-unit id="6db8bde5f510430fc099aa246b7efd8ae6ef4908" translate="yes" xml:space="preserve">
          <source>As for numeric arrays, choosing a non-stable default algorithm for array types for which the notion of a stable sort is meaningless (i.e. when two values comparing equal can not be distinguished) may make sense.</source>
          <target state="translated">En cuanto a las matrices numéricas,puede tener sentido elegir un algoritmo no estable por defecto para los tipos de matrices para los que la noción de una clase estable no tiene sentido (es decir,cuando no se pueden distinguir dos valores que comparen iguales).</target>
        </trans-unit>
        <trans-unit id="5657074766ca713487af1f45c8fe2527e89dae0c" translate="yes" xml:space="preserve">
          <source>As for single values, use &lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt; to treat &lt;code&gt;missing&lt;/code&gt; values as equal to other &lt;code&gt;missing&lt;/code&gt; values but different from non-missing values</source>
          <target state="translated">En cuanto a los valores individuales, use &lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt; para tratar &lt;code&gt;missing&lt;/code&gt; valores perdidos como iguales a otros valores &lt;code&gt;missing&lt;/code&gt; pero diferentes de los valores no perdidos</target>
        </trans-unit>
        <trans-unit id="80909a25deba83e5c549936818feccfa43f85abd" translate="yes" xml:space="preserve">
          <source>As hinted above, one extremely useful feature of Julia is the capability to generate and manipulate Julia code within Julia itself. We have already seen one example of a function returning &lt;a href=&quot;../../base/base/index#Core.Expr&quot;&gt;&lt;code&gt;Expr&lt;/code&gt;&lt;/a&gt; objects: the &lt;a href=&quot;../../base/numbers/index#Base.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; function, which takes a string of Julia code and returns the corresponding &lt;code&gt;Expr&lt;/code&gt;. A function can also take one or more &lt;code&gt;Expr&lt;/code&gt; objects as arguments, and return another &lt;code&gt;Expr&lt;/code&gt;. Here is a simple, motivating example:</source>
          <target state="translated">Como se indic&amp;oacute; anteriormente, una caracter&amp;iacute;stica extremadamente &amp;uacute;til de Julia es la capacidad de generar y manipular el c&amp;oacute;digo de Julia dentro de la propia Julia. Ya hemos visto un ejemplo de una funci&amp;oacute;n que devuelve objetos &lt;a href=&quot;../../base/base/index#Core.Expr&quot;&gt; &lt;code&gt;Expr&lt;/code&gt; &lt;/a&gt; : la funci&amp;oacute;n &lt;a href=&quot;../../base/numbers/index#Base.parse&quot;&gt; &lt;code&gt;parse&lt;/code&gt; &lt;/a&gt; , que toma una cadena de c&amp;oacute;digo Julia y devuelve el &lt;code&gt;Expr&lt;/code&gt; correspondiente . Una funci&amp;oacute;n tambi&amp;eacute;n puede tomar uno o m&amp;aacute;s objetos &lt;code&gt;Expr&lt;/code&gt; como argumentos y devolver otro &lt;code&gt;Expr&lt;/code&gt; . Aqu&amp;iacute; hay un ejemplo simple y motivador:</target>
        </trans-unit>
        <trans-unit id="0e3a8b594e44456d63d508da5257e974c3de310d" translate="yes" xml:space="preserve">
          <source>As illustrated in the above example each column of &lt;code&gt;|&lt;/code&gt; characters must be aligned vertically.</source>
          <target state="translated">Como se ilustra en el ejemplo anterior, cada columna de &lt;code&gt;|&lt;/code&gt; los caracteres deben estar alineados verticalmente.</target>
        </trans-unit>
        <trans-unit id="51316c0f471c7aa15821993b2904c54c98f59dec" translate="yes" xml:space="preserve">
          <source>As in Java, strings are immutable: the value of an &lt;code&gt;AbstractString&lt;/code&gt; object cannot be changed. To construct a different string value, you construct a new string from parts of other strings.</source>
          <target state="translated">Como en Java, las cadenas son inmutables: el valor de un objeto &lt;code&gt;AbstractString&lt;/code&gt; no se puede cambiar. Para construir un valor de cadena diferente, construye una nueva cadena a partir de partes de otras cadenas.</target>
        </trans-unit>
        <trans-unit id="10a53b8655071d9e82e3aaf67177dfbc302c86e3" translate="yes" xml:space="preserve">
          <source>As in keyword arguments, identifiers and dot expressions imply names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972bb7e6b4d2b9c22f53c9f2f7dc30a1be414e25" translate="yes" xml:space="preserve">
          <source>As in the example above, we recommend following some simple conventions when writing documentation:</source>
          <target state="translated">Como en el ejemplo anterior,recomendamos seguir algunas convenciones simples al redactar la documentación:</target>
        </trans-unit>
        <trans-unit id="a760e2170f972850310e9b6d50d6aa2fdbfb2289" translate="yes" xml:space="preserve">
          <source>As in the previous example, the first assignment to &lt;code&gt;s&lt;/code&gt; at the top of &lt;code&gt;sum_to&lt;/code&gt; causes &lt;code&gt;s&lt;/code&gt; to be a new local variable in the body of the function. The &lt;code&gt;for&lt;/code&gt; loop has its own inner local scope within the function scope. At the point where &lt;code&gt;s = s + i&lt;/code&gt; occurs, &lt;code&gt;s&lt;/code&gt; is already a local variable, so the assignment updates the existing &lt;code&gt;s&lt;/code&gt; instead of creating a new local. We can test this out by calling &lt;code&gt;sum_to&lt;/code&gt; in the REPL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42eaaebd11c27f9b1c1515d18b277f999ad14b89" translate="yes" xml:space="preserve">
          <source>As it was mentioned &lt;code&gt;CodeUnits{UInt8,String}&lt;/code&gt; type behaves like read only array of &lt;code&gt;UInt8&lt;/code&gt; and if you need a standard vector you can convert it using &lt;code&gt;Vector{UInt8}&lt;/code&gt;:</source>
          <target state="translated">Como se mencion&amp;oacute;, el tipo &lt;code&gt;CodeUnits{UInt8,String}&lt;/code&gt; comporta como una matriz de solo lectura de &lt;code&gt;UInt8&lt;/code&gt; y si necesita un vector est&amp;aacute;ndar, puede convertirlo usando &lt;code&gt;Vector{UInt8}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ba1acaea73293bc8197cce97bdfefcad05927f1a" translate="yes" xml:space="preserve">
          <source>As mentioned above, one can also define new display backends. For example, a module that can display PNG images in a window can register this capability with Julia, so that calling &lt;a href=&quot;#Base.Multimedia.display&quot;&gt;&lt;code&gt;display(x)&lt;/code&gt;&lt;/a&gt; on types with PNG representations will automatically display the image using the module's window.</source>
          <target state="translated">Como se mencion&amp;oacute; anteriormente, tambi&amp;eacute;n se pueden definir nuevos backends de pantalla. Por ejemplo, un m&amp;oacute;dulo que puede mostrar im&amp;aacute;genes PNG en una ventana puede registrar esta capacidad con Julia, de modo que llamar a &lt;a href=&quot;#Base.Multimedia.display&quot;&gt; &lt;code&gt;display(x)&lt;/code&gt; &lt;/a&gt; en tipos con representaciones PNG mostrar&amp;aacute; autom&amp;aacute;ticamente la imagen usando la ventana del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="9a3464c75addc4046f2d5407323c1df1db4f1784" translate="yes" xml:space="preserve">
          <source>As mentioned briefly in &lt;a href=&quot;../functions/index#man-functions&quot;&gt;Functions&lt;/a&gt;, optional arguments are implemented as syntax for multiple method definitions. For example, this definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb063e502e9f2dd374cf5645d0ea6281db87f213" translate="yes" xml:space="preserve">
          <source>As mentioned briefly in &lt;a href=&quot;../functions/index#man-functions-1&quot;&gt;Functions&lt;/a&gt;, optional arguments are implemented as syntax for multiple method definitions. For example, this definition:</source>
          <target state="translated">Como se menciona brevemente en &lt;a href=&quot;../functions/index#man-functions-1&quot;&gt;Funciones&lt;/a&gt; , los argumentos opcionales se implementan como sintaxis para m&amp;uacute;ltiples definiciones de m&amp;eacute;todos. Por ejemplo, esta definici&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="be2578b9d9f02697184689069f4eff8d3539a32a" translate="yes" xml:space="preserve">
          <source>As of Julia 1.5, functions defined by &lt;code&gt;@deprecate&lt;/code&gt; do not print warning when &lt;code&gt;julia&lt;/code&gt; is run without the &lt;code&gt;--depwarn=yes&lt;/code&gt; flag set, as the default value of &lt;code&gt;--depwarn&lt;/code&gt; option is &lt;code&gt;no&lt;/code&gt;. The warnings are printed from tests run by &lt;code&gt;Pkg.test()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512c2f7db98f68697b03e7fce5871064de0272a9" translate="yes" xml:space="preserve">
          <source>As of Julia 1.5, this code works without the &lt;code&gt;global&lt;/code&gt; annotation in interactive contexts like the REPL or Jupyter notebooks (just like Julia 0.6) and in files and other non-interactive contexts, it prints this very direct warning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48e9ac18414a96f1e01471c6b6626466797c864" translate="yes" xml:space="preserve">
          <source>As of this writing, the valid Unicode code points are &lt;code&gt;U+0000&lt;/code&gt; through &lt;code&gt;U+D7FF&lt;/code&gt; and &lt;code&gt;U+E000&lt;/code&gt; through &lt;code&gt;U+10FFFF&lt;/code&gt;. These have not all been assigned intelligible meanings yet, nor are they necessarily interpretable by applications, but all of these values are considered to be valid Unicode characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191e5fd5542b028418c413dac2b44eaff01d364f" translate="yes" xml:space="preserve">
          <source>As of this writing, the valid Unicode code points are &lt;code&gt;U+00&lt;/code&gt; through &lt;code&gt;U+d7ff&lt;/code&gt; and &lt;code&gt;U+e000&lt;/code&gt; through &lt;code&gt;U+10ffff&lt;/code&gt;. These have not all been assigned intelligible meanings yet, nor are they necessarily interpretable by applications, but all of these values are considered to be valid Unicode characters.</source>
          <target state="translated">En el momento de escribir estas l&amp;iacute;neas, los puntos de c&amp;oacute;digo Unicode v&amp;aacute;lidos son &lt;code&gt;U+00&lt;/code&gt; a &lt;code&gt;U+d7ff&lt;/code&gt; y &lt;code&gt;U+e000&lt;/code&gt; a &lt;code&gt;U+10ffff&lt;/code&gt; . No a todos se les han asignado todav&amp;iacute;a significados inteligibles, ni son necesariamente interpretables por aplicaciones, pero todos estos valores se consideran caracteres Unicode v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="c64e98d3602dd7e8a13d28a764d202fba2aba952" translate="yes" xml:space="preserve">
          <source>As one can see here, &lt;a href=&quot;../../base/strings/index#Base.occursin&quot;&gt;&lt;code&gt;occursin&lt;/code&gt;&lt;/a&gt; simply returns true or false, indicating whether a match for the given regex occurs in the string. Commonly, however, one wants to know not just whether a string matched, but also &lt;em&gt;how&lt;/em&gt; it matched. To capture this information about a match, use the &lt;a href=&quot;../../base/strings/index#Base.match&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; function instead:</source>
          <target state="translated">Como se puede ver aqu&amp;iacute;, &lt;a href=&quot;../../base/strings/index#Base.occursin&quot;&gt; &lt;code&gt;occursin&lt;/code&gt; &lt;/a&gt; simplemente devuelve verdadero o falso, lo que indica si se produce una coincidencia para la expresi&amp;oacute;n regular dada en la cadena. Sin embargo, por lo general, uno quiere saber no solo si una cadena coincidi&amp;oacute;, sino tambi&amp;eacute;n &lt;em&gt;c&amp;oacute;mo&lt;/em&gt; coincidi&amp;oacute;. Para capturar esta informaci&amp;oacute;n sobre una coincidencia, use la funci&amp;oacute;n de &lt;a href=&quot;../../base/strings/index#Base.match&quot;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt; lugar:</target>
        </trans-unit>
        <trans-unit id="c4a14a67f1bf4cea327a2eb12b0f80f0eef678ff" translate="yes" xml:space="preserve">
          <source>As the error states, an immediate cause of an &lt;code&gt;UndefVarError&lt;/code&gt; on a remote node is that a binding by that name does not exist. Let us explore some of the possible causes.</source>
          <target state="translated">Como indica el error, una causa inmediata de &lt;code&gt;UndefVarError&lt;/code&gt; en un nodo remoto es que no existe un enlace con ese nombre. Exploremos algunas de las posibles causas.</target>
        </trans-unit>
        <trans-unit id="1eb17e26ef0507943bf96943b437f10fc48bc317" translate="yes" xml:space="preserve">
          <source>As the example implies, the following command-line arguments to &lt;code&gt;julia&lt;/code&gt; are interpreted as command-line arguments to the program &lt;code&gt;script.jl&lt;/code&gt;, passed in the global constant &lt;code&gt;ARGS&lt;/code&gt;. The name of the script itself is passed in as the global &lt;code&gt;PROGRAM_FILE&lt;/code&gt;. Note that &lt;code&gt;ARGS&lt;/code&gt; is also set when a Julia expression is given using the &lt;code&gt;-e&lt;/code&gt; option on the command line (see the &lt;code&gt;julia&lt;/code&gt; help output below) but &lt;code&gt;PROGRAM_FILE&lt;/code&gt; will be empty. For example, to just print the arguments given to a script, you could do this:</source>
          <target state="translated">Como lo implica el ejemplo, los siguientes argumentos de l&amp;iacute;nea de comandos para &lt;code&gt;julia&lt;/code&gt; se interpretan como argumentos de l&amp;iacute;nea de comandos para el programa &lt;code&gt;script.jl&lt;/code&gt; , pasados ​​en la constante global &lt;code&gt;ARGS&lt;/code&gt; . El nombre del script en s&amp;iacute; se pasa como &lt;code&gt;PROGRAM_FILE&lt;/code&gt; global . Tenga en cuenta que &lt;code&gt;ARGS&lt;/code&gt; tambi&amp;eacute;n se establece cuando se proporciona una expresi&amp;oacute;n de Julia usando la opci&amp;oacute;n &lt;code&gt;-e&lt;/code&gt; en la l&amp;iacute;nea de comando (vea la salida de ayuda de &lt;code&gt;julia&lt;/code&gt; a continuaci&amp;oacute;n) pero &lt;code&gt;PROGRAM_FILE&lt;/code&gt; estar&amp;aacute; vac&amp;iacute;o. Por ejemplo, para imprimir los argumentos dados a un script, puede hacer esto:</target>
        </trans-unit>
        <trans-unit id="109c1f4fb3ce88e11db771658301b6b14b390770" translate="yes" xml:space="preserve">
          <source>As the example shows, the original Julia array &lt;code&gt;A&lt;/code&gt; has now been sorted: &lt;code&gt;[-2.7, 1.3, 3.1, 4.4]&lt;/code&gt;. Note that Julia &lt;a href=&quot;#automatic-type-conversion&quot;&gt;takes care of converting the array to a &lt;code&gt;Ptr{Cdouble}&lt;/code&gt;&lt;/a&gt;), computing the size of the element type in bytes, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981be6ff2cc90e0e705ac3383fc828a6dbdc7827" translate="yes" xml:space="preserve">
          <source>As this example shows, the element type of such arrays is &lt;code&gt;Union{Missing, T}&lt;/code&gt;, with &lt;code&gt;T&lt;/code&gt; the type of the non-missing values. This simply reflects the fact that array entries can be either of type &lt;code&gt;T&lt;/code&gt; (here, &lt;code&gt;Int64&lt;/code&gt;) or of type &lt;code&gt;Missing&lt;/code&gt;. This kind of array uses an efficient memory storage equivalent to an &lt;code&gt;Array{T}&lt;/code&gt; holding the actual values combined with an &lt;code&gt;Array{UInt8}&lt;/code&gt; indicating the type of the entry (i.e. whether it is &lt;code&gt;Missing&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt;).</source>
          <target state="translated">Como muestra este ejemplo, el tipo de elemento de tales matrices es &lt;code&gt;Union{Missing, T}&lt;/code&gt; , con &lt;code&gt;T&lt;/code&gt; el tipo de los valores no perdidos. Esto simplemente refleja el hecho de que las entradas de la matriz pueden ser de tipo &lt;code&gt;T&lt;/code&gt; (aqu&amp;iacute;, &lt;code&gt;Int64&lt;/code&gt; ) o de tipo &lt;code&gt;Missing&lt;/code&gt; . Este tipo de matriz utiliza un almacenamiento de memoria eficiente equivalente a una &lt;code&gt;Array{T}&lt;/code&gt; contiene los valores reales combinados con una &lt;code&gt;Array{UInt8}&lt;/code&gt; indica el tipo de entrada (es decir, si es &lt;code&gt;Missing&lt;/code&gt; o &lt;code&gt;T&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ed6ee60a4bf819b8376da694ce11cd02fe61b3bd" translate="yes" xml:space="preserve">
          <source>As usual, the absolute value (&lt;a href=&quot;../../base/math/index#Base.abs&quot;&gt;&lt;code&gt;abs&lt;/code&gt;&lt;/a&gt;) of a complex number is its distance from zero. &lt;a href=&quot;../../base/math/index#Base.abs2&quot;&gt;&lt;code&gt;abs2&lt;/code&gt;&lt;/a&gt; gives the square of the absolute value, and is of particular use for complex numbers since it avoids taking a square root. &lt;a href=&quot;../../base/math/index#Base.angle&quot;&gt;&lt;code&gt;angle&lt;/code&gt;&lt;/a&gt; returns the phase angle in radians (also known as the &lt;em&gt;argument&lt;/em&gt; or &lt;em&gt;arg&lt;/em&gt; function). The full gamut of other &lt;a href=&quot;../mathematical-operations/index#Elementary-Functions&quot;&gt;Elementary Functions&lt;/a&gt; is also defined for complex numbers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38e97b2426f385efa12439902693dc14bf8618f" translate="yes" xml:space="preserve">
          <source>As usual, the absolute value (&lt;a href=&quot;../../base/math/index#Base.abs&quot;&gt;&lt;code&gt;abs&lt;/code&gt;&lt;/a&gt;) of a complex number is its distance from zero. &lt;a href=&quot;../../base/math/index#Base.abs2&quot;&gt;&lt;code&gt;abs2&lt;/code&gt;&lt;/a&gt; gives the square of the absolute value, and is of particular use for complex numbers since it avoids taking a square root. &lt;a href=&quot;../../base/math/index#Base.angle&quot;&gt;&lt;code&gt;angle&lt;/code&gt;&lt;/a&gt; returns the phase angle in radians (also known as the &lt;em&gt;argument&lt;/em&gt; or &lt;em&gt;arg&lt;/em&gt; function). The full gamut of other &lt;a href=&quot;../mathematical-operations/index#Elementary-Functions-1&quot;&gt;Elementary Functions&lt;/a&gt; is also defined for complex numbers:</source>
          <target state="translated">Como de costumbre, el valor absoluto ( &lt;a href=&quot;../../base/math/index#Base.abs&quot;&gt; &lt;code&gt;abs&lt;/code&gt; &lt;/a&gt; ) de un n&amp;uacute;mero complejo es su distancia desde cero. &lt;a href=&quot;../../base/math/index#Base.abs2&quot;&gt; &lt;code&gt;abs2&lt;/code&gt; &lt;/a&gt; da el cuadrado del valor absoluto y es de especial utilidad para n&amp;uacute;meros complejos, ya que evita sacar una ra&amp;iacute;z cuadrada. &lt;a href=&quot;../../base/math/index#Base.angle&quot;&gt; &lt;code&gt;angle&lt;/code&gt; &lt;/a&gt; devuelve el &amp;aacute;ngulo de fase en radianes (tambi&amp;eacute;n conocido como &lt;em&gt;argumento&lt;/em&gt; o funci&amp;oacute;n &lt;em&gt;arg&lt;/em&gt; ). La gama completa de otras &lt;a href=&quot;../mathematical-operations/index#Elementary-Functions-1&quot;&gt;funciones elementales&lt;/a&gt; tambi&amp;eacute;n se define para n&amp;uacute;meros complejos:</target>
        </trans-unit>
        <trans-unit id="b6a7588d6f9c25c0288fa6f4060bf2933853ea1a" translate="yes" xml:space="preserve">
          <source>As usual, the promotion system makes interactions with other numeric types effortless:</source>
          <target state="translated">Como de costumbre,el sistema de promoción hace que las interacciones con otros tipos numéricos se realicen sin esfuerzo:</target>
        </trans-unit>
        <trans-unit id="0ac972252ac8a4d2677fb97cc60dc48ab7bb4888" translate="yes" xml:space="preserve">
          <source>As usual, this does not bring &lt;code&gt;DummyModule&lt;/code&gt; into scope on any of the process, which requires &lt;code&gt;using&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt;. Moreover, when &lt;code&gt;DummyModule&lt;/code&gt; is brought into scope on one process, it is not on any other:</source>
          <target state="translated">Como es habitual, esto no hace que &lt;code&gt;DummyModule&lt;/code&gt; entre en el &amp;aacute;mbito de ninguno de los procesos, que requieren el &lt;code&gt;using&lt;/code&gt; o la &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n . Adem&amp;aacute;s, cuando &lt;code&gt;DummyModule&lt;/code&gt; entra en el &amp;aacute;mbito de un proceso, no lo est&amp;aacute; en ning&amp;uacute;n otro:</target>
        </trans-unit>
        <trans-unit id="98525fef666cf45bd35cbb0c018ea8c9988be2ad" translate="yes" xml:space="preserve">
          <source>As we have seen in &lt;a href=&quot;../calling-c-and-fortran-code/index#Calling-C-and-Fortran-Code&quot;&gt;Calling C and Fortran Code&lt;/a&gt;, Julia has a simple and efficient way to call functions written in C. But there are situations where the opposite is needed: calling Julia function from C code. This can be used to integrate Julia code into a larger C/C++ project, without the need to rewrite everything in C/C++. Julia has a C API to make this possible. As almost all programming languages have some way to call C functions, the Julia C API can also be used to build further language bridges (e.g. calling Julia from Python or C#).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ffd73a9506b0079b3703beb529178a185c5762" translate="yes" xml:space="preserve">
          <source>As we have seen in &lt;a href=&quot;../calling-c-and-fortran-code/index#Calling-C-and-Fortran-Code-1&quot;&gt;Calling C and Fortran Code&lt;/a&gt;, Julia has a simple and efficient way to call functions written in C. But there are situations where the opposite is needed: calling Julia function from C code. This can be used to integrate Julia code into a larger C/C++ project, without the need to rewrite everything in C/C++. Julia has a C API to make this possible. As almost all programming languages have some way to call C functions, the Julia C API can also be used to build further language bridges (e.g. calling Julia from Python or C#).</source>
          <target state="translated">Como hemos visto en &lt;a href=&quot;../calling-c-and-fortran-code/index#Calling-C-and-Fortran-Code-1&quot;&gt;Calling C y Fortran Code&lt;/a&gt; , Julia tiene una forma simple y eficiente de llamar a funciones escritas en C. Pero hay situaciones en las que se necesita lo contrario: llamar a la funci&amp;oacute;n Julia desde c&amp;oacute;digo C. Esto se puede utilizar para integrar el c&amp;oacute;digo de Julia en un proyecto C / C ++ m&amp;aacute;s grande, sin la necesidad de reescribir todo en C / C ++. Julia tiene una API C para hacer esto posible. Como casi todos los lenguajes de programaci&amp;oacute;n tienen alguna forma de llamar a funciones C, la API de Julia C tambi&amp;eacute;n se puede utilizar para construir m&amp;aacute;s puentes de lenguaje (por ejemplo, llamar a Julia desde Python o C #).</target>
        </trans-unit>
        <trans-unit id="82c0a21a8d879f7a5c7272f023db6b90d1239835" translate="yes" xml:space="preserve">
          <source>As we have seen, Julia objects are represented in C as pointers. This raises the question of who is responsible for freeing these objects.</source>
          <target state="translated">Como hemos visto,los objetos de Julia se representan en C como punteros.Esto plantea la pregunta de quién es el responsable de liberar estos objetos.</target>
        </trans-unit>
        <trans-unit id="8632fecc892c2a5175874dd3d5957b71b599c90f" translate="yes" xml:space="preserve">
          <source>As we have seen, a typical parametric type has inner constructors that are called when type parameters are known; e.g. they apply to &lt;code&gt;Point{Int}&lt;/code&gt; but not to &lt;code&gt;Point&lt;/code&gt;. Optionally, outer constructors that determine type parameters automatically can be added, for example constructing a &lt;code&gt;Point{Int}&lt;/code&gt; from the call &lt;code&gt;Point(1,2)&lt;/code&gt;. Outer constructors call inner constructors to actually make instances. However, in some cases one would rather not provide inner constructors, so that specific type parameters cannot be requested manually.</source>
          <target state="translated">Como hemos visto, un tipo param&amp;eacute;trico t&amp;iacute;pico tiene constructores internos que se llaman cuando se conocen los par&amp;aacute;metros de tipo; por ejemplo, se aplican al &lt;code&gt;Point{Int}&lt;/code&gt; pero no al &lt;code&gt;Point&lt;/code&gt; . Opcionalmente, se pueden agregar constructores externos que determinan los par&amp;aacute;metros de tipo autom&amp;aacute;ticamente, por ejemplo construyendo un &lt;code&gt;Point{Int}&lt;/code&gt; desde el &lt;code&gt;Point(1,2)&lt;/code&gt; llamada (1,2) . Los constructores externos llaman a los constructores internos para crear instancias. Sin embargo, en algunos casos, es preferible no proporcionar constructores internos, por lo que los par&amp;aacute;metros de tipo espec&amp;iacute;ficos no se pueden solicitar manualmente.</target>
        </trans-unit>
        <trans-unit id="92ef7f3ff78c47fd1600b930f6d1226b1a4419f4" translate="yes" xml:space="preserve">
          <source>As we have seen, such expressions support interpolation with &lt;code&gt;$&lt;/code&gt;. However, in some situations it is necessary to quote code &lt;em&gt;without&lt;/em&gt; performing interpolation. This kind of quoting does not yet have syntax, but is represented internally as an object of type &lt;code&gt;QuoteNode&lt;/code&gt;. The parser yields &lt;code&gt;QuoteNode&lt;/code&gt;s for simple quoted items like symbols:</source>
          <target state="translated">Como hemos visto, estas expresiones admiten la interpolaci&amp;oacute;n con &lt;code&gt;$&lt;/code&gt; . Sin embargo, en algunas situaciones es necesario citar el c&amp;oacute;digo &lt;em&gt;sin&lt;/em&gt; realizar la interpolaci&amp;oacute;n. Este tipo de citas a&amp;uacute;n no tiene sintaxis, pero se representa internamente como un objeto de tipo &lt;code&gt;QuoteNode&lt;/code&gt; . El analizador genera &lt;code&gt;QuoteNode&lt;/code&gt; s para elementos entre comillas simples, como s&amp;iacute;mbolos:</target>
        </trans-unit>
        <trans-unit id="8358ced5c8aa8043f6548995886cf6fc9b1c22a3" translate="yes" xml:space="preserve">
          <source>As we have seen, such expressions support interpolation with &lt;code&gt;$&lt;/code&gt;. However, in some situations it is necessary to quote code &lt;em&gt;without&lt;/em&gt; performing interpolation. This kind of quoting does not yet have syntax, but is represented internally as an object of type &lt;code&gt;QuoteNode&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe3955e5cc39192c40411a547d67109141fbd1c" translate="yes" xml:space="preserve">
          <source>As we will see next, boxing is required to call Julia functions with specific arguments.</source>
          <target state="translated">Como veremos a continuación,el boxeo se requiere para llamar a Julia funciones con argumentos específicos.</target>
        </trans-unit>
        <trans-unit id="b53a534247af6d63db181fe8ad6536af06cae1ff" translate="yes" xml:space="preserve">
          <source>As well as information about the &lt;a href=&quot;#Dates.TimeType&quot;&gt;&lt;code&gt;TimeType&lt;/code&gt;&lt;/a&gt;'s year and quarter:</source>
          <target state="translated">Adem&amp;aacute;s de informaci&amp;oacute;n sobre el a&amp;ntilde;o y trimestre del &lt;a href=&quot;#Dates.TimeType&quot;&gt; &lt;code&gt;TimeType&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="834e03682d6f73b9df03b1d3810b4934cc9cc3a8" translate="yes" xml:space="preserve">
          <source>As well as other useful operations, such as finding eigenvalues or eigenvectors:</source>
          <target state="translated">Así como otras operaciones útiles,como la búsqueda de eigenvalores o eigenvectores:</target>
        </trans-unit>
        <trans-unit id="4983ba754d4bcba44195d81235402b223d67bb4c" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ccall&lt;/code&gt;, the return type and tuple of input types must be literal constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2d2a88a78a8f4ae1b7b6c89e850d2a3f2b6a48" translate="yes" xml:space="preserve">
          <source>As with any &lt;code&gt;ccall&lt;/code&gt;, it is essential to get the argument signature exactly correct. Also, note that there is no compatibility layer that ensures the intrinsic makes sense and works on the current target, unlike the equivalent Julia functions exposed by &lt;code&gt;Core.Intrinsics&lt;/code&gt;.</source>
          <target state="translated">Al igual que con cualquier &lt;code&gt;ccall&lt;/code&gt; , es esencial que la firma del argumento sea exactamente correcta. Adem&amp;aacute;s, tenga en cuenta que no hay una capa de compatibilidad que garantice que lo intr&amp;iacute;nseco tenga sentido y funcione en el objetivo actual, a diferencia de las funciones de Julia equivalentes expuestas por &lt;code&gt;Core.Intrinsics&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f496eca34c1af36fc9e6f49533f03b24b7584356" translate="yes" xml:space="preserve">
          <source>As with incomplete objects returned from constructors, if &lt;code&gt;complete_me&lt;/code&gt; or any of its callees try to access the &lt;code&gt;data&lt;/code&gt; field of the &lt;code&gt;Lazy&lt;/code&gt; object before it has been initialized, an error will be thrown immediately.</source>
          <target state="translated">Al igual que con los objetos incompletos devueltos por los constructores, si &lt;code&gt;complete_me&lt;/code&gt; o cualquiera de sus destinatarios intenta acceder al campo de &lt;code&gt;data&lt;/code&gt; del objeto &lt;code&gt;Lazy&lt;/code&gt; antes de que se haya inicializado, se lanzar&amp;aacute; un error inmediatamente.</target>
        </trans-unit>
        <trans-unit id="206e9628ecffc277c3db7c6ada272a26870edc0c" translate="yes" xml:space="preserve">
          <source>As with literals in the previous section, if literal backticks need to be written within double backticks use an even number greater than two. Note that if a single literal backtick needs to be included within $\LaTeX$ markup then two enclosing backticks is sufficient.</source>
          <target state="translated">Al igual que con los literales de la sección anterior,si es necesario escribir literalmente dentro de los dobles,use un número par mayor que dos.Tenga en cuenta que si un solo retroceso literal necesita ser incluido dentro de $\LaTeX$ markup entonces dos retrocesos adjuntos son suficientes.</target>
        </trans-unit>
        <trans-unit id="eb071802c875eedf2628f279f3c3aa261b7f9f4a" translate="yes" xml:space="preserve">
          <source>As with other streams, use &lt;a href=&quot;../../base/io-network/index#Base.close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; to disconnect the socket:</source>
          <target state="translated">Al igual que con otros flujos, use &lt;a href=&quot;../../base/io-network/index#Base.close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; para desconectar el enchufe:</target>
        </trans-unit>
        <trans-unit id="4caebefb85f01f12aff5118bde420090e55936d8" translate="yes" xml:space="preserve">
          <source>As with variables, Unicode can also be used for function names:</source>
          <target state="translated">Al igual que con las variables,el Unicode también puede ser usado para los nombres de las funciones:</target>
        </trans-unit>
        <trans-unit id="f11a9dc367827aceb27fae5caffbfb8a44dc892b" translate="yes" xml:space="preserve">
          <source>As you can see in the examples, logging statements make no mention of where log events go or how they are processed. This is a key design feature that makes the system composable and natural for concurrent use. It does this by separating two different concerns:</source>
          <target state="translated">Como se puede ver en los ejemplos,las declaraciones de registro no mencionan adónde van los eventos de registro o cómo se procesan.Esta es una característica clave de diseño que hace que el sistema sea compostable y natural para su uso concurrente.Lo hace separando dos preocupaciones diferentes:</target>
        </trans-unit>
        <trans-unit id="4b2d88632a2082abc54ba7d8928178e89f90f7d3" translate="yes" xml:space="preserve">
          <source>As you can see, for constructor calls with explicit type parameters, the arguments are converted to the implied field types: &lt;code&gt;Point{Int64}(1,2)&lt;/code&gt; works, but &lt;code&gt;Point{Int64}(1.0,2.5)&lt;/code&gt; raises an &lt;a href=&quot;../../base/base/index#Core.InexactError&quot;&gt;&lt;code&gt;InexactError&lt;/code&gt;&lt;/a&gt; when converting &lt;code&gt;2.5&lt;/code&gt; to &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt;. When the type is implied by the arguments to the constructor call, as in &lt;code&gt;Point(1,2)&lt;/code&gt;, then the types of the arguments must agree &amp;ndash; otherwise the &lt;code&gt;T&lt;/code&gt; cannot be determined &amp;ndash; but any pair of real arguments with matching type may be given to the generic &lt;code&gt;Point&lt;/code&gt; constructor.</source>
          <target state="translated">Como puede ver, para las llamadas de constructor con par&amp;aacute;metros de tipo expl&amp;iacute;citos, los argumentos se convierten a los tipos de campo impl&amp;iacute;citos: &lt;code&gt;Point{Int64}(1,2)&lt;/code&gt; funciona, pero &lt;code&gt;Point{Int64}(1.0,2.5)&lt;/code&gt; genera un &lt;a href=&quot;../../base/base/index#Core.InexactError&quot;&gt; &lt;code&gt;InexactError&lt;/code&gt; &lt;/a&gt; al convertir &lt;code&gt;2.5&lt;/code&gt; a &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt; . Cuando el tipo est&amp;aacute; impl&amp;iacute;cito en los argumentos de la llamada al constructor, como en el &lt;code&gt;Point(1,2)&lt;/code&gt; , entonces los tipos de argumentos deben coincidir; de lo contrario, no se puede determinar la &lt;code&gt;T&lt;/code&gt; , pero se puede dar cualquier par de argumentos reales con el tipo correspondiente. al constructor &lt;code&gt;Point&lt;/code&gt; gen&amp;eacute;rico .</target>
        </trans-unit>
        <trans-unit id="5461c0708bdec655ec8f2787ade84a59cba9a62f" translate="yes" xml:space="preserve">
          <source>As you can see, if the wrong number of elements are in the splatted container, then the function call will fail, just as it would if too many arguments were given explicitly.</source>
          <target state="translated">Como se puede ver,si el número de elementos en el contenedor salpicado es incorrecto,entonces la llamada a la función fallará,al igual que si se dieran demasiados argumentos de forma explícita.</target>
        </trans-unit>
        <trans-unit id="e203af061ceae4264896923db832aa0fc04bb217" translate="yes" xml:space="preserve">
          <source>As you can see, in the first line we asked process 2 to construct a 2-by-2 random matrix, and in the second line we asked it to add 1 to it. The result of both calculations is available in the two futures, &lt;code&gt;r&lt;/code&gt; and &lt;code&gt;s&lt;/code&gt;. The &lt;a href=&quot;../../stdlib/distributed/index#Distributed.@spawnat&quot;&gt;&lt;code&gt;@spawnat&lt;/code&gt;&lt;/a&gt; macro evaluates the expression in the second argument on the process specified by the first argument.</source>
          <target state="translated">Como puede ver, en la primera l&amp;iacute;nea le pedimos al proceso 2 que construyera una matriz aleatoria de 2 por 2, y en la segunda l&amp;iacute;nea le pedimos que le sumara 1. El resultado de ambos c&amp;aacute;lculos est&amp;aacute; disponible en el dos futuros, &lt;code&gt;r&lt;/code&gt; y &lt;code&gt;s&lt;/code&gt; . La macro &lt;a href=&quot;../../stdlib/distributed/index#Distributed.@spawnat&quot;&gt; &lt;code&gt;@spawnat&lt;/code&gt; &lt;/a&gt; eval&amp;uacute;a la expresi&amp;oacute;n en el segundo argumento en el proceso especificado por el primer argumento.</target>
        </trans-unit>
        <trans-unit id="741e859119d8cfeca907f894902aa3d526d932dd" translate="yes" xml:space="preserve">
          <source>As you can see, the arguments must be precisely of type &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;. Other numeric types, such as integers or 32-bit floating-point values, are not automatically converted to 64-bit floating-point, nor are strings parsed as numbers. Because &lt;code&gt;Float64&lt;/code&gt; is a concrete type and concrete types cannot be subclassed in Julia, such a definition can only be applied to arguments that are exactly of type &lt;code&gt;Float64&lt;/code&gt;. It may often be useful, however, to write more general methods where the declared parameter types are abstract:</source>
          <target state="translated">Como puede ver, los argumentos deben ser precisamente del tipo &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt; . Otros tipos num&amp;eacute;ricos, como enteros o valores de coma flotante de 32 bits, no se convierten autom&amp;aacute;ticamente a coma flotante de 64 bits, ni las cadenas se analizan como n&amp;uacute;meros. Debido a que &lt;code&gt;Float64&lt;/code&gt; es un tipo concreto y los tipos concretos no se pueden subclasificar en Julia, dicha definici&amp;oacute;n solo se puede aplicar a argumentos que son exactamente del tipo &lt;code&gt;Float64&lt;/code&gt; . Sin embargo, a menudo puede ser &amp;uacute;til escribir m&amp;eacute;todos m&amp;aacute;s generales donde los tipos de par&amp;aacute;metros declarados son abstractos:</target>
        </trans-unit>
        <trans-unit id="359b67713bb818c1f3c296863f7d844ae4bb9a8a" translate="yes" xml:space="preserve">
          <source>As you can see, the second version, where we used an &lt;code&gt;Int&lt;/code&gt; literal, preserved the type of the input argument, while the first didn't. This is because e.g. &lt;code&gt;promote_type(Int, Float64) == Float64&lt;/code&gt;, and promotion happens with the multiplication. Similarly, &lt;a href=&quot;../../base/numbers/index#Base.Rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt; literals are less type disruptive than &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt; literals, but more disruptive than &lt;code&gt;Int&lt;/code&gt;s:</source>
          <target state="translated">Como puede ver, la segunda versi&amp;oacute;n, donde usamos un literal &lt;code&gt;Int&lt;/code&gt; , preserv&amp;oacute; el tipo del argumento de entrada, mientras que la primera no lo hizo. Esto se debe a que, por ejemplo, &lt;code&gt;promote_type(Int, Float64) == Float64&lt;/code&gt; , y la promoci&amp;oacute;n ocurre con la multiplicaci&amp;oacute;n. De manera similar, los literales &lt;a href=&quot;../../base/numbers/index#Base.Rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt; son menos disruptivos de tipo que los literales &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt; , pero m&amp;aacute;s disruptivos que los &lt;code&gt;Int&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a10e4a732e45e67918d07e124985de66438f996f" translate="yes" xml:space="preserve">
          <source>As you can see, the space in the &lt;code&gt;path&lt;/code&gt; variable is appropriately escaped. But what if you &lt;em&gt;want&lt;/em&gt; to interpolate multiple words? In that case, just use an array (or any other iterable container):</source>
          <target state="translated">Como puede ver, el espacio en la variable de &lt;code&gt;path&lt;/code&gt; se escapa de manera apropiada. Pero, &amp;iquest;y si &lt;em&gt;desea&lt;/em&gt; interpolar varias palabras? En ese caso, simplemente use una matriz (o cualquier otro contenedor iterable):</target>
        </trans-unit>
        <trans-unit id="43e3dc387959de6b7b510dc6136369a6354233c2" translate="yes" xml:space="preserve">
          <source>As you can see, the type of the appended element must match the element type of the vector it is appended to, or else a &lt;a href=&quot;../../base/base/index#Core.MethodError&quot;&gt;&lt;code&gt;MethodError&lt;/code&gt;&lt;/a&gt; is raised. In the following example, the method type parameter &lt;code&gt;T&lt;/code&gt; is used as the return value:</source>
          <target state="translated">Como puede ver, el tipo del elemento agregado debe coincidir con el tipo de elemento del vector al que est&amp;aacute; agregado, o de lo contrario se &lt;a href=&quot;../../base/base/index#Core.MethodError&quot;&gt; &lt;code&gt;MethodError&lt;/code&gt; &lt;/a&gt; un MethodError . En el siguiente ejemplo, el par&amp;aacute;metro de tipo de m&amp;eacute;todo &lt;code&gt;T&lt;/code&gt; se utiliza como valor de retorno:</target>
        </trans-unit>
        <trans-unit id="b29b566be209e38051caa728ad8f87323746dc77" translate="yes" xml:space="preserve">
          <source>As you could see, the reduction operator can be omitted if it is not needed. In that case, the loop executes asynchronously, i.e. it spawns independent tasks on all available workers and returns an array of &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; immediately without waiting for completion. The caller can wait for the &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; completions at a later point by calling &lt;code&gt;fetch&lt;/code&gt; on them, or wait for completion at the end of the loop by prefixing it with &lt;a href=&quot;../../base/parallel/index#Base.@sync&quot;&gt;&lt;code&gt;@sync&lt;/code&gt;&lt;/a&gt;, like &lt;code&gt;@sync @distributed for&lt;/code&gt;.</source>
          <target state="translated">Como puede ver, el operador de reducci&amp;oacute;n se puede omitir si no es necesario. En ese caso, el ciclo se ejecuta de forma as&amp;iacute;ncrona, es decir, genera tareas independientes en todos los trabajadores disponibles y devuelve una matriz de &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; inmediatamente sin esperar a que se complete. La persona que llama puede esperar las finalizaciones de &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; en un punto posterior llamando a &lt;code&gt;fetch&lt;/code&gt; sobre ellas, o esperar a que se complete al final del ciclo con el prefijo &lt;a href=&quot;../../base/parallel/index#Base.@sync&quot;&gt; &lt;code&gt;@sync&lt;/code&gt; &lt;/a&gt; , como &lt;code&gt;@sync @distributed for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1a150349a442b853a138e3c1fe4e3f7948f68a2" translate="yes" xml:space="preserve">
          <source>As you may have realized, while memory associated with globals may be collected when they are reassigned on the master, no such action is taken on the workers as the bindings continue to be valid. &lt;code&gt;clear!&lt;/code&gt; can be used to manually reassign specific globals on remote nodes to &lt;code&gt;nothing&lt;/code&gt; once they are no longer required. This will release any memory associated with them as part of a regular garbage collection cycle.</source>
          <target state="translated">Como se habr&amp;aacute; dado cuenta, mientras que la memoria asociada con los globales se puede recopilar cuando se reasignan en el maestro, no se realiza ninguna acci&amp;oacute;n de este tipo en los trabajadores, ya que los enlaces siguen siendo v&amp;aacute;lidos. &lt;code&gt;clear!&lt;/code&gt; se puede usar para reasignar manualmente globales espec&amp;iacute;ficos en nodos remotos a &lt;code&gt;nothing&lt;/code&gt; una vez que ya no sean necesarios. Esto liberar&amp;aacute; cualquier memoria asociada con ellos como parte de un ciclo regular de recolecci&amp;oacute;n de basura.</target>
        </trans-unit>
        <trans-unit id="dacd35c567b889475ef2a3c6c433ab70c5f4775a" translate="yes" xml:space="preserve">
          <source>Assign &lt;code&gt;x&lt;/code&gt; to a named field in &lt;code&gt;value&lt;/code&gt; of composite type. The &lt;code&gt;value&lt;/code&gt; must be mutable and &lt;code&gt;x&lt;/code&gt; must be a subtype of &lt;code&gt;fieldtype(typeof(value), name)&lt;/code&gt;. See also &lt;a href=&quot;#Base.setproperty!&quot;&gt;&lt;code&gt;setproperty!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Asigne &lt;code&gt;x&lt;/code&gt; a un campo con nombre en &lt;code&gt;value&lt;/code&gt; de tipo compuesto. El &lt;code&gt;value&lt;/code&gt; debe ser mutable y &lt;code&gt;x&lt;/code&gt; debe ser un subtipo de &lt;code&gt;fieldtype(typeof(value), name)&lt;/code&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;#Base.setproperty!&quot;&gt; &lt;code&gt;setproperty!&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="31839985af6b213c58cad9bbfe8e7aebd2198424" translate="yes" xml:space="preserve">
          <source>Assign a value to a key in the current task's task-local storage.</source>
          <target state="translated">Asignar un valor a una llave en la tarea actual de almacenamiento local.</target>
        </trans-unit>
        <trans-unit id="343021dcf6fd7efdb357d926be862e74219ddb49" translate="yes" xml:space="preserve">
          <source>Assigning &lt;code&gt;[]&lt;/code&gt; does not eliminate elements from a collection; instead use &lt;a href=&quot;../collections/index#Base.filter!&quot;&gt;&lt;code&gt;filter!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Asignar &lt;code&gt;[]&lt;/code&gt; no elimina elementos de una colecci&amp;oacute;n; en su lugar use el &lt;a href=&quot;../collections/index#Base.filter!&quot;&gt; &lt;code&gt;filter!&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6144b75b7bde706b0577dc11bf2dc87a5f571732" translate="yes" xml:space="preserve">
          <source>Assigning &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; does not create a copy of &lt;code&gt;b&lt;/code&gt;; instead use &lt;a href=&quot;#Base.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#Base.deepcopy&quot;&gt;&lt;code&gt;deepcopy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Asignar &lt;code&gt;a&lt;/code&gt; a &lt;code&gt;b&lt;/code&gt; no crea una copia de &lt;code&gt;b&lt;/code&gt; ; en su lugar, utilice &lt;a href=&quot;#Base.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt; o copia &lt;a href=&quot;#Base.deepcopy&quot;&gt; &lt;code&gt;deepcopy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07a6f2ac6ae10af3c874613ad299e2e22c70e6b5" translate="yes" xml:space="preserve">
          <source>Assigning numbers into &lt;code&gt;a&lt;/code&gt; will now convert them to &lt;code&gt;Float64&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; will be stored as a contiguous block of 64-bit floating-point values that can be manipulated efficiently.</source>
          <target state="translated">Asignar n&amp;uacute;meros a &lt;code&gt;a&lt;/code&gt; ahora los convertir&amp;aacute; a &lt;code&gt;Float64&lt;/code&gt; y &lt;code&gt;a&lt;/code&gt; se almacenar&amp;aacute; como un bloque contiguo de valores de punto flotante de 64 bits que se pueden manipular de manera eficiente.</target>
        </trans-unit>
        <trans-unit id="335227cba10c33b5a2154427c17bb8a45448ea75" translate="yes" xml:space="preserve">
          <source>Assigning to a field of an object converts to the declared type of the field.</source>
          <target state="translated">La asignación a un campo de un objeto se convierte en el tipo de campo declarado.</target>
        </trans-unit>
        <trans-unit id="ea3c536f7d8386d0d34fa46bb187211a095b9597" translate="yes" xml:space="preserve">
          <source>Assigning to a variable with a declared type (e.g. &lt;code&gt;local x::T&lt;/code&gt;) converts to that type.</source>
          <target state="translated">Asignar a una variable con un tipo declarado (por ejemplo, &lt;code&gt;local x::T&lt;/code&gt; ) convierte a ese tipo.</target>
        </trans-unit>
        <trans-unit id="4352a222d8d135ef7905c51dc5e73ca198e904f1" translate="yes" xml:space="preserve">
          <source>Assigning to an array converts to the array's element type.</source>
          <target state="translated">La asignación a una matriz se convierte en el tipo de elemento de la matriz.</target>
        </trans-unit>
        <trans-unit id="e55df441e8955746182110c3946288f381520e83" translate="yes" xml:space="preserve">
          <source>Assignment</source>
          <target state="translated">Assignment</target>
        </trans-unit>
        <trans-unit id="caee9fcfeeacb92daf3a9dd06e9024b473eac387" translate="yes" xml:space="preserve">
          <source>Assignment at out-of-bounds indices does not grow a collection. If the collection is a &lt;a href=&quot;../arrays/index#Base.Vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt; it can instead be grown with &lt;a href=&quot;../collections/index#Base.push!&quot;&gt;&lt;code&gt;push!&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../collections/index#Base.append!&quot;&gt;&lt;code&gt;append!&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La asignaci&amp;oacute;n en &amp;iacute;ndices fuera de l&amp;iacute;mites no hace crecer una colecci&amp;oacute;n. Si la colecci&amp;oacute;n es un &lt;a href=&quot;../arrays/index#Base.Vector&quot;&gt; &lt;code&gt;Vector&lt;/code&gt; ,&amp;iexcl;&lt;/a&gt; se puede cultivar con &lt;a href=&quot;../collections/index#Base.push!&quot;&gt; &lt;code&gt;push!&lt;/code&gt; &lt;/a&gt;o &lt;a href=&quot;../collections/index#Base.append!&quot;&gt; &lt;code&gt;append!&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cca9fba860c54e60aaec525df6854ad412b1850b" translate="yes" xml:space="preserve">
          <source>Assignment can operate on multiple variables in parallel, taking values from an iterable:</source>
          <target state="translated">La asignación puede operar en múltiples variables en paralelo,tomando valores de una iterable:</target>
        </trans-unit>
        <trans-unit id="729134453eca052fa22a956f1ac0e88899ca88fa" translate="yes" xml:space="preserve">
          <source>Assignment can operate on multiple variables in series, and will return the value of the right-hand-most expression:</source>
          <target state="translated">La asignación puede operar en múltiples variables en serie,y devolverá el valor de la expresión más a la derecha:</target>
        </trans-unit>
        <trans-unit id="a4c2fee77618ccc921a63bc548e408d4da3037fb" translate="yes" xml:space="preserve">
          <source>Assignment to &lt;code&gt;s&lt;/code&gt; in soft scope is ambiguous because a global variable by the same name exists: &lt;code&gt;s&lt;/code&gt; will be treated as a new local. Disambiguate by using &lt;code&gt;local s&lt;/code&gt; to suppress this warning or &lt;code&gt;global s&lt;/code&gt; to assign to the existing global variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057d58c74d80136578cabbeee1b89206c3250bd4" translate="yes" xml:space="preserve">
          <source>Assignments</source>
          <target state="translated">Assignments</target>
        </trans-unit>
        <trans-unit id="a997f01f100c5327776cf22824dbe2d9bd2208d2" translate="yes" xml:space="preserve">
          <source>Associate the lifetime of &lt;code&gt;chnl&lt;/code&gt; with a task. &lt;code&gt;Channel&lt;/code&gt;&lt;code&gt;chnl&lt;/code&gt; is automatically closed when the task terminates. Any uncaught exception in the task is propagated to all waiters on &lt;code&gt;chnl&lt;/code&gt;.</source>
          <target state="translated">Asocie la vida &amp;uacute;til de &lt;code&gt;chnl&lt;/code&gt; con una tarea. &lt;code&gt;Channel&lt;/code&gt; &lt;code&gt;chnl&lt;/code&gt; se cierra autom&amp;aacute;ticamente cuando finaliza la tarea. Cualquier excepci&amp;oacute;n no detectada en la tarea se propaga a todos los meseros en &lt;code&gt;chnl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59f2aa2b1552b74e34281b33bf3cbb05f68d9bae" translate="yes" xml:space="preserve">
          <source>Associative collections (such as &lt;code&gt;Dict&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt;) need to be re-hashed in &lt;code&gt;__init__&lt;/code&gt;. (In the future, a mechanism may be provided to register an initializer function.)</source>
          <target state="translated">Las colecciones asociativas (como &lt;code&gt;Dict&lt;/code&gt; y &lt;code&gt;Set&lt;/code&gt; ) deben volver a &lt;code&gt;__init__&lt;/code&gt; en __init__ . (En el futuro, se puede proporcionar un mecanismo para registrar una funci&amp;oacute;n de inicializaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="31eabac4e8c06c32e7c19300707a41f9f210b6ee" translate="yes" xml:space="preserve">
          <source>Assuming no method more specific than the above is found, Julia next internally defines and compiles a method called &lt;code&gt;myplus&lt;/code&gt; specifically for two &lt;code&gt;Int&lt;/code&gt; arguments based on the generic function given above, i.e., it implicitly defines and compiles:</source>
          <target state="translated">Suponiendo que no se encuentre ning&amp;uacute;n m&amp;eacute;todo m&amp;aacute;s espec&amp;iacute;fico que el anterior, Julia define y compila internamente un m&amp;eacute;todo llamado &lt;code&gt;myplus&lt;/code&gt; espec&amp;iacute;ficamente para dos argumentos &lt;code&gt;Int&lt;/code&gt; basados ​​en la funci&amp;oacute;n gen&amp;eacute;rica dada anteriormente, es decir, define y compila impl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="2717ba36a09eb99678b64bb90dc485e6b0a0d557" translate="yes" xml:space="preserve">
          <source>Asterisk Operator</source>
          <target state="translated">Operador de Asterisco</target>
        </trans-unit>
        <trans-unit id="07b5380b9f5c5fd84a32bc659548c9dfab4533bb" translate="yes" xml:space="preserve">
          <source>Astonished Face</source>
          <target state="translated">Cara de asombro</target>
        </trans-unit>
        <trans-unit id="b66ee82704200b04b4798e66b6593db1b1b13374" translate="yes" xml:space="preserve">
          <source>Asymptotically Equal To</source>
          <target state="translated">Asintóticamente igual a</target>
        </trans-unit>
        <trans-unit id="5245f726138014634759729b99de5b3247dde5eb" translate="yes" xml:space="preserve">
          <source>AsyncCondition</source>
          <target state="translated">AsyncCondition</target>
        </trans-unit>
        <trans-unit id="8eaa017d84f0d81a23063919ee4ccb624ecbac15" translate="yes" xml:space="preserve">
          <source>AsyncCondition()</source>
          <target state="translated">AsyncCondition()</target>
        </trans-unit>
        <trans-unit id="1b797bdd1bcf1af4799cd31c8e25a767ad70f14e" translate="yes" xml:space="preserve">
          <source>Asynchronous &quot;tasks&quot;, or coroutines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d88f0cd43a7c5afba791559c54e8c7a9720c83" translate="yes" xml:space="preserve">
          <source>Asynchronous IO and concurrent synchronous writes</source>
          <target state="translated">IO asíncrono y escritura síncrona concurrente</target>
        </trans-unit>
        <trans-unit id="8148eff566285bcd48743fb742f972c7a1dd962f" translate="yes" xml:space="preserve">
          <source>Asynchronous Programming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61dfe1b51eb0bad1bc9d8b0b12b232b76aa4667" translate="yes" xml:space="preserve">
          <source>At &lt;code&gt;-O3&lt;/code&gt;, the compiler &lt;em&gt;might&lt;/em&gt; automatically vectorize operations on such tuples. For example, the following program, when compiled with &lt;code&gt;julia -O3&lt;/code&gt; generates two SIMD addition instructions (&lt;code&gt;addps&lt;/code&gt;) on x86 systems:</source>
          <target state="translated">En &lt;code&gt;-O3&lt;/code&gt; , el compilador &lt;em&gt;puede&lt;/em&gt; vectorizar autom&amp;aacute;ticamente las operaciones en dichas tuplas. Por ejemplo, el siguiente programa, cuando se compila con &lt;code&gt;julia -O3&lt;/code&gt; genera dos instrucciones de adici&amp;oacute;n SIMD ( &lt;code&gt;addps&lt;/code&gt; ) en sistemas x86:</target>
        </trans-unit>
        <trans-unit id="eb9e6602f2f530b7763a4fc47a789b6bcda1d592" translate="yes" xml:space="preserve">
          <source>At a high-level, each environment conceptually defines three maps: roots, graph and paths. When resolving the meaning of &lt;code&gt;import X&lt;/code&gt;, the roots and graph maps are used to determine the identity of &lt;code&gt;X&lt;/code&gt;, while the paths map is used to locate the source code of &lt;code&gt;X&lt;/code&gt;. The specific roles of the three maps are:</source>
          <target state="translated">En un nivel alto, cada entorno define conceptualmente tres mapas: ra&amp;iacute;ces, gr&amp;aacute;fico y rutas. Al resolver el significado de &lt;code&gt;import X&lt;/code&gt; , las ra&amp;iacute;ces y las correlaciones de gr&amp;aacute;ficos se utilizan para determinar la identidad de &lt;code&gt;X&lt;/code&gt; , mientras que el mapa caminos se utiliza para localizar el c&amp;oacute;digo fuente de &lt;code&gt;X&lt;/code&gt; . Los roles espec&amp;iacute;ficos de los tres mapas son:</target>
        </trans-unit>
        <trans-unit id="1f9ae804041641dde19215ce7dbf17a3259634a7" translate="yes" xml:space="preserve">
          <source>At first blush, this seems reasonable enough since 9223372036854775807 is much closer to 9223372036854775808 than -9223372036854775808 is and integers are still represented with a fixed size in a natural way that is compatible with C and Fortran. Saturated integer arithmetic, however, is deeply problematic. The first and most obvious issue is that this is not the way machine integer arithmetic works, so implementing saturated operations requires emitting instructions after each machine integer operation to check for underflow or overflow and replace the result with &lt;a href=&quot;../../base/base/index#Base.typemin&quot;&gt;&lt;code&gt;typemin(Int)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../base/base/index#Base.typemax&quot;&gt;&lt;code&gt;typemax(Int)&lt;/code&gt;&lt;/a&gt; as appropriate. This alone expands each integer operation from a single, fast instruction into half a dozen instructions, probably including branches. Ouch. But it gets worse &amp;ndash; saturating integer arithmetic isn't associative. Consider this Matlab computation:</source>
          <target state="translated">A primera vista, esto parece bastante razonable ya que 9223372036854775807 est&amp;aacute; mucho m&amp;aacute;s cerca de 9223372036854775808 que -9223372036854775808 y los enteros todav&amp;iacute;a se representan con un tama&amp;ntilde;o fijo de una manera natural que es compatible con C y Fortran. La aritm&amp;eacute;tica de enteros saturados, sin embargo, es profundamente problem&amp;aacute;tica. El primer y m&amp;aacute;s obvio problema es que esta no es la forma en que funciona la aritm&amp;eacute;tica de enteros de la m&amp;aacute;quina, por lo que la implementaci&amp;oacute;n de operaciones saturadas requiere emitir instrucciones despu&amp;eacute;s de cada operaci&amp;oacute;n de entero de la m&amp;aacute;quina para verificar si hay subdesbordamiento o desbordamiento y reemplazar el resultado con &lt;a href=&quot;../../base/base/index#Base.typemin&quot;&gt; &lt;code&gt;typemin(Int)&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../../base/base/index#Base.typemax&quot;&gt; &lt;code&gt;typemax(Int)&lt;/code&gt; &lt;/a&gt;seg&amp;uacute;n sea apropiado. Esto solo expande cada operaci&amp;oacute;n entera de una sola instrucci&amp;oacute;n r&amp;aacute;pida a media docena de instrucciones, probablemente incluyendo ramas. Ay. Pero empeora: la aritm&amp;eacute;tica de n&amp;uacute;meros enteros saturada no es asociativa. Considere este c&amp;aacute;lculo de Matlab:</target>
        </trans-unit>
        <trans-unit id="9939b5009359c95078c2105da459f4858711c0ae" translate="yes" xml:space="preserve">
          <source>At least Julia 1.4 is required for specifying a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557269c7906899330df530ce61ccdd6c30d22fca" translate="yes" xml:space="preserve">
          <source>At the base of this functionality is &lt;a href=&quot;../../stdlib/sockets/index#Sockets.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo&lt;/code&gt;&lt;/a&gt;, which will do the appropriate address resolution:</source>
          <target state="translated">En la base de esta funcionalidad se encuentra &lt;a href=&quot;../../stdlib/sockets/index#Sockets.getaddrinfo&quot;&gt; &lt;code&gt;getaddrinfo&lt;/code&gt; &lt;/a&gt; , que har&amp;aacute; la resoluci&amp;oacute;n de direcciones adecuada:</target>
        </trans-unit>
        <trans-unit id="dc65621fc57dd780fd2d22a2ad965178ea5de343" translate="yes" xml:space="preserve">
          <source>At the top, the inferred return type of the function is shown as &lt;code&gt;Body::Float64&lt;/code&gt;. The next lines represent the body of &lt;code&gt;f&lt;/code&gt; in Julia's SSA IR form. The numbered boxes are labels and represent targets for jumps (via &lt;code&gt;goto&lt;/code&gt;) in your code. Looking at the body, you can see that the first thing that happens is that &lt;code&gt;pos&lt;/code&gt; is called and the return value has been inferred as the &lt;code&gt;Union&lt;/code&gt; type &lt;code&gt;UNION{FLOAT64, INT64}&lt;/code&gt; shown in uppercase since it is a non-concrete type. This means that we cannot know the exact return type of &lt;code&gt;pos&lt;/code&gt; based on the input types. However, the result of &lt;code&gt;y*x&lt;/code&gt;is a &lt;code&gt;Float64&lt;/code&gt; no matter if &lt;code&gt;y&lt;/code&gt; is a &lt;code&gt;Float64&lt;/code&gt; or &lt;code&gt;Int64&lt;/code&gt; The net result is that &lt;code&gt;f(x::Float64)&lt;/code&gt; will not be type-unstable in its output, even if some of the intermediate computations are type-unstable.</source>
          <target state="translated">En la parte superior, el tipo de retorno inferido de la funci&amp;oacute;n se muestra como &lt;code&gt;Body::Float64&lt;/code&gt; . Las siguientes l&amp;iacute;neas representan el cuerpo de &lt;code&gt;f&lt;/code&gt; en la forma SSA IR de Julia. Los cuadros numerados son etiquetas y representan objetivos para los saltos (a trav&amp;eacute;s de &lt;code&gt;goto&lt;/code&gt; ) en su c&amp;oacute;digo. Mirando el cuerpo, puede ver que lo primero que sucede es que se llama &lt;code&gt;pos&lt;/code&gt; y el valor de retorno se ha inferido como el tipo de &lt;code&gt;Union&lt;/code&gt; &lt;code&gt;UNION{FLOAT64, INT64}&lt;/code&gt; muestra en may&amp;uacute;sculas ya que es un tipo no concreto. Esto significa que no podemos saber el tipo de retorno exacto de &lt;code&gt;pos&lt;/code&gt; seg&amp;uacute;n los tipos de entrada. Sin embargo, el resultado de &lt;code&gt;y*x&lt;/code&gt; es un &lt;code&gt;Float64&lt;/code&gt; sin importar si &lt;code&gt;y&lt;/code&gt; es un &lt;code&gt;Float64&lt;/code&gt; o &lt;code&gt;Int64&lt;/code&gt; El resultado neto es que &lt;code&gt;f(x::Float64)&lt;/code&gt; no ser&amp;aacute; de tipo inestable en su salida, incluso si algunos de los c&amp;aacute;lculos intermedios son de tipo inestable.</target>
        </trans-unit>
        <trans-unit id="4b8bfb8cb1b051b835dbefff1b5c12822cd90431" translate="yes" xml:space="preserve">
          <source>At this point, the project should build and run.</source>
          <target state="translated">En este punto,el proyecto debería construirse y funcionar.</target>
        </trans-unit>
        <trans-unit id="07f4310d23db89112b431f6fd02d1ccd231d2fd9" translate="yes" xml:space="preserve">
          <source>At this time, most operations in the Julia runtime and standard libraries can be used in a thread-safe manner, if the user code is data-race free. However, in some areas work on stabilizing thread support is ongoing. Multi-threaded programming has many inherent difficulties, and if a program using threads exhibits unusual or undesirable behavior (e.g. crashes or mysterious results), thread interactions should typically be suspected first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e4a73a06b9dee6071ddafa6ecf05d8154a9294" translate="yes" xml:space="preserve">
          <source>Athletic Shoe</source>
          <target state="translated">Zapatos deportivos</target>
        </trans-unit>
        <trans-unit id="f3fbd2fd9cc354420ab6c1b9170e0b29144a85e6" translate="yes" xml:space="preserve">
          <source>Atomic Operations</source>
          <target state="translated">Operaciones atómicas</target>
        </trans-unit>
        <trans-unit id="ad3b6bf5f22249f1093a69cf5b097656cf10a2e0" translate="yes" xml:space="preserve">
          <source>Atomic objects can be accessed using the &lt;code&gt;[]&lt;/code&gt; notation:</source>
          <target state="translated">Se puede acceder a los objetos at&amp;oacute;micos usando la notaci&amp;oacute;n &lt;code&gt;[]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb34ad6782840b3609292d56d50524837de11852" translate="yes" xml:space="preserve">
          <source>Atomic operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b48033c48155a217b1ebf999c90a4b598f3e71" translate="yes" xml:space="preserve">
          <source>Atomic operations use an &lt;code&gt;atomic_&lt;/code&gt; prefix, such as &lt;a href=&quot;#Base.Threads.atomic_add!&quot;&gt;&lt;code&gt;atomic_add!&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#Base.Threads.atomic_xchg!&quot;&gt;&lt;code&gt;atomic_xchg!&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">Las operaciones at&amp;oacute;micas usan un prefijo &lt;code&gt;atomic_&lt;/code&gt; , como &lt;a href=&quot;#Base.Threads.atomic_add!&quot;&gt; &lt;code&gt;atomic_add!&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#Base.Threads.atomic_xchg!&quot;&gt; &lt;code&gt;atomic_xchg!&lt;/code&gt; &lt;/a&gt;etc.</target>
        </trans-unit>
        <trans-unit id="ad6e575d4f77e8328667d22e1296bcc529f4eb15" translate="yes" xml:space="preserve">
          <source>Atomically add &lt;code&gt;val&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">Suma at&amp;oacute;micamente &lt;code&gt;val&lt;/code&gt; a &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98b4786f90c42de0fa6575d5c8690c2d57540c23" translate="yes" xml:space="preserve">
          <source>Atomically bitwise-and &lt;code&gt;x&lt;/code&gt; with &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">At&amp;oacute;micamente bit a bit y &lt;code&gt;x&lt;/code&gt; con &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c59f0d3e8acb12180dbf858879145e09dbd4d31" translate="yes" xml:space="preserve">
          <source>Atomically bitwise-nand (not-and) &lt;code&gt;x&lt;/code&gt; with &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">At&amp;oacute;micamente bit a bit-nand (no-y) &lt;code&gt;x&lt;/code&gt; con &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49dfbe4ce1039803bba1e66c619d680aaacd0303" translate="yes" xml:space="preserve">
          <source>Atomically bitwise-or &lt;code&gt;x&lt;/code&gt; with &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">At&amp;oacute;micamente bit a bit- &lt;code&gt;x&lt;/code&gt; con &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="361657c422d3986bfb8673c88d09205f8b549983" translate="yes" xml:space="preserve">
          <source>Atomically bitwise-xor (exclusive-or) &lt;code&gt;x&lt;/code&gt; with &lt;code&gt;val&lt;/code&gt;</source>
          <target state="translated">At&amp;oacute;micamente bit a bit-xor (exclusivo-o) &lt;code&gt;x&lt;/code&gt; con &lt;code&gt;val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="720563406f6bfeb8b472dd6dd26fe3888437904c" translate="yes" xml:space="preserve">
          <source>Atomically compare-and-set &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">Comparar y establecer at&amp;oacute;micamente &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cea0404569a918b8e5d8c74ca2a23340344009b" translate="yes" xml:space="preserve">
          <source>Atomically compares the value in &lt;code&gt;x&lt;/code&gt; with &lt;code&gt;cmp&lt;/code&gt;. If equal, write &lt;code&gt;newval&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;. Otherwise, leaves &lt;code&gt;x&lt;/code&gt; unmodified. Returns the old value in &lt;code&gt;x&lt;/code&gt;. By comparing the returned value to &lt;code&gt;cmp&lt;/code&gt; (via &lt;code&gt;===&lt;/code&gt;) one knows whether &lt;code&gt;x&lt;/code&gt; was modified and now holds the new value &lt;code&gt;newval&lt;/code&gt;.</source>
          <target state="translated">Compara at&amp;oacute;micamente el valor en &lt;code&gt;x&lt;/code&gt; con &lt;code&gt;cmp&lt;/code&gt; . Si es igual, escribir &lt;code&gt;newval&lt;/code&gt; a &lt;code&gt;x&lt;/code&gt; . De lo contrario, deja &lt;code&gt;x&lt;/code&gt; sin modificar. Devuelve el valor anterior en &lt;code&gt;x&lt;/code&gt; . Al comparar el valor devuelto con &lt;code&gt;cmp&lt;/code&gt; (a trav&amp;eacute;s de &lt;code&gt;===&lt;/code&gt; ), se sabe si &lt;code&gt;x&lt;/code&gt; se modific&amp;oacute; y ahora tiene el nuevo valor &lt;code&gt;newval&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db092cd5c9d8911e3a523593755743a6ba3ff929" translate="yes" xml:space="preserve">
          <source>Atomically exchange the value in &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">Cambia at&amp;oacute;micamente el valor en &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ede158726902e9e7c885034b5dc7b476eaa3f0cb" translate="yes" xml:space="preserve">
          <source>Atomically exchanges the value in &lt;code&gt;x&lt;/code&gt; with &lt;code&gt;newval&lt;/code&gt;. Returns the &lt;strong&gt;old&lt;/strong&gt; value.</source>
          <target state="translated">At&amp;oacute;micamente intercambia el valor en &lt;code&gt;x&lt;/code&gt; con &lt;code&gt;newval&lt;/code&gt; . Devuelve el &lt;strong&gt;antiguo&lt;/strong&gt; valor.</target>
        </trans-unit>
        <trans-unit id="c3d2e4b23d13f6bba7a47950035a93b86bb83a39" translate="yes" xml:space="preserve">
          <source>Atomically store the maximum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt; in &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">At&amp;oacute;micamente almacenar el m&amp;aacute;ximo de &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;val&lt;/code&gt; en &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df88790f08323bff2d950ce1c8f1b209a38e86ef" translate="yes" xml:space="preserve">
          <source>Atomically store the minimum of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt; in &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">At&amp;oacute;micamente almacenar el m&amp;iacute;nimo de &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;val&lt;/code&gt; en &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="689e84464421ff470b8dc38055180d25d70684c4" translate="yes" xml:space="preserve">
          <source>Atomically subtract &lt;code&gt;val&lt;/code&gt; from &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">Restar at&amp;oacute;micamente &lt;code&gt;val&lt;/code&gt; de &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a5910ec96daddf32d8679bdc1681e3d2b896833" translate="yes" xml:space="preserve">
          <source>Attempt an automatic merge rebase of the current branch, from &lt;code&gt;upstream&lt;/code&gt; if provided, or otherwise from the upstream tracking branch. &lt;code&gt;newbase&lt;/code&gt; is the branch to rebase onto. By default this is &lt;code&gt;upstream&lt;/code&gt;.</source>
          <target state="translated">Intente una rebase de fusi&amp;oacute;n autom&amp;aacute;tica de la rama actual, desde la parte &lt;code&gt;upstream&lt;/code&gt; si se proporciona, o de otra manera desde la rama de seguimiento ascendente. &lt;code&gt;newbase&lt;/code&gt; es la rama en la que se va a cambiar la base. De forma predeterminada, esto es &lt;code&gt;upstream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67fbdff1fd74a3e2ffeba20e52cb54a817a837a9" translate="yes" xml:space="preserve">
          <source>Aubergine</source>
          <target state="translated">Aubergine</target>
        </trans-unit>
        <trans-unit id="237f5a2b8d61f639bee4e8b48edc5e86ef3821ad" translate="yes" xml:space="preserve">
          <source>Auto-conversion:</source>
          <target state="translated">Auto-conversion:</target>
        </trans-unit>
        <trans-unit id="83f8ababd899b8c0947ef4217c49ed91a00e554d" translate="yes" xml:space="preserve">
          <source>Automated Teller Machine</source>
          <target state="translated">Cajero automático</target>
        </trans-unit>
        <trans-unit id="674ab38ea62e0b4a07e2dda58e235dd6968ef52f" translate="yes" xml:space="preserve">
          <source>Automatic Type Conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ff4de6909c953084efbf3fcf51ba0455525196" translate="yes" xml:space="preserve">
          <source>Automatic generation of efficient, specialized code for different argument types</source>
          <target state="translated">Generación automática de código eficiente y especializado para diferentes tipos de argumentos</target>
        </trans-unit>
        <trans-unit id="e3d0413f1114ca7420957b409369ba320c5e643a" translate="yes" xml:space="preserve">
          <source>Automobile</source>
          <target state="translated">Automobile</target>
        </trans-unit>
        <trans-unit id="c2381c9ae6de19786317e42c36cfe48f1d110cd4" translate="yes" xml:space="preserve">
          <source>Available for method extension</source>
          <target state="translated">Disponible para la extensión del método</target>
        </trans-unit>
        <trans-unit id="1913fba71b8ad5575c96582256e93730389a751d" translate="yes" xml:space="preserve">
          <source>Avoid changing the type of a variable</source>
          <target state="translated">Evita cambiar el tipo de una variable</target>
        </trans-unit>
        <trans-unit id="491716d25d0cc5eef3fc083042b6cf3fb1c73628" translate="yes" xml:space="preserve">
          <source>Avoid confusion about whether something is an instance or a type</source>
          <target state="translated">Evitar la confusión sobre si algo es una instancia o un tipo</target>
        </trans-unit>
        <trans-unit id="f43c7e32c4f8af3884df62b42a58c3f06c2cb00b" translate="yes" xml:space="preserve">
          <source>Avoid containers with abstract type parameters</source>
          <target state="translated">Evite los contenedores con parámetros de tipo abstracto</target>
        </trans-unit>
        <trans-unit id="a69832582d8c220962ec16f3f74807795126efb7" translate="yes" xml:space="preserve">
          <source>Avoid elaborate container types</source>
          <target state="translated">Evite los tipos de contenedores elaborados</target>
        </trans-unit>
        <trans-unit id="5a42b7935afc0b3ec5008a2229ca382f69673505" translate="yes" xml:space="preserve">
          <source>Avoid fields with abstract containers</source>
          <target state="translated">Evite los campos con recipientes abstractos</target>
        </trans-unit>
        <trans-unit id="f619d134c2c6942d7932e906b9ce6c23d632cfef" translate="yes" xml:space="preserve">
          <source>Avoid fields with abstract type</source>
          <target state="translated">Evite los campos de tipo abstracto</target>
        </trans-unit>
        <trans-unit id="ea9c797001a229bb0f7e2e5dcae3538ba2a55b2c" translate="yes" xml:space="preserve">
          <source>Avoid global variables</source>
          <target state="translated">Evitar las variables globales</target>
        </trans-unit>
        <trans-unit id="8c84ddcd06891b88969d0af7db4510b7be8ee56a" translate="yes" xml:space="preserve">
          <source>Avoid running top-level operations, e.g. &lt;code&gt;include&lt;/code&gt;, or &lt;code&gt;eval&lt;/code&gt; of type, method, and module definitions in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b73d63c4cb77f3bf8c6e423749bbf23c01ee5d" translate="yes" xml:space="preserve">
          <source>Avoid strange type &lt;code&gt;Union&lt;/code&gt;s</source>
          <target state="translated">Evite los tipos extra&amp;ntilde;os de &lt;code&gt;Union&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="79292115b6e992f614cf724c1dfa9586d06bbe03" translate="yes" xml:space="preserve">
          <source>Avoid string interpolation for I/O</source>
          <target state="translated">Evitar la interpolación de cadenas para E/S</target>
        </trans-unit>
        <trans-unit id="8a11c76e8b2bd9a028ae58c6c15b510f4680d17f" translate="yes" xml:space="preserve">
          <source>Avoid type piracy</source>
          <target state="translated">Evitar la piratería de tipo</target>
        </trans-unit>
        <trans-unit id="bf3ba609a722d28177b4a138e6e131e1148dc2ff" translate="yes" xml:space="preserve">
          <source>Avoid unnecessary arrays. For example, instead of &lt;a href=&quot;../../base/collections/index#Base.sum&quot;&gt;&lt;code&gt;sum([x,y,z])&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;x+y+z&lt;/code&gt;.</source>
          <target state="translated">Evite matrices innecesarias. Por ejemplo, en lugar de &lt;a href=&quot;../../base/collections/index#Base.sum&quot;&gt; &lt;code&gt;sum([x,y,z])&lt;/code&gt; &lt;/a&gt; usa &lt;code&gt;x+y+z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9540041dc787b11f982141e4085503960ffd2c7" translate="yes" xml:space="preserve">
          <source>Avoid using floats for numeric literals in generic code when possible</source>
          <target state="translated">Evitar el uso de flotadores para los literales numéricos en el código genérico cuando sea posible</target>
        </trans-unit>
        <trans-unit id="4802b2a45694be10a378fb271220844de2096707" translate="yes" xml:space="preserve">
          <source>Avoid using passwords in URLs. Unlike the credential objects, Julia is not able to securely zero or destroy the sensitive data after use and the password may remain in memory; possibly to be exposed by an uninitialized memory.</source>
          <target state="translated">Evita usar contraseñas en los URLs.A diferencia de los objetos con credenciales,Julia no puede poner a cero o destruir de forma segura los datos sensibles después de su uso y la contraseña puede permanecer en la memoria,posiblemente para ser expuesta por una memoria no inicializada.</target>
        </trans-unit>
        <trans-unit id="2371521c12f038f3e299464707c70bda3ff3e6b1" translate="yes" xml:space="preserve">
          <source>Avoid writing overly-specific types</source>
          <target state="translated">Evite escribir tipos demasiado específicos</target>
        </trans-unit>
        <trans-unit id="5073587ca8bbf875c2d3d248119f4effa8701deb" translate="yes" xml:space="preserve">
          <source>Avoiding Deadlock in Pipelines</source>
          <target state="translated">Evitar el bloqueo de los oleoductos</target>
        </trans-unit>
        <trans-unit id="65b99874e3a064ddb84e4d624ff070c43bf412eb" translate="yes" xml:space="preserve">
          <source>Avoiding changing the value of global variables is considered by many to be a programming best-practice. Changing the value of a global variable can cause &quot;action at a distance&quot;, making the behavior of a program harder to reason about. This is why the scope blocks that introduce local scope require the &lt;code&gt;global&lt;/code&gt; keyword to declare the intent to modify a global variable.</source>
          <target state="translated">Muchos consideran que evitar cambiar el valor de las variables globales es una de las mejores pr&amp;aacute;cticas de programaci&amp;oacute;n. Cambiar el valor de una variable global puede provocar una &quot;acci&amp;oacute;n a distancia&quot;, lo que dificulta el razonamiento del comportamiento de un programa. Es por eso que los bloques de alcance que introducen el alcance local requieren la palabra clave &lt;code&gt;global&lt;/code&gt; para declarar la intenci&amp;oacute;n de modificar una variable global.</target>
        </trans-unit>
        <trans-unit id="5b00714b611fee1b5fd3b2b1cfc1708286a4e472" translate="yes" xml:space="preserve">
          <source>Avoiding globals</source>
          <target state="translated">Evitar los globos</target>
        </trans-unit>
        <trans-unit id="4e9ba62b391f99ca62e6bfebe5faa916e7ed0f96" translate="yes" xml:space="preserve">
          <source>Awad H. Al-Mohy and Nicholas J. Higham, &quot;Improved inverse scaling and squaring algorithms for the matrix logarithm&quot;, SIAM Journal on Scientific Computing, 34(4), 2012, C153-C169. &lt;a href=&quot;https://doi.org/10.1137/110852553&quot;&gt;doi:10.1137/110852553&lt;/a&gt;</source>
          <target state="translated">Awad H. Al-Mohy y Nicholas J. Higham, &quot;Mejora de los algoritmos de cuadratura y escala inversa para el logaritmo matricial&quot;, SIAM Journal on Scientific Computing, 34 (4), 2012, C153-C169. &lt;a href=&quot;https://doi.org/10.1137/110852553&quot;&gt;doi: 10.1137 / 110852553&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12401b9104fcd17aca879a9457a3f9b5a0090df6" translate="yes" xml:space="preserve">
          <source>Awad H. Al-Mohy, Nicholas J. Higham and Samuel D. Relton, &quot;Computing the Fr&amp;eacute;chet derivative of the matrix logarithm and estimating the condition number&quot;, SIAM Journal on Scientific Computing, 35(4), 2013, C394-C410. &lt;a href=&quot;https://doi.org/10.1137/120885991&quot;&gt;doi:10.1137/120885991&lt;/a&gt;</source>
          <target state="translated">Awad H. Al-Mohy, Nicholas J. Higham y Samuel D. Relton, &quot;C&amp;aacute;lculo de la derivada de Fr&amp;eacute;chet del logaritmo matricial y estimaci&amp;oacute;n del n&amp;uacute;mero de condici&amp;oacute;n&quot;, SIAM Journal on Scientific Computing, 35 (4), 2013, C394-C410. &lt;a href=&quot;https://doi.org/10.1137/120885991&quot;&gt;doi: 10.1137 / 120885991&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6dad1f19392ce0b096b44b01c81c76a664e7337c" translate="yes" xml:space="preserve">
          <source>B&amp;eacute;zout coefficients are &lt;em&gt;not&lt;/em&gt; uniquely defined. &lt;code&gt;gcdx&lt;/code&gt; returns the minimal B&amp;eacute;zout coefficients that are computed by the extended Euclidean algorithm. (Ref: D. Knuth, TAoCP, 2/e, p. 325, Algorithm X.) For signed integers, these coefficients &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; are minimal in the sense that $|u| &amp;lt; |y/d|$ and $|v| &amp;lt; |x/d|$. Furthermore, the signs of &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; are chosen so that &lt;code&gt;d&lt;/code&gt; is positive. For unsigned integers, the coefficients &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; might be near their &lt;code&gt;typemax&lt;/code&gt;, and the identity then holds only via the unsigned integers' modulo arithmetic.</source>
          <target state="translated">Los coeficientes de B&amp;eacute;zout &lt;em&gt;no se&lt;/em&gt; definen de forma &amp;uacute;nica. &lt;code&gt;gcdx&lt;/code&gt; devuelve los coeficientes de B&amp;eacute;zout m&amp;iacute;nimos que son calculados por el algoritmo euclidiano extendido. (Ref.: D. Knuth, TAOCP, 2 / e, p 325, Algoritmo X.) Para enteros con signo, estos coeficientes &lt;code&gt;u&lt;/code&gt; y &lt;code&gt;v&lt;/code&gt; son m&amp;iacute;nimos en el sentido de que $ | u | &amp;lt;| y / d | $ y $ | v | &amp;lt;| x / d | $. Adem&amp;aacute;s, los signos de &lt;code&gt;u&lt;/code&gt; y &lt;code&gt;v&lt;/code&gt; se eligen de modo que &lt;code&gt;d&lt;/code&gt; sea ​​positivo. Para enteros sin signo, los coeficientes &lt;code&gt;u&lt;/code&gt; y &lt;code&gt;v&lt;/code&gt; pueden estar cerca de su &lt;code&gt;typemax&lt;/code&gt; , y la identidad entonces se mantiene solo a trav&amp;eacute;s de la aritm&amp;eacute;tica del m&amp;oacute;dulo de enteros sin signo.</target>
        </trans-unit>
        <trans-unit id="0f4d56d1e20778bf2e1052ecb3219509238fb660" translate="yes" xml:space="preserve">
          <source>BD</source>
          <target state="translated">BD</target>
        </trans-unit>
        <trans-unit id="2868e5c7bf03fbd81359d6f8be00b333b386ffca" translate="yes" xml:space="preserve">
          <source>BLAS Character Arguments</source>
          <target state="translated">BLAS Argumentos de carácter</target>
        </trans-unit>
        <trans-unit id="e299ffe232555a867fe66272d999c06385ea8b66" translate="yes" xml:space="preserve">
          <source>BLAS Functions</source>
          <target state="translated">Funciones BLAS</target>
        </trans-unit>
        <trans-unit id="38726bba2d45fa38b747b2e7e3f161c3f4fb4718" translate="yes" xml:space="preserve">
          <source>BLAS character arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10410d90763f9147a245aec96798dc0ea5a38e4" translate="yes" xml:space="preserve">
          <source>BLAS functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c3d98d3a2445afc653d610809196ddb501f8c1" translate="yes" xml:space="preserve">
          <source>Baby</source>
          <target state="translated">Baby</target>
        </trans-unit>
        <trans-unit id="404344724dd01c5a65fcea59173146b18cd1b603" translate="yes" xml:space="preserve">
          <source>Baby Angel</source>
          <target state="translated">Baby Angel</target>
        </trans-unit>
        <trans-unit id="8b580757a627745bff29a8f25e39330265bdc27b" translate="yes" xml:space="preserve">
          <source>Baby Bottle</source>
          <target state="translated">Biberón</target>
        </trans-unit>
        <trans-unit id="459882191a5a45ebff1c155b876b56cf4eb8ef5e" translate="yes" xml:space="preserve">
          <source>Baby Chick</source>
          <target state="translated">Bebé Chick</target>
        </trans-unit>
        <trans-unit id="1871c181df7f050df811e7ae71f7e0946094c40f" translate="yes" xml:space="preserve">
          <source>Baby Symbol</source>
          <target state="translated">Símbolo del bebé</target>
        </trans-unit>
        <trans-unit id="2867999045ac5ccc323dde4dccea9a973b94383f" translate="yes" xml:space="preserve">
          <source>Back With Leftwards Arrow Above</source>
          <target state="translated">Atrás con la flecha hacia la izquierda arriba</target>
        </trans-unit>
        <trans-unit id="cc1f0103d6d9cbde7e99045cc49ad45fc083e009" translate="yes" xml:space="preserve">
          <source>Background and References</source>
          <target state="translated">Antecedentes y referencias</target>
        </trans-unit>
        <trans-unit id="fc10601fec1e951e91f278b7b703a3337af22c80" translate="yes" xml:space="preserve">
          <source>Backslashes (&lt;code&gt;\&lt;/code&gt;) are escaped with a double-backslash (&lt;code&gt;&quot;\\&quot;&lt;/code&gt;). Non-printable characters are escaped either with their standard C escape codes, &lt;code&gt;&quot;\0&quot;&lt;/code&gt; for NUL (if unambiguous), unicode code point (&lt;code&gt;&quot;\u&quot;&lt;/code&gt; prefix) or hex (&lt;code&gt;&quot;\x&quot;&lt;/code&gt; prefix).</source>
          <target state="translated">Las barras invertidas ( &lt;code&gt;\&lt;/code&gt; ) se escapan con una barra invertida doble ( &lt;code&gt;&quot;\\&quot;&lt;/code&gt; ). Los caracteres no imprimibles se escapan con sus c&amp;oacute;digos de escape C est&amp;aacute;ndar, &lt;code&gt;&quot;\0&quot;&lt;/code&gt; para NUL (si no es ambiguo), punto de c&amp;oacute;digo Unicode ( prefijo &lt;code&gt;&quot;\u&quot;&lt;/code&gt; ) o hexadecimal ( prefijo &lt;code&gt;&quot;\x&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6d4e3b07bbe1ccb3ac5b9922a337b1d4f919bc4f" translate="yes" xml:space="preserve">
          <source>Backspace, &lt;code&gt;^H&lt;/code&gt;</source>
          <target state="translated">Retroceso, &lt;code&gt;^H&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6d84b04bcccd220267af9a3b46464c46ba45d26" translate="yes" xml:space="preserve">
          <source>Bactrian Camel</source>
          <target state="translated">Camello bactriano</target>
        </trans-unit>
        <trans-unit id="447082b449cc1df13e5c0addef786ca50488ff0e" translate="yes" xml:space="preserve">
          <source>Baggage Claim</source>
          <target state="translated">Reclamación de equipaje</target>
        </trans-unit>
        <trans-unit id="ebd009a68817c4cc14d70f9ca5aa28ad5c4de62a" translate="yes" xml:space="preserve">
          <source>Balance the matrix &lt;code&gt;A&lt;/code&gt; before computing its eigensystem or Schur factorization. &lt;code&gt;job&lt;/code&gt; can be one of &lt;code&gt;N&lt;/code&gt; (&lt;code&gt;A&lt;/code&gt; will not be permuted or scaled), &lt;code&gt;P&lt;/code&gt; (&lt;code&gt;A&lt;/code&gt; will only be permuted), &lt;code&gt;S&lt;/code&gt; (&lt;code&gt;A&lt;/code&gt; will only be scaled), or &lt;code&gt;B&lt;/code&gt; (&lt;code&gt;A&lt;/code&gt; will be both permuted and scaled). Modifies &lt;code&gt;A&lt;/code&gt; in-place and returns &lt;code&gt;ilo&lt;/code&gt;, &lt;code&gt;ihi&lt;/code&gt;, and &lt;code&gt;scale&lt;/code&gt;. If permuting was turned on, &lt;code&gt;A[i,j] = 0&lt;/code&gt; if &lt;code&gt;j &amp;gt; i&lt;/code&gt; and &lt;code&gt;1 &amp;lt; j &amp;lt; ilo&lt;/code&gt; or &lt;code&gt;j &amp;gt; ihi&lt;/code&gt;. &lt;code&gt;scale&lt;/code&gt; contains information about the scaling/permutations performed.</source>
          <target state="translated">Equilibre la matriz &lt;code&gt;A&lt;/code&gt; antes de calcular su sistema propio o factorizaci&amp;oacute;n de Schur. &lt;code&gt;job&lt;/code&gt; puede ser uno de &lt;code&gt;N&lt;/code&gt; ( &lt;code&gt;A&lt;/code&gt; no se permuta ni se escala), &lt;code&gt;P&lt;/code&gt; ( &lt;code&gt;A&lt;/code&gt; solo se permuta), &lt;code&gt;S&lt;/code&gt; ( &lt;code&gt;A&lt;/code&gt; solo se escala) o &lt;code&gt;B&lt;/code&gt; ( &lt;code&gt;A&lt;/code&gt; se permuta y escala a la vez). Modifica &lt;code&gt;A&lt;/code&gt; in situ y devuelve &lt;code&gt;ilo&lt;/code&gt; , &lt;code&gt;ihi&lt;/code&gt; y &lt;code&gt;scale&lt;/code&gt; . Si la permutaci&amp;oacute;n estaba activada, &lt;code&gt;A[i,j] = 0&lt;/code&gt; si &lt;code&gt;j &amp;gt; i&lt;/code&gt; y &lt;code&gt;1 &amp;lt; j &amp;lt; ilo&lt;/code&gt; o &lt;code&gt;j &amp;gt; ihi&lt;/code&gt; . &lt;code&gt;scale&lt;/code&gt; contiene informaci&amp;oacute;n sobre el escalado / permutaciones realizadas.</target>
        </trans-unit>
        <trans-unit id="64f241f5415d400e3d7d028f504e941ebbdb9386" translate="yes" xml:space="preserve">
          <source>Balloon</source>
          <target state="translated">Balloon</target>
        </trans-unit>
        <trans-unit id="a5ae768a2f5127a27b546388e40cac06994c9b36" translate="yes" xml:space="preserve">
          <source>Ballot Box With Check</source>
          <target state="translated">La urna con el cheque</target>
        </trans-unit>
        <trans-unit id="fc6fae10db2bd0b625077d7c6d1b9a96925fd2b7" translate="yes" xml:space="preserve">
          <source>Banana</source>
          <target state="translated">Banana</target>
        </trans-unit>
        <trans-unit id="9e89988cc3fba2850fb19459e04e7b3325be4f84" translate="yes" xml:space="preserve">
          <source>Bank</source>
          <target state="translated">Bank</target>
        </trans-unit>
        <trans-unit id="ef4f81080d95142c3db9938d48a26e8efe95cd36" translate="yes" xml:space="preserve">
          <source>Banknote With Dollar Sign</source>
          <target state="translated">Billete de banco con signo de dólar</target>
        </trans-unit>
        <trans-unit id="3177af01daaed29235d1e99ba9255338076b9f27" translate="yes" xml:space="preserve">
          <source>Banknote With Euro Sign</source>
          <target state="translated">Billete de banco con el signo del euro</target>
        </trans-unit>
        <trans-unit id="3a6546fb8ecf3af86528410e140549606f1d3249" translate="yes" xml:space="preserve">
          <source>Banknote With Pound Sign</source>
          <target state="translated">Billete de banco con signo de libra</target>
        </trans-unit>
        <trans-unit id="63a28a516e785c09b112a71c85ad02804c64137a" translate="yes" xml:space="preserve">
          <source>Banknote With Yen Sign</source>
          <target state="translated">Billete de banco con signo de yen</target>
        </trans-unit>
        <trans-unit id="75fe8df5591aba61913518914c1f05bdb42306e6" translate="yes" xml:space="preserve">
          <source>Bar Chart</source>
          <target state="translated">Gráfico de barras</target>
        </trans-unit>
        <trans-unit id="bddd12f808af35a2e999d9124c970232527e7e1d" translate="yes" xml:space="preserve">
          <source>Barber Pole</source>
          <target state="translated">Polacos de peluquería</target>
        </trans-unit>
        <trans-unit id="077fe9c54ed5ed26fa547f4ded3ef9a9bb066d65" translate="yes" xml:space="preserve">
          <source>Base</source>
          <target state="translated">Base</target>
        </trans-unit>
        <trans-unit id="2aa4376a2de743967992b5357971a1c7721c03e3" translate="yes" xml:space="preserve">
          <source>Base Submodules</source>
          <target state="translated">Submódulos de base</target>
        </trans-unit>
        <trans-unit id="13b575497d7efff2ec5b49faf71dbac3532ee190" translate="yes" xml:space="preserve">
          <source>Base collection types require manual locking if used simultaneously by multiple threads where at least one thread modifies the collection (common examples include &lt;code&gt;push!&lt;/code&gt; on arrays, or inserting items into a &lt;code&gt;Dict&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="ec2d7744c603baf507e66bf82835dfb6204656a8" translate="yes" xml:space="preserve">
          <source>Baseball</source>
          <target state="translated">Baseball</target>
        </trans-unit>
        <trans-unit id="bf046bc3c151c25669b6483d54157a9641394a6d" translate="yes" xml:space="preserve">
          <source>Based on this observation, we can conclude that if one of the operands is &lt;code&gt;true&lt;/code&gt; and the other &lt;code&gt;missing&lt;/code&gt;, we know that the result is &lt;code&gt;true&lt;/code&gt; in spite of the uncertainty about the actual value of one of the operands. If we had been able to observe the actual value of the second operand, it could only be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, and in both cases the result would be &lt;code&gt;true&lt;/code&gt;. Therefore, in this particular case, missingness does &lt;em&gt;not&lt;/em&gt; propagate</source>
          <target state="translated">Con base en esta observaci&amp;oacute;n, podemos concluir que si uno de los operandos es &lt;code&gt;true&lt;/code&gt; y el otro &lt;code&gt;missing&lt;/code&gt; , sabemos que el resultado es &lt;code&gt;true&lt;/code&gt; a pesar de la incertidumbre sobre el valor real de uno de los operandos. Si hubi&amp;eacute;ramos podido observar el valor real del segundo operando, solo podr&amp;iacute;a ser &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; , y en ambos casos el resultado ser&amp;iacute;a &lt;code&gt;true&lt;/code&gt; . Por lo tanto, en este caso particular, la falta no &lt;em&gt;se&lt;/em&gt; propaga</target>
        </trans-unit>
        <trans-unit id="791f5b6a2aaabca7a2c4cad24b70f6e46c76fdcc" translate="yes" xml:space="preserve">
          <source>Basic &lt;code&gt;Task&lt;/code&gt; operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01a71bb934cc266c2f79a70a4a484bfb32292d0" translate="yes" xml:space="preserve">
          <source>Basic Functions</source>
          <target state="translated">Funciones básicas</target>
        </trans-unit>
        <trans-unit id="aeb63e6ce576503861f1c499cfdf84cff87567db" translate="yes" xml:space="preserve">
          <source>Basic Stream I/O</source>
          <target state="translated">I/O de la corriente básica</target>
        </trans-unit>
        <trans-unit id="f9e89ba8027afc2d4c24183a1cbbfbb04137326a" translate="yes" xml:space="preserve">
          <source>Basic Unit Tests</source>
          <target state="translated">Pruebas de la unidad básica</target>
        </trans-unit>
        <trans-unit id="58c96a6812d6bac9777029dd40fb7e6afd5c8c94" translate="yes" xml:space="preserve">
          <source>Basic functions</source>
          <target state="translated">Funciones básicas</target>
        </trans-unit>
        <trans-unit id="24be2e19e7e4671eaee4ac0a6f5a6a524bab3529" translate="yes" xml:space="preserve">
          <source>Basic tables can be written using the syntax described below. Note that markdown tables have limited features and cannot contain nested toplevel elements unlike other elements discussed above &amp;ndash; only inline elements are allowed. Tables must always contain a header row with column names. Cells cannot span multiple rows or columns of the table.</source>
          <target state="translated">Las tablas b&amp;aacute;sicas se pueden escribir usando la sintaxis que se describe a continuaci&amp;oacute;n. Tenga en cuenta que las tablas de rebajas tienen caracter&amp;iacute;sticas limitadas y no pueden contener elementos de nivel superior anidados a diferencia de otros elementos discutidos anteriormente; solo se permiten elementos en l&amp;iacute;nea. Las tablas siempre deben contener una fila de encabezado con nombres de columna. Las celdas no pueden abarcar varias filas o columnas de la tabla.</target>
        </trans-unit>
        <trans-unit id="cb3a8802da5b3164771a468d78ff7995a249f08a" translate="yes" xml:space="preserve">
          <source>Basic usage</source>
          <target state="translated">Uso básico</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="25cdb3adf0a06c600dd49fc47c73f5654e3fddf0" translate="yes" xml:space="preserve">
          <source>Basketball And Hoop</source>
          <target state="translated">El baloncesto y el aro</target>
        </trans-unit>
        <trans-unit id="a687b3ff7f182c39a1247454d3d7927ea0efa80d" translate="yes" xml:space="preserve">
          <source>Bath</source>
          <target state="translated">Bath</target>
        </trans-unit>
        <trans-unit id="24f0469ed67f7f88a5ef12c0cd27feac4f206fb4" translate="yes" xml:space="preserve">
          <source>Bathtub</source>
          <target state="translated">Bathtub</target>
        </trans-unit>
        <trans-unit id="4a9be042afe6257111a01c05b72af9f1f3015176" translate="yes" xml:space="preserve">
          <source>Battery</source>
          <target state="translated">Battery</target>
        </trans-unit>
        <trans-unit id="5efe26975abbced9003edb837133f3af03f436e7" translate="yes" xml:space="preserve">
          <source>Be aware of when Julia avoids specializing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d363e26ebe520321aa01d471833fdb370bebd1b2" translate="yes" xml:space="preserve">
          <source>Be aware of when a macro could really be a function instead.</source>
          <target state="translated">Tengan en cuenta cuándo una macro puede ser realmente una función en su lugar.</target>
        </trans-unit>
        <trans-unit id="f0826b18a2138cb79c2b1a66c614cdb664f937ef" translate="yes" xml:space="preserve">
          <source>Be aware that finalizers registered by a library may break if threads are enabled. This may require some transitional work across the ecosystem before threading can be widely adopted with confidence. See the next section for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c70535563b2fda1a64503b874c826edb8884cf" translate="yes" xml:space="preserve">
          <source>Be aware that this strategy has at least one major disadvantage: in many cases, it is not possible for users to further customize the behavior of &lt;code&gt;f&lt;/code&gt; by defining further specializations of your exported function &lt;code&gt;f&lt;/code&gt;. Instead, they have to define specializations for your internal methods &lt;code&gt;_fA&lt;/code&gt; and &lt;code&gt;_fB&lt;/code&gt;, and this blurs the lines between exported and internal methods.</source>
          <target state="translated">Tenga en cuenta que esta estrategia tiene al menos una gran desventaja: en muchos casos, los usuarios no pueden personalizar a&amp;uacute;n m&amp;aacute;s el comportamiento de &lt;code&gt;f&lt;/code&gt; definiendo m&amp;aacute;s especializaciones de su funci&amp;oacute;n exportada &lt;code&gt;f&lt;/code&gt; . En cambio, tienen que definir especializaciones para sus m&amp;eacute;todos internos &lt;code&gt;_fA&lt;/code&gt; y &lt;code&gt;_fB&lt;/code&gt; , y esto difumina las l&amp;iacute;neas entre los m&amp;eacute;todos exportados e internos.</target>
        </trans-unit>
        <trans-unit id="9beb1443ec7c795007b178f28f0ce7235335f46d" translate="yes" xml:space="preserve">
          <source>Be careful to ensure that a Julia reference to &lt;code&gt;x&lt;/code&gt; exists as long as the result of this function will be used. Accordingly, the argument &lt;code&gt;x&lt;/code&gt; to this function should never be an expression, only a variable name or field reference. For example, &lt;code&gt;x=a.b.c&lt;/code&gt; is acceptable, but &lt;code&gt;x=[a,b,c]&lt;/code&gt; is not.</source>
          <target state="translated">Tenga cuidado de asegurarse de que exista una referencia de Julia &lt;code&gt;x&lt;/code&gt; siempre que se utilice el resultado de esta funci&amp;oacute;n. En consecuencia, el argumento &lt;code&gt;x&lt;/code&gt; de esta funci&amp;oacute;n nunca debe ser una expresi&amp;oacute;n, solo un nombre de variable o una referencia de campo. Por ejemplo, &lt;code&gt;x=a.b.c&lt;/code&gt; es aceptable, pero &lt;code&gt;x=[a,b,c]&lt;/code&gt; no lo es.</target>
        </trans-unit>
        <trans-unit id="fe66257c8592b5cf4fc84f98162f41a3e02473c6" translate="yes" xml:space="preserve">
          <source>Be careful when using &lt;code&gt;invoke&lt;/code&gt; for functions that you don't write. What definition is used for given &lt;code&gt;argtypes&lt;/code&gt; is an implementation detail unless the function is explicitly states that calling with certain &lt;code&gt;argtypes&lt;/code&gt; is a part of public API. For example, the change between &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; in the example below is usually considered compatible because the change is invisible by the caller with a normal (non-&lt;code&gt;invoke&lt;/code&gt;) call. However, the change is visible if you use &lt;code&gt;invoke&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590d4269627728c65164df59752ab3f2172388df" translate="yes" xml:space="preserve">
          <source>Be careful with non-constant global variables in Julia, especially in tight loops. Since you can write close-to-metal code in Julia (unlike Python), the effect of globals can be drastic (see &lt;a href=&quot;../performance-tips/index#man-performance-tips&quot;&gt;Performance Tips&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb87858674ab3ef5b1beab58a7148fcb802f60e" translate="yes" xml:space="preserve">
          <source>Be careful with type equality</source>
          <target state="translated">Tengan cuidado con la igualdad de tipos</target>
        </trans-unit>
        <trans-unit id="8bfb6bdbe4ae64df10562422552d5b22da6f47fc" translate="yes" xml:space="preserve">
          <source>Beamed Eighth Notes / Barred Eighth Notes</source>
          <target state="translated">Notas de octava transmitidas/Notas de octava prohibidas</target>
        </trans-unit>
        <trans-unit id="c8d8cb92fc4cef48d0b0c66441f7a0ef79489b94" translate="yes" xml:space="preserve">
          <source>Bear Face</source>
          <target state="translated">Cara de Oso</target>
        </trans-unit>
        <trans-unit id="aa8c1d8ab7be7fc9804d2a597a6630cb0b4cde3e" translate="yes" xml:space="preserve">
          <source>Beating Heart</source>
          <target state="translated">Corazón que late</target>
        </trans-unit>
        <trans-unit id="eaebe47425c9f545a41d705608612a34bef824ca" translate="yes" xml:space="preserve">
          <source>Because</source>
          <target state="translated">Because</target>
        </trans-unit>
        <trans-unit id="3b0620b59c6d57d025b388d048ef8892a00c82a2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;a&lt;/code&gt; is a an array of abstract type &lt;a href=&quot;../../base/numbers/index#Core.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt;, it must be able to hold any &lt;code&gt;Real&lt;/code&gt; value. Since &lt;code&gt;Real&lt;/code&gt; objects can be of arbitrary size and structure, &lt;code&gt;a&lt;/code&gt; must be represented as an array of pointers to individually allocated &lt;code&gt;Real&lt;/code&gt; objects. However, if we instead only allow numbers of the same type, e.g. &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;, to be stored in &lt;code&gt;a&lt;/code&gt; these can be stored more efficiently:</source>
          <target state="translated">Debido a que &lt;code&gt;a&lt;/code&gt; es una matriz de tipo abstracto &lt;a href=&quot;../../base/numbers/index#Core.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt; , debe poder contener cualquier valor &lt;code&gt;Real&lt;/code&gt; . Dado que los objetos &lt;code&gt;Real&lt;/code&gt; pueden ser de tama&amp;ntilde;o y estructura arbitrarios, &lt;code&gt;a&lt;/code&gt; debe representarse como una matriz de punteros a objetos &lt;code&gt;Real&lt;/code&gt; asignados individualmente . Sin embargo, si en cambio solo permitimos que n&amp;uacute;meros del mismo tipo, por ejemplo , &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt; , se almacenen en &lt;code&gt;a&lt;/code&gt; estos se pueden almacenar de manera m&amp;aacute;s eficiente:</target>
        </trans-unit>
        <trans-unit id="9408c8b817a5e76474fc2023c5d1c8f64eadcc39" translate="yes" xml:space="preserve">
          <source>Because C doesn't support multiple return values, often C functions will take pointers to data that the function will modify. To accomplish this within a &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt;, you need to first encapsulate the value inside a &lt;a href=&quot;../../base/c/index#Core.Ref&quot;&gt;&lt;code&gt;Ref{T}&lt;/code&gt;&lt;/a&gt; of the appropriate type. When you pass this &lt;code&gt;Ref&lt;/code&gt; object as an argument, Julia will automatically pass a C pointer to the encapsulated data:</source>
          <target state="translated">Debido a que C no admite m&amp;uacute;ltiples valores de retorno, a menudo las funciones de C tomar&amp;aacute;n punteros a datos que la funci&amp;oacute;n modificar&amp;aacute;. Para lograr esto dentro de un &lt;a href=&quot;../../base/c/index#ccall&quot;&gt; &lt;code&gt;ccall&lt;/code&gt; &lt;/a&gt; , primero necesita encapsular el valor dentro de una &lt;a href=&quot;../../base/c/index#Core.Ref&quot;&gt; &lt;code&gt;Ref{T}&lt;/code&gt; &lt;/a&gt; del tipo apropiado. Cuando pasa este objeto &lt;code&gt;Ref&lt;/code&gt; como argumento, Julia pasar&amp;aacute; autom&amp;aacute;ticamente un puntero C a los datos encapsulados:</target>
        </trans-unit>
        <trans-unit id="d44d25a0390ec817de43e662485f00ec7ef00a32" translate="yes" xml:space="preserve">
          <source>Because Julia's compiler is different from the interpreters used for languages like Python or R, you may find that Julia's performance is unintuitive at first. If you find that something is slow, we highly recommend reading through the &lt;a href=&quot;manual/performance-tips/index#man-performance-tips&quot;&gt;Performance Tips&lt;/a&gt; section before trying anything else. Once you understand how Julia works, it's easy to write code that's nearly as fast as C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c2c088cdd51f72db20e5f94b9c484cd07ee1a5" translate="yes" xml:space="preserve">
          <source>Because Julia's compiler is different from the interpreters used for languages like Python or R, you may find that Julia's performance is unintuitive at first. If you find that something is slow, we highly recommend reading through the &lt;a href=&quot;manual/performance-tips/index#man-performance-tips-1&quot;&gt;Performance Tips&lt;/a&gt; section before trying anything else. Once you understand how Julia works, it's easy to write code that's nearly as fast as C.</source>
          <target state="translated">Debido a que el compilador de Julia es diferente de los int&amp;eacute;rpretes utilizados para lenguajes como Python o R, es posible que el rendimiento de Julia no sea intuitivo al principio. Si encuentra que algo va lento, le recomendamos que lea la secci&amp;oacute;n &lt;a href=&quot;manual/performance-tips/index#man-performance-tips-1&quot;&gt;Consejos de rendimiento&lt;/a&gt; antes de intentar cualquier otra cosa. Una vez que comprenda c&amp;oacute;mo funciona Julia, es f&amp;aacute;cil escribir c&amp;oacute;digo que es casi tan r&amp;aacute;pido como C.</target>
        </trans-unit>
        <trans-unit id="7d35da8223bf95881284388f273666759cae71cf" translate="yes" xml:space="preserve">
          <source>Because finalizers can interrupt any code, they must be very careful in how they interact with any global state. Unfortunately, the main reason that finalizers are used is to update global state (a pure function is generally rather pointless as a finalizer). This leads us to a bit of a conundrum. There are a few approaches to dealing with this problem:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57b0f43957e0dd94a3628a775697cb33089c39f" translate="yes" xml:space="preserve">
          <source>Because of these shared properties, these types are internally represented as instances of the same concept, &lt;code&gt;DataType&lt;/code&gt;, which is the type of any of these types:</source>
          <target state="translated">Debido a estas propiedades compartidas, estos tipos se representan internamente como instancias del mismo concepto, &lt;code&gt;DataType&lt;/code&gt; , que es el tipo de cualquiera de estos tipos:</target>
        </trans-unit>
        <trans-unit id="42b7af0f4b58f310d2c30a12b918265991dec35c" translate="yes" xml:space="preserve">
          <source>Because of variable-length encodings, the number of characters in a string (given by &lt;code&gt;length(s)&lt;/code&gt;) is not always the same as the last index. If you iterate through the indices 1 through &lt;a href=&quot;../../base/collections/index#Base.lastindex&quot;&gt;&lt;code&gt;lastindex(s)&lt;/code&gt;&lt;/a&gt; and index into &lt;code&gt;s&lt;/code&gt;, the sequence of characters returned when errors aren't thrown is the sequence of characters comprising the string &lt;code&gt;s&lt;/code&gt;. Thus we have the identity that &lt;code&gt;length(s) &amp;lt;= lastindex(s)&lt;/code&gt;, since each character in a string must have its own index. The following is an inefficient and verbose way to iterate through the characters of &lt;code&gt;s&lt;/code&gt;:</source>
          <target state="translated">Debido a las codificaciones de longitud variable, el n&amp;uacute;mero de caracteres en una cadena (dado por &lt;code&gt;length(s)&lt;/code&gt; ) no siempre es el mismo que el &amp;uacute;ltimo &amp;iacute;ndice. Si itera a trav&amp;eacute;s de los &amp;iacute;ndices 1 hasta el &lt;a href=&quot;../../base/collections/index#Base.lastindex&quot;&gt; &lt;code&gt;lastindex(s)&lt;/code&gt; &lt;/a&gt; &amp;iacute;ndice (s) y el &amp;iacute;ndice en &lt;code&gt;s&lt;/code&gt; , la secuencia de caracteres devuelta cuando no se producen errores es la secuencia de caracteres que comprende la cadena &lt;code&gt;s&lt;/code&gt; . Por lo tanto, tenemos la identidad de que &lt;code&gt;length(s) &amp;lt;= lastindex(s)&lt;/code&gt; , ya que cada car&amp;aacute;cter de una cadena debe tener su propio &amp;iacute;ndice. La siguiente es una forma ineficiente y detallada de iterar a trav&amp;eacute;s de los caracteres de &lt;code&gt;s&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="757a38ed122bb8b64391606ad821806f34182e36" translate="yes" xml:space="preserve">
          <source>Because supporting generic programming is deemed more important than potential performance optimizations that can be achieved by other means (e.g., using explicit loops), operators like &lt;code&gt;+=&lt;/code&gt; and &lt;code&gt;*=&lt;/code&gt; work by rebinding new values.</source>
          <target state="translated">Debido a que el soporte a la programaci&amp;oacute;n gen&amp;eacute;rica se considera m&amp;aacute;s importante que las posibles optimizaciones de rendimiento que se pueden lograr por otros medios (por ejemplo, usando bucles expl&amp;iacute;citos), los operadores como &lt;code&gt;+=&lt;/code&gt; y &lt;code&gt;*=&lt;/code&gt; funcionan revinculando nuevos valores.</target>
        </trans-unit>
        <trans-unit id="b50e23d2e501ab3f771dc2f5a71cc510c1b86367" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;#Dates.Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; types are stored as single &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt; values, date parts or fields can be retrieved through accessor functions. The lowercase accessors return the field as an integer:</source>
          <target state="translated">Debido a que los tipos &lt;a href=&quot;#Dates.Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#Dates.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; se almacenan como valores &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt; &amp;uacute;nicos , las partes o campos de fecha se pueden recuperar mediante funciones de acceso. Los descriptores de acceso en min&amp;uacute;sculas devuelven el campo como un n&amp;uacute;mero entero:</target>
        </trans-unit>
        <trans-unit id="bc4c89911afb2810477bab2fec0bf376b9a4f915" translate="yes" xml:space="preserve">
          <source>Because the compiler knows that integer addition and multiplication are associative and that multiplication distributes over addition &amp;ndash; neither of which is true of saturating arithmetic &amp;ndash; it can optimize the entire loop down to just a multiply and an add. Saturated arithmetic completely defeats this kind of optimization since associativity and distributivity can fail at each loop iteration, causing different outcomes depending on which iteration the failure occurs in. The compiler can unroll the loop, but it cannot algebraically reduce multiple operations into fewer equivalent operations.</source>
          <target state="translated">Debido a que el compilador sabe que la suma y la multiplicaci&amp;oacute;n de enteros son asociativas y que la multiplicaci&amp;oacute;n se distribuye sobre la suma, ninguna de las cuales es cierta en la aritm&amp;eacute;tica saturada, puede optimizar todo el ciclo hasta solo una multiplicaci&amp;oacute;n y una suma. La aritm&amp;eacute;tica saturada anula por completo este tipo de optimizaci&amp;oacute;n, ya que la asociatividad y la distributividad pueden fallar en cada iteraci&amp;oacute;n del ciclo, lo que genera resultados diferentes seg&amp;uacute;n la iteraci&amp;oacute;n en la que se produce el fallo. El compilador puede desenrollar el ciclo, pero no puede reducir algebraicamente varias operaciones en menos operaciones equivalentes.</target>
        </trans-unit>
        <trans-unit id="b0fb1c1b010730bc0463b629ac89a10341b04531" translate="yes" xml:space="preserve">
          <source>Because the operator &lt;code&gt;^&lt;/code&gt; has higher precedence than &lt;code&gt;*&lt;/code&gt; (see &lt;a href=&quot;../mathematical-operations/index#Operator-Precedence-and-Associativity&quot;&gt;Operator Precedence and Associativity&lt;/a&gt;), this output does not faithfully represent the expression &lt;code&gt;a ^ 2&lt;/code&gt; which should be equal to &lt;code&gt;(3.0 * exp(4.0im)) ^ 2&lt;/code&gt;. To solve this issue, we must make a custom method for &lt;code&gt;Base.show_unquoted(io::IO, z::Polar, indent::Int, precedence::Int)&lt;/code&gt;, which is called internally by the expression object when printing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a8e98adc86bd54f822093e18075fecd0592176" translate="yes" xml:space="preserve">
          <source>Because the operator &lt;code&gt;^&lt;/code&gt; has higher precedence than &lt;code&gt;*&lt;/code&gt; (see &lt;a href=&quot;../mathematical-operations/index#Operator-Precedence-and-Associativity-1&quot;&gt;Operator Precedence and Associativity&lt;/a&gt;), this output does not faithfully represent the expression &lt;code&gt;a ^ 2&lt;/code&gt; which should be equal to &lt;code&gt;(3.0 * exp(4.0im)) ^ 2&lt;/code&gt;. To solve this issue, we must make a custom method for &lt;code&gt;Base.show_unquoted(io::IO, z::Polar, indent::Int, precedence::Int)&lt;/code&gt;, which is called internally by the expression object when printing:</source>
          <target state="translated">Debido a que el operador &lt;code&gt;^&lt;/code&gt; tiene mayor precedencia que &lt;code&gt;*&lt;/code&gt; (consulte &lt;a href=&quot;../mathematical-operations/index#Operator-Precedence-and-Associativity-1&quot;&gt;Precedencia y asociatividad del operador&lt;/a&gt; ), esta salida no representa fielmente la expresi&amp;oacute;n &lt;code&gt;a ^ 2&lt;/code&gt; que deber&amp;iacute;a ser igual a &lt;code&gt;(3.0 * exp(4.0im)) ^ 2&lt;/code&gt; . Para resolver este problema, debemos crear un m&amp;eacute;todo personalizado para &lt;code&gt;Base.show_unquoted(io::IO, z::Polar, indent::Int, precedence::Int)&lt;/code&gt; , que es llamado internamente por el objeto de expresi&amp;oacute;n al imprimir:</target>
        </trans-unit>
        <trans-unit id="f808dfd9f99fca14db2870360d26f322b8ed85e2" translate="yes" xml:space="preserve">
          <source>Because the precise way in which random numbers are generated is considered an implementation detail, bug fixes and speed improvements may change the stream of numbers that are generated after a version change. Relying on a specific seed or generated stream of numbers during unit testing is thus discouraged - consider testing properties of the methods in question instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae99b1d876ba3cfdc461cae08478806ff8d8ca63" translate="yes" xml:space="preserve">
          <source>Beer Mug</source>
          <target state="translated">Taza de cerveza</target>
        </trans-unit>
        <trans-unit id="5672f13a1da17dc7ad6970da457803cdfb5de94c" translate="yes" xml:space="preserve">
          <source>Before Julia 1.2 this signature was restricted to &lt;code&gt;f::Function&lt;/code&gt;.</source>
          <target state="translated">Antes de Julia 1.2, esta firma estaba restringida a &lt;code&gt;f::Function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebd25c6fc66535562035f061458e887115328bc8" translate="yes" xml:space="preserve">
          <source>Before running Julia set the environment variable &lt;code&gt;ENABLE_JITPROFILING&lt;/code&gt; to 1.</source>
          <target state="translated">Antes de ejecutar Julia, establezca la variable de entorno &lt;code&gt;ENABLE_JITPROFILING&lt;/code&gt; en 1.</target>
        </trans-unit>
        <trans-unit id="0dc928d36409cbb3c824f1591ba22fe5ec9e9dd8" translate="yes" xml:space="preserve">
          <source>Before the execution of the body of a &lt;code&gt;@testset&lt;/code&gt;, there is an implicit call to &lt;code&gt;Random.seed!(seed)&lt;/code&gt; where &lt;code&gt;seed&lt;/code&gt; is the current seed of the global RNG. Moreover, after the execution of the body, the state of the global RNG is restored to what it was before the &lt;code&gt;@testset&lt;/code&gt;. This is meant to ease reproducibility in case of failure, and to allow seamless re-arrangements of &lt;code&gt;@testset&lt;/code&gt;s regardless of their side-effect on the global RNG state.</source>
          <target state="translated">Antes de la ejecuci&amp;oacute;n del cuerpo de un &lt;code&gt;@testset&lt;/code&gt; , hay una llamada impl&amp;iacute;cita a &lt;code&gt;Random.seed!(seed)&lt;/code&gt; donde &lt;code&gt;seed&lt;/code&gt; es la semilla actual del RNG global. Adem&amp;aacute;s, despu&amp;eacute;s de la ejecuci&amp;oacute;n del cuerpo, el estado del RNG global se restaura a lo que era antes del &lt;code&gt;@testset&lt;/code&gt; . Esto est&amp;aacute; destinado a facilitar la reproducibilidad en caso de falla y permitir reorganizaciones sin problemas de &lt;code&gt;@testset&lt;/code&gt; s independientemente de su efecto secundario en el estado global de RNG.</target>
        </trans-unit>
        <trans-unit id="e1451b7dd9bc69e125d61828d9b5cab1b14b61ea" translate="yes" xml:space="preserve">
          <source>Before the program terminates, it is strongly recommended to call &lt;code&gt;jl_atexit_hook&lt;/code&gt;. The above example program calls this before returning from &lt;code&gt;main&lt;/code&gt;.</source>
          <target state="translated">Antes de que finalice el programa, se recomienda encarecidamente llamar a &lt;code&gt;jl_atexit_hook&lt;/code&gt; . El programa de ejemplo anterior llama a esto antes de regresar de &lt;code&gt;main&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b47e5d0ff5715fb37f74adf8fc2abb257a9578b" translate="yes" xml:space="preserve">
          <source>Beginners will write this kind of code without the &lt;code&gt;global&lt;/code&gt; and have no idea why their code doesn't work&amp;mdash;the error that they get is that &lt;code&gt;s&lt;/code&gt; is undefined, which does not seem to enlighten anyone who happens to make this mistake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5e33825f4e17f1ad04b807863fc5ef1363c528" translate="yes" xml:space="preserve">
          <source>Behaves like a &lt;code&gt;Ptr{T}&lt;/code&gt; that can manage its memory via the Julia GC.</source>
          <target state="translated">Se comporta como un &lt;code&gt;Ptr{T}&lt;/code&gt; que puede administrar su memoria a trav&amp;eacute;s de Julia GC.</target>
        </trans-unit>
        <trans-unit id="e09863e9196cd18ccb74a5a4e0f5e83a34c2821d" translate="yes" xml:space="preserve">
          <source>Behaves like applying &lt;code&gt;n&lt;/code&gt; times &lt;code&gt;nextind&lt;/code&gt; for &lt;code&gt;n==1&lt;/code&gt;. The only difference is that if &lt;code&gt;n&lt;/code&gt; is so large that applying &lt;code&gt;nextind&lt;/code&gt; would reach &lt;code&gt;ncodeunits(str)+1&lt;/code&gt; then each remaining iteration increases the returned value by &lt;code&gt;1&lt;/code&gt;. This means that in this case &lt;code&gt;nextind&lt;/code&gt; can return a value greater than &lt;code&gt;ncodeunits(str)+1&lt;/code&gt;.</source>
          <target state="translated">Se comporta como aplicar &lt;code&gt;n&lt;/code&gt; veces &lt;code&gt;nextind&lt;/code&gt; para &lt;code&gt;n==1&lt;/code&gt; . La &amp;uacute;nica diferencia es que si &lt;code&gt;n&lt;/code&gt; es tan grande que la aplicaci&amp;oacute;n de &lt;code&gt;nextind&lt;/code&gt; alcanzar&amp;iacute;a &lt;code&gt;ncodeunits(str)+1&lt;/code&gt; entonces cada iteraci&amp;oacute;n restante aumenta el valor devuelto en &lt;code&gt;1&lt;/code&gt; . Esto significa que en este caso &lt;code&gt;nextind&lt;/code&gt; puede devolver un valor mayor que &lt;code&gt;ncodeunits(str)+1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2b1b1654cc55316ed5e2b35c84126cef980b48d" translate="yes" xml:space="preserve">
          <source>Behaves like applying &lt;code&gt;n&lt;/code&gt; times &lt;code&gt;prevind&lt;/code&gt; for &lt;code&gt;n==1&lt;/code&gt;. The only difference is that if &lt;code&gt;n&lt;/code&gt; is so large that applying &lt;code&gt;prevind&lt;/code&gt; would reach &lt;code&gt;0&lt;/code&gt; then each remaining iteration decreases the returned value by &lt;code&gt;1&lt;/code&gt;. This means that in this case &lt;code&gt;prevind&lt;/code&gt; can return a negative value.</source>
          <target state="translated">Se comporta como aplicar &lt;code&gt;n&lt;/code&gt; veces &lt;code&gt;prevind&lt;/code&gt; para &lt;code&gt;n==1&lt;/code&gt; . La &amp;uacute;nica diferencia es que si &lt;code&gt;n&lt;/code&gt; es tan grande que la aplicaci&amp;oacute;n de &lt;code&gt;prevind&lt;/code&gt; llegar&amp;iacute;a a &lt;code&gt;0&lt;/code&gt; , cada iteraci&amp;oacute;n restante disminuye el valor devuelto en &lt;code&gt;1&lt;/code&gt; . Esto significa que en este caso &lt;code&gt;prevind&lt;/code&gt; puede devolver un valor negativo.</target>
        </trans-unit>
        <trans-unit id="d4198662a72fd519a4f968a74051bafac710dc07" translate="yes" xml:space="preserve">
          <source>Bell</source>
          <target state="translated">Bell</target>
        </trans-unit>
        <trans-unit id="bbab278669c1eda7fe0bdb1650c9fd25169b898f" translate="yes" xml:space="preserve">
          <source>Bell With Cancellation Stroke</source>
          <target state="translated">Campana con cancelación del golpe</target>
        </trans-unit>
        <trans-unit id="94add7afb4e17fd6f1526d2edfd18924f6fd72ab" translate="yes" xml:space="preserve">
          <source>Below is an example where subnormals noticeably impact performance on some hardware:</source>
          <target state="translated">A continuación se muestra un ejemplo en el que los subnormales afectan notablemente al rendimiento de algunos equipos:</target>
        </trans-unit>
        <trans-unit id="58c2a686d8a6b7d42c702706aa646004223a601b" translate="yes" xml:space="preserve">
          <source>Below we discuss particular challenges and some alternative ways to resolve such issues.</source>
          <target state="translated">A continuación se examinan los problemas concretos y algunas formas alternativas de resolverlos.</target>
        </trans-unit>
        <trans-unit id="e6be4001a8d2924783c806798a0e30c2803a6922" translate="yes" xml:space="preserve">
          <source>Bento Box</source>
          <target state="translated">Caja de Bento</target>
        </trans-unit>
        <trans-unit id="3f0f29bd74024b1bd9eec443c00d50257286a7db" translate="yes" xml:space="preserve">
          <source>Benzene Ring</source>
          <target state="translated">Anillo de Benceno</target>
        </trans-unit>
        <trans-unit id="c667600d6a843f35f26780da4256a01e9f67553a" translate="yes" xml:space="preserve">
          <source>Benzene Ring With Circle</source>
          <target state="translated">Anillo de benceno con círculo</target>
        </trans-unit>
        <trans-unit id="79faabb26deabd43b3e790cb4753636cfebf2e58" translate="yes" xml:space="preserve">
          <source>Besides being used for the &lt;a href=&quot;../../base/constants/index#Base.VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt; constant, &lt;code&gt;VersionNumber&lt;/code&gt; objects are widely used in the &lt;code&gt;Pkg&lt;/code&gt; module, to specify packages versions and their dependencies.</source>
          <target state="translated">Adem&amp;aacute;s de usarse para la constante &lt;a href=&quot;../../base/constants/index#Base.VERSION&quot;&gt; &lt;code&gt;VERSION&lt;/code&gt; &lt;/a&gt; , los objetos &lt;code&gt;VersionNumber&lt;/code&gt; se usan ampliamente en el m&amp;oacute;dulo &lt;code&gt;Pkg&lt;/code&gt; , para especificar versiones de paquetes y sus dependencias.</target>
        </trans-unit>
        <trans-unit id="4c077965afc4d3ad848734d7192dc33685665fb8" translate="yes" xml:space="preserve">
          <source>Bet Symbol / Second Transfinite Cardinal</source>
          <target state="translated">Símbolo de la apuesta/Segundo cardenal transfinita</target>
        </trans-unit>
        <trans-unit id="1b22feb0c0c13c69ebe6389111ff7312bd0c946b" translate="yes" xml:space="preserve">
          <source>Between</source>
          <target state="translated">Between</target>
        </trans-unit>
        <trans-unit id="4e83ab72f5680a7927bc2ee1770585b538110359" translate="yes" xml:space="preserve">
          <source>Bicycle</source>
          <target state="translated">Bicycle</target>
        </trans-unit>
        <trans-unit id="af44c67fc560bdac204e3457136721b15282deb9" translate="yes" xml:space="preserve">
          <source>Bicyclist</source>
          <target state="translated">Bicyclist</target>
        </trans-unit>
        <trans-unit id="ca17e7c02d8603afa7449be022da99c068361156" translate="yes" xml:space="preserve">
          <source>Bidiagonal</source>
          <target state="translated">Bidiagonal</target>
        </trans-unit>
        <trans-unit id="f0830adbb847a3826b894a8d2b1be1aa3648828e" translate="yes" xml:space="preserve">
          <source>BigFloats and BigInts</source>
          <target state="translated">BigFloats y BigInts</target>
        </trans-unit>
        <trans-unit id="669a7400e7ecdc8abb5def5c2be2775fd1a39afb" translate="yes" xml:space="preserve">
          <source>Bignums are supported, but conversion is not automatic; ordinary integers &lt;a href=&quot;../faq/index#faq-integer-arithmetic&quot;&gt;overflow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacc2899433eb85e7a2394fe9113a636959564b2" translate="yes" xml:space="preserve">
          <source>Bikini</source>
          <target state="translated">Bikini</target>
        </trans-unit>
        <trans-unit id="aaaa53539dc3641fca1eac5e64bf0cba011ff6e3" translate="yes" xml:space="preserve">
          <source>Bilaterally permute &lt;code&gt;A&lt;/code&gt;, returning &lt;code&gt;PAQ&lt;/code&gt; (&lt;code&gt;A[p,q]&lt;/code&gt;). Column-permutation &lt;code&gt;q&lt;/code&gt;'s length must match &lt;code&gt;A&lt;/code&gt;'s column count (&lt;code&gt;length(q) == A.n&lt;/code&gt;). Row-permutation &lt;code&gt;p&lt;/code&gt;'s length must match &lt;code&gt;A&lt;/code&gt;'s row count (&lt;code&gt;length(p) == A.m&lt;/code&gt;).</source>
          <target state="translated">Permutar bilateralmente &lt;code&gt;A&lt;/code&gt; , devolviendo &lt;code&gt;PAQ&lt;/code&gt; ( &lt;code&gt;A[p,q]&lt;/code&gt; ). Columna-permutaci&amp;oacute;n &lt;code&gt;q&lt;/code&gt; 's longitud debe coincidir con &lt;code&gt;A&lt;/code&gt; ' s recuento de columna ( &lt;code&gt;length(q) == A.n&lt;/code&gt; ). Fila permutaci&amp;oacute;n &lt;code&gt;p&lt;/code&gt; 's debe coincidir con la longitud &lt;code&gt;A&lt;/code&gt; ' s recuento de filas ( &lt;code&gt;length(p) == A.m&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5033e83ebc769b610ff5842eedc3584eb861a747" translate="yes" xml:space="preserve">
          <source>Bilaterally permute &lt;code&gt;A&lt;/code&gt;, returning &lt;code&gt;PAQ&lt;/code&gt; (&lt;code&gt;A[p,q]&lt;/code&gt;). Column-permutation &lt;code&gt;q&lt;/code&gt;'s length must match &lt;code&gt;A&lt;/code&gt;'s column count (&lt;code&gt;length(q) == size(A, 2)&lt;/code&gt;). Row-permutation &lt;code&gt;p&lt;/code&gt;'s length must match &lt;code&gt;A&lt;/code&gt;'s row count (&lt;code&gt;length(p) == size(A, 1)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa67c0c72b73769483142d524a72dd00b47e7280" translate="yes" xml:space="preserve">
          <source>Bilaterally permute &lt;code&gt;A&lt;/code&gt;, storing result &lt;code&gt;PAQ&lt;/code&gt; (&lt;code&gt;A[p,q]&lt;/code&gt;) in &lt;code&gt;X&lt;/code&gt;. Stores intermediate result &lt;code&gt;(AQ)^T&lt;/code&gt; (&lt;code&gt;transpose(A[:,q])&lt;/code&gt;) in optional argument &lt;code&gt;C&lt;/code&gt; if present. Requires that none of &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;, and, if present, &lt;code&gt;C&lt;/code&gt; alias each other; to store result &lt;code&gt;PAQ&lt;/code&gt; back into &lt;code&gt;A&lt;/code&gt;, use the following method lacking &lt;code&gt;X&lt;/code&gt;:</source>
          <target state="translated">Bilateralmente permute &lt;code&gt;A&lt;/code&gt; , almacenar resultado &lt;code&gt;PAQ&lt;/code&gt; ( &lt;code&gt;A[p,q]&lt;/code&gt; ) en &lt;code&gt;X&lt;/code&gt; . Almacena el resultado intermedio &lt;code&gt;(AQ)^T&lt;/code&gt; ( &lt;code&gt;transpose(A[:,q])&lt;/code&gt; ) en el argumento opcional &lt;code&gt;C&lt;/code&gt; si est&amp;aacute; presente. Requiere que ninguno de &lt;code&gt;X&lt;/code&gt; , &lt;code&gt;A&lt;/code&gt; y, si est&amp;aacute; presente, &lt;code&gt;C&lt;/code&gt; se alias entre s&amp;iacute;; para almacenar el resultado &lt;code&gt;PAQ&lt;/code&gt; nuevamente en &lt;code&gt;A&lt;/code&gt; , use el siguiente m&amp;eacute;todo sin &lt;code&gt;X&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c4f1f960deffd3639bacc943d7beee3c049657a" translate="yes" xml:space="preserve">
          <source>Billiards</source>
          <target state="translated">Billiards</target>
        </trans-unit>
        <trans-unit id="c1d93ced1617078468dc67be83745c4934553581" translate="yes" xml:space="preserve">
          <source>Binary (or unary) operators like &lt;code&gt;.+&lt;/code&gt; are handled with the same mechanism: they are equivalent to &lt;code&gt;broadcast&lt;/code&gt; calls and are fused with other nested &quot;dot&quot; calls. &lt;code&gt;X .+= Y&lt;/code&gt; etcetera is equivalent to &lt;code&gt;X .= X .+ Y&lt;/code&gt; and results in a fused in-place assignment; see also &lt;a href=&quot;../mathematical-operations/index#man-dot-operators&quot;&gt;dot operators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9a9dae508a5a43298d0ecf022071a0f6818999" translate="yes" xml:space="preserve">
          <source>Binary (or unary) operators like &lt;code&gt;.+&lt;/code&gt; are handled with the same mechanism: they are equivalent to &lt;code&gt;broadcast&lt;/code&gt; calls and are fused with other nested &quot;dot&quot; calls. &lt;code&gt;X .+= Y&lt;/code&gt; etcetera is equivalent to &lt;code&gt;X .= X .+ Y&lt;/code&gt; and results in a fused in-place assignment; see also &lt;a href=&quot;../mathematical-operations/index#man-dot-operators-1&quot;&gt;dot operators&lt;/a&gt;.</source>
          <target state="translated">Los operadores binarios (o unarios) como &lt;code&gt;.+&lt;/code&gt; Se manejan con el mismo mecanismo: son equivalentes a las llamadas de &lt;code&gt;broadcast&lt;/code&gt; y se fusionan con otras llamadas &quot;punto&quot; anidadas. &lt;code&gt;X .+= Y&lt;/code&gt; etc&amp;eacute;tera es equivalente a &lt;code&gt;X .= X .+ Y&lt;/code&gt; y da como resultado una asignaci&amp;oacute;n in situ fusionada; ver tambi&amp;eacute;n &lt;a href=&quot;../mathematical-operations/index#man-dot-operators-1&quot;&gt;operadores de puntos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a754b43c5cd6bc6c82c954daabe8d0dd0d9ab2bb" translate="yes" xml:space="preserve">
          <source>Binary and octal literals are also supported:</source>
          <target state="translated">También se admiten los literales binarios y octales:</target>
        </trans-unit>
        <trans-unit id="f84a08f5fd91d8b683f66ada3a3f0d37dd8d9416" translate="yes" xml:space="preserve">
          <source>Binary arithmetic &amp;ndash; &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;</source>
          <target state="translated">Aritm&amp;eacute;tica binaria - &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;\&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96c4e4b4e465473735caeea3bbe55395f833f831" translate="yes" xml:space="preserve">
          <source>Binary format: 1 sign, 11 exponent, 52 fraction bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c2dc88cfba0517f9a198be3d135a4aa4ba4c99" translate="yes" xml:space="preserve">
          <source>Binary format: 1 sign, 5 exponent, 10 fraction bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8b640f698cc5a43263f00b745c9489369b4eda" translate="yes" xml:space="preserve">
          <source>Binary format: 1 sign, 8 exponent, 23 fraction bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e24dd0237ae9c6c248482e7cdae84d6dd71aee" translate="yes" xml:space="preserve">
          <source>Binary, octal, and hexadecimal literals may be signed by a &lt;code&gt;-&lt;/code&gt; immediately preceding the unsigned literal. They produce an unsigned integer of the same size as the unsigned literal would do, with the two's complement of the value:</source>
          <target state="translated">Los literales binarios, octales y hexadecimales pueden estar firmados por un &lt;code&gt;-&lt;/code&gt; inmediatamente antes del literal sin firmar. Producen un entero sin signo del mismo tama&amp;ntilde;o que har&amp;iacute;a el literal sin signo, con el complemento a dos del valor:</target>
        </trans-unit>
        <trans-unit id="ccb7426c705bde96fa9acacc232348e6649fb196" translate="yes" xml:space="preserve">
          <source>Bind &lt;code&gt;socket&lt;/code&gt; to the given &lt;code&gt;host:port&lt;/code&gt;. Note that &lt;code&gt;0.0.0.0&lt;/code&gt; will listen on all devices.</source>
          <target state="translated">Vincular el &lt;code&gt;socket&lt;/code&gt; al &lt;code&gt;host:port&lt;/code&gt; dado . Tenga en cuenta que &lt;code&gt;0.0.0.0&lt;/code&gt; escuchar&amp;aacute; en todos los dispositivos.</target>
        </trans-unit>
        <trans-unit id="fe7e2953e9474b2bd135241c7c997e4972287729" translate="yes" xml:space="preserve">
          <source>Bird</source>
          <target state="translated">Bird</target>
        </trans-unit>
        <trans-unit id="65c2eaa1dcfba5d5f9a0a3584ad5e6d8f7aef198" translate="yes" xml:space="preserve">
          <source>Birthday Cake</source>
          <target state="translated">Tarta de cumpleaños</target>
        </trans-unit>
        <trans-unit id="93ea79c838264d2a1d87b4b0c60302c8a973255c" translate="yes" xml:space="preserve">
          <source>BitArray</source>
          <target state="translated">BitArray</target>
        </trans-unit>
        <trans-unit id="4b9bfa4acc76402f1ab1ef6ccdbff0077343e801" translate="yes" xml:space="preserve">
          <source>BitArray()</source>
          <target state="translated">BitArray()</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="d102341c9ef55fb595a96df06da32dfabaf31707" translate="yes" xml:space="preserve">
          <source>Bits Types</source>
          <target state="translated">Tipos de bits</target>
        </trans-unit>
        <trans-unit id="3d60896c2746f9344a7ec07d0c544abfbd6ac054" translate="yes" xml:space="preserve">
          <source>Bitshifts</source>
          <target state="translated">Bitshifts</target>
        </trans-unit>
        <trans-unit id="f06f824cef5caab026aebdaccc85d665d4b620db" translate="yes" xml:space="preserve">
          <source>Bitwise Operators</source>
          <target state="translated">Operadores de Bitwise</target>
        </trans-unit>
        <trans-unit id="003769240202348f8c8c50c01088aea9a66d1338" translate="yes" xml:space="preserve">
          <source>Bitwise and. Implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;three-valued logic&lt;/a&gt;, returning &lt;a href=&quot;../base/index#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; if one operand is &lt;code&gt;missing&lt;/code&gt; and the other is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Bit a bit y. Implementa &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;la l&amp;oacute;gica de tres valores&lt;/a&gt; , volviendo &lt;a href=&quot;../base/index#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt; si un operando est&amp;aacute; &lt;code&gt;missing&lt;/code&gt; y el otro es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39242907d8fbb94d63ee93aa69c2eae1e3bdde37" translate="yes" xml:space="preserve">
          <source>Bitwise and. Implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;three-valued logic&lt;/a&gt;, returning &lt;a href=&quot;../base/index#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; if one operand is &lt;code&gt;missing&lt;/code&gt; and the other is &lt;code&gt;true&lt;/code&gt;. Add parentheses for function application form: &lt;code&gt;(&amp;amp;)(x, y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8386afef0f71e44b527049e051999293a919fac" translate="yes" xml:space="preserve">
          <source>Bitwise exclusive or of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. Implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;three-valued logic&lt;/a&gt;, returning &lt;a href=&quot;../base/index#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; if one of the arguments is &lt;code&gt;missing&lt;/code&gt;.</source>
          <target state="translated">Bitwise exclusivo o de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; . Implementa &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;la l&amp;oacute;gica de tres valores&lt;/a&gt; , volviendo &lt;a href=&quot;../base/index#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt; si uno de los argumentos es &lt;code&gt;missing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95edcf566466d2b1f53eaf47da115b29e2f2b799" translate="yes" xml:space="preserve">
          <source>Bitwise not.</source>
          <target state="translated">Un poco más inteligente no.</target>
        </trans-unit>
        <trans-unit id="55d4c457eca0630bcbc6d9ef2deac549be6e9eb1" translate="yes" xml:space="preserve">
          <source>Bitwise or. Implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;three-valued logic&lt;/a&gt;, returning &lt;a href=&quot;../base/index#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; if one operand is &lt;code&gt;missing&lt;/code&gt; and the other is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Bit a bit o. Implementa &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;la l&amp;oacute;gica de tres valores&lt;/a&gt; , volviendo &lt;a href=&quot;../base/index#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt; si un operando est&amp;aacute; &lt;code&gt;missing&lt;/code&gt; y el otro es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd4e8d6d33b0a0cb69eddf98c203dfb76b59494" translate="yes" xml:space="preserve">
          <source>Black Circle</source>
          <target state="translated">Círculo negro</target>
        </trans-unit>
        <trans-unit id="0548413521ae8836d60c83abbcac0b4ffd5b48c9" translate="yes" xml:space="preserve">
          <source>Black Circle With Two White Dots</source>
          <target state="translated">Círculo negro con dos puntos blancos</target>
        </trans-unit>
        <trans-unit id="d7fd466be098000d71600e8371d0c45e2c49fceb" translate="yes" xml:space="preserve">
          <source>Black Circle With White Dot Right</source>
          <target state="translated">Círculo negro con punto blanco a la derecha</target>
        </trans-unit>
        <trans-unit id="757cd02902cbeae20fd43d03ee03d7081baecb82" translate="yes" xml:space="preserve">
          <source>Black Club Suit</source>
          <target state="translated">Traje de Club Negro</target>
        </trans-unit>
        <trans-unit id="9450d23785e56cc9d47bc85752234baaa5f58935" translate="yes" xml:space="preserve">
          <source>Black Diamond</source>
          <target state="translated">Diamante Negro</target>
        </trans-unit>
        <trans-unit id="1e863cdb2d578f5fa6a621df1fbd38ab6818ad43" translate="yes" xml:space="preserve">
          <source>Black Diamond Suit</source>
          <target state="translated">Traje de diamantes negros</target>
        </trans-unit>
        <trans-unit id="143603a649d02ce401e75e3d4b9853da1d1fab9f" translate="yes" xml:space="preserve">
          <source>Black Down-Pointing Double Triangle</source>
          <target state="translated">Doble triángulo negro con punta hacia abajo</target>
        </trans-unit>
        <trans-unit id="7131227a767e1555b67aefca3c1775aaf0e8eee4" translate="yes" xml:space="preserve">
          <source>Black Down-Pointing Small Triangle / Black Down Pointing Small Triangle</source>
          <target state="translated">Triángulo pequeño negro con punta hacia abajo/Triángulo pequeño negro con punta hacia abajo</target>
        </trans-unit>
        <trans-unit id="157034cbc1651891d53bf3735a8280c2c9e17261" translate="yes" xml:space="preserve">
          <source>Black Down-Pointing Triangle / Black Down Pointing Triangle</source>
          <target state="translated">Triángulo negro con punta hacia abajo/Triángulo negro con punta hacia abajo</target>
        </trans-unit>
        <trans-unit id="79bb28413b3c0425fd63303d0da05ee06907711e" translate="yes" xml:space="preserve">
          <source>Black Heart Suit</source>
          <target state="translated">Traje de Corazón Negro</target>
        </trans-unit>
        <trans-unit id="84860fcb2778d5994fb2e1ec4ed5e1ff25be0c69" translate="yes" xml:space="preserve">
          <source>Black Hexagon</source>
          <target state="translated">Hexágono negro</target>
        </trans-unit>
        <trans-unit id="eb3fe0b35214fe985deafdd4923cb6b5b71ecc00" translate="yes" xml:space="preserve">
          <source>Black Horizontal Ellipse</source>
          <target state="translated">Elipse Horizontal Negra</target>
        </trans-unit>
        <trans-unit id="3d24dccec23ef173830493e234a9797701114f4b" translate="yes" xml:space="preserve">
          <source>Black Large Circle</source>
          <target state="translated">Círculo negro grande</target>
        </trans-unit>
        <trans-unit id="546e54ab988bdc54b4d67a0c87d99ffab31da61d" translate="yes" xml:space="preserve">
          <source>Black Large Square</source>
          <target state="translated">Cuadrado Grande Negro</target>
        </trans-unit>
        <trans-unit id="6c8aa0f6c88d86e760e667a1cfc3b50d0980df03" translate="yes" xml:space="preserve">
          <source>Black Left-Pointing Double Triangle</source>
          <target state="translated">El doble triángulo negro de la izquierda</target>
        </trans-unit>
        <trans-unit id="cc1db57a30b84796696c95aebddd648e97e8d503" translate="yes" xml:space="preserve">
          <source>Black Left-Pointing Pointer / Black Left Pointing Pointer</source>
          <target state="translated">Puntero izquierdo negro/Puntero izquierdo negro</target>
        </trans-unit>
        <trans-unit id="f5b4fdf2d1f644120341bc595bfdc32acb38d8d9" translate="yes" xml:space="preserve">
          <source>Black Left-Pointing Small Triangle / Black Left Pointing Small Triangle</source>
          <target state="translated">Triángulo pequeño de la izquierda negro/Triángulo pequeño de la izquierda negro</target>
        </trans-unit>
        <trans-unit id="394197a1901b539e852cc0120322c6a8cc9c8a83" translate="yes" xml:space="preserve">
          <source>Black Left-Pointing Triangle / Black Left Pointing Triangle</source>
          <target state="translated">Triángulo negro de la izquierda/Triángulo negro de la izquierda</target>
        </trans-unit>
        <trans-unit id="651c14702ebcf7b7b2d5b2b8b2d4c78353cf3dc3" translate="yes" xml:space="preserve">
          <source>Black Lower Left Triangle</source>
          <target state="translated">Triángulo inferior izquierdo negro</target>
        </trans-unit>
        <trans-unit id="a993e08e4e58513d7c168e38a98af83c1b823e70" translate="yes" xml:space="preserve">
          <source>Black Lower Right Triangle</source>
          <target state="translated">Triángulo negro inferior derecho</target>
        </trans-unit>
        <trans-unit id="7784160f9d8de2c5b48e65c73c3ba7c32077d5d3" translate="yes" xml:space="preserve">
          <source>Black Lozenge</source>
          <target state="translated">Pastilla negra</target>
        </trans-unit>
        <trans-unit id="f51954be7eb46c9d2126809c883eed1d9b6af3da" translate="yes" xml:space="preserve">
          <source>Black Medium Diamond</source>
          <target state="translated">Diamante Negro Medio</target>
        </trans-unit>
        <trans-unit id="e638cf3b3eda8a7622b5719c7bc597161ec84dff" translate="yes" xml:space="preserve">
          <source>Black Medium Lozenge</source>
          <target state="translated">Pastilla media negra</target>
        </trans-unit>
        <trans-unit id="7d1eb991c64f2c0aa6c491bf46495204bab8b980" translate="yes" xml:space="preserve">
          <source>Black Medium Small Square</source>
          <target state="translated">Negro Mediano Pequeño Cuadrado</target>
        </trans-unit>
        <trans-unit id="35e1e8816c4ad0b081b1abc5f0b5e6e68515fdd3" translate="yes" xml:space="preserve">
          <source>Black Medium Square</source>
          <target state="translated">Cuadrado Medio Negro</target>
        </trans-unit>
        <trans-unit id="bd88cc2496f705279f693662165cafc22758e595" translate="yes" xml:space="preserve">
          <source>Black Nib</source>
          <target state="translated">Plumín negro</target>
        </trans-unit>
        <trans-unit id="17a74c499db585ffc78ad964cf24f74eeab12fbc" translate="yes" xml:space="preserve">
          <source>Black Parallelogram</source>
          <target state="translated">Paralelogramo negro</target>
        </trans-unit>
        <trans-unit id="a5e0106e423905d56ce64cbee75d3dab7ab613a8" translate="yes" xml:space="preserve">
          <source>Black Pentagon</source>
          <target state="translated">Pentágono Negro</target>
        </trans-unit>
        <trans-unit id="641e8ed8cc5074283080ad85521696fc93454500" translate="yes" xml:space="preserve">
          <source>Black Question Mark Ornament</source>
          <target state="translated">Adorno negro de signo de interrogación</target>
        </trans-unit>
        <trans-unit id="d17f522d42443e1dee4d94f18ac22410a504bd60" translate="yes" xml:space="preserve">
          <source>Black Rectangle</source>
          <target state="translated">Rectángulo negro</target>
        </trans-unit>
        <trans-unit id="c7dbb16f8d25cc978eab91325f13bfbb34eb443b" translate="yes" xml:space="preserve">
          <source>Black Right-Pointing Double Triangle</source>
          <target state="translated">Doble triángulo negro de punta derecha</target>
        </trans-unit>
        <trans-unit id="9a22fd5458a747bf2f8b9190b0800a8f327c6da4" translate="yes" xml:space="preserve">
          <source>Black Right-Pointing Pentagon</source>
          <target state="translated">Pentágono negro de punta derecha</target>
        </trans-unit>
        <trans-unit id="08e8d8d34fe44b6c1da81bad30dfbb3dd0e4dc17" translate="yes" xml:space="preserve">
          <source>Black Right-Pointing Pointer / Black Right Pointing Pointer</source>
          <target state="translated">Black Right-Pointing Pointer/Black Right Pointing Pointer</target>
        </trans-unit>
        <trans-unit id="356acd32b10439549774affb8876e75924c2d411" translate="yes" xml:space="preserve">
          <source>Black Right-Pointing Small Triangle / Black Right Pointing Small Triangle</source>
          <target state="translated">Triángulo pequeño con punta derecha negra/Triángulo pequeño con punta derecha negra</target>
        </trans-unit>
        <trans-unit id="91e55728177959f6eb733905e6d5d4b3b30df4c9" translate="yes" xml:space="preserve">
          <source>Black Right-Pointing Triangle / Black Right Pointing Triangle</source>
          <target state="translated">Triángulo negro puntiagudo derecho/Triángulo negro puntiagudo derecho</target>
        </trans-unit>
        <trans-unit id="7d35d74427ef7783600f70aed6734b005afcf3a5" translate="yes" xml:space="preserve">
          <source>Black Rightwards Arrow / Black Right Arrow</source>
          <target state="translated">Flecha negra hacia la derecha/Flecha negra hacia la derecha</target>
        </trans-unit>
        <trans-unit id="4e1227a3b661c19e11075ce6c898353138a6cae4" translate="yes" xml:space="preserve">
          <source>Black Scissors</source>
          <target state="translated">Tijeras negras</target>
        </trans-unit>
        <trans-unit id="3a1f9cf604664d5b2cfd7032309a96005ebcdd85" translate="yes" xml:space="preserve">
          <source>Black Small Diamond</source>
          <target state="translated">Diamante pequeño negro</target>
        </trans-unit>
        <trans-unit id="560e8f05828a680fa9a4f86877ed9847156b94a9" translate="yes" xml:space="preserve">
          <source>Black Small Lozenge</source>
          <target state="translated">Pequeña pastilla negra</target>
        </trans-unit>
        <trans-unit id="2b77f77dfe2cfd17e674571a7ea6fb868ae1d0ef" translate="yes" xml:space="preserve">
          <source>Black Small Square</source>
          <target state="translated">Pequeño cuadrado negro</target>
        </trans-unit>
        <trans-unit id="53c256b922dbb0b4f34a326b72cef14e0af86c98" translate="yes" xml:space="preserve">
          <source>Black Small Star</source>
          <target state="translated">Estrella pequeña negra</target>
        </trans-unit>
        <trans-unit id="0ae1e3c46db08b1fb9b73728e2d7c428044fafa6" translate="yes" xml:space="preserve">
          <source>Black Smiling Face</source>
          <target state="translated">Cara sonriente negra</target>
        </trans-unit>
        <trans-unit id="8e05108bb9601bfdc9ba0035253f2d64bdf60694" translate="yes" xml:space="preserve">
          <source>Black Spade Suit</source>
          <target state="translated">Traje de pala negra</target>
        </trans-unit>
        <trans-unit id="a01d4a6e7dbc191a1cae5b3bc838a6150cf238dd" translate="yes" xml:space="preserve">
          <source>Black Square</source>
          <target state="translated">Cuadrado Negro</target>
        </trans-unit>
        <trans-unit id="034b512bb5927fe50340904cd99432e1e4d73c3e" translate="yes" xml:space="preserve">
          <source>Black Square Button</source>
          <target state="translated">Botón cuadrado negro</target>
        </trans-unit>
        <trans-unit id="fc626f5b71fcc01fb3ad79538a1fdd9c2c9068b3" translate="yes" xml:space="preserve">
          <source>Black Star</source>
          <target state="translated">Estrella Negra</target>
        </trans-unit>
        <trans-unit id="cb52335be163268292bf2e0b734ba8007620b51b" translate="yes" xml:space="preserve">
          <source>Black Sun With Rays</source>
          <target state="translated">Sol negro con rayos</target>
        </trans-unit>
        <trans-unit id="337ee67e4218483768c29454b46d3636ae0684a9" translate="yes" xml:space="preserve">
          <source>Black Telephone</source>
          <target state="translated">Teléfono negro</target>
        </trans-unit>
        <trans-unit id="35536366f9217c4ba0ce04cd1f6ccbeed6b48c42" translate="yes" xml:space="preserve">
          <source>Black Universal Recycling Symbol</source>
          <target state="translated">Símbolo de reciclaje universal negro</target>
        </trans-unit>
        <trans-unit id="b63e9c12f3af70d3503bfb12a43507958e2cc9a3" translate="yes" xml:space="preserve">
          <source>Black Up-Pointing Double Triangle</source>
          <target state="translated">Doble triángulo negro con punta hacia arriba</target>
        </trans-unit>
        <trans-unit id="5f6c177d2a76e96c788cfff6b45ea350fc5d5f85" translate="yes" xml:space="preserve">
          <source>Black Up-Pointing Small Triangle / Black Up Pointing Small Triangle</source>
          <target state="translated">Triángulo pequeño negro con punta hacia arriba/Triángulo pequeño negro con punta hacia arriba</target>
        </trans-unit>
        <trans-unit id="b019fe1ecc9d7bb3e20c546241096de99470763e" translate="yes" xml:space="preserve">
          <source>Black Up-Pointing Triangle / Black Up Pointing Triangle</source>
          <target state="translated">Triángulo negro de punta ascendente/Triángulo negro de punta ascendente</target>
        </trans-unit>
        <trans-unit id="fd38c797487c28729bfa7084dbd1bc7a8bd9f832" translate="yes" xml:space="preserve">
          <source>Black Upper Left Triangle</source>
          <target state="translated">Triángulo superior izquierdo negro</target>
        </trans-unit>
        <trans-unit id="330a4e0eb7ba380f3677a102ba04f4ed4533c835" translate="yes" xml:space="preserve">
          <source>Black Upper Right Triangle</source>
          <target state="translated">Triángulo negro superior derecho</target>
        </trans-unit>
        <trans-unit id="b5b860326f4e45d10acdc58e96248cded912b473" translate="yes" xml:space="preserve">
          <source>Black Vertical Ellipse</source>
          <target state="translated">Elipse vertical negra</target>
        </trans-unit>
        <trans-unit id="12f762cae12dfd257dbcc1ff1c80f6e21ca05f3a" translate="yes" xml:space="preserve">
          <source>Black Vertical Rectangle</source>
          <target state="translated">Rectángulo vertical negro</target>
        </trans-unit>
        <trans-unit id="b6c6da3063676ec7403eb5eae23f28a26cc0a5b1" translate="yes" xml:space="preserve">
          <source>Black Very Small Square</source>
          <target state="translated">Cuadrado negro muy pequeño</target>
        </trans-unit>
        <trans-unit id="f56700596b30b0c05182a7f770b5570cc76ca6d1" translate="yes" xml:space="preserve">
          <source>Black-Letter Capital C / Black-Letter C</source>
          <target state="translated">Black-Letter Capital C/Black-Letter C</target>
        </trans-unit>
        <trans-unit id="3212f9c9a227cc0ef9fc8c3906dee3d018e41215" translate="yes" xml:space="preserve">
          <source>Black-Letter Capital H / Black-Letter H</source>
          <target state="translated">Black-Letter Capital H/Black-Letter H</target>
        </trans-unit>
        <trans-unit id="882d2d7aaddec9c72be91b9b04d8760d1ae0ecd3" translate="yes" xml:space="preserve">
          <source>Black-Letter Capital I / Black-Letter I</source>
          <target state="translated">Letra Negra Capital I/Letra Negra I</target>
        </trans-unit>
        <trans-unit id="8fc35324b6b0420a0444517c7f25614eb146dba4" translate="yes" xml:space="preserve">
          <source>Black-Letter Capital R / Black-Letter R</source>
          <target state="translated">Black-Letter Capital R/Black-Letter R</target>
        </trans-unit>
        <trans-unit id="4d139693ac24fa1ff39a927bee456e508f1aa95b" translate="yes" xml:space="preserve">
          <source>Black-Letter Capital Z / Black-Letter Z</source>
          <target state="translated">Letra negra mayúscula Z/Letra negra Z</target>
        </trans-unit>
        <trans-unit id="b847d9aaffd54e2b50551787d032091550aee835" translate="yes" xml:space="preserve">
          <source>Blank Symbol / Blank</source>
          <target state="translated">Símbolo en blanco/En blanco</target>
        </trans-unit>
        <trans-unit id="9a1f6bbeb59612c3b0d54abe35a469485c6370c0" translate="yes" xml:space="preserve">
          <source>Block quotes</source>
          <target state="translated">Citas en bloque</target>
        </trans-unit>
        <trans-unit id="413fe7b76bad922e0442b15508cafb42d749001b" translate="yes" xml:space="preserve">
          <source>Block the current task for a specified number of seconds. The minimum sleep time is 1 millisecond or input of &lt;code&gt;0.001&lt;/code&gt;.</source>
          <target state="translated">Bloquea la tarea actual durante un n&amp;uacute;mero espec&amp;iacute;fico de segundos. El tiempo m&amp;iacute;nimo de reposo es 1 milisegundo o una entrada de &lt;code&gt;0.001&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da010911be728132526ebfb6c6611c41bf6de799" translate="yes" xml:space="preserve">
          <source>Block the current task until some event occurs, depending on the type of the argument:</source>
          <target state="translated">Bloquear la tarea actual hasta que ocurra algún evento,dependiendo del tipo de argumento:</target>
        </trans-unit>
        <trans-unit id="53a69c53a3e2458ff176a179fec2def0b4121cba" translate="yes" xml:space="preserve">
          <source>Blossom</source>
          <target state="translated">Blossom</target>
        </trans-unit>
        <trans-unit id="a6a6cc1c6c34e00f61be8a8c251a0e48237ab0a0" translate="yes" xml:space="preserve">
          <source>Blowfish</source>
          <target state="translated">Blowfish</target>
        </trans-unit>
        <trans-unit id="5963e560ae138684a55eeb248a0ec6a3d3e89c64" translate="yes" xml:space="preserve">
          <source>Blue Book</source>
          <target state="translated">El Libro Azul</target>
        </trans-unit>
        <trans-unit id="a660e98a286d13e32848e06494a9c4e64598de77" translate="yes" xml:space="preserve">
          <source>Blue Heart</source>
          <target state="translated">Corazón Azul</target>
        </trans-unit>
        <trans-unit id="30efd20f542ce356dcbbbbb0473393dd8189443b" translate="yes" xml:space="preserve">
          <source>Boar</source>
          <target state="translated">Boar</target>
        </trans-unit>
        <trans-unit id="19e07430eed6d97d6d73cb4a2967b1f316520f54" translate="yes" xml:space="preserve">
          <source>Bold</source>
          <target state="translated">Bold</target>
        </trans-unit>
        <trans-unit id="d5bf9d845ab97255cb3ab1100656db4f59731808" translate="yes" xml:space="preserve">
          <source>Bomb</source>
          <target state="translated">Bomb</target>
        </trans-unit>
        <trans-unit id="441da1bf0eb8dcaca895f5d48325eab484ada1e0" translate="yes" xml:space="preserve">
          <source>Bookmark</source>
          <target state="translated">Bookmark</target>
        </trans-unit>
        <trans-unit id="d51cc7068c060eda1ab4c1992e8e7188251dc5d0" translate="yes" xml:space="preserve">
          <source>Bookmark Tabs</source>
          <target state="translated">Pestañas de marcadores</target>
        </trans-unit>
        <trans-unit id="4a7fdd8c17425252332ea0e89a35722b72d83135" translate="yes" xml:space="preserve">
          <source>Books</source>
          <target state="translated">Books</target>
        </trans-unit>
        <trans-unit id="9110e7395759cef34c9766cb75b920652e0ab037" translate="yes" xml:space="preserve">
          <source>Boolean not. Implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;three-valued logic&lt;/a&gt;, returning &lt;a href=&quot;../base/index#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;missing&lt;/code&gt;.</source>
          <target state="translated">Booleano no. Implementa &lt;a href=&quot;https://en.wikipedia.org/wiki/Three-valued_logic&quot;&gt;la l&amp;oacute;gica de tres valores&lt;/a&gt; , volviendo &lt;a href=&quot;../base/index#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt; si &lt;code&gt;x&lt;/code&gt; est&amp;aacute; &lt;code&gt;missing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29a8f9f9b6a1cad56addb73a669797d31b6ebe67" translate="yes" xml:space="preserve">
          <source>Boolean operations &lt;em&gt;without&lt;/em&gt; short-circuit evaluation can be done with the bitwise boolean operators introduced in &lt;a href=&quot;../mathematical-operations/index#Mathematical-Operations-and-Elementary-Functions&quot;&gt;Mathematical Operations and Elementary Functions&lt;/a&gt;: &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;. These are normal functions, which happen to support infix operator syntax, but always evaluate their arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e74670608867d2d5a7f2c19b7656691fac4def" translate="yes" xml:space="preserve">
          <source>Boolean operations &lt;em&gt;without&lt;/em&gt; short-circuit evaluation can be done with the bitwise boolean operators introduced in &lt;a href=&quot;../mathematical-operations/index#Mathematical-Operations-and-Elementary-Functions-1&quot;&gt;Mathematical Operations and Elementary Functions&lt;/a&gt;: &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;. These are normal functions, which happen to support infix operator syntax, but always evaluate their arguments:</source>
          <target state="translated">Las operaciones booleanas &lt;em&gt;sin&lt;/em&gt; evaluaci&amp;oacute;n de cortocircuito se pueden realizar con los operadores booleanos bit a bit introducidos en &lt;a href=&quot;../mathematical-operations/index#Mathematical-Operations-and-Elementary-Functions-1&quot;&gt;Operaciones matem&amp;aacute;ticas y funciones elementales&lt;/a&gt; : &lt;code&gt;&amp;amp;&lt;/code&gt; y &lt;code&gt;|&lt;/code&gt; . Estas son funciones normales, que son compatibles con la sintaxis del operador infijo, pero siempre eval&amp;uacute;an sus argumentos:</target>
        </trans-unit>
        <trans-unit id="6aee8c1403b8f533d1b1cfe7c809aba2942d98a3" translate="yes" xml:space="preserve">
          <source>Boolean type, containing the values &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Tipo booleano, que contiene los valores &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d3edec84ef05d40009ef42ad79a184127ff2d32" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#Dates.Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; are basically immutable &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt; wrappers. The single &lt;code&gt;instant&lt;/code&gt; field of either type is actually a &lt;code&gt;UTInstant{P}&lt;/code&gt; type, which represents a continuously increasing machine timeline based on the UT second &lt;a href=&quot;#footnote-1&quot;&gt;[1]&lt;/a&gt;. The &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; type is not aware of time zones (&lt;em&gt;naive&lt;/em&gt;, in Python parlance), analogous to a &lt;em&gt;LocalDateTime&lt;/em&gt; in Java 8. Additional time zone functionality can be added through the &lt;a href=&quot;https://github.com/JuliaTime/TimeZones.jl/&quot;&gt;TimeZones.jl package&lt;/a&gt;, which compiles the &lt;a href=&quot;http://www.iana.org/time-zones&quot;&gt;IANA time zone database&lt;/a&gt;. Both &lt;a href=&quot;#Dates.Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; are based on the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; standard, which follows the proleptic Gregorian calendar. One note is that the ISO 8601 standard is particular about BC/BCE dates. In general, the last day of the BC/BCE era, 1-12-31 BC/BCE, was followed by 1-1-1 AD/CE, thus no year zero exists. The ISO standard, however, states that 1 BC/BCE is year zero, so &lt;code&gt;0000-12-31&lt;/code&gt; is the day before &lt;code&gt;0001-01-01&lt;/code&gt;, and year &lt;code&gt;-0001&lt;/code&gt; (yes, negative one for the year) is 2 BC/BCE, year &lt;code&gt;-0002&lt;/code&gt; is 3 BC/BCE, etc.</source>
          <target state="translated">Tanto &lt;a href=&quot;#Dates.Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; como &lt;a href=&quot;#Dates.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; son b&amp;aacute;sicamente contenedores &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt; &lt;code&gt;Int64&lt;/code&gt; &lt;/a&gt; inmutables . El campo &lt;code&gt;instant&lt;/code&gt; &amp;aacute;neo &amp;uacute;nico de cualquier tipo es en realidad un tipo &lt;code&gt;UTInstant{P}&lt;/code&gt; , que representa una l&amp;iacute;nea de tiempo de la m&amp;aacute;quina que aumenta continuamente en funci&amp;oacute;n del segundo UT &lt;a href=&quot;#footnote-1&quot;&gt;[1]&lt;/a&gt; . El tipo &lt;a href=&quot;#Dates.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; no tiene en cuenta las zonas horarias ( &lt;em&gt;ingenuo&lt;/em&gt; , en lenguaje Python), an&amp;aacute;logo a &lt;em&gt;LocalDateTime&lt;/em&gt; en Java 8. Se pueden agregar funciones adicionales de zona horaria a trav&amp;eacute;s del &lt;a href=&quot;https://github.com/JuliaTime/TimeZones.jl/&quot;&gt;paquete TimeZones.jl&lt;/a&gt; , que compila la &lt;a href=&quot;http://www.iana.org/time-zones&quot;&gt;base de datos de zona horaria de IANA&lt;/a&gt; . Tanto &lt;a href=&quot;#Dates.Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; como &lt;a href=&quot;#Dates.DateTime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; se basan en el&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;Norma ISO 8601&lt;/a&gt; , que sigue el prol&amp;eacute;ptico calendario gregoriano. Una nota es que el est&amp;aacute;ndar ISO 8601 es particular sobre las fechas BC / BCE. En general, el &amp;uacute;ltimo d&amp;iacute;a de la era BC / BCE, 1-12-31 BC / BCE, fue seguido por 1-1-1 AD / CE, por lo que no existe un a&amp;ntilde;o cero. Sin embargo, la norma ISO establece que 1 a.C. / a.C. es el a&amp;ntilde;o cero, por lo que &lt;code&gt;0000-12-31&lt;/code&gt; es el d&amp;iacute;a anterior a &lt;code&gt;0001-01-01&lt;/code&gt; , y el a&amp;ntilde;o &lt;code&gt;-0001&lt;/code&gt; (s&amp;iacute;, uno negativo para el a&amp;ntilde;o) es 2 a.C. / a.C. , el a&amp;ntilde;o &lt;code&gt;-0002&lt;/code&gt; es 3 AC / BCE, etc.</target>
        </trans-unit>
        <trans-unit id="9bd9372ad6716aa533ad19c4f4344f9f861990d8" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#Dates.Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; are basically immutable &lt;a href=&quot;../../base/numbers/index#Core.Int64&quot;&gt;&lt;code&gt;Int64&lt;/code&gt;&lt;/a&gt; wrappers. The single &lt;code&gt;instant&lt;/code&gt; field of either type is actually a &lt;code&gt;UTInstant{P}&lt;/code&gt; type, which represents a continuously increasing machine timeline based on the UT second &lt;sup&gt;&lt;a href=&quot;#footnote-1&quot; id=&quot;citeref-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;. The &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; type is not aware of time zones (&lt;em&gt;naive&lt;/em&gt;, in Python parlance), analogous to a &lt;em&gt;LocalDateTime&lt;/em&gt; in Java 8. Additional time zone functionality can be added through the &lt;a href=&quot;https://github.com/JuliaTime/TimeZones.jl/&quot;&gt;TimeZones.jl package&lt;/a&gt;, which compiles the &lt;a href=&quot;http://www.iana.org/time-zones&quot;&gt;IANA time zone database&lt;/a&gt;. Both &lt;a href=&quot;#Dates.Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Dates.DateTime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; are based on the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; standard, which follows the proleptic Gregorian calendar. One note is that the ISO 8601 standard is particular about BC/BCE dates. In general, the last day of the BC/BCE era, 1-12-31 BC/BCE, was followed by 1-1-1 AD/CE, thus no year zero exists. The ISO standard, however, states that 1 BC/BCE is year zero, so &lt;code&gt;0000-12-31&lt;/code&gt; is the day before &lt;code&gt;0001-01-01&lt;/code&gt;, and year &lt;code&gt;-0001&lt;/code&gt; (yes, negative one for the year) is 2 BC/BCE, year &lt;code&gt;-0002&lt;/code&gt; is 3 BC/BCE, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bf1ed5d0b3dee373193977f771d3d28aa04eff" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;fdot&lt;/code&gt; compute the same thing. However, &lt;code&gt;fdot&lt;/code&gt; (defined with the help of the &lt;a href=&quot;../../base/arrays/index#Base.Broadcast.@__dot__&quot;&gt;&lt;code&gt;@.&lt;/code&gt;&lt;/a&gt; macro) is significantly faster when applied to an array:</source>
          <target state="translated">Tanto &lt;code&gt;f&lt;/code&gt; como &lt;code&gt;fdot&lt;/code&gt; calculan lo mismo. Sin embargo, &lt;code&gt;fdot&lt;/code&gt; (definido con la ayuda de la macro &lt;a href=&quot;../../base/arrays/index#Base.Broadcast.@__dot__&quot;&gt; &lt;code&gt;@.&lt;/code&gt; &lt;/a&gt; ) Es significativamente m&amp;aacute;s r&amp;aacute;pido cuando se aplica a una matriz:</target>
        </trans-unit>
        <trans-unit id="894facd8272490d18ae36dfbd0aea23dbfd8d0be" translate="yes" xml:space="preserve">
          <source>Both abstract and concrete types can be parameterized by other types. They can also be parameterized by symbols, by values of any type for which &lt;a href=&quot;../../base/base/index#Base.isbits&quot;&gt;&lt;code&gt;isbits&lt;/code&gt;&lt;/a&gt; returns true (essentially, things like numbers and bools that are stored like C types or &lt;code&gt;struct&lt;/code&gt;s with no pointers to other objects), and also by tuples thereof. Type parameters may be omitted when they do not need to be referenced or restricted.</source>
          <target state="translated">Tanto los tipos abstractos como los concretos pueden parametrizarse con otros tipos. Tambi&amp;eacute;n se pueden parametrizar mediante s&amp;iacute;mbolos, mediante valores de cualquier tipo para los que &lt;a href=&quot;../../base/base/index#Base.isbits&quot;&gt; &lt;code&gt;isbits&lt;/code&gt; &lt;/a&gt; devuelve verdadero (esencialmente, cosas como n&amp;uacute;meros y bools que se almacenan como tipos C o &lt;code&gt;struct&lt;/code&gt; sin punteros a otros objetos), y tambi&amp;eacute;n mediante tuplas de los mismos. Los par&amp;aacute;metros de tipo pueden omitirse cuando no es necesario hacer referencia a ellos o restringirlos.</target>
        </trans-unit>
        <trans-unit id="63dac16e286415a31cf4c5cfa7d67dab90fd4b82" translate="yes" xml:space="preserve">
          <source>Both concatenation and string interpolation call &lt;a href=&quot;../../base/strings/index#Base.string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; to convert objects into string form. However, &lt;code&gt;string&lt;/code&gt; actually just returns the output of &lt;a href=&quot;../../base/io-network/index#Base.print&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt;, so new types should add methods to &lt;a href=&quot;../../base/io-network/index#Base.print&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;show&lt;/code&gt; instead of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Tanto la concatenaci&amp;oacute;n como la interpolaci&amp;oacute;n de cadenas llaman a la &lt;a href=&quot;../../base/strings/index#Base.string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt; para convertir objetos en forma de cadena. Sin embargo, la &lt;code&gt;string&lt;/code&gt; realidad solo devuelve la salida de &lt;a href=&quot;../../base/io-network/index#Base.print&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt; , por lo que los nuevos tipos deben agregar m&amp;eacute;todos para &lt;a href=&quot;../../base/io-network/index#Base.print&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt; o &lt;code&gt;show&lt;/code&gt; lugar de &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="007479614c6ddfc352db8c91872c6cdcf690ee04" translate="yes" xml:space="preserve">
          <source>Both expressions are interpreted as function application: any expression that is not a numeric literal, when immediately followed by a parenthetical, is interpreted as a function applied to the values in parentheses (see &lt;a href=&quot;../faq/index#Functions&quot;&gt;Functions&lt;/a&gt; for more about functions). Thus, in both of these cases, an error occurs since the left-hand value is not a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92cf62db18ffc6b16befca5871ba839cf28860c" translate="yes" xml:space="preserve">
          <source>Both expressions are interpreted as function application: any expression that is not a numeric literal, when immediately followed by a parenthetical, is interpreted as a function applied to the values in parentheses (see &lt;a href=&quot;../faq/index#Functions-1&quot;&gt;Functions&lt;/a&gt; for more about functions). Thus, in both of these cases, an error occurs since the left-hand value is not a function.</source>
          <target state="translated">Ambas expresiones se interpretan como aplicaci&amp;oacute;n de funciones: cualquier expresi&amp;oacute;n que no sea un literal num&amp;eacute;rico, cuando va seguida inmediatamente de un par&amp;eacute;ntesis, se interpreta como una funci&amp;oacute;n aplicada a los valores entre par&amp;eacute;ntesis (consulte &lt;a href=&quot;../faq/index#Functions-1&quot;&gt;Funciones&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las funciones). Por tanto, en ambos casos, se produce un error ya que el valor de la izquierda no es una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fe2f60cb62bba939fc1814f0702994179d2cc9fd" translate="yes" xml:space="preserve">
          <source>Both these implementations, although different, do essentially the same thing: a runtime loop over the dimensions of the array, collecting the offset in each dimension into the final index.</source>
          <target state="translated">Ambas implementaciones,aunque diferentes,hacen esencialmente lo mismo:un bucle en tiempo de ejecución sobre las dimensiones del conjunto,recogiendo el desplazamiento en cada dimensión en el índice final.</target>
        </trans-unit>
        <trans-unit id="9c695a21716f0561a4e4e8d8969c9a67ff3ac14a" translate="yes" xml:space="preserve">
          <source>Bottom Curly Bracket</source>
          <target state="translated">Soporte rizado inferior</target>
        </trans-unit>
        <trans-unit id="5c381cbda1ed56fa362cad0521e4ca378f6df12d" translate="yes" xml:space="preserve">
          <source>Bottom Left Corner</source>
          <target state="translated">Esquina inferior izquierda</target>
        </trans-unit>
        <trans-unit id="8b91a1776362601aa94f5e511fc42880fb137818" translate="yes" xml:space="preserve">
          <source>Bottom Right Corner</source>
          <target state="translated">Esquina inferior derecha</target>
        </trans-unit>
        <trans-unit id="408cb2c9aacb6c00f4eea9f155e68230edfc13be" translate="yes" xml:space="preserve">
          <source>Bottom Square Bracket</source>
          <target state="translated">Soporte cuadrado inferior</target>
        </trans-unit>
        <trans-unit id="b587f4044bf50468cb606a8c8b879cf7bf3a57b0" translate="yes" xml:space="preserve">
          <source>Bottom Square Bracket Over Top Square Bracket</source>
          <target state="translated">Soporte cuadrado inferior sobre el soporte cuadrado superior</target>
        </trans-unit>
        <trans-unit id="be63873217899f3efce2481a86c1d5a6e1aa9ff7" translate="yes" xml:space="preserve">
          <source>Bouquet</source>
          <target state="translated">Bouquet</target>
        </trans-unit>
        <trans-unit id="527e7050bb885ff38897eb7cbe0d818d6e05448e" translate="yes" xml:space="preserve">
          <source>Bowling</source>
          <target state="translated">Bowling</target>
        </trans-unit>
        <trans-unit id="df3f8f8f9dfd1bd2fca6e5c445d1a47fa385ede3" translate="yes" xml:space="preserve">
          <source>Bowtie</source>
          <target state="translated">Bowtie</target>
        </trans-unit>
        <trans-unit id="2365940089f0b35468618bed420a02ff8d78ea80" translate="yes" xml:space="preserve">
          <source>Box Drawings Light Diagonal Upper Left To Lower Right / Forms Light Diagonal Upper Left To Lower Right</source>
          <target state="translated">Dibujos de cajas de luz diagonales de arriba a abajo a la derecha/Formas de luz diagonales de arriba a abajo a la derecha</target>
        </trans-unit>
        <trans-unit id="510ae6748e0c9b114a5f8b83c8badc7f63a16bc0" translate="yes" xml:space="preserve">
          <source>Box Drawings Light Diagonal Upper Right To Lower Left / Forms Light Diagonal Upper Right To Lower Left</source>
          <target state="translated">Dibujos de cajas de luz Diagonal de la derecha superior a la izquierda inferior/Formas de luz Diagonal de la derecha superior a la izquierda inferior</target>
        </trans-unit>
        <trans-unit id="12f6d098ab5b7193c3d26b08f696b2a980dca3f4" translate="yes" xml:space="preserve">
          <source>Box Drawings Light Triple Dash Vertical / Forms Light Triple Dash Vertical</source>
          <target state="translated">Dibujos de cajas de luz de triple rayo vertical/Formas de luz de triple rayo vertical</target>
        </trans-unit>
        <trans-unit id="85230437c79e72b707969ab19fa9c93e520c40d0" translate="yes" xml:space="preserve">
          <source>Box Drawings Up Light And Left Heavy / Forms Up Light And Left Heavy</source>
          <target state="translated">Dibujos de la caja ligera y pesada a la izquierda/Formas ligeras y pesadas a la izquierda</target>
        </trans-unit>
        <trans-unit id="b9dc9d8cb52edb821b0da78df2b6682eb917d791" translate="yes" xml:space="preserve">
          <source>Boy</source>
          <target state="translated">Boy</target>
        </trans-unit>
        <trans-unit id="c61eb5df5d78529f719e752eeef8ece81e0caaa8" translate="yes" xml:space="preserve">
          <source>Bread</source>
          <target state="translated">Bread</target>
        </trans-unit>
        <trans-unit id="67334b607f6cd61759a7703ce073645a7bb380d4" translate="yes" xml:space="preserve">
          <source>Break functions into multiple definitions</source>
          <target state="translated">Dividir las funciones en múltiples definiciones</target>
        </trans-unit>
        <trans-unit id="8a10e4a625ea22134f5962dee4da949a99868e13" translate="yes" xml:space="preserve">
          <source>Break out of a loop immediately.</source>
          <target state="translated">Salga de un bucle inmediatamente.</target>
        </trans-unit>
        <trans-unit id="392384778265e06187313603c1377439a8615e6f" translate="yes" xml:space="preserve">
          <source>Break the &lt;code&gt;ConfigEntry&lt;/code&gt; up to the following pieces: section, subsection, name, and value.</source>
          <target state="translated">Divida &lt;code&gt;ConfigEntry&lt;/code&gt; en las siguientes partes: secci&amp;oacute;n, subsecci&amp;oacute;n, nombre y valor.</target>
        </trans-unit>
        <trans-unit id="7632e2c1e249278468e77e6447234ae7607c5253" translate="yes" xml:space="preserve">
          <source>Breve / Spacing Breve</source>
          <target state="translated">Breve/espaciamiento Breve</target>
        </trans-unit>
        <trans-unit id="daaf045cb7109dd158210ed8775987a60503bbb6" translate="yes" xml:space="preserve">
          <source>Bride With Veil</source>
          <target state="translated">Novia con velo</target>
        </trans-unit>
        <trans-unit id="4e7371d09f6498019117c2fcbb67ffe9a940c17f" translate="yes" xml:space="preserve">
          <source>Bridge At Night</source>
          <target state="translated">Puente en la noche</target>
        </trans-unit>
        <trans-unit id="ee60d60ea805fbda38f6f538481a92d3787df0b9" translate="yes" xml:space="preserve">
          <source>Brief description</source>
          <target state="translated">Breve descripción...</target>
        </trans-unit>
        <trans-unit id="b11bca2ce38ace33f9cb3a0f0323440cce89dd0f" translate="yes" xml:space="preserve">
          <source>Briefcase</source>
          <target state="translated">Briefcase</target>
        </trans-unit>
        <trans-unit id="77ca3fc6500edac54d325df1bbb7ac8e363c54b5" translate="yes" xml:space="preserve">
          <source>Broadcast</source>
          <target state="translated">Broadcast</target>
        </trans-unit>
        <trans-unit id="5959941fc9ce31c144990539361b6855d239f922" translate="yes" xml:space="preserve">
          <source>Broadcast Styles</source>
          <target state="translated">Estilos de emisión</target>
        </trans-unit>
        <trans-unit id="cdaa679362eaad18a4a290d4b2177d1c9eddf091" translate="yes" xml:space="preserve">
          <source>Broadcast and vectorization</source>
          <target state="translated">Radiodifusión y vectorización</target>
        </trans-unit>
        <trans-unit id="7df7947bfeebee1e64e3a5fe7acfcbaa176cd869" translate="yes" xml:space="preserve">
          <source>Broadcast the function &lt;code&gt;f&lt;/code&gt; over the arrays, tuples, collections, &lt;a href=&quot;../c/index#Core.Ref&quot;&gt;&lt;code&gt;Ref&lt;/code&gt;&lt;/a&gt;s and/or scalars &lt;code&gt;As&lt;/code&gt;.</source>
          <target state="translated">Transmita la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; sobre las matrices, tuplas, colecciones, &lt;a href=&quot;../c/index#Core.Ref&quot;&gt; &lt;code&gt;Ref&lt;/code&gt; &lt;/a&gt; sy / o escalares &lt;code&gt;As&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="074efe61b6453184efecedf79f56223cb3b56a06" translate="yes" xml:space="preserve">
          <source>Broadcast.@__dot__</source>
          <target state="translated">Broadcast.@__dot__</target>
        </trans-unit>
        <trans-unit id="d9974c014c3e7a0c286c1e54c44afebb2e5a2605" translate="yes" xml:space="preserve">
          <source>Broadcast.AbstractArrayStyle</source>
          <target state="translated">Broadcast.AbstractArrayStyle</target>
        </trans-unit>
        <trans-unit id="e479e2fec9cd8edd73518e3aa9d740af4ffed128" translate="yes" xml:space="preserve">
          <source>Broadcast.ArrayStyle</source>
          <target state="translated">Broadcast.ArrayStyle</target>
        </trans-unit>
        <trans-unit id="46b115d26f9c6f955c31e3892d4b89859d8782ab" translate="yes" xml:space="preserve">
          <source>Broadcast.BroadcastStyle</source>
          <target state="translated">Broadcast.BroadcastStyle</target>
        </trans-unit>
        <trans-unit id="dfd372b601ba77b3813f2634bb5fb9643c14c102" translate="yes" xml:space="preserve">
          <source>Broadcast.DefaultArrayStyle</source>
          <target state="translated">Broadcast.DefaultArrayStyle</target>
        </trans-unit>
        <trans-unit id="6969d3cd7b2ed2ce0f9a60fb4945dade93d4e117" translate="yes" xml:space="preserve">
          <source>Broadcast.broadcast!()</source>
          <target state="translated">Broadcast.broadcast!()</target>
        </trans-unit>
        <trans-unit id="2d33589d08eead5af3fe72a94a8b53b3373f4645" translate="yes" xml:space="preserve">
          <source>Broadcast.broadcast()</source>
          <target state="translated">Broadcast.broadcast()</target>
        </trans-unit>
        <trans-unit id="d8be6debc5bb7fb35ee9eb11d215775cae452707" translate="yes" xml:space="preserve">
          <source>Broadcast.broadcastable()</source>
          <target state="translated">Broadcast.broadcastable()</target>
        </trans-unit>
        <trans-unit id="48464259628c114acb1957dc941186fb95dc6984" translate="yes" xml:space="preserve">
          <source>Broadcast.combine_axes()</source>
          <target state="translated">Broadcast.combine_axes()</target>
        </trans-unit>
        <trans-unit id="65a7f7386144353a37453858bdd5ecb6ccb1274f" translate="yes" xml:space="preserve">
          <source>Broadcast.combine_styles()</source>
          <target state="translated">Broadcast.combine_styles()</target>
        </trans-unit>
        <trans-unit id="d36a0668f40c2a01499f97eb697585c01ce9b9ab" translate="yes" xml:space="preserve">
          <source>Broadcast.result_style()</source>
          <target state="translated">Broadcast.result_style()</target>
        </trans-unit>
        <trans-unit id="ba459229366746c447e3cdf752eb917433152cfe" translate="yes" xml:space="preserve">
          <source>Broadcasting</source>
          <target state="translated">Broadcasting</target>
        </trans-unit>
        <trans-unit id="0e83693fd8be7602fb86ef05c34ce5d03fd5fce4" translate="yes" xml:space="preserve">
          <source>Broadcasting applies the function &lt;code&gt;f&lt;/code&gt; over the elements of the container arguments and the scalars themselves in &lt;code&gt;As&lt;/code&gt;. Singleton and missing dimensions are expanded to match the extents of the other arguments by virtually repeating the value. By default, only a limited number of types are considered scalars, including &lt;code&gt;Number&lt;/code&gt;s, &lt;code&gt;String&lt;/code&gt;s, &lt;code&gt;Symbol&lt;/code&gt;s, &lt;code&gt;Type&lt;/code&gt;s, &lt;code&gt;Function&lt;/code&gt;s and some common singletons like &lt;a href=&quot;../base/index#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../constants/index#Core.nothing&quot;&gt;&lt;code&gt;nothing&lt;/code&gt;&lt;/a&gt;. All other arguments are iterated over or indexed into elementwise.</source>
          <target state="translated">La difusi&amp;oacute;n aplica la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; sobre los elementos de los argumentos del contenedor y los propios escalares en &lt;code&gt;As&lt;/code&gt; . Las dimensiones singleton y faltantes se expanden para coincidir con las extensiones de los otros argumentos repitiendo virtualmente el valor. De forma predeterminada, solo un n&amp;uacute;mero limitado de tipos se consideran escalares, incluidos los &lt;code&gt;Number&lt;/code&gt; , las &lt;code&gt;String&lt;/code&gt; , los &lt;code&gt;Symbol&lt;/code&gt; , los &lt;code&gt;Type&lt;/code&gt; , las &lt;code&gt;Function&lt;/code&gt; y algunos singleton comunes, como &lt;a href=&quot;../base/index#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../constants/index#Core.nothing&quot;&gt; &lt;code&gt;nothing&lt;/code&gt; &lt;/a&gt; . Todos los dem&amp;aacute;s argumentos se repiten o se indexan en elementos.</target>
        </trans-unit>
        <trans-unit id="7b246945f4825122c3abc36d497da5fe651d872b" translate="yes" xml:space="preserve">
          <source>Broadcasting behavior of &lt;code&gt;SrcType&lt;/code&gt;</source>
          <target state="translated">Comportamiento de &lt;code&gt;SrcType&lt;/code&gt; de SrcType</target>
        </trans-unit>
        <trans-unit id="0e2fa4ca8541a569a98cefd4832f00fffb8a668a" translate="yes" xml:space="preserve">
          <source>Broadcasting of CartesianIndices requires at least Julia 1.1.</source>
          <target state="translated">La difusión de los índices cartesianos requiere al menos Julia 1.1.</target>
        </trans-unit>
        <trans-unit id="de4b71257ec056201227e217cf933d2e092cf0c7" translate="yes" xml:space="preserve">
          <source>Broken Bar / Broken Vertical Bar</source>
          <target state="translated">Barra rota/Barra vertical rota</target>
        </trans-unit>
        <trans-unit id="0d35795616ab98cd5aa59673de45c7c6c73a4a9c" translate="yes" xml:space="preserve">
          <source>Broken Heart</source>
          <target state="translated">Corazón roto</target>
        </trans-unit>
        <trans-unit id="79b7916b0d6bd1fa29180da64a852f6051cdd3b6" translate="yes" xml:space="preserve">
          <source>Broken Tests</source>
          <target state="translated">Pruebas rotas</target>
        </trans-unit>
        <trans-unit id="8cb75fd2f909d7fe2d9ebdd702d582785b35815a" translate="yes" xml:space="preserve">
          <source>Browser-based workflow</source>
          <target state="translated">Flujo de trabajo basado en el navegador</target>
        </trans-unit>
        <trans-unit id="271befc09ec922fba884ac992f346efbaa84c1c6" translate="yes" xml:space="preserve">
          <source>Bug</source>
          <target state="translated">Bug</target>
        </trans-unit>
        <trans-unit id="a0ff1503de64d75563fdaa852cd66a5161072182" translate="yes" xml:space="preserve">
          <source>Build the output matrix as &lt;code&gt;similar(R, dims)&lt;/code&gt;, where &lt;code&gt;dims&lt;/code&gt; are the desired dimensions of the output array.</source>
          <target state="translated">Construya la matriz de salida como &lt;code&gt;similar(R, dims)&lt;/code&gt; , donde las &lt;code&gt;dims&lt;/code&gt; son las dimensiones deseadas de la matriz de salida.</target>
        </trans-unit>
        <trans-unit id="9b68712d139bce25a7399715ee37cf5a89ca4787" translate="yes" xml:space="preserve">
          <source>Building a similar type with a different type parameter</source>
          <target state="translated">Construir un tipo similar con un parámetro de tipo diferente</target>
        </trans-unit>
        <trans-unit id="472631cf7902fb6cb7b3cc2952c6a64c270752fa" translate="yes" xml:space="preserve">
          <source>Building an advanced macro</source>
          <target state="translated">Construir una macro avanzada</target>
        </trans-unit>
        <trans-unit id="fe79fc1370416c81e94ca362477853ed355de172" translate="yes" xml:space="preserve">
          <source>Built-in &lt;code&gt;Exception&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;Exception&lt;/code&gt; incorporada s</target>
        </trans-unit>
        <trans-unit id="b98da0ccc81f4f734434572f19ccc66972aae344" translate="yes" xml:space="preserve">
          <source>Bullet</source>
          <target state="translated">Bullet</target>
        </trans-unit>
        <trans-unit id="b2e3c9a189a187c73db37aa7676051a963459c1a" translate="yes" xml:space="preserve">
          <source>Bullet Operator</source>
          <target state="translated">Operador de Bala</target>
        </trans-unit>
        <trans-unit id="ffb3a635db82436b5aade99cffc92370f3f7ed19" translate="yes" xml:space="preserve">
          <source>Bullseye</source>
          <target state="translated">Bullseye</target>
        </trans-unit>
        <trans-unit id="6380df8107fb2d9626efb1aee5cb211de2982cbd" translate="yes" xml:space="preserve">
          <source>Bunch-Kaufman (see &lt;a href=&quot;#LinearAlgebra.bunchkaufman&quot;&gt;&lt;code&gt;bunchkaufman&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">Bunch-Kaufman (ver &lt;a href=&quot;#LinearAlgebra.bunchkaufman&quot;&gt; &lt;code&gt;bunchkaufman&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d42c62a3c53679a83b69d0fce6f99bfd41a308aa" translate="yes" xml:space="preserve">
          <source>Bunch-Kaufman factorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56070a568367d5a4e9970cfff19cb97578ce1361" translate="yes" xml:space="preserve">
          <source>Bus</source>
          <target state="translated">Bus</target>
        </trans-unit>
        <trans-unit id="de2d017d398674ca4eafe20ca3761f2f657234b8" translate="yes" xml:space="preserve">
          <source>Bus Stop</source>
          <target state="translated">Parada de autobús</target>
        </trans-unit>
        <trans-unit id="97d53e844a4148a55c4152e5e7736932ca111090" translate="yes" xml:space="preserve">
          <source>Bust In Silhouette</source>
          <target state="translated">Busto en silueta</target>
        </trans-unit>
        <trans-unit id="45f0d298267aa05679aedb20cf6611cfa3d2a5d1" translate="yes" xml:space="preserve">
          <source>Busts In Silhouette</source>
          <target state="translated">Bustos en silueta</target>
        </trans-unit>
        <trans-unit id="e7a7510504bc122560ba5c8208e379522ff06902" translate="yes" xml:space="preserve">
          <source>But here is a thing you should pay attention to: suppose &lt;code&gt;x&lt;/code&gt; is bound to an object of type &lt;code&gt;Array&lt;/code&gt; (or any other &lt;em&gt;mutable&lt;/em&gt; type). From within the function, you cannot &quot;unbind&quot; &lt;code&gt;x&lt;/code&gt; from this Array, but you can change its content. For example:</source>
          <target state="translated">Pero aqu&amp;iacute; hay algo a lo que debe prestar atenci&amp;oacute;n: suponga que &lt;code&gt;x&lt;/code&gt; est&amp;aacute; vinculado a un objeto de tipo &lt;code&gt;Array&lt;/code&gt; (o cualquier otro tipo &lt;em&gt;mutable&lt;/em&gt; ). Desde dentro de la funci&amp;oacute;n, no puede &quot;desvincular&quot; &lt;code&gt;x&lt;/code&gt; de esta matriz, pero puede cambiar su contenido. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="0adf28177ba73d224bb6721567052c88af510023" translate="yes" xml:space="preserve">
          <source>But how does one construct the first instance when no instance exists to provide as a valid value for its &lt;code&gt;obj&lt;/code&gt; field? The only solution is to allow creating an incompletely initialized instance of &lt;code&gt;SelfReferential&lt;/code&gt; with an unassigned &lt;code&gt;obj&lt;/code&gt; field, and using that incomplete instance as a valid value for the &lt;code&gt;obj&lt;/code&gt; field of another instance, such as, for example, itself.</source>
          <target state="translated">Pero, &amp;iquest;c&amp;oacute;mo se construye la primera instancia cuando no existe ninguna instancia que proporcione como valor v&amp;aacute;lido para su campo &lt;code&gt;obj&lt;/code&gt; ? La &amp;uacute;nica soluci&amp;oacute;n es permitir la creaci&amp;oacute;n de una instancia de &lt;code&gt;SelfReferential&lt;/code&gt; inicializada de forma incompleta con un campo &lt;code&gt;obj&lt;/code&gt; no asignado y usar esa instancia incompleta como un valor v&amp;aacute;lido para el campo &lt;code&gt;obj&lt;/code&gt; de otra instancia, como, por ejemplo, ella misma.</target>
        </trans-unit>
        <trans-unit id="64b3ab17aa40196bbbe2b14cd1e8633f165597c6" translate="yes" xml:space="preserve">
          <source>But in general, embedding projects will be more complicated than the above, and so the following allows general makefile support as well &amp;ndash; assuming GNU make because of the use of the &lt;strong&gt;shell&lt;/strong&gt; macro expansions. Additionally, though many times &lt;code&gt;julia-config.jl&lt;/code&gt; may be found in the directory &lt;code&gt;/usr/local&lt;/code&gt;, this is not necessarily the case, but Julia can be used to locate &lt;code&gt;julia-config.jl&lt;/code&gt; too, and the makefile can be used to take advantage of that. The above example is extended to use a Makefile:</source>
          <target state="translated">Pero en general, incrustar proyectos ser&amp;aacute; m&amp;aacute;s complicado que lo anterior, por lo que lo siguiente tambi&amp;eacute;n permite el soporte general de makefile, asumiendo GNU make debido al uso de expansiones de macros de &lt;strong&gt;shell&lt;/strong&gt; . Adem&amp;aacute;s, aunque muchas veces &lt;code&gt;julia-config.jl&lt;/code&gt; se puede encontrar en el directorio &lt;code&gt;/usr/local&lt;/code&gt; , este no es necesariamente el caso, pero Julia tambi&amp;eacute;n se puede usar para ubicar &lt;code&gt;julia-config.jl&lt;/code&gt; , y el makefile se puede usar para tomar ventaja de eso. El ejemplo anterior se ampl&amp;iacute;a para usar un Makefile:</target>
        </trans-unit>
        <trans-unit id="26a3e909feee0f8ba5a7fedacb473c7c1f12eb3d" translate="yes" xml:space="preserve">
          <source>But now let's say you want to write a function that creates a 3&amp;times;3&amp;times;... array in arbitrary dimensions; you might be tempted to write a function</source>
          <target state="translated">Pero ahora digamos que quiere escribir una funci&amp;oacute;n que cree una matriz de 3 &amp;times; 3 &amp;times; ... en dimensiones arbitrarias; podr&amp;iacute;as tener la tentaci&amp;oacute;n de escribir una funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="7e347dfe55eb3d3f84185c35ba67fdd467b54efe" translate="yes" xml:space="preserve">
          <source>But there's an exception: future calls to &lt;code&gt;newfun&lt;/code&gt;&lt;em&gt;from the REPL&lt;/em&gt; work as expected, being able to both see and call the new definition of &lt;code&gt;newfun&lt;/code&gt;.</source>
          <target state="translated">Pero hay una excepci&amp;oacute;n: las futuras llamadas a &lt;code&gt;newfun&lt;/code&gt; &lt;em&gt;desde REPL&lt;/em&gt; funcionan como se esperaba, pudiendo ver y llamar a la nueva definici&amp;oacute;n de &lt;code&gt;newfun&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7dcbe9aaf1e0a6755fccfa933b76845ffa848937" translate="yes" xml:space="preserve">
          <source>But we are currently on the master thread. To check, we use the function &lt;a href=&quot;../../base/multi-threading/index#Base.Threads.threadid&quot;&gt;&lt;code&gt;Threads.threadid&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Pero actualmente estamos en el hilo principal. Para comprobar, usamos la funci&amp;oacute;n &lt;a href=&quot;../../base/multi-threading/index#Base.Threads.threadid&quot;&gt; &lt;code&gt;Threads.threadid&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c84f932b434e9c92f4f20cc3eb7ea04021d4d339" translate="yes" xml:space="preserve">
          <source>By convention, function names ending with an exclamation point (&lt;code&gt;!&lt;/code&gt;) modify their arguments. Some functions have both modifying (e.g., &lt;code&gt;sort!&lt;/code&gt;) and non-modifying (&lt;code&gt;sort&lt;/code&gt;) versions.</source>
          <target state="translated">Por convenci&amp;oacute;n, los nombres de funciones que terminan con un signo de exclamaci&amp;oacute;n ( &lt;code&gt;!&lt;/code&gt; ) Modifican sus argumentos. Algunas funciones tienen versiones modificables (por ejemplo, &lt;code&gt;sort!&lt;/code&gt; ) Y no modificables ( &lt;code&gt;sort&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b2d3b6d57737895d1e4453b18b72e5f94ecdeb4e" translate="yes" xml:space="preserve">
          <source>By convention, functions that modify their arguments have a &lt;code&gt;!&lt;/code&gt; at the end of the name, for example &lt;code&gt;push!&lt;/code&gt;.</source>
          <target state="translated">Por convenci&amp;oacute;n, las funciones que modifican sus argumentos tienen un &lt;code&gt;!&lt;/code&gt; al final del nombre, por ejemplo &lt;code&gt;push!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab2ce248423f04c77b0bad395e4714e39c7fb937" translate="yes" xml:space="preserve">
          <source>By default (&lt;code&gt;alpha = beta = 1&lt;/code&gt;), quantiles are computed via linear interpolation between the points &lt;code&gt;((k-1)/(n-1), v[k])&lt;/code&gt;, for &lt;code&gt;k = 1:n&lt;/code&gt; where &lt;code&gt;n = length(itr)&lt;/code&gt;. This corresponds to Definition 7 of Hyndman and Fan (1996), and is the same as the R and NumPy default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760f93efed44d4a2ba0963c541f9ed0ec06bfb96" translate="yes" xml:space="preserve">
          <source>By default (&lt;code&gt;alpha = beta = 1&lt;/code&gt;), quantiles are computed via linear interpolation between the points &lt;code&gt;((k-1)/(n-1), v[k])&lt;/code&gt;, for &lt;code&gt;k = 1:n&lt;/code&gt; where &lt;code&gt;n = length(v)&lt;/code&gt;. This corresponds to Definition 7 of Hyndman and Fan (1996), and is the same as the R and NumPy default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a501bd6222e05849ace3fea85fb677e79bd185" translate="yes" xml:space="preserve">
          <source>By default a worker will listen on a free port at the address returned by a call to &lt;a href=&quot;../../stdlib/sockets/index#Sockets.getipaddr&quot;&gt;&lt;code&gt;getipaddr()&lt;/code&gt;&lt;/a&gt;. A specific address to listen on may be specified by optional argument &lt;code&gt;--bind-to bind_addr[:port]&lt;/code&gt;. This is useful for multi-homed hosts.</source>
          <target state="translated">Por defecto, un trabajador escuchar&amp;aacute; en un puerto libre en la direcci&amp;oacute;n devuelta por una llamada a &lt;a href=&quot;../../stdlib/sockets/index#Sockets.getipaddr&quot;&gt; &lt;code&gt;getipaddr()&lt;/code&gt; &lt;/a&gt; . Se puede especificar una direcci&amp;oacute;n espec&amp;iacute;fica para escuchar mediante el argumento opcional &lt;code&gt;--bind-to bind_addr[:port]&lt;/code&gt; . Esto es &amp;uacute;til para hosts con m&amp;uacute;ltiples hosts.</target>
        </trans-unit>
        <trans-unit id="cb670232f9c9a08075052bf52fba2ffbf6b303ba" translate="yes" xml:space="preserve">
          <source>By default all exceptions are caught to prevent log message generation from crashing the program. This lets users confidently toggle little-used functionality - such as debug logging - in a production system.</source>
          <target state="translated">Por defecto,todas las excepciones se capturan para evitar que la generación de mensajes de registro bloquee el programa.Esto permite a los usuarios alternar con confianza funcionalidades poco utilizadas-como el registro de depuración-en un sistema de producción.</target>
        </trans-unit>
        <trans-unit id="3274665bf281763d801f2b3f0f09acc363497f47" translate="yes" xml:space="preserve">
          <source>By default julia does not wait for the editor to close, running it in the background. However, if the editor is terminal based, you will probably want to set &lt;code&gt;wait=true&lt;/code&gt; and julia will wait for the editor to close before resuming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09501703ac8c23ae9a60cea7e5421daf3cd18b0" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;@testset&lt;/code&gt; macro will return the testset object itself, though this behavior can be customized in other testset types. If a &lt;code&gt;for&lt;/code&gt; loop is used then the macro collects and returns a list of the return values of the &lt;code&gt;finish&lt;/code&gt; method, which by default will return a list of the testset objects used in each iteration.</source>
          <target state="translated">De forma predeterminada, la macro &lt;code&gt;@testset&lt;/code&gt; devolver&amp;aacute; el objeto del conjunto de pruebas, aunque este comportamiento se puede personalizar en otros tipos de conjuntos de pruebas. Si se utiliza un bucle &lt;code&gt;for&lt;/code&gt; , la macro recopila y devuelve una lista de los valores de retorno del m&amp;eacute;todo de &lt;code&gt;finish&lt;/code&gt; , que de forma predeterminada devolver&amp;aacute; una lista de los objetos de prueba utilizados en cada iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="62c321cdf328de0b934c0ed64ba600400a916f6d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;pmap&lt;/code&gt; distributes the computation over all specified workers. To use only the local process and distribute over tasks, specify &lt;code&gt;distributed=false&lt;/code&gt;. This is equivalent to using &lt;a href=&quot;../../base/parallel/index#Base.asyncmap&quot;&gt;&lt;code&gt;asyncmap&lt;/code&gt;&lt;/a&gt;. For example, &lt;code&gt;pmap(f, c; distributed=false)&lt;/code&gt; is equivalent to &lt;code&gt;asyncmap(f,c; ntasks=()-&amp;gt;nworkers())&lt;/code&gt;</source>
          <target state="translated">De forma predeterminada, &lt;code&gt;pmap&lt;/code&gt; distribuye el c&amp;aacute;lculo entre todos los trabajadores especificados. Para usar solo el proceso local y distribuir las tareas, especifique &lt;code&gt;distributed=false&lt;/code&gt; . Esto es equivalente a usar &lt;a href=&quot;../../base/parallel/index#Base.asyncmap&quot;&gt; &lt;code&gt;asyncmap&lt;/code&gt; &lt;/a&gt; . Por ejemplo, &lt;code&gt;pmap(f, c; distributed=false)&lt;/code&gt; es equivalente a &lt;code&gt;asyncmap(f,c; ntasks=()-&amp;gt;nworkers())&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="869bf1d13613c15994bb6c5a2998c89afa6bc5e7" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;readdir&lt;/code&gt; sorts the list of names it returns. If you want to skip sorting the names and get them in the order that the file system lists them, you can use &lt;code&gt;readir(dir, sort=false)&lt;/code&gt; to opt out of sorting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f89fa8608376528e1d0c826b9825a253fbd041b" translate="yes" xml:space="preserve">
          <source>By default, Fortran compilers &lt;a href=&quot;https://en.wikipedia.org/wiki/Name_mangling#Fortran&quot;&gt;generate mangled names&lt;/a&gt; (for example, converting function names to lowercase or uppercase, often appending an underscore), and so to call a Fortran function via &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt; you must pass the mangled identifier corresponding to the rule followed by your Fortran compiler. Also, when calling a Fortran function, all inputs must be passed as pointers to allocated values on the heap or stack. This applies not only to arrays and other mutable objects which are normally heap-allocated, but also to scalar values such as integers and floats which are normally stack-allocated and commonly passed in registers when using C or Julia calling conventions.</source>
          <target state="translated">De forma predeterminada, los compiladores de Fortran &lt;a href=&quot;https://en.wikipedia.org/wiki/Name_mangling#Fortran&quot;&gt;generan nombres alterados&lt;/a&gt; (por ejemplo, convirtiendo nombres de funciones a min&amp;uacute;sculas o may&amp;uacute;sculas, a menudo a&amp;ntilde;adiendo un gui&amp;oacute;n bajo), por lo que para llamar a una funci&amp;oacute;n de Fortran a trav&amp;eacute;s de &lt;a href=&quot;../../base/c/index#ccall&quot;&gt; &lt;code&gt;ccall&lt;/code&gt; &lt;/a&gt; debe pasar el identificador alterado correspondiente a la regla seguida por su compilador de Fortran . Adem&amp;aacute;s, al llamar a una funci&amp;oacute;n de Fortran, todas las entradas deben pasarse como punteros a valores asignados en el mont&amp;oacute;n o la pila. Esto se aplica no solo a matrices y otros objetos mutables que normalmente est&amp;aacute;n asignados en mont&amp;oacute;n, sino tambi&amp;eacute;n a valores escalares como enteros y flotantes que normalmente est&amp;aacute;n asignados en pila y com&amp;uacute;nmente pasados ​​en registros cuando se utilizan convenciones de llamada C o Julia.</target>
        </trans-unit>
        <trans-unit id="7b4db9ff202a42835afe09d8709e3f5d83b19913" translate="yes" xml:space="preserve">
          <source>By default, Julia returns &lt;code&gt;BitArrays&lt;/code&gt; from &lt;a href=&quot;../../manual/arrays/index#Broadcasting&quot;&gt;broadcasting&lt;/a&gt; operations that generate boolean elements (including dotted-comparisons like &lt;code&gt;.==&lt;/code&gt;) as well as from the functions &lt;a href=&quot;#Base.trues&quot;&gt;&lt;code&gt;trues&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.falses&quot;&gt;&lt;code&gt;falses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97954da2a37348f9b604be87e49342f9bb3f535a" translate="yes" xml:space="preserve">
          <source>By default, Julia returns &lt;code&gt;BitArrays&lt;/code&gt; from &lt;a href=&quot;../../manual/arrays/index#Broadcasting-1&quot;&gt;broadcasting&lt;/a&gt; operations that generate boolean elements (including dotted-comparisons like &lt;code&gt;.==&lt;/code&gt;) as well as from the functions &lt;a href=&quot;#Base.trues&quot;&gt;&lt;code&gt;trues&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base.falses&quot;&gt;&lt;code&gt;falses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">De forma predeterminada, Julia devuelve &lt;code&gt;BitArrays&lt;/code&gt; de operaciones de &lt;a href=&quot;../../manual/arrays/index#Broadcasting-1&quot;&gt;transmisi&amp;oacute;n&lt;/a&gt; que generan elementos booleanos (incluidas comparaciones con puntos como &lt;code&gt;.==&lt;/code&gt; ), as&amp;iacute; como de las funciones &lt;a href=&quot;#Base.trues&quot;&gt; &lt;code&gt;trues&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#Base.falses&quot;&gt; &lt;code&gt;falses&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b61e736cef16f73d649bec40a1cb5e23234e0fb3" translate="yes" xml:space="preserve">
          <source>By default, Julia starts up with a single thread of execution. This can be verified by using the command &lt;a href=&quot;../../base/multi-threading/index#Base.Threads.nthreads&quot;&gt;&lt;code&gt;Threads.nthreads()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">De forma predeterminada, Julia se inicia con un &amp;uacute;nico hilo de ejecuci&amp;oacute;n. Esto se puede verificar usando el comando &lt;a href=&quot;../../base/multi-threading/index#Base.Threads.nthreads&quot;&gt; &lt;code&gt;Threads.nthreads()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a32e1e323d14dc3db4577d3f3c64972051fa6f1a" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;redisplay&lt;/code&gt; functions simply call &lt;a href=&quot;#Base.Multimedia.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt;. However, some display backends may override &lt;code&gt;redisplay&lt;/code&gt; to modify an existing display of &lt;code&gt;x&lt;/code&gt; (if any). Using &lt;code&gt;redisplay&lt;/code&gt; is also a hint to the backend that &lt;code&gt;x&lt;/code&gt; may be redisplayed several times, and the backend may choose to defer the display until (for example) the next interactive prompt.</source>
          <target state="translated">De forma predeterminada, las funciones de &lt;code&gt;redisplay&lt;/code&gt; simplemente llaman a la &lt;a href=&quot;#Base.Multimedia.display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt; . Sin embargo, algunos backends de pantalla pueden anular la &lt;code&gt;redisplay&lt;/code&gt; para modificar una visualizaci&amp;oacute;n existente de &lt;code&gt;x&lt;/code&gt; (si existe). El uso de &lt;code&gt;redisplay&lt;/code&gt; tambi&amp;eacute;n es una pista para el backend de que &lt;code&gt;x&lt;/code&gt; puede volver a mostrarse varias veces, y el backend puede optar por aplazar la visualizaci&amp;oacute;n hasta (por ejemplo) el siguiente mensaje interactivo.</target>
        </trans-unit>
        <trans-unit id="3a789ab7e78cdd1c9fcc76d1aa6c29cc8860d633" translate="yes" xml:space="preserve">
          <source>By default, the eigenvalues and vectors are sorted lexicographically by &lt;code&gt;(real(&amp;lambda;),imag(&amp;lambda;))&lt;/code&gt;. A different comparison function &lt;code&gt;by(&amp;lambda;)&lt;/code&gt; can be passed to &lt;code&gt;sortby&lt;/code&gt;, or you can pass &lt;code&gt;sortby=nothing&lt;/code&gt; to leave the eigenvalues in an arbitrary order. Some special matrix types (e.g. &lt;a href=&quot;#LinearAlgebra.Diagonal&quot;&gt;&lt;code&gt;Diagonal&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#LinearAlgebra.SymTridiagonal&quot;&gt;&lt;code&gt;SymTridiagonal&lt;/code&gt;&lt;/a&gt;) may implement their own sorting convention and not accept a &lt;code&gt;sortby&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2434a57ba6bd0a71b3ac08a278b454d4192e915f" translate="yes" xml:space="preserve">
          <source>By default, the eigenvalues and vectors are sorted lexicographically by &lt;code&gt;(real(&amp;lambda;),imag(&amp;lambda;))&lt;/code&gt;. A different comparison function &lt;code&gt;by(&amp;lambda;)&lt;/code&gt; can be passed to &lt;code&gt;sortby&lt;/code&gt;, or you can pass &lt;code&gt;sortby=nothing&lt;/code&gt; to leave the eigenvalues in an arbitrary order. Some special matrix types (e.g. &lt;code&gt;Diagonal&lt;/code&gt; or &lt;code&gt;SymTridiagonal&lt;/code&gt;) may implement their own sorting convention and not accept a &lt;code&gt;sortby&lt;/code&gt; keyword.</source>
          <target state="translated">De forma predeterminada, los valores propios y los vectores se ordenan lexicogr&amp;aacute;ficamente por &lt;code&gt;(real(&amp;lambda;),imag(&amp;lambda;))&lt;/code&gt; . Se puede pasar una funci&amp;oacute;n de comparaci&amp;oacute;n diferente &lt;code&gt;by(&amp;lambda;)&lt;/code&gt; a &lt;code&gt;sortby&lt;/code&gt; , o puede pasar &lt;code&gt;sortby=nothing&lt;/code&gt; para dejar los valores propios en un orden arbitrario. Algunos tipos de matrices especiales (por ejemplo, &lt;code&gt;Diagonal&lt;/code&gt; o &lt;code&gt;SymTridiagonal&lt;/code&gt; ) pueden implementar su propia convenci&amp;oacute;n de clasificaci&amp;oacute;n y no aceptar una palabra clave &lt;code&gt;sortby&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a1522d8655f0697d6a68319f9a29fb0897d5118" translate="yes" xml:space="preserve">
          <source>By default, the relative tolerance &lt;code&gt;rtol&lt;/code&gt; is &lt;code&gt;n*ϵ&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the size of the smallest dimension of &lt;code&gt;M&lt;/code&gt;, and &lt;code&gt;ϵ&lt;/code&gt; is the &lt;a href=&quot;../dates/index#Base.eps&quot;&gt;&lt;code&gt;eps&lt;/code&gt;&lt;/a&gt; of the element type of &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">Por defecto, la tolerancia relativa &lt;code&gt;rtol&lt;/code&gt; es &lt;code&gt;n*ϵ&lt;/code&gt; , donde &lt;code&gt;n&lt;/code&gt; es el tama&amp;ntilde;o de la dimensi&amp;oacute;n m&amp;aacute;s peque&amp;ntilde;a de &lt;code&gt;M&lt;/code&gt; , y &lt;code&gt;ϵ&lt;/code&gt; es los &lt;a href=&quot;../dates/index#Base.eps&quot;&gt; &lt;code&gt;eps&lt;/code&gt; &lt;/a&gt; del tipo de elemento de &lt;code&gt;M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36562c471751aaedc6db712652b89541573e3bb4" translate="yes" xml:space="preserve">
          <source>By extension any odd number of backticks may be used to enclose a lesser number of backticks.</source>
          <target state="translated">Por extensión,se puede utilizar cualquier número impar de palos de espalda para encerrar un número menor de palos de espalda.</target>
        </trans-unit>
        <trans-unit id="300c0d12698af77dc8e2c084d058d532e1315b6c" translate="yes" xml:space="preserve">
          <source>By printing the array, one can verify that the elements of &lt;code&gt;x&lt;/code&gt; are now reversed.</source>
          <target state="translated">Al imprimir la matriz, se puede verificar que los elementos de &lt;code&gt;x&lt;/code&gt; ahora est&amp;aacute;n invertidos.</target>
        </trans-unit>
        <trans-unit id="760e88f232085bdc1aa9ba910e6eb19bee1e689b" translate="yes" xml:space="preserve">
          <source>By running &quot;infrequently&quot; there is very little performance overhead; while profiling, your code can run at nearly native speed.</source>
          <target state="translated">Corriendo &quot;con poca frecuencia&quot; hay muy poca sobrecarga de rendimiento;mientras se hace el perfil,tu código puede correr a una velocidad casi nativa.</target>
        </trans-unit>
        <trans-unit id="95b6f4faddfdd9853ff8e907fd6f47265a9f07a0" translate="yes" xml:space="preserve">
          <source>By using an RNG parameter initialized with a given seed, you can reproduce the same pseudorandom number sequence when running your program multiple times. However, a minor release of Julia (e.g. 1.3 to 1.4) &lt;em&gt;may change&lt;/em&gt; the sequence of pseudorandom numbers generated from a specific seed. (Even if the sequence produced by a low-level function like &lt;a href=&quot;#Base.rand&quot;&gt;&lt;code&gt;rand&lt;/code&gt;&lt;/a&gt; does not change, the output of higher-level functions like &lt;a href=&quot;#Random.randsubseq&quot;&gt;&lt;code&gt;randsubseq&lt;/code&gt;&lt;/a&gt; may change due to algorithm updates.) Rationale: guaranteeing that pseudorandom streams never change prohibits many algorithmic improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24780bfad6073c3cb5039801b32f126d34c1cde" translate="yes" xml:space="preserve">
          <source>Byte Array Literals</source>
          <target state="translated">Literales Byte Array</target>
        </trans-unit>
        <trans-unit id="c950fe9e51a4a280dd4bb58c0d0951450fe7bbf3" translate="yes" xml:space="preserve">
          <source>C &lt;strong&gt;MUST NOT&lt;/strong&gt; modify the memory returned via &lt;code&gt;Ref{T}&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is an &lt;code&gt;isbits&lt;/code&gt; type</source>
          <target state="translated">C &lt;strong&gt;NO DEBE&lt;/strong&gt; modificar la memoria devuelta a trav&amp;eacute;s de &lt;code&gt;Ref{T}&lt;/code&gt; si &lt;code&gt;T&lt;/code&gt; es un tipo de &lt;code&gt;isbits&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a10776e7bb2378d8306c9c38209f9a25bdd03a13" translate="yes" xml:space="preserve">
          <source>C Bischof and C Van Loan, &quot;The WY representation for products of Householder matrices&quot;, SIAM J Sci Stat Comput 8 (1987), s2-s13. &lt;a href=&quot;https://doi.org/10.1137/0908009&quot;&gt;doi:10.1137/0908009&lt;/a&gt;</source>
          <target state="translated">C Bischof y C Van Loan, &quot;La representaci&amp;oacute;n WY para productos de matrices de cabezas de familia&quot;, SIAM J Sci Stat Comput 8 (1987), s2-s13. &lt;a href=&quot;https://doi.org/10.1137/0908009&quot;&gt;doi: 10.1137 / 0908009&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9a1acddb6f4bd40edd805612e996267e826e064" translate="yes" xml:space="preserve">
          <source>C Interface</source>
          <target state="translated">Interfaz C</target>
        </trans-unit>
        <trans-unit id="6592ddb6b4a1a593e3571fb32f8e7a37a9f3a350" translate="yes" xml:space="preserve">
          <source>C Standard Library</source>
          <target state="translated">C Biblioteca estándar</target>
        </trans-unit>
        <trans-unit id="3a8599236e86a8cb6d00c7c55845e656c7c05673" translate="yes" xml:space="preserve">
          <source>C Wrapper Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e127f5f8d00244c8e1c9f0ff88de5ec4ac1783" translate="yes" xml:space="preserve">
          <source>C function pointer for &lt;code&gt;credentials_callback&lt;/code&gt;</source>
          <target state="translated">Puntero de funci&amp;oacute;n C para &lt;code&gt;credentials_callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c33ee7fd9016392ef47ce064a1a8200fb287dc56" translate="yes" xml:space="preserve">
          <source>C function pointer for &lt;code&gt;fetchhead_foreach_callback&lt;/code&gt;</source>
          <target state="translated">Puntero de funci&amp;oacute;n C para &lt;code&gt;fetchhead_foreach_callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf80fd7e58e3463df2196d9d8b7daa3fb24795de" translate="yes" xml:space="preserve">
          <source>C function pointer for &lt;code&gt;mirror_callback&lt;/code&gt;</source>
          <target state="translated">Puntero de funci&amp;oacute;n C para &lt;code&gt;mirror_callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5cb63f576281637ef8721a44852ed39bd47bda3e" translate="yes" xml:space="preserve">
          <source>C functions that take an argument of the type &lt;code&gt;char**&lt;/code&gt; can be called by using a &lt;code&gt;Ptr{Ptr{UInt8}}&lt;/code&gt; type within Julia. For example, C functions of the form:</source>
          <target state="translated">Las funciones en C que toman un argumento del tipo &lt;code&gt;char**&lt;/code&gt; se pueden llamar usando un tipo &lt;code&gt;Ptr{Ptr{UInt8}}&lt;/code&gt; dentro de Julia. Por ejemplo, funciones C de la forma:</target>
        </trans-unit>
        <trans-unit id="eb931938945d732d0cc3c0bc381f1e2e03fc8a86" translate="yes" xml:space="preserve">
          <source>C functions that take an argument of type &lt;code&gt;char**&lt;/code&gt; can be called by using a &lt;code&gt;Ptr{Ptr{UInt8}}&lt;/code&gt; type within Julia. For example, C functions of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272eaa6fb30cbc6d678d9c3342e07f66e1c123e0" translate="yes" xml:space="preserve">
          <source>C name</source>
          <target state="translated">Nombre C</target>
        </trans-unit>
        <trans-unit id="315194526a16e46e96fc7a6c9fe2f734e368a015" translate="yes" xml:space="preserve">
          <source>C shell on Linux/macOS, CMD on Windows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2b4216164cfb01ac45112054b3fedda8b56c86" translate="yes" xml:space="preserve">
          <source>C++</source>
          <target state="translated">C++</target>
        </trans-unit>
        <trans-unit id="7877de4c10096f42fa8b542b38a0c8abfeff2993" translate="yes" xml:space="preserve">
          <source>CFunction</source>
          <target state="translated">CFunction</target>
        </trans-unit>
        <trans-unit id="d6deb7587f97d7c2e002671a4a7ec9c17092aa98" translate="yes" xml:space="preserve">
          <source>CRC32c</source>
          <target state="translated">CRC32c</target>
        </trans-unit>
        <trans-unit id="946e46ea933373d5acfe718ba4c46ff0c631d8da" translate="yes" xml:space="preserve">
          <source>C_NULL</source>
          <target state="translated">C_NULL</target>
        </trans-unit>
        <trans-unit id="062c01810c7f050347900909c2a5c905fb7f6b61" translate="yes" xml:space="preserve">
          <source>Caches credential information for re-use</source>
          <target state="translated">Almacena información de credenciales para su reutilización</target>
        </trans-unit>
        <trans-unit id="9f296c645c05d20e8d397ba3c6535ccc69ae356d" translate="yes" xml:space="preserve">
          <source>Caching of native pointers.</source>
          <target state="translated">Caching de punteros nativos.</target>
        </trans-unit>
        <trans-unit id="ffbcb973995142c82bf466dc886625f88d2fbcf8" translate="yes" xml:space="preserve">
          <source>Cactus</source>
          <target state="translated">Cactus</target>
        </trans-unit>
        <trans-unit id="ac32f232b7ff982020ec20b1d05cbfe41644842d" translate="yes" xml:space="preserve">
          <source>Calculate the matrix-matrix product $AB$, overwriting &lt;code&gt;A&lt;/code&gt;, and return the result.</source>
          <target state="translated">Calcule el producto matriz-matriz $ AB $, sobrescribiendo &lt;code&gt;A&lt;/code&gt; y devuelva el resultado.</target>
        </trans-unit>
        <trans-unit id="129c66daa23d40a052d78c17325451f781f1cd27" translate="yes" xml:space="preserve">
          <source>Calculate the matrix-matrix product $AB$, overwriting &lt;code&gt;A&lt;/code&gt;, and return the result. Here, &lt;code&gt;B&lt;/code&gt; must be of special matrix type, like, e.g., &lt;a href=&quot;#LinearAlgebra.Diagonal&quot;&gt;&lt;code&gt;Diagonal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LinearAlgebra.UpperTriangular&quot;&gt;&lt;code&gt;UpperTriangular&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#LinearAlgebra.LowerTriangular&quot;&gt;&lt;code&gt;LowerTriangular&lt;/code&gt;&lt;/a&gt;, or of some orthogonal type, see &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d41dc1e33975c5f259e3c41e3a555f7d4e2007c" translate="yes" xml:space="preserve">
          <source>Calculate the matrix-matrix product $AB$, overwriting &lt;code&gt;B&lt;/code&gt;, and return the result.</source>
          <target state="translated">Calcule el producto matriz-matriz $ AB $, sobrescribiendo &lt;code&gt;B&lt;/code&gt; y devuelva el resultado.</target>
        </trans-unit>
        <trans-unit id="f409cbcda5b59decdd240fd1a21ee0be89005565" translate="yes" xml:space="preserve">
          <source>Calculate the matrix-matrix product $AB$, overwriting &lt;code&gt;B&lt;/code&gt;, and return the result. Here, &lt;code&gt;A&lt;/code&gt; must be of special matrix type, like, e.g., &lt;a href=&quot;#LinearAlgebra.Diagonal&quot;&gt;&lt;code&gt;Diagonal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LinearAlgebra.UpperTriangular&quot;&gt;&lt;code&gt;UpperTriangular&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#LinearAlgebra.LowerTriangular&quot;&gt;&lt;code&gt;LowerTriangular&lt;/code&gt;&lt;/a&gt;, or of some orthogonal type, see &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c95fa1680ff9d2f9d27d1192e3762d37dafb02b" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;-x&lt;/code&gt;, checking for overflow errors where applicable. For example, standard two's complement signed integers (e.g. &lt;code&gt;Int&lt;/code&gt;) cannot represent &lt;code&gt;-typemin(Int)&lt;/code&gt;, thus leading to an overflow.</source>
          <target state="translated">Calcula &lt;code&gt;-x&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda. Por ejemplo, los enteros con signo de complemento a dos est&amp;aacute;ndar (por ejemplo, &lt;code&gt;Int&lt;/code&gt; ) no pueden representar &lt;code&gt;-typemin(Int)&lt;/code&gt; , lo que conduce a un desbordamiento.</target>
        </trans-unit>
        <trans-unit id="6167c036f7bc22425fe096ac27be440fe0ac62c7" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;abs(x)&lt;/code&gt;, checking for overflow errors where applicable. For example, standard two's complement signed integers (e.g. &lt;code&gt;Int&lt;/code&gt;) cannot represent &lt;code&gt;abs(typemin(Int))&lt;/code&gt;, thus leading to an overflow.</source>
          <target state="translated">Calcula &lt;code&gt;abs(x)&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda. Por ejemplo, los enteros con signo de complemento a dos est&amp;aacute;ndar (por ejemplo, &lt;code&gt;Int&lt;/code&gt; ) no pueden representar &lt;code&gt;abs(typemin(Int))&lt;/code&gt; , lo que conduce a un desbordamiento.</target>
        </trans-unit>
        <trans-unit id="28790cf90cf177147936302a9d1094b853b086f9" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;cld(x,y)&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;cld(x,y)&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="4c05dcdfe5d48ed5364bba76a8d88216a7900800" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;div(x,y)&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;div(x,y)&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="a3d2d9753cdcfd6dd922be36bbcacaaf32453196" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;fld(x,y)&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;fld(x,y)&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="2c843612cbe327e35009726e8d036ba9b466e318" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;mod(x,y)&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;mod(x,y)&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="3ff6965bc32424b3a4e9ae967a2b78b31c8687be" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;r = x*y&lt;/code&gt;, with the flag &lt;code&gt;f&lt;/code&gt; indicating whether overflow has occurred.</source>
          <target state="translated">Calcula &lt;code&gt;r = x*y&lt;/code&gt; , con la bandera &lt;code&gt;f&lt;/code&gt; indicando si se ha producido un desbordamiento.</target>
        </trans-unit>
        <trans-unit id="31af4e89c705ea1b47696c4b34bfb97a778c9f15" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;r = x+y&lt;/code&gt;, with the flag &lt;code&gt;f&lt;/code&gt; indicating whether overflow has occurred.</source>
          <target state="translated">Calcula &lt;code&gt;r = x+y&lt;/code&gt; , con la bandera &lt;code&gt;f&lt;/code&gt; indicando si se ha producido un desbordamiento.</target>
        </trans-unit>
        <trans-unit id="fd998eb3f6f3e0335eab6ff45b9ad97358dd0ca0" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;r = x-y&lt;/code&gt;, with the flag &lt;code&gt;f&lt;/code&gt; indicating whether overflow has occurred.</source>
          <target state="translated">Calcula &lt;code&gt;r = x-y&lt;/code&gt; , con la bandera &lt;code&gt;f&lt;/code&gt; indicando si se ha producido un desbordamiento.</target>
        </trans-unit>
        <trans-unit id="efdf3f45f374c38b59fd728eaad712d7890f84ff" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;x%y&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;x%y&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="08676bba541f171d54d453c583476f048c4309ad" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;x*y&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;x*y&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="dd10e9d48c83e327a775e0dc3fbaa5b8a6d8c773" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;x+y&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;x+y&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="7bc22057d7126532dbb6ba4068b470e14e78325a" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;x-y&lt;/code&gt;, checking for overflow errors where applicable.</source>
          <target state="translated">Calcula &lt;code&gt;x-y&lt;/code&gt; , verificando errores de desbordamiento cuando corresponda.</target>
        </trans-unit>
        <trans-unit id="aba6566e0673d1e53c249760fa025027d921398e" translate="yes" xml:space="preserve">
          <source>Calculates the matrix-matrix or matrix-vector product $AB$ and stores the result in &lt;code&gt;Y&lt;/code&gt;, overwriting the existing value of &lt;code&gt;Y&lt;/code&gt;. Note that &lt;code&gt;Y&lt;/code&gt; must not be aliased with either &lt;code&gt;A&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">Calcula la matriz-matriz o producto matriz-vector $ AB $ y almacena el resultado en &lt;code&gt;Y&lt;/code&gt; , sobrescribiendo el valor existente de &lt;code&gt;Y&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;Y&lt;/code&gt; no debe tener un alias, ya sea con &lt;code&gt;A&lt;/code&gt; o &lt;code&gt;B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adab5090ac6a1b7b5420faac7be86c41721ba27c" translate="yes" xml:space="preserve">
          <source>Calendar</source>
          <target state="translated">Calendar</target>
        </trans-unit>
        <trans-unit id="4ba307e0d2e402f172b3a88156165205934537c5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;calloc&lt;/code&gt; from the C standard library.</source>
          <target state="translated">Llame a &lt;code&gt;calloc&lt;/code&gt; desde la biblioteca est&amp;aacute;ndar de C.</target>
        </trans-unit>
        <trans-unit id="56834381560a3dd99cb2329bb238ba01df160757" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;free&lt;/code&gt; from the C standard library. Only use this on memory obtained from &lt;a href=&quot;#Base.Libc.malloc&quot;&gt;&lt;code&gt;malloc&lt;/code&gt;&lt;/a&gt;, not on pointers retrieved from other C libraries. &lt;a href=&quot;../c/index#Core.Ptr&quot;&gt;&lt;code&gt;Ptr&lt;/code&gt;&lt;/a&gt; objects obtained from C libraries should be freed by the free functions defined in that library, to avoid assertion failures if multiple &lt;code&gt;libc&lt;/code&gt; libraries exist on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd40525129514b0914afc63feb30f354e65a4d9" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;free&lt;/code&gt; from the C standard library. Only use this on memory obtained from &lt;code&gt;malloc&lt;/code&gt;, not on pointers retrieved from other C libraries. &lt;code&gt;Ptr&lt;/code&gt; objects obtained from C libraries should be freed by the free functions defined in that library, to avoid assertion failures if multiple &lt;code&gt;libc&lt;/code&gt; libraries exist on the system.</source>
          <target state="translated">Llame &lt;code&gt;free&lt;/code&gt; desde la biblioteca est&amp;aacute;ndar de C. Use esto solo en la memoria obtenida de &lt;code&gt;malloc&lt;/code&gt; , no en punteros recuperados de otras bibliotecas de C. &lt;code&gt;Ptr&lt;/code&gt; objetos Ptr obtenidos de las bibliotecas C deben liberarse mediante las funciones libres definidas en esa biblioteca, para evitar fallas de afirmaci&amp;oacute;n si existen varias bibliotecas &lt;code&gt;libc&lt;/code&gt; en el sistema.</target>
        </trans-unit>
        <trans-unit id="9203b7a42060148350d2e8b3d4cff8d77d5adeaf" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;malloc&lt;/code&gt; from the C standard library.</source>
          <target state="translated">Llame a &lt;code&gt;malloc&lt;/code&gt; desde la biblioteca est&amp;aacute;ndar de C.</target>
        </trans-unit>
        <trans-unit id="d59c9f90d0e1176d4cad8b98ecd8773005b655fb" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;realloc&lt;/code&gt; from the C standard library.</source>
          <target state="translated">Llame a &lt;code&gt;realloc&lt;/code&gt; desde la biblioteca est&amp;aacute;ndar de C.</target>
        </trans-unit>
        <trans-unit id="04826291b163107f55d0704047219ec8c7242923" translate="yes" xml:space="preserve">
          <source>Call C functions directly (no wrappers or special APIs needed)</source>
          <target state="translated">Funciones de llamada C directamente (no se necesitan envoltorios o APIs especiales)</target>
        </trans-unit>
        <trans-unit id="176405e1dde8747bb226b06f36937d8d5df0ebaf" translate="yes" xml:space="preserve">
          <source>Call LLVM IR string in the first argument. Similar to an LLVM function &lt;code&gt;define&lt;/code&gt; block, arguments are available as consecutive unnamed SSA variables (%0, %1, etc.).</source>
          <target state="translated">Llame a la cadena LLVM IR en el primer argumento. De manera similar a un bloque de &lt;code&gt;define&lt;/code&gt; funci&amp;oacute;n LLVM , los argumentos est&amp;aacute;n disponibles como variables SSA consecutivas sin nombre (% 0,% 1, etc.).</target>
        </trans-unit>
        <trans-unit id="801735440ba4554b8dcf3670b61d4a15d05b05d1" translate="yes" xml:space="preserve">
          <source>Call a function &lt;code&gt;f&lt;/code&gt; asynchronously on the given arguments on the specified process. Return a &lt;a href=&quot;#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Keyword arguments, if any, are passed through to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">Llame a una funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; de forma asincr&amp;oacute;nica en los argumentos dados en el proceso especificado. Devuelve un &lt;a href=&quot;#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; . Los argumentos de palabras clave, si los hay, se pasan a &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e66b49e037c9bfd84faa519573d27e88a8767628" translate="yes" xml:space="preserve">
          <source>Call a function in a C-exported shared library, specified by &lt;code&gt;library.function_name&lt;/code&gt;, where &lt;code&gt;library&lt;/code&gt; is a string constant or literal. The library may be omitted, in which case the &lt;code&gt;function_name&lt;/code&gt; is resolved in the current process. Alternatively, &lt;code&gt;@ccall&lt;/code&gt; may also be used to call a function pointer &lt;code&gt;$function_pointer&lt;/code&gt;, such as one returned by &lt;code&gt;dlsym&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a025fbe4a998cb1c2319eebb3e04b735a78fa3" translate="yes" xml:space="preserve">
          <source>Call a function in a C-exported shared library, specified by the tuple &lt;code&gt;(function_name, library)&lt;/code&gt;, where each component is either a string or symbol. Instead of specifying a library, one can also use a &lt;code&gt;function_name&lt;/code&gt; symbol or string, which is resolved in the current process. Alternatively, &lt;code&gt;ccall&lt;/code&gt; may also be used to call a function pointer &lt;code&gt;function_pointer&lt;/code&gt;, such as one returned by &lt;code&gt;dlsym&lt;/code&gt;.</source>
          <target state="translated">Llame a una funci&amp;oacute;n en una biblioteca compartida exportada en C, especificada por la tupla &lt;code&gt;(function_name, library)&lt;/code&gt; nombre_funci&amp;oacute;n , biblioteca) , donde cada componente es una cadena o un s&amp;iacute;mbolo. En lugar de especificar una biblioteca, tambi&amp;eacute;n se puede utilizar un &lt;code&gt;function_name&lt;/code&gt; s&amp;iacute;mbolo o cadena, que se resuelve en el proceso actual. Alternativamente, &lt;code&gt;ccall&lt;/code&gt; tambi&amp;eacute;n puede usarse para llamar a un puntero de &lt;code&gt;function_pointer&lt;/code&gt; &lt;code&gt;dlsym&lt;/code&gt; , como uno devuelto por dlsym .</target>
        </trans-unit>
        <trans-unit id="d59f24dd0afcb729960eb267538b17e7042fcc85" translate="yes" xml:space="preserve">
          <source>Call function &lt;code&gt;f&lt;/code&gt; on each element of iterable &lt;code&gt;c&lt;/code&gt;. For multiple iterable arguments, &lt;code&gt;f&lt;/code&gt; is called elementwise. &lt;code&gt;foreach&lt;/code&gt; should be used instead of &lt;code&gt;map&lt;/code&gt; when the results of &lt;code&gt;f&lt;/code&gt; are not needed, for example in &lt;code&gt;foreach(println, array)&lt;/code&gt;.</source>
          <target state="translated">Llame a la funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; en cada elemento de &lt;code&gt;c&lt;/code&gt; iterable . Para m&amp;uacute;ltiples argumentos iterables, &lt;code&gt;f&lt;/code&gt; se llama elementwise. &lt;code&gt;foreach&lt;/code&gt; debe usarse en lugar de &lt;code&gt;map&lt;/code&gt; cuando los resultados de &lt;code&gt;f&lt;/code&gt; no son necesarios, por ejemplo, en &lt;code&gt;foreach(println, array)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebb83c3d13bcfdfda803f0b35d77b6d7243cd9fe" translate="yes" xml:space="preserve">
          <source>Call the Win32 &lt;code&gt;GetLastError&lt;/code&gt; function [only available on Windows].</source>
          <target state="translated">Llame a la funci&amp;oacute;n Win32 &lt;code&gt;GetLastError&lt;/code&gt; [solo disponible en Windows].</target>
        </trans-unit>
        <trans-unit id="ce4eab5c7f440edfe5b683c8baa8b023cc553366" translate="yes" xml:space="preserve">
          <source>Call the function &lt;code&gt;body&lt;/code&gt; with a modified task-local storage, in which &lt;code&gt;value&lt;/code&gt; is assigned to &lt;code&gt;key&lt;/code&gt;; the previous value of &lt;code&gt;key&lt;/code&gt;, or lack thereof, is restored afterwards. Useful for emulating dynamic scoping.</source>
          <target state="translated">Llame al &lt;code&gt;body&lt;/code&gt; la funci&amp;oacute;n con un almacenamiento local de tareas modificado, en el que se asigna un &lt;code&gt;value&lt;/code&gt; a la &lt;code&gt;key&lt;/code&gt; ; el valor anterior de la &lt;code&gt;key&lt;/code&gt; , o la falta del mismo, se restaura posteriormente. &amp;Uacute;til para emular el alcance din&amp;aacute;mico.</target>
        </trans-unit>
        <trans-unit id="eaa0c352f0575f82994206173cabc3866ad95796" translate="yes" xml:space="preserve">
          <source>Call the given function with an I/O stream and the supplied extra arguments. Everything written to this I/O stream is returned as a string. &lt;code&gt;context&lt;/code&gt; can be either an &lt;a href=&quot;#Base.IOContext&quot;&gt;&lt;code&gt;IOContext&lt;/code&gt;&lt;/a&gt; whose properties will be used, or a &lt;code&gt;Pair&lt;/code&gt; specifying a property and its value. &lt;code&gt;sizehint&lt;/code&gt; suggests the capacity of the buffer (in bytes).</source>
          <target state="translated">Llame a la funci&amp;oacute;n dada con un flujo de E / S y los argumentos adicionales proporcionados. Todo lo escrito en este flujo de E / S se devuelve como una cadena. &lt;code&gt;context&lt;/code&gt; puede ser un &lt;a href=&quot;#Base.IOContext&quot;&gt; &lt;code&gt;IOContext&lt;/code&gt; &lt;/a&gt; cuyas propiedades se utilizar&amp;aacute;n, o un &lt;code&gt;Pair&lt;/code&gt; especifica una propiedad y su valor. &lt;code&gt;sizehint&lt;/code&gt; sugiere la capacidad del b&amp;uacute;fer (en bytes).</target>
        </trans-unit>
        <trans-unit id="2664dee6a3ad5a12623406c5af1cda40ecf12ba0" translate="yes" xml:space="preserve">
          <source>Callback settings. Matches the &lt;a href=&quot;https://libgit2.org/libgit2/#HEAD/type/git_remote_callbacks&quot;&gt;&lt;code&gt;git_remote_callbacks&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Configuraci&amp;oacute;n de devoluci&amp;oacute;n de llamada. Coincide con la estructura &lt;a href=&quot;https://libgit2.org/libgit2/#HEAD/type/git_remote_callbacks&quot;&gt; &lt;code&gt;git_remote_callbacks&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8256faf5b345c67f126415204dbd66a186005c2" translate="yes" xml:space="preserve">
          <source>Called by cluster managers implementing custom transports. It initializes a newly launched process as a worker. Command line argument &lt;code&gt;--worker[=&amp;lt;cookie&amp;gt;]&lt;/code&gt; has the effect of initializing a process as a worker using TCP/IP sockets for transport. &lt;code&gt;cookie&lt;/code&gt; is a &lt;a href=&quot;#Distributed.cluster_cookie-Tuple%7B%7D&quot;&gt;&lt;code&gt;cluster_cookie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Lo llaman los administradores de cl&amp;uacute;steres que implementan transportes personalizados. Inicializa un proceso reci&amp;eacute;n lanzado como trabajador. El argumento de la l&amp;iacute;nea de comando &lt;code&gt;--worker[=&amp;lt;cookie&amp;gt;]&lt;/code&gt; tiene el efecto de inicializar un proceso como trabajador usando sockets TCP / IP para el transporte. &lt;code&gt;cookie&lt;/code&gt; es un &lt;a href=&quot;#Distributed.cluster_cookie-Tuple%7B%7D&quot;&gt; &lt;code&gt;cluster_cookie&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="caea39a5ffed5cf53b4f9992aa9aebdfdb841ef9" translate="yes" xml:space="preserve">
          <source>Called by cluster managers using custom transports. It should be called when the custom transport implementation receives the first message from a remote worker. The custom transport must manage a logical connection to the remote worker and provide two &lt;code&gt;IO&lt;/code&gt; objects, one for incoming messages and the other for messages addressed to the remote worker. If &lt;code&gt;incoming&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the remote peer initiated the connection. Whichever of the pair initiates the connection sends the cluster cookie and its Julia version number to perform the authentication handshake.</source>
          <target state="translated">Llamado por administradores de cl&amp;uacute;steres mediante transportes personalizados. Debe llamarse cuando la implementaci&amp;oacute;n de transporte personalizado recibe el primer mensaje de un trabajador remoto. El transporte personalizado debe gestionar una conexi&amp;oacute;n l&amp;oacute;gica con el trabajador remoto y proporcionar dos objetos &lt;code&gt;IO&lt;/code&gt; , uno para los mensajes entrantes y otro para los mensajes dirigidos al trabajador remoto. Si &lt;code&gt;incoming&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; , el par remoto inici&amp;oacute; la conexi&amp;oacute;n. Cualquiera de los dos que inicie la conexi&amp;oacute;n env&amp;iacute;a la cookie de cl&amp;uacute;ster y su n&amp;uacute;mero de versi&amp;oacute;n de Julia para realizar el protocolo de enlace de autenticaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="66dd1be7576a64af07b2ce99b1a2ed2a7c06b791" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#Core.Ref&quot;&gt;&lt;code&gt;Ref(array[, index])&lt;/code&gt;&lt;/a&gt; is generally preferable to this function as it guarantees validity.</source>
          <target state="translated">Llamar a &lt;a href=&quot;#Core.Ref&quot;&gt; &lt;code&gt;Ref(array[, index])&lt;/code&gt; &lt;/a&gt; es generalmente preferible a esta funci&amp;oacute;n ya que garantiza la validez.</target>
        </trans-unit>
        <trans-unit id="0d16198678162c2927c2f17ed3e602251edd7089" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; inside a macro is a particularly dangerous warning sign; it means the macro will only work when called at the top level. If such a macro is written as a function instead, it will naturally have access to the run-time values it needs.</source>
          <target state="translated">Llamar a &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; dentro de una macro es una se&amp;ntilde;al de advertencia particularmente peligrosa; significa que la macro solo funcionar&amp;aacute; cuando se la llame en el nivel superior. Si dicha macro se escribe como una funci&amp;oacute;n, naturalmente tendr&amp;aacute; acceso a los valores de tiempo de ejecuci&amp;oacute;n que necesita.</target>
        </trans-unit>
        <trans-unit id="b72748e09098c6bd97f55e59c563c3a122bb6331" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; to cause a side-effect in another module. This will also cause a warning to be emitted when the incremental precompile flag is set.</source>
          <target state="translated">Llamar a &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; para causar un efecto secundario en otro m&amp;oacute;dulo. Esto tambi&amp;eacute;n har&amp;aacute; que se emita una advertencia cuando se establezca el indicador de precompilaci&amp;oacute;n incremental.</target>
        </trans-unit>
        <trans-unit id="41aa7e1fcfd92670fa5a846085d3341583baabcf" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt;&lt;code&gt;stacktrace()&lt;/code&gt;&lt;/a&gt; returns a vector of &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.StackFrame&quot;&gt;&lt;code&gt;StackTraces.StackFrame&lt;/code&gt;&lt;/a&gt; s. For ease of use, the alias &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.StackTrace&quot;&gt;&lt;code&gt;StackTraces.StackTrace&lt;/code&gt;&lt;/a&gt; can be used in place of &lt;code&gt;Vector{StackFrame}&lt;/code&gt;. (Examples with &lt;code&gt;[...]&lt;/code&gt; indicate that output may vary depending on how the code is run.)</source>
          <target state="translated">Llamar a &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt; &lt;code&gt;stacktrace()&lt;/code&gt; &lt;/a&gt; devuelve un vector de &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.StackFrame&quot;&gt; &lt;code&gt;StackTraces.StackFrame&lt;/code&gt; &lt;/a&gt; s. Para facilitar su uso, el alias &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.StackTrace&quot;&gt; &lt;code&gt;StackTraces.StackTrace&lt;/code&gt; &lt;/a&gt; se puede utilizar en lugar de &lt;code&gt;Vector{StackFrame}&lt;/code&gt; . (Los ejemplos con &lt;code&gt;[...]&lt;/code&gt; indican que la salida puede variar dependiendo de c&amp;oacute;mo se ejecute el c&amp;oacute;digo).</target>
        </trans-unit>
        <trans-unit id="4a4f549c9307f9b4d84be21408b77dbb68a1f198" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;rand&lt;/code&gt; and other RNG-related functions should be avoided in doctests since they will not produce consistent outputs during different Julia sessions. If you would like to show some random number generation related functionality, one option is to explicitly construct and seed your own &lt;a href=&quot;../../stdlib/random/index#Random.MersenneTwister&quot;&gt;&lt;code&gt;MersenneTwister&lt;/code&gt;&lt;/a&gt; (or other pseudorandom number generator) and pass it to the functions you are doctesting.</source>
          <target state="translated">Se debe evitar llamar a &lt;code&gt;rand&lt;/code&gt; y otras funciones relacionadas con RNG en las pruebas de documentaci&amp;oacute;n, ya que no producir&amp;aacute;n resultados consistentes durante las diferentes sesiones de Julia. Si desea mostrar alguna funcionalidad relacionada con la generaci&amp;oacute;n de n&amp;uacute;meros aleatorios, una opci&amp;oacute;n es construir y sembrar expl&amp;iacute;citamente su propio &lt;a href=&quot;../../stdlib/random/index#Random.MersenneTwister&quot;&gt; &lt;code&gt;MersenneTwister&lt;/code&gt; &lt;/a&gt; (u otro generador de n&amp;uacute;meros pseudoaleatorios) y pasarlo a las funciones que est&amp;aacute; probando.</target>
        </trans-unit>
        <trans-unit id="2d7425b9bc6bdd37cfb5d8f6425582078c2424c2" translate="yes" xml:space="preserve">
          <source>Calling C and Fortran Code</source>
          <target state="translated">Llamando al código C y Fortran</target>
        </trans-unit>
        <trans-unit id="0a72734e5b9d7e776161f32d3bf09af339418e1e" translate="yes" xml:space="preserve">
          <source>Calling Convention</source>
          <target state="translated">Llamar a la Convención</target>
        </trans-unit>
        <trans-unit id="9abfa6ddb5caaadbeab0376e3006f230505bfdea" translate="yes" xml:space="preserve">
          <source>Calling Julia Functions</source>
          <target state="translated">Llamando a Julia Funciones</target>
        </trans-unit>
        <trans-unit id="85116a89bb1c5c01cfc46fa63875b231c5d2c577" translate="yes" xml:space="preserve">
          <source>Calling a method of a class in Python (&lt;code&gt;a = MyClass(x), x.func(y)&lt;/code&gt;) corresponds to a function call in Julia, e.g. &lt;code&gt;a = MyStruct(x), func(x::MyStruct, y)&lt;/code&gt;. In general, multiple dispatch is more flexible and powerful than the Python class system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49d09ca1110825e69afa568f7e07eeec5300e61" translate="yes" xml:space="preserve">
          <source>Calling any function that is defined after the body of the generated function. This condition is relaxed for incrementally-loaded precompiled modules to allow calling any function in the module.</source>
          <target state="translated">Llamando a cualquier función que se define después del cuerpo de la función generada.Esta condición es relajada para los módulos precompilados de carga incremental para permitir la llamada de cualquier función en el módulo.</target>
        </trans-unit>
        <trans-unit id="41d74c50b2c67c3ddc7b0e22937873f076e4b22e" translate="yes" xml:space="preserve">
          <source>Calling this function is the &quot;safe&quot; way to write algorithms that exploit linear indexing.</source>
          <target state="translated">Llamar a esta función es la forma &quot;segura&quot; de escribir algoritmos que exploten la indexación lineal.</target>
        </trans-unit>
        <trans-unit id="0a19b7e26b2ba75ac27255f31f21e98a34d62953" translate="yes" xml:space="preserve">
          <source>Calls</source>
          <target state="translated">Calls</target>
        </trans-unit>
        <trans-unit id="19d45b5117925d478df6d24e3b83936bcd7c78e0" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;f(args...; kwargs...)&lt;/code&gt;, but guarantees that the most recent method of &lt;code&gt;f&lt;/code&gt; will be executed. This is useful in specialized circumstances, e.g. long-running event loops or callback functions that may call obsolete versions of a function &lt;code&gt;f&lt;/code&gt;. (The drawback is that &lt;code&gt;invokelatest&lt;/code&gt; is somewhat slower than calling &lt;code&gt;f&lt;/code&gt; directly, and the type of the result cannot be inferred by the compiler.)</source>
          <target state="translated">Llama a &lt;code&gt;f(args...; kwargs...)&lt;/code&gt; , pero garantiza que se ejecutar&amp;aacute; el m&amp;eacute;todo m&amp;aacute;s reciente de &lt;code&gt;f&lt;/code&gt; . Esto es &amp;uacute;til en circunstancias especializadas, por ejemplo, bucles de eventos de larga duraci&amp;oacute;n o funciones de devoluci&amp;oacute;n de llamada que pueden llamar a versiones obsoletas de una funci&amp;oacute;n . &lt;code&gt;f&lt;/code&gt; (El inconveniente es que &lt;code&gt;invokelatest&lt;/code&gt; es algo m&amp;aacute;s lento que llamar a &lt;code&gt;f&lt;/code&gt; directamente, y el compilador no puede inferir el tipo de resultado).</target>
        </trans-unit>
        <trans-unit id="4da9c9af9631e294961d5a16fdc681ca3d84f508" translate="yes" xml:space="preserve">
          <source>Camera</source>
          <target state="translated">Camera</target>
        </trans-unit>
        <trans-unit id="f01f585ee537bca9460fb6cd89d91523ae410c34" translate="yes" xml:space="preserve">
          <source>Can I use &lt;code&gt;using&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt; inside a function?</source>
          <target state="translated">&amp;iquest;Puedo usar el &lt;code&gt;using&lt;/code&gt; o &lt;code&gt;import&lt;/code&gt; ar dentro de una funci&amp;oacute;n?</target>
        </trans-unit>
        <trans-unit id="07d6cb97820e052be2b530d0dd83bba8edfc5e64" translate="yes" xml:space="preserve">
          <source>Cancer</source>
          <target state="translated">Cancer</target>
        </trans-unit>
        <trans-unit id="dbffdf1f157a14a19d2c2aeb64068a16056948d8" translate="yes" xml:space="preserve">
          <source>Candy</source>
          <target state="translated">Candy</target>
        </trans-unit>
        <trans-unit id="f20a12fff18e89250e7a4fc78447ee7170895a65" translate="yes" xml:space="preserve">
          <source>Cannot exactly convert &lt;code&gt;val&lt;/code&gt; to type &lt;code&gt;T&lt;/code&gt; in a method of function &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">No se puede convertir exactamente &lt;code&gt;val&lt;/code&gt; a tipo &lt;code&gt;T&lt;/code&gt; en un m&amp;eacute;todo de &lt;code&gt;name&lt;/code&gt; de funci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="91fe73e52f951e9f466713424d00ece47cdc7524" translate="yes" xml:space="preserve">
          <source>Canonicalize a path by expanding symbolic links and removing &quot;.&quot; and &quot;..&quot; entries. On case-insensitive case-preserving filesystems (typically Mac and Windows), the filesystem's stored case for the path is returned.</source>
          <target state="translated">Canonizar un camino expandiendo los vínculos simbólicos y eliminando las entradas de &quot;.&quot; y &quot;..&quot;.En los sistemas de archivos que conservan las mayúsculas y minúsculas (típicamente Mac y Windows),se devuelve la mayúscula y minúscula almacenada en el sistema de archivos para la ruta.</target>
        </trans-unit>
        <trans-unit id="90a16c05e849a5af3a6ddd19c2db0fa10e54dd2d" translate="yes" xml:space="preserve">
          <source>Capitalize the first character of each word in &lt;code&gt;s&lt;/code&gt;; if &lt;code&gt;strict&lt;/code&gt; is true, every other character is converted to lowercase, otherwise they are left unchanged. By default, all non-letters are considered as word separators; a predicate can be passed as the &lt;code&gt;wordsep&lt;/code&gt; keyword to determine which characters should be considered as word separators. See also &lt;a href=&quot;#Base.Unicode.uppercasefirst&quot;&gt;&lt;code&gt;uppercasefirst&lt;/code&gt;&lt;/a&gt; to capitalize only the first character in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Escriba en may&amp;uacute;scula el primer car&amp;aacute;cter de cada palabra en &lt;code&gt;s&lt;/code&gt; ; si &lt;code&gt;strict&lt;/code&gt; es verdadero, todos los dem&amp;aacute;s caracteres se convierten a min&amp;uacute;sculas; de lo contrario, no se modifican. De forma predeterminada, todas las letras que no son letras se consideran separadores de palabras; se puede pasar un predicado como palabra clave &lt;code&gt;wordsep&lt;/code&gt; para determinar qu&amp;eacute; caracteres deben considerarse como separadores de palabras. Consulte tambi&amp;eacute;n &lt;a href=&quot;#Base.Unicode.uppercasefirst&quot;&gt; &lt;code&gt;uppercasefirst&lt;/code&gt; &lt;/a&gt; primero para poner en may&amp;uacute;scula solo el primer car&amp;aacute;cter de &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9bf29452874274eefd7cb3833b9f64b68215e7a" translate="yes" xml:space="preserve">
          <source>Capricorn</source>
          <target state="translated">Capricorn</target>
        </trans-unit>
        <trans-unit id="7a60d3a75036d27b63be0e55a67bb26ec4e25de4" translate="yes" xml:space="preserve">
          <source>Captures can also be accessed by indexing the &lt;code&gt;RegexMatch&lt;/code&gt; object with the number or name of the capture group:</source>
          <target state="translated">Tambi&amp;eacute;n se puede acceder a las &lt;code&gt;RegexMatch&lt;/code&gt; indexando el objeto RegexMatch con el n&amp;uacute;mero o nombre del grupo de captura:</target>
        </trans-unit>
        <trans-unit id="88b6c532d029fa2352cf701d32470679db245f1e" translate="yes" xml:space="preserve">
          <source>Captures can be referenced in a substitution string when using &lt;code&gt;replace&lt;/code&gt; by using &lt;code&gt;\n&lt;/code&gt; to refer to the nth capture group and prefixing the substitution string with &lt;code&gt;s&lt;/code&gt;. Capture group 0 refers to the entire match object. Named capture groups can be referenced in the substitution with &lt;code&gt;\g&amp;lt;groupname&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">Se puede hacer referencia a las capturas en una cadena de sustituci&amp;oacute;n cuando se usa &lt;code&gt;replace&lt;/code&gt; usando &lt;code&gt;\n&lt;/code&gt; para referirse al n-&amp;eacute;simo grupo de captura y prefijando la cadena de sustituci&amp;oacute;n con &lt;code&gt;s&lt;/code&gt; . El grupo de captura 0 se refiere al objeto de coincidencia completo. Se puede hacer referencia a los grupos de captura con nombre en la sustituci&amp;oacute;n con &lt;code&gt;\g&amp;lt;groupname&amp;gt;&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f2a9f7332f7a09946296f88c18131b92dbb1279f" translate="yes" xml:space="preserve">
          <source>Card Index</source>
          <target state="translated">Índice de tarjetas</target>
        </trans-unit>
        <trans-unit id="0cca55f8e3afeb49c40b1e95517a9c1135c7a560" translate="yes" xml:space="preserve">
          <source>Carousel Horse</source>
          <target state="translated">Caballo de carrusel</target>
        </trans-unit>
        <trans-unit id="255e5aac2127bb14392d1d0c859050548a802598" translate="yes" xml:space="preserve">
          <source>Carp Streamer</source>
          <target state="translated">Carp Streamer</target>
        </trans-unit>
        <trans-unit id="722d5852eba2640d07e63d26f677b7d3dce6d40c" translate="yes" xml:space="preserve">
          <source>Cartesian indexing</source>
          <target state="translated">Indización cartesiana</target>
        </trans-unit>
        <trans-unit id="2a2b1fd0558d005d15bb6a090f84de302c0d4517" translate="yes" xml:space="preserve">
          <source>Cartesian indices</source>
          <target state="translated">Índices cartesianos</target>
        </trans-unit>
        <trans-unit id="2111431e539d8078cb148dae299ad435bcf94b27" translate="yes" xml:space="preserve">
          <source>Case &lt;code&gt;n &amp;gt; 1&lt;/code&gt;</source>
          <target state="translated">Caso &lt;code&gt;n &amp;gt; 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9f1c61da11e76b12eda645d65ffd7fe29682099" translate="yes" xml:space="preserve">
          <source>Case &lt;code&gt;n == 0&lt;/code&gt;</source>
          <target state="translated">Caso &lt;code&gt;n == 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29a059f07d864d6895c8f26aada84e3e2ae48daa" translate="yes" xml:space="preserve">
          <source>Case &lt;code&gt;n == 1&lt;/code&gt;</source>
          <target state="translated">Caso &lt;code&gt;n == 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5a951eefa4da8021cf83c2a312ac9db2161e292" translate="yes" xml:space="preserve">
          <source>Case Study: Rational</source>
          <target state="translated">Estudio de caso:Racional</target>
        </trans-unit>
        <trans-unit id="226c8be8625b7e7ff2acf9e7afa1f2c1a67ee20d" translate="yes" xml:space="preserve">
          <source>Case Study: Rational Promotions</source>
          <target state="translated">Estudio de caso:Promociones racionales</target>
        </trans-unit>
        <trans-unit id="cebe54c7626cb1cefaca5f7f5ea6c96b4a7a2882" translate="yes" xml:space="preserve">
          <source>Cat</source>
          <target state="translated">Cat</target>
        </trans-unit>
        <trans-unit id="e321d6511fec0b2a4b2f0a4b6c9161ea67d3b862" translate="yes" xml:space="preserve">
          <source>Cat Face</source>
          <target state="translated">Cara de Gato</target>
        </trans-unit>
        <trans-unit id="0304d8e66e7196a0cbe56d1a1e3f50a5d44586dc" translate="yes" xml:space="preserve">
          <source>Cat Face With Tears Of Joy</source>
          <target state="translated">Cara de gato con lágrimas de alegría</target>
        </trans-unit>
        <trans-unit id="8694b8421f68b951f951f9af799f80af5160aedd" translate="yes" xml:space="preserve">
          <source>Cat Face With Wry Smile</source>
          <target state="translated">Cara de gato con sonrisa irónica</target>
        </trans-unit>
        <trans-unit id="34dfec8f22dde17704da94df2192063529be5d2d" translate="yes" xml:space="preserve">
          <source>Catalan's constant.</source>
          <target state="translated">La constante del catalán.</target>
        </trans-unit>
        <trans-unit id="b8c6b9519d52cad00665d92e155963171c5e725d" translate="yes" xml:space="preserve">
          <source>Catch exceptions during event evaluation</source>
          <target state="translated">Excepciones de captura durante la evaluación del evento</target>
        </trans-unit>
        <trans-unit id="a3c686e711e4720f99b4562bb3dbaae7ab658cf2" translate="yes" xml:space="preserve">
          <source>Category</source>
          <target state="translated">Category</target>
        </trans-unit>
        <trans-unit id="1a80861772b0484c4f5af5303cebead59df45b86" translate="yes" xml:space="preserve">
          <source>Caution Sign</source>
          <target state="translated">Signo de precaución</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="e4c530b1c24d3c230e2d840c8f5a4bd61e8f0170" translate="yes" xml:space="preserve">
          <source>Cchar</source>
          <target state="translated">Cchar</target>
        </trans-unit>
        <trans-unit id="98ea122cbe5434a5105ed227191d1c86da875820" translate="yes" xml:space="preserve">
          <source>Cdouble</source>
          <target state="translated">Cdouble</target>
        </trans-unit>
        <trans-unit id="ef6d3da178771ba00eefbc1133066d5d42ce7c22" translate="yes" xml:space="preserve">
          <source>Certain constructs in the language introduce &lt;em&gt;scope blocks&lt;/em&gt;, which are regions of code that are eligible to be the scope of some set of variables. The scope of a variable cannot be an arbitrary set of source lines; instead, it will always line up with one of these blocks. There are two main types of scopes in Julia, &lt;em&gt;global scope&lt;/em&gt; and &lt;em&gt;local scope&lt;/em&gt;. The latter can be nested. The constructs introducing scope blocks are:</source>
          <target state="translated">Ciertas construcciones en el lenguaje introducen &lt;em&gt;bloques de alcance&lt;/em&gt; , que son regiones de c&amp;oacute;digo que son elegibles para ser el alcance de alg&amp;uacute;n conjunto de variables. El alcance de una variable no puede ser un conjunto arbitrario de l&amp;iacute;neas fuente; en cambio, siempre se alinear&amp;aacute; con uno de estos bloques. Hay dos tipos principales de &amp;aacute;mbitos en Julia, &lt;em&gt;&amp;aacute;mbito global&lt;/em&gt; y &lt;em&gt;&amp;aacute;mbito local&lt;/em&gt; . Este &amp;uacute;ltimo se puede anidar. Las construcciones que presentan los bloques de alcance son:</target>
        </trans-unit>
        <trans-unit id="79d6412ea668dd527aa9bd5226b88db41d88b00b" translate="yes" xml:space="preserve">
          <source>Certain constructs in the language introduce &lt;em&gt;scope blocks&lt;/em&gt;, which are regions of code that are eligible to be the scope of some set of variables. The scope of a variable cannot be an arbitrary set of source lines; instead, it will always line up with one of these blocks. There are two main types of scopes in Julia, &lt;em&gt;global scope&lt;/em&gt; and &lt;em&gt;local scope&lt;/em&gt;. The latter can be nested. There is also a distinction in Julia between constructs which introduce a &quot;hard scope&quot; and those which only introduce a &quot;soft scope&quot;, which affects whether shadowing a global variable by the same name is allowed or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a436f524b4f30d26cce25c6fb61307697fefc2aa" translate="yes" xml:space="preserve">
          <source>Certain operations make mathematical sense but result in errors:</source>
          <target state="translated">Ciertas operaciones tienen sentido matemático pero dan lugar a errores:</target>
        </trans-unit>
        <trans-unit id="b83c053cc3abf67280351793fa40fe0857a1ef12" translate="yes" xml:space="preserve">
          <source>Cfloat</source>
          <target state="translated">Cfloat</target>
        </trans-unit>
        <trans-unit id="1bf8d41c6633f510ee163ba63fad81c499b65c06" translate="yes" xml:space="preserve">
          <source>Chaining comparisons</source>
          <target state="translated">Encadenando comparaciones</target>
        </trans-unit>
        <trans-unit id="e4b02f736800960ffeb31d1ce4d94bc68e9b3522" translate="yes" xml:space="preserve">
          <source>Chaining comparisons is often quite convenient in numerical code. Chained comparisons use the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator for scalar comparisons, and the &lt;a href=&quot;../../base/math/index#Base.:&amp;amp;&quot;&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;/a&gt; operator for elementwise comparisons, which allows them to work on arrays. For example, &lt;code&gt;0 .&amp;lt; A .&amp;lt; 1&lt;/code&gt; gives a boolean array whose entries are true where the corresponding elements of &lt;code&gt;A&lt;/code&gt; are between 0 and 1.</source>
          <target state="translated">El encadenamiento de comparaciones suele ser bastante conveniente en c&amp;oacute;digo num&amp;eacute;rico. Las comparaciones encadenadas utilizan el operador &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; para las comparaciones escalares y el operador &lt;a href=&quot;../../base/math/index#Base.:&amp;amp;&quot;&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;/a&gt; para las comparaciones por elementos, lo que les permite trabajar en matrices. Por ejemplo, &lt;code&gt;0 .&amp;lt; A .&amp;lt; 1&lt;/code&gt; da una matriz booleana cuyas entradas son verdaderas donde los elementos correspondientes de &lt;code&gt;A&lt;/code&gt; est&amp;aacute;n entre 0 y 1.</target>
        </trans-unit>
        <trans-unit id="e392d2ea4fb56f31affc92a17a7f093445989a1e" translate="yes" xml:space="preserve">
          <source>Change the &lt;code&gt;T&lt;/code&gt; arithmetic precision (in bits) for the duration of &lt;code&gt;f&lt;/code&gt;. It is logically equivalent to:</source>
          <target state="translated">Cambie la precisi&amp;oacute;n aritm&amp;eacute;tica de &lt;code&gt;T&lt;/code&gt; (en bits) durante la duraci&amp;oacute;n de &lt;code&gt;f&lt;/code&gt; . Es l&amp;oacute;gicamente equivalente a:</target>
        </trans-unit>
        <trans-unit id="aa7aae11d28e8bd4a1ac0973becf0187af2f72ff" translate="yes" xml:space="preserve">
          <source>Change the next word to lowercase</source>
          <target state="translated">Cambie la siguiente palabra a minúsculas</target>
        </trans-unit>
        <trans-unit id="a9d00290564b5f132466d2d65a5760e410b77379" translate="yes" xml:space="preserve">
          <source>Change the next word to titlecase</source>
          <target state="translated">Cambie la siguiente palabra a titlecase</target>
        </trans-unit>
        <trans-unit id="a1848e10eea50d9a7d51e412b6c651b68fe304e4" translate="yes" xml:space="preserve">
          <source>Change the next word to uppercase</source>
          <target state="translated">Cambie la siguiente palabra a mayúscula</target>
        </trans-unit>
        <trans-unit id="52116f45eb7f0166da051d04ad38b63f5e208b1f" translate="yes" xml:space="preserve">
          <source>Change the owner and/or group of &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;owner&lt;/code&gt; and/or &lt;code&gt;group&lt;/code&gt;. If the value entered for &lt;code&gt;owner&lt;/code&gt; or &lt;code&gt;group&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt; the corresponding ID will not change. Only integer &lt;code&gt;owner&lt;/code&gt;s and &lt;code&gt;group&lt;/code&gt;s are currently supported. Return &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Cambie el propietario y / o grupo de &lt;code&gt;path&lt;/code&gt; a &lt;code&gt;owner&lt;/code&gt; y / o &lt;code&gt;group&lt;/code&gt; . Si el valor ingresado para &lt;code&gt;owner&lt;/code&gt; o &lt;code&gt;group&lt;/code&gt; es &lt;code&gt;-1&lt;/code&gt; , el ID correspondiente no cambiar&amp;aacute;. Actualmente, solo se admiten los &lt;code&gt;owner&lt;/code&gt; n&amp;uacute;meros enteros y los &lt;code&gt;group&lt;/code&gt; . &lt;code&gt;path&lt;/code&gt; regreso .</target>
        </trans-unit>
        <trans-unit id="b4cadce06d0cab691571969b2bd50452957441f5" translate="yes" xml:space="preserve">
          <source>Change the permissions mode of &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;mode&lt;/code&gt;. Only integer &lt;code&gt;mode&lt;/code&gt;s (e.g. &lt;code&gt;0o777&lt;/code&gt;) are currently supported. If &lt;code&gt;recursive=true&lt;/code&gt; and the path is a directory all permissions in that directory will be recursively changed. Return &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">Cambie el modo de permisos de &lt;code&gt;path&lt;/code&gt; a &lt;code&gt;mode&lt;/code&gt; . Actualmente, solo se admiten los &lt;code&gt;mode&lt;/code&gt; enteros (por ejemplo, &lt;code&gt;0o777&lt;/code&gt; ). Si &lt;code&gt;recursive=true&lt;/code&gt; y la ruta es un directorio, todos los permisos de ese directorio se cambiar&amp;aacute;n de forma recursiva. &lt;code&gt;path&lt;/code&gt; regreso .</target>
        </trans-unit>
        <trans-unit id="32a989fb98b8f1dbfc4dbfdbda4cfa7a8f5a564e" translate="yes" xml:space="preserve">
          <source>Change the rounding mode of floating point type &lt;code&gt;T&lt;/code&gt; for the duration of &lt;code&gt;f&lt;/code&gt;. It is logically equivalent to:</source>
          <target state="translated">Cambie el modo de redondeo del tipo de coma flotante &lt;code&gt;T&lt;/code&gt; durante la duraci&amp;oacute;n de &lt;code&gt;f&lt;/code&gt; . Es l&amp;oacute;gicamente equivalente a:</target>
        </trans-unit>
        <trans-unit id="6826b0c27162177562d5dac46bf63880b08e8521" translate="yes" xml:space="preserve">
          <source>Change the type-interpretation of a block of memory. For arrays, this constructs a view of the array with the same binary data as the given array, but with the specified element type. For example, &lt;code&gt;reinterpret(Float32, UInt32(7))&lt;/code&gt; interprets the 4 bytes corresponding to &lt;code&gt;UInt32(7)&lt;/code&gt; as a &lt;a href=&quot;../numbers/index#Core.Float32&quot;&gt;&lt;code&gt;Float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cambiar la interpretaci&amp;oacute;n de tipo de un bloque de memoria. Para matrices, esto construye una vista de la matriz con los mismos datos binarios que la matriz dada, pero con el tipo de elemento especificado. Por ejemplo, &lt;code&gt;reinterpret(Float32, UInt32(7))&lt;/code&gt; interpreta los 4 bytes correspondientes a &lt;code&gt;UInt32(7)&lt;/code&gt; como &lt;a href=&quot;../numbers/index#Core.Float32&quot;&gt; &lt;code&gt;Float32&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4eec72c597c649417c08cf8310c3fd12582209e" translate="yes" xml:space="preserve">
          <source>Change to the first history entry (of the current session if it is before the current position in history)</source>
          <target state="translated">Cambio a la primera entrada de la historia (de la sesión actual si es antes de la posición actual en la historia)</target>
        </trans-unit>
        <trans-unit id="2d9790ce2e89644c1d5ef1d4178a0e20ffa229c9" translate="yes" xml:space="preserve">
          <source>Change to the last history entry</source>
          <target state="translated">Cambiar a la última entrada de la historia</target>
        </trans-unit>
        <trans-unit id="f00c73a7c5134c054bca76810185e125c387bc0a" translate="yes" xml:space="preserve">
          <source>Change to the next history entry</source>
          <target state="translated">Cambiar a la siguiente entrada del historial</target>
        </trans-unit>
        <trans-unit id="cfe48d07ba26c0afb2979f42a242b38ee82c88da" translate="yes" xml:space="preserve">
          <source>Change to the previous history entry</source>
          <target state="translated">Cambiar a la entrada anterior de la historia</target>
        </trans-unit>
        <trans-unit id="879f0b1bef59eeebf78cfd3a22f6f8077810cecf" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">Channel</target>
        </trans-unit>
        <trans-unit id="18e03e2a37ba37df713f9665ef752fb8b40fc1e8" translate="yes" xml:space="preserve">
          <source>Channels</source>
          <target state="translated">Channels</target>
        </trans-unit>
        <trans-unit id="5d2585d6b1ebe562ed90e098229697dd1edbced3" translate="yes" xml:space="preserve">
          <source>Channels and RemoteChannels</source>
          <target state="translated">Canales y canales remotos</target>
        </trans-unit>
        <trans-unit id="5de527ad4b50c6e5971cd0c9d1c61d30dff8242c" translate="yes" xml:space="preserve">
          <source>Channels are created via the &lt;code&gt;Channel{T}(sz)&lt;/code&gt; constructor. The channel will only hold objects of type &lt;code&gt;T&lt;/code&gt;. If the type is not specified, the channel can hold objects of any type. &lt;code&gt;sz&lt;/code&gt; refers to the maximum number of elements that can be held in the channel at any time. For example, &lt;code&gt;Channel(32)&lt;/code&gt; creates a channel that can hold a maximum of 32 objects of any type. A &lt;code&gt;Channel{MyType}(64)&lt;/code&gt; can hold up to 64 objects of &lt;code&gt;MyType&lt;/code&gt; at any time.</source>
          <target state="translated">Los canales se crean mediante el constructor &lt;code&gt;Channel{T}(sz)&lt;/code&gt; . El canal s&amp;oacute;lo mantendr&amp;aacute; los objetos de tipo &lt;code&gt;T&lt;/code&gt; . Si no se especifica el tipo, el canal puede contener objetos de cualquier tipo. &lt;code&gt;sz&lt;/code&gt; se refiere al n&amp;uacute;mero m&amp;aacute;ximo de elementos que se pueden mantener en el canal en cualquier momento. Por ejemplo, &lt;code&gt;Channel(32)&lt;/code&gt; crea un canal que puede contener un m&amp;aacute;ximo de 32 objetos de cualquier tipo. Un &lt;code&gt;Channel{MyType}(64)&lt;/code&gt; puede contener hasta 64 objetos de &lt;code&gt;MyType&lt;/code&gt; en cualquier momento.</target>
        </trans-unit>
        <trans-unit id="f0af2b3f98cdd8293e5cd590c14f3ad654402a21" translate="yes" xml:space="preserve">
          <source>Character Tie</source>
          <target state="translated">Corbata de personaje</target>
        </trans-unit>
        <trans-unit id="ed74ee0fd869597bc8b7e61e821510ccb8a627ec" translate="yes" xml:space="preserve">
          <source>Character literals use the same behavior.</source>
          <target state="translated">Los personajes literales usan el mismo comportamiento.</target>
        </trans-unit>
        <trans-unit id="af451d4e9c685856e4c14256f0f0685adcf83857" translate="yes" xml:space="preserve">
          <source>Character(s)</source>
          <target state="translated">Character(s)</target>
        </trans-unit>
        <trans-unit id="69803692f05446db28128e4d652fcda3604ec718" translate="yes" xml:space="preserve">
          <source>Characteristics:</source>
          <target state="translated">Characteristics:</target>
        </trans-unit>
        <trans-unit id="b6f59f08fd6d58c6725e21a9ec24e068148ec586" translate="yes" xml:space="preserve">
          <source>Characters</source>
          <target state="translated">Characters</target>
        </trans-unit>
        <trans-unit id="d9a77eec8cc54d9b9059ecff9f7f8b0c3d4a4b0c" translate="yes" xml:space="preserve">
          <source>Characters not listed above are normally treated as delimiters between date and time slots. For example a &lt;code&gt;dt&lt;/code&gt; string of &quot;1996-01-15T00:00:00.0&quot; would have a &lt;code&gt;format&lt;/code&gt; string like &quot;y-m-dTH:M:S.s&quot;. If you need to use a code character as a delimiter you can escape it using backslash. The date &quot;1995y01m&quot; would have the format &quot;y\ym\m&quot;.</source>
          <target state="translated">Los caracteres que no figuran en la lista anterior normalmente se tratan como delimitadores entre las franjas horarias y de fecha. Por ejemplo, una cadena &lt;code&gt;dt&lt;/code&gt; de &quot;1996-01-15T00: 00: 00.0&quot; tendr&amp;iacute;a una cadena de &lt;code&gt;format&lt;/code&gt; o como &quot;ym-dTH: M: Ss&quot;. Si necesita usar un car&amp;aacute;cter de c&amp;oacute;digo como delimitador, puede escapar usando una barra invertida. La fecha &quot;1995y01m&quot; tendr&amp;iacute;a el formato &quot;y \ ym \ m&quot;.</target>
        </trans-unit>
        <trans-unit id="ebef4e9d21d309d10e724345b9594679b3cd6e69" translate="yes" xml:space="preserve">
          <source>Chart With Downwards Trend</source>
          <target state="translated">Gráfico con tendencia descendente</target>
        </trans-unit>
        <trans-unit id="fda4f4461a399f03823d93f75ef10112a332c903" translate="yes" xml:space="preserve">
          <source>Chart With Upwards Trend</source>
          <target state="translated">Gráfico con tendencia al alza</target>
        </trans-unit>
        <trans-unit id="a4a446b006052a5af669c7f6d998cf1743a7f6f9" translate="yes" xml:space="preserve">
          <source>Chart With Upwards Trend And Yen Sign</source>
          <target state="translated">Gráfico con tendencia al alza y signo del yen</target>
        </trans-unit>
        <trans-unit id="73e89165960f554ff917c3b3ac9d3b096b8d5eaf" translate="yes" xml:space="preserve">
          <source>Check Mark</source>
          <target state="translated">Marca de verificación</target>
        </trans-unit>
        <trans-unit id="6af7b65d95d1fd3d3c46eeef377ffa00fb6e86a4" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;ex&lt;/code&gt; is an expression with head &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cccac008dc853e30120df3e9a70c3898d9b2bee" translate="yes" xml:space="preserve">
          <source>Check if commit &lt;code&gt;id&lt;/code&gt; (which is a &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; in string form) is in the repository.</source>
          <target state="translated">Compruebe si la &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n de confirmaci&amp;oacute;n (que es un &lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt; en forma de cadena) est&amp;aacute; en el repositorio.</target>
        </trans-unit>
        <trans-unit id="36465e7df054d1a8db11c41ceb01463ffd339488" translate="yes" xml:space="preserve">
          <source>Check if the current branch is an &quot;orphan&quot; branch, i.e. has no commits. The first commit to this branch will have no parents.</source>
          <target state="translated">Comprueba si la rama actual es una rama &quot;huérfana&quot;,es decir,no tiene compromisos.El primer compromiso en esta rama no tendrá padres.</target>
        </trans-unit>
        <trans-unit id="b66e0b7684d9561bc0ff2976ce4bdbc130c0a5c9" translate="yes" xml:space="preserve">
          <source>Check if there have been any changes to tracked files in the working tree (if &lt;code&gt;cached=false&lt;/code&gt;) or the index (if &lt;code&gt;cached=true&lt;/code&gt;). &lt;code&gt;pathspecs&lt;/code&gt; are the specifications for options for the diff.</source>
          <target state="translated">Compruebe si ha habido cambios en los archivos rastreados en el &amp;aacute;rbol de trabajo (si en &lt;code&gt;cached=false&lt;/code&gt; ) o en el &amp;iacute;ndice (si en &lt;code&gt;cached=true&lt;/code&gt; ). &lt;code&gt;pathspecs&lt;/code&gt; son las especificaciones de las opciones para el diff.</target>
        </trans-unit>
        <trans-unit id="10941e2df89576fa668bf1f89fbe0ad9fb195edb" translate="yes" xml:space="preserve">
          <source>Check that a matrix is square, then return its common dimension. For multiple arguments, return a vector.</source>
          <target state="translated">Comprueba que una matriz es cuadrada,y luego devuelve su dimensión común.Para múltiples argumentos,devuelve un vector.</target>
        </trans-unit>
        <trans-unit id="6861a1cca611ecd76d506c1580f9dd38e9dfec32" translate="yes" xml:space="preserve">
          <source>Check two array shapes for compatibility, allowing trailing singleton dimensions, and return whichever shape has more dimensions.</source>
          <target state="translated">Comprueba la compatibilidad de las dos formas de la matriz,permitiendo el seguimiento de las dimensiones de un solo botón,y devuelve la forma que tenga más dimensiones.</target>
        </trans-unit>
        <trans-unit id="5847f57e4c8ac4313a08831cbbd9321dc7c8aa94" translate="yes" xml:space="preserve">
          <source>Check whether the &lt;code&gt;lock&lt;/code&gt; is held by any task/thread. This should not be used for synchronization (see instead &lt;a href=&quot;#Base.trylock&quot;&gt;&lt;code&gt;trylock&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Verifique si el &lt;code&gt;lock&lt;/code&gt; est&amp;aacute; retenido por alguna tarea / hilo. Esto no debe usarse para la sincronizaci&amp;oacute;n (ver en &lt;a href=&quot;#Base.trylock&quot;&gt; &lt;code&gt;trylock&lt;/code&gt; &lt;/a&gt; lugar trylock ).</target>
        </trans-unit>
        <trans-unit id="387def941a675fd43bb90cd2f103bc1835695e36" translate="yes" xml:space="preserve">
          <source>Checked.add_with_overflow()</source>
          <target state="translated">Checked.add_with_overflow()</target>
        </trans-unit>
        <trans-unit id="5861f86d2198b43b150ea6be20eecd4f4ca194fb" translate="yes" xml:space="preserve">
          <source>Checked.checked_abs()</source>
          <target state="translated">Checked.checked_abs()</target>
        </trans-unit>
        <trans-unit id="0e340663d314653dc7f7258455c8c64ec865a402" translate="yes" xml:space="preserve">
          <source>Checked.checked_add()</source>
          <target state="translated">Checked.checked_add()</target>
        </trans-unit>
        <trans-unit id="793b46bf345ea840a66fc3ce7be504df87f6aad8" translate="yes" xml:space="preserve">
          <source>Checked.checked_cld()</source>
          <target state="translated">Checked.checked_cld()</target>
        </trans-unit>
        <trans-unit id="cbb75d95e9a638cb0354f430f1c41528c16d5f1e" translate="yes" xml:space="preserve">
          <source>Checked.checked_div()</source>
          <target state="translated">Checked.checked_div()</target>
        </trans-unit>
        <trans-unit id="10f25d8f5722c731db35c0585785eb14e0947047" translate="yes" xml:space="preserve">
          <source>Checked.checked_fld()</source>
          <target state="translated">Checked.checked_fld()</target>
        </trans-unit>
        <trans-unit id="844d8f377decea211f1aa04e5b41ffd6aa8ec8aa" translate="yes" xml:space="preserve">
          <source>Checked.checked_mod()</source>
          <target state="translated">Checked.checked_mod()</target>
        </trans-unit>
        <trans-unit id="6e287962b9c64e9790cebd017023df56a743a004" translate="yes" xml:space="preserve">
          <source>Checked.checked_mul()</source>
          <target state="translated">Checked.checked_mul()</target>
        </trans-unit>
        <trans-unit id="8cddbe8ee88213cf9e9d56a609fa85a89e086da7" translate="yes" xml:space="preserve">
          <source>Checked.checked_neg()</source>
          <target state="translated">Checked.checked_neg()</target>
        </trans-unit>
        <trans-unit id="e44667638c3a1dc209bda165095e1d1cd133cc75" translate="yes" xml:space="preserve">
          <source>Checked.checked_rem()</source>
          <target state="translated">Checked.checked_rem()</target>
        </trans-unit>
        <trans-unit id="0088d172f06fff6ea323397de23669a32c31474b" translate="yes" xml:space="preserve">
          <source>Checked.checked_sub()</source>
          <target state="translated">Checked.checked_sub()</target>
        </trans-unit>
        <trans-unit id="ab7e607ffaab3ede22444bf0bafb0736dd5575b5" translate="yes" xml:space="preserve">
          <source>Checked.mul_with_overflow()</source>
          <target state="translated">Checked.mul_with_overflow()</target>
        </trans-unit>
        <trans-unit id="44a69fd61235a11b4b6edaa45c7d2594c6702f55" translate="yes" xml:space="preserve">
          <source>Checked.sub_with_overflow()</source>
          <target state="translated">Checked.sub_with_overflow()</target>
        </trans-unit>
        <trans-unit id="f66ee858da2bed315f19a0831545acdc098092b9" translate="yes" xml:space="preserve">
          <source>Checking for equality with a singleton</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099aaa95277770b044f9e7efabb37f097dce362a" translate="yes" xml:space="preserve">
          <source>Checkout a new git branch in the &lt;code&gt;repo&lt;/code&gt; repository. &lt;code&gt;commit&lt;/code&gt; is the &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt;, in string form, which will be the start of the new branch. If &lt;code&gt;commit&lt;/code&gt; is an empty string, the current HEAD will be used.</source>
          <target state="translated">Verifique una nueva rama de git en el &lt;code&gt;repo&lt;/code&gt; sitorio del repositorio. &lt;code&gt;commit&lt;/code&gt; es el &lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt; , en forma de cadena, que ser&amp;aacute; el comienzo de la nueva rama. Si la &lt;code&gt;commit&lt;/code&gt; es una cadena vac&amp;iacute;a, se utilizar&amp;aacute; el HEAD actual.</target>
        </trans-unit>
        <trans-unit id="a01db35293e447e7dfa93e429ed3057a3d6edb4e" translate="yes" xml:space="preserve">
          <source>Checks if there are any differences between the tree specified by &lt;code&gt;treeish&lt;/code&gt; and the tracked files in the working tree (if &lt;code&gt;cached=false&lt;/code&gt;) or the index (if &lt;code&gt;cached=true&lt;/code&gt;). &lt;code&gt;pathspecs&lt;/code&gt; are the specifications for options for the diff.</source>
          <target state="translated">Comprueba si existen diferencias entre el &amp;aacute;rbol especificado por &lt;code&gt;treeish&lt;/code&gt; y los archivos rastreados en el &amp;aacute;rbol de trabajo (si en &lt;code&gt;cached=false&lt;/code&gt; ) o el &amp;iacute;ndice (si en &lt;code&gt;cached=true&lt;/code&gt; ). &lt;code&gt;pathspecs&lt;/code&gt; son las especificaciones de las opciones para el diff.</target>
        </trans-unit>
        <trans-unit id="80497c05495db1c1e51a0b937bd9ffa77fb142ff" translate="yes" xml:space="preserve">
          <source>Cheering Megaphone</source>
          <target state="translated">Megáfono de animación</target>
        </trans-unit>
        <trans-unit id="e81bedf047792fbe90c699c0d92561bd6df81796" translate="yes" xml:space="preserve">
          <source>Chequered Flag</source>
          <target state="translated">Bandera a cuadros</target>
        </trans-unit>
        <trans-unit id="78bc6d7859d13eaa4171edc4973a040f60c5efa2" translate="yes" xml:space="preserve">
          <source>Cherries</source>
          <target state="translated">Cherries</target>
        </trans-unit>
        <trans-unit id="d980b2a4bed67957e89a2bfcbf9122253661d3b9" translate="yes" xml:space="preserve">
          <source>Cherry Blossom</source>
          <target state="translated">Flor de Cerezo</target>
        </trans-unit>
        <trans-unit id="c712b8835755410091fbe89cfba2f9989bcdddf1" translate="yes" xml:space="preserve">
          <source>Chestnut</source>
          <target state="translated">Chestnut</target>
        </trans-unit>
        <trans-unit id="baaa18844b8db958c57edddf824f4a8b5cd9e298" translate="yes" xml:space="preserve">
          <source>Chicken</source>
          <target state="translated">Chicken</target>
        </trans-unit>
        <trans-unit id="6684f920ddf587816828d0949794d536f2044d85" translate="yes" xml:space="preserve">
          <source>Children Crossing</source>
          <target state="translated">Niños cruzando</target>
        </trans-unit>
        <trans-unit id="be60ee4f4851b8d244bba0827efe90ca53080f02" translate="yes" xml:space="preserve">
          <source>Chocolate Bar</source>
          <target state="translated">Barra de chocolate</target>
        </trans-unit>
        <trans-unit id="36f117bd7dd482a1010ab9584c224f54936b91cc" translate="yes" xml:space="preserve">
          <source>Cholesky (see &lt;a href=&quot;#LinearAlgebra.cholesky&quot;&gt;&lt;code&gt;cholesky&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">Cholesky (ver &lt;a href=&quot;#LinearAlgebra.cholesky&quot;&gt; &lt;code&gt;cholesky&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="e3c96b15f464a32f9dbfcd9be5dcfbc00bda9510" translate="yes" xml:space="preserve">
          <source>Cholesky factorization</source>
          <target state="translated">Factorización colosal</target>
        </trans-unit>
        <trans-unit id="da141a0edd85453be825d6aa02b625b2d8b12905" translate="yes" xml:space="preserve">
          <source>Christmas Tree</source>
          <target state="translated">Árbol de Navidad</target>
        </trans-unit>
        <trans-unit id="e72e88ea6123b50e6208c2e997da2b67631286d6" translate="yes" xml:space="preserve">
          <source>Church</source>
          <target state="translated">Church</target>
        </trans-unit>
        <trans-unit id="f4ea571bfe0617f587935723651430356fc70f4c" translate="yes" xml:space="preserve">
          <source>Cinema</source>
          <target state="translated">Cinema</target>
        </trans-unit>
        <trans-unit id="20638d5f9a181ef513cf00b55dcce4c98adb55f7" translate="yes" xml:space="preserve">
          <source>Cint</source>
          <target state="translated">Cint</target>
        </trans-unit>
        <trans-unit id="810c53332cece6a0ba48a6c0ba3b4f10aa580f90" translate="yes" xml:space="preserve">
          <source>Cintmax_t</source>
          <target state="translated">Cintmax_t</target>
        </trans-unit>
        <trans-unit id="f012b4aef95600337cc3ea8a98c28a295ab93f2f" translate="yes" xml:space="preserve">
          <source>Circle With All But Upper Left Quadrant Black</source>
          <target state="translated">Círculo con todo menos el cuadrante superior izquierdo negro</target>
        </trans-unit>
        <trans-unit id="e64a2f1f5550310ac4fcf3d82a1eba3eb03373e3" translate="yes" xml:space="preserve">
          <source>Circle With Left Half Black</source>
          <target state="translated">Círculo con la mitad izquierda negra</target>
        </trans-unit>
        <trans-unit id="4242c36ce736c0ae2d9e13bbac4c03ddccb00e63" translate="yes" xml:space="preserve">
          <source>Circle With Lower Half Black</source>
          <target state="translated">Círculo con la mitad inferior negra</target>
        </trans-unit>
        <trans-unit id="9946dda080b1d6f72432e4888afcc095dde79ea8" translate="yes" xml:space="preserve">
          <source>Circle With Right Half Black</source>
          <target state="translated">Círculo con la mitad derecha negra</target>
        </trans-unit>
        <trans-unit id="d869eafe06cb16bdb3bb0bc2e1be15db03901859" translate="yes" xml:space="preserve">
          <source>Circle With Upper Half Black</source>
          <target state="translated">Círculo con la mitad superior negra</target>
        </trans-unit>
        <trans-unit id="a8f7c61db4ce9bd030f686d3b28ef55edb06c05f" translate="yes" xml:space="preserve">
          <source>Circle With Upper Right Quadrant Black</source>
          <target state="translated">Círculo con el cuadrante superior derecho negro</target>
        </trans-unit>
        <trans-unit id="7ac2156e5b2912f2254d2f3ae90f1a8c149be7ab" translate="yes" xml:space="preserve">
          <source>Circle With Vertical Fill</source>
          <target state="translated">Círculo con relleno vertical</target>
        </trans-unit>
        <trans-unit id="bdade6bd883a792ea7c7650d2326b104f190c6db" translate="yes" xml:space="preserve">
          <source>Circled Anticlockwise-Rotated Division Sign</source>
          <target state="translated">Signo de división antifascista circulado</target>
        </trans-unit>
        <trans-unit id="288b0220ab4dfdbd33067b22c1e4248e5492c4f4" translate="yes" xml:space="preserve">
          <source>Circled Asterisk Operator</source>
          <target state="translated">Operador de Asterisco Circulado</target>
        </trans-unit>
        <trans-unit id="c23f14422e51f91da407f474f9afc3cc0d6b1a61" translate="yes" xml:space="preserve">
          <source>Circled Bullet</source>
          <target state="translated">Bala en círculo</target>
        </trans-unit>
        <trans-unit id="317b273eb94a369a8c28e6bf5cd7c75c54af9e35" translate="yes" xml:space="preserve">
          <source>Circled Dash</source>
          <target state="translated">Guión circulado</target>
        </trans-unit>
        <trans-unit id="f5d528c73ab76ab5f33f09420750954ff64b51f9" translate="yes" xml:space="preserve">
          <source>Circled Division Sign</source>
          <target state="translated">Signo de División Circulado</target>
        </trans-unit>
        <trans-unit id="af5e4fc428d95afd21ff1ec53e8506a2bd73fb48" translate="yes" xml:space="preserve">
          <source>Circled Division Slash</source>
          <target state="translated">Círculo de la división</target>
        </trans-unit>
        <trans-unit id="1540fdfaea096a26f649db63c8e3d97ec047096a" translate="yes" xml:space="preserve">
          <source>Circled Dot Operator</source>
          <target state="translated">Operador de puntos circulares</target>
        </trans-unit>
        <trans-unit id="13716b865f5fa5c0c59b298bdb824a0403d1d0a8" translate="yes" xml:space="preserve">
          <source>Circled Equals</source>
          <target state="translated">Los iguales marcados con un círculo</target>
        </trans-unit>
        <trans-unit id="6fb20198e34869ba5357fb1484d789a4a9cf41a3" translate="yes" xml:space="preserve">
          <source>Circled Greater-Than</source>
          <target state="translated">Circunferencia mayor que</target>
        </trans-unit>
        <trans-unit id="768c6a3e34cf1fa1fe17c4122cd2eb756b5c8db1" translate="yes" xml:space="preserve">
          <source>Circled Ideograph Accept</source>
          <target state="translated">Ideario Circulado Aceptar</target>
        </trans-unit>
        <trans-unit id="cd7d8396b4543ec8eac2c933faab0d381b5eddf4" translate="yes" xml:space="preserve">
          <source>Circled Ideograph Advantage</source>
          <target state="translated">Ventaja del Ideógrafo Circulado</target>
        </trans-unit>
        <trans-unit id="68de940ba4435005de139e8e8a3c0d351749a305" translate="yes" xml:space="preserve">
          <source>Circled Ideograph Congratulation</source>
          <target state="translated">Felicitaciones al Ideógrafo Circulante</target>
        </trans-unit>
        <trans-unit id="73f2e57c66e79ca73dc25a784afe3bf12db57991" translate="yes" xml:space="preserve">
          <source>Circled Ideograph Secret</source>
          <target state="translated">Secreto del Ideógrafo Circulado</target>
        </trans-unit>
        <trans-unit id="a40a39ec3a6682d21b6ef060b4feb0021bb56a91" translate="yes" xml:space="preserve">
          <source>Circled Latin Capital Letter M</source>
          <target state="translated">Letra mayúscula latina circulada M</target>
        </trans-unit>
        <trans-unit id="0737d90c41767eac9bb882a65f60e50a52a763a4" translate="yes" xml:space="preserve">
          <source>Circled Latin Capital Letter S</source>
          <target state="translated">Letra mayúscula latina circulada S</target>
        </trans-unit>
        <trans-unit id="3921273fcb7324637d2df323be0460e56b6c07e5" translate="yes" xml:space="preserve">
          <source>Circled Less-Than</source>
          <target state="translated">Circuló menos que...</target>
        </trans-unit>
        <trans-unit id="11ab89c625b1e2be31e3ce88e58467e9d8b591d3" translate="yes" xml:space="preserve">
          <source>Circled Minus</source>
          <target state="translated">Menos Circunstancia</target>
        </trans-unit>
        <trans-unit id="49fb7ea6102e3ddbe3f49605b323255242257db1" translate="yes" xml:space="preserve">
          <source>Circled Multiplication Sign With Circumflex Accent</source>
          <target state="translated">Signo de multiplicación circular con acento circunflejo</target>
        </trans-unit>
        <trans-unit id="b54193aa1a494f0d833f0a8740fb732847cecb8a" translate="yes" xml:space="preserve">
          <source>Circled Parallel</source>
          <target state="translated">Circulo Paralelo</target>
        </trans-unit>
        <trans-unit id="8f99a8867a889f5ea35c2600d3c7f7047a7990e2" translate="yes" xml:space="preserve">
          <source>Circled Plus</source>
          <target state="translated">Circunferencia Plus</target>
        </trans-unit>
        <trans-unit id="b2f2ab10cbdb08e806c050f7e4c9abf4807d102e" translate="yes" xml:space="preserve">
          <source>Circled Reverse Solidus</source>
          <target state="translated">Solidus invertido circulado</target>
        </trans-unit>
        <trans-unit id="7a06e50e7385bdb39935cdfabe9072e82b9447d8" translate="yes" xml:space="preserve">
          <source>Circled Ring Operator</source>
          <target state="translated">Operador de Anillos Circulares</target>
        </trans-unit>
        <trans-unit id="3118f0f5bf53391e1d64d00f6fd9c8f83519338c" translate="yes" xml:space="preserve">
          <source>Circled Times</source>
          <target state="translated">Tiempos circulares</target>
        </trans-unit>
        <trans-unit id="e0d7ab77f8105b38fa7df093b28a79c9646ca42a" translate="yes" xml:space="preserve">
          <source>Circled White Bullet</source>
          <target state="translated">Bala Blanca Circulada</target>
        </trans-unit>
        <trans-unit id="9d61e5de58e6dee3981e042fcf23eeed9646f7cf" translate="yes" xml:space="preserve">
          <source>Circled White Star</source>
          <target state="translated">Estrella Blanca Circulada</target>
        </trans-unit>
        <trans-unit id="7748321d0967d869f81325b4585f9b2588000677" translate="yes" xml:space="preserve">
          <source>Circularly shift, i.e. rotate, the data in &lt;code&gt;src&lt;/code&gt;, storing the result in &lt;code&gt;dest&lt;/code&gt;. &lt;code&gt;shifts&lt;/code&gt; specifies the amount to shift in each dimension.</source>
          <target state="translated">Desplazar circularmente, es decir, rotar, los datos en &lt;code&gt;src&lt;/code&gt; , almacenando el resultado en &lt;code&gt;dest&lt;/code&gt; . &lt;code&gt;shifts&lt;/code&gt; especifica la cantidad a cambiar en cada dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d8d1450c5aa55fa70cdef969d2aed9b6bea5b253" translate="yes" xml:space="preserve">
          <source>Circularly shift, i.e. rotate, the data in an array. The second argument is a tuple or vector giving the amount to shift in each dimension, or an integer to shift only in the first dimension.</source>
          <target state="translated">Desplazamiento circular,es decir,rotación,de los datos de un conjunto.El segundo argumento es una tupla o vector que da la cantidad a desplazar en cada dimensión,o un entero a desplazar sólo en la primera dimensión.</target>
        </trans-unit>
        <trans-unit id="a48e6cb43386bd05dea50af46a123ad0d776b80b" translate="yes" xml:space="preserve">
          <source>Circulation Function</source>
          <target state="translated">Función de circulación</target>
        </trans-unit>
        <trans-unit id="37536a1d3cc9b23bf2b06cce0eca23c6a4e7e102" translate="yes" xml:space="preserve">
          <source>Circus Tent</source>
          <target state="translated">Carpa de circo</target>
        </trans-unit>
        <trans-unit id="2db191558345453d3d04631fffed018826e9442e" translate="yes" xml:space="preserve">
          <source>Cityscape At Dusk</source>
          <target state="translated">Paisaje urbano al anochecer</target>
        </trans-unit>
        <trans-unit id="4010aa5c7daa771d33be51467b1f2b3303269a35" translate="yes" xml:space="preserve">
          <source>Clamp &lt;code&gt;x&lt;/code&gt; between &lt;code&gt;typemin(T)&lt;/code&gt; and &lt;code&gt;typemax(T)&lt;/code&gt; and convert the result to type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cf0a77f6ee3236fe15d4a64163013e4f57ac86" translate="yes" xml:space="preserve">
          <source>Clapper Board</source>
          <target state="translated">Tablero de aplausos</target>
        </trans-unit>
        <trans-unit id="1a53c684edaeea21a3a7c9865bbc7c7a6b647d98" translate="yes" xml:space="preserve">
          <source>Clapping Hands Sign</source>
          <target state="translated">Aplaudiendo el signo de las manos</target>
        </trans-unit>
        <trans-unit id="516efc45347d5f1d25705370de6f7e8790454c94" translate="yes" xml:space="preserve">
          <source>Clear any existing backtraces from the internal buffer.</source>
          <target state="translated">Despeja cualquier rastro existente del buffer interno.</target>
        </trans-unit>
        <trans-unit id="82280dd39a2e304ec7a95875634d07334aea409a" translate="yes" xml:space="preserve">
          <source>Clear console screen</source>
          <target state="translated">Limpiar la pantalla de la consola</target>
        </trans-unit>
        <trans-unit id="fb1b9ef26d7247fef7acad9f0bc4d393aa69d604" translate="yes" xml:space="preserve">
          <source>Clearly, this is far from the way mathematical integers behave, and you might think it less than ideal for a high-level programming language to expose this to the user. For numerical work where efficiency and transparency are at a premium, however, the alternatives are worse.</source>
          <target state="translated">Claramente,esto está lejos de la forma en que se comportan los números enteros matemáticos,y podrías pensar que es menos que ideal para un lenguaje de programación de alto nivel exponer esto al usuario.Sin embargo,para el trabajo numérico donde la eficiencia y la transparencia son muy importantes,las alternativas son peores.</target>
        </trans-unit>
        <trans-unit id="ec4842b9335f240ce519c3e7eb35a6d7dd134038" translate="yes" xml:space="preserve">
          <source>Clears any stored memory allocation data when running julia with &lt;code&gt;--track-allocation&lt;/code&gt;. Execute the command(s) you want to test (to force JIT-compilation), then call &lt;a href=&quot;#Profile.clear_malloc_data&quot;&gt;&lt;code&gt;clear_malloc_data&lt;/code&gt;&lt;/a&gt;. Then execute your command(s) again, quit Julia, and examine the resulting &lt;code&gt;*.mem&lt;/code&gt; files.</source>
          <target state="translated">Borra todos los datos de asignaci&amp;oacute;n de memoria almacenados cuando se ejecuta julia con &lt;code&gt;--track-allocation&lt;/code&gt; . Ejecute los comandos que desea probar (para forzar la compilaci&amp;oacute;n JIT), luego llame a &lt;a href=&quot;#Profile.clear_malloc_data&quot;&gt; &lt;code&gt;clear_malloc_data&lt;/code&gt; &lt;/a&gt; . Luego ejecute sus comandos nuevamente, salga de Julia y examine los archivos &lt;code&gt;*.mem&lt;/code&gt; resultantes .</target>
        </trans-unit>
        <trans-unit id="f1508fb36867e2dc32f615b5c14b90813384914e" translate="yes" xml:space="preserve">
          <source>Clears global bindings in modules by initializing them to &lt;code&gt;nothing&lt;/code&gt;. &lt;code&gt;syms&lt;/code&gt; should be of type &lt;a href=&quot;../../base/base/index#Core.Symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; or a collection of &lt;code&gt;Symbol&lt;/code&gt;s . &lt;code&gt;pids&lt;/code&gt; and &lt;code&gt;mod&lt;/code&gt; identify the processes and the module in which global variables are to be reinitialized. Only those names found to be defined under &lt;code&gt;mod&lt;/code&gt; are cleared.</source>
          <target state="translated">Borra los enlaces globales en los m&amp;oacute;dulos inicializ&amp;aacute;ndolos en &lt;code&gt;nothing&lt;/code&gt; . &lt;code&gt;syms&lt;/code&gt; debe ser de tipo &lt;a href=&quot;../../base/base/index#Core.Symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; o una colecci&amp;oacute;n de &lt;code&gt;Symbol&lt;/code&gt; s. &lt;code&gt;pids&lt;/code&gt; y &lt;code&gt;mod&lt;/code&gt; identifican los procesos y el m&amp;oacute;dulo en el que se reinicializar&amp;aacute;n las variables globales. Solo se borran los nombres que se encuentran definidos en &lt;code&gt;mod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a37999e16f7842ef3bf129008cd89f6cdc6cb0f" translate="yes" xml:space="preserve">
          <source>Clinking Beer Mugs</source>
          <target state="translated">Tazas de cerveza que tintinean</target>
        </trans-unit>
        <trans-unit id="5efe0c9323a499a8546aeac42d4b659bd2a4039f" translate="yes" xml:space="preserve">
          <source>Clipboard</source>
          <target state="translated">Clipboard</target>
        </trans-unit>
        <trans-unit id="80b2a110ce7d7c4741fab08718b7b0bad1a6e22a" translate="yes" xml:space="preserve">
          <source>Clock Face Eight Oclock</source>
          <target state="translated">Reloj Cara Ocho Reloj</target>
        </trans-unit>
        <trans-unit id="890e9e574fe3a811e9c99a391d98d07a63fc0336" translate="yes" xml:space="preserve">
          <source>Clock Face Eight-Thirty</source>
          <target state="translated">Cara del reloj 8:30</target>
        </trans-unit>
        <trans-unit id="a9b707e0c691e0552e2f8bc3916fe311413cb1c1" translate="yes" xml:space="preserve">
          <source>Clock Face Eleven Oclock</source>
          <target state="translated">Reloj Cara Once Reloj</target>
        </trans-unit>
        <trans-unit id="8ae5c10b2e512ab4d1e9f3ac4882a5accd7c7ae1" translate="yes" xml:space="preserve">
          <source>Clock Face Eleven-Thirty</source>
          <target state="translated">Reloj Cara Once-Treinta</target>
        </trans-unit>
        <trans-unit id="e22dfa89a765cf1fb21d2f5d1bc38f3ade0afd76" translate="yes" xml:space="preserve">
          <source>Clock Face Five Oclock</source>
          <target state="translated">Cara de Reloj Cinco Relojes</target>
        </trans-unit>
        <trans-unit id="3a7136e9fc05d844d8d22ef7e7a4065f750e1bbb" translate="yes" xml:space="preserve">
          <source>Clock Face Five-Thirty</source>
          <target state="translated">Cara del reloj cinco-treinta</target>
        </trans-unit>
        <trans-unit id="6c604425f0ef3b9a4e6a798a11e9cb980c5f5643" translate="yes" xml:space="preserve">
          <source>Clock Face Four Oclock</source>
          <target state="translated">Reloj Cara Cuatro Relojes</target>
        </trans-unit>
        <trans-unit id="1d7bba61675982358fbf74be54ea171922d5d085" translate="yes" xml:space="preserve">
          <source>Clock Face Four-Thirty</source>
          <target state="translated">Cara del Reloj Cuatro-Treinta</target>
        </trans-unit>
        <trans-unit id="8effbf7e8f00a8276bde132d10680427c2d5ec2c" translate="yes" xml:space="preserve">
          <source>Clock Face Nine Oclock</source>
          <target state="translated">Reloj Cara Nueve Relojes</target>
        </trans-unit>
        <trans-unit id="b0f219a4f731970988c8def9f6a9220234b63061" translate="yes" xml:space="preserve">
          <source>Clock Face Nine-Thirty</source>
          <target state="translated">Cara del reloj a las nueve y media</target>
        </trans-unit>
        <trans-unit id="2aa0624b2187d35a495fb74b7a70417ce4d8cdc6" translate="yes" xml:space="preserve">
          <source>Clock Face One Oclock</source>
          <target state="translated">Cara de reloj un reloj</target>
        </trans-unit>
        <trans-unit id="92624a0e738083d85292206e98f359ce3546ed05" translate="yes" xml:space="preserve">
          <source>Clock Face One-Thirty</source>
          <target state="translated">Cara del Reloj Uno-Treinta</target>
        </trans-unit>
        <trans-unit id="4ee4d2dec1cb5fcd6697bd397977fe18c3d4992c" translate="yes" xml:space="preserve">
          <source>Clock Face Seven Oclock</source>
          <target state="translated">Cara del Reloj Siete Relojes</target>
        </trans-unit>
        <trans-unit id="17aef1804b57cd3ede0fe80570334485de56eaea" translate="yes" xml:space="preserve">
          <source>Clock Face Seven-Thirty</source>
          <target state="translated">Cara del reloj 7:30</target>
        </trans-unit>
        <trans-unit id="f2ce5a71eefd68ceefa6e2f6811d47032f42f6eb" translate="yes" xml:space="preserve">
          <source>Clock Face Six Oclock</source>
          <target state="translated">Reloj Cara Seis Relojes</target>
        </trans-unit>
        <trans-unit id="78a9100a5f02623dca735f3dacc48fead261c2cd" translate="yes" xml:space="preserve">
          <source>Clock Face Six-Thirty</source>
          <target state="translated">Cara del reloj seis-treinta</target>
        </trans-unit>
        <trans-unit id="29ed028a4b2d7ccf27a87e9aa08dd08fd6ebb1a6" translate="yes" xml:space="preserve">
          <source>Clock Face Ten Oclock</source>
          <target state="translated">Reloj Cara Diez Reloj</target>
        </trans-unit>
        <trans-unit id="288b3a0678ebc38844da6df6f1e87880c74baafc" translate="yes" xml:space="preserve">
          <source>Clock Face Ten-Thirty</source>
          <target state="translated">Cara del reloj diez-treinta</target>
        </trans-unit>
        <trans-unit id="bb465de467c2b010bb6b846eb78c2a1229522242" translate="yes" xml:space="preserve">
          <source>Clock Face Three Oclock</source>
          <target state="translated">Reloj Cara Tres Relojes</target>
        </trans-unit>
        <trans-unit id="cfd958f3c422c51d841c78b6b7f3d9e44fc3ad75" translate="yes" xml:space="preserve">
          <source>Clock Face Three-Thirty</source>
          <target state="translated">Reloj Cara Tres Treinta</target>
        </trans-unit>
        <trans-unit id="7f669cae21a33d00c881936310a0c78e765a67d2" translate="yes" xml:space="preserve">
          <source>Clock Face Twelve Oclock</source>
          <target state="translated">Reloj Cara Doce Relojes</target>
        </trans-unit>
        <trans-unit id="1ef2e813447d172d893056c5340a57fc6839f314" translate="yes" xml:space="preserve">
          <source>Clock Face Twelve-Thirty</source>
          <target state="translated">Cara del reloj 12:30</target>
        </trans-unit>
        <trans-unit id="4f6902106020e062d23dd43ecf72cd67020b6c3e" translate="yes" xml:space="preserve">
          <source>Clock Face Two Oclock</source>
          <target state="translated">Reloj Cara Dos Relojes</target>
        </trans-unit>
        <trans-unit id="bcda9b95a7f9d026cc96f88e4ef6597b3948c3f5" translate="yes" xml:space="preserve">
          <source>Clock Face Two-Thirty</source>
          <target state="translated">Cara del reloj dos-treinta</target>
        </trans-unit>
        <trans-unit id="3343394a9f3b65dd62d440bfd227fa40ca3918a2" translate="yes" xml:space="preserve">
          <source>Clockwise Contour Integral</source>
          <target state="translated">Contorno integral en el sentido de las agujas del reloj</target>
        </trans-unit>
        <trans-unit id="bef25f4fbfeb987aed2d95c207d8122fa87692e3" translate="yes" xml:space="preserve">
          <source>Clockwise Downwards And Upwards Open Circle Arrows</source>
          <target state="translated">En el sentido de las agujas del reloj,hacia abajo y hacia arriba,las flechas de círculo abierto</target>
        </trans-unit>
        <trans-unit id="b8015a573f0320267e05a1e6968f148a65bd38e5" translate="yes" xml:space="preserve">
          <source>Clockwise Integral</source>
          <target state="translated">Integral en el sentido de las agujas del reloj</target>
        </trans-unit>
        <trans-unit id="7dcd16fa461353aaddde398802c410edb65684a9" translate="yes" xml:space="preserve">
          <source>Clockwise Open Circle Arrow</source>
          <target state="translated">Flecha de círculo abierto en el sentido de las agujas del reloj</target>
        </trans-unit>
        <trans-unit id="0de2e9fdaa78d1a87383fa303df054177c3eef28" translate="yes" xml:space="preserve">
          <source>Clockwise Rightwards And Leftwards Open Circle Arrows</source>
          <target state="translated">En el sentido de las agujas del reloj,las flechas de círculo abierto hacia la derecha y hacia la izquierda</target>
        </trans-unit>
        <trans-unit id="78f3f16a08531e7f8a413160ff88e095df7562f2" translate="yes" xml:space="preserve">
          <source>Clockwise Rightwards And Leftwards Open Circle Arrows With Circled One Overlay</source>
          <target state="translated">En el sentido de las agujas del reloj,a la derecha y a la izquierda,se abren las flechas de círculo con una superposición de círculo.</target>
        </trans-unit>
        <trans-unit id="5a2532914552dd4a4df03ca6c532a1cda0ad9c3e" translate="yes" xml:space="preserve">
          <source>Clockwise Top Semicircle Arrow</source>
          <target state="translated">Flecha de semicírculo superior en el sentido de las agujas del reloj</target>
        </trans-unit>
        <trans-unit id="bd5a088aabea6d4dfe11cc8a8a32a9c1483fc8dd" translate="yes" xml:space="preserve">
          <source>Clone a remote repository located at &lt;code&gt;repo_url&lt;/code&gt; to the local filesystem location &lt;code&gt;repo_path&lt;/code&gt;.</source>
          <target state="translated">Clone un repositorio remoto ubicado en &lt;code&gt;repo_url&lt;/code&gt; en la ubicaci&amp;oacute;n del sistema de archivos local &lt;code&gt;repo_path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c018fd37cc98046cd18021dbc1501935677a8d0b" translate="yes" xml:space="preserve">
          <source>Clone the remote repository at &lt;code&gt;repo_url&lt;/code&gt; (which can be a remote URL or a path on the local filesystem) to &lt;code&gt;repo_path&lt;/code&gt; (which must be a path on the local filesystem). Options for the clone, such as whether to perform a bare clone or not, are set by &lt;a href=&quot;#LibGit2.CloneOptions&quot;&gt;&lt;code&gt;CloneOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Clone el repositorio remoto en &lt;code&gt;repo_url&lt;/code&gt; (que puede ser una URL remota o una ruta en el sistema de archivos local) a &lt;code&gt;repo_path&lt;/code&gt; (que debe ser una ruta en el sistema de archivos local). Las opciones para el clon, como si realizar un clon desnudo o no, las establece &lt;a href=&quot;#LibGit2.CloneOptions&quot;&gt; &lt;code&gt;CloneOptions&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03c26d678d2b5f993e8a4888363c7faf8f7499f8" translate="yes" xml:space="preserve">
          <source>Clong</source>
          <target state="translated">Clong</target>
        </trans-unit>
        <trans-unit id="ba9c34e2f3436e5d9b8a5291e72a776889a2ff30" translate="yes" xml:space="preserve">
          <source>Clonglong</source>
          <target state="translated">Clonglong</target>
        </trans-unit>
        <trans-unit id="b5209dad4d3f1bed9db6402ecbcc5727437490f8" translate="yes" xml:space="preserve">
          <source>Close a channel. An exception (optionally given by &lt;code&gt;excp&lt;/code&gt;), is thrown by:</source>
          <target state="translated">Cerrar un canal. Una excepci&amp;oacute;n (opcionalmente dada por &lt;code&gt;excp&lt;/code&gt; ), es lanzada por:</target>
        </trans-unit>
        <trans-unit id="10c5d49bb09afa0ca8e3334711e18326dcf891af" translate="yes" xml:space="preserve">
          <source>Close an I/O stream. Performs a &lt;a href=&quot;#Base.flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; first.</source>
          <target state="translated">Cierre un flujo de E / S. Primero realiza una &lt;a href=&quot;#Base.flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="454adf74b3f6704e85f70c7ddf537bda059f03dd" translate="yes" xml:space="preserve">
          <source>Close shared library referenced by handle.</source>
          <target state="translated">Cerrar la biblioteca compartida referenciada por el mango.</target>
        </trans-unit>
        <trans-unit id="8170fa95b5dabb39e3ab1424d8d01e1c3b92e425" translate="yes" xml:space="preserve">
          <source>Closed Book</source>
          <target state="translated">Libro cerrado</target>
        </trans-unit>
        <trans-unit id="f01ec4341502afd5ff0fd4449550b0f2d821118a" translate="yes" xml:space="preserve">
          <source>Closed Intersection With Serifs</source>
          <target state="translated">Intersección cerrada con serifas</target>
        </trans-unit>
        <trans-unit id="f96d5b0a19b4b209a04614ed2d984814137842d3" translate="yes" xml:space="preserve">
          <source>Closed Lock With Key</source>
          <target state="translated">Cerradura cerrada con llave</target>
        </trans-unit>
        <trans-unit id="fc6222181031539686fbc1981c6536202f4eebfd" translate="yes" xml:space="preserve">
          <source>Closed Mailbox With Lowered Flag</source>
          <target state="translated">Buzón cerrado con la bandera bajada</target>
        </trans-unit>
        <trans-unit id="675cf6fab44f887f9851bda94e48adbe87600a21" translate="yes" xml:space="preserve">
          <source>Closed Mailbox With Raised Flag</source>
          <target state="translated">Buzón cerrado con la bandera izada</target>
        </trans-unit>
        <trans-unit id="deb82abc2edb75e5d2559fdc5e14496f68ebe0bb" translate="yes" xml:space="preserve">
          <source>Closed Subset</source>
          <target state="translated">Subconjunto cerrado</target>
        </trans-unit>
        <trans-unit id="27f828ad61dfe0b96ce6597aa9645041a206cb0a" translate="yes" xml:space="preserve">
          <source>Closed Subset Or Equal To</source>
          <target state="translated">Subconjunto cerrado o igual a</target>
        </trans-unit>
        <trans-unit id="9ca1f162310be3f8fde01956aa333063b943a628" translate="yes" xml:space="preserve">
          <source>Closed Superset</source>
          <target state="translated">Superset cerrado</target>
        </trans-unit>
        <trans-unit id="c1a77c6e35a02621888adfea720e18df739c611e" translate="yes" xml:space="preserve">
          <source>Closed Superset Or Equal To</source>
          <target state="translated">Cerrado Superset o igual a</target>
        </trans-unit>
        <trans-unit id="1d0ef3df97ab3df50e949a9a1324005eda6b8edb" translate="yes" xml:space="preserve">
          <source>Closed Umbrella</source>
          <target state="translated">Paraguas cerrado</target>
        </trans-unit>
        <trans-unit id="2509ab5953079af2e5239350a2c4c20c24bf4b87" translate="yes" xml:space="preserve">
          <source>Closed Union With Serifs</source>
          <target state="translated">Unión cerrada con las serifas</target>
        </trans-unit>
        <trans-unit id="f8612daffee734ab8fe7ac27e4779293f47bd9f2" translate="yes" xml:space="preserve">
          <source>Closed Union With Serifs And Smash Product</source>
          <target state="translated">La unión cerrada con las serifas y el producto de la ruptura</target>
        </trans-unit>
        <trans-unit id="6d5a3633bf3066d6ab42acadf4720d0c57381f8b" translate="yes" xml:space="preserve">
          <source>Closing a Library</source>
          <target state="translated">Cerrar una biblioteca</target>
        </trans-unit>
        <trans-unit id="aaaf708c53d56650e9ea07591d01dc353b945138" translate="yes" xml:space="preserve">
          <source>Closure &lt;a href=&quot;../../base/c/index#Base.@cfunction&quot;&gt;&lt;code&gt;@cfunction&lt;/code&gt;&lt;/a&gt; rely on LLVM trampolines, which are not available on all platforms (for example ARM and PowerPC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a1d4177a6fdb9b5f67b13428352c7562697b82" translate="yes" xml:space="preserve">
          <source>Closure cfunctions</source>
          <target state="translated">Funciones de cierre</target>
        </trans-unit>
        <trans-unit id="b2efeaa1a7d6d2185ea02473cf758203dfcea3fe" translate="yes" xml:space="preserve">
          <source>Cloud</source>
          <target state="translated">Cloud</target>
        </trans-unit>
        <trans-unit id="ac3f2b0304dbad8004f320d418e21b773f559bef" translate="yes" xml:space="preserve">
          <source>Cluster Cookie</source>
          <target state="translated">Galleta de racimo</target>
        </trans-unit>
        <trans-unit id="2719f92d9319470b062026857b1b798355606f18" translate="yes" xml:space="preserve">
          <source>Cluster Manager Interface</source>
          <target state="translated">Interfaz del administrador de clusters</target>
        </trans-unit>
        <trans-unit id="24b40ea7b4c6d2a2754b767ef66941a1b621105f" translate="yes" xml:space="preserve">
          <source>Cluster Managers with Custom Transports</source>
          <target state="translated">Gestores de clusters con transportes personalizados</target>
        </trans-unit>
        <trans-unit id="c66ed07e93160ccf42e9560935c19321d18456bf" translate="yes" xml:space="preserve">
          <source>ClusterManagers</source>
          <target state="translated">ClusterManagers</target>
        </trans-unit>
        <trans-unit id="36a5cc40f84a6918339448f7f9c84d698b78ed22" translate="yes" xml:space="preserve">
          <source>Cmd</source>
          <target state="translated">Cmd</target>
        </trans-unit>
        <trans-unit id="598ac4d5aadd51518cf7408c7b09c93d77fd77bc" translate="yes" xml:space="preserve">
          <source>Cocktail Glass</source>
          <target state="translated">Vaso de cóctel</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="a99f20e7919aa57d6d229cdc49d476b887823796" translate="yes" xml:space="preserve">
          <source>Code Availability and Loading Packages</source>
          <target state="translated">Disponibilidad de códigos y paquetes de carga</target>
        </trans-unit>
        <trans-unit id="d0078b16e6e193ac2fab2fcfbc625d4cc9fdb7f5" translate="yes" xml:space="preserve">
          <source>Code Generation</source>
          <target state="translated">Generación de código</target>
        </trans-unit>
        <trans-unit id="f24dc61405e4a6ac1922198818e95b7dcd3db014" translate="yes" xml:space="preserve">
          <source>Code Loading</source>
          <target state="translated">Carga del código</target>
        </trans-unit>
        <trans-unit id="b69ba088ce9ad1ce235332dd2372fe802609e0da" translate="yes" xml:space="preserve">
          <source>Code blocks</source>
          <target state="translated">Bloques de código</target>
        </trans-unit>
        <trans-unit id="42113fe2d252dc34afb2007f91d2f4059784abe7" translate="yes" xml:space="preserve">
          <source>Code inclusion is quite straightforward and simple: it evaluates the given source file in the context of the caller. Package loading is built on top of code inclusion and serves a &lt;a href=&quot;../modules/index#modules&quot;&gt;different purpose&lt;/a&gt;. The rest of this chapter focuses on the behavior and mechanics of package loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a9d7c94aa1ad1ba8632efb3563e42b2453a554" translate="yes" xml:space="preserve">
          <source>Code inclusion is quite straightforward and simple: it evaluates the given source file in the context of the caller. Package loading is built on top of code inclusion and serves a &lt;a href=&quot;../modules/index#modules-1&quot;&gt;different purpose&lt;/a&gt;. The rest of this chapter focuses on the behavior and mechanics of package loading.</source>
          <target state="translated">La inclusi&amp;oacute;n de c&amp;oacute;digo es bastante sencilla y sencilla: eval&amp;uacute;a el archivo fuente dado en el contexto del llamador. La carga de paquetes se basa en la inclusi&amp;oacute;n de c&amp;oacute;digo y tiene un &lt;a href=&quot;../modules/index#modules-1&quot;&gt;prop&amp;oacute;sito diferente&lt;/a&gt; . El resto de este cap&amp;iacute;tulo se centra en el comportamiento y la mec&amp;aacute;nica de la carga de paquetes.</target>
        </trans-unit>
        <trans-unit id="35b9be6a9b072a2d90be1ca50990262602cae797" translate="yes" xml:space="preserve">
          <source>Code point(s)</source>
          <target state="translated">Punto(s)de código</target>
        </trans-unit>
        <trans-unit id="33284c9a71b782e3478512a7869d4dc33c4b362d" translate="yes" xml:space="preserve">
          <source>Code should be as generic as possible. Instead of writing:</source>
          <target state="translated">El código debe ser lo más genérico posible.En lugar de escribir:</target>
        </trans-unit>
        <trans-unit id="aae5cfaaacaac3a30cf57079dd346c86a7f7fc5e" translate="yes" xml:space="preserve">
          <source>Code using immutable objects can be easier to reason about.</source>
          <target state="translated">El código que utiliza objetos inmutables puede ser más fácil de razonar.</target>
        </trans-unit>
        <trans-unit id="80674c31d4ab113b84f8bfda79f90e7c65f5531a" translate="yes" xml:space="preserve">
          <source>Collect a list of log records generated by &lt;code&gt;expression&lt;/code&gt; using &lt;code&gt;collect_test_logs&lt;/code&gt;, check that they match the sequence &lt;code&gt;log_patterns&lt;/code&gt;, and return the value of &lt;code&gt;expression&lt;/code&gt;. The &lt;code&gt;keywords&lt;/code&gt; provide some simple filtering of log records: the &lt;code&gt;min_level&lt;/code&gt; keyword controls the minimum log level which will be collected for the test, the &lt;code&gt;match_mode&lt;/code&gt; keyword defines how matching will be performed (the default &lt;code&gt;:all&lt;/code&gt; checks that all logs and patterns match pairwise; use &lt;code&gt;:any&lt;/code&gt; to check that the pattern matches at least once somewhere in the sequence.)</source>
          <target state="translated">Recopile una lista de registros generados por &lt;code&gt;expression&lt;/code&gt; usando &lt;code&gt;collect_test_logs&lt;/code&gt; , verifique que coincidan con la secuencia &lt;code&gt;log_patterns&lt;/code&gt; y devuelva el valor de la &lt;code&gt;expression&lt;/code&gt; . Las &lt;code&gt;keywords&lt;/code&gt; proporcionan un filtrado simple de los registros: la palabra clave &lt;code&gt;min_level&lt;/code&gt; controla el nivel de registro m&amp;iacute;nimo que se recopilar&amp;aacute; para la prueba, la palabra clave &lt;code&gt;match_mode&lt;/code&gt; define c&amp;oacute;mo se realizar&amp;aacute; la coincidencia (el valor predeterminado &lt;code&gt;:all&lt;/code&gt; comprobaciones de que todos los registros y patrones coinciden por pares; use &lt;code&gt;:any&lt;/code&gt; para comprobar que el patr&amp;oacute;n coincide al menos una vez en alg&amp;uacute;n lugar de la secuencia).</target>
        </trans-unit>
        <trans-unit id="0a8af36fa1d1619f2da90f35bd9c11b35a37e433" translate="yes" xml:space="preserve">
          <source>Collect information about the status of each file in the git repository &lt;code&gt;repo&lt;/code&gt; (e.g. is the file modified, staged, etc.). &lt;code&gt;status_opts&lt;/code&gt; can be used to set various options, for instance whether or not to look at untracked files or whether to include submodules or not. See &lt;a href=&quot;#LibGit2.StatusOptions&quot;&gt;&lt;code&gt;StatusOptions&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Recopilar informaci&amp;oacute;n sobre el estado de cada archivo en el repositorio git &lt;code&gt;repo&lt;/code&gt; (por ejemplo, es el archivo modificado, por etapas, etc.). &lt;code&gt;status_opts&lt;/code&gt; se puede usar para establecer varias opciones, por ejemplo, si se deben ver o no archivos sin seguimiento o si se incluyen subm&amp;oacute;dulos o no. Consulte &lt;a href=&quot;#LibGit2.StatusOptions&quot;&gt; &lt;code&gt;StatusOptions&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2e2ef8c695440679e7d61620a3e6f58db57bb36f" translate="yes" xml:space="preserve">
          <source>Collections and Data Structures</source>
          <target state="translated">Colecciones y estructuras de datos</target>
        </trans-unit>
        <trans-unit id="b600a07f6e2a178ebfbe565ac70dc1d11d80d058" translate="yes" xml:space="preserve">
          <source>Collections passed to functions are also not copied. Functions can modify (mutate) the contents of the objects their arguments refer to. (The names of functions which do this are conventionally suffixed with '!'.)</source>
          <target state="translated">Las colecciones que se pasan a las funciones tampoco se copian.Las funciones pueden modificar (mutar)el contenido de los objetos a los que se refieren sus argumentos.(Los nombres de las funciones que hacen esto se sufijan convencionalmente con '!'.)</target>
        </trans-unit>
        <trans-unit id="7a2802907d31a8ef64806a9e6c2120bb1e4caacf" translate="yes" xml:space="preserve">
          <source>Collision Symbol</source>
          <target state="translated">símbolo de colisión</target>
        </trans-unit>
        <trans-unit id="ac30df75efbedb8442edcd22700caca733d79868" translate="yes" xml:space="preserve">
          <source>Colon</source>
          <target state="translated">Colon</target>
        </trans-unit>
        <trans-unit id="0a14c37ba89fcb5b7168d9ef916ce4e00e67937f" translate="yes" xml:space="preserve">
          <source>Colon Equals / Colon Equal</source>
          <target state="translated">Colon es igual a/Colon es igual a</target>
        </trans-unit>
        <trans-unit id="bb11dae2a053933f6bc7422a2373bf8281b97e57" translate="yes" xml:space="preserve">
          <source>Colons (:) are used to signify indexing entire objects or dimensions at once.</source>
          <target state="translated">Los dos puntos (:)se utilizan para significar la indexación de objetos o dimensiones enteras a la vez.</target>
        </trans-unit>
        <trans-unit id="f95263d15db043d5d52856caad1fadeda6d1c2bc" translate="yes" xml:space="preserve">
          <source>Combinatorics</source>
          <target state="translated">Combinatorics</target>
        </trans-unit>
        <trans-unit id="5350d59289c3e9b699c68a850143c7c2aca47e8e" translate="yes" xml:space="preserve">
          <source>Combined inplace matrix-matrix or matrix-vector multiply-add $A B &amp;alpha; + C &amp;beta;$. The result is stored in &lt;code&gt;C&lt;/code&gt; by overwriting it. Note that &lt;code&gt;C&lt;/code&gt; must not be aliased with either &lt;code&gt;A&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173cad0d0654b3f6eb52faa1ce6c93b0376b3f89" translate="yes" xml:space="preserve">
          <source>Combined multiply-add: computes &lt;code&gt;x*y+z&lt;/code&gt;, but allowing the add and multiply to be merged with each other or with surrounding operations for performance. For example, this may be implemented as an &lt;a href=&quot;#Base.fma&quot;&gt;&lt;code&gt;fma&lt;/code&gt;&lt;/a&gt; if the hardware supports it efficiently. The result can be different on different machines and can also be different on the same machine due to constant propagation or other optimizations. See &lt;a href=&quot;#Base.fma&quot;&gt;&lt;code&gt;fma&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Multiplicar-agregar combinada: calcula &lt;code&gt;x*y+z&lt;/code&gt; , pero permite que la suma y la multiplicaci&amp;oacute;n se fusionen entre s&amp;iacute; o con las operaciones circundantes para el rendimiento. Por ejemplo, esto puede implementarse como un &lt;a href=&quot;#Base.fma&quot;&gt; &lt;code&gt;fma&lt;/code&gt; &lt;/a&gt; si el hardware lo admite de manera eficiente. El resultado puede ser diferente en diferentes m&amp;aacute;quinas y tambi&amp;eacute;n puede ser diferente en la misma m&amp;aacute;quina debido a la propagaci&amp;oacute;n constante u otras optimizaciones. Ver &lt;a href=&quot;#Base.fma&quot;&gt; &lt;code&gt;fma&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4f01a71c42b25ea3da620732f8db11437dd099b" translate="yes" xml:space="preserve">
          <source>Combining Acute Accent / Non-Spacing Acute</source>
          <target state="translated">Combinar el acento agudo con el no espaciamiento agudo</target>
        </trans-unit>
        <trans-unit id="0734b67961e0eb56239f8b7b60c539fb6834880e" translate="yes" xml:space="preserve">
          <source>Combining Annuity Symbol</source>
          <target state="translated">Símbolo de la combinación de anualidades</target>
        </trans-unit>
        <trans-unit id="95ae63a999d098981e7621ee2008c43b0f6a60c6" translate="yes" xml:space="preserve">
          <source>Combining Asterisk Above</source>
          <target state="translated">Combinando el asterisco arriba</target>
        </trans-unit>
        <trans-unit id="685cd2e09ad265192e0356f28e46509d84ab4d71" translate="yes" xml:space="preserve">
          <source>Combining Breve / Non-Spacing Breve</source>
          <target state="translated">Combinación de Breve/Breve no espaciada</target>
        </trans-unit>
        <trans-unit id="8e2be6c64a88e84a6f429cab4bdb53ba4fe80660" translate="yes" xml:space="preserve">
          <source>Combining Bridge Below / Non-Spacing Bridge Below</source>
          <target state="translated">Puente de combinación abajo/Puente no espaciador abajo</target>
        </trans-unit>
        <trans-unit id="a3f38dbfee0a0277b8fc6dd5b6eb831595bf84a0" translate="yes" xml:space="preserve">
          <source>Combining Candrabindu / Non-Spacing Candrabindu</source>
          <target state="translated">Combinación de Candrabindu/Candrabindu no espaciada</target>
        </trans-unit>
        <trans-unit id="8aff768b42edc639adecd3dd04d42d7aed791251" translate="yes" xml:space="preserve">
          <source>Combining Caron / Non-Spacing Hacek</source>
          <target state="translated">Combinando a Caron/No espaciando a Hacek</target>
        </trans-unit>
        <trans-unit id="3c4e117dd5db64357d4d73eb9cdd1ba25f04fdb1" translate="yes" xml:space="preserve">
          <source>Combining Cedilla / Non-Spacing Cedilla</source>
          <target state="translated">Combinando Cedilla/Cedilla no espaciada</target>
        </trans-unit>
        <trans-unit id="91f0dba538ac66d644d07a8387e2e7e115f196c5" translate="yes" xml:space="preserve">
          <source>Combining Circumflex Accent / Non-Spacing Circumflex</source>
          <target state="translated">Combinando Acento Circunflex/Circunflex no espaciado</target>
        </trans-unit>
        <trans-unit id="a43cbdb97b8f699aa2f8714ed59973b90ec0f295" translate="yes" xml:space="preserve">
          <source>Combining Comma Above Right / Non-Spacing Comma Above Right</source>
          <target state="translated">Combinando la coma arriba a la derecha/la coma no espaciada arriba a la derecha</target>
        </trans-unit>
        <trans-unit id="a33ec808d6857cd58bedcf6f6f9afde52f57d4fd" translate="yes" xml:space="preserve">
          <source>Combining Diaeresis / Non-Spacing Diaeresis</source>
          <target state="translated">Combinación de diéresis/diéresis no espaciada</target>
        </trans-unit>
        <trans-unit id="becaf6a97e81c19ea9f31b976c527ddc1bbea3ee" translate="yes" xml:space="preserve">
          <source>Combining Dot Above / Non-Spacing Dot Above</source>
          <target state="translated">Combinando puntos arriba/puntos no espaciados arriba</target>
        </trans-unit>
        <trans-unit id="d95e2893d2008e3fc0c1b9bc24115f37f1791066" translate="yes" xml:space="preserve">
          <source>Combining Double Acute Accent / Non-Spacing Double Acute</source>
          <target state="translated">Combinando acento doble agudo/no espaciamiento doble agudo</target>
        </trans-unit>
        <trans-unit id="f08f92ba4b2bb682dc3e2d5e9c8df57b5dedb3f6" translate="yes" xml:space="preserve">
          <source>Combining Enclosing Circle / Enclosing Circle</source>
          <target state="translated">Combinando el Círculo de Cierre/Círculo de Cierre</target>
        </trans-unit>
        <trans-unit id="83f22c6a001242a5a561f3a7895cf7d7aaaebd0b" translate="yes" xml:space="preserve">
          <source>Combining Enclosing Diamond / Enclosing Diamond</source>
          <target state="translated">Combinando el diamante de cierre/Diamante de cierre</target>
        </trans-unit>
        <trans-unit id="ec76e2f012d98e1337784adeec747df1b78cf15b" translate="yes" xml:space="preserve">
          <source>Combining Enclosing Square / Enclosing Square</source>
          <target state="translated">Combinando el cuadrado de cierre/cuadrado de cierre</target>
        </trans-unit>
        <trans-unit id="efc364102d3ca81f092b677aca701ad08ab10de7" translate="yes" xml:space="preserve">
          <source>Combining Enclosing Upward Pointing Triangle</source>
          <target state="translated">Combinando un triángulo apuntando hacia arriba</target>
        </trans-unit>
        <trans-unit id="22bab50c74edd0eb4d138ac01ac71ba994064528" translate="yes" xml:space="preserve">
          <source>Combining Four Dots Above / Non-Spacing Four Dots Above</source>
          <target state="translated">Combinando cuatro puntos por encima/sin espaciar cuatro puntos por encima</target>
        </trans-unit>
        <trans-unit id="38e73c84dac801257b0f5e15b8402de9de60fd4a" translate="yes" xml:space="preserve">
          <source>Combining Grave Accent / Non-Spacing Grave</source>
          <target state="translated">Combinando el acento de la tumba/la tumba no espaciada</target>
        </trans-unit>
        <trans-unit id="fb49a0f3994aaa3fea7e9d53f4e24c6dd93638a6" translate="yes" xml:space="preserve">
          <source>Combining Hook Above / Non-Spacing Hook Above</source>
          <target state="translated">Combinando gancho arriba/gancho no espaciado arriba</target>
        </trans-unit>
        <trans-unit id="4cb010ffd9ffa4a05013b3488b30c23afb01fdf1" translate="yes" xml:space="preserve">
          <source>Combining Left Angle Above / Non-Spacing Left Angle Above</source>
          <target state="translated">Combinando el ángulo izquierdo superior/ángulo izquierdo no espaciado superior</target>
        </trans-unit>
        <trans-unit id="08e42cf0385a0528419967690402d2f77fea8ecf" translate="yes" xml:space="preserve">
          <source>Combining Left Arrow Above / Non-Spacing Left Arrow Above</source>
          <target state="translated">Combinando la Flecha Izquierda arriba/Flecha Izquierda arriba no espaciada</target>
        </trans-unit>
        <trans-unit id="877d024a8659b4afa7238332933b7ad143528441" translate="yes" xml:space="preserve">
          <source>Combining Left Arrow Below</source>
          <target state="translated">Combinando la flecha izquierda abajo</target>
        </trans-unit>
        <trans-unit id="8e6257e591a7e8d45ef0764ba2aea89c01420024" translate="yes" xml:space="preserve">
          <source>Combining Left Harpoon Above / Non-Spacing Left Harpoon Above</source>
          <target state="translated">Combinando el arpón izquierdo arriba/Arpón izquierdo no espaciado arriba</target>
        </trans-unit>
        <trans-unit id="98b334c8eb46b8b78fdd86ea856a3c01a529a309" translate="yes" xml:space="preserve">
          <source>Combining Left Right Arrow Above / Non-Spacing Left Right Arrow Above</source>
          <target state="translated">Combinando la flecha izquierda derecha arriba/no espaciando la flecha izquierda derecha arriba</target>
        </trans-unit>
        <trans-unit id="cedc5fa73afb530ac1a47e52244635331691700e" translate="yes" xml:space="preserve">
          <source>Combining Left Right Arrow Below</source>
          <target state="translated">Combinando la flecha izquierda y derecha abajo</target>
        </trans-unit>
        <trans-unit id="3ecd111368eb8e38f96414851bb4b26f50509766" translate="yes" xml:space="preserve">
          <source>Combining Leftwards Harpoon With Barb Downwards</source>
          <target state="translated">Combinando el arpón izquierdo con la púa hacia abajo</target>
        </trans-unit>
        <trans-unit id="0dfea306ba6d2c2199ba2e9e71aebfc34b9abf34" translate="yes" xml:space="preserve">
          <source>Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">Combinando la superposición de sólidos largos/superposición de barras largas no espaciadas</target>
        </trans-unit>
        <trans-unit id="9f887140bfcfd6f9e5fb967ba98a3207c8b16bb7" translate="yes" xml:space="preserve">
          <source>Combining Long Stroke Overlay / Non-Spacing Long Bar Overlay</source>
          <target state="translated">Combinando la superposición de carrera larga/superposición de barra larga no espaciada</target>
        </trans-unit>
        <trans-unit id="739259d807921f9f328b7781ee790a60e450a0a1" translate="yes" xml:space="preserve">
          <source>Combining Long Vertical Line Overlay / Non-Spacing Long Vertical Bar Overlay</source>
          <target state="translated">Combinación de superposición de líneas verticales largas/superposición de barras verticales largas no espaciadas</target>
        </trans-unit>
        <trans-unit id="2fa244bc31952195840fcfc3a299980dbf801f6f" translate="yes" xml:space="preserve">
          <source>Combining Low Line / Non-Spacing Underscore</source>
          <target state="translated">Combinación de línea baja/subrayado no espaciado</target>
        </trans-unit>
        <trans-unit id="bf4b2a4b27fa69268427f002d7db69ac9dc2b07c" translate="yes" xml:space="preserve">
          <source>Combining Macron / Non-Spacing Macron</source>
          <target state="translated">Combinando Macron/Macron no espaciado</target>
        </trans-unit>
        <trans-unit id="a27d4c9bf29370f4faabca36676f0b74743a74d7" translate="yes" xml:space="preserve">
          <source>Combining Ogonek / Non-Spacing Ogonek</source>
          <target state="translated">Combinando Ogonek/Ogonek no espaciado</target>
        </trans-unit>
        <trans-unit id="6d0be0f1d7e1edefb9f72a94ba4677970ba978c9" translate="yes" xml:space="preserve">
          <source>Combining Overline / Non-Spacing Overscore</source>
          <target state="translated">Combinando la línea/el superávit no espaciado</target>
        </trans-unit>
        <trans-unit id="7fad7b377dc7ab955143e3c864e92020afd810c8" translate="yes" xml:space="preserve">
          <source>Combining Palatalized Hook Below / Non-Spacing Palatalized Hook Below</source>
          <target state="translated">Combinación de gancho palatinado por debajo/gancho palatinado no espaciado por debajo</target>
        </trans-unit>
        <trans-unit id="a8de9e264b7b283c54023c71a0b50c54c5639e6e" translate="yes" xml:space="preserve">
          <source>Combining Retroflex Hook Below / Non-Spacing Retroflex Hook Below</source>
          <target state="translated">Combinando el gancho de retroflexión abajo/gancho de retroflexión no espaciado abajo</target>
        </trans-unit>
        <trans-unit id="2ba0d1fd66790c9bf8dd50de28c5fd6f05110ed4" translate="yes" xml:space="preserve">
          <source>Combining Right Arrow Above / Non-Spacing Right Arrow Above</source>
          <target state="translated">Combinando la Flecha Derecha Arriba/Flecha Derecha No Espaciada Arriba</target>
        </trans-unit>
        <trans-unit id="8a30e8c07ae1959f3cd09497d8080f6227316b77" translate="yes" xml:space="preserve">
          <source>Combining Right Arrow Below</source>
          <target state="translated">Combinando la flecha derecha abajo</target>
        </trans-unit>
        <trans-unit id="4befcc9e0a743f1dd40b3e9e50041b9252baebcb" translate="yes" xml:space="preserve">
          <source>Combining Right Harpoon Above / Non-Spacing Right Harpoon Above</source>
          <target state="translated">Combinando el arpón derecho arriba/Arpón derecho no espaciado arriba</target>
        </trans-unit>
        <trans-unit id="aeddc0f0eef5dd1ae0bb9d2d0caf8ade2b689afe" translate="yes" xml:space="preserve">
          <source>Combining Rightwards Harpoon With Barb Downwards</source>
          <target state="translated">Combinando el arpón derecho con la púa hacia abajo</target>
        </trans-unit>
        <trans-unit id="59a9a29108a67d4f908b40c8ecffadfd41391c2c" translate="yes" xml:space="preserve">
          <source>Combining Ring Above / Non-Spacing Ring Above</source>
          <target state="translated">Anillo combinado arriba/Anillo no espaciado arriba</target>
        </trans-unit>
        <trans-unit id="5111c307faa772b3a9538095159cefe4c37acd0e" translate="yes" xml:space="preserve">
          <source>Combining Three Dots Above / Non-Spacing Three Dots Above</source>
          <target state="translated">Combinando tres puntos por encima/sin espaciar tres puntos por encima</target>
        </trans-unit>
        <trans-unit id="b28cdba8bdbc1c8dbf325c4c84adf50cfa7b9f07" translate="yes" xml:space="preserve">
          <source>Combining Tilde / Non-Spacing Tilde</source>
          <target state="translated">Combinando Tilde/Tilde no espaciada</target>
        </trans-unit>
        <trans-unit id="415941ac9a1882af5b80885af204940e2087908c" translate="yes" xml:space="preserve">
          <source>Combining Tilde Below / Non-Spacing Tilde Below</source>
          <target state="translated">Combinando Tilde abajo/Tilde no espaciada abajo</target>
        </trans-unit>
        <trans-unit id="890e5eec0caff7a7e81de77d0eefa045a1434041" translate="yes" xml:space="preserve">
          <source>Combining Triple Underdot</source>
          <target state="translated">Combinando el triple subpunto</target>
        </trans-unit>
        <trans-unit id="308897e651f5347eeb783d7242b9d33cce1a8f1b" translate="yes" xml:space="preserve">
          <source>Combining Turned Comma Above / Non-Spacing Turned Comma Above</source>
          <target state="translated">Combinando la coma girada arriba/la coma girada no espaciada arriba</target>
        </trans-unit>
        <trans-unit id="866e577b99c41379b3aa42c4489796f50fe38cc1" translate="yes" xml:space="preserve">
          <source>Combining Wide Bridge Above</source>
          <target state="translated">Combinando el amplio puente de arriba</target>
        </trans-unit>
        <trans-unit id="88113a7dbb8d79749cd6e0f0600302ccfd5aa3c0" translate="yes" xml:space="preserve">
          <source>Combining dot operators with numeric literals can be ambiguous. For example, it is not clear whether &lt;code&gt;1.+x&lt;/code&gt; means &lt;code&gt;1. + x&lt;/code&gt; or &lt;code&gt;1 .+ x&lt;/code&gt;. Therefore this syntax is disallowed, and spaces must be used around the operator in such cases.</source>
          <target state="translated">La combinaci&amp;oacute;n de operadores de puntos con literales num&amp;eacute;ricos puede ser ambigua. Por ejemplo, no est&amp;aacute; claro si &lt;code&gt;1.+x&lt;/code&gt; significa &lt;code&gt;1. + x&lt;/code&gt; o &lt;code&gt;1 .+ x&lt;/code&gt; . Por lo tanto, esta sintaxis no est&amp;aacute; permitida y, en tales casos, deben usarse espacios alrededor del operador.</target>
        </trans-unit>
        <trans-unit id="153d7a58b3a3e898fcbdd04c462af308414bd09d" translate="yes" xml:space="preserve">
          <source>Comment</source>
          <target state="translated">Comment</target>
        </trans-unit>
        <trans-unit id="8ddf0393cc298edc03dc88f0719f2655cd0574b7" translate="yes" xml:space="preserve">
          <source>Commit all currently buffered writes to the given stream.</source>
          <target state="translated">Comprometer todas las escrituras actualmente almacenadas en el buffer a la corriente dada.</target>
        </trans-unit>
        <trans-unit id="a347aae8b8a9fc1e2f6210e5e5378437485857d4" translate="yes" xml:space="preserve">
          <source>Commit the current patch to the rebase &lt;code&gt;rb&lt;/code&gt;, using &lt;code&gt;sig&lt;/code&gt; as the committer. Is silent if the commit has already been applied.</source>
          <target state="translated">Confirme el parche actual en el &lt;code&gt;rb&lt;/code&gt; de rebase , utilizando &lt;code&gt;sig&lt;/code&gt; como confirmador. Es silencioso si la confirmaci&amp;oacute;n ya se ha aplicado.</target>
        </trans-unit>
        <trans-unit id="2be9168624323737db43ee381ca8992f9a73de9d" translate="yes" xml:space="preserve">
          <source>Common Operations</source>
          <target state="translated">Operaciones comunes</target>
        </trans-unit>
        <trans-unit id="a204c5d42b8380165174afefc8c02b676b132a6b" translate="yes" xml:space="preserve">
          <source>Communicating with Channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66508cd4da8f90000c3284eb64d70b8945911d14" translate="yes" xml:space="preserve">
          <source>Compact WY form of the QR factorization</source>
          <target state="translated">La forma compacta WY de la factorización QR</target>
        </trans-unit>
        <trans-unit id="6bf1e82b56d17bf4bd651ed651f5ad4b9fb92d04" translate="yes" xml:space="preserve">
          <source>Compare how these results differ:</source>
          <target state="translated">Compare cómo difieren estos resultados:</target>
        </trans-unit>
        <trans-unit id="3937ff70415e32705a844575737929096286a5fd" translate="yes" xml:space="preserve">
          <source>Compare two strings. Return &lt;code&gt;0&lt;/code&gt; if both strings have the same length and the character at each index is the same in both strings. Return &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;a&lt;/code&gt; is a prefix of &lt;code&gt;b&lt;/code&gt;, or if &lt;code&gt;a&lt;/code&gt; comes before &lt;code&gt;b&lt;/code&gt; in alphabetical order. Return &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;b&lt;/code&gt; is a prefix of &lt;code&gt;a&lt;/code&gt;, or if &lt;code&gt;b&lt;/code&gt; comes before &lt;code&gt;a&lt;/code&gt; in alphabetical order (technically, lexicographical order by Unicode code points).</source>
          <target state="translated">Compara dos cadenas. Devuelve &lt;code&gt;0&lt;/code&gt; si ambas cadenas tienen la misma longitud y el car&amp;aacute;cter en cada &amp;iacute;ndice es el mismo en ambas cadenas. Devuelve &lt;code&gt;-1&lt;/code&gt; si &lt;code&gt;a&lt;/code&gt; es un prefijo de &lt;code&gt;b&lt;/code&gt; , o si &lt;code&gt;a&lt;/code&gt; viene antes de &lt;code&gt;b&lt;/code&gt; en orden alfab&amp;eacute;tico. Devuelve &lt;code&gt;1&lt;/code&gt; si &lt;code&gt;b&lt;/code&gt; es un prefijo de &lt;code&gt;a&lt;/code&gt; , o si &lt;code&gt;b&lt;/code&gt; viene antes de &lt;code&gt;a&lt;/code&gt; en orden alfab&amp;eacute;tico (t&amp;eacute;cnicamente, orden lexicogr&amp;aacute;fico por puntos de c&amp;oacute;digo Unicode).</target>
        </trans-unit>
        <trans-unit id="058bad1213f1f21ce991a75b5be44ee324a930b6" translate="yes" xml:space="preserve">
          <source>Compared to using &lt;a href=&quot;../math/index#Base.range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, directly constructing a &lt;code&gt;LinRange&lt;/code&gt; should have less overhead but won't try to correct for floating point errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3294837eea456d1d9b5c37c0aa8f59ea86b3c495" translate="yes" xml:space="preserve">
          <source>Comparison &amp;ndash; &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;asymp;&lt;/code&gt; (&lt;a href=&quot;../../base/math/index#Base.isapprox&quot;&gt;&lt;code&gt;isapprox&lt;/code&gt;&lt;/a&gt;), &lt;code&gt;≉&lt;/code&gt;</source>
          <target state="translated">Comparaci&amp;oacute;n - &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;&amp;asymp;&lt;/code&gt; ( &lt;a href=&quot;../../base/math/index#Base.isapprox&quot;&gt; &lt;code&gt;isapprox&lt;/code&gt; &lt;/a&gt; ), &lt;code&gt;≉&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bfbdf2ba206862934e1703fb9dabae9ccfe529b" translate="yes" xml:space="preserve">
          <source>Comparison with &lt;a href=&quot;../../base/base/index#Base.backtrace&quot;&gt;&lt;code&gt;backtrace&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Comparaci&amp;oacute;n con &lt;a href=&quot;../../base/base/index#Base.backtrace&quot;&gt; &lt;code&gt;backtrace&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e46ee00fde40e955c86abe019a61121e06d653c9" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="translated">Comparisons</target>
        </trans-unit>
        <trans-unit id="a1f782aa0dd22ca1d8ddd5007091a2531356eecb" translate="yes" xml:space="preserve">
          <source>Compile the given function &lt;code&gt;f&lt;/code&gt; for the argument tuple (of types) &lt;code&gt;args&lt;/code&gt;, but do not execute it.</source>
          <target state="translated">Compile la funci&amp;oacute;n dada &lt;code&gt;f&lt;/code&gt; para el argumento tupla (de tipos) &lt;code&gt;args&lt;/code&gt; , pero no la ejecute.</target>
        </trans-unit>
        <trans-unit id="d208cd655bc27c326dbf72e200351336cfc4e60e" translate="yes" xml:space="preserve">
          <source>Complement</source>
          <target state="translated">Complement</target>
        </trans-unit>
        <trans-unit id="05138c0edd56f7bbbd9cae9c6f481c62b93d161a" translate="yes" xml:space="preserve">
          <source>Completion of paths works for strings and julia's shell mode:</source>
          <target state="translated">La finalización de los trabajos de los caminos para las cuerdas y el modo de la concha de Julia:</target>
        </trans-unit>
        <trans-unit id="10b26b96b1c573965f14a325ef88109f84be8e3b" translate="yes" xml:space="preserve">
          <source>Complex</source>
          <target state="translated">Complex</target>
        </trans-unit>
        <trans-unit id="ff549706d081e3e60cc13e4b49b48c707d5b0c58" translate="yes" xml:space="preserve">
          <source>Complex Example</source>
          <target state="translated">Ejemplo complejo</target>
        </trans-unit>
        <trans-unit id="c73def212afdc811169afd7e77aebfbeecb5facc" translate="yes" xml:space="preserve">
          <source>Complex Numbers</source>
          <target state="translated">Números complejos</target>
        </trans-unit>
        <trans-unit id="d92056b9511d12d7ca9a02729b4db7f33b444189" translate="yes" xml:space="preserve">
          <source>Complex and Rational Numbers</source>
          <target state="translated">Números complejos y racionales</target>
        </trans-unit>
        <trans-unit id="4bf180d1d0870c204edb37eb372ac0df5d17b6dd" translate="yes" xml:space="preserve">
          <source>Complex blocks:</source>
          <target state="translated">Bloques complejos:</target>
        </trans-unit>
        <trans-unit id="0a73edd8fc9653ee436727fd08c0b9f3b06b1113" translate="yes" xml:space="preserve">
          <source>Complex method &quot;cascades&quot; with default arguments</source>
          <target state="translated">Método complejo &quot;cascadas&quot; con argumentos por defecto</target>
        </trans-unit>
        <trans-unit id="f9ed4ba22fe6a41d861b48b53689d9f5e1620b3b" translate="yes" xml:space="preserve">
          <source>Complex number type with real and imaginary part of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Tipo de n&amp;uacute;mero complejo con parte real e imaginaria de tipo &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="b4dd6b3b31c6eea3e9660b73bc2f3101abdfba71" translate="yes" xml:space="preserve">
          <source>Compose functions: i.e. &lt;code&gt;(f ∘ g)(args...)&lt;/code&gt; means &lt;code&gt;f(g(args...))&lt;/code&gt;. The &lt;code&gt;∘&lt;/code&gt; symbol can be entered in the Julia REPL (and most editors, appropriately configured) by typing &lt;code&gt;\circ&amp;lt;tab&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Funciones de composici&amp;oacute;n: es decir, &lt;code&gt;(f ∘ g)(args...)&lt;/code&gt; significa &lt;code&gt;f(g(args...))&lt;/code&gt; . El s&amp;iacute;mbolo &lt;code&gt;∘&lt;/code&gt; se puede ingresar en Julia REPL (y la mayor&amp;iacute;a de los editores, configurados apropiadamente) escribiendo &lt;code&gt;\circ&amp;lt;tab&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bf0ab10fb9860e23b1ca89e4313be7fafb258f7" translate="yes" xml:space="preserve">
          <source>Composite Types</source>
          <target state="translated">Tipos compuestos</target>
        </trans-unit>
        <trans-unit id="df2490ae2d6c4446ef7afd32a3da2e5ee7b69ac4" translate="yes" xml:space="preserve">
          <source>Composite objects declared with &lt;code&gt;struct&lt;/code&gt; are &lt;em&gt;immutable&lt;/em&gt;; they cannot be modified after construction. This may seem odd at first, but it has several advantages:</source>
          <target state="translated">Los objetos compuestos declarados con &lt;code&gt;struct&lt;/code&gt; son &lt;em&gt;inmutables&lt;/em&gt; ; no se pueden modificar despu&amp;eacute;s de la construcci&amp;oacute;n. Esto puede parecer extra&amp;ntilde;o al principio, pero tiene varias ventajas:</target>
        </trans-unit>
        <trans-unit id="01e0dcd858e537fe0307f2358a312f03c6681c12" translate="yes" xml:space="preserve">
          <source>Composite types are introduced with the &lt;a href=&quot;../../base/base/index#struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; keyword followed by a block of field names, optionally annotated with types using the &lt;code&gt;::&lt;/code&gt; operator:</source>
          <target state="translated">Los tipos compuestos se introducen con la palabra clave &lt;a href=&quot;../../base/base/index#struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt; seguida de un bloque de nombres de campo, opcionalmente anotados con tipos usando el operador &lt;code&gt;::&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9189e65c24f2bdb8de9b12a05127190c54ae9a3c" translate="yes" xml:space="preserve">
          <source>Composite types such as &lt;code&gt;struct&lt;/code&gt; in C or &lt;code&gt;TYPE&lt;/code&gt; in Fortran90 (or &lt;code&gt;STRUCTURE&lt;/code&gt; / &lt;code&gt;RECORD&lt;/code&gt; in some variants of F77), can be mirrored in Julia by creating a &lt;code&gt;struct&lt;/code&gt; definition with the same field layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5701f0731819052a01bc826ae56db27fca5211d9" translate="yes" xml:space="preserve">
          <source>Composite types, aka &lt;code&gt;struct&lt;/code&gt; in C or &lt;code&gt;TYPE&lt;/code&gt; in Fortran90 (or &lt;code&gt;STRUCTURE&lt;/code&gt; / &lt;code&gt;RECORD&lt;/code&gt; in some variants of F77), can be mirrored in Julia by creating a &lt;code&gt;struct&lt;/code&gt; definition with the same field layout.</source>
          <target state="translated">Los tipos compuestos, tambi&amp;eacute;n conocidos como &lt;code&gt;struct&lt;/code&gt; en C o &lt;code&gt;TYPE&lt;/code&gt; en Fortran90 (o &lt;code&gt;STRUCTURE&lt;/code&gt; / &lt;code&gt;RECORD&lt;/code&gt; en algunas variantes de F77), se pueden reflejar en Julia creando una definici&amp;oacute;n de &lt;code&gt;struct&lt;/code&gt; con el mismo dise&amp;ntilde;o de campo.</target>
        </trans-unit>
        <trans-unit id="7544d508f3b0902a380eab3d1ae0e5d8d3c1b60c" translate="yes" xml:space="preserve">
          <source>CompositeException</source>
          <target state="translated">CompositeException</target>
        </trans-unit>
        <trans-unit id="79e03922c06b260c57343358b29b8c08b337403a" translate="yes" xml:space="preserve">
          <source>Composition of one function ∘(f) requires at least Julia 1.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29eeb6459e95f17b9e773f8892492e90000d531" translate="yes" xml:space="preserve">
          <source>Compound Expressions</source>
          <target state="translated">Expresiones compuestas</target>
        </trans-unit>
        <trans-unit id="3c63c3a24b2a5e684ce3eb80765c227218a808f0" translate="yes" xml:space="preserve">
          <source>Compound methods are provided, as they provide a measure of efficiency if multiple fields are needed at the same time:</source>
          <target state="translated">Se proporcionan métodos compuestos,ya que proporcionan una medida de la eficiencia si se necesitan varios campos al mismo tiempo:</target>
        </trans-unit>
        <trans-unit id="ed2ff637c10fb1755e29c0eb2376d67d8e5a91b4" translate="yes" xml:space="preserve">
          <source>Comprehensions</source>
          <target state="translated">Comprehensions</target>
        </trans-unit>
        <trans-unit id="c10ef362f781785063bbb997cd5031a5191aade1" translate="yes" xml:space="preserve">
          <source>Comprehensions can also be written without the enclosing square brackets, producing an object known as a generator. This object can be iterated to produce values on demand, instead of allocating an array and storing them in advance (see &lt;a href=&quot;#Iteration&quot;&gt;Iteration&lt;/a&gt;). For example, the following expression sums a series without allocating memory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e547d2519645c376aaf30ba92bb6080596e3ef5" translate="yes" xml:space="preserve">
          <source>Comprehensions can also be written without the enclosing square brackets, producing an object known as a generator. This object can be iterated to produce values on demand, instead of allocating an array and storing them in advance (see &lt;a href=&quot;#Iteration-1&quot;&gt;Iteration&lt;/a&gt;). For example, the following expression sums a series without allocating memory:</source>
          <target state="translated">Las comprensiones tambi&amp;eacute;n se pueden escribir sin los corchetes adjuntos, lo que produce un objeto conocido como generador. Este objeto se puede iterar para producir valores a pedido, en lugar de asignar una matriz y almacenarlos por adelantado (consulte &lt;a href=&quot;#Iteration-1&quot;&gt;Iteraci&amp;oacute;n&lt;/a&gt; ). Por ejemplo, la siguiente expresi&amp;oacute;n suma una serie sin asignar memoria:</target>
        </trans-unit>
        <trans-unit id="908bf8150b71b44066207c270126a10d2c63b84b" translate="yes" xml:space="preserve">
          <source>Comprehensions provide a general and powerful way to construct arrays. Comprehension syntax is similar to set construction notation in mathematics:</source>
          <target state="translated">Las comprensiones proporcionan una manera general y poderosa de construir conjuntos.La sintaxis de la comprensión es similar a la notación de construcción de conjuntos en matemáticas:</target>
        </trans-unit>
        <trans-unit id="41931e1bad3441e4fffdabe12a675d7a10ef5fe7" translate="yes" xml:space="preserve">
          <source>Compressed Sparse Column (CSC) Sparse Matrix Storage</source>
          <target state="translated">Almacenamiento de Columna Esponjosa Comprimida (CSC)de Matriz Esponjosa</target>
        </trans-unit>
        <trans-unit id="df6e999370e627bd7fb17556cf85a2f9046d57dd" translate="yes" xml:space="preserve">
          <source>Compute $10^x$.</source>
          <target state="translated">Calcula 10^x$.</target>
        </trans-unit>
        <trans-unit id="3440d15eee03e7b747a1a78d06bc04de26352e6b" translate="yes" xml:space="preserve">
          <source>Compute $\cos(\pi x) / x - \sin(\pi x) / (\pi x^2)$ if $x \neq 0$, and $0$ if $x = 0$. This is the derivative of &lt;code&gt;sinc(x)&lt;/code&gt;.</source>
          <target state="translated">Calcule $ \ cos (\ pi x) / x - \ sin (\ pi x) / (\ pi x ^ 2) $ si $ x \ neq 0 $ y $ 0 $ si $ x = 0 $. Esta es la derivada de &lt;code&gt;sinc(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="641b97c82ee25690f10e6e7742dc51e5d15732ca" translate="yes" xml:space="preserve">
          <source>Compute $\cos(\pi x)$ more accurately than &lt;code&gt;cos(pi*x)&lt;/code&gt;, especially for large &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Calcule $ \ cos (\ pi x) $ con mayor precisi&amp;oacute;n que &lt;code&gt;cos(pi*x)&lt;/code&gt; , especialmente para &lt;code&gt;x&lt;/code&gt; grande .</target>
        </trans-unit>
        <trans-unit id="1b6e2580104ead79696c9bd035d3ea44c420e327" translate="yes" xml:space="preserve">
          <source>Compute $\sin(\pi x) / (\pi x)$ if $x \neq 0$, and $1$ if $x = 0$.</source>
          <target state="translated">Calcula $sin(\pi x)/(\pi x)$ si $x \Nneq 0$,y $1$ si $x=0$.</target>
        </trans-unit>
        <trans-unit id="5609ddf7e7650835bda46710354a43594cc254bb" translate="yes" xml:space="preserve">
          <source>Compute $\sin(\pi x)$ more accurately than &lt;code&gt;sin(pi*x)&lt;/code&gt;, especially for large &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Calcule $ \ sin (\ pi x) $ con mayor precisi&amp;oacute;n que &lt;code&gt;sin(pi*x)&lt;/code&gt; , especialmente para &lt;code&gt;x&lt;/code&gt; grande .</target>
        </trans-unit>
        <trans-unit id="929982bef54c338e6e35e28527b86375aafc50c8" translate="yes" xml:space="preserve">
          <source>Compute $x \times 2^n$.</source>
          <target state="translated">Calcula $x veces 2^n$.</target>
        </trans-unit>
        <trans-unit id="64de6f27384f256461bed9916267c818d5e5214a" translate="yes" xml:space="preserve">
          <source>Compute $x^p \pmod m$.</source>
          <target state="translated">Calcula $x^p \pmod m$.</target>
        </trans-unit>
        <trans-unit id="19ceaddf89a47393966a49ad36ca860fe7e80321" translate="yes" xml:space="preserve">
          <source>Compute &lt;code&gt;A / B&lt;/code&gt; in-place and overwriting &lt;code&gt;A&lt;/code&gt; to store the result.</source>
          <target state="translated">Calcule &lt;code&gt;A / B&lt;/code&gt; in situ y sobrescriba &lt;code&gt;A&lt;/code&gt; para almacenar el resultado.</target>
        </trans-unit>
        <trans-unit id="7f0218a9f1bc487c2b5096445bf17474b3168d25" translate="yes" xml:space="preserve">
          <source>Compute &lt;code&gt;A \ B&lt;/code&gt; in-place and overwriting &lt;code&gt;B&lt;/code&gt; to store the result.</source>
          <target state="translated">Calcule &lt;code&gt;A \ B&lt;/code&gt; in situ y sobrescriba &lt;code&gt;B&lt;/code&gt; para almacenar el resultado.</target>
        </trans-unit>
        <trans-unit id="fec3a07dc37940dceabb5be53b362461307a4c1d" translate="yes" xml:space="preserve">
          <source>Compute &lt;code&gt;A \ B&lt;/code&gt; in-place and store the result in &lt;code&gt;Y&lt;/code&gt;, returning the result.</source>
          <target state="translated">Calcule &lt;code&gt;A \ B&lt;/code&gt; in situ y almacene el resultado en &lt;code&gt;Y&lt;/code&gt; , devolviendo el resultado.</target>
        </trans-unit>
        <trans-unit id="98e6c5fec537a69040a39ae887c67e4d70213543" translate="yes" xml:space="preserve">
          <source>Compute a convenient factorization of &lt;code&gt;A&lt;/code&gt;, based upon the type of the input matrix. &lt;code&gt;factorize&lt;/code&gt; checks &lt;code&gt;A&lt;/code&gt; to see if it is symmetric/triangular/etc. if &lt;code&gt;A&lt;/code&gt; is passed as a generic matrix. &lt;code&gt;factorize&lt;/code&gt; checks every element of &lt;code&gt;A&lt;/code&gt; to verify/rule out each property. It will short-circuit as soon as it can rule out symmetry/triangular structure. The return value can be reused for efficient solving of multiple systems. For example: &lt;code&gt;A=factorize(A); x=A\b; y=A\C&lt;/code&gt;.</source>
          <target state="translated">Calcule una factorizaci&amp;oacute;n conveniente de &lt;code&gt;A&lt;/code&gt; , basada en el tipo de matriz de entrada. &lt;code&gt;factorize&lt;/code&gt; comprueba &lt;code&gt;A&lt;/code&gt; para ver si es sim&amp;eacute;trico / triangular / etc. si &lt;code&gt;A&lt;/code&gt; se pasa como una matriz gen&amp;eacute;rica. &lt;code&gt;factorize&lt;/code&gt; comprueba cada elemento de &lt;code&gt;A&lt;/code&gt; para verificar / descartar cada propiedad. Se producir&amp;aacute; un cortocircuito tan pronto como pueda descartar simetr&amp;iacute;a / estructura triangular. El valor de retorno se puede reutilizar para la resoluci&amp;oacute;n eficiente de m&amp;uacute;ltiples sistemas. Por ejemplo: &lt;code&gt;A=factorize(A); x=A\b; y=A\C&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="081b8630c615f09be39d92a0115c25e75916aff0" translate="yes" xml:space="preserve">
          <source>Compute a type that contains the intersection of &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt;. Usually this will be the smallest such type or one close to it.</source>
          <target state="translated">Calcular un tipo que contiene la intersecci&amp;oacute;n de &lt;code&gt;T&lt;/code&gt; y &lt;code&gt;S&lt;/code&gt; . Por lo general, este ser&amp;aacute; el tipo m&amp;aacute;s peque&amp;ntilde;o o cercano a &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="db62a7195b361bd27a6ab49b26fc5d995d7a85c5" translate="yes" xml:space="preserve">
          <source>Compute an &lt;code&gt;LDLt&lt;/code&gt; factorization of the real symmetric tridiagonal matrix &lt;code&gt;S&lt;/code&gt; such that &lt;code&gt;S = L*Diagonal(d)*L'&lt;/code&gt; where &lt;code&gt;L&lt;/code&gt; is a unit lower triangular matrix and &lt;code&gt;d&lt;/code&gt; is a vector. The main use of an &lt;code&gt;LDLt&lt;/code&gt; factorization &lt;code&gt;F = ldlt(S)&lt;/code&gt; is to solve the linear system of equations &lt;code&gt;Sx = b&lt;/code&gt; with &lt;code&gt;F\b&lt;/code&gt;.</source>
          <target state="translated">Calcule una factorizaci&amp;oacute;n &lt;code&gt;LDLt&lt;/code&gt; de la matriz tridiagonal sim&amp;eacute;trica real &lt;code&gt;S&lt;/code&gt; tal que &lt;code&gt;S = L*Diagonal(d)*L'&lt;/code&gt; donde &lt;code&gt;L&lt;/code&gt; es una matriz triangular inferior unitaria &lt;code&gt;d&lt;/code&gt; es un vector. El uso principal de una factorizaci&amp;oacute;n &lt;code&gt;LDLt&lt;/code&gt; &lt;code&gt;F = ldlt(S)&lt;/code&gt; es resolver el sistema lineal de ecuaciones &lt;code&gt;Sx = b&lt;/code&gt; con &lt;code&gt;F\b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c1ac6c08b678223e4887392c381e9189c7ba93b" translate="yes" xml:space="preserve">
          <source>Compute an integer hash code such that &lt;code&gt;isequal(x,y)&lt;/code&gt; implies &lt;code&gt;hash(x)==hash(y)&lt;/code&gt;. The optional second argument &lt;code&gt;h&lt;/code&gt; is a hash code to be mixed with the result.</source>
          <target state="translated">Calcule un c&amp;oacute;digo hash entero tal que &lt;code&gt;isequal(x,y)&lt;/code&gt; implique &lt;code&gt;hash(x)==hash(y)&lt;/code&gt; . El segundo argumento opcional &lt;code&gt;h&lt;/code&gt; es un c&amp;oacute;digo hash que se mezcla con el resultado.</target>
        </trans-unit>
        <trans-unit id="79e6e6b92700158abe5cbe60e135ba2eff400933" translate="yes" xml:space="preserve">
          <source>Compute both the minimum and maximum element in a single pass, and return them as a 2-tuple.</source>
          <target state="translated">Calcule tanto el elemento mínimo como el máximo en una sola pasada,y devuélvalos como un 2-tuple.</target>
        </trans-unit>
        <trans-unit id="55674d923cbe36a00a2dcb12dc90008788433dbf" translate="yes" xml:space="preserve">
          <source>Compute both the minimum and maximum of &lt;code&gt;f&lt;/code&gt; applied to each element in &lt;code&gt;itr&lt;/code&gt; and return them as a 2-tuple. Only one pass is made over &lt;code&gt;itr&lt;/code&gt;.</source>
          <target state="translated">Calcule tanto el m&amp;iacute;nimo como el m&amp;aacute;ximo de &lt;code&gt;f&lt;/code&gt; aplicado a cada elemento en &lt;code&gt;itr&lt;/code&gt; y devu&amp;eacute;lvalos como 2 tuplas. Solo se hace una pasada sobre &lt;code&gt;itr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9fc034d752a929a676df33e97329f28013afb4ac" translate="yes" xml:space="preserve">
          <source>Compute cosine of &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is in degrees.</source>
          <target state="translated">Calcule el coseno de &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; est&amp;aacute; en grados.</target>
        </trans-unit>
        <trans-unit id="2812b6470b645598b89e13c27d80693c2571602e" translate="yes" xml:space="preserve">
          <source>Compute cosine of &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is in radians.</source>
          <target state="translated">Calcule el coseno de &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; est&amp;aacute; en radianes.</target>
        </trans-unit>
        <trans-unit id="ed29aab024d008c6bdfa953e7bd9ab905379d015" translate="yes" xml:space="preserve">
          <source>Compute hyperbolic cosine of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Calcule el coseno hiperb&amp;oacute;lico de &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec21c723d13f003816fe96579a7df0d489520259" translate="yes" xml:space="preserve">
          <source>Compute hyperbolic sine of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Calcule el seno hiperb&amp;oacute;lico de &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac3565a823d4a3efc52e74fc685ed86ae6db58a3" translate="yes" xml:space="preserve">
          <source>Compute hyperbolic tangent of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Calcule la tangente hiperb&amp;oacute;lica de &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3738eef2209a39b21f53d71ed43b07f931e624c" translate="yes" xml:space="preserve">
          <source>Compute sine of &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is in degrees.</source>
          <target state="translated">Calcule el seno de &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; est&amp;aacute; en grados.</target>
        </trans-unit>
        <trans-unit id="6cf01364af065ae849f27852465a3d3bfe52089d" translate="yes" xml:space="preserve">
          <source>Compute sine of &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is in radians.</source>
          <target state="translated">Calcule el seno de &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; est&amp;aacute; en radianes.</target>
        </trans-unit>
        <trans-unit id="c2d206b82e6db8e986bbbf98cbf0eb72129c224a" translate="yes" xml:space="preserve">
          <source>Compute tangent of &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is in degrees.</source>
          <target state="translated">Calcule la tangente de &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; est&amp;aacute; en grados.</target>
        </trans-unit>
        <trans-unit id="202a93fa28b48e329210fdf808f2d1b87daa3ed4" translate="yes" xml:space="preserve">
          <source>Compute tangent of &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is in radians.</source>
          <target state="translated">Calcule la tangente de &lt;code&gt;x&lt;/code&gt; , donde &lt;code&gt;x&lt;/code&gt; est&amp;aacute; en radianes.</target>
        </trans-unit>
        <trans-unit id="f664081b059842ba583be8e317e1608e46a53fd3" translate="yes" xml:space="preserve">
          <source>Compute the &lt;a href=&quot;#LinearAlgebra.LQ&quot;&gt;&lt;code&gt;LQ&lt;/code&gt;&lt;/a&gt; factorization of &lt;code&gt;A&lt;/code&gt;, using the input matrix as a workspace. See also &lt;a href=&quot;#LinearAlgebra.lq&quot;&gt;&lt;code&gt;lq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbf493148049741c81504ff6b4e5ee8560f996f" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;LQ&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = LQ&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;LQ&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = LQ&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17538b08e9c154c3f5dd62072c8fa0ea05f963fc" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;LQ&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = LQ&lt;/code&gt;. &lt;code&gt;tau&lt;/code&gt; contains scalars which parameterize the elementary reflectors of the factorization. &lt;code&gt;tau&lt;/code&gt; must have length greater than or equal to the smallest dimension of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;LQ&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = LQ&lt;/code&gt; . &lt;code&gt;tau&lt;/code&gt; contiene escalares que parametrizan los reflectores elementales de la factorizaci&amp;oacute;n. &lt;code&gt;tau&lt;/code&gt; debe tener una longitud mayor que o igual a la dimensi&amp;oacute;n m&amp;aacute;s peque&amp;ntilde;a de &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ad780cc4431af9be511082a782160bff6da4c65" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;QL&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = QL&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;QL&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = QL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7a649b9c569a9a9a900055ad2e3e530ad769e9f" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;QL&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = QL&lt;/code&gt;. &lt;code&gt;tau&lt;/code&gt; contains scalars which parameterize the elementary reflectors of the factorization. &lt;code&gt;tau&lt;/code&gt; must have length greater than or equal to the smallest dimension of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;QL&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = QL&lt;/code&gt; . &lt;code&gt;tau&lt;/code&gt; contiene escalares que parametrizan los reflectores elementales de la factorizaci&amp;oacute;n. &lt;code&gt;tau&lt;/code&gt; debe tener una longitud mayor que o igual a la dimensi&amp;oacute;n m&amp;aacute;s peque&amp;ntilde;a de &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73e05a032664ce6a5bb59d6231727896e0d85677" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;QR&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = QR&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;QR&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = QR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd5939dcb4cf796b127a8200b499f432e4d64b40" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;QR&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = QR&lt;/code&gt;. &lt;code&gt;tau&lt;/code&gt; contains scalars which parameterize the elementary reflectors of the factorization. &lt;code&gt;tau&lt;/code&gt; must have length greater than or equal to the smallest dimension of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;QR&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = QR&lt;/code&gt; . &lt;code&gt;tau&lt;/code&gt; contiene escalares que parametrizan los reflectores elementales de la factorizaci&amp;oacute;n. &lt;code&gt;tau&lt;/code&gt; debe tener una longitud mayor que o igual a la dimensi&amp;oacute;n m&amp;aacute;s peque&amp;ntilde;a de &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14220f2b6c0b60f7df0cde02fa4f1c544028c987" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;RQ&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = RQ&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;RQ&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = RQ&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="861e3be13c33c99b622d41916c8e070553b49f73" translate="yes" xml:space="preserve">
          <source>Compute the &lt;code&gt;RQ&lt;/code&gt; factorization of &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;A = RQ&lt;/code&gt;. &lt;code&gt;tau&lt;/code&gt; contains scalars which parameterize the elementary reflectors of the factorization. &lt;code&gt;tau&lt;/code&gt; must have length greater than or equal to the smallest dimension of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n &lt;code&gt;RQ&lt;/code&gt; de &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;A = RQ&lt;/code&gt; . &lt;code&gt;tau&lt;/code&gt; contiene escalares que parametrizan los reflectores elementales de la factorizaci&amp;oacute;n. &lt;code&gt;tau&lt;/code&gt; debe tener una longitud mayor que o igual a la dimensi&amp;oacute;n m&amp;aacute;s peque&amp;ntilde;a de &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1941b58e1c7afe2d3c77d99152574462461df1db" translate="yes" xml:space="preserve">
          <source>Compute the Bunch-Kaufman &lt;a href=&quot;#footnote-Bunch1977&quot;&gt;[Bunch1977]&lt;/a&gt; factorization of a &lt;code&gt;Symmetric&lt;/code&gt; or &lt;code&gt;Hermitian&lt;/code&gt; matrix &lt;code&gt;A&lt;/code&gt; as $P'*U*D*U'*P$ or $P'*L*D*L'*P$, depending on which triangle is stored in &lt;code&gt;A&lt;/code&gt;, and return a &lt;code&gt;BunchKaufman&lt;/code&gt; object. Note that if &lt;code&gt;A&lt;/code&gt; is complex symmetric then &lt;code&gt;U'&lt;/code&gt; and &lt;code&gt;L'&lt;/code&gt; denote the unconjugated transposes, i.e. &lt;code&gt;transpose(U)&lt;/code&gt; and &lt;code&gt;transpose(L)&lt;/code&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n Bunch-Kaufman &lt;a href=&quot;#footnote-Bunch1977&quot;&gt;[Bunch1977]&lt;/a&gt; de una matriz &lt;code&gt;Symmetric&lt;/code&gt; o &lt;code&gt;Hermitian&lt;/code&gt; &lt;code&gt;A&lt;/code&gt; como $ P '* U * D * U' * P $ o $ P '* L * D * L' * P $, dependiendo de qu&amp;eacute; tri&amp;aacute;ngulo sea almacenado en &lt;code&gt;A&lt;/code&gt; y devuelve un objeto &lt;code&gt;BunchKaufman&lt;/code&gt; . Tenga en cuenta que si &lt;code&gt;A&lt;/code&gt; es sim&amp;eacute;trica compleja, entonces &lt;code&gt;U'&lt;/code&gt; y &lt;code&gt;L'&lt;/code&gt; denotan las transposiciones no conjugadas, es decir, la &lt;code&gt;transpose(U)&lt;/code&gt; y la &lt;code&gt;transpose(L)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a24a7193e031893d923ed86bc5db45171f4b4182" translate="yes" xml:space="preserve">
          <source>Compute the Bunch-Kaufman &lt;sup&gt;&lt;a href=&quot;#footnote-Bunch1977&quot; id=&quot;citeref-Bunch1977&quot;&gt;[Bunch1977]&lt;/a&gt;&lt;/sup&gt; factorization of a symmetric or Hermitian matrix &lt;code&gt;A&lt;/code&gt; as &lt;code&gt;P'*U*D*U'*P&lt;/code&gt; or &lt;code&gt;P'*L*D*L'*P&lt;/code&gt;, depending on which triangle is stored in &lt;code&gt;A&lt;/code&gt;, and return a &lt;a href=&quot;#LinearAlgebra.BunchKaufman&quot;&gt;&lt;code&gt;BunchKaufman&lt;/code&gt;&lt;/a&gt; object. Note that if &lt;code&gt;A&lt;/code&gt; is complex symmetric then &lt;code&gt;U'&lt;/code&gt; and &lt;code&gt;L'&lt;/code&gt; denote the unconjugated transposes, i.e. &lt;code&gt;transpose(U)&lt;/code&gt; and &lt;code&gt;transpose(L)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adc6e0822f31506444311768e4f6ded0f9f1c41" translate="yes" xml:space="preserve">
          <source>Compute the CRC-32c checksum of the given &lt;code&gt;data&lt;/code&gt;, which can be an &lt;code&gt;Array{UInt8}&lt;/code&gt;, a contiguous subarray thereof, or a &lt;code&gt;String&lt;/code&gt;. Optionally, you can pass a starting &lt;code&gt;crc&lt;/code&gt; integer to be mixed in with the checksum. The &lt;code&gt;crc&lt;/code&gt; parameter can be used to compute a checksum on data divided into chunks: performing &lt;code&gt;crc32c(data2, crc32c(data1))&lt;/code&gt; is equivalent to the checksum of &lt;code&gt;[data1; data2]&lt;/code&gt;. (Technically, a little-endian checksum is computed.)</source>
          <target state="translated">Calcule la suma de comprobaci&amp;oacute;n CRC-32c de los &lt;code&gt;data&lt;/code&gt; dados , que pueden ser una &lt;code&gt;Array{UInt8}&lt;/code&gt; , una submatriz contigua de la misma o una &lt;code&gt;String&lt;/code&gt; . Opcionalmente, puede pasar un entero &lt;code&gt;crc&lt;/code&gt; inicial para mezclarlo con la suma de comprobaci&amp;oacute;n. El par&amp;aacute;metro &lt;code&gt;crc&lt;/code&gt; se puede utilizar para calcular una suma de comprobaci&amp;oacute;n de datos divididos en fragmentos: realizar &lt;code&gt;crc32c(data2, crc32c(data1))&lt;/code&gt; es equivalente a la suma de comprobaci&amp;oacute;n de &lt;code&gt;[data1; data2]&lt;/code&gt; . (T&amp;eacute;cnicamente, se calcula una suma de comprobaci&amp;oacute;n little-endian).</target>
        </trans-unit>
        <trans-unit id="451fab004d9b252be766b8c8da0ec9401bcb730d" translate="yes" xml:space="preserve">
          <source>Compute the Cholesky factorization of a dense symmetric positive definite matrix &lt;code&gt;A&lt;/code&gt; and return a &lt;a href=&quot;#LinearAlgebra.Cholesky&quot;&gt;&lt;code&gt;Cholesky&lt;/code&gt;&lt;/a&gt; factorization. The matrix &lt;code&gt;A&lt;/code&gt; can either be a &lt;a href=&quot;#LinearAlgebra.Symmetric&quot;&gt;&lt;code&gt;Symmetric&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#LinearAlgebra.Hermitian&quot;&gt;&lt;code&gt;Hermitian&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../base/arrays/index#Base.StridedMatrix&quot;&gt;&lt;code&gt;StridedMatrix&lt;/code&gt;&lt;/a&gt; or a &lt;em&gt;perfectly&lt;/em&gt; symmetric or Hermitian &lt;code&gt;StridedMatrix&lt;/code&gt;. The triangular Cholesky factor can be obtained from the factorization &lt;code&gt;F&lt;/code&gt; with: &lt;code&gt;F.L&lt;/code&gt; and &lt;code&gt;F.U&lt;/code&gt;. The following functions are available for &lt;code&gt;Cholesky&lt;/code&gt; objects: &lt;a href=&quot;../../base/arrays/index#Base.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;inv&lt;/code&gt;, &lt;a href=&quot;#LinearAlgebra.det&quot;&gt;&lt;code&gt;det&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LinearAlgebra.logdet&quot;&gt;&lt;code&gt;logdet&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#LinearAlgebra.isposdef&quot;&gt;&lt;code&gt;isposdef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633c320407bd275302d618eed24d78f3e652466b" translate="yes" xml:space="preserve">
          <source>Compute the Cholesky factorization of a dense symmetric positive definite matrix &lt;code&gt;A&lt;/code&gt; and return a &lt;code&gt;Cholesky&lt;/code&gt; factorization. The matrix &lt;code&gt;A&lt;/code&gt; can either be a &lt;a href=&quot;#LinearAlgebra.Symmetric&quot;&gt;&lt;code&gt;Symmetric&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#LinearAlgebra.Hermitian&quot;&gt;&lt;code&gt;Hermitian&lt;/code&gt;&lt;/a&gt;&lt;code&gt;StridedMatrix&lt;/code&gt; or a &lt;em&gt;perfectly&lt;/em&gt; symmetric or Hermitian &lt;code&gt;StridedMatrix&lt;/code&gt;. The triangular Cholesky factor can be obtained from the factorization &lt;code&gt;F&lt;/code&gt; with: &lt;code&gt;F.L&lt;/code&gt; and &lt;code&gt;F.U&lt;/code&gt;. The following functions are available for &lt;code&gt;Cholesky&lt;/code&gt; objects: &lt;a href=&quot;../../base/arrays/index#Base.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;inv&lt;/code&gt;, &lt;a href=&quot;#LinearAlgebra.det&quot;&gt;&lt;code&gt;det&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LinearAlgebra.logdet&quot;&gt;&lt;code&gt;logdet&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#LinearAlgebra.isposdef&quot;&gt;&lt;code&gt;isposdef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Calcule la factorizaci&amp;oacute;n de Cholesky de una matriz definida positiva sim&amp;eacute;trica densa &lt;code&gt;A&lt;/code&gt; y devuelva una factorizaci&amp;oacute;n de &lt;code&gt;Cholesky&lt;/code&gt; . La matriz &lt;code&gt;A&lt;/code&gt; puede ser un &lt;a href=&quot;#LinearAlgebra.Symmetric&quot;&gt; &lt;code&gt;Symmetric&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#LinearAlgebra.Hermitian&quot;&gt; &lt;code&gt;Hermitian&lt;/code&gt; &lt;/a&gt; &lt;code&gt;StridedMatrix&lt;/code&gt; o una &lt;em&gt;perfectamente&lt;/em&gt; sim&amp;eacute;trica o hermitiana &lt;code&gt;StridedMatrix&lt;/code&gt; . El factor triangular de Cholesky se puede obtener de la factorizaci&amp;oacute;n &lt;code&gt;F&lt;/code&gt; con: &lt;code&gt;F.L&lt;/code&gt; y &lt;code&gt;F.U&lt;/code&gt; . Las siguientes funciones est&amp;aacute;n disponibles para los objetos &lt;code&gt;Cholesky&lt;/code&gt; : &lt;a href=&quot;../../base/arrays/index#Base.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;\&lt;/code&gt; , &lt;code&gt;inv&lt;/code&gt; , &lt;a href=&quot;#LinearAlgebra.det&quot;&gt; &lt;code&gt;det&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#LinearAlgebra.logdet&quot;&gt; &lt;code&gt;logdet&lt;/code&gt; &lt;/a&gt;e &lt;a href=&quot;#LinearAlgebra.isposdef&quot;&gt; &lt;code&gt;isposdef&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb3253df25b3b67c97f210c72aa2a93261e457fb" translate="yes" xml:space="preserve">
          <source>Compute the Hessenberg decomposition of &lt;code&gt;A&lt;/code&gt; and return a &lt;code&gt;Hessenberg&lt;/code&gt; object. If &lt;code&gt;F&lt;/code&gt; is the factorization object, the unitary matrix can be accessed with &lt;code&gt;F.Q&lt;/code&gt; (of type &lt;code&gt;LinearAlgebra.HessenbergQ&lt;/code&gt;) and the Hessenberg matrix with &lt;code&gt;F.H&lt;/code&gt; (of type &lt;a href=&quot;#LinearAlgebra.UpperHessenberg&quot;&gt;&lt;code&gt;UpperHessenberg&lt;/code&gt;&lt;/a&gt;), either of which may be converted to a regular matrix with &lt;code&gt;Matrix(F.H)&lt;/code&gt; or &lt;code&gt;Matrix(F.Q)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b962efd94ea393def73078100fff01edd4aab9" translate="yes" xml:space="preserve">
          <source>Compute the Hessenberg decomposition of &lt;code&gt;A&lt;/code&gt; and return a &lt;code&gt;Hessenberg&lt;/code&gt; object. If &lt;code&gt;F&lt;/code&gt; is the factorization object, the unitary matrix can be accessed with &lt;code&gt;F.Q&lt;/code&gt; and the Hessenberg matrix with &lt;code&gt;F.H&lt;/code&gt;. When &lt;code&gt;Q&lt;/code&gt; is extracted, the resulting type is the &lt;code&gt;HessenbergQ&lt;/code&gt; object, and may be converted to a regular matrix with &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt;&lt;code&gt;convert(Array, _)&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;Array(_)&lt;/code&gt; for short).</source>
          <target state="translated">Calcule la descomposici&amp;oacute;n de Hessenberg de &lt;code&gt;A&lt;/code&gt; y devuelva un objeto &lt;code&gt;Hessenberg&lt;/code&gt; . Si &lt;code&gt;F&lt;/code&gt; es el objeto de factorizaci&amp;oacute;n, se puede acceder a la matriz unitaria con &lt;code&gt;F.Q&lt;/code&gt; y a la matriz de Hessenberg con &lt;code&gt;F.H&lt;/code&gt; . Cuando se extrae &lt;code&gt;Q&lt;/code&gt; , el tipo resultante es el objeto &lt;code&gt;HessenbergQ&lt;/code&gt; y se puede convertir a una matriz regular con &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt; &lt;code&gt;convert(Array, _)&lt;/code&gt; &lt;/a&gt; (o &lt;code&gt;Array(_)&lt;/code&gt; para abreviar).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
