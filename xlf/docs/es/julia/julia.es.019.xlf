<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="julia">
    <body>
      <group id="julia">
        <trans-unit id="ebec4412f970972bae4c03bf49efe1d61a1518db" translate="yes" xml:space="preserve">
          <source>Upwards Double Arrow / Up Double Arrow</source>
          <target state="translated">Flecha doble hacia arriba/Flecha doble hacia arriba</target>
        </trans-unit>
        <trans-unit id="451da9751f65845a47efc254a97d6c9d93c01a6f" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Left Beside Downwards Harpoon With Barb Right</source>
          <target state="translated">Arriba Arpón con la púa a la izquierda y abajo Arpón con la púa a la derecha</target>
        </trans-unit>
        <trans-unit id="885a72e32db57383a338d645a6ec5f4b3a84c37e" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Left Beside Upwards Harpoon With Barb Right</source>
          <target state="translated">Arriba Arpón con Barra Izquierda al lado de Arriba Arpón con Barra Derecha</target>
        </trans-unit>
        <trans-unit id="8dbcdbf7a91d6691a730607574ade3b070517f85" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Left From Bar</source>
          <target state="translated">Arpón hacia arriba con la barra a la izquierda de la barra</target>
        </trans-unit>
        <trans-unit id="c48f274014a84ac28be3ae008f6fee5b2dabf7a8" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Left To Bar</source>
          <target state="translated">Arriba Arpón con la barra a la izquierda de la barra</target>
        </trans-unit>
        <trans-unit id="9ab7cd30084b7065a4f1908b303068ca0164b119" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Leftwards / Up Harpoon With Barb Left</source>
          <target state="translated">Arriba Arpón con la barra a la izquierda/Arriba Arpón con la barra a la izquierda</target>
        </trans-unit>
        <trans-unit id="1823143ac88fac95c7a172abf39eacf583342225" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Right From Bar</source>
          <target state="translated">Arriba Arpón con la barra desde el bar</target>
        </trans-unit>
        <trans-unit id="cf0eedea90d05abe73536dcddde59648851f49f2" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Right To Bar</source>
          <target state="translated">Arriba Arpón con Barb Derecho a Barra</target>
        </trans-unit>
        <trans-unit id="054a68e049c32af85ec106146f1c9d49703a5a32" translate="yes" xml:space="preserve">
          <source>Upwards Harpoon With Barb Rightwards / Up Harpoon With Barb Right</source>
          <target state="translated">Arriba Arpón con la púa hacia la derecha/Arriba Arpón con la púa hacia la derecha</target>
        </trans-unit>
        <trans-unit id="52570d5f31c410f5871d41a198881ad11859b2f8" translate="yes" xml:space="preserve">
          <source>Upwards Paired Arrows / Up Paired Arrows</source>
          <target state="translated">Flechas emparejadas hacia arriba/Flechas emparejadas hacia arriba</target>
        </trans-unit>
        <trans-unit id="e2bb6ca806f317b31034fe74bd58c64cfd1d2de9" translate="yes" xml:space="preserve">
          <source>Upwards Quadruple Arrow</source>
          <target state="translated">Flecha cuádruple hacia arriba</target>
        </trans-unit>
        <trans-unit id="e0293c09ade0452364d29d560cce13e5bd4d334f" translate="yes" xml:space="preserve">
          <source>Upwards Triple Arrow</source>
          <target state="translated">Flecha triple hacia arriba</target>
        </trans-unit>
        <trans-unit id="8a1494f8ee6c5ee3a3b8efc6ee623b9ab34472ba" translate="yes" xml:space="preserve">
          <source>Upwards Two Headed Arrow / Up Two Headed Arrow</source>
          <target state="translated">Arriba Flecha de dos cabezas/Arriba Flecha de dos cabezas</target>
        </trans-unit>
        <trans-unit id="813eb4d285528b78ca67b70c64ef6320ea54f9f0" translate="yes" xml:space="preserve">
          <source>Upwards Two-Headed Arrow From Small Circle</source>
          <target state="translated">Flecha de dos cabezas hacia arriba desde un pequeño círculo</target>
        </trans-unit>
        <trans-unit id="b2469885ff05b9cc90e880e142fd5896188598ee" translate="yes" xml:space="preserve">
          <source>Upwards White Arrow / White Up Arrow</source>
          <target state="translated">Flecha Blanca hacia arriba/Flecha Blanca hacia arriba</target>
        </trans-unit>
        <trans-unit id="906d90e89656334b7437d43c9b30e29f00d00f8d" translate="yes" xml:space="preserve">
          <source>Upwards White Arrow From Bar / White Up Arrow From Bar</source>
          <target state="translated">Flecha blanca hacia arriba desde la barra/Flecha blanca hacia arriba desde la barra</target>
        </trans-unit>
        <trans-unit id="e4458dd128aa6efaff132fdd10fa70177926007b" translate="yes" xml:space="preserve">
          <source>Uranus</source>
          <target state="translated">Uranus</target>
        </trans-unit>
        <trans-unit id="cdb412e2ca5e6ba493c591c8c2043869bf396180" translate="yes" xml:space="preserve">
          <source>Usage is very straightforward:</source>
          <target state="translated">El uso es muy sencillo:</target>
        </trans-unit>
        <trans-unit id="adf928890fa0bf2818758d8852ab302ab63640ba" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#Base.append!&quot;&gt;&lt;code&gt;append!&lt;/code&gt;&lt;/a&gt; to add all the elements of another collection to &lt;code&gt;collection&lt;/code&gt;. The result of the preceding example is equivalent to &lt;code&gt;append!([1, 2, 3], [4, 5, 6])&lt;/code&gt;.</source>
          <target state="translated">Utilice &lt;a href=&quot;#Base.append!&quot;&gt; &lt;code&gt;append!&lt;/code&gt; &lt;/a&gt;para agregar todos los elementos de otra colecci&amp;oacute;n a la &lt;code&gt;collection&lt;/code&gt; . El resultado del ejemplo anterior es equivalente a &lt;code&gt;append!([1, 2, 3], [4, 5, 6])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dba88b41b71a6676d0481b8696709dd68423768" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#Base.include&quot;&gt;&lt;code&gt;Base.include&lt;/code&gt;&lt;/a&gt; to evaluate a file into another module.</source>
          <target state="translated">Utilice &lt;a href=&quot;#Base.include&quot;&gt; &lt;code&gt;Base.include&lt;/code&gt; &lt;/a&gt; para evaluar un archivo en otro m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="3e8760c00a8697e5b8aeb582fe1473eb0e29463e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#Base.lastindex&quot;&gt;&lt;code&gt;lastindex&lt;/code&gt;&lt;/a&gt; to get the last valid index of an indexable collection.</source>
          <target state="translated">Utilice &lt;a href=&quot;#Base.lastindex&quot;&gt; &lt;code&gt;lastindex&lt;/code&gt; &lt;/a&gt; para obtener el &amp;uacute;ltimo &amp;iacute;ndice v&amp;aacute;lido de una colecci&amp;oacute;n indexable.</target>
        </trans-unit>
        <trans-unit id="b112cddecaeaffc3c8cf54e44abf77315a9f8acf" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#Base.push!&quot;&gt;&lt;code&gt;push!&lt;/code&gt;&lt;/a&gt; to add individual items to &lt;code&gt;collection&lt;/code&gt; which are not already themselves in another collection. The result of the preceding example is equivalent to &lt;code&gt;push!([1, 2, 3], 4, 5, 6)&lt;/code&gt;.</source>
          <target state="translated">Utilice &lt;a href=&quot;#Base.push!&quot;&gt; &lt;code&gt;push!&lt;/code&gt; &lt;/a&gt;para agregar elementos individuales a la &lt;code&gt;collection&lt;/code&gt; que a&amp;uacute;n no est&amp;aacute;n en otra colecci&amp;oacute;n. El resultado del ejemplo anterior es equivalente a &lt;code&gt;push!([1, 2, 3], 4, 5, 6)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77c9ba2a7f72e5d0f8b6c5f71aa620d5e3c742f3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#Base.something&quot;&gt;&lt;code&gt;something&lt;/code&gt;&lt;/a&gt; to access the value wrapped by a &lt;code&gt;Some&lt;/code&gt; object.</source>
          <target state="translated">Use &lt;a href=&quot;#Base.something&quot;&gt; &lt;code&gt;something&lt;/code&gt; &lt;/a&gt; para acceder al valor envuelto por un objeto &lt;code&gt;Some&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="253fb0c8daa4e7ce4c9d69eb091a0cb44d5f50cf" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#LinearAlgebra.opnorm&quot;&gt;&lt;code&gt;opnorm&lt;/code&gt;&lt;/a&gt; to compute the operator norm of a matrix.</source>
          <target state="translated">Utilice &lt;a href=&quot;#LinearAlgebra.opnorm&quot;&gt; &lt;code&gt;opnorm&lt;/code&gt; &lt;/a&gt; para calcular la norma del operador de una matriz.</target>
        </trans-unit>
        <trans-unit id="b236b0bc0e26f22cae584435e191add5139d35df" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../base/base/index#Base.@inbounds&quot;&gt;&lt;code&gt;@inbounds&lt;/code&gt;&lt;/a&gt; to eliminate array bounds checking within expressions. Be certain before doing this. If the subscripts are ever out of bounds, you may suffer crashes or silent corruption.</source>
          <target state="translated">Utilice &lt;a href=&quot;../../base/base/index#Base.@inbounds&quot;&gt; &lt;code&gt;@inbounds&lt;/code&gt; &lt;/a&gt; para eliminar la comprobaci&amp;oacute;n de l&amp;iacute;mites de matriz dentro de expresiones. Aseg&amp;uacute;rese antes de hacer esto. Si los sub&amp;iacute;ndices est&amp;aacute;n fuera de los l&amp;iacute;mites, es posible que sufra bloqueos o corrupci&amp;oacute;n silenciosa.</target>
        </trans-unit>
        <trans-unit id="d306f68003307110fc26b73cfcc7afc0fc9abd9c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../base/math/index#Base.FastMath.@fastmath&quot;&gt;&lt;code&gt;@fastmath&lt;/code&gt;&lt;/a&gt; to allow floating point optimizations that are correct for real numbers, but lead to differences for IEEE numbers. Be careful when doing this, as this may change numerical results. This corresponds to the &lt;code&gt;-ffast-math&lt;/code&gt; option of clang.</source>
          <target state="translated">Utilice &lt;a href=&quot;../../base/math/index#Base.FastMath.@fastmath&quot;&gt; &lt;code&gt;@fastmath&lt;/code&gt; &lt;/a&gt; para permitir optimizaciones de punto flotante que sean correctas para n&amp;uacute;meros reales, pero que generen diferencias para n&amp;uacute;meros IEEE. Tenga cuidado al hacer esto, ya que esto puede cambiar los resultados num&amp;eacute;ricos. Esto corresponde a la opci&amp;oacute;n &lt;code&gt;-ffast-math&lt;/code&gt; de clang.</target>
        </trans-unit>
        <trans-unit id="3cac4bd068dbdaa848d7cc91268aece2ec2791ed" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../base/math/index#Base.abs2&quot;&gt;&lt;code&gt;abs2(z)&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;abs(z)^2&lt;/code&gt; for complex &lt;code&gt;z&lt;/code&gt;. In general, try to rewrite code to use &lt;a href=&quot;../../base/math/index#Base.abs2&quot;&gt;&lt;code&gt;abs2&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../base/math/index#Base.abs&quot;&gt;&lt;code&gt;abs&lt;/code&gt;&lt;/a&gt; for complex arguments.</source>
          <target state="translated">Utilice &lt;a href=&quot;../../base/math/index#Base.abs2&quot;&gt; &lt;code&gt;abs2(z)&lt;/code&gt; &lt;/a&gt; lugar de &lt;code&gt;abs(z)^2&lt;/code&gt; para &lt;code&gt;z&lt;/code&gt; complejo . En general, intente reescribir el c&amp;oacute;digo para usar &lt;a href=&quot;../../base/math/index#Base.abs2&quot;&gt; &lt;code&gt;abs2&lt;/code&gt; en&lt;/a&gt; lugar de &lt;a href=&quot;../../base/math/index#Base.abs&quot;&gt; &lt;code&gt;abs&lt;/code&gt; &lt;/a&gt; para argumentos complejos.</target>
        </trans-unit>
        <trans-unit id="97d4b359bc1904cf184f779a48c13e4ababd9bcc" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../base/math/index#Base.div&quot;&gt;&lt;code&gt;div(x,y)&lt;/code&gt;&lt;/a&gt; for truncating division of integers instead of &lt;a href=&quot;../../base/math/index#Base.trunc&quot;&gt;&lt;code&gt;trunc(x/y)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/math/index#Base.fld&quot;&gt;&lt;code&gt;fld(x,y)&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../base/math/index#Base.floor&quot;&gt;&lt;code&gt;floor(x/y)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../base/math/index#Base.cld&quot;&gt;&lt;code&gt;cld(x,y)&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../base/math/index#Base.ceil&quot;&gt;&lt;code&gt;ceil(x/y)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed20df03617ffa631ba3c736bd4f57a7ec7da56b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../base/math/index#Base.div&quot;&gt;&lt;code&gt;div(x,y)&lt;/code&gt;&lt;/a&gt; for truncating division of integers instead of &lt;code&gt;trunc(x/y)&lt;/code&gt;, &lt;a href=&quot;../../base/math/index#Base.fld&quot;&gt;&lt;code&gt;fld(x,y)&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;floor(x/y)&lt;/code&gt;, and &lt;a href=&quot;../../base/math/index#Base.cld&quot;&gt;&lt;code&gt;cld(x,y)&lt;/code&gt;&lt;/a&gt; instead of &lt;code&gt;ceil(x/y)&lt;/code&gt;.</source>
          <target state="translated">Use &lt;a href=&quot;../../base/math/index#Base.div&quot;&gt; &lt;code&gt;div(x,y)&lt;/code&gt; &lt;/a&gt; para truncar la divisi&amp;oacute;n de enteros en lugar de &lt;code&gt;trunc(x/y)&lt;/code&gt; , &lt;a href=&quot;../../base/math/index#Base.fld&quot;&gt; &lt;code&gt;fld(x,y)&lt;/code&gt; &lt;/a&gt; lugar de &lt;code&gt;floor(x/y)&lt;/code&gt; y &lt;a href=&quot;../../base/math/index#Base.cld&quot;&gt; &lt;code&gt;cld(x,y)&lt;/code&gt; &lt;/a&gt; lugar de &lt;code&gt;ceil(x/y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbd9f39fcb30d6c8593e579f82799578e0b0fa66" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../file/index#Base.Filesystem.dirname&quot;&gt;&lt;code&gt;dirname&lt;/code&gt;&lt;/a&gt; to get the directory part and &lt;a href=&quot;../file/index#Base.Filesystem.basename&quot;&gt;&lt;code&gt;basename&lt;/code&gt;&lt;/a&gt; to get the file name part of the path.</source>
          <target state="translated">Utilice &lt;a href=&quot;../file/index#Base.Filesystem.dirname&quot;&gt; &lt;code&gt;dirname&lt;/code&gt; &lt;/a&gt; para obtener la parte del directorio y el &lt;a href=&quot;../file/index#Base.Filesystem.basename&quot;&gt; &lt;code&gt;basename&lt;/code&gt; &lt;/a&gt; para obtener la parte del nombre del archivo de la ruta.</target>
        </trans-unit>
        <trans-unit id="c2e799feae8fa513489e0daa4c3f185d8cf11c0d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Debug&lt;/code&gt; for verbose information that could be useful when debugging an application or module. These events are disabled by default.</source>
          <target state="translated">Utilice &lt;code&gt;Debug&lt;/code&gt; para obtener informaci&amp;oacute;n detallada que podr&amp;iacute;a resultar &amp;uacute;til al depurar una aplicaci&amp;oacute;n o un m&amp;oacute;dulo. Estos eventos est&amp;aacute;n deshabilitados de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="fb0928e79ba9fd55c12a3eefaa790b4b08148347" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Error&lt;/code&gt; to report errors where the code has enough context to recover and continue. (When the code doesn't have enough context, an exception or early return is more appropriate.)</source>
          <target state="translated">Utilice &lt;code&gt;Error&lt;/code&gt; para informar errores en los que el c&amp;oacute;digo tiene suficiente contexto para recuperarse y continuar. (Cuando el c&amp;oacute;digo no tiene suficiente contexto, una excepci&amp;oacute;n o una devoluci&amp;oacute;n anticipada es m&amp;aacute;s apropiada).</target>
        </trans-unit>
        <trans-unit id="e86b08aafca134e6fd8d7a93c33dea4d8b4e5e85" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Info&lt;/code&gt; to inform the user about the normal operation of the program.</source>
          <target state="translated">Utilice &lt;code&gt;Info&lt;/code&gt; para informar al usuario sobre el funcionamiento normal del programa.</target>
        </trans-unit>
        <trans-unit id="8c4187945e9e4e8ad7fe21490eeae3ab5745e787" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Warn&lt;/code&gt; when a potential problem is detected.</source>
          <target state="translated">Utilice &lt;code&gt;Warn&lt;/code&gt; cuando se detecte un problema potencial.</target>
        </trans-unit>
        <trans-unit id="38f7e6f35c48f80e5317615158f0db45821da3da" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;collect&lt;/code&gt; to extract non-&lt;code&gt;missing&lt;/code&gt; values and store them in an array</source>
          <target state="translated">Utilice &lt;code&gt;collect&lt;/code&gt; para extraer valores que no &lt;code&gt;missing&lt;/code&gt; y almacenarlos en una matriz</target>
        </trans-unit>
        <trans-unit id="c15be8234ef12b9a7a7d5794b1d59b19e6393dc6" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;collect&lt;/code&gt; to obtain an &lt;code&gt;Array&lt;/code&gt; containing the non-&lt;code&gt;missing&lt;/code&gt; values in &lt;code&gt;itr&lt;/code&gt;. Note that even if &lt;code&gt;itr&lt;/code&gt; is a multidimensional array, the result will always be a &lt;code&gt;Vector&lt;/code&gt; since it is not possible to remove missings while preserving dimensions of the input.</source>
          <target state="translated">Utilice &lt;code&gt;collect&lt;/code&gt; para obtener una &lt;code&gt;Array&lt;/code&gt; contenga los valores que no &lt;code&gt;missing&lt;/code&gt; en &lt;code&gt;itr&lt;/code&gt; . Tenga en cuenta que incluso si &lt;code&gt;itr&lt;/code&gt; es una matriz multidimensional, el resultado siempre ser&amp;aacute; un &lt;code&gt;Vector&lt;/code&gt; ya que no es posible eliminar las faltas conservando las dimensiones de la entrada.</target>
        </trans-unit>
        <trans-unit id="c3faffd725f2f09e5f4e7fbbe19f38edbe638510" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;import&lt;/code&gt;:</source>
          <target state="translated">Usar &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n :</target>
        </trans-unit>
        <trans-unit id="64230d1dd313790498f6cbea1b850278a5b2bdf0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;julia&lt;/code&gt; with &lt;code&gt;--compiled-modules=no&lt;/code&gt; flag to turn off precompilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6047af5c0d2bfb4e695d572e7b2e68d170fdb8" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;rm&lt;/code&gt; to remove this package by name:</source>
          <target state="translated">Utilice &lt;code&gt;rm&lt;/code&gt; para eliminar este paquete por nombre:</target>
        </trans-unit>
        <trans-unit id="88a8f5cf6c63986cbddfbeb683baa495ffb2458a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;update&lt;/code&gt; to update an installed package:</source>
          <target state="translated">Utilice la &lt;code&gt;update&lt;/code&gt; para actualizar un paquete instalado:</target>
        </trans-unit>
        <trans-unit id="faa02645b797b97f27299fe67bce9b0039a88864" translate="yes" xml:space="preserve">
          <source>Use a heuristic to guess if a file is binary: searching for NULL bytes and looking for a reasonable ratio of printable to non-printable characters among the first 8000 bytes.</source>
          <target state="translated">Utiliza una heurística para adivinar si un archivo es binario:buscando NULL bytes y buscando una proporción razonable de caracteres imprimibles y no imprimibles entre los primeros 8000 bytes.</target>
        </trans-unit>
        <trans-unit id="97af4a7c67b7c83eeca7e643db74ac873a965026" translate="yes" xml:space="preserve">
          <source>Use an explicit conversion by &lt;code&gt;x = oneunit(Float64)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88358f29dfd758f460e28a67196b545279d41f43" translate="yes" xml:space="preserve">
          <source>Use an explicit conversion: &lt;code&gt;x = oneunit(Float64)&lt;/code&gt;</source>
          <target state="translated">Utilice una conversi&amp;oacute;n expl&amp;iacute;cita: &lt;code&gt;x = oneunit(Float64)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6770a727a84b74b281a528ef665b748645523911" translate="yes" xml:space="preserve">
          <source>Use backticks to identify code and equations.</source>
          <target state="translated">Usar palillos para identificar el código y las ecuaciones.</target>
        </trans-unit>
        <trans-unit id="70ddc8cd15e7e7d64472323fbb2ce74dc97af2ec" translate="yes" xml:space="preserve">
          <source>Use in Makefiles</source>
          <target state="translated">Uso en Makefiles</target>
        </trans-unit>
        <trans-unit id="08e8cc7da923f6fd03e4d859e3d2010bdbf5a589" translate="yes" xml:space="preserve">
          <source>Use multiple arguments like so:</source>
          <target state="translated">Usar múltiples argumentos como ese:</target>
        </trans-unit>
        <trans-unit id="ac721de84c14d925fb2b4f9baf4d8bd1f070ead3" translate="yes" xml:space="preserve">
          <source>Use naming conventions consistent with Julia &lt;code&gt;base/&lt;/code&gt;</source>
          <target state="translated">Utilice convenciones de nomenclatura coherentes con la &lt;code&gt;base/&lt;/code&gt; Julia /</target>
        </trans-unit>
        <trans-unit id="2edbe387f9c0f39642268d3da72bf656df7ef46b" translate="yes" xml:space="preserve">
          <source>Use native code from system image if available</source>
          <target state="translated">Usar el código nativo de la imagen del sistema si está disponible</target>
        </trans-unit>
        <trans-unit id="cc2d79932b3fbbb05016d0144fe877e6d22b3ea3" translate="yes" xml:space="preserve">
          <source>Used in a stream redirect to discard all data written to it. Essentially equivalent to &lt;code&gt;/dev/null&lt;/code&gt; on Unix or &lt;code&gt;NUL&lt;/code&gt; on Windows. Usage:</source>
          <target state="translated">Se usa en una redirecci&amp;oacute;n de flujo para descartar todos los datos escritos en &amp;eacute;l. Esencialmente equivalente a &lt;code&gt;/dev/null&lt;/code&gt; en Unix o &lt;code&gt;NUL&lt;/code&gt; en Windows. Uso:</target>
        </trans-unit>
        <trans-unit id="9cde8b01939e704886f95991687885c1bfbd5672" translate="yes" xml:space="preserve">
          <source>User-defined plain-data types without &lt;code&gt;write&lt;/code&gt; methods can be written when wrapped in a &lt;code&gt;Ref&lt;/code&gt;:</source>
          <target state="translated">Los tipos de datos sin formato definidos por el usuario sin m&amp;eacute;todos de &lt;code&gt;write&lt;/code&gt; se pueden escribir cuando se envuelven en una &lt;code&gt;Ref&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1bc0b4fef463a1a11ba0c7feb894e0c57617f8b" translate="yes" xml:space="preserve">
          <source>User-defined types are as fast and compact as built-ins</source>
          <target state="translated">Los tipos definidos por el usuario son tan rápidos y compactos como los incorporados</target>
        </trans-unit>
        <trans-unit id="3c729f1cba74cb6c5ffde754c64511e3fe9d9c3f" translate="yes" xml:space="preserve">
          <source>Username/password plain text</source>
          <target state="translated">Nombre de usuario/contraseña en texto plano</target>
        </trans-unit>
        <trans-unit id="3c17149033d4c3d14412d998ae2de25ee7497296" translate="yes" xml:space="preserve">
          <source>Users should refer to &lt;code&gt;LineEdit.jl&lt;/code&gt; to discover the available actions on key input.</source>
          <target state="translated">Los usuarios deben consultar &lt;code&gt;LineEdit.jl&lt;/code&gt; para descubrir las acciones disponibles en la entrada clave.</target>
        </trans-unit>
        <trans-unit id="c9ffbb24bf63c0d26fa820ccaad97db5b5d7c4c0" translate="yes" xml:space="preserve">
          <source>Uses multiple concurrent tasks to map &lt;code&gt;f&lt;/code&gt; over a collection (or multiple equal length collections). For multiple collection arguments, &lt;code&gt;f&lt;/code&gt; is applied elementwise.</source>
          <target state="translated">Utiliza varias tareas simult&amp;aacute;neas para mapear &lt;code&gt;f&lt;/code&gt; sobre una colecci&amp;oacute;n (o varias colecciones de igual longitud). Para m&amp;uacute;ltiples argumentos de colecci&amp;oacute;n, &lt;code&gt;f&lt;/code&gt; se aplica por elementos.</target>
        </trans-unit>
        <trans-unit id="aaaf90400780ceb1859683501af570570487d3f2" translate="yes" xml:space="preserve">
          <source>Uses of non-constant globals can be optimized by annotating their types at the point of use:</source>
          <target state="translated">Los usos de los globos no constantes pueden optimizarse anotando sus tipos en el punto de uso:</target>
        </trans-unit>
        <trans-unit id="688afb99bff61a9584ff045ba5eb7014ef89e708" translate="yes" xml:space="preserve">
          <source>Using &quot;outside&quot; variables in parallel loops is perfectly reasonable if the variables are read-only:</source>
          <target state="translated">Usar variables &quot;externas&quot; en bucles paralelos es perfectamente razonable si las variables son de sólo lectura:</target>
        </trans-unit>
        <trans-unit id="0e688a58936b31583f452f63485c5d5aac4efae6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;@inbounds&lt;/code&gt; may return incorrect results/crashes/corruption for out-of-bounds indices. The user is responsible for checking it manually. Only use &lt;code&gt;@inbounds&lt;/code&gt; when it is certain from the information locally available that all accesses are in bounds.</source>
          <target state="translated">El uso de &lt;code&gt;@inbounds&lt;/code&gt; puede devolver resultados incorrectos / bloqueos / corrupci&amp;oacute;n para &amp;iacute;ndices fuera de l&amp;iacute;mites. El usuario es responsable de comprobarlo manualmente. Solo use &lt;code&gt;@inbounds&lt;/code&gt; cuando est&amp;eacute; seguro de la informaci&amp;oacute;n disponible localmente que todos los accesos est&amp;aacute;n dentro de los l&amp;iacute;mites.</target>
        </trans-unit>
        <trans-unit id="d5bc6baeeb67dcbf6611dff279c2c4eee51ea334" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;begin&lt;/code&gt; in an indexing expression to refer to the first index requires at least Julia 1.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e537d4f221185177f4eaa3de9c5f176d574cec48" translate="yes" xml:space="preserve">
          <source>Using Loggers</source>
          <target state="translated">Usando leñadores</target>
        </trans-unit>
        <trans-unit id="4594347fb664dcf4c2e1f34027a9288d5babb1f4" translate="yes" xml:space="preserve">
          <source>Using an index less than 1 or greater than &lt;code&gt;end&lt;/code&gt; raises an error:</source>
          <target state="translated">El uso de un &amp;iacute;ndice menor que 1 o mayor que &lt;code&gt;end&lt;/code&gt; genera un error:</target>
        </trans-unit>
        <trans-unit id="fd6e027b6c0183a57f969b2f0c1a67224243a456" translate="yes" xml:space="preserve">
          <source>Using an index less than &lt;code&gt;begin&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;) or greater than &lt;code&gt;end&lt;/code&gt; raises an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6956b3efd735f97450c62b06daef893328f716ca" translate="yes" xml:space="preserve">
          <source>Using distinct algorithms for scalar or array generation</source>
          <target state="translated">Usando distintos algoritmos para la generación de escalas o matrices</target>
        </trans-unit>
        <trans-unit id="d0c7e17c286ccbac76a5a27970a8f4dc4a2438ec" translate="yes" xml:space="preserve">
          <source>Using julia-config to automatically determine build parameters</source>
          <target state="translated">Usando julia-config para determinar automáticamente los parámetros de construcción</target>
        </trans-unit>
        <trans-unit id="6c6ec39234314353f60f2f3bfa4894a480f5bb32" translate="yes" xml:space="preserve">
          <source>Using resources of &lt;code&gt;x&lt;/code&gt; which would be cleaned up in the finalizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d40e4dac1bcd568d35cfc3572f2a015fc1c1052" translate="yes" xml:space="preserve">
          <source>Using semicolons (or newlines) and spaces (or tabs) can be combined to concatenate both horizontally and vertically at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf9f6136824ad4f2ee2bbca487125e42112f823" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt;&lt;code&gt;GitRevWalker&lt;/code&gt;&lt;/a&gt;&lt;code&gt;walker&lt;/code&gt; to &quot;walk&quot; over every commit in the repository's history, apply &lt;code&gt;f&lt;/code&gt; to each commit in the walk. The keyword arguments are: * &lt;code&gt;oid&lt;/code&gt;: The &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; of the commit to begin the walk from. The default is to use &lt;a href=&quot;#LibGit2.push_head!&quot;&gt;&lt;code&gt;push_head!&lt;/code&gt;&lt;/a&gt; and therefore the HEAD commit and all its ancestors. * &lt;code&gt;range&lt;/code&gt;: A range of &lt;code&gt;GitHash&lt;/code&gt;s in the format &lt;code&gt;oid1..oid2&lt;/code&gt;. &lt;code&gt;f&lt;/code&gt; will be applied to all commits between the two. * &lt;code&gt;by&lt;/code&gt;: The sorting method. The default is not to sort. Other options are to sort by topology (&lt;code&gt;LibGit2.Consts.SORT_TOPOLOGICAL&lt;/code&gt;), to sort forwards in time (&lt;code&gt;LibGit2.Consts.SORT_TIME&lt;/code&gt;, most ancient first) or to sort backwards in time (&lt;code&gt;LibGit2.Consts.SORT_REVERSE&lt;/code&gt;, most recent first). * &lt;code&gt;rev&lt;/code&gt;: Whether to reverse the sorted order (for instance, if topological sorting is used).</source>
          <target state="translated">Usando el &lt;code&gt;walker&lt;/code&gt; &lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt; &lt;code&gt;GitRevWalker&lt;/code&gt; &lt;/a&gt; para &quot;recorrer&quot; cada confirmaci&amp;oacute;n en el historial del repositorio, aplique &lt;code&gt;f&lt;/code&gt; a cada confirmaci&amp;oacute;n en la caminata. Los argumentos de la palabra clave son: * &lt;code&gt;oid&lt;/code&gt; : El &lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt; del compromiso desde el que comenzar la caminata. &amp;iexcl;El valor predeterminado es usar &lt;a href=&quot;#LibGit2.push_head!&quot;&gt; &lt;code&gt;push_head!&lt;/code&gt; &lt;/a&gt; y por lo tanto la CABEZA y todos sus antepasados ​​se comprometen. * &lt;code&gt;range&lt;/code&gt; : un rango de &lt;code&gt;GitHash&lt;/code&gt; s en el formato &lt;code&gt;oid1..oid2&lt;/code&gt; . &lt;code&gt;f&lt;/code&gt; se aplicar&amp;aacute; a todas las confirmaciones entre los dos. * &lt;code&gt;by&lt;/code&gt; : El m&amp;eacute;todo de clasificaci&amp;oacute;n. El valor predeterminado es no ordenar. Otras opciones son ordenar por topolog&amp;iacute;a ( &lt;code&gt;LibGit2.Consts.SORT_TOPOLOGICAL&lt;/code&gt; ), para ordenar hacia adelante en el tiempo ( &lt;code&gt;LibGit2.Consts.SORT_TIME&lt;/code&gt; , la m&amp;aacute;s antigua primero) o para ordenar hacia atr&amp;aacute;s en el tiempo ( &lt;code&gt;LibGit2.Consts.SORT_REVERSE&lt;/code&gt; , la m&amp;aacute;s reciente primero). * &lt;code&gt;rev&lt;/code&gt; : si se invierte el orden de clasificaci&amp;oacute;n (por ejemplo, si se utiliza la clasificaci&amp;oacute;n topol&amp;oacute;gica).</target>
        </trans-unit>
        <trans-unit id="6ec4842754e5953917652390962c1ff76956e408" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt;&lt;code&gt;GitRevWalker&lt;/code&gt;&lt;/a&gt;&lt;code&gt;walker&lt;/code&gt; to &quot;walk&quot; over every commit in the repository's history, find the number of commits which return &lt;code&gt;true&lt;/code&gt; when &lt;code&gt;f&lt;/code&gt; is applied to them. The keyword arguments are: * &lt;code&gt;oid&lt;/code&gt;: The &lt;a href=&quot;#LibGit2.GitHash&quot;&gt;&lt;code&gt;GitHash&lt;/code&gt;&lt;/a&gt; of the commit to begin the walk from. The default is to use &lt;a href=&quot;#LibGit2.push_head!&quot;&gt;&lt;code&gt;push_head!&lt;/code&gt;&lt;/a&gt; and therefore the HEAD commit and all its ancestors. * &lt;code&gt;by&lt;/code&gt;: The sorting method. The default is not to sort. Other options are to sort by topology (&lt;code&gt;LibGit2.Consts.SORT_TOPOLOGICAL&lt;/code&gt;), to sort forwards in time (&lt;code&gt;LibGit2.Consts.SORT_TIME&lt;/code&gt;, most ancient first) or to sort backwards in time (&lt;code&gt;LibGit2.Consts.SORT_REVERSE&lt;/code&gt;, most recent first). * &lt;code&gt;rev&lt;/code&gt;: Whether to reverse the sorted order (for instance, if topological sorting is used).</source>
          <target state="translated">Usando el &lt;code&gt;walker&lt;/code&gt; &lt;a href=&quot;#LibGit2.GitRevWalker&quot;&gt; &lt;code&gt;GitRevWalker&lt;/code&gt; &lt;/a&gt; para &quot;caminar&quot; sobre cada confirmaci&amp;oacute;n en el historial del repositorio, encuentre el n&amp;uacute;mero de confirmaciones que devuelven &lt;code&gt;true&lt;/code&gt; cuando se les aplica &lt;code&gt;f&lt;/code&gt; . Los argumentos de la palabra clave son: * &lt;code&gt;oid&lt;/code&gt; : El &lt;a href=&quot;#LibGit2.GitHash&quot;&gt; &lt;code&gt;GitHash&lt;/code&gt; &lt;/a&gt; del compromiso desde el que comenzar la caminata. &amp;iexcl;El valor predeterminado es usar &lt;a href=&quot;#LibGit2.push_head!&quot;&gt; &lt;code&gt;push_head!&lt;/code&gt; &lt;/a&gt; y por lo tanto la CABEZA y todos sus antepasados ​​se comprometen. * &lt;code&gt;by&lt;/code&gt; : El m&amp;eacute;todo de clasificaci&amp;oacute;n. El valor predeterminado es no ordenar. Otras opciones son ordenar por topolog&amp;iacute;a ( &lt;code&gt;LibGit2.Consts.SORT_TOPOLOGICAL&lt;/code&gt; ), ordenar hacia adelante en el tiempo ( &lt;code&gt;LibGit2.Consts.SORT_TIME&lt;/code&gt; , la m&amp;aacute;s antigua primero) o ordenar hacia atr&amp;aacute;s en el tiempo ( &lt;code&gt;LibGit2.Consts.SORT_REVERSE&lt;/code&gt; , Lo mas reciente primero). * &lt;code&gt;rev&lt;/code&gt; : si se invierte el orden de clasificaci&amp;oacute;n (por ejemplo, si se utiliza la clasificaci&amp;oacute;n topol&amp;oacute;gica).</target>
        </trans-unit>
        <trans-unit id="c413028736212fe9357e9b5b1dc5c398cc081dcd" translate="yes" xml:space="preserve">
          <source>Using the project Properties dialog, go to &lt;code&gt;C/C++&lt;/code&gt; | &lt;code&gt;General&lt;/code&gt; and add &lt;code&gt;$(JULIA_DIR)\include\julia\&lt;/code&gt; to the Additional Include Directories property. Then, go to the &lt;code&gt;Linker&lt;/code&gt; | &lt;code&gt;General&lt;/code&gt; section and add &lt;code&gt;$(JULIA_DIR)\lib&lt;/code&gt; to the Additional Library Directories property. Finally, under &lt;code&gt;Linker&lt;/code&gt; | &lt;code&gt;Input&lt;/code&gt;, add &lt;code&gt;libjulia.dll.a;libopenlibm.dll.a;&lt;/code&gt; to the list of libraries.</source>
          <target state="translated">Usando el di&amp;aacute;logo de Propiedades del proyecto, vaya a &lt;code&gt;C/C++&lt;/code&gt; | &lt;code&gt;General&lt;/code&gt; y agregue &lt;code&gt;$(JULIA_DIR)\include\julia\&lt;/code&gt; a la propiedad de directorios de inclusi&amp;oacute;n adicionales. Luego, vaya al &lt;code&gt;Linker&lt;/code&gt; | Secci&amp;oacute;n &lt;code&gt;General&lt;/code&gt; y agregue &lt;code&gt;$(JULIA_DIR)\lib&lt;/code&gt; a la propiedad de Directorios de biblioteca adicionales. Finalmente, en &lt;code&gt;Linker&lt;/code&gt; | &lt;code&gt;Input&lt;/code&gt; , agregue &lt;code&gt;libjulia.dll.a;libopenlibm.dll.a;&lt;/code&gt; a la lista de bibliotecas.</target>
        </trans-unit>
        <trans-unit id="8486afb99169a641f479a3a3c9bb4fcde8005d8e" translate="yes" xml:space="preserve">
          <source>Usually &lt;code&gt;begin&lt;/code&gt; will not be necessary, since keywords such as &lt;a href=&quot;#function&quot;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt; implicitly begin blocks of code. See also &lt;a href=&quot;#;&quot;&gt;&lt;code&gt;;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Por lo general, &lt;code&gt;begin&lt;/code&gt; no ser&amp;aacute; necesario, ya que las palabras clave como &lt;a href=&quot;#function&quot;&gt; &lt;code&gt;function&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#let&quot;&gt; &lt;code&gt;let&lt;/code&gt; &lt;/a&gt; impl&amp;iacute;citamente comienzan bloques de c&amp;oacute;digo. Ver tambi&amp;eacute;n &lt;a href=&quot;#;&quot;&gt; &lt;code&gt;;&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="32aeab02a74532020ea8342a8515157c825ef703" translate="yes" xml:space="preserve">
          <source>Usually a function has 4 methods defined, one each for &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt;&lt;code&gt;Float32&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;ComplexF64&lt;/code&gt; and &lt;code&gt;ComplexF32&lt;/code&gt; arrays.</source>
          <target state="translated">Por lo general, una funci&amp;oacute;n tiene 4 m&amp;eacute;todos definidos, uno para cada uno de los &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt; &lt;code&gt;Float32&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;ComplexF64&lt;/code&gt; y &lt;code&gt;ComplexF32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c67e26c63c1724df60d067a3aaa25a98d5abbf4a" translate="yes" xml:space="preserve">
          <source>Utilities for capturing, filtering and presenting streams of log events. Normally you don't need to import &lt;code&gt;Logging&lt;/code&gt; to create log events; for this the standard logging macros such as &lt;code&gt;@info&lt;/code&gt; are already exported by &lt;code&gt;Base&lt;/code&gt; and available by default.</source>
          <target state="translated">Utilidades para capturar, filtrar y presentar flujos de eventos de registro. Normalmente no es necesario importar &lt;code&gt;Logging&lt;/code&gt; para crear eventos de registro; para esto, las macros de registro est&amp;aacute;ndar, como &lt;code&gt;@info&lt;/code&gt; , ya est&amp;aacute;n exportadas por &lt;code&gt;Base&lt;/code&gt; y est&amp;aacute;n disponibles de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="6a681da6b0fa29ce81a94277f5bd3f0a9276fbf0" translate="yes" xml:space="preserve">
          <source>Utility Collections</source>
          <target state="translated">Colecciones de servicios públicos</target>
        </trans-unit>
        <trans-unit id="d8041011401dc800a6ef88f382bc39cf1b615aba" translate="yes" xml:space="preserve">
          <source>V (vector)</source>
          <target state="translated">V (vector)</target>
        </trans-unit>
        <trans-unit id="18ba99a2e2b417b08555df0928741485f7c523bd" translate="yes" xml:space="preserve">
          <source>V (vectors)</source>
          <target state="translated">V (vectores)</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="66771bf9a86898929e11d8280264a532271f941a" translate="yes" xml:space="preserve">
          <source>Val</source>
          <target state="translated">Val</target>
        </trans-unit>
        <trans-unit id="08dd90402b12e9c88291ba119e611cc5ba9ab615" translate="yes" xml:space="preserve">
          <source>Valid rounding modes for &lt;code&gt;round(::Period, ::T, ::RoundingMode)&lt;/code&gt; are &lt;code&gt;RoundNearestTiesUp&lt;/code&gt; (default), &lt;code&gt;RoundDown&lt;/code&gt; (&lt;code&gt;floor&lt;/code&gt;), and &lt;code&gt;RoundUp&lt;/code&gt; (&lt;code&gt;ceil&lt;/code&gt;).</source>
          <target state="translated">Los modos v&amp;aacute;lidos de redondeo para &lt;code&gt;round(::Period, ::T, ::RoundingMode)&lt;/code&gt; son &lt;code&gt;RoundNearestTiesUp&lt;/code&gt; (por defecto), &lt;code&gt;RoundDown&lt;/code&gt; ( &lt;code&gt;floor&lt;/code&gt; ), y &lt;code&gt;RoundUp&lt;/code&gt; ( &lt;code&gt;ceil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e229542993641075d277cab335befb1ae3dc141e" translate="yes" xml:space="preserve">
          <source>Valid rounding modes for &lt;code&gt;round(::TimeType, ::Period, ::RoundingMode)&lt;/code&gt; are &lt;code&gt;RoundNearestTiesUp&lt;/code&gt; (default), &lt;code&gt;RoundDown&lt;/code&gt; (&lt;code&gt;floor&lt;/code&gt;), and &lt;code&gt;RoundUp&lt;/code&gt; (&lt;code&gt;ceil&lt;/code&gt;).</source>
          <target state="translated">Los modos v&amp;aacute;lidos de redondeo para la &lt;code&gt;round(::TimeType, ::Period, ::RoundingMode)&lt;/code&gt; son &lt;code&gt;RoundNearestTiesUp&lt;/code&gt; (por defecto), &lt;code&gt;RoundDown&lt;/code&gt; ( &lt;code&gt;floor&lt;/code&gt; ), y &lt;code&gt;RoundUp&lt;/code&gt; ( &lt;code&gt;ceil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="1177a18f70b2bb097f1359141743708a01d953b5" translate="yes" xml:space="preserve">
          <source>Value (Int)</source>
          <target state="translated">Valor (Int)</target>
        </trans-unit>
        <trans-unit id="a746d4614f2c8d263b81621b92d48c15618301c7" translate="yes" xml:space="preserve">
          <source>Value returned by &lt;code&gt;IteratorEltype(IterType)&lt;/code&gt;</source>
          <target state="translated">Valor devuelto por &lt;code&gt;IteratorEltype(IterType)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="696aa1f3090aa306169dbbcd87d65ab566c6fb8e" translate="yes" xml:space="preserve">
          <source>Value returned by &lt;code&gt;IteratorSize(IterType)&lt;/code&gt;</source>
          <target state="translated">Valor devuelto por &lt;code&gt;IteratorSize(IterType)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8dbeffeaf7d26e3574474d9149c27ff30a4b3dcd" translate="yes" xml:space="preserve">
          <source>Values can also be specified inside a &lt;code&gt;begin&lt;/code&gt; block, e.g.</source>
          <target state="translated">Los valores tambi&amp;eacute;n se pueden especificar dentro de un bloque de &lt;code&gt;begin&lt;/code&gt; , por ejemplo</target>
        </trans-unit>
        <trans-unit id="58b8d8e0cc20bd561990f4bb053e439ba7b1a7a6" translate="yes" xml:space="preserve">
          <source>Values can be converted to &lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt;&lt;code&gt;Float32&lt;/code&gt;&lt;/a&gt; easily:</source>
          <target state="translated">Los valores se pueden convertir a &lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt; &lt;code&gt;Float32&lt;/code&gt; &lt;/a&gt; f&amp;aacute;cilmente:</target>
        </trans-unit>
        <trans-unit id="54fd969a40a4590a5e37b505ecdc00c8fcdea460" translate="yes" xml:space="preserve">
          <source>Values can be interpolated into &lt;code&gt;@async&lt;/code&gt; via &lt;code&gt;$&lt;/code&gt;, which copies the value directly into the constructed underlying closure. This allows you to insert the &lt;em&gt;value&lt;/em&gt; of a variable, isolating the aysnchronous code from changes to the variable's value in the current task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cd2449da5e0e91d48452010ff76e262ea87fcd" translate="yes" xml:space="preserve">
          <source>Values can be interpolated into &lt;code&gt;@spawn&lt;/code&gt; via &lt;code&gt;$&lt;/code&gt;, which copies the value directly into the constructed underlying closure. This allows you to insert the &lt;em&gt;value&lt;/em&gt; of a variable, isolating the aysnchronous code from changes to the variable's value in the current task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf483076f265858393b29ed989b1873d2e7a8e3" translate="yes" xml:space="preserve">
          <source>Values that are normally unordered, such as &lt;code&gt;NaN&lt;/code&gt;, are ordered in an arbitrary but consistent fashion. &lt;a href=&quot;#Base.missing&quot;&gt;&lt;code&gt;missing&lt;/code&gt;&lt;/a&gt; values are ordered last.</source>
          <target state="translated">Los valores que normalmente est&amp;aacute;n desordenados, como &lt;code&gt;NaN&lt;/code&gt; , se ordenan de forma arbitraria pero coherente. &lt;a href=&quot;#Base.missing&quot;&gt; &lt;code&gt;missing&lt;/code&gt; &lt;/a&gt; valores perdidos se ordenan al final.</target>
        </trans-unit>
        <trans-unit id="03572b0c8598fe7cd07df82b0e9920bb7de722a3" translate="yes" xml:space="preserve">
          <source>Vararg Tuple Types</source>
          <target state="translated">Tipos de Tupla Vararg</target>
        </trans-unit>
        <trans-unit id="382fbc37c5cfb465437b195cd4bad0fff65a9b68" translate="yes" xml:space="preserve">
          <source>Varargs Functions</source>
          <target state="translated">Funciones de las Varargs</target>
        </trans-unit>
        <trans-unit id="47b78c15d0fa2b4ea4d1d2b05e8208800687165c" translate="yes" xml:space="preserve">
          <source>Varargs are supported with the following convention:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="df9191935912f85d859043667e9941151178e6c8" translate="yes" xml:space="preserve">
          <source>Variable names must begin with a letter (A-Z or a-z), underscore, or a subset of Unicode code points greater than 00A0; in particular, &lt;a href=&quot;http://www.fileformat.info/info/unicode/category/index.htm&quot;&gt;Unicode character categories&lt;/a&gt; Lu/Ll/Lt/Lm/Lo/Nl (letters), Sc/So (currency and other symbols), and a few other letter-like characters (e.g. a subset of the Sm math symbols) are allowed. Subsequent characters may also include ! and digits (0-9 and other characters in categories Nd/No), as well as other Unicode code points: diacritics and other modifying marks (categories Mn/Mc/Me/Sk), some punctuation connectors (category Pc), primes, and a few other characters.</source>
          <target state="translated">Los nombres de las variables deben comenzar con una letra (AZ o az), un gui&amp;oacute;n bajo o un subconjunto de puntos de c&amp;oacute;digo Unicode mayor que 00A0; en particular, las &lt;a href=&quot;http://www.fileformat.info/info/unicode/category/index.htm&quot;&gt;categor&amp;iacute;as de caracteres Unicode&lt;/a&gt; Lu / Ll / Lt / Lm / Lo / Nl (letras), Sc / So (moneda y otros s&amp;iacute;mbolos) y algunos otros caracteres similares a letras (por ejemplo, un subconjunto de los s&amp;iacute;mbolos matem&amp;aacute;ticos Sm) son permitido. Los personajes posteriores tambi&amp;eacute;n pueden incluir! y d&amp;iacute;gitos (0-9 y otros caracteres de las categor&amp;iacute;as Nd / No), as&amp;iacute; como otros puntos de c&amp;oacute;digo Unicode: signos diacr&amp;iacute;ticos y otros signos modificadores (categor&amp;iacute;as Mn / Mc / Me / Sk), algunos conectores de puntuaci&amp;oacute;n (categor&amp;iacute;a Pc), n&amp;uacute;meros primos, y algunos otros personajes.</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="973c98f8ec2704255a1037ca6cefd4104098ec96" translate="yes" xml:space="preserve">
          <source>Variables can also have lower bounds:</source>
          <target state="translated">Las variables también pueden tener límites más bajos:</target>
        </trans-unit>
        <trans-unit id="6312673cd4e08ae646a5dc5b0fa180b46d3ef898" translate="yes" xml:space="preserve">
          <source>Variant of &lt;a href=&quot;#Base.Sort.partialsort!&quot;&gt;&lt;code&gt;partialsort!&lt;/code&gt;&lt;/a&gt; which copies &lt;code&gt;v&lt;/code&gt; before partially sorting it, thereby returning the same thing as &lt;code&gt;partialsort!&lt;/code&gt; but leaving &lt;code&gt;v&lt;/code&gt; unmodified.</source>
          <target state="translated">Variante de clasificaci&amp;oacute;n &lt;a href=&quot;#Base.Sort.partialsort!&quot;&gt; &lt;code&gt;partialsort!&lt;/code&gt; &lt;/a&gt;que copia &lt;code&gt;v&lt;/code&gt; antes de ordenarlo parcialmente, &amp;iexcl;devolviendo as&amp;iacute; lo mismo que el orden parcial &lt;code&gt;partialsort!&lt;/code&gt; pero dejando &lt;code&gt;v&lt;/code&gt; sin modificar.</target>
        </trans-unit>
        <trans-unit id="ea0d65af26fddc33c72a84dbe68995163f1d5904" translate="yes" xml:space="preserve">
          <source>Variant of &lt;a href=&quot;#Base.sort!&quot;&gt;&lt;code&gt;sort!&lt;/code&gt;&lt;/a&gt; that returns a sorted copy of &lt;code&gt;v&lt;/code&gt; leaving &lt;code&gt;v&lt;/code&gt; itself unmodified.</source>
          <target state="translated">&amp;iexcl;Variante de &lt;a href=&quot;#Base.sort!&quot;&gt; &lt;code&gt;sort!&lt;/code&gt; &lt;/a&gt;que devuelve una copia ordenada de &lt;code&gt;v&lt;/code&gt; dejando &lt;code&gt;v&lt;/code&gt; sin modificar.</target>
        </trans-unit>
        <trans-unit id="099e0303f2658cdf82256a3185bfb0c3094bde80" translate="yes" xml:space="preserve">
          <source>Various types of iterable containers will be introduced and discussed in later sections of the manual (see, e.g., &lt;a href=&quot;../arrays/index#man-multi-dim-arrays&quot;&gt;Multi-dimensional Arrays&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6ba2473e2753b36bcc2d690f41319c47e7d4f9" translate="yes" xml:space="preserve">
          <source>Various types of iterable containers will be introduced and discussed in later sections of the manual (see, e.g., &lt;a href=&quot;../arrays/index#man-multi-dim-arrays-1&quot;&gt;Multi-dimensional Arrays&lt;/a&gt;).</source>
          <target state="translated">Se introducir&amp;aacute;n y discutir&amp;aacute;n varios tipos de contenedores iterables en secciones posteriores del manual (ver, por ejemplo, &lt;a href=&quot;../arrays/index#man-multi-dim-arrays-1&quot;&gt;Matrices multidimensionales&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f625899326d51a58569ee688860f4767ebf2e302" translate="yes" xml:space="preserve">
          <source>VecOrMat</source>
          <target state="translated">VecOrMat</target>
        </trans-unit>
        <trans-unit id="a57e06f45491067f031284fb03d3a20a0abf04fd" translate="yes" xml:space="preserve">
          <source>Vector</source>
          <target state="translated">Vector</target>
        </trans-unit>
        <trans-unit id="e681c39f4e2c29eed8261e191272b7fca77a9c4b" translate="yes" xml:space="preserve">
          <source>Vector Or Cross Product</source>
          <target state="translated">Vector o producto cruzado</target>
        </trans-unit>
        <trans-unit id="ce239837ecd44e25f6f247a56fa730d6a4823074" translate="yes" xml:space="preserve">
          <source>Vector type for storing sparse vectors.</source>
          <target state="translated">Tipo de vector para almacenar vectores dispersos.</target>
        </trans-unit>
        <trans-unit id="8bbbd2eeb202ade49225a4f2e7942a3447ab3322" translate="yes" xml:space="preserve">
          <source>Vector()</source>
          <target state="translated">Vector()</target>
        </trans-unit>
        <trans-unit id="13b136054b35a3cebfee1d05d794ba71cbd26cf1" translate="yes" xml:space="preserve">
          <source>Vectorized &quot;dot&quot; operators</source>
          <target state="translated">Operadores de &quot;puntos&quot; vectorizados</target>
        </trans-unit>
        <trans-unit id="bc9291e5dce9436485c2013f50e2ce1162733428" translate="yes" xml:space="preserve">
          <source>Vectors and multidimensional arrays of integers</source>
          <target state="translated">Vectores y conjuntos multidimensionales de números enteros</target>
        </trans-unit>
        <trans-unit id="9b7af30a2daf7acc8dfa153d97b4943cb1e0d136" translate="yes" xml:space="preserve">
          <source>Verifies that a credential is ready for use in authentication.</source>
          <target state="translated">Verifica que una credencial está lista para ser utilizada en la autenticación.</target>
        </trans-unit>
        <trans-unit id="cc0c6486c895f3039458f341e76e91cb7780448a" translate="yes" xml:space="preserve">
          <source>Version Number Literals</source>
          <target state="translated">Número de versión Literal</target>
        </trans-unit>
        <trans-unit id="840940d2b34c4d5b1ded250105162a1f63ce0844" translate="yes" xml:space="preserve">
          <source>Version number type which follow the specifications of &lt;a href=&quot;https://semver.org/&quot;&gt;semantic versioning&lt;/a&gt;, composed of major, minor and patch numeric values, followed by pre-release and build alpha-numeric annotations. See also &lt;a href=&quot;#Base.@v_str&quot;&gt;&lt;code&gt;@v_str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tipo de n&amp;uacute;mero de versi&amp;oacute;n que sigue las especificaciones del &lt;a href=&quot;https://semver.org/&quot;&gt;control&lt;/a&gt; de versiones sem&amp;aacute;ntico , compuesto por valores num&amp;eacute;ricos principales, secundarios y de parche, seguidos de anotaciones alfanum&amp;eacute;ricas de prelanzamiento y compilaci&amp;oacute;n. V&amp;eacute;ase tambi&amp;eacute;n &lt;a href=&quot;#Base.@v_str&quot;&gt; &lt;code&gt;@v_str&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a725950201de2fb1ac976f520070a65a2e88a90c" translate="yes" xml:space="preserve">
          <source>Version numbers can easily be expressed with non-standard string literals of the form &lt;a href=&quot;../../base/base/index#Base.@v_str&quot;&gt;&lt;code&gt;v&quot;...&quot;&lt;/code&gt;&lt;/a&gt;. Version number literals create &lt;a href=&quot;../../base/base/index#Base.VersionNumber&quot;&gt;&lt;code&gt;VersionNumber&lt;/code&gt;&lt;/a&gt; objects which follow the specifications of &lt;a href=&quot;https://semver.org/&quot;&gt;semantic versioning&lt;/a&gt;, and therefore are composed of major, minor and patch numeric values, followed by pre-release and build alpha-numeric annotations. For example, &lt;code&gt;v&quot;0.2.1-rc1+win64&quot;&lt;/code&gt; is broken into major version &lt;code&gt;0&lt;/code&gt;, minor version &lt;code&gt;2&lt;/code&gt;, patch version &lt;code&gt;1&lt;/code&gt;, pre-release &lt;code&gt;rc1&lt;/code&gt; and build &lt;code&gt;win64&lt;/code&gt;. When entering a version literal, everything except the major version number is optional, therefore e.g. &lt;code&gt;v&quot;0.2&quot;&lt;/code&gt; is equivalent to &lt;code&gt;v&quot;0.2.0&quot;&lt;/code&gt; (with empty pre-release/build annotations), &lt;code&gt;v&quot;2&quot;&lt;/code&gt; is equivalent to &lt;code&gt;v&quot;2.0.0&quot;&lt;/code&gt;, and so on.</source>
          <target state="translated">Los n&amp;uacute;meros de versi&amp;oacute;n se pueden expresar f&amp;aacute;cilmente con cadenas literales no est&amp;aacute;ndar de la forma &lt;a href=&quot;../../base/base/index#Base.@v_str&quot;&gt; &lt;code&gt;v&quot;...&quot;&lt;/code&gt; &lt;/a&gt; . Los literales de n&amp;uacute;mero de versi&amp;oacute;n crean objetos &lt;a href=&quot;../../base/base/index#Base.VersionNumber&quot;&gt; &lt;code&gt;VersionNumber&lt;/code&gt; &lt;/a&gt; que siguen las especificaciones del &lt;a href=&quot;https://semver.org/&quot;&gt;control&lt;/a&gt; de versiones sem&amp;aacute;ntico y, por lo tanto, se componen de valores num&amp;eacute;ricos principales, secundarios y de parche, seguidos de anotaciones alfanum&amp;eacute;ricas de prelanzamiento y compilaci&amp;oacute;n. Por ejemplo, &lt;code&gt;v&quot;0.2.1-rc1+win64&quot;&lt;/code&gt; se divide en la versi&amp;oacute;n principal &lt;code&gt;0&lt;/code&gt; , la versi&amp;oacute;n secundaria &lt;code&gt;2&lt;/code&gt; , la versi&amp;oacute;n de parche &lt;code&gt;1&lt;/code&gt; , la versi&amp;oacute;n &lt;code&gt;rc1&lt;/code&gt; y la compilaci&amp;oacute;n &lt;code&gt;win64&lt;/code&gt; . Al ingresar un literal de versi&amp;oacute;n, todo excepto el n&amp;uacute;mero de versi&amp;oacute;n principal es opcional, por lo tanto, por ejemplo, &lt;code&gt;v&quot;0.2&quot;&lt;/code&gt; es equivalente a &lt;code&gt;v&quot;0.2.0&quot;&lt;/code&gt; (con anotaciones vac&amp;iacute;as de pre-lanzamiento / compilaci&amp;oacute;n), &lt;code&gt;v&quot;2&quot;&lt;/code&gt; es equivalente a &lt;code&gt;v&quot;2.0.0&quot;&lt;/code&gt; , y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="74ca9be91c967075fcdd2bbc6d1263539be41f2a" translate="yes" xml:space="preserve">
          <source>VersionNumber</source>
          <target state="translated">VersionNumber</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">Versioning</target>
        </trans-unit>
        <trans-unit id="6c837db00b975f19f0ba6c749c7f02fb45a75996" translate="yes" xml:space="preserve">
          <source>Vertical Bar Beside Right Triangle</source>
          <target state="translated">Barra vertical junto al triángulo rectángulo</target>
        </trans-unit>
        <trans-unit id="a468f19138c967f465d18bb3d4e19b98f3336def" translate="yes" xml:space="preserve">
          <source>Vertical Bar Beside Right Triangle + Combining Long Solidus Overlay / Non-Spacing Long Slash Overlay</source>
          <target state="translated">Barra vertical junto al triángulo rectángulo+Combinación de superposición de sólidos largos/superposición de barras largas no espaciadas</target>
        </trans-unit>
        <trans-unit id="d0c79970994459f8933a235bb69e83cc040e00e6" translate="yes" xml:space="preserve">
          <source>Vertical Bar Double Left Turnstile</source>
          <target state="translated">Barra vertical Doble Torniquete izquierdo</target>
        </trans-unit>
        <trans-unit id="3a4b1492c64df3b0ebe959084058d3c7e44acaf3" translate="yes" xml:space="preserve">
          <source>Vertical Ellipsis</source>
          <target state="translated">Elipsis vertical</target>
        </trans-unit>
        <trans-unit id="85654619bc65a9e5e4aa04358cadb455bde3f5f4" translate="yes" xml:space="preserve">
          <source>Vertical Traffic Light</source>
          <target state="translated">Semáforo vertical</target>
        </trans-unit>
        <trans-unit id="0fd57d0e0d51781315415bae3e4dcd95ee338231" translate="yes" xml:space="preserve">
          <source>Very Much Greater-Than / Very Much Greater Than</source>
          <target state="translated">Mucho más grande que/mucho más grande que</target>
        </trans-unit>
        <trans-unit id="dcb7da13aed9121a1d37058fdbf6964b34d24029" translate="yes" xml:space="preserve">
          <source>Very Much Less-Than / Very Much Less Than</source>
          <target state="translated">Mucho menos que/mucho menos que</target>
        </trans-unit>
        <trans-unit id="8b22dde6a21b3a00457b198409a5900843726950" translate="yes" xml:space="preserve">
          <source>Very few operations are defined on Colons directly; instead they are converted by &lt;a href=&quot;#Base.to_indices&quot;&gt;&lt;code&gt;to_indices&lt;/code&gt;&lt;/a&gt; to an internal vector type (&lt;code&gt;Base.Slice&lt;/code&gt;) to represent the collection of indices they span before being used.</source>
          <target state="translated">Muy pocas operaciones se definen en Colons directamente; en su lugar, son convertidos por &lt;a href=&quot;#Base.to_indices&quot;&gt; &lt;code&gt;to_indices&lt;/code&gt; &lt;/a&gt; a un tipo de vector interno ( &lt;code&gt;Base.Slice&lt;/code&gt; ) para representar la colecci&amp;oacute;n de &amp;iacute;ndices que abarcan antes de ser utilizados.</target>
        </trans-unit>
        <trans-unit id="76dfb3491d119e5519addb4c3e23e281cad05fa2" translate="yes" xml:space="preserve">
          <source>Vibration Mode</source>
          <target state="translated">Modo de vibración</target>
        </trans-unit>
        <trans-unit id="00416ac0206eeb19bcbdaefda8ab643c20b70d6c" translate="yes" xml:space="preserve">
          <source>Victory Hand</source>
          <target state="translated">Mano de la victoria</target>
        </trans-unit>
        <trans-unit id="0cc4b58b439f3228d73765f0de7bf812cc9b4238" translate="yes" xml:space="preserve">
          <source>Video Camera</source>
          <target state="translated">Cámara de video</target>
        </trans-unit>
        <trans-unit id="7f01866ab45271f0dfa12184523966d4a3b5815e" translate="yes" xml:space="preserve">
          <source>Video Game</source>
          <target state="translated">Videojuego</target>
        </trans-unit>
        <trans-unit id="2c80f0cab4afba2fa27c199aefcd29cf64ce8dbf" translate="yes" xml:space="preserve">
          <source>Videocassette</source>
          <target state="translated">Videocassette</target>
        </trans-unit>
        <trans-unit id="9568ab6197c20797ef7250c030ffac3b0cf028d7" translate="yes" xml:space="preserve">
          <source>Viewdata Square</source>
          <target state="translated">Plaza Viewdata</target>
        </trans-unit>
        <trans-unit id="ed1e68321de928793ee07ea5fe03956e64af46bb" translate="yes" xml:space="preserve">
          <source>Viewing a stack trace</source>
          <target state="translated">Viendo el rastro de una pila</target>
        </trans-unit>
        <trans-unit id="5e0bd50fdb165ff5eea765ea67ef0112f77cca8d" translate="yes" xml:space="preserve">
          <source>Views (SubArrays and other view types)</source>
          <target state="translated">Vistas (SubArrays y otros tipos de vistas)</target>
        </trans-unit>
        <trans-unit id="c64d3409dcdd8152fa3df75455bfc567c1050921" translate="yes" xml:space="preserve">
          <source>Violin</source>
          <target state="translated">Violin</target>
        </trans-unit>
        <trans-unit id="0f6f6df133ed6ac243cb306e16b3c97677996488" translate="yes" xml:space="preserve">
          <source>Virgo</source>
          <target state="translated">Virgo</target>
        </trans-unit>
        <trans-unit id="310ab3071155ff081bc588d8dce0840f2c1db5b6" translate="yes" xml:space="preserve">
          <source>Visit this &lt;a href=&quot;https://julialang.org/blog/2019/07/multithreading/&quot;&gt;blog post&lt;/a&gt; for a presentation of Julia multi-threading features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423f1f3d80c4d824ca917e13649a5c584a13ec87" translate="yes" xml:space="preserve">
          <source>Visual Studio Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea2c5b5f236297f327f1c4b74f3faa6e41a0626" translate="yes" xml:space="preserve">
          <source>Volcano</source>
          <target state="translated">Volcano</target>
        </trans-unit>
        <trans-unit id="3435bdb02b0cd637470f09185300f98914ecbabf" translate="yes" xml:space="preserve">
          <source>Volume Integral</source>
          <target state="translated">Volumen integral</target>
        </trans-unit>
        <trans-unit id="4a22d4b48472fa25ad58e33b26aad65175777536" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Five Eighths / Fraction Five Eighths</source>
          <target state="translated">Fracción Vulgar Cinco Octavos/Fracción Cinco Octavos</target>
        </trans-unit>
        <trans-unit id="2ffaa1b3f0a7068587451e32ec2d77c7b9fca7af" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Five Sixths / Fraction Five Sixths</source>
          <target state="translated">Fracción Vulgar Cinco Sextos/Fracción Cinco Sextos</target>
        </trans-unit>
        <trans-unit id="e4f79cd34a21bf7565ffa9564108d106398b89f9" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Four Fifths / Fraction Four Fifths</source>
          <target state="translated">Fracción Vulgar Cuatro Quintos/Fracción Cuatro Quintos</target>
        </trans-unit>
        <trans-unit id="de91e6ed7b9551ac836b4b7620665dd412d396bc" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Eighth / Fraction One Eighth</source>
          <target state="translated">Fracción vulgar un octavo/Fracción un octavo</target>
        </trans-unit>
        <trans-unit id="73a5459d60b79f176337ca7f2581a21e48217ad1" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Fifth / Fraction One Fifth</source>
          <target state="translated">Fracción Vulgar Un Quinto/Fracción Un Quinto</target>
        </trans-unit>
        <trans-unit id="a03faa6cb45424752e687589d775c2e7ca16d904" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Half / Fraction One Half</source>
          <target state="translated">Fracción Vulgar Una Mitad/Fracción Una Mitad</target>
        </trans-unit>
        <trans-unit id="4a49020d16507f59e732507c20917b4f04877588" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Ninth</source>
          <target state="translated">La novena fracción vulgar</target>
        </trans-unit>
        <trans-unit id="fc2cd9a24a1b8820b1de3f240e0c733e1b2cb00f" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Quarter / Fraction One Quarter</source>
          <target state="translated">Fracción Vulgar Un Cuarto/Fracción Un Cuarto</target>
        </trans-unit>
        <trans-unit id="c3dc27da6531a07b9639c96eeb57f3c6166b854d" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Seventh</source>
          <target state="translated">Fracción Vulgar Uno Sieteavo</target>
        </trans-unit>
        <trans-unit id="a5b497ee93232519615401c8f274683da6ac9e31" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Sixth / Fraction One Sixth</source>
          <target state="translated">Fracción Vulgar Un Sexto/Fracción Un Sexto</target>
        </trans-unit>
        <trans-unit id="ada7f7ea5dfbd4c19ba9c3e580d06159c80a1e52" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Tenth</source>
          <target state="translated">Fracción vulgar un décimo</target>
        </trans-unit>
        <trans-unit id="4fe9918b0f58d14d507e3c3ac80d2abe0b2b2c00" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction One Third / Fraction One Third</source>
          <target state="translated">Fracción vulgar un tercio/Fracción un tercio</target>
        </trans-unit>
        <trans-unit id="533f02ec1b18beabada67383f82de17ba9397a9f" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Seven Eighths / Fraction Seven Eighths</source>
          <target state="translated">Fracción Vulgar Siete Ocho/Fracción Siete Ocho</target>
        </trans-unit>
        <trans-unit id="772183d1aa4241b593aae736d3517cb349b6502d" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Three Eighths / Fraction Three Eighths</source>
          <target state="translated">Fracción vulgar tres octavos/Fracción tres octavos</target>
        </trans-unit>
        <trans-unit id="f41956a7c6db371ccf04a21004f0afd7c3fdfbb0" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Three Fifths / Fraction Three Fifths</source>
          <target state="translated">Fracción vulgar tres quintos/Fracción tres quintos</target>
        </trans-unit>
        <trans-unit id="96bbd2d7245dd133a3f9a78e5320abff3ef4e207" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Three Quarters / Fraction Three Quarters</source>
          <target state="translated">Fracción Vulgar Tres Cuartos/Fracción Tres Cuartos</target>
        </trans-unit>
        <trans-unit id="e3ae2856dd94274c80a8e6426b4994dc2779632b" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Two Fifths / Fraction Two Fifths</source>
          <target state="translated">Fracción vulgar dos quintos/Fracción dos quintos</target>
        </trans-unit>
        <trans-unit id="7fa906e09060606fdcb3fd3c63c507358187596c" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Two Thirds / Fraction Two Thirds</source>
          <target state="translated">Fracción Vulgar Dos Tercios/Fracción Dos Tercios</target>
        </trans-unit>
        <trans-unit id="924c01e5f46e201273bd64cb92dc787e33fcf371" translate="yes" xml:space="preserve">
          <source>Vulgar Fraction Zero Thirds</source>
          <target state="translated">Fracción Vulgar Cero Tercios</target>
        </trans-unit>
        <trans-unit id="0746ad7fab8b17b9696764cb8215894c325800cd" translate="yes" xml:space="preserve">
          <source>Wait for a Task to finish, then return its result value. If the task fails with an exception, a &lt;code&gt;TaskFailedException&lt;/code&gt; (which wraps the failed task) is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700756d9987ff8eb1bf98e15bdd0cb4f7b0b4c43" translate="yes" xml:space="preserve">
          <source>Wait for a Task to finish, then return its result value. If the task fails with an exception, the exception is propagated (re-thrown in the task that called fetch).</source>
          <target state="translated">Espere a que una tarea termine,y luego devuelva su valor de resultado.Si la tarea falla con una excepción,la excepción se propaga (se vuelve a lanzar en la tarea que se llama fetch).</target>
        </trans-unit>
        <trans-unit id="673aefa6be6107ab62aedf7c032815d166f52464" translate="yes" xml:space="preserve">
          <source>Wait for a value to become available for the specified &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Espere a que un valor est&amp;eacute; disponible para el &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; especificado .</target>
        </trans-unit>
        <trans-unit id="8ead67a72786e6cde16e53095e4c792246b473f0" translate="yes" xml:space="preserve">
          <source>Wait for a value to become available on the specified &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Espere a que un valor est&amp;eacute; disponible en el &lt;a href=&quot;../../stdlib/distributed/index#Distributed.RemoteChannel&quot;&gt; &lt;code&gt;RemoteChannel&lt;/code&gt; &lt;/a&gt; especificado .</target>
        </trans-unit>
        <trans-unit id="a2da391139615691051e202fac8e36602c8d8b55" translate="yes" xml:space="preserve">
          <source>Wait for and get a value from a &lt;a href=&quot;#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt;. Exceptions raised are the same as for a &lt;a href=&quot;#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Does not remove the item fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26af15450a38e48475b5ea5e4cb3ccfc6b0ebec8" translate="yes" xml:space="preserve">
          <source>Wait for and get a value from a &lt;a href=&quot;#Distributed.RemoteChannel&quot;&gt;&lt;code&gt;RemoteChannel&lt;/code&gt;&lt;/a&gt;. Exceptions raised are the same as for a &lt;code&gt;Future&lt;/code&gt;. Does not remove the item fetched.</source>
          <target state="translated">Espere y obtenga un valor de &lt;a href=&quot;#Distributed.RemoteChannel&quot;&gt; &lt;code&gt;RemoteChannel&lt;/code&gt; &lt;/a&gt; . Las excepciones planteadas son las mismas que para un &lt;code&gt;Future&lt;/code&gt; . No elimina el art&amp;iacute;culo recuperado.</target>
        </trans-unit>
        <trans-unit id="6f9cad1615350aa88fc30de4eb3475c1aec850b6" translate="yes" xml:space="preserve">
          <source>Wait for and get the first available item from the channel. Does not remove the item. &lt;code&gt;fetch&lt;/code&gt; is unsupported on an unbuffered (0-size) channel.</source>
          <target state="translated">Espere y obtenga el primer elemento disponible del canal. No quita el art&amp;iacute;culo. &lt;code&gt;fetch&lt;/code&gt; no es compatible con un canal sin b&amp;uacute;fer (tama&amp;ntilde;o 0).</target>
        </trans-unit>
        <trans-unit id="352dbfcf93af85a3591da1d5ec38648c6abb53e1" translate="yes" xml:space="preserve">
          <source>Wait for and get the value of a &lt;a href=&quot;#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. The fetched value is cached locally. Further calls to &lt;code&gt;fetch&lt;/code&gt; on the same reference return the cached value. If the remote value is an exception, throws a &lt;a href=&quot;#Distributed.RemoteException&quot;&gt;&lt;code&gt;RemoteException&lt;/code&gt;&lt;/a&gt; which captures the remote exception and backtrace.</source>
          <target state="translated">Espere y obtenga el valor de un &lt;a href=&quot;#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; . El valor obtenido se almacena en cach&amp;eacute; localmente. Las llamadas adicionales para &lt;code&gt;fetch&lt;/code&gt; la misma referencia devuelven el valor almacenado en cach&amp;eacute;. Si el valor remoto es una excepci&amp;oacute;n, lanza una &lt;a href=&quot;#Distributed.RemoteException&quot;&gt; &lt;code&gt;RemoteException&lt;/code&gt; &lt;/a&gt; que captura la excepci&amp;oacute;n remota y el rastreo.</target>
        </trans-unit>
        <trans-unit id="6b7b622d11b105cf23e49505960529494a392b04" translate="yes" xml:space="preserve">
          <source>Wait for one of the &lt;code&gt;sem_size&lt;/code&gt; permits to be available, blocking until one can be acquired.</source>
          <target state="translated">Espere a que est&amp;eacute; disponible uno de los permisos &lt;code&gt;sem_size&lt;/code&gt; , bloqueando hasta que pueda adquirir uno.</target>
        </trans-unit>
        <trans-unit id="a017114c4d0dd517c996d0a2c594edadea16c041" translate="yes" xml:space="preserve">
          <source>Wait until all lexically-enclosed uses of &lt;code&gt;@async&lt;/code&gt;, &lt;code&gt;@spawn&lt;/code&gt;, &lt;code&gt;@spawnat&lt;/code&gt; and &lt;code&gt;@distributed&lt;/code&gt; are complete. All exceptions thrown by enclosed async operations are collected and thrown as a &lt;code&gt;CompositeException&lt;/code&gt;.</source>
          <target state="translated">Espere hasta que se completen todos los usos encerrados en el &lt;code&gt;@async&lt;/code&gt; de @async , &lt;code&gt;@spawn&lt;/code&gt; , &lt;code&gt;@spawnat&lt;/code&gt; y &lt;code&gt;@distributed&lt;/code&gt; . Todas las excepciones generadas por operaciones asincr&amp;oacute;nicas adjuntas se recopilan y generan como una &lt;code&gt;CompositeException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72fc4cb0feac4737de18649536c986d639721b93" translate="yes" xml:space="preserve">
          <source>Waiting tasks are woken after an initial delay of &lt;code&gt;delay&lt;/code&gt; seconds, and then repeating with the given &lt;code&gt;interval&lt;/code&gt; in seconds. If &lt;code&gt;interval&lt;/code&gt; is equal to &lt;code&gt;0&lt;/code&gt;, the timer is only triggered once. When the timer is closed (by &lt;a href=&quot;../io-network/index#Base.close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; waiting tasks are woken with an error. Use &lt;a href=&quot;../io-network/index#Base.isopen&quot;&gt;&lt;code&gt;isopen&lt;/code&gt;&lt;/a&gt; to check whether a timer is still active.</source>
          <target state="translated">Las tareas en espera se despiertan despu&amp;eacute;s de un retraso inicial de segundos de &lt;code&gt;delay&lt;/code&gt; , y luego se repiten con el &lt;code&gt;interval&lt;/code&gt; o dado en segundos. Si el &lt;code&gt;interval&lt;/code&gt; o es igual a &lt;code&gt;0&lt;/code&gt; , el temporizador solo se activa una vez. Cuando el temporizador est&amp;aacute; cerrado (al &lt;a href=&quot;../io-network/index#Base.close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; las tareas de espera se despiertan con un error. Utilice &lt;a href=&quot;../io-network/index#Base.isopen&quot;&gt; &lt;code&gt;isopen&lt;/code&gt; &lt;/a&gt; para comprobar si un temporizador sigue activo.</target>
        </trans-unit>
        <trans-unit id="1071d3e2d3b79d4d8bb7daf85adf19588062a6b7" translate="yes" xml:space="preserve">
          <source>Waiting tasks are woken and the function &lt;code&gt;callback&lt;/code&gt; is called after an initial delay of &lt;code&gt;delay&lt;/code&gt; seconds, and then repeating with the given &lt;code&gt;interval&lt;/code&gt; in seconds. If &lt;code&gt;interval&lt;/code&gt; is equal to &lt;code&gt;0&lt;/code&gt;, the timer is only triggered once. The function &lt;code&gt;callback&lt;/code&gt; is called with a single argument, the timer itself. When the timer is closed (by &lt;a href=&quot;../io-network/index#Base.close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; waiting tasks are woken with an error. Use &lt;a href=&quot;../io-network/index#Base.isopen&quot;&gt;&lt;code&gt;isopen&lt;/code&gt;&lt;/a&gt; to check whether a timer is still active.</source>
          <target state="translated">Las tareas en espera se despiertan y la funci&amp;oacute;n de &lt;code&gt;callback&lt;/code&gt; se llama despu&amp;eacute;s de un retraso inicial de segundos de &lt;code&gt;delay&lt;/code&gt; , y luego se repite con el &lt;code&gt;interval&lt;/code&gt; o dado en segundos. Si el &lt;code&gt;interval&lt;/code&gt; o es igual a &lt;code&gt;0&lt;/code&gt; , el temporizador solo se activa una vez. La funci&amp;oacute;n de &lt;code&gt;callback&lt;/code&gt; se llama con un solo argumento, el temporizador en s&amp;iacute;. Cuando el temporizador est&amp;aacute; cerrado (al &lt;a href=&quot;../io-network/index#Base.close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; las tareas de espera se despiertan con un error. Utilice &lt;a href=&quot;../io-network/index#Base.isopen&quot;&gt; &lt;code&gt;isopen&lt;/code&gt; &lt;/a&gt; para comprobar si un temporizador sigue activo.</target>
        </trans-unit>
        <trans-unit id="384445ca71f292b1676c085911adc7efa7f44a24" translate="yes" xml:space="preserve">
          <source>Waits until &lt;code&gt;testcb&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; or for &lt;code&gt;secs&lt;/code&gt; seconds, whichever is earlier. &lt;code&gt;testcb&lt;/code&gt; is polled every &lt;code&gt;pollint&lt;/code&gt; seconds.</source>
          <target state="translated">Espera hasta que &lt;code&gt;testcb&lt;/code&gt; retornos &lt;code&gt;true&lt;/code&gt; o para &lt;code&gt;secs&lt;/code&gt; segundos, lo que ocurra primero. &lt;code&gt;testcb&lt;/code&gt; es sondeado cada &lt;code&gt;pollint&lt;/code&gt; segundos.</target>
        </trans-unit>
        <trans-unit id="8a6f339c134e36072927cf0fd66259fb6ad6c909" translate="yes" xml:space="preserve">
          <source>Waits until &lt;code&gt;testcb&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; or for &lt;code&gt;timeout&lt;/code&gt; seconds, whichever is earlier. &lt;code&gt;testcb&lt;/code&gt; is polled every &lt;code&gt;pollint&lt;/code&gt; seconds. The minimum duration for &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;pollint&lt;/code&gt; is 1 millisecond or &lt;code&gt;0.001&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fe2746e814a18dfed92008014ef09975c04f23" translate="yes" xml:space="preserve">
          <source>Wake up tasks waiting for a condition, passing them &lt;code&gt;val&lt;/code&gt;. If &lt;code&gt;all&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (the default), all waiting tasks are woken, otherwise only one is. If &lt;code&gt;error&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the passed value is raised as an exception in the woken tasks.</source>
          <target state="translated">Despertar tareas en espera de una condici&amp;oacute;n, pas&amp;aacute;ndolas &lt;code&gt;val&lt;/code&gt; . Si &lt;code&gt;all&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; (el valor predeterminado), todas las tareas en espera se despiertan; de lo contrario, solo una. Si el &lt;code&gt;error&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; , el valor pasado se genera como una excepci&amp;oacute;n en las tareas activadas.</target>
        </trans-unit>
        <trans-unit id="2ab901b7e5b8bd4f885d9c6a8cbc8ae091c1b076" translate="yes" xml:space="preserve">
          <source>Waning Crescent Moon Symbol</source>
          <target state="translated">Símbolo de la luna creciente menguante</target>
        </trans-unit>
        <trans-unit id="5ca89a5dd3637ddb705adb67e86886b8842de63a" translate="yes" xml:space="preserve">
          <source>Waning Gibbous Moon Symbol</source>
          <target state="translated">Símbolo de la Luna de Gibbous en extinción</target>
        </trans-unit>
        <trans-unit id="3009d557c90c919cd9d0ea8a12b75430344b5929" translate="yes" xml:space="preserve">
          <source>Warn</source>
          <target state="translated">Warn</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="b32fd871aad45a3830f5319cd5329b94c1730bca" translate="yes" xml:space="preserve">
          <source>Warning Sign</source>
          <target state="translated">Señal de advertencia</target>
        </trans-unit>
        <trans-unit id="2e960da975b92f1fcb07b7378eb672fc07701597" translate="yes" xml:space="preserve">
          <source>Warning: do not implement these methods if the underlying storage is not actually strided, as it may lead to incorrect results or segmentation faults.</source>
          <target state="translated">Advertencia:no aplique estos métodos si el almacenamiento subyacente no está realmente en marcha,ya que puede dar lugar a resultados incorrectos o a fallos de segmentación.</target>
        </trans-unit>
        <trans-unit id="d91ebf5887cf9ee3c9f843d1887a6d922dc78c46" translate="yes" xml:space="preserve">
          <source>Watch</source>
          <target state="translated">Watch</target>
        </trans-unit>
        <trans-unit id="95dfef8d44a4bee27fe25561a3c9c0487432f65b" translate="yes" xml:space="preserve">
          <source>Watch file or directory &lt;code&gt;path&lt;/code&gt; for changes until a change occurs or &lt;code&gt;timeout_s&lt;/code&gt; seconds have elapsed.</source>
          <target state="translated">Observe si hay cambios en la &lt;code&gt;path&lt;/code&gt; archivo o directorio hasta que se produzca un cambio o hayan transcurrido los segundos de &lt;code&gt;timeout_s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59134ad32d2b5206214dcf33380079d24664842d" translate="yes" xml:space="preserve">
          <source>Watches a file or directory &lt;code&gt;path&lt;/code&gt; for changes until a change has occurred or &lt;code&gt;timeout_s&lt;/code&gt; seconds have elapsed.</source>
          <target state="translated">&lt;code&gt;timeout_s&lt;/code&gt; &lt;code&gt;path&lt;/code&gt; un archivo o directorio en busca de cambios hasta que se haya producido un cambio o hayan transcurrido los segundos de timeout_s .</target>
        </trans-unit>
        <trans-unit id="1ca35816415b36528899a025f235ead5b493c4c6" translate="yes" xml:space="preserve">
          <source>Water Buffalo</source>
          <target state="translated">Búfalo de agua</target>
        </trans-unit>
        <trans-unit id="e06db6b2e3d7113b354825a671bcfd66f3f37636" translate="yes" xml:space="preserve">
          <source>Water Closet</source>
          <target state="translated">Armario de agua</target>
        </trans-unit>
        <trans-unit id="26d7518c22143e2c303ad5d3b3b76e99881c89f4" translate="yes" xml:space="preserve">
          <source>Water Wave</source>
          <target state="translated">Ola de agua</target>
        </trans-unit>
        <trans-unit id="654a5083667369ba4ea98c6fad0fba9b362d84f9" translate="yes" xml:space="preserve">
          <source>Watermelon</source>
          <target state="translated">Watermelon</target>
        </trans-unit>
        <trans-unit id="efcfd2863140aff2c4eb2bdd6fa9656ad7057054" translate="yes" xml:space="preserve">
          <source>Wave Arrow Pointing Directly Left</source>
          <target state="translated">Flecha de onda apuntando directamente a la izquierda</target>
        </trans-unit>
        <trans-unit id="1d1fa735e928bfc4e19cadbd3eae648f435c998b" translate="yes" xml:space="preserve">
          <source>Waving Hand Sign</source>
          <target state="translated">Señal con la mano</target>
        </trans-unit>
        <trans-unit id="5f0c28665bc4f163773e677f770df64f28f10a09" translate="yes" xml:space="preserve">
          <source>Wavy Dash</source>
          <target state="translated">Wavy Dash</target>
        </trans-unit>
        <trans-unit id="78a2e376b64ecbcd255eac49c815de57f72c8cc7" translate="yes" xml:space="preserve">
          <source>Waxing Crescent Moon Symbol</source>
          <target state="translated">Símbolo de la luna creciente en cera</target>
        </trans-unit>
        <trans-unit id="369994eb3b0ebd5d85b9b8c5c1054fdb4a4e6a45" translate="yes" xml:space="preserve">
          <source>Waxing Gibbous Moon Symbol</source>
          <target state="translated">El símbolo de la luna de Gibbous encerado</target>
        </trans-unit>
        <trans-unit id="3761de263d1138df106d8089687e0582792188a8" translate="yes" xml:space="preserve">
          <source>We also define a convenience wrapper for a &lt;code&gt;SharedArray&lt;/code&gt; implementation</source>
          <target state="translated">Tambi&amp;eacute;n definimos un contenedor de conveniencia para una implementaci&amp;oacute;n &lt;code&gt;SharedArray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cd7937c29f83be5fa8d995ae61932aae9d922a0" translate="yes" xml:space="preserve">
          <source>We can also specify multiple packages at once:</source>
          <target state="translated">También podemos especificar varios paquetes a la vez:</target>
        </trans-unit>
        <trans-unit id="0cf25eada1cacba577a55ee72c0083a1f8723a92" translate="yes" xml:space="preserve">
          <source>We can ask for information about the active environment by using &lt;code&gt;status&lt;/code&gt;:</source>
          <target state="translated">Podemos solicitar informaci&amp;oacute;n sobre el entorno activo usando &lt;code&gt;status&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e272c4ad190b0938bc9c69088b0d3965bfa5c474" translate="yes" xml:space="preserve">
          <source>We can now execute &lt;code&gt;sub2ind_gen_impl&lt;/code&gt; and examine the expression it returns:</source>
          <target state="translated">Ahora podemos ejecutar &lt;code&gt;sub2ind_gen_impl&lt;/code&gt; y examinar la expresi&amp;oacute;n que devuelve:</target>
        </trans-unit>
        <trans-unit id="6faffdfd84b81290f711f7dea5e21f96d49747fe" translate="yes" xml:space="preserve">
          <source>We can put our tests for the &lt;code&gt;foo(x)&lt;/code&gt; function in a test set:</source>
          <target state="translated">Podemos poner nuestras pruebas para la funci&amp;oacute;n &lt;code&gt;foo(x)&lt;/code&gt; en un conjunto de pruebas:</target>
        </trans-unit>
        <trans-unit id="908493f843edf7ee66a6309d8ae472662e884e33" translate="yes" xml:space="preserve">
          <source>We can see &lt;code&gt;tutorial&lt;/code&gt; now contains &lt;code&gt;Example&lt;/code&gt; as a dependency.</source>
          <target state="translated">Podemos ver que el &lt;code&gt;tutorial&lt;/code&gt; ahora contiene &lt;code&gt;Example&lt;/code&gt; como una dependencia.</target>
        </trans-unit>
        <trans-unit id="965750ca8edc73d5edaf9b850ece4c5b04a1af65" translate="yes" xml:space="preserve">
          <source>We can see that the &lt;code&gt;&quot;human&quot;&lt;/code&gt; literal has been interpolated into the expression.</source>
          <target state="translated">Podemos ver que el literal &lt;code&gt;&quot;human&quot;&lt;/code&gt; se ha interpolado en la expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="41d616faac9f0af3ed6de89012b5a9c6f5afd1ce" translate="yes" xml:space="preserve">
          <source>We can see that the first two code units in the string &lt;code&gt;s&lt;/code&gt; form an overlong encoding of space character. It is invalid, but is accepted in a string as a single character. The next two code units form a valid start of a three-byte UTF-8 sequence. However, the fifth code unit &lt;code&gt;\xe2&lt;/code&gt; is not its valid continuation. Therefore code units 3 and 4 are also interpreted as malformed characters in this string. Similarly code unit 5 forms a malformed character because &lt;code&gt;|&lt;/code&gt; is not a valid continuation to it. Finally the string &lt;code&gt;s2&lt;/code&gt; contains one too high code point.</source>
          <target state="translated">Podemos ver que las dos primeras unidades de c&amp;oacute;digo en la cadena &lt;code&gt;s&lt;/code&gt; forman una codificaci&amp;oacute;n demasiado larga de caracteres de espacio. No es v&amp;aacute;lido, pero se acepta en una cadena como un solo car&amp;aacute;cter. Las siguientes dos unidades de c&amp;oacute;digo forman un comienzo v&amp;aacute;lido de una secuencia UTF-8 de tres bytes. Sin embargo, la quinta unidad de c&amp;oacute;digo &lt;code&gt;\xe2&lt;/code&gt; no es su continuaci&amp;oacute;n v&amp;aacute;lida. Por lo tanto, las unidades de c&amp;oacute;digo 3 y 4 tambi&amp;eacute;n se interpretan como caracteres mal formados en esta cadena. De manera similar, la unidad de c&amp;oacute;digo 5 forma un car&amp;aacute;cter incorrecto porque &lt;code&gt;|&lt;/code&gt; no es una continuaci&amp;oacute;n v&amp;aacute;lida. Finalmente, la cadena &lt;code&gt;s2&lt;/code&gt; contiene un punto de c&amp;oacute;digo demasiado alto.</target>
        </trans-unit>
        <trans-unit id="5ec722680d02359489f3e45fa2c4562e09c9cd1c" translate="yes" xml:space="preserve">
          <source>We can see the &lt;a href=&quot;#Base.Filesystem.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt; has been modified by &lt;code&gt;touch&lt;/code&gt;.</source>
          <target state="translated">Podemos ver que &lt;a href=&quot;#Base.Filesystem.mtime&quot;&gt; &lt;code&gt;mtime&lt;/code&gt; &lt;/a&gt; ha sido modificado al &lt;code&gt;touch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05b69d4e7a91a49ec3c428dbce42702598bb1b02" translate="yes" xml:space="preserve">
          <source>We can test the info message using</source>
          <target state="translated">Podemos probar el mensaje de información usando</target>
        </trans-unit>
        <trans-unit id="d2480cee187d2cc1cc597f470eaeb54baa754265" translate="yes" xml:space="preserve">
          <source>We can use many of the builtin methods that work with iterables, like &lt;a href=&quot;../../base/collections/index#Base.in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../stdlib/statistics/index#Statistics.mean&quot;&gt;&lt;code&gt;mean&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../stdlib/statistics/index#Statistics.std&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;Statistics&lt;/code&gt; standard library module:</source>
          <target state="translated">Podemos usar muchos de los m&amp;eacute;todos incorporados que funcionan con iterables, como &lt;a href=&quot;../../base/collections/index#Base.in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; , o &lt;a href=&quot;../../stdlib/statistics/index#Statistics.mean&quot;&gt; &lt;code&gt;mean&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../../stdlib/statistics/index#Statistics.std&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt; del m&amp;oacute;dulo de biblioteca est&amp;aacute;ndar de &lt;code&gt;Statistics&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="863e927f5402597cd052d4595ad76ea62614af53" translate="yes" xml:space="preserve">
          <source>We can verify that this constructor works and constructs objects that are, in fact, self-referential:</source>
          <target state="translated">Podemos verificar que este constructor trabaja y construye objetos que son,de hecho,auto-referenciales:</target>
        </trans-unit>
        <trans-unit id="8792a0f0d8b29fc2a8023ec8a7dd90ce3d0d4dbf" translate="yes" xml:space="preserve">
          <source>We can view the quoted return expression using the function &lt;a href=&quot;../../base/base/index#Base.macroexpand&quot;&gt;&lt;code&gt;macroexpand&lt;/code&gt;&lt;/a&gt; (&lt;strong&gt;important note:&lt;/strong&gt; this is an extremely useful tool for debugging macros):</source>
          <target state="translated">Podemos ver la expresi&amp;oacute;n de retorno entre comillas usando la funci&amp;oacute;n &lt;a href=&quot;../../base/base/index#Base.macroexpand&quot;&gt; &lt;code&gt;macroexpand&lt;/code&gt; &lt;/a&gt; ( &lt;strong&gt;nota importante:&lt;/strong&gt; esta es una herramienta extremadamente &amp;uacute;til para depurar macros):</target>
        </trans-unit>
        <trans-unit id="d4c6277bb37a454f2d70270bbbbe4dad7ec0b9f7" translate="yes" xml:space="preserve">
          <source>We define &lt;code&gt;prod(())&lt;/code&gt; to be 1, and the total number of elements in an array is the product of the size. The size of a zero-dimensional array is &lt;code&gt;()&lt;/code&gt;, and therefore its length is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Definimos &lt;code&gt;prod(())&lt;/code&gt; como 1, y el n&amp;uacute;mero total de elementos en una matriz es el producto del tama&amp;ntilde;o. El tama&amp;ntilde;o de una matriz de dimensi&amp;oacute;n cero es &lt;code&gt;()&lt;/code&gt; y, por lo tanto, su longitud es &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f52fa955d41415a30b99848d48db3fb9c65e8a90" translate="yes" xml:space="preserve">
          <source>We define a &lt;code&gt;dlclose()&lt;/code&gt; method that accepts a parameter of type &lt;code&gt;Nothing&lt;/code&gt;, so that user code does not have to change its behavior for the case that &lt;code&gt;library_name&lt;/code&gt; was not found.</source>
          <target state="translated">Definimos un m&amp;eacute;todo &lt;code&gt;dlclose()&lt;/code&gt; que acepta un par&amp;aacute;metro de tipo &lt;code&gt;Nothing&lt;/code&gt; , para que el c&amp;oacute;digo de usuario no tenga que cambiar su comportamiento en el caso de que no se encuentre &lt;code&gt;library_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc149b91af6eb560f65443e1ee253cae2c610859" translate="yes" xml:space="preserve">
          <source>We find that global names are frequently constants, and declaring them as such greatly improves performance:</source>
          <target state="translated">Encontramos que los nombres globales son frecuentemente constantes,y declararlos como tales mejora enormemente el rendimiento:</target>
        </trans-unit>
        <trans-unit id="483b04db385b0851198da03cd29da645e4ce9af2" translate="yes" xml:space="preserve">
          <source>We have already seen a function &lt;code&gt;f(::Expr...) -&amp;gt; Expr&lt;/code&gt; in a previous section. In fact, &lt;a href=&quot;../../base/base/index#Base.macroexpand&quot;&gt;&lt;code&gt;macroexpand&lt;/code&gt;&lt;/a&gt; is also such a function. So, why do macros exist?</source>
          <target state="translated">Ya hemos visto una funci&amp;oacute;n &lt;code&gt;f(::Expr...) -&amp;gt; Expr&lt;/code&gt; en una secci&amp;oacute;n anterior. De hecho, &lt;a href=&quot;../../base/base/index#Base.macroexpand&quot;&gt; &lt;code&gt;macroexpand&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n es una funci&amp;oacute;n de este tipo. Entonces, &amp;iquest;por qu&amp;eacute; existen las macros?</target>
        </trans-unit>
        <trans-unit id="344d6b40dfaca1361099ea7869e0ae03b90d8acf" translate="yes" xml:space="preserve">
          <source>We have now covered all the local scope rules, but before wrapping up this section, perhaps a few words should be said about why the ambiguous soft scope case is handled differently in interactive and non-interactive contexts. There are two obvious questions one could ask:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6795658430c35f4c900b3f1e2f337a0f0021d3be" translate="yes" xml:space="preserve">
          <source>We have said that a parametric type like &lt;code&gt;Ptr&lt;/code&gt; acts as a supertype of all its instances (&lt;code&gt;Ptr{Int64}&lt;/code&gt; etc.). How does this work? &lt;code&gt;Ptr&lt;/code&gt; itself cannot be a normal data type, since without knowing the type of the referenced data the type clearly cannot be used for memory operations. The answer is that &lt;code&gt;Ptr&lt;/code&gt; (or other parametric types like &lt;code&gt;Array&lt;/code&gt;) is a different kind of type called a &lt;a href=&quot;../../base/base/index#Core.UnionAll&quot;&gt;&lt;code&gt;UnionAll&lt;/code&gt;&lt;/a&gt; type. Such a type expresses the &lt;em&gt;iterated union&lt;/em&gt; of types for all values of some parameter.</source>
          <target state="translated">Hemos dicho que un tipo param&amp;eacute;trico como &lt;code&gt;Ptr&lt;/code&gt; act&amp;uacute;a como un supertipo de todas sus instancias ( &lt;code&gt;Ptr{Int64}&lt;/code&gt; etc.). &amp;iquest;Como funciona esto? &lt;code&gt;Ptr&lt;/code&gt; en s&amp;iacute; no puede ser un tipo de datos normal, ya que sin conocer el tipo de datos referenciados, el tipo claramente no puede usarse para operaciones de memoria. La respuesta es que &lt;code&gt;Ptr&lt;/code&gt; (u otros tipos param&amp;eacute;tricos como &lt;code&gt;Array&lt;/code&gt; ) es un tipo diferente llamado tipo &lt;a href=&quot;../../base/base/index#Core.UnionAll&quot;&gt; &lt;code&gt;UnionAll&lt;/code&gt; &lt;/a&gt; . Tal tipo expresa la &lt;em&gt;uni&amp;oacute;n iterada&lt;/em&gt; de tipos para todos los valores de alg&amp;uacute;n par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="636e3e40c3c73838a97fed4217e3ac9db49c3e9d" translate="yes" xml:space="preserve">
          <source>We now add some new definitions for &lt;code&gt;f(x)&lt;/code&gt;:</source>
          <target state="translated">Ahora agregamos algunas definiciones nuevas para &lt;code&gt;f(x)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cfea8865c7e95aca15b99514b9e0cd50e09aceff" translate="yes" xml:space="preserve">
          <source>We now use &lt;code&gt;Regex(&quot;1&quot;)&lt;/code&gt; instead of &lt;code&gt;r&quot;1&quot;&lt;/code&gt; to make sure that Julia creates separate instances of &lt;code&gt;Regex&lt;/code&gt; object for each entry of &lt;code&gt;rx&lt;/code&gt; vector.</source>
          <target state="translated">Ahora usamos &lt;code&gt;Regex(&quot;1&quot;)&lt;/code&gt; lugar de &lt;code&gt;r&quot;1&quot;&lt;/code&gt; para asegurarnos de que Julia crea instancias separadas del objeto &lt;code&gt;Regex&lt;/code&gt; para cada entrada del vector &lt;code&gt;rx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec35a5b84bcc09ce12511e4f9859c93b1a12cef2" translate="yes" xml:space="preserve">
          <source>We pass the &lt;code&gt;r&lt;/code&gt; vector to &lt;code&gt;g_fix&lt;/code&gt; as generating several RGNs is an expensive operation so we do not want to repeat it every time we run the function.</source>
          <target state="translated">Pasamos el vector &lt;code&gt;r&lt;/code&gt; a &lt;code&gt;g_fix&lt;/code&gt; ya que generar varios RGN es una operaci&amp;oacute;n costosa, por lo que no queremos repetirla cada vez que ejecutamos la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="581b814b87b04c0b0319df4ca93ccb93aadd9579" translate="yes" xml:space="preserve">
          <source>We provide examples for each of these. We assume here that the choice of algorithm is independent of the RNG, so we use &lt;code&gt;AbstractRNG&lt;/code&gt; in our signatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18a4ee9acbd3ff8d3e3a474425776415e254fbf" translate="yes" xml:space="preserve">
          <source>We should mention here that this is far from a complete picture of defining functions. Julia has a sophisticated type system and allows multiple dispatch on argument types. None of the examples given here provide any type annotations on their arguments, meaning that they are applicable to all types of arguments. The type system is described in &lt;a href=&quot;../types/index#man-types&quot;&gt;Types&lt;/a&gt; and defining a function in terms of methods chosen by multiple dispatch on run-time argument types is described in &lt;a href=&quot;../methods/index#Methods&quot;&gt;Methods&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7268f16539c91dcce2fef5a6e0c3e4f4529fa7f0" translate="yes" xml:space="preserve">
          <source>We should mention here that this is far from a complete picture of defining functions. Julia has a sophisticated type system and allows multiple dispatch on argument types. None of the examples given here provide any type annotations on their arguments, meaning that they are applicable to all types of arguments. The type system is described in &lt;a href=&quot;../types/index#man-types-1&quot;&gt;Types&lt;/a&gt; and defining a function in terms of methods chosen by multiple dispatch on run-time argument types is described in &lt;a href=&quot;../methods/index#Methods-1&quot;&gt;Methods&lt;/a&gt;.</source>
          <target state="translated">Debemos mencionar aqu&amp;iacute; que esto est&amp;aacute; lejos de ser una imagen completa de la definici&amp;oacute;n de funciones. Julia tiene un sistema de tipos sofisticado y permite el env&amp;iacute;o m&amp;uacute;ltiple de tipos de argumentos. Ninguno de los ejemplos proporcionados aqu&amp;iacute; proporciona anotaciones de tipo en sus argumentos, lo que significa que son aplicables a todo tipo de argumentos. El sistema de tipos se describe en &lt;a href=&quot;../types/index#man-types-1&quot;&gt;Tipos&lt;/a&gt; y la definici&amp;oacute;n de una funci&amp;oacute;n en t&amp;eacute;rminos de m&amp;eacute;todos elegidos por env&amp;iacute;o m&amp;uacute;ltiple en tipos de argumentos en tiempo de ejecuci&amp;oacute;n se describe en &lt;a href=&quot;../methods/index#Methods-1&quot;&gt;M&amp;eacute;todos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2a67f0f52d7f08e2b4d80e7a86d1e32e2246dae" translate="yes" xml:space="preserve">
          <source>We start 4 workers to process a single &lt;code&gt;jobs&lt;/code&gt; remote channel. Jobs, identified by an id (&lt;code&gt;job_id&lt;/code&gt;), are written to the channel. Each remotely executing task in this simulation reads a &lt;code&gt;job_id&lt;/code&gt;, waits for a random amount of time and writes back a tuple of &lt;code&gt;job_id&lt;/code&gt;, time taken and its own &lt;code&gt;pid&lt;/code&gt; to the results channel. Finally all the &lt;code&gt;results&lt;/code&gt; are printed out on the master process.</source>
          <target state="translated">Iniciamos 4 trabajadores para procesar un solo canal remoto de &lt;code&gt;jobs&lt;/code&gt; . Los trabajos, identificados por un id ( &lt;code&gt;job_id&lt;/code&gt; ), se escriben en el canal. Cada tarea que se ejecuta de forma remota en esta simulaci&amp;oacute;n lee un &lt;code&gt;job_id&lt;/code&gt; , espera una cantidad de tiempo aleatoria y escribe una tupla de &lt;code&gt;job_id&lt;/code&gt; , el tiempo empleado y su propio &lt;code&gt;pid&lt;/code&gt; en el canal de resultados. Finalmente, todos los &lt;code&gt;results&lt;/code&gt; se imprimen en el proceso maestro.</target>
        </trans-unit>
        <trans-unit id="c7602ad29472f270cdd747ca5767f7b21541f864" translate="yes" xml:space="preserve">
          <source>We start by opening Visual Studio and creating a new Console Application project. To the 'stdafx.h' header file, add the following lines at the end:</source>
          <target state="translated">Empezamos abriendo Visual Studio y creando un nuevo proyecto de Aplicación de Consola.En el archivo de cabecera 'stdafx.h',añade las siguientes líneas al final:</target>
        </trans-unit>
        <trans-unit id="5e7e52dbeb18f4aab9e295bb6c3fe3b794d7460e" translate="yes" xml:space="preserve">
          <source>We start with a simple C program that initializes Julia and calls some Julia code:</source>
          <target state="translated">Empezamos con un simple programa C que inicializa a Julia y llama a algún código de Julia:</target>
        </trans-unit>
        <trans-unit id="1ec966563751785e709c57a1206d5b2323de7847" translate="yes" xml:space="preserve">
          <source>We strongly encourage you to try all these examples to see how they work.</source>
          <target state="translated">Le recomendamos encarecidamente que pruebe todos estos ejemplos para ver cómo funcionan.</target>
        </trans-unit>
        <trans-unit id="c178bdaf4eca20bba89f0485a67fed8fb6985604" translate="yes" xml:space="preserve">
          <source>We will first consider Julia &lt;a href=&quot;../control-flow/index#man-tasks-1&quot;&gt;Tasks (aka Coroutines)&lt;/a&gt; and other modules that rely on the Julia runtime library, that allow us to suspend and resume computations with full control of inter-&lt;code&gt;Tasks&lt;/code&gt; communication without having to manually interface with the operating system's scheduler. Julia also supports communication between &lt;code&gt;Tasks&lt;/code&gt; through operations like &lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;fetch&lt;/code&gt;. Communication and data synchronization is managed through &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s, which are the conduits that provide inter-&lt;code&gt;Tasks&lt;/code&gt; communication.</source>
          <target state="translated">Primero consideraremos Julia &lt;a href=&quot;../control-flow/index#man-tasks-1&quot;&gt;Tasks (tambi&amp;eacute;n conocido como Coroutines)&lt;/a&gt; y otros m&amp;oacute;dulos que se basan en la biblioteca de tiempo de ejecuci&amp;oacute;n de Julia, que nos permiten suspender y reanudar los c&amp;aacute;lculos con control total de la comunicaci&amp;oacute;n entre &lt;code&gt;Tasks&lt;/code&gt; sin tener que interactuar manualmente con el programador del sistema operativo. Julia tambi&amp;eacute;n admite la comunicaci&amp;oacute;n entre &lt;code&gt;Tasks&lt;/code&gt; trav&amp;eacute;s de operaciones como &lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt; y &lt;code&gt;fetch&lt;/code&gt; . La comunicaci&amp;oacute;n y sincronizaci&amp;oacute;n de datos se gestiona a trav&amp;eacute;s de los &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; , que son los conductos que proporcionan la comunicaci&amp;oacute;n entre &lt;code&gt;Tasks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd2f826c12c0cde32ff9c2aa3aacbda20d8da94e" translate="yes" xml:space="preserve">
          <source>We'll begin with a nice and clear-cut situation&amp;mdash;assignment inside of a hard scope, in this case a function body, when no local variable by that name already exists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bf173ec6449dfc053db0f852d649e379980987" translate="yes" xml:space="preserve">
          <source>WeakKeyDict</source>
          <target state="translated">WeakKeyDict</target>
        </trans-unit>
        <trans-unit id="f0314de0c1d3e072ee0c5f34821e6e9260b516aa" translate="yes" xml:space="preserve">
          <source>Weary Cat Face</source>
          <target state="translated">Cara de gato cansada</target>
        </trans-unit>
        <trans-unit id="acc7d3ff4cf1bd52c5872adea707797a48176eb4" translate="yes" xml:space="preserve">
          <source>Weary Face</source>
          <target state="translated">Cara cansada</target>
        </trans-unit>
        <trans-unit id="ee2bf9bdc622233451493a19e0f78f4514fdb969" translate="yes" xml:space="preserve">
          <source>Wedding</source>
          <target state="translated">Wedding</target>
        </trans-unit>
        <trans-unit id="8bd12f2094b5f4ba0bbdd465685c8e4690ed946b" translate="yes" xml:space="preserve">
          <source>Welcome to the documentation for Julia 1.2.</source>
          <target state="translated">Bienvenido a la documentación de Julia 1.2.</target>
        </trans-unit>
        <trans-unit id="98684eeaaae0713e40f7faf02d029d7cc8b3c048" translate="yes" xml:space="preserve">
          <source>Welcome to the documentation for Julia 1.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be913c6a4cf9189e9c190ec0adc68e90e4c97e4" translate="yes" xml:space="preserve">
          <source>Whale</source>
          <target state="translated">Whale</target>
        </trans-unit>
        <trans-unit id="375144b7f845dc51bb4e72f8e608e2b7199156c4" translate="yes" xml:space="preserve">
          <source>What are the differences between zero-dimensional arrays and scalars?</source>
          <target state="translated">¿Cuáles son las diferencias entre los conjuntos de dimensiones cero y los escalares?</target>
        </trans-unit>
        <trans-unit id="e7076b54a9ebe6ee2099ef19db17f5603e67dda2" translate="yes" xml:space="preserve">
          <source>What are the possible causes of an &lt;code&gt;UndefVarError&lt;/code&gt; during remote execution?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;les son las posibles causas de un &lt;code&gt;UndefVarError&lt;/code&gt; durante la ejecuci&amp;oacute;n remota?</target>
        </trans-unit>
        <trans-unit id="28e8482c889872b755ea864c2a6346e9a0dc7c13" translate="yes" xml:space="preserve">
          <source>What does &quot;type-stable&quot; mean?</source>
          <target state="translated">¿Qué significa &quot;tipo estable&quot;?</target>
        </trans-unit>
        <trans-unit id="d18e5df2eb583dbf63c895d771307dc5beb0550b" translate="yes" xml:space="preserve">
          <source>What does the &lt;code&gt;...&lt;/code&gt; operator do?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; hace el &lt;code&gt;...&lt;/code&gt; operador?</target>
        </trans-unit>
        <trans-unit id="150404929053fe30c3fed0d87906c36fb8c409b2" translate="yes" xml:space="preserve">
          <source>What does this code do? Hint: it's a trick question. The answer is &quot;it depends.&quot; If this code is entered interactively, it behaves the same way it does in a function body. But if the code appears in a file, it prints an ambiguity warning and throws an undefined variable error. Let's see it working in the REPL first:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e403edfbacc5a9300178b028475d72c9ac7f144e" translate="yes" xml:space="preserve">
          <source>What follows is a quick overview of Pkg, Julia's package manager. It should help new users become familiar with basic Pkg features.</source>
          <target state="translated">Lo que sigue es una rápida visión general de Pkg,el administrador de paquetes de Julia.Debería ayudar a los nuevos usuarios a familiarizarse con las características básicas de Pkg.</target>
        </trans-unit>
        <trans-unit id="d2f2c51d6b2884ac3c8f43369210b486f5aba512" translate="yes" xml:space="preserve">
          <source>What follows is a very brief introduction to Pkg. For more information on &lt;code&gt;Project.toml&lt;/code&gt; files, &lt;code&gt;Manifest.toml&lt;/code&gt; files, package version compatibility (&lt;code&gt;[compat]&lt;/code&gt;), environments, registries, etc., it is highly recommended to read the full manual, which is available here: &lt;a href=&quot;https://julialang.github.io/Pkg.jl/v1/&quot;&gt;https://julialang.github.io/Pkg.jl/v1/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b5a9178463a6f64c403bbf3579ad70f39858c3" translate="yes" xml:space="preserve">
          <source>What follows is a very brief introduction to Pkg. It is highly recommended to read the full manual, which is available here: &lt;a href=&quot;https://julialang.github.io/Pkg.jl/v1/&quot;&gt;https://julialang.github.io/Pkg.jl/v1/&lt;/a&gt;.</source>
          <target state="translated">Lo que sigue es una breve introducci&amp;oacute;n a Pkg. Se recomienda leer el manual completo, que est&amp;aacute; disponible aqu&amp;iacute;: &lt;a href=&quot;https://julialang.github.io/Pkg.jl/v1/&quot;&gt;https://julialang.github.io/Pkg.jl/v1/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e1b405051e8aa0f8bb9f6f6cf42b1ad141a9ba2" translate="yes" xml:space="preserve">
          <source>What happens if &lt;code&gt;import Zebra&lt;/code&gt; is evaluated in the main &lt;code&gt;App&lt;/code&gt; code base? Since &lt;code&gt;Zebra&lt;/code&gt; does not appear in the project file, the import will fail even though &lt;code&gt;Zebra&lt;/code&gt;&lt;em&gt;does&lt;/em&gt; appear in the manifest file. Moreover, if &lt;code&gt;import Zebra&lt;/code&gt; occurs in the public &lt;code&gt;Priv&lt;/code&gt; package&amp;mdash;the one with UUID &lt;code&gt;2d15fe94-a1f7-436c-a4d8-07a9a496e01c&lt;/code&gt;&amp;mdash;then that would also fail since that &lt;code&gt;Priv&lt;/code&gt; package has no declared dependencies in the manifest file and therefore cannot load any packages. The &lt;code&gt;Zebra&lt;/code&gt; package can only be loaded by packages for which it appear as an explicit dependency in the manifest file: the &lt;code&gt;Pub&lt;/code&gt; package and one of the &lt;code&gt;Priv&lt;/code&gt; packages.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; sucede si la &lt;code&gt;import Zebra&lt;/code&gt; se eval&amp;uacute;a en la base de c&amp;oacute;digo de la &lt;code&gt;App&lt;/code&gt; principal ? Desde &lt;code&gt;Zebra&lt;/code&gt; no aparece en el archivo de proyecto, la importaci&amp;oacute;n fallar&amp;aacute; a pesar de &lt;code&gt;Zebra&lt;/code&gt; &lt;em&gt;no&lt;/em&gt; aparece en el archivo de manifiesto. Adem&amp;aacute;s, si la &lt;code&gt;import Zebra&lt;/code&gt; ocurre en el paquete &lt;code&gt;Priv&lt;/code&gt; p&amp;uacute;blico , el que tiene UUID &lt;code&gt;2d15fe94-a1f7-436c-a4d8-07a9a496e01c&lt;/code&gt; , eso tambi&amp;eacute;n fallar&amp;iacute;a ya que ese paquete &lt;code&gt;Priv&lt;/code&gt; no tiene dependencias declaradas en el archivo de manifiesto y, por lo tanto, no puede cargar ning&amp;uacute;n paquete. El paquete &lt;code&gt;Zebra&lt;/code&gt; solo se puede cargar mediante paquetes para los que aparece como una dependencia expl&amp;iacute;cita en el archivo de manifiesto: el &lt;code&gt;Pub&lt;/code&gt; paquete y uno de los paquetes &lt;code&gt;Priv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1df4ea25877d9225bf9beecd2604c556ef2f3aa4" translate="yes" xml:space="preserve">
          <source>What happens if we evaluate &lt;code&gt;foo&lt;/code&gt; again with a type that we have already used?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa si evaluamos &lt;code&gt;foo&lt;/code&gt; nuevamente con un tipo que ya hemos usado?</target>
        </trans-unit>
        <trans-unit id="e1b168674d9032058d87b14f2643e8b740569003" translate="yes" xml:space="preserve">
          <source>What if we repeat the process? What is the type of a type of a type? As it happens, types are all composite values and thus all have a type of &lt;code&gt;DataType&lt;/code&gt;:</source>
          <target state="translated">&amp;iquest;Y si repetimos el proceso? &amp;iquest;Cu&amp;aacute;l es el tipo de un tipo de un tipo? Da la casualidad de que los tipos son todos valores compuestos y, por lo tanto, todos tienen un tipo de &lt;code&gt;DataType&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="31c8231840d8c0a2ee8876da74fa758be586c4d5" translate="yes" xml:space="preserve">
          <source>What is brought into scope</source>
          <target state="translated">Lo que se pone en juego</target>
        </trans-unit>
        <trans-unit id="2b0c102525b96cde6901e5f5ceb8c7569053a70f" translate="yes" xml:space="preserve">
          <source>What is the difference between &quot;using&quot; and &quot;import&quot;?</source>
          <target state="translated">¿Cuál es la diferencia entre &quot;usar&quot; e &quot;importar&quot;?</target>
        </trans-unit>
        <trans-unit id="9bc322e3544ca572c436cc629f272e8f9083662e" translate="yes" xml:space="preserve">
          <source>What is the return value of an assignment?</source>
          <target state="translated">¿Cuál es el valor de retorno de una asignación?</target>
        </trans-unit>
        <trans-unit id="2269bad70018db37aa152079ee07e395e293de2e" translate="yes" xml:space="preserve">
          <source>What purpose do parametric abstract types like &lt;code&gt;Pointy&lt;/code&gt; serve? Consider if we create a point-like implementation that only requires a single coordinate because the point is on the diagonal line &lt;em&gt;x = y&lt;/em&gt;:</source>
          <target state="translated">&amp;iquest;Para qu&amp;eacute; sirven los tipos abstractos param&amp;eacute;tricos como &lt;code&gt;Pointy&lt;/code&gt; ? Considere si creamos una implementaci&amp;oacute;n similar a un punto que solo requiere una &amp;uacute;nica coordenada porque el punto est&amp;aacute; en la l&amp;iacute;nea diagonal &lt;em&gt;x = y&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="bd4e0eba4d9311f35f7a602da1112be78b3670c2" translate="yes" xml:space="preserve">
          <source>What's going on there? In the first line, we're adding 1 day to January 29th, which results in 2014-01-30; then we add 1 month, so we get 2014-02-30, which then adjusts down to 2014-02-28. In the second example, we add 1 month &lt;em&gt;first&lt;/em&gt;, where we get 2014-02-29, which adjusts down to 2014-02-28, and &lt;em&gt;then&lt;/em&gt; add 1 day, which results in 2014-03-01. One design principle that helps in this case is that, in the presence of multiple Periods, the operations will be ordered by the Periods' &lt;em&gt;types&lt;/em&gt;, not their value or positional order; this means &lt;code&gt;Year&lt;/code&gt; will always be added first, then &lt;code&gt;Month&lt;/code&gt;, then &lt;code&gt;Week&lt;/code&gt;, etc. Hence the following &lt;em&gt;does&lt;/em&gt; result in associativity and Just Works:</source>
          <target state="translated">&amp;iquest;Que esta pasando ah&amp;iacute;? En la primera l&amp;iacute;nea, estamos agregando 1 d&amp;iacute;a al 29 de enero, lo que resulta en 2014-01-30; luego agregamos 1 mes, por lo que obtenemos 2014-02-30, que luego se ajusta a 2014-02-28. En el segundo ejemplo, &lt;em&gt;primero&lt;/em&gt; agregamos 1 mes , donde obtenemos 2014-02-29, que se ajusta a 2014-02-28, y &lt;em&gt;luego&lt;/em&gt; agregamos 1 d&amp;iacute;a, lo que resulta en 2014-03-01. Un principio de dise&amp;ntilde;o que ayuda en este caso es que, en presencia de m&amp;uacute;ltiples per&amp;iacute;odos, las operaciones se ordenar&amp;aacute;n por los &lt;em&gt;tipos de&lt;/em&gt; per&amp;iacute;odos , no por su valor u orden posicional; esto significa que el &lt;code&gt;Year&lt;/code&gt; siempre se agregar&amp;aacute; primero, luego el &lt;code&gt;Month&lt;/code&gt; , luego la &lt;code&gt;Week&lt;/code&gt; , etc. Por lo tanto, lo siguiente &lt;em&gt;da como&lt;/em&gt; resultado asociatividad y Just Works:</target>
        </trans-unit>
        <trans-unit id="fdfb635074e8ec4cadb7236583c2872a090d4783" translate="yes" xml:space="preserve">
          <source>What's really going on here is that &lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;Point{Float64}&lt;/code&gt; and &lt;code&gt;Point{Int64}&lt;/code&gt; are all different constructor functions. In fact, &lt;code&gt;Point{T}&lt;/code&gt; is a distinct constructor function for each type &lt;code&gt;T&lt;/code&gt;. Without any explicitly provided inner constructors, the declaration of the composite type &lt;code&gt;Point{T&amp;lt;:Real}&lt;/code&gt; automatically provides an inner constructor, &lt;code&gt;Point{T}&lt;/code&gt;, for each possible type &lt;code&gt;T&amp;lt;:Real&lt;/code&gt;, that behaves just like non-parametric default inner constructors do. It also provides a single general outer &lt;code&gt;Point&lt;/code&gt; constructor that takes pairs of real arguments, which must be of the same type. This automatic provision of constructors is equivalent to the following explicit declaration:</source>
          <target state="translated">Lo que realmente est&amp;aacute; sucediendo aqu&amp;iacute; es que &lt;code&gt;Point&lt;/code&gt; , &lt;code&gt;Point{Float64}&lt;/code&gt; y &lt;code&gt;Point{Int64}&lt;/code&gt; son funciones de constructor diferentes. De hecho, &lt;code&gt;Point{T}&lt;/code&gt; es una funci&amp;oacute;n constructora distinta para cada tipo &lt;code&gt;T&lt;/code&gt; . Sin ning&amp;uacute;n constructor interno proporcionado expl&amp;iacute;citamente, la declaraci&amp;oacute;n del tipo compuesto &lt;code&gt;Point{T&amp;lt;:Real}&lt;/code&gt; proporciona autom&amp;aacute;ticamente un constructor interno, &lt;code&gt;Point{T}&lt;/code&gt; , para cada tipo posible &lt;code&gt;T&amp;lt;:Real&lt;/code&gt; , que se comporta como constructores internos no param&amp;eacute;tricos predeterminados hacer. Tambi&amp;eacute;n proporciona un &amp;uacute;nico &lt;code&gt;Point&lt;/code&gt; exterior generalconstructor que toma pares de argumentos reales, que deben ser del mismo tipo. Esta provisi&amp;oacute;n autom&amp;aacute;tica de constructores es equivalente a la siguiente declaraci&amp;oacute;n expl&amp;iacute;cita:</target>
        </trans-unit>
        <trans-unit id="dac94c61f72cef8a05dc1f143540e80e082b95ca" translate="yes" xml:space="preserve">
          <source>Wheelchair Symbol</source>
          <target state="translated">Símbolo de la silla de ruedas</target>
        </trans-unit>
        <trans-unit id="e372ad539a5b6f69cfecd518ffee27baf201194a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--depwarn=no&lt;/code&gt;, simply return the result of executing &lt;code&gt;expression&lt;/code&gt;. When &lt;code&gt;--depwarn=error&lt;/code&gt;, check that an ErrorException is thrown.</source>
          <target state="translated">Cuando &lt;code&gt;--depwarn=no&lt;/code&gt; , simplemente devuelve el resultado de ejecutar la &lt;code&gt;expression&lt;/code&gt; . Cuando &lt;code&gt;--depwarn=error&lt;/code&gt; , compruebe que se lanza una ErrorException.</target>
        </trans-unit>
        <trans-unit id="37a200d2bf2141bef32e094222abeb6ea685aeb4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--depwarn=yes&lt;/code&gt;, test that &lt;code&gt;expression&lt;/code&gt; emits a deprecation warning and return the value of &lt;code&gt;expression&lt;/code&gt;. The log message string will be matched against &lt;code&gt;pattern&lt;/code&gt; which defaults to &lt;code&gt;r&quot;deprecated&quot;i&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;--depwarn=yes&lt;/code&gt; , prueba que la &lt;code&gt;expression&lt;/code&gt; emite una advertencia de desaprobaci&amp;oacute;n y devuelve el valor de la &lt;code&gt;expression&lt;/code&gt; . La cadena del mensaje de registro se comparar&amp;aacute; con el &lt;code&gt;pattern&lt;/code&gt; que por defecto es &lt;code&gt;r&quot;deprecated&quot;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c1a8dc42946acafa81c5740aa21d2dee07993bf" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;@sayhello&lt;/code&gt; is entered in the REPL, the expression executes immediately, thus we only see the evaluation result:</source>
          <target state="translated">Cuando se ingresa &lt;code&gt;@sayhello&lt;/code&gt; en el REPL, la expresi&amp;oacute;n se ejecuta inmediatamente, por lo que solo vemos el resultado de la evaluaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="1e793eb591e046c76c38f6001e51ca3fa2243395" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;A&lt;/code&gt; is sparse, a similar polyalgorithm is used. For indefinite matrices, the &lt;code&gt;LDLt&lt;/code&gt; factorization does not use pivoting during the numerical factorization and therefore the procedure can fail even for invertible matrices.</source>
          <target state="translated">Cuando &lt;code&gt;A&lt;/code&gt; es escasa, se usa un polialgoritmo similar. Para matrices indefinidas, la factorizaci&amp;oacute;n &lt;code&gt;LDLt&lt;/code&gt; no utiliza pivotar durante la factorizaci&amp;oacute;n num&amp;eacute;rica y, por lo tanto, el procedimiento puede fallar incluso para matrices invertibles.</target>
        </trans-unit>
        <trans-unit id="5a8d30453be3346ceadf6f86b18d6a1b7d2c5482" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;abs&lt;/code&gt; is applied to signed integers, overflow may occur, resulting in the return of a negative value. This overflow occurs only when &lt;code&gt;abs&lt;/code&gt; is applied to the minimum representable value of a signed integer. That is, when &lt;code&gt;x == typemin(typeof(x))&lt;/code&gt;, &lt;code&gt;abs(x) == x &amp;lt; 0&lt;/code&gt;, not &lt;code&gt;-x&lt;/code&gt; as might be expected.</source>
          <target state="translated">Cuando se aplica &lt;code&gt;abs&lt;/code&gt; a enteros con signo, puede producirse un desbordamiento, lo que da como resultado la devoluci&amp;oacute;n de un valor negativo. Este desbordamiento ocurre solo cuando se aplica &lt;code&gt;abs&lt;/code&gt; al valor m&amp;iacute;nimo representable de un entero con signo. Es decir, cuando &lt;code&gt;x == typemin(typeof(x))&lt;/code&gt; , &lt;code&gt;abs(x) == x &amp;lt; 0&lt;/code&gt; , no &lt;code&gt;-x&lt;/code&gt; como podr&amp;iacute;a esperarse.</target>
        </trans-unit>
        <trans-unit id="7ef7f5c5a085d7dd04543fecd677114d5fd72981" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;check = true&lt;/code&gt;, an error is thrown if the decomposition fails. When &lt;code&gt;check = false&lt;/code&gt;, responsibility for checking the decomposition's validity (via &lt;a href=&quot;#LinearAlgebra.issuccess&quot;&gt;&lt;code&gt;issuccess&lt;/code&gt;&lt;/a&gt;) lies with the user.</source>
          <target state="translated">Cuando &lt;code&gt;check = true&lt;/code&gt; , se produce un error si falla la descomposici&amp;oacute;n. Cuando &lt;code&gt;check = false&lt;/code&gt; , la responsabilidad de verificar la validez de la descomposici&amp;oacute;n (a trav&amp;eacute;s de &lt;a href=&quot;#LinearAlgebra.issuccess&quot;&gt; &lt;code&gt;issuccess&lt;/code&gt; &lt;/a&gt; ) recae en el usuario.</target>
        </trans-unit>
        <trans-unit id="a2637af6fced184f7f479f36a4ece7d55ae2e730" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;data&lt;/code&gt; is not given, the buffer will be both readable and writable by default.</source>
          <target state="translated">Cuando no se proporcionan &lt;code&gt;data&lt;/code&gt; , el b&amp;uacute;fer ser&amp;aacute; legible y escribible de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="bb1635e94802425023fba8788c61c2d8926fff7d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;p=1&lt;/code&gt;, the operator norm is the maximum absolute column sum of &lt;code&gt;A&lt;/code&gt;:</source>
          <target state="translated">Cuando &lt;code&gt;p=1&lt;/code&gt; , la norma del operador es la m&amp;aacute;xima suma absoluta de columnas de &lt;code&gt;A&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="178ec586817b3a48abe80b928aa2dde1b98626f7" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;p=2&lt;/code&gt;, the operator norm is the spectral norm, equal to the largest singular value of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;p=2&lt;/code&gt; , la norma operador es la norma espectral, igual al valor singular m&amp;aacute;s grande de &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46c9763c674d94ae81ec6e72c5aee69686bbab29" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;p=Inf&lt;/code&gt;, the operator norm is the maximum absolute row sum of &lt;code&gt;A&lt;/code&gt;:</source>
          <target state="translated">Cuando &lt;code&gt;p=Inf&lt;/code&gt; , la norma del operador es la m&amp;aacute;xima suma absoluta de filas de &lt;code&gt;A&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="12ded29676df364ceceab6c572522fc9e2e7af30" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;sp = Sampler(rng, x, repetition)&lt;/code&gt;, &lt;code&gt;rand(rng, sp)&lt;/code&gt; will be used to draw random values, and should be defined accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f72b2f90cae1c6e82409384ce1f3ceb6b9eefd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;wait&lt;/code&gt; is false, the process' I/O streams are directed to &lt;code&gt;devnull&lt;/code&gt;. When &lt;code&gt;wait&lt;/code&gt; is true, I/O streams are shared with the parent process. Use &lt;a href=&quot;#Base.pipeline-Tuple%7BAny,Any,Any,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt;&lt;code&gt;pipeline&lt;/code&gt;&lt;/a&gt; to control I/O redirection.</source>
          <target state="translated">Cuando la &lt;code&gt;wait&lt;/code&gt; es falsa, los flujos de E / S del proceso se dirigen a &lt;code&gt;devnull&lt;/code&gt; . Cuando la &lt;code&gt;wait&lt;/code&gt; es verdadera, los flujos de E / S se comparten con el proceso principal. Utilice la &lt;a href=&quot;#Base.pipeline-Tuple%7BAny,Any,Any,Vararg%7BAny,N%7D%20where%20N%7D&quot;&gt; &lt;code&gt;pipeline&lt;/code&gt; &lt;/a&gt; para controlar la redirecci&amp;oacute;n de E / S.</target>
        </trans-unit>
        <trans-unit id="f6b99eaf978e18be85274c3305a641971a22fc94" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;x = &amp;lt;value&amp;gt;&lt;/code&gt; occurs in a local scope, Julia applies the following rules to decide what the expression means based on where the assignment expression occurs and what &lt;code&gt;x&lt;/code&gt; already refers to at that location:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387339aa06f5aeaa40b73befd69307921f5c8373" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;const&lt;/code&gt; definition is only used to define an alias of another definition, such as is the case with the function &lt;code&gt;div&lt;/code&gt; and its alias &lt;code&gt;&amp;divide;&lt;/code&gt; in &lt;code&gt;Base&lt;/code&gt;, do not document the alias and instead document the actual function.</source>
          <target state="translated">Cuando una definici&amp;oacute;n &lt;code&gt;const&lt;/code&gt; ante solo se usa para definir un alias de otra definici&amp;oacute;n, como es el caso de la funci&amp;oacute;n &lt;code&gt;div&lt;/code&gt; y su alias &lt;code&gt;&amp;divide;&lt;/code&gt; en &lt;code&gt;Base&lt;/code&gt; , no documente el alias y en su lugar documente la funci&amp;oacute;n real.</target>
        </trans-unit>
        <trans-unit id="66405af7de66d28093c269eb102282edc9ad91d6" translate="yes" xml:space="preserve">
          <source>When a bare identifier or dot expression occurs after a semicolon, the keyword argument name is implied by the identifier or field name. For example &lt;code&gt;plot(x, y; width)&lt;/code&gt; is equivalent to &lt;code&gt;plot(x, y; width=width)&lt;/code&gt; and &lt;code&gt;plot(x, y; options.width)&lt;/code&gt; is equivalent to &lt;code&gt;plot(x, y; width=options.width)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43f7beafb82d84f0b0ca093d70636ab00d5bb6c" translate="yes" xml:space="preserve">
          <source>When a channel is bound to multiple tasks, the first task to terminate will close the channel. When multiple channels are bound to the same task, termination of the task will close all of the bound channels.</source>
          <target state="translated">Cuando un canal está ligado a múltiples tareas,la primera tarea que termine cerrará el canal.Cuando múltiples canales están ligados a la misma tarea,la terminación de la tarea cerrará todos los canales ligados.</target>
        </trans-unit>
        <trans-unit id="59c8aa513c5811a7c3a8d7b2460bea25a7005e55" translate="yes" xml:space="preserve">
          <source>When a file is run as the main script using &lt;code&gt;julia file.jl&lt;/code&gt; one might want to activate extra functionality like command line argument handling. A way to determine that a file is run in this fashion is to check if &lt;code&gt;abspath(PROGRAM_FILE) == @__FILE__&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Cuando se ejecuta un archivo como script principal usando &lt;code&gt;julia file.jl&lt;/code&gt; , es posible que desee activar una funcionalidad adicional como el manejo de argumentos en la l&amp;iacute;nea de comandos. Una forma de determinar que un archivo se ejecuta de esta manera es verificar si &lt;code&gt;abspath(PROGRAM_FILE) == @__FILE__&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e7501453daabe62281039e1cf6e34fa2839c62e" translate="yes" xml:space="preserve">
          <source>When a piece of computing work (in practice, executing a particular function) is designated as a &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;, it becomes possible to interrupt it by switching to another &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;. The original &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; can later be resumed, at which point it will pick up right where it left off. At first, this may seem similar to a function call. However there are two key differences. First, switching tasks does not use any space, so any number of task switches can occur without consuming the call stack. Second, switching among tasks can occur in any order, unlike function calls, where the called function must finish executing before control returns to the calling function.</source>
          <target state="translated">Cuando un trabajo inform&amp;aacute;tico (en la pr&amp;aacute;ctica, la ejecuci&amp;oacute;n de una funci&amp;oacute;n particular) se designa como &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; , es posible interrumpirlo cambiando a otra &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; . La &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; original se puede reanudar m&amp;aacute;s tarde, momento en el que se reanudar&amp;aacute; justo donde lo dej&amp;oacute;. Al principio, esto puede parecer similar a una llamada de funci&amp;oacute;n. Sin embargo, existen dos diferencias clave. En primer lugar, la conmutaci&amp;oacute;n de tareas no utiliza espacio, por lo que puede producirse cualquier cantidad de cambios de tarea sin consumir la pila de llamadas. En segundo lugar, el cambio entre tareas puede ocurrir en cualquier orden, a diferencia de las llamadas a funciones, donde la funci&amp;oacute;n llamada debe terminar de ejecutarse antes de que el control vuelva a la funci&amp;oacute;n que llama.</target>
        </trans-unit>
        <trans-unit id="c322e0ffc2096cd6324029e4fa443fabe59bd5d8" translate="yes" xml:space="preserve">
          <source>When a program needs to interact with the outside world, for example communicating with another machine over the internet, operations in the program may need to happen in an unpredictable order. Say your program needs to download a file. We would like to initiate the download operation, perform other operations while we wait for it to complete, and then resume the code that needs the downloaded file when it is available. This sort of scenario falls in the domain of asynchronous programming, sometimes also referred to as concurrent programming (since, conceptually, multiple things are happening at once).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9979982b20b6ded943786342ff40e25b341c71" translate="yes" xml:space="preserve">
          <source>When a scalar value is passed with &lt;code&gt;&amp;amp;&lt;/code&gt; as an argument of type &lt;code&gt;Ptr{T}&lt;/code&gt;, the value will first be converted to type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Cuando un valor escalar se pasa con &lt;code&gt;&amp;amp;&lt;/code&gt; como un argumento de tipo &lt;code&gt;Ptr{T}&lt;/code&gt; , el valor primero se convertir&amp;aacute; a escribir &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe81791971f41be5d7864ff7745e79391be55d47" translate="yes" xml:space="preserve">
          <source>When a significant amount of repetitive boilerplate code is required, it is common to generate it programmatically to avoid redundancy. In most languages, this requires an extra build step, and a separate program to generate the repetitive code. In Julia, expression interpolation and &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; allow such code generation to take place in the normal course of program execution. For example, consider the following custom type</source>
          <target state="translated">Cuando se requiere una cantidad significativa de c&amp;oacute;digo repetitivo repetitivo, es com&amp;uacute;n generarlo mediante programaci&amp;oacute;n para evitar la redundancia. En la mayor&amp;iacute;a de los lenguajes, esto requiere un paso de compilaci&amp;oacute;n adicional y un programa separado para generar el c&amp;oacute;digo repetitivo. En Julia, la interpolaci&amp;oacute;n de expresiones y &lt;a href=&quot;../../base/base/index#Base.MainInclude.eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; permiten que dicha generaci&amp;oacute;n de c&amp;oacute;digo tenga lugar en el curso normal de la ejecuci&amp;oacute;n del programa. Por ejemplo, considere el siguiente tipo personalizado</target>
        </trans-unit>
        <trans-unit id="0f1094197338bf27238baecc37ce0fa2dfa2098d" translate="yes" xml:space="preserve">
          <source>When a type is applied like a function it is called a &lt;em&gt;constructor&lt;/em&gt;. Two constructors are generated automatically (these are called &lt;em&gt;default constructors&lt;/em&gt;). One accepts any arguments and calls &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt; to convert them to the types of the fields, and the other accepts arguments that match the field types exactly. The reason both of these are generated is that this makes it easier to add new definitions without inadvertently replacing a default constructor.</source>
          <target state="translated">Cuando un tipo se aplica como una funci&amp;oacute;n, se llama &lt;em&gt;constructor&lt;/em&gt; . Se generan dos constructores autom&amp;aacute;ticamente (estos se denominan &lt;em&gt;constructores predeterminados&lt;/em&gt; ). Uno acepta cualquier argumento y llama a &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt; &lt;code&gt;convert&lt;/code&gt; &lt;/a&gt; para convertirlos a los tipos de campos, y el otro acepta argumentos que coinciden exactamente con los tipos de campo. La raz&amp;oacute;n por la que se generan ambos es que esto facilita la adici&amp;oacute;n de nuevas definiciones sin reemplazar inadvertidamente un constructor predeterminado.</target>
        </trans-unit>
        <trans-unit id="98d1d001e4fb72f4a3da5b80ba6df14e5f1fa86f" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;Integer&lt;/code&gt;-type value is needed, use &lt;code&gt;Integer(maxintfloat(T))&lt;/code&gt;.</source>
          <target state="translated">Cuando se necesita un valor de tipo &lt;code&gt;Integer&lt;/code&gt; , use &lt;code&gt;Integer(maxintfloat(T))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eec02c864c4b4a52ed32380f6bbcf97149ade981" translate="yes" xml:space="preserve">
          <source>When an array is passed to C as a &lt;code&gt;Ptr{T}&lt;/code&gt; argument, it is not reinterpret-cast: Julia requires that the element type of the array matches &lt;code&gt;T&lt;/code&gt;, and the address of the first element is passed.</source>
          <target state="translated">Cuando una matriz se pasa a C como un argumento &lt;code&gt;Ptr{T}&lt;/code&gt; , no se reinterpreta-cast: Julia requiere que el tipo de elemento de la matriz coincida con &lt;code&gt;T&lt;/code&gt; , y se pasa la direcci&amp;oacute;n del primer elemento.</target>
        </trans-unit>
        <trans-unit id="8566fd6fe66598ffc21c0e41c119f24c167f7a3e" translate="yes" xml:space="preserve">
          <source>When an event is triggered, the appropriate logger is found by looking for a task-local logger with the global logger as fallback. The idea here is that the application code knows how log events should be processed and exists somewhere at the top of the call stack. So we should look up through the call stack to discover the logger &amp;mdash; that is, the logger should be &lt;em&gt;dynamically scoped&lt;/em&gt;. (This is a point of contrast with logging frameworks where the logger is &lt;em&gt;lexically scoped&lt;/em&gt;; provided explicitly by the module author or as a simple global variable. In such a system it's awkward to control logging while composing functionality from multiple modules.)</source>
          <target state="translated">Cuando se activa un evento, el registrador apropiado se encuentra buscando un registrador local de tareas con el registrador global como respaldo. La idea aqu&amp;iacute; es que el c&amp;oacute;digo de la aplicaci&amp;oacute;n sepa c&amp;oacute;mo se deben procesar los eventos de registro y exista en alg&amp;uacute;n lugar en la parte superior de la pila de llamadas. Por lo tanto, deber&amp;iacute;amos buscar en la pila de llamadas para descubrir el registrador, es decir, el registrador debe tener un &lt;em&gt;alcance din&amp;aacute;mico&lt;/em&gt; . (Este es un punto de contraste con los marcos de registro donde el registrador tiene un &lt;em&gt;alcance l&amp;eacute;xico&lt;/em&gt; ; proporcionado expl&amp;iacute;citamente por el autor del m&amp;oacute;dulo o como una variable global simple. En tal sistema, es inc&amp;oacute;modo controlar el registro mientras se componen la funcionalidad de varios m&amp;oacute;dulos).</target>
        </trans-unit>
        <trans-unit id="981c7afc180e088292ad80d1981131b0506db6e1" translate="yes" xml:space="preserve">
          <source>When an event occurs, a few steps of early filtering occur to avoid generating messages that will be discarded:</source>
          <target state="translated">Cuando se produce un evento,se dan algunos pasos de filtrado temprano para evitar generar mensajes que serán desechados:</target>
        </trans-unit>
        <trans-unit id="fe255a18b8e1451834d407df7913b2e3977086f0" translate="yes" xml:space="preserve">
          <source>When an unexpected condition occurs, a function may be unable to return a reasonable value to its caller. In such cases, it may be best for the exceptional condition to either terminate the program while printing a diagnostic error message, or if the programmer has provided code to handle such exceptional circumstances then allow that code to take the appropriate action.</source>
          <target state="translated">Cuando se produce una condición inesperada,una función puede ser incapaz de devolver un valor razonable a su interlocutor.En tales casos,puede ser mejor para la condición excepcional terminar el programa mientras se imprime un mensaje de error de diagnóstico,o si el programador ha proporcionado un código para manejar tales circunstancias excepcionales,permitir que ese código tome la acción apropiada.</target>
        </trans-unit>
        <trans-unit id="7d51c32014a3d44fbfbe45092f164ea5ddadbfc7" translate="yes" xml:space="preserve">
          <source>When appended to a variable on the left-hand side of an assignment, or as part of a &lt;code&gt;local&lt;/code&gt; declaration, the &lt;code&gt;::&lt;/code&gt; operator means something a bit different: it declares the variable to always have the specified type, like a type declaration in a statically-typed language such as C. Every value assigned to the variable will be converted to the declared type using &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Cuando se agrega a una variable en el lado izquierdo de una asignaci&amp;oacute;n, o como parte de una declaraci&amp;oacute;n &lt;code&gt;local&lt;/code&gt; , el &lt;code&gt;::&lt;/code&gt; operador significa algo un poco diferente: declara que la variable siempre tiene el tipo especificado, como una declaraci&amp;oacute;n de tipo en un Lenguaje de tipado est&amp;aacute;tico como C. Cada valor asignado a la variable se convertir&amp;aacute; al tipo declarado usando &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt; &lt;code&gt;convert&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ef999f924ed2b51c873965e3d0169626b4f532c7" translate="yes" xml:space="preserve">
          <source>When appended to an expression computing a value, the &lt;code&gt;::&lt;/code&gt; operator is read as &quot;is an instance of&quot;. It can be used anywhere to assert that the value of the expression on the left is an instance of the type on the right. When the type on the right is concrete, the value on the left must have that type as its implementation &amp;ndash; recall that all concrete types are final, so no implementation is a subtype of any other. When the type is abstract, it suffices for the value to be implemented by a concrete type that is a subtype of the abstract type. If the type assertion is not true, an exception is thrown, otherwise, the left-hand value is returned:</source>
          <target state="translated">Cuando se agrega a una expresi&amp;oacute;n que calcula un valor, el operador &lt;code&gt;::&lt;/code&gt; se lee como &quot;es una instancia de&quot;. Se puede utilizar en cualquier lugar para afirmar que el valor de la expresi&amp;oacute;n de la izquierda es una instancia del tipo de la derecha. Cuando el tipo de la derecha es concreto, el valor de la izquierda debe tener ese tipo como su implementaci&amp;oacute;n; recuerde que todos los tipos concretos son finales, por lo que ninguna implementaci&amp;oacute;n es un subtipo de cualquier otro. Cuando el tipo es abstracto, basta con que el valor sea implementado por un tipo concreto que sea un subtipo del tipo abstracto. Si la aserci&amp;oacute;n de tipo no es verdadera, se lanza una excepci&amp;oacute;n; de lo contrario, se devuelve el valor de la izquierda:</target>
        </trans-unit>
        <trans-unit id="15c43c8db23e17e00320a3451d1f8da6af7074e8" translate="yes" xml:space="preserve">
          <source>When are deprecated functions removed?</source>
          <target state="translated">¿Cuándo se eliminan las funciones obsoletas?</target>
        </trans-unit>
        <trans-unit id="3ea78d13024c34e2f2791c359e186295012c1709" translate="yes" xml:space="preserve">
          <source>When broadcasting with &lt;code&gt;in.(items, collection)&lt;/code&gt; or &lt;code&gt;items .&amp;isin; collection&lt;/code&gt;, both &lt;code&gt;item&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; are broadcasted over, which is often not what is intended. For example, if both arguments are vectors (and the dimensions match), the result is a vector indicating whether each value in collection &lt;code&gt;items&lt;/code&gt; is &lt;code&gt;in&lt;/code&gt; the value at the corresponding position in &lt;code&gt;collection&lt;/code&gt;. To get a vector indicating whether each value in &lt;code&gt;items&lt;/code&gt; is in &lt;code&gt;collection&lt;/code&gt;, wrap &lt;code&gt;collection&lt;/code&gt; in a tuple or a &lt;code&gt;Ref&lt;/code&gt; like this: &lt;code&gt;in.(items, Ref(collection))&lt;/code&gt; or &lt;code&gt;items .&amp;isin; Ref(collection)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092ed6ff2b31aa14c009c043eed4169ab86f21f9" translate="yes" xml:space="preserve">
          <source>When broadcasting with &lt;code&gt;items .&amp;notin; collection&lt;/code&gt;, both &lt;code&gt;item&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; are broadcasted over, which is often not what is intended. For example, if both arguments are vectors (and the dimensions match), the result is a vector indicating whether each value in collection &lt;code&gt;items&lt;/code&gt; is not in the value at the corresponding position in &lt;code&gt;collection&lt;/code&gt;. To get a vector indicating whether each value in &lt;code&gt;items&lt;/code&gt; is not in &lt;code&gt;collection&lt;/code&gt;, wrap &lt;code&gt;collection&lt;/code&gt; in a tuple or a &lt;code&gt;Ref&lt;/code&gt; like this: &lt;code&gt;items .&amp;notin; Ref(collection)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2e75685386e4e2827a83db4cca905b6c592eba" translate="yes" xml:space="preserve">
          <source>When building generic code, there is often a need for constructing a similar object with some change made to the layout of the type, also necessitating a change of the type parameters. For instance, you might have some sort of abstract array with an arbitrary element type and want to write your computation on it with a specific element type. We must implement a method for each &lt;code&gt;AbstractArray{T}&lt;/code&gt; subtype that describes how to compute this type transform. There is no general transform of one subtype into another subtype with a different parameter. (Quick review: do you see why this is?)</source>
          <target state="translated">Al crear c&amp;oacute;digo gen&amp;eacute;rico, a menudo existe la necesidad de construir un objeto similar con alg&amp;uacute;n cambio realizado en el dise&amp;ntilde;o del tipo, lo que tambi&amp;eacute;n requiere un cambio de los par&amp;aacute;metros del tipo. Por ejemplo, es posible que tenga alg&amp;uacute;n tipo de matriz abstracta con un tipo de elemento arbitrario y desee escribir su c&amp;aacute;lculo en &amp;eacute;l con un tipo de elemento espec&amp;iacute;fico. Debemos implementar un m&amp;eacute;todo para cada subtipo &lt;code&gt;AbstractArray{T}&lt;/code&gt; que describa c&amp;oacute;mo calcular este tipo de transformaci&amp;oacute;n. No hay una transformaci&amp;oacute;n general de un subtipo en otro subtipo con un par&amp;aacute;metro diferente. (Revisi&amp;oacute;n r&amp;aacute;pida: &amp;iquest;ves por qu&amp;eacute; es esto?)</target>
        </trans-unit>
        <trans-unit id="195feaadaa8ee8245dc0e0889f4840c1a8154919" translate="yes" xml:space="preserve">
          <source>When called with no arguments, the temporary name will be an absolute path to a temporary name in the system temporary directory as given by &lt;code&gt;tempdir()&lt;/code&gt;. If a &lt;code&gt;parent&lt;/code&gt; directory argument is given, the temporary path will be in that directory instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacb27a3db8ad4d6fa07c864549f990e1b1f9b09" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;#Libdl.dlopen&quot;&gt;&lt;code&gt;dlopen&lt;/code&gt;&lt;/a&gt;, the paths in this list will be searched first, in order, before searching the system locations for a valid library handle.</source>
          <target state="translated">Al llamar a &lt;a href=&quot;#Libdl.dlopen&quot;&gt; &lt;code&gt;dlopen&lt;/code&gt; &lt;/a&gt; , primero se buscar&amp;aacute;n las rutas de esta lista, en orden, antes de buscar en las ubicaciones del sistema un identificador de biblioteca v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="ef7e9d8c42190544bd3e1564f8b8ba2bd51f8bbc" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;../../base/strings/index#Base.match&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt;, you have the option to specify an index at which to start the search. For example:</source>
          <target state="translated">Al llamar a &lt;a href=&quot;../../base/strings/index#Base.match&quot;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt; , tiene la opci&amp;oacute;n de especificar un &amp;iacute;ndice en el que comenzar la b&amp;uacute;squeda. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e92c3b1df4a4ce3ed62a3bfa6e7cf7fe1b90182a" translate="yes" xml:space="preserve">
          <source>When calling Fortran, all inputs must be passed by pointers to heap- or stack-allocated values, so all type correspondences above should contain an additional &lt;code&gt;Ptr{..}&lt;/code&gt; or &lt;code&gt;Ref{..}&lt;/code&gt; wrapper around their type specification.</source>
          <target state="translated">Al llamar a Fortran, todas las entradas deben pasarse mediante punteros a valores asignados por pila o pila, por lo que todas las correspondencias de tipos anteriores deben contener un envoltorio &lt;code&gt;Ptr{..}&lt;/code&gt; o &lt;code&gt;Ref{..}&lt;/code&gt; adicional alrededor de su especificaci&amp;oacute;n de tipo.</target>
        </trans-unit>
        <trans-unit id="5e331cf313a89110c14bb50e3eee2e7301f9cb8b" translate="yes" xml:space="preserve">
          <source>When chaining conditionals (including &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elseif&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt;), the &lt;code&gt;@static&lt;/code&gt; must be repeated for each level (parentheses optional, but recommended for readability):</source>
          <target state="translated">Al encadenar condicionales (incluido &lt;code&gt;if&lt;/code&gt; / &lt;code&gt;elseif&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; ), el &lt;code&gt;@static&lt;/code&gt; debe repetirse para cada nivel (los par&amp;eacute;ntesis son opcionales, pero se recomiendan para facilitar la lectura):</target>
        </trans-unit>
        <trans-unit id="748b100cf67a798bdbecc39743101fa41a0714e1" translate="yes" xml:space="preserve">
          <source>When checking if a value is equal to some singleton it can be better for performance to check for identicality (&lt;code&gt;===&lt;/code&gt;) instead of equality (&lt;code&gt;==&lt;/code&gt;). The same advice applies to using &lt;code&gt;!==&lt;/code&gt; over &lt;code&gt;!=&lt;/code&gt;. These type of checks frequently occur e.g. when implementing the iteration protocol and checking if &lt;code&gt;nothing&lt;/code&gt; is returned from &lt;a href=&quot;../../base/collections/index#Base.iterate&quot;&gt;&lt;code&gt;iterate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b9050639b920ff695156fa848d7ac41786789d" translate="yes" xml:space="preserve">
          <source>When control leaves the &lt;a href=&quot;#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; block (for example, due to a &lt;a href=&quot;#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt;, or just finishing normally), &lt;a href=&quot;../io-network/index#Base.close&quot;&gt;&lt;code&gt;close(f)&lt;/code&gt;&lt;/a&gt; will be executed. If the &lt;code&gt;try&lt;/code&gt; block exits due to an exception, the exception will continue propagating. A &lt;code&gt;catch&lt;/code&gt; block may be combined with &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;finally&lt;/code&gt; as well. In this case the &lt;code&gt;finally&lt;/code&gt; block will run after &lt;code&gt;catch&lt;/code&gt; has handled the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174b27ef1832006fe6218d3c983f95e289715bc3" translate="yes" xml:space="preserve">
          <source>When control leaves the &lt;a href=&quot;#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; block (for example, due to a &lt;a href=&quot;#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt;, or just finishing normally), &lt;code&gt;close(f)&lt;/code&gt; will be executed. If the &lt;code&gt;try&lt;/code&gt; block exits due to an exception, the exception will continue propagating. A &lt;code&gt;catch&lt;/code&gt; block may be combined with &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;finally&lt;/code&gt; as well. In this case the &lt;code&gt;finally&lt;/code&gt; block will run after &lt;code&gt;catch&lt;/code&gt; has handled the error.</source>
          <target state="translated">Cuando el control abandona el bloque &lt;a href=&quot;#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; (por ejemplo, debido a un &lt;a href=&quot;#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt; , o simplemente terminando normalmente), se ejecutar&amp;aacute; &lt;code&gt;close(f)&lt;/code&gt; . Si el bloque &lt;code&gt;try&lt;/code&gt; sale debido a una excepci&amp;oacute;n, la excepci&amp;oacute;n continuar&amp;aacute; propag&amp;aacute;ndose. Un bloque de &lt;code&gt;catch&lt;/code&gt; se puede combinar con &lt;code&gt;try&lt;/code&gt; y &lt;code&gt;finally&lt;/code&gt; tambi&amp;eacute;n. En este caso, el bloque &lt;code&gt;finally&lt;/code&gt; se ejecutar&amp;aacute; despu&amp;eacute;s de que &lt;code&gt;catch&lt;/code&gt; haya manejado el error.</target>
        </trans-unit>
        <trans-unit id="ac01620653b38b07c8e2f2811a030ec92b4e1ad9" translate="yes" xml:space="preserve">
          <source>When control leaves the &lt;code&gt;try&lt;/code&gt; block (for example due to a &lt;code&gt;return&lt;/code&gt;, or just finishing normally), &lt;code&gt;close(f)&lt;/code&gt; will be executed. If the &lt;code&gt;try&lt;/code&gt; block exits due to an exception, the exception will continue propagating. A &lt;code&gt;catch&lt;/code&gt; block may be combined with &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;finally&lt;/code&gt; as well. In this case the &lt;code&gt;finally&lt;/code&gt; block will run after &lt;code&gt;catch&lt;/code&gt; has handled the error.</source>
          <target state="translated">Cuando el control abandona el bloque &lt;code&gt;try&lt;/code&gt; (por ejemplo, debido a un &lt;code&gt;return&lt;/code&gt; , o simplemente terminando normalmente), se ejecutar&amp;aacute; &lt;code&gt;close(f)&lt;/code&gt; . Si el bloque &lt;code&gt;try&lt;/code&gt; sale debido a una excepci&amp;oacute;n, la excepci&amp;oacute;n continuar&amp;aacute; propag&amp;aacute;ndose. Un bloque de &lt;code&gt;catch&lt;/code&gt; se puede combinar con &lt;code&gt;try&lt;/code&gt; y &lt;code&gt;finally&lt;/code&gt; tambi&amp;eacute;n. En este caso, el bloque &lt;code&gt;finally&lt;/code&gt; se ejecutar&amp;aacute; despu&amp;eacute;s de que &lt;code&gt;catch&lt;/code&gt; haya manejado el error.</target>
        </trans-unit>
        <trans-unit id="2509f68dfaaa3b26bf821c041139b558402f6a85" translate="yes" xml:space="preserve">
          <source>When creating a &lt;code&gt;format&lt;/code&gt; you can use any non-code characters as a separator. For example to generate the string &quot;1996-01-15T00:00:00&quot; you could use &lt;code&gt;format&lt;/code&gt;: &quot;yyyy-mm-ddTHH:MM:SS&quot;. Note that if you need to use a code character as a literal you can use the escape character backslash. The string &quot;1996y01m&quot; can be produced with the format &quot;yyyy\ymm\m&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfb77e0645f23f4b5b667261005ff3593239667" translate="yes" xml:space="preserve">
          <source>When defining a function, one can optionally constrain the types of parameters it is applicable to, using the &lt;code&gt;::&lt;/code&gt; type-assertion operator, introduced in the section on &lt;a href=&quot;../types/index#Composite-Types&quot;&gt;Composite Types&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de1f7de90353d88ef9000e4f79f92b8c808bdb2" translate="yes" xml:space="preserve">
          <source>When defining a function, one can optionally constrain the types of parameters it is applicable to, using the &lt;code&gt;::&lt;/code&gt; type-assertion operator, introduced in the section on &lt;a href=&quot;../types/index#Composite-Types-1&quot;&gt;Composite Types&lt;/a&gt;:</source>
          <target state="translated">Al definir una funci&amp;oacute;n, uno puede restringir opcionalmente los tipos de par&amp;aacute;metros a los que es aplicable, usando el operador &lt;code&gt;::&lt;/code&gt; type-assertion, introducido en la secci&amp;oacute;n de &lt;a href=&quot;../types/index#Composite-Types-1&quot;&gt;Tipos compuestos&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="152d609433f05c2afbaef9a063010fb7cf671728" translate="yes" xml:space="preserve">
          <source>When defining a new type, initially all ways of creating it should be defined as constructors. If it becomes clear that implicit conversion would be useful, and that some constructors meet the above &quot;safety&quot; criteria, then &lt;code&gt;convert&lt;/code&gt; methods can be added. These methods are typically quite simple, as they only need to call the appropriate constructor. Such a definition might look like this:</source>
          <target state="translated">Al definir un nuevo tipo, inicialmente todas las formas de crearlo deben definirse como constructores. Si queda claro que la conversi&amp;oacute;n impl&amp;iacute;cita ser&amp;iacute;a &amp;uacute;til y que algunos constructores cumplen con los criterios de &quot;seguridad&quot; anteriores, se pueden agregar m&amp;eacute;todos de &lt;code&gt;convert&lt;/code&gt; . Estos m&amp;eacute;todos suelen ser bastante simples, ya que solo necesitan llamar al constructor apropiado. Tal definici&amp;oacute;n podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="884ef6ca30a2264b960b8f9a3b28841cea79d9f1" translate="yes" xml:space="preserve">
          <source>When defining generated functions, there are five main differences to ordinary functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c61f17e48da1bcacb16f9549d16af7280e11ed" translate="yes" xml:space="preserve">
          <source>When defining generated functions, there are four main differences to ordinary functions:</source>
          <target state="translated">Al definir las funciones generadas,hay cuatro diferencias principales con respecto a las funciones ordinarias:</target>
        </trans-unit>
        <trans-unit id="49efec53aeb1ae624503fb2c22137ba91bb625ee" translate="yes" xml:space="preserve">
          <source>When designing APIs, adhering to this general order as much as possible is likely to give users of your functions a more consistent experience.</source>
          <target state="translated">Al diseñar las API,es probable que el cumplimiento de este orden general en la medida de lo posible proporcione a los usuarios de sus funciones una experiencia más consistente.</target>
        </trans-unit>
        <trans-unit id="a941f10446d75f8958c1348bd2a746eb967d2e21" translate="yes" xml:space="preserve">
          <source>When exactly one index &lt;code&gt;i&lt;/code&gt; is provided, that index no longer represents a location in a particular dimension of the array. Instead, it selects the &lt;code&gt;i&lt;/code&gt;th element using the column-major iteration order that linearly spans the entire array. This is known as &lt;em&gt;linear indexing&lt;/em&gt;. It essentially treats the array as though it had been reshaped into a one-dimensional vector with &lt;a href=&quot;../../base/arrays/index#Base.vec&quot;&gt;&lt;code&gt;vec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cuando se proporciona exactamente un &amp;iacute;ndice &lt;code&gt;i&lt;/code&gt; , ese &amp;iacute;ndice ya no representa una ubicaci&amp;oacute;n en una dimensi&amp;oacute;n particular de la matriz. En su lugar, selecciona el elemento &lt;code&gt;i&lt;/code&gt; - &amp;eacute;simo utilizando el orden de iteraci&amp;oacute;n de la columna principal que abarca linealmente toda la matriz. Esto se conoce como &lt;em&gt;indexaci&amp;oacute;n lineal&lt;/em&gt; . B&amp;aacute;sicamente, trata la matriz como si hubiera sido remodelada en un vector unidimensional con &lt;a href=&quot;../../base/arrays/index#Base.vec&quot;&gt; &lt;code&gt;vec&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3d4ab6d8c0ec75d6d289814f9629ec5250796ab" translate="yes" xml:space="preserve">
          <source>When executing a remote function in parallel:</source>
          <target state="translated">Al ejecutar una función remota en paralelo:</target>
        </trans-unit>
        <trans-unit id="60bf875610ed5f18bb5771424d18a32cfa69cc45" translate="yes" xml:space="preserve">
          <source>When fetching data from LibGit2, a typical usage would look like:</source>
          <target state="translated">Al buscar datos de LibGit2,un uso típico se vería como:</target>
        </trans-unit>
        <trans-unit id="9f5749e51bc8ddb6474c3a822e03c976f400cb95" translate="yes" xml:space="preserve">
          <source>When is &lt;code&gt;convert&lt;/code&gt; called?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;ndo se llama &lt;code&gt;convert&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="0bf200d46aca80912e82e9a0512bf3a557089224" translate="yes" xml:space="preserve">
          <source>When issuing a hint, the output should typically start with &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033992315c0171a5bb54828a5de11a8f7b44c1ac" translate="yes" xml:space="preserve">
          <source>When loading from a pointer with &lt;code&gt;unsafe_load&lt;/code&gt;, the underlying object is implicitly used, for example &lt;code&gt;x&lt;/code&gt; is implicitly used by &lt;code&gt;unsafe_load(p)&lt;/code&gt; in the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bdbef12210d17b4e3031ada949009b49167f95" translate="yes" xml:space="preserve">
          <source>When no supertype is given, the default supertype is &lt;code&gt;Any&lt;/code&gt; &amp;ndash; a predefined abstract type that all objects are instances of and all types are subtypes of. In type theory, &lt;code&gt;Any&lt;/code&gt; is commonly called &quot;top&quot; because it is at the apex of the type graph. Julia also has a predefined abstract &quot;bottom&quot; type, at the nadir of the type graph, which is written as &lt;code&gt;Union{}&lt;/code&gt;. It is the exact opposite of &lt;code&gt;Any&lt;/code&gt;: no object is an instance of &lt;code&gt;Union{}&lt;/code&gt; and all types are supertypes of &lt;code&gt;Union{}&lt;/code&gt;.</source>
          <target state="translated">Cuando no se proporciona ning&amp;uacute;n supertipo, el supertipo predeterminado es &lt;code&gt;Any&lt;/code&gt; , un tipo abstracto predefinido del que todos los objetos son instancias y todos los tipos son subtipos. En la teor&amp;iacute;a de tipos, &lt;code&gt;Any&lt;/code&gt; se denomina com&amp;uacute;nmente &quot;superior&quot; porque est&amp;aacute; en la c&amp;uacute;spide del gr&amp;aacute;fico de tipos. Julia tambi&amp;eacute;n tiene un tipo &quot;inferior&quot; abstracto predefinido, en el nadir del gr&amp;aacute;fico de tipos, que se escribe como &lt;code&gt;Union{}&lt;/code&gt; . Es exactamente lo contrario de &lt;code&gt;Any&lt;/code&gt; : ning&amp;uacute;n objeto es una instancia de &lt;code&gt;Union{}&lt;/code&gt; y todos los tipos son supertipos de &lt;code&gt;Union{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fcc651112bb76903e5ae0a3bf204e82def56437" translate="yes" xml:space="preserve">
          <source>When omitting &lt;em&gt;all&lt;/em&gt; indices with &lt;code&gt;A[]&lt;/code&gt;, this semantic provides a simple idiom to retrieve the only element in an array and simultaneously ensure that there was only one element.</source>
          <target state="translated">Cuando se omiten &lt;em&gt;todos los&lt;/em&gt; &amp;iacute;ndices con &lt;code&gt;A[]&lt;/code&gt; , esta sem&amp;aacute;ntica proporciona un modismo simple para recuperar el &amp;uacute;nico elemento en una matriz y al mismo tiempo garantizar que solo haya un elemento.</target>
        </trans-unit>
        <trans-unit id="25a0968a84486d9bb369e312765b66f12f135bdd" translate="yes" xml:space="preserve">
          <source>When only the type of supplied arguments needs to be constrained &lt;code&gt;Vararg{T}&lt;/code&gt; can be equivalently written as &lt;code&gt;T...&lt;/code&gt;. For instance &lt;code&gt;f(x::Int...) = x&lt;/code&gt; is a shorthand for &lt;code&gt;f(x::Vararg{Int}) = x&lt;/code&gt;.</source>
          <target state="translated">Cuando s&amp;oacute;lo el tipo de los argumentos provistos necesita ser restringida &lt;code&gt;Vararg{T}&lt;/code&gt; se puede escribir de forma equivalente como &lt;code&gt;T...&lt;/code&gt; . Por ejemplo, &lt;code&gt;f(x::Int...) = x&lt;/code&gt; es una abreviatura de &lt;code&gt;f(x::Vararg{Int}) = x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bc2691546974788c6f5f633b5af60f15dc7f704" translate="yes" xml:space="preserve">
          <source>When optional and keyword argument default expressions are evaluated, only &lt;em&gt;previous&lt;/em&gt; arguments are in scope. For example, given this definition:</source>
          <target state="translated">Cuando se eval&amp;uacute;an las expresiones predeterminadas de argumentos opcionales y de palabra clave, solo &lt;em&gt;los&lt;/em&gt; argumentos &lt;em&gt;anteriores&lt;/em&gt; est&amp;aacute;n dentro del alcance. Por ejemplo, dada esta definici&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="328ccbd822376eb34037743aedfc016fe4fbbce4" translate="yes" xml:space="preserve">
          <source>When passed as a &lt;code&gt;ccall&lt;/code&gt; argument (either as a &lt;code&gt;Ptr&lt;/code&gt; or &lt;code&gt;Ref&lt;/code&gt; type), a &lt;code&gt;Ref&lt;/code&gt; object will be converted to a native pointer to the data it references.</source>
          <target state="translated">Cuando se pasa como un argumento &lt;code&gt;ccall&lt;/code&gt; (ya sea como tipo &lt;code&gt;Ptr&lt;/code&gt; o &lt;code&gt;Ref&lt;/code&gt; ), un objeto &lt;code&gt;Ref&lt;/code&gt; se convertir&amp;aacute; en un puntero nativo a los datos a los que hace referencia.</target>
        </trans-unit>
        <trans-unit id="7ff24cc69534fdb104d1c11f0a561a2d6006bd40" translate="yes" xml:space="preserve">
          <source>When passing data to a &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt;, it is best to avoid using the &lt;a href=&quot;../../base/c/index#Base.pointer&quot;&gt;&lt;code&gt;pointer&lt;/code&gt;&lt;/a&gt; function. Instead define a convert method and pass the variables directly to the &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt; automatically arranges that all of its arguments will be preserved from garbage collection until the call returns. If a C API will store a reference to memory allocated by Julia, after the &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt; returns, you must arrange that the object remains visible to the garbage collector. The suggested way to handle this is to make a global variable of type &lt;code&gt;Array{Ref,1}&lt;/code&gt; to hold these values, until the C library notifies you that it is finished with them.</source>
          <target state="translated">Al pasar datos a un &lt;a href=&quot;../../base/c/index#ccall&quot;&gt; &lt;code&gt;ccall&lt;/code&gt; &lt;/a&gt; , es mejor evitar el uso de la funci&amp;oacute;n de &lt;a href=&quot;../../base/c/index#Base.pointer&quot;&gt; &lt;code&gt;pointer&lt;/code&gt; &lt;/a&gt; . En su lugar, defina un m&amp;eacute;todo de conversi&amp;oacute;n y pase las variables directamente al &lt;a href=&quot;../../base/c/index#ccall&quot;&gt; &lt;code&gt;ccall&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;../../base/c/index#ccall&quot;&gt; &lt;code&gt;ccall&lt;/code&gt; &lt;/a&gt; organiza autom&amp;aacute;ticamente que todos sus argumentos se conservar&amp;aacute;n de la recolecci&amp;oacute;n de basura hasta que vuelva la llamada. Si una API de C almacenar&amp;aacute; una referencia a la memoria asignada por Julia, despu&amp;eacute;s de que &lt;a href=&quot;../../base/c/index#ccall&quot;&gt; &lt;code&gt;ccall&lt;/code&gt; &lt;/a&gt; regrese, debe hacer que el objeto permanezca visible para el recolector de basura. La forma sugerida de manejar esto es hacer una variable global de tipo &lt;code&gt;Array{Ref,1}&lt;/code&gt; para contener estos valores, hasta que la biblioteca C le notifique que ha terminado con ellos.</target>
        </trans-unit>
        <trans-unit id="621b4b8b5a5149c69191e35b8edeeea1183d955f" translate="yes" xml:space="preserve">
          <source>When passing data to a &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt;, it is best to avoid using the &lt;a href=&quot;../../base/c/index#Base.pointer&quot;&gt;&lt;code&gt;pointer&lt;/code&gt;&lt;/a&gt; function. Instead define a convert method and pass the variables directly to the &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt; automatically arranges that all of its arguments will be preserved from garbage collection until the call returns. If a C API will store a reference to memory allocated by Julia, after the &lt;a href=&quot;../../base/c/index#ccall&quot;&gt;&lt;code&gt;ccall&lt;/code&gt;&lt;/a&gt; returns, you must ensure that the object remains visible to the garbage collector. The suggested way to do this is to make a global variable of type &lt;code&gt;Array{Ref,1}&lt;/code&gt; to hold these values, until the C library notifies you that it is finished with them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03a0776d698aabe1d1ee9b2fbaaca855d289cd3" translate="yes" xml:space="preserve">
          <source>When passing pointers to &lt;code&gt;ccall&lt;/code&gt;, the pointed-to object is implicitly used and should be preserved. (Note however that you should normally just pass &lt;code&gt;x&lt;/code&gt; directly to &lt;code&gt;ccall&lt;/code&gt; which counts as an explicit use.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4161f851acf4dfa4cc8665b77ecf5c1170bcb8" translate="yes" xml:space="preserve">
          <source>When possible, it helps to ensure that a function always returns a value of the same type. Consider the following definition:</source>
          <target state="translated">Cuando es posible,ayuda a asegurar que una función siempre devuelva un valor del mismo tipo.Considere la siguiente definición:</target>
        </trans-unit>
        <trans-unit id="f980dac273e411c73db2f2997e398dee2af97484" translate="yes" xml:space="preserve">
          <source>When reading and writing to both ends of a pipeline from a single process, it is important to avoid forcing the kernel to buffer all of the data.</source>
          <target state="translated">Cuando se lee y escribe a ambos extremos de una tubería de un solo proceso,es importante evitar forzar al núcleo a almacenar todos los datos.</target>
        </trans-unit>
        <trans-unit id="432031c93a248af1a362c62ac61d4d3da70d6a24" translate="yes" xml:space="preserve">
          <source>When redefining a method or adding new methods, it is important to realize that these changes don't take effect immediately. This is key to Julia's ability to statically infer and compile code to run fast, without the usual JIT tricks and overhead. Indeed, any new method definition won't be visible to the current runtime environment, including Tasks and Threads (and any previously defined &lt;code&gt;@generated&lt;/code&gt; functions). Let's start with an example to see what this means:</source>
          <target state="translated">Al redefinir un m&amp;eacute;todo o agregar nuevos m&amp;eacute;todos, es importante darse cuenta de que estos cambios no surten efecto de inmediato. Esto es clave para la capacidad de Julia de inferir y compilar c&amp;oacute;digo est&amp;aacute;ticamente para que se ejecute r&amp;aacute;pido, sin los trucos y gastos generales habituales de JIT. De hecho, cualquier nueva definici&amp;oacute;n de m&amp;eacute;todo no ser&amp;aacute; visible para el entorno de ejecuci&amp;oacute;n actual, incluidas las tareas y los subprocesos (y cualquier funci&amp;oacute;n &lt;code&gt;@generated&lt;/code&gt; definida previamente ). Comencemos con un ejemplo para ver qu&amp;eacute; significa esto:</target>
        </trans-unit>
        <trans-unit id="f67015b5342fb583f71d2f0a8849f5c8f2575736" translate="yes" xml:space="preserve">
          <source>When repeatedly generating random values (with the same &lt;code&gt;rand&lt;/code&gt; parameters), it happens for some types that the result of a computation is used for each call. In this case, the computation can be decoupled from actually generating the values. This is the case for example with the default implementation for &lt;code&gt;AbstractArray&lt;/code&gt;. Assume that &lt;code&gt;rand(rng, 1:20)&lt;/code&gt; has to be called repeatedly in a loop: the way to take advantage of this decoupling is as follows:</source>
          <target state="translated">Cuando se generan repetidamente valores aleatorios (con los mismos par&amp;aacute;metros &lt;code&gt;rand&lt;/code&gt; ), sucede que para algunos tipos se utiliza el resultado de un c&amp;aacute;lculo para cada llamada. En este caso, el c&amp;aacute;lculo se puede desvincular de la generaci&amp;oacute;n real de los valores. Este es el caso, por ejemplo, de la implementaci&amp;oacute;n predeterminada de &lt;code&gt;AbstractArray&lt;/code&gt; . Suponga que &lt;code&gt;rand(rng, 1:20)&lt;/code&gt; tiene que ser llamado repetidamente en un bucle: la forma de aprovechar este desacoplamiento es la siguiente:</target>
        </trans-unit>
        <trans-unit id="5775c96a25e19b8d91a7723e7ea52f8fd816253c" translate="yes" xml:space="preserve">
          <source>When retrieving documentation for a generic function, the metadata for each method is concatenated with the &lt;code&gt;catdoc&lt;/code&gt; function, which can of course be overridden for custom types.</source>
          <target state="translated">Cuando se recupera documentaci&amp;oacute;n para una funci&amp;oacute;n gen&amp;eacute;rica, los metadatos de cada m&amp;eacute;todo se concatenan con la funci&amp;oacute;n &lt;code&gt;catdoc&lt;/code&gt; , que por supuesto se puede anular para tipos personalizados.</target>
        </trans-unit>
        <trans-unit id="fcdae2c11195f3a2ff681be9a1639c0d95a5dceb" translate="yes" xml:space="preserve">
          <source>When searching for files, &lt;code&gt;require&lt;/code&gt; first looks for package code in the global array &lt;a href=&quot;../constants/index#Base.LOAD_PATH&quot;&gt;&lt;code&gt;LOAD_PATH&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;require&lt;/code&gt; is case-sensitive on all platforms, including those with case-insensitive filesystems like macOS and Windows.</source>
          <target state="translated">Durante la b&amp;uacute;squeda de archivos, &lt;code&gt;require&lt;/code&gt; busca primero el c&amp;oacute;digo del paquete en la matriz global &lt;a href=&quot;../constants/index#Base.LOAD_PATH&quot;&gt; &lt;code&gt;LOAD_PATH&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;require&lt;/code&gt; distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas en todas las plataformas, incluidas aquellas con sistemas de archivos que no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas, como macOS y Windows.</target>
        </trans-unit>
        <trans-unit id="ae50cba0ad7de510b297784111877a1b60718702" translate="yes" xml:space="preserve">
          <source>When single-threaded, code could call the internal &lt;code&gt;jl_gc_enable_finalizers&lt;/code&gt; C function to prevent finalizers from being scheduled inside a critical region. Internally, this is used inside some functions (such as our C locks) to prevent recursion when doing certain operations (incremental package loading, codegen, etc.). The combination of a lock and this flag can be used to make finalizers safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5caa784bb63149c778b19d4371f4d304c538230" translate="yes" xml:space="preserve">
          <source>When strings are created using triple-quotes (&lt;code&gt;&quot;&quot;&quot;...&quot;&quot;&quot;&lt;/code&gt;) they have some special behavior that can be useful for creating longer blocks of text.</source>
          <target state="translated">Cuando las cadenas se crean usando comillas triples ( &lt;code&gt;&quot;&quot;&quot;...&quot;&quot;&quot;&lt;/code&gt; ) tienen un comportamiento especial que puede ser &amp;uacute;til para crear bloques de texto m&amp;aacute;s largos.</target>
        </trans-unit>
        <trans-unit id="d9c021e0b023c23a7d814288842365e170962500" translate="yes" xml:space="preserve">
          <source>When the command is run, Julia does not capture its output unless you specifically arrange for it to. Instead, the output of the command by default goes to &lt;a href=&quot;../../base/io-network/index#Base.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt; as it would using &lt;code&gt;libc&lt;/code&gt;'s &lt;code&gt;system&lt;/code&gt; call.</source>
          <target state="translated">Cuando se ejecuta el comando, Julia no captura su salida a menos que usted lo disponga espec&amp;iacute;ficamente. En cambio, la salida del comando por defecto va a &lt;a href=&quot;../../base/io-network/index#Base.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; &lt;/a&gt; como lo har&amp;iacute;a con la llamada al &lt;code&gt;system&lt;/code&gt; &lt;code&gt;libc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fa07c6647099037fc4a9f69e1680570128c974a" translate="yes" xml:space="preserve">
          <source>When the cursor is at the beginning of the line, the prompt can be changed to a help mode by typing &lt;code&gt;?&lt;/code&gt;. Julia will attempt to print help or documentation for anything entered in help mode:</source>
          <target state="translated">Cuando el cursor est&amp;aacute; al principio de la l&amp;iacute;nea, el indicador se puede cambiar a un modo de ayuda escribiendo &lt;code&gt;?&lt;/code&gt; . Julia intentar&amp;aacute; imprimir ayuda o documentaci&amp;oacute;n para cualquier cosa ingresada en el modo de ayuda:</target>
        </trans-unit>
        <trans-unit id="507cfdac68541961a8caed400c02e4110284216d" translate="yes" xml:space="preserve">
          <source>When the function is called, the semicolon is optional: one can either call &lt;code&gt;plot(x, y, width=2)&lt;/code&gt; or &lt;code&gt;plot(x, y; width=2)&lt;/code&gt;, but the former style is more common. An explicit semicolon is required only for passing varargs or computed keywords as described below.</source>
          <target state="translated">Cuando se llama a la funci&amp;oacute;n, el punto y coma es opcional: se puede llamar a &lt;code&gt;plot(x, y, width=2)&lt;/code&gt; o &lt;code&gt;plot(x, y; width=2)&lt;/code&gt; , pero el estilo anterior es m&amp;aacute;s com&amp;uacute;n. Solo se requiere un punto y coma expl&amp;iacute;cito para pasar varargs o palabras clave calculadas como se describe a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="639ad8fb2203031e1f5890076ab452c005551734" translate="yes" xml:space="preserve">
          <source>When the latter holds, a function processing such a homogenous array can be productively specialized: Julia knows the type of each element in advance (all objects in the container have the same concrete type), so Julia can &quot;look up&quot; the correct method calls when the function is being compiled (obviating the need to check at run-time) and thereby emit efficient code for processing the whole list.</source>
          <target state="translated">Cuando esta última se mantiene,una función que procese un conjunto tan homogéneo puede especializarse productivamente:Julia conoce de antemano el tipo de cada elemento (todos los objetos del contenedor tienen el mismo tipo concreto),de modo que Julia puede &quot;buscar&quot; las llamadas de método correctas cuando se compila la función (obviando la necesidad de comprobar en tiempo de ejecución)y así emitir un código eficiente para procesar toda la lista.</target>
        </trans-unit>
        <trans-unit id="b657ed862f19af0ea0f696008e9ac44d556c4b65" translate="yes" xml:space="preserve">
          <source>When these do not hold, then it's likely that you'll get no benefit; worse, the resulting &quot;combinatorial explosion of types&quot; will be counterproductive. If &lt;code&gt;items[i+1]&lt;/code&gt; has a different type than &lt;code&gt;item[i]&lt;/code&gt;, Julia has to look up the type at run-time, search for the appropriate method in method tables, decide (via type intersection) which one matches, determine whether it has been JIT-compiled yet (and do so if not), and then make the call. In essence, you're asking the full type- system and JIT-compilation machinery to basically execute the equivalent of a switch statement or dictionary lookup in your own code.</source>
          <target state="translated">Cuando estos no se mantienen, es probable que no obtenga ning&amp;uacute;n beneficio; peor a&amp;uacute;n, la resultante &quot;explosi&amp;oacute;n combinatoria de tipos&quot; ser&amp;aacute; contraproducente. Si los &lt;code&gt;items[i+1]&lt;/code&gt; tienen un tipo diferente al &lt;code&gt;item[i]&lt;/code&gt; , Julia tiene que buscar el tipo en tiempo de ejecuci&amp;oacute;n, buscar el m&amp;eacute;todo apropiado en las tablas de m&amp;eacute;todos, decidir (mediante la intersecci&amp;oacute;n de tipos) cu&amp;aacute;l coincide, determinar si ya ha sido compilado con JIT (y h&amp;aacute;galo si no), y luego realice la llamada. En esencia, le est&amp;aacute; pidiendo al sistema de tipos completo y a la maquinaria de compilaci&amp;oacute;n JIT que b&amp;aacute;sicamente ejecute el equivalente de una instrucci&amp;oacute;n de cambio o una b&amp;uacute;squeda de diccionario en su propio c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="daba9492446bca5f7a6499bbb7ab37d695e92939" translate="yes" xml:space="preserve">
          <source>When this approach is not possible, it may be worth starting a discussion with other developers about resolving the ambiguity; just because one method was defined first does not necessarily mean that it can't be modified or eliminated. As a last resort, one developer can define the &quot;band-aid&quot; method</source>
          <target state="translated">Cuando este enfoque no es posible,puede valer la pena iniciar un debate con otros desarrolladores para resolver la ambigüedad;el hecho de que se haya definido un método en primer lugar no significa necesariamente que no pueda modificarse o eliminarse.Como último recurso,un desarrollador puede definir el método de la &quot;curita&quot;</target>
        </trans-unit>
        <trans-unit id="1c53522c3f28e638cb9b245fd7713a2c2d5ab598" translate="yes" xml:space="preserve">
          <source>When this function returns, the &lt;code&gt;lock&lt;/code&gt; has been released, so the caller should not attempt to &lt;code&gt;unlock&lt;/code&gt; it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcec4d967a0515eaea7ceb3fcaeb59b279f583b" translate="yes" xml:space="preserve">
          <source>When to use T, Ptr{T} and Ref{T}</source>
          <target state="translated">Cuándo usar T,Ptr{T}y Ref{T}</target>
        </trans-unit>
        <trans-unit id="192e3e787a1f9ea7f9bd564c044daecfe8f0cc3a" translate="yes" xml:space="preserve">
          <source>When used for retrieving documentation, the &lt;code&gt;@doc&lt;/code&gt; macro (or equally, the &lt;code&gt;doc&lt;/code&gt; function) will search all &lt;code&gt;META&lt;/code&gt; dictionaries for metadata relevant to the given object and return it. The returned object (some Markdown content, for example) will by default display itself intelligently. This design also makes it easy to use the doc system in a programmatic way; for example, to re-use documentation between different versions of a function:</source>
          <target state="translated">Cuando se usa para recuperar documentaci&amp;oacute;n, la macro &lt;code&gt;@doc&lt;/code&gt; (o igualmente, la funci&amp;oacute;n &lt;code&gt;doc&lt;/code&gt; ) buscar&amp;aacute; en todos los diccionarios &lt;code&gt;META&lt;/code&gt; metadatos relevantes para el objeto dado y lo devolver&amp;aacute;. El objeto devuelto (alg&amp;uacute;n contenido de Markdown, por ejemplo) se mostrar&amp;aacute; de forma predeterminada de forma inteligente. Este dise&amp;ntilde;o tambi&amp;eacute;n facilita el uso del sistema de documentaci&amp;oacute;n de forma program&amp;aacute;tica; por ejemplo, para reutilizar la documentaci&amp;oacute;n entre diferentes versiones de una funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="0da1440377ce905990ebb1084be997ed9f823f6e" translate="yes" xml:space="preserve">
          <source>When used in a top-level expression (i.e. outside any function), &lt;code&gt;return&lt;/code&gt; causes the entire current top-level expression to terminate early.</source>
          <target state="translated">Cuando se usa en una expresi&amp;oacute;n de nivel superior (es decir, fuera de cualquier funci&amp;oacute;n), &lt;code&gt;return&lt;/code&gt; hace que toda la expresi&amp;oacute;n de nivel superior actual termine antes.</target>
        </trans-unit>
        <trans-unit id="ad90f9fad3e865dcdcc8e5c6f4ed1440be5209d1" translate="yes" xml:space="preserve">
          <source>When used in multiplication, &lt;code&gt;false&lt;/code&gt; acts as a &lt;em&gt;strong zero&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c2368f15add98073b370ac7b8ec7c167ef17f5" translate="yes" xml:space="preserve">
          <source>When used recursively, &lt;code&gt;isbits&lt;/code&gt; types are stored inline. All other types are stored as a pointer to the data. When mirroring a struct used by-value inside another struct in C, it is imperative that you do not attempt to manually copy the fields over, as this will not preserve the correct field alignment. Instead, declare an &lt;code&gt;isbits&lt;/code&gt; struct type and use that instead. Unnamed structs are not possible in the translation to Julia.</source>
          <target state="translated">Cuando se utilizan de forma recursiva, los tipos de &lt;code&gt;isbits&lt;/code&gt; se almacenan en l&amp;iacute;nea. Todos los dem&amp;aacute;s tipos se almacenan como un puntero a los datos. Al reflejar una estructura utilizada por valor dentro de otra estructura en C, es imperativo que no intente copiar manualmente los campos, ya que esto no preservar&amp;aacute; la alineaci&amp;oacute;n correcta del campo. En su lugar, declare un tipo de estructura &lt;code&gt;isbits&lt;/code&gt; y util&amp;iacute;celo en su lugar. Las estructuras sin nombre no son posibles en la traducci&amp;oacute;n a Julia.</target>
        </trans-unit>
        <trans-unit id="8037800c51683cda76306c47fbd67814674e8ca7" translate="yes" xml:space="preserve">
          <source>When used with floating point values, the exact result may not be representable by the type, and so rounding error may occur. In particular, if the exact result is very close to &lt;code&gt;y&lt;/code&gt;, then it may be rounded to &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Cuando se usa con valores de coma flotante, el resultado exacto puede no ser representable por el tipo, por lo que puede ocurrir un error de redondeo. En particular, si el resultado exacto est&amp;aacute; muy cerca de &lt;code&gt;y&lt;/code&gt; , entonces se puede redondear &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acd8680746460f581c6030ccf8473f00fb5891fe" translate="yes" xml:space="preserve">
          <source>When used without arguments, it applies to all arguments of the parent scope. In local scope, this means all arguments of the containing function. In global (top-level) scope, this means all methods subsequently defined in the current module.</source>
          <target state="translated">Cuando se utiliza sin argumentos,se aplica a todos los argumentos del ámbito de los padres.En el ámbito local,esto significa todos los argumentos de la función de contención.En el ámbito global (de nivel superior),esto significa todos los métodos definidos posteriormente en el módulo actual.</target>
        </trans-unit>
        <trans-unit id="fc5d430efeaf46d7a9bbfb42c02ab830cb54a4e3" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;julia&lt;/code&gt; in high-performance computing (HPC) facilities, invoking &lt;em&gt;n&lt;/em&gt;&lt;code&gt;julia&lt;/code&gt; processes simultaneously creates at most &lt;em&gt;n&lt;/em&gt; temporary copies of precompilation cache files. If this is an issue (slow and/or small distributed file system), you may:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2497c9ba2b3daea7dfb0574cb00ff1e7a9c7db7" translate="yes" xml:space="preserve">
          <source>When using custom transports:</source>
          <target state="translated">Cuando se utilizan transportes personalizados:</target>
        </trans-unit>
        <trans-unit id="c2b8bc3f498fe7ac6fdf02d7ec792cfe70836fab" translate="yes" xml:space="preserve">
          <source>When using multi-threading we have to be careful when using functions that are not &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_function&quot;&gt;pure&lt;/a&gt; as we might get a wrong answer. For instance functions that have a &lt;a href=&quot;../style-guide/index#bang-convention&quot;&gt;name ending with &lt;code&gt;!&lt;/code&gt;&lt;/a&gt; by convention modify their arguments and thus are not pure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37c0d6d64c53d6358f8588b527452529dd78e26" translate="yes" xml:space="preserve">
          <source>When using multi-threading we have to be careful when using functions that are not &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_function&quot;&gt;pure&lt;/a&gt; as we might get a wrong answer. For instance functions that have their &lt;a href=&quot;https://docs.julialang.org/en/latest/manual/style-guide/#Append-!-to-names-of-functions-that-modify-their-arguments-1&quot;&gt;name ending with &lt;code&gt;!&lt;/code&gt;&lt;/a&gt; by convention modify their arguments and thus are not pure. However, there are functions that have side effects and their name does not end with &lt;code&gt;!&lt;/code&gt;. For instance &lt;code&gt;findfirst(regex, str)&lt;/code&gt; mutates its &lt;code&gt;regex&lt;/code&gt; argument or &lt;a href=&quot;../../stdlib/random/index#Base.rand&quot;&gt;&lt;code&gt;rand()&lt;/code&gt;&lt;/a&gt; changes &lt;code&gt;Base.GLOBAL_RNG&lt;/code&gt; :</source>
          <target state="translated">Cuando usemos m&amp;uacute;ltiples subprocesos, debemos tener cuidado al usar funciones que no sean &lt;a href=&quot;https://en.wikipedia.org/wiki/Pure_function&quot;&gt;puras,&lt;/a&gt; ya que podr&amp;iacute;amos obtener una respuesta incorrecta. Por ejemplo, funciones cuyo &lt;a href=&quot;https://docs.julialang.org/en/latest/manual/style-guide/#Append-!-to-names-of-functions-that-modify-their-arguments-1&quot;&gt;nombre termina en &lt;code&gt;!&lt;/code&gt; &lt;/a&gt;por convenci&amp;oacute;n modifican sus argumentos y por lo tanto no son puros. Sin embargo, hay funciones que tienen efectos secundarios y su nombre no termina con &lt;code&gt;!&lt;/code&gt; . Por ejemplo &lt;code&gt;findfirst(regex, str)&lt;/code&gt; muta su argumento &lt;code&gt;regex&lt;/code&gt; o &lt;a href=&quot;../../stdlib/random/index#Base.rand&quot;&gt; &lt;code&gt;rand()&lt;/code&gt; &lt;/a&gt; cambia &lt;code&gt;Base.GLOBAL_RNG&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2b447ea6c22b7217cd1a32ca44046e314803b64e" translate="yes" xml:space="preserve">
          <source>When using precompilation, it is important to keep a clear sense of the distinction between the compilation phase and the execution phase. In this mode, it will often be much more clearly apparent that Julia is a compiler which allows execution of arbitrary Julia code, not a standalone interpreter that also generates compiled code.</source>
          <target state="translated">Cuando se utiliza la precompilación,es importante mantener un sentido claro de la distinción entre la fase de compilación y la fase de ejecución.En este modo,a menudo será mucho más evidente que Julia es un compilador que permite la ejecución de código arbitrario de Julia,no un intérprete independiente que también genera código compilado.</target>
        </trans-unit>
        <trans-unit id="0e5558e1451a680e9ddfe72dac1bc38bd5461d8f" translate="yes" xml:space="preserve">
          <source>When working with parameterized types, including arrays, it is best to avoid parameterizing with abstract types where possible.</source>
          <target state="translated">Cuando se trabaja con tipos parametrizados,incluidos los arrays,es mejor evitar parametrizar con tipos abstractos cuando sea posible.</target>
        </trans-unit>
        <trans-unit id="abf66d0515d50ea07459b30e9a61d6da0706813b" translate="yes" xml:space="preserve">
          <source>When writing Julia callable functions, it might be necessary to validate arguments and throw exceptions to indicate errors. A typical type check looks like:</source>
          <target state="translated">Cuando se escriben las funciones llamables de Julia,puede ser necesario validar los argumentos y lanzar excepciones para indicar errores.Una típica comprobación de tipo parece:</target>
        </trans-unit>
        <trans-unit id="2ad650f8bc2dfe7cd7aa17fa3b6b4fd4a9838167" translate="yes" xml:space="preserve">
          <source>When writing a generator expression with multiple dimensions inside an argument list, parentheses are needed to separate the generator from subsequent arguments:</source>
          <target state="translated">Cuando se escribe una expresión generadora con múltiples dimensiones dentro de una lista de argumentos,se necesitan paréntesis para separar el generador de los argumentos subsiguientes:</target>
        </trans-unit>
        <trans-unit id="a210e70d4d8e363a13a615aeef1246bcb22c3b70" translate="yes" xml:space="preserve">
          <source>When writing an error message, it is preferred to make the first word lowercase. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9df752ca25cefae3e41acb8144a7fbee28150d" translate="yes" xml:space="preserve">
          <source>When writing an error message, it is preferred to make the first word lowercase. For example, &lt;code&gt;size(A) == size(B) || throw(DimensionMismatch(&quot;size of A not equal to size of B&quot;))&lt;/code&gt;</source>
          <target state="translated">Al escribir un mensaje de error, se prefiere poner la primera palabra en min&amp;uacute;scula. Por ejemplo, &lt;code&gt;size(A) == size(B) || throw(DimensionMismatch(&quot;size of A not equal to size of B&quot;))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="746943943c8bd0cb8ffebcb9533c46af3e156c32" translate="yes" xml:space="preserve">
          <source>When writing cross-platform applications or libraries, it is often necessary to allow for differences between operating systems. The variable &lt;code&gt;Sys.KERNEL&lt;/code&gt; can be used to handle such cases. There are several functions in the &lt;code&gt;Sys&lt;/code&gt; module intended to make this easier, such as &lt;code&gt;isunix&lt;/code&gt;, &lt;code&gt;islinux&lt;/code&gt;, &lt;code&gt;isapple&lt;/code&gt;, &lt;code&gt;isbsd&lt;/code&gt;, &lt;code&gt;isfreebsd&lt;/code&gt;, and &lt;code&gt;iswindows&lt;/code&gt;. These may be used as follows:</source>
          <target state="translated">Al escribir aplicaciones o bibliotecas multiplataforma, a menudo es necesario tener en cuenta las diferencias entre los sistemas operativos. La variable &lt;code&gt;Sys.KERNEL&lt;/code&gt; se puede utilizar para manejar estos casos. Hay varias funciones en el m&amp;oacute;dulo &lt;code&gt;Sys&lt;/code&gt; destinadas a facilitar esto, como &lt;code&gt;isunix&lt;/code&gt; , &lt;code&gt;islinux&lt;/code&gt; , &lt;code&gt;isapple&lt;/code&gt; , &lt;code&gt;isbsd&lt;/code&gt; , &lt;code&gt;isfreebsd&lt;/code&gt; e &lt;code&gt;iswindows&lt;/code&gt; . Estos se pueden utilizar de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="140bfa28c1af35b51bf1fbbfbb494996a50b8788" translate="yes" xml:space="preserve">
          <source>When writing data to a file (or other I/O device), forming extra intermediate strings is a source of overhead. Instead of:</source>
          <target state="translated">Cuando se escriben datos en un archivo (u otro dispositivo de E/S),la formación de cadenas intermedias adicionales es una fuente de gastos generales.En lugar de:</target>
        </trans-unit>
        <trans-unit id="ea56a87bb36feaf518131b01ee237cf7ed3e22b2" translate="yes" xml:space="preserve">
          <source>When you are done experimenting with &lt;code&gt;tutorial&lt;/code&gt;, you can return to the &lt;strong&gt;default environment&lt;/strong&gt; by running &lt;code&gt;activate&lt;/code&gt; with no arguments:</source>
          <target state="translated">Cuando haya terminado de experimentar con el &lt;code&gt;tutorial&lt;/code&gt; , puede volver al &lt;strong&gt;entorno predeterminado&lt;/strong&gt; ejecutando &lt;code&gt;activate&lt;/code&gt; sin argumentos:</target>
        </trans-unit>
        <trans-unit id="af850b03f79f23506bb562acc1e616e437cdd077" translate="yes" xml:space="preserve">
          <source>When you might be tempted to dispatch on two or more arguments, consider whether a &quot;wrapper&quot; function might make for a simpler design. For example, instead of writing multiple variants:</source>
          <target state="translated">Cuando pueda estar tentado de despachar sobre dos o más argumentos,considere si una función de &quot;envoltura&quot; podría hacer un diseño más simple.Por ejemplo,en lugar de escribir múltiples variantes:</target>
        </trans-unit>
        <trans-unit id="3e23df6a20bd627b8c4a3ef7db880ac462400664" translate="yes" xml:space="preserve">
          <source>When your broadcast operation involves several arguments, individual argument styles get combined to determine a single &lt;code&gt;DestStyle&lt;/code&gt; that controls the type of the output container. For more details, see &lt;a href=&quot;#writing-binary-broadcasting-rules&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048e5475f471182cd2ededcf0684d7e52f236fb2" translate="yes" xml:space="preserve">
          <source>When your broadcast operation involves several arguments, individual argument styles get combined to determine a single &lt;code&gt;DestStyle&lt;/code&gt; that controls the type of the output container. For more details, see &lt;a href=&quot;#writing-binary-broadcasting-rules-1&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">Cuando su operaci&amp;oacute;n de transmisi&amp;oacute;n involucra varios argumentos, los estilos de argumentos individuales se combinan para determinar un solo &lt;code&gt;DestStyle&lt;/code&gt; que controla el tipo de contenedor de salida. Para obtener m&amp;aacute;s detalles, consulte a &lt;a href=&quot;#writing-binary-broadcasting-rules-1&quot;&gt;continuaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d4fb3c9ea296d79d861a0f19e5fe00c5f37399d" translate="yes" xml:space="preserve">
          <source>Whenever you have created a pointer to Julia data, you must ensure the original data exists until you are done with using the pointer. Many methods in Julia such as &lt;a href=&quot;../../base/c/index#Base.unsafe_load&quot;&gt;&lt;code&gt;unsafe_load&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;String&lt;/code&gt; make copies of data instead of taking ownership of the buffer, so that it is safe to free (or alter) the original data without affecting Julia. A notable exception is &lt;code&gt;unsafe_wrap&lt;/code&gt; which, for performance reasons, shares (or can be told to take ownership of) the underlying buffer.</source>
          <target state="translated">Siempre que haya creado un puntero a los datos de Julia, debe asegurarse de que existan los datos originales hasta que haya terminado de usar el puntero. Muchos m&amp;eacute;todos en Julia, como &lt;a href=&quot;../../base/c/index#Base.unsafe_load&quot;&gt; &lt;code&gt;unsafe_load&lt;/code&gt; &lt;/a&gt; y &lt;code&gt;String&lt;/code&gt; , hacen copias de datos en lugar de tomar posesi&amp;oacute;n del b&amp;uacute;fer, por lo que es seguro liberar (o alterar) los datos originales sin afectar a Julia. Una excepci&amp;oacute;n notable es &lt;code&gt;unsafe_wrap&lt;/code&gt; que, por razones de rendimiento, comparte (o se le puede decir que tome posesi&amp;oacute;n de) el b&amp;uacute;fer subyacente.</target>
        </trans-unit>
        <trans-unit id="1f63c3900c5fc22683d6c7eea47a444379dfc1a7" translate="yes" xml:space="preserve">
          <source>Whenever you have created a pointer to Julia data, you must ensure the original data exists until you have finished using the pointer. Many methods in Julia such as &lt;a href=&quot;../../base/c/index#Base.unsafe_load&quot;&gt;&lt;code&gt;unsafe_load&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;String&lt;/code&gt; make copies of data instead of taking ownership of the buffer, so that it is safe to free (or alter) the original data without affecting Julia. A notable exception is &lt;code&gt;unsafe_wrap&lt;/code&gt; which, for performance reasons, shares (or can be told to take ownership of) the underlying buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc3e56583b16a50bfba8e692c6fe776fd1cb4f1" translate="yes" xml:space="preserve">
          <source>Whenever you subtype &lt;code&gt;AbstractArrayStyle&lt;/code&gt;, you also need to define rules for combining dimensionalities, by creating a constructor for your style that takes a &lt;code&gt;Val(N)&lt;/code&gt; argument. For example:</source>
          <target state="translated">Siempre que escriba un subtipo &lt;code&gt;AbstractArrayStyle&lt;/code&gt; , tambi&amp;eacute;n necesita definir reglas para combinar dimensionalidades, creando un constructor para su estilo que tome un argumento &lt;code&gt;Val(N)&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="3066b7d4e247d114bdc0ef476727d2a6ba818e4d" translate="yes" xml:space="preserve">
          <source>Where possible, try to avoid defining methods that dispatch on specific element types of abstract containers. For example,</source>
          <target state="translated">Cuando sea posible,trate de evitar la definición de métodos que despachen sobre elementos específicos tipos de contenedores abstractos.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="e4b922c6b5958e9ab31dff7d65b2a0ee19971cda" translate="yes" xml:space="preserve">
          <source>Where required, mutable composite objects can be declared with the keyword &lt;a href=&quot;../../base/base/index#mutable%20struct&quot;&gt;&lt;code&gt;mutable struct&lt;/code&gt;&lt;/a&gt;, to be discussed in the next section.</source>
          <target state="translated">Cuando sea necesario, los objetos compuestos mutables se pueden declarar con la palabra clave &lt;a href=&quot;../../base/base/index#mutable%20struct&quot;&gt; &lt;code&gt;mutable struct&lt;/code&gt; &lt;/a&gt; , que se discutir&amp;aacute; en la siguiente secci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d1c9c509d6368e040525363a2e496308085482cd" translate="yes" xml:space="preserve">
          <source>Wherever possible examples should be &lt;strong&gt;self-contained&lt;/strong&gt; and &lt;strong&gt;runnable&lt;/strong&gt; so that readers are able to try them out without having to include any dependencies.</source>
          <target state="translated">Siempre que sea posible, los ejemplos deben ser &lt;strong&gt;aut&amp;oacute;nomos&lt;/strong&gt; y &lt;strong&gt;ejecutables&lt;/strong&gt; para que los lectores puedan probarlos sin tener que incluir dependencias.</target>
        </trans-unit>
        <trans-unit id="ef567ac5cd5d2b217cb8d699a0ed8bd87ebc66fa" translate="yes" xml:space="preserve">
          <source>Whether these Unicode characters are displayed as escapes or shown as special characters depends on your terminal's locale settings and its support for Unicode. String literals are encoded using the UTF-8 encoding. UTF-8 is a variable-width encoding, meaning that not all characters are encoded in the same number of bytes (&quot;code units&quot;). In UTF-8, ASCII characters &amp;mdash; i.e. those with code points less than 0x80 (128) &amp;ndash; are encoded as they are in ASCII, using a single byte, while code points 0x80 and above are encoded using multiple bytes &amp;mdash; up to four per character.</source>
          <target state="translated">El que estos caracteres Unicode se muestren como escapes o como caracteres especiales depende de la configuraci&amp;oacute;n regional de su terminal y su compatibilidad con Unicode. Los literales de cadena se codifican mediante la codificaci&amp;oacute;n UTF-8. UTF-8 es una codificaci&amp;oacute;n de ancho variable, lo que significa que no todos los caracteres est&amp;aacute;n codificados en el mismo n&amp;uacute;mero de bytes (&quot;unidades de c&amp;oacute;digo&quot;). En UTF-8, los caracteres ASCII, es decir, aquellos con puntos de c&amp;oacute;digo de menos de 0x80 (128), se codifican tal como est&amp;aacute;n en ASCII, utilizando un solo byte, mientras que los puntos de c&amp;oacute;digo 0x80 y superiores se codifican utilizando varios bytes, hasta cuatro por car&amp;aacute;cter. .</target>
        </trans-unit>
        <trans-unit id="f7fc267bb32bef8de2de3ffe243f0a016d661b84" translate="yes" xml:space="preserve">
          <source>Whether you're at the REPL or in IJulia, you can typically improve your development experience with &lt;a href=&quot;https://github.com/timholy/Revise.jl&quot;&gt;Revise&lt;/a&gt;. It is common to configure Revise to start whenever julia is started, as per the instructions in the &lt;a href=&quot;https://timholy.github.io/Revise.jl/stable/&quot;&gt;Revise documentation&lt;/a&gt;. Once configured, Revise will track changes to files in any loaded modules, and to any files loaded in to the REPL with &lt;code&gt;includet&lt;/code&gt; (but not with plain &lt;code&gt;include&lt;/code&gt;); you can then edit the files and the changes take effect without restarting your julia session. A standard workflow is similar to the REPL-based workflow above, with the following modifications:</source>
          <target state="translated">Ya sea que est&amp;eacute; en REPL o en IJulia, normalmente puede mejorar su experiencia de desarrollo con &lt;a href=&quot;https://github.com/timholy/Revise.jl&quot;&gt;Revise&lt;/a&gt; . Es com&amp;uacute;n configurar Revise para que se inicie siempre que se inicie julia, seg&amp;uacute;n las instrucciones de la &lt;a href=&quot;https://timholy.github.io/Revise.jl/stable/&quot;&gt;documentaci&amp;oacute;n de Revise&lt;/a&gt; . Una vez configurado, Revise rastrear&amp;aacute; los cambios en los archivos en cualquier m&amp;oacute;dulo cargado y en cualquier archivo cargado en el REPL con &lt;code&gt;includet&lt;/code&gt; (pero no con &lt;code&gt;include&lt;/code&gt; simple ); luego puede editar los archivos y los cambios entrar&amp;aacute;n en vigor sin reiniciar su sesi&amp;oacute;n de julia. Un flujo de trabajo est&amp;aacute;ndar es similar al flujo de trabajo basado en REPL anterior, con las siguientes modificaciones:</target>
        </trans-unit>
        <trans-unit id="8a4dc663436f3244e6df7b1b5d61395f232fa789" translate="yes" xml:space="preserve">
          <source>Which dependencies a package in a package directory can import depends on whether the package contains a project file:</source>
          <target state="translated">Las dependencias que puede importar un paquete en un directorio de paquete dependen de si el paquete contiene un archivo de proyecto:</target>
        </trans-unit>
        <trans-unit id="756eba64f92afee04dba30cffc4bf61294ef8525" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;#Base.macroexpand&quot;&gt;&lt;code&gt;macroexpand&lt;/code&gt;&lt;/a&gt; has an explicit &lt;code&gt;module&lt;/code&gt; argument, &lt;code&gt;@macroexpand&lt;/code&gt; always</source>
          <target state="translated">Mientras que &lt;a href=&quot;#Base.macroexpand&quot;&gt; &lt;code&gt;macroexpand&lt;/code&gt; &lt;/a&gt; tiene un argumento de &lt;code&gt;module&lt;/code&gt; expl&amp;iacute;cito , &lt;code&gt;@macroexpand&lt;/code&gt; siempre</target>
        </trans-unit>
        <trans-unit id="184a46eafa36dca281973d7f2d6b87f46821a4c2" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;#Base.macroexpand&quot;&gt;&lt;code&gt;macroexpand&lt;/code&gt;&lt;/a&gt; has an explicit &lt;code&gt;module&lt;/code&gt; argument, &lt;code&gt;@macroexpand&lt;/code&gt; always expands with respect to the module in which it is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc49efbeeb77badc02c9b1bad7194e67a387a92" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;#Base.macroexpand&quot;&gt;&lt;code&gt;macroexpand&lt;/code&gt;&lt;/a&gt; takes a keyword argument &lt;code&gt;recursive&lt;/code&gt;, &lt;code&gt;@macroexpand&lt;/code&gt;</source>
          <target state="translated">Mientras que &lt;a href=&quot;#Base.macroexpand&quot;&gt; &lt;code&gt;macroexpand&lt;/code&gt; &lt;/a&gt; toma un argumento de palabra clave &lt;code&gt;recursive&lt;/code&gt; , &lt;code&gt;@macroexpand&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9228b710aa24ac839d6bc3a76205d3aff72284d" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;#Base.macroexpand&quot;&gt;&lt;code&gt;macroexpand&lt;/code&gt;&lt;/a&gt; takes a keyword argument &lt;code&gt;recursive&lt;/code&gt;, &lt;code&gt;@macroexpand&lt;/code&gt; is always recursive. For a non recursive macro version, see &lt;a href=&quot;#Base.@macroexpand1&quot;&gt;&lt;code&gt;@macroexpand1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c2f9203af0f3ce23ef8c2d94a94796ece99629" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;*&lt;/code&gt; may seem like a surprising choice to users of languages that provide &lt;code&gt;+&lt;/code&gt; for string concatenation, this use of &lt;code&gt;*&lt;/code&gt; has precedent in mathematics, particularly in abstract algebra.</source>
          <target state="translated">Si bien &lt;code&gt;*&lt;/code&gt; puede parecer una elecci&amp;oacute;n sorprendente para los usuarios de lenguajes que proporcionan &lt;code&gt;+&lt;/code&gt; para la concatenaci&amp;oacute;n de cadenas, este uso de &lt;code&gt;*&lt;/code&gt; tiene precedentes en matem&amp;aacute;ticas, particularmente en &amp;aacute;lgebra abstracta.</target>
        </trans-unit>
        <trans-unit id="bbcff3d6feff5ad14e53fb09db15ddf33d0354ee" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;@simd&lt;/code&gt; needs to be placed directly in front of an innermost &lt;code&gt;for&lt;/code&gt; loop, both &lt;code&gt;@inbounds&lt;/code&gt; and &lt;code&gt;@fastmath&lt;/code&gt; can be applied to either single expressions or all the expressions that appear within nested blocks of code, e.g., using &lt;code&gt;@inbounds begin&lt;/code&gt; or &lt;code&gt;@inbounds for ...&lt;/code&gt;.</source>
          <target state="translated">Si bien &lt;code&gt;@simd&lt;/code&gt; debe colocarse directamente frente a un bucle &lt;code&gt;for&lt;/code&gt; m&amp;aacute;s interno , tanto &lt;code&gt;@inbounds&lt;/code&gt; como &lt;code&gt;@fastmath&lt;/code&gt; se pueden aplicar a expresiones individuales o todas las expresiones que aparecen dentro de bloques de c&amp;oacute;digo anidados, por ejemplo, usando &lt;code&gt;@inbounds begin&lt;/code&gt; o &lt;code&gt;@inbounds for ...&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b0fd7a7891ebce6279ddd6c714b5386fc801ad6" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;jl_eval_string&lt;/code&gt; allows C to obtain the result of a Julia expression, it does not allow passing arguments computed in C to Julia. For this you will need to invoke Julia functions directly, using &lt;code&gt;jl_call&lt;/code&gt;:</source>
          <target state="translated">Si bien &lt;code&gt;jl_eval_string&lt;/code&gt; permite que C obtenga el resultado de una expresi&amp;oacute;n de Julia, no permite pasar argumentos calculados en C a Julia. Para esto, necesitar&amp;aacute; invocar las funciones de Julia directamente, usando &lt;code&gt;jl_call&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f07b0b9c023a9dca4df041f23eee5d568f348dc9" translate="yes" xml:space="preserve">
          <source>While Julia imposes few restrictions on valid names, it has become useful to adopt the following conventions:</source>
          <target state="translated">Aunque Julia impone pocas restricciones a los nombres válidos,se ha hecho útil adoptar las siguientes convenciones:</target>
        </trans-unit>
        <trans-unit id="9611531e19b0b6f41cb83ee6678a76716493dd1f" translate="yes" xml:space="preserve">
          <source>While complex dispatch logic is not required for performance or usability, sometimes it can be the best way to express some algorithm. Here are a few common design patterns that come up sometimes when using dispatch in this way.</source>
          <target state="translated">Aunque la lógica de despacho compleja no es necesaria para el rendimiento o la utilidad,a veces puede ser la mejor manera de expresar algún algoritmo.Aquí hay algunos patrones de diseño comunes que surgen a veces cuando se utiliza el despacho de esta manera.</target>
        </trans-unit>
        <trans-unit id="6a613d3a63e35707ed9f74c525fa3af91032ab48" translate="yes" xml:space="preserve">
          <source>While consecutive &lt;code&gt;remotecall&lt;/code&gt;s to the same worker are serialized in the order they are invoked, the order of executions on the remote worker is undetermined. For example, &lt;code&gt;remote_do(f1, 2); remotecall(f2, 2); remote_do(f3, 2)&lt;/code&gt; will serialize the call to &lt;code&gt;f1&lt;/code&gt;, followed by &lt;code&gt;f2&lt;/code&gt; and &lt;code&gt;f3&lt;/code&gt; in that order. However, it is not guaranteed that &lt;code&gt;f1&lt;/code&gt; is executed before &lt;code&gt;f3&lt;/code&gt; on worker 2.</source>
          <target state="translated">Mientras que las &lt;code&gt;remotecall&lt;/code&gt; consecutivas al mismo trabajador se serializan en el orden en que se invocan, el orden de ejecuci&amp;oacute;n en el trabajador remoto es indeterminado. Por ejemplo, &lt;code&gt;remote_do(f1, 2); remotecall(f2, 2); remote_do(f3, 2)&lt;/code&gt; serializar&amp;aacute; la llamada a &lt;code&gt;f1&lt;/code&gt; , seguida de &lt;code&gt;f2&lt;/code&gt; y &lt;code&gt;f3&lt;/code&gt; en ese orden. Sin embargo, no se garantiza que &lt;code&gt;f1&lt;/code&gt; se ejecute antes que &lt;code&gt;f3&lt;/code&gt; en el trabajador 2.</target>
        </trans-unit>
        <trans-unit id="51e62aaaf2b53ae1f62514f54b2a553fcf0cfeab" translate="yes" xml:space="preserve">
          <source>While handling an exception further exceptions may be thrown. It can be useful to inspect all these exceptions to identify the root cause of a problem. The julia runtime supports this by pushing each exception onto an internal &lt;em&gt;exception stack&lt;/em&gt; as it occurs. When the code exits a &lt;code&gt;catch&lt;/code&gt; normally, any exceptions which were pushed onto the stack in the associated &lt;code&gt;try&lt;/code&gt; are considered to be successfully handled and are removed from the stack.</source>
          <target state="translated">Mientras se maneja una excepci&amp;oacute;n, se pueden generar m&amp;aacute;s excepciones. Puede resultar &amp;uacute;til inspeccionar todas estas excepciones para identificar la causa ra&amp;iacute;z de un problema. El tiempo de ejecuci&amp;oacute;n de julia admite esto insertando cada excepci&amp;oacute;n en una &lt;em&gt;pila de excepciones&lt;/em&gt; interna a medida que ocurre. Cuando el c&amp;oacute;digo sale de una &lt;code&gt;catch&lt;/code&gt; normalmente, cualquier excepci&amp;oacute;n que se empuj&amp;oacute; a la pila en el &lt;code&gt;try&lt;/code&gt; asociado se considera que se ha manejado correctamente y se elimina de la pila.</target>
        </trans-unit>
        <trans-unit id="9ca37d3403041f9ab3487c0564b96870987e2b6c" translate="yes" xml:space="preserve">
          <source>While having easy access to information about the current state of the callstack can be helpful in many places, the most obvious application is in error handling and debugging.</source>
          <target state="translated">Aunque tener fácil acceso a la información sobre el estado actual de la llamada puede ser útil en muchos lugares,la aplicación más obvia es en el manejo de errores y la depuración.</target>
        </trans-unit>
        <trans-unit id="df4de512495b592481ddaae589dfa8a7c51cf0bd" translate="yes" xml:space="preserve">
          <source>While it isn't normally necessary, user-defined types can override the default &lt;code&gt;deepcopy&lt;/code&gt; behavior by defining a specialized version of the function &lt;code&gt;deepcopy_internal(x::T, dict::IdDict)&lt;/code&gt; (which shouldn't otherwise be used), where &lt;code&gt;T&lt;/code&gt; is the type to be specialized for, and &lt;code&gt;dict&lt;/code&gt; keeps track of objects copied so far within the recursion. Within the definition, &lt;code&gt;deepcopy_internal&lt;/code&gt; should be used in place of &lt;code&gt;deepcopy&lt;/code&gt;, and the &lt;code&gt;dict&lt;/code&gt; variable should be updated as appropriate before returning.</source>
          <target state="translated">Si bien normalmente no es necesario, los tipos definidos por el usuario pueden anular el comportamiento predeterminado de &lt;code&gt;deepcopy&lt;/code&gt; definiendo una versi&amp;oacute;n especializada de la funci&amp;oacute;n &lt;code&gt;deepcopy_internal(x::T, dict::IdDict)&lt;/code&gt; (que de otra manera no deber&amp;iacute;a usarse), donde &lt;code&gt;T&lt;/code&gt; es el tipo para el que se debe especializar y &lt;code&gt;dict&lt;/code&gt; realiza un seguimiento de los objetos copiados hasta ahora dentro de la recursividad. Dentro de la definici&amp;oacute;n, &lt;code&gt;deepcopy_internal&lt;/code&gt; debe usarse en lugar de &lt;code&gt;deepcopy&lt;/code&gt; , y la variable &lt;code&gt;dict&lt;/code&gt; debe actualizarse seg&amp;uacute;n corresponda antes de regresar.</target>
        </trans-unit>
        <trans-unit id="3f3d13eb12580ee4231b089eaa3cb6f0dbbb0c0a" translate="yes" xml:space="preserve">
          <source>While outer constructor methods succeed in addressing the problem of providing additional convenience methods for constructing objects, they fail to address the other two use cases mentioned in the introduction of this chapter: enforcing invariants, and allowing construction of self-referential objects. For these problems, one needs &lt;em&gt;inner&lt;/em&gt; constructor methods. An inner constructor method is like an outer constructor method, except for two differences:</source>
          <target state="translated">Si bien los m&amp;eacute;todos de constructor externo logran abordar el problema de proporcionar m&amp;eacute;todos de conveniencia adicionales para construir objetos, fallan en abordar los otros dos casos de uso mencionados en la introducci&amp;oacute;n de este cap&amp;iacute;tulo: imponer invariantes y permitir la construcci&amp;oacute;n de objetos autorreferenciales. Para estos problemas, se necesitan m&amp;eacute;todos de constructores &lt;em&gt;internos&lt;/em&gt; . Un m&amp;eacute;todo de constructor interno es como un m&amp;eacute;todo de constructor externo, excepto por dos diferencias:</target>
        </trans-unit>
        <trans-unit id="cc7d60dfb2e235e3358134a6468c679f21f0ad14" translate="yes" xml:space="preserve">
          <source>While propercase return the same value in the corresponding &lt;a href=&quot;#Dates.Period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; type:</source>
          <target state="translated">Mientras que el caso apropiado devuelve el mismo valor en el tipo de &lt;a href=&quot;#Dates.Period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; correspondiente :</target>
        </trans-unit>
        <trans-unit id="342603ec72e053e98ba85ef7e5ec03e87ad74dcc" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; constructor expects a 0-argument function, the &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; method that creates a task-bound channel expects a function that accepts a single argument of type &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. A common pattern is for the producer to be parameterized, in which case a partial function application is needed to create a 0 or 1 argument &lt;a href=&quot;../functions/index#man-anonymous-functions&quot;&gt;anonymous function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0103ec498dfe3018e856d3ce11ad20db1b0525e9" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; constructor expects a 0-argument function, the &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; method which creates a channel bound task expects a function that accepts a single argument of type &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. A common pattern is for the producer to be parameterized, in which case a partial function application is needed to create a 0 or 1 argument &lt;a href=&quot;../functions/index#man-anonymous-functions-1&quot;&gt;anonymous function&lt;/a&gt;.</source>
          <target state="translated">Mientras que el constructor &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; espera una funci&amp;oacute;n de 0 argumentos, el m&amp;eacute;todo &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; que crea una tarea vinculada al canal espera una funci&amp;oacute;n que acepta un &amp;uacute;nico argumento de tipo &lt;a href=&quot;../../base/parallel/index#Base.Channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt; . Un patr&amp;oacute;n com&amp;uacute;n es parametrizar el productor, en cuyo caso se necesita una aplicaci&amp;oacute;n de funci&amp;oacute;n parcial para crear una &lt;a href=&quot;../functions/index#man-anonymous-functions-1&quot;&gt;funci&amp;oacute;n an&amp;oacute;nima de&lt;/a&gt; 0 o 1 argumento .</target>
        </trans-unit>
        <trans-unit id="218a44d9559edb27cfb4f29479eb4a5c8c1ee312" translate="yes" xml:space="preserve">
          <source>While the casual programmer need not explicitly use types or multiple dispatch, they are the core unifying features of Julia: functions are defined on different combinations of argument types, and applied by dispatching to the most specific matching definition. This model is a good fit for mathematical programming, where it is unnatural for the first argument to &quot;own&quot; an operation as in traditional object-oriented dispatch. Operators are just functions with special notation &amp;ndash; to extend addition to new user-defined data types, you define new methods for the &lt;code&gt;+&lt;/code&gt; function. Existing code then seamlessly applies to the new data types.</source>
          <target state="translated">Si bien el programador casual no necesita usar expl&amp;iacute;citamente tipos o env&amp;iacute;o m&amp;uacute;ltiple, son las caracter&amp;iacute;sticas unificadoras centrales de Julia: las funciones se definen en diferentes combinaciones de tipos de argumentos y se aplican mediante el env&amp;iacute;o a la definici&amp;oacute;n coincidente m&amp;aacute;s espec&amp;iacute;fica. Este modelo se ajusta bien a la programaci&amp;oacute;n matem&amp;aacute;tica, donde no es natural que el primer argumento &quot;posea&quot; una operaci&amp;oacute;n como en el despacho tradicional orientado a objetos. Los operadores son solo funciones con notaci&amp;oacute;n especial: para ampliar la adici&amp;oacute;n a nuevos tipos de datos definidos por el usuario, defina nuevos m&amp;eacute;todos para la funci&amp;oacute;n &lt;code&gt;+&lt;/code&gt; . El c&amp;oacute;digo existente se aplica sin problemas a los nuevos tipos de datos.</target>
        </trans-unit>
        <trans-unit id="0bb2d55855117a6a29dcfe66a2d059180dbf3aa5" translate="yes" xml:space="preserve">
          <source>While the compiler can now do its job perfectly well, there are cases where &lt;em&gt;you&lt;/em&gt; might wish that your code could do different things depending on the &lt;em&gt;element type&lt;/em&gt; of &lt;code&gt;a&lt;/code&gt;. Usually the best way to achieve this is to wrap your specific operation (here, &lt;code&gt;foo&lt;/code&gt;) in a separate function:</source>
          <target state="translated">Si bien el compilador ahora puede hacer su trabajo perfectamente bien, hay casos en los que &lt;em&gt;es&lt;/em&gt; posible que desee que su c&amp;oacute;digo pueda hacer cosas diferentes seg&amp;uacute;n el &lt;em&gt;tipo&lt;/em&gt; de &lt;em&gt;elemento&lt;/em&gt; de &lt;code&gt;a&lt;/code&gt; . Por lo general, la mejor manera de lograr esto es envolver su operaci&amp;oacute;n espec&amp;iacute;fica (aqu&amp;iacute;, &lt;code&gt;foo&lt;/code&gt; ) en una funci&amp;oacute;n separada:</target>
        </trans-unit>
        <trans-unit id="a623753d4cea0b9be23eebbdfff0f9b8d6e62a17" translate="yes" xml:space="preserve">
          <source>While the default transport layer uses plain &lt;a href=&quot;../../stdlib/sockets/index#Sockets.TCPSocket&quot;&gt;&lt;code&gt;TCPSocket&lt;/code&gt;&lt;/a&gt;, it is possible for a Julia cluster to provide its own transport.</source>
          <target state="translated">Si bien la capa de transporte predeterminada usa &lt;a href=&quot;../../stdlib/sockets/index#Sockets.TCPSocket&quot;&gt; &lt;code&gt;TCPSocket&lt;/code&gt; &lt;/a&gt; simple , es posible que un cl&amp;uacute;ster de Julia proporcione su propio transporte.</target>
        </trans-unit>
        <trans-unit id="30845fa92bdd35d537ad635b6b31f53d4bb049ee" translate="yes" xml:space="preserve">
          <source>While the streaming I/O API is synchronous, the underlying implementation is fully asynchronous.</source>
          <target state="translated">Mientras que la API de E/S de transmisión es síncrona,la implementación subyacente es totalmente asíncrona.</target>
        </trans-unit>
        <trans-unit id="5e5cf9df078dc718967f536a7ab7760f447547c9" translate="yes" xml:space="preserve">
          <source>While this behavior might surprise some, the choice is deliberate. The main reason is the presence of immutable objects within Julia, which cannot change their value once created. Indeed, a number is an immutable object; the statements &lt;code&gt;x = 5; x += 1&lt;/code&gt; do not modify the meaning of &lt;code&gt;5&lt;/code&gt;, they modify the value bound to &lt;code&gt;x&lt;/code&gt;. For an immutable, the only way to change the value is to reassign it.</source>
          <target state="translated">Si bien este comportamiento puede sorprender a algunos, la elecci&amp;oacute;n es deliberada. La raz&amp;oacute;n principal es la presencia de objetos inmutables dentro de Julia, que no pueden cambiar su valor una vez creados. De hecho, un n&amp;uacute;mero es un objeto inmutable; las declaraciones &lt;code&gt;x = 5; x += 1&lt;/code&gt; no modifican el significado de &lt;code&gt;5&lt;/code&gt; , modifican el valor ligado &lt;code&gt;x&lt;/code&gt; . Para un inmutable, la &amp;uacute;nica forma de cambiar el valor es reasignarlo.</target>
        </trans-unit>
        <trans-unit id="a96e95242dd16f7c7d2c64c54621f6378735368c" translate="yes" xml:space="preserve">
          <source>While this can be inconvenient when you are developing new code, there's an excellent workaround. Modules can be replaced by redefining them, and so if you wrap all your new code inside a module you can redefine types and constants. You can't import the type names into &lt;code&gt;Main&lt;/code&gt; and then expect to be able to redefine them there, but you can use the module name to resolve the scope. In other words, while developing you might use a workflow something like this:</source>
          <target state="translated">Si bien esto puede ser un inconveniente cuando est&amp;aacute; desarrollando un nuevo c&amp;oacute;digo, existe una excelente soluci&amp;oacute;n. Los m&amp;oacute;dulos se pueden reemplazar redefini&amp;eacute;ndolos, por lo que si envuelve todo su nuevo c&amp;oacute;digo dentro de un m&amp;oacute;dulo, puede redefinir tipos y constantes. No puede importar los nombres de los tipos en &lt;code&gt;Main&lt;/code&gt; y luego esperar poder redefinirlos all&amp;iacute;, pero puede usar el nombre del m&amp;oacute;dulo para resolver el alcance. En otras palabras, durante el desarrollo, puede utilizar un flujo de trabajo como este:</target>
        </trans-unit>
        <trans-unit id="34c0c3d9948638672054e0c07121ec58601d9fa6" translate="yes" xml:space="preserve">
          <source>While this is starting to support more of the &lt;a href=&quot;../arrays/index#man-array-indexing&quot;&gt;indexing operations supported by some of the builtin types&lt;/a&gt;, there's still quite a number of behaviors missing. This &lt;code&gt;Squares&lt;/code&gt; sequence is starting to look more and more like a vector as we've added behaviors to it. Instead of defining all these behaviors ourselves, we can officially define it as a subtype of an &lt;a href=&quot;../../base/arrays/index#Core.AbstractArray&quot;&gt;&lt;code&gt;AbstractArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649d185e29a40990efde41ef5a4ec1d691dac077" translate="yes" xml:space="preserve">
          <source>While this is starting to support more of the &lt;a href=&quot;../arrays/index#man-array-indexing-1&quot;&gt;indexing operations supported by some of the builtin types&lt;/a&gt;, there's still quite a number of behaviors missing. This &lt;code&gt;Squares&lt;/code&gt; sequence is starting to look more and more like a vector as we've added behaviors to it. Instead of defining all these behaviors ourselves, we can officially define it as a subtype of an &lt;a href=&quot;../../base/arrays/index#Core.AbstractArray&quot;&gt;&lt;code&gt;AbstractArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si bien esto est&amp;aacute; comenzando a admitir m&amp;aacute;s &lt;a href=&quot;../arrays/index#man-array-indexing-1&quot;&gt;operaciones de indexaci&amp;oacute;n admitidas por algunos de los tipos integrados&lt;/a&gt; , todav&amp;iacute;a faltan varios comportamientos. Esta secuencia de &lt;code&gt;Squares&lt;/code&gt; comienza a parecerse cada vez m&amp;aacute;s a un vector a medida que le agregamos comportamientos. En lugar de definir todos estos comportamientos nosotros mismos, podemos definirlo oficialmente como un subtipo de &lt;a href=&quot;../../base/arrays/index#Core.AbstractArray&quot;&gt; &lt;code&gt;AbstractArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="425afa4408859b9cd15376be9e2c708f0297351c" translate="yes" xml:space="preserve">
          <source>While we can rely upon generic implementations, we can also extend specific methods where we know there is a simpler algorithm. For example, there's a formula to compute the sum of squares, so we can override the generic iterative version with a more performant solution:</source>
          <target state="translated">Si bien podemos confiar en implementaciones genéricas,también podemos extender métodos específicos donde sabemos que hay un algoritmo más simple.Por ejemplo,hay una fórmula para calcular la suma de los cuadrados,por lo que podemos anular la versión iterativa genérica con una solución más eficiente:</target>
        </trans-unit>
        <trans-unit id="e85aee206728001710e24ad54c1cc3e292a7042b" translate="yes" xml:space="preserve">
          <source>While you are allowed to create objects with uninitialized fields, any access to an uninitialized reference is an immediate error:</source>
          <target state="translated">Aunque se le permite crear objetos con campos no inicializados,cualquier acceso a una referencia no inicializada es un error inmediato:</target>
        </trans-unit>
        <trans-unit id="cf81a2eac5fd3376ed443fa4628dd130f7562794" translate="yes" xml:space="preserve">
          <source>White Bullet</source>
          <target state="translated">Bala blanca</target>
        </trans-unit>
        <trans-unit id="e494bf31f9dcb1983954232ccfd79f61ec932828" translate="yes" xml:space="preserve">
          <source>White Circle</source>
          <target state="translated">Círculo blanco</target>
        </trans-unit>
        <trans-unit id="a7bc8512f73b7bb391a5c2ccf19c842fbda78279" translate="yes" xml:space="preserve">
          <source>White Circle With Dot Right</source>
          <target state="translated">Círculo blanco con punto derecho</target>
        </trans-unit>
        <trans-unit id="5b837af6377ef96cf6a166b867c0c8c92c78103a" translate="yes" xml:space="preserve">
          <source>White Circle With Lower Left Quadrant</source>
          <target state="translated">Círculo blanco con el cuadrante inferior izquierdo</target>
        </trans-unit>
        <trans-unit id="7a596dbaa9fb2296442e407fd5b015383dac7bbf" translate="yes" xml:space="preserve">
          <source>White Circle With Lower Right Quadrant</source>
          <target state="translated">Círculo blanco con el cuadrante inferior derecho</target>
        </trans-unit>
        <trans-unit id="672dc6b358ee6b861860cd20aec5494e0af288b8" translate="yes" xml:space="preserve">
          <source>White Circle With Two Dots</source>
          <target state="translated">Círculo blanco con dos puntos</target>
        </trans-unit>
        <trans-unit id="1f4da13b448e4c14ba5b609f9bb4745e9e5ca6e9" translate="yes" xml:space="preserve">
          <source>White Circle With Upper Left Quadrant</source>
          <target state="translated">Círculo blanco con el cuadrante superior izquierdo</target>
        </trans-unit>
        <trans-unit id="461fb2b1ea25d153f7a6aa34a5fd39118d45bba4" translate="yes" xml:space="preserve">
          <source>White Circle With Upper Right Quadrant</source>
          <target state="translated">Círculo blanco con el cuadrante superior derecho</target>
        </trans-unit>
        <trans-unit id="a6115fcd670ee20901c40ff2b1b9797df7dfa006" translate="yes" xml:space="preserve">
          <source>White Club Suit</source>
          <target state="translated">Traje de garrote blanco</target>
        </trans-unit>
        <trans-unit id="f952ed3ad8fab1cb62467e61cab89d2d1bc7c141" translate="yes" xml:space="preserve">
          <source>White Diamond</source>
          <target state="translated">Diamante Blanco</target>
        </trans-unit>
        <trans-unit id="55ff3a5814a60ca22f7334da0fe0a03866b29690" translate="yes" xml:space="preserve">
          <source>White Diamond Containing Black Small Diamond</source>
          <target state="translated">Diamante blanco que contiene diamante negro pequeño</target>
        </trans-unit>
        <trans-unit id="8ede27e8a98dcab5fa658af9ff95c8f2de052979" translate="yes" xml:space="preserve">
          <source>White Diamond Suit</source>
          <target state="translated">Traje de diamantes blancos</target>
        </trans-unit>
        <trans-unit id="25645a80840249c1631ced95a1131fd5693d26a2" translate="yes" xml:space="preserve">
          <source>White Down Pointing Backhand Index</source>
          <target state="translated">Índice de retroceso de White Down Pointing</target>
        </trans-unit>
        <trans-unit id="3da143c67945743d6fa21635f9f5531063fb585f" translate="yes" xml:space="preserve">
          <source>White Down-Pointing Small Triangle / White Down Pointing Small Triangle</source>
          <target state="translated">White Down-Pointing Small Triangle/White Down Pointing Small Triangle</target>
        </trans-unit>
        <trans-unit id="d85b319d306b744560c684c8558c3150f25c759e" translate="yes" xml:space="preserve">
          <source>White Down-Pointing Triangle / White Down Pointing Triangle</source>
          <target state="translated">Triángulo Blanco de Señalización Hacia Abajo/Triángulo Blanco de Señalización Hacia Abajo</target>
        </trans-unit>
        <trans-unit id="e9b368a5d40031b023d531fc80971be08451a032" translate="yes" xml:space="preserve">
          <source>White Exclamation Mark Ornament</source>
          <target state="translated">Adorno de la Marca de Exclamación Blanca</target>
        </trans-unit>
        <trans-unit id="10d649860b97fdd765058196d5af9ef4b8dbb88c" translate="yes" xml:space="preserve">
          <source>White Flower</source>
          <target state="translated">Flor Blanca</target>
        </trans-unit>
        <trans-unit id="f94d39c1cd22b27b47b2f3f915dce302928d66ca" translate="yes" xml:space="preserve">
          <source>White Heart Suit</source>
          <target state="translated">Traje de corazón blanco</target>
        </trans-unit>
        <trans-unit id="26de1b9a5e6c3681524ba9195b2307746d320518" translate="yes" xml:space="preserve">
          <source>White Heavy Check Mark</source>
          <target state="translated">Marca blanca de verificación pesada</target>
        </trans-unit>
        <trans-unit id="613af43285ba7a0ae894f4cfb736239ef65a6154" translate="yes" xml:space="preserve">
          <source>White Hexagon</source>
          <target state="translated">Hexágono Blanco</target>
        </trans-unit>
        <trans-unit id="7b5e7d13cd121c85b4bb13208c84034861c7cb6e" translate="yes" xml:space="preserve">
          <source>White Horizontal Ellipse</source>
          <target state="translated">Elipse horizontal blanca</target>
        </trans-unit>
        <trans-unit id="f4d79e99747238a6e41f2d61025ecfbc894087c0" translate="yes" xml:space="preserve">
          <source>White Large Square</source>
          <target state="translated">Cuadrado Grande Blanco</target>
        </trans-unit>
        <trans-unit id="e51ee8c21e96d837babac571a1cd183c3ac42093" translate="yes" xml:space="preserve">
          <source>White Left Pointing Backhand Index</source>
          <target state="translated">Índice de retroceso de la izquierda blanca</target>
        </trans-unit>
        <trans-unit id="680cc5a2c271605dbb7cd76466eaa1ee28fd3e83" translate="yes" xml:space="preserve">
          <source>White Left-Pointing Pointer / White Left Pointing Pointer</source>
          <target state="translated">Puntero blanco de la izquierda/Puntero blanco de la izquierda</target>
        </trans-unit>
        <trans-unit id="2d97b16b2bf05311d60c6154fd15c292463d76a4" translate="yes" xml:space="preserve">
          <source>White Left-Pointing Small Triangle / White Left Pointing Small Triangle</source>
          <target state="translated">Triángulo pequeño con punta blanca izquierda/Triángulo pequeño con punta blanca izquierda</target>
        </trans-unit>
        <trans-unit id="b2bd60620f1288519f88e1cee597586190d78f96" translate="yes" xml:space="preserve">
          <source>White Left-Pointing Triangle / White Left Pointing Triangle</source>
          <target state="translated">Triángulo blanco de la izquierda/Triángulo blanco de la izquierda</target>
        </trans-unit>
        <trans-unit id="a5d0b3f0af3e38060d7de792c6bdcbb1eb5e3f10" translate="yes" xml:space="preserve">
          <source>White Medium Diamond</source>
          <target state="translated">Diamante Blanco Medio</target>
        </trans-unit>
        <trans-unit id="f7c3621af62bb9ea6bd08a5b8ee3da3a2fd40e3f" translate="yes" xml:space="preserve">
          <source>White Medium Lozenge</source>
          <target state="translated">Pastilla blanca mediana</target>
        </trans-unit>
        <trans-unit id="ea7abd8f6fe495417dc6ec52a0a1c7afa3e6f9dc" translate="yes" xml:space="preserve">
          <source>White Medium Small Square</source>
          <target state="translated">Blanco Mediano Pequeño Cuadrado</target>
        </trans-unit>
        <trans-unit id="a893fa5318683cd059cb5ee66a5b426a43ead599" translate="yes" xml:space="preserve">
          <source>White Medium Square</source>
          <target state="translated">Cuadrado Medio Blanco</target>
        </trans-unit>
        <trans-unit id="6f8fdba894c29225da318fd533696d2f839ae78e" translate="yes" xml:space="preserve">
          <source>White Medium Star</source>
          <target state="translated">Estrella Blanca Media</target>
        </trans-unit>
        <trans-unit id="94f0f6d1e4fad29f296a0cc4fee17a4f4b0a35d5" translate="yes" xml:space="preserve">
          <source>White Parallelogram</source>
          <target state="translated">paralelogramo blanco</target>
        </trans-unit>
        <trans-unit id="ac95a34ae3b4846ba7cad308897ae65184ceb6f9" translate="yes" xml:space="preserve">
          <source>White Pentagon</source>
          <target state="translated">Pentágono Blanco</target>
        </trans-unit>
        <trans-unit id="9907ea5b1099f4ea56141347654e577f39e45ef2" translate="yes" xml:space="preserve">
          <source>White Question Mark Ornament</source>
          <target state="translated">Adorno blanco de signo de interrogación</target>
        </trans-unit>
        <trans-unit id="dd8532ae60e7384f04353f222ba8f658123bc5cb" translate="yes" xml:space="preserve">
          <source>White Rectangle</source>
          <target state="translated">Rectángulo blanco</target>
        </trans-unit>
        <trans-unit id="cc520b6f425ec21f629f8629e02c0432fdbb8d02" translate="yes" xml:space="preserve">
          <source>White Right Pointing Backhand Index</source>
          <target state="translated">Índice de retroceso de la puntería derecha blanca</target>
        </trans-unit>
        <trans-unit id="727ea857bd3c329445166547fdb91d69eb72e260" translate="yes" xml:space="preserve">
          <source>White Right-Pointing Pentagon</source>
          <target state="translated">Pentágono blanco de punta derecha</target>
        </trans-unit>
        <trans-unit id="ef4a6513f3dbf938488f4c84a4ec11d06b65d445" translate="yes" xml:space="preserve">
          <source>White Right-Pointing Pointer / White Right Pointing Pointer</source>
          <target state="translated">White Right-Pointing Pointer/White Right Pointing Pointer</target>
        </trans-unit>
        <trans-unit id="eef06644e488135d446e5fbd8a4b2af2b92f1fca" translate="yes" xml:space="preserve">
          <source>White Right-Pointing Small Triangle / White Right Pointing Small Triangle</source>
          <target state="translated">Triángulo pequeño con punta derecha blanca/Triángulo pequeño con punta derecha blanca</target>
        </trans-unit>
        <trans-unit id="1b5953087f00f8c08a0eba9649a19ee7ed4ccc61" translate="yes" xml:space="preserve">
          <source>White Right-Pointing Triangle / White Right Pointing Triangle</source>
          <target state="translated">Triángulo blanco puntiagudo derecho/Triángulo blanco puntiagudo derecho</target>
        </trans-unit>
        <trans-unit id="4652a549f479384e502bd957e68bce478919740b" translate="yes" xml:space="preserve">
          <source>White Small Lozenge</source>
          <target state="translated">Pequeña pastilla blanca</target>
        </trans-unit>
        <trans-unit id="819c8924b69ae048832f9f245654a0f3675e7d7f" translate="yes" xml:space="preserve">
          <source>White Small Square</source>
          <target state="translated">Pequeño cuadrado blanco</target>
        </trans-unit>
        <trans-unit id="9edb5e7c110d675d95bbe00187a763284fceeb66" translate="yes" xml:space="preserve">
          <source>White Small Star</source>
          <target state="translated">Estrella pequeña blanca</target>
        </trans-unit>
        <trans-unit id="e827fa8115af6a8ff7e8694006fdc84821193ae1" translate="yes" xml:space="preserve">
          <source>White Smiling Face</source>
          <target state="translated">Cara sonriente blanca</target>
        </trans-unit>
        <trans-unit id="7292a4d2f1ad67f38f858a5ba2aa2f931216208d" translate="yes" xml:space="preserve">
          <source>White Spade Suit</source>
          <target state="translated">Traje de pala blanca</target>
        </trans-unit>
        <trans-unit id="85e6d72ac7d40e888c68f97f937db0275136d4bc" translate="yes" xml:space="preserve">
          <source>White Square</source>
          <target state="translated">Cuadrado Blanco</target>
        </trans-unit>
        <trans-unit id="8f0420eb950e967ab932dd0092a9e69b9e847452" translate="yes" xml:space="preserve">
          <source>White Square Button</source>
          <target state="translated">Botón cuadrado blanco</target>
        </trans-unit>
        <trans-unit id="49c3968fd08318e52ffe077d152705799435b243" translate="yes" xml:space="preserve">
          <source>White Square Containing Black Small Square</source>
          <target state="translated">Cuadrado blanco que contiene un pequeño cuadrado negro</target>
        </trans-unit>
        <trans-unit id="5619b6d53d6541754f6d6468f142e7fa76ad7d27" translate="yes" xml:space="preserve">
          <source>White Square With Lower Left Quadrant</source>
          <target state="translated">El cuadrado blanco con el cuadrante inferior izquierdo</target>
        </trans-unit>
        <trans-unit id="808c9e191bf161e38926f5c5f29bd3081aeff48c" translate="yes" xml:space="preserve">
          <source>White Square With Lower Right Quadrant</source>
          <target state="translated">El cuadrado blanco con el cuadrante inferior derecho</target>
        </trans-unit>
        <trans-unit id="4268bdeee136d632856d4e162626b19d1248aac4" translate="yes" xml:space="preserve">
          <source>White Square With Rounded Corners</source>
          <target state="translated">Plaza Blanca con esquinas redondeadas</target>
        </trans-unit>
        <trans-unit id="72fbf1e699577a2d0f954dab09953632de3c1094" translate="yes" xml:space="preserve">
          <source>White Square With Upper Left Quadrant</source>
          <target state="translated">El cuadrado blanco con el cuadrante superior izquierdo</target>
        </trans-unit>
        <trans-unit id="dd849fbc18756c006103ba9e64207f6b3bdef64c" translate="yes" xml:space="preserve">
          <source>White Square With Upper Right Quadrant</source>
          <target state="translated">El cuadrado blanco con el cuadrante superior derecho</target>
        </trans-unit>
        <trans-unit id="2d9cf58f29a3fe6d4f0832346429f7ff203c4dbe" translate="yes" xml:space="preserve">
          <source>White Square With Vertical Bisecting Line</source>
          <target state="translated">Cuadrado blanco con línea divisoria vertical</target>
        </trans-unit>
        <trans-unit id="634d0a78d841ec0b40e03be702c56baf75674da8" translate="yes" xml:space="preserve">
          <source>White Star</source>
          <target state="translated">Estrella Blanca</target>
        </trans-unit>
        <trans-unit id="059206764751f0f85f8e29888baea1aba1f8ee13" translate="yes" xml:space="preserve">
          <source>White Sun With Rays</source>
          <target state="translated">Sol blanco con rayos</target>
        </trans-unit>
        <trans-unit id="1224c9826c7ff52b9fa1a2c1f96b20f15f4f5a00" translate="yes" xml:space="preserve">
          <source>White Trapezium</source>
          <target state="translated">trapecio blanco</target>
        </trans-unit>
        <trans-unit id="2db4ec41a4066aee4d15a98eb10d2e169c42101a" translate="yes" xml:space="preserve">
          <source>White Triangle Containing Small White Triangle</source>
          <target state="translated">Triángulo blanco que contiene un pequeño triángulo blanco</target>
        </trans-unit>
        <trans-unit id="07c000d04b8d0ed25a0985fd7cb107f60bb49aab" translate="yes" xml:space="preserve">
          <source>White Up Pointing Backhand Index</source>
          <target state="translated">Índice de retroceso de White Up Pointing</target>
        </trans-unit>
        <trans-unit id="c0825f3e41b65ad4e04d89a05f1a919af7180270" translate="yes" xml:space="preserve">
          <source>White Up Pointing Index</source>
          <target state="translated">Índice de puntuación de White Up</target>
        </trans-unit>
        <trans-unit id="c739eac64ca9f680aa4858b15393910c507a241b" translate="yes" xml:space="preserve">
          <source>White Up-Pointing Small Triangle / White Up Pointing Small Triangle</source>
          <target state="translated">White Up-Pointing Small Triangle/Triángulo pequeño blanco con punta hacia arriba</target>
        </trans-unit>
        <trans-unit id="2c2fafe73198844e99d5803401863be888da05ec" translate="yes" xml:space="preserve">
          <source>White Up-Pointing Triangle / White Up Pointing Triangle</source>
          <target state="translated">Triángulo de Señalización Blanca/Triángulo de Señalización Blanca</target>
        </trans-unit>
        <trans-unit id="b322ae097e5df051502f9578e5e4927b9661297e" translate="yes" xml:space="preserve">
          <source>White Up-Pointing Triangle With Dot / White Up Pointing Triangle With Dot</source>
          <target state="translated">Triángulo blanco de punta arriba con punto/Triángulo blanco de punta arriba con punto</target>
        </trans-unit>
        <trans-unit id="a0d24f6c4921190b94a3c24ff9acc8802c79083a" translate="yes" xml:space="preserve">
          <source>White Vertical Ellipse</source>
          <target state="translated">Elipse vertical blanca</target>
        </trans-unit>
        <trans-unit id="b6e53c0193060ce68c08e8717dafe1ff48bba21f" translate="yes" xml:space="preserve">
          <source>White Vertical Rectangle</source>
          <target state="translated">Rectángulo vertical blanco</target>
        </trans-unit>
        <trans-unit id="f4a3ad9816239183ef5bd3d0d3228e167207e61a" translate="yes" xml:space="preserve">
          <source>White Very Small Square</source>
          <target state="translated">Blanco Muy Pequeño Cuadrado</target>
        </trans-unit>
        <trans-unit id="f7e1fe3853c28a0fe97ed3cd954b7712a00f380f" translate="yes" xml:space="preserve">
          <source>Why are my Julia benchmarks for linear algebra operations different from other languages?</source>
          <target state="translated">¿Por qué mis puntos de referencia de Julia para las operaciones de álgebra lineal son diferentes a los de otros idiomas?</target>
        </trans-unit>
        <trans-unit id="4bbb029eb21510032c8af609c080a79c369b7dce" translate="yes" xml:space="preserve">
          <source>Why do concurrent writes to the same stream result in inter-mixed output?</source>
          <target state="translated">¿Por qué las escrituras simultáneas en el mismo flujo dan como resultado una salida entremezclada?</target>
        </trans-unit>
        <trans-unit id="1b4aae83fbf8014ab13afea081bebec6ec7f0b9d" translate="yes" xml:space="preserve">
          <source>Why does &lt;code&gt;x += y&lt;/code&gt; allocate memory when &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are arrays?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; &lt;code&gt;x += y&lt;/code&gt; asignar memoria cuando &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; son matrices?</target>
        </trans-unit>
        <trans-unit id="00096e7a6fdbbe783ffa3d87f87fff2daaa46322" translate="yes" xml:space="preserve">
          <source>Why does Julia give a &lt;code&gt;DomainError&lt;/code&gt; for certain seemingly-sensible operations?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; Julia da un &lt;code&gt;DomainError&lt;/code&gt; para ciertas operaciones aparentemente sensibles?</target>
        </trans-unit>
        <trans-unit id="2e029a53e5754836ebc5f2accd6987b7ec664e47" translate="yes" xml:space="preserve">
          <source>Why does Julia use &lt;code&gt;*&lt;/code&gt; for string concatenation? Why not &lt;code&gt;+&lt;/code&gt; or something else?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; Julia usa &lt;code&gt;*&lt;/code&gt; para la concatenaci&amp;oacute;n de cadenas? &amp;iquest;Por qu&amp;eacute; no &lt;code&gt;+&lt;/code&gt; o algo m&amp;aacute;s?</target>
        </trans-unit>
        <trans-unit id="3e93bc1af1398ad92317ee65e0617d4980dd38e8" translate="yes" xml:space="preserve">
          <source>Why does Julia use native machine integer arithmetic?</source>
          <target state="translated">¿Por qué Julia usa la aritmética de números enteros de la máquina nativa?</target>
        </trans-unit>
        <trans-unit id="30a4da2d9f0375ec9c7d6aacf65987f1f3472c14" translate="yes" xml:space="preserve">
          <source>Why doesn't it just work like in files everywhere? And maybe skip the warning?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4ad57f8165d0120271f7fec6b3f8432a298f09" translate="yes" xml:space="preserve">
          <source>Why doesn't it just work like the REPL everywhere?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf72338b56ad52314b2887dbaf69181cccb526f" translate="yes" xml:space="preserve">
          <source>Why don't you compile Matlab/Python/R/&amp;hellip; code to Julia?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e5203fdb2516ab2f5c1deafbcf63cb32540c19" translate="yes" xml:space="preserve">
          <source>Why round to the first day in July, even though it is month 7 (an odd number)? The key is that months are 1-indexed (the first month is assigned 1), unlike hours, minutes, seconds, and milliseconds (the first of which are assigned 0).</source>
          <target state="translated">¿Por qué redondear al primer día de julio,aunque sea el mes 7 (un número impar)? La clave es que los meses están indexados al 1 (al primer mes se le asigna el 1),a diferencia de las horas,los minutos,los segundos y los milisegundos (a los primeros se les asigna el 0).</target>
        </trans-unit>
        <trans-unit id="48ea3ab16df0e58995a85e5e959893106086f0d6" translate="yes" xml:space="preserve">
          <source>Wind Chime</source>
          <target state="translated">Campana de viento</target>
        </trans-unit>
        <trans-unit id="983f638e64348ade35b4611d310d66c9145e3880" translate="yes" xml:space="preserve">
          <source>Wine Glass</source>
          <target state="translated">copa de vino</target>
        </trans-unit>
        <trans-unit id="abc7fe153bc9746ac855f60d74d0d8123c77b393" translate="yes" xml:space="preserve">
          <source>Winking Face</source>
          <target state="translated">Cara guiñando el ojo</target>
        </trans-unit>
        <trans-unit id="581843091f10902932335f64cd6f3a2c9f96a3d3" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;s, serializing an already fetched &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; to a different node also sends the value since the original remote store may have collected the value by this time.</source>
          <target state="translated">Con &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; s, serializar un &lt;a href=&quot;../../stdlib/distributed/index#Distributed.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; ya obtenido a un nodo diferente tambi&amp;eacute;n env&amp;iacute;a el valor ya que la tienda remota original puede haber recolectado el valor en ese momento.</target>
        </trans-unit>
        <trans-unit id="75533720d520fbee81b81c1ba5dc661047b34eea" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;@macroexpand&lt;/code&gt; the expression expands where &lt;code&gt;@macroexpand&lt;/code&gt; appears in the code (module &lt;code&gt;M&lt;/code&gt; in the example). With &lt;code&gt;macroexpand&lt;/code&gt; the expression expands in the module given as the first argument.</source>
          <target state="translated">Con &lt;code&gt;@macroexpand&lt;/code&gt; la expresi&amp;oacute;n se expande donde aparece &lt;code&gt;@macroexpand&lt;/code&gt; en el c&amp;oacute;digo (m&amp;oacute;dulo &lt;code&gt;M&lt;/code&gt; en el ejemplo). Con &lt;code&gt;macroexpand&lt;/code&gt; , la expresi&amp;oacute;n se expande en el m&amp;oacute;dulo dado como primer argumento.</target>
        </trans-unit>
        <trans-unit id="dc21453b1fccd61e9c2a2caa2cd4c8a04c421020" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;batch_size&lt;/code&gt; defined, the mapping function needs to be changed to accept an array of argument tuples and return an array of results. &lt;code&gt;map&lt;/code&gt; is used in the modified mapping function to achieve this.</source>
          <target state="translated">Con &lt;code&gt;batch_size&lt;/code&gt; definido, la funci&amp;oacute;n de mapeo debe cambiarse para aceptar una matriz de tuplas de argumentos y devolver una matriz de resultados. &lt;code&gt;map&lt;/code&gt; se utiliza en la funci&amp;oacute;n de mapeo modificado para lograr esto.</target>
        </trans-unit>
        <trans-unit id="de6d6c8d7c2f6e5e8324e5783051c41a94f0d494" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;ntasks=2&lt;/code&gt; all elements are processed in 2 tasks.</source>
          <target state="translated">Con &lt;code&gt;ntasks=2&lt;/code&gt; todos los elementos se procesan en 2 tareas.</target>
        </trans-unit>
        <trans-unit id="c2a8e1e2f0076f36b7212590a0b6a34603804f4e" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;waitfor&lt;/code&gt; value of 0, the call returns immediately with the workers scheduled for removal in a different task. The scheduled &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; object is returned. The user should call &lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; on the task before invoking any other parallel calls.</source>
          <target state="translated">Con un valor de &lt;code&gt;waitfor&lt;/code&gt; de 0, la llamada regresa inmediatamente con los trabajadores programados para su eliminaci&amp;oacute;n en una tarea diferente. Se devuelve el objeto &lt;a href=&quot;../../base/parallel/index#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; programada . El usuario debe llamar a &lt;a href=&quot;../../base/parallel/index#Base.wait&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt; en la tarea antes de invocar cualquier otra llamada paralela.</target>
        </trans-unit>
        <trans-unit id="bded26b5569676e9053ab54c2f9e25c3c3e79857" translate="yes" xml:space="preserve">
          <source>With only &lt;a href=&quot;../../base/collections/index#Base.iterate&quot;&gt;&lt;code&gt;iterate&lt;/code&gt;&lt;/a&gt; definition, the &lt;code&gt;Squares&lt;/code&gt; type is already pretty powerful. We can iterate over all the elements:</source>
          <target state="translated">Con solo una definici&amp;oacute;n &lt;a href=&quot;../../base/collections/index#Base.iterate&quot;&gt; &lt;code&gt;iterate&lt;/code&gt; &lt;/a&gt; , el tipo &lt;code&gt;Squares&lt;/code&gt; ya es bastante poderoso. Podemos iterar sobre todos los elementos:</target>
        </trans-unit>
        <trans-unit id="77f7b875de446935bd4cc6f1a7d35fb26e7293e3" translate="yes" xml:space="preserve">
          <source>With such a declaration, it is acceptable to use any type that is a subtype of &lt;a href=&quot;../../base/numbers/index#Core.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;T&lt;/code&gt;, but not types that are not subtypes of &lt;code&gt;Real&lt;/code&gt;:</source>
          <target state="translated">Con tal declaraci&amp;oacute;n, es aceptable usar cualquier tipo que sea un subtipo de &lt;a href=&quot;../../base/numbers/index#Core.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt; en lugar de &lt;code&gt;T&lt;/code&gt; , pero no tipos que no sean subtipos de &lt;code&gt;Real&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fefc09d1374ace4b2cc6f62853ea9d51faf15a8a" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;do&lt;/code&gt; block syntax, it helps to check the documentation or implementation to know how the arguments of the user function are initialized.</source>
          <target state="translated">Con la sintaxis del bloque &lt;code&gt;do&lt;/code&gt; , es &amp;uacute;til verificar la documentaci&amp;oacute;n o implementaci&amp;oacute;n para saber c&amp;oacute;mo se inicializan los argumentos de la funci&amp;oacute;n de usuario.</target>
        </trans-unit>
        <trans-unit id="503bb222a1bcd305845bfa8706594c057e11f9bc" translate="yes" xml:space="preserve">
          <source>With this declaration, &lt;code&gt;Pointy{T}&lt;/code&gt; is a distinct abstract type for each type or integer value of &lt;code&gt;T&lt;/code&gt;. As with parametric composite types, each such instance is a subtype of &lt;code&gt;Pointy&lt;/code&gt;:</source>
          <target state="translated">Con esta declaraci&amp;oacute;n, &lt;code&gt;Pointy{T}&lt;/code&gt; es un tipo abstracto distinta para cada tipo de valor o entero de &lt;code&gt;T&lt;/code&gt; . Al igual que con los tipos compuestos param&amp;eacute;tricos, cada instancia es un subtipo de &lt;code&gt;Pointy&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7a216c8e2bca2ef6b82975092df1fd3a30bc77dd" translate="yes" xml:space="preserve">
          <source>With this definition, the function can be called with either one, two or three arguments, and &lt;code&gt;1&lt;/code&gt; is automatically passed when any of the arguments is not specified:</source>
          <target state="translated">Con esta definici&amp;oacute;n, la funci&amp;oacute;n se puede llamar con uno, dos o tres argumentos, y se pasa &lt;code&gt;1&lt;/code&gt; autom&amp;aacute;ticamente cuando no se especifica alguno de los argumentos:</target>
        </trans-unit>
        <trans-unit id="447b8dfb65dcbfcf6fcad2ab9a9aa921f47048b2" translate="yes" xml:space="preserve">
          <source>With this definition, the function can be called with either one, two or three arguments, and &lt;code&gt;1&lt;/code&gt; is automatically passed when only one or two of the arguments are specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f10b122d0ba4c967956b4a13f71e5b19ab4662e" translate="yes" xml:space="preserve">
          <source>With this syntax, iterables may still refer to outer loop variables; e.g. &lt;code&gt;for i = 1:n, j = 1:i&lt;/code&gt; is valid. However a &lt;code&gt;break&lt;/code&gt; statement inside such a loop exits the entire nest of loops, not just the inner one. Both variables (&lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;) are set to their current iteration values each time the inner loop runs. Therefore, assignments to &lt;code&gt;i&lt;/code&gt; will not be visible to subsequent iterations:</source>
          <target state="translated">Con esta sintaxis, los iterables a&amp;uacute;n pueden referirse a variables de bucle externo; por ejemplo, &lt;code&gt;for i = 1:n, j = 1:i&lt;/code&gt; es v&amp;aacute;lido. Sin embargo, una declaraci&amp;oacute;n de &lt;code&gt;break&lt;/code&gt; dentro de dicho bucle sale de todo el nido de bucles, no solo del interno. Ambas variables ( &lt;code&gt;i&lt;/code&gt; y &lt;code&gt;j&lt;/code&gt; ) se establecen en sus valores de iteraci&amp;oacute;n actuales cada vez que se ejecuta el ciclo interno. Por lo tanto, las asignaciones a &lt;code&gt;i&lt;/code&gt; no ser&amp;aacute;n visibles para iteraciones posteriores:</target>
        </trans-unit>
        <trans-unit id="974560762d7f9d8809deddf944b7bb6130508cf8" translate="yes" xml:space="preserve">
          <source>Without keyword arguments, &lt;code&gt;x&lt;/code&gt; is rounded to an integer value, returning a value of type &lt;code&gt;T&lt;/code&gt;, or of the same type of &lt;code&gt;x&lt;/code&gt; if no &lt;code&gt;T&lt;/code&gt; is provided. An &lt;a href=&quot;../base/index#Core.InexactError&quot;&gt;&lt;code&gt;InexactError&lt;/code&gt;&lt;/a&gt; will be thrown if the value is not representable by &lt;code&gt;T&lt;/code&gt;, similar to &lt;a href=&quot;../base/index#Base.convert&quot;&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Sin argumentos de palabra clave, &lt;code&gt;x&lt;/code&gt; se redondea a un valor entero, devolviendo un valor de tipo &lt;code&gt;T&lt;/code&gt; , o del mismo tipo de &lt;code&gt;x&lt;/code&gt; si no se proporciona &lt;code&gt;T&lt;/code&gt; .Se &lt;a href=&quot;../base/index#Core.InexactError&quot;&gt; &lt;code&gt;InexactError&lt;/code&gt; &lt;/a&gt; un InexactError si el valor no es representable por &lt;code&gt;T&lt;/code&gt; , similar a &lt;a href=&quot;../base/index#Base.convert&quot;&gt; &lt;code&gt;convert&lt;/code&gt; ir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b32189c1c5c8ca5b8d9a0a455eb12f4d1954923" translate="yes" xml:space="preserve">
          <source>Without parentheses, the expression &lt;code&gt;f&lt;/code&gt; refers to the function object, and can be passed around like any other value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa3290590d6a6eeac6efebb9b9654e8c0a3a248" translate="yes" xml:space="preserve">
          <source>Without parentheses, the expression &lt;code&gt;f&lt;/code&gt; refers to the function object, and can be passed around like any value:</source>
          <target state="translated">Sin par&amp;eacute;ntesis, la expresi&amp;oacute;n &lt;code&gt;f&lt;/code&gt; se refiere al objeto de la funci&amp;oacute;n y se puede pasar como cualquier valor:</target>
        </trans-unit>
        <trans-unit id="057c67438e0b378de20c837094077aeb4442b98f" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;break&lt;/code&gt; keyword, the above &lt;code&gt;while&lt;/code&gt; loop would never terminate on its own, and the &lt;code&gt;for&lt;/code&gt; loop would iterate up to 1000. These loops are both exited early by using &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="translated">Sin la palabra clave &lt;code&gt;break&lt;/code&gt; , el bucle &lt;code&gt;while&lt;/code&gt; anterior nunca terminar&amp;iacute;a por s&amp;iacute; solo, y el bucle &lt;code&gt;for&lt;/code&gt; iterar&amp;iacute;a hasta 1000. Ambos bucles se abandonan antes mediante el uso de &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a346da9a68b13b25a9f7cb2fd78eb7978ee0a04a" translate="yes" xml:space="preserve">
          <source>Wolf Face</source>
          <target state="translated">Cara de Lobo</target>
        </trans-unit>
        <trans-unit id="1cb72b9108626d8ac566eba64409dacf9a40b11e" translate="yes" xml:space="preserve">
          <source>Woman</source>
          <target state="translated">Woman</target>
        </trans-unit>
        <trans-unit id="6dfb7f3a8d49e9c60ed61f82d18ca8ac2838458c" translate="yes" xml:space="preserve">
          <source>Woman With Bunny Ears</source>
          <target state="translated">Mujer con orejas de conejo</target>
        </trans-unit>
        <trans-unit id="5a6394d24a5279ce017885520fdb48ffc70f08d4" translate="yes" xml:space="preserve">
          <source>Womans Boots</source>
          <target state="translated">Botas de mujer</target>
        </trans-unit>
        <trans-unit id="7d4124fc5a81619b81859db6f91943ca5bb45e8e" translate="yes" xml:space="preserve">
          <source>Womans Clothes</source>
          <target state="translated">Ropa de mujer</target>
        </trans-unit>
        <trans-unit id="ce5f716b57b265b131a17fffd163abf4c36c842b" translate="yes" xml:space="preserve">
          <source>Womans Hat</source>
          <target state="translated">Sombrero de mujer</target>
        </trans-unit>
        <trans-unit id="85aca00c09071a52aba584e53b36018f9b894c55" translate="yes" xml:space="preserve">
          <source>Womans Sandal</source>
          <target state="translated">Sandalia para mujeres</target>
        </trans-unit>
        <trans-unit id="b78031fbb7d05c9d0ff329bbff3f7a6447a90388" translate="yes" xml:space="preserve">
          <source>Womens Symbol</source>
          <target state="translated">Símbolo de la mujer</target>
        </trans-unit>
        <trans-unit id="57ecdc70b504efbceec0cd8d34cea25e9063a812" translate="yes" xml:space="preserve">
          <source>Word Joiner</source>
          <target state="translated">Unificador de palabras...</target>
        </trans-unit>
        <trans-unit id="c3edbbb14bf867b6bece4274440ffdbbeba538be" translate="yes" xml:space="preserve">
          <source>Word separation can be indicated by underscores (&lt;code&gt;'_'&lt;/code&gt;), but use of underscores is discouraged unless the name would be hard to read otherwise.</source>
          <target state="translated">La separaci&amp;oacute;n de palabras se puede indicar mediante guiones bajos ( &lt;code&gt;'_'&lt;/code&gt; ), pero se desaconseja el uso de guiones bajos a menos que el nombre sea dif&amp;iacute;cil de leer de otra manera.</target>
        </trans-unit>
        <trans-unit id="719f23a34b446f1c2b8e5447594bf9f94eb261ef" translate="yes" xml:space="preserve">
          <source>Workflow Tips</source>
          <target state="translated">Consejos para el flujo de trabajo</target>
        </trans-unit>
        <trans-unit id="72cf6cd09a850a2cf4790c3438a493e200f5281f" translate="yes" xml:space="preserve">
          <source>Working with &lt;code&gt;Broadcasted&lt;/code&gt; objects</source>
          <target state="translated">Trabajar con objetos &lt;code&gt;Broadcasted&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1554531a14293e9b5f2d548951c2491fa5894fd" translate="yes" xml:space="preserve">
          <source>Working with Arrays</source>
          <target state="translated">Trabajando con los arreglos...</target>
        </trans-unit>
        <trans-unit id="83cf1b02634def5b23b868974db450a895a02f92" translate="yes" xml:space="preserve">
          <source>Working with Files</source>
          <target state="translated">Trabajando con los archivos</target>
        </trans-unit>
        <trans-unit id="e561077dd059f1516770b93796c56838b6b06ebe" translate="yes" xml:space="preserve">
          <source>Working with Test Sets</source>
          <target state="translated">Trabajando con conjuntos de pruebas</target>
        </trans-unit>
        <trans-unit id="c94118dce35f5d3b4f01c86d6cba1023a7883418" translate="yes" xml:space="preserve">
          <source>Worried Face</source>
          <target state="translated">Cara de preocupación</target>
        </trans-unit>
        <trans-unit id="643f9be452aad16c5d4b635ba25e01524af427f5" translate="yes" xml:space="preserve">
          <source>Wrap a &lt;code&gt;Vector&lt;/code&gt; of exceptions thrown by a &lt;a href=&quot;../parallel/index#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; (e.g. generated from a remote worker over a channel or an asynchronously executing local I/O write or a remote worker under &lt;code&gt;pmap&lt;/code&gt;) with information about the series of exceptions. For example, if a group of workers are executing several tasks, and multiple workers fail, the resulting &lt;code&gt;CompositeException&lt;/code&gt; will contain a &quot;bundle&quot; of information from each worker indicating where and why the exception(s) occurred.</source>
          <target state="translated">Envuelva un &lt;code&gt;Vector&lt;/code&gt; de excepciones lanzadas por una &lt;a href=&quot;../parallel/index#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; (por ejemplo, generado desde un trabajador remoto sobre un canal o una escritura de E / S local que se ejecuta de forma asincr&amp;oacute;nica o un trabajador remoto bajo &lt;code&gt;pmap&lt;/code&gt; ) con informaci&amp;oacute;n sobre la serie de excepciones. Por ejemplo, si un grupo de trabajadores est&amp;aacute; ejecutando varias tareas y varios trabajadores fallan, la &lt;code&gt;CompositeException&lt;/code&gt; resultante contendr&amp;aacute; un &quot;paquete&quot; de informaci&amp;oacute;n de cada trabajador que indica d&amp;oacute;nde y por qu&amp;eacute; ocurrieron las excepciones.</target>
        </trans-unit>
        <trans-unit id="ec473d4d05e151c4b0eb94d5d4eceaf44cd4f086" translate="yes" xml:space="preserve">
          <source>Wrap a Julia &lt;code&gt;Array&lt;/code&gt; object around the data at the address given by &lt;code&gt;pointer&lt;/code&gt;, without making a copy. The pointer element type &lt;code&gt;T&lt;/code&gt; determines the array element type. &lt;code&gt;dims&lt;/code&gt; is either an integer (for a 1d array) or a tuple of the array dimensions. &lt;code&gt;own&lt;/code&gt; optionally specifies whether Julia should take ownership of the memory, calling &lt;code&gt;free&lt;/code&gt; on the pointer when the array is no longer referenced.</source>
          <target state="translated">Envuelva un objeto Julia &lt;code&gt;Array&lt;/code&gt; alrededor de los datos en la direcci&amp;oacute;n proporcionada por el &lt;code&gt;pointer&lt;/code&gt; , sin hacer una copia. El tipo de elemento puntero &lt;code&gt;T&lt;/code&gt; determina el tipo de elemento de matriz. &lt;code&gt;dims&lt;/code&gt; es un n&amp;uacute;mero entero (para una matriz 1d) o una tupla de las dimensiones de la matriz. &lt;code&gt;own&lt;/code&gt; opcionalmente especifica si Julia debe tomar posesi&amp;oacute;n de la memoria, llamando a &lt;code&gt;free&lt;/code&gt; en el puntero cuando ya no se hace referencia a la matriz.</target>
        </trans-unit>
        <trans-unit id="bb11cd0bd69cc50df511cf85ddf1cd4d48d9cd04" translate="yes" xml:space="preserve">
          <source>Wrap an expression in a &lt;a href=&quot;#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; and add it to the local machine's scheduler queue.</source>
          <target state="translated">Envuelva una expresi&amp;oacute;n en una &lt;a href=&quot;#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; y agr&amp;eacute;guela a la cola del programador de la m&amp;aacute;quina local.</target>
        </trans-unit>
        <trans-unit id="5073be58d66f221818fcea45c57ca978e66b8268" translate="yes" xml:space="preserve">
          <source>Wrap an expression in a &lt;a href=&quot;#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; without executing it, and return the &lt;a href=&quot;#Core.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;. This only creates a task, and does not run it.</source>
          <target state="translated">Envuelva una expresi&amp;oacute;n en una &lt;a href=&quot;#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; sin ejecutarla y devuelva la &lt;a href=&quot;#Core.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; . Esto solo crea una tarea y no la ejecuta.</target>
        </trans-unit>
        <trans-unit id="a3a85a4dc41c5c5208ca7b5a5f20305e0dda2cfb" translate="yes" xml:space="preserve">
          <source>Wrap your function in a module:</source>
          <target state="translated">Envuelve tu función en un módulo:</target>
        </trans-unit>
        <trans-unit id="0c727aa02984e9265ed720a0cc477eba7864a0a0" translate="yes" xml:space="preserve">
          <source>Wrapped Present</source>
          <target state="translated">Envuelto el presente</target>
        </trans-unit>
        <trans-unit id="4c299bd23d0a4bc5197aa857238f132545f5def2" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;a href=&quot;https://libgit2.org/libgit2/#HEAD/group/commit/git_commit_create&quot;&gt;&lt;code&gt;git_commit_create&lt;/code&gt;&lt;/a&gt;. Create a commit in the repository &lt;code&gt;repo&lt;/code&gt;. &lt;code&gt;msg&lt;/code&gt; is the commit message. Return the OID of the new commit.</source>
          <target state="translated">Envoltura alrededor &lt;a href=&quot;https://libgit2.org/libgit2/#HEAD/group/commit/git_commit_create&quot;&gt; &lt;code&gt;git_commit_create&lt;/code&gt; &lt;/a&gt; . Cree una confirmaci&amp;oacute;n en el repositorio del &lt;code&gt;repo&lt;/code&gt; sitorio . &lt;code&gt;msg&lt;/code&gt; es el mensaje de confirmaci&amp;oacute;n. Devuelve el OID de la nueva confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="914406aad26fbb402914377aadad7a61529e87cf" translate="yes" xml:space="preserve">
          <source>Wrapper types</source>
          <target state="translated">Tipos de envoltura</target>
        </trans-unit>
        <trans-unit id="7da2bdafb830ea4034b4a9f75526a715fd0d86d0" translate="yes" xml:space="preserve">
          <source>Wreath Product</source>
          <target state="translated">Producto de la corona</target>
        </trans-unit>
        <trans-unit id="60a77f2daf0e1f4113ff076604e19f8a61f8d079" translate="yes" xml:space="preserve">
          <source>Wrench</source>
          <target state="translated">Wrench</target>
        </trans-unit>
        <trans-unit id="9f4443f6abc474ecd391c80029564af8642f98e3" translate="yes" xml:space="preserve">
          <source>Write &quot;type-stable&quot; functions</source>
          <target state="translated">Escribir funciones de &quot;tipo estable&quot;.</target>
        </trans-unit>
        <trans-unit id="108ebb82b60e8c92a8619b85402ca125571054b0" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;../../base/base/index#Base.SimdLoop.@simd&quot;&gt;&lt;code&gt;@simd&lt;/code&gt;&lt;/a&gt; in front of &lt;code&gt;for&lt;/code&gt; loops to promise that the iterations are independent and may be reordered. Note that in many cases, Julia can automatically vectorize code without the &lt;code&gt;@simd&lt;/code&gt; macro; it is only beneficial in cases where such a transformation would otherwise be illegal, including cases like allowing floating-point re-associativity and ignoring dependent memory accesses (&lt;code&gt;@simd ivdep&lt;/code&gt;). Again, be very careful when asserting &lt;code&gt;@simd&lt;/code&gt; as erroneously annotating a loop with dependent iterations may result in unexpected results. In particular, note that &lt;code&gt;setindex!&lt;/code&gt; on some &lt;code&gt;AbstractArray&lt;/code&gt; subtypes is inherently dependent upon iteration order. &lt;strong&gt;This feature is experimental&lt;/strong&gt; and could change or disappear in future versions of Julia.</source>
          <target state="translated">Escriba &lt;a href=&quot;../../base/base/index#Base.SimdLoop.@simd&quot;&gt; &lt;code&gt;@simd&lt;/code&gt; &lt;/a&gt; delante de los bucles &lt;code&gt;for&lt;/code&gt; para prometer que las iteraciones son independientes y pueden reordenarse. Tenga en cuenta que, en muchos casos, Julia puede vectorizar autom&amp;aacute;ticamente el c&amp;oacute;digo sin la macro &lt;code&gt;@simd&lt;/code&gt; ; solo es beneficioso en los casos en los que dicha transformaci&amp;oacute;n ser&amp;iacute;a ilegal, incluidos casos como permitir la reasociaci&amp;oacute;n de punto flotante e ignorar los accesos a memoria dependientes ( &lt;code&gt;@simd ivdep&lt;/code&gt; ). Nuevamente, tenga mucho cuidado al afirmar &lt;code&gt;@simd&lt;/code&gt; , ya que anotar err&amp;oacute;neamente un bucle con iteraciones dependientes puede dar lugar a resultados inesperados. En particular, tenga en cuenta que &lt;code&gt;setindex!&lt;/code&gt; en algunos subtipos &lt;code&gt;AbstractArray&lt;/code&gt; depende inherentemente del orden de iteraci&amp;oacute;n.&lt;strong&gt;Esta funci&amp;oacute;n es experimental&lt;/strong&gt; y podr&amp;iacute;a cambiar o desaparecer en futuras versiones de Julia.</target>
        </trans-unit>
        <trans-unit id="feda5417424a49ab311d7ff404b0540a63818aab" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;A&lt;/code&gt; (a vector, matrix, or an iterable collection of iterable rows) as text to &lt;code&gt;f&lt;/code&gt; (either a filename string or an &lt;code&gt;IO&lt;/code&gt; stream) using the given delimiter &lt;code&gt;delim&lt;/code&gt; (which defaults to tab, but can be any printable Julia object, typically a &lt;code&gt;Char&lt;/code&gt; or &lt;code&gt;AbstractString&lt;/code&gt;).</source>
          <target state="translated">Write &lt;code&gt;A&lt;/code&gt; (un vector, matriz o una colecci&amp;oacute;n iterable de filas iterables) como texto a &lt;code&gt;f&lt;/code&gt; (ya sea una cadena de nombre de archivo o un &lt;code&gt;IO&lt;/code&gt; corriente) utilizando el delimitador dado &lt;code&gt;delim&lt;/code&gt; (que por defecto a la pesta&amp;ntilde;a, pero puede ser cualquier objeto Julia imprimible, t&amp;iacute;picamente un &lt;code&gt;Char&lt;/code&gt; o &lt;code&gt;AbstractString&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="775f113932a5efeffdda634c47beb3eed1ff2fe8" translate="yes" xml:space="preserve">
          <source>Write Permission</source>
          <target state="translated">Permiso de escritura</target>
        </trans-unit>
        <trans-unit id="cb1bb77575fa4409af2eee4cd439da1e073d5da8" translate="yes" xml:space="preserve">
          <source>Write a number in REPL and press &lt;code&gt;^Q&lt;/code&gt; to open editor at corresponding stackframe or method</source>
          <target state="translated">Escriba un n&amp;uacute;mero en REPL y presione &lt;code&gt;^Q&lt;/code&gt; para abrir el editor en el marco de pila o m&amp;eacute;todo correspondiente</target>
        </trans-unit>
        <trans-unit id="94dd4ad05923ad8ccb38018f26838043a0492298" translate="yes" xml:space="preserve">
          <source>Write a small function &lt;code&gt;op&lt;/code&gt; that expresses the set of operations performed by the kernel of the algorithm.</source>
          <target state="translated">Escribe una peque&amp;ntilde;a funci&amp;oacute;n &lt;code&gt;op&lt;/code&gt; que exprese el conjunto de operaciones realizadas por el n&amp;uacute;cleo del algoritmo.</target>
        </trans-unit>
        <trans-unit id="597661e73835c59aca5441f10be576b8d382a273" translate="yes" xml:space="preserve">
          <source>Write a text representation of a value &lt;code&gt;x&lt;/code&gt; to the output stream &lt;code&gt;io&lt;/code&gt;. New types &lt;code&gt;T&lt;/code&gt; should overload &lt;code&gt;show(io::IO, x::T)&lt;/code&gt;. The representation used by &lt;code&gt;show&lt;/code&gt; generally includes Julia-specific formatting and type information, and should be parseable Julia code when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873f569b5d6881c314f347be4557cdf37101715d" translate="yes" xml:space="preserve">
          <source>Write an arbitrary value to a stream in an opaque format, such that it can be read back by &lt;a href=&quot;#Serialization.deserialize&quot;&gt;&lt;code&gt;deserialize&lt;/code&gt;&lt;/a&gt;. The read-back value will be as identical as possible to the original. In general, this process will not work if the reading and writing are done by different versions of Julia, or an instance of Julia with a different system image. &lt;code&gt;Ptr&lt;/code&gt; values are serialized as all-zero bit patterns (&lt;code&gt;NULL&lt;/code&gt;).</source>
          <target state="translated">Escriba un valor arbitrario en una secuencia en un formato opaco, de modo que &lt;a href=&quot;#Serialization.deserialize&quot;&gt; &lt;code&gt;deserialize&lt;/code&gt; &lt;/a&gt; pueda volver a leerlo . El valor de lectura ser&amp;aacute; lo m&amp;aacute;s id&amp;eacute;ntico posible al original. En general, este proceso no funcionar&amp;aacute; si la lectura y la escritura se realizan con diferentes versiones de Julia, o una instancia de Julia con una imagen de sistema diferente. &lt;code&gt;Ptr&lt;/code&gt; valores de Ptr se serializan como patrones de bits totalmente cero ( &lt;code&gt;NULL&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2cc631af387b0b65068ed32b69656c5387524ad1" translate="yes" xml:space="preserve">
          <source>Write an identifying header to the specified serializer. The header consists of 8 bytes as follows:</source>
          <target state="translated">Escriba un encabezado de identificación en el serializador especificado.El encabezado consiste en 8 bytes como sigue:</target>
        </trans-unit>
        <trans-unit id="2c562290cfa3ebc3ed60533e7ccb58cb5506dbdf" translate="yes" xml:space="preserve">
          <source>Write an informative text representation of a value to the current output stream. New types should overload &lt;code&gt;show(io::IO, x)&lt;/code&gt; where the first argument is a stream. The representation used by &lt;code&gt;show&lt;/code&gt; generally includes Julia-specific formatting and type information.</source>
          <target state="translated">Escriba una representaci&amp;oacute;n de texto informativo de un valor en el flujo de salida actual. Los nuevos tipos deber&amp;iacute;an sobrecargar &lt;code&gt;show(io::IO, x)&lt;/code&gt; donde el primer argumento es un flujo. La representaci&amp;oacute;n utilizada por &lt;code&gt;show&lt;/code&gt; generalmente incluye informaci&amp;oacute;n de tipo y formato espec&amp;iacute;ficos de Julia.</target>
        </trans-unit>
        <trans-unit id="cb2bbf69c8aaaca3e8ea4477fb12294ca0669ad1" translate="yes" xml:space="preserve">
          <source>Write functions with argument ordering similar to Julia Base</source>
          <target state="translated">Funciones de escritura con ordenamiento de argumentos similares a la Base Julia</target>
        </trans-unit>
        <trans-unit id="70a026cb8be32b7a74394524302a74d531860e33" translate="yes" xml:space="preserve">
          <source>Write functions, not just scripts</source>
          <target state="translated">Escribir funciones,no sólo guiones</target>
        </trans-unit>
        <trans-unit id="8434f9d9d28666de4a462912e8e0e307e3e65b92" translate="yes" xml:space="preserve">
          <source>Write the canonical binary representation of a value to the given I/O stream or file. Return the number of bytes written into the stream. See also &lt;a href=&quot;#Base.print&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; to write a text representation (with an encoding that may depend upon &lt;code&gt;io&lt;/code&gt;).</source>
          <target state="translated">Escriba la representaci&amp;oacute;n binaria can&amp;oacute;nica de un valor en el flujo o archivo de E / S dado. Devuelve el n&amp;uacute;mero de bytes escritos en la secuencia. Consulte tambi&amp;eacute;n &lt;a href=&quot;#Base.print&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt; para escribir una representaci&amp;oacute;n de texto (con una codificaci&amp;oacute;n que puede depender de &lt;code&gt;io&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f504d192f85e8f747b7e397b2f6ba281860922fa" translate="yes" xml:space="preserve">
          <source>Write to &lt;code&gt;io&lt;/code&gt; (or to the default output stream &lt;a href=&quot;#Base.stdout&quot;&gt;&lt;code&gt;stdout&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;io&lt;/code&gt; is not given) a canonical (un-decorated) text representation. The representation used by &lt;code&gt;print&lt;/code&gt; includes minimal formatting and tries to avoid Julia-specific details.</source>
          <target state="translated">Escriba en &lt;code&gt;io&lt;/code&gt; (o en el flujo de salida predeterminado &lt;a href=&quot;#Base.stdout&quot;&gt; &lt;code&gt;stdout&lt;/code&gt; &lt;/a&gt; si no se proporciona &lt;code&gt;io&lt;/code&gt; ) una representaci&amp;oacute;n de texto can&amp;oacute;nica (sin decorar). La representaci&amp;oacute;n utilizada por la &lt;code&gt;print&lt;/code&gt; incluye un formato m&amp;iacute;nimo y trata de evitar detalles espec&amp;iacute;ficos de Julia.</target>
        </trans-unit>
        <trans-unit id="e16e34e27c72e59ec455f0c0f1a3f2115cd3b225" translate="yes" xml:space="preserve">
          <source>Writing a function as many small definitions allows the compiler to directly call the most applicable code, or even inline it.</source>
          <target state="translated">Escribir una función tantas pequeñas definiciones permite al compilador llamar directamente el código más aplicable,o incluso en línea.</target>
        </trans-unit>
        <trans-unit id="34e8aec81b31e6aaa5b50b350018faabd22de4c7" translate="yes" xml:space="preserve">
          <source>Writing binary broadcasting rules</source>
          <target state="translated">Redacción de las normas de radiodifusión binaria</target>
        </trans-unit>
        <trans-unit id="97f498290acca274115f78b5edf4bcb344821f93" translate="yes" xml:space="preserve">
          <source>Writing code as a series of steps at the top level is a quick way to get started solving a problem, but you should try to divide a program into functions as soon as possible. Functions are more reusable and testable, and clarify what steps are being done and what their inputs and outputs are. Furthermore, code inside functions tends to run much faster than top level code, due to how Julia's compiler works.</source>
          <target state="translated">Escribir el código como una serie de pasos en el nivel superior es una forma rápida de empezar a resolver un problema,pero deberías tratar de dividir un programa en funciones lo antes posible.Las funciones son más reutilizables y comprobables,y aclaran qué pasos se están realizando y cuáles son sus entradas y salidas.Además,el código dentro de las funciones tiende a ejecutarse mucho más rápido que el código de nivel superior,debido a cómo funciona el compilador de Julia.</target>
        </trans-unit>
        <trans-unit id="a484186f293d2862395499a0c5b61beb757d7d54" translate="yes" xml:space="preserve">
          <source>Writing log events to a file</source>
          <target state="translated">Escribir los eventos de registro en un archivo</target>
        </trans-unit>
        <trans-unit id="25744db574969e117a90b833b80467c34acec98d" translate="yes" xml:space="preserve">
          <source>Xor</source>
          <target state="translated">Xor</target>
        </trans-unit>
        <trans-unit id="f198e585f80c9955a647226ad90798053ac6ecf5" translate="yes" xml:space="preserve">
          <source>Yellow Heart</source>
          <target state="translated">Corazón Amarillo</target>
        </trans-unit>
        <trans-unit id="50b776c9e160796bdb426c1605a23b1af335b715" translate="yes" xml:space="preserve">
          <source>Yen Sign</source>
          <target state="translated">Signo del Yen</target>
        </trans-unit>
        <trans-unit id="2f53cab7d3c0dbe4951a04ff57f49550638bd4c8" translate="yes" xml:space="preserve">
          <source>You annotate the function declaration with the &lt;code&gt;@generated&lt;/code&gt; macro. This adds some information to the AST that lets the compiler know that this is a generated function.</source>
          <target state="translated">&lt;code&gt;@generated&lt;/code&gt; la declaraci&amp;oacute;n de funci&amp;oacute;n con la macro @generated . Esto agrega algo de informaci&amp;oacute;n al AST que le permite al compilador saber que esta es una funci&amp;oacute;n generada.</target>
        </trans-unit>
        <trans-unit id="2bc8c1c8f5f11957d60869604a47850f7992e1dc" translate="yes" xml:space="preserve">
          <source>You are entirely responsible for ensuring that your program is data-race free, and nothing promised here can be assumed if you do not observe that requirement. The observed results may be highly unintuitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa58379787fb3328d4b2c9b156cc9d4992b0523" translate="yes" xml:space="preserve">
          <source>You can access the field values of a composite object using the traditional &lt;code&gt;foo.bar&lt;/code&gt; notation:</source>
          <target state="translated">Puede acceder a los valores de campo de un objeto compuesto utilizando la notaci&amp;oacute;n tradicional &lt;code&gt;foo.bar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9e327a40a7bf29c2f099c651d3dd2926aa5926b6" translate="yes" xml:space="preserve">
          <source>You can add information about the push refspecs in two other ways: by setting an option in the repository's &lt;code&gt;GitConfig&lt;/code&gt; (with &lt;code&gt;push.default&lt;/code&gt; as the key) or by calling &lt;a href=&quot;#LibGit2.add_push!&quot;&gt;&lt;code&gt;add_push!&lt;/code&gt;&lt;/a&gt;. Otherwise you will need to explicitly specify a push refspec in the call to &lt;code&gt;push&lt;/code&gt; for it to have any effect, like so: &lt;code&gt;LibGit2.push(repo, refspecs=[&quot;refs/heads/master&quot;])&lt;/code&gt;.</source>
          <target state="translated">Puede agregar informaci&amp;oacute;n sobre las especificaciones de las referencias push de otras dos formas: configurando una opci&amp;oacute;n en &lt;code&gt;GitConfig&lt;/code&gt; del repositorio (con &lt;code&gt;push.default&lt;/code&gt; como clave) o llamando a &lt;a href=&quot;#LibGit2.add_push!&quot;&gt; &lt;code&gt;add_push!&lt;/code&gt; &lt;/a&gt;. De lo contrario, necesitar&amp;aacute; especificar expl&amp;iacute;citamente un push refspec en la llamada para &lt;code&gt;push&lt;/code&gt; para que tenga alg&amp;uacute;n efecto, as&amp;iacute;: &lt;code&gt;LibGit2.push(repo, refspecs=[&quot;refs/heads/master&quot;])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="059c37e831f26b52c6dfe5728025ecfe92438e23" translate="yes" xml:space="preserve">
          <source>You can also change the colors for the help and shell prompts and input and answer text by setting the appropriate field of &lt;code&gt;repl&lt;/code&gt; in the &lt;code&gt;customize_colors&lt;/code&gt; function above (respectively, &lt;code&gt;help_color&lt;/code&gt;, &lt;code&gt;shell_color&lt;/code&gt;, &lt;code&gt;input_color&lt;/code&gt;, and &lt;code&gt;answer_color&lt;/code&gt;). For the latter two, be sure that the &lt;code&gt;envcolors&lt;/code&gt; field is also set to false.</source>
          <target state="translated">Tambi&amp;eacute;n puede cambiar los colores de la ayuda y las instrucciones de carcasa y de entrada y texto de la respuesta definiendo el campo apropiado de &lt;code&gt;repl&lt;/code&gt; en los &lt;code&gt;customize_colors&lt;/code&gt; funci&amp;oacute;n anterior (respectivamente, &lt;code&gt;help_color&lt;/code&gt; , &lt;code&gt;shell_color&lt;/code&gt; , &lt;code&gt;input_color&lt;/code&gt; y &lt;code&gt;answer_color&lt;/code&gt; ). Para los dos &amp;uacute;ltimos, aseg&amp;uacute;rese de que el campo &lt;code&gt;envcolors&lt;/code&gt; tambi&amp;eacute;n est&amp;eacute; configurado como falso.</target>
        </trans-unit>
        <trans-unit id="1638c4f5d9428b7a66ce134be7d9554e824e2b6d" translate="yes" xml:space="preserve">
          <source>You can also combine dot operations with function chaining using &lt;code&gt;|&amp;gt;&lt;/code&gt;, as in this example:</source>
          <target state="translated">Tambi&amp;eacute;n puede combinar operaciones de puntos con el encadenamiento de funciones usando &lt;code&gt;|&amp;gt;&lt;/code&gt; , como en este ejemplo:</target>
        </trans-unit>
        <trans-unit id="28db7f89bc085e06b706e35f0b6ac4581558f0a0" translate="yes" xml:space="preserve">
          <source>You can also customize the color used to render warning and informational messages by setting the appropriate environment variables. For instance, to render error, warning, and informational messages respectively in magenta, yellow, and cyan you can add the following to your &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; file:</source>
          <target state="translated">Tambi&amp;eacute;n puede personalizar el color utilizado para representar los mensajes de advertencia e informativos configurando las variables de entorno adecuadas. Por ejemplo, para representar mensajes de error, advertencia e informaci&amp;oacute;n respectivamente en magenta, amarillo y cian, puede agregar lo siguiente a su &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="48369480265e913602939792e933438854e1fd21" translate="yes" xml:space="preserve">
          <source>You can also extract a substring using range indexing:</source>
          <target state="translated">También puedes extraer una subcadena usando la indexación de rango:</target>
        </trans-unit>
        <trans-unit id="9632f04ced8b0d99e58399a64d3197172994959f" translate="yes" xml:space="preserve">
          <source>You can also find the numerical precedence for any given operator via the built-in function &lt;code&gt;Base.operator_precedence&lt;/code&gt;, where higher numbers take precedence:</source>
          <target state="translated">Tambi&amp;eacute;n puede encontrar la precedencia num&amp;eacute;rica para cualquier operador a trav&amp;eacute;s de la funci&amp;oacute;n &lt;code&gt;Base.operator_precedence&lt;/code&gt; , donde los n&amp;uacute;meros m&amp;aacute;s altos tienen prioridad:</target>
        </trans-unit>
        <trans-unit id="bde95e81a4bd07b2fd0aae2c5489099dc8851cd2" translate="yes" xml:space="preserve">
          <source>You can also return multiple values using the &lt;code&gt;return&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8889f871b5013b5f51fc950bfb5b2804adab0a7a" translate="yes" xml:space="preserve">
          <source>You can also return multiple values via an explicit usage of the &lt;code&gt;return&lt;/code&gt; keyword:</source>
          <target state="translated">Tambi&amp;eacute;n puede devolver varios valores mediante un uso expl&amp;iacute;cito de la palabra clave &lt;code&gt;return&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fd8ba1a0017da212fde89c54b0a00968d72dd8a6" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;dateformat&quot;&quot;&lt;/code&gt; string macro. This macro creates the &lt;code&gt;DateFormat&lt;/code&gt; object once when the macro is expanded and uses the same &lt;code&gt;DateFormat&lt;/code&gt; object even if a code snippet is run multiple times.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar la macro de cadena de &lt;code&gt;dateformat&quot;&quot;&lt;/code&gt; formato de fecha. Esta macro crea el objeto &lt;code&gt;DateFormat&lt;/code&gt; una vez cuando la macro se expande y usa el mismo objeto &lt;code&gt;DateFormat&lt;/code&gt; incluso si un fragmento de c&amp;oacute;digo se ejecuta varias veces.</target>
        </trans-unit>
        <trans-unit id="45337346e75761db7f47d57b0a0f2d57b557f00b" translate="yes" xml:space="preserve">
          <source>You can call:</source>
          <target state="translated">Puedes llamar:</target>
        </trans-unit>
        <trans-unit id="54416a772feee0c2a6abe4feb994c4ff0911f0e5" translate="yes" xml:space="preserve">
          <source>You can create your own custom types that take values as parameters, and use them to control dispatch of custom types. By way of illustration of this idea, let's introduce a parametric type, &lt;code&gt;Val{x}&lt;/code&gt;, and a constructor &lt;code&gt;Val(x) = Val{x}()&lt;/code&gt;, which serves as a customary way to exploit this technique for cases where you don't need a more elaborate hierarchy.</source>
          <target state="translated">Puede crear sus propios tipos personalizados que toman valores como par&amp;aacute;metros y utilizarlos para controlar el env&amp;iacute;o de tipos personalizados. A modo de ilustraci&amp;oacute;n de esta idea, introduzcamos un tipo param&amp;eacute;trico, &lt;code&gt;Val{x}&lt;/code&gt; , y un constructor &lt;code&gt;Val(x) = Val{x}()&lt;/code&gt; , que sirve como una forma habitual de explotar esta t&amp;eacute;cnica para los casos en los que no Necesita una jerarqu&amp;iacute;a m&amp;aacute;s elaborada.</target>
        </trans-unit>
        <trans-unit id="67ebafe0bb709b3a3bcb8a53db51ff716e9c8b39" translate="yes" xml:space="preserve">
          <source>You can do better by declaring the type of &lt;code&gt;a&lt;/code&gt;. Here, we are focused on the case where &lt;code&gt;a&lt;/code&gt; might be any one of several types, in which case the natural solution is to use parameters. For example:</source>
          <target state="translated">Se puede hacer mejor al declarar el tipo de &lt;code&gt;a&lt;/code&gt; . Aqu&amp;iacute;, nos centramos en el caso en el que &lt;code&gt;a&lt;/code&gt; podr&amp;iacute;a ser cualquiera de varios tipos, en cuyo caso la soluci&amp;oacute;n natural es utilizar par&amp;aacute;metros. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e4caa428e60cf326fe234bff9118f30463ecc984" translate="yes" xml:space="preserve">
          <source>You can do comparisons and a limited amount of arithmetic with &lt;code&gt;Char&lt;/code&gt; values:</source>
          <target state="translated">Puede hacer comparaciones y una cantidad limitada de aritm&amp;eacute;tica con valores de &lt;code&gt;Char&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="213f6d383b8d704a68bbc7048875f6a46e354817" translate="yes" xml:space="preserve">
          <source>You can easily convert a &lt;code&gt;Char&lt;/code&gt; to its integer value, i.e. code point:</source>
          <target state="translated">Puede convertir f&amp;aacute;cilmente un &lt;code&gt;Char&lt;/code&gt; a su valor entero, es decir, punto de c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="cdf51e2713eacda965f72b9f170006ad6c4671fa" translate="yes" xml:space="preserve">
          <source>You can easily experiment in the same way with the associativity and precedence of various combinations of &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; operators.</source>
          <target state="translated">Puede experimentar f&amp;aacute;cilmente de la misma manera con la asociatividad y la precedencia de varias combinaciones de &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; operadores.</target>
        </trans-unit>
        <trans-unit id="297dd6d932ba3b9c077f90d9ae3e638bbc832d7a" translate="yes" xml:space="preserve">
          <source>You can easily see which methods exist for a function by entering the function object itself in an interactive session:</source>
          <target state="translated">Se puede ver fácilmente qué métodos existen para una función introduciendo el propio objeto de la función en una sesión interactiva:</target>
        </trans-unit>
        <trans-unit id="9d9fc4e50c51febb70c8179dd7d3ee0d25d50a3e" translate="yes" xml:space="preserve">
          <source>You can easily sort in reverse order as well:</source>
          <target state="translated">También puedes ordenar fácilmente en orden inverso:</target>
        </trans-unit>
        <trans-unit id="ae353c04e06eae0932d681939a80ca4e623d3dfb" translate="yes" xml:space="preserve">
          <source>You can extract the following info from a &lt;code&gt;RegexMatch&lt;/code&gt; object:</source>
          <target state="translated">Puede extraer la siguiente informaci&amp;oacute;n de un objeto &lt;code&gt;RegexMatch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="597d6825a8e66617cfc25b05c246ad4b54f231b3" translate="yes" xml:space="preserve">
          <source>You can get a near approximation of a &lt;code&gt;union&lt;/code&gt; if you know, a priori, the field that will have the greatest size (potentially including padding). When translating your fields to Julia, declare the Julia field to be only of that type.</source>
          <target state="translated">Puede obtener una aproximaci&amp;oacute;n cercana de una &lt;code&gt;union&lt;/code&gt; si conoce, a priori, el campo que tendr&amp;aacute; el mayor tama&amp;ntilde;o (incluyendo potencialmente el relleno). Cuando traduzca sus campos a Julia, declare que el campo Julia es solo de ese tipo.</target>
        </trans-unit>
        <trans-unit id="b8f2354d5e866a3fef788cc2117a49177430a807" translate="yes" xml:space="preserve">
          <source>You can get an approximation of a &lt;code&gt;union&lt;/code&gt; if you know, a priori, the field that will have the greatest size (potentially including padding). When translating your fields to Julia, declare the Julia field to be only of that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb63027077e534b4bd1d351e2d6f0cd13eea49c" translate="yes" xml:space="preserve">
          <source>You can go in the other direction using the &lt;a href=&quot;../../base/arrays/index#Core.Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; constructor. The &lt;a href=&quot;#SparseArrays.issparse&quot;&gt;&lt;code&gt;issparse&lt;/code&gt;&lt;/a&gt; function can be used to query if a matrix is sparse.</source>
          <target state="translated">Puede ir en la otra direcci&amp;oacute;n usando el constructor &lt;a href=&quot;../../base/arrays/index#Core.Array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; . La funci&amp;oacute;n &lt;a href=&quot;#SparseArrays.issparse&quot;&gt; &lt;code&gt;issparse&lt;/code&gt; &lt;/a&gt; se puede utilizar para consultar si una matriz es escasa.</target>
        </trans-unit>
        <trans-unit id="d3ef6d04d5b1e72dbe8e2e762201178f4553d19d" translate="yes" xml:space="preserve">
          <source>You can input any Unicode character in single quotes using &lt;code&gt;\u&lt;/code&gt; followed by up to four hexadecimal digits or &lt;code&gt;\U&lt;/code&gt; followed by up to eight hexadecimal digits (the longest valid value only requires six):</source>
          <target state="translated">Puede ingresar cualquier car&amp;aacute;cter Unicode entre comillas simples usando &lt;code&gt;\u&lt;/code&gt; seguido de hasta cuatro d&amp;iacute;gitos hexadecimales o &lt;code&gt;\U&lt;/code&gt; seguido de hasta ocho d&amp;iacute;gitos hexadecimales (el valor v&amp;aacute;lido m&amp;aacute;s largo solo requiere seis):</target>
        </trans-unit>
        <trans-unit id="a1c3136389e599fc278301c384c96c386084d25f" translate="yes" xml:space="preserve">
          <source>You can iteratively modify the code in MyPkg in your editor and re-run the tests with &lt;code&gt;include(&quot;runtests.jl&quot;)&lt;/code&gt;. You generally should not need to restart your Julia session to see the changes take effect (subject to a few limitations, see https://timholy.github.io/Revise.jl/stable/limitations/).</source>
          <target state="translated">Puede modificar iterativamente el c&amp;oacute;digo en MyPkg en su editor y volver a ejecutar las pruebas con &lt;code&gt;include(&quot;runtests.jl&quot;)&lt;/code&gt; . Por lo general, no es necesario que reinicie su sesi&amp;oacute;n de Julia para ver que los cambios surtan efecto (sujeto a algunas limitaciones, consulte https://timholy.github.io/Revise.jl/stable/limitations/).</target>
        </trans-unit>
        <trans-unit id="01f1a9e77e1dab9c53cf6e54b009fbdd40624504" translate="yes" xml:space="preserve">
          <source>You can lexicographically compare strings using the standard comparison operators:</source>
          <target state="translated">Puedes comparar lexicográficamente las cuerdas usando los operadores de comparación estándar:</target>
        </trans-unit>
        <trans-unit id="49d7484742424e03da7e9cb1b2e9ef8dd1d529ad" translate="yes" xml:space="preserve">
          <source>You can lock your writes with a &lt;code&gt;ReentrantLock&lt;/code&gt; like this:</source>
          <target state="translated">Puede bloquear sus escrituras con un &lt;code&gt;ReentrantLock&lt;/code&gt; como este:</target>
        </trans-unit>
        <trans-unit id="02da3de9b76002a19afdbabf9d38695160c6abb0" translate="yes" xml:space="preserve">
          <source>You can modify the behavior of regular expressions by some combination of the flags &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, and &lt;code&gt;x&lt;/code&gt; after the closing double quote mark. These flags have the same meaning as they do in Perl, as explained in this excerpt from the &lt;a href=&quot;http://perldoc.perl.org/perlre.html#Modifiers&quot;&gt;perlre manpage&lt;/a&gt;:</source>
          <target state="translated">Puede modificar el comportamiento de las expresiones regulares mediante alguna combinaci&amp;oacute;n de los indicadores &lt;code&gt;i&lt;/code&gt; , &lt;code&gt;m&lt;/code&gt; , &lt;code&gt;s&lt;/code&gt; y &lt;code&gt;x&lt;/code&gt; despu&amp;eacute;s de la comilla doble de cierre. Estos indicadores tienen el mismo significado que tienen en Perl, como se explica en este extracto de la p&amp;aacute;gina de &lt;a href=&quot;http://perldoc.perl.org/perlre.html#Modifiers&quot;&gt;manual de perlre&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d563bb2419fe2e35302ac639bca513eb737c8ce0" translate="yes" xml:space="preserve">
          <source>You can obtain and configure the relevant parameters this way:</source>
          <target state="translated">De esta manera se pueden obtener y configurar los parámetros relevantes:</target>
        </trans-unit>
        <trans-unit id="af014600f23a52a7d3b0ccd1627fdcdcfa305bf7" translate="yes" xml:space="preserve">
          <source>You can pass incomplete objects to other functions from inner constructors to delegate their completion:</source>
          <target state="translated">Puedes pasar objetos incompletos a otras funciones de los constructores internos para delegar su terminación:</target>
        </trans-unit>
        <trans-unit id="2e5cc0663f902336ac80075e9866fb096894bf72" translate="yes" xml:space="preserve">
          <source>You can perform all the standard arithmetic operations with complex numbers:</source>
          <target state="translated">Puedes realizar todas las operaciones aritméticas estándar con números complejos:</target>
        </trans-unit>
        <trans-unit id="82a61677ccdaa8b5a6b40eab46850f79a11022e3" translate="yes" xml:space="preserve">
          <source>You can perform arithmetic and other operations with &lt;a href=&quot;../../base/base/index#end&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt;, just like a normal value:</source>
          <target state="translated">Puede realizar operaciones aritm&amp;eacute;ticas y otras con &lt;a href=&quot;../../base/base/index#end&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt; , como un valor normal:</target>
        </trans-unit>
        <trans-unit id="bde51aa2974cdddcc791ab18ecf0b461a4a8f184" translate="yes" xml:space="preserve">
          <source>You can search for the index of a particular character using the &lt;code&gt;findfirst&lt;/code&gt; and &lt;code&gt;findlast&lt;/code&gt; functions:</source>
          <target state="translated">Puede buscar el &amp;iacute;ndice de un car&amp;aacute;cter en particular usando las funciones &lt;code&gt;findfirst&lt;/code&gt; y &lt;code&gt;findlast&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="29f0c4ef93a19d9ea8874bfdfe84ad585d18096d" translate="yes" xml:space="preserve">
          <source>You can start the search for a character at a given offset by using the functions &lt;code&gt;findnext&lt;/code&gt; and &lt;code&gt;findprev&lt;/code&gt;:</source>
          <target state="translated">Puede iniciar la b&amp;uacute;squeda de un car&amp;aacute;cter en un desplazamiento dado utilizando las funciones &lt;code&gt;findnext&lt;/code&gt; y &lt;code&gt;findprev&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="983a4e9a838b7c272bd7ce9841a71699f2f5f979" translate="yes" xml:space="preserve">
          <source>You can then run &lt;code&gt;make -C doc doctest=true&lt;/code&gt; to run all the doctests in the Julia Manual and API documentation, which will ensure that your example works.</source>
          <target state="translated">Luego puede ejecutar &lt;code&gt;make -C doc doctest=true&lt;/code&gt; para ejecutar todas las pruebas de documentaci&amp;oacute;n en el Manual de Julia y la documentaci&amp;oacute;n de la API, lo que garantizar&amp;aacute; que su ejemplo funcione.</target>
        </trans-unit>
        <trans-unit id="4814e310e21d1ccb6a91f06788291ec84faf6155" translate="yes" xml:space="preserve">
          <source>You can think of a &lt;code&gt;Task&lt;/code&gt; as a handle to a unit of computational work to be performed. It has a create-start-run-finish lifecycle. Tasks are created by calling the &lt;code&gt;Task&lt;/code&gt; constructor on a 0-argument function to run, or using the &lt;a href=&quot;../../base/parallel/index#Base.@task&quot;&gt;&lt;code&gt;@task&lt;/code&gt;&lt;/a&gt; macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01884818eeefcdc6c4866d1d82554c6cbab8b4af" translate="yes" xml:space="preserve">
          <source>You can type the composition operator at the REPL and suitably-configured editors using &lt;code&gt;\circ&amp;lt;tab&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Puede escribir el operador de composici&amp;oacute;n en el REPL y los editores configurados adecuadamente usando &lt;code&gt;\circ&amp;lt;tab&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="671bb6ef5bfe755f6871d64b9b0adf82ab7550a3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../../base/strings/index#Base.occursin&quot;&gt;&lt;code&gt;occursin&lt;/code&gt;&lt;/a&gt; function to check if a substring is found within a string:</source>
          <target state="translated">Puede usar la funci&amp;oacute;n &lt;a href=&quot;../../base/strings/index#Base.occursin&quot;&gt; &lt;code&gt;occursin&lt;/code&gt; &lt;/a&gt; para verificar si se encuentra una subcadena dentro de una cadena:</target>
        </trans-unit>
        <trans-unit id="1889689569d33c12e5c7365a4498ac549f0fa6b4" translate="yes" xml:space="preserve">
          <source>You can write multiple values with the same &lt;code&gt;write&lt;/code&gt; call. i.e. the following are equivalent:</source>
          <target state="translated">Puede escribir varios valores con la misma llamada de &lt;code&gt;write&lt;/code&gt; . es decir, los siguientes son equivalentes:</target>
        </trans-unit>
        <trans-unit id="0a69b3c3747d382e37e0c069a0643adbff045b55" translate="yes" xml:space="preserve">
          <source>You could also add a zero-argument &lt;code&gt;Foo&lt;/code&gt; constructor method that supplies default values for both of the &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; fields:</source>
          <target state="translated">Tambi&amp;eacute;n puede agregar un m&amp;eacute;todo constructor &lt;code&gt;Foo&lt;/code&gt; de argumento cero que proporcione valores predeterminados para los campos &lt;code&gt;bar&lt;/code&gt; y &lt;code&gt;baz&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="748f1f789b535f659a4d83b60f43c95c4a72b9c3" translate="yes" xml:space="preserve">
          <source>You do not have to make any modifications to your code to take timing measurements (in contrast to the alternative &lt;a href=&quot;https://github.com/timholy/IProfile.jl&quot;&gt;instrumenting profiler&lt;/a&gt;).</source>
          <target state="translated">No tiene que realizar ninguna modificaci&amp;oacute;n en su c&amp;oacute;digo para tomar medidas de tiempo (a diferencia del &lt;a href=&quot;https://github.com/timholy/IProfile.jl&quot;&gt;perfilador de instrumentos&lt;/a&gt; alternativo ).</target>
        </trans-unit>
        <trans-unit id="515bee5879927c5023670ad7c5704ff12c433189" translate="yes" xml:space="preserve">
          <source>You do not have to make any modifications to your code to take timing measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c719aa5a89e4e9d767112f0eb9eee4442b7ddf" translate="yes" xml:space="preserve">
          <source>You do not need to write binary &lt;code&gt;BroadcastStyle&lt;/code&gt; rules unless you want to establish precedence for two or more non-&lt;code&gt;DefaultArrayStyle&lt;/code&gt; types.</source>
          <target state="translated">No es necesario que escriba reglas binarias &lt;code&gt;BroadcastStyle&lt;/code&gt; a menos que desee establecer precedencia para dos o m&amp;aacute;s tipos que no sean &lt;code&gt;DefaultArrayStyle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98dd2765494f1835f8de8c7c9befa3251d03285e" translate="yes" xml:space="preserve">
          <source>You generally want to use &lt;a href=&quot;../../base/base/index#Core.isa&quot;&gt;&lt;code&gt;isa&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&amp;lt;:&lt;/code&gt; for testing types, not &lt;code&gt;==&lt;/code&gt;. Checking types for exact equality typically only makes sense when comparing to a known concrete type (e.g. &lt;code&gt;T == Float64&lt;/code&gt;), or if you &lt;em&gt;really, really&lt;/em&gt; know what you're doing.</source>
          <target state="translated">Por lo general, desea usar &lt;a href=&quot;../../base/base/index#Core.isa&quot;&gt; &lt;code&gt;isa&lt;/code&gt; &lt;/a&gt; y &lt;code&gt;&amp;lt;:&lt;/code&gt; para probar tipos, no &lt;code&gt;==&lt;/code&gt; . La verificaci&amp;oacute;n de tipos para la igualdad exacta generalmente solo tiene sentido cuando se compara con un tipo concreto conocido (por ejemplo, &lt;code&gt;T == Float64&lt;/code&gt; ), o si &lt;em&gt;realmente&lt;/em&gt; sabe lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="14812b00d271b7b5f0ec10d0a35574667eaad1aa" translate="yes" xml:space="preserve">
          <source>You have homogenous lists of the same type of &lt;code&gt;Car&lt;/code&gt; to process, so that you can store them all in an &lt;code&gt;Array{Car{:Honda,:Accord},N}&lt;/code&gt;.</source>
          <target state="translated">Tiene listas homog&amp;eacute;neas del mismo tipo de &lt;code&gt;Car&lt;/code&gt; para procesar, de modo que puede almacenarlas todas en una &lt;code&gt;Array{Car{:Honda,:Accord},N}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54079830b99730e8b5b0840e83f7e3f6b6fec1f2" translate="yes" xml:space="preserve">
          <source>You may define your own exceptions in the following way:</source>
          <target state="translated">Puede definir sus propias excepciones de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="75a4f74f7e0a2a762b20575e87e4a9f8afac9ea7" translate="yes" xml:space="preserve">
          <source>You may find a list of field names using the &lt;a href=&quot;../../base/base/index#Base.fieldnames&quot;&gt;&lt;code&gt;fieldnames&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Puede encontrar una lista de nombres de campo usando la funci&amp;oacute;n de &lt;a href=&quot;../../base/base/index#Base.fieldnames&quot;&gt; &lt;code&gt;fieldnames&lt;/code&gt; &lt;/a&gt; de campo .</target>
        </trans-unit>
        <trans-unit id="321a16cad9d72ad66163bddd6d822e5c0fba0fe3" translate="yes" xml:space="preserve">
          <source>You may find that simple benchmarks of linear algebra building blocks like</source>
          <target state="translated">Puedes encontrar que simples referencias de bloques de construcción de álgebra lineal como</target>
        </trans-unit>
        <trans-unit id="3b69612dc47009ecd3936a82f044980d92ef4b91" translate="yes" xml:space="preserve">
          <source>You may have noticed the &lt;code&gt;(v1.1)&lt;/code&gt; in the REPL prompt. This lets us know &lt;code&gt;v1.1&lt;/code&gt; is the &lt;strong&gt;active environment&lt;/strong&gt;. The active environment is the environment that will be modified by Pkg commands such as &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;rm&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt;.</source>
          <target state="translated">Es posible que haya notado la &lt;code&gt;(v1.1)&lt;/code&gt; en el indicador REPL. Esto nos permite saber que &lt;code&gt;v1.1&lt;/code&gt; es el &lt;strong&gt;entorno activo&lt;/strong&gt; . El entorno activo es el entorno que ser&amp;aacute; modificado por los comandos de Pkg como &lt;code&gt;add&lt;/code&gt; , &lt;code&gt;rm&lt;/code&gt; y &lt;code&gt;update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94a57765c350792774cf5846e707a163457704ae" translate="yes" xml:space="preserve">
          <source>You may need to &lt;a href=&quot;../../base/io-network/index#Base.close&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; and reopen the &lt;code&gt;GitRemote&lt;/code&gt; in question after updating its push refspecs in order for the change to take effect and for calls to &lt;a href=&quot;#LibGit2.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to work.</source>
          <target state="translated">Puede que tenga que &lt;a href=&quot;../../base/io-network/index#Base.close&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; y volver a abrir el &lt;code&gt;GitRemote&lt;/code&gt; en cuesti&amp;oacute;n despu&amp;eacute;s de actualizar sus refspecs empuje para que el cambio surta efecto y para llamadas a &lt;a href=&quot;#LibGit2.push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; al trabajo.</target>
        </trans-unit>
        <trans-unit id="4229325c98965b7733293cd84ce7238967b6b57b" translate="yes" xml:space="preserve">
          <source>You may need to be aware of certain behaviors inherent in the creation of incremental shared libraries which may require care when writing your module. For example, external state is not preserved. To accommodate this, explicitly separate any initialization steps that must occur at &lt;em&gt;runtime&lt;/em&gt; from steps that can occur at &lt;em&gt;compile time&lt;/em&gt;. For this purpose, Julia allows you to define an &lt;code&gt;__init__()&lt;/code&gt; function in your module that executes any initialization steps that must occur at runtime. This function will not be called during compilation (&lt;code&gt;--output-*&lt;/code&gt;). Effectively, you can assume it will be run exactly once in the lifetime of the code. You may, of course, call it manually if necessary, but the default is to assume this function deals with computing state for the local machine, which does not need to be &amp;ndash; or even should not be &amp;ndash; captured in the compiled image. It will be called after the module is loaded into a process, including if it is being loaded into an incremental compile (&lt;code&gt;--output-incremental=yes&lt;/code&gt;), but not if it is being loaded into a full-compilation process.</source>
          <target state="translated">Es posible que deba conocer ciertos comportamientos inherentes a la creaci&amp;oacute;n de bibliotecas compartidas incrementales que pueden requerir cuidado al escribir su m&amp;oacute;dulo. Por ejemplo, el estado externo no se conserva. Para adaptarse a esto, separe expl&amp;iacute;citamente los pasos de inicializaci&amp;oacute;n que deben ocurrir en &lt;em&gt;tiempo&lt;/em&gt; de &lt;em&gt;ejecuci&amp;oacute;n&lt;/em&gt; de los pasos que pueden ocurrir en &lt;em&gt;tiempo de compilaci&amp;oacute;n&lt;/em&gt; . Para este prop&amp;oacute;sito, Julia le permite definir una funci&amp;oacute;n &lt;code&gt;__init__()&lt;/code&gt; en su m&amp;oacute;dulo que ejecuta cualquier paso de inicializaci&amp;oacute;n que debe ocurrir en tiempo de ejecuci&amp;oacute;n. Esta funci&amp;oacute;n no se llamar&amp;aacute; durante la compilaci&amp;oacute;n ( &lt;code&gt;--output-*&lt;/code&gt; ). Efectivamente, puede asumir que se ejecutar&amp;aacute; exactamente una vez durante la vida &amp;uacute;til del c&amp;oacute;digo. Por supuesto, puede llamarlo manualmente si es necesario, pero el valor predeterminado es asumir que esta funci&amp;oacute;n se ocupa del estado de computaci&amp;oacute;n de la m&amp;aacute;quina local, que no necesita ser capturado, o incluso no debe ser, capturado en la imagen compilada. Se llamar&amp;aacute; despu&amp;eacute;s de que el m&amp;oacute;dulo se cargue en un proceso, incluso si se est&amp;aacute; cargando en una compilaci&amp;oacute;n incremental ( &lt;code&gt;--output-incremental=yes&lt;/code&gt; ), pero no si se est&amp;aacute; cargando en un proceso de compilaci&amp;oacute;n completo.</target>
        </trans-unit>
        <trans-unit id="706389eb857acac994f27512bc713e1991d6229c" translate="yes" xml:space="preserve">
          <source>You may note that in non-interactive contexts the hard and soft scope behaviors are identical except that a warning is printed when an implicitly local variable (i.e. not declared with &lt;code&gt;local x&lt;/code&gt;) shadows a global. In interactive contexts, the rules follow a more complex heuristic for the sake of convenience. This is covered in depth in examples that follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e65af1a6b8116a7d6a8ac10e4cee832d255f64" translate="yes" xml:space="preserve">
          <source>You may notice that in the example above the first stack frame points at line 4, where &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt;&lt;code&gt;stacktrace&lt;/code&gt;&lt;/a&gt; is called, rather than line 2, where &lt;em&gt;bad_function&lt;/em&gt; is called, and &lt;code&gt;bad_function&lt;/code&gt;'s frame is missing entirely. This is understandable, given that &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt;&lt;code&gt;stacktrace&lt;/code&gt;&lt;/a&gt; is called from the context of the &lt;em&gt;catch&lt;/em&gt;. While in this example it's fairly easy to find the actual source of the error, in complex cases tracking down the source of the error becomes nontrivial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19cfc137102f94cf8a3e39329b48533e78155c7" translate="yes" xml:space="preserve">
          <source>You may notice that in the example above the first stack frame points points at line 4, where &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt;&lt;code&gt;stacktrace&lt;/code&gt;&lt;/a&gt; is called, rather than line 2, where &lt;em&gt;bad_function&lt;/em&gt; is called, and &lt;code&gt;bad_function&lt;/code&gt;'s frame is missing entirely. This is understandable, given that &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt;&lt;code&gt;stacktrace&lt;/code&gt;&lt;/a&gt; is called from the context of the &lt;em&gt;catch&lt;/em&gt;. While in this example it's fairly easy to find the actual source of the error, in complex cases tracking down the source of the error becomes nontrivial.</source>
          <target state="translated">Usted puede notar que en el ejemplo anterior los primeros puntos puntos marco de pila en la l&amp;iacute;nea 4, donde &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt; &lt;code&gt;stacktrace&lt;/code&gt; &lt;/a&gt; se llama, en lugar de la l&amp;iacute;nea 2, donde &lt;em&gt;bad_function&lt;/em&gt; se llama, y &lt;code&gt;bad_function&lt;/code&gt; 's marco no se encuentra en su totalidad. Esto es comprensible, dado que &lt;a href=&quot;../../base/stacktraces/index#Base.StackTraces.stacktrace&quot;&gt; &lt;code&gt;stacktrace&lt;/code&gt; &lt;/a&gt; se llama desde el contexto de la &lt;em&gt;captura&lt;/em&gt; . Si bien en este ejemplo es bastante f&amp;aacute;cil encontrar la fuente real del error, en casos complejos rastrear la fuente del error no es trivial.</target>
        </trans-unit>
        <trans-unit id="5e4c7a6ccbcbfd095ffe6620497bc770c0f876bf" translate="yes" xml:space="preserve">
          <source>You may prefer the LTS (Long Term Support) version of Julia if you are looking for a very stable code base. The current LTS version of Julia is versioned according to SemVer as v1.0.x; this branch will continue to recieve bugfixes until a new LTS branch is chosen, at which point the v1.0.x series will no longer recieved regular bug fixes and all but the most conservative users will be advised to upgrade to the new LTS version series. As a package developer, you may prefer to develop for the LTS version, to maximize the number of users who can use your package. As per SemVer, code written for v1.0 will continue to work for all future LTS and Stable versions. In general, even if targetting the LTS, one can develop and run code in the latest Stable version, to take advantage of the improved performance; so long as one avoids using new features (such as added library functions or new methods).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76981634f75e5c11344317b4a4c06f7a789abab" translate="yes" xml:space="preserve">
          <source>You may prefer the beta version of Julia if you don't mind being slightly behind the latest bugfixes and changes, but find the slightly faster rate of changes more appealing. Additionally, these binaries are tested before they are published to ensure they are fully functional.</source>
          <target state="translated">Puede que prefieras la versión beta de Julia si no te importa estar ligeramente por detrás de las últimas correcciones de errores y cambios,pero encuentras más atractiva la tasa de cambios ligeramente más rápida.Además,estos binarios se prueban antes de ser publicados para asegurar que son completamente funcionales.</target>
        </trans-unit>
        <trans-unit id="0460fd971f5acf59556e02a1302869132f958a11" translate="yes" xml:space="preserve">
          <source>You may prefer the nightly version of Julia if you want to take advantage of the latest updates to the language, and don't mind if the version available today occasionally doesn't actually work.</source>
          <target state="translated">Puede que prefiera la versión nocturna de Julia si quiere aprovechar las últimas actualizaciones del idioma,y no le importa si la versión disponible hoy en día de vez en cuando no funciona.</target>
        </trans-unit>
        <trans-unit id="36eadd3f0fe870572a5ea4a451370de0fa57fc6f" translate="yes" xml:space="preserve">
          <source>You may prefer the nightly version of Julia if you want to take advantage of the latest updates to the language, and don't mind if the version available today occasionally doesn't actually work. As the name implies, releases to the nightly version are made roughly every night (depending on build infrastructure stability). In general nightly released are fairly safe to use&amp;mdash;your code will not catch on fire. However, they may be occasional regressions and or issues that will not be found until more thorough pre-release testing. You may wish to test against the nightly version to ensure that such regressions that affect your use case are caught before a release is made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b13c20826345514f072a53cfc2e614b5a875ac2" translate="yes" xml:space="preserve">
          <source>You may prefer the release version of Julia if you are looking for a stable code base. Releases generally occur every 6 months, giving you a stable platform for writing code.</source>
          <target state="translated">Puede que prefieras la versión de lanzamiento de Julia si buscas un código base estable.Las liberaciones generalmente ocurren cada 6 meses,dándole una plataforma estable para escribir código.</target>
        </trans-unit>
        <trans-unit id="a8603fb2a99f46c98dd43f967c904e067e7d516b" translate="yes" xml:space="preserve">
          <source>You may want to try this for yourself to see how it works.</source>
          <target state="translated">Puede que quieras probar esto por ti mismo para ver cómo funciona.</target>
        </trans-unit>
        <trans-unit id="71eb424f61bc73bf2ac2a0d6b8ff2e2e2a212793" translate="yes" xml:space="preserve">
          <source>You might expect the second example to behave the same way, but in fact the &lt;code&gt;return&lt;/code&gt; there only breaks out of the &lt;em&gt;inner&lt;/em&gt; function (inside the &lt;code&gt;do&lt;/code&gt; block) and gives a value back to &lt;code&gt;map&lt;/code&gt;. &lt;code&gt;test2([5,6,7])&lt;/code&gt; then returns &lt;code&gt;[5,12,7]&lt;/code&gt;.</source>
          <target state="translated">Puede esperar que el segundo ejemplo se comporte de la misma manera, pero de hecho, el &lt;code&gt;return&lt;/code&gt; all&amp;iacute; solo sale de la funci&amp;oacute;n &lt;em&gt;interna&lt;/em&gt; (dentro del bloque &lt;code&gt;do&lt;/code&gt; ) y devuelve un valor al &lt;code&gt;map&lt;/code&gt; a . &lt;code&gt;test2([5,6,7])&lt;/code&gt; luego devuelve &lt;code&gt;[5,12,7]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8eed329d4cf528497edb705ccaa35a89edfb626e" translate="yes" xml:space="preserve">
          <source>You might want broadcasting to preserve the &lt;code&gt;char&lt;/code&gt; &quot;metadata.&quot; First we define</source>
          <target state="translated">Es posible que desee transmitir para conservar el &lt;code&gt;char&lt;/code&gt; &quot;metadatos&quot;. Primero definimos</target>
        </trans-unit>
        <trans-unit id="01b172c9b8083a729ce8b5e678095c5e53087128" translate="yes" xml:space="preserve">
          <source>You require CPU-intensive processing on each &lt;code&gt;Car&lt;/code&gt;, and it becomes vastly more efficient if you know the &lt;code&gt;Make&lt;/code&gt; and &lt;code&gt;Model&lt;/code&gt; at compile time and the total number of different &lt;code&gt;Make&lt;/code&gt; or &lt;code&gt;Model&lt;/code&gt; that will be used is not too large.</source>
          <target state="translated">Necesita un procesamiento intensivo de la CPU en cada &lt;code&gt;Car&lt;/code&gt; , y se vuelve mucho m&amp;aacute;s eficiente si conoce la &lt;code&gt;Make&lt;/code&gt; y el &lt;code&gt;Model&lt;/code&gt; en el momento de la compilaci&amp;oacute;n y el n&amp;uacute;mero total de &lt;code&gt;Make&lt;/code&gt; o &lt;code&gt;Model&lt;/code&gt; diferentes que se utilizar&amp;aacute;n no es demasiado grande.</target>
        </trans-unit>
        <trans-unit id="cae8f1e8790fd84f821e9cc3eb20a504f4b0534d" translate="yes" xml:space="preserve">
          <source>You should see a list of available commands along with short descriptions. You can ask for more detailed help by specifying a command:</source>
          <target state="translated">Debería ver una lista de los comandos disponibles junto con breves descripciones.Puede pedir ayuda más detallada especificando un comando:</target>
        </trans-unit>
        <trans-unit id="eb798888844269226c94086ebe8f3c7329fdec21" translate="yes" xml:space="preserve">
          <source>Your code must be available on any process that runs it. For example, type the following into the Julia prompt:</source>
          <target state="translated">Su código debe estar disponible en cualquier proceso que lo ejecute.Por ejemplo,escriba lo siguiente en el mensaje de Julia:</target>
        </trans-unit>
        <trans-unit id="57bf44abb3ac22f4d7fc3ab61624aaa4d1a927ab" translate="yes" xml:space="preserve">
          <source>Z Notation Bag Membership</source>
          <target state="translated">Z Membresía de la Bolsa de Notación</target>
        </trans-unit>
        <trans-unit id="74e2105c5405ac305b485ea5d5fbf6c4fbc31a2b" translate="yes" xml:space="preserve">
          <source>Z Notation Schema Composition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561efdcba775fe560525de0b80ee246bac982519" translate="yes" xml:space="preserve">
          <source>Zero-dimensional arrays are arrays of the form &lt;code&gt;Array{T,0}&lt;/code&gt;. They behave similar to scalars, but there are important differences. They deserve a special mention because they are a special case which makes logical sense given the generic definition of arrays, but might be a bit unintuitive at first. The following line defines a zero-dimensional array:</source>
          <target state="translated">Los arreglos de dimensi&amp;oacute;n cero son arreglos de la forma &lt;code&gt;Array{T,0}&lt;/code&gt; . Se comportan de manera similar a los escalares, pero existen diferencias importantes. Merecen una menci&amp;oacute;n especial porque son un caso especial que tiene sentido l&amp;oacute;gico dada la definici&amp;oacute;n gen&amp;eacute;rica de matrices, pero pueden resultar un poco poco intuitivos al principio. La siguiente l&amp;iacute;nea define una matriz de dimensi&amp;oacute;n cero:</target>
        </trans-unit>
        <trans-unit id="59e8673a8540d0e191f3f9440981811c0b28178f" translate="yes" xml:space="preserve">
          <source>Zero-dimensional arrays are the &quot;point&quot; to vector's &quot;line&quot; and matrix's &quot;plane&quot;. Just as a line has no area (but still represents a set of things), a point has no length or any dimensions at all (but still represents a thing).</source>
          <target state="translated">Las matrices cero-dimensionales son el &quot;punto&quot; de la &quot;línea&quot; del vector y el &quot;plano&quot; de la matriz.Así como una línea no tiene área (pero aún así representa un conjunto de cosas),un punto no tiene longitud ni dimensiones en absoluto (pero aún así representa una cosa).</target>
        </trans-unit>
        <trans-unit id="ec2113ef23ab629753d460306640202ef42c12ef" translate="yes" xml:space="preserve">
          <source>Zero-dimensional arrays don't natively have any dimensions into which you index &amp;ndash; they&amp;rsquo;re just &lt;code&gt;A[]&lt;/code&gt;. We can apply the same &quot;trailing one&quot; rule for them as for all other array dimensionalities, so you can indeed index them as &lt;code&gt;A[1]&lt;/code&gt;, &lt;code&gt;A[1,1]&lt;/code&gt;, etc.</source>
          <target state="translated">Las matrices de dimensi&amp;oacute;n cero no tienen de forma nativa ninguna dimensi&amp;oacute;n en la que indexar, son solo &lt;code&gt;A[]&lt;/code&gt; . Podemos aplicar la misma regla de &quot;uno al final&quot; para ellos que para todas las dem&amp;aacute;s dimensionalidades de matriz, por lo que de hecho puede indexarlos como &lt;code&gt;A[1]&lt;/code&gt; , &lt;code&gt;A[1,1]&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="df74de535f1392e594ef5eeab6807c001df2566f" translate="yes" xml:space="preserve">
          <source>Zero-dimensional arrays don't natively have any dimensions into which you index &amp;ndash; they&amp;rsquo;re just &lt;code&gt;A[]&lt;/code&gt;. We can apply the same &quot;trailing one&quot; rule for them as for all other array dimensionalities, so you can indeed index them as &lt;code&gt;A[1]&lt;/code&gt;, &lt;code&gt;A[1,1]&lt;/code&gt;, etc; see &lt;a href=&quot;../arrays/index#Omitted-and-extra-indices&quot;&gt;Omitted and extra indices&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b26e283b9285c59cfe6ee345d840ff32a08052c" translate="yes" xml:space="preserve">
          <source>\()</source>
          <target state="translated">\()</target>
        </trans-unit>
        <trans-unit id="8a50e72bbe47fcaef6adcffd656ebe2d54953f91" translate="yes" xml:space="preserve">
          <source>\0/3</source>
          <target state="translated">\0/3</target>
        </trans-unit>
        <trans-unit id="e9405388bd3e66f4f3f6c02d971bd28ccdccaa7e" translate="yes" xml:space="preserve">
          <source>\1/</source>
          <target state="translated">\1/</target>
        </trans-unit>
        <trans-unit id="f027585d51760b016dc9a17eb250918d79fe1656" translate="yes" xml:space="preserve">
          <source>\1/10</source>
          <target state="translated">\1/10</target>
        </trans-unit>
        <trans-unit id="6dc80eb8fd394a5094b26fce0a091081f171ade1" translate="yes" xml:space="preserve">
          <source>\1/2</source>
          <target state="translated">\1/2</target>
        </trans-unit>
        <trans-unit id="db0136fc9351c47aeacf89b3b63fad4f778dec79" translate="yes" xml:space="preserve">
          <source>\1/3</source>
          <target state="translated">\1/3</target>
        </trans-unit>
        <trans-unit id="4a2d541db798ac9dc012eee3270125d49f7e9e1c" translate="yes" xml:space="preserve">
          <source>\1/4</source>
          <target state="translated">\1/4</target>
        </trans-unit>
        <trans-unit id="a87f8d74f6a7e153af3fff916bf7c031788cc412" translate="yes" xml:space="preserve">
          <source>\1/5</source>
          <target state="translated">\1/5</target>
        </trans-unit>
        <trans-unit id="29a3bc136b5ab0d2bc309b5bb5e1735798643266" translate="yes" xml:space="preserve">
          <source>\1/6</source>
          <target state="translated">\1/6</target>
        </trans-unit>
        <trans-unit id="f06587711719aaef8bc36199cb763a5ca8ed5b90" translate="yes" xml:space="preserve">
          <source>\1/7</source>
          <target state="translated">\1/7</target>
        </trans-unit>
        <trans-unit id="be708686ec340bec50c515ce07649bcbd7b6d749" translate="yes" xml:space="preserve">
          <source>\1/8</source>
          <target state="translated">\1/8</target>
        </trans-unit>
        <trans-unit id="11557e1ac7de358cb1bffae8b8e0c31658c73a34" translate="yes" xml:space="preserve">
          <source>\1/9</source>
          <target state="translated">\1/9</target>
        </trans-unit>
        <trans-unit id="db66670627d1ece8d004dba27bd31bbae103a152" translate="yes" xml:space="preserve">
          <source>\2/3</source>
          <target state="translated">\2/3</target>
        </trans-unit>
        <trans-unit id="594a1082136db6d496ec37c3f2e137ee2b1c2304" translate="yes" xml:space="preserve">
          <source>\2/5</source>
          <target state="translated">\2/5</target>
        </trans-unit>
        <trans-unit id="5e8bc9e533252d09ee6c73afce5da2a72488888e" translate="yes" xml:space="preserve">
          <source>\3/4</source>
          <target state="translated">\3/4</target>
        </trans-unit>
        <trans-unit id="a50e9368238ca82ac4489585387d46083f64cae7" translate="yes" xml:space="preserve">
          <source>\3/5</source>
          <target state="translated">\3/5</target>
        </trans-unit>
        <trans-unit id="9c3d1367082b439189bfb85f04cc1ffae71ef96e" translate="yes" xml:space="preserve">
          <source>\3/8</source>
          <target state="translated">\3/8</target>
        </trans-unit>
        <trans-unit id="47f8a536df17c50df7c82a92959bbd0c66172c07" translate="yes" xml:space="preserve">
          <source>\4/5</source>
          <target state="translated">\4/5</target>
        </trans-unit>
        <trans-unit id="3184741692c487b7052b7005a5dcc990d42ec28b" translate="yes" xml:space="preserve">
          <source>\5/6</source>
          <target state="translated">\5/6</target>
        </trans-unit>
        <trans-unit id="a3e2d08140d306e29d0dd5197b4d63c56018fd06" translate="yes" xml:space="preserve">
          <source>\5/8</source>
          <target state="translated">\5/8</target>
        </trans-unit>
        <trans-unit id="031fd711b0ff2a77753aebd9b5a3ae56bd990afc" translate="yes" xml:space="preserve">
          <source>\7/8</source>
          <target state="translated">\7/8</target>
        </trans-unit>
        <trans-unit id="c0fe4a8468a676d3af614df303545f8085623ffa" translate="yes" xml:space="preserve">
          <source>\:+1:</source>
          <target state="translated">\:+1:</target>
        </trans-unit>
        <trans-unit id="1f409cc5566bb159aa3eb9a43ba7b112abdf8f37" translate="yes" xml:space="preserve">
          <source>\:-1:</source>
          <target state="translated">\:-1:</target>
        </trans-unit>
        <trans-unit id="37a8827d047ba1424645fac130045eb7ce513b10" translate="yes" xml:space="preserve">
          <source>\:100:</source>
          <target state="translated">\:100:</target>
        </trans-unit>
        <trans-unit id="7a8b4088e301737914602cb64abd1cef18d926f6" translate="yes" xml:space="preserve">
          <source>\:1234:</source>
          <target state="translated">\:1234:</target>
        </trans-unit>
        <trans-unit id="91888e08cbedf6bf8862c5b65163ce478af06bf9" translate="yes" xml:space="preserve">
          <source>\:8ball:</source>
          <target state="translated">\:8ball:</target>
        </trans-unit>
        <trans-unit id="893c710f650dbaf6e52a56817de430adc9320c23" translate="yes" xml:space="preserve">
          <source>\:a:</source>
          <target state="translated">\:a:</target>
        </trans-unit>
        <trans-unit id="f853d000810dd26060e2696126e145030271c584" translate="yes" xml:space="preserve">
          <source>\:ab:</source>
          <target state="translated">\:ab:</target>
        </trans-unit>
        <trans-unit id="f37a396dfa857265e3ecd90835458cdae5a6eefb" translate="yes" xml:space="preserve">
          <source>\:abc:</source>
          <target state="translated">\:abc:</target>
        </trans-unit>
        <trans-unit id="06fcc1368ba729df7b1dd45bddcbe5bfcfed511d" translate="yes" xml:space="preserve">
          <source>\:abcd:</source>
          <target state="translated">\:abcd:</target>
        </trans-unit>
        <trans-unit id="897745edd2f35f117be4ac8e8927668c74a4bf23" translate="yes" xml:space="preserve">
          <source>\:accept:</source>
          <target state="translated">\:accept:</target>
        </trans-unit>
        <trans-unit id="a7c6f0363b57fa69b1404b3a64f70c46b68a96e1" translate="yes" xml:space="preserve">
          <source>\:aerial_tramway:</source>
          <target state="translated">\:aerial_tramway:</target>
        </trans-unit>
        <trans-unit id="d6e282198ea6fc6d14a452f54562f9039fe5c632" translate="yes" xml:space="preserve">
          <source>\:airplane:</source>
          <target state="translated">\:airplane:</target>
        </trans-unit>
        <trans-unit id="4742d4fcf02027d38977477be1ea129391060c7b" translate="yes" xml:space="preserve">
          <source>\:alarm_clock:</source>
          <target state="translated">\:alarm_clock:</target>
        </trans-unit>
        <trans-unit id="b9106d98c9e6f148dea1bc5f0d0e2637fecc4f01" translate="yes" xml:space="preserve">
          <source>\:alien:</source>
          <target state="translated">\:alien:</target>
        </trans-unit>
        <trans-unit id="465acd14d1b878bbb5bc7cbb6f6379d1a64b42a3" translate="yes" xml:space="preserve">
          <source>\:ambulance:</source>
          <target state="translated">\:ambulance:</target>
        </trans-unit>
        <trans-unit id="ecc81069e165094bd92ebdeb19f4ff11e1e1fea0" translate="yes" xml:space="preserve">
          <source>\:anchor:</source>
          <target state="translated">\:anchor:</target>
        </trans-unit>
        <trans-unit id="a17c0ed6923a46686bb723b71bfb598646966379" translate="yes" xml:space="preserve">
          <source>\:angel:</source>
          <target state="translated">\:angel:</target>
        </trans-unit>
        <trans-unit id="91e16b740dc786abef7dd112d243ef891aa232d9" translate="yes" xml:space="preserve">
          <source>\:anger:</source>
          <target state="translated">\:anger:</target>
        </trans-unit>
        <trans-unit id="ba42be644a23dad29f524e1209c856fe9e7d20cf" translate="yes" xml:space="preserve">
          <source>\:angry:</source>
          <target state="translated">\:angry:</target>
        </trans-unit>
        <trans-unit id="42e2cd5dfd596ab5db1e024b35e386e2e2b49a82" translate="yes" xml:space="preserve">
          <source>\:anguished:</source>
          <target state="translated">\:anguished:</target>
        </trans-unit>
        <trans-unit id="c09512e256aad16fa471ab20fb66ce91a87e0858" translate="yes" xml:space="preserve">
          <source>\:ant:</source>
          <target state="translated">\:ant:</target>
        </trans-unit>
        <trans-unit id="b8e989820739e8bed885c3ee73871f53e1047f8f" translate="yes" xml:space="preserve">
          <source>\:apple:</source>
          <target state="translated">\:apple:</target>
        </trans-unit>
        <trans-unit id="5d4aff4545ea93d5ab7617ae5a6c4410f9530721" translate="yes" xml:space="preserve">
          <source>\:arrow_double_down:</source>
          <target state="translated">\:arrow_double_down:</target>
        </trans-unit>
        <trans-unit id="2c6437a87ec16150d50ed43e011df1617a29b699" translate="yes" xml:space="preserve">
          <source>\:arrow_double_up:</source>
          <target state="translated">\:arrow_double_up:</target>
        </trans-unit>
        <trans-unit id="622fb3188cbc77dcf0406cdbbe59d7d320d1a821" translate="yes" xml:space="preserve">
          <source>\:arrow_down:</source>
          <target state="translated">\:arrow_down:</target>
        </trans-unit>
        <trans-unit id="7ccd6e47506c0edfc91a361deba3694c4abbd2ab" translate="yes" xml:space="preserve">
          <source>\:arrow_down_small:</source>
          <target state="translated">\:arrow_down_small:</target>
        </trans-unit>
        <trans-unit id="58427091281cc58a0870d92247d87bba1d4f45c5" translate="yes" xml:space="preserve">
          <source>\:arrow_heading_down:</source>
          <target state="translated">\:arrow_heading_down:</target>
        </trans-unit>
        <trans-unit id="db4af64358e09cbbfd78a9c0e07b5649b2969f6a" translate="yes" xml:space="preserve">
          <source>\:arrow_heading_up:</source>
          <target state="translated">\:arrow_heading_up:</target>
        </trans-unit>
        <trans-unit id="6cd09f162aabf62506bcf47da1e2dd795fba514f" translate="yes" xml:space="preserve">
          <source>\:arrow_left:</source>
          <target state="translated">\:arrow_left:</target>
        </trans-unit>
        <trans-unit id="029efa19ad65054f78041ef0ab1986caa55f0a8f" translate="yes" xml:space="preserve">
          <source>\:arrow_right:</source>
          <target state="translated">\:arrow_right:</target>
        </trans-unit>
        <trans-unit id="a50aee4371aed8411b12b2c86a3d096f0add1f0a" translate="yes" xml:space="preserve">
          <source>\:arrow_up:</source>
          <target state="translated">\:arrow_up:</target>
        </trans-unit>
        <trans-unit id="ff525911412bcb2907803ac06c75d82c5b4ff597" translate="yes" xml:space="preserve">
          <source>\:arrow_up_small:</source>
          <target state="translated">\:arrow_up_small:</target>
        </trans-unit>
        <trans-unit id="d87aac00aa0e4b5361e85865a1c5a805ab6ae7d3" translate="yes" xml:space="preserve">
          <source>\:arrows_clockwise:</source>
          <target state="translated">\:arrows_clockwise:</target>
        </trans-unit>
        <trans-unit id="31ab82fa664be73335a42c002b198e517a8ff562" translate="yes" xml:space="preserve">
          <source>\:arrows_counterclockwise:</source>
          <target state="translated">\:arrows_counterclockwise:</target>
        </trans-unit>
        <trans-unit id="64f7bf6d53f6e32ea11bfd7f83b4d7a3154a23a4" translate="yes" xml:space="preserve">
          <source>\:art:</source>
          <target state="translated">\:art:</target>
        </trans-unit>
        <trans-unit id="01023fa1e472f00ebed742f18e78bc70de91f29a" translate="yes" xml:space="preserve">
          <source>\:articulated_lorry:</source>
          <target state="translated">\:articulated_lorry:</target>
        </trans-unit>
        <trans-unit id="aba4fc03b3ec950610688f5d8e84c122ff714e51" translate="yes" xml:space="preserve">
          <source>\:astonished:</source>
          <target state="translated">\:astonished:</target>
        </trans-unit>
        <trans-unit id="d10aae7a1f58e9e6ea766b23562c710dd1ecfd7d" translate="yes" xml:space="preserve">
          <source>\:athletic_shoe:</source>
          <target state="translated">\:athletic_shoe:</target>
        </trans-unit>
        <trans-unit id="7a8f6ac1fb6de318ab2f30c0cb0cff3986b935f1" translate="yes" xml:space="preserve">
          <source>\:atm:</source>
          <target state="translated">\:atm:</target>
        </trans-unit>
        <trans-unit id="e4102b75192b3b25b4b2401036e2755477e569df" translate="yes" xml:space="preserve">
          <source>\:b:</source>
          <target state="translated">\:b:</target>
        </trans-unit>
        <trans-unit id="ab5ac627fdff2cb25d697a44a12d85e6db922218" translate="yes" xml:space="preserve">
          <source>\:baby:</source>
          <target state="translated">\:baby:</target>
        </trans-unit>
        <trans-unit id="9d4fb89796a2777f46797e2c6ab68afa1427226d" translate="yes" xml:space="preserve">
          <source>\:baby_bottle:</source>
          <target state="translated">\:baby_bottle:</target>
        </trans-unit>
        <trans-unit id="d010ec78859c2ca99e025b26cea21b14e33a7900" translate="yes" xml:space="preserve">
          <source>\:baby_chick:</source>
          <target state="translated">\:baby_chick:</target>
        </trans-unit>
        <trans-unit id="09df6582e602512b14ab929b38515ca66e42be79" translate="yes" xml:space="preserve">
          <source>\:baby_symbol:</source>
          <target state="translated">\:baby_symbol:</target>
        </trans-unit>
        <trans-unit id="5df21ba646a8c814d5235aada423405fa74cb50f" translate="yes" xml:space="preserve">
          <source>\:back:</source>
          <target state="translated">\:back:</target>
        </trans-unit>
        <trans-unit id="3d2798f10aac399b833e56efe30b640f72a3556d" translate="yes" xml:space="preserve">
          <source>\:baggage_claim:</source>
          <target state="translated">\:baggage_claim:</target>
        </trans-unit>
        <trans-unit id="cecc206e4d80c1b3e2ab48aa76d5bfc31ff6d0ee" translate="yes" xml:space="preserve">
          <source>\:balloon:</source>
          <target state="translated">\:balloon:</target>
        </trans-unit>
        <trans-unit id="4199cd1e321f3ab1be6522ea6a0b675de67786cd" translate="yes" xml:space="preserve">
          <source>\:ballot_box_with_check:</source>
          <target state="translated">\:ballot_box_with_check:</target>
        </trans-unit>
        <trans-unit id="5d0b3797c7ba31baf2e0749c5d4a4f8ba56bf535" translate="yes" xml:space="preserve">
          <source>\:bamboo:</source>
          <target state="translated">\:bamboo:</target>
        </trans-unit>
        <trans-unit id="d11a6161828f2006e3d052b1adaaa17f606ee989" translate="yes" xml:space="preserve">
          <source>\:banana:</source>
          <target state="translated">\:banana:</target>
        </trans-unit>
        <trans-unit id="d9e595a27732957689ec9b34c1bb3d5dee7fe43c" translate="yes" xml:space="preserve">
          <source>\:bangbang:</source>
          <target state="translated">\:bangbang:</target>
        </trans-unit>
        <trans-unit id="3bb03c94a50b8f9a2294ee0d81b367aa2e825378" translate="yes" xml:space="preserve">
          <source>\:bank:</source>
          <target state="translated">\:bank:</target>
        </trans-unit>
        <trans-unit id="1e4410a56e42d963bfa2389e8187e2058d5a9b6f" translate="yes" xml:space="preserve">
          <source>\:bar_chart:</source>
          <target state="translated">\:bar_chart:</target>
        </trans-unit>
        <trans-unit id="42b83acdd61aec84b4023d5d1462556019f47da0" translate="yes" xml:space="preserve">
          <source>\:barber:</source>
          <target state="translated">\:barber:</target>
        </trans-unit>
        <trans-unit id="8e90d96fb37fe316a951852c3cc3adae8eff65ca" translate="yes" xml:space="preserve">
          <source>\:baseball:</source>
          <target state="translated">\:baseball:</target>
        </trans-unit>
        <trans-unit id="24fc5902a188c38e7efe5373b666a7e0ed2d17ec" translate="yes" xml:space="preserve">
          <source>\:basketball:</source>
          <target state="translated">\:basketball:</target>
        </trans-unit>
        <trans-unit id="6516bcba7024f76199acaa52f93dabe7de0c3521" translate="yes" xml:space="preserve">
          <source>\:bath:</source>
          <target state="translated">\:bath:</target>
        </trans-unit>
        <trans-unit id="d9bf42df05db447416c881c25adc3bb7e92ff193" translate="yes" xml:space="preserve">
          <source>\:bathtub:</source>
          <target state="translated">\:bathtub:</target>
        </trans-unit>
        <trans-unit id="0764d9168dc86c10755f31a62b4e1fbfff2bc957" translate="yes" xml:space="preserve">
          <source>\:battery:</source>
          <target state="translated">\:battery:</target>
        </trans-unit>
        <trans-unit id="1ae619dbbe5a156007f4353dcf0b21ee74031169" translate="yes" xml:space="preserve">
          <source>\:bear:</source>
          <target state="translated">\:bear:</target>
        </trans-unit>
        <trans-unit id="cbd2d7da879ceb97380740ad17ac3fa1d4659910" translate="yes" xml:space="preserve">
          <source>\:bee:</source>
          <target state="translated">\:bee:</target>
        </trans-unit>
        <trans-unit id="7730b8dbf405b6dc525134e6ef15bddc34b74ba0" translate="yes" xml:space="preserve">
          <source>\:beer:</source>
          <target state="translated">\:beer:</target>
        </trans-unit>
        <trans-unit id="2059778557562af988942b1d82227e4db48bd2e8" translate="yes" xml:space="preserve">
          <source>\:beers:</source>
          <target state="translated">\:beers:</target>
        </trans-unit>
        <trans-unit id="f133e91914fba621435d5708c21214b2486852b9" translate="yes" xml:space="preserve">
          <source>\:beetle:</source>
          <target state="translated">\:beetle:</target>
        </trans-unit>
        <trans-unit id="89922ca4b55877f00201f11118edae89680c7dcd" translate="yes" xml:space="preserve">
          <source>\:beginner:</source>
          <target state="translated">\:beginner:</target>
        </trans-unit>
        <trans-unit id="92fffa11964dfbcd06be0baf0273460988e09fde" translate="yes" xml:space="preserve">
          <source>\:bell:</source>
          <target state="translated">\:bell:</target>
        </trans-unit>
        <trans-unit id="4ad4176546e9a9275198c4baae37930e18a9312e" translate="yes" xml:space="preserve">
          <source>\:bento:</source>
          <target state="translated">\:bento:</target>
        </trans-unit>
        <trans-unit id="66c33ece884eb16cbee78356e2077b985aa67765" translate="yes" xml:space="preserve">
          <source>\:bicyclist:</source>
          <target state="translated">\:bicyclist:</target>
        </trans-unit>
        <trans-unit id="7b45e3c06d2f1da9e68a6af916498355b961076f" translate="yes" xml:space="preserve">
          <source>\:bike:</source>
          <target state="translated">\:bike:</target>
        </trans-unit>
        <trans-unit id="d98c194c90e64d31376a0fc97e1df1549772bddd" translate="yes" xml:space="preserve">
          <source>\:bikini:</source>
          <target state="translated">\:bikini:</target>
        </trans-unit>
        <trans-unit id="2552a9f774e659d536071d0b778cb74f12f6edda" translate="yes" xml:space="preserve">
          <source>\:bird:</source>
          <target state="translated">\:bird:</target>
        </trans-unit>
        <trans-unit id="9afad294f5e8c08185c013cb984a63a477319f59" translate="yes" xml:space="preserve">
          <source>\:birthday:</source>
          <target state="translated">\:birthday:</target>
        </trans-unit>
        <trans-unit id="c4d3a9b4eaefd3cbec5fd68111eefed1e334135d" translate="yes" xml:space="preserve">
          <source>\:black_joker:</source>
          <target state="translated">\:black_joker:</target>
        </trans-unit>
        <trans-unit id="061f3ba508039fd9d7ad248b3d1a0e18a0a8db7c" translate="yes" xml:space="preserve">
          <source>\:black_nib:</source>
          <target state="translated">\:black_nib:</target>
        </trans-unit>
        <trans-unit id="b2258ed2f37a23858af129cd56421add469b1aee" translate="yes" xml:space="preserve">
          <source>\:black_square_button:</source>
          <target state="translated">\:black_square_button:</target>
        </trans-unit>
        <trans-unit id="0c2dae2f9b957347a3e8a3d58fc66adc09070687" translate="yes" xml:space="preserve">
          <source>\:blossom:</source>
          <target state="translated">\:blossom:</target>
        </trans-unit>
        <trans-unit id="7d4a6dbd607e8908444532087e30b152a1c8175b" translate="yes" xml:space="preserve">
          <source>\:blowfish:</source>
          <target state="translated">\:blowfish:</target>
        </trans-unit>
        <trans-unit id="3490f851ecfaa4f251e4562cd19bd0803cacb00e" translate="yes" xml:space="preserve">
          <source>\:blue_book:</source>
          <target state="translated">\:blue_book:</target>
        </trans-unit>
        <trans-unit id="bb3afffd8470160efedf54a6588a88d71c1d1a7b" translate="yes" xml:space="preserve">
          <source>\:blue_car:</source>
          <target state="translated">\:blue_car:</target>
        </trans-unit>
        <trans-unit id="25d1442dd04cdca1e685558156eaa54c74bbc879" translate="yes" xml:space="preserve">
          <source>\:blue_heart:</source>
          <target state="translated">\:blue_heart:</target>
        </trans-unit>
        <trans-unit id="82a906b1778e8b0418d9af79c9c483d630420308" translate="yes" xml:space="preserve">
          <source>\:blush:</source>
          <target state="translated">\:blush:</target>
        </trans-unit>
        <trans-unit id="42d166f35790bd6389c4b44548d149a7f1fcdb85" translate="yes" xml:space="preserve">
          <source>\:boar:</source>
          <target state="translated">\:boar:</target>
        </trans-unit>
        <trans-unit id="2b19e6b34cfbdb3124bc8d0240a31d6dd4b062c5" translate="yes" xml:space="preserve">
          <source>\:boat:</source>
          <target state="translated">\:boat:</target>
        </trans-unit>
        <trans-unit id="8590e6a1a42f2b98222f933092ccc7c6023aa363" translate="yes" xml:space="preserve">
          <source>\:bomb:</source>
          <target state="translated">\:bomb:</target>
        </trans-unit>
        <trans-unit id="970d8d3a4fdd5aa9227f9f128f9dea9b092d5b5f" translate="yes" xml:space="preserve">
          <source>\:book:</source>
          <target state="translated">\:book:</target>
        </trans-unit>
        <trans-unit id="a173ff6b6b32a37b87ecca0c64d3a836d68eb516" translate="yes" xml:space="preserve">
          <source>\:bookmark:</source>
          <target state="translated">\:bookmark:</target>
        </trans-unit>
        <trans-unit id="3d519573a0662853bf92a77281e282c0a7e13d70" translate="yes" xml:space="preserve">
          <source>\:bookmark_tabs:</source>
          <target state="translated">\:bookmark_tabs:</target>
        </trans-unit>
        <trans-unit id="62d05f3ed561f3cb7114a826730ffc4258546dd0" translate="yes" xml:space="preserve">
          <source>\:books:</source>
          <target state="translated">\:books:</target>
        </trans-unit>
        <trans-unit id="ad3d774cdc66ee390a39fe571f75485ab4665914" translate="yes" xml:space="preserve">
          <source>\:boom:</source>
          <target state="translated">\:boom:</target>
        </trans-unit>
        <trans-unit id="3879514154f077b60d19362abb7c4e91ea7dc591" translate="yes" xml:space="preserve">
          <source>\:boot:</source>
          <target state="translated">\:boot:</target>
        </trans-unit>
        <trans-unit id="91204e4f6276832e4a953854b072ed696505e25f" translate="yes" xml:space="preserve">
          <source>\:bouquet:</source>
          <target state="translated">\:bouquet:</target>
        </trans-unit>
        <trans-unit id="c8be62d34f03816a417065a229daeb5da3cae06d" translate="yes" xml:space="preserve">
          <source>\:bow:</source>
          <target state="translated">\:bow:</target>
        </trans-unit>
        <trans-unit id="6263825346f295aa99461b59676a511a0252b64b" translate="yes" xml:space="preserve">
          <source>\:bowling:</source>
          <target state="translated">\:bowling:</target>
        </trans-unit>
        <trans-unit id="8bbccc68bff7d5dfb245a413b43fbcf32519f2a8" translate="yes" xml:space="preserve">
          <source>\:boy:</source>
          <target state="translated">\:boy:</target>
        </trans-unit>
        <trans-unit id="272e3d887cd2efd548e12a2a195d5445bcc337c9" translate="yes" xml:space="preserve">
          <source>\:bread:</source>
          <target state="translated">\:bread:</target>
        </trans-unit>
        <trans-unit id="86d6ee0cf6d788a1a253bc8069c6e0782b440662" translate="yes" xml:space="preserve">
          <source>\:bride_with_veil:</source>
          <target state="translated">\:bride_with_veil:</target>
        </trans-unit>
        <trans-unit id="8977b37e2f9f78ad5fd352469ec01ebca11a72e5" translate="yes" xml:space="preserve">
          <source>\:bridge_at_night:</source>
          <target state="translated">\:bridge_at_night:</target>
        </trans-unit>
        <trans-unit id="b69c7466c99448b76af9196fa98455462dd997f4" translate="yes" xml:space="preserve">
          <source>\:briefcase:</source>
          <target state="translated">\:briefcase:</target>
        </trans-unit>
        <trans-unit id="1d4aef8e2d826b9d9a20a959c9e3e7c083369407" translate="yes" xml:space="preserve">
          <source>\:broken_heart:</source>
          <target state="translated">\:broken_heart:</target>
        </trans-unit>
        <trans-unit id="4e08bdb51eef2fdf8195b46b4b8a64a4d5523568" translate="yes" xml:space="preserve">
          <source>\:bug:</source>
          <target state="translated">\:bug:</target>
        </trans-unit>
        <trans-unit id="e8bc29df5cca9498c76eb46ac437dd5eba730bba" translate="yes" xml:space="preserve">
          <source>\:bulb:</source>
          <target state="translated">\:bulb:</target>
        </trans-unit>
        <trans-unit id="b1493ae042dd87073780ca9a3d8bd5ca3ff7f06a" translate="yes" xml:space="preserve">
          <source>\:bullettrain_front:</source>
          <target state="translated">\:bullettrain_front:</target>
        </trans-unit>
        <trans-unit id="616a378a9b1c951df7782861ce06a97afaec4d6c" translate="yes" xml:space="preserve">
          <source>\:bullettrain_side:</source>
          <target state="translated">\:bullettrain_side:</target>
        </trans-unit>
        <trans-unit id="a4e9808a17a429c6b73c22ed790950f52801be8d" translate="yes" xml:space="preserve">
          <source>\:bus:</source>
          <target state="translated">\:bus:</target>
        </trans-unit>
        <trans-unit id="e30a14372184bbc52d5a7cd8cbbe8a4a1f10e23d" translate="yes" xml:space="preserve">
          <source>\:busstop:</source>
          <target state="translated">\:busstop:</target>
        </trans-unit>
        <trans-unit id="19b0242e1c3b01344acbdf4fc3f3902d5f522d6a" translate="yes" xml:space="preserve">
          <source>\:bust_in_silhouette:</source>
          <target state="translated">\:bust_in_silhouette:</target>
        </trans-unit>
        <trans-unit id="eaf0e2984c653e00f1740952845caa79b76beb68" translate="yes" xml:space="preserve">
          <source>\:busts_in_silhouette:</source>
          <target state="translated">\:busts_in_silhouette:</target>
        </trans-unit>
        <trans-unit id="4de9a96892ae20904c12f6fc62dcc760234f1848" translate="yes" xml:space="preserve">
          <source>\:cactus:</source>
          <target state="translated">\:cactus:</target>
        </trans-unit>
        <trans-unit id="804920ea73fb042b9e4b4637b553dab9046683bb" translate="yes" xml:space="preserve">
          <source>\:cake:</source>
          <target state="translated">\:cake:</target>
        </trans-unit>
        <trans-unit id="e14a6944c4c058ded6a348a993afcd9519291ba9" translate="yes" xml:space="preserve">
          <source>\:calendar:</source>
          <target state="translated">\:calendar:</target>
        </trans-unit>
        <trans-unit id="33c0e3dff3361506872cf8789c5ac3b5dbf741d0" translate="yes" xml:space="preserve">
          <source>\:calling:</source>
          <target state="translated">\:calling:</target>
        </trans-unit>
        <trans-unit id="ad24535a1d32a594471fc14ebe91a3c3d6352a2e" translate="yes" xml:space="preserve">
          <source>\:camel:</source>
          <target state="translated">\:camel:</target>
        </trans-unit>
        <trans-unit id="11cf7a36cba684fee5c34c419336074d9db220cd" translate="yes" xml:space="preserve">
          <source>\:camera:</source>
          <target state="translated">\:camera:</target>
        </trans-unit>
        <trans-unit id="d3a930fcdf4c81c50c6f00cf232c86b8268da70c" translate="yes" xml:space="preserve">
          <source>\:candy:</source>
          <target state="translated">\:candy:</target>
        </trans-unit>
        <trans-unit id="c69da1a9b8445e81cbc8f931c2c421769eea9d73" translate="yes" xml:space="preserve">
          <source>\:capital_abcd:</source>
          <target state="translated">\:capital_abcd:</target>
        </trans-unit>
        <trans-unit id="ba2c4dc425438792799e013ffb513e81da66428b" translate="yes" xml:space="preserve">
          <source>\:car:</source>
          <target state="translated">\:car:</target>
        </trans-unit>
        <trans-unit id="d3271c01a5dc6ec121cb9996c5caae7caacbe3f7" translate="yes" xml:space="preserve">
          <source>\:card_index:</source>
          <target state="translated">\:card_index:</target>
        </trans-unit>
        <trans-unit id="45b18e8532d195296dca46bd464c58e3dcfc9e30" translate="yes" xml:space="preserve">
          <source>\:carousel_horse:</source>
          <target state="translated">\:carousel_horse:</target>
        </trans-unit>
        <trans-unit id="76d2e8da1e4a4a21caa389964fa1bd8107b73bfe" translate="yes" xml:space="preserve">
          <source>\:cat2:</source>
          <target state="translated">\:cat2:</target>
        </trans-unit>
        <trans-unit id="5c2065b86b84530c8210be062bcba6e6a3b7e6da" translate="yes" xml:space="preserve">
          <source>\:cat:</source>
          <target state="translated">\:cat:</target>
        </trans-unit>
        <trans-unit id="f4a99889a998bf98fe4aaeb53f1422ac1a4f6ba6" translate="yes" xml:space="preserve">
          <source>\:cd:</source>
          <target state="translated">\:cd:</target>
        </trans-unit>
        <trans-unit id="b4c2bd16ee5b1f1cb87e0e5a6b3389d3e783dbca" translate="yes" xml:space="preserve">
          <source>\:chart:</source>
          <target state="translated">\:chart:</target>
        </trans-unit>
        <trans-unit id="327891e0f62b916ea70df23c9591512503f98d53" translate="yes" xml:space="preserve">
          <source>\:chart_with_downwards_trend:</source>
          <target state="translated">\:chart_with_downwards_trend:</target>
        </trans-unit>
        <trans-unit id="a0d10c9441286bdb39b2aaa95431e49fee31a184" translate="yes" xml:space="preserve">
          <source>\:chart_with_upwards_trend:</source>
          <target state="translated">\:chart_with_upwards_trend:</target>
        </trans-unit>
        <trans-unit id="ece72c3d59793710d32e596e928cee3fc1329324" translate="yes" xml:space="preserve">
          <source>\:checkered_flag:</source>
          <target state="translated">\:checkered_flag:</target>
        </trans-unit>
        <trans-unit id="efa9474e0b8f39b1881fc54935218b4331e451c1" translate="yes" xml:space="preserve">
          <source>\:cherries:</source>
          <target state="translated">\:cherries:</target>
        </trans-unit>
        <trans-unit id="3efe664d4dea4441a603d07026ae945f9d2c66cd" translate="yes" xml:space="preserve">
          <source>\:cherry_blossom:</source>
          <target state="translated">\:cherry_blossom:</target>
        </trans-unit>
        <trans-unit id="bef5b1a8fe633b79f95b2cf4cda2a806f62203a6" translate="yes" xml:space="preserve">
          <source>\:chestnut:</source>
          <target state="translated">\:chestnut:</target>
        </trans-unit>
        <trans-unit id="8ba3cfb2a11087e59f8888ab22c473d13b20e5ed" translate="yes" xml:space="preserve">
          <source>\:chicken:</source>
          <target state="translated">\:chicken:</target>
        </trans-unit>
        <trans-unit id="5afe9cd04be13fa9b25c4f3bd2e42f5b7e3f5b5a" translate="yes" xml:space="preserve">
          <source>\:children_crossing:</source>
          <target state="translated">\:children_crossing:</target>
        </trans-unit>
        <trans-unit id="d51b02aa5143f15d7da7299a05b567d5decf8435" translate="yes" xml:space="preserve">
          <source>\:chocolate_bar:</source>
          <target state="translated">\:chocolate_bar:</target>
        </trans-unit>
        <trans-unit id="ae6f17cbd30e71f8d0c3f60de4cb529343d1f0cd" translate="yes" xml:space="preserve">
          <source>\:christmas_tree:</source>
          <target state="translated">\:christmas_tree:</target>
        </trans-unit>
        <trans-unit id="00cbedbeecde20b181128a57d622eedd0b6a0eea" translate="yes" xml:space="preserve">
          <source>\:church:</source>
          <target state="translated">\:church:</target>
        </trans-unit>
        <trans-unit id="949b17cf645cb7661a6a9a7c6a28034736baa239" translate="yes" xml:space="preserve">
          <source>\:cinema:</source>
          <target state="translated">\:cinema:</target>
        </trans-unit>
        <trans-unit id="b8c8ef3216b0263eda948f7d1606fe83423d2172" translate="yes" xml:space="preserve">
          <source>\:circus_tent:</source>
          <target state="translated">\:circus_tent:</target>
        </trans-unit>
        <trans-unit id="08c6dd2e30e8213b17b6b9a30e42e79da329356e" translate="yes" xml:space="preserve">
          <source>\:city_sunrise:</source>
          <target state="translated">\:city_sunrise:</target>
        </trans-unit>
        <trans-unit id="016020845fd7997dc7231baf5939ea599a8cce35" translate="yes" xml:space="preserve">
          <source>\:city_sunset:</source>
          <target state="translated">\:city_sunset:</target>
        </trans-unit>
        <trans-unit id="0d027291920d722cf1c5b6644aebc5b553faa332" translate="yes" xml:space="preserve">
          <source>\:cl:</source>
          <target state="translated">\:cl:</target>
        </trans-unit>
        <trans-unit id="79ccfb9176f2f11147d70ca12488703e288830ce" translate="yes" xml:space="preserve">
          <source>\:clap:</source>
          <target state="translated">\:clap:</target>
        </trans-unit>
        <trans-unit id="8ac74f199fb3f9a3e2c55edd40ec4877b284555f" translate="yes" xml:space="preserve">
          <source>\:clapper:</source>
          <target state="translated">\:clapper:</target>
        </trans-unit>
        <trans-unit id="876e3689943b957c820a27121b361be1dd903fb9" translate="yes" xml:space="preserve">
          <source>\:clipboard:</source>
          <target state="translated">\:clipboard:</target>
        </trans-unit>
        <trans-unit id="744ed42b56d57b190999f12a2a43146e5f293808" translate="yes" xml:space="preserve">
          <source>\:clock1030:</source>
          <target state="translated">\:clock1030:</target>
        </trans-unit>
        <trans-unit id="435ea5e680721a3247998e4b510e392229e0119f" translate="yes" xml:space="preserve">
          <source>\:clock10:</source>
          <target state="translated">\:clock10:</target>
        </trans-unit>
        <trans-unit id="4f69d805697ab303839e31961a9c187a016bfce0" translate="yes" xml:space="preserve">
          <source>\:clock1130:</source>
          <target state="translated">\:clock1130:</target>
        </trans-unit>
        <trans-unit id="952a864afce948aaea217010227a97438ca7e276" translate="yes" xml:space="preserve">
          <source>\:clock11:</source>
          <target state="translated">\:clock11:</target>
        </trans-unit>
        <trans-unit id="ed60bee35ba5dec27cd13c56d7c882c13d69007a" translate="yes" xml:space="preserve">
          <source>\:clock1230:</source>
          <target state="translated">\:clock1230:</target>
        </trans-unit>
        <trans-unit id="cc6adfa2c6ac16a8cd9dd7f560a0f9462bffd14d" translate="yes" xml:space="preserve">
          <source>\:clock12:</source>
          <target state="translated">\:clock12:</target>
        </trans-unit>
        <trans-unit id="63441d5efb9f24676af5d8ffc2acbe4db2b78441" translate="yes" xml:space="preserve">
          <source>\:clock130:</source>
          <target state="translated">\:clock130:</target>
        </trans-unit>
        <trans-unit id="3d143639e3520cb5fb6c73d981cd76ed8d3d1cb0" translate="yes" xml:space="preserve">
          <source>\:clock1:</source>
          <target state="translated">\:clock1:</target>
        </trans-unit>
        <trans-unit id="0e2251e26f29b0845946a723411149eb25223f7c" translate="yes" xml:space="preserve">
          <source>\:clock230:</source>
          <target state="translated">\:clock230:</target>
        </trans-unit>
        <trans-unit id="959961ac716dab98a87da53cbeb025f08f65ee79" translate="yes" xml:space="preserve">
          <source>\:clock2:</source>
          <target state="translated">\:clock2:</target>
        </trans-unit>
        <trans-unit id="cd584ce39e373efaf2660e564d5f3cd7c5065d9f" translate="yes" xml:space="preserve">
          <source>\:clock330:</source>
          <target state="translated">\:clock330:</target>
        </trans-unit>
        <trans-unit id="bb8744f28b5b86ba6bc42e9d8ba327aecacea9c3" translate="yes" xml:space="preserve">
          <source>\:clock3:</source>
          <target state="translated">\:clock3:</target>
        </trans-unit>
        <trans-unit id="b9dd2bf4f00e61bf73e3ca0e6f2969c9b7ba4ac4" translate="yes" xml:space="preserve">
          <source>\:clock430:</source>
          <target state="translated">\:clock430:</target>
        </trans-unit>
        <trans-unit id="9531eb956b2a8a1bdc0dfc12f457f543d1b98fad" translate="yes" xml:space="preserve">
          <source>\:clock4:</source>
          <target state="translated">\:clock4:</target>
        </trans-unit>
        <trans-unit id="2849116ff28325b0bb3627954dcc7dec952bf8bd" translate="yes" xml:space="preserve">
          <source>\:clock530:</source>
          <target state="translated">\:clock530:</target>
        </trans-unit>
        <trans-unit id="ad8c1f67bae2a02dbb567e041b219f650047c22b" translate="yes" xml:space="preserve">
          <source>\:clock5:</source>
          <target state="translated">\:clock5:</target>
        </trans-unit>
        <trans-unit id="ae3a58504e2fa8889a89a0e053e7fc92792f5e49" translate="yes" xml:space="preserve">
          <source>\:clock630:</source>
          <target state="translated">\:clock630:</target>
        </trans-unit>
        <trans-unit id="756826e14582dca4a14bdfb211f54fec9b88ba1c" translate="yes" xml:space="preserve">
          <source>\:clock6:</source>
          <target state="translated">\:clock6:</target>
        </trans-unit>
        <trans-unit id="f442453ee237ad672534c07a866e44aadbda45e1" translate="yes" xml:space="preserve">
          <source>\:clock730:</source>
          <target state="translated">\:clock730:</target>
        </trans-unit>
        <trans-unit id="1e5700327cd19762fbabeb98183265b66afa634b" translate="yes" xml:space="preserve">
          <source>\:clock7:</source>
          <target state="translated">\:clock7:</target>
        </trans-unit>
        <trans-unit id="b19a562207fc617a4f662dbece9af64dd39ad40e" translate="yes" xml:space="preserve">
          <source>\:clock830:</source>
          <target state="translated">\:clock830:</target>
        </trans-unit>
        <trans-unit id="ddb821b6c6141af68ce6bc4ca8b32ce58108b5bd" translate="yes" xml:space="preserve">
          <source>\:clock8:</source>
          <target state="translated">\:clock8:</target>
        </trans-unit>
        <trans-unit id="367c43d3996675c66df5314d167ad24986ebeab8" translate="yes" xml:space="preserve">
          <source>\:clock930:</source>
          <target state="translated">\:clock930:</target>
        </trans-unit>
        <trans-unit id="8f9acc13159133cd5b9e08035533675276b1214b" translate="yes" xml:space="preserve">
          <source>\:clock9:</source>
          <target state="translated">\:clock9:</target>
        </trans-unit>
        <trans-unit id="e92d71a0adef480e954bf50ef24dcc60ab6c9954" translate="yes" xml:space="preserve">
          <source>\:closed_book:</source>
          <target state="translated">\:closed_book:</target>
        </trans-unit>
        <trans-unit id="e2e9409d8576371be67e1b091466e1324536b70c" translate="yes" xml:space="preserve">
          <source>\:closed_lock_with_key:</source>
          <target state="translated">\:closed_lock_with_key:</target>
        </trans-unit>
        <trans-unit id="5335cfdfcc7b6af2a496aa978d8ca253cfb4ee67" translate="yes" xml:space="preserve">
          <source>\:closed_umbrella:</source>
          <target state="translated">\:closed_umbrella:</target>
        </trans-unit>
        <trans-unit id="f2dbdb894f1aca874a85ca80b3700f9b7a5317b6" translate="yes" xml:space="preserve">
          <source>\:cloud:</source>
          <target state="translated">\:cloud:</target>
        </trans-unit>
        <trans-unit id="bb0df99b24d1bc93f0b3e26a67d7e92dbbd279bc" translate="yes" xml:space="preserve">
          <source>\:cocktail:</source>
          <target state="translated">\:cocktail:</target>
        </trans-unit>
        <trans-unit id="4a30e93f97af8e5aab2f2f2edede845d48a5f944" translate="yes" xml:space="preserve">
          <source>\:coffee:</source>
          <target state="translated">\:coffee:</target>
        </trans-unit>
        <trans-unit id="bebac1677ca37fc0b057d03f209f08f3a270a33b" translate="yes" xml:space="preserve">
          <source>\:cold_sweat:</source>
          <target state="translated">\:cold_sweat:</target>
        </trans-unit>
        <trans-unit id="7a9bab87bafe436374641127c9cd64e048f141d0" translate="yes" xml:space="preserve">
          <source>\:computer:</source>
          <target state="translated">\:computer:</target>
        </trans-unit>
        <trans-unit id="e1867aa8ddb75c011d622db24c5adbf7d9076832" translate="yes" xml:space="preserve">
          <source>\:confetti_ball:</source>
          <target state="translated">\:confetti_ball:</target>
        </trans-unit>
        <trans-unit id="62d40c2748c878a52bae54692ebd319eda8af4ca" translate="yes" xml:space="preserve">
          <source>\:confounded:</source>
          <target state="translated">\:confounded:</target>
        </trans-unit>
        <trans-unit id="2714a15411a00f9313125b6f0e86641488d1620a" translate="yes" xml:space="preserve">
          <source>\:confused:</source>
          <target state="translated">\:confused:</target>
        </trans-unit>
        <trans-unit id="5adf730be91ba2ae73f3645a5ada8a93b2c53c35" translate="yes" xml:space="preserve">
          <source>\:congratulations:</source>
          <target state="translated">\:congratulations:</target>
        </trans-unit>
        <trans-unit id="75e27a4aac67a711d8f609df96f640d36e0139d8" translate="yes" xml:space="preserve">
          <source>\:construction:</source>
          <target state="translated">\:construction:</target>
        </trans-unit>
        <trans-unit id="e6409f5ab3fac7d4270bd0258c3c576add3dcc3f" translate="yes" xml:space="preserve">
          <source>\:construction_worker:</source>
          <target state="translated">\:construction_worker:</target>
        </trans-unit>
        <trans-unit id="9794ebf7753be31f5ff1fe81ea24888d17c1a809" translate="yes" xml:space="preserve">
          <source>\:convenience_store:</source>
          <target state="translated">\:convenience_store:</target>
        </trans-unit>
        <trans-unit id="d4b4b052a2ad50f11cba76c00b6b9093d2fd9daa" translate="yes" xml:space="preserve">
          <source>\:cookie:</source>
          <target state="translated">\:cookie:</target>
        </trans-unit>
        <trans-unit id="91d39a35411cde7ab85bf802c4e9cce80eda4b87" translate="yes" xml:space="preserve">
          <source>\:cool:</source>
          <target state="translated">\:cool:</target>
        </trans-unit>
        <trans-unit id="c06bfa21ae4291ed9151914ced513cfef5ea9f9c" translate="yes" xml:space="preserve">
          <source>\:cop:</source>
          <target state="translated">\:cop:</target>
        </trans-unit>
        <trans-unit id="9244e215fb7575cc8e28f02f1845135e82da5dcf" translate="yes" xml:space="preserve">
          <source>\:corn:</source>
          <target state="translated">\:corn:</target>
        </trans-unit>
        <trans-unit id="b295d76b0beb0af143498cdc9e9328e0c78d476d" translate="yes" xml:space="preserve">
          <source>\:couple:</source>
          <target state="translated">\:couple:</target>
        </trans-unit>
        <trans-unit id="d39ef065b887bd2d13ba05d4eb95b0c32bcf7dca" translate="yes" xml:space="preserve">
          <source>\:couple_with_heart:</source>
          <target state="translated">\:couple_with_heart:</target>
        </trans-unit>
        <trans-unit id="d397db0e5a0d9686f03e8a79e4c036d6de88f361" translate="yes" xml:space="preserve">
          <source>\:couplekiss:</source>
          <target state="translated">\:couplekiss:</target>
        </trans-unit>
        <trans-unit id="0acb28380ae91098e33071cb9d102745a465f68b" translate="yes" xml:space="preserve">
          <source>\:cow2:</source>
          <target state="translated">\:cow2:</target>
        </trans-unit>
        <trans-unit id="ec88a6a443f6512ca0663e7680f021e2165590c3" translate="yes" xml:space="preserve">
          <source>\:cow:</source>
          <target state="translated">\:cow:</target>
        </trans-unit>
        <trans-unit id="767034451067943c3013a2ed1c06b729b8ae4509" translate="yes" xml:space="preserve">
          <source>\:credit_card:</source>
          <target state="translated">\:credit_card:</target>
        </trans-unit>
        <trans-unit id="e27537207e725d715b0b802682cdcfddeafcd9e3" translate="yes" xml:space="preserve">
          <source>\:crescent_moon:</source>
          <target state="translated">\:crescent_moon:</target>
        </trans-unit>
        <trans-unit id="4ac04ed7f3aac47dfb476f964da1458dea4c333a" translate="yes" xml:space="preserve">
          <source>\:crocodile:</source>
          <target state="translated">\:crocodile:</target>
        </trans-unit>
        <trans-unit id="404faf6aee7cb682e8fc697f4c2b945eaa732f54" translate="yes" xml:space="preserve">
          <source>\:crossed_flags:</source>
          <target state="translated">\:crossed_flags:</target>
        </trans-unit>
        <trans-unit id="4b1590a0aee056fad455e6f52e01369b2f3c0755" translate="yes" xml:space="preserve">
          <source>\:crown:</source>
          <target state="translated">\:crown:</target>
        </trans-unit>
        <trans-unit id="e3d209f1725877e7bf4712fdb87fbdaf861b880f" translate="yes" xml:space="preserve">
          <source>\:cry:</source>
          <target state="translated">\:cry:</target>
        </trans-unit>
        <trans-unit id="e7e3ebaa41104a5f63670e42dc09f50fe12b52c4" translate="yes" xml:space="preserve">
          <source>\:crying_cat_face:</source>
          <target state="translated">\:crying_cat_face:</target>
        </trans-unit>
        <trans-unit id="ea2205e04ff6734fab2c1d5c7348f17c96acd2a4" translate="yes" xml:space="preserve">
          <source>\:crystal_ball:</source>
          <target state="translated">\:crystal_ball:</target>
        </trans-unit>
        <trans-unit id="6298689b85b5483f6526e762d4f0409f96cdb710" translate="yes" xml:space="preserve">
          <source>\:cupid:</source>
          <target state="translated">\:cupid:</target>
        </trans-unit>
        <trans-unit id="a1bd8f679d0869072e418184d4b8f12c0444fa7b" translate="yes" xml:space="preserve">
          <source>\:curly_loop:</source>
          <target state="translated">\:curly_loop:</target>
        </trans-unit>
        <trans-unit id="f6e70f6e9e914a8d45564cb9bfe35ddf87abb048" translate="yes" xml:space="preserve">
          <source>\:currency_exchange:</source>
          <target state="translated">\:currency_exchange:</target>
        </trans-unit>
        <trans-unit id="8987fa8fdbb658e5056b34f8d7c2a06dcf7b100e" translate="yes" xml:space="preserve">
          <source>\:curry:</source>
          <target state="translated">\:curry:</target>
        </trans-unit>
        <trans-unit id="bdd61282c42f489e1387c0e31ed63a13e919783f" translate="yes" xml:space="preserve">
          <source>\:custard:</source>
          <target state="translated">\:custard:</target>
        </trans-unit>
        <trans-unit id="5b14ca39208fa1dab5bc777c3c55db01690f31eb" translate="yes" xml:space="preserve">
          <source>\:customs:</source>
          <target state="translated">\:customs:</target>
        </trans-unit>
        <trans-unit id="bb241231f43faa0f1c953a9749b424b5b6a845d8" translate="yes" xml:space="preserve">
          <source>\:cyclone:</source>
          <target state="translated">\:cyclone:</target>
        </trans-unit>
        <trans-unit id="7eefdc42e63a3a082765dfe6c2a6d87f835f0027" translate="yes" xml:space="preserve">
          <source>\:dancer:</source>
          <target state="translated">\:dancer:</target>
        </trans-unit>
        <trans-unit id="a2ffecb4690d13bb6d45329d061ce6a0ee5c605d" translate="yes" xml:space="preserve">
          <source>\:dancers:</source>
          <target state="translated">\:dancers:</target>
        </trans-unit>
        <trans-unit id="03600dc9aa3a5c8ebee1c4f7e4472404baca8eeb" translate="yes" xml:space="preserve">
          <source>\:dango:</source>
          <target state="translated">\:dango:</target>
        </trans-unit>
        <trans-unit id="4d3fb56abaebee7059f1129afa3f6c1bdffe61d9" translate="yes" xml:space="preserve">
          <source>\:dart:</source>
          <target state="translated">\:dart:</target>
        </trans-unit>
        <trans-unit id="8e6b7b0ee69309159fb8fa003d5580eeec491377" translate="yes" xml:space="preserve">
          <source>\:dash:</source>
          <target state="translated">\:dash:</target>
        </trans-unit>
        <trans-unit id="b800a41fcc4f9cf35ef55ed4b79e721c93d9ddb1" translate="yes" xml:space="preserve">
          <source>\:date:</source>
          <target state="translated">\:date:</target>
        </trans-unit>
        <trans-unit id="643b0ebfff2d297c07ff233de84ed9cb1c681693" translate="yes" xml:space="preserve">
          <source>\:deciduous_tree:</source>
          <target state="translated">\:deciduous_tree:</target>
        </trans-unit>
        <trans-unit id="b63cb7e512d56e698d0d07fd2ec6d397a34ba88d" translate="yes" xml:space="preserve">
          <source>\:department_store:</source>
          <target state="translated">\:department_store:</target>
        </trans-unit>
        <trans-unit id="9ba23c4464cd777d80899efcb17adb558780372b" translate="yes" xml:space="preserve">
          <source>\:diamond_shape_with_a_dot_inside:</source>
          <target state="translated">\:diamond_shape_with_a_dot_inside:</target>
        </trans-unit>
        <trans-unit id="6148e36f0aaba2457944b7921279e800a77318e5" translate="yes" xml:space="preserve">
          <source>\:disappointed:</source>
          <target state="translated">\:disappointed:</target>
        </trans-unit>
        <trans-unit id="1ac552d9778439cbd29ca541abaa32f62299a310" translate="yes" xml:space="preserve">
          <source>\:disappointed_relieved:</source>
          <target state="translated">\:disappointed_relieved:</target>
        </trans-unit>
        <trans-unit id="fb264230cde9cd68792fe328aad265e09dcf1a77" translate="yes" xml:space="preserve">
          <source>\:dizzy:</source>
          <target state="translated">\:dizzy:</target>
        </trans-unit>
        <trans-unit id="821f665e372508c6b8c69e5be501e485c595aead" translate="yes" xml:space="preserve">
          <source>\:dizzy_face:</source>
          <target state="translated">\:dizzy_face:</target>
        </trans-unit>
        <trans-unit id="764860e5d3d307b2aff89ef14e445a32e803beec" translate="yes" xml:space="preserve">
          <source>\:do_not_litter:</source>
          <target state="translated">\:do_not_litter:</target>
        </trans-unit>
        <trans-unit id="6f726947c6593155c8dc8ce2f3a58462b0607223" translate="yes" xml:space="preserve">
          <source>\:dog2:</source>
          <target state="translated">\:dog2:</target>
        </trans-unit>
        <trans-unit id="3374cbb709c7d6e8bf376a8f05325994110fde20" translate="yes" xml:space="preserve">
          <source>\:dog:</source>
          <target state="translated">\:dog:</target>
        </trans-unit>
        <trans-unit id="5cd2ff987dd63c867407aa215dd7653c862cbc0e" translate="yes" xml:space="preserve">
          <source>\:dollar:</source>
          <target state="translated">\:dollar:</target>
        </trans-unit>
        <trans-unit id="f3a1517b3b7668ac1095971b3172f9dcc4fff257" translate="yes" xml:space="preserve">
          <source>\:dolls:</source>
          <target state="translated">\:dolls:</target>
        </trans-unit>
        <trans-unit id="65e4bbc2ac31da523d6cf16d8730001ce34e4ecf" translate="yes" xml:space="preserve">
          <source>\:dolphin:</source>
          <target state="translated">\:dolphin:</target>
        </trans-unit>
        <trans-unit id="857282940e6936cc4a33f785b572a1aa7d9214b4" translate="yes" xml:space="preserve">
          <source>\:door:</source>
          <target state="translated">\:door:</target>
        </trans-unit>
        <trans-unit id="ae9bd8fc08335edc3ca71130aad0de4a41fa93ba" translate="yes" xml:space="preserve">
          <source>\:doughnut:</source>
          <target state="translated">\:doughnut:</target>
        </trans-unit>
        <trans-unit id="0aede83161185f05fb2b22ed1c040503b8a89dce" translate="yes" xml:space="preserve">
          <source>\:dragon:</source>
          <target state="translated">\:dragon:</target>
        </trans-unit>
        <trans-unit id="9e3ab55a027f0ee996efd59d0fbbcc012524914b" translate="yes" xml:space="preserve">
          <source>\:dragon_face:</source>
          <target state="translated">\:dragon_face:</target>
        </trans-unit>
        <trans-unit id="779b0b3212aa6cb1eb8c6270bf4ff17962dc62b3" translate="yes" xml:space="preserve">
          <source>\:dress:</source>
          <target state="translated">\:dress:</target>
        </trans-unit>
        <trans-unit id="51bc9477b437f4edfae4d5baded16fcec1173ff1" translate="yes" xml:space="preserve">
          <source>\:dromedary_camel:</source>
          <target state="translated">\:dromedary_camel:</target>
        </trans-unit>
        <trans-unit id="ddb855dfe102ba121b656ec6e6f388d30224991e" translate="yes" xml:space="preserve">
          <source>\:droplet:</source>
          <target state="translated">\:droplet:</target>
        </trans-unit>
        <trans-unit id="808e96a27b009dd71cdc5d0d17579dffad24171c" translate="yes" xml:space="preserve">
          <source>\:dvd:</source>
          <target state="translated">\:dvd:</target>
        </trans-unit>
        <trans-unit id="afc96c6cd14cfa77828de9a6695edecde86313c5" translate="yes" xml:space="preserve">
          <source>\:e-mail:</source>
          <target state="translated">\:e-mail:</target>
        </trans-unit>
        <trans-unit id="342b70334bbf5720445703775c579f7cca630a44" translate="yes" xml:space="preserve">
          <source>\:ear:</source>
          <target state="translated">\:ear:</target>
        </trans-unit>
        <trans-unit id="c8e215e17efdfe62d5180ca350c30dc2c3e681fe" translate="yes" xml:space="preserve">
          <source>\:ear_of_rice:</source>
          <target state="translated">\:ear_of_rice:</target>
        </trans-unit>
        <trans-unit id="8fe147b153746a63be25a328682e94ae978d1a7c" translate="yes" xml:space="preserve">
          <source>\:earth_africa:</source>
          <target state="translated">\:earth_africa:</target>
        </trans-unit>
        <trans-unit id="7872b354412ad6d0b26df4c9231e578224bde948" translate="yes" xml:space="preserve">
          <source>\:earth_americas:</source>
          <target state="translated">\:earth_americas:</target>
        </trans-unit>
        <trans-unit id="0f993bb7636b6a0221ad9b88f34849a4313f8471" translate="yes" xml:space="preserve">
          <source>\:earth_asia:</source>
          <target state="translated">\:earth_asia:</target>
        </trans-unit>
        <trans-unit id="2f0ff4228a9405fbb15562a48de301eb0143cbe6" translate="yes" xml:space="preserve">
          <source>\:egg:</source>
          <target state="translated">\:egg:</target>
        </trans-unit>
        <trans-unit id="60f5274b6430a0018392ff2c991781ec36f29258" translate="yes" xml:space="preserve">
          <source>\:eggplant:</source>
          <target state="translated">\:eggplant:</target>
        </trans-unit>
        <trans-unit id="ef6acc31fb78fb128d4aa6f3acfbdb96de042353" translate="yes" xml:space="preserve">
          <source>\:eight_pointed_black_star:</source>
          <target state="translated">\:eight_pointed_black_star:</target>
        </trans-unit>
        <trans-unit id="256871451345e0f8e2ad97ed1208214576af9cc1" translate="yes" xml:space="preserve">
          <source>\:eight_spoked_asterisk:</source>
          <target state="translated">\:eight_spoked_asterisk:</target>
        </trans-unit>
        <trans-unit id="463109f5aeb93e25d89da877aff2aa4a14c1e4c4" translate="yes" xml:space="preserve">
          <source>\:electric_plug:</source>
          <target state="translated">\:electric_plug:</target>
        </trans-unit>
        <trans-unit id="ae2112e4e4295f2b00f98fc19bab100bf405cbae" translate="yes" xml:space="preserve">
          <source>\:elephant:</source>
          <target state="translated">\:elephant:</target>
        </trans-unit>
        <trans-unit id="430b53e07cf0921d8fcaaa28bfa4e09b38098d6e" translate="yes" xml:space="preserve">
          <source>\:email:</source>
          <target state="translated">\:email:</target>
        </trans-unit>
        <trans-unit id="9960b453dddfdb466f65d7059b568addc3c383f6" translate="yes" xml:space="preserve">
          <source>\:end:</source>
          <target state="translated">\:end:</target>
        </trans-unit>
        <trans-unit id="76cdfeaf2a123479fcdaaec950745b5eeddf28ef" translate="yes" xml:space="preserve">
          <source>\:envelope_with_arrow:</source>
          <target state="translated">\:envelope_with_arrow:</target>
        </trans-unit>
        <trans-unit id="aaa8a40648743ea99ae7678d8e79ab592e84e2a5" translate="yes" xml:space="preserve">
          <source>\:euro:</source>
          <target state="translated">\:euro:</target>
        </trans-unit>
        <trans-unit id="023c0837bf821e216e39a1cafc6a7160051929fd" translate="yes" xml:space="preserve">
          <source>\:european_castle:</source>
          <target state="translated">\:european_castle:</target>
        </trans-unit>
        <trans-unit id="bdc20bcd7b0b6003706f5884c64437172cf1c04c" translate="yes" xml:space="preserve">
          <source>\:european_post_office:</source>
          <target state="translated">\:european_post_office:</target>
        </trans-unit>
        <trans-unit id="1b34f0e2cf43911c47177c7d6d3765026f801092" translate="yes" xml:space="preserve">
          <source>\:evergreen_tree:</source>
          <target state="translated">\:evergreen_tree:</target>
        </trans-unit>
        <trans-unit id="c6b6d0855b38729dfb84e26e84f49c30fc57bb59" translate="yes" xml:space="preserve">
          <source>\:exclamation:</source>
          <target state="translated">\:exclamation:</target>
        </trans-unit>
        <trans-unit id="ba5d1dbcaed41ac5c6bc5f64c6e1a1392ae2b453" translate="yes" xml:space="preserve">
          <source>\:expressionless:</source>
          <target state="translated">\:expressionless:</target>
        </trans-unit>
        <trans-unit id="18622e64ebd3e7de2b598df632ad63f8912ffa0d" translate="yes" xml:space="preserve">
          <source>\:eyeglasses:</source>
          <target state="translated">\:eyeglasses:</target>
        </trans-unit>
        <trans-unit id="a7da1b0807a892623f1c3727673d7ef72f65e554" translate="yes" xml:space="preserve">
          <source>\:eyes:</source>
          <target state="translated">\:eyes:</target>
        </trans-unit>
        <trans-unit id="d02f32a504982d86559b47f4c00a214b67ae1503" translate="yes" xml:space="preserve">
          <source>\:facepunch:</source>
          <target state="translated">\:facepunch:</target>
        </trans-unit>
        <trans-unit id="5a907517c618b26c91f1cfeabb2f5c4f40fdc791" translate="yes" xml:space="preserve">
          <source>\:factory:</source>
          <target state="translated">\:factory:</target>
        </trans-unit>
        <trans-unit id="c0e0da6907735eb5e0206302eb5951180c550861" translate="yes" xml:space="preserve">
          <source>\:fallen_leaf:</source>
          <target state="translated">\:fallen_leaf:</target>
        </trans-unit>
        <trans-unit id="b66642210fdefcbf23c2b7917817fb677011db2b" translate="yes" xml:space="preserve">
          <source>\:family:</source>
          <target state="translated">\:family:</target>
        </trans-unit>
        <trans-unit id="ed3ec616e68cc66512e14f769aa1253ff266259e" translate="yes" xml:space="preserve">
          <source>\:fast_forward:</source>
          <target state="translated">\:fast_forward:</target>
        </trans-unit>
        <trans-unit id="f0b8bb6286c35f069e4a1e90f8604f4bc62dc2a1" translate="yes" xml:space="preserve">
          <source>\:fax:</source>
          <target state="translated">\:fax:</target>
        </trans-unit>
        <trans-unit id="0bbcbc25c0eecfc841481e67fa9f6777fbd464a0" translate="yes" xml:space="preserve">
          <source>\:fearful:</source>
          <target state="translated">\:fearful:</target>
        </trans-unit>
        <trans-unit id="dfb7722d0a5f42db1ca95fce7cc4ad3a412d9431" translate="yes" xml:space="preserve">
          <source>\:feet:</source>
          <target state="translated">\:feet:</target>
        </trans-unit>
        <trans-unit id="a533586c1f3d88f9447dbd85e75f0159dfc758fa" translate="yes" xml:space="preserve">
          <source>\:ferris_wheel:</source>
          <target state="translated">\:ferris_wheel:</target>
        </trans-unit>
        <trans-unit id="8410fcb5f50c7b6b36a37c81dfce2f21c9289728" translate="yes" xml:space="preserve">
          <source>\:file_folder:</source>
          <target state="translated">\:file_folder:</target>
        </trans-unit>
        <trans-unit id="5f642a74f415d530d9e0c5161e141061f5048c2f" translate="yes" xml:space="preserve">
          <source>\:fire:</source>
          <target state="translated">\:fire:</target>
        </trans-unit>
        <trans-unit id="d31178ced29d67a2d79dd6806b8e2734a7210f59" translate="yes" xml:space="preserve">
          <source>\:fire_engine:</source>
          <target state="translated">\:fire_engine:</target>
        </trans-unit>
        <trans-unit id="99166886600ea54e3424e6eae7527e172415ab58" translate="yes" xml:space="preserve">
          <source>\:fireworks:</source>
          <target state="translated">\:fireworks:</target>
        </trans-unit>
        <trans-unit id="a5f27d6c8f245d7efcbee12ce0f0d34ecb795074" translate="yes" xml:space="preserve">
          <source>\:first_quarter_moon:</source>
          <target state="translated">\:first_quarter_moon:</target>
        </trans-unit>
        <trans-unit id="92ba03d67176c69aac120e23be17056ff654a2af" translate="yes" xml:space="preserve">
          <source>\:first_quarter_moon_with_face:</source>
          <target state="translated">\:first_quarter_moon_with_face:</target>
        </trans-unit>
        <trans-unit id="a477f6e7c890ec3d6a197083a8a5b84507070518" translate="yes" xml:space="preserve">
          <source>\:fish:</source>
          <target state="translated">\:fish:</target>
        </trans-unit>
        <trans-unit id="754188072f05e7845676bd8f59cd34073cc59ec8" translate="yes" xml:space="preserve">
          <source>\:fish_cake:</source>
          <target state="translated">\:fish_cake:</target>
        </trans-unit>
        <trans-unit id="96350c7bb269406ba40216612c5b8d8a4aa4046f" translate="yes" xml:space="preserve">
          <source>\:fishing_pole_and_fish:</source>
          <target state="translated">\:fishing_pole_and_fish:</target>
        </trans-unit>
        <trans-unit id="afb2fdba94eafd33339972c9cde902bd8d88183d" translate="yes" xml:space="preserve">
          <source>\:fist:</source>
          <target state="translated">\:fist:</target>
        </trans-unit>
        <trans-unit id="6fba42d42662f10baaf9aae465a0d330b9a22fe7" translate="yes" xml:space="preserve">
          <source>\:flags:</source>
          <target state="translated">\:flags:</target>
        </trans-unit>
        <trans-unit id="dee86e1eb9c34ff3fd2e76ab21e66155ddd1bfb9" translate="yes" xml:space="preserve">
          <source>\:flashlight:</source>
          <target state="translated">\:flashlight:</target>
        </trans-unit>
        <trans-unit id="ab7a714e6d6af892bbcefc56f3a9caf380f61cbe" translate="yes" xml:space="preserve">
          <source>\:floppy_disk:</source>
          <target state="translated">\:floppy_disk:</target>
        </trans-unit>
        <trans-unit id="3f3b11bf344ed631f7b08ed824e958f2d197eebd" translate="yes" xml:space="preserve">
          <source>\:flower_playing_cards:</source>
          <target state="translated">\:flower_playing_cards:</target>
        </trans-unit>
        <trans-unit id="07becb107390b18996293a798ac6171d731bb60b" translate="yes" xml:space="preserve">
          <source>\:flushed:</source>
          <target state="translated">\:flushed:</target>
        </trans-unit>
        <trans-unit id="aac07be89b7f97da8ff1714957e0b50c78fb3b0e" translate="yes" xml:space="preserve">
          <source>\:foggy:</source>
          <target state="translated">\:foggy:</target>
        </trans-unit>
        <trans-unit id="ea6f3ffda4db63053ed2b11fc0754de51566bff9" translate="yes" xml:space="preserve">
          <source>\:football:</source>
          <target state="translated">\:football:</target>
        </trans-unit>
        <trans-unit id="e2920013962db56b799e663f9371401f9f2e73ae" translate="yes" xml:space="preserve">
          <source>\:footprints:</source>
          <target state="translated">\:footprints:</target>
        </trans-unit>
        <trans-unit id="3f9c7ada8df9f30aa5e97fb8cd42a3be0a699c41" translate="yes" xml:space="preserve">
          <source>\:fork_and_knife:</source>
          <target state="translated">\:fork_and_knife:</target>
        </trans-unit>
        <trans-unit id="6e1c0b1dc5050db6421453bced78b829513f7532" translate="yes" xml:space="preserve">
          <source>\:fountain:</source>
          <target state="translated">\:fountain:</target>
        </trans-unit>
        <trans-unit id="91a454402bd64ebedd25f162a55553e97822bfec" translate="yes" xml:space="preserve">
          <source>\:four_leaf_clover:</source>
          <target state="translated">\:four_leaf_clover:</target>
        </trans-unit>
        <trans-unit id="f42b4f6d94e68b9ab012088fff26ded02f4b0d89" translate="yes" xml:space="preserve">
          <source>\:free:</source>
          <target state="translated">\:free:</target>
        </trans-unit>
        <trans-unit id="4ab8d77ca9e28c670e1bea7f6edf233ab8c04a0c" translate="yes" xml:space="preserve">
          <source>\:fried_shrimp:</source>
          <target state="translated">\:fried_shrimp:</target>
        </trans-unit>
        <trans-unit id="0b6eb9d008cc870e6d1d4ca5c5782cf925f58769" translate="yes" xml:space="preserve">
          <source>\:fries:</source>
          <target state="translated">\:fries:</target>
        </trans-unit>
        <trans-unit id="d650a0682549be1169559081c897bd1a56d82e3d" translate="yes" xml:space="preserve">
          <source>\:frog:</source>
          <target state="translated">\:frog:</target>
        </trans-unit>
        <trans-unit id="2742ac6926f4f88b9410f04c7ea56e51f3ebd6d0" translate="yes" xml:space="preserve">
          <source>\:frowning:</source>
          <target state="translated">\:frowning:</target>
        </trans-unit>
        <trans-unit id="56e48a8d3eaa7a4f9ee58730de2264a44c88c922" translate="yes" xml:space="preserve">
          <source>\:fuelpump:</source>
          <target state="translated">\:fuelpump:</target>
        </trans-unit>
        <trans-unit id="e9ee232804c33596308c636be649e8dfd7c6fc6f" translate="yes" xml:space="preserve">
          <source>\:full_moon:</source>
          <target state="translated">\:full_moon:</target>
        </trans-unit>
        <trans-unit id="1d17e3b9fd7f6470516768046b2614531b6138bf" translate="yes" xml:space="preserve">
          <source>\:full_moon_with_face:</source>
          <target state="translated">\:full_moon_with_face:</target>
        </trans-unit>
        <trans-unit id="ec1a93f48d5e8cc69f0397c1b86ec8ab1ae25967" translate="yes" xml:space="preserve">
          <source>\:game_die:</source>
          <target state="translated">\:game_die:</target>
        </trans-unit>
        <trans-unit id="3d22d282de92c405ea93daa9629d228a8ef356fc" translate="yes" xml:space="preserve">
          <source>\:gem:</source>
          <target state="translated">\:gem:</target>
        </trans-unit>
        <trans-unit id="61586c797e3f46bbc0fdc4374035a13e4388ac91" translate="yes" xml:space="preserve">
          <source>\:ghost:</source>
          <target state="translated">\:ghost:</target>
        </trans-unit>
        <trans-unit id="09e8db1424aa970a7b9eea0aadcdb8ed8e45f4ba" translate="yes" xml:space="preserve">
          <source>\:gift:</source>
          <target state="translated">\:gift:</target>
        </trans-unit>
        <trans-unit id="56b72e78e1ce7805c74a02df7e25841d36162fbf" translate="yes" xml:space="preserve">
          <source>\:gift_heart:</source>
          <target state="translated">\:gift_heart:</target>
        </trans-unit>
        <trans-unit id="25543880f70d890dc66d24e9fe21aaec7f1772b3" translate="yes" xml:space="preserve">
          <source>\:girl:</source>
          <target state="translated">\:girl:</target>
        </trans-unit>
        <trans-unit id="a3e89e111cc47eec6e460db70096e82175ab465a" translate="yes" xml:space="preserve">
          <source>\:globe_with_meridians:</source>
          <target state="translated">\:globe_with_meridians:</target>
        </trans-unit>
        <trans-unit id="ab196f2bec3cd3ab9d82813f9cf081a40365a79e" translate="yes" xml:space="preserve">
          <source>\:goat:</source>
          <target state="translated">\:goat:</target>
        </trans-unit>
        <trans-unit id="ed719de38fda896d8db1c163b43b8157544140d8" translate="yes" xml:space="preserve">
          <source>\:golf:</source>
          <target state="translated">\:golf:</target>
        </trans-unit>
        <trans-unit id="bad4d3ba66fc07b0bd85318625927109db2adffe" translate="yes" xml:space="preserve">
          <source>\:grapes:</source>
          <target state="translated">\:grapes:</target>
        </trans-unit>
        <trans-unit id="5c87f82bfdb61a23911d2cf5896ade45203f2e51" translate="yes" xml:space="preserve">
          <source>\:green_apple:</source>
          <target state="translated">\:green_apple:</target>
        </trans-unit>
        <trans-unit id="838189fcc067ca8397914e14f9e3eb8d1c7deb96" translate="yes" xml:space="preserve">
          <source>\:green_book:</source>
          <target state="translated">\:green_book:</target>
        </trans-unit>
        <trans-unit id="e183cff3dbc896f379685e638915b49016745afe" translate="yes" xml:space="preserve">
          <source>\:green_heart:</source>
          <target state="translated">\:green_heart:</target>
        </trans-unit>
        <trans-unit id="85aa6c7ad1d80e64f9bef0fad00d4043610a2602" translate="yes" xml:space="preserve">
          <source>\:grey_exclamation:</source>
          <target state="translated">\:grey_exclamation:</target>
        </trans-unit>
        <trans-unit id="17166e8e051ae3338b296ce626f5cb30e270e614" translate="yes" xml:space="preserve">
          <source>\:grey_question:</source>
          <target state="translated">\:grey_question:</target>
        </trans-unit>
        <trans-unit id="68520e5886a6f2a0abb47b6e25fc0963b580ad26" translate="yes" xml:space="preserve">
          <source>\:grimacing:</source>
          <target state="translated">\:grimacing:</target>
        </trans-unit>
        <trans-unit id="cce5340e57d64117cf21db918db8874a204e435a" translate="yes" xml:space="preserve">
          <source>\:grin:</source>
          <target state="translated">\:grin:</target>
        </trans-unit>
        <trans-unit id="0f1fa781c7642a02f5643799bf74c4e077ca3f5c" translate="yes" xml:space="preserve">
          <source>\:grinning:</source>
          <target state="translated">\:grinning:</target>
        </trans-unit>
        <trans-unit id="ef032ad2a13d8da2bb56339e65e775441a4c25e3" translate="yes" xml:space="preserve">
          <source>\:guardsman:</source>
          <target state="translated">\:guardsman:</target>
        </trans-unit>
        <trans-unit id="a972d453cbd7205b6a9a1dddedcc068bdf796581" translate="yes" xml:space="preserve">
          <source>\:guitar:</source>
          <target state="translated">\:guitar:</target>
        </trans-unit>
        <trans-unit id="a51d6f0b9190d629b1cda30f1c1e56bf449f22aa" translate="yes" xml:space="preserve">
          <source>\:gun:</source>
          <target state="translated">\:gun:</target>
        </trans-unit>
        <trans-unit id="f66b152c44faf9c0a24a1dd6fef7c89340f0fdaf" translate="yes" xml:space="preserve">
          <source>\:haircut:</source>
          <target state="translated">\:haircut:</target>
        </trans-unit>
        <trans-unit id="85aedcca8045f08a05c87f20bfac292819a4ad93" translate="yes" xml:space="preserve">
          <source>\:hamburger:</source>
          <target state="translated">\:hamburger:</target>
        </trans-unit>
        <trans-unit id="907fc978124793d22347e3e7fcd877d3caa89f6c" translate="yes" xml:space="preserve">
          <source>\:hammer:</source>
          <target state="translated">\:hammer:</target>
        </trans-unit>
        <trans-unit id="90fdea0c85a38788e5f5cecd739e98eaf2e645b8" translate="yes" xml:space="preserve">
          <source>\:hamster:</source>
          <target state="translated">\:hamster:</target>
        </trans-unit>
        <trans-unit id="85a6bd90152b5e22c307422b0767db692e5ec5d7" translate="yes" xml:space="preserve">
          <source>\:hand:</source>
          <target state="translated">\:hand:</target>
        </trans-unit>
        <trans-unit id="2b2b9d3e7357b586a98195211be59627e129df14" translate="yes" xml:space="preserve">
          <source>\:handbag:</source>
          <target state="translated">\:handbag:</target>
        </trans-unit>
        <trans-unit id="811b2dc747d647624b10868bf5a4d7f1ad1f15ee" translate="yes" xml:space="preserve">
          <source>\:hankey:</source>
          <target state="translated">\:hankey:</target>
        </trans-unit>
        <trans-unit id="b826819abd18a9e381b7bb08e8b393cf3ec13354" translate="yes" xml:space="preserve">
          <source>\:hatched_chick:</source>
          <target state="translated">\:hatched_chick:</target>
        </trans-unit>
        <trans-unit id="961fc5347826968c129900e146ec149afc14d1b1" translate="yes" xml:space="preserve">
          <source>\:hatching_chick:</source>
          <target state="translated">\:hatching_chick:</target>
        </trans-unit>
        <trans-unit id="fd13dbe756c2f7bec1e5fd3f11e35040bb929423" translate="yes" xml:space="preserve">
          <source>\:headphones:</source>
          <target state="translated">\:headphones:</target>
        </trans-unit>
        <trans-unit id="5b74b867b4e85bc99a8d4e081b412a2068bebfa2" translate="yes" xml:space="preserve">
          <source>\:hear_no_evil:</source>
          <target state="translated">\:hear_no_evil:</target>
        </trans-unit>
        <trans-unit id="ccb6fe30b2099b698ab1757148bbbfa20ded47b2" translate="yes" xml:space="preserve">
          <source>\:heart:</source>
          <target state="translated">\:heart:</target>
        </trans-unit>
        <trans-unit id="d19130804fd189a3217365acd20e8a55fee661c7" translate="yes" xml:space="preserve">
          <source>\:heart_decoration:</source>
          <target state="translated">\:heart_decoration:</target>
        </trans-unit>
        <trans-unit id="7fd7fc7da096929d65b442d3078005adbde95ec5" translate="yes" xml:space="preserve">
          <source>\:heart_eyes:</source>
          <target state="translated">\:heart_eyes:</target>
        </trans-unit>
        <trans-unit id="c743497e2a8415cb9689c73e20b2b475d6dc0aa4" translate="yes" xml:space="preserve">
          <source>\:heart_eyes_cat:</source>
          <target state="translated">\:heart_eyes_cat:</target>
        </trans-unit>
        <trans-unit id="0303cea12f05193a6575a3b06833743a2df98ec8" translate="yes" xml:space="preserve">
          <source>\:heartbeat:</source>
          <target state="translated">\:heartbeat:</target>
        </trans-unit>
        <trans-unit id="84eec40ef310877af50ac181032f31f711ecc75e" translate="yes" xml:space="preserve">
          <source>\:heartpulse:</source>
          <target state="translated">\:heartpulse:</target>
        </trans-unit>
        <trans-unit id="cce17d7c17b286ec8e76fbf2a7a635ef5af4da4f" translate="yes" xml:space="preserve">
          <source>\:heavy_check_mark:</source>
          <target state="translated">\:heavy_check_mark:</target>
        </trans-unit>
        <trans-unit id="ef2574882ba67253be321721a0d7a0a3789d0853" translate="yes" xml:space="preserve">
          <source>\:heavy_division_sign:</source>
          <target state="translated">\:heavy_division_sign:</target>
        </trans-unit>
        <trans-unit id="564cf55cbce579e6f0f2d5b6020c6d1079eadab8" translate="yes" xml:space="preserve">
          <source>\:heavy_dollar_sign:</source>
          <target state="translated">\:heavy_dollar_sign:</target>
        </trans-unit>
        <trans-unit id="3389894352ab55798f8586d6c0676e638f24a8b4" translate="yes" xml:space="preserve">
          <source>\:heavy_minus_sign:</source>
          <target state="translated">\:heavy_minus_sign:</target>
        </trans-unit>
        <trans-unit id="6d2a946978c021a995c0dbf7d6c667f1e213586d" translate="yes" xml:space="preserve">
          <source>\:heavy_multiplication_x:</source>
          <target state="translated">\:heavy_multiplication_x:</target>
        </trans-unit>
        <trans-unit id="51a3048909873e66e79db2a1c679d08d8e9946c3" translate="yes" xml:space="preserve">
          <source>\:heavy_plus_sign:</source>
          <target state="translated">\:heavy_plus_sign:</target>
        </trans-unit>
        <trans-unit id="4c209dc1b46c2d4fd1aabc606840cbf509597492" translate="yes" xml:space="preserve">
          <source>\:helicopter:</source>
          <target state="translated">\:helicopter:</target>
        </trans-unit>
        <trans-unit id="3d16f46b09472f5a35b37d0c88263766997edde5" translate="yes" xml:space="preserve">
          <source>\:herb:</source>
          <target state="translated">\:herb:</target>
        </trans-unit>
        <trans-unit id="0eda427d63afb6f8ae8c62ad3e610657974a1b8d" translate="yes" xml:space="preserve">
          <source>\:hibiscus:</source>
          <target state="translated">\:hibiscus:</target>
        </trans-unit>
        <trans-unit id="6301055ebc5235af7cfeb4a122046758607536d1" translate="yes" xml:space="preserve">
          <source>\:high_brightness:</source>
          <target state="translated">\:high_brightness:</target>
        </trans-unit>
        <trans-unit id="65de326b7d761878713c699bbe8d05c23928a01f" translate="yes" xml:space="preserve">
          <source>\:high_heel:</source>
          <target state="translated">\:high_heel:</target>
        </trans-unit>
        <trans-unit id="fdfbe50c4aba5f5092263322db165d7fba907cc6" translate="yes" xml:space="preserve">
          <source>\:hocho:</source>
          <target state="translated">\:hocho:</target>
        </trans-unit>
        <trans-unit id="efef59ac159cef18702821b259808a7da7d50a49" translate="yes" xml:space="preserve">
          <source>\:honey_pot:</source>
          <target state="translated">\:honey_pot:</target>
        </trans-unit>
        <trans-unit id="fa75f94f6f067c66c1972fd3d2091e70048c180b" translate="yes" xml:space="preserve">
          <source>\:horse:</source>
          <target state="translated">\:horse:</target>
        </trans-unit>
        <trans-unit id="fdef0d6640eb2571ffb16308c7980b77e524e7d1" translate="yes" xml:space="preserve">
          <source>\:horse_racing:</source>
          <target state="translated">\:horse_racing:</target>
        </trans-unit>
        <trans-unit id="61a9e5a0a7da234ce5f398aaa93c7dc9b62d313b" translate="yes" xml:space="preserve">
          <source>\:hospital:</source>
          <target state="translated">\:hospital:</target>
        </trans-unit>
        <trans-unit id="9a3b691ad4e378ca43461334f9515ec92433e64d" translate="yes" xml:space="preserve">
          <source>\:hotel:</source>
          <target state="translated">\:hotel:</target>
        </trans-unit>
        <trans-unit id="fc2dde6eaf60d12623f07c2628a1d58bff256517" translate="yes" xml:space="preserve">
          <source>\:hotsprings:</source>
          <target state="translated">\:hotsprings:</target>
        </trans-unit>
        <trans-unit id="78bff1fafe56bf8662de8f05039252c1f7ed3058" translate="yes" xml:space="preserve">
          <source>\:hourglass:</source>
          <target state="translated">\:hourglass:</target>
        </trans-unit>
        <trans-unit id="d6660d4ab7468bd130a788a520b856ddc92c34fe" translate="yes" xml:space="preserve">
          <source>\:hourglass_flowing_sand:</source>
          <target state="translated">\:hourglass_flowing_sand:</target>
        </trans-unit>
        <trans-unit id="77a74b1d6af5e0dd2f6744cb27fc9118cd9fa21f" translate="yes" xml:space="preserve">
          <source>\:house:</source>
          <target state="translated">\:house:</target>
        </trans-unit>
        <trans-unit id="3d97ad3a63f759728a7e1f0386effe24bba77e9f" translate="yes" xml:space="preserve">
          <source>\:house_with_garden:</source>
          <target state="translated">\:house_with_garden:</target>
        </trans-unit>
        <trans-unit id="3120a7b7a3bad39a47e81918bf4e7e5443442b12" translate="yes" xml:space="preserve">
          <source>\:hushed:</source>
          <target state="translated">\:hushed:</target>
        </trans-unit>
        <trans-unit id="2114ae059b0712fa881f9dbd5aa0b92c8265c78b" translate="yes" xml:space="preserve">
          <source>\:ice_cream:</source>
          <target state="translated">\:ice_cream:</target>
        </trans-unit>
        <trans-unit id="69460a6f4e102904e016c71a19fb5c40f59fa1ec" translate="yes" xml:space="preserve">
          <source>\:icecream:</source>
          <target state="translated">\:icecream:</target>
        </trans-unit>
        <trans-unit id="195ae110176e1c867d178e722909a436085d86c1" translate="yes" xml:space="preserve">
          <source>\:id:</source>
          <target state="translated">\:id:</target>
        </trans-unit>
        <trans-unit id="7b74738ca9656136db50876c02ded7440575effa" translate="yes" xml:space="preserve">
          <source>\:ideograph_advantage:</source>
          <target state="translated">\:ideograph_advantage:</target>
        </trans-unit>
        <trans-unit id="ac990dfb12419d28446a4bd3c2b4cb80477dc84a" translate="yes" xml:space="preserve">
          <source>\:imp:</source>
          <target state="translated">\:imp:</target>
        </trans-unit>
        <trans-unit id="9abf48ff7a2c9750bf4bacad546b7adfa108e924" translate="yes" xml:space="preserve">
          <source>\:inbox_tray:</source>
          <target state="translated">\:inbox_tray:</target>
        </trans-unit>
        <trans-unit id="ab6e8553cef846648ef74ec5c61e35dfd082f8f1" translate="yes" xml:space="preserve">
          <source>\:incoming_envelope:</source>
          <target state="translated">\:incoming_envelope:</target>
        </trans-unit>
        <trans-unit id="e5aae8be037b97e78d7d65435935ad1b926376a1" translate="yes" xml:space="preserve">
          <source>\:information_desk_person:</source>
          <target state="translated">\:information_desk_person:</target>
        </trans-unit>
        <trans-unit id="50696eca6dd53cce15313edffee9061f37583805" translate="yes" xml:space="preserve">
          <source>\:information_source:</source>
          <target state="translated">\:information_source:</target>
        </trans-unit>
        <trans-unit id="6a9d7f8e7caa52b913fcf42f28c2114f6973f06d" translate="yes" xml:space="preserve">
          <source>\:innocent:</source>
          <target state="translated">\:innocent:</target>
        </trans-unit>
        <trans-unit id="88c7780aa2b2754523f92f40c468e5f02243faaa" translate="yes" xml:space="preserve">
          <source>\:interrobang:</source>
          <target state="translated">\:interrobang:</target>
        </trans-unit>
        <trans-unit id="89553831067427a04402446076288a41f51d85c7" translate="yes" xml:space="preserve">
          <source>\:iphone:</source>
          <target state="translated">\:iphone:</target>
        </trans-unit>
        <trans-unit id="c6e95ab229f02caa9f80f351f0a2976966b1417d" translate="yes" xml:space="preserve">
          <source>\:izakaya_lantern:</source>
          <target state="translated">\:izakaya_lantern:</target>
        </trans-unit>
        <trans-unit id="d8b754896fdce4300cabebb06d1bb59f26449b87" translate="yes" xml:space="preserve">
          <source>\:jack_o_lantern:</source>
          <target state="translated">\:jack_o_lantern:</target>
        </trans-unit>
        <trans-unit id="e0d94d3bbdd2ae49e2e4cc952ab59f7c8db1bfd1" translate="yes" xml:space="preserve">
          <source>\:japan:</source>
          <target state="translated">\:japan:</target>
        </trans-unit>
        <trans-unit id="5d9efac54e6bacab40c7150f14c9996cbfe9de74" translate="yes" xml:space="preserve">
          <source>\:japanese_castle:</source>
          <target state="translated">\:japanese_castle:</target>
        </trans-unit>
        <trans-unit id="7a2838cc26d1ae0cd5a4f3e4de5b6604f149b3d8" translate="yes" xml:space="preserve">
          <source>\:japanese_goblin:</source>
          <target state="translated">\:japanese_goblin:</target>
        </trans-unit>
        <trans-unit id="2d6bb67fbb099c8b915fe9b9f0c0265286b7046f" translate="yes" xml:space="preserve">
          <source>\:japanese_ogre:</source>
          <target state="translated">\:japanese_ogre:</target>
        </trans-unit>
        <trans-unit id="a2146516486da5e5e9f8e7e4e2e7acb85870f2a7" translate="yes" xml:space="preserve">
          <source>\:jeans:</source>
          <target state="translated">\:jeans:</target>
        </trans-unit>
        <trans-unit id="ea868455085d13fef4fd5d894fc2ad2ded7b6ba6" translate="yes" xml:space="preserve">
          <source>\:joy:</source>
          <target state="translated">\:joy:</target>
        </trans-unit>
        <trans-unit id="064e1e4713eac1885087b8bd7438a16ced15082f" translate="yes" xml:space="preserve">
          <source>\:joy_cat:</source>
          <target state="translated">\:joy_cat:</target>
        </trans-unit>
        <trans-unit id="fbdd023d93f6bb1eaecb2d6c3fe0da079f796ed9" translate="yes" xml:space="preserve">
          <source>\:key:</source>
          <target state="translated">\:key:</target>
        </trans-unit>
        <trans-unit id="e849055eebefe6f4329c1bf5a14250673db58252" translate="yes" xml:space="preserve">
          <source>\:keycap_ten:</source>
          <target state="translated">\:keycap_ten:</target>
        </trans-unit>
        <trans-unit id="3a2438f7610437821d2e284acb513c43f16640ce" translate="yes" xml:space="preserve">
          <source>\:kimono:</source>
          <target state="translated">\:kimono:</target>
        </trans-unit>
        <trans-unit id="69836882bf2b229a60c7fc26e8dd2d39a0e6d632" translate="yes" xml:space="preserve">
          <source>\:kiss:</source>
          <target state="translated">\:kiss:</target>
        </trans-unit>
        <trans-unit id="b374f6fdedd99db97ebf74dbc217db0acb4fdbb6" translate="yes" xml:space="preserve">
          <source>\:kissing:</source>
          <target state="translated">\:kissing:</target>
        </trans-unit>
        <trans-unit id="401a71d1412dcacb36be5cdf24c21d5a7f00cb92" translate="yes" xml:space="preserve">
          <source>\:kissing_cat:</source>
          <target state="translated">\:kissing_cat:</target>
        </trans-unit>
        <trans-unit id="a87dcdd91fd62b83066f99f9ea1880b7c26d534c" translate="yes" xml:space="preserve">
          <source>\:kissing_closed_eyes:</source>
          <target state="translated">\:kissing_closed_eyes:</target>
        </trans-unit>
        <trans-unit id="87910c1eeadffb904163cb525409dfaa694da84a" translate="yes" xml:space="preserve">
          <source>\:kissing_heart:</source>
          <target state="translated">\:kissing_heart:</target>
        </trans-unit>
        <trans-unit id="219370630e5b4d1939866226f2b74bd305891f60" translate="yes" xml:space="preserve">
          <source>\:kissing_smiling_eyes:</source>
          <target state="translated">\:kissing_smiling_eyes:</target>
        </trans-unit>
        <trans-unit id="4be31d8193dae2129e450851916b924b8f08fea3" translate="yes" xml:space="preserve">
          <source>\:koala:</source>
          <target state="translated">\:koala:</target>
        </trans-unit>
        <trans-unit id="68a542b4ef03b641b9d47a3084da38002028562d" translate="yes" xml:space="preserve">
          <source>\:koko:</source>
          <target state="translated">\:koko:</target>
        </trans-unit>
        <trans-unit id="c04969d1c03a33477b9b68d52d3f316f04d4f03b" translate="yes" xml:space="preserve">
          <source>\:large_blue_circle:</source>
          <target state="translated">\:large_blue_circle:</target>
        </trans-unit>
        <trans-unit id="1484bf2ecab7017bdfc7353b9cca9f0b2b19c2bb" translate="yes" xml:space="preserve">
          <source>\:large_blue_diamond:</source>
          <target state="translated">\:large_blue_diamond:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
