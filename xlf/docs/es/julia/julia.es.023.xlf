<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="julia">
    <body>
      <group id="julia">
        <trans-unit id="f812c4d54c2165064c611482440c4ce865f09bd9" translate="yes" xml:space="preserve">
          <source>bits 2-3: platform: 0 = 32-bit, 1 = 64-bit</source>
          <target state="translated">bits 2-3:plataforma:0=32-bit,1=64-bit</target>
        </trans-unit>
        <trans-unit id="ed6e809421a212a0f18b8080aa909745b20f46f9" translate="yes" xml:space="preserve">
          <source>bitstring()</source>
          <target state="translated">bitstring()</target>
        </trans-unit>
        <trans-unit id="58fa9fa3278b2361be05277d5e9dd98593c3df2b" translate="yes" xml:space="preserve">
          <source>bitwise and</source>
          <target state="translated">poco a poco y</target>
        </trans-unit>
        <trans-unit id="77e9f4f76fd8becb2b7bce865b6eb9a8515c9629" translate="yes" xml:space="preserve">
          <source>bitwise not</source>
          <target state="translated">un poco no</target>
        </trans-unit>
        <trans-unit id="a8901d087222ba9a4a17d9cbfc11068633417a6c" translate="yes" xml:space="preserve">
          <source>bitwise not operator</source>
          <target state="translated">bitwise no operador</target>
        </trans-unit>
        <trans-unit id="f0faffaa3b66bcdae910f95bcb520a7ec69bc284" translate="yes" xml:space="preserve">
          <source>bitwise or</source>
          <target state="translated">poco a poco o</target>
        </trans-unit>
        <trans-unit id="13cb978e68bba9dd418a464cf07bddd93bae54a0" translate="yes" xml:space="preserve">
          <source>bitwise xor (exclusive or)</source>
          <target state="translated">bitwise xor (exclusivo o)</target>
        </trans-unit>
        <trans-unit id="391dda28c50ab689a23d6726f556a446416c56ad" translate="yes" xml:space="preserve">
          <source>bitwise xor operator</source>
          <target state="translated">operador de xor bitwise</target>
        </trans-unit>
        <trans-unit id="ceb52f8bc117b1c9127ac6c0351d582115393626" translate="yes" xml:space="preserve">
          <source>blksize</source>
          <target state="translated">blksize</target>
        </trans-unit>
        <trans-unit id="f7d5b2b95861daea9933ef0a243f733bbc79235e" translate="yes" xml:space="preserve">
          <source>blocks</source>
          <target state="translated">blocks</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="f683de6a057fa34a3592ad2ce8793440be061d4f" translate="yes" xml:space="preserve">
          <source>bswap()</source>
          <target state="translated">bswap()</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="dbf642257c8b164d1215ecc5d908d2381b4dfa9a" translate="yes" xml:space="preserve">
          <source>but that for now the program is still working.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f59f2a90ceb1df987af2ccf6c75eeb6f50fdce" translate="yes" xml:space="preserve">
          <source>but this will:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1462a5c4d784580079a0a4f1cecff825de8352" translate="yes" xml:space="preserve">
          <source>by default (via &lt;code&gt;Base.load_julia_startup()&lt;/code&gt;).</source>
          <target state="translated">de forma predeterminada (a trav&amp;eacute;s de &lt;code&gt;Base.load_julia_startup()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d9ba88e967a7906c92bbcf1d94603a06d499b23" translate="yes" xml:space="preserve">
          <source>by default.</source>
          <target state="translated">por defecto.</target>
        </trans-unit>
        <trans-unit id="ef0618fa03df64894678dd1a81b6d54970dfd9a7" translate="yes" xml:space="preserve">
          <source>by defining a method</source>
          <target state="translated">definiendo un método</target>
        </trans-unit>
        <trans-unit id="f7e8a89a9750f6f343b800d6ee7b5cad6e322d79" translate="yes" xml:space="preserve">
          <source>bytes2hex()</source>
          <target state="translated">bytes2hex()</target>
        </trans-unit>
        <trans-unit id="9c8ead7c353c6753a04d15af30a780ccee6b28f4" translate="yes" xml:space="preserve">
          <source>bytesavailable()</source>
          <target state="translated">bytesavailable()</target>
        </trans-unit>
        <trans-unit id="96940fa7f6fef66a0adf1bed63332ef2ea45d799" translate="yes" xml:space="preserve">
          <source>can be called via the following Julia code, where the lengths are appended</source>
          <target state="translated">puede ser llamado a través del siguiente código de Julia,donde se adjuntan las longitudes</target>
        </trans-unit>
        <trans-unit id="1c42c5c9a2ddc6691884677c3b3368132016d2a1" translate="yes" xml:space="preserve">
          <source>can be called via the following Julia code:</source>
          <target state="translated">puede ser llamado a través del siguiente código de Julia:</target>
        </trans-unit>
        <trans-unit id="4c5b34eaba454b0fab02cd7065a26ca4ee49cc08" translate="yes" xml:space="preserve">
          <source>can be different when compared to other languages like Matlab or R.</source>
          <target state="translated">pueden ser diferentes cuando se comparan con otros idiomas como el Matlab o el R.</target>
        </trans-unit>
        <trans-unit id="6ae277a801356c61cc8195479841d7732e7455e3" translate="yes" xml:space="preserve">
          <source>can be shortened to:</source>
          <target state="translated">puede ser acortado a:</target>
        </trans-unit>
        <trans-unit id="98c10b789cb5ae6f63d07c45c3118e477761a9b8" translate="yes" xml:space="preserve">
          <source>can be written in Julia as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10da51dad389f8f57e5bdb28e28d2293c04c8705" translate="yes" xml:space="preserve">
          <source>cat()</source>
          <target state="translated">cat()</target>
        </trans-unit>
        <trans-unit id="ca4c1cf12556ecba7723d2011b667aa33d0cd533" translate="yes" xml:space="preserve">
          <source>catch_backtrace()</source>
          <target state="translated">catch_backtrace()</target>
        </trans-unit>
        <trans-unit id="6eae9b02f3f211c6adcbf2b5134dc75d04a386e7" translate="yes" xml:space="preserve">
          <source>catch_stack()</source>
          <target state="translated">catch_stack()</target>
        </trans-unit>
        <trans-unit id="804fda998ec6601c505ff4a0b73672b497aff6f0" translate="yes" xml:space="preserve">
          <source>ccall</source>
          <target state="translated">ccall</target>
        </trans-unit>
        <trans-unit id="5a953e666439b6fb0be7e336f931a42a0d906418" translate="yes" xml:space="preserve">
          <source>ccall using a threadpool (Experimental)</source>
          <target state="translated">Llamar usando un hilo de rosca (Experimental)</target>
        </trans-unit>
        <trans-unit id="6c6ebb8fc4e19727d7105dd7085a41625227b34c" translate="yes" xml:space="preserve">
          <source>cconvert()</source>
          <target state="translated">cconvert()</target>
        </trans-unit>
        <trans-unit id="233db03fd3b4529187995dd7ceb514910b4095be" translate="yes" xml:space="preserve">
          <source>ceil()</source>
          <target state="translated">ceil()</target>
        </trans-unit>
        <trans-unit id="2440f45c5f0e4ec6b74573f5c4354e1c87cfa639" translate="yes" xml:space="preserve">
          <source>ceiling division; quotient rounded towards &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">divisi&amp;oacute;n del techo; cociente redondeado hacia &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6e9bec9f085c6ad14791b55073f4a67e92297b6" translate="yes" xml:space="preserve">
          <source>changes &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and vice versa</source>
          <target state="translated">cambia de &lt;code&gt;true&lt;/code&gt; a &lt;code&gt;false&lt;/code&gt; y viceversa</target>
        </trans-unit>
        <trans-unit id="5d88aa4cb8afb1730f29a9650c153c0007962a75" translate="yes" xml:space="preserve">
          <source>checkbounds()</source>
          <target state="translated">checkbounds()</target>
        </trans-unit>
        <trans-unit id="16e31edf12261dc36e57679ef4d7be943cbc76a4" translate="yes" xml:space="preserve">
          <source>checkindex()</source>
          <target state="translated">checkindex()</target>
        </trans-unit>
        <trans-unit id="4961ba7bb800857611022d5f76b36f518c160444" translate="yes" xml:space="preserve">
          <source>chomp()</source>
          <target state="translated">chomp()</target>
        </trans-unit>
        <trans-unit id="d0d461e33cd0f5b53198c646c4dc543aeb1c5f0a" translate="yes" xml:space="preserve">
          <source>chop()</source>
          <target state="translated">chop()</target>
        </trans-unit>
        <trans-unit id="ce924fd4ba28470cd47797f0359a1b1c335d0834" translate="yes" xml:space="preserve">
          <source>circcopy!()</source>
          <target state="translated">circcopy!()</target>
        </trans-unit>
        <trans-unit id="0cfc43147d576f12315439de609ee78649d17373" translate="yes" xml:space="preserve">
          <source>circshift!()</source>
          <target state="translated">circshift!()</target>
        </trans-unit>
        <trans-unit id="3d12d1d8533fb28f469e1b4995a13c089a91c638" translate="yes" xml:space="preserve">
          <source>circshift()</source>
          <target state="translated">circshift()</target>
        </trans-unit>
        <trans-unit id="40475e344ae5b3be82d15e7845b9ebcbb64de7ed" translate="yes" xml:space="preserve">
          <source>cis()</source>
          <target state="translated">cis()</target>
        </trans-unit>
        <trans-unit id="d1724c3841b6a8b94480561452c8679e8d4402ac" translate="yes" xml:space="preserve">
          <source>cld()</source>
          <target state="translated">cld()</target>
        </trans-unit>
        <trans-unit id="2553a9bd0bdcd6eb0bf6c9b17385b6c5a9a5420a" translate="yes" xml:space="preserve">
          <source>close()</source>
          <target state="translated">close()</target>
        </trans-unit>
        <trans-unit id="2971883a617260908cbf7c91ff541f8b39339ec3" translate="yes" xml:space="preserve">
          <source>cmp()</source>
          <target state="translated">cmp()</target>
        </trans-unit>
        <trans-unit id="5b7f180eecc039ae376c82c59e5ee1dcfe7d898c" translate="yes" xml:space="preserve">
          <source>coalesce()</source>
          <target state="translated">coalesce()</target>
        </trans-unit>
        <trans-unit id="47c0c3fb3987fc413ee865db0aadc3de92661b9e" translate="yes" xml:space="preserve">
          <source>code_lowered()</source>
          <target state="translated">code_lowered()</target>
        </trans-unit>
        <trans-unit id="486ccb373b9c808d4703f8b26dcbc4f33a0898ce" translate="yes" xml:space="preserve">
          <source>code_typed()</source>
          <target state="translated">code_typed()</target>
        </trans-unit>
        <trans-unit id="efaff14494d5a7a6c75b8dc39649bcdb57a77e86" translate="yes" xml:space="preserve">
          <source>codepoint()</source>
          <target state="translated">codepoint()</target>
        </trans-unit>
        <trans-unit id="13dab2ad81172a679019c13c4d46ebb7c9d2cbf6" translate="yes" xml:space="preserve">
          <source>codeunit()</source>
          <target state="translated">codeunit()</target>
        </trans-unit>
        <trans-unit id="4ffa83f64d3e195d9af8023e6739a594ad5f73a7" translate="yes" xml:space="preserve">
          <source>codeunits()</source>
          <target state="translated">codeunits()</target>
        </trans-unit>
        <trans-unit id="5b1dabd2e88969f5cd6ef195adeb2068f22807fc" translate="yes" xml:space="preserve">
          <source>collect()</source>
          <target state="translated">collect()</target>
        </trans-unit>
        <trans-unit id="dc7e24c66e060b93fcbd593e0a4df67cad88e3cd" translate="yes" xml:space="preserve">
          <source>colons (&lt;a href=&quot;../math/index#Base.::&quot;&gt;&lt;code&gt;:&lt;/code&gt;&lt;/a&gt;) used as a binary infix operator construct a range from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; (inclusive) with fixed step size &lt;code&gt;1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a54492bf468e528815c73bfb386703b6bf7f2b" translate="yes" xml:space="preserve">
          <source>colons (&lt;a href=&quot;../math/index#Base.::&quot;&gt;&lt;code&gt;:&lt;/code&gt;&lt;/a&gt;) used as a ternary infix operator construct a range from &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; (inclusive) with step size &lt;code&gt;s&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac8b53078352c02c90a5fff02e39ff933cf4b88" translate="yes" xml:space="preserve">
          <source>commas separate function arguments or tuple or array components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4aebad5e4318b14ea2559e57835f2c35a1ed0b" translate="yes" xml:space="preserve">
          <source>compilecache()</source>
          <target state="translated">compilecache()</target>
        </trans-unit>
        <trans-unit id="2664e98dc029aa1ff6b598913f21d71a716261cd" translate="yes" xml:space="preserve">
          <source>complex transpose operator Aᴴ</source>
          <target state="translated">operador de transposición complejo Aᴴ</target>
        </trans-unit>
        <trans-unit id="141c251a090c368f2064668178cdae6400d66023" translate="yes" xml:space="preserve">
          <source>complex()</source>
          <target state="translated">complex()</target>
        </trans-unit>
        <trans-unit id="1b0890ec87a5ed4639f43f4ec7946b04246d6588" translate="yes" xml:space="preserve">
          <source>comprehensions, broadcast-fusing</source>
          <target state="translated">comprensiones,difusión de emisiones</target>
        </trans-unit>
        <trans-unit id="241044970038bf5392f16d4bc2bdc21a435d76a5" translate="yes" xml:space="preserve">
          <source>concatenate input arrays along dimension(s) &lt;code&gt;k&lt;/code&gt;</source>
          <target state="translated">concatenar matrices de entrada a lo largo de la (s) dimensi&amp;oacute;n (es) &lt;code&gt;k&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56425e2421a7ac0ffeb657a009297d826826987f" translate="yes" xml:space="preserve">
          <source>conciseness is valued, but avoid abbreviation (&lt;a href=&quot;../../base/collections/index#Base.indexin&quot;&gt;&lt;code&gt;indexin&lt;/code&gt;&lt;/a&gt; rather than &lt;code&gt;indxin&lt;/code&gt;) as it becomes difficult to remember whether and how particular words are abbreviated.</source>
          <target state="translated">se valora la concisi&amp;oacute;n, pero evite las abreviaturas ( &lt;a href=&quot;../../base/collections/index#Base.indexin&quot;&gt; &lt;code&gt;indexin&lt;/code&gt; en&lt;/a&gt; lugar de &lt;code&gt;indxin&lt;/code&gt; ), ya que resulta dif&amp;iacute;cil recordar si determinadas palabras se abrevian y c&amp;oacute;mo.</target>
        </trans-unit>
        <trans-unit id="4fac2263f7ae7c8fb31964b21056eb73121734c8" translate="yes" xml:space="preserve">
          <source>conj!()</source>
          <target state="translated">conj!()</target>
        </trans-unit>
        <trans-unit id="95acd76d4d3207fd96fc5de03eef6595669fd8d8" translate="yes" xml:space="preserve">
          <source>conj()</source>
          <target state="translated">conj()</target>
        </trans-unit>
        <trans-unit id="b42f3f6f796fa3cfcb6b1b8d49c7bcccc3a7164c" translate="yes" xml:space="preserve">
          <source>const</source>
          <target state="translated">const</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">continue</target>
        </trans-unit>
        <trans-unit id="86579bbe15be29a02cb8dc2da247309d97e543d2" translate="yes" xml:space="preserve">
          <source>convert()</source>
          <target state="translated">convert()</target>
        </trans-unit>
        <trans-unit id="77c36ee3f773307abfa3d6d6efed54311795567c" translate="yes" xml:space="preserve">
          <source>copy &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">copia &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="561932200be5fc41f0bc2480aa525bf78dbbb17f" translate="yes" xml:space="preserve">
          <source>copy &lt;code&gt;A&lt;/code&gt;, recursively copying its elements</source>
          <target state="translated">copiar &lt;code&gt;A&lt;/code&gt; , copiando recursivamente sus elementos</target>
        </trans-unit>
        <trans-unit id="2b2ed0922e5c552c1298785802c663d39da798ea" translate="yes" xml:space="preserve">
          <source>copy()</source>
          <target state="translated">copy()</target>
        </trans-unit>
        <trans-unit id="4cdf1e4abcadece46b31e58afff4949340d9b2ec" translate="yes" xml:space="preserve">
          <source>copysign()</source>
          <target state="translated">copysign()</target>
        </trans-unit>
        <trans-unit id="91e72475338becf900bfaee470f0e5cbf27ef5d6" translate="yes" xml:space="preserve">
          <source>copyto!()</source>
          <target state="translated">copyto!()</target>
        </trans-unit>
        <trans-unit id="8ee8cabe8ef448cf4d736ca72f9a27488a5006b5" translate="yes" xml:space="preserve">
          <source>cos()</source>
          <target state="translated">cos()</target>
        </trans-unit>
        <trans-unit id="fcf5380ea3d868bb099baf36d0697e4ee0ae93ca" translate="yes" xml:space="preserve">
          <source>cosh()</source>
          <target state="translated">cosh()</target>
        </trans-unit>
        <trans-unit id="a6322bb6f6a5b21b94f321bb5d77d71893647eb3" translate="yes" xml:space="preserve">
          <source>count()</source>
          <target state="translated">count()</target>
        </trans-unit>
        <trans-unit id="707e41e60f70d0ee215b53822d8b4b6fc6410ba0" translate="yes" xml:space="preserve">
          <source>count_ones()</source>
          <target state="translated">count_ones()</target>
        </trans-unit>
        <trans-unit id="c3bbbe3b7094f3358ca7f21721f34f775b5c097f" translate="yes" xml:space="preserve">
          <source>count_zeros()</source>
          <target state="translated">count_zeros()</target>
        </trans-unit>
        <trans-unit id="22539799605ea9efcd718291379f0f946fd3224b" translate="yes" xml:space="preserve">
          <source>countlines()</source>
          <target state="translated">countlines()</target>
        </trans-unit>
        <trans-unit id="bfd0df8394ce3f3da138d91ef09c9be5c2d6ce2b" translate="yes" xml:space="preserve">
          <source>create if non-existent</source>
          <target state="translated">crear si no existe</target>
        </trans-unit>
        <trans-unit id="d92eb5f6d2c2289929236f7dba6df0eaf5d1a50e" translate="yes" xml:space="preserve">
          <source>creates a &lt;code&gt;m&lt;/code&gt;-by-&lt;code&gt;n&lt;/code&gt;&lt;code&gt;Matrix{Int}&lt;/code&gt;, linked to the file associated with stream &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">crea una matriz &lt;code&gt;m&lt;/code&gt; - por- &lt;code&gt;n&lt;/code&gt; &lt;code&gt;Matrix{Int}&lt;/code&gt; , vinculada al archivo asociado con los flujos &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbbaa38aee15d5f8b3bc9a4943fa2d0de63b8a18" translate="yes" xml:space="preserve">
          <source>creates an array that &quot;acts like&quot; an &lt;code&gt;Array{Int}&lt;/code&gt; (and might indeed be backed by one), but which is indexed identically to &lt;code&gt;A&lt;/code&gt;. If &lt;code&gt;A&lt;/code&gt; has conventional indexing, this will be identical to &lt;code&gt;Array{Int}(undef, size(A))&lt;/code&gt;, but if &lt;code&gt;A&lt;/code&gt; has unconventional indexing then the indices of the result will match &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">crea una matriz que &quot;act&amp;uacute;a como&quot; una &lt;code&gt;Array{Int}&lt;/code&gt; (y de hecho podr&amp;iacute;a ser respaldado por uno), pero que se indexa de forma id&amp;eacute;ntica a &lt;code&gt;A&lt;/code&gt; . Si &lt;code&gt;A&lt;/code&gt; tiene indexaci&amp;oacute;n convencional, este ser&amp;aacute; id&amp;eacute;ntico al &lt;code&gt;Array{Int}(undef, size(A))&lt;/code&gt; , pero si &lt;code&gt;A&lt;/code&gt; tiene indexaci&amp;oacute;n no convencional entonces los &amp;iacute;ndices del resultado coincidir&amp;aacute;n &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67a7dfdbedbc0710267686672950d9529ab37f15" translate="yes" xml:space="preserve">
          <source>creating new generators</source>
          <target state="translated">creando nuevos generadores</target>
        </trans-unit>
        <trans-unit id="f1900952e8b88f93bfc8fbd3cc439f624e3936b8" translate="yes" xml:space="preserve">
          <source>ctime</source>
          <target state="translated">ctime</target>
        </trans-unit>
        <trans-unit id="ac476a94b804e4a5abb808ae0fad36e89e6d0512" translate="yes" xml:space="preserve">
          <source>ctrl-Left, &lt;code&gt;meta-B&lt;/code&gt;</source>
          <target state="translated">Ctrl-Izquierda, &lt;code&gt;meta-B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3effc5b7281f4b48b96623688183d51777a00ad" translate="yes" xml:space="preserve">
          <source>ctrl-Right, &lt;code&gt;meta-F&lt;/code&gt;</source>
          <target state="translated">Ctrl-Derecha, &lt;code&gt;meta-F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ef17152748f0d12fdf8399472b1ef5a9a8b3da7" translate="yes" xml:space="preserve">
          <source>cube root of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">ra&amp;iacute;z c&amp;uacute;bica de &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="068fd35c01d9295bf0544756748c369a95705222" translate="yes" xml:space="preserve">
          <source>cumprod!()</source>
          <target state="translated">cumprod!()</target>
        </trans-unit>
        <trans-unit id="37186e0b9b96ce343892ae5db94d4263c328060e" translate="yes" xml:space="preserve">
          <source>cumprod()</source>
          <target state="translated">cumprod()</target>
        </trans-unit>
        <trans-unit id="f764901603e5acab9d9144f3d5cdfdf4c102de70" translate="yes" xml:space="preserve">
          <source>cumsum!()</source>
          <target state="translated">cumsum!()</target>
        </trans-unit>
        <trans-unit id="93fc0d66b742bebf68b5e2a9342b5ebad8b8d87f" translate="yes" xml:space="preserve">
          <source>cumsum()</source>
          <target state="translated">cumsum()</target>
        </trans-unit>
        <trans-unit id="5abe8abc26de95c9792598d21566acc895c90308" translate="yes" xml:space="preserve">
          <source>curly braces can also be used to group multiple &lt;a href=&quot;../base/index#where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; expressions in function declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40432e44938028d2ec04dfd3a07a3f4b3be2eb52" translate="yes" xml:space="preserve">
          <source>curly braces following a type list that type's &lt;a href=&quot;../../manual/types/index#Parametric-Types&quot;&gt;parameters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e6b715ac0dc95c5dd88e71bfb21697f8fef3fd" translate="yes" xml:space="preserve">
          <source>current_task()</source>
          <target state="translated">current_task()</target>
        </trans-unit>
        <trans-unit id="7ddb4b970645de8313d9d5857502f0c2fa8cc1cb" translate="yes" xml:space="preserve">
          <source>currently unsupported by &lt;code&gt;@cfunction&lt;/code&gt;</source>
          <target state="translated">actualmente no es compatible con &lt;code&gt;@cfunction&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3e4ea1eb714d977b60394de8e65d3e71c2ba453" translate="yes" xml:space="preserve">
          <source>datatype_alignment()</source>
          <target state="translated">datatype_alignment()</target>
        </trans-unit>
        <trans-unit id="68ddfe0014eab22870bf711572cabf8eccf97f9c" translate="yes" xml:space="preserve">
          <source>datatype_haspadding()</source>
          <target state="translated">datatype_haspadding()</target>
        </trans-unit>
        <trans-unit id="0782b17b4b48bd2e88f628411a3be99643286bfb" translate="yes" xml:space="preserve">
          <source>datatype_pointerfree()</source>
          <target state="translated">datatype_pointerfree()</target>
        </trans-unit>
        <trans-unit id="ec4cad10d37dfab711648117a668753da773836e" translate="yes" xml:space="preserve">
          <source>deepcopy()</source>
          <target state="translated">deepcopy()</target>
        </trans-unit>
        <trans-unit id="6ad229e997f81425fb8da894a5765d6f9b4656f2" translate="yes" xml:space="preserve">
          <source>defined in terms of scalar &lt;code&gt;getindex&lt;/code&gt;</source>
          <target state="translated">definido en t&amp;eacute;rminos de &lt;code&gt;getindex&lt;/code&gt; escalar</target>
        </trans-unit>
        <trans-unit id="ed0470e09a1f473b5771842f69c09bb87e1d2315" translate="yes" xml:space="preserve">
          <source>defined in terms of scalar &lt;code&gt;setindex!&lt;/code&gt;</source>
          <target state="translated">definido en t&amp;eacute;rminos de &lt;code&gt;setindex!&lt;/code&gt; escalar !</target>
        </trans-unit>
        <trans-unit id="393f07d73ab8da5347a283ea60efbe6c6f7a11f7" translate="yes" xml:space="preserve">
          <source>delete!()</source>
          <target state="translated">delete!()</target>
        </trans-unit>
        <trans-unit id="9a68f1e31d80b5f6b514e06d54ebd34e25a4d8eb" translate="yes" xml:space="preserve">
          <source>deleteat!()</source>
          <target state="translated">deleteat!()</target>
        </trans-unit>
        <trans-unit id="278ddb8b12ebb1ca7f859f2bece1cd6701bc6569" translate="yes" xml:space="preserve">
          <source>delimit character literals</source>
          <target state="translated">delimitar los caracteres literales</target>
        </trans-unit>
        <trans-unit id="c1ebdd9ee9814fbe6282a395fd9cf65b0884ea3b" translate="yes" xml:space="preserve">
          <source>delimit external process (command) specifications</source>
          <target state="translated">delimitar las especificaciones del proceso externo (comando)</target>
        </trans-unit>
        <trans-unit id="608fcd2454df58b843c13acf8b87034217109685" translate="yes" xml:space="preserve">
          <source>delimit string literals</source>
          <target state="translated">delimitar los literales de la cadena</target>
        </trans-unit>
        <trans-unit id="7d366ddffd98a94e0fad4674e24018e19acfdbdb" translate="yes" xml:space="preserve">
          <source>denominator()</source>
          <target state="translated">denominator()</target>
        </trans-unit>
        <trans-unit id="f255f40ff6e83966f2058fb6f6a683a866b52b62" translate="yes" xml:space="preserve">
          <source>depends on how this parameter is used, first translate this to the intended pointer type, then determine the Julia equivalent using the remaining rules in this list</source>
          <target state="translated">depende de cómo se utilice este parámetro,primero tradúzcalo al tipo de puntero deseado,luego determine el equivalente en Julia utilizando las reglas restantes de esta lista</target>
        </trans-unit>
        <trans-unit id="e4c428d363f7c0edae62a5126a94cde247558c8e" translate="yes" xml:space="preserve">
          <source>detach()</source>
          <target state="translated">detach()</target>
        </trans-unit>
        <trans-unit id="4ac6d80469c53c40c421167573af330a9b8443e2" translate="yes" xml:space="preserve">
          <source>determines the directory in which Julia initially searches for source files (via &lt;code&gt;Base.find_source_file()&lt;/code&gt;).</source>
          <target state="translated">determina el directorio en el que Julia busca inicialmente los archivos fuente (a trav&amp;eacute;s de &lt;code&gt;Base.find_source_file()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f3a929b3364b471a481f4f7cda0b4559ecde9aba" translate="yes" xml:space="preserve">
          <source>device</source>
          <target state="translated">device</target>
        </trans-unit>
        <trans-unit id="caf903eb3da59fd49de57746f9e5c2a7f039d1ff" translate="yes" xml:space="preserve">
          <source>devnull</source>
          <target state="translated">devnull</target>
        </trans-unit>
        <trans-unit id="a8192d09ca57648a638ee5c0d74eb5a1f3beb43a" translate="yes" xml:space="preserve">
          <source>diagonal values of &lt;code&gt;D&lt;/code&gt; as a &lt;code&gt;Vector&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b8462baee24e314ce2ea302d6738d66a086f3f" translate="yes" xml:space="preserve">
          <source>diff()</source>
          <target state="translated">diff()</target>
        </trans-unit>
        <trans-unit id="d2d86dda6170d02151b20baadde45ee5fbaba483" translate="yes" xml:space="preserve">
          <source>differs in several aspects from the behavior in various shells, Perl, or Ruby:</source>
          <target state="translated">difiere en varios aspectos del comportamiento en varias conchas,Perl o Rubí:</target>
        </trans-unit>
        <trans-unit id="ddaba848cd30ba0dfee29427fe1519919884644e" translate="yes" xml:space="preserve">
          <source>digits!()</source>
          <target state="translated">digits!()</target>
        </trans-unit>
        <trans-unit id="dcb3476a5e3bc1a4e82d73711cbe17ec3707e677" translate="yes" xml:space="preserve">
          <source>digits()</source>
          <target state="translated">digits()</target>
        </trans-unit>
        <trans-unit id="c4004df9487b518c7c0260afba69bbf7406ef856" translate="yes" xml:space="preserve">
          <source>disable_sigint()</source>
          <target state="translated">disable_sigint()</target>
        </trans-unit>
        <trans-unit id="4ca339aa2b0b45a1740c1b08b44c44f864f800af" translate="yes" xml:space="preserve">
          <source>displaysize()</source>
          <target state="translated">displaysize()</target>
        </trans-unit>
        <trans-unit id="08e339d45d610e0e71d01142871c78afe51fe092" translate="yes" xml:space="preserve">
          <source>div()</source>
          <target state="translated">div()</target>
        </trans-unit>
        <trans-unit id="c4da7b6033f205b1948f7a2ef2868da706adfea9" translate="yes" xml:space="preserve">
          <source>divide</source>
          <target state="translated">divide</target>
        </trans-unit>
        <trans-unit id="fe7876ab1cdd4f9833fea1d7b5a6d493ec694a09" translate="yes" xml:space="preserve">
          <source>divrem()</source>
          <target state="translated">divrem()</target>
        </trans-unit>
        <trans-unit id="eadcd9bd2a09c75aef04954e6799e50278ee124a" translate="yes" xml:space="preserve">
          <source>do</source>
          <target state="translated">do</target>
        </trans-unit>
        <trans-unit id="1d39a1d245cf1c55633afed987418b6713d8c13b" translate="yes" xml:space="preserve">
          <source>does not hinder performance (but does not help either) since the compiler can determine the type of &lt;code&gt;c&lt;/code&gt; at the time &lt;code&gt;k&lt;/code&gt; is compiled.</source>
          <target state="translated">no obstaculiza el rendimiento (pero tampoco ayuda) ya que el compilador puede determinar el tipo de &lt;code&gt;c&lt;/code&gt; en el momento en que se compila &lt;code&gt;k&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="442cefa62fb588301b16d9cc3903aabcd6b874c4" translate="yes" xml:space="preserve">
          <source>don't write definitions like the following:</source>
          <target state="translated">no escribas definiciones como las siguientes:</target>
        </trans-unit>
        <trans-unit id="bdb36bb22deb169275b3094ba9005a29eeddd195" translate="yes" xml:space="preserve">
          <source>double</source>
          <target state="translated">double</target>
        </trans-unit>
        <trans-unit id="bad0bbc442541a1f26bbf0802465ebd9c4b90433" translate="yes" xml:space="preserve">
          <source>double ampersands is short-circuiting boolean and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e14ec7d65b4fd5d649e06fde33464815e5daab" translate="yes" xml:space="preserve">
          <source>double equals sign is value equality comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85d1e43f4e45a5e9c57c992b78b95a44a840e1e" translate="yes" xml:space="preserve">
          <source>double pipe characters is short-circuiting boolean or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc67c9e4d366aec023c4552c2b2ffe135229380" translate="yes" xml:space="preserve">
          <source>double-colons represent a type annotation or &lt;a href=&quot;../base/index#Core.typeassert&quot;&gt;&lt;code&gt;typeassert&lt;/code&gt;&lt;/a&gt;, depending on context, frequently used when declaring function arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f0661f92a282177367538fb8828cb747b3c372" translate="yes" xml:space="preserve">
          <source>download()</source>
          <target state="translated">download()</target>
        </trans-unit>
        <trans-unit id="538088be1eefc3445e07a8fd55bc96a89bbfa547" translate="yes" xml:space="preserve">
          <source>dropdims()</source>
          <target state="translated">dropdims()</target>
        </trans-unit>
        <trans-unit id="2bd0d27aef77b029cc1eb620dc4e34c52131c8aa" translate="yes" xml:space="preserve">
          <source>dump()</source>
          <target state="translated">dump()</target>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="2cb8eb2bf55ecfff46170a06208bc9a63f230cea" translate="yes" xml:space="preserve">
          <source>e.g. &lt;code&gt;eigvals(M)&lt;/code&gt;</source>
          <target state="translated">por ejemplo, &lt;code&gt;eigvals(M)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4cb2425c64d74c8fe9c369c1afc551b11ea45d4a" translate="yes" xml:space="preserve">
          <source>eachindex()</source>
          <target state="translated">eachindex()</target>
        </trans-unit>
        <trans-unit id="04a952be193b6764e2632c57e93cde20ae150eee" translate="yes" xml:space="preserve">
          <source>eachline()</source>
          <target state="translated">eachline()</target>
        </trans-unit>
        <trans-unit id="e2554b8475ab2b54b60a56da1f4ef81c3e32fbb9" translate="yes" xml:space="preserve">
          <source>eachmatch()</source>
          <target state="translated">eachmatch()</target>
        </trans-unit>
        <trans-unit id="258adad1110b22f2c44c06dd5017dd2f805d37d2" translate="yes" xml:space="preserve">
          <source>eltype()</source>
          <target state="translated">eltype()</target>
        </trans-unit>
        <trans-unit id="4bb0566de8ca4848075d64ca6dd14fea11761eb1" translate="yes" xml:space="preserve">
          <source>emacs</source>
          <target state="translated">emacs</target>
        </trans-unit>
        <trans-unit id="21a247519f36d781bd86222ec2f835177e0f0ca4" translate="yes" xml:space="preserve">
          <source>emacsclient</source>
          <target state="translated">emacsclient</target>
        </trans-unit>
        <trans-unit id="aa79d924616501f585415217c5b0d140efd4a624" translate="yes" xml:space="preserve">
          <source>empty!()</source>
          <target state="translated">empty!()</target>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="e97cb28a99c0b11c0852d7d215ddcb799ab70f15" translate="yes" xml:space="preserve">
          <source>end a multi-line comment by immediately preceding the number sign with an equals sign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3abe8cea88159f79f1a2b7eb68c04eba45ac113" translate="yes" xml:space="preserve">
          <source>end multi-line comment</source>
          <target state="translated">final del comentario multilineal</target>
        </trans-unit>
        <trans-unit id="a0975681dff05e7422934d57bb67a308a3934b0a" translate="yes" xml:space="preserve">
          <source>endswith()</source>
          <target state="translated">endswith()</target>
        </trans-unit>
        <trans-unit id="ceb4ac9e2afb44371ead091deb185e73cbc7ccfe" translate="yes" xml:space="preserve">
          <source>eof()</source>
          <target state="translated">eof()</target>
        </trans-unit>
        <trans-unit id="7cb01e85d0feb7872c802203d7ae44373d648524" translate="yes" xml:space="preserve">
          <source>eps()</source>
          <target state="translated">eps()</target>
        </trans-unit>
        <trans-unit id="d252f0eecd7650ba1c914a5bd18fb5346eab0d82" translate="yes" xml:space="preserve">
          <source>equality</source>
          <target state="translated">equality</target>
        </trans-unit>
        <trans-unit id="a4a65ccad96be75e501f259fc69c6ac3d975b624" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;--code-coverage=user&lt;/code&gt;</source>
          <target state="translated">equivalente a &lt;code&gt;--code-coverage=user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b52cf661b3362b5367309a73640cb3eb4855a4e8" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;--track-allocation=user&lt;/code&gt;</source>
          <target state="translated">equivalente a &lt;code&gt;--track-allocation=user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5b3d58ae3cefecbe0b20fb8ec282665961e8fca" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;rem(x,y)&lt;/code&gt;</source>
          <target state="translated">equivalente a &lt;code&gt;rem(x,y)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f9f8c9deec14b47b8bc379c18c846e0b94d4a88" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;y / x&lt;/code&gt;</source>
          <target state="translated">equivalente a &lt;code&gt;y / x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aca90d914519fdb9825352bdc0befb59f7c8510f" translate="yes" xml:space="preserve">
          <source>error()</source>
          <target state="translated">error()</target>
        </trans-unit>
        <trans-unit id="56d36865ebf4c552cef6aaed71debf9552ec9273" translate="yes" xml:space="preserve">
          <source>esc()</source>
          <target state="translated">esc()</target>
        </trans-unit>
        <trans-unit id="c4ddad7fd86eb507ef1f888b53d22087c2c81582" translate="yes" xml:space="preserve">
          <source>escape_string()</source>
          <target state="translated">escape_string()</target>
        </trans-unit>
        <trans-unit id="126fcbf067df4e8c89b261ef4220e7b5fef99c16" translate="yes" xml:space="preserve">
          <source>evalfile()</source>
          <target state="translated">evalfile()</target>
        </trans-unit>
        <trans-unit id="892b0685697f05179c7f28be2c4f71f8511b473b" translate="yes" xml:space="preserve">
          <source>evaluation stops there, but if it got to &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;@isdefined(t)&lt;/code&gt;, it would return &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c24aa266866adb2332323487e5d531ad14a92c" translate="yes" xml:space="preserve">
          <source>execution continues, making &lt;code&gt;s&lt;/code&gt; local to the &lt;code&gt;for&lt;/code&gt; loop body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6b03d36749751faa3b31f4b8e7b5c078aa026a" translate="yes" xml:space="preserve">
          <source>exit()</source>
          <target state="translated">exit()</target>
        </trans-unit>
        <trans-unit id="9a24648fda524fc379cf61c33409df445eca1b15" translate="yes" xml:space="preserve">
          <source>exp()</source>
          <target state="translated">exp()</target>
        </trans-unit>
        <trans-unit id="15f7f3200279519bff82d38b28a89c076fbef5f3" translate="yes" xml:space="preserve">
          <source>exp10()</source>
          <target state="translated">exp10()</target>
        </trans-unit>
        <trans-unit id="1d0db7bd782284dac6e823fd65990c08ce34156a" translate="yes" xml:space="preserve">
          <source>exp2()</source>
          <target state="translated">exp2()</target>
        </trans-unit>
        <trans-unit id="05b99699db7c7814132cb3f24fb0d494c01c3a1b" translate="yes" xml:space="preserve">
          <source>expands with respect to the module in which it is called. This is best seen in the following example:</source>
          <target state="translated">se expande con respecto al módulo en el que se llama.Esto se ve mejor en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="68e8fea58332f15080999d795b35a8efb6ec19b6" translate="yes" xml:space="preserve">
          <source>expm1()</source>
          <target state="translated">expm1()</target>
        </trans-unit>
        <trans-unit id="40700807f2037fc05ddd23c69c1973393f00556f" translate="yes" xml:space="preserve">
          <source>exponent operator</source>
          <target state="translated">operador exponente</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="3fa1085e0435c3506c119c4b1e9be9734c0c722d" translate="yes" xml:space="preserve">
          <source>extrema()</source>
          <target state="translated">extrema()</target>
        </trans-unit>
        <trans-unit id="c769faadfb40b05b3849ae0e94489d475144bce7" translate="yes" xml:space="preserve">
          <source>factorial()</source>
          <target state="translated">factorial()</target>
        </trans-unit>
        <trans-unit id="590475f96a4787ad14dcbd03755a0dee11246caf" translate="yes" xml:space="preserve">
          <source>falses()</source>
          <target state="translated">falses()</target>
        </trans-unit>
        <trans-unit id="c8396ccb19078d56015f97d41bebd88083f24a65" translate="yes" xml:space="preserve">
          <source>fd()</source>
          <target state="translated">fd()</target>
        </trans-unit>
        <trans-unit id="1f15b86c5bdf7f66ce173cc5c70a618bfa4925ae" translate="yes" xml:space="preserve">
          <source>fdio()</source>
          <target state="translated">fdio()</target>
        </trans-unit>
        <trans-unit id="642b8491c15b4c20a91526f17d4631a5091e4888" translate="yes" xml:space="preserve">
          <source>fetch()</source>
          <target state="translated">fetch()</target>
        </trans-unit>
        <trans-unit id="0940b37a9b2ac810168d7b3bce637671bf712a3a" translate="yes" xml:space="preserve">
          <source>fieldcount()</source>
          <target state="translated">fieldcount()</target>
        </trans-unit>
        <trans-unit id="b6b110581b48a632d6d3c739a60b893f16ed3a7c" translate="yes" xml:space="preserve">
          <source>fieldname()</source>
          <target state="translated">fieldname()</target>
        </trans-unit>
        <trans-unit id="2c26ad3f4ac3ab41e282a36b54d0da83bf73fcb1" translate="yes" xml:space="preserve">
          <source>fieldnames()</source>
          <target state="translated">fieldnames()</target>
        </trans-unit>
        <trans-unit id="6d3dcb9cda26c9c30e787ec2a88eac93db005915" translate="yes" xml:space="preserve">
          <source>fieldoffset()</source>
          <target state="translated">fieldoffset()</target>
        </trans-unit>
        <trans-unit id="b5905b6f2880465a05ba97fe20f85a993b6f7cee" translate="yes" xml:space="preserve">
          <source>fieldtypes()</source>
          <target state="translated">fieldtypes()</target>
        </trans-unit>
        <trans-unit id="53f625df40033f95c63e354509568cc2091892f0" translate="yes" xml:space="preserve">
          <source>fill the array &lt;code&gt;A&lt;/code&gt; with the value &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">llena la matriz &lt;code&gt;A&lt;/code&gt; con el valor &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7d357cb495638b9e30bbc0f611154d7b93bd22c" translate="yes" xml:space="preserve">
          <source>fill!()</source>
          <target state="translated">fill!()</target>
        </trans-unit>
        <trans-unit id="b10ef848ebbad89fe9348318d14a018b5aa082fb" translate="yes" xml:space="preserve">
          <source>fill()</source>
          <target state="translated">fill()</target>
        </trans-unit>
        <trans-unit id="775c632056b3dd147952ed491fdab4e6e6cde751" translate="yes" xml:space="preserve">
          <source>filter!()</source>
          <target state="translated">filter!()</target>
        </trans-unit>
        <trans-unit id="0e01e8b9a6d1e6bc3a8eac6e3c34f38603a0061c" translate="yes" xml:space="preserve">
          <source>filter()</source>
          <target state="translated">filter()</target>
        </trans-unit>
        <trans-unit id="123d5c91733d55ec9c590ad7219a23d2ea90d44e" translate="yes" xml:space="preserve">
          <source>finalize()</source>
          <target state="translated">finalize()</target>
        </trans-unit>
        <trans-unit id="53e06ef716db294e8380623ff1d6b08e1834f73d" translate="yes" xml:space="preserve">
          <source>finalizer()</source>
          <target state="translated">finalizer()</target>
        </trans-unit>
        <trans-unit id="8f4e3e3c24bac71b4ffdf2bc0f73246d601766d4" translate="yes" xml:space="preserve">
          <source>finally</source>
          <target state="translated">finally</target>
        </trans-unit>
        <trans-unit id="447eefd8ae275daee5cadb680036581b2085652b" translate="yes" xml:space="preserve">
          <source>findall()</source>
          <target state="translated">findall()</target>
        </trans-unit>
        <trans-unit id="d5808bd15d866bad0ddb65c2a35dbbe2ea62fda3" translate="yes" xml:space="preserve">
          <source>findfirst()</source>
          <target state="translated">findfirst()</target>
        </trans-unit>
        <trans-unit id="250a8fe316df8ff4f441b7ffc8ce0b8e93c47a2c" translate="yes" xml:space="preserve">
          <source>findlast()</source>
          <target state="translated">findlast()</target>
        </trans-unit>
        <trans-unit id="7757c9cabfea70680f29ee44ae8f339383651268" translate="yes" xml:space="preserve">
          <source>findmax!()</source>
          <target state="translated">findmax!()</target>
        </trans-unit>
        <trans-unit id="d177b67386324dc3c3a9d72bfd202078b7a7ad9e" translate="yes" xml:space="preserve">
          <source>findmax()</source>
          <target state="translated">findmax()</target>
        </trans-unit>
        <trans-unit id="1f3c251827bbad3ff2d753c0b99c4f0efe11ed60" translate="yes" xml:space="preserve">
          <source>findmin!()</source>
          <target state="translated">findmin!()</target>
        </trans-unit>
        <trans-unit id="bab7560cdb9c375ffeae268a801f4f7a19eb1aa3" translate="yes" xml:space="preserve">
          <source>findmin()</source>
          <target state="translated">findmin()</target>
        </trans-unit>
        <trans-unit id="33b20adc020e330bc8a2c1266aaceb19452f2b4e" translate="yes" xml:space="preserve">
          <source>findnext()</source>
          <target state="translated">findnext()</target>
        </trans-unit>
        <trans-unit id="c68032ab8f5d12cff972ca0abc1fb12ea4fed3e4" translate="yes" xml:space="preserve">
          <source>findprev()</source>
          <target state="translated">findprev()</target>
        </trans-unit>
        <trans-unit id="e4fc5535775c5f3e04a8421eb2e2a08a1a3faeee" translate="yes" xml:space="preserve">
          <source>first()</source>
          <target state="translated">first()</target>
        </trans-unit>
        <trans-unit id="ffdaa312f7f7fb82fc2638fb90dda3cda47199d6" translate="yes" xml:space="preserve">
          <source>firstindex()</source>
          <target state="translated">firstindex()</target>
        </trans-unit>
        <trans-unit id="666b6cfe38894aa2b52187b373d9ba04070d937c" translate="yes" xml:space="preserve">
          <source>fld()</source>
          <target state="translated">fld()</target>
        </trans-unit>
        <trans-unit id="58e92ff87ca15efe8f3766cdac0c877582b49716" translate="yes" xml:space="preserve">
          <source>fld1()</source>
          <target state="translated">fld1()</target>
        </trans-unit>
        <trans-unit id="7606991e6f276f83e4afd8167f96d68e73a9014c" translate="yes" xml:space="preserve">
          <source>fldmod()</source>
          <target state="translated">fldmod()</target>
        </trans-unit>
        <trans-unit id="75f03d5691287bdd47519b7e8d2008dccb0b405a" translate="yes" xml:space="preserve">
          <source>fldmod1()</source>
          <target state="translated">fldmod1()</target>
        </trans-unit>
        <trans-unit id="b93fa03b99f4b25e3e0f7750e737ca51b698873d" translate="yes" xml:space="preserve">
          <source>flipsign()</source>
          <target state="translated">flipsign()</target>
        </trans-unit>
        <trans-unit id="1c2fa7e102c84d121c7216f892567df44e04fc7a" translate="yes" xml:space="preserve">
          <source>float()</source>
          <target state="translated">float()</target>
        </trans-unit>
        <trans-unit id="2147b1803a5e389d588a8a43bc715afa1e648e34" translate="yes" xml:space="preserve">
          <source>floatmax()</source>
          <target state="translated">floatmax()</target>
        </trans-unit>
        <trans-unit id="257003b8975b4c1aa82635c4aff95453c44da594" translate="yes" xml:space="preserve">
          <source>floatmin()</source>
          <target state="translated">floatmin()</target>
        </trans-unit>
        <trans-unit id="cca5381adecfa38ea3c5cb118a7366bb7b362cf4" translate="yes" xml:space="preserve">
          <source>floor()</source>
          <target state="translated">floor()</target>
        </trans-unit>
        <trans-unit id="6ae25a5c034c5f4841403ca7b40955ad88881f7f" translate="yes" xml:space="preserve">
          <source>floored division; quotient rounded towards &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">divisi&amp;oacute;n por suelo; cociente redondeado hacia &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="403501eefc882c64f009f4c854129a92af05289d" translate="yes" xml:space="preserve">
          <source>flush()</source>
          <target state="translated">flush()</target>
        </trans-unit>
        <trans-unit id="fcb41792f2726b53326f7c5b3a72b068b88f9853" translate="yes" xml:space="preserve">
          <source>fma()</source>
          <target state="translated">fma()</target>
        </trans-unit>
        <trans-unit id="3667f0cd04657f9d66a41bf019d24d39a22f17a5" translate="yes" xml:space="preserve">
          <source>foldl()</source>
          <target state="translated">foldl()</target>
        </trans-unit>
        <trans-unit id="2c834c5fcd8138e285a0f535ca83505ba56bbf51" translate="yes" xml:space="preserve">
          <source>foldr()</source>
          <target state="translated">foldr()</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="990156c49d697c0f4d43f608eb847db102e2bdd3" translate="yes" xml:space="preserve">
          <source>for bare repositories, this is the location of the &quot;git&quot; files.</source>
          <target state="translated">para los repositorios desnudos,esta es la ubicación de los archivos &quot;git&quot;.</target>
        </trans-unit>
        <trans-unit id="2675c4cd40a869de9f77f720b76f930c2bbc5800" translate="yes" xml:space="preserve">
          <source>for bare repositories, this is the location of the repository itself.</source>
          <target state="translated">para los depósitos descubiertos,esta es la ubicación del propio depósito.</target>
        </trans-unit>
        <trans-unit id="6ea06527c8401152cf289da7eea7bb570a893388" translate="yes" xml:space="preserve">
          <source>for normal repositories, this is the location of the &lt;code&gt;.git&lt;/code&gt; folder.</source>
          <target state="translated">para repositorios normales, esta es la ubicaci&amp;oacute;n de la carpeta &lt;code&gt;.git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dbdf5645f42b7da187142b49a785f150a8c0f39" translate="yes" xml:space="preserve">
          <source>for normal repositories, this will typically be the parent directory of the &quot;.git&quot; directory (note: this may be different than the working directory, see &lt;code&gt;workdir&lt;/code&gt; for more details).</source>
          <target state="translated">para los repositorios normales, normalmente ser&amp;aacute; el directorio padre del directorio &quot;.git&quot; (nota: puede ser diferente al directorio de trabajo, consulte &lt;code&gt;workdir&lt;/code&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="2d74d4ad748b789399f645b2e9f0568718ff4692" translate="yes" xml:space="preserve">
          <source>for the particular &lt;code&gt;sampler&lt;/code&gt; returned by &lt;code&gt;Sampler(rng, X, repetition)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165d7206a7f9fc6f73775a66492056418240c22b" translate="yes" xml:space="preserve">
          <source>for which we want to add a number of methods to. We can do this programmatically in the following loop:</source>
          <target state="translated">para lo cual queremos añadir una serie de métodos.Podemos hacer esto programáticamente en el siguiente bucle:</target>
        </trans-unit>
        <trans-unit id="9454ce9651d66b6cca067198611ee56be3fbcfd5" translate="yes" xml:space="preserve">
          <source>foreach()</source>
          <target state="translated">foreach()</target>
        </trans-unit>
        <trans-unit id="50e93b4a42130d1dfed4ac849969c9618de26c7d" translate="yes" xml:space="preserve">
          <source>forward slash divides the argument on its left by the one on its right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa124207640dec1755bf966b6e8fbfe40c3b8c2" translate="yes" xml:space="preserve">
          <source>front()</source>
          <target state="translated">front()</target>
        </trans-unit>
        <trans-unit id="0c6cc2eeaaac8a164c46d05455ec439c9a34c47b" translate="yes" xml:space="preserve">
          <source>fullname()</source>
          <target state="translated">fullname()</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="5f008ea647603fce9b3cbfed7927df000fce146b" translate="yes" xml:space="preserve">
          <source>function names that end with an exclamation mark modify one or more of their arguments by convention</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9efa9681dfd0ae3e6af3c5e35b2b62fc857acd6" translate="yes" xml:space="preserve">
          <source>functionloc()</source>
          <target state="translated">functionloc()</target>
        </trans-unit>
        <trans-unit id="446f359ddd2cb945c397aff66cc61e7489b1b713" translate="yes" xml:space="preserve">
          <source>functions (either syntax, anonymous &amp;amp; do-blocks)</source>
          <target state="translated">funciones (ya sea sintaxis, an&amp;oacute;nimas y do-blocks)</target>
        </trans-unit>
        <trans-unit id="f8e94bdaa92f1ab4cc49bb9323a091891f7a5192" translate="yes" xml:space="preserve">
          <source>functions are lowercase (&lt;a href=&quot;../../base/collections/index#Base.maximum&quot;&gt;&lt;code&gt;maximum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt;&lt;code&gt;convert&lt;/code&gt;&lt;/a&gt;) and, when readable, with multiple words squashed together (&lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt;&lt;code&gt;isequal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/collections/index#Base.haskey&quot;&gt;&lt;code&gt;haskey&lt;/code&gt;&lt;/a&gt;). When necessary, use underscores as word separators. Underscores are also used to indicate a combination of concepts (&lt;code&gt;remotecall_fetch&lt;/code&gt; as a more efficient implementation of &lt;code&gt;fetch(remotecall(...))&lt;/code&gt;) or as modifiers.</source>
          <target state="translated">las funciones est&amp;aacute;n en min&amp;uacute;sculas ( &lt;a href=&quot;../../base/collections/index#Base.maximum&quot;&gt; &lt;code&gt;maximum&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../base/base/index#Base.convert&quot;&gt; &lt;code&gt;convert&lt;/code&gt; ir&lt;/a&gt; ) y, cuando son legibles, con varias palabras juntas ( &lt;a href=&quot;../../base/base/index#Base.isequal&quot;&gt; &lt;code&gt;isequal&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../base/collections/index#Base.haskey&quot;&gt; &lt;code&gt;haskey&lt;/code&gt; &lt;/a&gt; ). Cuando sea necesario, utilice guiones bajos como separadores de palabras. Los &lt;code&gt;remotecall_fetch&lt;/code&gt; tambi&amp;eacute;n se utilizan para indicar una combinaci&amp;oacute;n de conceptos ( remotecall_fetch como una implementaci&amp;oacute;n m&amp;aacute;s eficiente de &lt;code&gt;fetch(remotecall(...))&lt;/code&gt; ) o como modificadores.</target>
        </trans-unit>
        <trans-unit id="74ca015f06ee0c3bce6fa197360722520d1d0a99" translate="yes" xml:space="preserve">
          <source>gcd()</source>
          <target state="translated">gcd()</target>
        </trans-unit>
        <trans-unit id="c99c6f3b40d56bc7adf7acbae469d680ed192823" translate="yes" xml:space="preserve">
          <source>gcdx()</source>
          <target state="translated">gcdx()</target>
        </trans-unit>
        <trans-unit id="1636cfebc994ba147164b64bbdc76985cfe103a5" translate="yes" xml:space="preserve">
          <source>generates ambiguities for anyone who defines a method</source>
          <target state="translated">genera ambigüedades para cualquiera que defina un método</target>
        </trans-unit>
        <trans-unit id="14b379e2c742073506757c3399144ea047185a73" translate="yes" xml:space="preserve">
          <source>generating random values of custom types</source>
          <target state="translated">generando valores aleatorios de tipos personalizados</target>
        </trans-unit>
        <trans-unit id="27ded28f5e11058e654ff29448c61e09e09a995f" translate="yes" xml:space="preserve">
          <source>gensym()</source>
          <target state="translated">gensym()</target>
        </trans-unit>
        <trans-unit id="fc0bed9ef7724b9820e188939ed15d0530b83d25" translate="yes" xml:space="preserve">
          <source>get!()</source>
          <target state="translated">get!()</target>
        </trans-unit>
        <trans-unit id="4a79533a2233d37071096ed5d29c1e9ac6cf66e6" translate="yes" xml:space="preserve">
          <source>get()</source>
          <target state="translated">get()</target>
        </trans-unit>
        <trans-unit id="ea2d7ada13ede709eb5a478cc3e4a8e6cd3ae229" translate="yes" xml:space="preserve">
          <source>getindex()</source>
          <target state="translated">getindex()</target>
        </trans-unit>
        <trans-unit id="758623b6ecf2d0e3ba775e5710879e0595d87c8d" translate="yes" xml:space="preserve">
          <source>getkey()</source>
          <target state="translated">getkey()</target>
        </trans-unit>
        <trans-unit id="960a109e6ef7adb5b541fa5087ef84521b9b7774" translate="yes" xml:space="preserve">
          <source>getproperty()</source>
          <target state="translated">getproperty()</target>
        </trans-unit>
        <trans-unit id="4e80c01e75cf1655038813521698f23953c93e16" translate="yes" xml:space="preserve">
          <source>gid</source>
          <target state="translated">gid</target>
        </trans-unit>
        <trans-unit id="1098e5c8d4297a38aecd3978d27f326626697208" translate="yes" xml:space="preserve">
          <source>git reset [&amp;lt;committish&amp;gt;] [&amp;ndash;] &amp;lt;pathspecs&amp;gt;...</source>
          <target state="translated">git reset [&amp;lt;committish&amp;gt;] [-] &amp;lt;pathspecs&amp;gt; ...</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="3912dd9d8ff861bff202eeb93c7723c681f90e0a" translate="yes" xml:space="preserve">
          <source>global &lt;code&gt;s&lt;/code&gt; is defined with the value &lt;code&gt;0&lt;/code&gt; before the loop is evaluated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b539d84374038b8f6c6cfe6c088c76078ba0a2d9" translate="yes" xml:space="preserve">
          <source>global or local</source>
          <target state="translated">global o local</target>
        </trans-unit>
        <trans-unit id="2fa709f02b0516ccfdcfe5e3158bedc23fbc69c5" translate="yes" xml:space="preserve">
          <source>greater than</source>
          <target state="translated">groter dan</target>
        </trans-unit>
        <trans-unit id="65bc30c904c711751bb0c0f744b001ef044bdfa1" translate="yes" xml:space="preserve">
          <source>greater than or equal to</source>
          <target state="translated">groter dan of gelijk aan</target>
        </trans-unit>
        <trans-unit id="190a43af35a7f073563d04b99f43fedd3f5e7dbf" translate="yes" xml:space="preserve">
          <source>greatest positive common divisor of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;,...</source>
          <target state="translated">m&amp;aacute;ximo com&amp;uacute;n positivo divisor de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , ...</target>
        </trans-unit>
        <trans-unit id="6dbdd59ab542c91f19905b4d8672b5320dcba285" translate="yes" xml:space="preserve">
          <source>half</source>
          <target state="translated">half</target>
        </trans-unit>
        <trans-unit id="724ff903cec855f6116ab1ba2442fc447383052d" translate="yes" xml:space="preserve">
          <source>has the property that</source>
          <target state="translated">tiene la propiedad de que</target>
        </trans-unit>
        <trans-unit id="e071057e2b89f96bef77810fb48f9dfce9eae056" translate="yes" xml:space="preserve">
          <source>hasfield()</source>
          <target state="translated">hasfield()</target>
        </trans-unit>
        <trans-unit id="7f9b91084a526487346a2e5418f8bb5e1c44a4a8" translate="yes" xml:space="preserve">
          <source>hash()</source>
          <target state="translated">hash()</target>
        </trans-unit>
        <trans-unit id="176fd729cdb9ae65933ffb50dce3cda69b400b1d" translate="yes" xml:space="preserve">
          <source>haskey()</source>
          <target state="translated">haskey()</target>
        </trans-unit>
        <trans-unit id="eb91e678fcbaca5070850b45a38a62a29614d87e" translate="yes" xml:space="preserve">
          <source>hasmethod()</source>
          <target state="translated">hasmethod()</target>
        </trans-unit>
        <trans-unit id="830682cfe621360f6e27c877f3637441a477a04e" translate="yes" xml:space="preserve">
          <source>hasproperty()</source>
          <target state="translated">hasproperty()</target>
        </trans-unit>
        <trans-unit id="794daa5801fd456cd139be7b3b8f9068b41381a1" translate="yes" xml:space="preserve">
          <source>hcat()</source>
          <target state="translated">hcat()</target>
        </trans-unit>
        <trans-unit id="7b24f76b1906ddde4c3a2493eaf377e3099fd911" translate="yes" xml:space="preserve">
          <source>hex2bytes!()</source>
          <target state="translated">hex2bytes!()</target>
        </trans-unit>
        <trans-unit id="5a367dcb2f5d76ec44f70b33c6216f0caf868990" translate="yes" xml:space="preserve">
          <source>hex2bytes()</source>
          <target state="translated">hex2bytes()</target>
        </trans-unit>
        <trans-unit id="112254457c4dc77313979033e8b21106b11c30ee" translate="yes" xml:space="preserve">
          <source>host:port information is written to stream &lt;code&gt;out&lt;/code&gt; (defaults to stdout).</source>
          <target state="translated">host: informaci&amp;oacute;n de los puertos est&amp;aacute; escrito para transmitir &lt;code&gt;out&lt;/code&gt; (por defecto a la salida est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="5881490fe364dfc1f054095702412f2038e0e269" translate="yes" xml:space="preserve">
          <source>htol()</source>
          <target state="translated">htol()</target>
        </trans-unit>
        <trans-unit id="67cd5ddd9d0867e6b550f803ad7d581433a4b6d0" translate="yes" xml:space="preserve">
          <source>hton()</source>
          <target state="translated">hton()</target>
        </trans-unit>
        <trans-unit id="f4c40a4cbdf9885e050747d42cb0a9380ba788e2" translate="yes" xml:space="preserve">
          <source>hvcat()</source>
          <target state="translated">hvcat()</target>
        </trans-unit>
        <trans-unit id="e0f89ab4a3b6bbdb9a767a9a28e92e9d8eae0fed" translate="yes" xml:space="preserve">
          <source>hypotenuse of right-angled triangle with other sides of length &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">hipotenusa del tri&amp;aacute;ngulo en &amp;aacute;ngulo recto con otros lados de longitud &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99012a110641febc35316f4cce0355ddbb05fb05" translate="yes" xml:space="preserve">
          <source>identity()</source>
          <target state="translated">identity()</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="e7caf0c3301b18af6203630e33965eb0751d4f66" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;T&lt;/code&gt; is an &lt;code&gt;enum&lt;/code&gt;, the argument type should be equivalent to &lt;code&gt;Cint&lt;/code&gt; or &lt;code&gt;Cuint&lt;/code&gt;</source>
          <target state="translated">si &lt;code&gt;T&lt;/code&gt; es una &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n , el tipo de argumento debe ser equivalente a &lt;code&gt;Cint&lt;/code&gt; o &lt;code&gt;Cuint&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d25c4057c6190eb834847a2bf680cc028e993af6" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;pivot == Val(true)&lt;/code&gt; then &lt;code&gt;F&lt;/code&gt; is a &lt;a href=&quot;#LinearAlgebra.QRPivoted&quot;&gt;&lt;code&gt;QRPivoted&lt;/code&gt;&lt;/a&gt; object,</source>
          <target state="translated">si &lt;code&gt;pivot == Val(true)&lt;/code&gt; entonces &lt;code&gt;F&lt;/code&gt; es un objeto &lt;a href=&quot;#LinearAlgebra.QRPivoted&quot;&gt; &lt;code&gt;QRPivoted&lt;/code&gt; &lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="dd2beb015442865d0b20b7496cd52d871f3b48af" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundDown&lt;/code&gt;, then the result is in the interval $[0, 2&amp;pi;]$. See also &lt;a href=&quot;#Base.Rounding.RoundDown&quot;&gt;&lt;code&gt;RoundDown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">si &lt;code&gt;r == RoundDown&lt;/code&gt; , entonces el resultado est&amp;aacute; en el intervalo $ [0, 2&amp;pi;] $. Consulte tambi&amp;eacute;n &lt;a href=&quot;#Base.Rounding.RoundDown&quot;&gt; &lt;code&gt;RoundDown&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87cf36194e03c12603725ce85e49ab4f49ce1e93" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundNearest&lt;/code&gt;, then the result is in the interval $[-&amp;pi;, &amp;pi;]$. This will generally be the most accurate result. See also &lt;a href=&quot;#Base.Rounding.RoundNearest&quot;&gt;&lt;code&gt;RoundNearest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">si &lt;code&gt;r == RoundNearest&lt;/code&gt; , entonces el resultado est&amp;aacute; en el intervalo $ [- &amp;pi;, &amp;pi;] $. Generalmente, este ser&amp;aacute; el resultado m&amp;aacute;s preciso. Consulte tambi&amp;eacute;n &lt;a href=&quot;#Base.Rounding.RoundNearest&quot;&gt; &lt;code&gt;RoundNearest&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdb73362cb6451c057c5a94a2709481224919f0c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundToZero&lt;/code&gt;, then the result is in the interval $[0, 2&amp;pi;]$ if &lt;code&gt;x&lt;/code&gt; is positive,. or $[-2&amp;pi;, 0]$ otherwise. See also &lt;a href=&quot;#Base.Rounding.RoundToZero&quot;&gt;&lt;code&gt;RoundToZero&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">si &lt;code&gt;r == RoundToZero&lt;/code&gt; , entonces el resultado est&amp;aacute; en el intervalo $ [0, 2&amp;pi;] $ si &lt;code&gt;x&lt;/code&gt; es positivo ,. o $ [- 2&amp;pi;, 0] $ de lo contrario. Consulte tambi&amp;eacute;n &lt;a href=&quot;#Base.Rounding.RoundToZero&quot;&gt; &lt;code&gt;RoundToZero&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8a8481c47639fbf87dfd8c1429e9ae7834d28fb" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;r == RoundUp&lt;/code&gt;, then the result is in the interval $[-2&amp;pi;, 0]$. See also &lt;a href=&quot;#Base.Rounding.RoundUp&quot;&gt;&lt;code&gt;RoundUp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">si &lt;code&gt;r == RoundUp&lt;/code&gt; , entonces el resultado est&amp;aacute; en el intervalo $ [- 2&amp;pi;, 0] $. Consulte tambi&amp;eacute;n &lt;a href=&quot;#Base.Rounding.RoundUp&quot;&gt; &lt;code&gt;RoundUp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7afd064a23f8f30562be57f55b9f53a7907b1a60" translate="yes" xml:space="preserve">
          <source>if a new value has a different type than the type of the constant then an error is thrown:</source>
          <target state="translated">si un nuevo valor tiene un tipo diferente al tipo de la constante,entonces se lanza un error:</target>
        </trans-unit>
        <trans-unit id="f7de3adec49c33677d8f191e7267724cffa4c8b1" translate="yes" xml:space="preserve">
          <source>if a new value has the same type as the constant then a warning is printed:</source>
          <target state="translated">si un nuevo valor tiene el mismo tipo que la constante,entonces se imprime una advertencia:</target>
        </trans-unit>
        <trans-unit id="88762f7edbea2402020056cff22bca364859540b" translate="yes" xml:space="preserve">
          <source>if an assignment would not result in the change of variable value no message is given:</source>
          <target state="translated">si una asignación no resultara en el cambio de valor de la variable no se da ningún mensaje:</target>
        </trans-unit>
        <trans-unit id="8f82e658c795671f54a129be1f6a1f57bfe9f927" translate="yes" xml:space="preserve">
          <source>if global &lt;code&gt;x&lt;/code&gt; is &lt;em&gt;defined&lt;/em&gt;, the assignment is considered ambiguous:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f972cae5b3dea27a82cdb62790201ad37fe1bc" translate="yes" xml:space="preserve">
          <source>if global &lt;code&gt;x&lt;/code&gt; is &lt;em&gt;undefined&lt;/em&gt;, a new local named &lt;code&gt;x&lt;/code&gt; is created in the scope of the assignment;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9940935ffb718d63bb83802b8a4df467eb4ca3bc" translate="yes" xml:space="preserve">
          <source>ignorestatus()</source>
          <target state="translated">ignorestatus()</target>
        </trans-unit>
        <trans-unit id="42a0d3068dfe7945d084813fd66eb69745020815" translate="yes" xml:space="preserve">
          <source>im</source>
          <target state="translated">im</target>
        </trans-unit>
        <trans-unit id="18d7b60c3bd12f565b432877db3958c25a4de28a" translate="yes" xml:space="preserve">
          <source>imag()</source>
          <target state="translated">imag()</target>
        </trans-unit>
        <trans-unit id="5fc2dfd50f0d4c9a9ae6bac7ca82df6ff6e617f9" translate="yes" xml:space="preserve">
          <source>implement &lt;a href=&quot;../../stdlib/distributed/index#Distributed.launch&quot;&gt;&lt;code&gt;launch&lt;/code&gt;&lt;/a&gt;, a method responsible for launching new workers</source>
          <target state="translated">Implementar &lt;a href=&quot;../../stdlib/distributed/index#Distributed.launch&quot;&gt; &lt;code&gt;launch&lt;/code&gt; &lt;/a&gt; , un m&amp;eacute;todo responsable de lanzar nuevos trabajadores.</target>
        </trans-unit>
        <trans-unit id="6fd13d5b570f05ec7761aef3bed45db80c363741" translate="yes" xml:space="preserve">
          <source>implement &lt;a href=&quot;../../stdlib/distributed/index#Distributed.manage&quot;&gt;&lt;code&gt;manage&lt;/code&gt;&lt;/a&gt;, which is called at various events during a worker's lifetime (for example, sending an interrupt signal)</source>
          <target state="translated">implementar &lt;a href=&quot;../../stdlib/distributed/index#Distributed.manage&quot;&gt; &lt;code&gt;manage&lt;/code&gt; &lt;/a&gt; , que se llama en varios eventos durante la vida de un trabajador (por ejemplo, enviar una se&amp;ntilde;al de interrupci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="6d16473b37dc980cdc7bfcbf95f3994315397f39" translate="yes" xml:space="preserve">
          <source>in &lt;em&gt;interactive&lt;/em&gt; contexts (REPL, notebooks), the global variable &lt;code&gt;x&lt;/code&gt; is assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f07ab2efc1ea4a25386d18a02b701d7914f810" translate="yes" xml:space="preserve">
          <source>in &lt;em&gt;non-interactive&lt;/em&gt; contexts (files, eval), an ambiguity warning is printed and a new local is created;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fd5ec6463d3dae9adc0a4899e74df3aecb6f04" translate="yes" xml:space="preserve">
          <source>in C:</source>
          <target state="translated">en C:</target>
        </trans-unit>
        <trans-unit id="e398199ef23f54649349fe1cc6358ad8e439dcc9" translate="yes" xml:space="preserve">
          <source>in Julia:</source>
          <target state="translated">en Julia:</target>
        </trans-unit>
        <trans-unit id="93de9daa32475742cf31746643dba3e18c8be4d5" translate="yes" xml:space="preserve">
          <source>in()</source>
          <target state="translated">in()</target>
        </trans-unit>
        <trans-unit id="86c2d513f250be3984b3ac5733cf9c5b817cc800" translate="yes" xml:space="preserve">
          <source>include()</source>
          <target state="translated">include()</target>
        </trans-unit>
        <trans-unit id="3fd87494853b6f159587d0ef783ef59b051b972f" translate="yes" xml:space="preserve">
          <source>include_dependency()</source>
          <target state="translated">include_dependency()</target>
        </trans-unit>
        <trans-unit id="94e1cc62b741e68f1fcc296370281ebdd074683e" translate="yes" xml:space="preserve">
          <source>include_string()</source>
          <target state="translated">include_string()</target>
        </trans-unit>
        <trans-unit id="d36c42eba54ad5cea0adb52c1a93e199215f2342" translate="yes" xml:space="preserve">
          <source>indent the current line on the left</source>
          <target state="translated">sangrar la línea actual a la izquierda</target>
        </trans-unit>
        <trans-unit id="62ad198c72a78a481599285e78216d6bc3c92849" translate="yes" xml:space="preserve">
          <source>indent the current line on the right</source>
          <target state="translated">sangrar la línea actual a la derecha</target>
        </trans-unit>
        <trans-unit id="e8a5df20668d3daa195d9e1bcb43770e449ed22d" translate="yes" xml:space="preserve">
          <source>index an entire dimension (firstindex:lastindex), see &lt;a href=&quot;../arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">indexar una dimensi&amp;oacute;n completa (firstindex: lastindex), ver &lt;a href=&quot;../arrays/index#Base.Colon&quot;&gt; &lt;code&gt;Colon&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="19799944790dc729264727dcfeb639cb55117099" translate="yes" xml:space="preserve">
          <source>indexin()</source>
          <target state="translated">indexin()</target>
        </trans-unit>
        <trans-unit id="3deba63de536e5ab24845e4994208abf43b807bd" translate="yes" xml:space="preserve">
          <source>indicates that &lt;code&gt;Tuple&lt;/code&gt; &quot;wins&quot; over zero-dimensional arrays (the output container will be a tuple). It is worth noting that you do not need to (and should not) define both argument orders of this call; defining one is sufficient no matter what order the user supplies the arguments in.</source>
          <target state="translated">indica que &lt;code&gt;Tuple&lt;/code&gt; &quot;gana&quot; sobre matrices de dimensi&amp;oacute;n cero (el contenedor de salida ser&amp;aacute; una tupla). Vale la pena se&amp;ntilde;alar que no es necesario (y no debe) definir ambos &amp;oacute;rdenes de argumentos de esta llamada; definir uno es suficiente sin importar en qu&amp;eacute; orden el usuario proporcione los argumentos.</target>
        </trans-unit>
        <trans-unit id="0e4e99d2a2ffc78149943fd8081f29204707c6d4" translate="yes" xml:space="preserve">
          <source>indicates the sign of &lt;code&gt;x&lt;/code&gt;, returning -1, 0, or +1</source>
          <target state="translated">indica el signo de &lt;code&gt;x&lt;/code&gt; , devolviendo -1, 0 o +1</target>
        </trans-unit>
        <trans-unit id="93896bbd212e84e5f037bdbd8871dfe3588c53c4" translate="yes" xml:space="preserve">
          <source>indicates whether the sign bit is on (true) or off (false)</source>
          <target state="translated">indica si el bit del signo está encendido (verdadero)o apagado (falso)</target>
        </trans-unit>
        <trans-unit id="9d5452c9cd006d18b681cb51924aa99094f3cd90" translate="yes" xml:space="preserve">
          <source>inequality</source>
          <target state="translated">inequality</target>
        </trans-unit>
        <trans-unit id="b4274ecb94b8d2f5e6a338c84f58f03e0c3c08f7" translate="yes" xml:space="preserve">
          <source>inode</source>
          <target state="translated">inode</target>
        </trans-unit>
        <trans-unit id="c355e90bda1dd2c94676e4eb0d0240d488dbc828" translate="yes" xml:space="preserve">
          <source>insert last word from previous history entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351e696ce4976efcefecff02bb199b3a71049487" translate="yes" xml:space="preserve">
          <source>insert!()</source>
          <target state="translated">insert!()</target>
        </trans-unit>
        <trans-unit id="b4dcaddb0e5c415aad4d89764fea3f2c347e6f7d" translate="yes" xml:space="preserve">
          <source>instances()</source>
          <target state="translated">instances()</target>
        </trans-unit>
        <trans-unit id="a45bde61ef4baf29b47fac6b1077599565436a80" translate="yes" xml:space="preserve">
          <source>instead of only calling &lt;code&gt;schedule&lt;/code&gt;, you will see a five second pause before the next input prompt appears. That is because the REPL is waiting for &lt;code&gt;t&lt;/code&gt; to finish before proceeding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="translated">en lugar de:</target>
        </trans-unit>
        <trans-unit id="9cbc70be6304207ee52f532a9a25e80dacb8778d" translate="yes" xml:space="preserve">
          <source>instead, especially if &lt;code&gt;T&lt;/code&gt; is not used in the function body. Even if &lt;code&gt;T&lt;/code&gt; is used, it can be replaced with &lt;a href=&quot;../../base/base/index#Core.typeof&quot;&gt;&lt;code&gt;typeof(x)&lt;/code&gt;&lt;/a&gt; if convenient. There is no performance difference. Note that this is not a general caution against static parameters, just against uses where they are not needed.</source>
          <target state="translated">en cambio, especialmente si &lt;code&gt;T&lt;/code&gt; no se usa en el cuerpo de la funci&amp;oacute;n. Incluso si se usa &lt;code&gt;T&lt;/code&gt; , se puede reemplazar con &lt;a href=&quot;../../base/base/index#Core.typeof&quot;&gt; &lt;code&gt;typeof(x)&lt;/code&gt; &lt;/a&gt; si es conveniente. No hay diferencia de rendimiento. Tenga en cuenta que esta no es una advertencia general contra los par&amp;aacute;metros est&amp;aacute;ticos, solo contra los usos donde no son necesarios.</target>
        </trans-unit>
        <trans-unit id="8213fb140eedd02c41d008cfabfdf9c6ed6adaf0" translate="yes" xml:space="preserve">
          <source>instead. Note that with this strategy &lt;a href=&quot;../../base/constants/index#Base.PROGRAM_FILE&quot;&gt;&lt;code&gt;PROGRAM_FILE&lt;/code&gt;&lt;/a&gt; will not be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91dfcf14690fcff0e4529139cbb6ebbedfbbcc6" translate="yes" xml:space="preserve">
          <source>integer divide</source>
          <target state="translated">división entera</target>
        </trans-unit>
        <trans-unit id="c5df753f5e8efd7f7cb76ea61431509a994bce9f" translate="yes" xml:space="preserve">
          <source>interactive prompt (REPL)</source>
          <target state="translated">la pregunta interactiva (REPL)</target>
        </trans-unit>
        <trans-unit id="52414136c101d2f137cb185ba5a213cdd17c7781" translate="yes" xml:space="preserve">
          <source>intersect!()</source>
          <target state="translated">intersect!()</target>
        </trans-unit>
        <trans-unit id="b09f5de5d3937c77d1cb36bd3af0d57e7f26f844" translate="yes" xml:space="preserve">
          <source>intersect()</source>
          <target state="translated">intersect()</target>
        </trans-unit>
        <trans-unit id="f434964e4d59caa7c9655d81a3bf5c19468de0be" translate="yes" xml:space="preserve">
          <source>inv()</source>
          <target state="translated">inv()</target>
        </trans-unit>
        <trans-unit id="9bbe9ff4b40bb17cea073a0f96c874a1a2890b8c" translate="yes" xml:space="preserve">
          <source>inverse divide</source>
          <target state="translated">divisiones inversas</target>
        </trans-unit>
        <trans-unit id="a0d9db29b1bb3110c18ab0bdd3cc888148a77c42" translate="yes" xml:space="preserve">
          <source>invmod()</source>
          <target state="translated">invmod()</target>
        </trans-unit>
        <trans-unit id="97ffab2e25f85be9c67b5132fd91137d33bd126d" translate="yes" xml:space="preserve">
          <source>invoke macro &lt;code&gt;m&lt;/code&gt;; followed by space-separated expressions</source>
          <target state="translated">invocar macro &lt;code&gt;m&lt;/code&gt; ; seguido de expresiones separadas por espacios</target>
        </trans-unit>
        <trans-unit id="a6c79b712a4f6c799f306fbfa31decc99ef23ed6" translate="yes" xml:space="preserve">
          <source>invokelatest()</source>
          <target state="translated">invokelatest()</target>
        </trans-unit>
        <trans-unit id="72d872ce37797fcb87144b52933775994a66a4b7" translate="yes" xml:space="preserve">
          <source>invperm()</source>
          <target state="translated">invperm()</target>
        </trans-unit>
        <trans-unit id="d768ecba33f8f5029c26f45eba430faea4ea5bf4" translate="yes" xml:space="preserve">
          <source>invpermute!()</source>
          <target state="translated">invpermute!()</target>
        </trans-unit>
        <trans-unit id="8e3ef4476f9bb05246885107c9307999f19cfd16" translate="yes" xml:space="preserve">
          <source>is always recursive. For a non recursive macro version, see &lt;a href=&quot;#Base.@macroexpand1&quot;&gt;&lt;code&gt;@macroexpand1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">es siempre recursivo. Para una versi&amp;oacute;n de macro no recursiva, consulte &lt;a href=&quot;#Base.@macroexpand1&quot;&gt; &lt;code&gt;@macroexpand1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">es equivalente a</target>
        </trans-unit>
        <trans-unit id="91d0849c8785bafdf89ab5c842bbfd48f9a63332" translate="yes" xml:space="preserve">
          <source>is equivalent to &lt;code&gt;map(x-&amp;gt;2x, 1:10)&lt;/code&gt;.</source>
          <target state="translated">es equivalente a &lt;code&gt;map(x-&amp;gt;2x, 1:10)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">es equivalente a:</target>
        </trans-unit>
        <trans-unit id="1e8a6c8487b53a26a521c040d506bfa3fd0090cb" translate="yes" xml:space="preserve">
          <source>is faster than:</source>
          <target state="translated">es más rápido que:</target>
        </trans-unit>
        <trans-unit id="decefe8bc332aded74d097e6dd5eda511a723e0c" translate="yes" xml:space="preserve">
          <source>is preferred over</source>
          <target state="translated">es preferible a</target>
        </trans-unit>
        <trans-unit id="f47651713bff6579349bba86d266bf44a8131d9c" translate="yes" xml:space="preserve">
          <source>is translated into:</source>
          <target state="translated">se traduce en:</target>
        </trans-unit>
        <trans-unit id="a21ca55d4cd5b0946792553a0bbfd25d20e64ab0" translate="yes" xml:space="preserve">
          <source>isabstracttype()</source>
          <target state="translated">isabstracttype()</target>
        </trans-unit>
        <trans-unit id="d408dab49659e73c8e89061bc4a7ec9daa982ae4" translate="yes" xml:space="preserve">
          <source>isapprox()</source>
          <target state="translated">isapprox()</target>
        </trans-unit>
        <trans-unit id="cfff5b78ef17bdf9b4afa4d1ef70e2006f04dc34" translate="yes" xml:space="preserve">
          <source>isascii()</source>
          <target state="translated">isascii()</target>
        </trans-unit>
        <trans-unit id="e76f92bb851b11001cba03c4efb1df035ae90063" translate="yes" xml:space="preserve">
          <source>isassigned()</source>
          <target state="translated">isassigned()</target>
        </trans-unit>
        <trans-unit id="8af61fb8fe0f99bd972d0850424c30a9aafeb51c" translate="yes" xml:space="preserve">
          <source>isbits()</source>
          <target state="translated">isbits()</target>
        </trans-unit>
        <trans-unit id="0348845c4bdc8914b840cb74a0c429c1209baad2" translate="yes" xml:space="preserve">
          <source>isbitstype()</source>
          <target state="translated">isbitstype()</target>
        </trans-unit>
        <trans-unit id="534cefb7966965eef836fa657fde8a1f50eb9fe4" translate="yes" xml:space="preserve">
          <source>isconcretetype()</source>
          <target state="translated">isconcretetype()</target>
        </trans-unit>
        <trans-unit id="3ed47e9691c0ab29af3c6c6f8d8179cc12a0d45e" translate="yes" xml:space="preserve">
          <source>isconst()</source>
          <target state="translated">isconst()</target>
        </trans-unit>
        <trans-unit id="94a71a7df25cc0133b8278a60bf4f9f641488336" translate="yes" xml:space="preserve">
          <source>isdispatchtuple()</source>
          <target state="translated">isdispatchtuple()</target>
        </trans-unit>
        <trans-unit id="2c5d5085bfd558681ffc039daae1c6727c92ad08" translate="yes" xml:space="preserve">
          <source>isempty()</source>
          <target state="translated">isempty()</target>
        </trans-unit>
        <trans-unit id="93bedd88513933f5389f306938a0322c4a4bfc6b" translate="yes" xml:space="preserve">
          <source>isequal()</source>
          <target state="translated">isequal()</target>
        </trans-unit>
        <trans-unit id="c16415f072ad82761ff09d4256b1e709ef3b6f95" translate="yes" xml:space="preserve">
          <source>iseven()</source>
          <target state="translated">iseven()</target>
        </trans-unit>
        <trans-unit id="e8378352b6188aa946bffc68303a51a65a173fce" translate="yes" xml:space="preserve">
          <source>isfinite()</source>
          <target state="translated">isfinite()</target>
        </trans-unit>
        <trans-unit id="4283975ac5715a6c530d99154a628959b2f12a04" translate="yes" xml:space="preserve">
          <source>isimmutable()</source>
          <target state="translated">isimmutable()</target>
        </trans-unit>
        <trans-unit id="27064c90e2af21aa0235d85cbebb5867cb35aa87" translate="yes" xml:space="preserve">
          <source>isinf()</source>
          <target state="translated">isinf()</target>
        </trans-unit>
        <trans-unit id="bdd59641b3fb0f9e79d5570c21e7a57841b8dd12" translate="yes" xml:space="preserve">
          <source>isinteger()</source>
          <target state="translated">isinteger()</target>
        </trans-unit>
        <trans-unit id="089f1826d4c030ccfca8106be374396cadaa427f" translate="yes" xml:space="preserve">
          <source>isinteractive()</source>
          <target state="translated">isinteractive()</target>
        </trans-unit>
        <trans-unit id="315a5544807f12325a96550904a6020e1d49fc8a" translate="yes" xml:space="preserve">
          <source>isless()</source>
          <target state="translated">isless()</target>
        </trans-unit>
        <trans-unit id="5e4ab0ff4aec4addd6f9b7e54c3a9bc8ce6bde6f" translate="yes" xml:space="preserve">
          <source>islocked()</source>
          <target state="translated">islocked()</target>
        </trans-unit>
        <trans-unit id="3e3e432372bf9e3cc249fbcae9caae5859723c3e" translate="yes" xml:space="preserve">
          <source>ismarked()</source>
          <target state="translated">ismarked()</target>
        </trans-unit>
        <trans-unit id="a0dbfb008000c85f1ad38dab021b4db5573fea14" translate="yes" xml:space="preserve">
          <source>ismissing()</source>
          <target state="translated">ismissing()</target>
        </trans-unit>
        <trans-unit id="113c9022412b01a493a9113ebbed7ce2103fef30" translate="yes" xml:space="preserve">
          <source>isnan()</source>
          <target state="translated">isnan()</target>
        </trans-unit>
        <trans-unit id="ec5ecbb952a6a961376fcffdf6063828cfa1f693" translate="yes" xml:space="preserve">
          <source>isnothing()</source>
          <target state="translated">isnothing()</target>
        </trans-unit>
        <trans-unit id="29e96ef514fa623dab75efcc116f2cdd9fdc56c0" translate="yes" xml:space="preserve">
          <source>isodd()</source>
          <target state="translated">isodd()</target>
        </trans-unit>
        <trans-unit id="2d008e2a213d8e1fc9a4d60bfe333fcb8401f8d7" translate="yes" xml:space="preserve">
          <source>isone()</source>
          <target state="translated">isone()</target>
        </trans-unit>
        <trans-unit id="4d3556fe373fbb166c7625f852f8b3f524ddb6cb" translate="yes" xml:space="preserve">
          <source>isopen()</source>
          <target state="translated">isopen()</target>
        </trans-unit>
        <trans-unit id="635c97b26a0f7ba27432899e7b1b584807bebff5" translate="yes" xml:space="preserve">
          <source>isperm()</source>
          <target state="translated">isperm()</target>
        </trans-unit>
        <trans-unit id="e0ecd57ad991da02458411f70f0517a07ca943c3" translate="yes" xml:space="preserve">
          <source>ispow2()</source>
          <target state="translated">ispow2()</target>
        </trans-unit>
        <trans-unit id="4a28fcbcc01cece3e734655608ee5f2a2c7fde45" translate="yes" xml:space="preserve">
          <source>isprimitivetype()</source>
          <target state="translated">isprimitivetype()</target>
        </trans-unit>
        <trans-unit id="dcfffe7f3e18f7e83986f64eabd805cdbd20ea26" translate="yes" xml:space="preserve">
          <source>isqrt()</source>
          <target state="translated">isqrt()</target>
        </trans-unit>
        <trans-unit id="205c6de6c1039eb31d6e4fb7cf27d8b22f385f4d" translate="yes" xml:space="preserve">
          <source>isreadable()</source>
          <target state="translated">isreadable()</target>
        </trans-unit>
        <trans-unit id="51eb386f3cb466029d603031648f335ab367c701" translate="yes" xml:space="preserve">
          <source>isreadonly()</source>
          <target state="translated">isreadonly()</target>
        </trans-unit>
        <trans-unit id="863283caf11449a2ed4abed5d4ec6c2f2db16deb" translate="yes" xml:space="preserve">
          <source>isready()</source>
          <target state="translated">isready()</target>
        </trans-unit>
        <trans-unit id="f2a2b41b9a025956e41afcbfaa4aec61ff60af30" translate="yes" xml:space="preserve">
          <source>isreal()</source>
          <target state="translated">isreal()</target>
        </trans-unit>
        <trans-unit id="15fcfffe668a2fd204f1f3c025d49f564113295e" translate="yes" xml:space="preserve">
          <source>issetequal()</source>
          <target state="translated">issetequal()</target>
        </trans-unit>
        <trans-unit id="c27465698e202ae7e5693541a8d80fd3163bd8a7" translate="yes" xml:space="preserve">
          <source>issorted()</source>
          <target state="translated">issorted()</target>
        </trans-unit>
        <trans-unit id="45db74e9bd37470a766f45a1dc0ef1c3b02420aa" translate="yes" xml:space="preserve">
          <source>isstructtype()</source>
          <target state="translated">isstructtype()</target>
        </trans-unit>
        <trans-unit id="d5c2f313a0b82e6d052f06709c51b9498b6ce1dd" translate="yes" xml:space="preserve">
          <source>issubnormal()</source>
          <target state="translated">issubnormal()</target>
        </trans-unit>
        <trans-unit id="ac912cf78b8dfa941f4c73e01319efdd9ffc6966" translate="yes" xml:space="preserve">
          <source>issubset()</source>
          <target state="translated">issubset()</target>
        </trans-unit>
        <trans-unit id="3e4607f6cf991b667fb50038bb1d504b794a9334" translate="yes" xml:space="preserve">
          <source>istaskdone()</source>
          <target state="translated">istaskdone()</target>
        </trans-unit>
        <trans-unit id="47b0a7ba1c138e64e365976cb551171671f81499" translate="yes" xml:space="preserve">
          <source>istaskstarted()</source>
          <target state="translated">istaskstarted()</target>
        </trans-unit>
        <trans-unit id="87c21169297a84470c8db63f8cbd64abf241e6b4" translate="yes" xml:space="preserve">
          <source>isvalid()</source>
          <target state="translated">isvalid()</target>
        </trans-unit>
        <trans-unit id="3701a19886cd59d1e84bb839a73c74225e0197bf" translate="yes" xml:space="preserve">
          <source>iswritable()</source>
          <target state="translated">iswritable()</target>
        </trans-unit>
        <trans-unit id="9923835a9b9509766b0b898edfc8adaed6bfb33b" translate="yes" xml:space="preserve">
          <source>iszero()</source>
          <target state="translated">iszero()</target>
        </trans-unit>
        <trans-unit id="afdecb15069e19ca329c5a2393411dafe7319f0e" translate="yes" xml:space="preserve">
          <source>it's better to use available generic functions:</source>
          <target state="translated">es mejor utilizar las funciones genéricas disponibles:</target>
        </trans-unit>
        <trans-unit id="cd31a0680b70291b71cfbef007b7361e449e40a1" translate="yes" xml:space="preserve">
          <source>iterate()</source>
          <target state="translated">iterate()</target>
        </trans-unit>
        <trans-unit id="4c6aa8df8108df84b6910dc386655e9d513ea923" translate="yes" xml:space="preserve">
          <source>join()</source>
          <target state="translated">join()</target>
        </trans-unit>
        <trans-unit id="22ab78a626dbe93471802dadfc4aa10617208722" translate="yes" xml:space="preserve">
          <source>julia&amp;gt; isless(&quot;Red&quot;, &quot;Blue&quot;) false ```</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc70847f217cc60e2011164ef83d568e60ef426" translate="yes" xml:space="preserve">
          <source>julia&amp;gt; map!(v -&amp;gt; v-1, values(d)) Dict{Symbol,Int64} with 2 entries: :a =&amp;gt; 0 :b =&amp;gt; 1 ```</source>
          <target state="translated">julia&amp;gt; map! (v -&amp;gt; v-1, valores (d)) Dict {Symbol, Int64} con 2 entradas:: a =&amp;gt; 0: b =&amp;gt; 1 ''</target>
        </trans-unit>
        <trans-unit id="44844b8aa9d746a5d4c101a588644394115d190f" translate="yes" xml:space="preserve">
          <source>kate</source>
          <target state="translated">kate</target>
        </trans-unit>
        <trans-unit id="02c5870c446f2d6370d3611295dcf86df5b32cea" translate="yes" xml:space="preserve">
          <source>keys()</source>
          <target state="translated">keys()</target>
        </trans-unit>
        <trans-unit id="aa74f3c1b4d5fad40d84f5dcc6506422af0811cd" translate="yes" xml:space="preserve">
          <source>keytype()</source>
          <target state="translated">keytype()</target>
        </trans-unit>
        <trans-unit id="e29f2c163499322b409b7d20f5c249c3d72179ce" translate="yes" xml:space="preserve">
          <source>kill()</source>
          <target state="translated">kill()</target>
        </trans-unit>
        <trans-unit id="9dfcf9d7aa8c7d1ea2bac384b5d269ad6b3a5daf" translate="yes" xml:space="preserve">
          <source>kron()</source>
          <target state="translated">kron()</target>
        </trans-unit>
        <trans-unit id="c4be3ef52092871f14807595b498a34fb1b63134" translate="yes" xml:space="preserve">
          <source>last()</source>
          <target state="translated">last()</target>
        </trans-unit>
        <trans-unit id="cd38db9d4157fa3aa934f9e7504d2863b95fd251" translate="yes" xml:space="preserve">
          <source>lastindex()</source>
          <target state="translated">lastindex()</target>
        </trans-unit>
        <trans-unit id="cf18cebb077dc7117de2a2f47ead57b5aba0012d" translate="yes" xml:space="preserve">
          <source>launching worker processes in a cluster environment</source>
          <target state="translated">poner en marcha procesos de trabajo en un entorno de conglomerados</target>
        </trans-unit>
        <trans-unit id="c79f3bac0cbca7ca5639e6cc7ebd3fb412b3a359" translate="yes" xml:space="preserve">
          <source>lcm()</source>
          <target state="translated">lcm()</target>
        </trans-unit>
        <trans-unit id="bef50cf38facec9180350a415035852e578b5acf" translate="yes" xml:space="preserve">
          <source>leading_ones()</source>
          <target state="translated">leading_ones()</target>
        </trans-unit>
        <trans-unit id="a2f8926e3877aa7cad236c11ccd3ab9f3c051bec" translate="yes" xml:space="preserve">
          <source>leading_zeros()</source>
          <target state="translated">leading_zeros()</target>
        </trans-unit>
        <trans-unit id="b6660dd8548d808deb0f4b77f72e0f4b27fc95b3" translate="yes" xml:space="preserve">
          <source>least positive common multiple of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;,...</source>
          <target state="translated">m&amp;iacute;nimo com&amp;uacute;n m&amp;uacute;ltiplo positivo de &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , ...</target>
        </trans-unit>
        <trans-unit id="12126f713e2c6e2b378ad7286a6bc4fa4da0d2f3" translate="yes" xml:space="preserve">
          <source>length()</source>
          <target state="translated">length()</target>
        </trans-unit>
        <trans-unit id="6bb2aa987a1cdc7525f5672334ed54a5cee446c5" translate="yes" xml:space="preserve">
          <source>less than</source>
          <target state="translated">menos de</target>
        </trans-unit>
        <trans-unit id="1b709205d85df56c7a244034c07e09a1af509871" translate="yes" xml:space="preserve">
          <source>less than or equal to</source>
          <target state="translated">menor o igual a</target>
        </trans-unit>
        <trans-unit id="0262f9bb6ecbef4efbae97193c08ec335698a205" translate="yes" xml:space="preserve">
          <source>let</source>
          <target state="translated">let</target>
        </trans-unit>
        <trans-unit id="939bb46a04c3640c8c427e92b1b557e882e2d2a0" translate="yes" xml:space="preserve">
          <source>local</source>
          <target state="translated">local</target>
        </trans-unit>
        <trans-unit id="b912a5ed267f3302c5d0f1c051dfe431011e50ac" translate="yes" xml:space="preserve">
          <source>local (hard)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea61cc5dd0c686bca75868825ef2ca4aaf03dd70" translate="yes" xml:space="preserve">
          <source>local (soft)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cbe20abd79dd94f906c947f5fe4d9c18a7507a" translate="yes" xml:space="preserve">
          <source>lock()</source>
          <target state="translated">lock()</target>
        </trans-unit>
        <trans-unit id="c8b2576f2263d9aa15be0b307c058770b8769ab3" translate="yes" xml:space="preserve">
          <source>log()</source>
          <target state="translated">log()</target>
        </trans-unit>
        <trans-unit id="80a5327ef8ad775cd52a33fd54f5ffb19a33e6d6" translate="yes" xml:space="preserve">
          <source>log10()</source>
          <target state="translated">log10()</target>
        </trans-unit>
        <trans-unit id="843b4682fb9c778121c7d40114b882ae4137237d" translate="yes" xml:space="preserve">
          <source>log1p()</source>
          <target state="translated">log1p()</target>
        </trans-unit>
        <trans-unit id="76b275965a2528fccc2c2dafd2d1328999b5e4fa" translate="yes" xml:space="preserve">
          <source>log2()</source>
          <target state="translated">log2()</target>
        </trans-unit>
        <trans-unit id="8900a76173f2f47cd794f4fdcf7618260a4125e5" translate="yes" xml:space="preserve">
          <source>logical/arithmetic shift left</source>
          <target state="translated">cambio lógico/aritmético a la izquierda</target>
        </trans-unit>
        <trans-unit id="0328000785d6fe4489370eaf65c2e64ceb1f770a" translate="yes" xml:space="preserve">
          <source>lpad()</source>
          <target state="translated">lpad()</target>
        </trans-unit>
        <trans-unit id="806fcb9360cf1ef5bb43feba968d972bfc6f6b5d" translate="yes" xml:space="preserve">
          <source>lstrip()</source>
          <target state="translated">lstrip()</target>
        </trans-unit>
        <trans-unit id="186d9e65bbfc72eca4af24b48109f537fec743d4" translate="yes" xml:space="preserve">
          <source>ltoh()</source>
          <target state="translated">ltoh()</target>
        </trans-unit>
        <trans-unit id="78f3a3d9d6e4d907a7d12e475d0a751d6b7e256b" translate="yes" xml:space="preserve">
          <source>macro</source>
          <target state="translated">macro</target>
        </trans-unit>
        <trans-unit id="13e9b1c5b7b970ee2252c894c7c769fbb82fad7d" translate="yes" xml:space="preserve">
          <source>macroexpand()</source>
          <target state="translated">macroexpand()</target>
        </trans-unit>
        <trans-unit id="f4cf532d456961a72c8bf8449cdf50cad4bd6666" translate="yes" xml:space="preserve">
          <source>managing events during the lifetime of each worker</source>
          <target state="translated">gestionar los acontecimientos durante la vida de cada trabajador</target>
        </trans-unit>
        <trans-unit id="53a103abfaed1cd6d91403e44014eab1440ab841" translate="yes" xml:space="preserve">
          <source>map!()</source>
          <target state="translated">map!()</target>
        </trans-unit>
        <trans-unit id="63931ac28a1466150a780334eb33725ff190c35f" translate="yes" xml:space="preserve">
          <source>map()</source>
          <target state="translated">map()</target>
        </trans-unit>
        <trans-unit id="daf75449ecf0fe651ab2c3a28e2512094598ef31" translate="yes" xml:space="preserve">
          <source>mapfoldl()</source>
          <target state="translated">mapfoldl()</target>
        </trans-unit>
        <trans-unit id="bffaa5ddb02f5167267fc14148cfc1b9fc1061e8" translate="yes" xml:space="preserve">
          <source>mapfoldr()</source>
          <target state="translated">mapfoldr()</target>
        </trans-unit>
        <trans-unit id="e76f57b3354ccfe22d876f38522d98c4d4e09238" translate="yes" xml:space="preserve">
          <source>mapreduce()</source>
          <target state="translated">mapreduce()</target>
        </trans-unit>
        <trans-unit id="0aef9f89b53168b6b8ec2cdf3f415721d7d16d19" translate="yes" xml:space="preserve">
          <source>maps values to their additive inverses</source>
          <target state="translated">asigna valores a sus inversas aditivas</target>
        </trans-unit>
        <trans-unit id="90bbf84bd7d5574a3d6fe732dd93e4f56e3fb4f7" translate="yes" xml:space="preserve">
          <source>mapslices()</source>
          <target state="translated">mapslices()</target>
        </trans-unit>
        <trans-unit id="d5062a8f61ec3d7c77176457469a6c52e0e84da3" translate="yes" xml:space="preserve">
          <source>mark()</source>
          <target state="translated">mark()</target>
        </trans-unit>
        <trans-unit id="f743d4858548a263762a36939a95c6da7ebf0d4d" translate="yes" xml:space="preserve">
          <source>match()</source>
          <target state="translated">match()</target>
        </trans-unit>
        <trans-unit id="e1a465e4d3e649d94aafd48152f08885a10bb6cd" translate="yes" xml:space="preserve">
          <source>mate</source>
          <target state="translated">mate</target>
        </trans-unit>
        <trans-unit id="62713d5dc9285d37232038fc367992f3b960c971" translate="yes" xml:space="preserve">
          <source>max()</source>
          <target state="translated">max()</target>
        </trans-unit>
        <trans-unit id="ffab9f97283c9b3f1570bfeaa83a53f0ab387897" translate="yes" xml:space="preserve">
          <source>maximum!()</source>
          <target state="translated">maximum!()</target>
        </trans-unit>
        <trans-unit id="d87b2db8f1c72b31e0e35968f400ca65c325d2b9" translate="yes" xml:space="preserve">
          <source>maximum()</source>
          <target state="translated">maximum()</target>
        </trans-unit>
        <trans-unit id="1acb5644ab2b47c8a265c19319aa4db844ca3af2" translate="yes" xml:space="preserve">
          <source>maxintfloat()</source>
          <target state="translated">maxintfloat()</target>
        </trans-unit>
        <trans-unit id="2a9079f50339e361c20112f0f11ece3d5b257564" translate="yes" xml:space="preserve">
          <source>meaning</source>
          <target state="translated">meaning</target>
        </trans-unit>
        <trans-unit id="f3949dfdf58ed2665da180d4447254541394e21c" translate="yes" xml:space="preserve">
          <source>merge!()</source>
          <target state="translated">merge!()</target>
        </trans-unit>
        <trans-unit id="e1bf946a063ef8e959e3af0f7f6cf197dd1ee98a" translate="yes" xml:space="preserve">
          <source>merge()</source>
          <target state="translated">merge()</target>
        </trans-unit>
        <trans-unit id="550d23149d500bcfb91496de575e88d34d56c63c" translate="yes" xml:space="preserve">
          <source>meta-Backspace</source>
          <target state="translated">meta-Backspace</target>
        </trans-unit>
        <trans-unit id="0292580f8385f7fe90d96f62bbcd980fc742dfff" translate="yes" xml:space="preserve">
          <source>meta-Return/Enter</source>
          <target state="translated">meta-Return/Enter</target>
        </trans-unit>
        <trans-unit id="f544333660b6aacbdcc3383411901c4443028c13" translate="yes" xml:space="preserve">
          <source>methods()</source>
          <target state="translated">methods()</target>
        </trans-unit>
        <trans-unit id="8963ffc3b407d548a6af0609f5c355469208f5e9" translate="yes" xml:space="preserve">
          <source>min()</source>
          <target state="translated">min()</target>
        </trans-unit>
        <trans-unit id="d24c881866381b886a6f9c76318562ed906bded9" translate="yes" xml:space="preserve">
          <source>minimum!()</source>
          <target state="translated">minimum!()</target>
        </trans-unit>
        <trans-unit id="5a7f22b83546aa0f637be70cc35eb71ff2476f97" translate="yes" xml:space="preserve">
          <source>minimum()</source>
          <target state="translated">minimum()</target>
        </trans-unit>
        <trans-unit id="0489eaf8d55ef7cb104492c439bc9bb07444b010" translate="yes" xml:space="preserve">
          <source>minmax()</source>
          <target state="translated">minmax()</target>
        </trans-unit>
        <trans-unit id="5a013c49508291c6816ac388f93a2c11973086ed" translate="yes" xml:space="preserve">
          <source>missing</source>
          <target state="translated">missing</target>
        </trans-unit>
        <trans-unit id="0356e3972a102cd76d6bdce38b1884d14d186f19" translate="yes" xml:space="preserve">
          <source>mod()</source>
          <target state="translated">mod()</target>
        </trans-unit>
        <trans-unit id="5ea73e6446f87bda3904b72ffaea29729ffcacd8" translate="yes" xml:space="preserve">
          <source>mod1()</source>
          <target state="translated">mod1()</target>
        </trans-unit>
        <trans-unit id="e78fe7049341b36116d8054f5a3e00d01f245fcc" translate="yes" xml:space="preserve">
          <source>mode</source>
          <target state="translated">mode</target>
        </trans-unit>
        <trans-unit id="fbd34a2b6e6a9fe8161f97dc435642609ac0bc29" translate="yes" xml:space="preserve">
          <source>module</source>
          <target state="translated">module</target>
        </trans-unit>
        <trans-unit id="db6cdd6f454a785628d818188a1d62321670b2b1" translate="yes" xml:space="preserve">
          <source>moduleroot()</source>
          <target state="translated">moduleroot()</target>
        </trans-unit>
        <trans-unit id="f61f5b30ce504b6c72bb4c0e26a4922108eee8dd" translate="yes" xml:space="preserve">
          <source>modules and type names use capitalization and camel case: &lt;code&gt;module SparseArrays&lt;/code&gt;, &lt;code&gt;struct UnitRange&lt;/code&gt;.</source>
          <target state="translated">Los m&amp;oacute;dulos y los nombres de los tipos usan may&amp;uacute;sculas y min&amp;uacute;sculas: &lt;code&gt;module SparseArrays&lt;/code&gt; , &lt;code&gt;struct UnitRange&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b9ef906e8e35ba0a7ce83fc33ec05c1775274e9" translate="yes" xml:space="preserve">
          <source>modulus with respect to 2pi; &lt;code&gt;0 &amp;lt;= mod2pi(x) &amp;nbsp;  &amp;lt; 2pi&lt;/code&gt;</source>
          <target state="translated">m&amp;oacute;dulo con respecto a 2pi; &lt;code&gt;0 &amp;lt;= mod2pi(x) &amp;nbsp; &amp;lt; 2pi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7e25d5937ceac03b7c9e87ba632d9f160b3ae7a" translate="yes" xml:space="preserve">
          <source>modulus; satisfies &lt;code&gt;x == fld(x,y)*y + mod(x,y)&lt;/code&gt;; sign matches &lt;code&gt;y&lt;/code&gt;</source>
          <target state="translated">m&amp;oacute;dulo; satisface &lt;code&gt;x == fld(x,y)*y + mod(x,y)&lt;/code&gt; ; firmar partidos &lt;code&gt;y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89ff7fee00baf247735f2e0ae120cb65e442bcf3" translate="yes" xml:space="preserve">
          <source>mtime</source>
          <target state="translated">mtime</target>
        </trans-unit>
        <trans-unit id="0eb800bebcce6aec924cb11f14dee09fbddc0b57" translate="yes" xml:space="preserve">
          <source>muladd()</source>
          <target state="translated">muladd()</target>
        </trans-unit>
        <trans-unit id="9e7f5b4d865572dced7fc25e62d6b0b52c719d6a" translate="yes" xml:space="preserve">
          <source>multiply, or matrix multiply</source>
          <target state="translated">multiplicar,o multiplicar la matriz</target>
        </trans-unit>
        <trans-unit id="bd8a6ec95bdad4f576d47bc433dce964de22b03a" translate="yes" xml:space="preserve">
          <source>mutable struct</source>
          <target state="translated">estructura mutable</target>
        </trans-unit>
        <trans-unit id="5fa41ae2ee98d9b5f730168c15be8128479a1422" translate="yes" xml:space="preserve">
          <source>nameof()</source>
          <target state="translated">nameof()</target>
        </trans-unit>
        <trans-unit id="3ca6601f37e8c2e6f5cfce135f92e781cb900408" translate="yes" xml:space="preserve">
          <source>names()</source>
          <target state="translated">names()</target>
        </trans-unit>
        <trans-unit id="e6efbd8aed7a6a63e6ec49365245a32bdc913b43" translate="yes" xml:space="preserve">
          <source>nano</source>
          <target state="translated">nano</target>
        </trans-unit>
        <trans-unit id="6372e8dda3575fe49b8eb9f0027b69a1da59bcd0" translate="yes" xml:space="preserve">
          <source>natural exponential function at &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">funci&amp;oacute;n exponencial natural en &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="654c4e3a260fd66f131b3b3a39e2990ee78941ac" translate="yes" xml:space="preserve">
          <source>natural logarithm of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">logaritmo natural de &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="448642a7d9eb405a15042b989a448d2baca2a2c5" translate="yes" xml:space="preserve">
          <source>ncodeunits()</source>
          <target state="translated">ncodeunits()</target>
        </trans-unit>
        <trans-unit id="6e455c83dc06bc6ee6ea6e3696a84376b82eaaed" translate="yes" xml:space="preserve">
          <source>ndigits()</source>
          <target state="translated">ndigits()</target>
        </trans-unit>
        <trans-unit id="6b78d93a933913ac7cbfdc7bad56d4a3da78b4b4" translate="yes" xml:space="preserve">
          <source>ndims()</source>
          <target state="translated">ndims()</target>
        </trans-unit>
        <trans-unit id="faf504d6fc8ff2da7d7e8957dc744fbb1d027ee5" translate="yes" xml:space="preserve">
          <source>negation</source>
          <target state="translated">negation</target>
        </trans-unit>
        <trans-unit id="09d0ecb5a32f556cb2687e32649b5a410375e004" translate="yes" xml:space="preserve">
          <source>negative infinity</source>
          <target state="translated">infinito negativo</target>
        </trans-unit>
        <trans-unit id="c2a6b03f190dfb2b4aa91f8af8d477a9bc3401dc" translate="yes" xml:space="preserve">
          <source>new</source>
          <target state="translated">new</target>
        </trans-unit>
        <trans-unit id="92f259e73385a432b299569dc893a85ede582035" translate="yes" xml:space="preserve">
          <source>nextfloat()</source>
          <target state="translated">nextfloat()</target>
        </trans-unit>
        <trans-unit id="414e7553693f156ca5d466462775b28c4285dff2" translate="yes" xml:space="preserve">
          <source>nextind()</source>
          <target state="translated">nextind()</target>
        </trans-unit>
        <trans-unit id="afe9cd38f5862a919c017c906e8beff2301a7694" translate="yes" xml:space="preserve">
          <source>nextpow()</source>
          <target state="translated">nextpow()</target>
        </trans-unit>
        <trans-unit id="9c357118524e7f275f00205792e7d7ab7efa8d6f" translate="yes" xml:space="preserve">
          <source>nextprod()</source>
          <target state="translated">nextprod()</target>
        </trans-unit>
        <trans-unit id="ccb7fec536262ca24471def4c6864e058e14a28d" translate="yes" xml:space="preserve">
          <source>nlink</source>
          <target state="translated">nlink</target>
        </trans-unit>
        <trans-unit id="71f8e7976e4cbc4561c9d62fb283e7f788202acb" translate="yes" xml:space="preserve">
          <source>none</source>
          <target state="translated">none</target>
        </trans-unit>
        <trans-unit id="8e1c89e8284b8685fc1e4e787abc53dcd8642cc3" translate="yes" xml:space="preserve">
          <source>not a number</source>
          <target state="translated">no un número</target>
        </trans-unit>
        <trans-unit id="97579126bd5a724776933de121d4e5b352424b2a" translate="yes" xml:space="preserve">
          <source>not supported by &lt;code&gt;ccall&lt;/code&gt; or &lt;code&gt;@cfunction&lt;/code&gt;</source>
          <target state="translated">no es compatible con &lt;code&gt;ccall&lt;/code&gt; o &lt;code&gt;@cfunction&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8e6d961c02fc20ebe83d78adc14d1e258b4db7d" translate="yes" xml:space="preserve">
          <source>notepad++</source>
          <target state="translated">notepad++</target>
        </trans-unit>
        <trans-unit id="b7908f4de94f9c5f30f62bdcd4f9719eaa937d65" translate="yes" xml:space="preserve">
          <source>notify()</source>
          <target state="translated">notify()</target>
        </trans-unit>
        <trans-unit id="44c31e3c011e8526ec43ca804b369e2cda441484" translate="yes" xml:space="preserve">
          <source>ntoh()</source>
          <target state="translated">ntoh()</target>
        </trans-unit>
        <trans-unit id="132276fcccc9845c3aba8dfcc6c0ac9c92560b76" translate="yes" xml:space="preserve">
          <source>ntuple()</source>
          <target state="translated">ntuple()</target>
        </trans-unit>
        <trans-unit id="a227fcd06aedc1ccaaa7e85fb3fb2ebba151421c" translate="yes" xml:space="preserve">
          <source>numerator()</source>
          <target state="translated">numerator()</target>
        </trans-unit>
        <trans-unit id="e3c99d2756cc0a96a44627458102434ec04318f5" translate="yes" xml:space="preserve">
          <source>nvim</source>
          <target state="translated">nvim</target>
        </trans-unit>
        <trans-unit id="9f6db2c6f6fa2ddf2a6607f2a9f44d5052f6ab53" translate="yes" xml:space="preserve">
          <source>objectid()</source>
          <target state="translated">objectid()</target>
        </trans-unit>
        <trans-unit id="78b731635485757bb2495f8b9b7c56dc9f81d311" translate="yes" xml:space="preserve">
          <source>occursin()</source>
          <target state="translated">occursin()</target>
        </trans-unit>
        <trans-unit id="daa250b81cc072637dd2e2a51751a7eedb08177e" translate="yes" xml:space="preserve">
          <source>oftype()</source>
          <target state="translated">oftype()</target>
        </trans-unit>
        <trans-unit id="4a469190f6c67092a06872b0ce49a09977f168a8" translate="yes" xml:space="preserve">
          <source>one declares that when 64-bit and 32-bit floating-point values are promoted together, they should be promoted to 64-bit floating-point. The promotion type does not need to be one of the argument types, however; the following promotion rules both occur in Julia Base:</source>
          <target state="translated">se declara que cuando los valores de 64 y 32 bits de punto flotante se promueven juntos,deben ser promovidos a 64 bits de punto flotante.Sin embargo,el tipo de promoción no tiene por qué ser uno de los tipos de argumento;las siguientes reglas de promoción se dan en la Base Julia:</target>
        </trans-unit>
        <trans-unit id="206979dd3bb0649ee70955b9f5a1e43d6c397ce8" translate="yes" xml:space="preserve">
          <source>one declares that when 64-bit and 32-bit floating-point values are promoted together, they should be promoted to 64-bit floating-point. The promotion type does not need to be one of the argument types. For example, the following promotion rules both occur in Julia Base:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8058b6305cbba5eca60db40d7aff691d114d3e" translate="yes" xml:space="preserve">
          <source>one that uses &lt;a href=&quot;../../stdlib/distributed/index#Distributed.@distributed&quot;&gt;&lt;code&gt;@distributed&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">uno que usa &lt;a href=&quot;../../stdlib/distributed/index#Distributed.@distributed&quot;&gt; &lt;code&gt;@distributed&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="bc90a91c8bb3726dd38a85d14594388b7cc3d588" translate="yes" xml:space="preserve">
          <source>one()</source>
          <target state="translated">one()</target>
        </trans-unit>
        <trans-unit id="5eff9bba35c97ab99e602a861c183ff0244b1648" translate="yes" xml:space="preserve">
          <source>ones()</source>
          <target state="translated">ones()</target>
        </trans-unit>
        <trans-unit id="210a1863b83173e26807646851f50d8cddc7134d" translate="yes" xml:space="preserve">
          <source>oneunit()</source>
          <target state="translated">oneunit()</target>
        </trans-unit>
        <trans-unit id="5fc7e38bffe00ca46add89145464a2eaf759d5c2" translate="yes" xml:space="preserve">
          <source>open</source>
          <target state="translated">open</target>
        </trans-unit>
        <trans-unit id="f533b961b2385751ae142b484ba3f9c579dd6891" translate="yes" xml:space="preserve">
          <source>open for reading</source>
          <target state="translated">abierto a la lectura</target>
        </trans-unit>
        <trans-unit id="3b3e0b96dcf0ed835f9a277b12d5f353d6dc2019" translate="yes" xml:space="preserve">
          <source>open for writing</source>
          <target state="translated">abierto a la escritura</target>
        </trans-unit>
        <trans-unit id="e992062244e810656d62642f92d74743a0c9d66f" translate="yes" xml:space="preserve">
          <source>open()</source>
          <target state="translated">open()</target>
        </trans-unit>
        <trans-unit id="24e7f70c58621f0bc783f8a13a4b6378cd14e303" translate="yes" xml:space="preserve">
          <source>optionally, providing data transport</source>
          <target state="translated">opcionalmente,proporcionando transporte de datos</target>
        </trans-unit>
        <trans-unit id="30e2315cb9fd34f504cd220e7f15842326b4e716" translate="yes" xml:space="preserve">
          <source>or &lt;a href=&quot;../../base/io-network/index#Base.read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; if you wanted to read by character instead:</source>
          <target state="translated">o &lt;a href=&quot;../../base/io-network/index#Base.read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; si desea leer por car&amp;aacute;cter en su lugar:</target>
        </trans-unit>
        <trans-unit id="78516bdcf04efc52cd4ced9299020934e7f4f853" translate="yes" xml:space="preserve">
          <source>or if we had wanted to read the entire line instead:</source>
          <target state="translated">o si hubiéramos querido leer toda la línea en su lugar:</target>
        </trans-unit>
        <trans-unit id="40c1dbaaabf8497837cff2978bf388c35b904dfa" translate="yes" xml:space="preserve">
          <source>or, when the file cannot be read into a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47eaee940e5e07699732234b08752e01a0c3cdf" translate="yes" xml:space="preserve">
          <source>other documented &lt;code&gt;rand&lt;/code&gt; methods accepting an &lt;code&gt;AbstractRNG&lt;/code&gt; should work out of the box, (provided the methods from 1) what are relied on are implemented), but can of course be specialized for this RNG if there is room for optimization.</source>
          <target state="translated">otros m&amp;eacute;todos &lt;code&gt;rand&lt;/code&gt; documentados que aceptan un &lt;code&gt;AbstractRNG&lt;/code&gt; deber&amp;iacute;an funcionar de inmediato (siempre que se implementen los m&amp;eacute;todos de 1) en los que se conf&amp;iacute;a), pero, por supuesto, pueden especializarse para este RNG si hay espacio para la optimizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4943aadeb972fc1483467d58609bdf21efd30a32" translate="yes" xml:space="preserve">
          <source>other documented &lt;code&gt;rand&lt;/code&gt; methods accepting an &lt;code&gt;AbstractRNG&lt;/code&gt; should work out of the box, (provided the methods from 1) what are relied on are implemented), but can of course be specialized for this RNG if there is room for optimization;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ce9b8e2348f2117bc4a635db58184f81b99044" translate="yes" xml:space="preserve">
          <source>otherwise &lt;code&gt;F&lt;/code&gt; is a &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">de lo contrario, &lt;code&gt;F&lt;/code&gt; es un objeto &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt; &lt;code&gt;QR&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf71882ee8104240bc612b03d3da477db0635592" translate="yes" xml:space="preserve">
          <source>otherwise if the element type of &lt;code&gt;A&lt;/code&gt; is a BLAS type (&lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt;&lt;code&gt;Float32&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt;&lt;code&gt;Float64&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;ComplexF32&lt;/code&gt; or &lt;code&gt;ComplexF64&lt;/code&gt;), then &lt;code&gt;F&lt;/code&gt; is a &lt;a href=&quot;#LinearAlgebra.QRCompactWY&quot;&gt;&lt;code&gt;QRCompactWY&lt;/code&gt;&lt;/a&gt; object,</source>
          <target state="translated">de lo contrario, si el tipo de elemento de &lt;code&gt;A&lt;/code&gt; es un tipo BLAS ( &lt;a href=&quot;../../base/numbers/index#Core.Float32&quot;&gt; &lt;code&gt;Float32&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../base/numbers/index#Core.Float64&quot;&gt; &lt;code&gt;Float64&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;ComplexF32&lt;/code&gt; o &lt;code&gt;ComplexF64&lt;/code&gt; ), entonces &lt;code&gt;F&lt;/code&gt; es un objeto &lt;a href=&quot;#LinearAlgebra.QRCompactWY&quot;&gt; &lt;code&gt;QRCompactWY&lt;/code&gt; &lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="b9b4cc59dc3aeca62636a97763e2b62a1e1f5ac3" translate="yes" xml:space="preserve">
          <source>pairs()</source>
          <target state="translated">pairs()</target>
        </trans-unit>
        <trans-unit id="8cd2b211a36ee8c9fffd6344dfd0bb7b8e4a210b" translate="yes" xml:space="preserve">
          <source>parametric type instantiation</source>
          <target state="translated">instanciación de tipo paramétrico</target>
        </trans-unit>
        <trans-unit id="3bd4850475d463ffaf026b53d8dba1db69313d2e" translate="yes" xml:space="preserve">
          <source>parent()</source>
          <target state="translated">parent()</target>
        </trans-unit>
        <trans-unit id="eb696f022795c3d41c8638e6e12426715e3ca546" translate="yes" xml:space="preserve">
          <source>parentheses can also be used to group one or more semicolon separated expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bfc53915133129a56479f5185fcc81444229d6" translate="yes" xml:space="preserve">
          <source>parentheses with comma-separated arguments constructs a tuple containing its arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23acff5ad0657ab0641ad8b4b1c4fd87c3e6e23" translate="yes" xml:space="preserve">
          <source>parentheses with comma-separated assignments constructs a &lt;a href=&quot;../base/index#Core.NamedTuple&quot;&gt;&lt;code&gt;NamedTuple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0c8ab03ced68b81f363c18e64e93ac0421bc5b" translate="yes" xml:space="preserve">
          <source>parentheses with no arguments constructs an empty &lt;a href=&quot;../base/index#Core.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ae8e76b1c0ad935fd52c786913f3846be3177b" translate="yes" xml:space="preserve">
          <source>parentindices()</source>
          <target state="translated">parentindices()</target>
        </trans-unit>
        <trans-unit id="059cca532dfc88ff12389e59e4137d5dcea439ee" translate="yes" xml:space="preserve">
          <source>parentmodule()</source>
          <target state="translated">parentmodule()</target>
        </trans-unit>
        <trans-unit id="eab4b24bce7104ca7e65d1066bc83747b7b834b3" translate="yes" xml:space="preserve">
          <source>parse()</source>
          <target state="translated">parse()</target>
        </trans-unit>
        <trans-unit id="3961f4265add103ff2e4069989254eba6a45ef66" translate="yes" xml:space="preserve">
          <source>pathof()</source>
          <target state="translated">pathof()</target>
        </trans-unit>
        <trans-unit id="39bd5498eaff228622802784094a0f52b78fce25" translate="yes" xml:space="preserve">
          <source>performs addition</source>
          <target state="translated">realiza la adición</target>
        </trans-unit>
        <trans-unit id="6b59bef85871e67732284ded1ce2fb1444a217b5" translate="yes" xml:space="preserve">
          <source>performs division</source>
          <target state="translated">realiza la división</target>
        </trans-unit>
        <trans-unit id="e4d200621bb754d2fee200f1f2fe74f554a75883" translate="yes" xml:space="preserve">
          <source>performs multiplication</source>
          <target state="translated">realiza la multiplicación</target>
        </trans-unit>
        <trans-unit id="3457cdb93cce24f9cb37bc003d9136fdf2191ac9" translate="yes" xml:space="preserve">
          <source>performs subtraction</source>
          <target state="translated">realiza la sustracción</target>
        </trans-unit>
        <trans-unit id="ae87805b991df341dd55fc47d6ce52c6d7faf78f" translate="yes" xml:space="preserve">
          <source>periods may also prefix parentheses (like &lt;code&gt;f.(...)&lt;/code&gt;) or infix operators (like &lt;code&gt;.+&lt;/code&gt;) to perform the function element-wise (calling &lt;a href=&quot;../arrays/index#Base.Broadcast.broadcast&quot;&gt;&lt;code&gt;broadcast&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ff15375d05546d5e6edce0e4b98802ec91b898" translate="yes" xml:space="preserve">
          <source>permute!()</source>
          <target state="translated">permute!()</target>
        </trans-unit>
        <trans-unit id="f9046504bbc12bfe9b0c9d0dc5da3caef0c82696" translate="yes" xml:space="preserve">
          <source>permutedims!()</source>
          <target state="translated">permutedims!()</target>
        </trans-unit>
        <trans-unit id="f3777dfdadd9290649a2a6873b11fb17397d03fd" translate="yes" xml:space="preserve">
          <source>permutedims()</source>
          <target state="translated">permutedims()</target>
        </trans-unit>
        <trans-unit id="b228744cda2974597e829916edcfebac7c6a779b" translate="yes" xml:space="preserve">
          <source>pipeline()</source>
          <target state="translated">pipeline()</target>
        </trans-unit>
        <trans-unit id="ab756e0168466b6ed76459f2796ca32c6350484e" translate="yes" xml:space="preserve">
          <source>pointer()</source>
          <target state="translated">pointer()</target>
        </trans-unit>
        <trans-unit id="6efa013d66b071babbadfc401a69f4c6c40cd33e" translate="yes" xml:space="preserve">
          <source>pointer_from_objref()</source>
          <target state="translated">pointer_from_objref()</target>
        </trans-unit>
        <trans-unit id="2a2496cf0495b7892ccd1e7218e3420b224b5f6d" translate="yes" xml:space="preserve">
          <source>pop!()</source>
          <target state="translated">pop!()</target>
        </trans-unit>
        <trans-unit id="4ff17f3e75f11a678f7421cc642a06d316af6cc8" translate="yes" xml:space="preserve">
          <source>popfirst!()</source>
          <target state="translated">popfirst!()</target>
        </trans-unit>
        <trans-unit id="429e021a6550991898a52c9b2ba6c323810661e1" translate="yes" xml:space="preserve">
          <source>position()</source>
          <target state="translated">position()</target>
        </trans-unit>
        <trans-unit id="298f5a64cc7cc95c8257a8427c158cad3800f1ab" translate="yes" xml:space="preserve">
          <source>positive infinity</source>
          <target state="translated">infinito positivo</target>
        </trans-unit>
        <trans-unit id="b573f24e55d6b7547cb53bd67b8f50a5256006ff" translate="yes" xml:space="preserve">
          <source>power</source>
          <target state="translated">power</target>
        </trans-unit>
        <trans-unit id="41909c7d541a2762422688ce636b0426c3fb5b51" translate="yes" xml:space="preserve">
          <source>powermod()</source>
          <target state="translated">powermod()</target>
        </trans-unit>
        <trans-unit id="aa484239070ebe0393ed35dc097cfc1ee11dbd46" translate="yes" xml:space="preserve">
          <source>precision()</source>
          <target state="translated">precision()</target>
        </trans-unit>
        <trans-unit id="ee68be31256555da62a6819866f28f2630591182" translate="yes" xml:space="preserve">
          <source>precompile()</source>
          <target state="translated">precompile()</target>
        </trans-unit>
        <trans-unit id="be1f15606d0b36cd7cad3604e22b6124061199f0" translate="yes" xml:space="preserve">
          <source>prefix &quot;not&quot; (logical negation) operator</source>
          <target state="translated">Prefijo &quot;no&quot; (negación lógica)operador</target>
        </trans-unit>
        <trans-unit id="97dbb602148bd1a8d0d3c9889a1d028061f1deec" translate="yes" xml:space="preserve">
          <source>prepend!()</source>
          <target state="translated">prepend!()</target>
        </trans-unit>
        <trans-unit id="ac7c2a8d8c7bc070a20c7f0326de5b5ce1faaedb" translate="yes" xml:space="preserve">
          <source>prevfloat()</source>
          <target state="translated">prevfloat()</target>
        </trans-unit>
        <trans-unit id="30d3985e1be96a16092563af38a7c51c4f5d96b4" translate="yes" xml:space="preserve">
          <source>prevind()</source>
          <target state="translated">prevind()</target>
        </trans-unit>
        <trans-unit id="5a4de4dea6ee879cc8f43fb84cf7db890d16f2b3" translate="yes" xml:space="preserve">
          <source>prevpow()</source>
          <target state="translated">prevpow()</target>
        </trans-unit>
        <trans-unit id="7eabf10f55a9fdfb051838426986cab310c5ec7c" translate="yes" xml:space="preserve">
          <source>primitive type</source>
          <target state="translated">tipo primitivo</target>
        </trans-unit>
        <trans-unit id="19c8a5cdef0f37df1bfbc1c66d27412754169588" translate="yes" xml:space="preserve">
          <source>print()</source>
          <target state="translated">print()</target>
        </trans-unit>
        <trans-unit id="cad1ff561173d394b00a49d1e560957407f7e67e" translate="yes" xml:space="preserve">
          <source>println()</source>
          <target state="translated">println()</target>
        </trans-unit>
        <trans-unit id="871493a648f490d87c6a707d613f61bcd1ee2133" translate="yes" xml:space="preserve">
          <source>printstyled()</source>
          <target state="translated">printstyled()</target>
        </trans-unit>
        <trans-unit id="fe1bece3edaa7fd1cb6d3c8884e856b3ef50bab7" translate="yes" xml:space="preserve">
          <source>process_exited()</source>
          <target state="translated">process_exited()</target>
        </trans-unit>
        <trans-unit id="661d15ccc2cf69949476b806758125265e05b059" translate="yes" xml:space="preserve">
          <source>process_running()</source>
          <target state="translated">process_running()</target>
        </trans-unit>
        <trans-unit id="b5aabad4b12fdc8604679278957e1560d782c2d4" translate="yes" xml:space="preserve">
          <source>prod!()</source>
          <target state="translated">prod!()</target>
        </trans-unit>
        <trans-unit id="822ea58fad49d86db152051c5ff2f71154d87037" translate="yes" xml:space="preserve">
          <source>prod()</source>
          <target state="translated">prod()</target>
        </trans-unit>
        <trans-unit id="d4bae08149a109f118c7324aaf989d347be4e9a3" translate="yes" xml:space="preserve">
          <source>promote()</source>
          <target state="translated">promote()</target>
        </trans-unit>
        <trans-unit id="4b163ce44333a592b6c6675ebf8c4b906b9ad130" translate="yes" xml:space="preserve">
          <source>promote_rule()</source>
          <target state="translated">promote_rule()</target>
        </trans-unit>
        <trans-unit id="dd82707d142351c491824500e4c1e22402964495" translate="yes" xml:space="preserve">
          <source>promote_shape()</source>
          <target state="translated">promote_shape()</target>
        </trans-unit>
        <trans-unit id="bcd1f3737229a9098f014438995d6ad1da13ff3c" translate="yes" xml:space="preserve">
          <source>promote_type()</source>
          <target state="translated">promote_type()</target>
        </trans-unit>
        <trans-unit id="3941fc094548f10f49ee50b261b2697c12298bcb" translate="yes" xml:space="preserve">
          <source>propertynames()</source>
          <target state="translated">propertynames()</target>
        </trans-unit>
        <trans-unit id="7a6afab812e152ddc9759e7896efc4db93475da4" translate="yes" xml:space="preserve">
          <source>protocol version</source>
          <target state="translated">versión de protocolo</target>
        </trans-unit>
        <trans-unit id="fd8df2ee3cb4d361ab7338b2407e180781c285f1" translate="yes" xml:space="preserve">
          <source>push!()</source>
          <target state="translated">push!()</target>
        </trans-unit>
        <trans-unit id="1a5875735446b4556ed3346b2c9bafcfabcf4a58" translate="yes" xml:space="preserve">
          <source>pushfirst!()</source>
          <target state="translated">pushfirst!()</target>
        </trans-unit>
        <trans-unit id="3986d9e4d58826bebf062bf284378d1b4f52c55a" translate="yes" xml:space="preserve">
          <source>put!()</source>
          <target state="translated">put!()</target>
        </trans-unit>
        <trans-unit id="1de5fc45d3102adc42b6558c2808db473b3b28f0" translate="yes" xml:space="preserve">
          <source>pycharm</source>
          <target state="translated">pycharm</target>
        </trans-unit>
        <trans-unit id="f5d98dda084d28a169608dd73ae890b09c93e84f" translate="yes" xml:space="preserve">
          <source>quote</source>
          <target state="translated">quote</target>
        </trans-unit>
        <trans-unit id="cab91752736f85053065411fd4d9a9e81e8a1ad3" translate="yes" xml:space="preserve">
          <source>quoted expression</source>
          <target state="translated">expresión citada</target>
        </trans-unit>
        <trans-unit id="79f75a3d6f3c1c53c055a5d2cd7947b72bde50cf" translate="yes" xml:space="preserve">
          <source>raises &lt;code&gt;x&lt;/code&gt; to the &lt;code&gt;y&lt;/code&gt;th power</source>
          <target state="translated">eleva &lt;code&gt;x&lt;/code&gt; a la &lt;code&gt;y&lt;/code&gt; - &amp;eacute;sima potencia</target>
        </trans-unit>
        <trans-unit id="b4853c72356e641f2e3c1466d99ad124fd29496b" translate="yes" xml:space="preserve">
          <source>rand()</source>
          <target state="translated">rand()</target>
        </trans-unit>
        <trans-unit id="1080ca171fc62eb83b8d55a9b809c55ab4057b5f" translate="yes" xml:space="preserve">
          <source>randn()</source>
          <target state="translated">randn()</target>
        </trans-unit>
        <trans-unit id="d24e5c736198124f773913a130caf84cbde98f37" translate="yes" xml:space="preserve">
          <source>range a, a+1, a+2, ..., b</source>
          <target state="translated">rango a,a+1,a+2,...,b</target>
        </trans-unit>
        <trans-unit id="f1bf59516ab94a6249a1105f6ede8ebd1708218d" translate="yes" xml:space="preserve">
          <source>range a, a+s, a+2s, ..., b</source>
          <target state="translated">rango a,a+s,a+2s,...,b</target>
        </trans-unit>
        <trans-unit id="dee90a905ee7b40fb4ce87b56744b3d9b5b60908" translate="yes" xml:space="preserve">
          <source>range of &lt;code&gt;n&lt;/code&gt; linearly spaced elements from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;stop&lt;/code&gt;</source>
          <target state="translated">rango de &lt;code&gt;n&lt;/code&gt; elementos espaciados linealmente desde el &lt;code&gt;start&lt;/code&gt; hasta el &lt;code&gt;stop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="661399393d5d7f87c7412716d839dba1c5214560" translate="yes" xml:space="preserve">
          <source>range()</source>
          <target state="translated">range()</target>
        </trans-unit>
        <trans-unit id="37d5c49086004debdd4153a04c92cac5277b2fec" translate="yes" xml:space="preserve">
          <source>rather than</source>
          <target state="translated">en lugar de</target>
        </trans-unit>
        <trans-unit id="82b524d90dbcf160ddb4a560d1503123520ae7c4" translate="yes" xml:space="preserve">
          <source>rather than:</source>
          <target state="translated">en lugar de:</target>
        </trans-unit>
        <trans-unit id="359ead2736a801bfc927857c131859e69b5ee259" translate="yes" xml:space="preserve">
          <source>rationalize()</source>
          <target state="translated">rationalize()</target>
        </trans-unit>
        <trans-unit id="7af186869a0b2c6eff8521c4066d62e198e92ee1" translate="yes" xml:space="preserve">
          <source>rdev</source>
          <target state="translated">rdev</target>
        </trans-unit>
        <trans-unit id="a7afddb68260a60f86c02a021efba7f216c2e7cf" translate="yes" xml:space="preserve">
          <source>read</source>
          <target state="translated">read</target>
        </trans-unit>
        <trans-unit id="660615c7d4370f4f0fcdf98f8257b5c7ba42d79c" translate="yes" xml:space="preserve">
          <source>read!()</source>
          <target state="translated">read!()</target>
        </trans-unit>
        <trans-unit id="b192c6fde2678c434c8dca2f6a0a576b7790094c" translate="yes" xml:space="preserve">
          <source>read()</source>
          <target state="translated">read()</target>
        </trans-unit>
        <trans-unit id="1d198f0656b5fe7c4b0e764e2d86132998d4d51d" translate="yes" xml:space="preserve">
          <source>read, write</source>
          <target state="translated">leer,escribir</target>
        </trans-unit>
        <trans-unit id="7f4d07fb0ea3956086182ee5f039076538e90f84" translate="yes" xml:space="preserve">
          <source>read, write, create, append</source>
          <target state="translated">leer,escribir,crear,añadir</target>
        </trans-unit>
        <trans-unit id="7b4e0f637ace587c81eaa6f4a055ebfea14dbece" translate="yes" xml:space="preserve">
          <source>read, write, create, truncate</source>
          <target state="translated">leer,escribir,crear,truncar</target>
        </trans-unit>
        <trans-unit id="6d128f7fc050ded1218fe48a194a3bf2c5f68b2d" translate="yes" xml:space="preserve">
          <source>readavailable()</source>
          <target state="translated">readavailable()</target>
        </trans-unit>
        <trans-unit id="9c4e59b8d3dc2fd017bf3e1a7802344a68bae376" translate="yes" xml:space="preserve">
          <source>readbytes!()</source>
          <target state="translated">readbytes!()</target>
        </trans-unit>
        <trans-unit id="3569444fe73486faaf8da5e5e4733480a0e5e465" translate="yes" xml:space="preserve">
          <source>readchomp()</source>
          <target state="translated">readchomp()</target>
        </trans-unit>
        <trans-unit id="57ff0525b8e760d86eba0ef2e98909f7906bade4" translate="yes" xml:space="preserve">
          <source>readline()</source>
          <target state="translated">readline()</target>
        </trans-unit>
        <trans-unit id="8337c3fd5f38aa22ba2e30e153f5d49bcba78c89" translate="yes" xml:space="preserve">
          <source>readlines()</source>
          <target state="translated">readlines()</target>
        </trans-unit>
        <trans-unit id="a36ff4d94e342221d4df4612b724a762766d45ad" translate="yes" xml:space="preserve">
          <source>readuntil()</source>
          <target state="translated">readuntil()</target>
        </trans-unit>
        <trans-unit id="75e7409851f2900a54c3a5982b2c42f27aefe0c7" translate="yes" xml:space="preserve">
          <source>real()</source>
          <target state="translated">real()</target>
        </trans-unit>
        <trans-unit id="98f7c4e1e1eb409c10bfe7c58a76818a17456140" translate="yes" xml:space="preserve">
          <source>redirect_stderr()</source>
          <target state="translated">redirect_stderr()</target>
        </trans-unit>
        <trans-unit id="a187939ef25d7c58e58406e06c08e84d5a746a65" translate="yes" xml:space="preserve">
          <source>redirect_stdin()</source>
          <target state="translated">redirect_stdin()</target>
        </trans-unit>
        <trans-unit id="b41fb1f23fccc7f8ee9fb0bc5231fa1685717f60" translate="yes" xml:space="preserve">
          <source>redirect_stdout()</source>
          <target state="translated">redirect_stdout()</target>
        </trans-unit>
        <trans-unit id="7bb26e745a27a0f4d584a4ff27941c8ca0ef8979" translate="yes" xml:space="preserve">
          <source>reduce()</source>
          <target state="translated">reduce()</target>
        </trans-unit>
        <trans-unit id="7a67f817de595b7f4f44e6a952e4934b9d9685a5" translate="yes" xml:space="preserve">
          <source>reenable_sigint()</source>
          <target state="translated">reenable_sigint()</target>
        </trans-unit>
        <trans-unit id="4f8ae325538b18916249dba3cc116db03db0b621" translate="yes" xml:space="preserve">
          <source>reim()</source>
          <target state="translated">reim()</target>
        </trans-unit>
        <trans-unit id="dd4b3d28ef466e9615459bcac1fc4cd92aa08def" translate="yes" xml:space="preserve">
          <source>reinterpret()</source>
          <target state="translated">reinterpret()</target>
        </trans-unit>
        <trans-unit id="66a2a3e3b628ae1a7a7ccec41c332746568d096c" translate="yes" xml:space="preserve">
          <source>release()</source>
          <target state="translated">release()</target>
        </trans-unit>
        <trans-unit id="9abf97753bd17eaac22d6ed999fe4bea59f2eec5" translate="yes" xml:space="preserve">
          <source>rem()</source>
          <target state="translated">rem()</target>
        </trans-unit>
        <trans-unit id="d89d955d2f093ddbb85b7cc6d1026c324f244490" translate="yes" xml:space="preserve">
          <source>remainder</source>
          <target state="translated">remainder</target>
        </trans-unit>
        <trans-unit id="446ff7c174eabf456c48a677ccb1cc4fe55dafb9" translate="yes" xml:space="preserve">
          <source>remainder operator</source>
          <target state="translated">operador restante</target>
        </trans-unit>
        <trans-unit id="a7bb47767b98c22e0d38c50090eaf8553a9ed663" translate="yes" xml:space="preserve">
          <source>remainder; satisfies &lt;code&gt;x == div(x,y)*y + rem(x,y)&lt;/code&gt;; sign matches &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">recordatorio; satisface &lt;code&gt;x == div(x,y)*y + rem(x,y)&lt;/code&gt; ; firmar coincide con &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc7f6f8169c77d6a9ea5f0efa2cca69e861aa1b1" translate="yes" xml:space="preserve">
          <source>repeat()</source>
          <target state="translated">repeat()</target>
        </trans-unit>
        <trans-unit id="7ab20956eaf52834945a9ff9cc1ab4dad464faf3" translate="yes" xml:space="preserve">
          <source>replace!()</source>
          <target state="translated">replace!()</target>
        </trans-unit>
        <trans-unit id="b2043171a4223ded1a5e5a3b28823098f69f81db" translate="yes" xml:space="preserve">
          <source>replace()</source>
          <target state="translated">replace()</target>
        </trans-unit>
        <trans-unit id="f644b7f7c3513bd8118b5fdb1b3b09e20b03d49e" translate="yes" xml:space="preserve">
          <source>repr()</source>
          <target state="translated">repr()</target>
        </trans-unit>
        <trans-unit id="634b96c5c5c53297222823e53e126b5e4b24f441" translate="yes" xml:space="preserve">
          <source>require()</source>
          <target state="translated">require()</target>
        </trans-unit>
        <trans-unit id="c3fed1dae28105416889eb25d33d7d24c7a20450" translate="yes" xml:space="preserve">
          <source>reserved</source>
          <target state="translated">reserved</target>
        </trans-unit>
        <trans-unit id="c164b7b4a612e7761b3ee9584a7d8a34968b728c" translate="yes" xml:space="preserve">
          <source>reset()</source>
          <target state="translated">reset()</target>
        </trans-unit>
        <trans-unit id="a83b0455f25739000f2b10451386d951ad16dc55" translate="yes" xml:space="preserve">
          <source>reshape()</source>
          <target state="translated">reshape()</target>
        </trans-unit>
        <trans-unit id="19e28d7599feffc9a633c4f35041ad206511f231" translate="yes" xml:space="preserve">
          <source>resize!()</source>
          <target state="translated">resize!()</target>
        </trans-unit>
        <trans-unit id="4fdd19e288027b7e431ab46bf6a35400d8535e38" translate="yes" xml:space="preserve">
          <source>rethrow()</source>
          <target state="translated">rethrow()</target>
        </trans-unit>
        <trans-unit id="186cd1b47f8fd5641a09ecc8b5f4ef69e1b4a14d" translate="yes" xml:space="preserve">
          <source>retry()</source>
          <target state="translated">retry()</target>
        </trans-unit>
        <trans-unit id="63143b6f8007b98c53ca2149822777b3566f9241" translate="yes" xml:space="preserve">
          <source>return</source>
          <target state="translated">return</target>
        </trans-unit>
        <trans-unit id="4fc31f600ab9ec09c338a46971962e186e2dfa9e" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;(div(x,y),rem(x,y))&lt;/code&gt;</source>
          <target state="translated">devuelve &lt;code&gt;(div(x,y),rem(x,y))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3801df50fc7a68c005dd44258f5c4af85a7271b" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;(fld(x,y),mod(x,y))&lt;/code&gt;</source>
          <target state="translated">devuelve &lt;code&gt;(fld(x,y),mod(x,y))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5511d12cab684a9e12810bae2207cf2cca31842" translate="yes" xml:space="preserve">
          <source>reverse!()</source>
          <target state="translated">reverse!()</target>
        </trans-unit>
        <trans-unit id="88d3afbc0436f79204d03bb79525b95272b4efc4" translate="yes" xml:space="preserve">
          <source>reverse()</source>
          <target state="translated">reverse()</target>
        </trans-unit>
        <trans-unit id="9eea767bdca8a724094fca253fb5e99865721970" translate="yes" xml:space="preserve">
          <source>reverseind()</source>
          <target state="translated">reverseind()</target>
        </trans-unit>
        <trans-unit id="f5bd2a9af80eaf966421e2ad781db1b21589c381" translate="yes" xml:space="preserve">
          <source>rot180()</source>
          <target state="translated">rot180()</target>
        </trans-unit>
        <trans-unit id="b4b73be32c688f91eb756561650e8dc0d31ee18e" translate="yes" xml:space="preserve">
          <source>rotl90()</source>
          <target state="translated">rotl90()</target>
        </trans-unit>
        <trans-unit id="0b5d80f5238301f905bd9154d572ce422050f1d3" translate="yes" xml:space="preserve">
          <source>rotr90()</source>
          <target state="translated">rotr90()</target>
        </trans-unit>
        <trans-unit id="6f022a1bd26d268092658ba19eeeb35350f9d7df" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; to the nearest integer</source>
          <target state="translated">redondear &lt;code&gt;x&lt;/code&gt; al entero m&amp;aacute;s cercano</target>
        </trans-unit>
        <trans-unit id="ced1897d2a9b75ae6369ee7c54e5ce456039b4ee" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; towards &lt;code&gt;+Inf&lt;/code&gt;</source>
          <target state="translated">redondear &lt;code&gt;x&lt;/code&gt; hacia &lt;code&gt;+Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b549350b8f6cd6dcbcdac9337626b9ff46044513" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; towards &lt;code&gt;-Inf&lt;/code&gt;</source>
          <target state="translated">redondo &lt;code&gt;x&lt;/code&gt; hacia &lt;code&gt;-Inf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35193774b1e36ef6d2902abe2c9cd030a799b106" translate="yes" xml:space="preserve">
          <source>round &lt;code&gt;x&lt;/code&gt; towards zero</source>
          <target state="translated">redondear &lt;code&gt;x&lt;/code&gt; hacia cero</target>
        </trans-unit>
        <trans-unit id="f641a6e31f9712519753751a00ca021ef445cf05" translate="yes" xml:space="preserve">
          <source>round()</source>
          <target state="translated">round()</target>
        </trans-unit>
        <trans-unit id="6ca1b3bbb5562ce14506ff2295f3cc3181f76dc3" translate="yes" xml:space="preserve">
          <source>rpad()</source>
          <target state="translated">rpad()</target>
        </trans-unit>
        <trans-unit id="b4cc3a643e73e674d2ae6e4687d5364b08762f1b" translate="yes" xml:space="preserve">
          <source>rsplit()</source>
          <target state="translated">rsplit()</target>
        </trans-unit>
        <trans-unit id="0db5d63f6322a8821e62af98ff4d7236c4f68f2c" translate="yes" xml:space="preserve">
          <source>rstrip()</source>
          <target state="translated">rstrip()</target>
        </trans-unit>
        <trans-unit id="f805aaf52532959faf0be97c80abde3c8ae5e849" translate="yes" xml:space="preserve">
          <source>run()</source>
          <target state="translated">run()</target>
        </trans-unit>
        <trans-unit id="09629f12340d112a4b1aee5f5027b38d82877e27" translate="yes" xml:space="preserve">
          <source>runtests()</source>
          <target state="translated">runtests()</target>
        </trans-unit>
        <trans-unit id="94c5e54de18e99a5c9ea30c957c3547f9d501a3e" translate="yes" xml:space="preserve">
          <source>schedule()</source>
          <target state="translated">schedule()</target>
        </trans-unit>
        <trans-unit id="ed50899ee7dde6f05d14e50bd8d17d11df88b753" translate="yes" xml:space="preserve">
          <source>seek to end</source>
          <target state="translated">buscan acabar con</target>
        </trans-unit>
        <trans-unit id="fb0755f3a4c1f42c817cb7d9ed0499ffffbd2bd2" translate="yes" xml:space="preserve">
          <source>seek()</source>
          <target state="translated">seek()</target>
        </trans-unit>
        <trans-unit id="19c281061f39d296557b8b680f071757d46ce5dd" translate="yes" xml:space="preserve">
          <source>seekend()</source>
          <target state="translated">seekend()</target>
        </trans-unit>
        <trans-unit id="985cd736de97d1cd61a0c1366ede2e07060796ec" translate="yes" xml:space="preserve">
          <source>seekstart()</source>
          <target state="translated">seekstart()</target>
        </trans-unit>
        <trans-unit id="2b65f28926a559486671e61cbbe5c8eb5cc2525c" translate="yes" xml:space="preserve">
          <source>selectdim()</source>
          <target state="translated">selectdim()</target>
        </trans-unit>
        <trans-unit id="44e4e4e6449b2017d04baf3130e3044b7a2aed07" translate="yes" xml:space="preserve">
          <source>semicolons separate statements, begin a list of keyword arguments in function declarations or calls, or are used to separate array literals for vertical concatenation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aca953965c9d7bc4d1e9c1b983616882955f90d" translate="yes" xml:space="preserve">
          <source>separate function arguments or tuple components</source>
          <target state="translated">argumentos de funciones separadas o componentes tuplicados</target>
        </trans-unit>
        <trans-unit id="410c3e79ae89801f1eec9ee6ab461bf139376825" translate="yes" xml:space="preserve">
          <source>setdiff!()</source>
          <target state="translated">setdiff!()</target>
        </trans-unit>
        <trans-unit id="f8ef97af70069325b8bfcd8326e31da9f75410f3" translate="yes" xml:space="preserve">
          <source>setdiff()</source>
          <target state="translated">setdiff()</target>
        </trans-unit>
        <trans-unit id="ccf4c6eab0852f37b33556d6ca10c485b77c54c5" translate="yes" xml:space="preserve">
          <source>setenv()</source>
          <target state="translated">setenv()</target>
        </trans-unit>
        <trans-unit id="aef5e113001ea0ca0febed3d79a13575cf5df45d" translate="yes" xml:space="preserve">
          <source>setindex!()</source>
          <target state="translated">setindex!()</target>
        </trans-unit>
        <trans-unit id="8ecc8d7dd0c9c8bea853780d3159bf3618d29804" translate="yes" xml:space="preserve">
          <source>setproperty!()</source>
          <target state="translated">setproperty!()</target>
        </trans-unit>
        <trans-unit id="9f8425e91dff308e0277acecc255b39fb7404f56" translate="yes" xml:space="preserve">
          <source>short-circuiting boolean and</source>
          <target state="translated">cortocircuito booleano y</target>
        </trans-unit>
        <trans-unit id="8e728d8826f0736248a73dc4d05dbcb64fa803ff" translate="yes" xml:space="preserve">
          <source>short-circuiting boolean or</source>
          <target state="translated">cortocircuito booleano o</target>
        </trans-unit>
        <trans-unit id="6bf0e8ac948555b3ec2beb6e6ae148c6672becd1" translate="yes" xml:space="preserve">
          <source>shorthand for &lt;code&gt;cat(A...; dims=1)&lt;/code&gt;</source>
          <target state="translated">abreviatura de &lt;code&gt;cat(A...; dims=1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="846635d4f98d35a26fc37c91dc4f96221b8ff75a" translate="yes" xml:space="preserve">
          <source>shorthand for &lt;code&gt;cat(A...; dims=2)&lt;/code&gt;</source>
          <target state="translated">abreviatura de &lt;code&gt;cat(A...; dims=2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1623ec8b9b5fc5341c1caa28a23e999a5f3d4355" translate="yes" xml:space="preserve">
          <source>shorthand for `cat(A...; dims=1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e0dbe7e6b5450c96ed7d47165ccd2f86dcf4e9" translate="yes" xml:space="preserve">
          <source>shorthand for `cat(A...; dims=2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eef26daaa8030975f6e403f01e29cb971de26f0" translate="yes" xml:space="preserve">
          <source>should be defined to return a sampler with pre-computed data, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0217764a717fe75116d71bf4b5cded1e41cd6830" translate="yes" xml:space="preserve">
          <source>should be written as:</source>
          <target state="translated">debe ser escrito como:</target>
        </trans-unit>
        <trans-unit id="e478bed5d52093c00ac370affcc03ebd77203ca6" translate="yes" xml:space="preserve">
          <source>show()</source>
          <target state="translated">show()</target>
        </trans-unit>
        <trans-unit id="0833041b27acc65e3ef7b81f067d6ee885f42ed7" translate="yes" xml:space="preserve">
          <source>showerror()</source>
          <target state="translated">showerror()</target>
        </trans-unit>
        <trans-unit id="c5262f244da7973beb1f0d3d08c34b1d2c455a06" translate="yes" xml:space="preserve">
          <source>sign()</source>
          <target state="translated">sign()</target>
        </trans-unit>
        <trans-unit id="4fc7aadbf0080d52270936bc82d512d8e0d8ff44" translate="yes" xml:space="preserve">
          <source>signature bytes &quot;JL&quot;</source>
          <target state="translated">bytes de firma &quot;JL&quot;</target>
        </trans-unit>
        <trans-unit id="576656a4881867345aca23bede1ad705374e327a" translate="yes" xml:space="preserve">
          <source>signbit()</source>
          <target state="translated">signbit()</target>
        </trans-unit>
        <trans-unit id="ad9c6810ff85827682bfe51bd056f394c27e1cde" translate="yes" xml:space="preserve">
          <source>signed()</source>
          <target state="translated">signed()</target>
        </trans-unit>
        <trans-unit id="8d4a74cf30fc4cc5168b5e248c7bb6f497692c99" translate="yes" xml:space="preserve">
          <source>similar()</source>
          <target state="translated">similar()</target>
        </trans-unit>
        <trans-unit id="9a9313b161d0cfd83d56d6c784a30e5eb82ea309" translate="yes" xml:space="preserve">
          <source>simultaneous vertical and horizontal concatenation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640a88be71cfb984e8337bff814dae5174168271" translate="yes" xml:space="preserve">
          <source>sin()</source>
          <target state="translated">sin()</target>
        </trans-unit>
        <trans-unit id="51b69144fcd2ef3dc65e0700305b75911ed6f084" translate="yes" xml:space="preserve">
          <source>since &lt;code&gt;s&lt;/code&gt; is local to the &lt;code&gt;for&lt;/code&gt; loop, it is undefined when &lt;code&gt;t = s + i&lt;/code&gt; is evaluated, causing an error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0b1612aa711b78a720295d271a33894e2b72bf" translate="yes" xml:space="preserve">
          <source>single</source>
          <target state="translated">single</target>
        </trans-unit>
        <trans-unit id="524c0570579e45a72121e9452310e5368e4fa3f3" translate="yes" xml:space="preserve">
          <source>single ampersand is bitwise and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347678cfa2f105728a385ac225f2b31f1032d039" translate="yes" xml:space="preserve">
          <source>single equals sign is &lt;a href=&quot;../../manual/variables/index#man-variables&quot;&gt;assignment&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eef3f5b2cc24126d58ebf64df56bda48460b820" translate="yes" xml:space="preserve">
          <source>single periods access named fields in objects/modules (calling &lt;a href=&quot;../base/index#Base.getproperty&quot;&gt;&lt;code&gt;getproperty&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../base/index#Base.setproperty!&quot;&gt;&lt;code&gt;setproperty!&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e29baaca56c75b21c51ea833f775403fad05ec" translate="yes" xml:space="preserve">
          <source>single pipe character is bitwise or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a888fa77df6f8ee7ebf52528aa5ef1830b9e1f7" translate="yes" xml:space="preserve">
          <source>sinh()</source>
          <target state="translated">sinh()</target>
        </trans-unit>
        <trans-unit id="89368e1d68015693ab48ee189d0632cb5d6edfb3" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="translated">size</target>
        </trans-unit>
        <trans-unit id="29a0d8611cfc6ca1cbf91fa8a23a5527f7db386c" translate="yes" xml:space="preserve">
          <source>size()</source>
          <target state="translated">size()</target>
        </trans-unit>
        <trans-unit id="358fc49de277f1094d7b0f439b91e00630b8bb29" translate="yes" xml:space="preserve">
          <source>sizehint!()</source>
          <target state="translated">sizehint!()</target>
        </trans-unit>
        <trans-unit id="b0aa21a1df214b62fe1f17c3e3ac6fbf915dc63e" translate="yes" xml:space="preserve">
          <source>sizeof()</source>
          <target state="translated">sizeof()</target>
        </trans-unit>
        <trans-unit id="1c32fed0b0a4ddd34877f85ef98fc80b6eef760b" translate="yes" xml:space="preserve">
          <source>skip()</source>
          <target state="translated">skip()</target>
        </trans-unit>
        <trans-unit id="1585103a35fa0df8150b01b50cb110c446f6687a" translate="yes" xml:space="preserve">
          <source>skipchars()</source>
          <target state="translated">skipchars()</target>
        </trans-unit>
        <trans-unit id="718fb4634bc63a40e36503e59de6c1e6a3c770b6" translate="yes" xml:space="preserve">
          <source>skipmissing()</source>
          <target state="translated">skipmissing()</target>
        </trans-unit>
        <trans-unit id="65ebc585d9eb5c609ab744c1c265c3a8828cf743" translate="yes" xml:space="preserve">
          <source>sleep()</source>
          <target state="translated">sleep()</target>
        </trans-unit>
        <trans-unit id="d48e3a27badda6c3a081920644933e02048c6b27" translate="yes" xml:space="preserve">
          <source>so all the performance issues discussed previously apply.</source>
          <target state="translated">por lo que todas las cuestiones de rendimiento discutidas anteriormente se aplican.</target>
        </trans-unit>
        <trans-unit id="b568351d3368ba2ecc1f2206e5e2ca5e3e02361e" translate="yes" xml:space="preserve">
          <source>something()</source>
          <target state="translated">something()</target>
        </trans-unit>
        <trans-unit id="60ea148be479d6d490e46022eb1f1f3f27a216f2" translate="yes" xml:space="preserve">
          <source>sort!()</source>
          <target state="translated">sort!()</target>
        </trans-unit>
        <trans-unit id="8f4edb36a18b9689517e0482c28c688b02b27095" translate="yes" xml:space="preserve">
          <source>sort()</source>
          <target state="translated">sort()</target>
        </trans-unit>
        <trans-unit id="e48da700d777fcffe9f82f9a8543ecb4471ff493" translate="yes" xml:space="preserve">
          <source>sortperm()</source>
          <target state="translated">sortperm()</target>
        </trans-unit>
        <trans-unit id="2a0512b35a3908ab87f943157d82f548a83ed5cf" translate="yes" xml:space="preserve">
          <source>sortslices()</source>
          <target state="translated">sortslices()</target>
        </trans-unit>
        <trans-unit id="828d338a9b04221c9cbe286f50cd389f68de4ecf" translate="yes" xml:space="preserve">
          <source>source</source>
          <target state="translated">source</target>
        </trans-unit>
        <trans-unit id="eac43755b7aee0f3c9d8fc06d88a6effe4135cd6" translate="yes" xml:space="preserve">
          <source>splice arguments into a function call or declare a varargs function</source>
          <target state="translated">empalmar los argumentos en una llamada de función o declarar una función de varargs</target>
        </trans-unit>
        <trans-unit id="e6fc7fc571c32f581182c6302172eb883143dd50" translate="yes" xml:space="preserve">
          <source>splice!()</source>
          <target state="translated">splice!()</target>
        </trans-unit>
        <trans-unit id="981f46d5734d35e82cb0ffc7f45ab9db94fe7aa2" translate="yes" xml:space="preserve">
          <source>split()</source>
          <target state="translated">split()</target>
        </trans-unit>
        <trans-unit id="39b1ae7fc6d51cea448406efb0839668e93fa6a8" translate="yes" xml:space="preserve">
          <source>sprint()</source>
          <target state="translated">sprint()</target>
        </trans-unit>
        <trans-unit id="aac12b3163e653bfe042abb4c6aa5e150f5eea0f" translate="yes" xml:space="preserve">
          <source>sqrt()</source>
          <target state="translated">sqrt()</target>
        </trans-unit>
        <trans-unit id="358d3a0357ef156d97d87dff627dd9ae59dcb596" translate="yes" xml:space="preserve">
          <source>square root of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">ra&amp;iacute;z cuadrada de &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26bcbb5b5d446b1de89741fa7f339c9f3069a566" translate="yes" xml:space="preserve">
          <source>startswith()</source>
          <target state="translated">startswith()</target>
        </trans-unit>
        <trans-unit id="e2b6a72eca8f7861a7c302a5fa3605d7eff6a906" translate="yes" xml:space="preserve">
          <source>stat()</source>
          <target state="translated">stat()</target>
        </trans-unit>
        <trans-unit id="2487565d5095bd752b41915e88b543ae5730a993" translate="yes" xml:space="preserve">
          <source>statement separator</source>
          <target state="translated">separador de declaraciones</target>
        </trans-unit>
        <trans-unit id="351eb7019c1640acf10c265cc31c377fd68443b5" translate="yes" xml:space="preserve">
          <source>stderr</source>
          <target state="translated">stderr</target>
        </trans-unit>
        <trans-unit id="de71957adadbc39a6c55ae1d2d2d362c9e89c2f9" translate="yes" xml:space="preserve">
          <source>stdin</source>
          <target state="translated">stdin</target>
        </trans-unit>
        <trans-unit id="476d9ec701e2de6a6c37ab5211117a7cb8333a27" translate="yes" xml:space="preserve">
          <source>stdout</source>
          <target state="translated">stdout</target>
        </trans-unit>
        <trans-unit id="404816b6c5c80ce056db226907b98ffe92480a63" translate="yes" xml:space="preserve">
          <source>step()</source>
          <target state="translated">step()</target>
        </trans-unit>
        <trans-unit id="df90bf29e76b02f23fbe0ab3a9c69cea9a02626e" translate="yes" xml:space="preserve">
          <source>stride()</source>
          <target state="translated">stride()</target>
        </trans-unit>
        <trans-unit id="05753c4bf98491a2204a3e2cd3b6281c2001d3cf" translate="yes" xml:space="preserve">
          <source>strides()</source>
          <target state="translated">strides()</target>
        </trans-unit>
        <trans-unit id="d9cb63c8975efd9ea6cd0b3d6475c5b178053143" translate="yes" xml:space="preserve">
          <source>string and expression interpolation</source>
          <target state="translated">interpolación de cadenas y expresiones</target>
        </trans-unit>
        <trans-unit id="eb7866628f6ef8bf4a3e57ce0b37db6be5c30b89" translate="yes" xml:space="preserve">
          <source>string()</source>
          <target state="translated">string()</target>
        </trans-unit>
        <trans-unit id="f36c87380b38089f028d98110bdbafc2df87a427" translate="yes" xml:space="preserve">
          <source>strip()</source>
          <target state="translated">strip()</target>
        </trans-unit>
        <trans-unit id="d118e5a3cc15b182d1286373a60c787e58d3166f" translate="yes" xml:space="preserve">
          <source>struct</source>
          <target state="translated">struct</target>
        </trans-unit>
        <trans-unit id="83538dd06e49363df3ed4168fde6eb78059cd4c1" translate="yes" xml:space="preserve">
          <source>subl</source>
          <target state="translated">subl</target>
        </trans-unit>
        <trans-unit id="98e8ad064f869750f9bc2918b4e9d821597dfbf1" translate="yes" xml:space="preserve">
          <source>subtype operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3196958744ab07b11deaebf2fecf35aa6d9e0001" translate="yes" xml:space="preserve">
          <source>success()</source>
          <target state="translated">success()</target>
        </trans-unit>
        <trans-unit id="14f9caeeccc13702e48f583e5469ab0c12e735e3" translate="yes" xml:space="preserve">
          <source>such that $v_i$ is the $i$th column of $V$, $\tau_i$ is the $i$th element of &lt;code&gt;[diag(T_1); diag(T_2); &amp;hellip;; diag(T_b)]&lt;/code&gt;, and $(V_1 \; V_2 \; ... \; V_b)$ is the left &lt;code&gt;m&lt;/code&gt;&amp;times;&lt;code&gt;min(m, n)&lt;/code&gt; block of $V$. When constructed using &lt;a href=&quot;#LinearAlgebra.qr&quot;&gt;&lt;code&gt;qr&lt;/code&gt;&lt;/a&gt;, the block size is given by $n_b = \min(m, n, 36)$.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcb91146c7ec2d23b90ee96a0e0655dca441648" translate="yes" xml:space="preserve">
          <source>such that $v_i$ is the $i$th column of $V$, and $au_i$ is the $i$th diagonal element of $T$.</source>
          <target state="translated">de tal manera que $v_i$ es la $i$ésima columna de $V$,y $au_i$ es la $i$ésima diagonal de $T$.</target>
        </trans-unit>
        <trans-unit id="99ffa7346d648ecbb462a8e95e34cda464b9fca0" translate="yes" xml:space="preserve">
          <source>sum!()</source>
          <target state="translated">sum!()</target>
        </trans-unit>
        <trans-unit id="fec7a8014d78a44bcd692b35f8b00ed7ee13391a" translate="yes" xml:space="preserve">
          <source>sum()</source>
          <target state="translated">sum()</target>
        </trans-unit>
        <trans-unit id="87ef92bfb73e0867a9f775641e359e68433e4117" translate="yes" xml:space="preserve">
          <source>summary()</source>
          <target state="translated">summary()</target>
        </trans-unit>
        <trans-unit id="2c7463b7b8acd8565d40475091ca706723ae913c" translate="yes" xml:space="preserve">
          <source>summarysize()</source>
          <target state="translated">summarysize()</target>
        </trans-unit>
        <trans-unit id="760cf5be07734d94cc69a205f10434c9cb995b5f" translate="yes" xml:space="preserve">
          <source>supertype operator (reverse of subtype operator)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ba97f8aefe57276a655aec54fe726d0c42c120" translate="yes" xml:space="preserve">
          <source>supertype()</source>
          <target state="translated">supertype()</target>
        </trans-unit>
        <trans-unit id="810a25d76c31e495cc070bdf42e076f7c9b0a1cd" translate="yes" xml:space="preserve">
          <source>symbol</source>
          <target state="translated">symbol</target>
        </trans-unit>
        <trans-unit id="96c6dbc034d5d1234fa649fd865c6fc194fb67c4" translate="yes" xml:space="preserve">
          <source>symbol a</source>
          <target state="translated">símbolo a</target>
        </trans-unit>
        <trans-unit id="274a0d0cded91f1b50624ab047895ffcb7e38f59" translate="yes" xml:space="preserve">
          <source>symdiff!()</source>
          <target state="translated">symdiff!()</target>
        </trans-unit>
        <trans-unit id="b64b88da234dae7f2c63af236e591d6a0784b3aa" translate="yes" xml:space="preserve">
          <source>symdiff()</source>
          <target state="translated">symdiff()</target>
        </trans-unit>
        <trans-unit id="147c3412a225cce27591575cfee3963b02faa1da" translate="yes" xml:space="preserve">
          <source>systemerror()</source>
          <target state="translated">systemerror()</target>
        </trans-unit>
        <trans-unit id="4b838b7b298dcea9cda8eeecde2864da5ab2c7ba" translate="yes" xml:space="preserve">
          <source>tag byte (0x37)</source>
          <target state="translated">byte de la etiqueta (0x37)</target>
        </trans-unit>
        <trans-unit id="a06facb2e17d30ef2785f172add5056c63d682c9" translate="yes" xml:space="preserve">
          <source>tail()</source>
          <target state="translated">tail()</target>
        </trans-unit>
        <trans-unit id="21a8e9f67dd77619f3862f6bdfc3655857ff8ded" translate="yes" xml:space="preserve">
          <source>take!()</source>
          <target state="translated">take!()</target>
        </trans-unit>
        <trans-unit id="b6be7f7ba0da191e0d25b19afa45114cf1af5a99" translate="yes" xml:space="preserve">
          <source>tan()</source>
          <target state="translated">tan()</target>
        </trans-unit>
        <trans-unit id="c0b788813cf7d9564663203729dc34d224fdcb1d" translate="yes" xml:space="preserve">
          <source>tanh()</source>
          <target state="translated">tanh()</target>
        </trans-unit>
        <trans-unit id="ddde6a56bb08fa4280a0e538ebae6ae0a717934b" translate="yes" xml:space="preserve">
          <source>task_local_storage()</source>
          <target state="translated">task_local_storage()</target>
        </trans-unit>
        <trans-unit id="e4b5733b24aedfca5906bc193509bd165a3b78c5" translate="yes" xml:space="preserve">
          <source>textmate</source>
          <target state="translated">textmate</target>
        </trans-unit>
        <trans-unit id="dbeecb86a5d533d386a6db0ab26ef5c91d15b85f" translate="yes" xml:space="preserve">
          <source>that resolves the ambiguity by brute force.</source>
          <target state="translated">que resuelve la ambigüedad por la fuerza bruta.</target>
        </trans-unit>
        <trans-unit id="191a40600565d5e99bf8e18c3131e2eed32d28cf" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;b&lt;/code&gt; in &lt;code&gt;a=b&lt;/code&gt; refers to a &lt;code&gt;b&lt;/code&gt; in an outer scope, not the subsequent argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">la &lt;code&gt;b&lt;/code&gt; en &lt;code&gt;a=b&lt;/code&gt; se refiere a a &lt;code&gt;b&lt;/code&gt; en un &amp;aacute;mbito externo, no al argumento subsiguiente &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="717a14852045d2771dd735cbd966853e98e6a4ee" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;bar&lt;/code&gt; function solves a problem that is better solved with multiple dispatch - defining &lt;code&gt;bar(x) = x&lt;/code&gt; and &lt;code&gt;bar(x::Integer) = x ^ 2&lt;/code&gt; will do the same thing, but it is both simpler and faster.</source>
          <target state="translated">la funci&amp;oacute;n &lt;code&gt;bar&lt;/code&gt; resuelve un problema que se resuelve mejor con env&amp;iacute;o m&amp;uacute;ltiple: definir &lt;code&gt;bar(x) = x&lt;/code&gt; y &lt;code&gt;bar(x::Integer) = x ^ 2&lt;/code&gt; har&amp;aacute; lo mismo, pero es m&amp;aacute;s simple y m&amp;aacute;s r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="b55c3897a5f0b28173281ba444704b7d62ac13ed" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;baz&lt;/code&gt; function is pathological</source>
          <target state="translated">la funci&amp;oacute;n &lt;code&gt;baz&lt;/code&gt; es patol&amp;oacute;gica</target>
        </trans-unit>
        <trans-unit id="2c6654789eb91a797819fe332866e88593ab662f" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;foo&lt;/code&gt; function has side-effects (the call to &lt;code&gt;Core.println&lt;/code&gt;), and it is undefined exactly when, how often or how many times these side-effects will occur</source>
          <target state="translated">la funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; tiene efectos secundarios (la llamada a &lt;code&gt;Core.println&lt;/code&gt; ), y no est&amp;aacute; definido exactamente cu&amp;aacute;ndo, con qu&amp;eacute; frecuencia o cu&amp;aacute;ntas veces se producir&amp;aacute;n estos efectos secundarios</target>
        </trans-unit>
        <trans-unit id="3e2537f7e306c51f66354c3265d54da267166416" translate="yes" xml:space="preserve">
          <source>the BLAS library each language is using,</source>
          <target state="translated">la biblioteca BLAS que cada idioma está usando,</target>
        </trans-unit>
        <trans-unit id="7a2bcf644d46934cc6a04ebca79b621aef5e6be6" translate="yes" xml:space="preserve">
          <source>the annotation of &lt;code&gt;c&lt;/code&gt; harms performance. To write performant code involving types constructed at run-time, use the &lt;a href=&quot;#kernel-functions&quot;&gt;function-barrier technique&lt;/a&gt; discussed below, and ensure that the constructed type appears among the argument types of the kernel function so that the kernel operations are properly specialized by the compiler. For example, in the above snippet, as soon as &lt;code&gt;b&lt;/code&gt; is constructed, it can be passed to another function &lt;code&gt;k&lt;/code&gt;, the kernel. If, for example, function &lt;code&gt;k&lt;/code&gt; declares &lt;code&gt;b&lt;/code&gt; as an argument of type &lt;code&gt;Complex{T}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a type parameter, then a type annotation appearing in an assignment statement within &lt;code&gt;k&lt;/code&gt; of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2658eb07377f73f67624c7c016872ab24c66927a" translate="yes" xml:space="preserve">
          <source>the annotation of &lt;code&gt;c&lt;/code&gt; harms performance. To write performant code involving types constructed at run-time, use the &lt;a href=&quot;#kernel-functions-1&quot;&gt;function-barrier technique&lt;/a&gt; discussed below, and ensure that the constructed type appears among the argument types of the kernel function so that the kernel operations are properly specialized by the compiler. For example, in the above snippet, as soon as &lt;code&gt;b&lt;/code&gt; is constructed, it can be passed to another function &lt;code&gt;k&lt;/code&gt;, the kernel. If, for example, function &lt;code&gt;k&lt;/code&gt; declares &lt;code&gt;b&lt;/code&gt; as an argument of type &lt;code&gt;Complex{T}&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a type parameter, then a type annotation appearing in an assignment statement within &lt;code&gt;k&lt;/code&gt; of the form:</source>
          <target state="translated">la anotaci&amp;oacute;n &lt;code&gt;c&lt;/code&gt; perjudica el rendimiento. Para escribir c&amp;oacute;digo de rendimiento que involucre tipos construidos en tiempo de ejecuci&amp;oacute;n, use la &lt;a href=&quot;#kernel-functions-1&quot;&gt;t&amp;eacute;cnica de barrera de funci&amp;oacute;n que se&lt;/a&gt; describe a continuaci&amp;oacute;n y aseg&amp;uacute;rese de que el tipo construido aparezca entre los tipos de argumentos de la funci&amp;oacute;n del n&amp;uacute;cleo para que el compilador especialice adecuadamente las operaciones del n&amp;uacute;cleo. Por ejemplo, en el fragmento anterior, tan pronto como se construya &lt;code&gt;b&lt;/code&gt; , se puede pasar a otra funci&amp;oacute;n &lt;code&gt;k&lt;/code&gt; , el kernel. Si, por ejemplo, la funci&amp;oacute;n &lt;code&gt;k&lt;/code&gt; declara &lt;code&gt;b&lt;/code&gt; como un argumento de tipo &lt;code&gt;Complex{T}&lt;/code&gt; , donde &lt;code&gt;T&lt;/code&gt; es un par&amp;aacute;metro de tipo, entonces aparece una anotaci&amp;oacute;n de tipo en una instrucci&amp;oacute;n de asignaci&amp;oacute;n dentro de &lt;code&gt;k&lt;/code&gt; de la forma:</target>
        </trans-unit>
        <trans-unit id="988ad18077e0862dcb64563f205890fd07e5b9de" translate="yes" xml:space="preserve">
          <source>the assignment &lt;code&gt;s = t&lt;/code&gt; occurs in a soft scope&amp;mdash;a &lt;code&gt;for&lt;/code&gt; loop outside of any function body or other hard scope construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436595594f7b3ba678ef4ceb45745da4b9fa5c11" translate="yes" xml:space="preserve">
          <source>the asterisk is used for multiplication, including matrix multiplication and &lt;a href=&quot;../../manual/strings/index#man-concatenation&quot;&gt;string concatenation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faebd07fe1d95b672f5f7ece7ed10c11353a52c7" translate="yes" xml:space="preserve">
          <source>the at-symbol invokes &lt;a href=&quot;../../manual/metaprogramming/index#man-macros&quot;&gt;macro&lt;/a&gt;&lt;code&gt;m&lt;/code&gt;; followed by space-separated expressions or a function-call-like argument list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90bcb816926429f9c46a77492a35be23e7258b1" translate="yes" xml:space="preserve">
          <source>the backtick character delimits &lt;a href=&quot;../../manual/running-external-programs/index#Running-External-Programs&quot;&gt;external process&lt;/a&gt; (&lt;a href=&quot;../base/index#Base.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;) literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01819c52d2573974dc3e26c573bf60f2bdc4a500" translate="yes" xml:space="preserve">
          <source>the captured substrings as an array of strings: &lt;code&gt;m.captures&lt;/code&gt;</source>
          <target state="translated">las subcadenas capturadas como una matriz de cadenas: &lt;code&gt;m.captures&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a605ed62b7287f5b253f48b2d1fa4738f8aec4f" translate="yes" xml:space="preserve">
          <source>the caret is the exponentiation operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7806a89d60927fcfbb7636188f084d780993c54b" translate="yes" xml:space="preserve">
          <source>the dollar sign is used for &lt;a href=&quot;../../manual/strings/index#string-interpolation&quot;&gt;string&lt;/a&gt; and &lt;a href=&quot;../../manual/metaprogramming/index#man-expression-interpolation&quot;&gt;expression&lt;/a&gt; interpolation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25857422238c45a73d0c481953ad4a58dfb9165" translate="yes" xml:space="preserve">
          <source>the empty tuple</source>
          <target state="translated">la tupla vacía</target>
        </trans-unit>
        <trans-unit id="ceb00341a5c9b97dd580525f8e85791819acb942" translate="yes" xml:space="preserve">
          <source>the entire substring matched: &lt;code&gt;m.match&lt;/code&gt;</source>
          <target state="translated">toda la subcadena coincide: &lt;code&gt;m.match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4737c5485a5aff7b9d10d7972a6bed9e84642f57" translate="yes" xml:space="preserve">
          <source>the expression arguments, which may be symbols, other expressions, or literal values:</source>
          <target state="translated">los argumentos de la expresión,que pueden ser símbolos,otras expresiones o valores literales:</target>
        </trans-unit>
        <trans-unit id="020acaa24e728391c499a9bd03bfb711003dfda3" translate="yes" xml:space="preserve">
          <source>the identity operation</source>
          <target state="translated">la operación de identidad</target>
        </trans-unit>
        <trans-unit id="48bea7937454a6fedb904f3d95adf75ba4924bff" translate="yes" xml:space="preserve">
          <source>the number of concurrent threads.</source>
          <target state="translated">el número de hilos concurrentes.</target>
        </trans-unit>
        <trans-unit id="d16073b1ce330ad61fe6cdd529c58b84932f2a9f" translate="yes" xml:space="preserve">
          <source>the number of dimensions of &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">el n&amp;uacute;mero de dimensiones de &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f53e6367fe97a43be0e0e3caec2fa169999a9e8" translate="yes" xml:space="preserve">
          <source>the number of elements in &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">el n&amp;uacute;mero de elementos en &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb64b345495c05b31138a2fde4bfeca6f62a1f95" translate="yes" xml:space="preserve">
          <source>the number of iterations between decimation steps is &lt;code&gt;10*n&lt;/code&gt;, and</source>
          <target state="translated">el n&amp;uacute;mero de iteraciones entre los pasos de diezmado es &lt;code&gt;10*n&lt;/code&gt; , y</target>
        </trans-unit>
        <trans-unit id="a55bdd4a5038a072a82bc6f67ecfc8fa511c9ce9" translate="yes" xml:space="preserve">
          <source>the number of pre-decimation iterations is &lt;code&gt;20*n&lt;/code&gt;,</source>
          <target state="translated">el n&amp;uacute;mero de iteraciones previas al diezmo es &lt;code&gt;20*n&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="f7497afcdc9acd61139501d5285f87f97aabf12e" translate="yes" xml:space="preserve">
          <source>the number sign (or hash or pound) character begins single line comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731b624dd202dbba0b76bd6a3ef5db10085c6085" translate="yes" xml:space="preserve">
          <source>the offset at which the whole match begins: &lt;code&gt;m.offset&lt;/code&gt;</source>
          <target state="translated">el desplazamiento en el que comienza todo el partido: &lt;code&gt;m.offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11195647832b784d63a46af1e83c8672f91d9daa" translate="yes" xml:space="preserve">
          <source>the offsets of the captured substrings as a vector: &lt;code&gt;m.offsets&lt;/code&gt;</source>
          <target state="translated">las compensaciones de las subcadenas capturadas como un vector: &lt;code&gt;m.offsets&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00e2a7003109b2de10e5bcaab600a3ecc1d5326d" translate="yes" xml:space="preserve">
          <source>the percent symbol is the remainder operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e35143d1a5928de71acd5222648c8fb399914c" translate="yes" xml:space="preserve">
          <source>the question mark delimits the ternary conditional operator (used like: &lt;code&gt;conditional ? if_true : if_false&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cfdd376c6df7321bbb4d51cbba924f2e95f7d4" translate="yes" xml:space="preserve">
          <source>the result of the multiplication</source>
          <target state="translated">el resultado de la multiplicación</target>
        </trans-unit>
        <trans-unit id="e6019de350470d81bd45c99e886accc3b6066ad4" translate="yes" xml:space="preserve">
          <source>the single double-quote character delimits &lt;code&gt;String&lt;/code&gt; literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f9c97e6f33b04c34e0690c387606b7a2e4127f" translate="yes" xml:space="preserve">
          <source>the single-quote character delimits &lt;a href=&quot;../strings/index#Core.Char&quot;&gt;&lt;code&gt;Char&lt;/code&gt;&lt;/a&gt; (that is, character) literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafb5fc0e92cdc1c75136a7dd5786fded074a53a" translate="yes" xml:space="preserve">
          <source>the size of &lt;code&gt;A&lt;/code&gt; along dimension &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">el tama&amp;ntilde;o de &lt;code&gt;A&lt;/code&gt; a lo largo de la dimensi&amp;oacute;n &lt;code&gt;n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ae08c3c77a227670a8214da7281d1d47bee320a" translate="yes" xml:space="preserve">
          <source>the squared magnitude of &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">la magnitud al cuadrado de &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2586b0c15fb6ca27d1f853e9eefb6877918f530" translate="yes" xml:space="preserve">
          <source>the stride (linear index distance between adjacent elements) along dimension &lt;code&gt;k&lt;/code&gt;</source>
          <target state="translated">la zancada (distancia de &amp;iacute;ndice lineal entre elementos adyacentes) a lo largo de la dimensi&amp;oacute;n &lt;code&gt;k&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="098da2c5642bbc49db0a947bb8a2929d17070bba" translate="yes" xml:space="preserve">
          <source>the tilde is an operator for bitwise not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e22b3f918edcc0bbc24ee68a1aa1c1e713f527" translate="yes" xml:space="preserve">
          <source>the type of the elements contained in &lt;code&gt;A&lt;/code&gt;</source>
          <target state="translated">el tipo de los elementos contenidos en &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="859ca5a66e46ec125fa81af659f48e2ea46fa85c" translate="yes" xml:space="preserve">
          <source>the unicode xor character is bitwise exclusive or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6a0b5a1f3803ee83a6c893ef6eee6a45bd8055" translate="yes" xml:space="preserve">
          <source>then the result of both &lt;code&gt;f()&lt;/code&gt; and &lt;code&gt;f(1,2)&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt;. In other words, optional arguments are tied to a function, not to any specific method of that function. It depends on the types of the optional arguments which method is invoked. When optional arguments are defined in terms of a global variable, the type of the optional argument may even change at run-time.</source>
          <target state="translated">entonces el resultado tanto de &lt;code&gt;f()&lt;/code&gt; y &lt;code&gt;f(1,2)&lt;/code&gt; es &lt;code&gt;-3&lt;/code&gt; . En otras palabras, los argumentos opcionales est&amp;aacute;n vinculados a una funci&amp;oacute;n, no a ning&amp;uacute;n m&amp;eacute;todo espec&amp;iacute;fico de esa funci&amp;oacute;n. Depende de los tipos de argumentos opcionales qu&amp;eacute; m&amp;eacute;todo se invoque. Cuando los argumentos opcionales se definen en t&amp;eacute;rminos de una variable global, el tipo del argumento opcional puede incluso cambiar en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d3fb5866d0475ec4a9756fa6dd1f32495b0a6e48" translate="yes" xml:space="preserve">
          <source>therefore the second clause of the soft scope rule applies, and the assignment is ambiguous so a warning is emitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcd621dc2bcae0ca2c5088924d0e2cbc6cacc9c" translate="yes" xml:space="preserve">
          <source>this argument may be declared as &lt;code&gt;Ptr{Cvoid}&lt;/code&gt;, if it really is just an unknown pointer</source>
          <target state="translated">este argumento puede declararse como &lt;code&gt;Ptr{Cvoid}&lt;/code&gt; , si realmente es solo un puntero desconocido</target>
        </trans-unit>
        <trans-unit id="4a195d09941d0ae068a489c8e4e5a045ff8beeee" translate="yes" xml:space="preserve">
          <source>thisind()</source>
          <target state="translated">thisind()</target>
        </trans-unit>
        <trans-unit id="5b92b385647abb40b80ad6715394b5526c8f4cae" translate="yes" xml:space="preserve">
          <source>three double-quote characters delimits string literals that may contain &lt;code&gt;&quot;&lt;/code&gt; and ignore leading indentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e871d614155403445e3c23063c3064b464b3ae7" translate="yes" xml:space="preserve">
          <source>time_ns()</source>
          <target state="translated">time_ns()</target>
        </trans-unit>
        <trans-unit id="4a4cf63e9a3827b405a25e7a6fd8e2ba63a4896f" translate="yes" xml:space="preserve">
          <source>timedwait()</source>
          <target state="translated">timedwait()</target>
        </trans-unit>
        <trans-unit id="7196b5875f713c826bd279dbda843c897e2a60c2" translate="yes" xml:space="preserve">
          <source>times</source>
          <target state="translated">times</target>
        </trans-unit>
        <trans-unit id="9ee74b06d98f4df74ff9a1966edad73891635060" translate="yes" xml:space="preserve">
          <source>to control whether additional optimizations, such as inlining, are also applied.</source>
          <target state="translated">para controlar si se aplican también optimizaciones adicionales,como el inlining.</target>
        </trans-unit>
        <trans-unit id="7cd14a5b0eb884cf15dcee18098409ecafa0740e" translate="yes" xml:space="preserve">
          <source>to let &lt;code&gt;InterruptException&lt;/code&gt; be thrown by CTRL+C during the execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba1fcd8d1f0ae5acba7569b22cc1dbf033808c4" translate="yes" xml:space="preserve">
          <source>to open &lt;code&gt;hello.txt&lt;/code&gt;, call &lt;code&gt;read_and_capitalize&lt;/code&gt; on it, close &lt;code&gt;hello.txt&lt;/code&gt; and return the capitalized contents.</source>
          <target state="translated">para abrir &lt;code&gt;hello.txt&lt;/code&gt; , llame a &lt;code&gt;read_and_capitalize&lt;/code&gt; , cierre &lt;code&gt;hello.txt&lt;/code&gt; y devuelva el contenido en may&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="13759a9deb1a661c076c98b909644ec30075918e" translate="yes" xml:space="preserve">
          <source>to_indices()</source>
          <target state="translated">to_indices()</target>
        </trans-unit>
        <trans-unit id="7788e2e58767ac7e47aa7cbe2832dae49bc22301" translate="yes" xml:space="preserve">
          <source>trailing_ones()</source>
          <target state="translated">trailing_ones()</target>
        </trans-unit>
        <trans-unit id="c831ee95c7881c3685c0ab3dc75558210849f125" translate="yes" xml:space="preserve">
          <source>trailing_zeros()</source>
          <target state="translated">trailing_zeros()</target>
        </trans-unit>
        <trans-unit id="7c0c1f749450029eda0f551aecb3637cc7c0859f" translate="yes" xml:space="preserve">
          <source>transcode()</source>
          <target state="translated">transcode()</target>
        </trans-unit>
        <trans-unit id="a1dc34fe0df04524fc788cd6c40f56c5f21d75b9" translate="yes" xml:space="preserve">
          <source>translates to the following three methods:</source>
          <target state="translated">se traduce en los siguientes tres métodos:</target>
        </trans-unit>
        <trans-unit id="77199886e52b61c5d1ccbb30d0279ed65e4462f8" translate="yes" xml:space="preserve">
          <source>transpose()</source>
          <target state="translated">transpose()</target>
        </trans-unit>
        <trans-unit id="f99db702b62d5e1c53906b9f72b4c49a434618b7" translate="yes" xml:space="preserve">
          <source>triple equals sign is programmatically identical equality comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d16efca7210757397ffc6da7cc650ca8ab34e9" translate="yes" xml:space="preserve">
          <source>triple periods are a postfix operator that &quot;splat&quot; their arguments' contents into many arguments of a function call or declare a varargs function that &quot;slurps&quot; up many arguments into a single tuple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9b8415dc4e2cc70f6451918328231cec9d5a4a" translate="yes" xml:space="preserve">
          <source>trues()</source>
          <target state="translated">trues()</target>
        </trans-unit>
        <trans-unit id="47c5490a8d16f837e4ce254e3dc4c796cfe8df46" translate="yes" xml:space="preserve">
          <source>trunc()</source>
          <target state="translated">trunc()</target>
        </trans-unit>
        <trans-unit id="9ec92b29764982c40cfa79ff2db5456eb84a6dda" translate="yes" xml:space="preserve">
          <source>truncate to zero size</source>
          <target state="translated">truncado a tamaño cero</target>
        </trans-unit>
        <trans-unit id="5e2d60a263a2e00568df060496284b2b5e854280" translate="yes" xml:space="preserve">
          <source>truncate()</source>
          <target state="translated">truncate()</target>
        </trans-unit>
        <trans-unit id="a481aa41e2caf72d654ae1dd73133c9e52053d62" translate="yes" xml:space="preserve">
          <source>truncated division; quotient rounded towards zero</source>
          <target state="translated">división truncada;cociente redondeado hacia cero</target>
        </trans-unit>
        <trans-unit id="3240aa0fe3ca15051680641a59e8d7b61c286b23" translate="yes" xml:space="preserve">
          <source>try</source>
          <target state="translated">try</target>
        </trans-unit>
        <trans-unit id="7278a0415952220ca017b3d335042233736cce0a" translate="yes" xml:space="preserve">
          <source>trylock()</source>
          <target state="translated">trylock()</target>
        </trans-unit>
        <trans-unit id="41c43ee5d53850593a94dd76017fa90370f9c102" translate="yes" xml:space="preserve">
          <source>tryparse()</source>
          <target state="translated">tryparse()</target>
        </trans-unit>
        <trans-unit id="2f7b93c0386c631641f8f92257bd529fe872ecaa" translate="yes" xml:space="preserve">
          <source>type annotation or &lt;a href=&quot;../base/index#Core.typeassert&quot;&gt;&lt;code&gt;typeassert&lt;/code&gt;&lt;/a&gt;, depending on context</source>
          <target state="translated">anotaci&amp;oacute;n de tipo o &lt;a href=&quot;../base/index#Core.typeassert&quot;&gt; &lt;code&gt;typeassert&lt;/code&gt; &lt;/a&gt; , seg&amp;uacute;n el contexto</target>
        </trans-unit>
        <trans-unit id="cd51e01913753f2fb03ffbbabcdc6033bf3a6bd8" translate="yes" xml:space="preserve">
          <source>type of factorization</source>
          <target state="translated">tipo de factorización</target>
        </trans-unit>
        <trans-unit id="cb182e160c0e90271959d1f994e0bb1284713939" translate="yes" xml:space="preserve">
          <source>typeintersect()</source>
          <target state="translated">typeintersect()</target>
        </trans-unit>
        <trans-unit id="7b13356535ad16de419b3afda138f6679daccff5" translate="yes" xml:space="preserve">
          <source>typejoin()</source>
          <target state="translated">typejoin()</target>
        </trans-unit>
        <trans-unit id="5536167b693bea3ebde9f64dab417b4020c752b3" translate="yes" xml:space="preserve">
          <source>typemax()</source>
          <target state="translated">typemax()</target>
        </trans-unit>
        <trans-unit id="eec3342de313b527b3fcc326b91e3eeebe5f85a9" translate="yes" xml:space="preserve">
          <source>typemin()</source>
          <target state="translated">typemin()</target>
        </trans-unit>
        <trans-unit id="e2577dd78b54fe28c65ee56ffbc8bb73058e08c0" translate="yes" xml:space="preserve">
          <source>uid</source>
          <target state="translated">uid</target>
        </trans-unit>
        <trans-unit id="758c496d534277408b682dc8b9c08c8a825413e7" translate="yes" xml:space="preserve">
          <source>unary minus</source>
          <target state="translated">unario menos</target>
        </trans-unit>
        <trans-unit id="18130f1c3863f5bed8e2f9f254b2a9f47674720e" translate="yes" xml:space="preserve">
          <source>unary plus</source>
          <target state="translated">unary plus</target>
        </trans-unit>
        <trans-unit id="677d22571fca287bf5ef4fe60796fd4c927ca753" translate="yes" xml:space="preserve">
          <source>unescape_string()</source>
          <target state="translated">unescape_string()</target>
        </trans-unit>
        <trans-unit id="136ec8b273cf128aebdc5db926403114782bef5c" translate="yes" xml:space="preserve">
          <source>union!()</source>
          <target state="translated">union!()</target>
        </trans-unit>
        <trans-unit id="2e8908b3cdee33b534d127186598475d50ce186e" translate="yes" xml:space="preserve">
          <source>union()</source>
          <target state="translated">union()</target>
        </trans-unit>
        <trans-unit id="cfaeaa40c1243b5a1e8db00278a2637584b78787" translate="yes" xml:space="preserve">
          <source>unique!()</source>
          <target state="translated">unique!()</target>
        </trans-unit>
        <trans-unit id="ae34f349ec58d253d92368dbb29ae0efcd294126" translate="yes" xml:space="preserve">
          <source>unique()</source>
          <target state="translated">unique()</target>
        </trans-unit>
        <trans-unit id="7e68b3e55f3a6d9469a5f8e6a5d75546b7ad77ad" translate="yes" xml:space="preserve">
          <source>unlock()</source>
          <target state="translated">unlock()</target>
        </trans-unit>
        <trans-unit id="fcf914babeb6b2a0e6bb452fcf35bbd55c6192ed" translate="yes" xml:space="preserve">
          <source>unmark()</source>
          <target state="translated">unmark()</target>
        </trans-unit>
        <trans-unit id="b0da1a5c342bd0f3a9386e254493e0b2fd1d3af5" translate="yes" xml:space="preserve">
          <source>unsafe_convert()</source>
          <target state="translated">unsafe_convert()</target>
        </trans-unit>
        <trans-unit id="04794056fabb705194bb1cc292a1658b33c2a3c2" translate="yes" xml:space="preserve">
          <source>unsafe_copyto!()</source>
          <target state="translated">unsafe_copyto!()</target>
        </trans-unit>
        <trans-unit id="e623bb12adfd13cfcc7a61b76fdd2e28a152e84a" translate="yes" xml:space="preserve">
          <source>unsafe_load()</source>
          <target state="translated">unsafe_load()</target>
        </trans-unit>
        <trans-unit id="8ed884aac607517a17d4c5f54f67370502868849" translate="yes" xml:space="preserve">
          <source>unsafe_pointer_to_objref()</source>
          <target state="translated">unsafe_pointer_to_objref()</target>
        </trans-unit>
        <trans-unit id="1b6923256bd63c2f08153ee3050b67ec6f3288bd" translate="yes" xml:space="preserve">
          <source>unsafe_read()</source>
          <target state="translated">unsafe_read()</target>
        </trans-unit>
        <trans-unit id="eeb79e86ed80aabdb9c4c09ab540d05426553432" translate="yes" xml:space="preserve">
          <source>unsafe_store!()</source>
          <target state="translated">unsafe_store!()</target>
        </trans-unit>
        <trans-unit id="5d32c5e23cee843dd920a5bbd0d8cd5b9409108a" translate="yes" xml:space="preserve">
          <source>unsafe_string()</source>
          <target state="translated">unsafe_string()</target>
        </trans-unit>
        <trans-unit id="6d8b0d61a411aa97f972aeaa486f8a15aa414b2f" translate="yes" xml:space="preserve">
          <source>unsafe_trunc()</source>
          <target state="translated">unsafe_trunc()</target>
        </trans-unit>
        <trans-unit id="12944b8ae3a4470946963ba6ba222a11ac1c073f" translate="yes" xml:space="preserve">
          <source>unsafe_wrap()</source>
          <target state="translated">unsafe_wrap()</target>
        </trans-unit>
        <trans-unit id="753c9b1d9843750b91b6e60c30700b15fd76a04c" translate="yes" xml:space="preserve">
          <source>unsafe_write()</source>
          <target state="translated">unsafe_write()</target>
        </trans-unit>
        <trans-unit id="20e9798119dc97581ef037ec4e4a2b9df666511d" translate="yes" xml:space="preserve">
          <source>unsigned()</source>
          <target state="translated">unsigned()</target>
        </trans-unit>
        <trans-unit id="22a9162614678a3c513de681b3cd5ae493372369" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;(key =&amp;gt; value) in dict&lt;/code&gt; to see if this particular combination is in the properties set</source>
          <target state="translated">use &lt;code&gt;(key =&amp;gt; value) in dict&lt;/code&gt; para ver si esta combinaci&amp;oacute;n particular est&amp;aacute; en el conjunto de propiedades</target>
        </trans-unit>
        <trans-unit id="2a3768f6d89a8e751bd221364d14351a0e004dfc" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;(key =&amp;gt; value) in io&lt;/code&gt; to see if this particular combination is in the properties set</source>
          <target state="translated">use &lt;code&gt;(key =&amp;gt; value) in io&lt;/code&gt; para ver si esta combinaci&amp;oacute;n particular est&amp;aacute; en el conjunto de propiedades</target>
        </trans-unit>
        <trans-unit id="f5de890b4c2434373683fcfb16ebb84070f0167e" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;get(dict, key, default)&lt;/code&gt; to retrieve the most recent value for a particular key</source>
          <target state="translated">use &lt;code&gt;get(dict, key, default)&lt;/code&gt; para recuperar el valor m&amp;aacute;s reciente para una clave en particular</target>
        </trans-unit>
        <trans-unit id="7cdc1e6b2bfb955ef0e39af907125bae23d94faa" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;get(io, key, default)&lt;/code&gt; to retrieve the most recent value for a particular key</source>
          <target state="translated">use &lt;code&gt;get(io, key, default)&lt;/code&gt; para recuperar el valor m&amp;aacute;s reciente para una clave en particular</target>
        </trans-unit>
        <trans-unit id="0d57c3cb335cbcd6be4a00d2b3759c640eb0d722" translate="yes" xml:space="preserve">
          <source>use:</source>
          <target state="translated">use:</target>
        </trans-unit>
        <trans-unit id="92bd75ebd8fd2b0179172217b15350cc6d4002f0" translate="yes" xml:space="preserve">
          <source>using</source>
          <target state="translated">using</target>
        </trans-unit>
        <trans-unit id="bdde25acdf3b143559de245d7f0b016ac269efd9" translate="yes" xml:space="preserve">
          <source>using so-called triangular dispatch. Note that if &lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;UnionAll&lt;/code&gt; type, as e.g. &lt;code&gt;eltype(Array{T} where T &amp;lt;: Integer)&lt;/code&gt;, then &lt;code&gt;Any&lt;/code&gt; is returned (as does the the version of &lt;code&gt;eltype&lt;/code&gt; in &lt;code&gt;Base&lt;/code&gt;).</source>
          <target state="translated">utilizando el llamado env&amp;iacute;o triangular. Tenga en cuenta que si &lt;code&gt;T&lt;/code&gt; es un tipo &lt;code&gt;UnionAll&lt;/code&gt; , como por ejemplo &lt;code&gt;eltype(Array{T} where T &amp;lt;: Integer)&lt;/code&gt; , se devuelve &lt;code&gt;Any&lt;/code&gt; (al igual que la versi&amp;oacute;n de &lt;code&gt;eltype&lt;/code&gt; en &lt;code&gt;Base&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d112982a0859b09b84eb1276f515a5503450a007" translate="yes" xml:space="preserve">
          <source>using so-called triangular dispatch. Note that if &lt;code&gt;T&lt;/code&gt; is a &lt;code&gt;UnionAll&lt;/code&gt; type, as e.g. &lt;code&gt;eltype(Array{T} where T &amp;lt;: Integer)&lt;/code&gt;, then &lt;code&gt;Any&lt;/code&gt; is returned (as does the version of &lt;code&gt;eltype&lt;/code&gt; in &lt;code&gt;Base&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8216295e19f73a12e1cbcea3f4f1726b6027ea" translate="yes" xml:space="preserve">
          <source>valtype()</source>
          <target state="translated">valtype()</target>
        </trans-unit>
        <trans-unit id="e28357700f15fb0774e5a47c6c8abe8eac68b036" translate="yes" xml:space="preserve">
          <source>values()</source>
          <target state="translated">values()</target>
        </trans-unit>
        <trans-unit id="4aed5af63973c7b914bc59d95579570b589cbab1" translate="yes" xml:space="preserve">
          <source>vcat()</source>
          <target state="translated">vcat()</target>
        </trans-unit>
        <trans-unit id="124161ba296060b3e40682494a6d237a735e6ae4" translate="yes" xml:space="preserve">
          <source>vec()</source>
          <target state="translated">vec()</target>
        </trans-unit>
        <trans-unit id="9dd5e88a5f7c4eca666838cb52b1040289f471a4" translate="yes" xml:space="preserve">
          <source>vect()</source>
          <target state="translated">vect()</target>
        </trans-unit>
        <trans-unit id="340f66d6e4f65de3c6d1cf8c35141a3ce50b072b" translate="yes" xml:space="preserve">
          <source>vector literal constructor (calling &lt;a href=&quot;../arrays/index#Base.vect&quot;&gt;&lt;code&gt;vect&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">constructor literal de vector (llamando a &lt;a href=&quot;../arrays/index#Base.vect&quot;&gt; &lt;code&gt;vect&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="d1add0059bf8e9b747aba843af8d9a92c234489d" translate="yes" xml:space="preserve">
          <source>versus:</source>
          <target state="translated">versus:</target>
        </trans-unit>
        <trans-unit id="01f7cd315d21a0633301e03c1840b62cfc3aead0" translate="yes" xml:space="preserve">
          <source>vertical concatenation (calling &lt;a href=&quot;../arrays/index#Base.vcat&quot;&gt;&lt;code&gt;vcat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt;&lt;code&gt;hvcat&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">concatenaci&amp;oacute;n vertical (llamando a &lt;a href=&quot;../arrays/index#Base.vcat&quot;&gt; &lt;code&gt;vcat&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt; &lt;code&gt;hvcat&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2540eae99824b579af30b949d544a727b977425b" translate="yes" xml:space="preserve">
          <source>view()</source>
          <target state="translated">view()</target>
        </trans-unit>
        <trans-unit id="e1a58852a14e3a9968e89097ccb1fc37f2deba01" translate="yes" xml:space="preserve">
          <source>vim</source>
          <target state="translated">vim</target>
        </trans-unit>
        <trans-unit id="9e93ac058e1980d1215570ce1313bbdabed8e756" translate="yes" xml:space="preserve">
          <source>wait()</source>
          <target state="translated">wait()</target>
        </trans-unit>
        <trans-unit id="22fdd9dbe2a80515f7175db2051a2a772fe1b782" translate="yes" xml:space="preserve">
          <source>when followed by an equals sign, it begins a multi-line comment (these are nestable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776a0715b5ab9a5376704158cc88fa6270227233" translate="yes" xml:space="preserve">
          <source>when used by themselves, &lt;a href=&quot;../arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt;s represent all indices within a dimension, frequently combined with &lt;a href=&quot;../../manual/arrays/index#man-array-indexing&quot;&gt;indexing&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="translated">where</target>
        </trans-unit>
        <trans-unit id="34fb9ba9d8fac98ea09e572c3340e096bf2cc8d6" translate="yes" xml:space="preserve">
          <source>where $P$ is a permutation matrix, $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. The matrix $Q$ is stored as a sequence of Householder reflectors:</source>
          <target state="translated">donde $P$ es una matriz de permutación,$Q$ es una matriz ortogonal/unitaria y $R$ es un triángulo superior.La matriz $Q$ se almacena como una secuencia de reflectores de la casa:</target>
        </trans-unit>
        <trans-unit id="137c60ddb142aab3fec70959ba85d8153b3bf521" translate="yes" xml:space="preserve">
          <source>where $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. It is similar to the &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt; format except that the orthogonal/unitary matrix $Q$ is stored in &lt;em&gt;Compact WY&lt;/em&gt; format &lt;a href=&quot;#footnote-Schreiber1989&quot;&gt;[Schreiber1989]&lt;/a&gt;, as a lower trapezoidal matrix $V$ and an upper triangular matrix $T$ where</source>
          <target state="translated">donde $ Q $ es una matriz ortogonal / unitaria y $ R $ es triangular superior. Es similar al formato &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt; &lt;code&gt;QR&lt;/code&gt; &lt;/a&gt; excepto que la matriz ortogonal / unitaria $ Q $ se almacena en formato &lt;em&gt;Compact WY &lt;/em&gt;&lt;a href=&quot;#footnote-Schreiber1989&quot;&gt;[Schreiber1989]&lt;/a&gt; , como una matriz trapezoidal inferior $ V $ y una matriz triangular superior $ T $ donde</target>
        </trans-unit>
        <trans-unit id="6723b465f6ca8d66ff2fbba4c92042596f4e6fa5" translate="yes" xml:space="preserve">
          <source>where $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. It is similar to the &lt;a href=&quot;#LinearAlgebra.QR&quot;&gt;&lt;code&gt;QR&lt;/code&gt;&lt;/a&gt; format except that the orthogonal/unitary matrix $Q$ is stored in &lt;em&gt;Compact WY&lt;/em&gt; format &lt;sup&gt;&lt;a href=&quot;#footnote-Schreiber1989&quot; id=&quot;citeref-Schreiber1989&quot;&gt;[Schreiber1989]&lt;/a&gt;&lt;/sup&gt;. For the block size $n_b$, it is stored as a &lt;code&gt;m&lt;/code&gt;&amp;times;&lt;code&gt;n&lt;/code&gt; lower trapezoidal matrix $V$ and a matrix $T = (T_1 \; T_2 \; ... \; T_{b-1} \; T_b')$ composed of $b = \lceil \min(m,n) / n_b \rceil$ upper triangular matrices $T_j$ of size $n_b$&amp;times;$n_b$ ($j = 1, ..., b-1$) and an upper trapezoidal $n_b$&amp;times;$\min(m,n) - (b-1) n_b$ matrix $T_b'$ ($j=b$) whose upper square part denoted with $T_b$ satisfying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271b48427e6205ef07892138c063438cb11ed204" translate="yes" xml:space="preserve">
          <source>where $Q$ is an orthogonal/unitary matrix and $R$ is upper triangular. The matrix $Q$ is stored as a sequence of Householder reflectors $v_i$ and coefficients $\tau_i$ where:</source>
          <target state="translated">donde $Q$ es una matriz ortogonal/unitaria y $R$ es un triángulo superior.La matriz $Q$ se almacena como una secuencia de reflectores de la casa $v_i$ y los coeficientes $\tau_i$ donde:</target>
        </trans-unit>
        <trans-unit id="8355b735636a304572ad86122287ef87f63b294d" translate="yes" xml:space="preserve">
          <source>where $n!$ is the &lt;a href=&quot;#Base.factorial&quot;&gt;&lt;code&gt;factorial&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">donde $ n! $ es la funci&amp;oacute;n &lt;a href=&quot;#Base.factorial&quot;&gt; &lt;code&gt;factorial&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="855325c120c56936b38921fd53ddb9a4d5849144" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;Style12&lt;/code&gt; is the &lt;code&gt;BroadcastStyle&lt;/code&gt; you want to choose for outputs involving arguments of &lt;code&gt;Style1&lt;/code&gt; and &lt;code&gt;Style2&lt;/code&gt;. For example,</source>
          <target state="translated">donde &lt;code&gt;Style12&lt;/code&gt; es el &lt;code&gt;BroadcastStyle&lt;/code&gt; que desea elegir para las salidas que involucran argumentos de &lt;code&gt;Style1&lt;/code&gt; y &lt;code&gt;Style2&lt;/code&gt; . Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="dd436a68bc4b8b94b90c7900a0e752ea732ba502" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;channel&lt;/code&gt; contains free worker pids and &lt;code&gt;workers&lt;/code&gt; is the set of all workers associated with this pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70d2a0f59da10b096022394f7a5e4792ab558bc" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;g&lt;/code&gt; converts the argument to type &lt;code&gt;A&lt;/code&gt;. This is a very specific example of the more general principle of &lt;a href=&quot;https://en.wikipedia.org/wiki/Orthogonality_(programming)&quot;&gt;orthogonal design&lt;/a&gt;, in which separate concepts are assigned to separate methods. Here, &lt;code&gt;g&lt;/code&gt; will most likely need a fallback definition</source>
          <target state="translated">donde &lt;code&gt;g&lt;/code&gt; convierte el argumento para escribir &lt;code&gt;A&lt;/code&gt; . Este es un ejemplo muy espec&amp;iacute;fico del principio m&amp;aacute;s general del &lt;a href=&quot;https://en.wikipedia.org/wiki/Orthogonality_(programming)&quot;&gt;dise&amp;ntilde;o ortogonal&lt;/a&gt; , en el que se asignan conceptos separados a m&amp;eacute;todos separados. Aqu&amp;iacute;, &lt;code&gt;g&lt;/code&gt; probablemente necesitar&amp;aacute; una definici&amp;oacute;n alternativa</target>
        </trans-unit>
        <trans-unit id="9417cbae16d955617f8601e64303e7fe7d136bbf" translate="yes" xml:space="preserve">
          <source>where each &lt;code&gt;I_k&lt;/code&gt; may be a scalar integer, an array of integers, or any other &lt;a href=&quot;#man-supported-index-types&quot;&gt;supported index&lt;/a&gt;. This includes &lt;a href=&quot;../../base/arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;:&lt;/code&gt;) to select all indices within the entire dimension, ranges of the form &lt;code&gt;a:c&lt;/code&gt; or &lt;code&gt;a:b:c&lt;/code&gt; to select contiguous or strided subsections, and arrays of booleans to select elements at their &lt;code&gt;true&lt;/code&gt; indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdae2ef96323fc6c78a050482307af52736d7e10" translate="yes" xml:space="preserve">
          <source>where each &lt;code&gt;I_k&lt;/code&gt; may be a scalar integer, an array of integers, or any other &lt;a href=&quot;#man-supported-index-types-1&quot;&gt;supported index&lt;/a&gt;. This includes &lt;a href=&quot;../../base/arrays/index#Base.Colon&quot;&gt;&lt;code&gt;Colon&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;:&lt;/code&gt;) to select all indices within the entire dimension, ranges of the form &lt;code&gt;a:c&lt;/code&gt; or &lt;code&gt;a:b:c&lt;/code&gt; to select contiguous or strided subsections, and arrays of booleans to select elements at their &lt;code&gt;true&lt;/code&gt; indices.</source>
          <target state="translated">donde cada &lt;code&gt;I_k&lt;/code&gt; puede ser un entero escalar, una matriz de enteros o cualquier otro &lt;a href=&quot;#man-supported-index-types-1&quot;&gt;&amp;iacute;ndice admitido&lt;/a&gt; . Esto incluye &lt;a href=&quot;../../base/arrays/index#Base.Colon&quot;&gt; &lt;code&gt;Colon&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt; ) para seleccionar todos los &amp;iacute;ndices dentro de toda la dimensi&amp;oacute;n, los rangos de la forma &lt;code&gt;a:c&lt;/code&gt; o &lt;code&gt;a:b:c&lt;/code&gt; para seleccionar subsecciones contiguos o strided, y matrices de booleanos para seleccionar elementos en sus &lt;code&gt;true&lt;/code&gt; &amp;iacute;ndices.</target>
        </trans-unit>
        <trans-unit id="177f9426726633817d84506fce6903d99bd17e13" translate="yes" xml:space="preserve">
          <source>where in this example &lt;code&gt;x&lt;/code&gt; is assumed to be an integer.</source>
          <target state="translated">donde en este ejemplo se supone que &lt;code&gt;x&lt;/code&gt; es un n&amp;uacute;mero entero.</target>
        </trans-unit>
        <trans-unit id="3ead2d5c23b0fdb65e4340d1008980c4f65ff264" translate="yes" xml:space="preserve">
          <source>where the single-line &lt;code&gt;show(io, z)&lt;/code&gt; form is still used for an array of &lt;code&gt;Polar&lt;/code&gt; values. Technically, the REPL calls &lt;code&gt;display(z)&lt;/code&gt; to display the result of executing a line, which defaults to &lt;code&gt;show(stdout, MIME(&quot;text/plain&quot;), z)&lt;/code&gt;, which in turn defaults to &lt;code&gt;show(stdout, z)&lt;/code&gt;, but you should &lt;em&gt;not&lt;/em&gt; define new &lt;a href=&quot;../../base/io-network/index#Base.Multimedia.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; methods unless you are defining a new multimedia display handler (see &lt;a href=&quot;../../base/io-network/index#Multimedia-I/O&quot;&gt;Multimedia I/O&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af1a34a13c2285f49317a51d95a48c7a2aa4bcf" translate="yes" xml:space="preserve">
          <source>where the single-line &lt;code&gt;show(io, z)&lt;/code&gt; form is still used for an array of &lt;code&gt;Polar&lt;/code&gt; values. Technically, the REPL calls &lt;code&gt;display(z)&lt;/code&gt; to display the result of executing a line, which defaults to &lt;code&gt;show(stdout, MIME(&quot;text/plain&quot;), z)&lt;/code&gt;, which in turn defaults to &lt;code&gt;show(stdout, z)&lt;/code&gt;, but you should &lt;em&gt;not&lt;/em&gt; define new &lt;a href=&quot;../../base/io-network/index#Base.Multimedia.display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; methods unless you are defining a new multimedia display handler (see &lt;a href=&quot;../../base/io-network/index#Multimedia-I/O-1&quot;&gt;Multimedia I/O&lt;/a&gt;).</source>
          <target state="translated">donde la forma &lt;code&gt;show(io, z)&lt;/code&gt; de una sola l&amp;iacute;nea todav&amp;iacute;a se usa para una matriz de valores &lt;code&gt;Polar&lt;/code&gt; . T&amp;eacute;cnicamente, el REPL llama a &lt;code&gt;display(z)&lt;/code&gt; para mostrar el resultado de ejecutar una l&amp;iacute;nea, que por defecto &lt;code&gt;show(stdout, MIME(&quot;text/plain&quot;), z)&lt;/code&gt; , que a su vez por defecto &lt;code&gt;show(stdout, z)&lt;/code&gt; , pero usted debe &lt;em&gt;no&lt;/em&gt; definir nuevas &lt;a href=&quot;../../base/io-network/index#Base.Multimedia.display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt; m&amp;eacute;todos a menos que se est&amp;aacute; definiendo un nuevo controlador de pantalla multimedia (consulte &lt;a href=&quot;../../base/io-network/index#Multimedia-I/O-1&quot;&gt;multimedia de E / S&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9c3df251180b11fdf0c9f86de18b55c8a6fdf3c2" translate="yes" xml:space="preserve">
          <source>where the user would like to enforce that the third type parameter is always the second plus one. This can be implemented with an explicit type parameter that is checked by an &lt;a href=&quot;../constructors/index#man-inner-constructor-methods&quot;&gt;inner constructor method&lt;/a&gt; (where it can be combined with other checks):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4501e8498edba57fc348e9d80207c08af61177" translate="yes" xml:space="preserve">
          <source>which creates an &lt;code&gt;N&lt;/code&gt;-dimensional shared array of a bits type &lt;code&gt;T&lt;/code&gt; and size &lt;code&gt;dims&lt;/code&gt; across the processes specified by &lt;code&gt;pids&lt;/code&gt;. Unlike distributed arrays, a shared array is accessible only from those participating workers specified by the &lt;code&gt;pids&lt;/code&gt; named argument (and the creating process too, if it is on the same host).</source>
          <target state="translated">que crea una matriz compartida &lt;code&gt;N&lt;/code&gt; -dimensional de un tipo de bits &lt;code&gt;T&lt;/code&gt; y el tama&amp;ntilde;o se &lt;code&gt;dims&lt;/code&gt; en los procesos especificados por &lt;code&gt;pids&lt;/code&gt; . A diferencia de las matrices distribuidas, una matriz compartida es accesible solo desde los trabajadores participantes especificados por el argumento &lt;code&gt;pids&lt;/code&gt; named (y el proceso de creaci&amp;oacute;n tambi&amp;eacute;n, si est&amp;aacute; en el mismo host).</target>
        </trans-unit>
        <trans-unit id="f987f4a9e19b8f678f1aef0bf49d4ffd6c4c2854" translate="yes" xml:space="preserve">
          <source>which creates an &lt;code&gt;N&lt;/code&gt;-dimensional shared array of a bits type &lt;code&gt;T&lt;/code&gt; and size &lt;code&gt;dims&lt;/code&gt; across the processes specified by &lt;code&gt;pids&lt;/code&gt;. Unlike distributed arrays, a shared array is accessible only from those participating workers specified by the &lt;code&gt;pids&lt;/code&gt; named argument (and the creating process too, if it is on the same host). Note that only elements that are &lt;a href=&quot;../../base/base/index#Base.isbits&quot;&gt;&lt;code&gt;isbits&lt;/code&gt;&lt;/a&gt; are supported in a SharedArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06197b097d460035a7421f22ae0edf1273ad442a" translate="yes" xml:space="preserve">
          <source>which shows that &lt;code&gt;f&lt;/code&gt; has two methods, one taking two &lt;code&gt;Float64&lt;/code&gt; arguments and one taking arguments of type &lt;code&gt;Number&lt;/code&gt;. It also indicates the file and line number where the methods were defined: because these methods were defined at the REPL, we get the apparent line number &lt;code&gt;none:1&lt;/code&gt;.</source>
          <target state="translated">lo que muestra que &lt;code&gt;f&lt;/code&gt; tiene dos m&amp;eacute;todos, uno con dos argumentos &lt;code&gt;Float64&lt;/code&gt; y otro con argumentos de tipo &lt;code&gt;Number&lt;/code&gt; . Tambi&amp;eacute;n indica el archivo y el n&amp;uacute;mero de l&amp;iacute;nea donde se definieron los m&amp;eacute;todos: debido a que estos m&amp;eacute;todos se definieron en el REPL, obtenemos el n&amp;uacute;mero de l&amp;iacute;nea aparente &lt;code&gt;none:1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="384dc2245204ebe009b11b92a50317c5564f59bb" translate="yes" xml:space="preserve">
          <source>which()</source>
          <target state="translated">which()</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
        <trans-unit id="83bd8cc777d3f72dac7b7db05de6bc0ee27de51a" translate="yes" xml:space="preserve">
          <source>while the intent of this code was to give every instance a unique id, the counter value is recorded at the end of compilation. All subsequent usages of this incrementally compiled module will start from that same counter value.</source>
          <target state="translated">mientras que la intención de este código era dar a cada instancia una identificación única,el valor del contador se registra al final de la compilación.Todos los usos subsiguientes de este módulo compilado incrementalmente comenzarán a partir de ese mismo valor de contador.</target>
        </trans-unit>
        <trans-unit id="823a97466ac43dd2db67512d3b69cc44723c399f" translate="yes" xml:space="preserve">
          <source>while this will return after reading all data:</source>
          <target state="translated">mientras que esto volverá después de leer todos los datos:</target>
        </trans-unit>
        <trans-unit id="c2d9b68e9160d2897aabc374abe1bd3482a68397" translate="yes" xml:space="preserve">
          <source>widemul()</source>
          <target state="translated">widemul()</target>
        </trans-unit>
        <trans-unit id="6e7d42e89f4f7892e0ce75a579725b8e137ed9d4" translate="yes" xml:space="preserve">
          <source>widen()</source>
          <target state="translated">widen()</target>
        </trans-unit>
        <trans-unit id="fc96e7108ecfd46919583c9217ce0ff278f3cbe3" translate="yes" xml:space="preserve">
          <source>will add documentation to &lt;code&gt;f(x)&lt;/code&gt; when &lt;code&gt;condition()&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Note that even if &lt;code&gt;f(x)&lt;/code&gt; goes out of scope at the end of the block, its documentation will remain.</source>
          <target state="translated">agregar&amp;aacute; documentaci&amp;oacute;n a &lt;code&gt;f(x)&lt;/code&gt; cuando &lt;code&gt;condition()&lt;/code&gt; sea &lt;code&gt;true&lt;/code&gt; . Tenga en cuenta que incluso si &lt;code&gt;f(x)&lt;/code&gt; sale del alcance al final del bloque, su documentaci&amp;oacute;n permanecer&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="c3684e4e7a7b8f6918ab5912b8e42df007242749" translate="yes" xml:space="preserve">
          <source>will be used to draw the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10f9127d2a0125e7ec792df26ef4562e1fff1c3" translate="yes" xml:space="preserve">
          <source>will behave as if it were written like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee75a48d0fcdb32606d8735b8e702be25df89bd" translate="yes" xml:space="preserve">
          <source>will behave as if the following were written:</source>
          <target state="translated">se comportará como si lo siguiente estuviera escrito:</target>
        </trans-unit>
        <trans-unit id="9834b5627c0bafa92bfdec2b0dbdd3c92ace5566" translate="yes" xml:space="preserve">
          <source>will bring up docs for the relevant function, macro or string macro respectively. In &lt;a href=&quot;http://junolab.org&quot;&gt;Juno&lt;/a&gt; using &lt;code&gt;Ctrl-J, Ctrl-D&lt;/code&gt; will bring up documentation for the object under the cursor.</source>
          <target state="translated">mostrar&amp;aacute; documentos para la funci&amp;oacute;n relevante, macro o macro de cadena, respectivamente. En &lt;a href=&quot;http://junolab.org&quot;&gt;Juno&lt;/a&gt; usando &lt;code&gt;Ctrl-J, Ctrl-D&lt;/code&gt; mostrar&amp;aacute; la documentaci&amp;oacute;n para el objeto debajo del cursor.</target>
        </trans-unit>
        <trans-unit id="0ac7db3037e3a12214a49a925618eddf06e1149c" translate="yes" xml:space="preserve">
          <source>will contain a literal newline at the beginning.</source>
          <target state="translated">contendrá una nueva línea literal al principio.</target>
        </trans-unit>
        <trans-unit id="f8fba9318c6c5b1be2f94f8449a3379be7407511" translate="yes" xml:space="preserve">
          <source>will define &lt;code&gt;Main.bar&lt;/code&gt; on all current processes. Any processes added later (say with &lt;a href=&quot;#Distributed.addprocs&quot;&gt;&lt;code&gt;addprocs()&lt;/code&gt;&lt;/a&gt;) will not have the expression defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a371f57470b06bb202ab7e22caf42c862f8178" translate="yes" xml:space="preserve">
          <source>will define &lt;code&gt;Main.bar&lt;/code&gt; on all processes.</source>
          <target state="translated">definir&amp;aacute; &lt;code&gt;Main.bar&lt;/code&gt; en todos los procesos.</target>
        </trans-unit>
        <trans-unit id="8808b97c2d9b51b588bd1d0c41fff5ceb0df66b6" translate="yes" xml:space="preserve">
          <source>will produce no output by default. Furthermore, it's very cheap to leave debug statements like this in the source code because the system avoids evaluating the message if it would later be ignored. In this case &lt;code&gt;sum(rand(100))&lt;/code&gt; and the associated string processing will never be executed unless debug logging is enabled.</source>
          <target state="translated">no producir&amp;aacute; ninguna salida por defecto. Adem&amp;aacute;s, es muy econ&amp;oacute;mico dejar declaraciones de depuraci&amp;oacute;n como esta en el c&amp;oacute;digo fuente porque el sistema evita evaluar el mensaje si luego se ignora. En este caso, &lt;code&gt;sum(rand(100))&lt;/code&gt; y el procesamiento de cadenas asociado nunca se ejecutar&amp;aacute;n a menos que se habilite el registro de depuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c07b56fc7623497c040a3998cea81fbcb7b0c786" translate="yes" xml:space="preserve">
          <source>will show documentation for the relevant function, macro or string macro respectively. In &lt;a href=&quot;http://junolab.org&quot;&gt;Juno&lt;/a&gt; using &lt;code&gt;Ctrl-J, Ctrl-D&lt;/code&gt; will show the documentation for the object under the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="3e768a3608de2d5007cc4d6ec545f0838a3d1575" translate="yes" xml:space="preserve">
          <source>with $a_i$ the entries of $A$, $| a_i |$ the &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt;&lt;code&gt;norm&lt;/code&gt;&lt;/a&gt; of $a_i$, and $n$ the length of $A$. Since the &lt;code&gt;p&lt;/code&gt;-norm is computed using the &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt;&lt;code&gt;norm&lt;/code&gt;&lt;/a&gt;s of the entries of &lt;code&gt;A&lt;/code&gt;, the &lt;code&gt;p&lt;/code&gt;-norm of a vector of vectors is not compatible with the interpretation of it as a block vector in general if &lt;code&gt;p != 2&lt;/code&gt;.</source>
          <target state="translated">con $ a_i $ las entradas de $ A $, $ | a_i | $ la &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt; &lt;code&gt;norm&lt;/code&gt; a&lt;/a&gt; de $ a_i $, y $ n $ la longitud de $ A $. Dado que la &lt;code&gt;p&lt;/code&gt; -norm se calcula usando las &lt;a href=&quot;#LinearAlgebra.norm&quot;&gt; &lt;code&gt;norm&lt;/code&gt; as&lt;/a&gt; s de las entradas de &lt;code&gt;A&lt;/code&gt; , la &lt;code&gt;p&lt;/code&gt; -norm de un vector de vectores no es compatible con la interpretaci&amp;oacute;n de la misma como un vector de bloque en general si &lt;code&gt;p != 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb5db82c589404cb5826c44547be1e512d284cc2" translate="yes" xml:space="preserve">
          <source>with $a_{ij}$ the entries of $A$, and $m$ and $n$ its dimensions.</source>
          <target state="translated">con $a_{ij}$ las entradas de $A$,y $m$ y $n$ sus dimensiones.</target>
        </trans-unit>
        <trans-unit id="dd997c206d4a358bcb5c54d59d3b2a1a080b2b2f" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;:finalize&lt;/code&gt; for cleanup purposes.</source>
          <target state="translated">con &lt;code&gt;:finalize&lt;/code&gt; para fines de limpieza.</target>
        </trans-unit>
        <trans-unit id="8c2e17dd0844f7de42207483b2aa5ba00116738b" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;:interrupt&lt;/code&gt; when &lt;code&gt;interrupt(workers)&lt;/code&gt; is called. The &lt;code&gt;ClusterManager&lt;/code&gt; should signal the appropriate worker with an interrupt signal.</source>
          <target state="translated">with &lt;code&gt;:interrupt&lt;/code&gt; cuando se llama a &lt;code&gt;interrupt(workers)&lt;/code&gt; . El &lt;code&gt;ClusterManager&lt;/code&gt; debe se&amp;ntilde;alar al trabajador apropiado con una se&amp;ntilde;al de interrupci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bff89dc6928dea23c6df7046cf0d8972a6eba71d" translate="yes" xml:space="preserve">
          <source>with &lt;code&gt;:register&lt;/code&gt;/&lt;code&gt;:deregister&lt;/code&gt; when a worker is added / removed from the Julia worker pool.</source>
          <target state="translated">with &lt;code&gt;:register&lt;/code&gt; / &lt;code&gt;:deregister&lt;/code&gt; elimina el registro cuando se agrega / elimina un trabajador del grupo de trabajadores de Julia.</target>
        </trans-unit>
        <trans-unit id="d4a3a980b5b133718ef60a9d188936f7f92bcc05" translate="yes" xml:space="preserve">
          <source>with a Julia variable named &lt;code&gt;s&lt;/code&gt;. See also &lt;code&gt;ccall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3088d32d944d8dafc299d08016e355e35574bb8" translate="yes" xml:space="preserve">
          <source>with space-separated expressions, &lt;a href=&quot;../../manual/strings/index#man-concatenation&quot;&gt;horizontal concatenation&lt;/a&gt; (calling &lt;a href=&quot;../arrays/index#Base.hcat&quot;&gt;&lt;code&gt;hcat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt;&lt;code&gt;hvcat&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ad80b8134ad4a30ebd3e1930c3b677aeb8ad18" translate="yes" xml:space="preserve">
          <source>with space-separated expressions, horizontal concatenation (calling &lt;a href=&quot;../arrays/index#Base.hcat&quot;&gt;&lt;code&gt;hcat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt;&lt;code&gt;hvcat&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">con expresiones separadas por espacios, concatenaci&amp;oacute;n horizontal (llamando a &lt;a href=&quot;../arrays/index#Base.hcat&quot;&gt; &lt;code&gt;hcat&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../arrays/index#Base.hvcat&quot;&gt; &lt;code&gt;hvcat&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="222d955f99f198b29958fbc5aef2609abf2158d1" translate="yes" xml:space="preserve">
          <source>withenv()</source>
          <target state="translated">withenv()</target>
        </trans-unit>
        <trans-unit id="6099266d825c6c162132606d75f3dd9d3faa1ed5" translate="yes" xml:space="preserve">
          <source>without any intermediate rounding. This internally uses a high precision approximation of 2&amp;pi;, and so will give a more accurate result than &lt;code&gt;rem(x,2&amp;pi;,r)&lt;/code&gt;</source>
          <target state="translated">sin ning&amp;uacute;n redondeo intermedio. Esto utiliza internamente una aproximaci&amp;oacute;n de alta precisi&amp;oacute;n de 2&amp;pi;, por lo que dar&amp;aacute; un resultado m&amp;aacute;s preciso que &lt;code&gt;rem(x,2&amp;pi;,r)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f110eccce96d55e8d248c96993b01db23fec5e8" translate="yes" xml:space="preserve">
          <source>would be called only when the number of &lt;code&gt;indices&lt;/code&gt; matches the dimensionality of the array.</source>
          <target state="translated">solo se llamar&amp;iacute;a cuando el n&amp;uacute;mero de &lt;code&gt;indices&lt;/code&gt; coincida con la dimensionalidad de la matriz.</target>
        </trans-unit>
        <trans-unit id="5fc38453777c1e9863ca470c8d830a8ddfbee742" translate="yes" xml:space="preserve">
          <source>would create a 1-dimensional logical array whose indices match those of the columns of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">crear&amp;iacute;a una matriz l&amp;oacute;gica 1-dimensional cuyos &amp;iacute;ndices coincidir con los de las columnas de &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39e3eb719df88bb6f160975d5c920004c42891d1" translate="yes" xml:space="preserve">
          <source>would result in undefined behavior. Because each process fills the &lt;em&gt;entire&lt;/em&gt; array with its own &lt;code&gt;pid&lt;/code&gt;, whichever process is the last to execute (for any particular element of &lt;code&gt;S&lt;/code&gt;) will have its &lt;code&gt;pid&lt;/code&gt; retained.</source>
          <target state="translated">dar&amp;iacute;a lugar a un comportamiento indefinido. Debido a que cada proceso llena &lt;em&gt;toda la&lt;/em&gt; matriz con su propio &lt;code&gt;pid&lt;/code&gt; , cualquier proceso que sea el &amp;uacute;ltimo en ejecutarse (para cualquier elemento particular de &lt;code&gt;S&lt;/code&gt; ) mantendr&amp;aacute; su &lt;code&gt;pid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1d0c6c1c29e6ad5164072a5b21340dca7fcb052" translate="yes" xml:space="preserve">
          <source>write</source>
          <target state="translated">write</target>
        </trans-unit>
        <trans-unit id="5de411b2dda339b0ce1a755f5330ad3016d850f9" translate="yes" xml:space="preserve">
          <source>write()</source>
          <target state="translated">write()</target>
        </trans-unit>
        <trans-unit id="13eb4030829828610421254be5b100a6b61a9327" translate="yes" xml:space="preserve">
          <source>write, create, append</source>
          <target state="translated">escribir,crear,añadir</target>
        </trans-unit>
        <trans-unit id="cfba454c7b4e21a0a04ece068decbb58a702171c" translate="yes" xml:space="preserve">
          <source>write, create, truncate</source>
          <target state="translated">escribir,crear,truncar</target>
        </trans-unit>
        <trans-unit id="aca26504177be1b0c1aaeeaa4475996b3d42d09a" translate="yes" xml:space="preserve">
          <source>x / y, truncated to an integer</source>
          <target state="translated">x/y,truncado a un número entero</target>
        </trans-unit>
        <trans-unit id="f2f74ca895be673bfc57d3858976ee6559234751" translate="yes" xml:space="preserve">
          <source>xor()</source>
          <target state="translated">xor()</target>
        </trans-unit>
        <trans-unit id="012e2bcef67005516d5db65fb07bb62eba1888a5" translate="yes" xml:space="preserve">
          <source>yield()</source>
          <target state="translated">yield()</target>
        </trans-unit>
        <trans-unit id="d1e41170a6218f407429ed81f732ecae6a85b294" translate="yes" xml:space="preserve">
          <source>yieldto()</source>
          <target state="translated">yieldto()</target>
        </trans-unit>
        <trans-unit id="4c16dfac187ad24d14839c3f1b64e15f695394ab" translate="yes" xml:space="preserve">
          <source>you might consider defining</source>
          <target state="translated">podría considerar la posibilidad de definir</target>
        </trans-unit>
        <trans-unit id="baa731d4399c567b16a22499653f008af0c5435c" translate="yes" xml:space="preserve">
          <source>zero()</source>
          <target state="translated">zero()</target>
        </trans-unit>
        <trans-unit id="79d235be83a5d4f98d5b49d6f1182f8ced20d050" translate="yes" xml:space="preserve">
          <source>zeros()</source>
          <target state="translated">zeros()</target>
        </trans-unit>
        <trans-unit id="22dbbc7ac593d2d2a04b9a6544bfda7b717eb884" translate="yes" xml:space="preserve">
          <source>|&amp;gt;()</source>
          <target state="translated">|&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="afa7365a0055813e19fa92757db1e415d3592773" translate="yes" xml:space="preserve">
          <source>|()</source>
          <target state="translated">|()</target>
        </trans-unit>
        <trans-unit id="c65f37b2cb1ae26c89e9b4f26e2ca9e9cde4ae5b" translate="yes" xml:space="preserve">
          <source>||</source>
          <target state="translated">||</target>
        </trans-unit>
        <trans-unit id="45eb824075dd5fa38d66fc13168e009c5b986b9c" translate="yes" xml:space="preserve">
          <source>~()</source>
          <target state="translated">~()</target>
        </trans-unit>
        <trans-unit id="e1191b5206ebba999100013c567b352ad98083a2" translate="yes" xml:space="preserve">
          <source>Đ</source>
          <target state="translated">Đ</target>
        </trans-unit>
        <trans-unit id="c5f95801dfa6112ef38d7c6db4c7c5c71d021f57" translate="yes" xml:space="preserve">
          <source>đ</source>
          <target state="translated">đ</target>
        </trans-unit>
        <trans-unit id="ffb63bca89157732100fcdc015e85805b3b5620f" translate="yes" xml:space="preserve">
          <source>ħ</source>
          <target state="translated">ħ</target>
        </trans-unit>
        <trans-unit id="d44c997953a510d72d50e873ff273de2f5e4cf77" translate="yes" xml:space="preserve">
          <source>ı</source>
          <target state="translated">ı</target>
        </trans-unit>
        <trans-unit id="91ab76893a9954572453fee00f2161fbc1b3f9ca" translate="yes" xml:space="preserve">
          <source>Ł</source>
          <target state="translated">Ł</target>
        </trans-unit>
        <trans-unit id="d8d824647b9ebeea3ede7cf0f9f5d2405881bf20" translate="yes" xml:space="preserve">
          <source>ł</source>
          <target state="translated">ł</target>
        </trans-unit>
        <trans-unit id="3cee499ae346dbda4134783c2a2f290a673f3ab0" translate="yes" xml:space="preserve">
          <source>Ŋ</source>
          <target state="translated">Ŋ</target>
        </trans-unit>
        <trans-unit id="0a7f9417062a74a4877e03e7bedacdc16a4901de" translate="yes" xml:space="preserve">
          <source>ŋ</source>
          <target state="translated">ŋ</target>
        </trans-unit>
        <trans-unit id="7e70aadb54aef74ab97bf2931befa2729c3ff390" translate="yes" xml:space="preserve">
          <source>ƕ</source>
          <target state="translated">ƕ</target>
        </trans-unit>
        <trans-unit id="272badf63be1d07838830695e6e94cef64a0797c" translate="yes" xml:space="preserve">
          <source>ƞ</source>
          <target state="translated">ƞ</target>
        </trans-unit>
        <trans-unit id="e3ebbe0e3bb2263f0ce6df2a6fe03721f4ddfc2e" translate="yes" xml:space="preserve">
          <source>Ƶ</source>
          <target state="translated">Ƶ</target>
        </trans-unit>
        <trans-unit id="e1ea0b51d6b02eb546710216ab0a5bf917f1afae" translate="yes" xml:space="preserve">
          <source>ǂ</source>
          <target state="translated">ǂ</target>
        </trans-unit>
        <trans-unit id="b8143d2c9e5ff22e05415e0f48cc68cfc199049b" translate="yes" xml:space="preserve">
          <source>ȷ</source>
          <target state="translated">ȷ</target>
        </trans-unit>
        <trans-unit id="b95a6c6f39702608e3384661653a2a330406b667" translate="yes" xml:space="preserve">
          <source>ɐ</source>
          <target state="translated">ɐ</target>
        </trans-unit>
        <trans-unit id="e68f656296091e06672e00acd47b876925a8bec2" translate="yes" xml:space="preserve">
          <source>ɒ</source>
          <target state="translated">ɒ</target>
        </trans-unit>
        <trans-unit id="988b6afcbcc021156127d5c4c9bdffe5e98e2b70" translate="yes" xml:space="preserve">
          <source>ɔ</source>
          <target state="translated">ɔ</target>
        </trans-unit>
        <trans-unit id="abb18c91c6de38c3e312042261ce2c4670ccb199" translate="yes" xml:space="preserve">
          <source>ɖ</source>
          <target state="translated">ɖ</target>
        </trans-unit>
        <trans-unit id="21764b9984b917e8675160b387863d044154cd4b" translate="yes" xml:space="preserve">
          <source>ə</source>
          <target state="translated">ə</target>
        </trans-unit>
        <trans-unit id="2f2572674fc9146bfbba98c802b12dc033a8e4a3" translate="yes" xml:space="preserve">
          <source>ɣ</source>
          <target state="translated">ɣ</target>
        </trans-unit>
        <trans-unit id="b77269ae1d54c39e080e7d9183c991284bafcf95" translate="yes" xml:space="preserve">
          <source>ɤ</source>
          <target state="translated">ɤ</target>
        </trans-unit>
        <trans-unit id="52bb711beffddd24256500e12629c5a41ffb714c" translate="yes" xml:space="preserve">
          <source>ɥ</source>
          <target state="translated">ɥ</target>
        </trans-unit>
        <trans-unit id="27a52805284e75cc2dc150f91dc2d511f13f212e" translate="yes" xml:space="preserve">
          <source>ɬ</source>
          <target state="translated">ɬ</target>
        </trans-unit>
        <trans-unit id="d843f1f7f36d79df57e10d3752a7ba847da4efc1" translate="yes" xml:space="preserve">
          <source>ɭ</source>
          <target state="translated">ɭ</target>
        </trans-unit>
        <trans-unit id="f89b871af47d617920100c81e9fed0cc57581297" translate="yes" xml:space="preserve">
          <source>ɯ</source>
          <target state="translated">ɯ</target>
        </trans-unit>
        <trans-unit id="0fb7f81a54d0e3ba6b9ced493dcc00e6d51859f2" translate="yes" xml:space="preserve">
          <source>ɰ</source>
          <target state="translated">ɰ</target>
        </trans-unit>
        <trans-unit id="4328a458bc7493df9f42d3ac2e35dbafbbb0d364" translate="yes" xml:space="preserve">
          <source>ɱ</source>
          <target state="translated">ɱ</target>
        </trans-unit>
        <trans-unit id="86358cd139780191db08d1b76224815f59d8f6d3" translate="yes" xml:space="preserve">
          <source>ɲ</source>
          <target state="translated">ɲ</target>
        </trans-unit>
        <trans-unit id="cebe66b26d5db90abedad71d95aad8b8bd26e696" translate="yes" xml:space="preserve">
          <source>ɳ</source>
          <target state="translated">ɳ</target>
        </trans-unit>
        <trans-unit id="158243bb6fbe50f401c41a7dddf5553de78c7ca3" translate="yes" xml:space="preserve">
          <source>ɷ</source>
          <target state="translated">ɷ</target>
        </trans-unit>
        <trans-unit id="97ea28a832b2b50e33f4045951e1aecd31afc31f" translate="yes" xml:space="preserve">
          <source>ɸ</source>
          <target state="translated">ɸ</target>
        </trans-unit>
        <trans-unit id="49c31a08447dccac6431c75ebf49c5fd6b0206ea" translate="yes" xml:space="preserve">
          <source>ɹ</source>
          <target state="translated">ɹ</target>
        </trans-unit>
        <trans-unit id="70f94386093d0e8552101b5eef0eea3c8b7e1aa1" translate="yes" xml:space="preserve">
          <source>ɺ</source>
          <target state="translated">ɺ</target>
        </trans-unit>
        <trans-unit id="75cd50660f948c30e6d536a654a3079c8a7c18ab" translate="yes" xml:space="preserve">
          <source>ɻ</source>
          <target state="translated">ɻ</target>
        </trans-unit>
        <trans-unit id="7f927afbc94abb84e5075bb4e40675eaf5337aef" translate="yes" xml:space="preserve">
          <source>ɼ</source>
          <target state="translated">ɼ</target>
        </trans-unit>
        <trans-unit id="58c580e3cfd158b13184d1bb92ec5e1db84473e8" translate="yes" xml:space="preserve">
          <source>ɽ</source>
          <target state="translated">ɽ</target>
        </trans-unit>
        <trans-unit id="10b35048cf4838a005220fcb125f9f94acf96115" translate="yes" xml:space="preserve">
          <source>ɾ</source>
          <target state="translated">ɾ</target>
        </trans-unit>
        <trans-unit id="6740a17390d66472ba28b21e987197e989a09a04" translate="yes" xml:space="preserve">
          <source>ʂ</source>
          <target state="translated">ʂ</target>
        </trans-unit>
        <trans-unit id="e9bf95eaf9eb902c50a834efb3086f226dbdf2f4" translate="yes" xml:space="preserve">
          <source>ʃ</source>
          <target state="translated">ʃ</target>
        </trans-unit>
        <trans-unit id="24e8b9eab357859d09e1a245e220279dd06dc889" translate="yes" xml:space="preserve">
          <source>ʇ</source>
          <target state="translated">ʇ</target>
        </trans-unit>
        <trans-unit id="f74da9badf2d3bba971ed60073dbd2da6ce8b917" translate="yes" xml:space="preserve">
          <source>ʈ</source>
          <target state="translated">ʈ</target>
        </trans-unit>
        <trans-unit id="ab68230804dd38eda8d56643fa0aa44735ef9c63" translate="yes" xml:space="preserve">
          <source>ʊ</source>
          <target state="translated">ʊ</target>
        </trans-unit>
        <trans-unit id="1ba1330ba29664adb44ecfc5eabfc6e3bb743894" translate="yes" xml:space="preserve">
          <source>ʋ</source>
          <target state="translated">ʋ</target>
        </trans-unit>
        <trans-unit id="2a9516f7abb5a917cebd59259bebb21d23a89b6e" translate="yes" xml:space="preserve">
          <source>ʌ</source>
          <target state="translated">ʌ</target>
        </trans-unit>
        <trans-unit id="43396494eda2c185360c1bee3525764e663c4da3" translate="yes" xml:space="preserve">
          <source>ʍ</source>
          <target state="translated">ʍ</target>
        </trans-unit>
        <trans-unit id="7b4dbc0b083cb1d9d223165bb5d2a43a81048278" translate="yes" xml:space="preserve">
          <source>ʎ</source>
          <target state="translated">ʎ</target>
        </trans-unit>
        <trans-unit id="dc0da2429933e0b33def135316212b229e7ec2ca" translate="yes" xml:space="preserve">
          <source>ʐ</source>
          <target state="translated">ʐ</target>
        </trans-unit>
        <trans-unit id="3fadbe7e8762635016797a4cbc90c129a315cba3" translate="yes" xml:space="preserve">
          <source>ʒ</source>
          <target state="translated">ʒ</target>
        </trans-unit>
        <trans-unit id="c58653dacd6ccabe588e5708a8893f021dd1959a" translate="yes" xml:space="preserve">
          <source>ʔ</source>
          <target state="translated">ʔ</target>
        </trans-unit>
        <trans-unit id="03a4b26c05c47fb2806234cb3f3b91100e2aa667" translate="yes" xml:space="preserve">
          <source>ʕ</source>
          <target state="translated">ʕ</target>
        </trans-unit>
        <trans-unit id="4df3eddb4817e269496c50f999734d73ec2a2d06" translate="yes" xml:space="preserve">
          <source>ʖ</source>
          <target state="translated">ʖ</target>
        </trans-unit>
        <trans-unit id="79e75b69d1eda38d3b5c04def578ef3d3e91029c" translate="yes" xml:space="preserve">
          <source>ʞ</source>
          <target state="translated">ʞ</target>
        </trans-unit>
        <trans-unit id="420cab64d29cdb38987cbdea5f82f3602880c1d1" translate="yes" xml:space="preserve">
          <source>ʤ</source>
          <target state="translated">ʤ</target>
        </trans-unit>
        <trans-unit id="32d82310f121c7b69b7589bb06632caa1c345eff" translate="yes" xml:space="preserve">
          <source>ʧ</source>
          <target state="translated">ʧ</target>
        </trans-unit>
        <trans-unit id="a0ff7a5ee1ca27e9030228c36bb91945efa96a41" translate="yes" xml:space="preserve">
          <source>ʰ</source>
          <target state="translated">ʰ</target>
        </trans-unit>
        <trans-unit id="2ec05fb829612e44f26ddcfc7368750b7144cd38" translate="yes" xml:space="preserve">
          <source>ʲ</source>
          <target state="translated">ʲ</target>
        </trans-unit>
        <trans-unit id="7f28568530281d85dd98eb64bc022adaed3fcda7" translate="yes" xml:space="preserve">
          <source>ʳ</source>
          <target state="translated">ʳ</target>
        </trans-unit>
        <trans-unit id="544b2cb294511bc954130827748625f8686b8212" translate="yes" xml:space="preserve">
          <source>ʷ</source>
          <target state="translated">ʷ</target>
        </trans-unit>
        <trans-unit id="fcf45722b39c2b10eb5ba23075b579a0322ddef5" translate="yes" xml:space="preserve">
          <source>ʸ</source>
          <target state="translated">ʸ</target>
        </trans-unit>
        <trans-unit id="e5833a60f2285d3db4cd84db00c8fa5061e4f3df" translate="yes" xml:space="preserve">
          <source>ʼ</source>
          <target state="translated">ʼ</target>
        </trans-unit>
        <trans-unit id="bdcbe2efb7306180be27a5db9525124c1ecf9768" translate="yes" xml:space="preserve">
          <source>ˈ</source>
          <target state="translated">ˈ</target>
        </trans-unit>
        <trans-unit id="549733e16053d5d344d7d3b3ce26e923e37c94eb" translate="yes" xml:space="preserve">
          <source>ˌ</source>
          <target state="translated">ˌ</target>
        </trans-unit>
        <trans-unit id="ff567497ec79d965247f1c9dd0df4f1f7ddd53d5" translate="yes" xml:space="preserve">
          <source>ː</source>
          <target state="translated">ː</target>
        </trans-unit>
        <trans-unit id="0e9a0dd2f18ea2083de4925df3414cad3933068c" translate="yes" xml:space="preserve">
          <source>ˑ</source>
          <target state="translated">ˑ</target>
        </trans-unit>
        <trans-unit id="2c16c750ef4271d16dff516de9c5270bcfb8ffbe" translate="yes" xml:space="preserve">
          <source>˒</source>
          <target state="translated">˒</target>
        </trans-unit>
        <trans-unit id="1b8fc2fee622658116bb0a2f71b3efa4c3c238e7" translate="yes" xml:space="preserve">
          <source>˓</source>
          <target state="translated">˓</target>
        </trans-unit>
        <trans-unit id="78affa956fa58e9f010497f40121ac5aa5649679" translate="yes" xml:space="preserve">
          <source>˔</source>
          <target state="translated">˔</target>
        </trans-unit>
        <trans-unit id="8692a472556173cd7a863aaefc76047320d75ad6" translate="yes" xml:space="preserve">
          <source>˕</source>
          <target state="translated">˕</target>
        </trans-unit>
        <trans-unit id="6c007379fbab54ef5ea527a427606a7b5b9079d4" translate="yes" xml:space="preserve">
          <source>˘</source>
          <target state="translated">˘</target>
        </trans-unit>
        <trans-unit id="2701b77d3057b68d7870a622d759ed03e8d35463" translate="yes" xml:space="preserve">
          <source>ˡ</source>
          <target state="translated">ˡ</target>
        </trans-unit>
        <trans-unit id="33f3e550871f839764e8b8529cbde5bf2dc50e48" translate="yes" xml:space="preserve">
          <source>ˢ</source>
          <target state="translated">ˢ</target>
        </trans-unit>
        <trans-unit id="93e77b23776d3ec6e1f99e8298c808a823f1e96f" translate="yes" xml:space="preserve">
          <source>ˣ</source>
          <target state="translated">ˣ</target>
        </trans-unit>
        <trans-unit id="e9c560e47ae25d1eb624f3a58bdaae9637d2fc56" translate="yes" xml:space="preserve">
          <source>̀</source>
          <target state="translated">̀</target>
        </trans-unit>
        <trans-unit id="8ceb984a7a74b7d97837de704b0189f965d415f9" translate="yes" xml:space="preserve">
          <source>́</source>
          <target state="translated">́</target>
        </trans-unit>
        <trans-unit id="393cdcdc2e24c03bdd06bec2aa3736eb3c73ddf3" translate="yes" xml:space="preserve">
          <source>̂</source>
          <target state="translated">̂</target>
        </trans-unit>
        <trans-unit id="42dc9d3093cc7df5b6d4f489acf63680fb1a9fb1" translate="yes" xml:space="preserve">
          <source>̃</source>
          <target state="translated">̃</target>
        </trans-unit>
        <trans-unit id="3a0ad486951d448e3ac9fe2b5c7239d83b2d4cb4" translate="yes" xml:space="preserve">
          <source>̄</source>
          <target state="translated">̄</target>
        </trans-unit>
        <trans-unit id="c08c56c5e596e3d9d0080468b8007ec48c48b704" translate="yes" xml:space="preserve">
          <source>̅</source>
          <target state="translated">̅</target>
        </trans-unit>
        <trans-unit id="79993e5f1cf6acd71048144e721f812ca05cc505" translate="yes" xml:space="preserve">
          <source>̆</source>
          <target state="translated">̆</target>
        </trans-unit>
        <trans-unit id="8b3d5507a167d874ab4377126cae2eef68eeb713" translate="yes" xml:space="preserve">
          <source>̇</source>
          <target state="translated">̇</target>
        </trans-unit>
        <trans-unit id="346f07969008331435b3b2e661026fcb35f2bb56" translate="yes" xml:space="preserve">
          <source>̈</source>
          <target state="translated">̈</target>
        </trans-unit>
        <trans-unit id="7a1b8c66e30c781a4d21371c02366058a01d38ab" translate="yes" xml:space="preserve">
          <source>̉</source>
          <target state="translated">̉</target>
        </trans-unit>
        <trans-unit id="41872a5ab6579d2324975fc984be8a0c329c27ee" translate="yes" xml:space="preserve">
          <source>̊</source>
          <target state="translated">̊</target>
        </trans-unit>
        <trans-unit id="4067c22cdb5504e8c289c18a46b82e3684f96784" translate="yes" xml:space="preserve">
          <source>̋</source>
          <target state="translated">̋</target>
        </trans-unit>
        <trans-unit id="9251f3567687f42222fc720b2da41811f754a052" translate="yes" xml:space="preserve">
          <source>̌</source>
          <target state="translated">̌</target>
        </trans-unit>
        <trans-unit id="01fb82b5d08b2f134d4964eb8544f2d0881b89fd" translate="yes" xml:space="preserve">
          <source>̐</source>
          <target state="translated">̐</target>
        </trans-unit>
        <trans-unit id="43477181a1a7f6fff7ce67415c45654abf87ad7b" translate="yes" xml:space="preserve">
          <source>̒</source>
          <target state="translated">̒</target>
        </trans-unit>
        <trans-unit id="7f96aac3b9d12a1ad359b1bb0704d6004cff73f5" translate="yes" xml:space="preserve">
          <source>̕</source>
          <target state="translated">̕</target>
        </trans-unit>
        <trans-unit id="5e926bed0071b0535b75cc4c2b46ae4f37cedac5" translate="yes" xml:space="preserve">
          <source>̚</source>
          <target state="translated">̚</target>
        </trans-unit>
        <trans-unit id="9247b3c2e9509410ff00c4917c3ead03ae3294ac" translate="yes" xml:space="preserve">
          <source>̡</source>
          <target state="translated">̡</target>
        </trans-unit>
        <trans-unit id="59d81e7c58eb89518bdba304bedc956068234249" translate="yes" xml:space="preserve">
          <source>̢</source>
          <target state="translated">̢</target>
        </trans-unit>
        <trans-unit id="a217dbac5cf2e59821c0e5f090c60ea0e839f09a" translate="yes" xml:space="preserve">
          <source>̧</source>
          <target state="translated">̧</target>
        </trans-unit>
        <trans-unit id="cc38c1ff200c2bc0adfa7660e6c4bb2fc572bf60" translate="yes" xml:space="preserve">
          <source>̨</source>
          <target state="translated">̨</target>
        </trans-unit>
        <trans-unit id="6c783b950454d1bf7cb520c63141c86e2ef92ba2" translate="yes" xml:space="preserve">
          <source>̪</source>
          <target state="translated">̪</target>
        </trans-unit>
        <trans-unit id="8916ee3588e4f188f0711c8e357b9f51c23f25de" translate="yes" xml:space="preserve">
          <source>̰</source>
          <target state="translated">̰</target>
        </trans-unit>
        <trans-unit id="5f8751be82f1969230549d550972a09fffd1949c" translate="yes" xml:space="preserve">
          <source>̲</source>
          <target state="translated">̲</target>
        </trans-unit>
        <trans-unit id="d8699d8937a97955c38d55aa3f93ea8454c90ae3" translate="yes" xml:space="preserve">
          <source>̶</source>
          <target state="translated">̶</target>
        </trans-unit>
        <trans-unit id="879a552b1ff296d2c376da3d97ca56efd1b33e43" translate="yes" xml:space="preserve">
          <source≯</source>
          <target state="translated"≯</target>
        </trans-unit>
        <trans-unit id="2d6fb4b74574f9616986fe51883a9bbac777d55f" translate="yes" xml:space="preserve">
          <source>͍</source>
          <target state="translated">͍</target>
        </trans-unit>
        <trans-unit id="2ca2740294454cb59763231be6a9c92f0665bb0e" translate="yes" xml:space="preserve">
          <source>ϐ</source>
          <target state="translated">ϐ</target>
        </trans-unit>
        <trans-unit id="bf88d7a10e343616c02fedf11c4baa7163846b91" translate="yes" xml:space="preserve">
          <source>ϕ</source>
          <target state="translated">ϕ</target>
        </trans-unit>
        <trans-unit id="59d1a65a2558886280196f6761993889db762be5" translate="yes" xml:space="preserve">
          <source>Ϙ</source>
          <target state="translated">Ϙ</target>
        </trans-unit>
        <trans-unit id="58dfd48dab445a4d3ce6213b92faceb115c0ace7" translate="yes" xml:space="preserve">
          <source>ϙ</source>
          <target state="translated">ϙ</target>
        </trans-unit>
        <trans-unit id="f8204a04c299d18187c02c79252f45110ef0ccda" translate="yes" xml:space="preserve">
          <source>Ϛ</source>
          <target state="translated">Ϛ</target>
        </trans-unit>
        <trans-unit id="807d27a64c9f68b2b238319e945d52d72c0f3919" translate="yes" xml:space="preserve">
          <source>ϛ</source>
          <target state="translated">ϛ</target>
        </trans-unit>
        <trans-unit id="7bb58953aa94a2682694be1a8e72807f214dc679" translate="yes" xml:space="preserve">
          <source>Ϝ</source>
          <target state="translated">Ϝ</target>
        </trans-unit>
        <trans-unit id="22fb7128b4896c18fbb94b36b0db709acbdec789" translate="yes" xml:space="preserve">
          <source>ϝ</source>
          <target state="translated">ϝ</target>
        </trans-unit>
        <trans-unit id="0761d378370555555553c0ba6879fc32154389a6" translate="yes" xml:space="preserve">
          <source>Ϟ</source>
          <target state="translated">Ϟ</target>
        </trans-unit>
        <trans-unit id="8abfe5b5c9cddd1349c1f7230c6abb3c705de6b2" translate="yes" xml:space="preserve">
          <source>ϟ</source>
          <target state="translated">ϟ</target>
        </trans-unit>
        <trans-unit id="ffa9a9a857aab18cba15a48fbf9c93dbb995e762" translate="yes" xml:space="preserve">
          <source>Ϡ</source>
          <target state="translated">Ϡ</target>
        </trans-unit>
        <trans-unit id="5e84f7e2cbd19953803a19fd5ef18aa8a83edeb4" translate="yes" xml:space="preserve">
          <source>ϡ</source>
          <target state="translated">ϡ</target>
        </trans-unit>
        <trans-unit id="aa3bd3039459cbd662e8a32564150ec5b6869a91" translate="yes" xml:space="preserve">
          <source>ϰ</source>
          <target state="translated">ϰ</target>
        </trans-unit>
        <trans-unit id="9cedbbbd09b147d080c5c4ed5c5a614f78c4ba79" translate="yes" xml:space="preserve">
          <source>ϱ</source>
          <target state="translated">ϱ</target>
        </trans-unit>
        <trans-unit id="f89c61ec744627a14e7db319f08194836d0eb4b1" translate="yes" xml:space="preserve">
          <source>ϴ</source>
          <target state="translated">ϴ</target>
        </trans-unit>
        <trans-unit id="f3f0af09e0a8234533dca00fe03547e6abcd36c4" translate="yes" xml:space="preserve">
          <source>ϵ</source>
          <target state="translated">ϵ</target>
        </trans-unit>
        <trans-unit id="6d3b712a33ced3c1790976a3588726f81ea1cfe7" translate="yes" xml:space="preserve">
          <source>϶</source>
          <target state="translated">϶</target>
        </trans-unit>
        <trans-unit id="65d5dbc9c78ded05eca03c5686149498f1f81d68" translate="yes" xml:space="preserve">
          <source>ᴬ</source>
          <target state="translated">ᴬ</target>
        </trans-unit>
        <trans-unit id="0b41606dc93777c86bf670d9a19b04eca1da44f1" translate="yes" xml:space="preserve">
          <source>ᴮ</source>
          <target state="translated">ᴮ</target>
        </trans-unit>
        <trans-unit id="9584e01ba963c399d6dd94ea475f32007d437661" translate="yes" xml:space="preserve">
          <source>ᴰ</source>
          <target state="translated">ᴰ</target>
        </trans-unit>
        <trans-unit id="4abc73871c859251cf21231f11db176f9ed4f8a3" translate="yes" xml:space="preserve">
          <source>ᴱ</source>
          <target state="translated">ᴱ</target>
        </trans-unit>
        <trans-unit id="99d6e0ac42a60daabae1c715aea8f07088d2ead9" translate="yes" xml:space="preserve">
          <source>ᴳ</source>
          <target state="translated">ᴳ</target>
        </trans-unit>
        <trans-unit id="5d57725cdd89bafcd480818d312cc87f66499b80" translate="yes" xml:space="preserve">
          <source>ᴴ</source>
          <target state="translated">ᴴ</target>
        </trans-unit>
        <trans-unit id="38282c3a0e866ce0089baabc500f20ee287129cd" translate="yes" xml:space="preserve">
          <source>ᴵ</source>
          <target state="translated">ᴵ</target>
        </trans-unit>
        <trans-unit id="20758a1dcaa1fdaf93a8255631d90b5925558f91" translate="yes" xml:space="preserve">
          <source>ᴶ</source>
          <target state="translated">ᴶ</target>
        </trans-unit>
        <trans-unit id="64858685e4f1adcb8f44e492db259cad4c733d64" translate="yes" xml:space="preserve">
          <source>ᴷ</source>
          <target state="translated">ᴷ</target>
        </trans-unit>
        <trans-unit id="f0f35a33a7b8ac41ff842f6bcd5eb7781669459b" translate="yes" xml:space="preserve">
          <source>ᴸ</source>
          <target state="translated">ᴸ</target>
        </trans-unit>
        <trans-unit id="dfbd7793f06a8d0a2f09afe04a96258bf9fd87c4" translate="yes" xml:space="preserve">
          <source>ᴹ</source>
          <target state="translated">ᴹ</target>
        </trans-unit>
        <trans-unit id="27c3716626e507cbfd00ce8ebc8308b058200868" translate="yes" xml:space="preserve">
          <source>ᴺ</source>
          <target state="translated">ᴺ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
