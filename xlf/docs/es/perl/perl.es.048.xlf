<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="261136bd75aafd5cdd3130fb700c6549b50d82b1" translate="yes" xml:space="preserve">
          <source>Usage might be something like:</source>
          <target state="translated">El uso podría ser algo así como:</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="82df0013720cd7586b2bc95bd024b2fab925070f" translate="yes" xml:space="preserve">
          <source>Use &quot;opaque&quot; data type for the C types matched by the regular expression, even if these types are &lt;code&gt;typedef&lt;/code&gt; -equivalent to types from typemaps. Should not be used without &lt;b&gt;-x&lt;/b&gt;.</source>
          <target state="translated">Utilice el tipo de datos &quot;opaco&quot; para los tipos C que coinciden con la expresi&amp;oacute;n regular, incluso si estos tipos son &lt;code&gt;typedef&lt;/code&gt; -equivalentes a los tipos de typemaps. No debe usarse sin &lt;b&gt;-x&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="3c21be167d639b35ddaa57a08912b97d5e9dff41" translate="yes" xml:space="preserve">
          <source>Use &quot;tie&quot; to open the database.</source>
          <target state="translated">Usa &quot;empate&quot; para abrir la base de datos.</target>
        </trans-unit>
        <trans-unit id="4c6d07e8046e85c144f5081da5bd8baf9030e3a5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::Strip&quot;&gt;HTML::Strip&lt;/a&gt;, or &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::FormatText&quot;&gt;HTML::FormatText&lt;/a&gt; which not only removes HTML but also attempts to do a little simple formatting of the resulting plain text.</source>
          <target state="translated">Utilice &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::Strip&quot;&gt;HTML :: Strip&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::FormatText&quot;&gt;HTML :: FormatText,&lt;/a&gt; que no solo elimina HTML, sino que tambi&amp;eacute;n intenta aplicar un formato un poco simple al texto sin formato resultante.</target>
        </trans-unit>
        <trans-unit id="a5b53467807b9027de0ba1ae32437de79640c9fd" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;text/wrap&quot;&gt;Text::Wrap&lt;/a&gt; (part of the standard Perl distribution):</source>
          <target state="translated">Use &lt;a href=&quot;text/wrap&quot;&gt;Text :: Wrap&lt;/a&gt; (parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl):</target>
        </trans-unit>
        <trans-unit id="87276cc5955780242b6240d9ad22eaa36930d92c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:alias&lt;/code&gt; to give your own lexically scoped nicknames to existing characters, or even to give unnamed private-use characters useful names.</source>
          <target state="translated">Utilice &lt;code&gt;:alias&lt;/code&gt; para dar sus propios apodos de &amp;aacute;mbito l&amp;eacute;xico a caracteres existentes, o incluso para dar nombres &amp;uacute;tiles a los caracteres de uso privado sin nombre.</target>
        </trans-unit>
        <trans-unit id="fdf71fcf7dcb9c3fbc3fc7c52735a70671018192" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:encoding(ENCODING)&lt;/code&gt; either in open() or binmode() to install a layer that transparently does character set and encoding transformations, for example from Shift-JIS to Unicode. Note that under &lt;code&gt;stdio&lt;/code&gt; an &lt;code&gt;:encoding&lt;/code&gt; also enables &lt;code&gt;:utf8&lt;/code&gt; . See &lt;a href=&quot;perlio/encoding&quot;&gt;PerlIO::encoding&lt;/a&gt; for more information.</source>
          <target state="translated">Utilice &lt;code&gt;:encoding(ENCODING)&lt;/code&gt; en open () o binmode () para instalar una capa que realiza de forma transparente transformaciones de codificaci&amp;oacute;n y juego de caracteres, por ejemplo, de Shift-JIS a Unicode. Tenga en cuenta que bajo &lt;code&gt;stdio&lt;/code&gt; an &lt;code&gt;:encoding&lt;/code&gt; tambi&amp;eacute;n habilita &lt;code&gt;:utf8&lt;/code&gt; . Consulte &lt;a href=&quot;perlio/encoding&quot;&gt;PerlIO :: encoding&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0b32751627ad0f538a9c781523741b9c9689a81e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:via(MODULE)&lt;/code&gt; either in open() or binmode() to install a layer that does whatever transformation (for example compression / decompression, encryption / decryption) to the filehandle. See &lt;a href=&quot;perlio/via&quot;&gt;PerlIO::via&lt;/a&gt; for more information.</source>
          <target state="translated">Utilice &lt;code&gt;:via(MODULE)&lt;/code&gt; ya sea en open () o binmode () para instalar una capa que realice cualquier transformaci&amp;oacute;n (por ejemplo, compresi&amp;oacute;n / descompresi&amp;oacute;n, cifrado / descifrado) en el identificador de archivo. Consulte &lt;a href=&quot;perlio/via&quot;&gt;PerlIO :: via&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5c35f727c8e06fe9ff695531c994a06e6d32367e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; for local variables whenever you can get away with it (but see &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; for where you can't). Using &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; actually gives a local value to a global variable, which leaves you open to unforeseen side-effects of dynamic scoping.</source>
          <target state="translated">Use &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; para las variables locales siempre que pueda salirse con la suya (pero vea &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; donde no puede). El uso de &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local()&lt;/a&gt;&lt;/code&gt; realidad le da un valor local a una variable global, lo que lo deja abierto a efectos secundarios imprevistos del alcance din&amp;aacute;mico.</target>
        </trans-unit>
        <trans-unit id="c47d329f16fdbd745016d298559c2d16104952e0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt;, or else &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec()&lt;/a&gt;&lt;/code&gt; and the bitwise operations.</source>
          <target state="translated">Utilice &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; , o bien &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec()&lt;/a&gt;&lt;/code&gt; y las operaciones bit a bit.</target>
        </trans-unit>
        <trans-unit id="e7d6c1efbb4fe6ed3d0e44682a7fdfcad4845a94" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; to go from several pieces of data to one fixed-width version; use &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; to turn a fixed-width-format string into several pieces of data.</source>
          <target state="translated">Utilice el &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; para pasar de varios datos a una versi&amp;oacute;n de ancho fijo; use &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; para convertir una cadena de formato de ancho fijo en varios datos.</target>
        </trans-unit>
        <trans-unit id="8fbc052d865293ed23949ab2e7f416dfadd5a776" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse()&lt;/a&gt;&lt;/code&gt; in scalar context, as documented in &lt;a href=&quot;functions/reverse&quot;&gt;reverse&lt;/a&gt;.</source>
          <target state="translated">Utilice &lt;code&gt;&lt;a href=&quot;functions/reverse&quot;&gt;reverse()&lt;/a&gt;&lt;/code&gt; en contexto escalar, como se documenta al &lt;a href=&quot;functions/reverse&quot;&gt;rev&amp;eacute;s&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27ae995888d29f8142b3c2932bd24cab6ea87cf6" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@CARP_NOT&lt;/code&gt; , instead of &lt;code&gt;$Carp::CarpLevel&lt;/code&gt; .</source>
          <target state="translated">Utilice &lt;code&gt;@CARP_NOT&lt;/code&gt; , en lugar de &lt;code&gt;$Carp::CarpLevel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92183967ac97249aea7bc977e218502508a51699" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;NDBM_File&lt;/code&gt; with the Perl built-in &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function to establish the connection between the variable and the file. The arguments to &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; should be:</source>
          <target state="translated">Utilice &lt;code&gt;NDBM_File&lt;/code&gt; con la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; incorporada de Perl para establecer la conexi&amp;oacute;n entre la variable y el archivo. Los argumentos a &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; deben ser:</target>
        </trans-unit>
        <trans-unit id="a39f53bf0801332ad81a8e20b727e708ddef3b6b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Role::Tiny&lt;/code&gt; with &lt;code&gt;Class::Accessor&lt;/code&gt; or &lt;code&gt;Class::Tiny&lt;/code&gt; if you find yourself considering multiple inheritance. If you go with &lt;code&gt;Moose&lt;/code&gt; , it comes with its own role implementation.</source>
          <target state="translated">Use &lt;code&gt;Role::Tiny&lt;/code&gt; con &lt;code&gt;Class::Accessor&lt;/code&gt; o &lt;code&gt;Class::Tiny&lt;/code&gt; si se encuentra considerando la herencia m&amp;uacute;ltiple. Si opta por &lt;code&gt;Moose&lt;/code&gt; , viene con su propia implementaci&amp;oacute;n de roles.</target>
        </trans-unit>
        <trans-unit id="0f06b5eddbf8d97d651f4831a1beb13b8718c8d6" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;SDBM_File&lt;/code&gt; with the Perl built-in &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; function to establish the connection between the variable and the file.</source>
          <target state="translated">Utilice &lt;code&gt;SDBM_File&lt;/code&gt; con la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; incorporada de Perl para establecer la conexi&amp;oacute;n entre la variable y el archivo.</target>
        </trans-unit>
        <trans-unit id="dd5ddb92a2e87aa696e71c88822af794ba04ff5b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;SvPVbyte_nolen&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;SvPVbyte_nolen&lt;/code&gt; lugar, utilice SvPVbyte_nolen .</target>
        </trans-unit>
        <trans-unit id="5709fd5fee3c8f65a9f2b5ff4443b46d700ffd8b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;error&lt;/code&gt; to trap all that is reasonable (problems with permissions and the like), and let it die if things get out of hand. This is the safest course of action.</source>
          <target state="translated">Utilice el &lt;code&gt;error&lt;/code&gt; para atrapar todo lo que sea razonable (problemas con los permisos y cosas por el estilo) y d&amp;eacute;jelo morir si las cosas se salen de control. Este es el curso de acci&amp;oacute;n m&amp;aacute;s seguro.</target>
        </trans-unit>
        <trans-unit id="a7ae97b4dc032127dbdf525b36f3287eea7a74cc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;for&lt;/code&gt; /&lt;code&gt;foreach&lt;/code&gt; :</source>
          <target state="translated">Utilice &lt;code&gt;for&lt;/code&gt; / &lt;code&gt;foreach&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="42448f158fc4cf33aed96fb909d73152cfab8a01" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sv_pos_b2u_flags&lt;/code&gt; in preference, which correctly handles strings longer than 2Gb.</source>
          <target state="translated">Utilice &lt;code&gt;sv_pos_b2u_flags&lt;/code&gt; de preferencia, que maneja correctamente cadenas de m&amp;aacute;s de 2 Gb.</target>
        </trans-unit>
        <trans-unit id="7227aee0b7448cf59bbacaf7f7fdbecd1aac240b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sv_pos_u2b_flags&lt;/code&gt; in preference, which correctly handles strings longer than 2Gb.</source>
          <target state="translated">Utilice &lt;code&gt;sv_pos_u2b_flags&lt;/code&gt; de preferencia, que maneja correctamente cadenas de m&amp;aacute;s de 2 Gb.</target>
        </trans-unit>
        <trans-unit id="9174053d497c0bac4b0650a86818fe94eb1cad92" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;utf8::encode()&lt;/code&gt; instead.</source>
          <target state="translated">Utilice &lt;code&gt;utf8::encode()&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="e974bf00a2d723dec73908b097ca121c9409a8e4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;~pattern&lt;/code&gt; and &lt;code&gt;!pattern&lt;/code&gt; for positive and negative regexes.</source>
          <target state="translated">Utilice &lt;code&gt;~pattern&lt;/code&gt; y &lt;code&gt;!pattern&lt;/code&gt; para expresiones regulares positivas y negativas.</target>
        </trans-unit>
        <trans-unit id="061b1dc7990493487dde420be8fe1d319fffab9e" translate="yes" xml:space="preserve">
          <source>Use CPAN::SQLite if available? (yes/no)?</source>
          <target state="translated">¿Usar CPAN::SQLite si está disponible? (sí/no)?</target>
        </trans-unit>
        <trans-unit id="714325381beb635775804a746adac93cfa93686a" translate="yes" xml:space="preserve">
          <source>Use Internet-domain sockets when you want to do client-server communication that might extend to machines outside of your own system.</source>
          <target state="translated">Utilice los enchufes del dominio de Internet cuando quiera hacer una comunicación cliente-servidor que pueda extenderse a máquinas fuera de su propio sistema.</target>
        </trans-unit>
        <trans-unit id="0b9b3669dfa437dd595e2562fc06d4aa9b5c2435" translate="yes" xml:space="preserve">
          <source>Use MM[SK] macros, and VMS command line for C compiler.</source>
          <target state="translated">Usa las macros MM[SK]y la línea de comando VMS para el compilador C.</target>
        </trans-unit>
        <trans-unit id="ea4874b782f37efa4adbe580d7fbd195de341f05" translate="yes" xml:space="preserve">
          <source>Use MM[SK] macros.</source>
          <target state="translated">Usa las macros MM[SK].</target>
        </trans-unit>
        <trans-unit id="566b4db3c362df6b71e0ff5dee0038deb7684d52" translate="yes" xml:space="preserve">
          <source>Use MakeMaker's uninstalled version of a package</source>
          <target state="translated">Usar la versión desinstalada de un paquete de MakeMaker</target>
        </trans-unit>
        <trans-unit id="8e0e5dba70a90f698d3e0ca5e61baef285d0f01f" translate="yes" xml:space="preserve">
          <source>Use VMS Link command.</source>
          <target state="translated">Use el comando VMS Link.</target>
        </trans-unit>
        <trans-unit id="280948ed6505d39690e8bfb21e155eff171d0ef1" translate="yes" xml:space="preserve">
          <source>Use VMS commands to manipulate object library.</source>
          <target state="translated">Usar los comandos del VMS para manipular la biblioteca de objetos.</target>
        </trans-unit>
        <trans-unit id="bda9ca770225246f2160551c7450fb9367f1b262" translate="yes" xml:space="preserve">
          <source>Use VMS file specification syntax and CLI commands to find and invoke Perl images.</source>
          <target state="translated">Usar la sintaxis de especificación de archivos VMS y los comandos CLI para encontrar e invocar imágenes Perl.</target>
        </trans-unit>
        <trans-unit id="ede73fbf3b4744edf3efb586d91835b3d9ad9918" translate="yes" xml:space="preserve">
          <source>Use VMS syntax on command line. In particular, $(DEFINE) and $(PERL_INC) have been pulled into $(CCCMD). Also use MM[SK] macros.</source>
          <target state="translated">Usar la sintaxis del VMS en la línea de mando.En particular,$(DEFINE)y $(PERL_INC)han sido arrastrados a $(CCCMD).También usa las macros MM[SK].</target>
        </trans-unit>
        <trans-unit id="691de1dabff4e93d09d661b351d70e27dc9a3c25" translate="yes" xml:space="preserve">
          <source>Use VMS-style syntax for files; it's cheaper to just do it directly here than to have the MM_Unix method call &lt;code&gt;catfile&lt;/code&gt; repeatedly. Also, if we have to rebuild Config.pm, use MM[SK] to do it.</source>
          <target state="translated">Utilice una sintaxis de estilo VMS para archivos; es m&amp;aacute;s barato hacerlo directamente aqu&amp;iacute; que hacer que el m&amp;eacute;todo &lt;code&gt;catfile&lt;/code&gt; llame a catfile repetidamente. Adem&amp;aacute;s, si tenemos que reconstruir Config.pm, use MM [SK] para hacerlo.</target>
        </trans-unit>
        <trans-unit id="21386b7269a32025e94fbc169460c22c01ed7e1f" translate="yes" xml:space="preserve">
          <source>Use a collator object to compare Unicode text by character instead of by codepoint.</source>
          <target state="translated">Usa un objeto de compaginación para comparar el texto de Unicode por carácter en vez de por punto de código.</target>
        </trans-unit>
        <trans-unit id="af5688754fcfe001260b97f3d6228bac17ab8a5e" translate="yes" xml:space="preserve">
          <source>Use a command-line option, an environment variable, or else call &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; explicitly:</source>
          <target state="translated">Utilice una opci&amp;oacute;n de l&amp;iacute;nea de comandos, una variable de entorno o, de lo contrario, llame a &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="ba762ed342f4cf062ad179e99538aaf1e4c1ae60" translate="yes" xml:space="preserve">
          <source>Use a hash. Here's code to do both and more. It assumes that each element is unique in a given array:</source>
          <target state="translated">Usa un hachís.Aquí está el código para hacer ambas cosas y más.Asume que cada elemento es único en un conjunto determinado:</target>
        </trans-unit>
        <trans-unit id="271eac68025544545b6b8cda21c48f10de3e2be3" translate="yes" xml:space="preserve">
          <source>Use a hash. When you think the words &quot;unique&quot; or &quot;duplicated&quot;, think &quot;hash keys&quot;.</source>
          <target state="translated">Usa un hachís.Cuando pienses en las palabras &quot;único&quot; o &quot;duplicado&quot;,piensa en &quot;claves de hachís&quot;.</target>
        </trans-unit>
        <trans-unit id="fb4ec017e331a31a5b1abaea84089100f3dba15e" translate="yes" xml:space="preserve">
          <source>Use a sort helper function</source>
          <target state="translated">Usar una función de ayuda de clasificación</target>
        </trans-unit>
        <trans-unit id="f616a684cd386a4ea767461805601287970f5579" translate="yes" xml:space="preserve">
          <source>Use a tree format in which the minimum amount of space is used for the lines connecting nodes (one character in most cases). This squeezes out a few precious columns of screen real estate.</source>
          <target state="translated">Utilice un formato de árbol en el que se utilice el mínimo espacio para las líneas que conectan los nodos (un carácter en la mayoría de los casos).Esto exprime unas pocas y preciosas columnas de pantalla de bienes raíces.</target>
        </trans-unit>
        <trans-unit id="5882a02b6e19732df1aac03e7c042980b0e32ff8" translate="yes" xml:space="preserve">
          <source>Use a tree format that uses longer edges to separate OP nodes. This format tends to look better than the compact one, especially in ASCII, and is the default.</source>
          <target state="translated">Utiliza un formato de árbol que usa bordes más largos para separar los nodos OP.Este formato tiende a verse mejor que el compacto,especialmente en ASCII,y es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="4b48f7ca244968605d46dde3055bd12f89577678" translate="yes" xml:space="preserve">
          <source>Use an alpha/beta style version number. Causes version number to be &quot;0.00_01&quot; unless &lt;b&gt;-v&lt;/b&gt; is specified.</source>
          <target state="translated">Utilice un n&amp;uacute;mero de versi&amp;oacute;n de estilo alfa / beta. Hace que el n&amp;uacute;mero de versi&amp;oacute;n sea &quot;0.00_01&quot; a menos que se especifique &lt;b&gt;-v&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="6134c36e04029ff2453cb542046305a1f937b7f5" translate="yes" xml:space="preserve">
          <source>Use an alternate output format that, among other things, uses a different heading style and marks &lt;code&gt;=item&lt;/code&gt; entries with a colon in the left margin.</source>
          <target state="translated">Utilice un formato de salida alternativo que, entre otras cosas, utilice un estilo de encabezado diferente y marcas &lt;code&gt;=item&lt;/code&gt; entradas de elementos con dos puntos en el margen izquierdo.</target>
        </trans-unit>
        <trans-unit id="dcdeb0b163229c6ff03de5a0cdb9e6a57a7ea002" translate="yes" xml:space="preserve">
          <source>Use an index if it is present. The &lt;b&gt;-X&lt;/b&gt; option looks for an entry whose basename matches the name given on the command line in the file &lt;code&gt;$Config{archlib}/pod.idx&lt;/code&gt; . The</source>
          <target state="translated">Utilice un &amp;iacute;ndice si est&amp;aacute; presente. La opci&amp;oacute;n &lt;b&gt;-X&lt;/b&gt; busca una entrada cuyo nombre base coincida con el nombre dado en la l&amp;iacute;nea de comando en el archivo &lt;code&gt;$Config{archlib}/pod.idx&lt;/code&gt; . los</target>
        </trans-unit>
        <trans-unit id="ae7e5fe5c728700cd50b3c52c6ee63480235da37" translate="yes" xml:space="preserve">
          <source>Use as separator a character which is legal in a VMS-syntax file name.</source>
          <target state="translated">Usar como separador un carácter que sea legal en un nombre de archivo de sintaxis VMS.</target>
        </trans-unit>
        <trans-unit id="672a1c76642ee42c51ebfa65fd5a5d1a95399678" translate="yes" xml:space="preserve">
          <source>Use autosplit so little used or newly added functions won't be a burden to programs that don't use them. Add test functions to the module after __END__ either using AutoSplit or by saying:</source>
          <target state="translated">Usar la división automática para que las funciones poco utilizadas o recién añadidas no sean una carga para los programas que no las usan.Añade funciones de prueba al módulo después de __END__ya sea usando AutoSplit o diciendo:</target>
        </trans-unit>
        <trans-unit id="317a05001ebb0c43c5b2e6eaa3b070114b0ab11b" translate="yes" xml:space="preserve">
          <source>Use blessed references. Use the two argument form of bless to bless into the class name given as the first parameter of the constructor, e.g.,:</source>
          <target state="translated">Use referencias benditas.Usar la forma de dos argumentos de bendición para bendecir en el nombre de clase dado como primer parámetro del constructor,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ec95e04beca28ff76c489858d434dba58b46f4b7" translate="yes" xml:space="preserve">
          <source>Use both global and lexical variables.</source>
          <target state="translated">Utiliza tanto las variables globales como las léxicas.</target>
        </trans-unit>
        <trans-unit id="3ec0b24d1442368e951d28938a31c4007d000691" translate="yes" xml:space="preserve">
          <source>Use formatting conventions in which the name of each OP, rather than being written out in full, is represented by a one- or two-character abbreviation. This is mainly a joke.</source>
          <target state="translated">Utilizar convenciones de formato en las que el nombre de cada OP,en lugar de estar escrito en su totalidad,se represente con una abreviatura de uno o dos caracteres.Esto es principalmente una broma.</target>
        </trans-unit>
        <trans-unit id="32e0435d286f4e0f5dea4e605f6ba74b7a19693a" translate="yes" xml:space="preserve">
          <source>Use formatting conventions read from the environment variables &lt;code&gt;B_CONCISE_FORMAT&lt;/code&gt; , &lt;code&gt;B_CONCISE_GOTO_FORMAT&lt;/code&gt; , and &lt;code&gt;B_CONCISE_TREE_FORMAT&lt;/code&gt; .</source>
          <target state="translated">Utilice convenciones de formato le&amp;iacute;das de las variables de entorno &lt;code&gt;B_CONCISE_FORMAT&lt;/code&gt; , &lt;code&gt;B_CONCISE_GOTO_FORMAT&lt;/code&gt; y &lt;code&gt;B_CONCISE_TREE_FORMAT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fae2a54363441130a92de76cae86f65e4405daf" translate="yes" xml:space="preserve">
          <source>Use formatting conventions reminiscent of &lt;b&gt;B::Debug&lt;/b&gt;; these aren't very concise at all.</source>
          <target state="translated">Utilice convenciones de formato que recuerden a &lt;b&gt;B :: Debug&lt;/b&gt; ; estos no son muy concisos en absoluto.</target>
        </trans-unit>
        <trans-unit id="60e51473a2aeb572e34290de332f54db3103274f" translate="yes" xml:space="preserve">
          <source>Use formatting conventions that emulate the output of &lt;b&gt;B::Terse&lt;/b&gt;. The basic mode is almost indistinguishable from the real &lt;b&gt;B::Terse&lt;/b&gt;, and the exec mode looks very similar, but is in a more logical order and lacks curly brackets. &lt;b&gt;B::Terse&lt;/b&gt; doesn't have a tree mode, so the tree mode is only vaguely reminiscent of &lt;b&gt;B::Terse&lt;/b&gt;.</source>
          <target state="translated">Utilice convenciones de formato que emulen la salida de &lt;b&gt;B :: Terse&lt;/b&gt; . El modo b&amp;aacute;sico es casi indistinguible del &lt;b&gt;B :: Terse&lt;/b&gt; real , y el modo exec se ve muy similar, pero est&amp;aacute; en un orden m&amp;aacute;s l&amp;oacute;gico y carece de llaves. &lt;b&gt;B :: Terse&lt;/b&gt; no tiene un modo de &amp;aacute;rbol, por lo que el modo de &amp;aacute;rbol solo recuerda vagamente a &lt;b&gt;B :: Terse&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="05e7e7257def62f44171c1ab5e1ea5739af490a1" translate="yes" xml:space="preserve">
          <source>Use grok_atoUV() instead. atoi() has ill-defined behavior on overflows, and cannot be used for incremental parsing. It is also affected by locale, which is bad.</source>
          <target state="translated">Usa grok_atoUV()en su lugar.atoi()tiene un comportamiento mal definido en los desbordamientos,y no puede ser usado para el análisis incremental.También se ve afectado por la localización,que es mala.</target>
        </trans-unit>
        <trans-unit id="49bfe15faf704565402bc75b321564e7f1a0847e" translate="yes" xml:space="preserve">
          <source>Use grok_atoUV() instead. strtol() or strtoul() (or their IV/UV-friendly macro disguises, Strtol() and Strtoul(), or Atol() and Atoul() are affected by locale, which is bad.</source>
          <target state="translated">Usa grok_atoUV()en su lugar.strtol()o strtoul()(o sus disfraces de macros amigables con IV/UV,Strtol()y Strtoul(),o Atol()y Atoul()se ven afectados por la localización,lo cual es malo.</target>
        </trans-unit>
        <trans-unit id="fec2179657e1b299044343e0b89c5b33f2055639" translate="yes" xml:space="preserve">
          <source>Use here documents instead of repeated &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; statements.</source>
          <target state="translated">Utilice aqu&amp;iacute; documentos en lugar de declaraciones &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; repetidas .</target>
        </trans-unit>
        <trans-unit id="7408313f5feae22d66298e9df35a5c92afed0d81" translate="yes" xml:space="preserve">
          <source>Use integer arithmetic instead of floating point</source>
          <target state="translated">Usar aritmética de números enteros en lugar de punto flotante</target>
        </trans-unit>
        <trans-unit id="4a2d0c065aebe88058e7899fe2b03390f5fd9ac8" translate="yes" xml:space="preserve">
          <source>Use it as follows:</source>
          <target state="translated">Úsalo de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="0f2153ef63f7f49f92d87613b8e6086727534be7" translate="yes" xml:space="preserve">
          <source>Use mkstemp() instead.</source>
          <target state="translated">Usa mkstemp()en su lugar.</target>
        </trans-unit>
        <trans-unit id="9d215af52eba1c24168d3668f703076a6c44c6c8" translate="yes" xml:space="preserve">
          <source>Use mstat() function to emit a memory state statistic to the terminal. For more information on the format of output of mstat() see &lt;a href=&quot;../perldebguts#Using-%24ENV%7bPERL_DEBUG_MSTATS%7d&quot;&gt;Using $ENV{PERL_DEBUG_MSTATS} in perldebguts&lt;/a&gt;.</source>
          <target state="translated">Utilice la funci&amp;oacute;n mstat () para emitir una estad&amp;iacute;stica del estado de la memoria al terminal. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el formato de salida de mstat (), consulte &lt;a href=&quot;../perldebguts#Using-%24ENV%7bPERL_DEBUG_MSTATS%7d&quot;&gt;Uso de $ ENV {PERL_DEBUG_MSTATS} en perldebguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="531c130b925ffd3120eb898dd244351239e437cf" translate="yes" xml:space="preserve">
          <source>Use my_strlcpy() and my_strlcat() instead: they either use the native implementation, or Perl's own implementation (borrowed from the public domain implementation of INN).</source>
          <target state="translated">Utiliza my_strlcpy()y my_strlcat()en su lugar:o bien utilizan la implementación nativa,o la propia implementación de Perl (prestada de la implementación de dominio público de INN).</target>
        </trans-unit>
        <trans-unit id="2c9671db7475e8358c84b51b41af26939a79a05c" translate="yes" xml:space="preserve">
          <source>Use named parameters (a hash or hashref) when there are more than two parameters</source>
          <target state="translated">Usar parámetros con nombre (un hash o hashref)cuando hay más de dos parámetros</target>
        </trans-unit>
        <trans-unit id="6b1ab005a876449dcff824693329635ee0415484" translate="yes" xml:space="preserve">
          <source>Use named parameters. It's easier to use a hash like this:</source>
          <target state="translated">Usar parámetros con nombre.Es más fácil usar un hachís como este:</target>
        </trans-unit>
        <trans-unit id="a7996c874ba5c6e6417be6c43ab584f3aaff6022" translate="yes" xml:space="preserve">
          <source>Use nice English (or awk) names for ugly punctuation variables</source>
          <target state="translated">Usar nombres bonitos en inglés (o torpes)para las feas variables de puntuación...</target>
        </trans-unit>
        <trans-unit id="8d5397d217e6f86d4205c68445ae6f732da49e78" translate="yes" xml:space="preserve">
          <source>Use non-standard idioms (otherwise you are not testing TIMTOWTDI).</source>
          <target state="translated">Usar expresiones idiomáticas no estándar (de lo contrario no estás probando TIMTOWTDI).</target>
        </trans-unit>
        <trans-unit id="0f0cda525ac86ed2eeaa7f4035a68ab00df2e040" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;/x&lt;/code&gt; means that if you want real whitespace or &lt;code&gt;#&lt;/code&gt; characters in the pattern (outside a bracketed character class, which is unaffected by &lt;code&gt;/x&lt;/code&gt;), then you'll either have to escape them (using backslashes or &lt;code&gt;\Q...\E&lt;/code&gt; ) or encode them using octal, hex, or &lt;code&gt;\N{}&lt;/code&gt; escapes. It is ineffective to try to continue a comment onto the next line by escaping the &lt;code&gt;\n&lt;/code&gt; with a backslash or &lt;code&gt;\Q&lt;/code&gt; .</source>
          <target state="translated">El uso de &lt;code&gt;/x&lt;/code&gt; significa que si desea espacios en blanco reales o &lt;code&gt;#&lt;/code&gt; caracteres en el patr&amp;oacute;n (fuera de una clase de caracteres entre corchetes, que no se ve afectada por &lt;code&gt;/x&lt;/code&gt; ), tendr&amp;aacute; que escapar de ellos (usando barras invertidas o &lt;code&gt;\Q...\E&lt;/code&gt; ) o codif&amp;iacute;quelos usando escapes octal, hexadecimal o &lt;code&gt;\N{}&lt;/code&gt; . Es ineficaz para tratar de continuar un comentario en la siguiente l&amp;iacute;nea por escapar de la &lt;code&gt;\n&lt;/code&gt; con una barra invertida o &lt;code&gt;\Q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cbbacbfb5cc1cd370b8cd67026b2e577274d54c" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; on aggregates (hashes and arrays) is deprecated. It used to report whether memory for that aggregate had ever been allocated. This behavior may disappear in future versions of Perl. You should instead use a simple test for size:</source>
          <target state="translated">El uso de &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; en agregados (hash y matrices) est&amp;aacute; en desuso. Sol&amp;iacute;a ​​informar si alguna vez se hab&amp;iacute;a asignado memoria para ese agregado. Este comportamiento puede desaparecer en futuras versiones de Perl. En su lugar, deber&amp;iacute;a utilizar una prueba simple de tama&amp;ntilde;o:</target>
        </trans-unit>
        <trans-unit id="c575003ac8ed97c3c8c499c8985b645cc965dd9e" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; on aggregates (hashes and arrays) is deprecated. It used to report whether memory for that aggregate had ever been allocated. This behavior may disappear in future versions of Perl. You should instead use a simple test for size:</source>
          <target state="translated">El uso de &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; en agregados (hash y matrices) est&amp;aacute; en desuso. Sol&amp;iacute;a ​​informar si alguna vez se hab&amp;iacute;a asignado memoria para ese agregado. Este comportamiento puede desaparecer en futuras versiones de Perl. En su lugar, deber&amp;iacute;a utilizar una prueba simple de tama&amp;ntilde;o:</target>
        </trans-unit>
        <trans-unit id="a1452256e006f48ab16db831ff1d2bc55b7b495f" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; to jump into a construct is deprecated and will issue a warning. Even then, it may not be used to go into any construct that requires initialization, such as a subroutine or a &lt;code&gt;foreach&lt;/code&gt; loop. It also can't be used to go into a construct that is optimized away.</source>
          <target state="translated">El uso de &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; para saltar a una construcci&amp;oacute;n est&amp;aacute; obsoleto y emitir&amp;aacute; una advertencia. Incluso entonces, es posible que no se utilice para entrar en ninguna construcci&amp;oacute;n que requiera inicializaci&amp;oacute;n, como una subrutina o un bucle &lt;code&gt;foreach&lt;/code&gt; . Tampoco se puede usar para entrar en una construcci&amp;oacute;n optimizada.</target>
        </trans-unit>
        <trans-unit id="5aa03266aa6d88c654f206267c8022d408e9c245" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; to jump into a construct is deprecated and will issue a warning. Even then, it may not be used to go into any construct that requires initialization, such as a subroutine or a &lt;code&gt;foreach&lt;/code&gt; loop. It also can't be used to go into a construct that is optimized away.</source>
          <target state="translated">El uso de &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; LABEL&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; EXPR&lt;/code&gt; para saltar a una construcci&amp;oacute;n est&amp;aacute; obsoleto y emitir&amp;aacute; una advertencia. Incluso entonces, es posible que no se utilice para entrar en ninguna construcci&amp;oacute;n que requiera inicializaci&amp;oacute;n, como una subrutina o un bucle &lt;code&gt;foreach&lt;/code&gt; . Tampoco se puede usar para entrar en una construcci&amp;oacute;n optimizada.</target>
        </trans-unit>
        <trans-unit id="0ce1975659a74600b8f5d10e727a0e482e0ccb5e" translate="yes" xml:space="preserve">
          <source>Use of a single identifier, prefixed with &lt;code&gt;*&lt;/code&gt; . For example, &lt;code&gt;*name&lt;/code&gt; stands for any or all of &lt;code&gt;$name&lt;/code&gt; , &lt;code&gt;@name&lt;/code&gt; , &lt;code&gt;%name&lt;/code&gt; , &lt;code&gt;&amp;amp;name&lt;/code&gt; , or just &lt;code&gt;name&lt;/code&gt; . How you use it determines whether it is interpreted as all or only one of them. See &amp;ldquo;Typeglobs and Filehandles&amp;rdquo; in Camel chapter 2, &amp;ldquo;Bits and Pieces&amp;rdquo;.</source>
          <target state="translated">Uso de un &amp;uacute;nico identificador, con el prefijo &lt;code&gt;*&lt;/code&gt; . Por ejemplo, &lt;code&gt;*name&lt;/code&gt; es sin&amp;oacute;nimo de cualquiera o todos los &lt;code&gt;$name&lt;/code&gt; , &lt;code&gt;@name&lt;/code&gt; , &lt;code&gt;%name&lt;/code&gt; , &lt;code&gt;&amp;amp;name&lt;/code&gt; , o simplemente &lt;code&gt;name&lt;/code&gt; . La forma en que lo utilice determina si se interpreta como todos o solo como uno de ellos. Consulte &amp;ldquo;Typeglobs y Filehandles&amp;rdquo; en el cap&amp;iacute;tulo 2 de Camel, &amp;ldquo;Bits and Pieces&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="79921a859879ed1277d82b4cc80975d8402d69d3" translate="yes" xml:space="preserve">
          <source>Use of a subroutine call, rather than a subroutine name, as an argument to exists() is an error.</source>
          <target state="translated">El uso de una llamada de subrutina,en lugar de un nombre de subrutina,como argumento para existir()es un error.</target>
        </trans-unit>
        <trans-unit id="86136067e812367f102852e0f2a4131e0073483c" translate="yes" xml:space="preserve">
          <source>Use of any other character following the &lt;code&gt;&quot;c&quot;&lt;/code&gt; besides those listed above is discouraged, and as of Perl v5.20, the only characters actually allowed are the printable ASCII ones, minus the left brace &lt;code&gt;&quot;{&quot;&lt;/code&gt; . What happens for any of the allowed other characters is that the value is derived by xor'ing with the seventh bit, which is 64, and a warning raised if enabled. Using the non-allowed characters generates a fatal error.</source>
          <target state="translated">Se desaconseja el uso de cualquier otro car&amp;aacute;cter despu&amp;eacute;s de la &lt;code&gt;&quot;c&quot;&lt;/code&gt; adem&amp;aacute;s de los enumerados anteriormente, ya partir de Perl v5.20, los &amp;uacute;nicos caracteres realmente permitidos son los ASCII imprimibles, menos la llave izquierda &lt;code&gt;&quot;{&quot;&lt;/code&gt; . Lo que sucede con cualquiera de los otros caracteres permitidos es que el valor se deriva mediante xor'ing con el s&amp;eacute;ptimo bit, que es 64, y se genera una advertencia si est&amp;aacute; habilitado. El uso de caracteres no permitidos genera un error fatal.</target>
        </trans-unit>
        <trans-unit id="2d322945b4e21e9e3602bafb5e497ecc98176eed" translate="yes" xml:space="preserve">
          <source>Use of each publically accessible method or subroutine, including parameters and return values</source>
          <target state="translated">Utilización de cada método o subrutina de acceso público,incluidos los parámetros y los valores de retorno</target>
        </trans-unit>
        <trans-unit id="c4576ebd26dc37f362b412c956b1df320b83b3af" translate="yes" xml:space="preserve">
          <source>Use of epoch seconds</source>
          <target state="translated">Uso de los segundos de época</target>
        </trans-unit>
        <trans-unit id="1731aaf31968c5fdd9480f64d745beb19858cc51" translate="yes" xml:space="preserve">
          <source>Use of interval timers may interfere with &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;usleep()&lt;/code&gt; . In standard-speak the &quot;interaction is unspecified&quot;, which means that</source>
          <target state="translated">El uso de temporizadores de intervalo puede interferir con la &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; , el &lt;code&gt;&lt;a href=&quot;../functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; y el &lt;code&gt;usleep()&lt;/code&gt; . En lenguaje est&amp;aacute;ndar, la &quot;interacci&amp;oacute;n no est&amp;aacute; especificada&quot;, lo que significa que</target>
        </trans-unit>
        <trans-unit id="1a808d3a7e8e48ea8bc89247be3129db920de8bf" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;normalization&lt;/code&gt; parameter requires the &lt;b&gt;Unicode::Normalize&lt;/b&gt; module (see &lt;a href=&quot;normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;).</source>
          <target state="translated">El uso del par&amp;aacute;metro de &lt;code&gt;normalization&lt;/code&gt; requiere el m&amp;oacute;dulo &lt;b&gt;Unicode :: Normalize&lt;/b&gt; (consulte &lt;a href=&quot;normalize&quot;&gt;Unicode :: Normalize&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0f49c2ebf95d755e5a6d2e5df09c73558f210f71" translate="yes" xml:space="preserve">
          <source>Use one of</source>
          <target state="translated">Use uno de los</target>
        </trans-unit>
        <trans-unit id="5c06bf7bc66bd95d8dadea94a66d540da42d6175" translate="yes" xml:space="preserve">
          <source>Use one of the RPC modules( &lt;a href=&quot;https://metacpan.org/search?q=RPC&quot;&gt;https://metacpan.org/search?q=RPC&lt;/a&gt; ).</source>
          <target state="translated">Utilice uno de los m&amp;oacute;dulos RPC ( &lt;a href=&quot;https://metacpan.org/search?q=RPC&quot;&gt;https://metacpan.org/search?q=RPC&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e43df0045591deb1920c698e1e06d9540206f44c" translate="yes" xml:space="preserve">
          <source>Use only modes 'rb' or 'wb' or /wb[1-9]/.</source>
          <target state="translated">Utilice sólo los modos &quot;rb&quot; o &quot;wb&quot; o /wb[1-9]/.</target>
        </trans-unit>
        <trans-unit id="852a3fb75c58ea9ab6aee1d984501d31575dbe43" translate="yes" xml:space="preserve">
          <source>Use or avoid POSIX locales for built-in operations</source>
          <target state="translated">Usar o evitar los locales POSIX para operaciones incorporadas</target>
        </trans-unit>
        <trans-unit id="42549f09d2d3209d758990ebfc780be7cd9d6789" translate="yes" xml:space="preserve">
          <source>Use references as hash keys</source>
          <target state="translated">Usar referencias como claves hash</target>
        </trans-unit>
        <trans-unit id="24db154be0d68fd92b28271f4ccc60a8152b9d53" translate="yes" xml:space="preserve">
          <source>Use subroutine address instead of name when reporting.</source>
          <target state="translated">Utilice la dirección de la subrutina en lugar del nombre al informar.</target>
        </trans-unit>
        <trans-unit id="e65336030d621ad236216bbd262ac0c17be3ed80" translate="yes" xml:space="preserve">
          <source>Use tabs for each 8 columns of indent. The default is to use only spaces. For instance, if the style options are &lt;b&gt;-si4T&lt;/b&gt;, a line that's indented 3 times will be preceded by one tab and four spaces; if the options were &lt;b&gt;-si8T&lt;/b&gt;, the same line would be preceded by three tabs.</source>
          <target state="translated">Utilice tabulaciones para cada 8 columnas de sangr&amp;iacute;a. El valor predeterminado es usar solo espacios. Por ejemplo, si las opciones de estilo son &lt;b&gt;-si4T&lt;/b&gt; , una l&amp;iacute;nea con sangr&amp;iacute;a 3 veces estar&amp;aacute; precedida por una pesta&amp;ntilde;a y cuatro espacios; si las opciones fueran &lt;b&gt;-si8T&lt;/b&gt; , la misma l&amp;iacute;nea estar&amp;iacute;a precedida por tres pesta&amp;ntilde;as.</target>
        </trans-unit>
        <trans-unit id="900e9cc0a9414f47ad3c3cf6cec86c687d5c9a3b" translate="yes" xml:space="preserve">
          <source>Use the &amp;lt;&amp;gt; (&lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt;) operator, documented in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;. Versions of Perl older than 5.6 require that you have a shell installed that groks tildes. Later versions of Perl have this feature built in. The &lt;a href=&quot;http://search.cpan.org/perldoc/File::KGlob&quot;&gt;File::KGlob&lt;/a&gt; module (available from CPAN) gives more portable glob functionality.</source>
          <target state="translated">Utilice el operador &amp;lt;&amp;gt; ( &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt; ), documentado en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; . Las versiones de Perl anteriores a 5.6 requieren que tenga instalado un shell que asimile las tildes. Las versiones posteriores de Perl tienen esta caracter&amp;iacute;stica incorporada. El m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/File::KGlob&quot;&gt;File :: KGlob&lt;/a&gt; (disponible en CPAN) brinda una funcionalidad glob m&amp;aacute;s port&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="70b160440316452f340f816438a94ac57e43a80b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt; module. It comes with Perl and can do a true copy across file systems, and it does its magic in a portable fashion.</source>
          <target state="translated">Utilice el m&amp;oacute;dulo &lt;a href=&quot;file/copy&quot;&gt;Archivo :: Copiar&lt;/a&gt; . Viene con Perl y puede hacer una copia real en todos los sistemas de archivos, y hace su magia de manera port&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="e3fef79cbd4ceac4e867796d39b4567be99b7a0c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Resource&quot;&gt;BSD::Resource&lt;/a&gt; module from CPAN. As an example:</source>
          <target state="translated">Utilice el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Resource&quot;&gt;BSD :: Resource&lt;/a&gt; de CPAN. Como ejemplo:</target>
        </trans-unit>
        <trans-unit id="d164af42cbef789ed1001f4b9517bb726a601d59" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Folder&quot;&gt;Email::Folder&lt;/a&gt; module, like so:</source>
          <target state="translated">Utilice el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Folder&quot;&gt;Correo electr&amp;oacute;nico :: Carpeta&lt;/a&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="66505dab9f27e8ded0226b45047ac4d95ef19d93" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://search.cpan.org/perldoc/Email::MIME&quot;&gt;Email::MIME&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Sender::Simple&quot;&gt;Email::Sender::Simple&lt;/a&gt; modules, like so:</source>
          <target state="translated">Utilice los m&amp;oacute;dulos &lt;a href=&quot;http://search.cpan.org/perldoc/Email::MIME&quot;&gt;Email :: MIME&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Sender::Simple&quot;&gt;Email :: Sender :: Simple&lt;/a&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9cda4728e014cde6b4aa8b1e9ff60d1e00b00f30" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://search.cpan.org/perldoc/Email::MIME&quot;&gt;Email::MIME&lt;/a&gt; module. It's well-tested and supports all the craziness that you'll see in the real world (comment-folding whitespace, encodings, comments, etc.).</source>
          <target state="translated">Utilice el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Email::MIME&quot;&gt;Email :: MIME&lt;/a&gt; . Est&amp;aacute; bien probado y es compatible con todas las locuras que ver&amp;aacute; en el mundo real (espacios en blanco de plegado de comentarios, codificaciones, comentarios, etc.).</target>
        </trans-unit>
        <trans-unit id="6c838954123651f7a7afc095c1c154c266d44966" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://search.cpan.org/perldoc/List::Permutor&quot;&gt;List::Permutor&lt;/a&gt; module on CPAN. If the list is actually an array, try the &lt;a href=&quot;http://search.cpan.org/perldoc/Algorithm::Permute&quot;&gt;Algorithm::Permute&lt;/a&gt; module (also on CPAN). It's written in XS code and is very efficient:</source>
          <target state="translated">Utilice el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/List::Permutor&quot;&gt;List :: Permutor&lt;/a&gt; en CPAN. Si la lista es en realidad una matriz, pruebe el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Algorithm::Permute&quot;&gt;Algorithm :: Permute&lt;/a&gt; (tambi&amp;eacute;n en CPAN). Est&amp;aacute; escrito en c&amp;oacute;digo XS y es muy eficiente:</target>
        </trans-unit>
        <trans-unit id="65a351301ca14a96333147c8b3d3106e99e464c1" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://search.cpan.org/perldoc/Math::Matrix&quot;&gt;Math::Matrix&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Math::MatrixReal&quot;&gt;Math::MatrixReal&lt;/a&gt; modules (available from CPAN) or the &lt;a href=&quot;http://search.cpan.org/perldoc/PDL&quot;&gt;PDL&lt;/a&gt; extension (also available from CPAN).</source>
          <target state="translated">Utilice los m&amp;oacute;dulos &lt;a href=&quot;http://search.cpan.org/perldoc/Math::Matrix&quot;&gt;Math :: Matrix&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/Math::MatrixReal&quot;&gt;Math :: MatrixReal&lt;/a&gt; (disponibles en CPAN) o la extensi&amp;oacute;n &lt;a href=&quot;http://search.cpan.org/perldoc/PDL&quot;&gt;PDL&lt;/a&gt; (tambi&amp;eacute;n disponible en CPAN).</target>
        </trans-unit>
        <trans-unit id="9284406bbe8e82a3357e3616e641d1dd96c570f0" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::IxHash&quot;&gt;Tie::IxHash&lt;/a&gt; from CPAN.</source>
          <target state="translated">Utilice &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::IxHash&quot;&gt;Tie :: IxHash&lt;/a&gt; de CPAN.</target>
        </trans-unit>
        <trans-unit id="c0e1ce41fa321637cf3d64ebec09008a4c7342ad" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;$/&lt;/code&gt; variable (see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details). You can either set it to &lt;code&gt;&quot;&quot;&lt;/code&gt; to eliminate empty paragraphs (&lt;code&gt;&quot;abc\n\n\n\ndef&quot;&lt;/code&gt; , for instance, gets treated as two paragraphs and not three), or &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; to accept empty paragraphs.</source>
          <target state="translated">Utilice la variable &lt;code&gt;$/&lt;/code&gt; (consulte &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; para obtener m&amp;aacute;s detalles). Puede establecerlo en &lt;code&gt;&quot;&quot;&lt;/code&gt; para eliminar los p&amp;aacute;rrafos vac&amp;iacute;os ( &lt;code&gt;&quot;abc\n\n\n\ndef&quot;&lt;/code&gt; , por ejemplo, se trata como dos p&amp;aacute;rrafos y no como tres), o &lt;code&gt;&quot;\n\n&quot;&lt;/code&gt; para aceptar p&amp;aacute;rrafos vac&amp;iacute;os.</target>
        </trans-unit>
        <trans-unit id="3eb28dd761b36a73acd489d9a060d0261a86e1b3" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:encoding(...)&lt;/code&gt; layer to read from and write to filehandles using the specified encoding. (See &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;.)</source>
          <target state="translated">Use la capa &lt;code&gt;:encoding(...)&lt;/code&gt; para leer y escribir en identificadores de archivo usando la codificaci&amp;oacute;n especificada. (Ver &lt;a href=&quot;open&quot;&gt;abierto&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1043c9bb577ccc31fca3b4929e685adcde02639a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; function, probably in conjunction with a signal handler, as documented in &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; and the section on &quot;Signals&quot; in the Camel. You may instead use the more flexible &lt;a href=&quot;http://search.cpan.org/perldoc/Sys::AlarmCall&quot;&gt;Sys::AlarmCall&lt;/a&gt; module available from CPAN.</source>
          <target state="translated">Utilice la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; , probablemente junto con un manejador de se&amp;ntilde;ales, como se documenta en &lt;a href=&quot;perlipc#Signals&quot;&gt;Se&amp;ntilde;ales en perlipc&lt;/a&gt; y en la secci&amp;oacute;n &quot;Se&amp;ntilde;ales&quot; en Camel. En su lugar, puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Sys::AlarmCall&quot;&gt;Sys :: AlarmCall,&lt;/a&gt; m&amp;aacute;s flexible , disponible en CPAN.</target>
        </trans-unit>
        <trans-unit id="0b06aec35cc8ae0b522498e65b1bb4f4583c757e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; function (see &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;):</source>
          <target state="translated">Utilice la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand()&lt;/a&gt;&lt;/code&gt; (consulte &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="24977a0b1e006e0285b58c0302df8403248c380a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;Encode&lt;/code&gt; package to try converting it. For example,</source>
          <target state="translated">Utilice el paquete &lt;code&gt;Encode&lt;/code&gt; para intentar convertirlo. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="0dc5eef8749d48465cf33790a50fb27f748e0a9f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SvPV_nolen&lt;/code&gt; macro instead</source>
          <target state="translated">Utilice la macro &lt;code&gt;SvPV_nolen&lt;/code&gt; en su lugar</target>
        </trans-unit>
        <trans-unit id="ef653b1e1ac17e7ebb2ebd7fe5cecc710ea855b0" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SvPVutf8_nolen&lt;/code&gt; macro instead</source>
          <target state="translated">Utilice la macro &lt;code&gt;SvPVutf8_nolen&lt;/code&gt; en su lugar</target>
        </trans-unit>
        <trans-unit id="bfd1997217ebfcfd0b8127ecc2505173b83edb29" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; notation to get the character by that name for use in interpolated literals (double-quoted strings and regexes). In v5.16, there is an implicit</source>
          <target state="translated">Utilice la notaci&amp;oacute;n &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; para obtener el car&amp;aacute;cter con ese nombre para su uso en literales interpolados (cadenas entre comillas dobles y expresiones regulares). En v5.16, hay un impl&amp;iacute;cito</target>
        </trans-unit>
        <trans-unit id="7d52ddc8b7977a545ad663296d7fb2fca1b0f239" translate="yes" xml:space="preserve">
          <source>Use the Configure &lt;code&gt;-Dgccansipedantic&lt;/code&gt; flag to enable the gcc &lt;code&gt;-ansi
-pedantic&lt;/code&gt; flags which enforce stricter ANSI rules.</source>
          <target state="translated">Utilice el &lt;code&gt;-Dgccansipedantic&lt;/code&gt; Configure -Dgccansipedantic para habilitar los &lt;code&gt;-ansi -pedantic&lt;/code&gt; gcc -ansi -pedantic que hacen cumplir las reglas ANSI m&amp;aacute;s estrictas.</target>
        </trans-unit>
        <trans-unit id="ddf13da36f032e379ae4d2a3b1c1bae344b15223" translate="yes" xml:space="preserve">
          <source>Use the MY_CXT macro to access members of the &lt;code&gt;my_cxt_t&lt;/code&gt; struct. For example, if &lt;code&gt;my_cxt_t&lt;/code&gt; is</source>
          <target state="translated">Utilice la macro MY_CXT para acceder a los miembros de la estructura &lt;code&gt;my_cxt_t&lt;/code&gt; . Por ejemplo, si &lt;code&gt;my_cxt_t&lt;/code&gt; es</target>
        </trans-unit>
        <trans-unit id="209d781836e6b1246a37a402443979bfc102b6da" translate="yes" xml:space="preserve">
          <source>Use the alternate DATA command &quot;BDAT&quot; of the data chunking service extension defined in RFC1830 for efficiently sending large MIME messages.</source>
          <target state="translated">Utilice el comando alternativo de datos &quot;BDAT&quot; de la extensión del servicio de fragmentación de datos definido en el RFC1830 para enviar eficientemente grandes mensajes MIME.</target>
        </trans-unit>
        <trans-unit id="3b568a8fe0839108748606587d3b5ef52fd93b31" translate="yes" xml:space="preserve">
          <source>Use the author's favorite set of formatting conventions. This is the default, of course.</source>
          <target state="translated">Utiliza el conjunto de convenciones de formato favorito del autor.Este es el predeterminado,por supuesto.</target>
        </trans-unit>
        <trans-unit id="9ac34b7ac482595c74c32af79b7d65f665861078" translate="yes" xml:space="preserve">
          <source>Use the backslash ('\') character for quoting: every occurrence of a backslash followed by a character in the pattern is replaced by that character, avoiding any special interpretation of the character. (But see below for exceptions on DOSISH systems).</source>
          <target state="translated">Use el carácter de la barra invertida ('\')para citar:cada vez que aparece una barra invertida seguida de un carácter en el patrón es reemplazada por ese carácter,evitando cualquier interpretación especial del mismo.(Pero vea más abajo las excepciones en los sistemas DOSISH).</target>
        </trans-unit>
        <trans-unit id="58c791ac75ac6f9811d7c1cd895cf02a99e988fc" translate="yes" xml:space="preserve">
          <source>Use the dMY_CXT macro (a declaration) in all the functions that access MY_CXT.</source>
          <target state="translated">Utilice la macro dMY_CXT (una declaración)en todas las funciones que acceden a MY_CXT.</target>
        </trans-unit>
        <trans-unit id="a11c34555178b87ed57024b7506fd7ffd640c9ab" translate="yes" xml:space="preserve">
          <source>Use the default &quot;cmd&quot; shell that comes with Windows. Some versions of the popular 4DOS/NT shell have incompatibilities that may cause you trouble. If the build fails under that shell, try building again with the cmd shell.</source>
          <target state="translated">Usa el shell &quot;cmd&quot; por defecto que viene con Windows.Algunas versiones del popular shell 4DOS/NT tienen incompatibilidades que pueden causar problemas.Si la construcción falla bajo ese shell,intenta construir de nuevo con el cmd shell.</target>
        </trans-unit>
        <trans-unit id="860daa28ec194a818f5b182bccd22928db406092" translate="yes" xml:space="preserve">
          <source>Use the default to produce the *.dll's. But for new archdir dll's use the same rebase address if the old exists.</source>
          <target state="translated">Usa el valor por defecto para producir los *.dll's.Pero para los nuevos archidir dll's use la misma dirección de rebase si la antigua existe.</target>
        </trans-unit>
        <trans-unit id="e1fc4198386c0572da6a991c5d426478433e6323" translate="yes" xml:space="preserve">
          <source>Use the external tar program instead of Archive::Tar?</source>
          <target state="translated">Utilice el programa externo de alquitrán en lugar del Archivo::Alquitrán?</target>
        </trans-unit>
        <trans-unit id="4bac2574d114ae82b8fd263b9459dca50bff3c24" translate="yes" xml:space="preserve">
          <source>Use the following simple functions:</source>
          <target state="translated">Utilice las siguientes funciones simples:</target>
        </trans-unit>
        <trans-unit id="82c21f5742907cbf65bd7db33516fce8af244b3d" translate="yes" xml:space="preserve">
          <source>Use the force pragma like so</source>
          <target state="translated">Usar la fuerza pragmática así</target>
        </trans-unit>
        <trans-unit id="d7f075c6e2b64b3ce706fb827bca3411e7b8504c" translate="yes" xml:space="preserve">
          <source>Use the key mentioned at</source>
          <target state="translated">Utilice la clave mencionada en</target>
        </trans-unit>
        <trans-unit id="718a478ced25e8295348d28c5a0bc5741996efff" translate="yes" xml:space="preserve">
          <source>Use the libwww-perl distribution. The &lt;a href=&quot;http://search.cpan.org/perldoc/LWP::Simple&quot;&gt;LWP::Simple&lt;/a&gt; module can fetch web resources and give their content back to you as a string:</source>
          <target state="translated">Utilice la distribuci&amp;oacute;n libwww-perl. El m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/LWP::Simple&quot;&gt;LWP :: Simple&lt;/a&gt; puede buscar recursos web y devolverle su contenido como una cadena:</target>
        </trans-unit>
        <trans-unit id="cb1603df2ef00841c0d9bacb479a841ff6e25e94" translate="yes" xml:space="preserve">
          <source>Use the macros STMT_START and STMT_END.</source>
          <target state="translated">Utiliza las macros STMT_START y STMT_END.</target>
        </trans-unit>
        <trans-unit id="c888fae92abf19a81b4d142f09c5f461d8d9608c" translate="yes" xml:space="preserve">
          <source>Use the name of the class for the object reference, &lt;code&gt;$object&lt;/code&gt; , as the warnings category.</source>
          <target state="translated">Utilice el nombre de la clase para la referencia del objeto, &lt;code&gt;$object&lt;/code&gt; , como categor&amp;iacute;a de advertencias.</target>
        </trans-unit>
        <trans-unit id="90b334d1699fa8ac1b699ca7fe59817de25916cf" translate="yes" xml:space="preserve">
          <source>Use the new &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; operators to avoid having to parenthesize list operators so much, and to reduce the incidence of punctuation operators like &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;. Call your subroutines as if they were functions or list operators to avoid excessive ampersands and parentheses.</source>
          <target state="translated">Utilice los operadores new &lt;code&gt;and&lt;/code&gt; y &lt;code&gt;or&lt;/code&gt; para evitar tener que poner tanto entre par&amp;eacute;ntesis a los operadores de lista, y para reducir la incidencia de operadores de puntuaci&amp;oacute;n como &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; . Llame a sus subrutinas como si fueran funciones u operadores de lista para evitar el exceso de s&amp;iacute;mbolos y par&amp;eacute;ntesis.</target>
        </trans-unit>
        <trans-unit id="442188b51b5e18cf49fd3890247d5179d50e4049" translate="yes" xml:space="preserve">
          <source>Use the object-oriented interface if fine-grained control of when a file is removed is required.</source>
          <target state="translated">Utilice la interfaz orientada a objetos si se requiere un control detallado de cuándo se elimina un archivo.</target>
        </trans-unit>
        <trans-unit id="79265afb000f4991752261ca28217b5c373e53aa" translate="yes" xml:space="preserve">
          <source>Use the perlrebase or rebase utilities to resolve the conflicting dll addresses. The rebase package is included in the Cygwin setup. Use</source>
          <target state="translated">Utilice las utilidades de perlrebase o de rebase para resolver las direcciones dll conflictivas.El paquete de rebase está incluido en la configuración de Cygwin.Utilice</target>
        </trans-unit>
        <trans-unit id="0801908980e9c580009d45c4098d1486f12c00b2" translate="yes" xml:space="preserve">
          <source>Use the reaper code from &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; to call &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; when a SIGCHLD is received, or else use the double-fork technique described in &lt;a href=&quot;perlfaq8#How-do-I-start-a-process-in-the-background%3f&quot;&gt;How do I start a process in the background? in perlfaq8&lt;/a&gt;.</source>
          <target state="translated">Utilice el c&amp;oacute;digo reaper de &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals en perlipc&lt;/a&gt; para llamar a &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; cuando se reciba un SIGCHLD, o bien utilice la t&amp;eacute;cnica de doble bifurcaci&amp;oacute;n descrita en &lt;a href=&quot;perlfaq8#How-do-I-start-a-process-in-the-background%3f&quot;&gt;&amp;iquest;C&amp;oacute;mo inicio un proceso en segundo plano? en perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ab1865ade7c5cbdf616d9cfa7bc296cc942c842" translate="yes" xml:space="preserve">
          <source>Use the split function:</source>
          <target state="translated">Utilice la función de división:</target>
        </trans-unit>
        <trans-unit id="a9b5bca0abebc1d76df512275844e6baf7fca732" translate="yes" xml:space="preserve">
          <source>Use the three-argument form to open a file with arbitrary weird characters in it,</source>
          <target state="translated">Usa el formulario de tres argumentos para abrir un archivo con caracteres raros arbitrarios en él,</target>
        </trans-unit>
        <trans-unit id="0e2045ea69cf09267eda92b39d5360c52617d312" translate="yes" xml:space="preserve">
          <source>Use the warnings category with the same name as the current package.</source>
          <target state="translated">Utilice la categoría de advertencias con el mismo nombre que el paquete actual.</target>
        </trans-unit>
        <trans-unit id="0293445fabb340233713c8257ab81530a2889bf1" translate="yes" xml:space="preserve">
          <source>Use these rather than &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; , &lt;code&gt;stderr&lt;/code&gt; . They are written to look like &quot;function calls&quot; rather than variables because this makes it easier to</source>
          <target state="translated">Utilice estos en lugar de &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; , &lt;code&gt;stderr&lt;/code&gt; . Est&amp;aacute;n escritos para que parezcan &quot;llamadas a funciones&quot; en lugar de variables porque esto hace que sea m&amp;aacute;s f&amp;aacute;cil</target>
        </trans-unit>
        <trans-unit id="a81fa8275577903400d658f76e856afcaee1f2f2" translate="yes" xml:space="preserve">
          <source>Use these very, very, very sparingly.</source>
          <target state="translated">Usa esto con mucha,mucha,mucha moderación.</target>
        </trans-unit>
        <trans-unit id="87ebb269f56a9a915023b69eabf6ff027e2f7e0c" translate="yes" xml:space="preserve">
          <source>Use this code, provided by Mark-Jason Dominus:</source>
          <target state="translated">Use este código,proporcionado por Mark-Jason Dominus:</target>
        </trans-unit>
        <trans-unit id="1a99888f271041405f93aa8e81d9f5a2d2c20746" translate="yes" xml:space="preserve">
          <source>Use this instead of $(PERL) when you wish to run perl to work with modules. It will add things like -I$(INST_ARCH) and other necessary flags so perl can see the modules you're about to install.</source>
          <target state="translated">Usa esto en lugar de $(PERL)cuando quieras ejecutar perl para trabajar con módulos.Añadirá cosas como -I$(INST_ARCH)y otras banderas necesarias para que perl pueda ver los módulos que está a punto de instalar.</target>
        </trans-unit>
        <trans-unit id="388121ab9a82a1ad19377b89ac9de297ea8e7f2c" translate="yes" xml:space="preserve">
          <source>Use this instead of $(PERL) when you wish to run perl. It will set up extra necessary flags for you.</source>
          <target state="translated">Usa esto en lugar de $(PERL)cuando quieras ejecutar perl.Esto establecerá las banderas extra necesarias para usted.</target>
        </trans-unit>
        <trans-unit id="e6433f54cefa63ecf9e10e3ca3a566ca9eb8f9de" translate="yes" xml:space="preserve">
          <source>Use this instead:</source>
          <target state="translated">Usa esto en su lugar:</target>
        </trans-unit>
        <trans-unit id="9482ca604a352c4ff781a10e825ea8768f370ffb" translate="yes" xml:space="preserve">
          <source>Use this module like this:</source>
          <target state="translated">Usa este módulo de esta manera:</target>
        </trans-unit>
        <trans-unit id="24fd134a2b3d96c5cbea104957e21046321bc6c3" translate="yes" xml:space="preserve">
          <source>Use this to build perl outside of the source tree. Details can be found in the</source>
          <target state="translated">Usa esto para construir perlas fuera del árbol fuente.Los detalles se pueden encontrar en el</target>
        </trans-unit>
        <trans-unit id="163162b126000a656e356ab3254dffb8d7962901" translate="yes" xml:space="preserve">
          <source>Use this to disassociate a file from a PerlIO * that was associated using PerlIO_exportFILE().</source>
          <target state="translated">Use esto para disociar un archivo de un PerlIO*que fue asociado usando PerlIO_exportFILE().</target>
        </trans-unit>
        <trans-unit id="b543720e8daabc3733964f244cca2d14e58df202" translate="yes" xml:space="preserve">
          <source>Use this:</source>
          <target state="translated">Usa esto:</target>
        </trans-unit>
        <trans-unit id="03038b4251119aa1c25d1f79aa4a7d76f09e6350" translate="yes" xml:space="preserve">
          <source>Use tree connecting characters drawn from the VT100 line-drawing set. This looks better if your terminal supports it.</source>
          <target state="translated">Utilice el árbol que conecta los caracteres extraídos del juego de dibujo de líneas del VT100.Esto se ve mejor si su terminal lo soporta.</target>
        </trans-unit>
        <trans-unit id="5b877243c67d7922e8d87750811b66b31f1b397f" translate="yes" xml:space="preserve">
          <source>Use underscores to separate words. It is generally easier to read $var_names_like_this than $VarNamesLikeThis, especially for non-native speakers of English. It's also a simple rule that works consistently with VAR_NAMES_LIKE_THIS.</source>
          <target state="translated">Use subrayados para separar las palabras.Generalmente es más fácil leer $var_names_like_this que $VarNamesLikeThis,especialmente para los que no hablan inglés.También es una regla simple que funciona consistentemente con VAR_NAMES_LIKE_THIS.</target>
        </trans-unit>
        <trans-unit id="a9f6d10a6d2104b7922abf95412d3e52031b3d8b" translate="yes" xml:space="preserve">
          <source>Use unrelated features (this will flush out bizarre interactions).</source>
          <target state="translated">Usar características no relacionadas (esto eliminará las interacciones extrañas).</target>
        </trans-unit>
        <trans-unit id="b5b5116cfec58023d905fc9d5b3040b726593cef" translate="yes" xml:space="preserve">
          <source>Used as a noun in this case, this refers to a known way to compromise a program to get it to do something the author didn&amp;rsquo;t intend. Your task is to write unexploitable programs.</source>
          <target state="translated">Usado como sustantivo en este caso, se refiere a una forma conocida de comprometer un programa para que haga algo que el autor no pretend&amp;iacute;a. Su tarea es escribir programas que no se puedan explotar.</target>
        </trans-unit>
        <trans-unit id="79c6d27106d07e0f5897103d8c6a8d8a85ec8bb1" translate="yes" xml:space="preserve">
          <source>Used as a noun, a name in a &lt;b&gt;directory&lt;/b&gt; that represents a &lt;b&gt;file&lt;/b&gt;. A given file can have multiple links to it. It&amp;rsquo;s like having the same phone number listed in the phone directory under different names. As a verb, to resolve a partially &lt;b&gt;compiled&lt;/b&gt; file&amp;rsquo;s unresolved symbols into a (nearly) executable image. Linking can generally be static or dynamic, which has nothing to do with static or dynamic scoping.</source>
          <target state="translated">Usado como sustantivo, un nombre en un &lt;b&gt;directorio&lt;/b&gt; que representa un &lt;b&gt;archivo&lt;/b&gt; . Un archivo determinado puede tener varios enlaces. Es como tener el mismo n&amp;uacute;mero de tel&amp;eacute;fono en el directorio telef&amp;oacute;nico con diferentes nombres. Como verbo, para resolver los s&amp;iacute;mbolos no resueltos de un archivo parcialmente &lt;b&gt;compilado&lt;/b&gt; en una imagen (casi) ejecutable. La vinculaci&amp;oacute;n generalmente puede ser est&amp;aacute;tica o din&amp;aacute;mica, lo que no tiene nada que ver con el alcance est&amp;aacute;tico o din&amp;aacute;mico.</target>
        </trans-unit>
        <trans-unit id="5e94bf506fd2ed1897d55415e2eda38e61b816ec" translate="yes" xml:space="preserve">
          <source>Used as an lvalue, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; allows you to increase the number of hash buckets allocated for the given hash. This can gain you a measure of efficiency if you know the hash is going to get big. (This is similar to pre-extending an array by assigning a larger number to $#array.) If you say</source>
          <target state="translated">Usado como un lvalue, las &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; permiten aumentar el n&amp;uacute;mero de dep&amp;oacute;sitos de hash asignados para el hash dado. Esto puede darle una medida de eficiencia si sabe que el hash se har&amp;aacute; grande. (Esto es similar a extender previamente una matriz asignando un n&amp;uacute;mero mayor a $ # matriz).</target>
        </trans-unit>
        <trans-unit id="cfcd9d6e7d0af6a973640e08731f7579c85d2ca6" translate="yes" xml:space="preserve">
          <source>Used as an lvalue, &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; allows you to increase the number of hash buckets allocated for the given hash. This can gain you a measure of efficiency if you know the hash is going to get big. (This is similar to pre-extending an array by assigning a larger number to $#array.) If you say</source>
          <target state="translated">Usado como un lvalue, las &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; permiten aumentar el n&amp;uacute;mero de dep&amp;oacute;sitos de hash asignados para el hash dado. Esto puede darle una medida de eficiencia si sabe que el hash se har&amp;aacute; grande. (Esto es similar a extender previamente una matriz asignando un n&amp;uacute;mero mayor a $ # matriz).</target>
        </trans-unit>
        <trans-unit id="9d927fa8ae51a19f16800a69ce9d19da2c120815" translate="yes" xml:space="preserve">
          <source>Used as part of the &quot;clone&quot; process when a thread is spawned (in which case param will be non-NULL) and when a stream is being duplicated via '&amp;amp;' in the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Se utiliza como parte del proceso de &quot;clonaci&amp;oacute;n&quot; cuando se genera un hilo (en cuyo caso param no ser&amp;aacute; NULL) y cuando un flujo se duplica mediante '&amp;amp;' en &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="251c18a90eefe3a719259f59bb8700c29e6c2e54" translate="yes" xml:space="preserve">
          <source>Used by 'make install' which copies files from INST_SCRIPT to this directory if INSTALLDIRS is set to site (default).</source>
          <target state="translated">Usado por 'make install' que copia los archivos de INST_SCRIPT a este directorio si INSTALLDIRS se establece en el sitio (por defecto).</target>
        </trans-unit>
        <trans-unit id="0413527e465c4de8a077bbf425ed66e91381919a" translate="yes" xml:space="preserve">
          <source>Used by 'make install' which copies files from INST_SCRIPT to this directory if INSTALLDIRS is set to vendor.</source>
          <target state="translated">Usado por 'make install' que copia los archivos de INST_SCRIPT a este directorio si INSTALLDIRS está configurado como proveedor.</target>
        </trans-unit>
        <trans-unit id="976bda008ac56ae36683d29627c3f35a11dab1ca" translate="yes" xml:space="preserve">
          <source>Used by 'make install' which copies files from INST_SCRIPT to this directory if INSTALLDIRS=perl.</source>
          <target state="translated">Usado por 'make install' que copia los archivos de INST_SCRIPT a este directorio si INSTALLDIRS=perl.</target>
        </trans-unit>
        <trans-unit id="37d1058a6b6ba0e70de245f908c09c85ed3a873d" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_ARCHLIB to this directory if INSTALLDIRS is set to perl.</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_ARCHLIB a este directorio si INSTALLDIRS está configurado en perl.</target>
        </trans-unit>
        <trans-unit id="8402b50cbc218eeff1f81c3db2cda9adf3fffbd7" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_ARCHLIB to this directory if INSTALLDIRS is set to site (default).</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_ARCHLIB a este directorio si INSTALLDIRS se establece en el sitio (por defecto).</target>
        </trans-unit>
        <trans-unit id="c4c8328bf8916ab5fdd86eb62de06cc4f4230a70" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_ARCHLIB to this directory if INSTALLDIRS is set to vendor.</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_ARCHLIB a este directorio si INSTALLDIRS está configurado como proveedor.</target>
        </trans-unit>
        <trans-unit id="3b0cddfea5d7479fbfb7a215e845b5a123be89bb" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_BIN to this directory if INSTALLDIRS is set to site (default).</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_BIN a este directorio si INSTALLDIRS se establece en el sitio (por defecto).</target>
        </trans-unit>
        <trans-unit id="eb49c11648bc66ca1d5846b99271ffd0d898ea32" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_BIN to this directory if INSTALLDIRS is set to vendor.</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_BIN a este directorio si INSTALLDIRS está configurado como proveedor.</target>
        </trans-unit>
        <trans-unit id="2b07ebb6cc38d7286ba9e956f3eba69a5ff528fe" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_LIB to this directory if INSTALLDIRS is set to perl.</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_LIB a este directorio si INSTALLDIRS está configurado en perl.</target>
        </trans-unit>
        <trans-unit id="4c572796939181da5eba99b899ab05bfaac9e449" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_LIB to this directory if INSTALLDIRS is set to site (default).</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_LIB a este directorio si INSTALLDIRS se establece en el sitio (por defecto).</target>
        </trans-unit>
        <trans-unit id="497f3b2bdeaf3749352a862b66d7233b6bb7365e" translate="yes" xml:space="preserve">
          <source>Used by 'make install', which copies files from INST_LIB to this directory if INSTALLDIRS is set to vendor.</source>
          <target state="translated">Usado por 'make install',que copia los archivos de INST_LIB a este directorio si INSTALLDIRS está configurado como proveedor.</target>
        </trans-unit>
        <trans-unit id="955b442432c35e6b42d1db59049e0e27c3353bce" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;xsubpp&lt;/code&gt; to hook up XSUBs as Perl subs.</source>
          <target state="translated">Usado por &lt;code&gt;xsubpp&lt;/code&gt; para conectar XSUB como subs de Perl.</target>
        </trans-unit>
        <trans-unit id="b701e8ad52984344882bfc710f4e3b41bfee3ae7" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;xsubpp&lt;/code&gt; to hook up XSUBs as Perl subs. Adds Perl prototypes to the subs.</source>
          <target state="translated">Usado por &lt;code&gt;xsubpp&lt;/code&gt; para conectar XSUB como subs de Perl. Agrega prototipos de Perl a los subs.</target>
        </trans-unit>
        <trans-unit id="bf413f31411cb5187dfc08c3a35d494612fab477" translate="yes" xml:space="preserve">
          <source>Used by Unicode internally for generating other properties and not intended to be used stand-alone</source>
          <target state="translated">Usado por Unicode internamente para generar otras propiedades y no destinado a ser usado de forma independiente</target>
        </trans-unit>
        <trans-unit id="4e698d59aaba8e3ee1c30011c41b0b74d5937cc8" translate="yes" xml:space="preserve">
          <source>Used by a &lt;b&gt;standard I/O&lt;/b&gt; output stream that flushes its &lt;b&gt;buffer&lt;/b&gt; after every &lt;b&gt;newline&lt;/b&gt;. Many standard I/O libraries automatically set up line buffering on output that is going to the terminal.</source>
          <target state="translated">Utilizado por un flujo de salida de &lt;b&gt;E / S est&amp;aacute;ndar&lt;/b&gt; que vac&amp;iacute;a su &lt;b&gt;b&amp;uacute;fer&lt;/b&gt; despu&amp;eacute;s de cada &lt;b&gt;nueva l&amp;iacute;nea&lt;/b&gt; . Muchas bibliotecas de E / S est&amp;aacute;ndar configuran autom&amp;aacute;ticamente el b&amp;uacute;fer de l&amp;iacute;nea en la salida que va al terminal.</target>
        </trans-unit>
        <trans-unit id="e00976e80fe78228b9297b3ddbd122a14f1abe1f" translate="yes" xml:space="preserve">
          <source>Used by some OS' to define DL_FUNCS and DL_VARS and write the *.exp files.</source>
          <target state="translated">Usado por algunos OS' para definir DL_FUNCS y DL_VARS y escribir los archivos *.exp.</target>
        </trans-unit>
        <trans-unit id="1ba26d0698fc6f53589c3fcda2fd4a8860e0e9f9" translate="yes" xml:space="preserve">
          <source>Used by the IS_SAFE_SYSCALL() macro.</source>
          <target state="translated">Usado por la macro IS_SAFE_SYSCALL().</target>
        </trans-unit>
        <trans-unit id="c2253cb286405345c16b81c3000c80dff0161abd" translate="yes" xml:space="preserve">
          <source>Used during the execution phase for managing search and replace patterns, and for providing the text for &lt;code&gt;$&amp;amp;&lt;/code&gt; , &lt;code&gt;$1&lt;/code&gt; etc. &lt;code&gt;subbeg&lt;/code&gt; points to a buffer (either the original string, or a copy in the case of &lt;code&gt;RX_MATCH_COPIED(rx)&lt;/code&gt; ), and &lt;code&gt;sublen&lt;/code&gt; is the length of the buffer. The &lt;code&gt;RX_OFFS&lt;/code&gt; start and end indices index into this buffer.</source>
          <target state="translated">Se usa durante la fase de ejecuci&amp;oacute;n para administrar patrones de b&amp;uacute;squeda y reemplazo, y para proporcionar el texto para &lt;code&gt;$&amp;amp;&lt;/code&gt; , &lt;code&gt;$1&lt;/code&gt; etc., &lt;code&gt;subbeg&lt;/code&gt; apunta a un b&amp;uacute;fer (ya sea la cadena original o una copia en el caso de &lt;code&gt;RX_MATCH_COPIED(rx)&lt;/code&gt; ) y &lt;code&gt;sublen&lt;/code&gt; es la longitud del b&amp;uacute;fer. Los &lt;code&gt;RX_OFFS&lt;/code&gt; inicio y finalizaci&amp;oacute;n de RX_OFFS se indexan en este b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="c07d1ff394d728bbcdaa2001c2857f1cf7faa30d" translate="yes" xml:space="preserve">
          <source>Used for emphasis (&quot;&lt;code&gt;be I&amp;lt;careful!&amp;gt;&lt;/code&gt; &quot;) and parameters (&quot;&lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt; I&amp;lt;LABEL&amp;gt;&lt;/code&gt; &quot;)</source>
          <target state="translated">Usado para &amp;eacute;nfasis (&quot; &lt;code&gt;be I&amp;lt;careful!&amp;gt;&lt;/code&gt; &quot;) Y par&amp;aacute;metros (&quot; &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt; I&amp;lt;LABEL&amp;gt;&lt;/code&gt; &quot;)</target>
        </trans-unit>
        <trans-unit id="7d3c574527f056e37525c76d104fc8a22ad9cc2b" translate="yes" xml:space="preserve">
          <source>Used for optimisations. &lt;code&gt;precomp&lt;/code&gt; holds a copy of the pattern that was compiled and &lt;code&gt;prelen&lt;/code&gt; its length. When a new pattern is to be compiled (such as inside a loop) the internal &lt;code&gt;regcomp&lt;/code&gt; operator checks if the last compiled &lt;code&gt;REGEXP&lt;/code&gt; 's &lt;code&gt;precomp&lt;/code&gt; and &lt;code&gt;prelen&lt;/code&gt; are equivalent to the new one, and if so uses the old pattern instead of compiling a new one.</source>
          <target state="translated">Utilizado para optimizaciones. &lt;code&gt;precomp&lt;/code&gt; contiene una copia del patr&amp;oacute;n que se compil&amp;oacute; y &lt;code&gt;prelen&lt;/code&gt; su longitud. Cuando un nuevo patr&amp;oacute;n es para ser compilado (tal como dentro de un bucle) los internos &lt;code&gt;regcomp&lt;/code&gt; operador comprueba si el &amp;uacute;ltimo compilado &lt;code&gt;REGEXP&lt;/code&gt; 's &lt;code&gt;precomp&lt;/code&gt; y &lt;code&gt;prelen&lt;/code&gt; son equivalentes a la nueva, y si es as&amp;iacute; utiliza el patr&amp;oacute;n de edad en lugar de compilar uno nuevo .</target>
        </trans-unit>
        <trans-unit id="c16a1dda4419ca1fa42a25c2f463240abdf22010" translate="yes" xml:space="preserve">
          <source>Used for switches (&quot;&lt;code&gt;perl's B&amp;lt;-n&amp;gt; switch&lt;/code&gt; &quot;), programs (&quot;&lt;code&gt;some systems provide a B&amp;lt;chfn&amp;gt; for that&lt;/code&gt; &quot;), emphasis (&quot;&lt;code&gt;be B&amp;lt;careful!&amp;gt;&lt;/code&gt; &quot;), and so on (&quot;&lt;code&gt;and that feature is known as B&amp;lt;autovivification&amp;gt;&lt;/code&gt; &quot;).</source>
          <target state="translated">Usado para conmutadores (&quot;conmutador &lt;code&gt;perl's B&amp;lt;-n&amp;gt; switch&lt;/code&gt; &quot;), programas (&quot; &lt;code&gt;some systems provide a B&amp;lt;chfn&amp;gt; for that&lt;/code&gt; &quot;), &amp;eacute;nfasis (&quot;&amp;iexcl; &lt;code&gt;be B&amp;lt;careful!&amp;gt;&lt;/code&gt; &quot;), Y as&amp;iacute; sucesivamente (&quot; &lt;code&gt;and that feature is known as B&amp;lt;autovivification&amp;gt;&lt;/code&gt; &quot;).</target>
        </trans-unit>
        <trans-unit id="8d00f06e1f81e3c4218071563a3bababae3c7eab" translate="yes" xml:space="preserve">
          <source>Used for test.pl, since they don't always follow Test::Harness formatting.</source>
          <target state="translated">Se usa para test.pl,ya que no siempre siguen el formato de Test::Arnés.</target>
        </trans-unit>
        <trans-unit id="85f7caced82a8f0a4057356aaa1e87b6b4b7ead3" translate="yes" xml:space="preserve">
          <source>Used if &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; has no argument and HOME is not set.</source>
          <target state="translated">Se usa si &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; no tiene argumento y HOME no est&amp;aacute; configurado.</target>
        </trans-unit>
        <trans-unit id="a5442b49ecc1bae306f70b5a25e1762fda194c70" translate="yes" xml:space="preserve">
          <source>Used if &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; has no argument.</source>
          <target state="translated">Se usa si &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; no tiene argumento.</target>
        </trans-unit>
        <trans-unit id="5908b09f62d202af9a5d54ac62b509abf705e1f4" translate="yes" xml:space="preserve">
          <source>Used if chdir has no argument and HOME and LOGDIR are not set.</source>
          <target state="translated">Se usa si chdir no tiene argumento y HOME y LOGDIR no están establecidos.</target>
        </trans-unit>
        <trans-unit id="9b97a5382104ef747655a54d5cf00ae2ece3ac3e" translate="yes" xml:space="preserve">
          <source>Used in conjunction with the &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; option to supply a reference to an &lt;code&gt;@ARGV&lt;/code&gt; style array of arguments to pass to the test program.</source>
          <target state="translated">Se usa junto con la opci&amp;oacute;n &lt;code&gt;source&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;../functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; para proporcionar una referencia a una matriz de argumentos estilo &lt;code&gt;@ARGV&lt;/code&gt; para pasar al programa de prueba.</target>
        </trans-unit>
        <trans-unit id="477606f47e75aab0d16ae4c72010e54847d20bed" translate="yes" xml:space="preserve">
          <source>Used in conjunction with the &lt;code&gt;strcoll()&lt;/code&gt; function, see &lt;a href=&quot;#strcoll&quot;&gt;strcoll&lt;/a&gt;.</source>
          <target state="translated">Usado junto con la funci&amp;oacute;n &lt;code&gt;strcoll()&lt;/code&gt; , vea &lt;a href=&quot;#strcoll&quot;&gt;strcoll&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0096c9408c39e5114a134ce424b3de68995688e0" translate="yes" xml:space="preserve">
          <source>Used in executing subprocesses, and in finding the program if &lt;b&gt;-S&lt;/b&gt; is used.</source>
          <target state="translated">Se usa para ejecutar subprocesos y para encontrar el programa si se usa &lt;b&gt;-S&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="fc7e238a8b39d615018cf421f51aee97a59ca55c" translate="yes" xml:space="preserve">
          <source>Used on numbers, the bitwise operators (&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;code&gt;|&lt;/code&gt;&lt;code&gt;^&lt;/code&gt;&lt;code&gt;~&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; ) always produce integral results. (But see also &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;Bitwise String Operators&lt;/a&gt;.) However, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; still has meaning for them. By default, their results are interpreted as unsigned integers, but if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; is in effect, their results are interpreted as signed integers. For example, &lt;code&gt;~0&lt;/code&gt; usually evaluates to a large integral value. However, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer; ~0&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt; on two's-complement machines.</source>
          <target state="translated">Usados ​​en n&amp;uacute;meros, los operadores bit a bit ( &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; &lt;code&gt;^&lt;/code&gt; &lt;code&gt;~&lt;/code&gt; &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; ) siempre producen resultados integrales. (Pero consulte tambi&amp;eacute;n &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;Operadores de cadena de bits&lt;/a&gt; ). Sin embargo, el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; todav&amp;iacute;a tiene significado para ellos. Por defecto, sus resultados se interpretan como enteros sin signo, pero si &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer&lt;/code&gt; est&amp;aacute; en vigor, sus resultados se interpretan como enteros con signo. Por ejemplo, &lt;code&gt;~0&lt;/code&gt; generalmente se eval&amp;uacute;a como un valor integral grande. Sin embargo, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer; ~0&lt;/code&gt; es &lt;code&gt;-1&lt;/code&gt; en m&amp;aacute;quinas en complemento a dos.</target>
        </trans-unit>
        <trans-unit id="22f1fcd6bfd2f48fba3948a9e62685e57c7db9d1" translate="yes" xml:space="preserve">
          <source>Used on the t/*.t files.</source>
          <target state="translated">Usado en los archivos t/*.t.</target>
        </trans-unit>
        <trans-unit id="a64dabf0b28b220a6076bc6a581b9356f3e76610" translate="yes" xml:space="preserve">
          <source>Used only when MakeMaker is building the extensions of the Perl core distribution (because normally $(PERL_ARCHLIB) is automatically in @INC, and adding it would get in the way of PERL5LIB).</source>
          <target state="translated">Se usa sólo cuando MakeMaker está construyendo las extensiones de la distribución central de Perl (porque normalmente $(PERL_ARCHLIB)está automáticamente en @INC,y añadirlo se interpondría en el camino de PERL5LIB).</target>
        </trans-unit>
        <trans-unit id="522904b951ae26afa223c455d7c6bd2555ea2781" translate="yes" xml:space="preserve">
          <source>Used only when MakeMaker is building the extensions of the Perl core distribution (because normally $(PERL_LIB) is automatically in @INC, and adding it would get in the way of PERL5LIB).</source>
          <target state="translated">Se usa sólo cuando MakeMaker está construyendo las extensiones de la distribución central de Perl (porque normalmente $(PERL_LIB)está automáticamente en @INC,y añadirlo se interpondría en el camino de PERL5LIB).</target>
        </trans-unit>
        <trans-unit id="f0b6e6daa054441299880d327c03ad5022b9eb54" translate="yes" xml:space="preserve">
          <source>Used to access elements on the XSUB's stack.</source>
          <target state="translated">Se usa para acceder a los elementos de la pila del XSUB.</target>
        </trans-unit>
        <trans-unit id="e35e54c290e520db893e920267b9220db378f0a1" translate="yes" xml:space="preserve">
          <source>Used to check if any errata was seen.</source>
          <target state="translated">Se utiliza para comprobar si se ha visto alguna errata.</target>
        </trans-unit>
        <trans-unit id="87a9aa1ba364ad0831ad8d0593884f266cd7c93e" translate="yes" xml:space="preserve">
          <source>Used to choose the LZMA compression preset.</source>
          <target state="translated">Se utiliza para elegir el preajuste de compresión del LZMA.</target>
        </trans-unit>
        <trans-unit id="7c52aa40f13bb513d24fe0ba0fa19d6fcc4a443a" translate="yes" xml:space="preserve">
          <source>Used to compare numbers.</source>
          <target state="translated">Se usa para comparar números.</target>
        </trans-unit>
        <trans-unit id="c48ef407eccd138f057ccc3292baa7a78dede864" translate="yes" xml:space="preserve">
          <source>Used to describe a &lt;b&gt;referent&lt;/b&gt; that is not directly accessible through a named &lt;b&gt;variable&lt;/b&gt;. Such a referent must be indirectly accessible through at least one &lt;b&gt;hard reference&lt;/b&gt;. When the last hard reference goes away, the anonymous referent is destroyed without pity.</source>
          <target state="translated">Se utiliza para describir un &lt;b&gt;referente al&lt;/b&gt; que no se puede acceder directamente a trav&amp;eacute;s de una &lt;b&gt;variable&lt;/b&gt; nombrada . Tal referente debe ser indirectamente accesible a trav&amp;eacute;s de al menos una &lt;b&gt;referencia dura&lt;/b&gt; . Cuando desaparece la &amp;uacute;ltima referencia dura, el referente an&amp;oacute;nimo se destruye sin piedad.</target>
        </trans-unit>
        <trans-unit id="68eae2d00f0bb0e45444425d5ef88e0a25c713c4" translate="yes" xml:space="preserve">
          <source>Used to extend the argument stack for an XSUB's return values. Once used, guarantees that there is room for at least &lt;code&gt;nitems&lt;/code&gt; to be pushed onto the stack.</source>
          <target state="translated">Se utiliza para ampliar la pila de argumentos de los valores de retorno de un XSUB. Una vez utilizado, garantiza que hay espacio para que al menos n elementos se &lt;code&gt;nitems&lt;/code&gt; en la pila.</target>
        </trans-unit>
        <trans-unit id="c9d6ff55b3e514bbe849f67e44d09a8a1f610db4" translate="yes" xml:space="preserve">
          <source>Used to force a Perl &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; wrapper around a callback. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Se usa para forzar una envoltura de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n de Perl alrededor de una devoluci&amp;oacute;n de llamada. Ver &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de62f27495e3f33e099616750808f449be5f2cfc" translate="yes" xml:space="preserve">
          <source>Used to get a PerlIO * from a FILE *.</source>
          <target state="translated">Solía obtener un PerlIO*de un ARCHIVO *.</target>
        </trans-unit>
        <trans-unit id="e5f86f7323575cf5c768f8e5109eb6cf3318d1d9" translate="yes" xml:space="preserve">
          <source>Used to indicate list context. See &lt;code&gt;GIMME_V&lt;/code&gt; , &lt;code&gt;GIMME&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Se usa para indicar el contexto de la lista. Vea &lt;code&gt;GIMME_V&lt;/code&gt; , &lt;code&gt;GIMME&lt;/code&gt; y &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a930c77deebf229f4a954c4d6804d1b626a7c0da" translate="yes" xml:space="preserve">
          <source>Used to indicate scalar context. See &lt;code&gt;GIMME_V&lt;/code&gt; , &lt;code&gt;GIMME&lt;/code&gt; , and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Se usa para indicar contexto escalar. Consulte &lt;code&gt;GIMME_V&lt;/code&gt; , &lt;code&gt;GIMME&lt;/code&gt; y &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06d42cedd073f96c9a77c4270da2ab3e95ee0de9" translate="yes" xml:space="preserve">
          <source>Used to indicate void context. See &lt;code&gt;GIMME_V&lt;/code&gt; and &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Se usa para indicar contexto vac&amp;iacute;o. Vea &lt;code&gt;GIMME_V&lt;/code&gt; y &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bb1d0a62eb268dccff9ee670a0b1ed19d224173" translate="yes" xml:space="preserve">
          <source>Used to negate the object in-place.</source>
          <target state="translated">Se utiliza para negar el objeto en el lugar.</target>
        </trans-unit>
        <trans-unit id="7ab9fb9e2f57ebf6032a373e79745b71c5c594eb" translate="yes" xml:space="preserve">
          <source>Used to pass in and return a reference to an SV.</source>
          <target state="translated">Se utiliza para pasar y devolver una referencia a un SV.</target>
        </trans-unit>
        <trans-unit id="02c1be0e858c6b96b18473855240486ec63fb69b" translate="yes" xml:space="preserve">
          <source>Used to pass in and return a reference to an SV. This is a fixed variant of T_SVREF that decrements the refcount appropriately when returning a reference to an SV*. Introduced in perl 5.15.4.</source>
          <target state="translated">Se utiliza para pasar y devolver una referencia a un SV.Es una variante fija de T_SVREF que disminuye el recuento adecuadamente al devolver una referencia a una SV*.Introducido en el perl 5.15.4.</target>
        </trans-unit>
        <trans-unit id="c91a5082aa2e7c4d29d7e1b996780ca43a12407b" translate="yes" xml:space="preserve">
          <source>Used to shift numbers left/right.</source>
          <target state="translated">Se usa para cambiar los números de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="3deb258f4b48416c1a5909b948e6f301fdab02b0" translate="yes" xml:space="preserve">
          <source>Used to upgrade an SV to a more complex form. Uses &lt;code&gt;sv_upgrade&lt;/code&gt; to perform the upgrade if necessary. See &lt;code&gt;svtype&lt;/code&gt; .</source>
          <target state="translated">Se usa para actualizar un SV a una forma m&amp;aacute;s compleja. Utiliza &lt;code&gt;sv_upgrade&lt;/code&gt; para realizar la actualizaci&amp;oacute;n si es necesario. Ver &lt;code&gt;svtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcb5d7f5c46a099246ea8a6f9905effe5c22e13c" translate="yes" xml:space="preserve">
          <source>Used together, as &lt;code&gt;/ms&lt;/code&gt;, they let the &quot;.&quot; match any character whatsoever, while still allowing &quot;^&quot; and &quot;$&quot; to match, respectively, just after and just before newlines within the string.</source>
          <target state="translated">Usados ​​juntos, como &lt;code&gt;/ms&lt;/code&gt; , dejan el &quot;.&quot; coincidir con cualquier car&amp;aacute;cter, sin dejar de permitir que &quot;^&quot; y &quot;$&quot; coincidan, respectivamente, justo despu&amp;eacute;s y justo antes de las nuevas l&amp;iacute;neas dentro de la cadena.</target>
        </trans-unit>
        <trans-unit id="6fa27f5c1082734ec40392b2d9f3d19afd0775e2" translate="yes" xml:space="preserve">
          <source>Used when creating PPD files for binary packages. It can be set to a full or relative path or URL to the binary archive for a particular architecture. For example:</source>
          <target state="translated">Se usa cuando se crean archivos PPD para paquetes binarios.Se puede establecer una ruta o URL completa o relativa al archivo binario para una arquitectura particular.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="0efa982fe3c01dc21ffac634d0623c22f8078dad" translate="yes" xml:space="preserve">
          <source>Used when the layer's open() accepts more arguments than usual. The extra arguments should come not before the &lt;code&gt;MODE&lt;/code&gt; argument. When this flag is used it's up to the layer to validate the args.</source>
          <target state="translated">Se usa cuando open () de la capa acepta m&amp;aacute;s argumentos de lo habitual. Los argumentos adicionales no deben ir antes del argumento &lt;code&gt;MODE&lt;/code&gt; . Cuando se usa esta bandera, depende de la capa validar los argumentos.</target>
        </trans-unit>
        <trans-unit id="cdd67bcd97e446b57807bc47ce4d7da189f0ad26" translate="yes" xml:space="preserve">
          <source>Used with the example above, &lt;code&gt;@libfiles&lt;/code&gt; (or &lt;code&gt;@$libfiles&lt;/code&gt; ) would contain two strings upon completion: &lt;code&gt;&quot;lib/stdlib&quot;&lt;/code&gt; and &lt;code&gt;&quot;lib/extlib&quot;&lt;/code&gt; , in that order. It is also possible to specify that only integer or floating point numbers are acceptable values.</source>
          <target state="translated">Usado con el ejemplo anterior, &lt;code&gt;@libfiles&lt;/code&gt; (o &lt;code&gt;@$libfiles&lt;/code&gt; ) contendr&amp;iacute;a dos cadenas al completarse: &lt;code&gt;&quot;lib/stdlib&quot;&lt;/code&gt; y &lt;code&gt;&quot;lib/extlib&quot;&lt;/code&gt; , en ese orden. Tambi&amp;eacute;n es posible especificar que solo los n&amp;uacute;meros enteros o de coma flotante son valores aceptables.</target>
        </trans-unit>
        <trans-unit id="32482e797407c687053869f8a4e7d0cfe24ca4f2" translate="yes" xml:space="preserve">
          <source>Used without arguments in scalar context, reverse() reverses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">Usado sin argumentos en contexto escalar, reverse () invierte &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="287fb92f0982907aa797c3b17e0824ad256b9b20" translate="yes" xml:space="preserve">
          <source>Useful functions for dealing with the filehandle and filename.</source>
          <target state="translated">Funciones útiles para el manejo de la manija y el nombre del archivo.</target>
        </trans-unit>
        <trans-unit id="f0b64588f00eed76bae59e12d25ea5d5e9aeab35" translate="yes" xml:space="preserve">
          <source>Useful modules to help you write tests (with minimum impact on your development process or your time) include Test::Simple, Carp::Assert and Test::Inline. For more sophisticated test suites there are Test::More and Test::MockObject.</source>
          <target state="translated">Los módulos útiles para ayudarle a escribir pruebas (con un impacto mínimo en su proceso de desarrollo o en su tiempo)incluyen Test::Simple,Carp::Assert y Test::Inline.Para pruebas más sofisticadas hay Test::More y Test::MockObject.</target>
        </trans-unit>
        <trans-unit id="04355f5678f3ad8646b491395f68bd676dba02d6" translate="yes" xml:space="preserve">
          <source>Useful options of</source>
          <target state="translated">Las opciones útiles de</target>
        </trans-unit>
        <trans-unit id="7705a5ed12704795a74e0deb45a6e2191d0de39a" translate="yes" xml:space="preserve">
          <source>Useful values for &lt;code&gt;PERLDOC&lt;/code&gt; include &lt;code&gt;-oterm&lt;/code&gt; , &lt;code&gt;-otext&lt;/code&gt; , &lt;code&gt;-ortf&lt;/code&gt; , &lt;code&gt;-oxml&lt;/code&gt; , and so on, depending on what modules you have on hand; or the formatter class may be specified exactly with &lt;code&gt;-MPod::Perldoc::ToTerm&lt;/code&gt; or the like.</source>
          <target state="translated">Los valores &amp;uacute;tiles para &lt;code&gt;PERLDOC&lt;/code&gt; incluyen &lt;code&gt;-oterm&lt;/code&gt; , &lt;code&gt;-otext&lt;/code&gt; , &lt;code&gt;-ortf&lt;/code&gt; , &lt;code&gt;-oxml&lt;/code&gt; , etc., dependiendo de los m&amp;oacute;dulos que tenga a mano; o la clase del formateador puede especificarse exactamente con &lt;code&gt;-MPod::Perldoc::ToTerm&lt;/code&gt; o similar.</target>
        </trans-unit>
        <trans-unit id="108f6902446d675962ade16c5ef5d6ed95723631" translate="yes" xml:space="preserve">
          <source>Useful, huh? You can eval nearly anything in there, and experiment with bits of code or regexes until the cows come home:</source>
          <target state="translated">Útil,¿eh? Puedes evaluar casi cualquier cosa ahí,y experimentar con trozos de código o regexes hasta que las vacas vuelvan a casa:</target>
        </trans-unit>
        <trans-unit id="fe3be132ee381a9663c71ca2a6207a31717e7705" translate="yes" xml:space="preserve">
          <source>User Datagram Protocol, the typical way to send &lt;b&gt;datagrams&lt;/b&gt; over the Internet.</source>
          <target state="translated">User Datagram Protocol, la forma t&amp;iacute;pica de enviar &lt;b&gt;datagramas a&lt;/b&gt; trav&amp;eacute;s de Internet.</target>
        </trans-unit>
        <trans-unit id="3056b101498f0c6196c04d621ba22bd3175219d6" translate="yes" xml:space="preserve">
          <source>User Groups</source>
          <target state="translated">Grupos de usuarios</target>
        </trans-unit>
        <trans-unit id="4325c61b581bf8fe6a3e2400d58928e7b9a55496" translate="yes" xml:space="preserve">
          <source>User Interfaces</source>
          <target state="translated">interfaces de usuario</target>
        </trans-unit>
        <trans-unit id="84956701ef226c2e8ce9adf59fb3ab8347d15b4f" translate="yes" xml:space="preserve">
          <source>User mounts override system mounts.</source>
          <target state="translated">Los montajes del usuario anulan los montajes del sistema.</target>
        </trans-unit>
        <trans-unit id="158586304dc1eef989a278eac13c889b9d8fde82" translate="yes" xml:space="preserve">
          <source>User pragmata store their state by writing to the magical hash &lt;code&gt;%^H&lt;/code&gt; , hence these two routines manipulate it. The state information in &lt;code&gt;%^H&lt;/code&gt; is stored in the optree, and can be retrieved read-only at runtime with &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt;, at index 10 of the list of returned results. In the example pragma, retrieval is encapsulated into the routine &lt;code&gt;in_effect()&lt;/code&gt; , which takes as parameter the number of call frames to go up to find the value of the pragma in the user's script. This uses &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; to determine the value of &lt;code&gt;$^H{&quot;myint/in_effect&quot;}&lt;/code&gt; when each line of the user's script was called, and therefore provide the correct semantics in the subroutine implementing the overloaded addition.</source>
          <target state="translated">Los pragmas de usuario almacenan su estado escribiendo en el hash m&amp;aacute;gico &lt;code&gt;%^H&lt;/code&gt; , de ah&amp;iacute; que estas dos rutinas lo manipulen. La informaci&amp;oacute;n de estado en &lt;code&gt;%^H&lt;/code&gt; se almacena en el &amp;aacute;rbol opcional y se puede recuperar como solo lectura en tiempo de ejecuci&amp;oacute;n con &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; , en el &amp;iacute;ndice 10 de la lista de resultados devueltos. En el pragma de ejemplo, la recuperaci&amp;oacute;n se encapsula en la rutina &lt;code&gt;in_effect()&lt;/code&gt; , que toma como par&amp;aacute;metro el n&amp;uacute;mero de tramas de llamada a subir para encontrar el valor del pragma en el script del usuario. Esto usa &lt;code&gt;&lt;a href=&quot;functions/caller&quot;&gt;caller()&lt;/a&gt;&lt;/code&gt; para determinar el valor de &lt;code&gt;$^H{&quot;myint/in_effect&quot;}&lt;/code&gt; cuando se llam&amp;oacute; a cada l&amp;iacute;nea del script del usuario y, por lo tanto, proporciona la sem&amp;aacute;ntica correcta en la subrutina que implementa la adici&amp;oacute;n sobrecargada.</target>
        </trans-unit>
        <trans-unit id="94ffd06de7d6ceb23de314937b25f1039f95408e" translate="yes" xml:space="preserve">
          <source>User-Defined Case Mappings (for serious hackers only)</source>
          <target state="translated">Mapeo de casos definidos por el usuario (sólo para hackers serios)</target>
        </trans-unit>
        <trans-unit id="021fce3b8ed64c4c7ea81643b8e56e61d1fb88d9" translate="yes" xml:space="preserve">
          <source>User-Defined Character Properties</source>
          <target state="translated">Propiedades de los caracteres definidos por el usuario</target>
        </trans-unit>
        <trans-unit id="8bdd4953a2aaaf5875fdc9a6599aaccd9331209f" translate="yes" xml:space="preserve">
          <source>User-defined subroutines may choose to care whether they are being called in a void, scalar, or list context. Most subroutines do not need to bother, though. That's because both scalars and lists are automatically interpolated into lists. See &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt; for how you would dynamically discern your function's calling context.</source>
          <target state="translated">Las subrutinas definidas por el usuario pueden optar por cuidar si se las llama en un contexto vac&amp;iacute;o, escalar o de lista. Sin embargo, la mayor&amp;iacute;a de las subrutinas no necesitan molestarse. Eso es porque tanto los escalares como las listas se interpolan autom&amp;aacute;ticamente en listas. Vea &lt;a href=&quot;functions/wantarray&quot;&gt;wantarray&lt;/a&gt; para saber c&amp;oacute;mo discernir&amp;iacute;a din&amp;aacute;micamente el contexto de llamada de su funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="04b3f7fd0444d60354dbca146d3a101a49d16754" translate="yes" xml:space="preserve">
          <source>User-defined subroutines to handle options</source>
          <target state="translated">Rutinas definidas por el usuario para manejar las opciones</target>
        </trans-unit>
        <trans-unit id="c2c8678cd5e840290be2cdc362d36d4139b6821c" translate="yes" xml:space="preserve">
          <source>User-mode threads are threads that live entirely within a program and its libraries. In this model, the OS knows nothing about threads. As far as it's concerned, your process is just a process.</source>
          <target state="translated">Los hilos de modo de usuario son hilos que viven completamente dentro de un programa y sus bibliotecas.En este modelo,el sistema operativo no sabe nada de hilos.En lo que a él respecta,su proceso es sólo un proceso.</target>
        </trans-unit>
        <trans-unit id="5e4e64aff0ba218cc4ec3a0635d41a38135e5b7e" translate="yes" xml:space="preserve">
          <source>User::grent</source>
          <target state="translated">User::grent</target>
        </trans-unit>
        <trans-unit id="5e0090a6a9d55bf78a5f019a9872cf7e4308c124" translate="yes" xml:space="preserve">
          <source>User::grent - by-name interface to Perl's built-in getgr*() functions</source>
          <target state="translated">Usuario::grent-interfaz por nombre para las funciones incorporadas de getgr*()de Perl</target>
        </trans-unit>
        <trans-unit id="a2bda03ecc876d5bf92fb7707c3e5918fe5160b9" translate="yes" xml:space="preserve">
          <source>User::pwent</source>
          <target state="translated">User::pwent</target>
        </trans-unit>
        <trans-unit id="c4a9575f1a385e0c0339a3155858dfaa2331a364" translate="yes" xml:space="preserve">
          <source>User::pwent - by-name interface to Perl's built-in getpw*() functions</source>
          <target state="translated">Usuario::pwent-interfaz by-name para las funciones incorporadas de getpw*()de Perl</target>
        </trans-unit>
        <trans-unit id="5dc8b5002e114f1d2e85c5074d99f142b8068508" translate="yes" xml:space="preserve">
          <source>Users of &lt;b&gt;vi&lt;/b&gt; should also look into &lt;b&gt;vim&lt;/b&gt; and &lt;b&gt;gvim&lt;/b&gt;, the mousey and windy version, for coloring of Perl keywords.</source>
          <target state="translated">Los usuarios de &lt;b&gt;vi&lt;/b&gt; tambi&amp;eacute;n deber&amp;iacute;an buscar en &lt;b&gt;vim&lt;/b&gt; y &lt;b&gt;gvim&lt;/b&gt; , la versi&amp;oacute;n de rat&amp;oacute;n y ventosa, para colorear las palabras clave de Perl.</target>
        </trans-unit>
        <trans-unit id="ba4927255994b8f9be2cf9331a8ecd222ec16885" translate="yes" xml:space="preserve">
          <source>Users of &lt;code&gt;Emacs&lt;/code&gt; would appreciate it very much, especially with &lt;code&gt;CPerl&lt;/code&gt; mode loaded. You need to get latest &lt;code&gt;pod2info&lt;/code&gt; from &lt;code&gt;CPAN&lt;/code&gt; , or, alternately, prebuilt info pages.</source>
          <target state="translated">Los usuarios de &lt;code&gt;Emacs&lt;/code&gt; lo agradecer&amp;iacute;an mucho, especialmente con el modo &lt;code&gt;CPerl&lt;/code&gt; cargado. &lt;code&gt;pod2info&lt;/code&gt; obtener la &amp;uacute;ltima informaci&amp;oacute;n de pod2info de &lt;code&gt;CPAN&lt;/code&gt; o, alternativamente, p&amp;aacute;ginas de informaci&amp;oacute;n precompiladas.</target>
        </trans-unit>
        <trans-unit id="06b3fe1f4b99439f17ea2b119c5a26871e0414f8" translate="yes" xml:space="preserve">
          <source>Users of Emacs would appreciate it very much, especially with &lt;code&gt;CPerl&lt;/code&gt; mode loaded. You need to get latest &lt;code&gt;pod2texi&lt;/code&gt; from &lt;code&gt;CPAN&lt;/code&gt; , or, alternately, the prebuilt info pages.</source>
          <target state="translated">Los usuarios de Emacs lo agradecer&amp;iacute;an mucho, especialmente con el modo &lt;code&gt;CPerl&lt;/code&gt; cargado. Necesita obtener el &amp;uacute;ltimo &lt;code&gt;pod2texi&lt;/code&gt; de &lt;code&gt;CPAN&lt;/code&gt; o, alternativamente, las p&amp;aacute;ginas de informaci&amp;oacute;n precompiladas.</target>
        </trans-unit>
        <trans-unit id="3d37ee7e83ea8423b48a5461ba1696b2c860b013" translate="yes" xml:space="preserve">
          <source>Users of these operating systems may also wish to make use of scripts such as</source>
          <target state="translated">Los usuarios de estos sistemas operativos tal vez deseen también utilizar scripts como</target>
        </trans-unit>
        <trans-unit id="5f2a2d2f970a65c0f069bae958a29d5ba1eb82f2" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;$Config{pod2html}&lt;/code&gt; to setup default options.</source>
          <target state="translated">Utiliza &lt;code&gt;$Config{pod2html}&lt;/code&gt; para configurar las opciones predeterminadas.</target>
        </trans-unit>
        <trans-unit id="1bd665ac74aefc48e3c1dedcb2f5bc582892064f" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;strlen&lt;/code&gt; to get the length of &lt;code&gt;name&lt;/code&gt; , then calls &lt;code&gt;get_cvn_flags&lt;/code&gt; .</source>
          <target state="translated">Usa &lt;code&gt;strlen&lt;/code&gt; para obtener la longitud del &lt;code&gt;name&lt;/code&gt; , luego llama a &lt;code&gt;get_cvn_flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2d33b5a65c41c46d97dad83c368ba4c31fcb025" translate="yes" xml:space="preserve">
          <source>Uses Bourne shell from &lt;code&gt;$exedir/../dll/sh/ksh.exe&lt;/code&gt;.</source>
          <target state="translated">Utiliza el shell Bourne de &lt;code&gt;$exedir/../dll/sh/ksh.exe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8535753d5756d418d77c7eeafa2177abcd178411" translate="yes" xml:space="preserve">
          <source>Uses Encode::from_to for conversion. This is the default.</source>
          <target state="translated">Utiliza el código::de_a para la conversión.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="a78266e003805d15484a613ae3192f24c4a5e63f" translate="yes" xml:space="preserve">
          <source>Uses a single private buffer so if you want to format several strings you must explicitly copy the earlier strings away (and free the copies when you are done).</source>
          <target state="translated">Utiliza un solo búfer privado,por lo que si desea dar formato a varias cadenas debe copiar explícitamente las cadenas anteriores (y liberar las copias cuando haya terminado).</target>
        </trans-unit>
        <trans-unit id="fce3093136a7d2638de72d1f6b19af95e4dd37ba" translate="yes" xml:space="preserve">
          <source>Uses for the &lt;code&gt;export_fail&lt;/code&gt; method include giving better error messages for some symbols and performing lazy architectural checks (put more symbols into &lt;code&gt;@EXPORT_FAIL&lt;/code&gt; by default and then take them out if someone actually tries to use them and an expensive check shows that they are usable on that platform).</source>
          <target state="translated">Los usos del m&amp;eacute;todo &lt;code&gt;export_fail&lt;/code&gt; incluyen dar mejores mensajes de error para algunos s&amp;iacute;mbolos y realizar comprobaciones arquitect&amp;oacute;nicas perezosas (ponga m&amp;aacute;s s&amp;iacute;mbolos en &lt;code&gt;@EXPORT_FAIL&lt;/code&gt; de forma predeterminada y luego elim&amp;iacute;nelos si alguien realmente intenta usarlos y un cheque costoso muestra que se pueden usar en eso plataforma).</target>
        </trans-unit>
        <trans-unit id="ff51dbb10de4f730c3d10cc9e64e2774f2375b58" translate="yes" xml:space="preserve">
          <source>Uses the same algorithm as getcwd(). Symbolic links and relative-path components (&quot;.&quot; and &quot;..&quot;) are resolved to return the canonical pathname, just like realpath(3).</source>
          <target state="translated">Utiliza el mismo algoritmo que getcwd().Los enlaces simbólicos y los componentes del camino relativo (&quot;.&quot; y &quot;..&quot;)se resuelven para devolver el camino canónico,al igual que el camino real(3).</target>
        </trans-unit>
        <trans-unit id="9086306446f5bee7eedc51873f977f5639cf3890" translate="yes" xml:space="preserve">
          <source>Uses the value of EXPR as a filename and executes the contents of the file as a Perl script.</source>
          <target state="translated">Utiliza el valor de EXPR como nombre de archivo y ejecuta el contenido del archivo como un guión de Perl.</target>
        </trans-unit>
        <trans-unit id="b191f377109544e991562530e982f3ab20d97a29" translate="yes" xml:space="preserve">
          <source>Uses the value of a previous getpos call to return to a previously visited position. Returns &quot;0 but true&quot; on success, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">Utiliza el valor de una llamada getpos anterior para volver a una posici&amp;oacute;n visitada anteriormente. Devuelve &quot;0 pero verdadero&quot; en caso de &amp;eacute;xito, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso de error.</target>
        </trans-unit>
        <trans-unit id="c25de2e83e9fceeee022a34e378748baf14ac201" translate="yes" xml:space="preserve">
          <source>Using</source>
          <target state="translated">Using</target>
        </trans-unit>
        <trans-unit id="2352b330d6ed131b0eecd5f3967c2801dc2e677c" translate="yes" xml:space="preserve">
          <source>Using &quot;#&quot; as a padding character specifies a numeric field, with right justification. An optional &quot;.&quot; defines the position of the decimal point. With a &quot;0&quot; (zero) instead of the first &quot;#&quot;, the formatted number will be padded with leading zeroes if necessary. A special numeric field is blanked out if the value is undefined. If the resulting value would exceed the width specified the field is filled with &quot;#&quot; as overflow evidence.</source>
          <target state="translated">El uso de &quot;#&quot; como carácter de relleno especifica un campo numérico,con la justificación correcta.Un &quot;.&quot; opcional define la posición del punto decimal.Con un &quot;0&quot; (cero)en lugar del primer &quot;#&quot;,el número formateado se rellenará con ceros a la izquierda si es necesario.Un campo numérico especial queda en blanco si el valor no está definido.Si el valor resultante supera el ancho especificado,el campo se rellena con &quot;#&quot; como prueba de desbordamiento.</target>
        </trans-unit>
        <trans-unit id="4d195a30219da687f66f5ac2e4c6c839d91fc335" translate="yes" xml:space="preserve">
          <source>Using &quot;&amp;gt;&quot; always clobbers or creates. Using &quot;&amp;lt;&quot; never does either. The &quot;+&quot; doesn't change this.</source>
          <target state="translated">Usar &quot;&amp;gt;&quot; siempre golpea o crea. Usar &quot;&amp;lt;&quot; tampoco lo hace nunca. El &quot;+&quot; no cambia esto.</target>
        </trans-unit>
        <trans-unit id="16cc068fbb7f0118050467d326f37173d537b721" translate="yes" xml:space="preserve">
          <source>Using &quot;pl2bat&quot; has a few problems: the file name gets changed, so scripts that rely on &lt;code&gt;$0&lt;/code&gt; to find what they must do may not run properly; running &quot;pl2bat&quot; replicates the contents of the original script, and so this process can be maintenance intensive if the originals get updated often. A different approach that avoids both problems is possible.</source>
          <target state="translated">El uso de &quot;pl2bat&quot; tiene algunos problemas: el nombre del archivo cambia, por lo que los scripts que se basan en &lt;code&gt;$0&lt;/code&gt; para encontrar lo que deben hacer pueden no ejecutarse correctamente; la ejecuci&amp;oacute;n de &quot;pl2bat&quot; replica el contenido del script original, por lo que este proceso puede requerir mucho mantenimiento si los originales se actualizan con frecuencia. Es posible un enfoque diferente que evite ambos problemas.</target>
        </trans-unit>
        <trans-unit id="05f631394c6e9641817e0e504fc7c43b66232fc2" translate="yes" xml:space="preserve">
          <source>Using $ENV{PERL_DEBUG_MSTATS}</source>
          <target state="translated">Usando $ENV{PERL_DEBUG_MSTATS}</target>
        </trans-unit>
        <trans-unit id="369ff12968f332b6148e74df2b66edfe0b032cb0" translate="yes" xml:space="preserve">
          <source>Using 'X' and cousins requires you not to use the type identifiers ($@%), just the 'name':</source>
          <target state="translated">Usar &quot;X&quot; y primos requiere que no uses los identificadores de tipo ($@%),sólo el &quot;nombre&quot;:</target>
        </trans-unit>
        <trans-unit id="2dfddf8d7a196c4e7f1fa3524316075003cbc8ac" translate="yes" xml:space="preserve">
          <source>Using *AutoLoader*'s AUTOLOAD Subroutine</source>
          <target state="translated">Usando la subrutina AUTOCARGA del *Autocargador*</target>
        </trans-unit>
        <trans-unit id="9094fd1811fd7f32bf808bb09cf11c4c4b959972" translate="yes" xml:space="preserve">
          <source>Using / for Unix. Called by init_main.</source>
          <target state="translated">Usando/para Unix.Llamado por init_main.</target>
        </trans-unit>
        <trans-unit id="ef6fd37cde410d5e8c4989d291b7ed857f9e1011" translate="yes" xml:space="preserve">
          <source>Using //-comments</source>
          <target state="translated">Usando //-comentarios</target>
        </trans-unit>
        <trans-unit id="5f4a15910e3dadf2cc006c6867eda30e63f7dc0f" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt;:</source>
          <target state="translated">Usando &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit :: Vector&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9e6665571474aeb5014d9a2187041b82aa2b6cf9" translate="yes" xml:space="preserve">
          <source>Using &lt;b&gt;AutoLoader&lt;/b&gt;'s AUTOLOAD Subroutine</source>
          <target state="translated">Usando &lt;b&gt;AutoLoader&lt;/b&gt; 's AUTOLOAD Subrutina</target>
        </trans-unit>
        <trans-unit id="5cfa1c0592cc7196c9a7f1e7194e067f8fe4c528" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&quot;or&quot;&lt;/code&gt; for assignment is unlikely to do what you want; see below.</source>
          <target state="translated">Es poco probable que el uso de &lt;code&gt;&quot;or&quot;&lt;/code&gt; para la asignaci&amp;oacute;n haga lo que desea; vea abajo.</target>
        </trans-unit>
        <trans-unit id="8a303f25d71d0c242dc6c0e5ae7c606b1bec2045" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;$ENV{PERL_DEBUG_MSTATS}&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;$ENV{PERL_DEBUG_MSTATS}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6ff3dae92bc192e26ee0eb7af7182c12b0e7db8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;$in_fh-&amp;gt;getline()&lt;/code&gt; , input is read line-by-line and assembled into paragraphs or &quot;blocks&quot; (which are separated by lines containing nothing but whitespace). For each block of POD documentation encountered it will invoke a method to parse the given paragraph.</source>
          <target state="translated">Usando &lt;code&gt;$in_fh-&amp;gt;getline()&lt;/code&gt; , la entrada se lee l&amp;iacute;nea por l&amp;iacute;nea y se ensambla en p&amp;aacute;rrafos o &quot;bloques&quot; (que est&amp;aacute;n separados por l&amp;iacute;neas que no contienen nada m&amp;aacute;s que espacios en blanco). Para cada bloque de documentaci&amp;oacute;n de POD encontrado, invocar&amp;aacute; un m&amp;eacute;todo para analizar el p&amp;aacute;rrafo dado.</target>
        </trans-unit>
        <trans-unit id="f2a68f677fc4720bdeb7e4f8032c1c375f4d6291" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--verbose&lt;/code&gt; on the command line will increment the value of &lt;code&gt;$verbose&lt;/code&gt; . This way the program can keep track of how many times the option occurred on the command line. For example, each occurrence of &lt;code&gt;--verbose&lt;/code&gt; could increase the verbosity level of the program.</source>
          <target state="translated">El uso de &lt;code&gt;--verbose&lt;/code&gt; en la l&amp;iacute;nea de comando incrementar&amp;aacute; el valor de &lt;code&gt;$verbose&lt;/code&gt; . De esta manera, el programa puede realizar un seguimiento de cu&amp;aacute;ntas veces se produjo la opci&amp;oacute;n en la l&amp;iacute;nea de comando. Por ejemplo, cada aparici&amp;oacute;n de &lt;code&gt;--verbose&lt;/code&gt; podr&amp;iacute;a aumentar el nivel de verbosidad del programa.</target>
        </trans-unit>
        <trans-unit id="4ad1d7060df6581913c9f5f84ab874f296c32585" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;-Dusethreads -Duseithreads&lt;/code&gt; rather than &lt;code&gt;-Dusemultiplicity&lt;/code&gt; is more appropriate if you intend to run multiple interpreters concurrently in different threads, because it enables support for linking in the thread libraries of your system with the interpreter.</source>
          <target state="translated">Usar &lt;code&gt;-Dusethreads -Duseithreads&lt;/code&gt; en lugar de &lt;code&gt;-Dusemultiplicity&lt;/code&gt; es m&amp;aacute;s apropiado si tiene la intenci&amp;oacute;n de ejecutar m&amp;uacute;ltiples int&amp;eacute;rpretes al mismo tiempo en diferentes subprocesos, ya que habilita el soporte para vincular las bibliotecas de subprocesos de su sistema con el int&amp;eacute;rprete.</target>
        </trans-unit>
        <trans-unit id="61eab4185699c92641d9413479e73b37872fd212" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; out to another perl after loading multiple dlls may result on a DLL baseaddress conflict. The internal cygwin error looks like like the following:</source>
          <target state="translated">El uso de &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; en otro perl despu&amp;eacute;s de cargar varias DLL puede resultar en un conflicto de direcci&amp;oacute;n base DLL. El error interno de cygwin se parece a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="fcca95252686536518c82a86f093a53ca5ff8ade" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; in combination with a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; at the top of your Perl scripts means that the interpreter will pick up certain common programming errors. For instance, in the example above, the final &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $y&lt;/code&gt; would cause a compile-time error and prevent you from running the program. Using &lt;code&gt;strict&lt;/code&gt; is highly recommended.</source>
          <target state="translated">Usando &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; en combinaci&amp;oacute;n con un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; en la parte superior de sus scripts de Perl significa que el int&amp;eacute;rprete detectar&amp;aacute; ciertos errores de programaci&amp;oacute;n comunes. Por ejemplo, en el ejemplo anterior, la &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $y&lt;/code&gt; final $ y provocar&amp;iacute;a un error en tiempo de compilaci&amp;oacute;n y le impedir&amp;iacute;a ejecutar el programa. Se recomienda utilizar &lt;code&gt;strict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6570099c968b1dac1aeada91a2fa62948e513fde" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Usando &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c4ee3a2331f58e1266f76a324d649c5e7a530542" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(..., $x)&lt;/code&gt; with &lt;code&gt;P&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt; to get the address where &lt;code&gt;$x&lt;/code&gt; is actually stored must be used with circumspection. Perl's internal machinery considers the relation between a variable and that address as its very own private matter and doesn't really care that we have obtained a copy. Therefore:</source>
          <target state="translated">El uso de &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(..., $x)&lt;/code&gt; con &lt;code&gt;P&lt;/code&gt; o &lt;code&gt;p&lt;/code&gt; para obtener la direcci&amp;oacute;n en que &lt;code&gt;$x&lt;/code&gt; se almacena realmente se debe utilizar con prudencia. La maquinaria interna de Perl considera la relaci&amp;oacute;n entre una variable y esa direcci&amp;oacute;n como un asunto privado y realmente no le importa que hayamos obtenido una copia. Por lo tanto:</target>
        </trans-unit>
        <trans-unit id="f64f7e3c602eac9f0cc5d3fae9a96d9a3eb0bb0b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Usando &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5fe85d80b5d4e554e757435dadbee8779f515048" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; for larger strings:</source>
          <target state="translated">Usando &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; para cuerdas m&amp;aacute;s grandes:</target>
        </trans-unit>
        <trans-unit id="77bac2c89d98d4342e51014bdc1e5dfcf83f7405" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Usando el &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9b2ba3ba2d555e75ce68454a406fe0f0433207e8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; (or the operator form, &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; ) as the conditional of a &lt;code&gt;for&lt;/code&gt; loop is shorthand for the following. This behaviour is the same as a &lt;code&gt;while&lt;/code&gt; loop conditional.</source>
          <target state="translated">Usar &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; (o la forma del operador, &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; ) como condicional de un bucle &lt;code&gt;for&lt;/code&gt; es una forma abreviada de lo siguiente. Este comportamiento es el mismo que un &lt;code&gt;while&lt;/code&gt; condicional bucle.</target>
        </trans-unit>
        <trans-unit id="48ea9a8aca48a2ecece519f0da9a5610c9c21b22" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; (perl 5.6+):</source>
          <target state="translated">Usando &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; (perl 5.6+):</target>
        </trans-unit>
        <trans-unit id="672d9d441ef641164ca3c34a7892f3146881bd19" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Usando &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="46b9c6aa21d990c3320125b6b398a58171b824d2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Usando &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c96b7be56d606a5173254b9ecaa85e8754516cc1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;C0&lt;/code&gt; to get Unicode characters while using &lt;code&gt;U0&lt;/code&gt; to get</source>
          <target state="translated">Usando &lt;code&gt;C0&lt;/code&gt; para obtener caracteres Unicode mientras usa &lt;code&gt;U0&lt;/code&gt; para obtener</target>
        </trans-unit>
        <trans-unit id="bd76d249b9cc849b475f04243607bd5ac606dc24" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;EVERY&lt;/code&gt; methods</source>
          <target state="translated">Usando &lt;code&gt;EVERY&lt;/code&gt; m&amp;eacute;todo</target>
        </trans-unit>
        <trans-unit id="0ecd1ec7133eb6a574dc47a89387830a895fdc67" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;autouse&lt;/code&gt; will move important steps of your program's execution from compile time to runtime. This can</source>
          <target state="translated">El uso &lt;code&gt;autouse&lt;/code&gt; mover&amp;aacute; pasos importantes de la ejecuci&amp;oacute;n de su programa del tiempo de compilaci&amp;oacute;n al tiempo de ejecuci&amp;oacute;n. Esto puede</target>
        </trans-unit>
        <trans-unit id="2c94e397182ad35f0199796c485d6c8aec54e54f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;gen_extract_tagged&lt;/code&gt; to create extraction functions for specific tags is a good idea if those functions are going to be called more than once, since their performance is typically twice as good as the more general-purpose &lt;code&gt;extract_tagged&lt;/code&gt; .</source>
          <target state="translated">Usar &lt;code&gt;gen_extract_tagged&lt;/code&gt; para crear funciones de extracci&amp;oacute;n para etiquetas espec&amp;iacute;ficas es una buena idea si esas funciones se van a llamar m&amp;aacute;s de una vez, ya que su rendimiento suele ser el doble de bueno que el &lt;code&gt;extract_tagged&lt;/code&gt; de uso m&amp;aacute;s general .</target>
        </trans-unit>
        <trans-unit id="5b55d7735ea783b5e6004e758bd55af4f884bf92" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;lib&lt;/code&gt; warns if none of the specified libraries can be found and &lt;a href=&quot;math/bigint&quot;&gt;Math::BigInt&lt;/a&gt; did fall back to one of the default libraries. To suppress this warning, use &lt;code&gt;try&lt;/code&gt; instead:</source>
          <target state="translated">El uso de &lt;code&gt;lib&lt;/code&gt; advierte si no se puede encontrar ninguna de las bibliotecas especificadas y &lt;a href=&quot;math/bigint&quot;&gt;Math :: BigInt recurri&amp;oacute;&lt;/a&gt; a una de las bibliotecas predeterminadas. Para suprimir esta advertencia, use &lt;code&gt;try&lt;/code&gt; en su lugar:</target>
        </trans-unit>
        <trans-unit id="0ffd8ad58b1a0f4bd73c5c83cc872616c113bd7f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;refaddr()&lt;/code&gt; is unreliable for testing whether or not two shared references are equivalent (e.g., when testing for circular references). Use &lt;a href=&quot;#is_shared-VARIABLE&quot;&gt;is_shared()&lt;/a&gt;, instead:</source>
          <target state="translated">El uso de &lt;code&gt;refaddr()&lt;/code&gt; no es confiable para probar si dos referencias compartidas son equivalentes (por ejemplo, cuando se prueban referencias circulares). Utilice &lt;a href=&quot;#is_shared-VARIABLE&quot;&gt;is_shared ()&lt;/a&gt; , en su lugar:</target>
        </trans-unit>
        <trans-unit id="2ef178ae90603162abddf22f7d9bb0fc3e898af5" translate="yes" xml:space="preserve">
          <source>Using Attributes and Parameters</source>
          <target state="translated">Uso de atributos y parámetros</target>
        </trans-unit>
        <trans-unit id="03bf2717e06af78329e93ebf453e1e826613e2e4" translate="yes" xml:space="preserve">
          <source>Using B::Concise outside of the O framework</source>
          <target state="translated">Usando B::Conciso fuera del marco O</target>
        </trans-unit>
        <trans-unit id="18bafced67519d44baeebd7cfdcaf662b62afabc" translate="yes" xml:space="preserve">
          <source>Using DB_File with Berkeley DB version 2 or greater</source>
          <target state="translated">Usando DB_File con Berkeley DB versión 2 o superior</target>
        </trans-unit>
        <trans-unit id="97e4ec7dc3ee57617b8c25e5da7b2620a2b30764" translate="yes" xml:space="preserve">
          <source>Using EVERY methods</source>
          <target state="translated">Usando TODOS los métodos</target>
        </trans-unit>
        <trans-unit id="eaf5424654cdf470f964dbc03078a17cf18e6b68" translate="yes" xml:space="preserve">
          <source>Using Encode</source>
          <target state="translated">Usando el código</target>
        </trans-unit>
        <trans-unit id="b3c01fd9731ccf33cc32d289966ab7fb5c9b6f88" translate="yes" xml:space="preserve">
          <source>Using Fill Mode</source>
          <target state="translated">Uso del modo de llenado</target>
        </trans-unit>
        <trans-unit id="5cb7c472310d76de5801b53745949b0358783728" translate="yes" xml:space="preserve">
          <source>Using Filter::Simple and Exporter together</source>
          <target state="translated">Usando el filtro::Simple y Exportador juntos</target>
        </trans-unit>
        <trans-unit id="8adffc36e41ac8b6ef194fa0464f19be3d960928" translate="yes" xml:space="preserve">
          <source>Using Filter::Simple with an explicit &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; subroutine</source>
          <target state="translated">Usando Filter :: Simple con una subrutina de &lt;code&gt;&lt;a href=&quot;../functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n expl&amp;iacute;cita</target>
        </trans-unit>
        <trans-unit id="4fae20bc9d38356a2d17453bc9b205cc1c897f19" translate="yes" xml:space="preserve">
          <source>Using Filter::Simple with an explicit import subroutine</source>
          <target state="translated">Usando el filtro::Simple con una subrutina de importación explícita</target>
        </trans-unit>
        <trans-unit id="1ae3259ed8aaec135b40d3c0be57406133a41acb" translate="yes" xml:space="preserve">
          <source>Using GIMME_V</source>
          <target state="translated">Usando GIMME_V</target>
        </trans-unit>
        <trans-unit id="1d57725fba088f8b24d927a2eedcfd4e936a608f" translate="yes" xml:space="preserve">
          <source>Using GNU's gcc for building Perl</source>
          <target state="translated">Usando el gcc de GNU para construir Perl</target>
        </trans-unit>
        <trans-unit id="e882257535f024e0d015187d37538f63a8847fce" translate="yes" xml:space="preserve">
          <source>Using G_EVAL</source>
          <target state="translated">Usando G_EVAL</target>
        </trans-unit>
        <trans-unit id="295eff162915babd344155c6be19db49d4d64f02" translate="yes" xml:space="preserve">
          <source>Using G_KEEPERR</source>
          <target state="translated">Usando G_KEEPERR</target>
        </trans-unit>
        <trans-unit id="16d5f49af97261f97893047f771a98e55443d77c" translate="yes" xml:space="preserve">
          <source>Using Large Files with Perl</source>
          <target state="translated">Usando archivos grandes con Perl</target>
        </trans-unit>
        <trans-unit id="317a1b556565aa526e2b302cc529d9bc9bad8e03" translate="yes" xml:space="preserve">
          <source>Using Large Files with Perl &amp;lt; 5L</source>
          <target state="translated">Uso de archivos grandes con Perl &amp;lt;5L</target>
        </trans-unit>
        <trans-unit id="4193d5877700c1da7cc3dc0d04426fb8e279c514" translate="yes" xml:space="preserve">
          <source>Using Large Files with Perl on HP-UX</source>
          <target state="translated">Usando grandes archivos con Perl en HP-UX</target>
        </trans-unit>
        <trans-unit id="bb8e5976c90f08c21142951c3aacf31e66206c3b" translate="yes" xml:space="preserve">
          <source>Using Large Files with Perl on Tru64</source>
          <target state="translated">Usando grandes archivos con Perl en Tru64</target>
        </trans-unit>
        <trans-unit id="d35a8b92c0313948c8001f6e0f5a80140456f638" translate="yes" xml:space="preserve">
          <source>Using Math::BigInt::Lite</source>
          <target state="translated">Usando las matemáticas::BigInt::Lite</target>
        </trans-unit>
        <trans-unit id="f4a9198bb8db024f66e7beddb02099ae2c33e45d" translate="yes" xml:space="preserve">
          <source>Using POSIX::ARG_MAX. Otherwise falling back to 4096.</source>
          <target state="translated">Usando POSIX::ARG_MAX.De lo contrario,retrocediendo al 4096.</target>
        </trans-unit>
        <trans-unit id="7f350838d7d6c4618cf4c3624992c0a5fa550ccf" translate="yes" xml:space="preserve">
          <source>Using Perl in &quot;native&quot; BS2000</source>
          <target state="translated">Usando Perl en el &quot;nativo&quot; BS2000</target>
        </trans-unit>
        <trans-unit id="adbb3dbb566652d469c92e143d370e6625a585c4" translate="yes" xml:space="preserve">
          <source>Using Perl in OS/400 PASE</source>
          <target state="translated">Usando Perl en OS/400 PASE</target>
        </trans-unit>
        <trans-unit id="2f91327799ddf2016004ebaf8e8d6bedda20acf6" translate="yes" xml:space="preserve">
          <source>Using Perl in Symbian</source>
          <target state="translated">Usando Perl en Symbian</target>
        </trans-unit>
        <trans-unit id="6d719543bb32291214db915134a27443927a8c27" translate="yes" xml:space="preserve">
          <source>Using Perl in the Posix-Shell of BS2000</source>
          <target state="translated">Usando Perl en el Posix-Shell de BS2000</target>
        </trans-unit>
        <trans-unit id="84118c01838e699ac467fa37b8bb29a7f8370768" translate="yes" xml:space="preserve">
          <source>Using Perl modules</source>
          <target state="translated">Usando los módulos de Perl</target>
        </trans-unit>
        <trans-unit id="028de32ca6d30212bfbce4a0c1bee8b8576b4e69" translate="yes" xml:space="preserve">
          <source>Using Perl modules, which themselves use C libraries, from your C program</source>
          <target state="translated">Usando los módulos de Perl,que a su vez usan las bibliotecas de C,de su programa de C</target>
        </trans-unit>
        <trans-unit id="0ff9818b99a67e75450030e8c7e7092cbe65f9c0" translate="yes" xml:space="preserve">
          <source>Using Perl on WinCE</source>
          <target state="translated">Usando Perl en WinCE</target>
        </trans-unit>
        <trans-unit id="a5580cc662de9455c8f221545dacc2b26132369a" translate="yes" xml:space="preserve">
          <source>Using Perl to Dispose of Temporaries</source>
          <target state="translated">Uso de Perl para la eliminación de los desechos temporales</target>
        </trans-unit>
        <trans-unit id="5320f15bf6dff40493f314bd488164951d124fee" translate="yes" xml:space="preserve">
          <source>Using Perl to dispose of temporaries</source>
          <target state="translated">Usar Perl para deshacerse de los temporales</target>
        </trans-unit>
        <trans-unit id="b797430b32d30f68c1ea4534b74218539d3aaf64" translate="yes" xml:space="preserve">
          <source>Using Perl's built in conversion of numbers with leading zeros:</source>
          <target state="translated">Usando la conversión de números con ceros a la izquierda,construida por Perl:</target>
        </trans-unit>
        <trans-unit id="f15ed3b42ac67b1af9e23e97edaf317ed0b825a6" translate="yes" xml:space="preserve">
          <source>Using PerlIO and different encodings on ASCII and EBCDIC partitions</source>
          <target state="translated">Usando PerlIO y diferentes codificaciones en las particiones ASCII y EBCDIC</target>
        </trans-unit>
        <trans-unit id="36711385fbee8d56f23de9017ef392314347e2e0" translate="yes" xml:space="preserve">
          <source>Using References</source>
          <target state="translated">Usando referencias</target>
        </trans-unit>
        <trans-unit id="82685302632dac9e1fd31a13c0849aefa5124be7" translate="yes" xml:space="preserve">
          <source>Using Unicode in XS</source>
          <target state="translated">Usando Unicode en XS</target>
        </trans-unit>
        <trans-unit id="998956ebf62d14d931cc7ad656bc083d855b7aba" translate="yes" xml:space="preserve">
          <source>Using XS With C++</source>
          <target state="translated">Usando XS con C++</target>
        </trans-unit>
        <trans-unit id="dac1e6f7cf5fb38291cdecac855edeefdf437f99" translate="yes" xml:space="preserve">
          <source>Using \ for Windows, except for &quot;gmake&quot; where it is /.</source>
          <target state="translated">Usando para Windows,excepto para &quot;gmake&quot; donde es /.</target>
        </trans-unit>
        <trans-unit id="8137c8c1ed484dbce9760788d8ea8483549cf1f0" translate="yes" xml:space="preserve">
          <source>Using _t/harness_ for testing</source>
          <target state="translated">Usando _t/arnés_para las pruebas</target>
        </trans-unit>
        <trans-unit id="4f4b906f20b028b71f5628fd6f90032d406f6155" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;__WARN__&lt;/code&gt; handler provides a powerful way to silence all warnings (even the so-called mandatory ones). An example:</source>
          <target state="translated">El uso de un controlador &lt;code&gt;__WARN__&lt;/code&gt; proporciona una forma poderosa de silenciar todas las advertencias (incluso las llamadas obligatorias). Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="b4b4ca6e1deabca931233328798f7fbb48c8c07b" translate="yes" xml:space="preserve">
          <source>Using a closure as a function template allows us to generate many functions that act similarly. Suppose you wanted functions named after the colors that generated HTML font changes for the various colors:</source>
          <target state="translated">El uso de un cierre como plantilla de funciones nos permite generar muchas funciones que actúan de manera similar.Supongamos que quisieras que las funciones se nombraran según los colores que generaron los cambios de la fuente HTML para los diversos colores:</target>
        </trans-unit>
        <trans-unit id="3428ced333d3144f878ace997075432ead893fb6" translate="yes" xml:space="preserve">
          <source>Using a hash reference is</source>
          <target state="translated">Usar una referencia hash es</target>
        </trans-unit>
        <trans-unit id="336ecaf20b3b819b2df81459841f824dd710f158" translate="yes" xml:space="preserve">
          <source>Using a lexical pragma to enable or disable legacy behavior should be considered when appropriate, and in the absence of any pragma legacy behavior should be enabled. Which backward-incompatible changes are controlled implicitly by a 'use v5.x.y' is a decision which should be made by the pumpking in consultation with the community.</source>
          <target state="translated">El uso de un pragma léxico para habilitar o deshabilitar el comportamiento de legado debe ser considerado cuando sea apropiado,y en ausencia de cualquier pragma el comportamiento de legado debe ser habilitado.Qué cambios incompatibles con el pasado son controlados implícitamente por un &quot;uso v5.x.y&quot; es una decisión que debería ser tomada por el bombeo en consulta con la comunidad.</target>
        </trans-unit>
        <trans-unit id="37d264a714cc8982079f31352e5a02a2d407c9ec" translate="yes" xml:space="preserve">
          <source>Using a reference as a string produces both its referent's type, including any package blessing as described in &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;, as well as the numeric address expressed in hex. The ref() operator returns just the type of thing the reference is pointing to, without the address. See &lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt; for details and examples of its use.</source>
          <target state="translated">El uso de una referencia como cadena produce tanto el tipo de su referente, incluido cualquier paquete de bendici&amp;oacute;n como se describe en &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; , como la direcci&amp;oacute;n num&amp;eacute;rica expresada en hexadecimal. El operador ref () devuelve solo el tipo de cosa a la que apunta la referencia, sin la direcci&amp;oacute;n. Consulte la &lt;a href=&quot;functions/ref&quot;&gt;referencia&lt;/a&gt; para obtener detalles y ejemplos de su uso.</target>
        </trans-unit>
        <trans-unit id="178dbf3b1655da796ad383968646cf6aaa7b961a" translate="yes" xml:space="preserve">
          <source>Using a regular Perl string as a key or value for a DBM hash will trigger a wide character exception if any codepoints won&amp;rsquo;t fit into a byte. Here&amp;rsquo;s how to manually manage the translation:</source>
          <target state="translated">El uso de una cadena de Perl normal como clave o valor para un hash DBM activar&amp;aacute; una excepci&amp;oacute;n de car&amp;aacute;cter amplio si alg&amp;uacute;n punto de c&amp;oacute;digo no cabe en un byte. A continuaci&amp;oacute;n, le indicamos c&amp;oacute;mo administrar manualmente la traducci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="544cb5d954d39b68ec105da285e699133ee66333" translate="yes" xml:space="preserve">
          <source>Using a slice on the lefthand side of the assignment supplies list context to the righthand side. This can lead to unexpected results. For instance, if you want to read a single line from a filehandle, assigning to a scalar value is fine:</source>
          <target state="translated">Usando un trozo a la izquierda de la lista de suministros de la asignación,el contexto de la lista a la derecha.Esto puede llevar a resultados inesperados.Por ejemplo,si quieres leer una sola línea de un filehandle,asignar un valor escalar está bien:</target>
        </trans-unit>
        <trans-unit id="047ab6347496bdbb043bb75da5faf973242f2e7a" translate="yes" xml:space="preserve">
          <source>Using a source-level debugger</source>
          <target state="translated">Usando un depurador a nivel de fuente</target>
        </trans-unit>
        <trans-unit id="5e1e5b1c335e1407e117badbc02a20174cee06fd" translate="yes" xml:space="preserve">
          <source>Using a string or number as a reference produces a symbolic reference, as explained above. Using a reference as a number produces an integer representing its storage location in memory. The only useful thing to be done with this is to compare two references numerically to see whether they refer to the same location.</source>
          <target state="translated">El uso de una cadena o un número como referencia produce una referencia simbólica,como se explicó anteriormente.Usar una referencia como número produce un entero que representa su ubicación de almacenamiento en la memoria.Lo único útil que se puede hacer con esto es comparar dos referencias numéricamente para ver si se refieren a la misma ubicación.</target>
        </trans-unit>
        <trans-unit id="d9e91a5896764f48c6ace56fa4d53091e1acc312" translate="yes" xml:space="preserve">
          <source>Using a subroutine as part of your sort is a powerful way to get exactly what you want, but will usually be slower than the built-in</source>
          <target state="translated">El uso de una subrutina como parte de su clase es una manera poderosa de obtener exactamente lo que quiere,pero por lo general será más lento que la incorporada</target>
        </trans-unit>
        <trans-unit id="2a79ecdd0e9982d50231f84c62b552b6746f4f38" translate="yes" xml:space="preserve">
          <source>Using a value of &lt;code&gt;'IGNORE'&lt;/code&gt; usually has the effect of ignoring the signal, except for the &lt;code&gt;CHLD&lt;/code&gt; signal. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for more about this special case.</source>
          <target state="translated">El uso de un valor de &lt;code&gt;'IGNORE'&lt;/code&gt; generalmente tiene el efecto de ignorar la se&amp;ntilde;al, excepto la se&amp;ntilde;al &lt;code&gt;CHLD&lt;/code&gt; . Consulte &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre este caso especial.</target>
        </trans-unit>
        <trans-unit id="4df5e3fd8acd272c23a1963f6dc8693fe3a9c164" translate="yes" xml:space="preserve">
          <source>Using an indirect object with &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; is also more secure. This usage (which also works fine with system()) forces interpretation of the arguments as a multivalued list, even if the list had just one argument. That way you're safe from the shell expanding wildcards or splitting up words with whitespace in them.</source>
          <target state="translated">El uso de un objeto indirecto con &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n es m&amp;aacute;s seguro. Este uso (que tambi&amp;eacute;n funciona bien con system ()) fuerza la interpretaci&amp;oacute;n de los argumentos como una lista de varios valores, incluso si la lista tiene solo un argumento. De esa manera, estar&amp;aacute; a salvo del shell que expande comodines o divide palabras con espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="44d98963d401217f7be5255c87293a2853856e67" translate="yes" xml:space="preserve">
          <source>Using an indirect object with &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; is also more secure. This usage (which also works fine with system()) forces interpretation of the arguments as a multivalued list, even if the list had just one argument. That way you're safe from the shell expanding wildcards or splitting up words with whitespace in them.</source>
          <target state="translated">El uso de un objeto indirecto con &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n es m&amp;aacute;s seguro. Este uso (que tambi&amp;eacute;n funciona bien con system ()) fuerza la interpretaci&amp;oacute;n de los argumentos como una lista de varios valores, incluso si la lista tiene solo un argumento. De esa manera, estar&amp;aacute; a salvo del shell que expande comodines o divide palabras con espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="604eef1aa9c7558fedd10f863a9440cef58a337c" translate="yes" xml:space="preserve">
          <source>Using an installation prefix of '/usr' will result in a directory layout that mirrors that of Apple's default Perl, with core modules stored in '/System/Library/Perl/${version}', CPAN modules stored in '/Library/Perl/${version}', and the addition of '/Network/Library/Perl/${version}' to @INC for modules that are stored on a file server and used by many Macs.</source>
          <target state="translated">El uso de un prefijo de instalación de '/usr' dará como resultado una distribución del directorio que refleja la del Perl por defecto de Apple,con los módulos del núcleo almacenados en '/System/Library/Perl/${version}',los módulos CPAN almacenados en '/Library/Perl/${version}',y la adición de '/Network/Library/Perl/${version}' a @INC para los módulos que se almacenan en un servidor de archivos y son usados por muchas Macs.</target>
        </trans-unit>
        <trans-unit id="aa23c98317fa566c477de2941d147e87b315123e" translate="yes" xml:space="preserve">
          <source>Using an object as the left operand is allowed, although not very useful. Smartmatching rules take precedence over overloading, so even if the object in the left operand has smartmatch overloading, this will be ignored. A left operand that is a non-overloaded object falls back on a string or numeric comparison of whatever the &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; operator returns. That means that</source>
          <target state="translated">Se permite usar un objeto como operando izquierdo, aunque no es muy &amp;uacute;til. Las reglas de Smartmatching tienen prioridad sobre la sobrecarga, por lo que incluso si el objeto del operando izquierdo tiene una sobrecarga de Smartmatch, esto se ignorar&amp;aacute;. Un operando izquierdo que es un objeto no sobrecargado recurre a una cadena o comparaci&amp;oacute;n num&amp;eacute;rica de lo que devuelve el operador de &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; erencia . Eso significa que</target>
        </trans-unit>
        <trans-unit id="6e3237ae31bb37c81782ea50be28770f0de2555e" translate="yes" xml:space="preserve">
          <source>Using any of the above invocations, the first argument to the constructor is always the corresponding package name (or object reference). No other arguments are required, but if desired, an associative array (or hash-table) my be passed to the &lt;b&gt;new()&lt;/b&gt; constructor, as in:</source>
          <target state="translated">Al utilizar cualquiera de las invocaciones anteriores, el primer argumento del constructor es siempre el nombre del paquete correspondiente (o la referencia del objeto). No se requieren otros argumentos, pero si se desea, se puede pasar una matriz asociativa (o tabla hash &lt;b&gt;) al&lt;/b&gt; constructor &lt;b&gt;new ()&lt;/b&gt; , como en:</target>
        </trans-unit>
        <trans-unit id="8097e70784bcbb030b53b18d1acb24cd21f46737" translate="yes" xml:space="preserve">
          <source>Using arguments of the form &lt;code&gt;-Ldir&lt;/code&gt; and &lt;code&gt;-lname&lt;/code&gt; is recommended.</source>
          <target state="translated">Se recomienda utilizar argumentos de la forma &lt;code&gt;-Ldir&lt;/code&gt; y &lt;code&gt;-lname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6161aa0cd787955761dec12d0177c3ac026e9b0" translate="yes" xml:space="preserve">
          <source>Using call_argv</source>
          <target state="translated">Usando call_argv</target>
        </trans-unit>
        <trans-unit id="9134163152acbc5710de0bd418aa078593a2b9c2" translate="yes" xml:space="preserve">
          <source>Using call_method</source>
          <target state="translated">Usando call_method</target>
        </trans-unit>
        <trans-unit id="b881b2dfc007740bbb57d40d5226f14e171509f9" translate="yes" xml:space="preserve">
          <source>Using call_sv</source>
          <target state="translated">Usando call_sv</target>
        </trans-unit>
        <trans-unit id="fa52cf5ccb980442f1ec3e9f0afd04690158c461" translate="yes" xml:space="preserve">
          <source>Using caret fields can produce lines where all fields are blank. You can suppress such lines by putting a &quot;~&quot; (tilde) character anywhere in the line. The tilde will be translated to a space upon output.</source>
          <target state="translated">El uso de los campos de caret puede producir líneas en las que todos los campos están en blanco.Puede suprimir tales líneas poniendo un carácter &quot;~&quot; (tilde)en cualquier parte de la línea.La tilde se traducirá a un espacio al salir.</target>
        </trans-unit>
        <trans-unit id="3b35e7b174dfce328e49d2c9b54ef677263d0168" translate="yes" xml:space="preserve">
          <source>Using caseless (&lt;code&gt;/i&lt;/code&gt;) regular expression matching.</source>
          <target state="translated">Uso de coincidencia de expresiones regulares sin may&amp;uacute;sculas &lt;code&gt;/i&lt;/code&gt; min&amp;uacute;sculas ( / i ).</target>
        </trans-unit>
        <trans-unit id="912a2aec3bed273542aa33d8ea10bb43e6f23900" translate="yes" xml:space="preserve">
          <source>Using character classes</source>
          <target state="translated">Usando las clases de personaje</target>
        </trans-unit>
        <trans-unit id="0ed204e094dc9752d186724902c15a617f19dc27" translate="yes" xml:space="preserve">
          <source>Using diagnostics to get stack traces from a misbehaving script:</source>
          <target state="translated">Usando diagnósticos para obtener rastros de pila de un guión de mal comportamiento:</target>
        </trans-unit>
        <trans-unit id="6d1350125897c58fd7a177587a74cb5b6d024e7d" translate="yes" xml:space="preserve">
          <source>Using double angle brackets inside of a while causes the open to use the three argument form (with the second argument being &lt;code&gt;&amp;lt;&lt;/code&gt; ), so all arguments in &lt;code&gt;ARGV&lt;/code&gt; are treated as literal filenames (including &lt;code&gt;&quot;-&quot;&lt;/code&gt; ). (Note that for convenience, if you use &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; and if &lt;code&gt;@ARGV&lt;/code&gt; is empty, it will still read from the standard input.)</source>
          <target state="translated">El uso de corchetes angulares dobles dentro de un while hace que el abierto use la forma de tres argumentos (con el segundo argumento siendo &lt;code&gt;&amp;lt;&lt;/code&gt; ), por lo que todos los argumentos en &lt;code&gt;ARGV&lt;/code&gt; se tratan como nombres de archivo literales (incluido &lt;code&gt;&quot;-&quot;&lt;/code&gt; ). (Tenga en cuenta que, por conveniencia, si usa &lt;code&gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&lt;/code&gt; y si &lt;code&gt;@ARGV&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o, seguir&amp;aacute; leyendo desde la entrada est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="87082cc66c652c8a0a8c6cf8ba8fff9479b0be7a" translate="yes" xml:space="preserve">
          <source>Using either $MM-&amp;gt;{uc $var} || $Config{lc $var}, it will attempt to replace it's $prefix with a $new_prefix.</source>
          <target state="translated">Usando $ MM -&amp;gt; {uc $ var} || $ Config {lc $ var}, intentar&amp;aacute; reemplazar su $ prefijo con $ new_prefix.</target>
        </trans-unit>
        <trans-unit id="215bd29754319db34f811a8f9488126e67fb90a8" translate="yes" xml:space="preserve">
          <source>Using embedded Perl with POSIX locales</source>
          <target state="translated">Usando Perl incrustado con locales POSIX</target>
        </trans-unit>
        <trans-unit id="b18845c29a07642058d0aa5ccceaac4ae90f9d59" translate="yes" xml:space="preserve">
          <source>Using gcc statement expressions</source>
          <target state="translated">Usando expresiones de la declaración del GCC</target>
        </trans-unit>
        <trans-unit id="2fe92cd4a689f7ce76bfa5b984e6c38acace0732" translate="yes" xml:space="preserve">
          <source>Using gcc-3.x (tested with 3.0.4, 3.1, and 3.2) now works out of the box, as do recent gcc-2.9 builds available directly from IBM as part of their Linux compatibility packages, available here:</source>
          <target state="translated">El uso de gcc-3.x (probado con 3.0.4,3.1,y 3.2)ahora funciona de inmediato,al igual que las recientes construcciones de gcc-2.9 disponibles directamente de IBM como parte de sus paquetes de compatibilidad con Linux,disponibles aquí:</target>
        </trans-unit>
        <trans-unit id="bdb0c9c540b125781f1757da970ccae106c403a1" translate="yes" xml:space="preserve">
          <source>Using gdb to look at specific parts of a program</source>
          <target state="translated">Usar gdb para mirar partes específicas de un programa</target>
        </trans-unit>
        <trans-unit id="57bf0c1d6a34f5d8784552210b62d448a2b10410" translate="yes" xml:space="preserve">
          <source>Using gdb to look at what the parser/lexer are doing</source>
          <target state="translated">Usando gdb para mirar lo que los parser/lexer están haciendo</target>
        </trans-unit>
        <trans-unit id="29fde3627eec5ec683270fb27481ef8c0d1c38c6" translate="yes" xml:space="preserve">
          <source>Using independent subexpressions to prevent backtracking</source>
          <target state="translated">Usar subexpresiones independientes para evitar el retroceso</target>
        </trans-unit>
        <trans-unit id="31ab5d33d67aac1b9f2ccad1cbfd447894360c2b" translate="yes" xml:space="preserve">
          <source>Using logically paired delimiters can be even more readable:</source>
          <target state="translated">El uso de delimitadores emparejados lógicamente puede ser aún más legible:</target>
        </trans-unit>
        <trans-unit id="3a44a3d396fc486b4ee2331bfc52809b0dad44df" translate="yes" xml:space="preserve">
          <source>Using methods that do not modify, but test that the contents works:</source>
          <target state="translated">Usando métodos que no modifican,sino que prueban que el contenido funciona:</target>
        </trans-unit>
        <trans-unit id="b0d1b97f67a06429913567862e9a662a62326468" translate="yes" xml:space="preserve">
          <source>Using methods that do not modify, but test the contents works:</source>
          <target state="translated">Usar métodos que no modifican,sino que prueban el contenido funciona:</target>
        </trans-unit>
        <trans-unit id="a5aebc39485edc859f77fc91f87d35c5af691252" translate="yes" xml:space="preserve">
          <source>Using methods that do not modify, but testthe contents works:</source>
          <target state="translated">Usando métodos que no modifican,sino que prueban el contenido funciona:</target>
        </trans-unit>
        <trans-unit id="8d80ea05e0ed4a3e5f034eecf41875e66394f03f" translate="yes" xml:space="preserve">
          <source>Using negation on a single letter option when bundling is in effect is pointless and will result in a warning.</source>
          <target state="translated">El uso de la negación en una opción de una sola letra cuando la agrupación está en efecto es inútil y resultará en una advertencia.</target>
        </trans-unit>
        <trans-unit id="8d592d89e9701f8203326be192c2ab0972d996bc" translate="yes" xml:space="preserve">
          <source>Using open() for IPC</source>
          <target state="translated">Usando open()para IPC</target>
        </trans-unit>
        <trans-unit id="f8c56b194bd4e8beff577cc65b3f025dea6a56fa" translate="yes" xml:space="preserve">
          <source>Using perl as shipped with HP-UX</source>
          <target state="translated">Usando el perl tal y como se envía con el HP-UX</target>
        </trans-unit>
        <trans-unit id="543f3ae6c47ff0945f0303be3eebde44d6d34ce3" translate="yes" xml:space="preserve">
          <source>Using perl from HP's porting centre</source>
          <target state="translated">Usando el perl del centro de transporte de HP</target>
        </trans-unit>
        <trans-unit id="8b05c58f51293f54962b4c8b3d752fd39e7ea984" translate="yes" xml:space="preserve">
          <source>Using perl to connect to Oracle databases through DBI and DBD::Oracle has caused a lot of people many headaches. Read README.hpux in the DBD::Oracle for much more information. The reason to mention it here is that Oracle requires a perl built with libcl and libpthread, the latter even when perl is build without threads. Building perl using all defaults, but still enabling to build DBD::Oracle later on can be achieved using</source>
          <target state="translated">Usar perl para conectarse a las bases de datos de Oracle a través de DBI y DBD::Oracle ha causado a mucha gente muchos dolores de cabeza.Lee README.hpux en el DBD::Oracle para más información.La razón para mencionarlo aquí es que Oracle requiere un perl construido con libcl y libpthread,este último incluso cuando perl se construye sin hilos.Construir perl usando todos los valores por defecto,pero aún así habilitando la construcción del DBD::Oracle más adelante se puede lograr usando</target>
        </trans-unit>
        <trans-unit id="7a2126efc34d2ceda4c425a482fb9bb2ca847f69" translate="yes" xml:space="preserve">
          <source>Using perl's built in conversion of &lt;code&gt;0x&lt;/code&gt; notation:</source>
          <target state="translated">Usando la conversi&amp;oacute;n incorporada de perl de notaci&amp;oacute;n &lt;code&gt;0x&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1d2a5a50232b147e3a169652436928c470a9aa77" translate="yes" xml:space="preserve">
          <source>Using printf formats for non-basic C types</source>
          <target state="translated">Usar formatos de impresión para los tipos C no básicos</target>
        </trans-unit>
        <trans-unit id="df5384f5e1467c8d0cf10444a33f9f98d9662cee" translate="yes" xml:space="preserve">
          <source>Using qq(), q(), and qx(), instead of &quot;double quotes&quot;, 'single quotes', and `backticks`, may make one-liners easier to write.</source>
          <target state="translated">El uso de qq(),q()y qx(),en lugar de &quot;comillas dobles&quot;,&quot;comillas simples&quot; y &quot;palillos&quot;,puede hacer que las líneas simples sean más fáciles de escribir.</target>
        </trans-unit>
        <trans-unit id="322a6e9972f7fb8edd8295fc130224c62501d62e" translate="yes" xml:space="preserve">
          <source>Using regular expressions in Perl</source>
          <target state="translated">Usando expresiones regulares en Perl</target>
        </trans-unit>
        <trans-unit id="6fac332e29fd0c799ec1618a5cc40f7221532230" translate="yes" xml:space="preserve">
          <source>Using single-quote as a delimiter protects the command from Perl's double-quote interpolation, passing it on to the shell instead:</source>
          <target state="translated">El uso de la cita simple como delimitador protege al comando de la interpolación de la cita doble de Perl,pasándolo a la cáscara en su lugar:</target>
        </trans-unit>
        <trans-unit id="e361630850aae34ab890ed75be3d3681ddf2f2b5" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; form as an exception trap in libraries does have some issues. Due to the current arguably broken state of &lt;code&gt;__DIE__&lt;/code&gt; hooks, you may wish not to trigger any &lt;code&gt;__DIE__&lt;/code&gt; hooks that user code may have installed. You can use the &lt;code&gt;&lt;a href=&quot;local&quot;&gt;local&lt;/a&gt; $SIG{__DIE__}&lt;/code&gt; construct for this purpose, as this example shows:</source>
          <target state="translated">Usar el formulario &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; como una trampa de excepci&amp;oacute;n en bibliotecas tiene algunos problemas. Debido al estado actual posiblemente roto de los ganchos &lt;code&gt;__DIE__&lt;/code&gt; , es posible que no desee activar ning&amp;uacute;n &lt;code&gt;__DIE__&lt;/code&gt; que el c&amp;oacute;digo de usuario pueda haber instalado. Puede usar la construcci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;local&quot;&gt;local&lt;/a&gt; $SIG{__DIE__}&lt;/code&gt; para este prop&amp;oacute;sito, como muestra este ejemplo:</target>
        </trans-unit>
        <trans-unit id="1af4f95da6bd74e39669d85ff89a3cba96099269" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; form as an exception trap in libraries does have some issues. Due to the current arguably broken state of &lt;code&gt;__DIE__&lt;/code&gt; hooks, you may wish not to trigger any &lt;code&gt;__DIE__&lt;/code&gt; hooks that user code may have installed. You can use the &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $SIG{__DIE__}&lt;/code&gt; construct for this purpose, as this example shows:</source>
          <target state="translated">Usar el formulario &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; como una trampa de excepci&amp;oacute;n en bibliotecas tiene algunos problemas. Debido al estado actual posiblemente roto de los ganchos &lt;code&gt;__DIE__&lt;/code&gt; , es posible que no desee activar ning&amp;uacute;n &lt;code&gt;__DIE__&lt;/code&gt; que el c&amp;oacute;digo de usuario pueda haber instalado. Puede usar la construcci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $SIG{__DIE__}&lt;/code&gt; para este prop&amp;oacute;sito, como muestra este ejemplo:</target>
        </trans-unit>
        <trans-unit id="de2169c7a04ae8dba7470fca93fa527b85798dbe" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt; function:</source>
          <target state="translated">Usando la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;&lt;/code&gt; adecimal :</target>
        </trans-unit>
        <trans-unit id="1108296e898fc2261dd95f4aa7570d85ddac276e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; command of Perl debugger (see &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;) one can deduce which operations are overloaded (and which ancestor triggers this overloading). Say, if &lt;code&gt;eq&lt;/code&gt; is overloaded, then the method &lt;code&gt;(eq&lt;/code&gt; is shown by debugger. The method &lt;code&gt;()&lt;/code&gt; corresponds to the &lt;code&gt;fallback&lt;/code&gt; key (in fact a presence of this method shows that this package has overloading enabled, and it is what is used by the &lt;code&gt;Overloaded&lt;/code&gt; function of module &lt;code&gt;overload&lt;/code&gt; ).</source>
          <target state="translated">Usando el comando &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; del depurador de Perl (ver &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; ) uno puede deducir qu&amp;eacute; operaciones est&amp;aacute;n sobrecargadas (y qu&amp;eacute; ancestro desencadena esta sobrecarga). Digamos, si &lt;code&gt;eq&lt;/code&gt; est&amp;aacute; sobrecargado, entonces el m&amp;eacute;todo &lt;code&gt;(eq&lt;/code&gt; es mostrado por el depurador. El m&amp;eacute;todo &lt;code&gt;()&lt;/code&gt; corresponde a la clave de &lt;code&gt;fallback&lt;/code&gt; (de hecho, la presencia de este m&amp;eacute;todo muestra que este paquete tiene la sobrecarga habilitada, y es lo que usa el Funci&amp;oacute;n &lt;code&gt;Overloaded&lt;/code&gt; de &lt;code&gt;overload&lt;/code&gt; del m&amp;oacute;dulo ).</target>
        </trans-unit>
        <trans-unit id="aa67b5d2a4e3907ddf928ce915424a8bf19328d4" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; function:</source>
          <target state="translated">Usando la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="53251a51732562d07b79a04a55bb9b101d155369" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; pragma ensures that all variables are properly declared and prevents other misuses of legacy Perl features.</source>
          <target state="translated">El &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; pragma use estricto garantiza que todas las variables se declaren correctamente y evita otros usos indebidos de las funciones heredadas de Perl.</target>
        </trans-unit>
        <trans-unit id="1bda480993361a430b2548cdcd3f02a2d61e7bb5" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;In&lt;/code&gt; prefix avoids this ambiguity, so far. But new versions of Unicode continue to add new properties whose names begin with &lt;code&gt;In&lt;/code&gt; . There is a possibility that one of them someday will conflict with your usage. Since this is just a Perl extension, Unicode's name will take precedence and your code will become broken. Also, Unicode is free to add a script whose name begins with &lt;code&gt;In&lt;/code&gt; ; that would cause problems.</source>
          <target state="translated">El uso del prefijo &lt;code&gt;In&lt;/code&gt; evita esta ambig&amp;uuml;edad, hasta ahora. Pero las nuevas versiones de Unicode contin&amp;uacute;an agregando nuevas propiedades cuyos nombres comienzan con &lt;code&gt;In&lt;/code&gt; . Existe la posibilidad de que alguno de ellos alg&amp;uacute;n d&amp;iacute;a entre en conflicto con su uso. Dado que esta es solo una extensi&amp;oacute;n de Perl, el nombre de Unicode tendr&amp;aacute; prioridad y su c&amp;oacute;digo se romper&amp;aacute;. Adem&amp;aacute;s, Unicode puede agregar un script cuyo nombre comience con &lt;code&gt;In&lt;/code&gt; ; eso causar&amp;iacute;a problemas.</target>
        </trans-unit>
        <trans-unit id="26fd47284e729cedc59da500b68930f9ee3e861b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;diagnostics&lt;/code&gt; pragma:</source>
          <target state="translated">Usando el pragma de &lt;code&gt;diagnostics&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="18c4a3f647e2f5d82357ab39ea92ae98228cc2e0" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;nntpstat&lt;/code&gt; command to select by message-id is valid but of questionable value, since a selection by message-id does &lt;b&gt;not&lt;/b&gt; alter the &quot;current article pointer&quot;.</source>
          <target state="translated">Usar el comando &lt;code&gt;nntpstat&lt;/code&gt; para seleccionar por id de mensaje es v&amp;aacute;lido pero de valor cuestionable, ya que una selecci&amp;oacute;n por id de mensaje &lt;b&gt;no&lt;/b&gt; altera el &quot;puntero del art&amp;iacute;culo actual&quot;.</target>
        </trans-unit>
        <trans-unit id="13d6e3a9e702d5a08e56927cb7a997c29fc49a7b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;splain&lt;/code&gt; standalone filter program:</source>
          <target state="translated">Usando el programa de filtro independiente &lt;code&gt;splain&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5ea33d1eaae8e24543688decd019ec0f69a1f79d" translate="yes" xml:space="preserve">
          <source>Using the CPAN module &lt;code&gt;Bit::Vector&lt;/code&gt; :</source>
          <target state="translated">Usando el m&amp;oacute;dulo CPAN &lt;code&gt;Bit::Vector&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="910c0c6f5c0907edc9665e4e606f548cf3f4c360" translate="yes" xml:space="preserve">
          <source>Using the G_EVAL flag described above will always set &lt;code&gt;$@&lt;/code&gt; : clearing it if there was no error, and setting it to describe the error if there was an error in the called code. This is what you want if your intention is to handle possible errors, but sometimes you just want to trap errors and stop them interfering with the rest of the program.</source>
          <target state="translated">El uso de la bandera G_EVAL descrita anteriormente siempre configurar&amp;aacute; &lt;code&gt;$@&lt;/code&gt; : borr&amp;aacute;ndolo si no hubo error y configur&amp;aacute;ndolo para describir el error si hubo un error en el c&amp;oacute;digo llamado. Esto es lo que desea si su intenci&amp;oacute;n es manejar posibles errores, pero a veces solo desea atrapar errores y evitar que interfieran con el resto del programa.</target>
        </trans-unit>
        <trans-unit id="81c0cbb80720ba82333e9cac242b49c7344290c8" translate="yes" xml:space="preserve">
          <source>Using the O_WRONLY flag.</source>
          <target state="translated">Usando la bandera de O_WRONLY.</target>
        </trans-unit>
        <trans-unit id="318651aa0afd4166b844c0395b31d38b0b5bb275" translate="yes" xml:space="preserve">
          <source>Using the copy or the original with overloaded math is okay, e.g. the following work:</source>
          <target state="translated">Usar la copia o el original con matemáticas sobrecargadas está bien,por ejemplo,el siguiente trabajo:</target>
        </trans-unit>
        <trans-unit id="0de692f809342e61f897ad9464158e162341eb3b" translate="yes" xml:space="preserve">
          <source>Using the form $x += $y; etc over $x = $x + $y is faster, since a copy of $x must be made in the second case. For long numbers, the copy can eat up to 20% of the work (in the case of addition/subtraction, less for multiplication/division). If $y is very small compared to $x, the form $x += $y is MUCH faster than $x = $x + $y since making the copy of $x takes more time then the actual addition.</source>
          <target state="translated">Usando la forma $x +=$y;etc sobre $x=$x+$y es más rápido,ya que se debe hacer una copia de $x en el segundo caso.Para los números largos,la copia puede comerse hasta el 20% de la obra (en el caso de la suma/resta,menos para la multiplicación/división).Si $y es muy pequeño comparado con $x,la forma $x +=$y es MUCHO más rápida que $x=$x+$y ya que hacer la copia de $x lleva más tiempo que la suma real.</target>
        </trans-unit>
        <trans-unit id="12ccaa0444078f2a1b0edccce245e0b394be801a" translate="yes" xml:space="preserve">
          <source>Using the supplied template, create the temporary directory in a standard location for temporary files. Equivalent to doing</source>
          <target state="translated">Utilizando la plantilla suministrada,cree el directorio temporal en una ubicación estándar para los archivos temporales.Equivalente a hacer</target>
        </trans-unit>
        <trans-unit id="9e2035734d6024304e489d6917a2e574dba468c1" translate="yes" xml:space="preserve">
          <source>Using the syntax &lt;code&gt;MyParser::new()&lt;/code&gt; to invoke the constructor is</source>
          <target state="translated">Usar la sintaxis &lt;code&gt;MyParser::new()&lt;/code&gt; para invocar el constructor es</target>
        </trans-unit>
        <trans-unit id="acb6f03c46c097330bc723d0ffaf6e2dff2e6744" translate="yes" xml:space="preserve">
          <source>Using the template pat..patend, this function unpacks the string s..strend into a number of mortal SVs, which it pushes onto the perl argument (@_) stack (so you will need to issue a &lt;code&gt;PUTBACK&lt;/code&gt; before and &lt;code&gt;SPAGAIN&lt;/code&gt; after the call to this function). It returns the number of pushed elements.</source>
          <target state="translated">Usando la plantilla pat..patend, esta funci&amp;oacute;n descomprime la cadena s..strend en varios SV mortales, que empuja a la pila de argumentos de perl (@_) (por lo que deber&amp;aacute; emitir un &lt;code&gt;PUTBACK&lt;/code&gt; antes y &lt;code&gt;SPAGAIN&lt;/code&gt; despu&amp;eacute;s del llamar a esta funci&amp;oacute;n). Devuelve el n&amp;uacute;mero de elementos empujados.</target>
        </trans-unit>
        <trans-unit id="7a18622b9f73cf084e1c40515e63402b15a29333" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::bitwise&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::bitwise&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c41fbff9d3dc71a6f8badab26c0a06f0e18953ee" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::const_attr&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::const_attr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc856eaeef355d43fa8953f9faffa4c073431f05" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::lexical_subs&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::lexical_subs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="857c7cbd2ca8ba6b31bcdbf6dd9c2b32441faf23" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::lexical_topic&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::lexical_topic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de44610062c3b08fbff0aea3fd8f765facd544b6" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::postderef&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::postderef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5af3cfd78b8e6f9d0563b3f4cf549f389ec7ba5" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::re_strict&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::re_strict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65fcb853c1a517ad8d77449f7c0018250e14485b" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::refaliasing&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::refaliasing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37bffd5a63be98cf17b1b1c985d57c2adb638271" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::regex_sets&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::regex_sets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0a382b10a1d9a073eb205f7f2bb7818eb3bbf75" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::signatures&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::signatures&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="482e06051ee37583e9eea4d7cca4c50c1fbeaf4e" translate="yes" xml:space="preserve">
          <source>Using this feature triggers warnings in the category &lt;code&gt;experimental::smartmatch&lt;/code&gt; .</source>
          <target state="translated">El uso de esta funci&amp;oacute;n activa advertencias en la categor&amp;iacute;a &lt;code&gt;experimental::smartmatch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d4359e0b1138dffdeb53a1d3017037757b78671" translate="yes" xml:space="preserve">
          <source>Using this operator can lead to programs that are difficult to port, because the shell commands called vary between systems, and may in fact not be present at all. As one example, the &lt;code&gt;type&lt;/code&gt; command under the POSIX shell is very different from the &lt;code&gt;type&lt;/code&gt; command under DOS. That doesn't mean you should go out of your way to avoid backticks when they're the right way to get something done. Perl was made to be a glue language, and one of the things it glues together is commands. Just understand what you're getting yourself into.</source>
          <target state="translated">El uso de este operador puede conducir a programas que son dif&amp;iacute;ciles de portar, porque los comandos de shell llamados var&amp;iacute;an entre sistemas y, de hecho, pueden no estar presentes en absoluto. Como ejemplo, el comando de &lt;code&gt;type&lt;/code&gt; en el shell POSIX es muy diferente del comando de &lt;code&gt;type&lt;/code&gt; en DOS. Eso no significa que deba hacer todo lo posible para evitar las comillas inversas cuando son la forma correcta de hacer algo. Perl fue creado para ser un lenguaje adhesivo, y una de las cosas que une son los comandos. Solo entiende en lo que te est&amp;aacute;s metiendo.</target>
        </trans-unit>
        <trans-unit id="d4d70574aacd1d1847898b08d95988a332169072" translate="yes" xml:space="preserve">
          <source>Using various gambits, try to get a CV from an SV; in addition, try if possible to set &lt;code&gt;*st&lt;/code&gt; and &lt;code&gt;*gvp&lt;/code&gt; to the stash and GV associated with it. The flags in &lt;code&gt;lref&lt;/code&gt; are passed to gv_fetchsv.</source>
          <target state="translated">Usando varios trucos, intente obtener un CV de un SV; Adem&amp;aacute;s, intente si es posible establecer &lt;code&gt;*st&lt;/code&gt; y &lt;code&gt;*gvp&lt;/code&gt; en el alijo y GV asociados con &amp;eacute;l. Las banderas en &lt;code&gt;lref&lt;/code&gt; se pasan a gv_fetchsv.</target>
        </trans-unit>
        <trans-unit id="27cc9ed80851550eb53eda865f75d2e008f1dc72" translate="yes" xml:space="preserve">
          <source>Using various gambits, try to get an IO from an SV: the IO slot if its a GV; or the recursive result if we're an RV; or the IO slot of the symbol named after the PV if we're a string.</source>
          <target state="translated">Usando varios gambitos,trata de obtener un IO de un SV:el slot IO si es un GV;o el resultado recursivo si somos un RV;o el slot IO del símbolo nombrado después del PV si somos una cadena.</target>
        </trans-unit>
        <trans-unit id="40c4ad482806895c6f8713969b3ecb705fa44118" translate="yes" xml:space="preserve">
          <source>Using various methods &lt;b&gt;attempt&lt;/b&gt; to find the Fully Qualified Domain Name (FQDN) of the current host. From this determine the host-name and the host-domain.</source>
          <target state="translated">Utilice varios m&amp;eacute;todos para &lt;b&gt;intentar&lt;/b&gt; encontrar el nombre de dominio completo (FQDN) del host actual. A partir de esto, determine el nombre de host y el dominio de host.</target>
        </trans-unit>
        <trans-unit id="892738b2747cec8282f76dab54e62a0b79491609" translate="yes" xml:space="preserve">
          <source>Usual perl lib path (semi-list).</source>
          <target state="translated">El camino habitual de la liberación de perlas (semi-lista).</target>
        </trans-unit>
        <trans-unit id="b7cde133a5ff79130fd30cde6b361d0ab467bd51" translate="yes" xml:space="preserve">
          <source>Usually a hash ref, perhaps like this:</source>
          <target state="translated">Normalmente un árbitro de hachís,tal vez así:</target>
        </trans-unit>
        <trans-unit id="ad35f25dce96f5712243ad327f82cc56b137d4d7" translate="yes" xml:space="preserve">
          <source>Usually accessed via the &lt;code&gt;SvPVbyte&lt;/code&gt; macro.</source>
          <target state="translated">Generalmente se accede a trav&amp;eacute;s de la macro &lt;code&gt;SvPVbyte&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e38187632a58d32566d4fbc0b71dc22c87d815e2" translate="yes" xml:space="preserve">
          <source>Usually accessed via the &lt;code&gt;SvPVbyte_nolen&lt;/code&gt; macro.</source>
          <target state="translated">Generalmente se accede a trav&amp;eacute;s de la macro &lt;code&gt;SvPVbyte_nolen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0ca6cd076c679630ac44632c012203ed79a11ad" translate="yes" xml:space="preserve">
          <source>Usually accessed via the &lt;code&gt;SvPVutf8&lt;/code&gt; macro.</source>
          <target state="translated">Generalmente se accede a trav&amp;eacute;s de la macro &lt;code&gt;SvPVutf8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b020d8f1cda36b9415a539e77cdc15cb72cc9530" translate="yes" xml:space="preserve">
          <source>Usually accessed via the &lt;code&gt;SvPVutf8_nolen&lt;/code&gt; macro.</source>
          <target state="translated">Generalmente se accede a trav&amp;eacute;s de la macro &lt;code&gt;SvPVutf8_nolen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c024fdbe2028ca7a62024863c10f1c75039e578" translate="yes" xml:space="preserve">
          <source>Usually called from the object destructor when using the OO interface.</source>
          <target state="translated">Normalmente se llama desde el destructor de objetos cuando se usa la interfaz OO.</target>
        </trans-unit>
        <trans-unit id="4285fe9b5258e25bc264f1b1a13271726e80e089" translate="yes" xml:space="preserve">
          <source>Usually inherited from DB package. Ask for a STRING to be &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;-ed in executing code context.</source>
          <target state="translated">Generalmente se hereda del paquete DB. Pedir una cadena que se &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; -ed en la ejecuci&amp;oacute;n de c&amp;oacute;digo de contexto.</target>
        </trans-unit>
        <trans-unit id="026b900ced2773356641f583fde7b62143e57def" translate="yes" xml:space="preserve">
          <source>Usually inherited from DB package. If no arguments are passed, returns the poststop action string.</source>
          <target state="translated">Normalmente se hereda del paquete de DB.Si no se pasan argumentos,devuelve la cadena de acción poststop.</target>
        </trans-unit>
        <trans-unit id="7d9b8edd49b4cf562a81e5b8decb5de77fa1afd9" translate="yes" xml:space="preserve">
          <source>Usually inherited from DB package. If no arguments are passed, returns the prestop action string.</source>
          <target state="translated">Normalmente se hereda del paquete de DB.Si no se pasan argumentos,devuelve la cadena de acción prestop.</target>
        </trans-unit>
        <trans-unit id="0c460ecc82dad59a8d6a90636305608877d8c532" translate="yes" xml:space="preserve">
          <source>Usually programs take command line options as well as other arguments, for example, file names. It is good practice to always specify the options first, and the other arguments last. Getopt::Long will, however, allow the options and arguments to be mixed and 'filter out' all the options before passing the rest of the arguments to the program. To stop Getopt::Long from processing further arguments, insert a double dash &lt;code&gt;--&lt;/code&gt; on the command line:</source>
          <target state="translated">Por lo general, los programas toman las opciones de la l&amp;iacute;nea de comandos, as&amp;iacute; como otros argumentos, por ejemplo, nombres de archivos. Es una buena pr&amp;aacute;ctica especificar siempre las opciones primero y los dem&amp;aacute;s argumentos al final. Sin embargo, Getopt :: Long permitir&amp;aacute; que las opciones y los argumentos se mezclen y 'filtre' todas las opciones antes de pasar el resto de los argumentos al programa. Para detener Getopt :: Long de procesamiento m&amp;aacute;s argumentos, inserte un gui&amp;oacute;n doble &lt;code&gt;--&lt;/code&gt; en la l&amp;iacute;nea de comandos:</target>
        </trans-unit>
        <trans-unit id="2691970d8d342de7ae3956a2783fcd64867158b2" translate="yes" xml:space="preserve">
          <source>Usually used via its frontend &lt;code&gt;sv_catpvf&lt;/code&gt; .</source>
          <target state="translated">Generalmente se usa a trav&amp;eacute;s de su interfaz &lt;code&gt;sv_catpvf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="221ae26d5a59ab131e1ef8287fa9b5a715378994" translate="yes" xml:space="preserve">
          <source>Usually used via its frontend &lt;code&gt;sv_catpvf_mg&lt;/code&gt; .</source>
          <target state="translated">Usualmente se usa a trav&amp;eacute;s de su interfaz &lt;code&gt;sv_catpvf_mg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f47e17c3d0a65f1e24ab46a970720597c10ef39" translate="yes" xml:space="preserve">
          <source>Usually used via its frontend &lt;code&gt;sv_setpvf&lt;/code&gt; .</source>
          <target state="translated">Generalmente se usa a trav&amp;eacute;s de su interfaz &lt;code&gt;sv_setpvf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3548cea6e28d55dc32a5bfd0e3189ea93c77d357" translate="yes" xml:space="preserve">
          <source>Usually used via its frontend &lt;code&gt;sv_setpvf_mg&lt;/code&gt; .</source>
          <target state="translated">Usualmente se usa a trav&amp;eacute;s de su interfaz &lt;code&gt;sv_setpvf_mg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9bb4c004a0f7c4b905c963d10b31ef391b5c334" translate="yes" xml:space="preserve">
          <source>Usually used via one of its frontends &lt;code&gt;sv_vcatpvf&lt;/code&gt; and &lt;code&gt;sv_vcatpvf_mg&lt;/code&gt; .</source>
          <target state="translated">Generalmente se usa a trav&amp;eacute;s de una de sus &lt;code&gt;sv_vcatpvf&lt;/code&gt; y &lt;code&gt;sv_vcatpvf_mg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f08502c181dd16b4bbf68ae24c29b059d5a1bce" translate="yes" xml:space="preserve">
          <source>Usually used via one of its frontends &lt;code&gt;sv_vsetpvf&lt;/code&gt; and &lt;code&gt;sv_vsetpvf_mg&lt;/code&gt; .</source>
          <target state="translated">Generalmente se usa a trav&amp;eacute;s de una de sus &lt;code&gt;sv_vsetpvf&lt;/code&gt; y &lt;code&gt;sv_vsetpvf_mg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fff94b5e5d0e7b2c191398749185343c2f32a65" translate="yes" xml:space="preserve">
          <source>Usually when a variable is localized you want to make sure that this change affects the shortest scope possible. So unless you are already inside some short &lt;code&gt;{}&lt;/code&gt; block, you should create one yourself. For example:</source>
          <target state="translated">Por lo general, cuando se localiza una variable, debe asegurarse de que este cambio afecte al alcance m&amp;aacute;s corto posible. Entonces, a menos que ya est&amp;eacute; dentro de un bloque &lt;code&gt;{}&lt;/code&gt; corto , debe crear uno usted mismo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="599351f57ec025dcf8b7e2139660d070855a8727" translate="yes" xml:space="preserve">
          <source>Usually you'll want to pack or unpack UTF-8 strings:</source>
          <target state="translated">Normalmente querrás empacar o desempacar las cuerdas UTF-8:</target>
        </trans-unit>
        <trans-unit id="cf8c2092d45b2a1234c61351a627eb75997a3b4f" translate="yes" xml:space="preserve">
          <source>Usually, the feature can be entirely ignored. Calling</source>
          <target state="translated">Por lo general,la característica puede ser totalmente ignorada.Llamando a</target>
        </trans-unit>
        <trans-unit id="3747a1556b1698c5e4df73c06a70d49b29b190d1" translate="yes" xml:space="preserve">
          <source>Usually, these single-character options can be bundled:</source>
          <target state="translated">Por lo general,estas opciones de un solo carácter pueden ser agrupadas:</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="29f83b729f46062c9dd1b32c5a75ee83eb4a8e12" translate="yes" xml:space="preserve">
          <source>Utilities for embedding Perl in C/C++ applications</source>
          <target state="translated">Utilidades para incrustar Perl en aplicaciones C/C++</target>
        </trans-unit>
        <trans-unit id="c5c36f1963730a8868662732388dc0c0703a634a" translate="yes" xml:space="preserve">
          <source>Utilities for managing %^H scopes</source>
          <target state="translated">Utilidades para la gestión de los alcances %^H</target>
        </trans-unit>
        <trans-unit id="35acf3ef6343308f92e84a6c665aa85cecd79c2b" translate="yes" xml:space="preserve">
          <source>Utilities to replace common UNIX commands in Makefiles etc.</source>
          <target state="translated">Utilidades para reemplazar los comandos comunes de UNIX en Makefiles,etc.</target>
        </trans-unit>
        <trans-unit id="1637dc7299266babf67a48df4d48af858929b4bd" translate="yes" xml:space="preserve">
          <source>Utilities to write and check a MANIFEST file</source>
          <target state="translated">Utilidades para escribir y comprobar un archivo MANIFEST</target>
        </trans-unit>
        <trans-unit id="8bf056ede57539fe7ab422f88b516c58223a0adf" translate="yes" xml:space="preserve">
          <source>Utility Functions</source>
          <target state="translated">Funciones de utilidad</target>
        </trans-unit>
        <trans-unit id="5486a0e8e13b0b039dc58793f09b6e6eb6465317" translate="yes" xml:space="preserve">
          <source>Utility Methods</source>
          <target state="translated">Métodos de utilidad</target>
        </trans-unit>
        <trans-unit id="2ffeb2e1de80e186589b30d3572aa3cf779263b5" translate="yes" xml:space="preserve">
          <source>Utility for CPAN::Config file Initialization</source>
          <target state="translated">Utilidad para CPAN::Inicialización del archivo de configuración</target>
        </trans-unit>
        <trans-unit id="bc41614ee1aee6d115725273058a3f6ba77aebc5" translate="yes" xml:space="preserve">
          <source>Utility function that tells you if &lt;code&gt;IPC::Cmd&lt;/code&gt; is capable of capturing buffers in it's current configuration.</source>
          <target state="translated">Funci&amp;oacute;n de utilidad que le dice si &lt;code&gt;IPC::Cmd&lt;/code&gt; es capaz de capturar b&amp;uacute;feres en su configuraci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="f378c15ae2f401b4423675b36af5d2e3c5f0b6d5" translate="yes" xml:space="preserve">
          <source>Utility function that tells you if &lt;code&gt;IPC::Cmd&lt;/code&gt; is capable of providing &lt;code&gt;run_forked&lt;/code&gt; on the current platform.</source>
          <target state="translated">Funci&amp;oacute;n de utilidad que le dice si &lt;code&gt;IPC::Cmd&lt;/code&gt; es capaz de proporcionar &lt;code&gt;run_forked&lt;/code&gt; en la plataforma actual.</target>
        </trans-unit>
        <trans-unit id="4bd9fd9b54869479fd1b5ab93786828f7dca29ba" translate="yes" xml:space="preserve">
          <source>Utility function that tells you if &lt;code&gt;IPC::Open3&lt;/code&gt; is available. If the verbose flag is passed, it will print diagnostic messages if &lt;code&gt;IPC::Open3&lt;/code&gt; can not be found or loaded.</source>
          <target state="translated">Funci&amp;oacute;n de utilidad que le indica si &lt;code&gt;IPC::Open3&lt;/code&gt; est&amp;aacute; disponible. Si se pasa la bandera detallada, imprimir&amp;aacute; mensajes de diagn&amp;oacute;stico si no se puede encontrar o cargar &lt;code&gt;IPC::Open3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="451db65a6c9d4e76bfbbd6735fbbae7748464a49" translate="yes" xml:space="preserve">
          <source>Utility function that tells you if &lt;code&gt;IPC::Run&lt;/code&gt; is available. If the &lt;code&gt;verbose&lt;/code&gt; flag is passed, it will print diagnostic messages if &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt; can not be found or loaded.</source>
          <target state="translated">Funci&amp;oacute;n de utilidad que le indica si &lt;code&gt;IPC::Run&lt;/code&gt; est&amp;aacute; disponible. Si se pasa el indicador &lt;code&gt;verbose&lt;/code&gt; , imprimir&amp;aacute; mensajes de diagn&amp;oacute;stico si no se puede encontrar o cargar &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f16cdccb3faaa5e67faa6fdb65caa5cf29d51cbb" translate="yes" xml:space="preserve">
          <source>Utility functions</source>
          <target state="translated">Funciones de utilidad</target>
        </trans-unit>
        <trans-unit id="1f8287a26f238372802990f191fcd97ce4ce1919" translate="yes" xml:space="preserve">
          <source>Utility functions to compare CPAN versions</source>
          <target state="translated">Funciones de utilidad para comparar las versiones del CPAN</target>
        </trans-unit>
        <trans-unit id="e944fa11ecc3fc10a3b409bcd5f6df4ebd3f4487" translate="yes" xml:space="preserve">
          <source>Uuencoding</source>
          <target state="translated">Uuencoding</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="7dc10180b878fd7bd185c2d6a23c0519a292a3a0" translate="yes" xml:space="preserve">
          <source>VALUE</source>
          <target state="translated">VALUE</target>
        </trans-unit>
        <trans-unit id="41fdf9c71f9b0e67f5d577b57ffb59065472ee6e" translate="yes" xml:space="preserve">
          <source>VAR</source>
          <target state="translated">VAR</target>
        </trans-unit>
        <trans-unit id="b5fcb61029823124da78ad195388293fa0fe55ea" translate="yes" xml:space="preserve">
          <source>VARIABLES</source>
          <target state="translated">VARIABLES</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="f189e0805d92e6bfdd489073d1a01e43b46335be" translate="yes" xml:space="preserve">
          <source>VERSION may be either a numeric argument such as 5.006, which will be compared to &lt;code&gt;$]&lt;/code&gt; , or a literal of the form v5.6.1, which will be compared to &lt;code&gt;$^V&lt;/code&gt; (aka $PERL_VERSION). An exception is raised if VERSION is greater than the version of the current Perl interpreter. Compare with &lt;a href=&quot;#use&quot;&gt;use&lt;/a&gt;, which can do a similar check at compile time.</source>
          <target state="translated">VERSION puede ser un argumento num&amp;eacute;rico como 5.006, que se comparar&amp;aacute; con &lt;code&gt;$]&lt;/code&gt; , o un literal de la forma v5.6.1, que se comparar&amp;aacute; con &lt;code&gt;$^V&lt;/code&gt; (tambi&amp;eacute;n conocido como $ PERL_VERSION). Se genera una excepci&amp;oacute;n si VERSION es mayor que la versi&amp;oacute;n del int&amp;eacute;rprete de Perl actual. Compare con el &lt;a href=&quot;#use&quot;&gt;uso&lt;/a&gt; , que puede realizar una comprobaci&amp;oacute;n similar en tiempo de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3f48ba5d24abaab8495945658838888561f00637" translate="yes" xml:space="preserve">
          <source>VERSION may be either a numeric argument such as 5.006, which will be compared to &lt;code&gt;$]&lt;/code&gt; , or a literal of the form v5.6.1, which will be compared to &lt;code&gt;$^V&lt;/code&gt; (aka $PERL_VERSION). An exception is raised if VERSION is greater than the version of the current Perl interpreter. Compare with &lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;, which can do a similar check at compile time.</source>
          <target state="translated">VERSION puede ser un argumento num&amp;eacute;rico como 5.006, que se comparar&amp;aacute; con &lt;code&gt;$]&lt;/code&gt; , o un literal de la forma v5.6.1, que se comparar&amp;aacute; con &lt;code&gt;$^V&lt;/code&gt; (tambi&amp;eacute;n conocido como $ PERL_VERSION). Se genera una excepci&amp;oacute;n si VERSION es mayor que la versi&amp;oacute;n del int&amp;eacute;rprete de Perl actual. Compare con el &lt;a href=&quot;use&quot;&gt;uso&lt;/a&gt; , que puede realizar una comprobaci&amp;oacute;n similar en tiempo de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8aab271152b932f50d15f749cb2ad3f6aa388e98" translate="yes" xml:space="preserve">
          <source>VERSION: version of your module</source>
          <target state="translated">VERSIÓN:versión de su módulo</target>
        </trans-unit>
        <trans-unit id="439c8f3808541b8d38659912158a7dbb6e0d7837" translate="yes" xml:space="preserve">
          <source>VERSION_MACRO: which macro represents the version (usually 'VERSION')</source>
          <target state="translated">VERSION_MACRO:qué macro representa la versión (normalmente &quot;VERSION&quot;)</target>
        </trans-unit>
        <trans-unit id="d46d79d5b527245ae65e82f18ddd3ba603c16976" translate="yes" xml:space="preserve">
          <source>VERSION_SYM: like version but safe for use as an RCS revision number</source>
          <target state="translated">VERSION_SYM:como la versión pero segura para ser usada como un número de revisión RCS</target>
        </trans-unit>
        <trans-unit id="a850272b9ab78b2a9e2f07713cef8bc188b3ede9" translate="yes" xml:space="preserve">
          <source>VERY ALPHA AND LIKELY TO CHANGE</source>
          <target state="translated">MUY ALFA Y ES PROBABLE QUE CAMBIE</target>
        </trans-unit>
        <trans-unit id="cce163acefa51c5f80357419607cd2acfc9bcda6" translate="yes" xml:space="preserve">
          <source>VIEW.EXE</source>
          <target state="translated">VIEW.EXE</target>
        </trans-unit>
        <trans-unit id="8e5207fffbfb609ac37a389e363f0db0120b9dae" translate="yes" xml:space="preserve">
          <source>VMS</source>
          <target state="translated">VMS</target>
        </trans-unit>
        <trans-unit id="6ad64d23074ae7d322786e62e572397b29888496" translate="yes" xml:space="preserve">
          <source>VMS Software Inc. web site, &lt;a href=&quot;http://www.vmssoftware.com&quot;&gt;http://www.vmssoftware.com&lt;/a&gt;</source>
          <target state="translated">Sitio web de VMS Software Inc., &lt;a href=&quot;http://www.vmssoftware.com&quot;&gt;http://www.vmssoftware.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2719ba4075d542c93bfa0cdfa52b9abcdd8bf1e2" translate="yes" xml:space="preserve">
          <source>VMS file specification syntax is case-tolerant.</source>
          <target state="translated">La sintaxis de la especificación del archivo VMS es tolerante a los casos.</target>
        </trans-unit>
        <trans-unit id="731e9eea656f3a7b49847d98fa31bc8bf39060b9" translate="yes" xml:space="preserve">
          <source>VMS has $(MMSQUALIFIERS) which is a listing of all the original command line options. This is used in every invocation of make in the VMS Makefile so PASTHRU should not be necessary. Using PASTHRU tends to blow commands past the 256 character limit.</source>
          <target state="translated">El VMS tiene $(MMSQUALIFIERS)que es una lista de todas las opciones originales de la línea de comando.Esto se usa en cada invocación de make en el Makefile del VMS,así que PASTHRU no debería ser necesario.El uso de PASTHRU tiende a hacer que los comandos sobrepasen el límite de 256 caracteres.</target>
        </trans-unit>
        <trans-unit id="26ff54e8c5dec349cf161af5221feaf07190cd81" translate="yes" xml:space="preserve">
          <source>VMS implementation</source>
          <target state="translated">Implementación del VMS</target>
        </trans-unit>
        <trans-unit id="044140c726f05d1f569402b05b60683ee5f27ac8" translate="yes" xml:space="preserve">
          <source>VMS is VMS.</source>
          <target state="translated">VMS es VMS.</target>
        </trans-unit>
        <trans-unit id="19cc64067b9d9a483d87606a5fc200285da5a247" translate="yes" xml:space="preserve">
          <source>VMS support for this process in the current release of Perl is sufficient to handle most extensions. (See the MakeMaker documentation for more details on installation options for extensions.)</source>
          <target state="translated">El soporte del VMS para este proceso en la actual versión de Perl es suficiente para manejar la mayoría de las extensiones.(Consulte la documentación de MakeMaker para obtener más detalles sobre las opciones de instalación de las extensiones).</target>
        </trans-unit>
        <trans-unit id="a0b48a2078e8546f59c353d4437730af0e465606" translate="yes" xml:space="preserve">
          <source>VMS systems have a permissions structure that cannot be completely represented in a stat buffer, and unlike on other systems the builtin filetest operators respect this. The &lt;code&gt;File::stat&lt;/code&gt; overloads, however, do not, since the information required is not available.</source>
          <target state="translated">Los sistemas VMS tienen una estructura de permisos que no se puede representar completamente en un b&amp;uacute;fer de estad&amp;iacute;sticas y, a diferencia de otros sistemas, los operadores de prueba de archivos integrados respetan esto. Los &lt;code&gt;File::stat&lt;/code&gt; sobrecargas, sin embargo, no lo hacen, ya que la informaci&amp;oacute;n requerida no est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="d55cb5dcb20d55a8b83dc657590161b870f2b37b" translate="yes" xml:space="preserve">
          <source>VMS wants a dot in every file so we can't have one called 'pm_to_blib', it becomes 'pm_to_blib.' and MMS/K isn't smart enough to know that when you have a target called 'pm_to_blib' it should look for 'pm_to_blib.'.</source>
          <target state="translated">VMS quiere un punto en cada archivo,así que no podemos tener uno llamado &quot;pm_to_blib&quot;,se convierte en &quot;pm_to_blib&quot;.y MMS/K no es lo suficientemente inteligente para saber que cuando tienes un objetivo llamado &quot;pm_to_blib&quot; debe buscar &quot;pm_to_blib&quot;.</target>
        </trans-unit>
        <trans-unit id="f2c0fca2c674b5e61f569c9a2276cbaa83043ca7" translate="yes" xml:space="preserve">
          <source>VMSish defaults for some values.</source>
          <target state="translated">El VMSish tiene algunos valores por defecto.</target>
        </trans-unit>
        <trans-unit id="b34e6b4bc196605f4ec9f36bd956bf4d5349e341" translate="yes" xml:space="preserve">
          <source>VOS</source>
          <target state="translated">VOS</target>
        </trans-unit>
        <trans-unit id="3ed32c224bfdeaef83075fa116b0ec438527a823" translate="yes" xml:space="preserve">
          <source>VOS Open-Source Software on the web at &lt;a href=&quot;http://ftp.stratus.com/pub/vos/vos.html&quot;&gt;http://ftp.stratus.com/pub/vos/vos.html&lt;/a&gt;</source>
          <target state="translated">Software de c&amp;oacute;digo abierto VOS en la web en &lt;a href=&quot;http://ftp.stratus.com/pub/vos/vos.html&quot;&gt;http://ftp.stratus.com/pub/vos/vos.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="957b3df553f7dff11b930fd1fbc2f8551388c83f" translate="yes" xml:space="preserve">
          <source>VOS perl can emulate Unix filenames with &lt;code&gt;/&lt;/code&gt; as path separator. The native pathname characters greater-than, less-than, number-sign, and percent-sign are always accepted.</source>
          <target state="translated">VOS perl puede emular nombres de archivo Unix con &lt;code&gt;/&lt;/code&gt; como separador de ruta. Los caracteres nativos de la ruta de acceso mayor que, menor que, signo de n&amp;uacute;mero y signo de porcentaje siempre se aceptan.</target>
        </trans-unit>
        <trans-unit id="228203bd56ca8f33c2e2cf1d51934741f92afc9c" translate="yes" xml:space="preserve">
          <source>VOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">VOS subclase específica de ExtUtils::MM_Unix</target>
        </trans-unit>
        <trans-unit id="0565b8691c25d546ce54285d2b39e0a691ab1159" translate="yes" xml:space="preserve">
          <source>Valgrind also provides a cachegrind tool, invoked on perl as:</source>
          <target state="translated">Valgrind también proporciona una herramienta de cachegrind,invocada en perl as:</target>
        </trans-unit>
        <trans-unit id="c78c948aba2c03abbf33d21db8439afd4716f2fd" translate="yes" xml:space="preserve">
          <source>Valid $types are &quot;MacOS&quot;, &quot;VMS&quot;, &quot;AmigaOS&quot;, &quot;OS2&quot;, &quot;RISCOS&quot;, &quot;MSWin32&quot;, &quot;DOS&quot; (also &quot;MSDOS&quot; for backwards bug compatibility), &quot;Epoc&quot; and &quot;Unix&quot; (all case-insensitive). If an unrecognized $type is given &quot;Unix&quot; will be assumed.</source>
          <target state="translated">Los tipos de dólares válidos son &quot;MacOS&quot;,&quot;VMS&quot;,&quot;AmigaOS&quot;,&quot;OS2&quot;,&quot;RISCOS&quot;,&quot;MSWin32&quot;,&quot;DOS&quot; (también &quot;MSDOS&quot; para la compatibilidad con los bichos anteriores),&quot;Epoc&quot; y &quot;Unix&quot; (todos insensibles a las mayúsculas y minúsculas).Si se da un tipo $ no reconocido,se asumirá &quot;Unix&quot;.</target>
        </trans-unit>
        <trans-unit id="4f1f0874166d8489998a2dabaec65b65aacdc83c" translate="yes" xml:space="preserve">
          <source>Valid flags are R_CURSOR, R_IAFTER, R_IBEFORE, R_NOOVERWRITE and R_SETCURSOR.</source>
          <target state="translated">Las banderas válidas son R_CURSOR,R_IAFTER,R_IBEFORE,R_NOOVERWRITE y R_SETCURSOR.</target>
        </trans-unit>
        <trans-unit id="372003ef32f4fb85add82bd740d0d6f53c484da5" translate="yes" xml:space="preserve">
          <source>Valid values are 0-9 and &lt;code&gt;LZMA_PRESET_DEFAULT&lt;/code&gt; .</source>
          <target state="translated">Los valores v&amp;aacute;lidos son 0-9 y &lt;code&gt;LZMA_PRESET_DEFAULT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4fc9756075f953dec67702b67d732830de319ae" translate="yes" xml:space="preserve">
          <source>Valid values are from 1 to 9, where 9 is best compression.</source>
          <target state="translated">Los valores válidos son de 1 a 9,donde 9 es la mejor compresión.</target>
        </trans-unit>
        <trans-unit id="61c0f0c254e06b47f44e05f0b16b8e15856c3b3c" translate="yes" xml:space="preserve">
          <source>Valid values for the file type are the following constants defined by Archive::Tar::Constant:</source>
          <target state="translated">Los valores válidos para el tipo de archivo son las siguientes constantes definidas por Archivo::Tar::Constante:</target>
        </trans-unit>
        <trans-unit id="e2d14a7d576fe1f87f5d9e8e9cd3b19b9f3883ab" translate="yes" xml:space="preserve">
          <source>Valid values range from 0 to 250, where 0 means use the default value 30.</source>
          <target state="translated">Los valores válidos van de 0 a 250,donde 0 significa usar el valor predeterminado 30.</target>
        </trans-unit>
        <trans-unit id="0c5fff5f0da802e753b92748a90cbb8fb80c8fcd" translate="yes" xml:space="preserve">
          <source>Validate CPAN distribution metadata structures</source>
          <target state="translated">Validar las estructuras de metadatos de distribución del CPAN</target>
        </trans-unit>
        <trans-unit id="42ca1a4cda43fbba8ac585879a08c0309c1d20bf" translate="yes" xml:space="preserve">
          <source>Validate that a given string can be parsed as a version object, but doesn't actually perform the parsing. Can use either strict or lax validation rules. Can optionally set a number of hint variables to save the parsing code some time when tokenizing.</source>
          <target state="translated">Validar que una cadena dada puede ser analizada como un objeto de versión,pero no realiza el análisis.Puede usar reglas de validación estrictas o laxas.Opcionalmente,puede establecer un número de variables de sugerencia para guardar el código de análisis en algún momento del análisis.</target>
        </trans-unit>
        <trans-unit id="02a3f32fae979c719788dc5214614a1ca3e7e4ee" translate="yes" xml:space="preserve">
          <source>Validate the arguments given by the user based on strings, regexes, lists or even subroutines</source>
          <target state="translated">Validar los argumentos dados por el usuario basados en cadenas,regexes,listas o incluso subrutinas</target>
        </trans-unit>
        <trans-unit id="df34a04c181ba88b10ee206f3171d24fb01034c4" translate="yes" xml:space="preserve">
          <source>Validates that the SV contains valid internal structure for a version object. It may be passed either the version object (RV) or the hash itself (HV). If the structure is valid, it returns the HV. If the structure is invalid, it returns NULL.</source>
          <target state="translated">Valida que el SV contiene una estructura interna válida para un objeto de la versión.Se puede pasar tanto el objeto de la versión (RV)como el propio hash (HV).Si la estructura es válida,devuelve el HV.Si la estructura es inválida,devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="ff4094183301726c60c811c9d974ce575c34af6b" translate="yes" xml:space="preserve">
          <source>Validation Tests</source>
          <target state="translated">Pruebas de validación</target>
        </trans-unit>
        <trans-unit id="fa414ab19e33bf9bd3aaeda3e54cacdb51c904fe" translate="yes" xml:space="preserve">
          <source>Value must be greater than zero. Pass an undef value to disable it:</source>
          <target state="translated">El valor debe ser mayor que cero.Pasa un valor indefinido para desactivarlo:</target>
        </trans-unit>
        <trans-unit id="5329eac11375c274bf2934a43944e0d3c65118bd" translate="yes" xml:space="preserve">
          <source>Value slices of arrays and hashes may also be taken with postfix dereferencing notation, with the following equivalencies:</source>
          <target state="translated">Los trozos de valor de las matrices y hashes también pueden tomarse con la notación de desreferenciación postfija,con las siguientes equivalencias:</target>
        </trans-unit>
        <trans-unit id="9d49e40c3d7ac176f056540076e808cf6346a547" translate="yes" xml:space="preserve">
          <source>Values are usually referred to by name, or through a named reference. The first character of the name tells you to what sort of data structure it refers. The rest of the name tells you the particular value to which it refers. Usually this name is a single</source>
          <target state="translated">Los valores se suelen referir por nombre,o a través de una referencia nominativa.El primer carácter del nombre le dice a qué tipo de estructura de datos se refiere.El resto del nombre le dice el valor particular al que se refiere.Normalmente este nombre es un</target>
        </trans-unit>
        <trans-unit id="b95834354d188d1c446139257f83c336e08b30f1" translate="yes" xml:space="preserve">
          <source>Values in this array are magical in numeric context: they compare equal to zero only if the line is not breakable.</source>
          <target state="translated">Los valores de esta matriz son mágicos en el contexto numérico:se comparan igual a cero sólo si la línea no es rompible.</target>
        </trans-unit>
        <trans-unit id="f6e707c7542fd8d8b012efb4bcba22c20e79cddd" translate="yes" xml:space="preserve">
          <source>Values must be either strings with possible glob-style matching, or arrayrefs of strings or hashrefs which follow this pattern recursively.</source>
          <target state="translated">Los valores deben ser o bien cuerdas con posible coincidencia de estilo global,o bien arrayrefs de cuerdas o hashrefs que sigan este patrón de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="9d7f43d25cf7a3a7519ab8b3625879499f1cffcc" translate="yes" xml:space="preserve">
          <source>Values of %meta_add will overwrite any existing metadata in those keys. %meta_merge will be merged with them.</source>
          <target state="translated">Los valores de %meta_add sobrescribirán cualquier metadato existente en esas claves.%meta_merge se fusionará con ellos.</target>
        </trans-unit>
        <trans-unit id="a7c124848c793b84e7134c4f5b9435a446fc14e9" translate="yes" xml:space="preserve">
          <source>Values stored in config.sh as 'undef' are returned as undefined values. The perl &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; function can be used to check if a named variable exists.</source>
          <target state="translated">Los valores almacenados en config.sh como 'undef' se devuelven como valores indefinidos. La funci&amp;oacute;n de perl &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; se puede utilizar para comprobar si existe una variable con nombre.</target>
        </trans-unit>
        <trans-unit id="9adc561121b10d3163cfe0f3b6e1049a68105bd5" translate="yes" xml:space="preserve">
          <source>Variable names</source>
          <target state="translated">Nombres de variables</target>
        </trans-unit>
        <trans-unit id="5b24debec3e800c2a01f6fe873b50e5c2cfac784" translate="yes" xml:space="preserve">
          <source>Variable names in Perl can have several formats. Usually, they must begin with a letter or underscore, in which case they can be arbitrarily long (up to an internal limit of 251 characters) and may contain letters, digits, underscores, or the special sequence &lt;code&gt;::&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;. In this case, the part before the last &lt;code&gt;::&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt; is taken to be a</source>
          <target state="translated">Los nombres de variables en Perl pueden tener varios formatos. Por lo general, deben comenzar con una letra o un gui&amp;oacute;n bajo, en cuyo caso pueden ser arbitrariamente largos (hasta un l&amp;iacute;mite interno de 251 caracteres) y pueden contener letras, d&amp;iacute;gitos, guiones bajos o la secuencia especial &lt;code&gt;::&lt;/code&gt; o &lt;code&gt;'&lt;/code&gt; . En este caso, la parte anterior al &amp;uacute;ltimo &lt;code&gt;::&lt;/code&gt; o &lt;code&gt;'&lt;/code&gt; se toma como un</target>
        </trans-unit>
        <trans-unit id="41f1e305cd399af1bab308129c47ec5731d3275e" translate="yes" xml:space="preserve">
          <source>Variable scoping</source>
          <target state="translated">Alcance variable</target>
        </trans-unit>
        <trans-unit id="ef32d1f98150e537dbad0f8aeb79c36da9b27e19" translate="yes" xml:space="preserve">
          <source>Variable suicide is when you (temporarily or permanently) lose the value of a variable. It is caused by scoping through my() and local() interacting with either closures or aliased foreach() iterator variables and subroutine arguments. It used to be easy to inadvertently lose a variable's value this way, but now it's much harder. Take this code:</source>
          <target state="translated">El suicidio variable es cuando se pierde (temporal o permanentemente)el valor de una variable.Es causado por el alcance a través de mi()y local()interactuando con las variables iteradoras y los argumentos de subrutinas de my()y local()ya sea con cierres o alias foreach().Solía ser fácil perder inadvertidamente el valor de una variable de esta manera,pero ahora es mucho más difícil.Toma este código:</target>
        </trans-unit>
        <trans-unit id="250f3f77348f1daf074babbf51813ae9c5cec2e2" translate="yes" xml:space="preserve">
          <source>Variable which is setup by &lt;code&gt;xsubpp&lt;/code&gt; to designate the object in a C++ XSUB. This is always the proper type for the C++ object. See &lt;code&gt;CLASS&lt;/code&gt; and &lt;a href=&quot;perlxs#Using-XS-With-C%2b%2b&quot;&gt;Using XS With C++ in perlxs&lt;/a&gt;.</source>
          <target state="translated">Variable configurada por &lt;code&gt;xsubpp&lt;/code&gt; para designar el objeto en un C ++ XSUB. Este es siempre el tipo adecuado para el objeto C ++. Consulte &lt;code&gt;CLASS&lt;/code&gt; y &lt;a href=&quot;perlxs#Using-XS-With-C%2b%2b&quot;&gt;Uso de XS con C ++ en perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96f93b135985c0d3733c8f2cb9adad25487bb3de" translate="yes" xml:space="preserve">
          <source>Variable which is setup by &lt;code&gt;xsubpp&lt;/code&gt; to hold the return value for an XSUB. This is always the proper type for the XSUB. See &lt;a href=&quot;perlxs#The-RETVAL-Variable&quot;&gt;The RETVAL Variable in perlxs&lt;/a&gt;.</source>
          <target state="translated">Variable configurada por &lt;code&gt;xsubpp&lt;/code&gt; para contener el valor de retorno de un XSUB. Este es siempre el tipo adecuado para XSUB. Vea &lt;a href=&quot;perlxs#The-RETVAL-Variable&quot;&gt;La variable RETVAL en perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca0fab0f8678649996d70b3f1641bab2dc619d79" translate="yes" xml:space="preserve">
          <source>Variable which is setup by &lt;code&gt;xsubpp&lt;/code&gt; to indicate the class name for a C++ XS constructor. This is always a &lt;code&gt;char*&lt;/code&gt; . See &lt;code&gt;THIS&lt;/code&gt; .</source>
          <target state="translated">Variable configurada por &lt;code&gt;xsubpp&lt;/code&gt; para indicar el nombre de clase para un constructor C ++ XS. Este es siempre un &lt;code&gt;char*&lt;/code&gt; . Vea &lt;code&gt;THIS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="047db5765fb37d513256abe7c3bb231a7730d231" translate="yes" xml:space="preserve">
          <source>Variable which is setup by &lt;code&gt;xsubpp&lt;/code&gt; to indicate the number of items on the stack. See &lt;a href=&quot;perlxs#Variable-length-Parameter-Lists&quot;&gt;Variable-length Parameter Lists in perlxs&lt;/a&gt;.</source>
          <target state="translated">Variable configurada por &lt;code&gt;xsubpp&lt;/code&gt; para indicar el n&amp;uacute;mero de elementos en la pila. Consulte &lt;a href=&quot;perlxs#Variable-length-Parameter-Lists&quot;&gt;Listas de par&amp;aacute;metros de longitud variable en perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9f90eb2fc40e8b2bdb8fd7693973daf5289f55d" translate="yes" xml:space="preserve">
          <source>Variable which is setup by &lt;code&gt;xsubpp&lt;/code&gt; to indicate the stack base offset, used by the &lt;code&gt;ST&lt;/code&gt; , &lt;code&gt;XSprePUSH&lt;/code&gt; and &lt;code&gt;XSRETURN&lt;/code&gt; macros. The &lt;code&gt;dMARK&lt;/code&gt; macro must be called prior to setup the &lt;code&gt;MARK&lt;/code&gt; variable.</source>
          <target state="translated">Variable configurada por &lt;code&gt;xsubpp&lt;/code&gt; para indicar el desplazamiento de la base de la pila, utilizada por las macros &lt;code&gt;ST&lt;/code&gt; , &lt;code&gt;XSprePUSH&lt;/code&gt; y &lt;code&gt;XSRETURN&lt;/code&gt; . La macro &lt;code&gt;dMARK&lt;/code&gt; debe llamarse antes de configurar la variable &lt;code&gt;MARK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71ae1592070f983485afeb1f94bb9f14e5751687" translate="yes" xml:space="preserve">
          <source>Variable which is setup by &lt;code&gt;xsubpp&lt;/code&gt; to indicate which of an XSUB's aliases was used to invoke it. See &lt;a href=&quot;perlxs#The-ALIAS%3a-Keyword&quot;&gt;The ALIAS: Keyword in perlxs&lt;/a&gt;.</source>
          <target state="translated">Variable configurada por &lt;code&gt;xsubpp&lt;/code&gt; para indicar cu&amp;aacute;l de los alias de un XSUB se us&amp;oacute; para invocarlo. Vea &lt;a href=&quot;perlxs#The-ALIAS%3a-Keyword&quot;&gt;El ALIAS: Palabra clave en perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="262d6897e3f4e2ab273d197b04708a28aa8bbe0f" translate="yes" xml:space="preserve">
          <source>Variable-length Parameter Lists</source>
          <target state="translated">Listas de parámetros de longitud variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="ab9c1a29fb6d3de8ef612773205828e2a92ce7d5" translate="yes" xml:space="preserve">
          <source>Variables begin with &quot;$&quot;, &quot;@&quot; or &quot;%&quot; in Perl.</source>
          <target state="translated">Las variables comienzan con &quot;$&quot;,&quot;@&quot; o &quot;%&quot; en Perl.</target>
        </trans-unit>
        <trans-unit id="5694c664526ad480f20d39864f7f31a2f29da553" translate="yes" xml:space="preserve">
          <source>Variables beginning with underscore used to be forced into package main, but we decided it was more useful for package writers to be able to use leading underscore to indicate private variables and method names. However, variables and functions named with a single &lt;code&gt;_&lt;/code&gt; , such as $_ and &lt;code&gt;sub _&lt;/code&gt; , are still forced into the package &lt;code&gt;main&lt;/code&gt; . See also &lt;a href=&quot;perlvar#The-Syntax-of-Variable-Names&quot;&gt;The Syntax of Variable Names in perlvar&lt;/a&gt;.</source>
          <target state="translated">Las variables que comienzan con un gui&amp;oacute;n bajo sol&amp;iacute;an estar forzadas en el paquete principal, pero decidimos que era m&amp;aacute;s &amp;uacute;til para los escritores de paquetes poder usar un gui&amp;oacute;n bajo al principio para indicar variables privadas y nombres de m&amp;eacute;todos. Sin embargo, las variables y funciones nombradas con un solo &lt;code&gt;_&lt;/code&gt; , como $ _ y &lt;code&gt;sub _&lt;/code&gt; , todav&amp;iacute;a est&amp;aacute;n forzadas en el paquete &lt;code&gt;main&lt;/code&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;perlvar#The-Syntax-of-Variable-Names&quot;&gt;La sintaxis de los nombres de variables en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d9f29c9ec062e45676786fba6e4ad3c40d0d306" translate="yes" xml:space="preserve">
          <source>Variables can also be marked as shared at compile time by using the &lt;code&gt;:shared&lt;/code&gt; attribute:</source>
          <target state="translated">Las variables tambi&amp;eacute;n se pueden marcar como compartidas en tiempo de compilaci&amp;oacute;n mediante el atributo: &lt;code&gt;:shared&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0033a0c4e8e90fcf27d95fe18f7eaf535322599e" translate="yes" xml:space="preserve">
          <source>Variables created by &lt;code&gt;xsubpp&lt;/code&gt; and &lt;code&gt;xsubpp&lt;/code&gt; internal functions</source>
          <target state="translated">Variables creadas por las funciones internas de &lt;code&gt;xsubpp&lt;/code&gt; y &lt;code&gt;xsubpp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2071c5e3d5c20b9e635746474f5973d9034dd205" translate="yes" xml:space="preserve">
          <source>Variables created by xsubpp and xsubpp internal functions</source>
          <target state="translated">Las variables creadas por las funciones internas xsubpp y xsubpp</target>
        </trans-unit>
        <trans-unit id="ca450e789c925910d0144b598324f623b886a902" translate="yes" xml:space="preserve">
          <source>Variables declared with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; are not part of any package and are therefore never fully qualified with the package name. In particular, you're not allowed to try to make a package variable (or other global) lexical:</source>
          <target state="translated">Las variables declaradas con &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; no forman parte de ning&amp;uacute;n paquete y, por lo tanto, nunca est&amp;aacute;n completamente calificadas con el nombre del paquete. En particular, no se le permite intentar convertir una variable de paquete (u otra global) l&amp;eacute;xica:</target>
        </trans-unit>
        <trans-unit id="56cf64dcca72d1ecb702e55ecfffca62a98a5220" translate="yes" xml:space="preserve">
          <source>Variables declared with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; only affect code</source>
          <target state="translated">Variables declaradas con &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; &amp;uacute;nico c&amp;oacute;digo de efecto</target>
        </trans-unit>
        <trans-unit id="8ca248e3be58f6491cbca3baeca1c24e3a843c96" translate="yes" xml:space="preserve">
          <source>Variables related to filehandles</source>
          <target state="translated">Variables relacionadas con el manejo de archivos</target>
        </trans-unit>
        <trans-unit id="558d3788e0608ddd59e54bc45d3414f4ed7b1e43" translate="yes" xml:space="preserve">
          <source>Variables related to formats</source>
          <target state="translated">Variables relacionadas con los formatos</target>
        </trans-unit>
        <trans-unit id="f14620676ede46dcf2f3ea6fa3c3858d660e5480" translate="yes" xml:space="preserve">
          <source>Variables related to regular expressions</source>
          <target state="translated">Variables relacionadas con las expresiones regulares</target>
        </trans-unit>
        <trans-unit id="68141fa59316c5490c4a375661890da2077e4814" translate="yes" xml:space="preserve">
          <source>Variables related to the interpreter state</source>
          <target state="translated">Variables relacionadas con el estado del intérprete</target>
        </trans-unit>
        <trans-unit id="9c673dd907946ee700d211969e18c41800f161cd" translate="yes" xml:space="preserve">
          <source>Variables that depend on the currently selected filehandle may be set by calling an appropriate object method on the &lt;code&gt;IO::Handle&lt;/code&gt; object, although this is less efficient than using the regular built-in variables. (Summary lines below for this contain the word HANDLE.) First you must say</source>
          <target state="translated">Las variables que dependen del identificador de archivo seleccionado actualmente se pueden establecer llamando a un m&amp;eacute;todo de objeto apropiado en el objeto &lt;code&gt;IO::Handle&lt;/code&gt; , aunque esto es menos eficiente que usar las variables integradas normales. (Las l&amp;iacute;neas de resumen a continuaci&amp;oacute;n para esto contienen la palabra MANIJA). Primero debe decir</target>
        </trans-unit>
        <trans-unit id="e157f974af404a93fff305d4d8e7f7a16c700432" translate="yes" xml:space="preserve">
          <source>Variant &lt;code&gt;isFOO_A&lt;/code&gt; (e.g., &lt;code&gt;isALPHA_A()&lt;/code&gt; ) is identical to the base function with no suffix &lt;code&gt;&quot;_A&quot;&lt;/code&gt; .</source>
          <target state="translated">La variante &lt;code&gt;isFOO_A&lt;/code&gt; (por ejemplo, &lt;code&gt;isALPHA_A()&lt;/code&gt; ) es id&amp;eacute;ntica a la funci&amp;oacute;n base sin el sufijo &lt;code&gt;&quot;_A&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee9c1e7b92e7d90953ad4f56c51f36c66e7040f2" translate="yes" xml:space="preserve">
          <source>Variant &lt;code&gt;isFOO_L1&lt;/code&gt; imposes the Latin-1 (or EBCDIC equivlalent) character set onto the platform. That is, the code points that are ASCII are unaffected, since ASCII is a subset of Latin-1. But the non-ASCII code points are treated as if they are Latin-1 characters. For example, &lt;code&gt;isWORDCHAR_L1()&lt;/code&gt; will return true when called with the code point 0xDF, which is a word character in both ASCII and EBCDIC (though it represents different characters in each).</source>
          <target state="translated">La variante &lt;code&gt;isFOO_L1&lt;/code&gt; impone el juego de caracteres Latin-1 (o equivalente a EBCDIC) en la plataforma. Es decir, los puntos de c&amp;oacute;digo que son ASCII no se ven afectados, ya que ASCII es un subconjunto de Latin-1. Pero los puntos de c&amp;oacute;digo no ASCII se tratan como si fueran caracteres Latin-1. Por ejemplo, &lt;code&gt;isWORDCHAR_L1()&lt;/code&gt; devolver&amp;aacute; verdadero cuando se llame con el punto de c&amp;oacute;digo 0xDF, que es un car&amp;aacute;cter de palabra en ASCII y EBCDIC (aunque representa diferentes caracteres en cada uno).</target>
        </trans-unit>
        <trans-unit id="2ba58c7880e89de07e18f6663de6bf67a770fa3f" translate="yes" xml:space="preserve">
          <source>Variant &lt;code&gt;isFOO_LC&lt;/code&gt; is like the &lt;code&gt;isFOO_A&lt;/code&gt; and &lt;code&gt;isFOO_L1&lt;/code&gt; variants, but the result is based on the current locale, which is what &lt;code&gt;LC&lt;/code&gt; in the name stands for. If Perl can determine that the current locale is a UTF-8 locale, it uses the published Unicode rules; otherwise, it uses the C library function that gives the named classification. For example, &lt;code&gt;isDIGIT_LC()&lt;/code&gt; when not in a UTF-8 locale returns the result of calling &lt;code&gt;isdigit()&lt;/code&gt; . FALSE is always returned if the input won't fit into an octet. On some platforms where the C library function is known to be defective, Perl changes its result to follow the POSIX standard's rules.</source>
          <target state="translated">La variante &lt;code&gt;isFOO_LC&lt;/code&gt; es como las variantes &lt;code&gt;isFOO_A&lt;/code&gt; e &lt;code&gt;isFOO_L1&lt;/code&gt; , pero el resultado se basa en la configuraci&amp;oacute;n regional actual, que es lo que significa &lt;code&gt;LC&lt;/code&gt; en el nombre. Si Perl puede determinar que la configuraci&amp;oacute;n regional actual es una configuraci&amp;oacute;n regional UTF-8, utiliza las reglas Unicode publicadas; de lo contrario, utiliza la funci&amp;oacute;n de la biblioteca C que proporciona la clasificaci&amp;oacute;n nombrada. Por ejemplo, &lt;code&gt;isDIGIT_LC()&lt;/code&gt; cuando no est&amp;aacute; en una configuraci&amp;oacute;n regional UTF-8 devuelve el resultado de llamar a &lt;code&gt;isdigit()&lt;/code&gt; . Siempre se devuelve FALSE si la entrada no cabe en un octeto. En algunas plataformas donde se sabe que la funci&amp;oacute;n de la biblioteca C es defectuosa, Perl cambia su resultado para seguir las reglas del est&amp;aacute;ndar POSIX.</target>
        </trans-unit>
        <trans-unit id="0cd770db8027add93d163f3958fbe5e0a03fc884" translate="yes" xml:space="preserve">
          <source>Variant &lt;code&gt;isFOO_LC_utf8&lt;/code&gt; is like &lt;code&gt;isFOO_LC_uvchr&lt;/code&gt; , but the input is a pointer to a (known to be well-formed) UTF-8 encoded string (&lt;code&gt;U8*&lt;/code&gt; or &lt;code&gt;char*&lt;/code&gt; ). The classification of just the first (possibly multi-byte) character in the string is tested.</source>
          <target state="translated">La variante &lt;code&gt;isFOO_LC_utf8&lt;/code&gt; es como &lt;code&gt;isFOO_LC_uvchr&lt;/code&gt; , pero la entrada es un puntero a una cadena codificada en UTF-8 (que se sabe que est&amp;aacute; bien formada) ( &lt;code&gt;U8*&lt;/code&gt; o &lt;code&gt;char*&lt;/code&gt; ). Se prueba la clasificaci&amp;oacute;n de solo el primer car&amp;aacute;cter (posiblemente de varios bytes) de la cadena.</target>
        </trans-unit>
        <trans-unit id="2e2baae040164a854cd256e8bb0078a6be7e0556" translate="yes" xml:space="preserve">
          <source>Variant &lt;code&gt;isFOO_LC_uvchr&lt;/code&gt; is like &lt;code&gt;isFOO_LC&lt;/code&gt; , but is defined on any UV. It returns the same as &lt;code&gt;isFOO_LC&lt;/code&gt; for input code points less than 256, and returns the hard-coded, not-affected-by-locale, Unicode results for larger ones.</source>
          <target state="translated">La variante &lt;code&gt;isFOO_LC_uvchr&lt;/code&gt; es como &lt;code&gt;isFOO_LC&lt;/code&gt; , pero se define en cualquier UV. Devuelve lo mismo que &lt;code&gt;isFOO_LC&lt;/code&gt; para los puntos de c&amp;oacute;digo de entrada inferiores a 256, y devuelve los resultados Unicode codificados de forma r&amp;iacute;gida, no afectados por la configuraci&amp;oacute;n regional, para los m&amp;aacute;s grandes.</target>
        </trans-unit>
        <trans-unit id="2ad298897b2ed0cfe491083076d3380e15f29221" translate="yes" xml:space="preserve">
          <source>Variant &lt;code&gt;isFOO_uni&lt;/code&gt; is like the &lt;code&gt;isFOO_L1&lt;/code&gt; variant, but accepts any UV code point as input. If the code point is larger than 255, Unicode rules are used to determine if it is in the character class. For example, &lt;code&gt;isWORDCHAR_uni(0x100)&lt;/code&gt; returns TRUE, since 0x100 is LATIN CAPITAL LETTER A WITH MACRON in Unicode, and is a word character.</source>
          <target state="translated">La variante &lt;code&gt;isFOO_uni&lt;/code&gt; es como la variante &lt;code&gt;isFOO_L1&lt;/code&gt; , pero acepta cualquier punto de c&amp;oacute;digo UV como entrada. Si el punto de c&amp;oacute;digo es mayor que 255, se utilizan reglas Unicode para determinar si est&amp;aacute; en la clase de caracteres. Por ejemplo, &lt;code&gt;isWORDCHAR_uni(0x100)&lt;/code&gt; devuelve VERDADERO, ya que 0x100 es LETRA A MAY&amp;Uacute;SCULA LATINA CON MACRON en Unicode, y es un car&amp;aacute;cter de palabra.</target>
        </trans-unit>
        <trans-unit id="4a2fc63255fac34edd7ea0e57902967c8c3777dd" translate="yes" xml:space="preserve">
          <source>Variant &lt;code&gt;isFOO_utf8&lt;/code&gt; is like &lt;code&gt;isFOO_uni&lt;/code&gt; , but the input is a pointer to a (known to be well-formed) UTF-8 encoded string (&lt;code&gt;U8*&lt;/code&gt; or &lt;code&gt;char*&lt;/code&gt; ). The classification of just the first (possibly multi-byte) character in the string is tested.</source>
          <target state="translated">La variante &lt;code&gt;isFOO_utf8&lt;/code&gt; es como &lt;code&gt;isFOO_uni&lt;/code&gt; , pero la entrada es un puntero a una cadena codificada en UTF-8 (que se sabe que est&amp;aacute; bien formada) ( &lt;code&gt;U8*&lt;/code&gt; o &lt;code&gt;char*&lt;/code&gt; ). Se prueba la clasificaci&amp;oacute;n de solo el primer car&amp;aacute;cter (posiblemente de varios bytes) de la cadena.</target>
        </trans-unit>
        <trans-unit id="786f5e70748cc3ce6d3a4d95eb203e5790a45b20" translate="yes" xml:space="preserve">
          <source>Variant of make you intend to run the generated Makefile with. This parameter lets Makefile.PL know what make quirks to account for when generating the Makefile.</source>
          <target state="translated">Variante de la marca con la que pretendes ejecutar el Makefile generado.Este parámetro permite al Makefile.PL saber qué peculiaridades hay que tener en cuenta al generar el Makefile.</target>
        </trans-unit>
        <trans-unit id="8c77b7455bfd7adea569c5a3c57a2f0f3eeee8c3" translate="yes" xml:space="preserve">
          <source>Various ALLOW flags can be set in &lt;code&gt;flags&lt;/code&gt; to allow (and not warn on) individual types of malformations, such as the sequence being overlong (that is, when there is a shorter sequence that can express the same code point; overlong sequences are expressly forbidden in the UTF-8 standard due to potential security issues). Another malformation example is the first byte of a character not being a legal first byte. See</source>
          <target state="translated">Se pueden configurar varios indicadores ALLOW en &lt;code&gt;flags&lt;/code&gt; para permitir (y no advertir sobre) tipos individuales de malformaciones, como que la secuencia sea demasiado larga (es decir, cuando hay una secuencia m&amp;aacute;s corta que puede expresar el mismo punto de c&amp;oacute;digo; las secuencias demasiado largas est&amp;aacute;n expresamente prohibidas en el est&amp;aacute;ndar UTF-8 debido a posibles problemas de seguridad). Otro ejemplo de malformaci&amp;oacute;n es el primer byte de un car&amp;aacute;cter que no es un primer byte legal. Ver</target>
        </trans-unit>
        <trans-unit id="afddad8d7b065f14bf0be2c971fc90accba56a72" translate="yes" xml:space="preserve">
          <source>Various Unicode Transformation Formats</source>
          <target state="translated">Varios formatos de transformación de Unicode</target>
        </trans-unit>
        <trans-unit id="07521b5f641f36eca327ef3a95aecd1a3cb86300" translate="yes" xml:space="preserve">
          <source>Various flags whose names begin with &lt;code&gt;ANYOF_&lt;/code&gt; are used for special situations. Above Latin1 matches and things not known until run-time are stored in &lt;a href=&quot;#Perl's-pprivate-structure&quot;&gt;Perl's pprivate structure&lt;/a&gt;.</source>
          <target state="translated">Varias banderas cuyos nombres comienzan con &lt;code&gt;ANYOF_&lt;/code&gt; se utilizan para situaciones especiales. Por encima de Latin1, las coincidencias y las cosas no conocidas hasta el tiempo de ejecuci&amp;oacute;n se almacenan en &lt;a href=&quot;#Perl's-pprivate-structure&quot;&gt;la estructura pprivate de Perl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44c78407657471f7c495761722bd853edd5018b1" translate="yes" xml:space="preserve">
          <source>Various people have made helpful suggestions and contributions, in particular:</source>
          <target state="translated">Varias personas han hecho sugerencias y contribuciones útiles,en particular:</target>
        </trans-unit>
        <trans-unit id="e18054f599f969e2a7425c026d09df10072d24d7" translate="yes" xml:space="preserve">
          <source>Various tools exist for analysing C source code &lt;b&gt;statically&lt;/b&gt;, as opposed to &lt;b&gt;dynamically&lt;/b&gt;, that is, without executing the code. It is possible to detect resource leaks, undefined behaviour, type mismatches, portability problems, code paths that would cause illegal memory accesses, and other similar problems by just parsing the C code and looking at the resulting graph, what does it tell about the execution and data flows. As a matter of fact, this is exactly how C compilers know to give warnings about dubious code.</source>
          <target state="translated">Existen varias herramientas para analizar el c&amp;oacute;digo fuente C de &lt;b&gt;forma est&amp;aacute;tica&lt;/b&gt; , en contraposici&amp;oacute;n a &lt;b&gt;din&amp;aacute;micamente&lt;/b&gt; , es decir, sin ejecutar el c&amp;oacute;digo. Es posible detectar fugas de recursos, comportamiento indefinido, desajustes de tipos, problemas de portabilidad, rutas de c&amp;oacute;digo que causar&amp;iacute;an accesos ilegales a la memoria y otros problemas similares simplemente analizando el c&amp;oacute;digo C y mirando el gr&amp;aacute;fico resultante, &amp;iquest;qu&amp;eacute; dice acerca de la ejecuci&amp;oacute;n? y flujos de datos. De hecho, as&amp;iacute; es exactamente como los compiladores de C saben dar advertencias sobre c&amp;oacute;digo dudoso.</target>
        </trans-unit>
        <trans-unit id="73cab00905b3a6637e1ac427d0bd8b9c7ea4bd82" translate="yes" xml:space="preserve">
          <source>Various useful techniques for the redirection of STDOUT and STDERR filehandles are explained in &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; and &lt;a href=&quot;perlfaq8&quot;&gt;perlfaq8&lt;/a&gt;.</source>
          <target state="translated">En perlopentut y perlfaq8 se explican varias t&amp;eacute;cnicas &amp;uacute;tiles para la redirecci&amp;oacute;n de identificadores de archivos &lt;a href=&quot;perlopentut&quot;&gt;STDOUT&lt;/a&gt; y &lt;a href=&quot;perlfaq8&quot;&gt;STDERR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="348afb03d84f05d16f7adbc3eb8e693f676f5018" translate="yes" xml:space="preserve">
          <source>Varying slowly compared to something else. (Unfortunately, everything is relatively stable compared to something else, except for certain elementary particles, and we&amp;rsquo;re not so sure about them.) In computers, where things are supposed to vary rapidly, &amp;ldquo;static&amp;rdquo; has a derogatory connotation, indicating a slightly dysfunctional &lt;b&gt;variable&lt;/b&gt;, &lt;b&gt;subroutine&lt;/b&gt;, or &lt;b&gt;method&lt;/b&gt;. In Perl culture, the word is politely avoided.</source>
          <target state="translated">Variando lentamente en comparaci&amp;oacute;n con otra cosa. (Desafortunadamente, todo es relativamente estable en comparaci&amp;oacute;n con otra cosa, excepto ciertas part&amp;iacute;culas elementales, y no estamos tan seguros de ellas). En las computadoras, donde se supone que las cosas var&amp;iacute;an r&amp;aacute;pidamente, &quot;est&amp;aacute;tico&quot; tiene una connotaci&amp;oacute;n despectiva, lo que indica una &lt;b&gt;variable&lt;/b&gt; , &lt;b&gt;subrutina&lt;/b&gt; o &lt;b&gt;m&amp;eacute;todo&lt;/b&gt; ligeramente disfuncional . En la cultura Perl, la palabra se evita cort&amp;eacute;smente.</target>
        </trans-unit>
        <trans-unit id="85ffef503f476138b4fff0b28711a4307dd0273e" translate="yes" xml:space="preserve">
          <source>Vendor locales are notoriously buggy, and it is difficult for Perl to test its locale-handling code because this interacts with code that Perl has no control over; therefore the locale-handling code in Perl may be buggy as well. (However, the Unicode-supplied locales should be better, and there is a feed back mechanism to correct any problems. See &lt;a href=&quot;#Freely-available-locale-definitions&quot;&gt;Freely available locale definitions&lt;/a&gt;.)</source>
          <target state="translated">Las configuraciones regionales de los proveedores son notoriamente defectuosas y es dif&amp;iacute;cil para Perl probar su c&amp;oacute;digo de manejo de configuraciones regionales porque interact&amp;uacute;a con el c&amp;oacute;digo sobre el que Perl no tiene control; por lo tanto, el c&amp;oacute;digo de manejo de locale en Perl tambi&amp;eacute;n puede tener errores. (Sin embargo, las configuraciones regionales proporcionadas por Unicode deber&amp;iacute;an ser mejores y hay un mecanismo de retroalimentaci&amp;oacute;n para corregir cualquier problema. Consulte &lt;a href=&quot;#Freely-available-locale-definitions&quot;&gt;Definiciones de configuraciones regionales disponibles de forma gratuita&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6d32a0f82e0ef391607d7fd073f792ba0310faa2" translate="yes" xml:space="preserve">
          <source>Verbatim Paragraph</source>
          <target state="translated">Párrafo literal</target>
        </trans-unit>
        <trans-unit id="3c3c8bdee8d70621828a9acf42235be7b9af6f25" translate="yes" xml:space="preserve">
          <source>Verbatim paragraphs are usually used for presenting a codeblock or other text which does not require any special parsing or formatting, and which shouldn't be wrapped.</source>
          <target state="translated">Los párrafos literales suelen utilizarse para presentar un bloque de código u otro texto que no requiere ningún análisis o formato especial,y que no debe ser envuelto.</target>
        </trans-unit>
        <trans-unit id="d2ed762aa9e6f4a70c69d05cecc69ec96c79f712" translate="yes" xml:space="preserve">
          <source>Verbosity level for PERL5LIB changes (none or v)?</source>
          <target state="translated">¿Nivel de verbosidad para los cambios de PERL5LIB (ninguno o v)?</target>
        </trans-unit>
        <trans-unit id="b16f50ef11893ee8a56a924cf21f29d6d3384b2d" translate="yes" xml:space="preserve">
          <source>Verbosity level for loading modules (none or v)?</source>
          <target state="translated">¿Nivel de verbosidad para los módulos de carga (ninguno o v)?</target>
        </trans-unit>
        <trans-unit id="5c786adc4be052262918fbf867ae699f3967bdb1" translate="yes" xml:space="preserve">
          <source>Verifies your POD's correctness</source>
          <target state="translated">Verifica la corrección de su POD</target>
        </trans-unit>
        <trans-unit id="d4e18ac1b3adf04f8a64f79e732d6cb231328446" translate="yes" xml:space="preserve">
          <source>Verify that</source>
          <target state="translated">Verifique que</target>
        </trans-unit>
        <trans-unit id="c6d2ae8d70f95ac35eb4f17f52487e3fbb74bfe8" translate="yes" xml:space="preserve">
          <source>Verify that &lt;code&gt;ADDRESS&lt;/code&gt; is a legitimate mailing address.</source>
          <target state="translated">Verifique que &lt;code&gt;ADDRESS&lt;/code&gt; sea ​​una direcci&amp;oacute;n postal leg&amp;iacute;tima.</target>
        </trans-unit>
        <trans-unit id="aa131b92248ccc3e18a5da63bd932dabad63bce2" translate="yes" xml:space="preserve">
          <source>Verify that the element at index</source>
          <target state="translated">Verifique que el elemento en el índice</target>
        </trans-unit>
        <trans-unit id="994d1b0dafb2a784fe9a62de996298af3c56fa67" translate="yes" xml:space="preserve">
          <source>Version 0.17</source>
          <target state="translated">Versión 0.17</target>
        </trans-unit>
        <trans-unit id="cf9296ff9faf64bcbf7077fc94b20c36180a2b81" translate="yes" xml:space="preserve">
          <source>Version 1.0 metadata specification for META.yml</source>
          <target state="translated">Especificación de metadatos de la versión 1.0 para META.yml</target>
        </trans-unit>
        <trans-unit id="5f58248b430683f1248cf64cbe1e704fe1b1c2aa" translate="yes" xml:space="preserve">
          <source>Version 1.1 metadata specification for META.yml</source>
          <target state="translated">Especificación de metadatos de la versión 1.1 para META.yml</target>
        </trans-unit>
        <trans-unit id="6b502e3047cfe1751d1d1b7edc28b46bfd3a8d92" translate="yes" xml:space="preserve">
          <source>Version 1.2 metadata specification for META.yml</source>
          <target state="translated">Especificación de metadatos de la versión 1.2 para META.yml</target>
        </trans-unit>
        <trans-unit id="c0707932557d9b8e2fa8ebb9e9863bf7fee11d96" translate="yes" xml:space="preserve">
          <source>Version 1.3 metadata specification for META.yml</source>
          <target state="translated">Especificación de metadatos de la versión 1.3 para META.yml</target>
        </trans-unit>
        <trans-unit id="6bb856fd2cb7a8a4749ea08a96d81eed38d2bee4" translate="yes" xml:space="preserve">
          <source>Version 1.3, 14th Apr 1997</source>
          <target state="translated">Versión 1.3,14 de abril de 1997</target>
        </trans-unit>
        <trans-unit id="50cdda2fafe15d6a81c70eb22bbe3a4d4d6f2154" translate="yes" xml:space="preserve">
          <source>Version 1.4 metadata specification for META.yml</source>
          <target state="translated">Especificación de metadatos de la versión 1.4 para META.yml</target>
        </trans-unit>
        <trans-unit id="e595432938de926793decdb5491565f726cb5632" translate="yes" xml:space="preserve">
          <source>Version 1.x of Devel::PPPort was written by Kenneth Albanowski.</source>
          <target state="translated">La versión 1.x de Devel::PPPort fue escrita por Kenneth Albanowski.</target>
        </trans-unit>
        <trans-unit id="a64e96de79863ac878adbe6d99f0ef3004f7ada2" translate="yes" xml:space="preserve">
          <source>Version 1.x, Copyright (C) 1999, Kenneth Albanowski.</source>
          <target state="translated">Versión 1.x,Copyright (C)1999,Kenneth Albanowski.</target>
        </trans-unit>
        <trans-unit id="a5a2dcb962ed837bde5bb2d230fbf541ca8dd67b" translate="yes" xml:space="preserve">
          <source>Version 1.x, Copyright (c) 1997, Graham Barr.</source>
          <target state="translated">Versión 1.x,Copyright (c)1997,Graham Barr.</target>
        </trans-unit>
        <trans-unit id="45647cd5610f6e1c8ad80ff8302e3680ebe69bd4" translate="yes" xml:space="preserve">
          <source>Version 2.07 included 2 functions for modifying the internal data: rename_country and alias_code. Both of these could be used only to modify the internal data for country codes.</source>
          <target state="translated">La versión 2.07 incluía 2 funciones para modificar los datos internos:renombrar_país y alias_código.Ambas podían usarse sólo para modificar los datos internos de los códigos de país.</target>
        </trans-unit>
        <trans-unit id="92a1c91419a81cd1268ac19dce637a320313655e" translate="yes" xml:space="preserve">
          <source>Version 2.158 (March 13 2015)</source>
          <target state="translated">Versión 2.158 (13 de marzo de 2015)</target>
        </trans-unit>
        <trans-unit id="2b76e68914b5b481fce750a4808d6a01e4e0d7a5" translate="yes" xml:space="preserve">
          <source>Version 2.x was ported to the Perl core by Paul Marquess.</source>
          <target state="translated">La versión 2.x fue portada al núcleo de Perl por Paul Marquess.</target>
        </trans-unit>
        <trans-unit id="b4dfa929b5ee3edcabc4bb1ff1f2299b2ba1ffbf" translate="yes" xml:space="preserve">
          <source>Version 2.x, Copyright (C) 2001, Paul Marquess.</source>
          <target state="translated">Versión 2.x,Copyright (C)2001,Paul Marquess.</target>
        </trans-unit>
        <trans-unit id="afb9e5ddc0f066d6e4fe7219b73a7a8e7aeed9fa" translate="yes" xml:space="preserve">
          <source>Version 2.x, Copyright (C) 2007-2013, Marcus Holland-Moritz.</source>
          <target state="translated">Versión 2.x,Copyright (C)2007-2013,Marcus Holland-Moritz.</target>
        </trans-unit>
        <trans-unit id="2b92364fcb707c868641f18b85e8bb1624050d73" translate="yes" xml:space="preserve">
          <source>Version 3.35</source>
          <target state="translated">Versión 3.35</target>
        </trans-unit>
        <trans-unit id="4f0303ef100e7bd0b627ac0ed92f17d79836c82a" translate="yes" xml:space="preserve">
          <source>Version 3.x was ported back to CPAN by Marcus Holland-Moritz.</source>
          <target state="translated">La versión 3.x fue portada de vuelta al CPAN por Marcus Holland-Moritz.</target>
        </trans-unit>
        <trans-unit id="87ba3aa39294d7bd5f976dfda6425a25c0769a48" translate="yes" xml:space="preserve">
          <source>Version 3.x, Copyright (C) 2004-2013, Marcus Holland-Moritz.</source>
          <target state="translated">Versión 3.x,Copyright (C)2004-2013,Marcus Holland-Moritz.</target>
        </trans-unit>
        <trans-unit id="70ac02d65beabeafc66ef77aabf5e475e6710dac" translate="yes" xml:space="preserve">
          <source>Version 8 Regular Expressions</source>
          <target state="translated">Versión 8 Expresiones regulares</target>
        </trans-unit>
        <trans-unit id="5148ac4d9167ac054bd9f1a1a44dfedd508ff1b8" translate="yes" xml:space="preserve">
          <source>Version Strings</source>
          <target state="translated">Versión Cuerdas</target>
        </trans-unit>
        <trans-unit id="68c98714c821df335863c348a8dc241ec68a74da" translate="yes" xml:space="preserve">
          <source>Version caveat</source>
          <target state="translated">Advertencia sobre la versión</target>
        </trans-unit>
        <trans-unit id="01e4cae31c98991a3d53edad9d5a04ca08ed4f3b" translate="yes" xml:space="preserve">
          <source>Version numbering</source>
          <target state="translated">Numeración de la versión</target>
        </trans-unit>
        <trans-unit id="7a4b23d2aee6859898d9d8a68bcc2c3cf6b34466" translate="yes" xml:space="preserve">
          <source>Version numbers can be checked like so:</source>
          <target state="translated">Los números de versión pueden ser comprobados así:</target>
        </trans-unit>
        <trans-unit id="9ea6fb41a1f5c2adb11175166f62cfde32e3e36d" translate="yes" xml:space="preserve">
          <source>Version numbers should indicate at least major and minor releases, and possibly sub-minor releases. A major release is one in which most of the functionality has changed, or in which major new functionality is added. A minor release is one in which a small amount of functionality has been added or changed. Sub-minor version numbers are usually used for changes which do not affect functionality, such as documentation patches.</source>
          <target state="translated">Los números de versión deben indicar al menos las versiones mayores y menores,y posiblemente las versiones sub-menores.Una versión mayor es aquella en la que la mayor parte de la funcionalidad ha cambiado,o en la que se añade una nueva funcionalidad mayor.Una versión menor es aquella en la que se ha añadido o cambiado una pequeña cantidad de funcionalidad.Los números de versión sub-menor se utilizan generalmente para los cambios que no afectan la funcionalidad,como los parches de documentación.</target>
        </trans-unit>
        <trans-unit id="d33038b68a6d275b70080c4ca40f495c404258ac" translate="yes" xml:space="preserve">
          <source>Version object aware cmp. Both operands must already have been converted into version objects.</source>
          <target state="translated">Versión objeto consciente cmp.Ambos operandos ya deben haber sido convertidos en objetos de versión.</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">Versioning</target>
        </trans-unit>
        <trans-unit id="6fe8bcdb81f192c675970c262f42ae11e468a493" translate="yes" xml:space="preserve">
          <source>Versions &amp;gt;= 3.22 are maintained with support from Matthew Horsfall (alh).</source>
          <target state="translated">Las versiones&amp;gt; = 3.22 se mantienen con el apoyo de Matthew Horsfall (alh).</target>
        </trans-unit>
        <trans-unit id="0a0e4cacd3bf4b53f4105e538a9024d7fb5c49ec" translate="yes" xml:space="preserve">
          <source>Versions of Perl from 5.002 to 5.003 did use the &lt;code&gt;LC_CTYPE&lt;/code&gt; information if available; that is, &lt;code&gt;\w&lt;/code&gt; did understand what were the letters according to the locale environment variables. The problem was that the user had no control over the feature: if the C library supported locales, Perl used them.</source>
          <target state="translated">Las versiones de Perl de 5.002 a 5.003 usaron la informaci&amp;oacute;n &lt;code&gt;LC_CTYPE&lt;/code&gt; si estaba disponible; es decir, &lt;code&gt;\w&lt;/code&gt; s&amp;iacute; entendi&amp;oacute; cu&amp;aacute;les eran las letras de acuerdo con las variables de entorno local. El problema era que el usuario no ten&amp;iacute;a control sobre la funci&amp;oacute;n: si la biblioteca C admit&amp;iacute;a configuraciones regionales, Perl las usaba.</target>
        </trans-unit>
        <trans-unit id="e19f78e14eb21b19646ec53e2aa5cba777aaa99b" translate="yes" xml:space="preserve">
          <source>Versions of Perl prior to 5.004 &lt;b&gt;mostly&lt;/b&gt; ignored locale information, generally behaving as if something similar to the &lt;code&gt;&quot;C&quot;&lt;/code&gt; locale were always in force, even if the program environment suggested otherwise (see &lt;a href=&quot;#The-setlocale-function&quot;&gt;The setlocale function&lt;/a&gt;). By default, Perl still behaves this way for backward compatibility. If you want a Perl application to pay attention to locale information, you &lt;b&gt;must&lt;/b&gt; use the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; pragma (see &lt;a href=&quot;#The-%22use-locale%22-pragma&quot;&gt;The use locale pragma&lt;/a&gt;) or, in the unlikely event that you want to do so for just pattern matching, the &lt;code&gt;/l&lt;/code&gt; regular expression modifier (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt;) to instruct it to do so.</source>
          <target state="translated">Las versiones de Perl anteriores a la 5.004 ignoraban en &lt;b&gt;su mayor&amp;iacute;a la&lt;/b&gt; informaci&amp;oacute;n del entorno local, comport&amp;aacute;ndose generalmente como si algo similar al entorno local &lt;code&gt;&quot;C&quot;&lt;/code&gt; estuviera siempre en vigor, incluso si el entorno del programa suger&amp;iacute;a lo contrario (consulte &lt;a href=&quot;#The-setlocale-function&quot;&gt;La funci&amp;oacute;n setlocale&lt;/a&gt; ). Por defecto, Perl todav&amp;iacute;a se comporta de esta manera para compatibilidad con versiones anteriores. Si desea que una aplicaci&amp;oacute;n Perl preste atenci&amp;oacute;n a la informaci&amp;oacute;n de la configuraci&amp;oacute;n regional, &lt;b&gt;debe&lt;/b&gt; usar el pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (consulte &lt;a href=&quot;#The-%22use-locale%22-pragma&quot;&gt;El pragma use locale&lt;/a&gt; ) o, en el caso poco probable de que desee hacerlo solo para la coincidencia de patrones, el modificador de expresi&amp;oacute;n regular &lt;code&gt;/l&lt;/code&gt; (ver &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Modificadores de juego de caracteres en perlre&lt;/a&gt; ) para indicarle que lo haga.</target>
        </trans-unit>
        <trans-unit id="cd42417aaf403d8a849b95358e372d8ab627e926" translate="yes" xml:space="preserve">
          <source>Versions of Perl prior to 5.6 would recompile the regular expression for each iteration, even if &lt;code&gt;$pattern&lt;/code&gt; had not changed. The &lt;code&gt;/o&lt;/code&gt; would prevent this by telling Perl to compile the pattern the first time, then reuse that for subsequent iterations:</source>
          <target state="translated">Las versiones de Perl anteriores a la 5.6 recompilar&amp;iacute;an la expresi&amp;oacute;n regular para cada iteraci&amp;oacute;n, incluso si &lt;code&gt;$pattern&lt;/code&gt; no hubiera cambiado. El &lt;code&gt;/o&lt;/code&gt; evitar&amp;iacute;a esto dici&amp;eacute;ndole a Perl que compile el patr&amp;oacute;n la primera vez, luego lo reutilice para iteraciones posteriores:</target>
        </trans-unit>
        <trans-unit id="3862168f946314ea765703eeec887a87938d1f6e" translate="yes" xml:space="preserve">
          <source>Versions prior to perl5.004 had serious security problems with buffer overflows, and in some cases have CERT advisories (for instance, &lt;a href=&quot;http://www.cert.org/advisories/CA-1997-17.html&quot;&gt;http://www.cert.org/advisories/CA-1997-17.html&lt;/a&gt; ).</source>
          <target state="translated">Las versiones anteriores a perl5.004 ten&amp;iacute;an serios problemas de seguridad con desbordamientos de b&amp;uacute;fer y, en algunos casos, tienen avisos de CERT (por ejemplo, &lt;a href=&quot;http://www.cert.org/advisories/CA-1997-17.html&quot;&gt;http://www.cert.org/advisories/CA-1997-17.html&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="af88a51473f729bd7efb750c66c484d3ad88aa17" translate="yes" xml:space="preserve">
          <source>Versions up to 2.11 Copyright (c) 1995-2004 Graham Barr. All rights reserved. Changes in Version 2.11 onwards Copyright (C) 2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.11 Copyright (c)1995-2004 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.11 en adelante Copyright (C)2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="645570264e1c9b5d4c69c1487a566c0753776ad2" translate="yes" xml:space="preserve">
          <source>Versions up to 2.13 Copyright (c) 1995-1998 Graham Barr. All rights reserved. Changes in Version 2.13_01 onwards Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.13 Copyright (c)1995-1998 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.13_01 en adelante Copyright (C)2013-2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="df128b7f68ed19de182414be1bd4f1f2d9c6a0b4" translate="yes" xml:space="preserve">
          <source>Versions up to 2.21 Copyright (c) 1995-1998 Graham Barr. All rights reserved. Changes in Version 2.22 onwards Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.21 Copyright (c)1995-1998 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.22 en adelante Copyright (C)2013-2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="230af24ce1338603fae4bdb469b6688c0e4037a9" translate="yes" xml:space="preserve">
          <source>Versions up to 2.24_1 Copyright (c) 1995-1997 Graham Barr. All rights reserved. Changes in Version 2.25 onwards Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.24_1 Copyright (c)1995-1997 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.25 en adelante Copyright (C)2013-2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="5670a2aa1f7771d1194bac3e8af5f2d1835dd801" translate="yes" xml:space="preserve">
          <source>Versions up to 2.29 Copyright (c) 1995-2004 Graham Barr. All rights reserved. Changes in Version 2.29_01 onwards Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.29 Copyright (c)1995-2004 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.29_01 en adelante Copyright (C)2013-2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="f23d5e96a8b776d3b4630eccbbe42aa010b76c05" translate="yes" xml:space="preserve">
          <source>Versions up to 2.29_1 Copyright (c) 1995-2006 Graham Barr. All rights reserved. Changes in Version 2.29_2 onwards Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.29_1 Copyright (c)1995-2006 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.29_2 en adelante Copyright (C)2013-2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="84d20de3782c28252a3c6f7756f86f07da1b04bb" translate="yes" xml:space="preserve">
          <source>Versions up to 2.31_1 Copyright (c) 1995-2004 Graham Barr. All rights reserved. Changes in Version 2.31_2 onwards Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.31_1 Copyright (c)1995-2004 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.31_2 en adelante Copyright (C)2013-2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="e46c1089fa8e642aaf026e639393be6e2f9a3f93" translate="yes" xml:space="preserve">
          <source>Versions up to 2.77_2 Copyright (c) 1995-2004 Graham Barr. All rights reserved. Changes in Version 2.77_3 onwards Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Versiones hasta 2.77_2 Copyright (c)1995-2004 Graham Barr.Todos los derechos reservados.Cambios en la versión 2.77_3 en adelante Copyright (C)2013-2014 Steve Hay.Todos los derechos reservados.</target>
        </trans-unit>
        <trans-unit id="3e953c4e403299818cc2d2c327160433abe8b2b9" translate="yes" xml:space="preserve">
          <source>Very large code points (above 0x7FFF_FFFF) are considered more problematic than the others that are above the Unicode legal maximum. There are several reasons: they requre at least 32 bits to represent them on ASCII platforms, are not representable at all on EBCDIC platforms, and the original UTF-8 specification never went above this number (the current 0x10FFFF limit was imposed later). (The smaller ones, those that fit into 32 bits, are representable by a UV on ASCII platforms, but not by an IV, which means that the number of operations that can be performed on them is quite restricted.) The UTF-8 encoding on ASCII platforms for these large code points begins with a byte containing 0xFE or 0xFF. The UTF8_DISALLOW_FE_FF flag will cause them to be treated as malformations, while allowing smaller above-Unicode code points. (Of course UTF8_DISALLOW_SUPER will treat all above-Unicode code points, including these, as malformations.) Similarly, UTF8_WARN_FE_FF acts just like the other WARN flags, but applies just to these code points.</source>
          <target state="translated">Los puntos de código muy grandes (por encima de 0x7FFF_FFFF)se consideran más problemáticos que los otros que están por encima del máximo legal de Unicode.Hay varias razones:requieren al menos 32 bits para representarlos en plataformas ASCII,no son representables en absoluto en plataformas EBCDIC,y la especificación UTF-8 original nunca superó este número (el límite actual de 0x10FFFF se impuso más tarde).(Los más pequeños,los que caben en 32 bits,son representables por un UV en plataformas ASCII,pero no por un IV,lo que significa que el número de operaciones que se pueden realizar en ellos es bastante restringido).La codificación UTF-8 en plataformas ASCII para estos grandes puntos de código comienza con un byte que contiene 0xFE o 0xFF.El indicador UTF8_DISALLOW_FE_FF hará que se traten como malformaciones,mientras que permite puntos de código más pequeños por encima del Unicode.(Por supuesto que UTF8_DISALLOW_SUPER tratará todos los puntos de código por encima del Unicode,incluyendo estos,como malformaciones).De manera similar,UTF8_WARN_FE_FF actúa igual que las otras banderas WARN,pero se aplica sólo a estos puntos de código.</target>
        </trans-unit>
        <trans-unit id="a0d5201ccd05c9ec8ec53b6a69352780556eae41" translate="yes" xml:space="preserve">
          <source>Very little work should be needed since nothing changes until you generate Unicode data. The most important thing is getting input as Unicode; for that, see the earlier I/O discussion. To get full seamless Unicode support, add &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; (or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; or higher) to your script.</source>
          <target state="translated">Deber&amp;iacute;a necesitarse muy poco trabajo, ya que nada cambia hasta que genera datos Unicode. Lo m&amp;aacute;s importante es obtener la entrada como Unicode; para eso, vea la discusi&amp;oacute;n de E / S anterior. Para obtener una compatibilidad total con Unicode, agregue la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'unicode_strings' (o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; o superior) a su script.</target>
        </trans-unit>
        <trans-unit id="eb22342c76c7e665931efb33364b8148d2bfea0a" translate="yes" xml:space="preserve">
          <source>Very nearly all Unicode character properties are accessible through regular expressions by using the &lt;code&gt;\p{}&lt;/code&gt; &quot;matches property&quot; construct and the &lt;code&gt;\P{}&lt;/code&gt; &quot;doesn't match property&quot; for its negation.</source>
          <target state="translated">Casi todas las propiedades de los caracteres Unicode son accesibles a trav&amp;eacute;s de expresiones regulares usando la construcci&amp;oacute;n &lt;code&gt;\p{}&lt;/code&gt; &quot;propiedad de coincidencias&quot; y la &lt;code&gt;\P{}&lt;/code&gt; &quot;propiedad no coincide con&quot; para su negaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5c9d6c4d037708bb7601d0c4b194d48f70b48661" translate="yes" xml:space="preserve">
          <source>Very probably not. Unless you are generating Unicode characters somehow, old behaviour should be preserved. About the only behaviour that has changed and which could start generating Unicode is the old behaviour of &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; where supplying an argument more than 255 produced a character modulo 255. &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(300)&lt;/a&gt;&lt;/code&gt;, for example, was equal to &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(45)&lt;/a&gt;&lt;/code&gt; or &quot;-&quot; (in ASCII), now it is LATIN CAPITAL LETTER I WITH BREVE.</source>
          <target state="translated">Probablemente no. A menos que est&amp;eacute; generando caracteres Unicode de alguna manera, se debe preservar el comportamiento anterior. El &amp;uacute;nico comportamiento que ha cambiado y que podr&amp;iacute;a comenzar a generar Unicode es el antiguo comportamiento de &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; donde al proporcionar un argumento de m&amp;aacute;s de 255 se produc&amp;iacute;a un car&amp;aacute;cter m&amp;oacute;dulo 255. &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(300)&lt;/a&gt;&lt;/code&gt; , por ejemplo, era igual a &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(45)&lt;/a&gt;&lt;/code&gt; o &quot;-&quot; (en ASCII), ahora es LETRA I MAY&amp;Uacute;SCULA LATINA CON BREVE.</target>
        </trans-unit>
        <trans-unit id="3df57364769892c03471ecd89738053fe81083da" translate="yes" xml:space="preserve">
          <source>Very similar to HTML/XML &lt;code&gt;&amp;amp;&lt;i&gt;foo&lt;/i&gt;;&lt;/code&gt; &quot;entity references&quot;:</source>
          <target state="translated">Muy similar a HTML / XML &lt;code&gt;&amp;amp;&lt;i&gt;foo&lt;/i&gt;;&lt;/code&gt; &quot;referencias de entidad&quot;:</target>
        </trans-unit>
        <trans-unit id="88a7cc964078758d646c21f587f22b62e9a2dd56" translate="yes" xml:space="preserve">
          <source>Very useful online reference material:</source>
          <target state="translated">Material de referencia en línea muy útil:</target>
        </trans-unit>
        <trans-unit id="81b34b94e5e74c2375523a735ce4a25a6536b5a0" translate="yes" xml:space="preserve">
          <source>View a few lines of code around the current line.</source>
          <target state="translated">Ver unas pocas líneas de código alrededor de la línea actual.</target>
        </trans-unit>
        <trans-unit id="ee53ceb3384ce0d69b124dce7f13e6c99981e32e" translate="yes" xml:space="preserve">
          <source>View existing bug reports at, and submit any new bugs, problems, patches, etc. to: &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=threads-shared&quot;&gt;http://rt.cpan.org/Public/Dist/Display.html?Name=threads-shared&lt;/a&gt;</source>
          <target state="translated">Vea los informes de errores existentes en y env&amp;iacute;e los nuevos errores, problemas, parches, etc. a: &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=threads-shared&quot;&gt;http://rt.cpan.org/Public/Dist/Display.html?Name=threads-shared&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ee82a6b555759727c4e5933e475a065e10be5a6" translate="yes" xml:space="preserve">
          <source>Vipul Ved Prakash &amp;lt;mail AT vipul DOT net&amp;gt; - Helping with debugging</source>
          <target state="translated">Vipul Ved Prakash &amp;lt;mail AT vipul DOT net&amp;gt; - Ayuda con la depuraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="028988d7a45fe46ec8fd41d271d201dc35932db0" translate="yes" xml:space="preserve">
          <source>Visual Perl is a Visual Studio.NET plug-in from ActiveState.</source>
          <target state="translated">Visual Perl es un plug-in de Visual Studio.NET de ActiveState.</target>
        </trans-unit>
        <trans-unit id="386d827cc4ba6b5f42c38cef2abc770e9c36de72" translate="yes" xml:space="preserve">
          <source>Volumes can be drive letters or UNC sharenames (\\server\share).</source>
          <target state="translated">Los volúmenes pueden ser letras de unidad o nombres de acciones de la UNC (compartir servidor).</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="c26d74df8890b7f659e90425275e4ff437fc0eeb" translate="yes" xml:space="preserve">
          <source>WAIT</source>
          <target state="translated">WAIT</target>
        </trans-unit>
        <trans-unit id="fd3edc641024a335a508fdacefb5f51ded5905cc" translate="yes" xml:space="preserve">
          <source>WARNING</source>
          <target state="translated">WARNING</target>
        </trans-unit>
        <trans-unit id="3c94abff24468ec74283806394c7e1079287562a" translate="yes" xml:space="preserve">
          <source>WARNING: A variable used as a buffer by &lt;code&gt;setbuf&lt;/code&gt; or &lt;code&gt;setvbuf&lt;/code&gt;&lt;b&gt;must not be modified&lt;/b&gt; in any way until the IO::Handle is closed or &lt;code&gt;setbuf&lt;/code&gt; or &lt;code&gt;setvbuf&lt;/code&gt; is called again, or memory corruption may result! Remember that the order of global destruction is undefined, so even if your buffer variable remains in scope until program termination, it may be undefined before the file IO::Handle is closed. Note that you need to import the constants &lt;code&gt;_IOFBF&lt;/code&gt; , &lt;code&gt;_IOLBF&lt;/code&gt; , and &lt;code&gt;_IONBF&lt;/code&gt; explicitly. Like C, setbuf returns nothing. setvbuf returns &quot;0 but true&quot;, on success, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">ADVERTENCIA: Una variable utilizada como b&amp;uacute;fer por &lt;code&gt;setbuf&lt;/code&gt; o &lt;code&gt;setvbuf&lt;/code&gt; &lt;b&gt;no debe modificarse&lt;/b&gt; de ninguna manera hasta que IO :: Handle se cierre o se &lt;code&gt;setbuf&lt;/code&gt; &lt;code&gt;setvbuf&lt;/code&gt; setbuf o setvbuf , &amp;iexcl;o se puede da&amp;ntilde;ar la memoria! Recuerde que el orden de destrucci&amp;oacute;n global no est&amp;aacute; definido, por lo que incluso si su variable de b&amp;uacute;fer permanece en el alcance hasta la finalizaci&amp;oacute;n del programa, puede no estar definido antes de que se cierre el archivo IO :: Handle. Tenga en cuenta que debe importar las constantes &lt;code&gt;_IOFBF&lt;/code&gt; , &lt;code&gt;_IOLBF&lt;/code&gt; y &lt;code&gt;_IONBF&lt;/code&gt; expl&amp;iacute;citamente. Como C, setbuf no devuelve nada. setvbuf devuelve &quot;0 pero verdadero&quot;, en caso de &amp;eacute;xito, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en caso de error.</target>
        </trans-unit>
        <trans-unit id="84c2915b48a50feabe204322fda8dc2bbdf52e7d" translate="yes" xml:space="preserve">
          <source>WARNING: As of the 5.004 release, proper usage of the array and hash access functions requires understanding a few caveats. Some of these caveats are actually considered bugs in the API, to be fixed in later releases, and are bracketed with [MAYCHANGE] below. If you find yourself actually applying such information in this section, be aware that the behavior may change in the future, umm, without warning.</source>
          <target state="translated">ADVERTENCIA:A partir del lanzamiento de 5.004,el uso adecuado de la matriz y las funciones de acceso al hash requiere la comprensión de algunas advertencias.Algunas de estas advertencias se consideran errores en la API,que se corregirán en versiones posteriores,y están entre corchetes con [MAYCHANGE]abajo.Si te encuentras aplicando dicha información en esta sección,ten en cuenta que el comportamiento puede cambiar en el futuro,umm,sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="05aab9ee07d74b03226bac90b4501275a8030a8f" translate="yes" xml:space="preserve">
          <source>WARNING: The IO::Handle::setvbuf() is not available by default on Perls 5.8.0 and later because setvbuf() is rather specific to using the stdio library, while Perl prefers the new perlio subsystem instead.</source>
          <target state="translated">ADVERTENCIA:El IO::Handle::setvbuf()no está disponible por defecto en Perls 5.8.0 y posteriores porque setvbuf()es bastante específico para usar la librería stdio,mientras que Perl prefiere el nuevo subsistema perlio en su lugar.</target>
        </trans-unit>
        <trans-unit id="19985e22537400319dbf86c71031d6722bd3ab22" translate="yes" xml:space="preserve">
          <source>WARNING: This variable is strictly for internal use only. Its availability, behavior, and contents are subject to change without notice.</source>
          <target state="translated">ADVERTENCIA:Esta variable es estrictamente para uso interno.Su disponibilidad,comportamiento y contenido están sujetos a cambios sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="5fbfa986b2fb43598295e70fb2ca9f7ae7e83632" translate="yes" xml:space="preserve">
          <source>WARNING: do not use the following unless you *know* &lt;code&gt;off&lt;/code&gt; is within the UTF-8 data pointed to by &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; *and* that on entry &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; is aligned on the first byte of character or just after the last byte of a character.</source>
          <target state="translated">ADVERTENCIA: no utilice lo siguiente a menos que * sepa * que &lt;code&gt;off&lt;/code&gt; est&amp;aacute; dentro de los datos UTF-8 se&amp;ntilde;alados por &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; * y * que la entrada &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; est&amp;aacute; alineada con el primer byte de car&amp;aacute;cter o justo despu&amp;eacute;s del &amp;uacute;ltimo byte de un car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="678aa148e87e729dd3e10fce0605ee0538d043a2" translate="yes" xml:space="preserve">
          <source>WARNING: use only if you *know* that the pointers point inside the same UTF-8 buffer.</source>
          <target state="translated">ADVERTENCIA:use sólo si *sabe*que los punteros apuntan dentro del mismo buffer UTF-8.</target>
        </trans-unit>
        <trans-unit id="163b0dd1ef8e487db793ddc755bf68fdfda1ccf3" translate="yes" xml:space="preserve">
          <source>WARNINGS</source>
          <target state="translated">WARNINGS</target>
        </trans-unit>
        <trans-unit id="991fe4b3587f5bc3956dbdf64cab7946d865d2e1" translate="yes" xml:space="preserve">
          <source>WARRANTY</source>
          <target state="translated">WARRANTY</target>
        </trans-unit>
        <trans-unit id="899abc782023a16c90d026f7662b081d0e5603bf" translate="yes" xml:space="preserve">
          <source>WELCOME to Plan 9 Perl, brave soul!</source>
          <target state="translated">BIENVENIDO al Plan 9 Perl,alma valiente!</target>
        </trans-unit>
        <trans-unit id="943f25cc8d7abfb9400129c428f47471a4e77ccc" translate="yes" xml:space="preserve">
          <source>WHAT</source>
          <target state="translated">WHAT</target>
        </trans-unit>
        <trans-unit id="d8c634435f258992c7dbf89bc42a5c10afe89f43" translate="yes" xml:space="preserve">
          <source>WHAT ABOUT &lt;code&gt;DB_File&lt;/code&gt; ?</source>
          <target state="translated">&amp;iquest;QU&amp;Eacute; PASA &lt;code&gt;DB_File&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="a3e4fe4880a26ca7ed67d03d21e6c8855e324c1e" translate="yes" xml:space="preserve">
          <source>WHAT ABOUT DB_File?</source>
          <target state="translated">¿Y qué hay de DB_File?</target>
        </trans-unit>
        <trans-unit id="69dc14e97abf1c2f032d0ecddf4083e210815600" translate="yes" xml:space="preserve">
          <source>WHAT IS A LOCALE</source>
          <target state="translated">QUÉ ES UN LOCAL</target>
        </trans-unit>
        <trans-unit id="8df7eec36d2c3cf583d0c776054ef24d9f2ed0ea" translate="yes" xml:space="preserve">
          <source>WHAT NEXT?</source>
          <target state="translated">¿QUÉ SIGUE?</target>
        </trans-unit>
        <trans-unit id="a31a09e4a44017984cab9426a275543f91816385" translate="yes" xml:space="preserve">
          <source>WHY YOU SHOULD ALWAYS &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt;</source>
          <target state="translated">POR QU&amp;Eacute; USTED DEBE SIEMPRE &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcf4ad6d76037668ee7377a5088288d629d80a03" translate="yes" xml:space="preserve">
          <source>WHY YOU SHOULD ALWAYS use strict</source>
          <target state="translated">¿POR QUÉ DEBERÍA USTED USAR SIEMPRE estricta</target>
        </trans-unit>
        <trans-unit id="89237cfda70e873f323e7dd25612ea5b444530a5" translate="yes" xml:space="preserve">
          <source>WIZARDS ONLY</source>
          <target state="translated">SÓLO LOS MAGOS</target>
        </trans-unit>
        <trans-unit id="612951b55eb7373e18b643aac58cf8c1af06a81c" translate="yes" xml:space="preserve">
          <source>WORKING WITH CPAN.pm BEHIND FIREWALLS</source>
          <target state="translated">TRABAJANDO CON CPAN.pm DETRÁS DE LAS PAREDES DE INCENDIO</target>
        </trans-unit>
        <trans-unit id="999a14026114357b2720836f701f7f83d4e769ea" translate="yes" xml:space="preserve">
          <source>WRAP YOUR OWN</source>
          <target state="translated">ENVUELVE TU PROPIO</target>
        </trans-unit>
        <trans-unit id="66af5a28971a4c6868ba337400ea0c92dd22295d" translate="yes" xml:space="preserve">
          <source>WRITING A SOURCE FILTER</source>
          <target state="translated">ESCRIBIENDO UN FILTRO DE LA FUENTE</target>
        </trans-unit>
        <trans-unit id="0d91186f3fc1a27893403674a7abb0832febe2cf" translate="yes" xml:space="preserve">
          <source>WRITING A SOURCE FILTER IN C</source>
          <target state="translated">ESCRIBIENDO UN FILTRO DE FUENTE EN C</target>
        </trans-unit>
        <trans-unit id="1cd7808a59ef1fb929041296bd5ead5a0b08527e" translate="yes" xml:space="preserve">
          <source>WRITING A SOURCE FILTER IN PERL</source>
          <target state="translated">ESCRIBIENDO UN FILTRO DE FUENTE EN PERL</target>
        </trans-unit>
        <trans-unit id="6f33f4557886e9a55139159f018449074d30de1b" translate="yes" xml:space="preserve">
          <source>WRITING PLUGINS</source>
          <target state="translated">PLUGINS DE ESCRITURA</target>
        </trans-unit>
        <trans-unit id="975f1891ff79af7de3d437f83af46051523ae8be" translate="yes" xml:space="preserve">
          <source>Wait a bit. The PAUSE admins don't want to act too quickly in case the current maintainer is on holiday. If there's no response to private communication or the public post, a PAUSE admin can transfer it to you.</source>
          <target state="translated">Espera un poco.Los administradores de la PAUSA no quieren actuar demasiado rápido en caso de que el actual mantenedor esté de vacaciones.Si no hay respuesta a la comunicación privada o al correo público,un administrador de la PAUSA puede transferírselo.</target>
        </trans-unit>
        <trans-unit id="15314082ca8a524c0f28646da09da9a7b2b19503" translate="yes" xml:space="preserve">
          <source>Wait for a child process to change state. This is identical to Perl's builtin &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt;.</source>
          <target state="translated">Espere a que un proceso hijo cambie de estado. Esto es id&amp;eacute;ntico a la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/waitpid&quot;&gt;waitpid()&lt;/a&gt;&lt;/code&gt; incorporada de Perl , consulte &lt;a href=&quot;functions/waitpid&quot;&gt;waitpid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6cf131695c42ff802839eee6d284c2ac7d67182" translate="yes" xml:space="preserve">
          <source>Waiting For A Thread To Exit</source>
          <target state="translated">Esperando un hilo para salir</target>
        </trans-unit>
        <trans-unit id="e3ebec26983a17c27a53a6ef7e86c4cba507cfab" translate="yes" xml:space="preserve">
          <source>Waiting for a Condition</source>
          <target state="translated">Esperando una condición</target>
        </trans-unit>
        <trans-unit id="a039b2b9c5bcec1c837f18b2a777a3cf1a5c101d" translate="yes" xml:space="preserve">
          <source>Waits for a particular child process to terminate and returns the pid of the deceased process, or &lt;code&gt;-1&lt;/code&gt; if there is no such child process. On some systems, a value of 0 indicates that there are processes still running. The status is returned in &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; . If you say</source>
          <target state="translated">Espera a que termine un proceso hijo en particular y devuelve el pid del proceso fallecido, o &lt;code&gt;-1&lt;/code&gt; si no existe tal proceso hijo. En algunos sistemas, un valor de 0 indica que todav&amp;iacute;a hay procesos en ejecuci&amp;oacute;n. El estado se devuelve en &lt;code&gt;$?&lt;/code&gt; y &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; . Si usted dice</target>
        </trans-unit>
        <trans-unit id="9d2d2ea3d50db6c0193c946021247ef1ef74c98a" translate="yes" xml:space="preserve">
          <source>Walk Perl syntax tree, printing concise info about ops</source>
          <target state="translated">Caminar el árbol de sintaxis de Perl,imprimiendo información concisa sobre operaciones</target>
        </trans-unit>
        <trans-unit id="98ac99324db8fed0af8f3ac36eac780a0f3b01c7" translate="yes" xml:space="preserve">
          <source>Walk Perl syntax tree, printing debug info about ops</source>
          <target state="translated">Caminar el árbol de sintaxis de Perl,imprimir la información de depuración de operaciones</target>
        </trans-unit>
        <trans-unit id="7431af4c5a7328a3a156e7686791a7345dc2386a" translate="yes" xml:space="preserve">
          <source>Walk Perl syntax tree, printing terse info about ops</source>
          <target state="translated">Caminar el árbol de sintaxis de Perl,imprimiendo información concisa sobre operaciones</target>
        </trans-unit>
        <trans-unit id="a864d880f623d2740f245bfcfe987603dc895c7a" translate="yes" xml:space="preserve">
          <source>Walk the symbol table starting at SYMREF and call METHOD on each symbol (a B::GV object) visited. When the walk reaches package symbols (such as &quot;Foo::&quot;) it invokes RECURSE, passing in the symbol name, and only recurses into the package if that sub returns true.</source>
          <target state="translated">Camine por la tabla de símbolos comenzando en SYMREF y llame a METODO en cada símbolo (un objeto B::GV)visitado.Cuando el paseo llega a los símbolos de los paquetes (como &quot;Foo::&quot;)invoca RECURSO,pasando el nombre del símbolo,y sólo recurre al paquete si ese subjuego vuelve a ser verdadero.</target>
        </trans-unit>
        <trans-unit id="8c7c87239fc66d9d343f9260489e69fb8f9d3386" translate="yes" xml:space="preserve">
          <source>Walking through a zip file</source>
          <target state="translated">Caminando a través de un archivo zip</target>
        </trans-unit>
        <trans-unit id="4e8d79fb203d74f77c4bb0a86a3b744deaaf0e27" translate="yes" xml:space="preserve">
          <source>Wanting to explore this thoroughly, we want to use the stdio &lt;code&gt;fputs()&lt;/code&gt; on a PerlIO *. This means we have to ask the perlio system for a stdio &lt;code&gt;FILE *&lt;/code&gt; :</source>
          <target state="translated">Al querer explorar esto a fondo, queremos usar stdio &lt;code&gt;fputs()&lt;/code&gt; en un PerlIO *. Esto significa que tenemos que pedirle al sistema perlio un &lt;code&gt;FILE *&lt;/code&gt; stdio * :</target>
        </trans-unit>
        <trans-unit id="00ff4de53d3fe3ffe55031beb5fa9d320e5a35d7" translate="yes" xml:space="preserve">
          <source>Warn on implicit encoding conversions</source>
          <target state="translated">Advertencia sobre las conversiones de codificación implícitas</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="5e95a54cc5d29c0bcc82593871bdfa68f79221af" translate="yes" xml:space="preserve">
          <source>Warning about Output Arguments</source>
          <target state="translated">Advertencia sobre los argumentos de salida</target>
        </trans-unit>
        <trans-unit id="78a452b501be745d32ffe67fa7b1df3549ee0e88" translate="yes" xml:space="preserve">
          <source>Warning and Dieing</source>
          <target state="translated">Advertencia y muerte</target>
        </trans-unit>
        <trans-unit id="e62cd761838ae197b4220edd9e3bd0f69c6d3c92" translate="yes" xml:space="preserve">
          <source>Warning messages are not collected in this variable. You can, however, set up a routine to process warnings by setting &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; as described in &lt;a href=&quot;#%25SIG&quot;&gt;%SIG&lt;/a&gt;.</source>
          <target state="translated">Los mensajes de advertencia no se recopilan en esta variable. Sin embargo, puede configurar una rutina para procesar advertencias configurando &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; como se describe en &lt;a href=&quot;#%25SIG&quot;&gt;% SIG&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6fb45b9b8c6b7b341ac8191e822e0bd743414ee" translate="yes" xml:space="preserve">
          <source>Warning on \1 Instead of $1</source>
          <target state="translated">Advertencia en lugar de un dólar.</target>
        </trans-unit>
        <trans-unit id="151e71b95baa6e558c89aa6c4dcb9635e2009b86" translate="yes" xml:space="preserve">
          <source>Warning! The accuracy</source>
          <target state="translated">¡Advertencia! La precisión</target>
        </trans-unit>
        <trans-unit id="dab0c499dcd06e930b9b78c9e213ee3924e2052e" translate="yes" xml:space="preserve">
          <source>Warning: If &lt;code&gt;SvCUR&lt;/code&gt; is equal to &lt;code&gt;SvLEN&lt;/code&gt; , then &lt;code&gt;SvEND&lt;/code&gt; points to unallocated memory.</source>
          <target state="translated">Advertencia: Si &lt;code&gt;SvCUR&lt;/code&gt; es igual a &lt;code&gt;SvLEN&lt;/code&gt; , &lt;code&gt;SvEND&lt;/code&gt; apunta a la memoria no asignada.</target>
        </trans-unit>
        <trans-unit id="897e60f42bffb44a74b7eeefd8312eec6b6adc82" translate="yes" xml:space="preserve">
          <source>Warning: What follows is an experimental feature.</source>
          <target state="translated">Advertencia:Lo que sigue es una característica experimental.</target>
        </trans-unit>
        <trans-unit id="0f8de18035aca70c8dfa181a9a2f5d6af3e09a08" translate="yes" xml:space="preserve">
          <source>Warning: syntactical care is required when sorting the list returned from a function. If you want to sort the list returned by the function call &lt;code&gt;find_records(@key)&lt;/code&gt; , you can use:</source>
          <target state="translated">Advertencia: se requiere cuidado sint&amp;aacute;ctico al ordenar la lista devuelta por una funci&amp;oacute;n. Si desea ordenar la lista devuelta por la llamada de funci&amp;oacute;n &lt;code&gt;find_records(@key)&lt;/code&gt; , puede usar:</target>
        </trans-unit>
        <trans-unit id="5108285f53caf36c4da1bf90b62aacb88666b29e" translate="yes" xml:space="preserve">
          <source>Warning: the inst_perl: target will most probably overwrite your existing perl binary. Use with care!</source>
          <target state="translated">Advertencia:el inst_perl:target muy probablemente sobreescribirá su binario de perl existente.¡Utilícelo con cuidado!</target>
        </trans-unit>
        <trans-unit id="1430f976c596795274458abcfbc4f280cbfcebac" translate="yes" xml:space="preserve">
          <source>Warnings</source>
          <target state="translated">Warnings</target>
        </trans-unit>
        <trans-unit id="cd781cfd6561f1847315b32c68e5aa6443ed0ce1" translate="yes" xml:space="preserve">
          <source>Warnings about floating-point overflow when compiling Perl on Tru64</source>
          <target state="translated">Advertencias sobre el desbordamiento de punto flotante al compilar Perl en Tru64</target>
        </trans-unit>
        <trans-unit id="f781ae9f2ff2acd0ab91c312289ece490360983a" translate="yes" xml:space="preserve">
          <source>Warnings are issued and the file skipped if &lt;code&gt;AutoSplit&lt;/code&gt; cannot locate either the</source>
          <target state="translated">Se emiten advertencias y se omite el archivo si &lt;code&gt;AutoSplit&lt;/code&gt; no puede localizar el</target>
        </trans-unit>
        <trans-unit id="931a49d01050aa1b2755e3ac6bcc484cb7da972d" translate="yes" xml:space="preserve">
          <source>Warnings dispatched from perl itself (or more accurately, those that match descriptions found in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;) are only displayed once (no duplicate descriptions). User code generated warnings a la warn() are unaffected, allowing duplicate user messages to be displayed.</source>
          <target state="translated">Las advertencias enviadas desde el propio perl (o m&amp;aacute;s exactamente, aquellas que coinciden con las descripciones encontradas en &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; ) solo se muestran una vez (sin descripciones duplicadas). Las advertencias generadas por c&amp;oacute;digo de usuario a la warn () no se ven afectadas, lo que permite que se muestren mensajes de usuario duplicados.</target>
        </trans-unit>
        <trans-unit id="e5a6430c53bc65107aa5413603aa9d5ae883fbaa" translate="yes" xml:space="preserve">
          <source>Warnings import function</source>
          <target state="translated">Función de importación de advertencias</target>
        </trans-unit>
        <trans-unit id="c2ae6895b901f6f499e198f2b33c31bd733ed306" translate="yes" xml:space="preserve">
          <source>Warnings of other C compilers</source>
          <target state="translated">Advertencias de otros compiladores de C</target>
        </trans-unit>
        <trans-unit id="3e543092d93dedef30b6a118c959f36cd73b7b20" translate="yes" xml:space="preserve">
          <source>Warns with &lt;code&gt;@message&lt;/code&gt; but the message will appear to come from the point where the original test function was called (&lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ).</source>
          <target state="translated">Advierte con &lt;code&gt;@message&lt;/code&gt; pero el mensaje parecer&amp;aacute; provenir del punto donde se llam&amp;oacute; a la funci&amp;oacute;n de prueba original ( &lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d321acbea9d4ab268b54e61d4d0b39001cfb34d4" translate="yes" xml:space="preserve">
          <source>Wayne Thompson</source>
          <target state="translated">Wayne Thompson</target>
        </trans-unit>
        <trans-unit id="43464fb1e06d4c1bc9db7081e9ca038cc1269495" translate="yes" xml:space="preserve">
          <source>We &quot;officially&quot; support the two most recent stable release series. 5.16.x and earlier are now out of support. As of the release of 5.22.0, we will &quot;officially&quot; end support for Perl 5.18.x, other than providing security updates as described below.</source>
          <target state="translated">Apoyamos &quot;oficialmente&quot; las dos series de lanzamiento estable más recientes.5.16.x y anteriores están ahora fuera de soporte.A partir del lanzamiento de 5.22.0,terminaremos &quot;oficialmente&quot; el soporte para Perl 5.18.x,aparte de proporcionar actualizaciones de seguridad como se describe a continuación.</target>
        </trans-unit>
        <trans-unit id="17a0049b3e8190b56f011a925a65f0578bf35206" translate="yes" xml:space="preserve">
          <source>We already talked about the special &lt;code&gt;@ISA&lt;/code&gt; array and the &lt;a href=&quot;parent&quot;&gt;parent&lt;/a&gt; pragma.</source>
          <target state="translated">Ya hablamos sobre la matriz especial &lt;code&gt;@ISA&lt;/code&gt; y el pragma &lt;a href=&quot;parent&quot;&gt;principal&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99f6d15ea0dac8c570f259e877f08f9c6317a1cf" translate="yes" xml:space="preserve">
          <source>We also recommend using this method to check whether a module has a sufficient version. The internal implementation uses the &lt;a href=&quot;version&quot;&gt;version&lt;/a&gt; module to make sure that different types of version numbers are compared correctly.</source>
          <target state="translated">Tambi&amp;eacute;n recomendamos utilizar este m&amp;eacute;todo para comprobar si un m&amp;oacute;dulo tiene una versi&amp;oacute;n suficiente. La implementaci&amp;oacute;n interna utiliza el m&amp;oacute;dulo de &lt;a href=&quot;version&quot;&gt;versi&amp;oacute;n&lt;/a&gt; para asegurarse de que los diferentes tipos de n&amp;uacute;meros de versi&amp;oacute;n se comparen correctamente.</target>
        </trans-unit>
        <trans-unit id="777641065ef9fefa679b6e058d833646233119c1" translate="yes" xml:space="preserve">
          <source>We are at the end of the regexp, so we are done! We have matched 'abcd' out of the string &quot;abcde&quot;.</source>
          <target state="translated">Estamos al final de la regexp,así que hemos terminado! Hemos coincidido con &quot;abcd&quot; de la cadena &quot;abcde&quot;.</target>
        </trans-unit>
        <trans-unit id="88e6eb598d1ae4c98a1710166c586176804c4ac7" translate="yes" xml:space="preserve">
          <source>We are done!</source>
          <target state="translated">¡Hemos terminado!</target>
        </trans-unit>
        <trans-unit id="b8c42eb02770fa660f067266841b9afabfa1a1c9" translate="yes" xml:space="preserve">
          <source>We are performing only one hash operation in this function, which is storing a new scalar under a key using &lt;code&gt;hv_store&lt;/code&gt; . A hash is represented by an HV* pointer. Like arrays, the functions for manipulating hashes from an XSUB mirror the functionality available from Perl. See &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for details.</source>
          <target state="translated">Estamos realizando solo una operaci&amp;oacute;n hash en esta funci&amp;oacute;n, que est&amp;aacute; almacenando un nuevo escalar bajo una clave usando &lt;code&gt;hv_store&lt;/code&gt; . Un hash est&amp;aacute; representado por un puntero HV *. Al igual que las matrices, las funciones para manipular hashes desde un XSUB reflejan la funcionalidad disponible en Perl. Vea &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; y &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="fd90ced3661ebd845235cda2b54db721e3957aec" translate="yes" xml:space="preserve">
          <source>We aren't interested in anything returned from</source>
          <target state="translated">No estamos interesados en nada devuelto de</target>
        </trans-unit>
        <trans-unit id="b554448ff034d8f0532aebe7287733b598ce6629" translate="yes" xml:space="preserve">
          <source>We aren't passing any parameters to</source>
          <target state="translated">No estamos pasando ningún parámetro a</target>
        </trans-unit>
        <trans-unit id="4e3a929680591b90a57e354fe70746318049b8f9" translate="yes" xml:space="preserve">
          <source>We build perl using GNU make. We tried the native make once and it worked too.</source>
          <target state="translated">Construimos perl usando GNU make.Probamos el make nativo una vez y también funcionó.</target>
        </trans-unit>
        <trans-unit id="41071245738df49d45438a45bb484058bfc57858" translate="yes" xml:space="preserve">
          <source>We can also dump out this op: the current op is always stored in &lt;code&gt;PL_op&lt;/code&gt; , and we can dump it with &lt;code&gt;Perl_op_dump&lt;/code&gt; . This'll give us similar output to &lt;a href=&quot;b/debug&quot;&gt;B::Debug&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n podemos volcar esta &lt;code&gt;PL_op&lt;/code&gt; : la operaci&amp;oacute;n actual siempre se almacena en PL_op , y podemos volcarla con &lt;code&gt;Perl_op_dump&lt;/code&gt; . Esto nos dar&amp;aacute; una salida similar a &lt;a href=&quot;b/debug&quot;&gt;B :: Debug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="961c3c25dd241cffc69783f122b1016732a7e65b" translate="yes" xml:space="preserve">
          <source>We can also use &lt;code&gt;@&lt;/code&gt; to jump to an offset, with 0 being the position where we were when the last &lt;code&gt;(&lt;/code&gt; was encountered:</source>
          <target state="translated">Tambi&amp;eacute;n podemos usar &lt;code&gt;@&lt;/code&gt; para saltar a un desplazamiento, siendo 0 la posici&amp;oacute;n en la que est&amp;aacute;bamos cuando se encontr&amp;oacute; el &amp;uacute;ltimo &lt;code&gt;(&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dbea0db461430bae70d9c35bb3e6a3ab77cd3179" translate="yes" xml:space="preserve">
          <source>We can also use a variable to store a reference to the data structure that is being blessed as our object:</source>
          <target state="translated">También podemos usar una variable para almacenar una referencia a la estructura de datos que está siendo bendecida como nuestro objeto:</target>
        </trans-unit>
        <trans-unit id="3ae43a4ae8c47d1af2dad91e0ab8b4c97424cc6a" translate="yes" xml:space="preserve">
          <source>We can also use the transliteration operator, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;. In this example, the search list side of our &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; contains nothing, but the &lt;code&gt;c&lt;/code&gt; option complements that so it contains everything. The replacement list also contains nothing, so the transliteration is almost a no-op since it won't do any replacements (or more exactly, replace the character with itself). However, the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; option squashes duplicated and consecutive characters in the string so a character does not show up next to itself</source>
          <target state="translated">Tambi&amp;eacute;n podemos usar el operador de transliteraci&amp;oacute;n, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; . En este ejemplo, el lado de la lista de b&amp;uacute;squeda de nuestro &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; no contiene nada, pero la opci&amp;oacute;n &lt;code&gt;c&lt;/code&gt; complementa eso, por lo que contiene todo. La lista de reemplazo tampoco contiene nada, por lo que la transliteraci&amp;oacute;n es casi una operaci&amp;oacute;n no operativa ya que no har&amp;aacute; ning&amp;uacute;n reemplazo (o m&amp;aacute;s exactamente, reemplazar&amp;aacute; el car&amp;aacute;cter por s&amp;iacute; mismo). Sin embargo, la opci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; aplasta los caracteres duplicados y consecutivos en la cadena para que un car&amp;aacute;cter no aparezca junto a s&amp;iacute; mismo.</target>
        </trans-unit>
        <trans-unit id="8d9637ace5e985325b750e53a0a2e0777af26ff5" translate="yes" xml:space="preserve">
          <source>We can deal with this by using both an assertion and a negation. We'll say that the first part in $1 must be followed both by a digit and by something that's not &quot;123&quot;. Remember that the look-aheads are zero-width expressions--they only look, but don't consume any of the string in their match. So rewriting this way produces what you'd expect; that is, case 5 will fail, but case 6 succeeds:</source>
          <target state="translated">Podemos lidiar con esto usando tanto una afirmación como una negación.Diremos que la primera parte en 1 dólar debe ser seguida tanto por un dígito como por algo que no sea &quot;123&quot;.Recuerde que las miradas son expresiones de ancho cero...sólo miran,pero no consumen ninguna de las cuerdas de su correspondencia.Así que reescribir de esta manera produce lo que se esperaría;es decir,el caso 5 fallará,pero el caso 6 tendrá éxito:</target>
        </trans-unit>
        <trans-unit id="69e73838de4aed15f5d24b688fd13aef192fb3f9" translate="yes" xml:space="preserve">
          <source>We can extend the example above:</source>
          <target state="translated">Podemos ampliar el ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="84c843f2491ce2ba91f8ea33bd419c025bcac31f" translate="yes" xml:space="preserve">
          <source>We can manipulate &lt;code&gt;@_&lt;/code&gt; in other ways too:</source>
          <target state="translated">Tambi&amp;eacute;n podemos manipular a &lt;code&gt;@_&lt;/code&gt; de otras formas:</target>
        </trans-unit>
        <trans-unit id="c8e881a1155e87edea33bdbd7aaa36ea47df11e3" translate="yes" xml:space="preserve">
          <source>We can match different character strings with the &lt;b&gt;alternation&lt;/b&gt; metacharacter &lt;code&gt;'|'&lt;/code&gt; . To match &lt;code&gt;dog&lt;/code&gt; or &lt;code&gt;cat&lt;/code&gt; , we form the regex &lt;code&gt;dog|cat&lt;/code&gt; . As before, Perl will try to match the regex at the earliest possible point in the string. At each character position, Perl will first try to match the first alternative, &lt;code&gt;dog&lt;/code&gt; . If &lt;code&gt;dog&lt;/code&gt; doesn't match, Perl will then try the next alternative, &lt;code&gt;cat&lt;/code&gt; . If &lt;code&gt;cat&lt;/code&gt; doesn't match either, then the match fails and Perl moves to the next position in the string. Some examples:</source>
          <target state="translated">Podemos hacer coincidir diferentes cadenas de caracteres con el metacar&amp;aacute;cter de &lt;b&gt;alternancia &lt;/b&gt; &lt;code&gt;'|'&lt;/code&gt; . Para que coincida con &lt;code&gt;dog&lt;/code&gt; o &lt;code&gt;cat&lt;/code&gt; , formamos la expresi&amp;oacute;n regular &lt;code&gt;dog|cat&lt;/code&gt; . Como antes, Perl intentar&amp;aacute; hacer coincidir la expresi&amp;oacute;n regular en el punto m&amp;aacute;s temprano posible de la cadena. En cada posici&amp;oacute;n de personaje, Perl primero intentar&amp;aacute; hacer coincidir la primera alternativa, &lt;code&gt;dog&lt;/code&gt; . Si el &lt;code&gt;dog&lt;/code&gt; no coincide, Perl probar&amp;aacute; la siguiente alternativa, &lt;code&gt;cat&lt;/code&gt; . Si &lt;code&gt;cat&lt;/code&gt; tampoco coincide, la coincidencia falla y Perl pasa a la siguiente posici&amp;oacute;n en la cadena. Algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="ea854225fefa1280a29795bb4f271d273dbd77b0" translate="yes" xml:space="preserve">
          <source>We can modify principle 3 above to take into account non-greedy quantifiers:</source>
          <target state="translated">Podemos modificar el principio 3 anterior para tener en cuenta los cuantificadores no grasos:</target>
        </trans-unit>
        <trans-unit id="ab79fcd6910e13f271bf0f10b6fac2de440cb105" translate="yes" xml:space="preserve">
          <source>We can now use &lt;code&gt;Perl_sv_dump&lt;/code&gt; to investigate the SV:</source>
          <target state="translated">Ahora podemos usar &lt;code&gt;Perl_sv_dump&lt;/code&gt; para investigar el SV:</target>
        </trans-unit>
        <trans-unit id="9e3ffbb12768a148e4cd9144c59ebb38f57598ff" translate="yes" xml:space="preserve">
          <source>We can override a parent's method in a child class. When we do so, we can still call the parent class's method with the &lt;code&gt;SUPER&lt;/code&gt; pseudo-class.</source>
          <target state="translated">Podemos anular el m&amp;eacute;todo de un padre en una clase secundaria. Cuando lo hacemos, a&amp;uacute;n podemos llamar al m&amp;eacute;todo de la clase padre con la &lt;code&gt;SUPER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2754e3aa57380296cb4f092e33ffe2f92fac593d" translate="yes" xml:space="preserve">
          <source>We can put another break point on any line beginning with a colon, we'll use line 17 as that's just as we come out of the subroutine, and we'd like to pause there later on:</source>
          <target state="translated">Podemos poner otro punto de ruptura en cualquier línea que empiece por un colon,usaremos la línea 17 ya que es justo cuando salimos de la subrutina,y nos gustaría hacer una pausa allí más tarde:</target>
        </trans-unit>
        <trans-unit id="8aece3bd543cbe6fe75eaf5ad6965a489841cbb4" translate="yes" xml:space="preserve">
          <source>We can put that into a test file which we can run to check which approach is the fastest, using a global &lt;code&gt;$STR&lt;/code&gt; variable to assign to the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $str&lt;/code&gt; variable so as to avoid perl trying to optimize any of the work away by noticing it's assigned only the once.</source>
          <target state="translated">Podemos poner eso en un archivo de prueba que podemos ejecutar para verificar qu&amp;eacute; enfoque es el m&amp;aacute;s r&amp;aacute;pido, usando una variable &lt;code&gt;$STR&lt;/code&gt; global para asignar a la variable &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $str&lt;/code&gt; para evitar que Perl intente optimizar el trabajo al notar que es asignado solo una vez.</target>
        </trans-unit>
        <trans-unit id="192c194669c26df922a17b7997201101414dafec" translate="yes" xml:space="preserve">
          <source>We can reduce some of the looping through slices</source>
          <target state="translated">Podemos reducir algunos de los bucles a través de las rebanadas</target>
        </trans-unit>
        <trans-unit id="393d2cf123dc0cecdbadd1ca8c26943dc464db54" translate="yes" xml:space="preserve">
          <source>We could get more fancy in the &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; block though. Instead of comparing the keys, we can compute a value with them and use that value as the comparison.</source>
          <target state="translated">Sin embargo, podr&amp;iacute;amos ser m&amp;aacute;s elegantes en el bloque &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort()&lt;/a&gt;&lt;/code&gt; . En lugar de comparar las claves, podemos calcular un valor con ellas y usar ese valor como comparaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="373abf531902aa68eac45baf244872a1e2626f66" translate="yes" xml:space="preserve">
          <source>We could have both classes inherit from a common parent, like &lt;code&gt;Machine&lt;/code&gt; , but not all machines have on/off switches. We could create a parent class called &lt;code&gt;HasOnOffSwitch&lt;/code&gt; , but that is very artificial. Radios and computers are not specializations of this parent. This parent is really a rather ridiculous creation.</source>
          <target state="translated">Podr&amp;iacute;amos tener ambas clases heredadas de un padre com&amp;uacute;n, como &lt;code&gt;Machine&lt;/code&gt; , pero no todas las m&amp;aacute;quinas tienen interruptores de encendido / apagado. Podr&amp;iacute;amos crear una clase padre llamada &lt;code&gt;HasOnOffSwitch&lt;/code&gt; , pero eso es muy artificial. Las radios y las computadoras no son especializaciones de este padre. Este padre es realmente una creaci&amp;oacute;n bastante rid&amp;iacute;cula.</target>
        </trans-unit>
        <trans-unit id="23ce6432aa57322234fa603b7b093664929a40c6" translate="yes" xml:space="preserve">
          <source>We could have used an unpack template &lt;code&gt;'b12'&lt;/code&gt; just as well, since the last 4 bits can be ignored anyway.</source>
          <target state="translated">Tambi&amp;eacute;n podr&amp;iacute;amos haber utilizado una plantilla de desempaquetado &lt;code&gt;'b12'&lt;/code&gt; , ya que los &amp;uacute;ltimos 4 bits pueden ignorarse de todos modos.</target>
        </trans-unit>
        <trans-unit id="737f5642c49143f79a5e632705526d6d3453018c" translate="yes" xml:space="preserve">
          <source>We do this by using the PPCODE: directive, rather than the CODE: directive. This tells &lt;b&gt;xsubpp&lt;/b&gt; that we will be managing the return values that will be put on the argument stack by ourselves.</source>
          <target state="translated">Hacemos esto usando la directiva PPCODE:, en lugar de la directiva CODE :. Esto le dice a &lt;b&gt;xsubpp&lt;/b&gt; que administraremos los valores de retorno que pondremos nosotros mismos en la pila de argumentos.</target>
        </trans-unit>
        <trans-unit id="bbf4d60422d93cc3418f9928672ab7a165e0c448" translate="yes" xml:space="preserve">
          <source>We don't have much experience with this yet, but try the following:</source>
          <target state="translated">No tenemos mucha experiencia en esto todavía,pero intenta lo siguiente:</target>
        </trans-unit>
        <trans-unit id="3714a8cbbcb3d8e34c4cf78e7eb46446670ccdf4" translate="yes" xml:space="preserve">
          <source>We don't have to hard-code patterns into the match operator (or anything else that works with regular expressions). We can put the pattern in a variable for later use.</source>
          <target state="translated">No tenemos que codificar los patrones en el operador de coincidencia (o cualquier otra cosa que funcione con expresiones regulares).Podemos poner el patrón en una variable para su uso posterior.</target>
        </trans-unit>
        <trans-unit id="9b9b047b90e6f20cc1587612f1c7f873786eee50" translate="yes" xml:space="preserve">
          <source>We encourage using this rather than calling print directly.</source>
          <target state="translated">Animamos a usar esto en lugar de llamar directamente a la imprenta.</target>
        </trans-unit>
        <trans-unit id="7ef0cc263f45630948ec977db18c296d89495351" translate="yes" xml:space="preserve">
          <source>We encourage vendors to ship the most recent supported release of Perl at the time of their code freeze.</source>
          <target state="translated">Animamos a los vendedores a enviar la última versión respaldada de Perl en el momento de su congelación de código.</target>
        </trans-unit>
        <trans-unit id="dd33c6dcc68f66e550d47a04957cd34a37a4f9d0" translate="yes" xml:space="preserve">
          <source>We encourage you to play with and evaluate &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Accessor&quot;&gt;Class::Accessor&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny&quot;&gt;Class::Tiny&lt;/a&gt; to see which OO system is right for you.</source>
          <target state="translated">Le recomendamos que juegue y eval&amp;uacute;e &lt;a href=&quot;http://search.cpan.org/perldoc/Moose&quot;&gt;Moose&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Accessor&quot;&gt;Class :: Accessor&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny&quot;&gt;Class :: Tiny&lt;/a&gt; para ver qu&amp;eacute; sistema OO es el adecuado para usted.</target>
        </trans-unit>
        <trans-unit id="a75ee8e59a59e98ee82483d5a167a8e74430cf9d" translate="yes" xml:space="preserve">
          <source>We fix our quoting: 'tom' =&amp;gt; q(and jerry), and run it again, this time we get our expected output:</source>
          <target state="translated">Arreglamos nuestra cita: 'tom' =&amp;gt; q (y jerry), y lo ejecutamos nuevamente, esta vez obtenemos nuestro resultado esperado:</target>
        </trans-unit>
        <trans-unit id="ad7822a7bc01015524040b6228bd7a714fe0ea5e" translate="yes" xml:space="preserve">
          <source>We have already introduced the matching operator in its default &lt;code&gt;/regexp/&lt;/code&gt; and arbitrary delimiter &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m!regexp!&lt;/a&gt;&lt;/code&gt; forms. We have used the binding operator &lt;code&gt;=~&lt;/code&gt; and its negation &lt;code&gt;!~&lt;/code&gt; to test for string matches. Associated with the matching operator, we have discussed the single line &lt;code&gt;//s&lt;/code&gt; , multi-line &lt;code&gt;//m&lt;/code&gt; , case-insensitive &lt;code&gt;//i&lt;/code&gt; and extended &lt;code&gt;//x&lt;/code&gt; modifiers. There are a few more things you might want to know about matching operators.</source>
          <target state="translated">Ya hemos introducido el operador de coincidencia en su predeterminado &lt;code&gt;/regexp/&lt;/code&gt; y el delimitador arbitrario &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m!regexp!&lt;/a&gt;&lt;/code&gt; formas. Hemos utilizado el operador de enlace &lt;code&gt;=~&lt;/code&gt; y su negaci&amp;oacute;n &lt;code&gt;!~&lt;/code&gt; Para probar las coincidencias de cadenas. Asociado con el operador de coincidencia, hemos discutido los modificadores &lt;code&gt;//s&lt;/code&gt; de l&amp;iacute;nea &amp;uacute;nica , &lt;code&gt;//m&lt;/code&gt; de l&amp;iacute;nea m&amp;uacute;ltiple , &lt;code&gt;//i&lt;/code&gt; que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas y &lt;code&gt;//x&lt;/code&gt; extendido . Hay algunas cosas m&amp;aacute;s que quiz&amp;aacute;s desee saber sobre los operadores de coincidencia.</target>
        </trans-unit>
        <trans-unit id="6e2bfdcf3348ad31286e830869ab5ab9cf57a976" translate="yes" xml:space="preserve">
          <source>We have no nroff on BS2000 POSIX (yet), so we ignored any errors while installing the documentation.</source>
          <target state="translated">No tenemos ningún nroff en el BS2000 POSIX (aún),así que ignoramos cualquier error al instalar la documentación.</target>
        </trans-unit>
        <trans-unit id="c5a4c49687cb5b4e725178b1ad770374684a7f19" translate="yes" xml:space="preserve">
          <source>We have to use a &lt;code&gt;CODE&lt;/code&gt; section because &lt;code&gt;PerlIO_puts()&lt;/code&gt; has the arguments reversed compared to &lt;code&gt;fputs()&lt;/code&gt; , and we want to keep the arguments the same.</source>
          <target state="translated">Tenemos que usar una secci&amp;oacute;n &lt;code&gt;CODE&lt;/code&gt; porque &lt;code&gt;PerlIO_puts()&lt;/code&gt; tiene los argumentos invertidos en comparaci&amp;oacute;n con &lt;code&gt;fputs()&lt;/code&gt; , y queremos mantener los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="4a78632eb571a6503bee4006e791fffefd6cf4ab" translate="yes" xml:space="preserve">
          <source>We have tried to make Perl aware of both VMS-style and Unix-style file specifications wherever possible. You may use either style, or both, on the command line and in scripts, but you may not combine the two styles within a single file specification. VMS Perl interprets Unix pathnames in much the same way as the CRTL (</source>
          <target state="translated">Hemos intentado que Perl conozca las especificaciones de los archivos de estilo VMS y Unix siempre que sea posible.Puedes usar cualquiera de los estilos,o ambos,en la línea de comandos y en los scripts,pero no puedes combinar los dos estilos dentro de una sola especificación de archivo.VMS Perl interpreta los nombres de ruta de Unix de manera muy similar a la del CRTL (</target>
        </trans-unit>
        <trans-unit id="78dd390dcc77c45fe1854b3e48358f0f7f0c1ae7" translate="yes" xml:space="preserve">
          <source>We highly discourage this method. It should only be used if you know what you're doing and specifically need the PREFIX behavior. The PREFIX algorithm is complicated and focused on matching the system installation.</source>
          <target state="translated">Desalentamos mucho este método.Sólo debe usarse si sabes lo que haces y necesitas específicamente el comportamiento PREFIX.El algoritmo de PREFIX es complicado y está enfocado a coincidir con la instalación del sistema.</target>
        </trans-unit>
        <trans-unit id="0d078f205cc7733f26f4527b8b9a508a7c925969" translate="yes" xml:space="preserve">
          <source>We highly recommend the install_base method, its the simplest and most closely approximates the expected behavior of an installation prefix.</source>
          <target state="translated">Recomendamos encarecidamente el método install_base,es el más simple y el que más se aproxima al comportamiento esperado de un prefijo de instalación.</target>
        </trans-unit>
        <trans-unit id="cf829d6773d2acaf89ace4612301d748f71133de" translate="yes" xml:space="preserve">
          <source>We hope these notes will save you from confusion and lost sleep when writing Perl scripts on VMS. If you find we've missed something you think should appear here, please don't hesitate to drop a line to vmsperl@perl.org.</source>
          <target state="translated">Esperamos que estas notas le eviten la confusión y la pérdida de sueño al escribir los guiones de Perl en el VMS.Si encuentra que nos hemos perdido algo que cree que debería aparecer aquí,por favor no dude en escribirnos a vmsperl@perl.org.</target>
        </trans-unit>
        <trans-unit id="c62eabab19d963ec1dc9f96b723cb4b48b7d1ebd" translate="yes" xml:space="preserve">
          <source>We implement our own glob-style pattern matching for --rules. Here are the supported patterns:</source>
          <target state="translated">Implementamos nuestro propio patrón de estilo global que se ajusta a las reglas.Aquí están los patrones soportados:</target>
        </trans-unit>
        <trans-unit id="f3c2a6f9803dfeb38af1055d966366fc67acbab0" translate="yes" xml:space="preserve">
          <source>We implement our own glob-style pattern matching. Here are the patterns it supports:</source>
          <target state="translated">Implementamos nuestro propio patrón de coincidencia de estilo global.Aquí están los patrones que soporta:</target>
        </trans-unit>
        <trans-unit id="821afd715774631771e27078ffd6e046b44c39d8" translate="yes" xml:space="preserve">
          <source>We know we're going to get &lt;code&gt;6&lt;/code&gt; from this, so let's finish the subroutine:</source>
          <target state="translated">Sabemos que obtendremos &lt;code&gt;6&lt;/code&gt; de esto, as&amp;iacute; que terminemos la subrutina:</target>
        </trans-unit>
        <trans-unit id="56ac7541ed28a7466aa3352e9da342249eeae09f" translate="yes" xml:space="preserve">
          <source>We looked at this bit of code before, and we said that &lt;code&gt;dPOPTOPnnrl_ul&lt;/code&gt; arranges for two &lt;code&gt;NV&lt;/code&gt; s to be placed into &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; - let's slightly expand it:</source>
          <target state="translated">Vimos este fragmento de c&amp;oacute;digo antes, y dijimos que &lt;code&gt;dPOPTOPnnrl_ul&lt;/code&gt; arregla para que dos &lt;code&gt;NV&lt;/code&gt; se coloquen en la &lt;code&gt;left&lt;/code&gt; y la &lt;code&gt;right&lt;/code&gt; ; expand&amp;aacute;moslo ligeramente:</target>
        </trans-unit>
        <trans-unit id="bf8f7ecbf0eb0e715d021c51919b36afbf4f3b1d" translate="yes" xml:space="preserve">
          <source>We maintain the binary incompatibility.</source>
          <target state="translated">Mantenemos la incompatibilidad binaria.</target>
        </trans-unit>
        <trans-unit id="0fd132a408c3e7900b7667b28ffdaffdc2cfda3e" translate="yes" xml:space="preserve">
          <source>We manipulate several arrays in this XSUB. Note that an array is represented internally by an AV* pointer. The functions and macros for manipulating arrays are similar to the functions in Perl: &lt;code&gt;av_top_index&lt;/code&gt; returns the highest index in an AV*, much like $#array; &lt;code&gt;av_fetch&lt;/code&gt; fetches a single scalar value from an array, given its index; &lt;code&gt;av_push&lt;/code&gt; pushes a scalar value onto the end of the array, automatically extending the array as necessary.</source>
          <target state="translated">Manipulamos varias matrices en este XSUB. Tenga en cuenta que una matriz se representa internamente mediante un puntero AV *. Las funciones y macros para manipular matrices son similares a las funciones en Perl: &lt;code&gt;av_top_index&lt;/code&gt; devuelve el &amp;iacute;ndice m&amp;aacute;s alto en un AV *, muy parecido a $ # matriz; &lt;code&gt;av_fetch&lt;/code&gt; obtiene un &amp;uacute;nico valor escalar de una matriz, dado su &amp;iacute;ndice; &lt;code&gt;av_push&lt;/code&gt; empuja un valor escalar al final de la matriz, extendiendo autom&amp;aacute;ticamente la matriz seg&amp;uacute;n sea necesario.</target>
        </trans-unit>
        <trans-unit id="6201b3e74828151a0b8123986740745576c51a04" translate="yes" xml:space="preserve">
          <source>We may change it so that things that remain legal uses in normal bracketed character classes might become illegal within this experimental construct. One proposal, for example, is to forbid adjacent uses of the same character, as in &lt;code&gt;(?[ [aa] ])&lt;/code&gt; . The motivation for such a change is that this usage is likely a typo, as the second &quot;a&quot; adds nothing.</source>
          <target state="translated">Podemos cambiarlo para que las cosas que siguen siendo usos legales en las clases de caracteres entre corchetes normales se vuelvan ilegales dentro de esta construcci&amp;oacute;n experimental. Una propuesta, por ejemplo, es prohibir usos adyacentes del mismo car&amp;aacute;cter, como en &lt;code&gt;(?[ [aa] ])&lt;/code&gt; . La motivaci&amp;oacute;n para tal cambio es que este uso es probablemente un error tipogr&amp;aacute;fico, ya que la segunda &quot;a&quot; no agrega nada.</target>
        </trans-unit>
        <trans-unit id="9d8db65a7f163486a998a7bf47269c4123bd2dc9" translate="yes" xml:space="preserve">
          <source>We mentioned earlier that most Perl objects are implemented as hashes under the hood. The principle of encapsulation tells us that we should not rely on this. Instead, we should use accessor methods to access the data in that hash. The object systems that we recommend below all automate the generation of accessor methods. If you use one of them, you should never have to access the object as a hash directly.</source>
          <target state="translated">Mencionamos antes que la mayoría de los objetos Perl se implementan como hachas bajo el capó.El principio de encapsulación nos dice que no debemos confiar en esto.En su lugar,debemos utilizar métodos de acceso para acceder a los datos en ese hash.Los sistemas de objetos que recomendamos más abajo automatizan la generación de métodos de acceso.Si se utiliza uno de ellos,nunca se debería tener que acceder al objeto como un hash directamente.</target>
        </trans-unit>
        <trans-unit id="fd2e3b2237cf2c9ebd6d21ee18dff2f93d4edaee" translate="yes" xml:space="preserve">
          <source>We mentioned multiple inheritance earlier. The main problem with multiple inheritance is that it greatly complicates method resolution. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more details.</source>
          <target state="translated">Anteriormente mencionamos la herencia m&amp;uacute;ltiple. El principal problema de la herencia m&amp;uacute;ltiple es que complica enormemente la resoluci&amp;oacute;n del m&amp;eacute;todo. Consulte &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="05de83678232988de23cc08caee2a559bec4d96c" translate="yes" xml:space="preserve">
          <source>We must know how much to read.</source>
          <target state="translated">Debemos saber cuánto leer.</target>
        </trans-unit>
        <trans-unit id="786b499d8e7780442a91c12acac79f0bab40bb9c" translate="yes" xml:space="preserve">
          <source>We now compile up Perl, and run it through the test suite. Our new tests pass, hooray!</source>
          <target state="translated">Ahora compilamos Perl,y lo pasamos por la sala de pruebas.Nuestras nuevas pruebas pasan,¡hurra!</target>
        </trans-unit>
        <trans-unit id="885cb8f93d773c304687f5c7d8f7995e03fd1f70" translate="yes" xml:space="preserve">
          <source>We now know how to create choices among classes of characters in a regexp. What about choices among words or character strings? Such choices are described in the next section.</source>
          <target state="translated">Ahora sabemos cómo crear opciones entre las clases de personajes en un regexp.¿Qué hay de las opciones entre las palabras o las cadenas de caracteres? Tales elecciones se describen en la siguiente sección.</target>
        </trans-unit>
        <trans-unit id="68e3b46c3317fe81b8a4f43f4375d9dc3eef2342" translate="yes" xml:space="preserve">
          <source>We often refer to inheritance relationships as &lt;b&gt;parent-child&lt;/b&gt; or &lt;code&gt;superclass/subclass&lt;/code&gt; relationships. Sometimes we say that the child has an &lt;b&gt;is-a&lt;/b&gt; relationship with its parent class.</source>
          <target state="translated">A menudo nos referimos a las relaciones de herencia como relaciones &lt;b&gt;padre-hijo&lt;/b&gt; o de &lt;code&gt;superclass/subclass&lt;/code&gt; . A veces decimos que el ni&amp;ntilde;o tiene una relaci&amp;oacute;n &lt;b&gt;is-a&lt;/b&gt; con su clase padre.</target>
        </trans-unit>
        <trans-unit id="37fd14d3b6f6bb386e0f6cc77e29f8b6538c7a73" translate="yes" xml:space="preserve">
          <source>We recognize that the Perl core, defined as the software distributed with the heart of Perl itself, is a joint project on the part of all of us. From time to time, a script, module, or set of modules (hereafter referred to simply as a &quot;module&quot;) will prove so widely useful and/or so integral to the correct functioning of Perl itself that it should be distributed with the Perl core. This should never be done without the author's explicit consent, and a clear recognition on all parts that this means the module is being distributed under the same terms as Perl itself. A module author should realize that inclusion of a module into the Perl core will necessarily mean some loss of control over it, since changes may occasionally have to be made on short notice or for consistency with the rest of Perl.</source>
          <target state="translated">Reconocemos que el núcleo de Perl,definido como el software distribuido con el corazón del propio Perl,es un proyecto conjunto de todos nosotros.De vez en cuando,un guión,un módulo o un conjunto de módulos (en adelante denominados simplemente &quot;módulo&quot;)resultará tan ampliamente útil y/o tan integral para el correcto funcionamiento del propio Perl que debería ser distribuido con el núcleo de Perl.Esto no debe hacerse nunca sin el consentimiento explícito del autor,y un reconocimiento claro por todas las partes de que esto significa que el módulo se está distribuyendo bajo los mismos términos que el propio Perl.El autor de un módulo debe darse cuenta de que la inclusión de un módulo en el núcleo de Perl significará necesariamente cierta pérdida de control sobre él,ya que en ocasiones puede ser necesario introducir cambios con poca antelación o para mantener la coherencia con el resto de Perl.</target>
        </trans-unit>
        <trans-unit id="adbff354730155d973632a844ddac8001f83317b" translate="yes" xml:space="preserve">
          <source>We recommend InfoZIP: &lt;a href=&quot;http://www.info-zip.org/Zip.html&quot;&gt;http://www.info-zip.org/Zip.html&lt;/a&gt;</source>
          <target state="translated">Recomendamos InfoZIP: &lt;a href=&quot;http://www.info-zip.org/Zip.html&quot;&gt;http://www.info-zip.org/Zip.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f1a977094921f3a67ec1b5d153f5c0398eec08d" translate="yes" xml:space="preserve">
          <source>We recommend ptar from Archive::Tar not older than 1.66 with '-C' option.</source>
          <target state="translated">Recomendamos ptar del Archivo::Tar no mayor de 1.66 con la opción '-C'.</target>
        </trans-unit>
        <trans-unit id="cbe1fc263dadb40ca151eed92966c9248a04de8d" translate="yes" xml:space="preserve">
          <source>We recommend that you avoid this syntax, for several reasons.</source>
          <target state="translated">Le recomendamos que evite esta sintaxis,por varias razones.</target>
        </trans-unit>
        <trans-unit id="579e792fc6edac0deca16c23591b561128b4c15e" translate="yes" xml:space="preserve">
          <source>We recommend that you only access attributes via &lt;b&gt;accessor&lt;/b&gt; methods. These are methods that can get or set the value of each attribute. We saw this earlier in the &lt;code&gt;print_info()&lt;/code&gt; example, which calls &lt;code&gt;$self-&amp;gt;path&lt;/code&gt; .</source>
          <target state="translated">Es recomendable que s&amp;oacute;lo el acceso a trav&amp;eacute;s de los atributos &lt;b&gt;de descriptor de acceso&lt;/b&gt; m&amp;eacute;todos. Estos son m&amp;eacute;todos que pueden obtener o establecer el valor de cada atributo. Vimos esto anteriormente en el ejemplo &lt;code&gt;print_info()&lt;/code&gt; , que llama a &lt;code&gt;$self-&amp;gt;path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd090bb786563ac9394aa0d7f58e631fb54d86e" translate="yes" xml:space="preserve">
          <source>We recommend that you use this method to access another package's version, rather than looking directly at &lt;code&gt;$Package::VERSION&lt;/code&gt; . The package you are looking at could have overridden the &lt;code&gt;VERSION&lt;/code&gt; method.</source>
          <target state="translated">Le recomendamos que utilice este m&amp;eacute;todo para acceder a la versi&amp;oacute;n de otro paquete, en lugar de mirar directamente &lt;code&gt;$Package::VERSION&lt;/code&gt; . El paquete que est&amp;aacute; viendo podr&amp;iacute;a haber anulado el m&amp;eacute;todo &lt;code&gt;VERSION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3584759389d1a5c9463e1916b5f8cba299128724" translate="yes" xml:space="preserve">
          <source>We said that references spring into existence as necessary if they are undefined, but we didn't say what happens if a value used as a reference is already defined, but</source>
          <target state="translated">Dijimos que las referencias surgen como necesarias si no están definidas,pero no dijimos qué sucede si un valor utilizado como referencia ya está definido,pero</target>
        </trans-unit>
        <trans-unit id="f1e706dab14e9082a067c69407d520e37d14c840" translate="yes" xml:space="preserve">
          <source>We saw in the section above that there were ordinary characters, which represented themselves, and special characters, which needed a backslash &lt;code&gt;\&lt;/code&gt; to represent themselves. The same is true in a character class, but the sets of ordinary and special characters inside a character class are different than those outside a character class. The special characters for a character class are &lt;code&gt;-]\^$&lt;/code&gt; (and the pattern delimiter, whatever it is). &lt;code&gt;]&lt;/code&gt; is special because it denotes the end of a character class. &lt;code&gt;$&lt;/code&gt; is special because it denotes a scalar variable. &lt;code&gt;\&lt;/code&gt; is special because it is used in escape sequences, just like above. Here is how the special characters &lt;code&gt;]$\&lt;/code&gt; are handled:</source>
          <target state="translated">Vimos en la secci&amp;oacute;n anterior que hab&amp;iacute;a caracteres ordinarios, que se representaban a s&amp;iacute; mismos, y caracteres especiales, que necesitaban una barra invertida &lt;code&gt;\&lt;/code&gt; para representarse a s&amp;iacute; mismos. Lo mismo ocurre en una clase de caracteres, pero los conjuntos de caracteres ordinarios y especiales dentro de una clase de caracteres son diferentes a los que est&amp;aacute;n fuera de una clase de caracteres. Los caracteres especiales para una clase de caracteres son &lt;code&gt;-]\^$&lt;/code&gt; (y el delimitador de patr&amp;oacute;n, cualquiera que sea). &lt;code&gt;]&lt;/code&gt; es especial porque denota el final de una clase de caracteres. &lt;code&gt;$&lt;/code&gt; es especial porque denota una variable escalar. &lt;code&gt;\&lt;/code&gt; es especial porque se usa en secuencias de escape, como arriba. As&amp;iacute; es como se manejan los caracteres especiales &lt;code&gt;]$\&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="91ab61be245cfbe060001be5799707fcb012f47d" translate="yes" xml:space="preserve">
          <source>We saw that the norm of &lt;code&gt;z&lt;/code&gt; was noted &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs(z)&lt;/a&gt;&lt;/code&gt; and was defined as the distance to the origin, also known as:</source>
          <target state="translated">Vimos que la norma de &lt;code&gt;z&lt;/code&gt; se anot&amp;oacute; &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs(z)&lt;/a&gt;&lt;/code&gt; y se defini&amp;oacute; como la distancia al origen, tambi&amp;eacute;n conocida como:</target>
        </trans-unit>
        <trans-unit id="08920844359a9b99eec6c4ed6a36e0f532af1cca" translate="yes" xml:space="preserve">
          <source>We show the &quot;put&quot; form of the accessors below (i.e., the syntax you use for setting the accessor to a specific value). But you can also call each method with no parameters to get its current value. For example, &lt;code&gt;$self-&amp;gt;contents_file()&lt;/code&gt; returns the current value of the contents_file attribute.</source>
          <target state="translated">A continuaci&amp;oacute;n, mostramos la forma &quot;poner&quot; de los descriptores de acceso (es decir, la sintaxis que utiliza para configurar el descriptor de acceso en un valor espec&amp;iacute;fico). Pero tambi&amp;eacute;n puede llamar a cada m&amp;eacute;todo sin par&amp;aacute;metros para obtener su valor actual. Por ejemplo, &lt;code&gt;$self-&amp;gt;contents_file()&lt;/code&gt; devuelve el valor actual del atributo content_file.</target>
        </trans-unit>
        <trans-unit id="d711adc8921158fc2754824f56564036d9f3cc37" translate="yes" xml:space="preserve">
          <source>We specify a local port in the &lt;code&gt;LocalPort&lt;/code&gt; argument, which we didn't do for the client. This is service name or port number for which you want to be the server. (Under Unix, ports under 1024 are restricted to the superuser.) In our sample, we'll use port 9000, but you can use any port that's not currently in use on your system. If you try to use one already in used, you'll get an &quot;Address already in use&quot; message. Under Unix, the &lt;code&gt;netstat -a&lt;/code&gt; command will show which services current have servers.</source>
          <target state="translated">Especificamos un puerto local en el argumento &lt;code&gt;LocalPort&lt;/code&gt; , lo que no hicimos para el cliente. Este es el nombre del servicio o el n&amp;uacute;mero de puerto para el que desea ser el servidor. (En Unix, los puertos por debajo de 1024 est&amp;aacute;n restringidos al superusuario). En nuestro ejemplo, usaremos el puerto 9000, pero puede usar cualquier puerto que no est&amp;eacute; actualmente en uso en su sistema. Si intenta utilizar uno que ya est&amp;aacute; en uso, obtendr&amp;aacute; un mensaje de &quot;Direcci&amp;oacute;n ya en uso&quot;. En Unix, el comando &lt;code&gt;netstat -a&lt;/code&gt; mostrar&amp;aacute; qu&amp;eacute; servicios tienen servidores actualmente.</target>
        </trans-unit>
        <trans-unit id="d2e82c57891dd489170077bbfa6bd5d7eef124d7" translate="yes" xml:space="preserve">
          <source>We still got a few errors during &lt;code&gt;make test&lt;/code&gt; . Some of them are the result of using bison. Bison prints</source>
          <target state="translated">Todav&amp;iacute;a tenemos algunos errores durante la &lt;code&gt;make test&lt;/code&gt; . Algunos de ellos son el resultado del uso de bisontes. Impresiones de bisontes</target>
        </trans-unit>
        <trans-unit id="5d27fd099f66e666f815d6a063eb846b9d1e750a" translate="yes" xml:space="preserve">
          <source>We still use the normal yacc for a2p.y though!!! We made a softlink called byacc to distinguish between the two versions:</source>
          <target state="translated">¡¡Todavía usamos el yacc normal para a2p.y sin embargo!! Hicimos un enlace suave llamado byacc para distinguir entre las dos versiones:</target>
        </trans-unit>
        <trans-unit id="f7a01cac535c65877c2cb721bb86383129124455" translate="yes" xml:space="preserve">
          <source>We strongly recommend that you use git if possible. It will make your life easier, and ours as well.</source>
          <target state="translated">Le recomendamos encarecidamente que use git si es posible.Hará tu vida más fácil,y la nuestra también.</target>
        </trans-unit>
        <trans-unit id="c1224f92134a2160e75f8a1e63e0730529cc456d" translate="yes" xml:space="preserve">
          <source>We strongly recommend that you use one of these systems. Even the most minimal of them eliminates a lot of repetitive boilerplate. There's really no good reason to write your classes from scratch in Perl.</source>
          <target state="translated">Le recomendamos encarecidamente que utilice uno de estos sistemas.Incluso el más mínimo de ellos elimina una gran cantidad de repeticiones.Realmente no hay una buena razón para escribir sus clases desde cero en Perl.</target>
        </trans-unit>
        <trans-unit id="5f4fa8e578a8c0a7391c3d072ae8a1a053f0a384" translate="yes" xml:space="preserve">
          <source>We tend to avoid this term because it means so many things. It may mean a command-line &lt;b&gt;switch&lt;/b&gt; that takes no argument itself (such as Perl&amp;rsquo;s &lt;code&gt;&amp;ndash;n&lt;/code&gt; and &lt;code&gt;&amp;ndash;p&lt;/code&gt; flags) or, less frequently, a single-bit indicator (such as the &lt;code&gt;O_CREAT&lt;/code&gt; and &lt;code&gt;O_EXCL&lt;/code&gt; flags used in &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;). Sometimes informally used to refer to certain regex modifiers.</source>
          <target state="translated">Tendemos a evitar este t&amp;eacute;rmino porque significa muchas cosas. Puede significar una l&amp;iacute;nea de comandos &lt;b&gt;interruptor&lt;/b&gt; que lleva ning&amp;uacute;n argumento en s&amp;iacute; (por ejemplo, de Perl &lt;code&gt;&amp;ndash;n&lt;/code&gt; y &lt;code&gt;&amp;ndash;p&lt;/code&gt; banderas) o, menos frecuentemente, un indicador de un bit (como los &lt;code&gt;O_CREAT&lt;/code&gt; y &lt;code&gt;O_EXCL&lt;/code&gt; banderas utilizadas en &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; ). A veces se usa informalmente para referirse a ciertos modificadores de expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="8a3b4e98c264bb32d9998c5d96e9cb12719e9b31" translate="yes" xml:space="preserve">
          <source>We then do (always a good idea) a syntax check before we try to run it again:</source>
          <target state="translated">Entonces hacemos (siempre es una buena idea)un chequeo de sintaxis antes de intentar ejecutarlo de nuevo:</target>
        </trans-unit>
        <trans-unit id="a54d539385035f7d9714e68587e437b9e809a0a4" translate="yes" xml:space="preserve">
          <source>We use the term &quot;nearly&quot;, because &lt;code&gt;:not_characters&lt;/code&gt; also turns on &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; within its scope. This form is less useful in v5.20 and later, and is described fully in &lt;a href=&quot;#Unicode-and-UTF-8&quot;&gt;Unicode and UTF-8&lt;/a&gt;, but briefly, it tells Perl to not use the character portions of the locale definition, that is the &lt;code&gt;LC_CTYPE&lt;/code&gt; and &lt;code&gt;LC_COLLATE&lt;/code&gt; categories. Instead it will use the native character set (extended by Unicode). When using this parameter, you are responsible for getting the external character set translated into the native/Unicode one (which it already will be if it is one of the increasingly popular UTF-8 locales). There are convenient ways of doing this, as described in &lt;a href=&quot;#Unicode-and-UTF-8&quot;&gt;Unicode and UTF-8&lt;/a&gt;.</source>
          <target state="translated">Usamos el t&amp;eacute;rmino &quot;casi&quot;, porque &lt;code&gt;:not_characters&lt;/code&gt; tambi&amp;eacute;n activa la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'unicode_strings' dentro de su alcance. Esta forma es menos &amp;uacute;til en v5.20 y posteriores, y se describe completamente en &lt;a href=&quot;#Unicode-and-UTF-8&quot;&gt;Unicode y UTF-8&lt;/a&gt; , pero brevemente, le dice a Perl que no use las partes de caracteres de la definici&amp;oacute;n de configuraci&amp;oacute;n regional, es &lt;code&gt;LC_COLLATE&lt;/code&gt; categor&amp;iacute;as &lt;code&gt;LC_CTYPE&lt;/code&gt; y LC_COLLATE . En su lugar, utilizar&amp;aacute; el juego de caracteres nativo (ampliado por Unicode). Al usar este par&amp;aacute;metro, usted es responsable de traducir el juego de caracteres externos al nativo / Unicode (que ya ser&amp;aacute; si es una de las configuraciones regionales UTF-8 cada vez m&amp;aacute;s populares). Hay formas convenientes de hacer esto, como se describe en &lt;a href=&quot;#Unicode-and-UTF-8&quot;&gt;Unicode y UTF-8&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d72bbd81e111127cc31735e5170b3d3ebdc6c5df" translate="yes" xml:space="preserve">
          <source>We used version 1.2.4, which could be installed out of the box with one failure during 'make check'.</source>
          <target state="translated">Usamos la versión 1.2.4,que pudo ser instalada fuera de la caja con un fallo durante el &quot;make check&quot;.</target>
        </trans-unit>
        <trans-unit id="aff45f6c939582aab469b75158efc5869d3a2fcf" translate="yes" xml:space="preserve">
          <source>We want to be able to catch the</source>
          <target state="translated">Queremos ser capaces de atrapar al</target>
        </trans-unit>
        <trans-unit id="da129d4b3f31bc7e0cab0dd659997b6d3ef9282c" translate="yes" xml:space="preserve">
          <source>We want to ensure that Perl continues to grow and flourish in the coming years and decades, but not at the expense of our user community.</source>
          <target state="translated">Queremos asegurarnos de que el Perl siga creciendo y floreciendo en los próximos años y décadas,pero no a expensas de nuestra comunidad de usuarios.</target>
        </trans-unit>
        <trans-unit id="7602b11fb920ddd30994aa4313930abda93469a9" translate="yes" xml:space="preserve">
          <source>We wanted list context, so G_ARRAY was used.</source>
          <target state="translated">Queríamos una lista de contexto,así que se usó G_ARRAY.</target>
        </trans-unit>
        <trans-unit id="3134ffe8598077df7a151748c12e387529c7d2bc" translate="yes" xml:space="preserve">
          <source>We will be calling the test script through the command &quot;&lt;code&gt;make test&lt;/code&gt; &quot;. You should see output that looks something like this:</source>
          <target state="translated">Llamaremos al script de prueba a trav&amp;eacute;s del comando &quot; &lt;code&gt;make test&lt;/code&gt; &quot;. Deber&amp;iacute;a ver una salida que se parece a esto:</target>
        </trans-unit>
        <trans-unit id="0a6f3f09fa5bfb41f8f72f761c01531e59969f1d" translate="yes" xml:space="preserve">
          <source>We will not provide security updates or bug fixes for development releases of Perl.</source>
          <target state="translated">No proporcionaremos actualizaciones de seguridad o correcciones de errores para las versiones de desarrollo de Perl.</target>
        </trans-unit>
        <trans-unit id="788212053c8b040e14cd53eba253eacd9f8cbdce" translate="yes" xml:space="preserve">
          <source>We will now create the main top-level Mytest2 files. Change to the directory above Mytest2 and run the following command:</source>
          <target state="translated">Ahora crearemos los principales archivos de alto nivel de Mytest2.Cambie al directorio sobre Mytest2 y ejecute el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="d22caa360403eba16e21b51e9ea68e688fb5cc28" translate="yes" xml:space="preserve">
          <source>We would all love to unmake some mistakes we've made over the past decades. Living with every design error we've ever made can lead to painful stagnation. Unwinding our mistakes is very, very difficult. Doing so without actively harming our users is nearly impossible.</source>
          <target state="translated">A todos nos encantaría deshacer algunos errores que hemos cometido en las últimas décadas.Vivir con cada error de diseño que hemos hecho puede llevarnos a un doloroso estancamiento.Desenvolver nuestros errores es muy,muy difícil.Hacerlo sin dañar activamente a nuestros usuarios es casi imposible.</target>
        </trans-unit>
        <trans-unit id="461ccef8111ec963260713b6b25723c4d738d9a8" translate="yes" xml:space="preserve">
          <source>We'll come back to this city-country problem later, after we've seen some syntax for managing references.</source>
          <target state="translated">Volveremos a este problema de la ciudad-campo más tarde,después de que hayamos visto alguna sintaxis para el manejo de las referencias.</target>
        </trans-unit>
        <trans-unit id="7cbf9f8ec2dcbf019622a935f28d55742617ea78" translate="yes" xml:space="preserve">
          <source>We'll get to the meaning of those Perlish-looking variables in a little bit.</source>
          <target state="translated">Llegaremos al significado de esas variables de aspecto perlista dentro de un rato.</target>
        </trans-unit>
        <trans-unit id="ccbe83524a5012d45f354f697c95fa9a1eb5367f" translate="yes" xml:space="preserve">
          <source>We'll have another string pointer in there:</source>
          <target state="translated">Tendremos otro puntero de cuerda ahí:</target>
        </trans-unit>
        <trans-unit id="5672edbff82e9ae33e95bbfe34109b2db08b3398" translate="yes" xml:space="preserve">
          <source>We'll look at output first. Supposing we already have this structure, how do we print it out?</source>
          <target state="translated">Primero miraremos la salida.Suponiendo que ya tenemos esta estructura,¿cómo la imprimimos?</target>
        </trans-unit>
        <trans-unit id="8801992116fa36a8b481455c1f17fda02ba0a864" translate="yes" xml:space="preserve">
          <source>We'll see a more tricky example of this when we consider Perl's macros below. &lt;code&gt;POPn&lt;/code&gt; gives you the NV (floating point value) of the top SV on the stack: the &lt;code&gt;$x&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos($x)&lt;/a&gt;&lt;/code&gt;. Then we compute the cosine, and push the result back as an NV. The &lt;code&gt;X&lt;/code&gt; in &lt;code&gt;XPUSHn&lt;/code&gt; means that the stack should be extended if necessary - it can't be necessary here, because we know there's room for one more item on the stack, since we've just removed one! The &lt;code&gt;XPUSH*&lt;/code&gt; macros at least guarantee safety.</source>
          <target state="translated">Veremos un ejemplo m&amp;aacute;s complicado de esto cuando consideremos las macros de Perl a continuaci&amp;oacute;n. &lt;code&gt;POPn&lt;/code&gt; le da el NV (valor de punto flotante) del SV superior en la pila: el &lt;code&gt;$x&lt;/code&gt; en &lt;code&gt;&lt;a href=&quot;functions/cos&quot;&gt;cos($x)&lt;/a&gt;&lt;/code&gt; . Luego calculamos el coseno y enviamos el resultado como un NV. La &lt;code&gt;X&lt;/code&gt; en &lt;code&gt;XPUSHn&lt;/code&gt; significa que la pila debe extenderse si es necesario; no puede ser necesario aqu&amp;iacute;, porque sabemos que hay espacio para un elemento m&amp;aacute;s en la pila, &amp;iexcl;ya que acabamos de eliminar uno! Las macros &lt;code&gt;XPUSH*&lt;/code&gt; garantizan al menos la seguridad.</target>
        </trans-unit>
        <trans-unit id="b55bbd57ee31a3c27c5821f6c991f3bb8fbebc65" translate="yes" xml:space="preserve">
          <source>We'll simply continue down to our pre-set breakpoint with a '&lt;b&gt;c&lt;/b&gt;':</source>
          <target state="translated">Simplemente continuaremos hasta nuestro punto de interrupci&amp;oacute;n preestablecido con una ' &lt;b&gt;c&lt;/b&gt; ':</target>
        </trans-unit>
        <trans-unit id="a9a2d405fbc50682e1a3c2bf95879ebe85538d93" translate="yes" xml:space="preserve">
          <source>We'll use &lt;code&gt;gdb&lt;/code&gt; for our examples here; the principles will apply to any debugger (many vendors call their debugger &lt;code&gt;dbx&lt;/code&gt; ), but check the manual of the one you're using.</source>
          <target state="translated">Usaremos &lt;code&gt;gdb&lt;/code&gt; para nuestros ejemplos aqu&amp;iacute;; los principios se aplicar&amp;aacute;n a cualquier depurador (muchos proveedores llaman a su depurador &lt;code&gt;dbx&lt;/code&gt; ), pero consulte el manual del que est&amp;aacute; utilizando.</target>
        </trans-unit>
        <trans-unit id="dd00180725dcce313c6ef1b86501c9848503c2c0" translate="yes" xml:space="preserve">
          <source>We'll use Jarkko Hietaniemi &amp;lt;</source>
          <target state="translated">Usaremos Jarkko Hietaniemi &amp;lt;</target>
        </trans-unit>
        <trans-unit id="f54f2656a6244346ba143809ce965c3e152258c1" translate="yes" xml:space="preserve">
          <source>We're Netware in addition to being Windows.</source>
          <target state="translated">Somos Netware además de ser Windows.</target>
        </trans-unit>
        <trans-unit id="89a6bcd8665abf52d39396f9fea984b5d7d01f5f" translate="yes" xml:space="preserve">
          <source>We're Unix and Cygwin.</source>
          <target state="translated">Somos Unix y Cygwin.</target>
        </trans-unit>
        <trans-unit id="bae7bf51fd64828a801e9cd04e2c5e1eac38f446" translate="yes" xml:space="preserve">
          <source>We're going to add two more items onto the argument stack: when you have a tied array, the &lt;code&gt;PUSH&lt;/code&gt; subroutine receives the object and the value to be pushed, and that's exactly what we have here - the tied object, retrieved with &lt;code&gt;SvTIED_obj&lt;/code&gt; , and the value, the SV &lt;code&gt;val&lt;/code&gt; .</source>
          <target state="translated">Vamos a agregar dos elementos m&amp;aacute;s a la pila de argumentos: cuando tiene una matriz vinculada, la subrutina &lt;code&gt;PUSH&lt;/code&gt; recibe el objeto y el valor que se va a insertar , y eso es exactamente lo que tenemos aqu&amp;iacute;: el objeto vinculado, recuperado con &lt;code&gt;SvTIED_obj&lt;/code&gt; , y el valor, el SV &lt;code&gt;val&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="982b2dd7e00a50956cc41a996392e78491465b29" translate="yes" xml:space="preserve">
          <source>We're going to primarily concentrate on Perl-only modules here, rather than XS modules. XS modules serve a rather different purpose, and you should consider different things before distributing them - the popularity of the library you are gluing, the portability to other operating systems, and so on. However, the notes on preparing the Perl side of the module and packaging and distributing it will apply equally well to an XS module as a pure-Perl one.</source>
          <target state="translated">Vamos a concentrarnos principalmente en los módulos de sólo Perl,en lugar de los módulos XS.Los módulos XS sirven a un propósito bastante diferente,y deberías considerar diferentes cosas antes de distribuirlos-la popularidad de la biblioteca que estás pegando,la portabilidad a otros sistemas operativos,y así sucesivamente.Sin embargo,las notas sobre la preparación del lado Perl del módulo y el empaquetado y distribución del mismo se aplicarán igual de bien a un módulo XS que a uno de Perl puro.</target>
        </trans-unit>
        <trans-unit id="34118bf3962978ee960cb834c23b6a7907e48ac6" translate="yes" xml:space="preserve">
          <source>We've already seen how to print to standard output using &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt;. However, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; can also take an optional first argument specifying which filehandle to print to:</source>
          <target state="translated">Ya hemos visto c&amp;oacute;mo imprimir en salida est&amp;aacute;ndar usando &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; . Sin embargo, &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n puede tomar un primer argumento opcional que especifique en qu&amp;eacute; identificador de archivo imprimir:</target>
        </trans-unit>
        <trans-unit id="01a8063bdaca09993ddd8d252b857fa09a430a49" translate="yes" xml:space="preserve">
          <source>We've also told Perl about the library that we built in the mylib subdirectory. That required only the addition of the &lt;code&gt;MYEXTLIB&lt;/code&gt; variable to the WriteMakefile call and the replacement of the postamble subroutine to cd into the subdirectory and run make. The Makefile.PL for the library is a bit more complicated, but not excessively so. Again we replaced the postamble subroutine to insert our own code. This code simply specified that the library to be created here was a static archive library (as opposed to a dynamically loadable library) and provided the commands to build it.</source>
          <target state="translated">Tambi&amp;eacute;n le hemos contado a Perl sobre la biblioteca que construimos en el subdirectorio mylib. Eso requiri&amp;oacute; solo la adici&amp;oacute;n de la variable &lt;code&gt;MYEXTLIB&lt;/code&gt; a la llamada WriteMakefile y el reemplazo de la subrutina postamble para cd en el subdirectorio y ejecutar make. El Makefile.PL para la biblioteca es un poco m&amp;aacute;s complicado, pero no excesivamente. Nuevamente reemplazamos la subrutina de post&amp;aacute;mbulo para insertar nuestro propio c&amp;oacute;digo. Este c&amp;oacute;digo simplemente especificaba que la biblioteca que se crear&amp;iacute;a aqu&amp;iacute; era una biblioteca de archivos est&amp;aacute;tica (a diferencia de una biblioteca cargable din&amp;aacute;micamente) y proporcion&amp;oacute; los comandos para construirla.</target>
        </trans-unit>
        <trans-unit id="6afd998315c2c6324bb813d112e9a8f30bf0d582" translate="yes" xml:space="preserve">
          <source>We've covered the workhorse parts of Perl's threading package, and with these tools you should be well on your way to writing threaded code and packages. There are a few useful little pieces that didn't really fit in anyplace else.</source>
          <target state="translated">Hemos cubierto las partes de trabajo del paquete de hilos de Perl,y con estas herramientas deberías estar bien encaminada para escribir código y paquetes de hilos.Hay algunas pequeñas piezas útiles que no encajaban en ningún otro lugar.</target>
        </trans-unit>
        <trans-unit id="b4d69ed91d0829df5cfa125f68b479f5de86f05f" translate="yes" xml:space="preserve">
          <source>We've gone past our check (where 'All OK' was printed) and have stopped just before the meat of our task. We could try to print out a couple of variables to see what is happening:</source>
          <target state="translated">Hemos pasado nuestro cheque (donde se imprimió &quot;Todo bien&quot;)y nos hemos detenido justo antes de la carne de nuestra tarea.Podríamos tratar de imprimir un par de variables para ver qué está pasando:</target>
        </trans-unit>
        <trans-unit id="33a66a35950ff295dc8b9c6a23c44bcace53edc3" translate="yes" xml:space="preserve">
          <source>We've had Larry's h2ph translator, which helped, but that only works on cpp symbols, not real C, which was also very much needed. What I offer you is a symbolic way of getting at all the C structures. I've couched them in terms of packages and functions. Consider the following program:</source>
          <target state="translated">Hemos tenido el traductor de h2ph de Larry,que ayudó,pero que sólo funciona con símbolos cpp,no con la C real,que también era muy necesaria.Lo que les ofrezco es una forma simbólica de llegar a todas las estructuras C.Las he formulado en términos de paquetes y funciones.Considere el siguiente programa:</target>
        </trans-unit>
        <trans-unit id="f3af9852bf7e4f70a4af9b26111fb8e3956f866b" translate="yes" xml:space="preserve">
          <source>We've made some changes to Makefile.PL. In this case, we've specified an extra library to be linked into the extension's shared library, the math library libm in this case. We'll talk later about how to write XSUBs that can call every routine in a library.</source>
          <target state="translated">Hemos hecho algunos cambios en Makefile.PL.En este caso,hemos especificado una biblioteca extra para ser enlazada a la biblioteca compartida de la extensión,la biblioteca de matemáticas libm en este caso.Hablaremos más tarde de cómo escribir XSUBs que puedan llamar a cada rutina de una biblioteca.</target>
        </trans-unit>
        <trans-unit id="a904b7cf0e87b370c484aeda4a3fd7921273c345" translate="yes" xml:space="preserve">
          <source>We've seen how to encourage good coding practices with &lt;b&gt;use strict&lt;/b&gt; and &lt;b&gt;-w&lt;/b&gt;. We can run the perl debugger &lt;b&gt;perl -d scriptname&lt;/b&gt; to inspect your data from within the perl debugger with the &lt;b&gt;p&lt;/b&gt; and &lt;b&gt;x&lt;/b&gt; commands. You can walk through your code, set breakpoints with &lt;b&gt;b&lt;/b&gt; and step through that code with &lt;b&gt;s&lt;/b&gt; or &lt;b&gt;n&lt;/b&gt;, continue with &lt;b&gt;c&lt;/b&gt; and return from a sub with &lt;b&gt;r&lt;/b&gt;. Fairly intuitive stuff when you get down to it.</source>
          <target state="translated">Hemos visto c&amp;oacute;mo fomentar las buenas pr&amp;aacute;cticas de codificaci&amp;oacute;n con el &lt;b&gt;uso estricto&lt;/b&gt; y &lt;b&gt;-w&lt;/b&gt; . Podemos ejecutar el depurador Perl &lt;b&gt;perl -d scriptname&lt;/b&gt; para inspeccionar sus datos desde dentro del depurador Perl con el &lt;b&gt;p&lt;/b&gt; y &lt;b&gt;x&lt;/b&gt; comandos. Puede recorrer su c&amp;oacute;digo, establecer puntos de interrupci&amp;oacute;n con &lt;b&gt;by&lt;/b&gt; recorrer ese c&amp;oacute;digo con &lt;b&gt;s&lt;/b&gt; o &lt;b&gt;n&lt;/b&gt; , continuar con &lt;b&gt;cy&lt;/b&gt; regresar de un sub con &lt;b&gt;r&lt;/b&gt; . Cosas bastante intuitivas cuando te pones manos a la obra.</target>
        </trans-unit>
        <trans-unit id="9f4aba3ac8d090b513bcacbad039797adbe73abe" translate="yes" xml:space="preserve">
          <source>We've taken some pains to construct the template so that it matches the contents of our frame buffer. Otherwise we'd either get undefined values, or &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; could not unpack all. If &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; runs out of items, it will supply null strings (which are coerced into zeroes whenever the pack code says so).</source>
          <target state="translated">Nos hemos esforzado en construir la plantilla para que coincida con el contenido de nuestro b&amp;uacute;fer de tramas. De lo contrario, obtendr&amp;iacute;amos valores indefinidos o &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; no podr&amp;iacute;a descomprimir todo. Si el &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; queda sin elementos, proporcionar&amp;aacute; cadenas nulas (que se convierten en ceros siempre que el c&amp;oacute;digo del paquete lo indique).</target>
        </trans-unit>
        <trans-unit id="37fc93f698eef77381e152ba1261b27e22014722" translate="yes" xml:space="preserve">
          <source>We've tried to make this also work with the TODO: syntax, but it's not guaranteed and its use is also discouraged:</source>
          <target state="translated">Hemos intentado que esto también funcione con la sintaxis TODO:pero no está garantizado y su uso también se desaconseja:</target>
        </trans-unit>
        <trans-unit id="d057d23b834db4b8d50936a9c8b48cc9bb56ac94" translate="yes" xml:space="preserve">
          <source>We've tried to minimize the dependence of Perl library modules on Unix syntax, but you may find that some of these, as well as some scripts written for Unix systems, will require that you use Unix syntax, since they will assume that '/' is the directory separator,</source>
          <target state="translated">Hemos tratado de minimizar la dependencia de los módulos de la biblioteca Perl de la sintaxis de Unix,pero es posible que algunos de ellos,así como algunos scripts escritos para sistemas Unix,requieran que se utilice la sintaxis de Unix,ya que asumirán que '/' es el separador de directorios,</target>
        </trans-unit>
        <trans-unit id="f63c6786d8c83343c69f80cf76418c3681700514" translate="yes" xml:space="preserve">
          <source>We've used a hash slice in order to easily handle the fields of each row. Storing the keys in an array makes it easy to operate on them as a group or loop over them with &lt;code&gt;for&lt;/code&gt; . It also avoids polluting the program with global variables and using symbolic references.</source>
          <target state="translated">Hemos utilizado un trozo de hash para manejar f&amp;aacute;cilmente los campos de cada fila. Almacenar las claves en una matriz hace que sea f&amp;aacute;cil operarlas en grupo o recorrerlas con &lt;code&gt;for&lt;/code&gt; . Tambi&amp;eacute;n evita contaminar el programa con variables globales y utilizar referencias simb&amp;oacute;licas.</target>
        </trans-unit>
        <trans-unit id="e147d82cb4cdd9e073d031a1a26cd0222dd868d0" translate="yes" xml:space="preserve">
          <source>Weaken a reference: set the &lt;code&gt;SvWEAKREF&lt;/code&gt; flag on this RV; give the referred-to SV &lt;code&gt;PERL_MAGIC_backref&lt;/code&gt; magic if it hasn't already; and push a back-reference to this RV onto the array of backreferences associated with that magic. If the RV is magical, set magic will be called after the RV is cleared.</source>
          <target state="translated">Debilitar una referencia: establezca la bandera &lt;code&gt;SvWEAKREF&lt;/code&gt; en este RV; dar la magia SV &lt;code&gt;PERL_MAGIC_backref&lt;/code&gt; referida si a&amp;uacute;n no lo ha hecho; y empujar una referencia inversa a este RV en la serie de referencias inversas asociadas con esa magia. Si el RV es m&amp;aacute;gico, se llamar&amp;aacute; a set magic despu&amp;eacute;s de que se despeje el RV.</target>
        </trans-unit>
        <trans-unit id="6f4b4063ed2668451305a4ea955df5abd08928f3" translate="yes" xml:space="preserve">
          <source>Weakrefs call uvar magic</source>
          <target state="translated">Los débiles llaman a la magia uvar</target>
        </trans-unit>
        <trans-unit id="a87a48da60ac110880ba420c176bfa3b966a1bbc" translate="yes" xml:space="preserve">
          <source>Websites</source>
          <target state="translated">Websites</target>
        </trans-unit>
        <trans-unit id="c46c01995b645fa6ced7ccd3bd695a2325cf2829" translate="yes" xml:space="preserve">
          <source>Weed out arguments that are not supported and warn about them to the user</source>
          <target state="translated">Descarta los argumentos que no están apoyados y advierte sobre ellos al usuario</target>
        </trans-unit>
        <trans-unit id="5ff64b425852808bfa9bcc07404d47fe62f5255b" translate="yes" xml:space="preserve">
          <source>Week Number</source>
          <target state="translated">Número de la semana</target>
        </trans-unit>
        <trans-unit id="e47cfca7176dccc849b8b9085335ec9965e39788" translate="yes" xml:space="preserve">
          <source>Weighting CJK Unified Ideographs</source>
          <target state="translated">Ponderando los Idearios Unificados de CJK</target>
        </trans-unit>
        <trans-unit id="6b33b573e9b7a7f05800470ad22d2691de1ad1d8" translate="yes" xml:space="preserve">
          <source>Weighting JIS KANJI for Unicode::Collate</source>
          <target state="translated">Ponderación de JIS KANJI para el Unicode::Compaginar</target>
        </trans-unit>
        <trans-unit id="b6757ec0e4d4ce4eae1496f199fc7aa0d085efea" translate="yes" xml:space="preserve">
          <source>Weighting may vary depending on collation element table. So ensure the weights defined in &lt;code&gt;entry&lt;/code&gt; will be consistent with those in the collation element table loaded via &lt;code&gt;table&lt;/code&gt; .</source>
          <target state="translated">La ponderaci&amp;oacute;n puede variar seg&amp;uacute;n la tabla de elementos de clasificaci&amp;oacute;n. Por lo tanto, aseg&amp;uacute;rese de que los pesos definidos en la &lt;code&gt;entry&lt;/code&gt; sean consistentes con los de la tabla de elementos de clasificaci&amp;oacute;n cargada a trav&amp;eacute;s de la &lt;code&gt;table&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b6bdfd154d71780792f4f6d415a46881c01b84f" translate="yes" xml:space="preserve">
          <source>Weights in reverse order; ex. level 2 (diacritic ordering) in French. If omitted (or &lt;code&gt;$levelNumber&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;\@levelNumbers&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt; ), forwards at all the levels.</source>
          <target state="translated">Pesos en orden inverso; ex. nivel 2 (orden diacr&amp;iacute;tico) en franc&amp;eacute;s. Si se omite (o &lt;code&gt;$levelNumber&lt;/code&gt; es &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;\@levelNumbers&lt;/code&gt; es &lt;code&gt;[]&lt;/code&gt; ), se reenv&amp;iacute;a en todos los niveles.</target>
        </trans-unit>
        <trans-unit id="1ade9c702a20a6384a7a0b9552d289287a18c722" translate="yes" xml:space="preserve">
          <source>Well, apart from a bare &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; $fh&lt;/code&gt; , you shouldn't treat them specially. (The binmode is needed because otherwise Perl may convert line endings on Win32 systems.)</source>
          <target state="translated">Bueno, aparte de un &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; $fh&lt;/code&gt; , no deber&amp;iacute;as tratarlos especialmente. (El modo bin es necesario porque, de lo contrario, Perl puede convertir los finales de l&amp;iacute;nea en sistemas Win32).</target>
        </trans-unit>
        <trans-unit id="504ec4c7237da89364f87b2aad3291cf833f70a8" translate="yes" xml:space="preserve">
          <source>Well, having several executables dynamically linked to the same huge library has its advantages, but this would not substantiate the additional work to make it compile. The reason is the complicated-to-developers but very quick and convenient-to-users &quot;hard&quot; dynamic linking used by OS/2.</source>
          <target state="translated">Bueno,tener varios ejecutables enlazados dinámicamente a la misma enorme biblioteca tiene sus ventajas,pero esto no justificaría el trabajo adicional para hacerla compilar.La razón es la complicada pero muy rápida y conveniente vinculación dinámica &quot;dura&quot; para los usuarios utilizada por OS/2.</target>
        </trans-unit>
        <trans-unit id="b4bf2ee14e4e81fc05f1087aeed820b042b0028b" translate="yes" xml:space="preserve">
          <source>Well, if you can, upgrade to the most recent, but certainly &lt;code&gt;5.8.1&lt;/code&gt; or newer. The tutorial and FAQ assume the latest release.</source>
          <target state="translated">Bueno, si puede, actualice a la versi&amp;oacute;n m&amp;aacute;s reciente, pero ciertamente &lt;code&gt;5.8.1&lt;/code&gt; o m&amp;aacute;s reciente. El tutorial y las preguntas frecuentes asumen la &amp;uacute;ltima versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c922bdb3f23d6c5306883fe0bee806df01fe877f" translate="yes" xml:space="preserve">
          <source>Well, maybe not. Anyway, each op contains a function pointer, which stipulates the function which will actually carry out the operation. This function will return the next op in the sequence - this allows for things like &lt;code&gt;if&lt;/code&gt; which choose the next op dynamically at run time. The &lt;code&gt;PERL_ASYNC_CHECK&lt;/code&gt; makes sure that things like signals interrupt execution if required.</source>
          <target state="translated">Bueno, tal vez no. De todos modos, cada operaci&amp;oacute;n contiene un puntero de funci&amp;oacute;n, que estipula la funci&amp;oacute;n que realmente llevar&amp;aacute; a cabo la operaci&amp;oacute;n. Esta funci&amp;oacute;n devolver&amp;aacute; la siguiente operaci&amp;oacute;n en la secuencia; esto permite cosas como &lt;code&gt;if&lt;/code&gt; elige la siguiente operaci&amp;oacute;n din&amp;aacute;micamente en tiempo de ejecuci&amp;oacute;n. El &lt;code&gt;PERL_ASYNC_CHECK&lt;/code&gt; se asegura de que cosas como se&amp;ntilde;ales de interrupci&amp;oacute;n de ejecuci&amp;oacute;n si es necesario.</target>
        </trans-unit>
        <trans-unit id="fb7d8a35468fea02bd934ea87237f211894a5751" translate="yes" xml:space="preserve">
          <source>Well, nowadays Perl DLL should be usable from a differently compiled program too... If you can run Perl code from REXX scripts (see &lt;a href=&quot;http://search.cpan.org/perldoc/OS2::REXX&quot;&gt;OS2::REXX&lt;/a&gt;), then there are some other aspect of interaction which are overlooked by the current hackish code to support differently-compiled principal programs.</source>
          <target state="translated">Bueno, hoy en d&amp;iacute;a la DLL de Perl tambi&amp;eacute;n deber&amp;iacute;a ser utilizable desde un programa compilado de manera diferente ... Si puede ejecutar c&amp;oacute;digo Perl desde scripts REXX (ver &lt;a href=&quot;http://search.cpan.org/perldoc/OS2::REXX&quot;&gt;OS2 :: REXX&lt;/a&gt; ), entonces hay alg&amp;uacute;n otro aspecto de la interacci&amp;oacute;n que el c&amp;oacute;digo hackish actual pasa por alto para apoyar programas principales compilados de manera diferente.</target>
        </trans-unit>
        <trans-unit id="61cb10844d83ee77c0e38f0deaf6e76838a94cbb" translate="yes" xml:space="preserve">
          <source>Well, okay, not entirely like C's arrays, actually. C doesn't know how to grow its arrays on demand. Perl does.</source>
          <target state="translated">Bueno,vale,no del todo como las matrices de C,en realidad.C no sabe cómo hacer crecer sus matrices a pedido.Perl sí sabe.</target>
        </trans-unit>
        <trans-unit id="c4f3fa326a3af64f93426bcdac847f46a94f9b1b" translate="yes" xml:space="preserve">
          <source>Well, that's</source>
          <target state="translated">Bueno,eso es</target>
        </trans-unit>
        <trans-unit id="bf3871275db74807de50e10189deb9ba1201d5b4" translate="yes" xml:space="preserve">
          <source>Well, that's all fine if you want to send one command and get one answer, but what about setting up something fully interactive, somewhat like the way</source>
          <target state="translated">Bueno,todo eso está bien si quieres enviar un comando y obtener una respuesta,pero ¿qué hay de la creación de algo totalmente interactivo,algo así como la forma</target>
        </trans-unit>
        <trans-unit id="a4fcece5fae45fd55beac8d83dea4ffc7bb1546c" translate="yes" xml:space="preserve">
          <source>Well, that's because the rule is that on adjacent brackets only (whether square or curly), you are free to omit the pointer dereferencing arrow. But you cannot do so for the very first one if it's a scalar containing a reference, which means that $ref_to_AoA always needs it.</source>
          <target state="translated">Bueno,eso es porque la regla es que sólo en los paréntesis adyacentes (ya sean cuadrados o rizados),eres libre de omitir la flecha de derivación del puntero.Pero no puedes hacerlo para el primero si es un escalar que contiene una referencia,lo que significa que $ref_to_AoA siempre lo necesita.</target>
        </trans-unit>
        <trans-unit id="5937ea9ee293b2d54cd64fb9f3a778625f679e1c" translate="yes" xml:space="preserve">
          <source>Well, this isn't very easy to read, and using the helpful manual (&lt;b&gt;h h&lt;/b&gt;), the '&lt;b&gt;x&lt;/b&gt;' command looks promising:</source>
          <target state="translated">Bueno, esto no es muy f&amp;aacute;cil de leer, y usando el &amp;uacute;til manual ( &lt;b&gt;hh&lt;/b&gt; ), el comando ' &lt;b&gt;x&lt;/b&gt; ' parece prometedor:</target>
        </trans-unit>
        <trans-unit id="81775bcb15e4091e227d731dfdef1462a2bf3f2b" translate="yes" xml:space="preserve">
          <source>Well, you could keep them in sync, but there's no guarantee it will always hold on classes somebody else wrote. Besides, there is little to gain in doing so: a serializing hook could keep only one attribute of an object, which is probably not what should happen during a deep cloning of that same object.</source>
          <target state="translated">Bueno,podrías mantenerlos sincronizados,pero no hay garantía de que siempre se mantenga en las clases que alguien más escribió.Además,hay poco que ganar al hacerlo:un gancho de serialización podría mantener sólo un atributo de un objeto,que probablemente no es lo que debería ocurrir durante una clonación profunda de ese mismo objeto.</target>
        </trans-unit>
        <trans-unit id="c6c58c114eba15fa1fde6b56057cb927734327d9" translate="yes" xml:space="preserve">
          <source>What *is* Unicode, anyway?</source>
          <target state="translated">¿Qué es el Unicode,de todos modos?</target>
        </trans-unit>
        <trans-unit id="2948ac1effa2d43a9756f45e31fc4dfaf54b428e" translate="yes" xml:space="preserve">
          <source>What &lt;b&gt;is&lt;/b&gt; Unicode, anyway?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; &lt;b&gt;es&lt;/b&gt; Unicode, de todos modos?</target>
        </trans-unit>
        <trans-unit id="0c27997670ea19d058363ea936f9c5a132d90646" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; does</source>
          <target state="translated">Lo &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n hace</target>
        </trans-unit>
        <trans-unit id="828c569308e99c356a11f905449002a24faaf00f" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;\n&lt;/code&gt; represents depends on the type of file opened. It usually represents &lt;code&gt;\012&lt;/code&gt; but it could also be &lt;code&gt;\015&lt;/code&gt; , &lt;code&gt;\012&lt;/code&gt; , &lt;code&gt;\015\012&lt;/code&gt; , &lt;code&gt;\000&lt;/code&gt; , &lt;code&gt;\040&lt;/code&gt; , or nothing depending on the file organization and record format. The &lt;code&gt;VMS::Stdio&lt;/code&gt; module provides access to the special &lt;code&gt;fopen()&lt;/code&gt; requirements of files with unusual attributes on VMS.</source>
          <target state="translated">Lo que &lt;code&gt;\n&lt;/code&gt; representa depende del tipo de archivo abierto. Por lo general, representa &lt;code&gt;\012&lt;/code&gt; pero tambi&amp;eacute;n podr&amp;iacute;a ser &lt;code&gt;\015&lt;/code&gt; , &lt;code&gt;\012&lt;/code&gt; , &lt;code&gt;\015\012&lt;/code&gt; , &lt;code&gt;\000&lt;/code&gt; , &lt;code&gt;\040&lt;/code&gt; o nada, seg&amp;uacute;n la organizaci&amp;oacute;n del archivo y el formato de registro. El m&amp;oacute;dulo &lt;code&gt;VMS::Stdio&lt;/code&gt; proporciona acceso a los requisitos &lt;code&gt;fopen()&lt;/code&gt; especiales de archivos con atributos inusuales en VMS.</target>
        </trans-unit>
        <trans-unit id="fcc1cc41a80c328b4eb792743f378eba1c9a93d1" translate="yes" xml:space="preserve">
          <source>What &lt;code&gt;\p{Digit}&lt;/code&gt; means (and hence &lt;code&gt;\d&lt;/code&gt; except under the &lt;code&gt;/a&lt;/code&gt; modifier) is &lt;code&gt;\p{General_Category=Decimal_Number}&lt;/code&gt; , or synonymously, &lt;code&gt;\p{General_Category=Digit}&lt;/code&gt; . Starting with Unicode version 4.1, this is the same set of characters matched by &lt;code&gt;\p{Numeric_Type=Decimal}&lt;/code&gt; . But Unicode also has a different property with a similar name, &lt;code&gt;\p{Numeric_Type=Digit}&lt;/code&gt; , which matches a completely different set of characters. These characters are things such as &lt;code&gt;CIRCLED DIGIT ONE&lt;/code&gt; or subscripts, or are from writing systems that lack all ten digits.</source>
          <target state="translated">Lo que significa &lt;code&gt;\p{Digit}&lt;/code&gt; (y por lo tanto &lt;code&gt;\d&lt;/code&gt; excepto bajo el modificador &lt;code&gt;/a&lt;/code&gt; ) es &lt;code&gt;\p{General_Category=Decimal_Number}&lt;/code&gt; , o como sin&amp;oacute;nimo, &lt;code&gt;\p{General_Category=Digit}&lt;/code&gt; . A partir de la versi&amp;oacute;n 4.1 de Unicode, este es el mismo conjunto de caracteres que coincide con &lt;code&gt;\p{Numeric_Type=Decimal}&lt;/code&gt; . Pero Unicode tambi&amp;eacute;n tiene una propiedad diferente con un nombre similar, &lt;code&gt;\p{Numeric_Type=Digit}&lt;/code&gt; , que coincide con un conjunto de caracteres completamente diferente. Estos caracteres son cosas como &lt;code&gt;CIRCLED DIGIT ONE&lt;/code&gt; o sub&amp;iacute;ndices, o son de sistemas de escritura que carecen de los diez d&amp;iacute;gitos.</target>
        </trans-unit>
        <trans-unit id="1e45028df29a344ed3d5dcfe47d49eff1e4e5b3d" translate="yes" xml:space="preserve">
          <source>What Is A Thread Anyway?</source>
          <target state="translated">¿Qué es un hilo,de todos modos?</target>
        </trans-unit>
        <trans-unit id="9f3aa83a51cae6aa5da8eadacc3922153fc22ffe" translate="yes" xml:space="preserve">
          <source>What Not to Export</source>
          <target state="translated">Lo que no se debe exportar</target>
        </trans-unit>
        <trans-unit id="bcf1ef3ecb402df133384ad31b9f0ab2cd6f6d09" translate="yes" xml:space="preserve">
          <source>What Thread Am I In?</source>
          <target state="translated">¿En qué hilo estoy?</target>
        </trans-unit>
        <trans-unit id="bdf11c2c3fa2430fc36aec96902da89a7d6631c6" translate="yes" xml:space="preserve">
          <source>What Threads Are Running?</source>
          <target state="translated">¿Qué hilos están corriendo?</target>
        </trans-unit>
        <trans-unit id="4628ec6a65c6ef207e94ed239509a432eb2d40b1" translate="yes" xml:space="preserve">
          <source>What You See Is What You Get. Usually used when something that appears on the screen matches how it will eventually look, like Perl&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; declarations. Also used to mean the opposite of magic because everything works exactly as it appears, as in the three- argument form of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Lo que ves, es lo que tienes. Usualmente se usa cuando algo que aparece en la pantalla coincide con c&amp;oacute;mo se ver&amp;aacute; eventualmente, como las declaraciones de &lt;code&gt;&lt;a href=&quot;functions/format&quot;&gt;format&lt;/a&gt;&lt;/code&gt; o de Perl . Tambi&amp;eacute;n se usa para significar lo opuesto a magia porque todo funciona exactamente como aparece, como en la forma de tres argumentos de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71fba121999cf66c38da9b22673582805a4f1ef9" translate="yes" xml:space="preserve">
          <source>What a &lt;b&gt;process&lt;/b&gt; does when it has to wait for something: &amp;ldquo;My process blocked waiting for the disk.&amp;rdquo; As an unrelated noun, it refers to a large chunk of data, of a size that the &lt;b&gt;operating system&lt;/b&gt; likes to deal with (normally a power of 2 such as 512 or 8192). Typically refers to a chunk of data that&amp;rsquo;s coming from or going to a disk file.</source>
          <target state="translated">Qu&amp;eacute; hace un &lt;b&gt;proceso&lt;/b&gt; cuando tiene que esperar algo: &quot;Mi proceso se bloque&amp;oacute; esperando el disco&quot;. Como sustantivo no relacionado, se refiere a una gran cantidad de datos, de un tama&amp;ntilde;o con el que al &lt;b&gt;sistema operativo&lt;/b&gt; le gusta tratar (normalmente una potencia de 2, como 512 u 8192). Por lo general, se refiere a una parte de los datos que provienen o van a un archivo de disco.</target>
        </trans-unit>
        <trans-unit id="bc0f239768e941abba33a14d0c879853b4c42602" translate="yes" xml:space="preserve">
          <source>What about &lt;code&gt;pp_add&lt;/code&gt; , the function we examined earlier to implement the &lt;code&gt;+&lt;/code&gt; operator:</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa con &lt;code&gt;pp_add&lt;/code&gt; , la funci&amp;oacute;n que examinamos anteriormente para implementar el operador &lt;code&gt;+&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f06b49d955a9223ccdbf114f85c4f46fdc429b37" translate="yes" xml:space="preserve">
          <source>What about binary data, like images?</source>
          <target state="translated">¿Qué hay de los datos binarios,como las imágenes?</target>
        </trans-unit>
        <trans-unit id="904b144e4b71718e8b3ada176614f796ad653d66" translate="yes" xml:space="preserve">
          <source>What about read-write mode? You should probably pretend it doesn't exist, because opening text files in read-write mode is unlikely to do what you would like. See &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt; for details.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa con el modo de lectura y escritura? Probablemente deber&amp;iacute;a fingir que no existe, porque es poco probable que abrir archivos de texto en modo lectura-escritura haga lo que le gustar&amp;iacute;a. Consulte &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="a98ea247bf23a0f2706e40c287b52d50377a4b2f" translate="yes" xml:space="preserve">
          <source>What about the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; pragma?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa con el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; pragma?</target>
        </trans-unit>
        <trans-unit id="b08e1e06d029706420aa4cf6848aa2370810866c" translate="yes" xml:space="preserve">
          <source>What about the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding&lt;/code&gt; pragma?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa con el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding&lt;/code&gt; pragma?</target>
        </trans-unit>
        <trans-unit id="3887d9c889fae85aa71ceab4eb1a53b1a8af8aa5" translate="yes" xml:space="preserve">
          <source>What about the use bytes pragma?</source>
          <target state="translated">¿Qué pasa con el uso de bytes pragmáticos?</target>
        </trans-unit>
        <trans-unit id="77d5d80251afa9ef6da60c5e5fbcd215435339d8" translate="yes" xml:space="preserve">
          <source>What about the use encoding pragma?</source>
          <target state="translated">¿Qué hay del uso de la codificación pragmática?</target>
        </trans-unit>
        <trans-unit id="20f362258fa45c702309bd2513e61621aa1951d0" translate="yes" xml:space="preserve">
          <source>What are &lt;code&gt;decode_utf8&lt;/code&gt; and &lt;code&gt;encode_utf8&lt;/code&gt; ?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; son &lt;code&gt;decode_utf8&lt;/code&gt; y &lt;code&gt;encode_utf8&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="f5cae90cb4f341d083e0d8337510fe30e0b15640" translate="yes" xml:space="preserve">
          <source>What are Perl 4, Perl 5, or Perl 6?</source>
          <target state="translated">¿Qué son los Perl 4,Perl 5 o Perl 6?</target>
        </trans-unit>
        <trans-unit id="01965e32414f80a123a1d37d107d508fa4c75578" translate="yes" xml:space="preserve">
          <source>What are all these $@%&amp;amp;* punctuation signs, and how do I know when to use them?</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; son todos estos signos de puntuaci&amp;oacute;n $ @% &amp;amp; * y c&amp;oacute;mo s&amp;eacute; cu&amp;aacute;ndo usarlos?</target>
        </trans-unit>
        <trans-unit id="11092e508878fe9b88c670c816521fca7c847f2f" translate="yes" xml:space="preserve">
          <source>What are decode_utf8 and encode_utf8?</source>
          <target state="translated">¿Qué son decode_utf8 y encode_utf8?</target>
        </trans-unit>
        <trans-unit id="0a2a28ac7fb746402e9baa692599b97fb2da048e" translate="yes" xml:space="preserve">
          <source>What can you do with a reference once you have it? It's a scalar value, and we've seen that you can store it as a scalar and get it back again just like any scalar. There are just two more ways to use it:</source>
          <target state="translated">¿Qué puedes hacer con una referencia una vez que la tienes? Es un valor escalar,y hemos visto que puedes almacenarlo como un escalar y recuperarlo como cualquier escalar.Sólo hay dos formas más de usarlo:</target>
        </trans-unit>
        <trans-unit id="36be343f96dfd613d8c5cf587823d859ba4e947b" translate="yes" xml:space="preserve">
          <source>What character encodings does Perl support?</source>
          <target state="translated">¿Qué codificación de caracteres admite Perl?</target>
        </trans-unit>
        <trans-unit id="d6aa1873fd68eba0f41fb53a3f8a2033690a4a51" translate="yes" xml:space="preserve">
          <source>What do you really want to know? If you merely want to know if one of your filehandles is connected to a terminal, you can try the &lt;code&gt;-t&lt;/code&gt; file test:</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; es lo que realmente quieres saber? Si simplemente desea saber si uno de sus identificadores de archivo est&amp;aacute; conectado a una terminal, puede probar la prueba de archivo &lt;code&gt;-t&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1c337f8d590673be03d6eb277fa1a70849d518ac" translate="yes" xml:space="preserve">
          <source>What do you think &lt;code&gt;$x&lt;/code&gt; will be? The answer, unfortunately, is</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; crees que ser&amp;aacute; &lt;code&gt;$x&lt;/code&gt; ? La respuesta, lamentablemente, es</target>
        </trans-unit>
        <trans-unit id="72e224b443b5da69c66ac0a14f3f8175aa612a15" translate="yes" xml:space="preserve">
          <source>What does &quot;Bareword 'DB_File' not allowed&quot; mean?</source>
          <target state="translated">¿Qué significa &quot;Bareword 'DB_File' no está permitido&quot;?</target>
        </trans-unit>
        <trans-unit id="d0af16451ebfa2bdedb9044267c2bc5c148972de" translate="yes" xml:space="preserve">
          <source>What does &quot;Invalid Argument&quot; mean?</source>
          <target state="translated">¿Qué significa &quot;Argumento Inválido&quot;?</target>
        </trans-unit>
        <trans-unit id="f0a7abc8d37e669509493f3435ed1f9575fda404" translate="yes" xml:space="preserve">
          <source>What does &quot;bad interpreter&quot; mean?</source>
          <target state="translated">¿Qué significa &quot;mal intérprete&quot;?</target>
        </trans-unit>
        <trans-unit id="5e47776a0ddea1129634daa43d411c09b05f88dc" translate="yes" xml:space="preserve">
          <source>What does it mean that regexes are greedy? How can I get around it?</source>
          <target state="translated">¿Qué significa que los regexes son codiciosos? ¿Cómo puedo evitarlo?</target>
        </trans-unit>
        <trans-unit id="fad85491a61b1ab9b17396e45b64b419ab4c8e77" translate="yes" xml:space="preserve">
          <source>What does this mean for regexps? Well, regexp users don't need to know much about Perl's internal representation of strings. But they do need to know 1) how to represent Unicode characters in a regexp and 2) that a matching operation will treat the string to be searched as a sequence of characters, not bytes. The answer to 1) is that Unicode characters greater than &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(255)&lt;/a&gt;&lt;/code&gt; are represented using the &lt;code&gt;\x{&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;}&lt;/code&gt; notation, because \x hex (without curly braces) doesn't go further than 255. (Starting in Perl 5.14, if you're an octal fan, you can also use &lt;code&gt;\o{&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;}&lt;/code&gt; .)</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; significa esto para las expresiones regulares? Bueno, los usuarios de regexp no necesitan saber mucho sobre la representaci&amp;oacute;n interna de cadenas de Perl. Pero necesitan saber 1) c&amp;oacute;mo representar caracteres Unicode en una expresi&amp;oacute;n regular y 2) que una operaci&amp;oacute;n de coincidencia tratar&amp;aacute; la cadena que se buscar&amp;aacute; como una secuencia de caracteres, no como bytes. La respuesta a 1) es que los caracteres Unicode mayores que &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(255)&lt;/a&gt;&lt;/code&gt; se representan usando la notaci&amp;oacute;n &lt;code&gt;\x{&lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt;}&lt;/code&gt; , porque \ x hex (sin llaves) no va m&amp;aacute;s all&amp;aacute; de 255. (A partir de Perl 5.14, si eres un fan octal, tambi&amp;eacute;n puedes usar &lt;code&gt;\o{&lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt;}&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="0d60263af797b45d08166a1e2276365e53b9c7d0" translate="yes" xml:space="preserve">
          <source>What exact layers are in this default stack depends on a lot of things: your operating system, Perl version, Perl compile time configuration, and Perl runtime configuration. See &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;, &lt;a href=&quot;perlrun#PERLIO&quot;&gt;PERLIO in perlrun&lt;/a&gt;, and &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; for more information.</source>
          <target state="translated">Las capas exactas que hay en esta pila predeterminada dependen de muchas cosas: su sistema operativo, versi&amp;oacute;n de Perl, configuraci&amp;oacute;n de tiempo de compilaci&amp;oacute;n de Perl y configuraci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n de Perl. Consulte &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; , &lt;a href=&quot;perlrun#PERLIO&quot;&gt;PERLIO in perlrun&lt;/a&gt; y &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="07854a74e069ff620decff4308e92c81d6bd8098" translate="yes" xml:space="preserve">
          <source>What follows are the more advanced, less used, or sometimes esoteric capabilities of Perl regexps. In Part 2, we will assume you are comfortable with the basics and concentrate on the advanced features.</source>
          <target state="translated">Lo que sigue son las capacidades más avanzadas,menos utilizadas,o a veces esotéricas de Perl regexps.En la segunda parte,asumiremos que se siente cómodo con lo básico y se concentrará en las características avanzadas.</target>
        </trans-unit>
        <trans-unit id="565ee5d3831c954154cf4129999eb2ce193f0752" translate="yes" xml:space="preserve">
          <source>What follows is a detailed guide through these steps.</source>
          <target state="translated">Lo que sigue es una guía detallada de estos pasos.</target>
        </trans-unit>
        <trans-unit id="75d7e12868bcb8f2565578748be73375fac12333" translate="yes" xml:space="preserve">
          <source>What follows is a statement about artistic control, defined as the ability of authors of packages to guide the future of their code and maintain control over their work. It is a recognition that authors should have control over their work, and that it is a responsibility of the rest of the Perl community to ensure that they retain this control. It is an attempt to document the standards to which we, as Perl developers, intend to hold ourselves. It is an attempt to write down rough guidelines about the respect we owe each other as Perl developers.</source>
          <target state="translated">Lo que sigue es una declaración sobre el control artístico,definido como la capacidad de los autores de paquetes para guiar el futuro de su código y mantener el control sobre su trabajo.Es un reconocimiento de que los autores deben tener control sobre su trabajo,y que es responsabilidad del resto de la comunidad de Perl asegurarse de que mantienen este control.Es un intento de documentar los estándares a los que nosotros,como desarrolladores de Perl,pretendemos atenernos.Es un intento de escribir unas directrices generales sobre el respeto que nos debemos unos a otros como desarrolladores de Perl.</target>
        </trans-unit>
        <trans-unit id="374a8e110bb4c1d9c752734c71a27f6e3e497ea6" translate="yes" xml:space="preserve">
          <source>What follows is subject to change RSN.</source>
          <target state="translated">Lo que sigue está sujeto a cambios RSN.</target>
        </trans-unit>
        <trans-unit id="24917de591e0d7708ee26a13cd3362afc4f6c7c4" translate="yes" xml:space="preserve">
          <source>What formats output as a form feed. The default is &lt;code&gt;\f&lt;/code&gt; .</source>
          <target state="translated">Qu&amp;eacute; formatos se imprimen como formulario de alimentaci&amp;oacute;n. El valor predeterminado es &lt;code&gt;\f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d479059298a571f524af929b6aea396ec65a05e6" translate="yes" xml:space="preserve">
          <source>What gets returned depends on several factors:</source>
          <target state="translated">Lo que se devuelve depende de varios factores:</target>
        </trans-unit>
        <trans-unit id="8722b12ceccd8e92d99a716a04b297746411e5f8" translate="yes" xml:space="preserve">
          <source>What good is &lt;code&gt;\G&lt;/code&gt; in a regular expression?</source>
          <target state="translated">&amp;iquest;De qu&amp;eacute; sirve &lt;code&gt;\G&lt;/code&gt; en una expresi&amp;oacute;n regular?</target>
        </trans-unit>
        <trans-unit id="2f0a90d9f77866c3233e1aef1cc7a9560c6ec0c3" translate="yes" xml:space="preserve">
          <source>What good is \G in a regular expression?</source>
          <target state="translated">¿Qué tiene de bueno una expresión regular?</target>
        </trans-unit>
        <trans-unit id="ebf8dc71994cee4560964d904824ac92b27fed19" translate="yes" xml:space="preserve">
          <source>What happens if I add or remove keys from a hash while iterating over it?</source>
          <target state="translated">¿Qué pasa si añado o quito llaves de un hachís mientras iteramos sobre él?</target>
        </trans-unit>
        <trans-unit id="5b6c83c5563cf3fe722575d6dd30278f0a9d68bc" translate="yes" xml:space="preserve">
          <source>What has gone on?</source>
          <target state="translated">¿Qué ha pasado?</target>
        </trans-unit>
        <trans-unit id="148ce7ffb164566545434b0feef660c7bee4a489" translate="yes" xml:space="preserve">
          <source>What has happened here?</source>
          <target state="translated">¿Qué ha pasado aquí?</target>
        </trans-unit>
        <trans-unit id="21eec199e3d296f021d3cdb05af5afb550abb23b" translate="yes" xml:space="preserve">
          <source>What has happened is that &lt;code&gt;fred&lt;/code&gt; accesses the &lt;code&gt;@_&lt;/code&gt; array which belongs to &lt;code&gt;joe&lt;/code&gt; .</source>
          <target state="translated">Lo que ha sucedido es que &lt;code&gt;fred&lt;/code&gt; accede a la matriz &lt;code&gt;@_&lt;/code&gt; que pertenece a &lt;code&gt;joe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1061def72c9d3f6d8d9699c831f84918bba3a0be" translate="yes" xml:space="preserve">
          <source>What if I don't decode?</source>
          <target state="translated">¿Y si no lo descifro?</target>
        </trans-unit>
        <trans-unit id="edc0c9ac4aa8c7b7a3fb61b68506b87d3c69f4bc" translate="yes" xml:space="preserve">
          <source>What if I don't encode?</source>
          <target state="translated">¿Y si no codifico?</target>
        </trans-unit>
        <trans-unit id="0ddebc8779b4a58623bcc03eec19b9fd5bdcc57a" translate="yes" xml:space="preserve">
          <source>What if I don't know which encoding was used?</source>
          <target state="translated">¿Y si no sé qué codificación se utilizó?</target>
        </trans-unit>
        <trans-unit id="b012d213b447ce5a8b3e4b308232eb1a6c342960" translate="yes" xml:space="preserve">
          <source>What if my question isn't answered in the FAQ?</source>
          <target state="translated">¿Qué pasa si mi pregunta no se responde en el FAQ?</target>
        </trans-unit>
        <trans-unit id="30310a64f6e6f73114ef8ff5955e14d7deb5a4c5" translate="yes" xml:space="preserve">
          <source>What if the interface provided by the C callback doesn't contain a parameter which allows the file handle to Perl subroutine mapping? Say in the asynchronous i/o package, the callback function gets passed only the &lt;code&gt;buffer&lt;/code&gt; parameter like this</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa si la interfaz proporcionada por la devoluci&amp;oacute;n de llamada de C no contiene un par&amp;aacute;metro que permita el manejo del archivo a la asignaci&amp;oacute;n de subrutinas de Perl? Digamos que en el paquete de E / S asincr&amp;oacute;nico, la funci&amp;oacute;n de devoluci&amp;oacute;n de llamada se pasa solo el par&amp;aacute;metro de &lt;code&gt;buffer&lt;/code&gt; como este</target>
        </trans-unit>
        <trans-unit id="f9002d28fd7ee52f5e73c33c74a403efd3585ddf" translate="yes" xml:space="preserve">
          <source>What import does</source>
          <target state="translated">Lo que importa</target>
        </trans-unit>
        <trans-unit id="9281510e66c9b036bf0f2b1f98689d5dbd410309" translate="yes" xml:space="preserve">
          <source>What is &quot;the UTF8 flag&quot;?</source>
          <target state="translated">¿Qué es &quot;la bandera UTF8&quot;?</target>
        </trans-unit>
        <trans-unit id="48776d293c1cf7b50ee10897815e6e1c09782388" translate="yes" xml:space="preserve">
          <source>What is /o really for?</source>
          <target state="translated">¿Para qué es /o realmente?</target>
        </trans-unit>
        <trans-unit id="f799c97279ef39d3426ad309ad7dfc5a7d36fff1" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;/o&lt;/code&gt; really for?</source>
          <target state="translated">&amp;iquest;Para qu&amp;eacute; es realmente &lt;code&gt;/o&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="4da6343eb07811de611e2143a23a9e42def6f17c" translate="yes" xml:space="preserve">
          <source>What is C3?</source>
          <target state="translated">¿Qué es el C3?</target>
        </trans-unit>
        <trans-unit id="bda040c2e08659bcff6001c6dcad6149b2b71af9" translate="yes" xml:space="preserve">
          <source>What is Perl 6?</source>
          <target state="translated">¿Qué es el Perl 6?</target>
        </trans-unit>
        <trans-unit id="90e6903f9207d6b5637de9d9ec259575b1877362" translate="yes" xml:space="preserve">
          <source>What is Perl?</source>
          <target state="translated">¿Qué es Perl?</target>
        </trans-unit>
        <trans-unit id="79dc15d896921a5be3532940c7478220c26d76f5" translate="yes" xml:space="preserve">
          <source>What is Plack and PSGI?</source>
          <target state="translated">¿Qué es Plack y PSGI?</target>
        </trans-unit>
        <trans-unit id="387b2d5d4628ca2a97a160cf17017d26f2363e65" translate="yes" xml:space="preserve">
          <source>What is a &quot;wide character&quot;?</source>
          <target state="translated">¿Qué es un &quot;personaje amplio&quot;?</target>
        </trans-unit>
        <trans-unit id="6c07c0817bd40c0602c40f4eb163a577c33eb9e2" translate="yes" xml:space="preserve">
          <source>What is a 'record'? By default, the meaning is the same as for the &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; operator: It's a string terminated by &lt;code&gt;$/&lt;/code&gt; , which is probably &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . (Minor exception: on DOS and Win32 systems, a 'record' is a string terminated by &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; .) You may change the definition of &quot;record&quot; by supplying the &lt;code&gt;recsep&lt;/code&gt; option in the &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call:</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; es un 'r&amp;eacute;cord'? Por defecto, el significado es el mismo que para el operador &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; : es una cadena terminada en &lt;code&gt;$/&lt;/code&gt; , que probablemente sea &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . (Excepci&amp;oacute;n menor: en los sistemas DOS y Win32, un 'registro' es una cadena terminada por &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; .) Puede cambiar la definici&amp;oacute;n de &quot;registro&quot; proporcionando la opci&amp;oacute;n &lt;code&gt;recsep&lt;/code&gt; en la llamada de &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="41a841a9e9e59dbc901dca478a52731689558d70" translate="yes" xml:space="preserve">
          <source>What is a DBM Filter?</source>
          <target state="translated">¿Qué es un filtro DBM?</target>
        </trans-unit>
        <trans-unit id="75ea94c254fb7320b80e8d79c658d169412a3588" translate="yes" xml:space="preserve">
          <source>What is a JAPH?</source>
          <target state="translated">¿Qué es un JAPH?</target>
        </trans-unit>
        <trans-unit id="8e7e75800308f6339899e8db69308ae93f0337df" translate="yes" xml:space="preserve">
          <source>What is a regular expression engine?</source>
          <target state="translated">¿Qué es un motor de expresión regular?</target>
        </trans-unit>
        <trans-unit id="e7e08c44504e895661b69ab0d094008da5741e55" translate="yes" xml:space="preserve">
          <source>What is a regular expression? A regular expression is simply a string that describes a pattern. Patterns are in common use these days; examples are the patterns typed into a search engine to find web pages and the patterns used to list files in a directory, e.g., &lt;code&gt;ls *.txt&lt;/code&gt; or &lt;code&gt;dir *.*&lt;/code&gt;. In Perl, the patterns described by regular expressions are used to search strings, extract desired parts of strings, and to do search and replace operations.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; es una expresi&amp;oacute;n regular? Una expresi&amp;oacute;n regular es simplemente una cadena que describe un patr&amp;oacute;n. Los patrones son de uso com&amp;uacute;n en estos d&amp;iacute;as; los ejemplos son los patrones escritos en un motor de b&amp;uacute;squeda para encontrar p&amp;aacute;ginas web y los patrones usados ​​para listar archivos en un directorio, por ejemplo, &lt;code&gt;ls *.txt&lt;/code&gt; o &lt;code&gt;dir *.*&lt;/code&gt; . En Perl, los patrones descritos por expresiones regulares se utilizan para buscar cadenas, extraer las partes deseadas de cadenas y para realizar operaciones de b&amp;uacute;squeda y reemplazo.</target>
        </trans-unit>
        <trans-unit id="fc1f1924f0cab71521b063802ea721cd9de2bf43" translate="yes" xml:space="preserve">
          <source>What is an &quot;IV&quot;?</source>
          <target state="translated">¿Qué es una &quot;IV&quot;?</target>
        </trans-unit>
        <trans-unit id="8de138e681884a542d6a632e3d45af8060ecf685" translate="yes" xml:space="preserve">
          <source>What is meant here is unclear, as the &lt;code&gt;\N{...}&lt;/code&gt; escape is a sequence of code points, so this is made an error.</source>
          <target state="translated">Lo que se quiere decir aqu&amp;iacute; no est&amp;aacute; claro, ya que el escape &lt;code&gt;\N{...}&lt;/code&gt; es una secuencia de puntos de c&amp;oacute;digo, por lo que se trata de un error.</target>
        </trans-unit>
        <trans-unit id="7e4d744a0a34b3ed6f2bacfcf8917df2728b341f" translate="yes" xml:space="preserve">
          <source>What is much worse, some DLLs change the floating point flags when in _DLLInitTerm() (e.g.,</source>
          <target state="translated">Lo que es mucho peor,algunas DLLs cambian las banderas de punto flotante cuando en _DLLInitTerm()(por ejemplo,</target>
        </trans-unit>
        <trans-unit id="b80f71784676643cac72b04d16a86ddd2aad93c3" translate="yes" xml:space="preserve">
          <source>What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?</source>
          <target state="translated">¿Qué es perl.com? ¿Perl Mongers? ¿Pm.org? ¿Perl.org? ¿Cpan.org?</target>
        </trans-unit>
        <trans-unit id="b4511cf9900e620f3e5c53ed90d05dd1b6347288" translate="yes" xml:space="preserve">
          <source>What is socket.ph and where do I get it?</source>
          <target state="translated">¿Qué es socket.ph y dónde lo consigo?</target>
        </trans-unit>
        <trans-unit id="466ca1293cf697f510f855a869e855e56cd9f9c1" translate="yes" xml:space="preserve">
          <source>What is the difference between &quot;state&quot; subs and &quot;my&quot; subs? Each time that execution enters a block when &quot;my&quot; subs are declared, a new copy of each sub is created. &quot;State&quot; subroutines persist from one execution of the containing block to the next.</source>
          <target state="translated">¿Cuál es la diferencia entre &quot;estado&quot; subs y &quot;mi&quot; subs? Cada vez que la ejecución entra en un bloque cuando se declaran &quot;mis&quot; subs,se crea una nueva copia de cada subs.Las subrutinas &quot;state&quot; persisten de una ejecución del bloque que las contiene a la siguiente.</target>
        </trans-unit>
        <trans-unit id="fc949184376f42b77d53568413143ee5107891ea" translate="yes" xml:space="preserve">
          <source>What is the difference between $array[1] and @array[1]?</source>
          <target state="translated">¿Cuál es la diferencia entre $array[1]y @array[1]?</target>
        </trans-unit>
        <trans-unit id="e5e94a34863c5b06b0902ba29af6bbdd60a89b26" translate="yes" xml:space="preserve">
          <source>What is the difference between :encoding and :utf8?</source>
          <target state="translated">¿Cuál es la diferencia entre :codificación y :utf8?</target>
        </trans-unit>
        <trans-unit id="87b2e888c908f6842e557ad8d646535f8dd07500" translate="yes" xml:space="preserve">
          <source>What is the difference between &lt;code&gt;:encoding&lt;/code&gt; and &lt;code&gt;:utf8&lt;/code&gt; ?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la diferencia entre &lt;code&gt;:encoding&lt;/code&gt; y &lt;code&gt;:utf8&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="bdd9348a87a0e037c9116062611c030ca4d85da9" translate="yes" xml:space="preserve">
          <source>What is the difference between a list and an array?</source>
          <target state="translated">¿Cuál es la diferencia entre una lista y una matriz?</target>
        </trans-unit>
        <trans-unit id="aa2dc660c0cced5d46caea2cf443fe5e368244c8" translate="yes" xml:space="preserve">
          <source>What is this Perl statement all about? &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; is a simple double-quoted string. &lt;code&gt;World&lt;/code&gt; is the regular expression and the &lt;code&gt;//&lt;/code&gt; enclosing &lt;code&gt;/World/&lt;/code&gt; tells Perl to search a string for a match. The operator &lt;code&gt;=~&lt;/code&gt; associates the string with the regexp match and produces a true value if the regexp matched, or false if the regexp did not match. In our case, &lt;code&gt;World&lt;/code&gt; matches the second word in &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; , so the expression is true. Expressions like this are useful in conditionals:</source>
          <target state="translated">&amp;iquest;De qu&amp;eacute; se trata esta declaraci&amp;oacute;n de Perl? &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; es una cadena simple entre comillas dobles. &lt;code&gt;World&lt;/code&gt; es la expresi&amp;oacute;n regular y &lt;code&gt;//&lt;/code&gt; que encierra &lt;code&gt;/World/&lt;/code&gt; le dice a Perl que busque una cadena para encontrar una coincidencia. El operador &lt;code&gt;=~&lt;/code&gt; asocia la cadena con la expresi&amp;oacute;n regular coincidente y produce un valor verdadero si la expresi&amp;oacute;n regular coincide, o falso si la expresi&amp;oacute;n regular no coincide. En nuestro caso, &lt;code&gt;World&lt;/code&gt; coincide con la segunda palabra en &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; , por lo que la expresi&amp;oacute;n es verdadera. Expresiones como esta son &amp;uacute;tiles en condicionales:</target>
        </trans-unit>
        <trans-unit id="c9fb4cb8e09b50cfb90602035114712466d59042" translate="yes" xml:space="preserve">
          <source>What is variable suicide and how can I prevent it?</source>
          <target state="translated">¿Qué es el suicidio variable y cómo puedo prevenirlo?</target>
        </trans-unit>
        <trans-unit id="49ac75fc20864efd20e6c484dddbafd73db6a2e3" translate="yes" xml:space="preserve">
          <source>What is your favorite pager program?</source>
          <target state="translated">¿Cuál es tu programa de bíper favorito?</target>
        </trans-unit>
        <trans-unit id="fd63f60b8b6a48f0264ba03539d262e0388b66e2" translate="yes" xml:space="preserve">
          <source>What is your favorite shell?</source>
          <target state="translated">¿Cuál es tu concha favorita?</target>
        </trans-unit>
        <trans-unit id="f41b525bca416a73d68432b879e12cd6ce5cae2d" translate="yes" xml:space="preserve">
          <source>What kind of threads are Perl threads?</source>
          <target state="translated">¿Qué tipo de hilos son los hilos de Perl?</target>
        </trans-unit>
        <trans-unit id="523c42f572591f0bfb9eb624031ecf0ded9f0a2a" translate="yes" xml:space="preserve">
          <source>What library to use?</source>
          <target state="translated">¿Qué biblioteca usar?</target>
        </trans-unit>
        <trans-unit id="c9dcfd1a76d749e07495e332956ce4a77d52e8a9" translate="yes" xml:space="preserve">
          <source>What machines support Perl? Where do I get it?</source>
          <target state="translated">¿Qué máquinas apoyan a Perl? ¿Dónde lo consigo?</target>
        </trans-unit>
        <trans-unit id="602afa592af7887a3bffb104fc775a95a31125b0" translate="yes" xml:space="preserve">
          <source>What mailing lists are there for Perl?</source>
          <target state="translated">¿Qué listas de correo hay para Perl?</target>
        </trans-unit>
        <trans-unit id="4862bb3e93457f890d9e122c5362daa5b89c1284" translate="yes" xml:space="preserve">
          <source>What makes a method special is</source>
          <target state="translated">Lo que hace que un método sea especial es</target>
        </trans-unit>
        <trans-unit id="c65301b41224a5b616b4c8a04b46b840cdda0ef5" translate="yes" xml:space="preserve">
          <source>What makes all of this important is that the Exporter module uses glob aliasing as the import/export mechanism. Whether or not you can properly localize a variable that has been exported from a module depends on how it was exported:</source>
          <target state="translated">Lo que hace que todo esto sea importante es que el módulo de exportación utiliza el &quot;glob aliasing&quot; como mecanismo de importación/exportación.El hecho de que se pueda o no localizar correctamente una variable que ha sido exportada desde un módulo depende de cómo se haya exportado:</target>
        </trans-unit>
        <trans-unit id="8fb5a283f17d0d098d1490569f3aaeb90f52254c" translate="yes" xml:space="preserve">
          <source>What makes for a good patch?</source>
          <target state="translated">¿Qué es lo que hace a un buen parche?</target>
        </trans-unit>
        <trans-unit id="486e1e8fa6072821d31ad344e76845b470464a6d" translate="yes" xml:space="preserve">
          <source>What makes this pass interesting for perl developers is that some optimization may be performed on this pass. This is optimization by so-called &quot;check routines&quot;. The correspondence between node names and corresponding check routines is described in</source>
          <target state="translated">Lo que hace que este pase sea interesante para los desarrolladores de perl es que se puede realizar alguna optimización en este pase.Esta es la optimización por las llamadas &quot;rutinas de verificación&quot;.La correspondencia entre los nombres de los nodos y las correspondientes rutinas de comprobación se describe en</target>
        </trans-unit>
        <trans-unit id="7c3d71cb8c06e618edc314c89194f61b595a4c29" translate="yes" xml:space="preserve">
          <source>What modules and extensions are available for Perl? What is CPAN?</source>
          <target state="translated">¿Qué módulos y extensiones están disponibles para Perl? ¿Qué es el CPAN?</target>
        </trans-unit>
        <trans-unit id="709f8e1c07fc1fe28e0f229bb8ce88d468c08c8e" translate="yes" xml:space="preserve">
          <source>What modules shipped with versions of perl</source>
          <target state="translated">¿Qué módulos enviados con versiones de perl</target>
        </trans-unit>
        <trans-unit id="d5f3978619a4438d900606a19c92b7d1f8afc742" translate="yes" xml:space="preserve">
          <source>What regop is next?</source>
          <target state="translated">¿Qué regop es lo siguiente?</target>
        </trans-unit>
        <trans-unit id="88176d2562c5c584253c31b2148c8703789870d4" translate="yes" xml:space="preserve">
          <source>What seems a successful strategy is the combination of &lt;code&gt;reload
cpan&lt;/code&gt; and the debugging switches. Add a new debug statement while running in the shell and then issue a &lt;code&gt;reload cpan&lt;/code&gt; and see the new debugging messages immediately without losing the current context.</source>
          <target state="translated">Lo que parece una estrategia exitosa es la combinaci&amp;oacute;n de &lt;code&gt;reload cpan&lt;/code&gt; de recarga y los conmutadores de depuraci&amp;oacute;n. Agregue una nueva declaraci&amp;oacute;n de depuraci&amp;oacute;n mientras se ejecuta en el shell y luego emita un &lt;code&gt;reload cpan&lt;/code&gt; y vea los nuevos mensajes de depuraci&amp;oacute;n inmediatamente sin perder el contexto actual.</target>
        </trans-unit>
        <trans-unit id="494e70de221fde56713efc23ab1ca24064c718dc" translate="yes" xml:space="preserve">
          <source>What should I make into a module?</source>
          <target state="translated">¿Qué debo hacer en un módulo?</target>
        </trans-unit>
        <trans-unit id="0e5fb1910c7b0867ac71d8402069e7fbfc90bc05" translate="yes" xml:space="preserve">
          <source>What some helper &lt;b&gt;process&lt;/b&gt; did to transform the incoming data into a form more suitable for the current process. Often done with an incoming &lt;b&gt;pipe&lt;/b&gt;. See also &lt;b&gt;C preprocessor&lt;/b&gt;.</source>
          <target state="translated">Lo que hizo alg&amp;uacute;n &lt;b&gt;proceso&lt;/b&gt; auxiliar para transformar los datos entrantes en una forma m&amp;aacute;s adecuada para el proceso actual. A menudo se hace con una &lt;b&gt;tuber&amp;iacute;a&lt;/b&gt; entrante . V&amp;eacute;ase tambi&amp;eacute;n &lt;b&gt;C preprocesador&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="05edee69ab0b091485f39a349759f585c24e0340" translate="yes" xml:space="preserve">
          <source>What the program or function returns, if successful. This section can be omitted for programs whose precise exit codes aren't important, provided they return 0 on success and non-zero on failure as is standard. It should always be present for functions. For modules, it may be useful to summarize return values from the module interface here, or it may be more useful to discuss return values separately in the documentation of each function or method the module provides.</source>
          <target state="translated">Lo que el programa o la función devuelve,si tiene éxito.Esta sección puede omitirse en los programas cuyos códigos de salida precisos no son importantes,siempre que devuelvan 0 en caso de éxito y no cero en caso de fracaso como es habitual.Siempre debe estar presente para las funciones.En el caso de los módulos,puede ser útil resumir aquí los valores de retorno de la interfaz del módulo,o puede ser más útil discutir los valores de retorno por separado en la documentación de cada función o método que el módulo proporciona.</target>
        </trans-unit>
        <trans-unit id="b11685dda194db5e13d9f10a2284151cb724112f" translate="yes" xml:space="preserve">
          <source>What this does is creates a new binary op, and feeds it a number of variables. The variables refer to the tokens: &lt;code&gt;$1&lt;/code&gt; is the first token in the input, &lt;code&gt;$2&lt;/code&gt; the second, and so on - think regular expression backreferences. &lt;code&gt;$$&lt;/code&gt; is the op returned from this reduction. So, we call &lt;code&gt;newBINOP&lt;/code&gt; to create a new binary operator. The first parameter to &lt;code&gt;newBINOP&lt;/code&gt; , a function in</source>
          <target state="translated">Lo que hace es crear una nueva operaci&amp;oacute;n binaria y la alimenta con una serie de variables. Las variables se refieren a los tokens: &lt;code&gt;$1&lt;/code&gt; es el primer token en la entrada, &lt;code&gt;$2&lt;/code&gt; el segundo, y as&amp;iacute; sucesivamente; piense en las referencias inversas de expresiones regulares. &lt;code&gt;$$&lt;/code&gt; es la operaci&amp;oacute;n devuelta de esta reducci&amp;oacute;n. Entonces, llamamos a &lt;code&gt;newBINOP&lt;/code&gt; para crear un nuevo operador binario. El primer par&amp;aacute;metro de &lt;code&gt;newBINOP&lt;/code&gt; , una funci&amp;oacute;n en</target>
        </trans-unit>
        <trans-unit id="4cc8ecd0e95182504b6e5e23619c1654db502160" translate="yes" xml:space="preserve">
          <source>What this means is that if you have data written by Storable 1.x running on perl 5.6.0 or 5.6.1 configured with 64 bit integers on Unix or Linux then by default this Storable will refuse to read it, giving the error</source>
          <target state="translated">Lo que esto significa es que si usted tiene datos escritos por el Storable 1.x corriendo en perl 5.6.0 o 5.6.1 configurado con enteros de 64 bits en Unix o Linux entonces por defecto este Storable se negará a leerlo,dando el error</target>
        </trans-unit>
        <trans-unit id="c1074e9471d381d1e3fa377b4baeab5a37484773" translate="yes" xml:space="preserve">
          <source>What this means is that unless the &lt;code&gt;/a&lt;/code&gt; modifier is in effect &lt;code&gt;\d&lt;/code&gt; not only matches the digits '0' - '9', but also Arabic, Devanagari, and digits from other languages. This may cause some confusion, and some security issues.</source>
          <target state="translated">Lo que esto significa es que, a menos que el modificador &lt;code&gt;/a&lt;/code&gt; est&amp;eacute; en efecto, &lt;code&gt;\d&lt;/code&gt; no solo coincide con los d&amp;iacute;gitos '0' - '9', sino tambi&amp;eacute;n con el &amp;aacute;rabe, el devanagari y los d&amp;iacute;gitos de otros idiomas. Esto puede causar cierta confusi&amp;oacute;n y algunos problemas de seguridad.</target>
        </trans-unit>
        <trans-unit id="b90ef1b55a5f8c0ad6415f98413e6a092c07a530" translate="yes" xml:space="preserve">
          <source>What to put after &quot;1/crontab&quot; in the URL. This option is not set by default.</source>
          <target state="translated">Qué poner después de &quot;1/crontab&quot; en el URL.Esta opción no está configurada de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="616a4166af25f3f615ff259d316398355eca1fd7" translate="yes" xml:space="preserve">
          <source>What to put after &quot;Foo%3a%3aBar&quot; in the URL. This option is not set by default.</source>
          <target state="translated">Qué poner después de &quot;Foo%3a%3aBar&quot; en la URL.Esta opción no está establecida por defecto.</target>
        </trans-unit>
        <trans-unit id="774021bac19bdf5e083a7ddf41b218a869e89eea" translate="yes" xml:space="preserve">
          <source>What to put before and after the title in the head. The values should already be &amp;amp;-escaped.</source>
          <target state="translated">Qu&amp;eacute; poner antes y despu&amp;eacute;s del t&amp;iacute;tulo en la cabeza. Los valores ya deber&amp;iacute;an tener &amp;amp; -escaped.</target>
        </trans-unit>
        <trans-unit id="46d727439e117340febafb43135cffaac5ab87fa" translate="yes" xml:space="preserve">
          <source>What utilities shipped with versions of perl</source>
          <target state="translated">¿Qué utilidades se envían con las versiones de perl</target>
        </trans-unit>
        <trans-unit id="79f6137e22ba58dcead1d29483955dc880eaf485" translate="yes" xml:space="preserve">
          <source>What was in this chunk of memory? Numbers, characters, or a mixture of both? Assuming that we're on a computer where ASCII (or some similar) encoding is used: hexadecimal values in the range &lt;code&gt;0x40&lt;/code&gt; - &lt;code&gt;0x5A&lt;/code&gt; indicate an uppercase letter, and &lt;code&gt;0x20&lt;/code&gt; encodes a space. So we might assume it is a piece of text, which some are able to read like a tabloid; but others will have to get hold of an ASCII table and relive that firstgrader feeling. Not caring too much about which way to read this, we note that &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; with the template code &lt;code&gt;H&lt;/code&gt; converts the contents of a sequence of bytes into the customary hexadecimal notation. Since &quot;a sequence of&quot; is a pretty vague indication of quantity, &lt;code&gt;H&lt;/code&gt; has been defined to convert just a single hexadecimal digit unless it is followed by a repeat count. An asterisk for the repeat count means to use whatever remains.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; hab&amp;iacute;a en este trozo de memoria? &amp;iquest;N&amp;uacute;meros, caracteres o una mezcla de ambos? Suponiendo que estamos en una computadora donde se usa codificaci&amp;oacute;n ASCII (o algo similar): los valores hexadecimales en el rango &lt;code&gt;0x40&lt;/code&gt; - &lt;code&gt;0x5A&lt;/code&gt; indican una letra may&amp;uacute;scula y &lt;code&gt;0x20&lt;/code&gt; codifica un espacio. As&amp;iacute; que podr&amp;iacute;amos asumir que es un fragmento de texto, que algunos pueden leer como un tabloide; pero otros tendr&amp;aacute;n que hacerse con una tabla ASCII y revivir ese sentimiento de primer grado. Sin preocuparse demasiado por la forma de leer esto, observamos que &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; con el c&amp;oacute;digo de plantilla &lt;code&gt;H&lt;/code&gt; convierte el contenido de una secuencia de bytes en la notaci&amp;oacute;n hexadecimal habitual. Dado que &quot;una secuencia de&quot; es una indicaci&amp;oacute;n bastante vaga de la cantidad, &lt;code&gt;H&lt;/code&gt; se ha definido para convertir solo un d&amp;iacute;gito hexadecimal a menos que vaya seguido de un recuento repetido. Un asterisco para el recuento de repeticiones significa usar lo que quede.</target>
        </trans-unit>
        <trans-unit id="16a26aa5328e43e90f045fe86149fb674a158916" translate="yes" xml:space="preserve">
          <source>What we actually need to do is expand the width of the fields. The &lt;code&gt;A&lt;/code&gt; format pads any non-existent characters with spaces, so we can use the additional spaces to line up our fields, like this:</source>
          <target state="translated">Lo que realmente necesitamos hacer es expandir el ancho de los campos. El formato &lt;code&gt;A&lt;/code&gt; rellena los caracteres no existentes con espacios, por lo que podemos usar los espacios adicionales para alinear nuestros campos, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="0c37b176ea3009646e0be80ec6a53f25b8ff9dcd" translate="yes" xml:space="preserve">
          <source>What we have described so far is the single form of the &lt;code&gt;\p{...}&lt;/code&gt; character classes. There is also a compound form which you may run into. These look like &lt;code&gt;\p{name=value}&lt;/code&gt; or &lt;code&gt;\p{name:value}&lt;/code&gt; (the equals sign and colon can be used interchangeably). These are more general than the single form, and in fact most of the single forms are just Perl-defined shortcuts for common compound forms. For example, the script examples in the previous paragraph could be written equivalently as &lt;code&gt;\p{Script=Latin}&lt;/code&gt; , &lt;code&gt;\p{Script:Greek}&lt;/code&gt; , &lt;code&gt;\p{script=katakana}&lt;/code&gt; , and &lt;code&gt;\P{script=balinese}&lt;/code&gt; (case is irrelevant between the &lt;code&gt;{}&lt;/code&gt; braces). You may never have to use the compound forms, but sometimes it is necessary, and their use can make your code easier to understand.</source>
          <target state="translated">Lo que hemos descrito hasta ahora es la forma &amp;uacute;nica de las clases de caracteres &lt;code&gt;\p{...}&lt;/code&gt; . Tambi&amp;eacute;n hay una forma compuesta con la que puede encontrarse. Estos se ven como &lt;code&gt;\p{name=value}&lt;/code&gt; o &lt;code&gt;\p{name:value}&lt;/code&gt; (el signo igual y los dos puntos se pueden usar indistintamente). Estos son m&amp;aacute;s generales que la forma &amp;uacute;nica y, de hecho, la mayor&amp;iacute;a de las formas individuales son solo atajos definidos por Perl para formas compuestas comunes. Por ejemplo, los ejemplos de secuencias de comandos del p&amp;aacute;rrafo anterior podr&amp;iacute;an escribirse de forma equivalente como &lt;code&gt;\p{Script=Latin}&lt;/code&gt; , &lt;code&gt;\p{Script:Greek}&lt;/code&gt; , &lt;code&gt;\p{script=katakana}&lt;/code&gt; y &lt;code&gt;\P{script=balinese}&lt;/code&gt; (el caso es irrelevante entre &lt;code&gt;{}&lt;/code&gt; tirantes). Es posible que nunca tenga que usar las formas compuestas, pero a veces es necesario, y su uso puede hacer que su c&amp;oacute;digo sea m&amp;aacute;s f&amp;aacute;cil de entender.</target>
        </trans-unit>
        <trans-unit id="3384939add5296135f386c16a3d5a3c4d7477676" translate="yes" xml:space="preserve">
          <source>What you are told when someone thinks you should Read The Fine Manual.</source>
          <target state="translated">Lo que se te dice cuando alguien piensa que debes leer el Manual de Bellas Artes.</target>
        </trans-unit>
        <trans-unit id="5da1aaeac7913632bcb1c91e0e40a9b8f5b306d1" translate="yes" xml:space="preserve">
          <source>What you can do is calculate the MD5 checksum of the UTF-8 representation of such strings. This is achieved by filtering the string through encode_utf8() function:</source>
          <target state="translated">Lo que puedes hacer es calcular la suma de comprobación MD5 de la representación UTF-8 de tales cadenas.Esto se logra filtrando la cadena a través de la función encode_utf8():</target>
        </trans-unit>
        <trans-unit id="bdac7845b72b0a0aaba866c488e59de83492ce2f" translate="yes" xml:space="preserve">
          <source>What you get from your ancestors, genetically or otherwise. If you happen to be a &lt;b&gt;class&lt;/b&gt;, your ancestors are called &lt;b&gt;base classes&lt;/b&gt; and your descendants are called &lt;b&gt;derived classes&lt;/b&gt;. See &lt;b&gt;single inheritance&lt;/b&gt; and &lt;b&gt;multiple inheritance&lt;/b&gt;.</source>
          <target state="translated">Lo que obtienes de tus ancestros, gen&amp;eacute;ticamente o de otra manera. Si eres una &lt;b&gt;clase&lt;/b&gt; , tus antepasados ​​se denominan &lt;b&gt;clases base&lt;/b&gt; y tus descendientes se denominan &lt;b&gt;clases derivadas&lt;/b&gt; . Vea &lt;b&gt;herencia &amp;uacute;nica&lt;/b&gt; y &lt;b&gt;herencia m&amp;uacute;ltiple&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="2c06f68d01c975c0659982cd1d1ea555fe3696b9" translate="yes" xml:space="preserve">
          <source>What you get when you do &lt;code&gt;Perl++&lt;/code&gt; twice. Doing it only once will curl your hair. You have to increment it eight times to shampoo your hair. Lather, rinse, iterate.</source>
          <target state="translated">Lo que obtienes cuando haces &lt;code&gt;Perl++&lt;/code&gt; dos veces. Hacerlo solo una vez te rizar&amp;aacute; el cabello. Tienes que incrementarlo ocho veces para lavar tu cabello con champ&amp;uacute;. Enjabonar, enjuagar, iterar.</target>
        </trans-unit>
        <trans-unit id="d8dd19339629eae0964d65277b9af39d2d940ac8" translate="yes" xml:space="preserve">
          <source>What you probably want instead is this:</source>
          <target state="translated">Lo que probablemente quieras en su lugar es esto:</target>
        </trans-unit>
        <trans-unit id="b04bf6a0eeeb74b4ebb74c0ffdfd7f57764ab34f" translate="yes" xml:space="preserve">
          <source>What you want to use instead is:</source>
          <target state="translated">Lo que quieres usar en su lugar es:</target>
        </trans-unit>
        <trans-unit id="f3ca9a26fe44a59f17183be2ef23ecb124cf272f" translate="yes" xml:space="preserve">
          <source>What's MakeMaker?</source>
          <target state="translated">¿Qué es MakeMaker?</target>
        </trans-unit>
        <trans-unit id="42464d9de4a99557d583081f2fb3c257e19a8cfc" translate="yes" xml:space="preserve">
          <source>What's Really Stored in an SV?</source>
          <target state="translated">¿Qué se almacena realmente en un SV?</target>
        </trans-unit>
        <trans-unit id="8f84a94f1018dae65b2467147ba94f01d14ea50b" translate="yes" xml:space="preserve">
          <source>What's a closure?</source>
          <target state="translated">¿Qué es un cierre?</target>
        </trans-unit>
        <trans-unit id="a80aec1f19639cbbb28c71d9ddfac9f28b371cff" translate="yes" xml:space="preserve">
          <source>What's an extension?</source>
          <target state="translated">¿Qué es una extensión?</target>
        </trans-unit>
        <trans-unit id="96c69ba1e09918b49d4e34120c9bbb2d0968449e" translate="yes" xml:space="preserve">
          <source>What's in Plan 9 Perl</source>
          <target state="translated">¿Qué hay en el Plan 9 Perl?</target>
        </trans-unit>
        <trans-unit id="e9c4131b2629bb86dafeed8bcd2c9f6a25583f3a" translate="yes" xml:space="preserve">
          <source>What's in a name?</source>
          <target state="translated">¿Qué hay en un nombre?</target>
        </trans-unit>
        <trans-unit id="5131dc0eec6cff59e581098235ddc4625176b69a" translate="yes" xml:space="preserve">
          <source>What's new here?</source>
          <target state="translated">¿Qué hay de nuevo aquí?</target>
        </trans-unit>
        <trans-unit id="22ab29c1c9e23b6be4d152ca0fbe8d1fd5003e73" translate="yes" xml:space="preserve">
          <source>What's not in Plan 9 Perl</source>
          <target state="translated">Lo que no está en el Plan 9 Perl</target>
        </trans-unit>
        <trans-unit id="5d2b08ade1fd6cb20cb499440eecabb1a859edc0" translate="yes" xml:space="preserve">
          <source>What's that &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;? Well, the arguments to a subroutine are available to us as a special array called &lt;code&gt;@_&lt;/code&gt; (see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for more on that). The default argument to the &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; function just happens to be &lt;code&gt;@_&lt;/code&gt; . So &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $logmessage = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; shifts the first item off the list of arguments and assigns it to &lt;code&gt;$logmessage&lt;/code&gt; .</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; es ese &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; ? Bueno, los argumentos de una subrutina est&amp;aacute;n disponibles para nosotros como una matriz especial llamada &lt;code&gt;@_&lt;/code&gt; (ver &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; para m&amp;aacute;s informaci&amp;oacute;n). El argumento predeterminado de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;@_&lt;/code&gt; . Entonces &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $logmessage = &lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;;&lt;/code&gt; saca el primer elemento de la lista de argumentos y lo asigna a &lt;code&gt;$logmessage&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46db4fba6102cb384fdb3af284b14f9799d7a634" translate="yes" xml:space="preserve">
          <source>What's the difference between &quot;delete&quot; and &quot;undef&quot; with hashes?</source>
          <target state="translated">¿Cuál es la diferencia entre &quot;borrar&quot; y &quot;indefinir&quot; con hashes?</target>
        </trans-unit>
        <trans-unit id="efcfc0c915c5ced8aa18fe665d7a6bf921317ac3" translate="yes" xml:space="preserve">
          <source>What's the difference between &quot;perl&quot; and &quot;Perl&quot;?</source>
          <target state="translated">¿Cuál es la diferencia entre &quot;perl&quot; y &quot;Perl&quot;?</target>
        </trans-unit>
        <trans-unit id="63f076d778aa21d0e84626f4c5e0c5b8d663503c" translate="yes" xml:space="preserve">
          <source>What's the difference between &lt;code&gt;UTF-8&lt;/code&gt; and &lt;code&gt;utf8&lt;/code&gt; ?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la diferencia entre &lt;code&gt;UTF-8&lt;/code&gt; y &lt;code&gt;utf8&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="9c1cf1781cda10277aefd4a7483c6c07d76809d8" translate="yes" xml:space="preserve">
          <source>What's the difference between UTF-8 and utf8?</source>
          <target state="translated">¿Cuál es la diferencia entre UTF-8 y utf8?</target>
        </trans-unit>
        <trans-unit id="1a32eae97c19fcd8cd7ae50ba5b1fb91847cfda9" translate="yes" xml:space="preserve">
          <source>What's the difference between calling a function as &amp;amp;foo and foo()?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la diferencia entre llamar a una funci&amp;oacute;n como &amp;amp; foo y foo ()?</target>
        </trans-unit>
        <trans-unit id="def2247288e4f5204ba55472b4461e996492e2e7" translate="yes" xml:space="preserve">
          <source>What's the difference between deep and shallow binding?</source>
          <target state="translated">¿Cuál es la diferencia entre las ataduras profundas y las superficiales?</target>
        </trans-unit>
        <trans-unit id="95fdb9749f45655e65a25dc015c0a84e8ebabe59" translate="yes" xml:space="preserve">
          <source>What's the difference between dynamic and lexical (static) scoping? Between local() and my()?</source>
          <target state="translated">¿Cuál es la diferencia entre el alcance dinámico y léxico (estático)? ¿Entre local()y mi()?</target>
        </trans-unit>
        <trans-unit id="83bcf34d32fd45bb7e4990d1041e30347690cdee" translate="yes" xml:space="preserve">
          <source>What's the difference between require and use?</source>
          <target state="translated">¿Cuál es la diferencia entre requerir y usar?</target>
        </trans-unit>
        <trans-unit id="e20e3ec3698a540277cd6005030f3f2eae027cdc" translate="yes" xml:space="preserve">
          <source>What's wrong with *-w* and $^W</source>
          <target state="translated">¿Qué hay de malo con *-w*y $^W</target>
        </trans-unit>
        <trans-unit id="d8abb891068053380c8e2c57ccfc03bd7f1c3bec" translate="yes" xml:space="preserve">
          <source>What's wrong with &lt;b&gt;-w&lt;/b&gt; and &lt;code&gt;$^W&lt;/code&gt;</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; pasa con &lt;b&gt;-w&lt;/b&gt; y &lt;code&gt;$^W&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86c8915176784b924b124a7df71bcedbc4d5aeac" translate="yes" xml:space="preserve">
          <source>What's wrong with always quoting &quot;$vars&quot;?</source>
          <target state="translated">¿Qué hay de malo en citar siempre &quot;$vars&quot;?</target>
        </trans-unit>
        <trans-unit id="a6b6f35263a6c409ef4d9ea90bf4d23520808808" translate="yes" xml:space="preserve">
          <source>What's wrong with using backticks in a void context?</source>
          <target state="translated">¿Qué hay de malo en usar palos de espalda en un contexto de vacío?</target>
        </trans-unit>
        <trans-unit id="15b450eb4383c04ae9890e63ad467617d37b687c" translate="yes" xml:space="preserve">
          <source>What's wrong with using grep in a void context?</source>
          <target state="translated">¿Qué hay de malo en usar grep en un contexto de vacío?</target>
        </trans-unit>
        <trans-unit id="48dabfbbabfdd23fd6a91f1e79b5b5393e8fc727" translate="yes" xml:space="preserve">
          <source>What's wrong?</source>
          <target state="translated">¿Qué es lo que pasa?</target>
        </trans-unit>
        <trans-unit id="81f7ea2721e1db165495605d1bf1128fca1fe7a9" translate="yes" xml:space="preserve">
          <source>Whatever a reference refers to, which may or may not have a name. Common types of referents include scalars, arrays, hashes, and subroutines.</source>
          <target state="translated">Cualquiera que sea la referencia a la que se refiera,que puede o no tener un nombre.Los tipos comunes de referencias incluyen escalares,arreglos,hashes y subrutinas.</target>
        </trans-unit>
        <trans-unit id="088ce6907b9c85d16edc0ae58b2aca12ddc17aac" translate="yes" xml:space="preserve">
          <source>Whatever happens in the RE engine might be better discussed in &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, but for the sake of continuity, we shall do so here.</source>
          <target state="translated">Lo que sea que suceda en el motor RE podr&amp;iacute;a ser mejor discutido en &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; , pero en aras de la continuidad, lo haremos aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="f153d99158c54cb43c1d3fc8596ddbfe423f08fe" translate="yes" xml:space="preserve">
          <source>Whatever you want to do with a reference, &lt;b&gt;Use Rule 1&lt;/b&gt; tells you how to do it. You just write the Perl code that you would have written for doing the same thing to a regular array or hash, and then replace the array or hash name with &lt;code&gt;{$reference}&lt;/code&gt; . &quot;How do I loop over an array when all I have is a reference?&quot; Well, to loop over an array, you would write</source>
          <target state="translated">Sea lo que sea lo que quiera hacer con una referencia, &lt;b&gt;Use Rule 1&lt;/b&gt; le indica c&amp;oacute;mo hacerlo. Simplemente escriba el c&amp;oacute;digo Perl que habr&amp;iacute;a escrito para hacer lo mismo en una matriz o hash normal, y luego reemplace la matriz o el nombre de la matriz con &lt;code&gt;{$reference}&lt;/code&gt; . &quot;&amp;iquest;C&amp;oacute;mo hago un bucle sobre una matriz cuando todo lo que tengo es una referencia?&quot; Bueno, para recorrer una matriz, escribir&amp;iacute;as</target>
        </trans-unit>
        <trans-unit id="769bb19e615b7f8e2809e5882e2d05a18f57a531" translate="yes" xml:space="preserve">
          <source>When</source>
          <target state="translated">When</target>
        </trans-unit>
        <trans-unit id="7ae3880ea71f58f5dbf3834e6e0d70053eb70246" translate="yes" xml:space="preserve">
          <source>When &quot;&lt;code&gt;::&lt;/code&gt; &quot; is not in the name, &quot;&lt;code&gt;Encode::&lt;/code&gt; &quot; is assumed.</source>
          <target state="translated">Cuando &quot; &lt;code&gt;::&lt;/code&gt; &quot; no est&amp;aacute; en el nombre, se asume &quot; &lt;code&gt;Encode::&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="a89c66deca9575739eac57be484648de00b11290" translate="yes" xml:space="preserve">
          <source>When $data is present, sets the instance data to $data and returns the object itself. Otherwise, the current instance data is returned.</source>
          <target state="translated">Cuando $data está presente,establece los datos de la instancia a $data y devuelve el objeto mismo.De lo contrario,se devuelven los datos de la instancia actual.</target>
        </trans-unit>
        <trans-unit id="5ea5db67e72bdcabd78dcc6373fac87d452cfae7" translate="yes" xml:space="preserve">
          <source>When $encoding is omitted, it defaults to utf8 if $data is already in utf8 or &quot;&quot; (empty string) otherwise.</source>
          <target state="translated">Cuando se omite $encoding,se pasa a utf8 si $data ya está en utf8 o &quot;&quot;.(cadena vacía)de lo contrario.</target>
        </trans-unit>
        <trans-unit id="3a255f10977ad0e9fd4eef99c75ca5b6bedb2369" translate="yes" xml:space="preserve">
          <source>When $encoding is present, sets the instance encoding to $encoding and returns the object itself. Otherwise, the current instance encoding is returned.</source>
          <target state="translated">Cuando $encoding está presente,establece la codificación de la instancia a $encoding y devuelve el objeto mismo.De lo contrario,se devuelve la codificación de la instancia actual.</target>
        </trans-unit>
        <trans-unit id="c1731c29e738a553728a82585755466ae75d0743" translate="yes" xml:space="preserve">
          <source>When $walker is called, it traverses the subroutines supplied when it was created, and renders them using the current style. You can change the style afterwards in several different ways:</source>
          <target state="translated">Cuando se llama $walker,atraviesa las subrutinas suministradas cuando fue creado,y las renderiza usando el estilo actual.Puedes cambiar el estilo después de varias maneras diferentes:</target>
        </trans-unit>
        <trans-unit id="34501938bea4725e00e5d23af26af9e9de4937a2" translate="yes" xml:space="preserve">
          <source>When 'make clean' or similar is run, the $(FIRST_MAKEFILE) will be backed up at this location.</source>
          <target state="translated">Cuando se ejecute 'make clean' o similar,el $(FIRST_MAKEFILE)será respaldado en esta ubicación.</target>
        </trans-unit>
        <trans-unit id="9a46234156e6749e9bc38b78f59bb3969925d8bf" translate="yes" xml:space="preserve">
          <source>When &lt;b&gt;--compat-version&lt;/b&gt; (&lt;b&gt;-b&lt;/b&gt;) is present the generated tests will use &lt;code&gt;Test::More&lt;/code&gt; rather than &lt;code&gt;Test&lt;/code&gt; which is the default for versions before 5.6.2. &lt;code&gt;Test::More&lt;/code&gt; will be added to PREREQ_PM in the generated &lt;code&gt;Makefile.PL&lt;/code&gt; .</source>
          <target state="translated">Cuando &lt;b&gt;--compat-version&lt;/b&gt; ( &lt;b&gt;-b&lt;/b&gt; ) est&amp;aacute; presente, las pruebas generadas usar&amp;aacute;n &lt;code&gt;Test::More&lt;/code&gt; lugar de &lt;code&gt;Test&lt;/code&gt; , que es el valor predeterminado para las versiones anteriores a 5.6.2. &lt;code&gt;Test::More&lt;/code&gt; agregar&amp;aacute;n m&amp;aacute;s a PREREQ_PM en el &lt;code&gt;Makefile.PL&lt;/code&gt; generado .</target>
        </trans-unit>
        <trans-unit id="98323433c84745d96d2f69c24c5375707e53e818" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$/&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; is in scalar context (i.e., file slurp mode), and when an empty file is read, it returns &lt;code&gt;''&lt;/code&gt; the first time, followed by &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; subsequently.</source>
          <target state="translated">Cuando &lt;code&gt;$/&lt;/code&gt; se establece en &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , cuando &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; est&amp;aacute; en contexto escalar (es decir, en modo slurp de archivo) y cuando se lee un archivo vac&amp;iacute;o, devuelve &lt;code&gt;''&lt;/code&gt; la primera vez, seguido de &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; posteriormente.</target>
        </trans-unit>
        <trans-unit id="d7865066f4690dc076b5908415bb1b4ea7d2066d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$/&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, when &lt;code&gt;&lt;a href=&quot;readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; is in scalar context (i.e., file slurp mode), and when an empty file is read, it returns &lt;code&gt;''&lt;/code&gt; the first time, followed by &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; subsequently.</source>
          <target state="translated">Cuando &lt;code&gt;$/&lt;/code&gt; se establece en &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , cuando &lt;code&gt;&lt;a href=&quot;readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; est&amp;aacute; en contexto escalar (es decir, en modo slurp de archivo) y cuando se lee un archivo vac&amp;iacute;o, devuelve &lt;code&gt;''&lt;/code&gt; la primera vez, seguido de &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; posteriormente.</target>
        </trans-unit>
        <trans-unit id="75765cbe47d6e2730ecd17d719657c6826993abb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$input_filename_or_reference&lt;/code&gt; maps to multiple compressed files/buffers and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; is a single file/buffer, after uncompression &lt;code&gt;$output_filename_or_reference&lt;/code&gt; will contain a concatenation of all the uncompressed data from each of the input files/buffers.</source>
          <target state="translated">Cuando &lt;code&gt;$input_filename_or_reference&lt;/code&gt; asigna a varios archivos / b&amp;uacute;feres comprimidos y &lt;code&gt;$output_filename_or_reference&lt;/code&gt; es un solo archivo / b&amp;uacute;fer, despu&amp;eacute;s de la descompresi&amp;oacute;n &lt;code&gt;$output_filename_or_reference&lt;/code&gt; contendr&amp;aacute; una concatenaci&amp;oacute;n de todos los datos sin comprimir de cada uno de los archivos / b&amp;uacute;feres de entrada.</target>
        </trans-unit>
        <trans-unit id="ead5ec1ebcf9002ff366c3f4b5ecf105bcef3b1c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$input_filename_or_reference&lt;/code&gt; maps to multiple files/buffers and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; is a single file/buffer the input files/buffers will be stored in &lt;code&gt;$output_filename_or_reference&lt;/code&gt; as a concatenated series of compressed data streams.</source>
          <target state="translated">Cuando &lt;code&gt;$input_filename_or_reference&lt;/code&gt; asigna a varios archivos / b&amp;uacute;feres y &lt;code&gt;$output_filename_or_reference&lt;/code&gt; es un solo archivo / b&amp;uacute;fer, los archivos de entrada / b&amp;uacute;fer se almacenar&amp;aacute;n en &lt;code&gt;$output_filename_or_reference&lt;/code&gt; como una serie concatenada de flujos de datos comprimidos.</target>
        </trans-unit>
        <trans-unit id="42c11e18ef09b7c84100ba9f7d909d637366a78e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$input_filename_or_reference&lt;/code&gt; maps to multiple files/buffers and &lt;code&gt;$output_filename_or_reference&lt;/code&gt; is a single file/buffer the input files/buffers will each be stored in &lt;code&gt;$output_filename_or_reference&lt;/code&gt; as a distinct entry.</source>
          <target state="translated">Cuando &lt;code&gt;$input_filename_or_reference&lt;/code&gt; asigna a varios archivos / b&amp;uacute;feres y &lt;code&gt;$output_filename_or_reference&lt;/code&gt; es un solo archivo / b&amp;uacute;fer, los archivos de entrada / b&amp;uacute;feres se almacenar&amp;aacute;n en &lt;code&gt;$output_filename_or_reference&lt;/code&gt; como una entrada distinta.</target>
        </trans-unit>
        <trans-unit id="161359b9eacea931dac1aa6e52278dc1eae64067" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$output_filename_or_reference&lt;/code&gt; is an fileglob string, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; must also be a fileglob string. Anything else is an error.</source>
          <target state="translated">Cuando &lt;code&gt;$output_filename_or_reference&lt;/code&gt; es una cadena de fileglob, &lt;code&gt;$input_filename_or_reference&lt;/code&gt; tambi&amp;eacute;n debe ser una cadena de fileglob. Cualquier otra cosa es un error.</target>
        </trans-unit>
        <trans-unit id="2506bf0aaa0a66933521706c1367d6dcef56da1b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;${^UNICODE}&lt;/code&gt; (available starting in v5.8.2) exists and is non-zero, these options will be completely ignored. See &lt;a href=&quot;perlvar#%24%7b%5eUNICODE%7d&quot;&gt;${^UNICODE} in perlvar&lt;/a&gt; and &lt;a href=&quot;perlrun#-C-%5bnumber%2flist%5d&quot;&gt;-C in perlrun&lt;/a&gt; for details.</source>
          <target state="translated">Cuando &lt;code&gt;${^UNICODE}&lt;/code&gt; (disponible a partir de v5.8.2) existe y no es cero, estas opciones se ignorar&amp;aacute;n por completo. Consulte &lt;a href=&quot;perlvar#%24%7b%5eUNICODE%7d&quot;&gt;$ {^ UNICODE} en perlvar&lt;/a&gt; y &lt;a href=&quot;perlrun#-C-%5bnumber%2flist%5d&quot;&gt;-C en perlrun&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="b7dd1602a2fa020d33fb149e95e48b61aba92e31" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;'s arguments are executed indirectly by the shell, results and return codes are subject to its quirks. See &lt;a href=&quot;perlop#%60STRING%60&quot;&gt;`STRING` in perlop&lt;/a&gt; and &lt;a href=&quot;#exec&quot;&gt;exec&lt;/a&gt; for details.</source>
          <target state="translated">Cuando los argumentos del &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; son ejecutados indirectamente por el shell, los resultados y los c&amp;oacute;digos de retorno est&amp;aacute;n sujetos a sus peculiaridades. Consulte &lt;a href=&quot;perlop#%60STRING%60&quot;&gt;&quot;STRING&quot; en perlop&lt;/a&gt; y &lt;a href=&quot;#exec&quot;&gt;exec&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="ce37de4fd1569bb63f53c7c4c16cdb716157400b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (but not &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale 'not_characters'&lt;/code&gt; ) is in effect, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt; LIST&lt;/code&gt; sorts LIST according to the current collation locale. See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (pero no &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale 'not_characters'&lt;/code&gt; ) est&amp;aacute; en efecto, &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt; LIST&lt;/code&gt; ordena LIST de acuerdo con la locale de clasificaci&amp;oacute;n actual. Ver &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b89dec84fb05fc282a0e80acf7739b8c5833a7" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/flags'&lt;/code&gt; is specified, the given flags are automatically added to every regular expression till the end of the lexical scope.</source>
          <target state="translated">Cuando se especifica &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/flags'&lt;/code&gt; , las banderas dadas se agregan autom&amp;aacute;ticamente a cada expresi&amp;oacute;n regular hasta el final del &amp;aacute;mbito l&amp;eacute;xico.</target>
        </trans-unit>
        <trans-unit id="826f4d022e4908a4bde930341263c135e67935f4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; is in effect, perl emits debugging messages when compiling and using regular expressions. The output is the same as that obtained by running a &lt;code&gt;-DDEBUGGING&lt;/code&gt; -enabled perl interpreter with the &lt;b&gt;-Dr&lt;/b&gt; switch. It may be quite voluminous depending on the complexity of the match. Using &lt;code&gt;debugcolor&lt;/code&gt; instead of &lt;code&gt;debug&lt;/code&gt; enables a form of output that can be used to get a colorful display on terminals that understand termcap color sequences. Set &lt;code&gt;$ENV{PERL_RE_TC}&lt;/code&gt; to a comma-separated list of &lt;code&gt;termcap&lt;/code&gt; properties to use for highlighting strings on/off, pre-point part on/off. See &lt;a href=&quot;perldebug#Debugging-Regular-Expressions&quot;&gt;Debugging Regular Expressions in perldebug&lt;/a&gt; for additional info.</source>
          <target state="translated">Cuando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; est&amp;aacute; en efecto, perl emite mensajes de depuraci&amp;oacute;n al compilar y usar expresiones regulares. La salida es la misma que se obtiene al ejecutar un &lt;code&gt;-DDEBUGGING&lt;/code&gt; Perl habilitado para -DDEBUGGING con el modificador &lt;b&gt;-Dr&lt;/b&gt; . Puede ser bastante voluminoso dependiendo de la complejidad del partido. El uso de &lt;code&gt;debugcolor&lt;/code&gt; en lugar de &lt;code&gt;debug&lt;/code&gt; habilita una forma de salida que se puede usar para obtener una pantalla colorida en terminales que comprenden las secuencias de colores de termcap. Establezca &lt;code&gt;$ENV{PERL_RE_TC}&lt;/code&gt; en una lista separada por comas de propiedades &lt;code&gt;termcap&lt;/code&gt; para usar para resaltar cadenas de encendido / apagado, pre-punto encendido / apagado. Ver &lt;a href=&quot;perldebug#Debugging-Regular-Expressions&quot;&gt;Depurar expresiones regulares en perldebug&lt;/a&gt; para obtener informaci&amp;oacute;n adicional.</target>
        </trans-unit>
        <trans-unit id="6c428ad9961e409888285c5019a1884325617653" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; is in effect, a regexp is allowed to contain &lt;code&gt;(?{ ... })&lt;/code&gt; zero-width assertions and &lt;code&gt;(??{ ... })&lt;/code&gt; postponed subexpressions that are derived from variable interpolation, rather than appearing literally within the regexp. That is normally disallowed, since it is a potential security risk. Note that this pragma is ignored when the regular expression is obtained from tainted data, i.e. evaluation is always disallowed with tainted regular expressions. See &lt;a href=&quot;perlre#(%3f%7b-code-%7d)&quot;&gt;(?{ code }) in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#(%3f%3f%7b-code-%7d)&quot;&gt;(??{ code }) in perlre&lt;/a&gt;.</source>
          <target state="translated">Cuando el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'eval'&lt;/code&gt; est&amp;aacute; en vigor, una expresi&amp;oacute;n regular puede contener &lt;code&gt;(?{ ... })&lt;/code&gt; aserciones de ancho cero y &lt;code&gt;(??{ ... })&lt;/code&gt; subexpresiones pospuestas que se derivan de la interpolaci&amp;oacute;n de variables, en lugar de aparecer literalmente dentro de la expresi&amp;oacute;n regular. Eso normalmente no est&amp;aacute; permitido, ya que es un riesgo potencial para la seguridad. Tenga en cuenta que este pragma se ignora cuando la expresi&amp;oacute;n regular se obtiene a partir de datos contaminados, es decir, la evaluaci&amp;oacute;n siempre se rechaza con expresiones regulares contaminadas. Vea &lt;a href=&quot;perlre#(%3f%7b-code-%7d)&quot;&gt;(? {Code}) en perlre&lt;/a&gt; y &lt;a href=&quot;perlre#(%3f%3f%7b-code-%7d)&quot;&gt;(?? {code}) en perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c489bf5f6075f7a85a4147bc159e1965fa8ad2cd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; is in effect, stricter checks are applied than otherwise when compiling regular expressions patterns. These may cause more warnings to be raised than otherwise, and more things to be fatal instead of just warnings. The purpose of this is to find and report at compile time some things, which may be legal, but have a reasonable possibility of not being the programmer's actual intent. This automatically turns on the &lt;code&gt;&quot;regexp&quot;&lt;/code&gt; warnings category (if not already on) within its scope.</source>
          <target state="translated">Cuando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'strict'&lt;/code&gt; est&amp;aacute; en efecto, se aplican comprobaciones m&amp;aacute;s estrictas que de otra manera al compilar patrones de expresiones regulares. Estos pueden causar que se generen m&amp;aacute;s advertencias que de otra manera, y que m&amp;aacute;s cosas sean fatales en lugar de solo advertencias. El prop&amp;oacute;sito de esto es encontrar e informar en tiempo de compilaci&amp;oacute;n algunas cosas, que pueden ser legales, pero tienen una posibilidad razonable de no ser la intenci&amp;oacute;n real del programador. Esto activa autom&amp;aacute;ticamente la categor&amp;iacute;a de advertencias &lt;code&gt;&quot;regexp&quot;&lt;/code&gt; (si a&amp;uacute;n no est&amp;aacute; activada) dentro de su alcance.</target>
        </trans-unit>
        <trans-unit id="057f6216fa3faf81b159095b26d348ad7b06bd25" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'taint'&lt;/code&gt; is in effect, and a tainted string is the target of a regexp, the regexp memories (or values returned by the m// operator in list context) are tainted. This feature is useful when regexp operations on tainted data aren't meant to extract safe substrings, but to perform other transformations.</source>
          <target state="translated">Cuando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'taint'&lt;/code&gt; est&amp;aacute; en efecto, y una cadena contaminada es el objetivo de una expresi&amp;oacute;n regular, las memorias de expresiones regulares (o los valores devueltos por el operador m // en el contexto de la lista) est&amp;aacute;n contaminadas. Esta funci&amp;oacute;n es &amp;uacute;til cuando las operaciones de expresiones regulares en datos contaminados no est&amp;aacute;n destinadas a extraer subcadenas seguras, sino a realizar otras transformaciones.</target>
        </trans-unit>
        <trans-unit id="d35b2d737154679691874d190272f87d34f67d6b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;'s arguments are executed indirectly by the shell, results and return codes are subject to its quirks. See &lt;a href=&quot;../perlop#%60STRING%60&quot;&gt;`STRING` in perlop&lt;/a&gt; and &lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; for details.</source>
          <target state="translated">Cuando los argumentos del &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; son ejecutados indirectamente por el shell, los resultados y los c&amp;oacute;digos de retorno est&amp;aacute;n sujetos a sus peculiaridades. Consulte &lt;a href=&quot;../perlop#%60STRING%60&quot;&gt;&quot;STRING&quot; en perlop&lt;/a&gt; y &lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="d249161b8d76a85447f9bcf8c19ecaa9c4041708" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (but not &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale 'not_characters'&lt;/code&gt; ) is in effect, &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt; LIST&lt;/code&gt; sorts LIST according to the current collation locale. See &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; (pero no &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale 'not_characters'&lt;/code&gt; ) est&amp;aacute; en efecto, &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt; LIST&lt;/code&gt; ordena LIST de acuerdo con la locale de clasificaci&amp;oacute;n actual. Ver &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cb0ac41f5c76b7790f54d079dd94b8ce0665510" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Append&lt;/code&gt; is specified, and set to true, it will</source>
          <target state="translated">Cuando se especifica &lt;code&gt;Append&lt;/code&gt; y se establece en true,</target>
        </trans-unit>
        <trans-unit id="74620e73df76b9793a4b5915498c084620ae1197" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;LimitOutout&lt;/code&gt; is not specified &lt;code&gt;$i-&amp;gt;bzinflate&lt;/code&gt; will use as much memory as it takes to write all the uncompressed data it creates by uncompressing the input buffer.</source>
          <target state="translated">Cuando no se especifica &lt;code&gt;LimitOutout&lt;/code&gt; &lt;code&gt;$i-&amp;gt;bzinflate&lt;/code&gt; utilizar&amp;aacute; tanta memoria como sea necesario para escribir todos los datos sin comprimir que crea descomprimiendo el b&amp;uacute;fer de entrada.</target>
        </trans-unit>
        <trans-unit id="476db1003af9ea2b2d5dff0b4d9aae2335796a1b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;LimitOutout&lt;/code&gt; is not specified &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; will use as much memory as it takes to write all the uncompressed data it creates by uncompressing the input buffer.</source>
          <target state="translated">Cuando no se especifica &lt;code&gt;LimitOutout&lt;/code&gt; , &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; usar&amp;aacute; tanta memoria como sea necesario para escribir todos los datos descomprimidos que crea descomprimiendo el b&amp;uacute;fer de entrada.</target>
        </trans-unit>
        <trans-unit id="3a29eb1b7605b447e178aa583e1e3d0b18b3e32a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;LimitOutput&lt;/code&gt; is used the size of the output buffer used will either be the 16k or the amount of memory already allocated to &lt;code&gt;$output&lt;/code&gt; , whichever is larger. Predicting the output size available is tricky, so don't rely on getting an exact output buffer size.</source>
          <target state="translated">Cuando se usa &lt;code&gt;LimitOutput&lt;/code&gt; , el tama&amp;ntilde;o del b&amp;uacute;fer de salida usado ser&amp;aacute; 16k o la cantidad de memoria ya asignada a &lt;code&gt;$output&lt;/code&gt; , lo que sea mayor. Predecir el tama&amp;ntilde;o de salida disponible es complicado, as&amp;iacute; que no conf&amp;iacute;e en obtener un tama&amp;ntilde;o de b&amp;uacute;fer de salida exacto.</target>
        </trans-unit>
        <trans-unit id="6884e67243b247f9f83c1056f56446e2954b8717" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;LimitOutput&lt;/code&gt; is used the size of the output buffer used will either be the value of the &lt;code&gt;Bufsize&lt;/code&gt; option or the amount of memory already allocated to &lt;code&gt;$output&lt;/code&gt; , whichever is larger. Predicting the output size available is tricky, so don't rely on getting an exact output buffer size.</source>
          <target state="translated">Cuando se usa &lt;code&gt;LimitOutput&lt;/code&gt; , el tama&amp;ntilde;o del b&amp;uacute;fer de salida usado ser&amp;aacute; el valor de la opci&amp;oacute;n &lt;code&gt;Bufsize&lt;/code&gt; o la cantidad de memoria ya asignada a &lt;code&gt;$output&lt;/code&gt; , lo que sea mayor. Predecir el tama&amp;ntilde;o de salida disponible es complicado, as&amp;iacute; que no conf&amp;iacute;e en obtener un tama&amp;ntilde;o de b&amp;uacute;fer de salida exacto.</target>
        </trans-unit>
        <trans-unit id="f6c4b51758778b88a3620755cd86e2bac9c6c0e5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; is active (see &lt;a href=&quot;#%24%3f&quot;&gt;$?&lt;/a&gt; below), the native VMS exit status value will have either one of the &lt;code&gt;$!&lt;/code&gt; or &lt;code&gt;$?&lt;/code&gt; or &lt;code&gt;$^E&lt;/code&gt; or the Unix value 255 encoded into it in a way that the effective original value can be decoded by other programs written in C, including Perl and the GNV package. As per the normal non-VMS behavior of &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; if either &lt;code&gt;$!&lt;/code&gt; or &lt;code&gt;$?&lt;/code&gt; are non-zero, one of those values will be encoded into a native VMS status value. If both of the Unix status values are 0, and the &lt;code&gt;$^E&lt;/code&gt; value is set one of ERROR or SEVERE_ERROR severity, then the &lt;code&gt;$^E&lt;/code&gt; value will be used as the exit code as is. If none of the above apply, the Unix value of 255 will be encoded into a native VMS exit status value.</source>
          <target state="translated">Cuando &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; est&amp;aacute; activo (ver &lt;a href=&quot;#%24%3f&quot;&gt;$? A&lt;/a&gt; continuaci&amp;oacute;n), el valor del estado de salida del VMS nativo tendr&amp;aacute; uno de los &lt;code&gt;$!&lt;/code&gt; o &lt;code&gt;$?&lt;/code&gt; o &lt;code&gt;$^E&lt;/code&gt; o el valor 255 de Unix codificado en &amp;eacute;l de manera que el valor original efectivo pueda ser decodificado por otros programas escritos en C, incluyendo Perl y el paquete GNV. De acuerdo con el comportamiento normal no VMS de &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; si &lt;code&gt;$!&lt;/code&gt; o &lt;code&gt;$?&lt;/code&gt; son distintos de cero, uno de esos valores se codificar&amp;aacute; en un valor de estado de VMS nativo. Si ambos valores de estado de Unix son 0, y el valor de &lt;code&gt;$^E&lt;/code&gt; se establece en uno de gravedad ERROR o SEVERE_ERROR, entonces &lt;code&gt;$^E&lt;/code&gt; value se utilizar&amp;aacute; como c&amp;oacute;digo de salida tal cual. Si no se aplica nada de lo anterior, el valor Unix de 255 se codificar&amp;aacute; en un valor de estado de salida de VMS nativo.</target>
        </trans-unit>
        <trans-unit id="edf0ae2377a2b22abb92a09c7cbee6dad38f469d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;S&lt;/code&gt; can match, it is a better match than when only &lt;code&gt;T&lt;/code&gt; can match.</source>
          <target state="translated">Cuando &lt;code&gt;S&lt;/code&gt; puede coincidir, es mejor que cuando solo &lt;code&gt;T&lt;/code&gt; puede coincidir.</target>
        </trans-unit>
        <trans-unit id="5e7bb6aa4bca28bb16c16381fd1ea0fe317f098c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Strict&lt;/code&gt; is disabled the following behaviour will be policed:</source>
          <target state="translated">Cuando &lt;code&gt;Strict&lt;/code&gt; est&amp;aacute; deshabilitado, se controlar&amp;aacute; el siguiente comportamiento:</target>
        </trans-unit>
        <trans-unit id="792e600779793d69f3a4dfa3dfa3dd30d40ce8a4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;UCA_Version&lt;/code&gt; &amp;gt;= 22, the weights of out-of-range values can be overridden. Though &lt;code&gt;table&lt;/code&gt; or &lt;code&gt;entry&lt;/code&gt; are available for them, out-of-range values are too many.</source>
          <target state="translated">Cuando &lt;code&gt;UCA_Version&lt;/code&gt; &amp;gt; = 22, las ponderaciones de los valores fuera de rango se pueden anular. Aunque la &lt;code&gt;table&lt;/code&gt; o la &lt;code&gt;entry&lt;/code&gt; est&amp;aacute;n disponibles para ellos, los valores fuera de rango son demasiados.</target>
        </trans-unit>
        <trans-unit id="a88bdc0c0c759d08c6275afc07854842d8f95efa" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;base&lt;/code&gt; tries to &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; a module, it will not die if it cannot find the module's file, but will die on any other error. After all this, should your base class be empty, containing no symbols, &lt;code&gt;base&lt;/code&gt; will die. This is useful for inheriting from classes in the same file as yourself but where the filename does not match the base module name, like so:</source>
          <target state="translated">Cuando la &lt;code&gt;base&lt;/code&gt; intenta &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; un m&amp;oacute;dulo, no morir&amp;aacute; si no puede encontrar el archivo del m&amp;oacute;dulo, pero morir&amp;aacute; por cualquier otro error. Despu&amp;eacute;s de todo esto, si su clase base est&amp;aacute; vac&amp;iacute;a, sin s&amp;iacute;mbolos, la &lt;code&gt;base&lt;/code&gt; morir&amp;aacute;. Esto es &amp;uacute;til para heredar de clases en el mismo archivo que usted, pero donde el nombre del archivo no coincide con el nombre del m&amp;oacute;dulo base, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f3f15dbf4bfac8ce422e1183a7c97c2a550a0582" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;follow&lt;/code&gt; or &lt;code&gt;follow_fast&lt;/code&gt; are in effect, there is also a &lt;code&gt;$File::Find::fullname&lt;/code&gt; . The function may set &lt;code&gt;$File::Find::prune&lt;/code&gt; to prune the tree unless &lt;code&gt;bydepth&lt;/code&gt; was specified. Unless &lt;code&gt;follow&lt;/code&gt; or &lt;code&gt;follow_fast&lt;/code&gt; is specified, for compatibility reasons (find.pl, find2perl) there are in addition the following globals available: &lt;code&gt;$File::Find::topdir&lt;/code&gt; , &lt;code&gt;$File::Find::topdev&lt;/code&gt; , &lt;code&gt;$File::Find::topino&lt;/code&gt; , &lt;code&gt;$File::Find::topmode&lt;/code&gt; and &lt;code&gt;$File::Find::topnlink&lt;/code&gt; .</source>
          <target state="translated">Cuando &lt;code&gt;follow&lt;/code&gt; o &lt;code&gt;follow_fast&lt;/code&gt; est&amp;aacute;n en vigor, tambi&amp;eacute;n hay un &lt;code&gt;$File::Find::fullname&lt;/code&gt; . La funci&amp;oacute;n puede configurar &lt;code&gt;$File::Find::prune&lt;/code&gt; para podar el &amp;aacute;rbol a menos que se especifique &lt;code&gt;bydepth&lt;/code&gt; . A menos que se especifique &lt;code&gt;follow&lt;/code&gt; o &lt;code&gt;follow_fast&lt;/code&gt; , por razones de compatibilidad (find.pl, find2perl) hay adem&amp;aacute;s los siguientes globales disponibles: &lt;code&gt;$File::Find::topdir&lt;/code&gt; , &lt;code&gt;$File::Find::topdev&lt;/code&gt; , &lt;code&gt;$File::Find::topino&lt;/code&gt; , &lt;code&gt;$File::Find::topmode&lt;/code&gt; y &lt;code&gt;$File::Find::topnlink&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c3af0ccfdbd0226b2c1c6a386ea7d1149b898de" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;get_handle&lt;/code&gt; is called with an empty parameter list, magic happens:</source>
          <target state="translated">Cuando se llama a &lt;code&gt;get_handle&lt;/code&gt; con una lista de par&amp;aacute;metros vac&amp;iacute;a, ocurre magia:</target>
        </trans-unit>
        <trans-unit id="0587cd71d3cd406da1e34d9f0121a501c139389a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;remove_tree&lt;/code&gt; returned from deleting files in a child directory, a check revealed that the parent directory it returned to wasn't the one it started out from. This is considered a sign of malicious activity.</source>
          <target state="translated">Cuando &lt;code&gt;remove_tree&lt;/code&gt; regres&amp;oacute; de eliminar archivos en un directorio secundario, una verificaci&amp;oacute;n revel&amp;oacute; que el directorio principal al que regres&amp;oacute; no era desde el que comenz&amp;oacute;. Esto se considera un signo de actividad maliciosa.</target>
        </trans-unit>
        <trans-unit id="0abaa039dcd0b20cc37827ce7e9a425281864469" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;share&lt;/code&gt; is used on arrays, hashes, array refs or hash refs, any data they contain will be lost.</source>
          <target state="translated">Cuando se utiliza el recurso &lt;code&gt;share&lt;/code&gt; en matrices, hashes, referencias de matriz o referencias de hash, se perder&amp;aacute;n los datos que contengan.</target>
        </trans-unit>
        <trans-unit id="f072734b6ff55766546071395774e151a8cea193" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;test_test&lt;/code&gt; is called and the output that your tests generate does not match that which you declared, &lt;code&gt;test_test&lt;/code&gt; will print out debug information showing the two conflicting versions. As this output itself is debug information it can be confusing which part of the output is from &lt;code&gt;test_test&lt;/code&gt; and which was the original output from your original tests. Also, it may be hard to spot things like extraneous whitespace at the end of lines that may cause your test to fail even though the output looks similar.</source>
          <target state="translated">Cuando se llama a &lt;code&gt;test_test&lt;/code&gt; y la salida que generan sus pruebas no coincide con la que declar&amp;oacute;, &lt;code&gt;test_test&lt;/code&gt; imprimir&amp;aacute; informaci&amp;oacute;n de depuraci&amp;oacute;n que muestra las dos versiones en conflicto. Como esta salida en s&amp;iacute; misma es informaci&amp;oacute;n de depuraci&amp;oacute;n, puede resultar confuso qu&amp;eacute; parte de la salida es de &lt;code&gt;test_test&lt;/code&gt; y cu&amp;aacute;l era la salida original de sus pruebas originales. Adem&amp;aacute;s, puede ser dif&amp;iacute;cil detectar cosas como espacios en blanco extra&amp;ntilde;os al final de las l&amp;iacute;neas que pueden hacer que la prueba falle aunque la salida sea similar.</target>
        </trans-unit>
        <trans-unit id="0a8ac650ec538c50bdeb4cf6dbd53747bc753f1f" translate="yes" xml:space="preserve">
          <source>When BE or LE is explicitly stated as the name of encoding, BOM is simply treated as a normal character (ZERO WIDTH NO-BREAK SPACE).</source>
          <target state="translated">Cuando BE o LE se indica explícitamente como el nombre de la codificación,BOM se trata simplemente como un carácter normal (ANCHO CERO SIN ESPACIO DE FRACASO).</target>
        </trans-unit>
        <trans-unit id="0fbaed27da231d1d0f199bebcb75bb30dedc0240" translate="yes" xml:space="preserve">
          <source>When BE or LE is omitted during decode(), it checks if BOM is at the beginning of the string; if one is found, the endianness is set to what the BOM says. If no BOM is found, the routine dies.</source>
          <target state="translated">Cuando BE o LE se omite durante la decodificación(),comprueba si el BOM está al principio de la cadena;si se encuentra uno,la endianidad se ajusta a lo que dice el BOM.Si no se encuentra ningún BOM,la rutina muere.</target>
        </trans-unit>
        <trans-unit id="420dd2e0afe91753dba538ca831997f9f3a56a48" translate="yes" xml:space="preserve">
          <source>When BE or LE is omitted during encode(), it returns a BE-encoded string with BOM prepended. So when you want to encode a whole text file, make sure you encode() the whole text at once, not line by line or each line, not file, will have a BOM prepended.</source>
          <target state="translated">Cuando BE o LE se omite durante la codificación(),devuelve una cadena codificada en BE con la lista de materiales preparada.Así que cuando quieras codificar un archivo de texto completo,asegúrate de codificar()todo el texto de una vez,no línea por línea o cada línea,no archivo,tendrá una lista de materiales preparada.</target>
        </trans-unit>
        <trans-unit id="dacba9cd09b7954f0b607de2124d67d55cdeb2ac" translate="yes" xml:space="preserve">
          <source>When CPAN runs, it sets the environment variable PERL5_CPAN_IS_RUNNING to the ID of the running process. It also sets PERL5_CPANPLUS_IS_RUNNING to prevent runaway processes which could happen with older versions of Module::Install.</source>
          <target state="translated">Cuando el CPAN se ejecuta,establece la variable de entorno PERL5_CPAN_IS_RUNNING al ID del proceso en ejecución.También establece PERL5_CPANPLUS_IS_RUNNING para prevenir procesos en ejecución que podrían ocurrir con versiones antiguas del Módulo::Install.</target>
        </trans-unit>
        <trans-unit id="652978d2789dfa7c2e88ae3ead48735cc4a8b7e9" translate="yes" xml:space="preserve">
          <source>When CPAN.pm extends @INC via PERL5LIB, it prints a list of directories added (or a summary of how many directories are added). Choose 'v' to get this message, 'none' to suppress it.</source>
          <target state="translated">Cuando CPAN.pm se extiende @INC a través de PERL5LIB,imprime una lista de los directorios añadidos (o un resumen de cuántos directorios se añaden).Elija &quot;v&quot; para obtener este mensaje,&quot;none&quot; para suprimirlo.</target>
        </trans-unit>
        <trans-unit id="ec2c74f66c6e4b429c5d3bf449f05522f381cd48" translate="yes" xml:space="preserve">
          <source>When CPAN.pm loads a module it needs for some optional feature, it usually reports about module name and version. Choose 'v' to get this message, 'none' to suppress it.</source>
          <target state="translated">Cuando CPAN.pm carga un módulo que necesita para alguna característica opcional,normalmente informa sobre el nombre del módulo y la versión.Elija 'v' para obtener este mensaje,'none' para suprimirlo.</target>
        </trans-unit>
        <trans-unit id="a6c2efe210167d6d16736590efab450901a5223c" translate="yes" xml:space="preserve">
          <source>When CPAN.pm uses the tar command, which switch for the verbosity shall be used? Choose 'none' for quiet operation, 'v' for file name listing, 'vv' for full listing.</source>
          <target state="translated">Cuando CPAN.pm usa el comando tar,¿qué interruptor para la verbosidad se usará? Elija &quot;none&quot; para la operación silenciosa,&quot;v&quot; para el listado de nombres de archivos,&quot;vv&quot; para el listado completo.</target>
        </trans-unit>
        <trans-unit id="09926237f4d026fd4275fa85769eac33da9c9434" translate="yes" xml:space="preserve">
          <source>When Configure asks about the extensions, I suggest IO and Fcntl, and if you want database handling then SDBM_File or GDBM_File (you need to install gdbm for this one). If you want to use the POSIX extension (this is the default), make sure that the stack size of your</source>
          <target state="translated">Cuando Configurar pregunta por las extensiones,sugiero IO y Fcntl,y si quieres manejar la base de datos entonces SDBM_File o GDBM_File (necesitas instalar gdbm para esta).Si quieres usar la extensión POSIX (esta es la predeterminada),asegúrate de que el tamaño de la pila de tu</target>
        </trans-unit>
        <trans-unit id="04e0b7cf71399471be99cb867416364c0df9f40e" translate="yes" xml:space="preserve">
          <source>When Democritus gave the word &amp;ldquo;atom&amp;rdquo; to the indivisible bits of matter, he meant literally something that could not be cut:</source>
          <target state="translated">Cuando Dem&amp;oacute;crito le dio la palabra &quot;&amp;aacute;tomo&quot; a los fragmentos indivisibles de materia, se refer&amp;iacute;a literalmente a algo que no se pod&amp;iacute;a cortar:</target>
        </trans-unit>
        <trans-unit id="bed16fa39ff4d380815a5a95de03029e7764deee" translate="yes" xml:space="preserve">
          <source>When G_KEEPERR is used, any error in the called code will terminate the call as usual, and the error will not propagate beyond the call (as usual for G_EVAL), but it will not go into &lt;code&gt;$@&lt;/code&gt; . Instead the error will be converted into a warning, prefixed with the string &quot;\t(in cleanup)&quot;. This can be disabled using &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'misc'&lt;/code&gt; . If there is no error, &lt;code&gt;$@&lt;/code&gt; will not be cleared.</source>
          <target state="translated">Cuando se usa G_KEEPERR, cualquier error en el c&amp;oacute;digo llamado terminar&amp;aacute; la llamada como de costumbre y el error no se propagar&amp;aacute; m&amp;aacute;s all&amp;aacute; de la llamada (como es habitual para G_EVAL), pero no entrar&amp;aacute; en &lt;code&gt;$@&lt;/code&gt; . En su lugar, el error se convertir&amp;aacute; en una advertencia, con el prefijo &quot;\ t (en limpieza)&quot;. Esto se puede desactivar &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'misc'&lt;/code&gt; . Si no hay ning&amp;uacute;n error, &lt;code&gt;$@&lt;/code&gt; no se borrar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="c6cefe86149d167c60485e01ab068ab4acc1c96d" translate="yes" xml:space="preserve">
          <source>When I install bundles or multiple modules with one command there is too much output to keep track of.</source>
          <target state="translated">Cuando instalo paquetes o múltiples módulos con un solo comando,hay demasiada salida para seguir la pista.</target>
        </trans-unit>
        <trans-unit id="96aa2dd484c673b89bb47260df9f770fc3e65459" translate="yes" xml:space="preserve">
          <source>When I run CPAN's shell, I get an error message about things in my &lt;code&gt;/etc/inputrc&lt;/code&gt; (or &lt;code&gt;~/.inputrc&lt;/code&gt;) file.</source>
          <target state="translated">Cuando ejecuto el shell de CPAN, &lt;code&gt;/etc/inputrc&lt;/code&gt; un mensaje de error sobre cosas en mi archivo / etc / inputrc (o &lt;code&gt;~/.inputrc&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b21be97219bbbb10df79f70e49405f833c3cad4" translate="yes" xml:space="preserve">
          <source>When I tried to run my script, I got this message. What does it mean?</source>
          <target state="translated">Cuando intenté ejecutar mi guión,recibí este mensaje.¿Qué significa?</target>
        </trans-unit>
        <trans-unit id="e4bb48e8ad735dfd3ed959c0444d6089c891d679" translate="yes" xml:space="preserve">
          <source>When I/O, for example &quot;read&quot;, is requested, the request goes from Perl first down the stack using &quot;read&quot; functions of each layer, then at the bottom the input is requested from the operating system services, then the result is returned up the stack, finally being interpreted as Perl data.</source>
          <target state="translated">Cuando se solicita una E/S,por ejemplo &quot;leer&quot;,la solicitud va de Perl primero hacia abajo de la pila usando funciones de &quot;lectura&quot; de cada capa,luego en la parte inferior se solicita la entrada a los servicios del sistema operativo,luego el resultado se devuelve hacia arriba de la pila,siendo finalmente interpretado como datos de Perl.</target>
        </trans-unit>
        <trans-unit id="e5e8467b062c382be485cbe69584b5d02adf0299" translate="yes" xml:space="preserve">
          <source>When Memoize needs to check to see if an entry is in the cache already, it will invoke &lt;code&gt;C-&amp;gt;EXISTS(key)&lt;/code&gt; . &lt;code&gt;key&lt;/code&gt; is the normalized function argument. MyExpirePolicy::EXISTS should return 0 if the key is not in the cache, or if it has expired, and 1 if an unexpired value is in the cache. It should</source>
          <target state="translated">Cuando Memoize necesita verificar si una entrada ya est&amp;aacute; en el cach&amp;eacute;, invocar&amp;aacute; &lt;code&gt;C-&amp;gt;EXISTS(key)&lt;/code&gt; . &lt;code&gt;key&lt;/code&gt; es el argumento de la funci&amp;oacute;n normalizada. MyExpirePolicy :: EXISTS deber&amp;iacute;a devolver 0 si la clave no est&amp;aacute; en la cach&amp;eacute;, o si ha expirado, y 1 si hay un valor no expirado en la cach&amp;eacute;. Deber&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="ebd887c91b9049b8dfb0bd1e032eea2b43f90690" translate="yes" xml:space="preserve">
          <source>When Perl 5.12 or later encounters an ellipsis statement, it parses this without error, but if and when you should actually try to execute it, Perl throws an exception with the text &lt;code&gt;Unimplemented&lt;/code&gt; :</source>
          <target state="translated">Cuando Perl 5.12 o posterior encuentra una declaraci&amp;oacute;n de puntos suspensivos, la analiza sin error, pero si debe intentar ejecutarla, Perl arroja una excepci&amp;oacute;n con el texto &lt;code&gt;Unimplemented&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ab4ce43e1ebabd776abd8a74c5e1d002b8bd8ffe" translate="yes" xml:space="preserve">
          <source>When Perl compiles the regular expression, it treats the parenthesis as the start of a memory match. When it doesn't find the closing parenthesis, it complains:</source>
          <target state="translated">Cuando Perl compila la expresión regular,trata el paréntesis como el inicio de un encuentro de memoria.Cuando no encuentra el paréntesis de cierre,se queja:</target>
        </trans-unit>
        <trans-unit id="53c411ad4e1523024c43c3f84e8d99bfb2921a55" translate="yes" xml:space="preserve">
          <source>When Perl destroys the object referenced by $netconf it will send the object to the supplied XSUB DESTROY function. Perl cannot determine, and does not care, that this object is a C struct and not a Perl object. In this sense, there is no difference between the object created by the getnetconfigent() XSUB and an object created by a normal Perl subroutine.</source>
          <target state="translated">Cuando Perl destruya el objeto al que se refiere $netconf enviará el objeto a la función XSUB DESTROY suministrada.Perl no puede determinar,y no le importa,que este objeto sea una estructura C y no un objeto Perl.En este sentido,no hay diferencia entre el objeto creado por el getnetconfigent()XSUB y un objeto creado por una subrutina Perl normal.</target>
        </trans-unit>
        <trans-unit id="e513aa6b4ab015986cab17c857cc3e0082b263e5" translate="yes" xml:space="preserve">
          <source>When Perl exchanges data with an extension, the extension should be able to understand the UTF8 flag and act accordingly. If the extension doesn't recognize that flag, it's likely that the extension will return incorrectly-flagged data.</source>
          <target state="translated">Cuando Perl intercambia datos con una extensión,ésta debe ser capaz de entender la bandera UTF8 y actuar en consecuencia.Si la extensión no reconoce esa bandera,es probable que la extensión devuelva datos marcados incorrectamente.</target>
        </trans-unit>
        <trans-unit id="f6f1776d7dcd16bb2da8426867ab48b032eaee97" translate="yes" xml:space="preserve">
          <source>When Perl is built with PERL_IMPLICIT_CONTEXT, extensions that call any functions in the Perl API will need to pass the initial context argument somehow. The kicker is that you will need to write it in such a way that the extension still compiles when Perl hasn't been built with PERL_IMPLICIT_CONTEXT enabled.</source>
          <target state="translated">Cuando Perl se construye con PERL_IMPLICIT_CONTEXT,las extensiones que llamen a cualquier función en la API de Perl necesitarán pasar el argumento de contexto inicial de alguna manera.El truco es que necesitarás escribirlo de tal manera que la extensión aún compila cuando Perl no ha sido construido con PERL_IMPLICIT_CONTEXT habilitado.</target>
        </trans-unit>
        <trans-unit id="f6fb72d35777e36edb4c8c03f40429a73f9b258a" translate="yes" xml:space="preserve">
          <source>When Perl is built without options that set PERL_IMPLICIT_CONTEXT, there is no first argument containing the interpreter's context. The trailing underscore in the pTHX_ macro indicates that the macro expansion needs a comma after the context argument because other arguments follow it. If PERL_IMPLICIT_CONTEXT is not defined, pTHX_ will be ignored, and the subroutine is not prototyped to take the extra argument. The form of the macro without the trailing underscore is used when there are no additional explicit arguments.</source>
          <target state="translated">Cuando Perl se construye sin las opciones que establecen PERL_IMPLICIT_CONTEXT,no hay un primer argumento que contenga el contexto del intérprete.El subrayado final en la macro pTHX_indica que la expansión de la macro necesita una coma después del argumento de contexto porque le siguen otros argumentos.Si PERL_IMPLICIT_CONTEXT no está definido,pTHX_será ignorado,y la subrutina no está prototipada para tomar el argumento extra.La forma de la macro sin el subrayado de seguimiento se utiliza cuando no hay argumentos explícitos adicionales.</target>
        </trans-unit>
        <trans-unit id="8079f54267f5c6445383e49837ffc5d08d1d7078" translate="yes" xml:space="preserve">
          <source>When Perl is compiled for a platform, it looks at all of these characters to guess which EBCDIC character set the platform uses, and adapts itself accordingly to that platform. If the platform uses a character set that is not one of the three Perl knows about, Perl will either fail to compile, or mistakenly and silently choose one of the three.</source>
          <target state="translated">Cuando Perl se compila para una plataforma,mira todos estos caracteres para adivinar qué conjunto de caracteres EBCDIC utiliza la plataforma,y se adapta en consecuencia a esa plataforma.Si la plataforma usa un conjunto de caracteres que no es uno de los tres que Perl conoce,Perl o bien fallará en la compilación,o bien elegirá errónea y silenciosamente uno de los tres.</target>
        </trans-unit>
        <trans-unit id="80ed2279b39397e0ed205899926800b606fe0a42" translate="yes" xml:space="preserve">
          <source>When Perl is configured to use ithreads, it will use re-entrant library calls in preference to non-re-entrant versions. There is an incompatibility in OpenBSD's &lt;code&gt;getprotobyname_r&lt;/code&gt; and &lt;code&gt;getservbyname_r&lt;/code&gt; function in versions 3.7 and later that will cause a SEGV when called without doing a &lt;code&gt;bzero&lt;/code&gt; on their return structs prior to calling these functions. Current Perl's should handle this problem correctly. Older threaded Perls (5.8.6 or earlier) will run into this problem. If you want to run a threaded Perl on OpenBSD 3.7 or higher, you will need to upgrade to at least Perl 5.8.7.</source>
          <target state="translated">Cuando Perl est&amp;aacute; configurado para usar ithreads, usar&amp;aacute; llamadas de biblioteca reentrantes en lugar de versiones no reentrantes. Existe una incompatibilidad en la funci&amp;oacute;n &lt;code&gt;getprotobyname_r&lt;/code&gt; y &lt;code&gt;getservbyname_r&lt;/code&gt; de OpenBSD en las versiones 3.7 y posteriores que provocar&amp;aacute; una SEGV cuando se llame sin hacer un &lt;code&gt;bzero&lt;/code&gt; en sus estructuras de retorno antes de llamar a estas funciones. Los Perl actuales deber&amp;iacute;an manejar este problema correctamente. Perls con subprocesos m&amp;aacute;s antiguos (5.8.6 o anterior) se encontrar&amp;aacute; con este problema. Si desea ejecutar un Perl con subprocesos en OpenBSD 3.7 o superior, deber&amp;aacute; actualizar al menos a Perl 5.8.7.</target>
        </trans-unit>
        <trans-unit id="df300d221e04eb6da687f72d9bfb0bebe32d3fc0" translate="yes" xml:space="preserve">
          <source>When Perl is processing &quot;binary data&quot;, the programmer wants Perl to process &quot;sequences of bytes&quot;. This is not a problem for Perl: because a byte has 256 possible values, it easily fits in Perl's much larger &quot;logical character&quot;.</source>
          <target state="translated">Cuando Perl está procesando &quot;datos binarios&quot;,el programador quiere que Perl procese &quot;secuencias de bytes&quot;.Esto no es un problema para Perl:debido a que un byte tiene 256 valores posibles,encaja fácilmente en el &quot;carácter lógico&quot; mucho más grande de Perl.</target>
        </trans-unit>
        <trans-unit id="cc51149dee007d3915d8fd89443c351da938e4a2" translate="yes" xml:space="preserve">
          <source>When Perl is run in debugging mode, with the &lt;b&gt;-d&lt;/b&gt; switch, this GV contains the SV which holds the name of the sub being debugged. This is the C variable which corresponds to Perl's $DB::sub variable. See &lt;code&gt;PL_DBsingle&lt;/code&gt; .</source>
          <target state="translated">Cuando Perl se ejecuta en modo de depuraci&amp;oacute;n, con la &lt;b&gt;opci&amp;oacute;n -d&lt;/b&gt; , este GV contiene el SV que contiene el nombre del sub que se est&amp;aacute; depurando. Esta es la variable C que corresponde a la subvariable $ DB :: de Perl. Consulte &lt;code&gt;PL_DBsingle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3590f13940a356a00f485512d64c10323ed9ae31" translate="yes" xml:space="preserve">
          <source>When Perl is run in debugging mode, with the &lt;b&gt;-d&lt;/b&gt; switch, this SV is a boolean which indicates whether subs are being single-stepped. Single-stepping is automatically turned on after every step. This is the C variable which corresponds to Perl's $DB::single variable. See &lt;code&gt;PL_DBsub&lt;/code&gt; .</source>
          <target state="translated">Cuando Perl se ejecuta en modo de depuraci&amp;oacute;n, con el &lt;b&gt;modificador -d&lt;/b&gt; , este SV es un booleano que indica si los subs est&amp;aacute;n siendo de un solo paso. El paso &amp;uacute;nico se activa autom&amp;aacute;ticamente despu&amp;eacute;s de cada paso. Esta es la variable C que corresponde a la variable $ DB :: &amp;uacute;nica de Perl. Consulte &lt;code&gt;PL_DBsub&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="987fa57f3d6e2d1a009a00d587b9bac8f003a80c" translate="yes" xml:space="preserve">
          <source>When Perl is run with the &lt;b&gt;-Do&lt;/b&gt; switch or its equivalent, overloading induces diagnostic messages.</source>
          <target state="translated">Cuando Perl se ejecuta con el interruptor &lt;b&gt;-Do&lt;/b&gt; o su equivalente, la sobrecarga induce mensajes de diagn&amp;oacute;stico.</target>
        </trans-unit>
        <trans-unit id="31b65aa4a8ccdb59770227d57464bc9d968a6a6c" translate="yes" xml:space="preserve">
          <source>When Perl searches for a method, it caches the lookup so that future calls to the method do not need to search for it again. Changing a class's parent class or adding subroutines to a class will invalidate the cache for that class.</source>
          <target state="translated">Cuando Perl busca un método,almacena en caché la búsqueda para que las futuras llamadas al método no tengan que volver a buscarlo.Cambiar la clase padre de una clase o añadir subrutinas a una clase invalidará la caché de esa clase.</target>
        </trans-unit>
        <trans-unit id="dc44d70cd8e2f4c150d9b1a250549091ec350dff" translate="yes" xml:space="preserve">
          <source>When Perl sees a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; extension;&lt;/code&gt; , it searches for a file with the same name as the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;'d extension that has a .pm suffix. If that file cannot be found, Perl dies with a fatal error. The default search path is contained in the &lt;code&gt;@INC&lt;/code&gt; array.</source>
          <target state="translated">Cuando Perl ve una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; extension;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; ; , busca un archivo con el mismo nombre que la extensi&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 'd que tenga un sufijo .pm. Si ese archivo no se puede encontrar, Perl muere con un error fatal. La ruta de b&amp;uacute;squeda predeterminada est&amp;aacute; contenida en la matriz &lt;code&gt;@INC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c45a181d0244e9e1141094875e09095d6414b083" translate="yes" xml:space="preserve">
          <source>When Pod::Simple sees a &quot;=head1 Hi there&quot;, for example, it basically does this:</source>
          <target state="translated">Cuando Pod::Simple ve un &quot;=head1 Hi there&quot;,por ejemplo,básicamente hace esto:</target>
        </trans-unit>
        <trans-unit id="1cd158af5ecd016f5844a2f8d5f52d658dbd56fa" translate="yes" xml:space="preserve">
          <source>When STDERR is tied, its PRINT method will be called to issue warnings and error messages. This feature is temporarily disabled during the call, which means you can use &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; inside PRINT without starting a recursive loop. And just like &lt;code&gt;__WARN__&lt;/code&gt; and &lt;code&gt;__DIE__&lt;/code&gt; handlers, STDERR's PRINT method may be called to report parser errors, so the caveats mentioned under &lt;a href=&quot;perlvar#%25SIG&quot;&gt;%SIG in perlvar&lt;/a&gt; apply.</source>
          <target state="translated">Cuando STDERR est&amp;aacute; vinculado, se llamar&amp;aacute; a su m&amp;eacute;todo PRINT para emitir advertencias y mensajes de error. Esta funci&amp;oacute;n se deshabilita temporalmente durante la llamada, lo que significa que puede usar &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; dentro de PRINT sin iniciar un bucle recursivo. Y al igual que los &lt;code&gt;__WARN__&lt;/code&gt; y &lt;code&gt;__DIE__&lt;/code&gt; , el m&amp;eacute;todo PRINT de STDERR se puede llamar para informar errores del analizador, por lo que se aplican las advertencias mencionadas en &lt;a href=&quot;perlvar#%25SIG&quot;&gt;% SIG en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="776742a8703e38b8c7c180ad1bc1e1f2ea07cf1b" translate="yes" xml:space="preserve">
          <source>When Storable croaks, it tries to report the error via the &lt;code&gt;logcroak()&lt;/code&gt; routine from the &lt;code&gt;Log::Agent&lt;/code&gt; package, if it is available.</source>
          <target state="translated">Cuando Storable croa, intenta informar del error a trav&amp;eacute;s de la rutina &lt;code&gt;logcroak()&lt;/code&gt; del paquete &lt;code&gt;Log::Agent&lt;/code&gt; , si est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="d6016e444b9f013774a61df21cb4a60b0edf43d8" translate="yes" xml:space="preserve">
          <source>When UTF-8 becomes the standard source format, this pragma will effectively become a no-op. For convenience in what follows the term</source>
          <target state="translated">Cuando el UTF-8 se convierta en el formato estándar de la fuente,este pragmatismo se convertirá efectivamente en un no-op.Por conveniencia en lo que sigue al término</target>
        </trans-unit>
        <trans-unit id="1e26f2f78b2d3c5f0bcbde15044bd5212be0247d" translate="yes" xml:space="preserve">
          <source>When Unicode Does Not Happen</source>
          <target state="translated">Cuando el Unicode no ocurre</target>
        </trans-unit>
        <trans-unit id="7748cfda1edce223207e83e001d28dffb7bf724f" translate="yes" xml:space="preserve">
          <source>When Unicode rules are in effect:</source>
          <target state="translated">Cuando las reglas de Unicode están en vigor:</target>
        </trans-unit>
        <trans-unit id="a9436974a6cc23829e6eb2bd840fe00c99d5fdc2" translate="yes" xml:space="preserve">
          <source>When Unicode was first conceived, it was thought that all the world's characters could be represented using a 16-bit word; that is a maximum of &lt;code&gt;0x10000&lt;/code&gt; (or 65,536) characters would be needed, from &lt;code&gt;0x0000&lt;/code&gt; to &lt;code&gt;0xFFFF&lt;/code&gt; . This soon proved to be wrong, and since Unicode 2.0 (July 1996), Unicode has been defined all the way up to 21 bits (&lt;code&gt;0x10FFFF&lt;/code&gt; ), and Unicode 3.1 (March 2001) defined the first characters above &lt;code&gt;0xFFFF&lt;/code&gt; . The first &lt;code&gt;0x10000&lt;/code&gt; characters are called the</source>
          <target state="translated">Cuando se concibi&amp;oacute; Unicode por primera vez, se pens&amp;oacute; que todos los caracteres del mundo pod&amp;iacute;an representarse utilizando una palabra de 16 bits; es decir, se &lt;code&gt;0x10000&lt;/code&gt; un m&amp;aacute;ximo de 0x10000 (o 65,536) caracteres, de &lt;code&gt;0x0000&lt;/code&gt; a &lt;code&gt;0xFFFF&lt;/code&gt; . Esto pronto result&amp;oacute; ser incorrecto, y desde Unicode 2.0 (julio de 1996), Unicode se ha definido hasta 21 bits ( &lt;code&gt;0x10FFFF&lt;/code&gt; ) y Unicode 3.1 (marzo de 2001) defini&amp;oacute; los primeros caracteres por encima de &lt;code&gt;0xFFFF&lt;/code&gt; . Los primeros caracteres &lt;code&gt;0x10000&lt;/code&gt; se denominan</target>
        </trans-unit>
        <trans-unit id="824bf2e880285aa9c434d2acac5d910818e02e5d" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;SelectSaver&lt;/code&gt; is destroyed, it re-selects the file handle that was selected when it was created.</source>
          <target state="translated">Cuando se destruye un &lt;code&gt;SelectSaver&lt;/code&gt; , vuelve a seleccionar el identificador de archivo que se seleccion&amp;oacute; cuando se cre&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="47dccd0143522691a9547f34d1ed5af302d02e22" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;given&lt;/code&gt; statement is also a valid expression (for example, when it's the last statement of a block), it evaluates to:</source>
          <target state="translated">Cuando una declaraci&amp;oacute;n &lt;code&gt;given&lt;/code&gt; tambi&amp;eacute;n es una expresi&amp;oacute;n v&amp;aacute;lida (por ejemplo, cuando es la &amp;uacute;ltima declaraci&amp;oacute;n de un bloque), se eval&amp;uacute;a como:</target>
        </trans-unit>
        <trans-unit id="0af006e8d26663a7078cc20a1292be03a5256d66" translate="yes" xml:space="preserve">
          <source>When a CV has a reference count on its slab (CvSLABBED), it is responsible for making sure it is freed. (Hence, no two CVs should ever have a reference count on the same slab.) The CV only needs to reference the slab during compilation. Once it is compiled and CvROOT attached, it has finished its job, so it can forget the slab.</source>
          <target state="translated">Cuando un CV tiene un conteo de referencia en su losa (CvSLABBED),es responsable de asegurarse de que se libere.(Por lo tanto,ningún CV debe tener un conteo de referencia en la misma losa.)El CV sólo necesita hacer referencia a la losa durante la compilación.Una vez que es compilado y adjuntado el CvROOT,ha terminado su trabajo,así que puede olvidarse de la losa.</target>
        </trans-unit>
        <trans-unit id="5c03e144fe4a4613006ecf4b238cfa477e26c49c" translate="yes" xml:space="preserve">
          <source>When a DST change causes a locale clock to skip one hour forward, there will be an hour's worth of local times that don't exist. Again, for the &quot;Europe/Paris&quot; time zone, the local clock jumped from 2001-03-25 01:59:59 to 2001-03-25 03:00:00.</source>
          <target state="translated">Cuando un cambio en la DST hace que un reloj local se salte una hora más adelante,habrá una hora de horas locales que no existen.De nuevo,para la zona horaria de &quot;Europa/París&quot;,el reloj local saltó de 2001-03-25 01:59:59 a 2001-03-25 03:00:00.</target>
        </trans-unit>
        <trans-unit id="6c769151f41d9f979bbea6aa6d7a29c398587207" translate="yes" xml:space="preserve">
          <source>When a block is preceding by a compilation phase keyword such as &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;END&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , or &lt;code&gt;UNITCHECK&lt;/code&gt; , then the block will run only during the corresponding phase of execution. See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for more details.</source>
          <target state="translated">Cuando un bloque est&amp;aacute; precedido por una palabra clave de fase de compilaci&amp;oacute;n como &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;END&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; o &lt;code&gt;UNITCHECK&lt;/code&gt; , el bloque se ejecutar&amp;aacute; solo durante la fase de ejecuci&amp;oacute;n correspondiente. Consulte &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="7d61af89d14aac150579ea072baeedb77daecc0a" translate="yes" xml:space="preserve">
          <source>When a class has multiple parents, the method lookup order becomes more complicated.</source>
          <target state="translated">Cuando una clase tiene varios padres,el orden de búsqueda del método se complica.</target>
        </trans-unit>
        <trans-unit id="bbfabd64dc538b19e52659b29026ea44adaac5bb" translate="yes" xml:space="preserve">
          <source>When a class inherits from another class, any methods defined in the parent class are available to the child class. If you attempt to call a method on an object that isn't defined in its own class, Perl will also look for that method in any parent classes it may have.</source>
          <target state="translated">Cuando una clase hereda de otra clase,cualquier método definido en la clase padre está disponible para la clase hijo.Si intenta llamar a un método en un objeto que no está definido en su propia clase,Perl también buscará ese método en cualquier clase padre que pueda tener.</target>
        </trans-unit>
        <trans-unit id="3fbe037b656bddc24c2846062762f1fce297b32a" translate="yes" xml:space="preserve">
          <source>When a comma-separated list of subroutine names is given as options, Showlex prints the lexical variables used in those subroutines. Otherwise, it prints the file-scope lexicals in the file.</source>
          <target state="translated">Cuando se da una lista separada por comas de nombres de subrutinas como opciones,Showlex imprime las variables léxicas utilizadas en esas subrutinas.De lo contrario,imprime los léxicos del alcance del archivo.</target>
        </trans-unit>
        <trans-unit id="7150e31ab9e9cca66d69c6a47a4d5fc17ee83d01" translate="yes" xml:space="preserve">
          <source>When a constant is used in an expression, Perl replaces it with its value at compile time, and may then optimize the expression further. In particular, any code in an &lt;code&gt;if (CONSTANT)&lt;/code&gt; block will be optimized away if the constant is false.</source>
          <target state="translated">Cuando se usa una constante en una expresi&amp;oacute;n, Perl la reemplaza con su valor en tiempo de compilaci&amp;oacute;n y luego puede optimizar la expresi&amp;oacute;n a&amp;uacute;n m&amp;aacute;s. En particular, cualquier c&amp;oacute;digo en un bloque &lt;code&gt;if (CONSTANT)&lt;/code&gt; se optimizar&amp;aacute; si la constante es falsa.</target>
        </trans-unit>
        <trans-unit id="ff12ac8ff6a9fb5ab965d82a8adb8da16c238288" translate="yes" xml:space="preserve">
          <source>When a context for a part of compile tree is known, it is propagated down through the tree. At this time the context can have 5 values (instead of 2 for runtime context): void, boolean, scalar, list, and lvalue. In contrast with the pass 1 this pass is processed from top to bottom: a node's context determines the context for its children.</source>
          <target state="translated">Cuando se conoce el contexto de una parte del árbol de compilación,se propaga a través del árbol.En este momento el contexto puede tener 5 valores (en lugar de 2 para el contexto en tiempo de ejecución):void,boolean,scalar,list,y lvalue.En contraste con el paso 1 este paso se procesa de arriba a abajo:el contexto de un nodo determina el contexto para sus hijos.</target>
        </trans-unit>
        <trans-unit id="d87717a8777688d74cabbb2304d94b51341cc91d" translate="yes" xml:space="preserve">
          <source>When a core function calls another, it must pass the context. This is normally hidden via macros. Consider &lt;code&gt;sv_setiv&lt;/code&gt; . It expands into something like this:</source>
          <target state="translated">Cuando una funci&amp;oacute;n principal llama a otra, debe pasar el contexto. Esto normalmente se oculta mediante macros. Considere &lt;code&gt;sv_setiv&lt;/code&gt; . Se expande en algo como esto:</target>
        </trans-unit>
        <trans-unit id="40ceceb3dfac228f4dc1ea2316b05b14abb23395" translate="yes" xml:space="preserve">
          <source>When a dictionary is specified</source>
          <target state="translated">Cuando se especifica un diccionario</target>
        </trans-unit>
        <trans-unit id="d409b69c538e75e300d571031fe6a755a4d085f3" translate="yes" xml:space="preserve">
          <source>When a distribution has already been tested by CPAN::Reporter on this machine, CPAN can skip the test phase and just rely on the test report history instead.</source>
          <target state="translated">Cuando una distribución ya ha sido probada por el CPAN::Reportero en esta máquina,el CPAN puede saltarse la fase de prueba y sólo confiar en el historial del informe de la prueba en su lugar.</target>
        </trans-unit>
        <trans-unit id="f71acc218a83c770a92fc1a815404b3d3de498a7" translate="yes" xml:space="preserve">
          <source>When a file is opened it is in either text or binary mode. In text mode a file is subject to CR/LF/Ctrl-Z translations. With Cygwin, the default mode for an &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; is determined by the mode of the mount that underlies the file. See &lt;a href=&quot;#Cygwin%3a%3ais_binmount&quot;&gt;Cygwin::is_binmount&lt;/a&gt;(). Perl provides a &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt; function to set binary mode on files that otherwise would be treated as text. &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen()&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;O_TEXT&lt;/code&gt; flag sets text mode on files that otherwise would be treated as binary:</source>
          <target state="translated">Cuando se abre un archivo, est&amp;aacute; en modo texto o binario. En el modo de texto, un archivo est&amp;aacute; sujeto a traducciones CR / LF / Ctrl-Z. Con Cygwin, el modo predeterminado para un &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; est&amp;aacute; determinado por el modo de montaje que subyace al archivo. Consulte &lt;a href=&quot;#Cygwin%3a%3ais_binmount&quot;&gt;Cygwin :: is_binmount&lt;/a&gt; (). Perl proporciona una funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt; para establecer el modo binario en archivos que de otro modo ser&amp;iacute;an tratados como texto. &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen()&lt;/a&gt;&lt;/code&gt; con el indicador &lt;code&gt;O_TEXT&lt;/code&gt; establece el modo de texto en archivos que de otra manera ser&amp;iacute;an tratados como binarios:</target>
        </trans-unit>
        <trans-unit id="973bff9414f9daff4e8ac9353de5be029b42eafe" translate="yes" xml:space="preserve">
          <source>When a handle is so opened, then reads get bytes from the string value of</source>
          <target state="translated">Cuando una manija se abre así,entonces lee obtiene bytes del valor de la cadena de</target>
        </trans-unit>
        <trans-unit id="17e8d47075484fcb067bf9d5f01cdea7dd0c053a" translate="yes" xml:space="preserve">
          <source>When a keyword is being handled, the plugin function must build a tree of &lt;code&gt;OP&lt;/code&gt; structures, representing the code that was parsed. The root of the tree must be stored in &lt;code&gt;*op_ptr&lt;/code&gt; . The function then returns a constant indicating the syntactic role of the construct that it has parsed: &lt;code&gt;KEYWORD_PLUGIN_STMT&lt;/code&gt; if it is a complete statement, or &lt;code&gt;KEYWORD_PLUGIN_EXPR&lt;/code&gt; if it is an expression. Note that a statement construct cannot be used inside an expression (except via &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; and similar), and an expression is not a complete statement (it requires at least a terminating semicolon).</source>
          <target state="translated">Cuando se maneja una palabra clave, la funci&amp;oacute;n de complemento debe construir un &amp;aacute;rbol de estructuras &lt;code&gt;OP&lt;/code&gt; , que represente el c&amp;oacute;digo que se analiz&amp;oacute;. La ra&amp;iacute;z del &amp;aacute;rbol debe almacenarse en &lt;code&gt;*op_ptr&lt;/code&gt; . Luego, la funci&amp;oacute;n devuelve una constante que indica la funci&amp;oacute;n sint&amp;aacute;ctica de la construcci&amp;oacute;n que ha analizado: &lt;code&gt;KEYWORD_PLUGIN_STMT&lt;/code&gt; si es una declaraci&amp;oacute;n completa, o &lt;code&gt;KEYWORD_PLUGIN_EXPR&lt;/code&gt; si es una expresi&amp;oacute;n. Tenga en cuenta que una construcci&amp;oacute;n de instrucci&amp;oacute;n no se puede usar dentro de una expresi&amp;oacute;n (excepto a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; BLOCK&lt;/code&gt; y similar), y una expresi&amp;oacute;n no es una declaraci&amp;oacute;n completa (requiere al menos un punto y coma final).</target>
        </trans-unit>
        <trans-unit id="9e79d667e2ee3be13474d3de61e4494ae38724c2" translate="yes" xml:space="preserve">
          <source>When a keyword is handled, the plugin function may also have (compile-time) side effects. It may modify &lt;code&gt;%^H&lt;/code&gt; , define functions, and so on. Typically, if side effects are the main purpose of a handler, it does not wish to generate any ops to be included in the normal compilation. In this case it is still required to supply an op tree, but it suffices to generate a single null op.</source>
          <target state="translated">Cuando se maneja una palabra clave, la funci&amp;oacute;n del complemento tambi&amp;eacute;n puede tener efectos secundarios (en tiempo de compilaci&amp;oacute;n). Puede modificar &lt;code&gt;%^H&lt;/code&gt; , definir funciones, etc. Por lo general, si los efectos secundarios son el objetivo principal de un controlador, no desea generar ninguna operaci&amp;oacute;n para incluirla en la compilaci&amp;oacute;n normal. En este caso, todav&amp;iacute;a es necesario proporcionar un &amp;aacute;rbol de operaciones, pero es suficiente para generar una sola operaci&amp;oacute;n nula.</target>
        </trans-unit>
        <trans-unit id="57ad4f96e4d1cfbd5bc9ad7761654ce09c743746" translate="yes" xml:space="preserve">
          <source>When a line is rendered, the correct format-spec is copied and scanned for the following items; data is substituted in, and other manipulations like basic indenting are done, for each opcode rendered.</source>
          <target state="translated">Cuando se renderiza una línea,se copia el formato correcto y se escanea para los siguientes elementos;se sustituyen los datos y se realizan otras manipulaciones,como la sangría básica,para cada opcode renderizado.</target>
        </trans-unit>
        <trans-unit id="816633f303f39f0cbcf02a62fbc386a09fe865f3" translate="yes" xml:space="preserve">
          <source>When a match has failed, and unless another verb has been involved in failing the match and has provided its own name to use, the &lt;code&gt;$REGERROR&lt;/code&gt; variable will be set to the name of the most recently executed &lt;code&gt;(*MARK:NAME)&lt;/code&gt;.</source>
          <target state="translated">Cuando una coincidencia ha fallado, y a menos que otro verbo haya estado involucrado en la falla de la coincidencia y haya proporcionado su propio nombre para usar, la variable &lt;code&gt;$REGERROR&lt;/code&gt; se establecer&amp;aacute; con el nombre de la &amp;uacute;ltima ejecuci&amp;oacute;n ejecutada &lt;code&gt;(*MARK:NAME)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="166223375f2bf3db19459da46d44df6881e6c346" translate="yes" xml:space="preserve">
          <source>When a match is successful, the &lt;code&gt;$REGMARK&lt;/code&gt; variable will be set to the name of the most recently executed &lt;code&gt;(*MARK:NAME)&lt;/code&gt; that was involved in the match.</source>
          <target state="translated">Cuando una coincidencia es exitosa, la variable &lt;code&gt;$REGMARK&lt;/code&gt; se configurar&amp;aacute; con el nombre de la &amp;uacute;ltima ejecuci&amp;oacute;n &lt;code&gt;(*MARK:NAME)&lt;/code&gt; que estuvo involucrada en la coincidencia.</target>
        </trans-unit>
        <trans-unit id="4580d4e00986eec91e11abd53ea45f7e741116fe" translate="yes" xml:space="preserve">
          <source>When a module declares another one as a 'build_requires' prerequisite this means that the other module is only needed for building or testing the module but need not be installed permanently. In this case you may wish to install that other module nonetheless or just keep it in the 'build_dir' directory to have it available only temporarily. Installing saves time on future installations but makes the perl installation bigger.</source>
          <target state="translated">Cuando un módulo declara otro como un prerrequisito de 'build_requires' esto significa que el otro módulo sólo es necesario para construir o probar el módulo pero no necesita ser instalado permanentemente.En este caso puede que desee instalar ese otro módulo de todas formas o simplemente mantenerlo en el directorio 'build_dir' para tenerlo disponible sólo temporalmente.La instalación ahorra tiempo en futuras instalaciones pero hace que la instalación de perl sea más grande.</target>
        </trans-unit>
        <trans-unit id="1496adc7bcbe4a50d48879cef9be976a3fb2e9c5" translate="yes" xml:space="preserve">
          <source>When a new language is being encoded, Unicode generally will choose a &lt;code&gt;block&lt;/code&gt; of consecutive unallocated code points for its characters. So far, the number of code points in these blocks has always been evenly divisible by 16. Extras in a block, not currently needed, are left unallocated, for future growth. But there have been occasions when a later release needed more code points than the available extras, and a new block had to allocated somewhere else, not contiguous to the initial one, to handle the overflow. Thus, it became apparent early on that &quot;block&quot; wasn't an adequate organizing principal, and so the &lt;code&gt;Script&lt;/code&gt; property was created. (Later an improved script property was added as well, the &lt;code&gt;Script_Extensions&lt;/code&gt; property.) Those code points that are in overflow blocks can still have the same script as the original ones. The script concept fits more closely with natural language: there is &lt;code&gt;Latin&lt;/code&gt; script, &lt;code&gt;Greek&lt;/code&gt; script, and so on; and there are several artificial scripts, like &lt;code&gt;Common&lt;/code&gt; for characters that are used in multiple scripts, such as mathematical symbols. Scripts usually span varied parts of several blocks. For more information about scripts, see &lt;a href=&quot;perlunicode#Scripts&quot;&gt;Scripts in perlunicode&lt;/a&gt;. The division into blocks exists, but it is almost completely accidental--an artifact of how the characters have been and still are allocated. (Note that this paragraph has oversimplified things for the sake of this being an introduction. Unicode doesn't really encode languages, but the writing systems for them--their scripts; and one script can be used by many languages. Unicode also encodes things that aren't really about languages, such as symbols like &lt;code&gt;BAGGAGE CLAIM&lt;/code&gt; .)</source>
          <target state="translated">Cuando se codifica un nuevo idioma, Unicode generalmente elegir&amp;aacute; un &lt;code&gt;block&lt;/code&gt; de puntos de c&amp;oacute;digo consecutivos no asignados para sus caracteres. Hasta ahora, el n&amp;uacute;mero de puntos de c&amp;oacute;digo en estos bloques siempre ha sido uniformemente divisible por 16. Los extras de un bloque, que no se necesitan actualmente, se dejan sin asignar para el crecimiento futuro. Pero ha habido ocasiones en las que una versi&amp;oacute;n posterior necesitaba m&amp;aacute;s puntos de c&amp;oacute;digo que los extras disponibles, y un nuevo bloque ten&amp;iacute;a que asignarse en otro lugar, no contiguo al inicial, para manejar el desbordamiento. Por lo tanto, se hizo evidente desde el principio que &quot;bloque&quot; no era un principio de organizaci&amp;oacute;n adecuado, por lo que se cre&amp;oacute; la propiedad &lt;code&gt;Script&lt;/code&gt; . (M&amp;aacute;s tarde tambi&amp;eacute;n se agreg&amp;oacute; una propiedad de script mejorada, el &lt;code&gt;Script_Extensions&lt;/code&gt; propiedad.) Esos puntos de c&amp;oacute;digo que est&amp;aacute;n en bloques de desbordamiento a&amp;uacute;n pueden tener el mismo script que los originales. El concepto de escritura encaja mejor con el lenguaje natural: hay escritura &lt;code&gt;Latin&lt;/code&gt; , escritura &lt;code&gt;Greek&lt;/code&gt; , etc. y hay varios scripts artificiales, como &lt;code&gt;Common&lt;/code&gt; para caracteres que se utilizan en varios scripts, como s&amp;iacute;mbolos matem&amp;aacute;ticos. Los guiones suelen abarcar partes variadas de varios bloques. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los scripts, consulte &lt;a href=&quot;perlunicode#Scripts&quot;&gt;Scripts en perlunicode.&lt;/a&gt;. La divisi&amp;oacute;n en bloques existe, pero es casi completamente accidental: un artefacto de c&amp;oacute;mo se han asignado y a&amp;uacute;n se asignan los personajes. (Tenga en cuenta que este p&amp;aacute;rrafo ha simplificado demasiado las cosas en aras de que sea una introducci&amp;oacute;n. Unicode realmente no codifica los idiomas, sino los sistemas de escritura para ellos: sus scripts; y muchos idiomas pueden usar un script. Unicode tambi&amp;eacute;n codifica cosas que no se trata realmente de idiomas, como s&amp;iacute;mbolos como &lt;code&gt;BAGGAGE CLAIM&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3bbe3c04751e10d9bc078e9c200bbf898654f3d9" translate="yes" xml:space="preserve">
          <source>When a package is compiled, a line like this</source>
          <target state="translated">Cuando se compila un paquete,una línea como esta</target>
        </trans-unit>
        <trans-unit id="93bffad6a970da997c7854ebcbcae55a405a4802" translate="yes" xml:space="preserve">
          <source>When a perl script assigns a value to $0 then the perl runtime will try to make this value show up as the program name reported by &quot;ps&quot; by updating the memory pointed to by the argv passed to perl_parse() and also calling API functions like setproctitle() where available. This behaviour might not be appropriate when embedding perl and can be disabled by assigning the value &lt;code&gt;1&lt;/code&gt; to the variable &lt;code&gt;PL_origalen&lt;/code&gt; before perl_parse() is called.</source>
          <target state="translated">Cuando un script de perl asigna un valor a $ 0, el tiempo de ejecuci&amp;oacute;n de perl intentar&amp;aacute; que este valor se muestre como el nombre del programa informado por &quot;ps&quot; actualizando la memoria apuntada por el argv pasado a perl_parse () y tambi&amp;eacute;n llamando a funciones de API como setproctitle () donde est&amp;eacute; disponible. Este comportamiento puede no ser apropiado cuando se incrusta perl y se puede deshabilitar asignando el valor &lt;code&gt;1&lt;/code&gt; a la variable &lt;code&gt;PL_origalen&lt;/code&gt; antes de llamar a perl_parse ().</target>
        </trans-unit>
        <trans-unit id="5dd94d34aa40052479abfe68a7305a1776af1c6b" translate="yes" xml:space="preserve">
          <source>When a regexp can match a string in several different ways, we can use the principles above to predict which way the regexp will match:</source>
          <target state="translated">Cuando un regexp puede hacer coincidir una cadena de varias maneras diferentes,podemos utilizar los principios anteriores para predecir de qué manera coincidirá el regexp:</target>
        </trans-unit>
        <trans-unit id="5e93e818427f981a20b5cd3c2cdc058e4ee5f4c1" translate="yes" xml:space="preserve">
          <source>When a regexp is compiled, its &lt;code&gt;engine&lt;/code&gt; field is then set to point at the appropriate structure, so that when it needs to be used Perl can find the right routines to do so.</source>
          <target state="translated">Cuando se compila una expresi&amp;oacute;n regular , su campo de &lt;code&gt;engine&lt;/code&gt; se establece para que apunte a la estructura adecuada, de modo que cuando sea necesario, Perl pueda encontrar las rutinas correctas para hacerlo.</target>
        </trans-unit>
        <trans-unit id="1ee520116426a3c213440cc6f7664ca3ad684e60" translate="yes" xml:space="preserve">
          <source>When a signal is delivered (e.g., SIGINT from a control-C) the operating system breaks into IO operations like</source>
          <target state="translated">Cuando una señal es entregada (por ejemplo,SIGINT de un control-C)el sistema operativo entra en operaciones IO como</target>
        </trans-unit>
        <trans-unit id="232c6b5f6274d23859408b92a2808f3fc59dd734" translate="yes" xml:space="preserve">
          <source>When a space and a plus sign are given as the flags at once, a plus sign is used to prefix a positive number.</source>
          <target state="translated">Cuando un espacio y un signo más se dan como banderas a la vez,se utiliza un signo más para prefijar un número positivo.</target>
        </trans-unit>
        <trans-unit id="d4c0062970171773b2800c4b96cf35e1d153d560" translate="yes" xml:space="preserve">
          <source>When a variable is tied, it is associated with the object which is the return value of the TIESCALAR, TIEARRAY, or TIEHASH function. This object normally has only one reference, namely, the implicit reference from the tied variable. When untie() is called, that reference is destroyed. Then, as in the first example above, the object's destructor (DESTROY) is called, which is normal for objects that have no more valid references; and thus the file is closed.</source>
          <target state="translated">Cuando una variable está ligada,se asocia con el objeto que es el valor de retorno de la función TIESCALAR,TIEARRAY o TIEHASH.Este objeto normalmente tiene una sola referencia,a saber,la referencia implícita de la variable ligada.Cuando se llama untie(),esa referencia se destruye.Entonces,como en el primer ejemplo anterior,se llama al destructor del objeto (DESTROY),lo que es normal para los objetos que no tienen más referencias válidas;y así se cierra el archivo.</target>
        </trans-unit>
        <trans-unit id="4c087ed039f3d9aacb0c9c7c411e1eafe86f0a03" translate="yes" xml:space="preserve">
          <source>When a weak reference is stored in an &lt;code&gt;SV&lt;/code&gt; that has &quot;uvar&quot; magic, &lt;code&gt;set&lt;/code&gt; magic is called after the reference has gone stale. This hook can be used to trigger further garbage-collection activities associated with the referenced object.</source>
          <target state="translated">Cuando se almacena una referencia d&amp;eacute;bil en un &lt;code&gt;SV&lt;/code&gt; que tiene magia &quot;uvar&quot;, se llama a &lt;code&gt;set&lt;/code&gt; magic despu&amp;eacute;s de que la referencia se ha vuelto obsoleta. Este gancho se puede utilizar para desencadenar m&amp;aacute;s actividades de recolecci&amp;oacute;n de basura asociadas con el objeto al que se hace referencia.</target>
        </trans-unit>
        <trans-unit id="9a9840147d7f095037a163c370bf370a7676a796" translate="yes" xml:space="preserve">
          <source>When all parsers are exhausted an empty list will be returned.</source>
          <target state="translated">Cuando todos los analizadores se agoten,se devolverá una lista vacía.</target>
        </trans-unit>
        <trans-unit id="d58a9a2162a7d9db701502c02549ae6467f05b83" translate="yes" xml:space="preserve">
          <source>When an array or an array slice is interpolated into a double-quoted string or a similar context such as &lt;code&gt;/.../&lt;/code&gt; , its elements are separated by this value. Default is a space. For example, this:</source>
          <target state="translated">Cuando una matriz o un segmento de matriz se interpola en una cadena entre comillas dobles o un contexto similar como &lt;code&gt;/.../&lt;/code&gt; , sus elementos est&amp;aacute;n separados por este valor. El valor predeterminado es un espacio. Por ejemplo, esto:</target>
        </trans-unit>
        <trans-unit id="e576a7aca6fc0d7ad26c29db1ef25b646d312e24" translate="yes" xml:space="preserve">
          <source>When an attribute list is present in a declaration, a check is made to see whether an attribute 'modify' handler is present in the appropriate package (or its @ISA inheritance tree). Similarly, when &lt;code&gt;attributes::get&lt;/code&gt; is called on a valid reference, a check is made for an appropriate attribute 'fetch' handler. See &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; to see how the &quot;appropriate package&quot; determination works.</source>
          <target state="translated">Cuando una lista de atributos est&amp;aacute; presente en una declaraci&amp;oacute;n, se realiza una verificaci&amp;oacute;n para ver si un controlador 'modificar' de atributo est&amp;aacute; presente en el paquete apropiado (o en su &amp;aacute;rbol de herencia @ISA). De manera similar, cuando se llama a &lt;code&gt;attributes::get&lt;/code&gt; en una referencia v&amp;aacute;lida, se realiza una verificaci&amp;oacute;n para un controlador de atributo apropiado 'fetch'. Consulte &lt;a href=&quot;#EXAMPLES&quot;&gt;EJEMPLOS&lt;/a&gt; para ver c&amp;oacute;mo funciona la determinaci&amp;oacute;n del &quot;paquete apropiado&quot;.</target>
        </trans-unit>
        <trans-unit id="8cddb5e14177fc6acd8b55e0252f21e912b7951c" translate="yes" xml:space="preserve">
          <source>When an element of &lt;code&gt;%ENV&lt;/code&gt; is read, the locations to which</source>
          <target state="translated">Cuando se lee un elemento de &lt;code&gt;%ENV&lt;/code&gt; , las ubicaciones a las que</target>
        </trans-unit>
        <trans-unit id="0687a40bbb86ac6f75e3c72f51434b562de688d3" translate="yes" xml:space="preserve">
          <source>When an element of &lt;code&gt;%ENV&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the element is looked up as if it were being read, and if it is found, it is deleted. (An item &quot;deleted&quot; from the CRTL &lt;code&gt;environ&lt;/code&gt; array is set to the empty string.) Using &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; to remove an element from &lt;code&gt;%ENV&lt;/code&gt; has a similar effect, but after the element is deleted, another attempt is made to look up the element, so an inner-mode logical name or a name in another location will replace the logical name just deleted. In either case, only the first value found searching PERL_ENV_TABLES is altered. It is not possible at present to define a search list logical name via %ENV.</source>
          <target state="translated">Cuando un elemento de &lt;code&gt;%ENV&lt;/code&gt; se establece en &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , el elemento se busca como si se estuviera leyendo y, si se encuentra, se elimina. (Un elemento &quot;eliminado&quot; de la matriz de entorno &lt;code&gt;environ&lt;/code&gt; se establece en la cadena vac&amp;iacute;a). El uso de &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; para eliminar un elemento de &lt;code&gt;%ENV&lt;/code&gt; tiene un efecto similar, pero despu&amp;eacute;s de eliminar el elemento, se hace otro intento de buscar el elemento, por lo que un nombre l&amp;oacute;gico en modo interno o un nombre en otra ubicaci&amp;oacute;n reemplazar&amp;aacute; el nombre l&amp;oacute;gico que acaba de eliminar. En cualquier caso, solo se modifica el primer valor encontrado al buscar PERL_ENV_TABLES. En la actualidad, no es posible definir un nombre l&amp;oacute;gico de lista de b&amp;uacute;squeda mediante% ENV.</target>
        </trans-unit>
        <trans-unit id="f3d5e830d380d586cadba3ebb3b0b5993def5162" translate="yes" xml:space="preserve">
          <source>When an element of &lt;code&gt;%ENV&lt;/code&gt; is set to a defined string, the corresponding definition is made in the location to which the first translation of</source>
          <target state="translated">Cuando un elemento de &lt;code&gt;%ENV&lt;/code&gt; se establece en una cadena definida, la definici&amp;oacute;n correspondiente se realiza en la ubicaci&amp;oacute;n a la que se realiz&amp;oacute; la primera traducci&amp;oacute;n de</target>
        </trans-unit>
        <trans-unit id="6e4667405eb0016e589d7ee3b3978551b835b138" translate="yes" xml:space="preserve">
          <source>When an install fails for some reason and then I correct the error condition and retry, CPAN.pm refuses to install the module, saying &lt;code&gt;Already tried without success&lt;/code&gt; .</source>
          <target state="translated">Cuando una instalaci&amp;oacute;n falla por alg&amp;uacute;n motivo y luego corrijo la condici&amp;oacute;n de error y lo vuelvo a intentar, CPAN.pm se niega a instalar el m&amp;oacute;dulo, diciendo &lt;code&gt;Already tried without success&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88b449cc559ca252d850238032174c7042fa310e" translate="yes" xml:space="preserve">
          <source>When an undefined layer 'foo' is encountered in an &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; layer specification then C code performs the equivalent of:</source>
          <target state="translated">Cuando se encuentra una capa indefinida 'foo' en una especificaci&amp;oacute;n de capa &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; , el c&amp;oacute;digo C realiza el equivalente a:</target>
        </trans-unit>
        <trans-unit id="05eb98d8070a762d6a7fd65d464d57e96f47f0ef" translate="yes" xml:space="preserve">
          <source>When an updir path like &quot;:::lib::&quot; is passed as argument, the number of directories to climb up is handled correctly, not removing leading or trailing colons when necessary. E.g.</source>
          <target state="translated">Cuando un camino de ascenso como &quot;:::lib::&quot; se pasa como argumento,el número de directorios para subir se maneja correctamente,no quitando los colones de entrada o salida cuando es necesario.Por ejemplo.</target>
        </trans-unit>
        <trans-unit id="fc030f96c1c92f54f8dacedeb177bdbc127fdac6" translate="yes" xml:space="preserve">
          <source>When an uppercase and lowercase letter both exist in the table, then the uppercase letter is typically used to represent some kind of composite type (a list or a hash), and the lowercase letter is used to represent an element of that composite type. Some internals code makes use of this case relationship. However, 'v' and 'V' (vec and v-string) are in no way related.</source>
          <target state="translated">Cuando en el cuadro existen tanto una letra mayúscula como una minúscula,entonces la letra mayúscula se utiliza típicamente para representar algún tipo de tipo compuesto (una lista o un hash),y la letra minúscula se utiliza para representar un elemento de ese tipo compuesto.Algunos códigos internos utilizan esta relación de casos.Sin embargo,&quot;v&quot; y &quot;V&quot; (vec y v-string)no están relacionados de ninguna manera.</target>
        </trans-unit>
        <trans-unit id="34009ee0cae148f2a1680a702fb847661476a204" translate="yes" xml:space="preserve">
          <source>When and whether to use small caps is somewhat tricky, and Pod::Man doesn't necessarily get it right.</source>
          <target state="translated">Cuándo y si usar o no las cápsulas pequeñas es algo complicado,y Pod::El hombre no necesariamente lo hace bien.</target>
        </trans-unit>
        <trans-unit id="50a0e6b3c1e9721563cfa37763282c6acaf8fe8f" translate="yes" xml:space="preserve">
          <source>When applied to the following command line:</source>
          <target state="translated">Cuando se aplica a la siguiente línea de comando:</target>
        </trans-unit>
        <trans-unit id="a01d1e59657f16ebb14cc78dbc769393ad07bd40" translate="yes" xml:space="preserve">
          <source>When auto-detecting the compressed format, try to test for lzma_alone content using the &lt;code&gt;IO::Uncompress::UnLzma&lt;/code&gt; module.</source>
          <target state="translated">Al detectar autom&amp;aacute;ticamente el formato comprimido, intente probar el contenido lzma_alone usando el &lt;code&gt;IO::Uncompress::UnLzma&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3afc2592b2e6769a24dccd537ec52009da2c39f6" translate="yes" xml:space="preserve">
          <source>When auto-detecting the compressed format, try to test for raw-deflate (RFC 1951) content using the &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; module.</source>
          <target state="translated">Cuando detecte autom&amp;aacute;ticamente el formato comprimido, intente probar el contenido sin desinflar (RFC 1951) utilizando el &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11c4b6b6311800f4181591dd698a41134ea1ef8b" translate="yes" xml:space="preserve">
          <source>When both &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; are used at the same time, the regexp has to match both the beginning and the end of the string, i.e., the regexp matches the whole string. Consider</source>
          <target state="translated">Cuando se usan &lt;code&gt;^&lt;/code&gt; y &lt;code&gt;$&lt;/code&gt; al mismo tiempo, la expresi&amp;oacute;n regular tiene que coincidir con el principio y el final de la cadena, es decir, la expresi&amp;oacute;n regular coincide con toda la cadena. Considerar</target>
        </trans-unit>
        <trans-unit id="0058d0939f56e0836aecac00731cc26dae5c908c" translate="yes" xml:space="preserve">
          <source>When both A and P are undefined, this is used as a fallback accuracy when dividing numbers.</source>
          <target state="translated">Cuando tanto la A como la P están indefinidas,esto se utiliza como una precisión de reserva al dividir los números.</target>
        </trans-unit>
        <trans-unit id="060766cfa822ddf97bd7bc65f3fc7e729b274423" translate="yes" xml:space="preserve">
          <source>When building 64-bit modules, it is your responsibility to ensure that linked external libraries and frameworks provide 64-bit support: if they do not, module building may appear to succeed, but attempts to use the module will result in run-time dynamic linking errors, and subsequent test failures. You can use &lt;code&gt;file&lt;/code&gt; to discover the architectures supported by a library:</source>
          <target state="translated">Al compilar m&amp;oacute;dulos de 64 bits, es su responsabilidad asegurarse de que las bibliotecas y los marcos externos vinculados brinden soporte de 64 bits: si no lo hacen, la compilaci&amp;oacute;n del m&amp;oacute;dulo puede parecer exitosa, pero los intentos de usar el m&amp;oacute;dulo dar&amp;aacute;n como resultado un tiempo de ejecuci&amp;oacute;n din&amp;aacute;mico errores de vinculaci&amp;oacute;n y fallos de prueba posteriores. Puede utilizar el &lt;code&gt;file&lt;/code&gt; para descubrir las arquitecturas compatibles con una biblioteca:</target>
        </trans-unit>
        <trans-unit id="d21008e482052b445cfd243ad8bc31adfd3249b5" translate="yes" xml:space="preserve">
          <source>When building Perl it will always return true, as nothing is installed yet.</source>
          <target state="translated">Cuando se construya Perl,siempre volverá a ser cierto,ya que todavía no se ha instalado nada.</target>
        </trans-unit>
        <trans-unit id="aaf49b07a212f715b8dd8f309b5c78af1bf1e342" translate="yes" xml:space="preserve">
          <source>When built on an ODS-5 volume with symbolic links enabled, Perl by default supports symbolic links when the requisite support is available in the filesystem and CRTL (generally 64-bit OpenVMS v8.3 and later). There are a number of limitations and caveats to be aware of when working with symbolic links on VMS. Most notably, the target of a valid symbolic link must be expressed as a Unix-style path and it must exist on a volume visible from your POSIX root (see the &lt;code&gt;SHOW ROOT&lt;/code&gt; command in DCL help). For further details on symbolic link capabilities and requirements, see chapter 12 of the CRTL manual that ships with OpenVMS v8.3 or later.</source>
          <target state="translated">Cuando se crea en un volumen ODS-5 con enlaces simb&amp;oacute;licos habilitados, Perl admite enlaces simb&amp;oacute;licos de forma predeterminada cuando el soporte necesario est&amp;aacute; disponible en el sistema de archivos y CRTL (generalmente OpenVMS v8.3 de 64 bits y posterior). Hay una serie de limitaciones y advertencias que debe tener en cuenta al trabajar con enlaces simb&amp;oacute;licos en VMS. En particular, el destino de un enlace simb&amp;oacute;lico v&amp;aacute;lido debe expresarse como una ruta de estilo Unix y debe existir en un volumen visible desde su ra&amp;iacute;z POSIX (consulte el comando &lt;code&gt;SHOW ROOT&lt;/code&gt; en la ayuda de DCL). Para obtener m&amp;aacute;s detalles sobre las capacidades y los requisitos de los enlaces simb&amp;oacute;licos, consulte el cap&amp;iacute;tulo 12 del manual CRTL que se env&amp;iacute;a con OpenVMS v8.3 o posterior.</target>
        </trans-unit>
        <trans-unit id="3274ae41eb972b48380cd0be38746ee76dc6d9df" translate="yes" xml:space="preserve">
          <source>When bundling is in effect, case is ignored on single-character options also.</source>
          <target state="translated">Cuando la agrupación está en efecto,el caso se ignora también en las opciones de un solo carácter.</target>
        </trans-unit>
        <trans-unit id="534230020f5629c55b27da34563c08514a84a5c7" translate="yes" xml:space="preserve">
          <source>When calculating specific times, such as for tests in time or date modules, it may be appropriate to calculate an offset for the epoch.</source>
          <target state="translated">Cuando se calculan tiempos específicos,como en el caso de las pruebas en módulos de tiempo o fecha,puede ser apropiado calcular un desfase para la época.</target>
        </trans-unit>
        <trans-unit id="9da2af35b4e027fcb57324a97e158a9219d7749d" translate="yes" xml:space="preserve">
          <source>When called from a thread, this behaves like &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; (i.e., the exit status code is ignored).</source>
          <target state="translated">Cuando se llama desde un hilo, esto se comporta como &lt;code&gt;threads-&amp;gt;exit()&lt;/code&gt; (es decir, se ignora el c&amp;oacute;digo de estado de salida).</target>
        </trans-unit>
        <trans-unit id="9c8531e379ee34158f961b216941a888acd13144" translate="yes" xml:space="preserve">
          <source>When called from the</source>
          <target state="translated">Cuando se le llamó desde el</target>
        </trans-unit>
        <trans-unit id="43350391a792d394d51fbfdf3323ff9bf611b150" translate="yes" xml:space="preserve">
          <source>When called in a scalar context &lt;code&gt;strtod&lt;/code&gt; returns the parsed number.</source>
          <target state="translated">Cuando se llama en un contexto escalar, &lt;code&gt;strtod&lt;/code&gt; devuelve el n&amp;uacute;mero analizado.</target>
        </trans-unit>
        <trans-unit id="da1211ed8e0b63c4bc2cdd7832083442b210dfa8" translate="yes" xml:space="preserve">
          <source>When called in a scalar context &lt;code&gt;strtol&lt;/code&gt; returns the parsed number.</source>
          <target state="translated">Cuando se llama en un contexto escalar, &lt;code&gt;strtol&lt;/code&gt; devuelve el n&amp;uacute;mero analizado.</target>
        </trans-unit>
        <trans-unit id="cd23c4a922c775b095b3cd879f0e839934775a17" translate="yes" xml:space="preserve">
          <source>When called in list context, a filehandle to the open file and a filename are returned. This is achieved by calling mkstemp() after constructing a suitable template.</source>
          <target state="translated">Cuando se llama en el contexto de la lista,se devuelve un filehandle al archivo abierto y un nombre de archivo.Esto se logra llamando a mkstemp()después de construir una plantilla adecuada.</target>
        </trans-unit>
        <trans-unit id="c3dee4680a21f3b47b4b6c94d86c7920c11b3ca5" translate="yes" xml:space="preserve">
          <source>When called in scalar context, returns the full name (including path) of a temporary file (uses mktemp()). The only check is that the file does not already exist, but there is no guarantee that that condition will continue to apply.</source>
          <target state="translated">Cuando se llama en contexto escalar,devuelve el nombre completo (incluyendo la ruta)de un archivo temporal (usa mktemp()).La única comprobación es que el archivo no existe ya,pero no hay garantía de que esa condición continúe aplicándose.</target>
        </trans-unit>
        <trans-unit id="a89727e96b1fd47a54daec87adf9ead3599db8aa" translate="yes" xml:space="preserve">
          <source>When called on a hash in list context, returns a 2-element list consisting of the key and value for the next element of a hash. In Perl 5.12 and later only, it will also return the index and value for the next element of an array so that you can iterate over it; older Perls consider this a syntax error. When called in scalar context, returns only the key (not the value) in a hash, or the index in an array.</source>
          <target state="translated">Cuando se llama a un hash en el contexto de una lista,devuelve una lista de 2 elementos que consiste en la clave y el valor del siguiente elemento de un hash.En Perl 5.12 y posteriores solamente,también devolverá el índice y el valor para el siguiente elemento de una matriz para que pueda iterar sobre él;los Perls más antiguos consideran que esto es un error de sintaxis.Cuando se llama en contexto escalar,devuelve sólo la clave (no el valor)en un hash,o el índice en una matriz.</target>
        </trans-unit>
        <trans-unit id="a0114581d0437322ee0322acd573e8db3818a675" translate="yes" xml:space="preserve">
          <source>When called with a port number, the port number used to ping is set to $port_number rather than using the echo port. It also has the effect of calling &lt;code&gt;$p-&amp;gt;service_check(1)&lt;/code&gt; causing a ping to return a successful response only if that specific port is accessible. This function returns the value of the port that &lt;code&gt;ping()&lt;/code&gt; will connect to.</source>
          <target state="translated">Cuando se llama con un n&amp;uacute;mero de puerto, el n&amp;uacute;mero de puerto utilizado para hacer ping se establece en $ n&amp;uacute;mero_puerto en lugar de utilizar el puerto de eco. Tambi&amp;eacute;n tiene el efecto de llamar a &lt;code&gt;$p-&amp;gt;service_check(1)&lt;/code&gt; haciendo que un ping devuelva una respuesta exitosa solo si ese puerto espec&amp;iacute;fico es accesible. Esta funci&amp;oacute;n devuelve el valor del puerto al que se conectar&amp;aacute; &lt;code&gt;ping()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7e732b0f6b3939ab5bc51276cb4115c5f3c0e3c" translate="yes" xml:space="preserve">
          <source>When called with a property that is a Perl extension that isn't expressible in a compound form, this function currently returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, as the only two possible values are</source>
          <target state="translated">Cuando se llama con una propiedad que es una extensi&amp;oacute;n de Perl que no se puede expresar en forma compuesta, esta funci&amp;oacute;n actualmente devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , ya que los &amp;uacute;nicos dos valores posibles son</target>
        </trans-unit>
        <trans-unit id="d7f088f6cc700d00236d5621c430de681ccc4d48" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;Mksymlists&lt;/code&gt; , one should always specify the NAME attribute. In most cases, this is all that's necessary. In the case of unusual extensions, however, the other attributes can be used to provide additional information to the linker.</source>
          <target state="translated">Al llamar a &lt;code&gt;Mksymlists&lt;/code&gt; , siempre se debe especificar el atributo NAME. En la mayor&amp;iacute;a de los casos, esto es todo lo que se necesita. Sin embargo, en el caso de extensiones inusuales, los otros atributos se pueden utilizar para proporcionar informaci&amp;oacute;n adicional al enlazador.</target>
        </trans-unit>
        <trans-unit id="fb764d0e74f6cde0aeec88532fcd886bfa4b9853" translate="yes" xml:space="preserve">
          <source>When choosing a language you should also be influenced by the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;resources&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpantesters.org%2f&quot;&gt;testing culture&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perl.org%2fcommunity.html&quot;&gt;community&lt;/a&gt; which surrounds it.</source>
          <target state="translated">Al elegir un idioma, tambi&amp;eacute;n debe estar influenciado por los &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2f&quot;&gt;recursos&lt;/a&gt; , la &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpantesters.org%2f&quot;&gt;cultura de prueba&lt;/a&gt; y la &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perl.org%2fcommunity.html&quot;&gt;comunidad&lt;/a&gt; que lo rodea.</target>
        </trans-unit>
        <trans-unit id="28fc2ee6241766189106d0612895f0d6c35cb4ac" translate="yes" xml:space="preserve">
          <source>When choosing a new salt create a random two character string whose characters come from the set &lt;code&gt;[./0-9A-Za-z]&lt;/code&gt; (like &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt; '', ('.',
'/', 0..9, 'A'..'Z', 'a'..'z')[&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; 64, &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; 64]&lt;/code&gt; ). This set of characters is just a recommendation; the characters allowed in the salt depend solely on your system's crypt library, and Perl can't restrict what salts &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt()&lt;/a&gt;&lt;/code&gt; accepts.</source>
          <target state="translated">Al elegir un nuevo salt, cree una cadena aleatoria de dos caracteres cuyos caracteres provengan del conjunto &lt;code&gt;[./0-9A-Za-z]&lt;/code&gt; (como &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt; '', ('.', '/', 0..9, 'A'..'Z', 'a'..'z')[&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; 64, &lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt; 64]&lt;/code&gt; ). Este conjunto de caracteres es solo una recomendaci&amp;oacute;n; los caracteres permitidos en la sal dependen &amp;uacute;nicamente de la biblioteca de criptas de su sistema, y ​​Perl no puede restringir lo que acepta la &lt;code&gt;&lt;a href=&quot;functions/crypt&quot;&gt;crypt()&lt;/a&gt;&lt;/code&gt; sales () .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
