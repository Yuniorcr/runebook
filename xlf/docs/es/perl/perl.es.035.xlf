<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="8f7ab85a46c82118f02884a07c3492a612ad0bc1" translate="yes" xml:space="preserve">
          <source>Given a &lt;a href=&quot;source&quot;&gt;TAP::Parser::Source&lt;/a&gt;, detects what kind of source it is and returns</source>
          <target state="translated">Dado un &lt;a href=&quot;source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt; , detecta qu&amp;eacute; tipo de fuente es y devuelve</target>
        </trans-unit>
        <trans-unit id="b116ea0f536335d3865a0d04bc8e08d1c2acb6e8" translate="yes" xml:space="preserve">
          <source>Given a &lt;a href=&quot;source&quot;&gt;TAP::Parser::Source&lt;/a&gt;, finds the most suitable &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; to use to create a &lt;a href=&quot;iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; (see &lt;a href=&quot;#detect_source&quot;&gt;detect_source&lt;/a&gt;). Dies on error.</source>
          <target state="translated">Dado un &lt;a href=&quot;source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt; , encuentra el &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; m&amp;aacute;s adecuado para usar para crear un &lt;a href=&quot;iterator&quot;&gt;TAP :: Parser :: &lt;/a&gt;&lt;a href=&quot;#detect_source&quot;&gt;Iterator&lt;/a&gt; (ver detect_source ). Muere por error.</target>
        </trans-unit>
        <trans-unit id="2fa07acc92ca3a34b050a1779c443de025ad8957" translate="yes" xml:space="preserve">
          <source>Given a Perl subroutine prototype, return a list of invocation specifications. Each specification is a listref, where the first member is the (minimum) number of arguments for this invocation specification. The remaining arguments are a string representation of how to pass the arguments correctly to a sub with the given prototype, when called with the given number of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30c1dfc72170a71448f9b395e9b03e816f03b3d" translate="yes" xml:space="preserve">
          <source>Given a PerlIO * create a 'native' FILE * suitable for passing to code expecting to be compiled and linked with ANSI C</source>
          <target state="translated">Dado un PerlIO*crear un ARCHIVO 'nativo'*adecuado para pasar al código esperando ser compilado y enlazado con ANSI C</target>
        </trans-unit>
        <trans-unit id="34f965aed65d5f567330c1f887c60f3d7277e8d9" translate="yes" xml:space="preserve">
          <source>Given a chunk of memory, link it to the head of the list of arenas, and split it into a list of free SVs.</source>
          <target state="translated">Si se le da un trozo de memoria,vincúlelo con el encabezamiento de la lista de arenas,y divídalo en una lista de SV libres.</target>
        </trans-unit>
        <trans-unit id="ea0db9ec916b80f6d45682cc0643494437b81c63" translate="yes" xml:space="preserve">
          <source>Given a function argument and the corresponding function value, store them into the cache.</source>
          <target state="translated">Dado un argumento de función y el correspondiente valor de la función,guardarlos en el caché.</target>
        </trans-unit>
        <trans-unit id="368b29d6322d5568fa6515033d024e6d8d044278" translate="yes" xml:space="preserve">
          <source>Given a function argument, is the corresponding function value in the cache, and if so, is it fresh enough to use?</source>
          <target state="translated">Dado un argumento de función,¿está el valor correspondiente de la función en el caché,y si es así,es lo suficientemente fresco para utilizarlo?</target>
        </trans-unit>
        <trans-unit id="f996cfe932df1fdf5f95873d9c8a6b9f9b2d54ff" translate="yes" xml:space="preserve">
          <source>Given a function argument, look up the corresponding function value in the cache and return it.</source>
          <target state="translated">Dado un argumento de función,busca el valor de la función correspondiente en la caché y devuélvelo.</target>
        </trans-unit>
        <trans-unit id="c3509e606900720895e02d9e89cbafec46d210bc" translate="yes" xml:space="preserve">
          <source>Given a key (&lt;code&gt;$key&lt;/code&gt; ) this method reads the value associated with it from the database. The value read from the database is returned in the &lt;code&gt;$value&lt;/code&gt; parameter.</source>
          <target state="translated">Dada una clave ( &lt;code&gt;$key&lt;/code&gt; ), este m&amp;eacute;todo lee el valor asociado con &amp;eacute;l de la base de datos. El valor le&amp;iacute;do de la base de datos se devuelve en el par&amp;aacute;metro &lt;code&gt;$value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a67beacc3582ff6ab21ef53a13b990116854b74" translate="yes" xml:space="preserve">
          <source>Given a key (&lt;code&gt;$key&lt;/code&gt;) this method reads the value associated with it from the database. The value read from the database is returned in the &lt;code&gt;$value&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f4f0181b47fc4d73d9cd3bbfb5acee403880eb" translate="yes" xml:space="preserve">
          <source>Given a list of args get the names of tests that should run</source>
          <target state="translated">Dada una lista de args obtengan los nombres de las pruebas que deben realizarse</target>
        </trans-unit>
        <trans-unit id="16258c75193474948085fd76ec96dab72f546f03" translate="yes" xml:space="preserve">
          <source>Given a list of file names, strip out those that refer to a parent directory. (Does not strip symlinks, only '.', '..', and equivalents.)</source>
          <target state="translated">Dada una lista de nombres de archivos,quita los que se refieren a un directorio principal.(No quita los enlaces simbólicos,sólo los '.','..',y equivalentes.)</target>
        </trans-unit>
        <trans-unit id="9ef7fd99b0e4a8aa29f6aa6041cd8f8921cd8d25" translate="yes" xml:space="preserve">
          <source>Given a list of files in a directory (such as from &lt;code&gt;readdir()&lt;/code&gt;), strip out &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3018b6ffb20dcac62489facac809bddacf5bfb4" translate="yes" xml:space="preserve">
          <source>Given a list of identifiers, &lt;code&gt;embeddable_typemap&lt;/code&gt; tries to load typemaps from a file of the given name(s), or from a module that is an &lt;code&gt;ExtUtils::Typemaps&lt;/code&gt; subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f60dd44db71eb2a881f946f782f7b4489542b29" translate="yes" xml:space="preserve">
          <source>Given a list of scalars or reference variables, writes out their contents in perl syntax. The references can also be objects. The content of each variable is output in a single Perl statement. Handles self-referential structures correctly.</source>
          <target state="translated">Dada una lista de escalares o variables de referencia,escribe su contenido en sintaxis perl.Las referencias también pueden ser objetos.El contenido de cada variable se presenta en una sola declaración Perl.Maneja correctamente las estructuras autorreferenciales.</target>
        </trans-unit>
        <trans-unit id="3e530c4f306640476d631e5c36d6a2f051774865" translate="yes" xml:space="preserve">
          <source>Given a name or number that could appear in a &lt;code&gt;E&amp;lt;name_or_num&amp;gt;&lt;/code&gt; sequence, this returns the number of the Unicode character that this stands for. For example, &lt;code&gt;e2char('sol')&lt;/code&gt; , &lt;code&gt;e2char('47')&lt;/code&gt; , &lt;code&gt;e2char('0x2F')&lt;/code&gt; , and &lt;code&gt;e2char('057')&lt;/code&gt; all return 47, because &lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;47&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;0x2f&amp;gt;&lt;/code&gt; , and &lt;code&gt;E&amp;lt;057&amp;gt;&lt;/code&gt; , all mean &quot;/&quot;, whose Unicode number is 47. If the name has no known value (as with a name of &quot;qacute&quot;) or is syntactically invalid (as with a name of &quot;1/4&quot;), this returns undef.</source>
          <target state="translated">Dado un nombre o n&amp;uacute;mero que podr&amp;iacute;a aparecer en una secuencia &lt;code&gt;E&amp;lt;name_or_num&amp;gt;&lt;/code&gt; , esto devuelve el n&amp;uacute;mero del car&amp;aacute;cter Unicode que representa. Por ejemplo, &lt;code&gt;e2char('sol')&lt;/code&gt; , &lt;code&gt;e2char('47')&lt;/code&gt; , &lt;code&gt;e2char('0x2F')&lt;/code&gt; y &lt;code&gt;e2char('057')&lt;/code&gt; devuelven 47, porque &lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;47&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;0x2f&amp;gt;&lt;/code&gt; , y &lt;code&gt;E&amp;lt;057&amp;gt;&lt;/code&gt; , todos significan &quot;/&quot;, cuyo n&amp;uacute;mero Unicode es 47. Si el nombre no tiene un valor conocido (como con un nombre de &quot;qacute&quot;) o es sint&amp;aacute;cticamente inv&amp;aacute;lido (como con un nombre de &quot;1/4 &quot;), esto devuelve undef.</target>
        </trans-unit>
        <trans-unit id="af20a3b02e35b18386f4530792c069877997ab32" translate="yes" xml:space="preserve">
          <source>Given a name or number that could appear in a &lt;code&gt;E&amp;lt;name_or_num&amp;gt;&lt;/code&gt; sequence, this returns the number of the Unicode character that this stands for. For example, &lt;code&gt;e2char('sol')&lt;/code&gt;, &lt;code&gt;e2char('47')&lt;/code&gt;, &lt;code&gt;e2char('0x2F')&lt;/code&gt;, and &lt;code&gt;e2char('057')&lt;/code&gt; all return 47, because &lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt;, &lt;code&gt;E&amp;lt;47&amp;gt;&lt;/code&gt;, &lt;code&gt;E&amp;lt;0x2f&amp;gt;&lt;/code&gt;, and &lt;code&gt;E&amp;lt;057&amp;gt;&lt;/code&gt;, all mean &quot;/&quot;, whose Unicode number is 47. If the name has no known value (as with a name of &quot;qacute&quot;) or is syntactically invalid (as with a name of &quot;1/4&quot;), this returns undef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2023da106c6aa26bd0acc5076b02991c20277361" translate="yes" xml:space="preserve">
          <source>Given a name or number that could appear in a &lt;code&gt;E&amp;lt;name_or_num&amp;gt;&lt;/code&gt; sequence, this returns the string that it stands for. For example, &lt;code&gt;e2char('sol')&lt;/code&gt; , &lt;code&gt;e2char('47')&lt;/code&gt; , &lt;code&gt;e2char('0x2F')&lt;/code&gt; , and &lt;code&gt;e2char('057')&lt;/code&gt; all return &quot;/&quot;, because &lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;47&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;0x2f&amp;gt;&lt;/code&gt; , and &lt;code&gt;E&amp;lt;057&amp;gt;&lt;/code&gt; , all mean &quot;/&quot;. If the name has no known value (as with a name of &quot;qacute&quot;) or is syntactically invalid (as with a name of &quot;1/4&quot;), this returns undef.</source>
          <target state="translated">Dado un nombre o n&amp;uacute;mero que podr&amp;iacute;a aparecer en una secuencia &lt;code&gt;E&amp;lt;name_or_num&amp;gt;&lt;/code&gt; , esto devuelve la cadena que representa. Por ejemplo, &lt;code&gt;e2char('sol')&lt;/code&gt; , &lt;code&gt;e2char('47')&lt;/code&gt; , &lt;code&gt;e2char('0x2F')&lt;/code&gt; y &lt;code&gt;e2char('057')&lt;/code&gt; todos devuelven &quot;/&quot;, porque &lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;47&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;0x2f&amp;gt;&lt;/code&gt; y &lt;code&gt;E&amp;lt;057&amp;gt;&lt;/code&gt; , todos significan &quot;/&quot;. Si el nombre no tiene un valor conocido (como con un nombre de &quot;qacute&quot;) o es sint&amp;aacute;cticamente inv&amp;aacute;lido (como con un nombre de &quot;1/4&quot;), esto devuelve undef.</target>
        </trans-unit>
        <trans-unit id="d6238b6c70a7beedaa2b47d1c70942578995fe2d" translate="yes" xml:space="preserve">
          <source>Given a name or number that could appear in a &lt;code&gt;E&amp;lt;name_or_num&amp;gt;&lt;/code&gt; sequence, this returns the string that it stands for. For example, &lt;code&gt;e2char('sol')&lt;/code&gt;, &lt;code&gt;e2char('47')&lt;/code&gt;, &lt;code&gt;e2char('0x2F')&lt;/code&gt;, and &lt;code&gt;e2char('057')&lt;/code&gt; all return &quot;/&quot;, because &lt;code&gt;E&amp;lt;sol&amp;gt;&lt;/code&gt;, &lt;code&gt;E&amp;lt;47&amp;gt;&lt;/code&gt;, &lt;code&gt;E&amp;lt;0x2f&amp;gt;&lt;/code&gt;, and &lt;code&gt;E&amp;lt;057&amp;gt;&lt;/code&gt;, all mean &quot;/&quot;. If the name has no known value (as with a name of &quot;qacute&quot;) or is syntactically invalid (as with a name of &quot;1/4&quot;), this returns undef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fab49b7e67f8e8512bb770d5fecfb47a79348d" translate="yes" xml:space="preserve">
          <source>Given a package name and a hashref mapping names to a subroutine reference (or &lt;code&gt;undef&lt;/code&gt;), this subroutine will install said subroutines on their given name in that module. If a name mapes to &lt;code&gt;undef&lt;/code&gt;, any subroutine with that name in the target module will be remove (possibly &quot;unshadowing&quot; a CORE sub of same name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ff8a7e4af810b7a363c9f43756d64a041cba7a" translate="yes" xml:space="preserve">
          <source>Given a packed socket address (such as from getsockname(), getpeername(), or returned by getaddrinfo() in a &lt;code&gt;addr&lt;/code&gt; field), returns the hostname and symbolic service name it represents. $flags may be a bitmask of &lt;code&gt;NI_*&lt;/code&gt; constants, or defaults to 0 if unspecified.</source>
          <target state="translated">Dada una direcci&amp;oacute;n de socket embalado (tal como de getsockname (), getpeername (), o devuelto por getaddrinfo () en un &lt;code&gt;addr&lt;/code&gt; campo), devuelve el nombre de host y nombre de servicio simb&amp;oacute;lico que representa. $ flags puede ser una m&amp;aacute;scara de bits de constantes &lt;code&gt;NI_*&lt;/code&gt; , o por defecto es 0 si no se especifica.</target>
        </trans-unit>
        <trans-unit id="51657afc8f82d4e3d689a9ad42ae81c82da15acf" translate="yes" xml:space="preserve">
          <source>Given a pathname to a file containing metadata, this deserializes the file according to its file suffix and constructs a new &lt;code&gt;CPAN::Meta&lt;/code&gt; object, just like &lt;code&gt;new()&lt;/code&gt;. It will die if the deserialized version fails to validate against its stated specification version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ab833b08cd320284ae184893dbedaee3a8efff" translate="yes" xml:space="preserve">
          <source>Given a pointer to an &lt;code&gt;SV&lt;/code&gt; and an &lt;code&gt;=~&lt;/code&gt; operation (e.g., &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/bob/robert/g&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[A-Z][a-z]&lt;/a&gt;&lt;/code&gt;), substitute() modifies the string within the &lt;code&gt;SV&lt;/code&gt; as according to the operation, returning the number of substitutions made.</source>
          <target state="translated">Dado un puntero a un &lt;code&gt;SV&lt;/code&gt; y un &lt;code&gt;=~&lt;/code&gt; operaci&amp;oacute;n (por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/bob/robert/g&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[A-Z][a-z]&lt;/a&gt;&lt;/code&gt; ), sustituto () modifica la cadena dentro de la &lt;code&gt;SV&lt;/code&gt; como de acuerdo con la operaci&amp;oacute;n, volviendo el n&amp;uacute;mero de sustituciones realizadas.</target>
        </trans-unit>
        <trans-unit id="dde32d4642dd76d6903ddcba2cd4f3588999395c" translate="yes" xml:space="preserve">
          <source>Given a pointer to an &lt;code&gt;SV&lt;/code&gt; and an &lt;code&gt;=~&lt;/code&gt; operation (e.g., &lt;code&gt;s/bob/robert/g&lt;/code&gt; or &lt;code&gt;tr[A-Z][a-z]&lt;/code&gt;), substitute() modifies the string within the &lt;code&gt;SV&lt;/code&gt; as according to the operation, returning the number of substitutions made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df1b1c7c83c78e200c9f9cd553763264fc01f76" translate="yes" xml:space="preserve">
          <source>Given a string and a pattern (e.g., &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/clasp/&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;/\b\w*\b/&lt;/code&gt; , which in your C program might appear as &quot;/\\b\\w*\\b/&quot;), match() returns 1 if the string matches the pattern and 0 otherwise.</source>
          <target state="translated">Dada una cadena y un patr&amp;oacute;n (p. Ej., &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/clasp/&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;/\b\w*\b/&lt;/code&gt; , que en su programa C puede aparecer como &quot;/ \\ b \\ w * \\ b /&quot;), haga coincidir ( ) devuelve 1 si la cadena coincide con el patr&amp;oacute;n y 0 en caso contrario.</target>
        </trans-unit>
        <trans-unit id="c421180a417152f6c0674618188b29d3743dbc39" translate="yes" xml:space="preserve">
          <source>Given a string and a pattern (e.g., &lt;code&gt;m/clasp/&lt;/code&gt; or &lt;code&gt;/\b\w*\b/&lt;/code&gt;, which in your C program might appear as &quot;/\\b\\w*\\b/&quot;), match() returns 1 if the string matches the pattern and 0 otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f74abc4a59a56ab26c7b6afd4629bc292ce127" translate="yes" xml:space="preserve">
          <source>Given a string, a base, and an optional collation sequence, interpret the string as a number in the given base. The collation sequence describes the value of each character in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2d005ca978881d5ba03242206b93769db89d30" translate="yes" xml:space="preserve">
          <source>Given a template, returns a filehandle to the temporary file and the name of the file.</source>
          <target state="translated">Dada una plantilla,devuelve un filehandle al archivo temporal y el nombre del archivo.</target>
        </trans-unit>
        <trans-unit id="f3247eafd3bd6b87dad8bb050e03ecb6550fab7f" translate="yes" xml:space="preserve">
          <source>Given an &lt;code&gt;SV&lt;/code&gt; , a pattern, and a pointer to an empty &lt;code&gt;AV&lt;/code&gt; , matches() evaluates &lt;code&gt;$string =~ $pattern&lt;/code&gt; in a list context, and fills in</source>
          <target state="translated">Dado un &lt;code&gt;SV&lt;/code&gt; , un patr&amp;oacute;n y un puntero a un &lt;code&gt;AV&lt;/code&gt; vac&amp;iacute;o , coincide con () eval&amp;uacute;a &lt;code&gt;$string =~ $pattern&lt;/code&gt; en un contexto de lista y lo completa</target>
        </trans-unit>
        <trans-unit id="34e4f6e5dbaf1b34751d051563b1ed427ee41229" translate="yes" xml:space="preserve">
          <source>Given an &lt;code&gt;SV&lt;/code&gt;, a pattern, and a pointer to an empty &lt;code&gt;AV&lt;/code&gt;, matches() evaluates &lt;code&gt;$string =~ $pattern&lt;/code&gt; in a list context, and fills in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30244b464969efb78e9259f1691d48f7c1b175b6" translate="yes" xml:space="preserve">
          <source>Given an OS type and OS name, returns true or false if the OS name is of the given type. As with &lt;code&gt;os_type&lt;/code&gt;, it will use the current operating system as a default if no OS name is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73be34ecb8afbc83a1abc326b027cd0e5ff7367" translate="yes" xml:space="preserve">
          <source>Given an expression that specifies an element of a hash, returns true if the specified element in the hash has ever been initialized, even if the corresponding value is undefined.</source>
          <target state="translated">Dada una expresión que especifica un elemento de un hash,devuelve verdadero si el elemento especificado en el hash ha sido alguna vez inicializado,incluso si el valor correspondiente no está definido.</target>
        </trans-unit>
        <trans-unit id="7378726c80d5aab2e860c98baf7c2cd0aceca44a" translate="yes" xml:space="preserve">
          <source>Given an expression that specifies an element or slice of a hash, &lt;a href=&quot;#delete-EXPR&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; deletes the specified elements from that hash so that &lt;a href=&quot;#exists-EXPR&quot;&gt;&lt;code&gt;exists&lt;/code&gt;&lt;/a&gt; on that element no longer returns true. Setting a hash element to the undefined value does not remove its key, but deleting it does; see &lt;a href=&quot;#exists-EXPR&quot;&gt;&lt;code&gt;exists&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3860c44bdd22a4566d9e655bb9fabca95c5a3818" translate="yes" xml:space="preserve">
          <source>Given an expression that specifies an element or slice of a hash, &lt;code&gt;&lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; deletes the specified elements from that hash so that exists() on that element no longer returns true. Setting a hash element to the undefined value does not remove its key, but deleting it does; see &lt;a href=&quot;exists&quot;&gt;exists&lt;/a&gt;.</source>
          <target state="translated">Dada una expresi&amp;oacute;n que especifica un elemento o porci&amp;oacute;n de un hash, &lt;code&gt;&lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; elimina los elementos especificados de ese hash para que exista () en ese elemento ya no devuelva verdadero. Establecer un elemento hash en el valor indefinido no elimina su clave, pero eliminarlo s&amp;iacute;; ver &lt;a href=&quot;exists&quot;&gt;existe&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c148d1ff0a7aebcb28822b3e1311889c861ad3aa" translate="yes" xml:space="preserve">
          <source>Given an expression that specifies an element or slice of a hash, &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; deletes the specified elements from that hash so that exists() on that element no longer returns true. Setting a hash element to the undefined value does not remove its key, but deleting it does; see &lt;a href=&quot;#exists&quot;&gt;exists&lt;/a&gt;.</source>
          <target state="translated">Dada una expresi&amp;oacute;n que especifica un elemento o porci&amp;oacute;n de un hash, &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; elimina los elementos especificados de ese hash para que exista () en ese elemento ya no devuelva verdadero. Establecer un elemento hash en el valor indefinido no elimina su clave, pero eliminarlo s&amp;iacute;; ver &lt;a href=&quot;#exists&quot;&gt;existe&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b769dfb6b889a385d12cb35d230597545507bff1" translate="yes" xml:space="preserve">
          <source>Given an expression that specifies the name of a subroutine, returns true if the specified subroutine has ever been declared, even if it is undefined. Mentioning a subroutine name for exists or defined does not count as declaring it. Note that a subroutine that does not exist may still be callable: its package may have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method that makes it spring into existence the first time that it is called; see &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Dada una expresi&amp;oacute;n que especifica el nombre de una subrutina, devuelve verdadero si la subrutina especificada se ha declarado alguna vez, incluso si no est&amp;aacute; definida. Mencionar un nombre de subrutina para existe o definido no cuenta como declararlo. Tenga en cuenta que una subrutina que no existe a&amp;uacute;n puede ser invocable: su paquete puede tener un m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; que lo hace aparecer la primera vez que se llama; ver &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e2f23a5798654b28edd73d121507fc1d6cf61ce" translate="yes" xml:space="preserve">
          <source>Given an expression that specifies the name of a subroutine, returns true if the specified subroutine has ever been declared, even if it is undefined. Mentioning a subroutine name for exists or defined does not count as declaring it. Note that a subroutine that does not exist may still be callable: its package may have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method that makes it spring into existence the first time that it is called; see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Dada una expresi&amp;oacute;n que especifica el nombre de una subrutina, devuelve verdadero si la subrutina especificada se ha declarado alguna vez, incluso si no est&amp;aacute; definida. Mencionar un nombre de subrutina para existe o definido no cuenta como declararlo. Tenga en cuenta que una subrutina que no existe a&amp;uacute;n puede ser invocable: su paquete puede tener un m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; que lo hace aparecer la primera vez que se llama; ver &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6382657811b5dffd947e094b3c4ab1d16ffe89f3" translate="yes" xml:space="preserve">
          <source>Given an module and version, this method returns true if the version specification for the module accepts the provided version. In other words, given:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3e095107124a6ef85e395cac4af42d46355e9a" translate="yes" xml:space="preserve">
          <source>Given an object, return a Perl scalar number (int/float) representing this number.</source>
          <target state="translated">Dado un objeto,devuelva un número escalar de Perl (int/flota)que represente este número.</target>
        </trans-unit>
        <trans-unit id="870f76963fd88871e6f7f23d8316a36c5a9dba60" translate="yes" xml:space="preserve">
          <source>Given an op, determine what type of struct it has been allocated as. Returns one of the OPclass enums, such as OPclass_LISTOP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798afe5be4d4f8caba61172a6204d0e7a4433382" translate="yes" xml:space="preserve">
          <source>Given an open filehandle and the associated filename, make a safe unlink. This is achieved by first checking that the filename and filehandle initially point to the same file and that the number of links to the file is 1 (all fields returned by stat() are compared). Then the filename is unlinked and the filehandle checked once again to verify that the number of links on that file is now 0. This is the closest you can come to making sure that the filename unlinked was the same as the file whose descriptor you hold.</source>
          <target state="translated">Si se abre un archivador y se le da el nombre de archivo asociado,se puede desconectar de forma segura.Esto se consigue comprobando primero que el nombre de archivo y el filehandle apuntan inicialmente al mismo archivo y que el número de enlaces al archivo es 1 (se comparan todos los campos devueltos por stat()).A continuación,el nombre del archivo se desvincula y el filehandle se comprueba una vez más para verificar que el número de enlaces de ese archivo es ahora 0.Esto es lo más parecido a asegurarse de que el nombre del archivo desvinculado es el mismo que el del archivo cuyo descriptor tiene.</target>
        </trans-unit>
        <trans-unit id="7c8d7de16830e305c76870f7520f278ced8e53b9" translate="yes" xml:space="preserve">
          <source>Given both a hostname and service name, this function attempts to resolve the host name into a list of network addresses, and the service name into a protocol and port number, and then returns a list of address structures suitable to connect() to it.</source>
          <target state="translated">Dando tanto un nombre de host como un nombre de servicio,esta función intenta resolver el nombre de host en una lista de direcciones de red,y el nombre de servicio en un protocolo y un número de puerto,y luego devuelve una lista de estructuras de direcciones adecuadas para conectarse()a ella.</target>
        </trans-unit>
        <trans-unit id="ef7becd595d52be668be1e1f52b6edfa071be390" translate="yes" xml:space="preserve">
          <source>Given just a host name, this function attempts to resolve it to a list of network addresses, and then returns a list of address structures giving these addresses.</source>
          <target state="translated">Si se le da sólo un nombre de host,esta función intenta resolverlo en una lista de direcciones de red,y luego devuelve una lista de estructuras de direcciones que dan estas direcciones.</target>
        </trans-unit>
        <trans-unit id="df00cd802473947a22a033a5fee10eaeb326c652" translate="yes" xml:space="preserve">
          <source>Given just a service name, this function attempts to resolve it to a protocol and port number, and then returns a list of address structures that represent it suitable to bind() to. This use should be combined with the &lt;code&gt;AI_PASSIVE&lt;/code&gt; flag; see below.</source>
          <target state="translated">Dado solo un nombre de servicio, esta funci&amp;oacute;n intenta resolverlo en un protocolo y n&amp;uacute;mero de puerto, y luego devuelve una lista de estructuras de direcciones que lo representan adecuado para bind (). Este uso debe combinarse con la bandera &lt;code&gt;AI_PASSIVE&lt;/code&gt; ; vea abajo.</target>
        </trans-unit>
        <trans-unit id="47c398084bf96dcff46eefda9cdadf3fedccfe90" translate="yes" xml:space="preserve">
          <source>Given neither name, it generates an error.</source>
          <target state="translated">Si no se le da ningún nombre,se genera un error.</target>
        </trans-unit>
        <trans-unit id="f45002ae2a4c5c351051e308f1722b6d19c35a8d" translate="yes" xml:space="preserve">
          <source>Given that &lt;code&gt;IO::Socket&lt;/code&gt; doesn't have attributes in the traditional sense, the following arguments, rather than attributes, can be passed into the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4946a614ce699917e8a48264ad588e74a71edfe3" translate="yes" xml:space="preserve">
          <source>Given that the file glob is just a cut-down regular expression and that it has already done a lot of the hard work in pattern matching the filenames, wouldn't it be handy to be able to use the patterns in the fileglob to drive the new filename?</source>
          <target state="translated">Dado que el fileglob es sólo una expresión regular recortada y que ya ha hecho gran parte del trabajo duro en el patrón de coincidencia de los nombres de archivo,¿no sería útil poder usar los patrones en el fileglob para manejar el nuevo nombre de archivo?</target>
        </trans-unit>
        <trans-unit id="1a0688e5deb209d4898cf79e8c4e93da364593b3" translate="yes" xml:space="preserve">
          <source>Given that we failed to load &lt;code&gt;Compress::Zlib&lt;/code&gt; and that the use of an external</source>
          <target state="translated">Dado que no pudimos cargar &lt;code&gt;Compress::Zlib&lt;/code&gt; y que el uso de un externo</target>
        </trans-unit>
        <trans-unit id="5ce5ab9c8a60a3017b27b9d131c486b0a52e2973" translate="yes" xml:space="preserve">
          <source>Given the filename and description of a test as scalars, returns a new &lt;a href=&quot;TAP::Parser::Scheduler::Job&quot;&gt;TAP::Parser::Scheduler::Job&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d0946db041e6b8ec000e3934554230eea3d997" translate="yes" xml:space="preserve">
          <source>Given the filename and description of a test as scalars, returns a new &lt;a href=&quot;job&quot;&gt;TAP::Parser::Scheduler::Job&lt;/a&gt; object.</source>
          <target state="translated">Dado el nombre de archivo y la descripci&amp;oacute;n de una prueba como escalares, devuelve un nuevo objeto &lt;a href=&quot;job&quot;&gt;TAP :: Parser :: Scheduler :: Job&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8321e912ffb7fc1712a163f5114b8b8cfc71ea6c" translate="yes" xml:space="preserve">
          <source>Given the following module, PerlIO::via::Hex :</source>
          <target state="translated">Dado el siguiente módulo,PerlIO::via::Hex :</target>
        </trans-unit>
        <trans-unit id="b1732b671f9a08843781c433880de7a9be2cae19" translate="yes" xml:space="preserve">
          <source>Given the following notations:</source>
          <target state="translated">Dadas las siguientes anotaciones:</target>
        </trans-unit>
        <trans-unit id="d2cba25d77a3267a4c7e81b67be7cfba4a549ed5" translate="yes" xml:space="preserve">
          <source>Given the name of a lexical variable, find its position in the currently-compiling pad.</source>
          <target state="translated">Dado el nombre de una variable léxica,encuentra su posición en el panel de compilación actual.</target>
        </trans-unit>
        <trans-unit id="ddfa3d7772a86897b1ef912922a5efcc3e61e15d" translate="yes" xml:space="preserve">
          <source>Given the name of a lexical variable, find its position in the currently-compiling pad. &lt;code&gt;namepv&lt;/code&gt;/&lt;code&gt;namelen&lt;/code&gt; specify the variable's name, including leading sigil. &lt;code&gt;flags&lt;/code&gt; is reserved and must be zero. If it is not in the current pad but appears in the pad of any lexically enclosing scope, then a pseudo-entry for it is added in the current pad. Returns the offset in the current pad, or &lt;code&gt;NOT_IN_PAD&lt;/code&gt; if no such lexical is in scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e332da4ace4bc5d01c9ceda2ce9f67dcc253135" translate="yes" xml:space="preserve">
          <source>Given the root of an optree, link the tree in execution order using the &lt;code&gt;op_next&lt;/code&gt; pointers and return the first op executed. If this has already been done, it will not be redone, and &lt;code&gt;o-&amp;gt;op_next&lt;/code&gt; will be returned. If &lt;code&gt;o-&amp;gt;op_next&lt;/code&gt; is not already set,</source>
          <target state="translated">Dada la ra&amp;iacute;z de un optree, vincular el &amp;aacute;rbol en orden de ejecuci&amp;oacute;n utilizando los &lt;code&gt;op_next&lt;/code&gt; punteros y devolver el primer op ejecutado. Si esto ya se ha hecho, no se volver&amp;aacute; a hacer y se &lt;code&gt;o-&amp;gt;op_next&lt;/code&gt; . Si &lt;code&gt;o-&amp;gt;op_next&lt;/code&gt; a&amp;uacute;n no est&amp;aacute; configurado,</target>
        </trans-unit>
        <trans-unit id="97fc21e2d92a8ed7b6cc7a68fbab927d533b3225" translate="yes" xml:space="preserve">
          <source>Given the root of an optree, link the tree in execution order using the &lt;code&gt;op_next&lt;/code&gt; pointers and return the first op executed. If this has already been done, it will not be redone, and &lt;code&gt;o-&amp;gt;op_next&lt;/code&gt; will be returned. If &lt;code&gt;o-&amp;gt;op_next&lt;/code&gt; is not already set, &lt;code&gt;o&lt;/code&gt; should be at least an &lt;code&gt;UNOP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084725aa23e7fe3c0d543b97b1c7320210101746" translate="yes" xml:space="preserve">
          <source>Given the sheer volume of Perl documentation, this isn't a trivial undertaking, but if you can point to documentation that suggests the behaviour you're seeing is</source>
          <target state="translated">Dado el gran volumen de documentación de Perl,esto no es una tarea trivial,pero si se puede señalar la documentación que sugiere que el comportamiento que está viendo es</target>
        </trans-unit>
        <trans-unit id="a51193d192cf9332f4f5d4257e036cab9b0cff3c" translate="yes" xml:space="preserve">
          <source>Given this as an input string in a scalar context, &lt;code&gt;extract_quotelike&lt;/code&gt; would correctly return the string &quot;&amp;lt;&amp;lt;'EOMSG'\nThis is the message.\nEOMSG&quot;, leaving the string &quot; || die;\nexit;&quot; in the original variable. In other words, the two separate pieces of the here document are successfully extracted and concatenated.</source>
          <target state="translated">Dado esto como una cadena de entrada en un contexto escalar, &lt;code&gt;extract_quotelike&lt;/code&gt; devolver&amp;iacute;a correctamente la cadena &quot;&amp;lt;&amp;lt; 'EOMSG' \ nEste es el mensaje. \ NEOMSG&quot;, dejando la cadena &quot;|| die; \ nexit;&quot; en la variable original. En otras palabras, las dos partes separadas del documento here se extraen y concatenan con &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="a8255eb67db18215cafd66b8bf6854ff058e58c2" translate="yes" xml:space="preserve">
          <source>Given two perl versions, this returns a list of pairs describing the changes in core module content between them. The list is suitable for storing in a hash. The keys are library names and the values are hashrefs. Each hashref has an entry for one or both of &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; , giving the versions of the library in each of the left and right perl distributions.</source>
          <target state="translated">Dadas dos versiones de perl, esto devuelve una lista de pares que describen los cambios en el contenido del m&amp;oacute;dulo principal entre ellos. La lista es adecuada para almacenar en un hash. Las claves son nombres de bibliotecas y los valores son hashrefs. Cada hashref tiene una entrada para uno o ambos de &lt;code&gt;left&lt;/code&gt; y &lt;code&gt;right&lt;/code&gt; , dando las versiones de la biblioteca en cada una de las distribuciones de Perl izquierda y derecha.</target>
        </trans-unit>
        <trans-unit id="5524306bde34808c7bf3694140f34edc02ea15fa" translate="yes" xml:space="preserve">
          <source>Given two perl versions, this returns a list of pairs describing the changes in core module content between them. The list is suitable for storing in a hash. The keys are library names and the values are hashrefs. Each hashref has an entry for one or both of &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;, giving the versions of the library in each of the left and right perl distributions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e8e0d7ce171e4fc80eeb08f47d5a4cc76a6ae2" translate="yes" xml:space="preserve">
          <source>Given two versions of perl, this prints a human-readable table of all module changes between the two. The output format may change in the future, and is meant for</source>
          <target state="translated">Dadas dos versiones de perl,esto imprime una tabla legible por el hombre de todos los cambios de módulo entre los dos.El formato de salida puede cambiar en el futuro,y está destinado a</target>
        </trans-unit>
        <trans-unit id="d8e6036259b26c2d9989b981df7306264ca46f69" translate="yes" xml:space="preserve">
          <source>Gives a description of each test prior to performing it.</source>
          <target state="translated">Da una descripción de cada prueba antes de realizarla.</target>
        </trans-unit>
        <trans-unit id="95e8be14901e94fb491dfdf5b70ee1b95c0f63d7" translate="yes" xml:space="preserve">
          <source>Gives more detailed information about each test, after it has been performed. Note that any failed tests ought to print out some extra information whether or not -v is thrown.</source>
          <target state="translated">Da información más detallada sobre cada prueba,después de haber sido realizada.Tenga en cuenta que cualquier prueba fallida debe imprimir alguna información extra,ya sea que se lance o no -v.</target>
        </trans-unit>
        <trans-unit id="8cd5accb9bbe824d3f2172984bdf0c7f749a0330" translate="yes" xml:space="preserve">
          <source>Gives the information about the Perl DLL or the DLL containing the C function bound to by &lt;code&gt;&amp;amp;xsub&lt;/code&gt; . The meaning of &lt;code&gt;how&lt;/code&gt; is: default (2): full name; 0: handle; 1: module name.</source>
          <target state="translated">Proporciona informaci&amp;oacute;n sobre la DLL de Perl o la DLL que contiene la funci&amp;oacute;n C vinculada a &lt;code&gt;&amp;amp;xsub&lt;/code&gt; . El significado de &lt;code&gt;how&lt;/code&gt; es: predeterminado (2): nombre completo; 0: manejar; 1: nombre del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="1bcbcfb87cf34f833fbb8de6ef0d85359b318960" translate="yes" xml:space="preserve">
          <source>Gives the information about the Perl DLL or the DLL containing the C function bound to by &lt;code&gt;&amp;amp;xsub&lt;/code&gt;. The meaning of &lt;code&gt;how&lt;/code&gt; is: default (2): full name; 0: handle; 1: module name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce00937b225bda0f6de7705049c711ca2d0c0b1" translate="yes" xml:space="preserve">
          <source>Gives the string value of &lt;code&gt;arg&lt;/code&gt; as in the absence of stringify overloading. If you are using this to get the address of a reference (useful for checking if two references point to the same thing) then you may be better off using &lt;code&gt;Scalar::Util::refaddr()&lt;/code&gt; , which is faster.</source>
          <target state="translated">Da el valor de cadena de &lt;code&gt;arg&lt;/code&gt; como en ausencia de sobrecarga de cadena. Si est&amp;aacute; usando esto para obtener la direcci&amp;oacute;n de una referencia (&amp;uacute;til para verificar si dos referencias apuntan a lo mismo), entonces es mejor que use &lt;code&gt;Scalar::Util::refaddr()&lt;/code&gt; , que es m&amp;aacute;s r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="775ccd199d054693bedf24e4232707e8971068ab" translate="yes" xml:space="preserve">
          <source>Gives the string value of &lt;code&gt;arg&lt;/code&gt; as in the absence of stringify overloading. If you are using this to get the address of a reference (useful for checking if two references point to the same thing) then you may be better off using &lt;code&gt;Scalar::Util::refaddr()&lt;/code&gt;, which is faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe98f7aeaa456c4237c94f0fd4653d71593c9bc" translate="yes" xml:space="preserve">
          <source>Gives the type of hints used for previous answers. May be one of &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;recommended&lt;/code&gt; or &lt;code&gt;previous&lt;/code&gt; .</source>
          <target state="translated">Da el tipo de pistas utilizadas para respuestas anteriores. Puede ser uno &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;recommended&lt;/code&gt; o &lt;code&gt;previous&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d2e6ac68dbbd284c2f353cd0f92f42c6bd450f0" translate="yes" xml:space="preserve">
          <source>Gives the type of hints used for previous answers. May be one of &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;recommended&lt;/code&gt; or &lt;code&gt;previous&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71dccbe06d617b4160092d77a20fffa36b965b4" translate="yes" xml:space="preserve">
          <source>Giving a struct element a class type that is also a struct is how structs are nested. Here, &lt;code&gt;Timeval&lt;/code&gt; represents a time (seconds and microseconds), and &lt;code&gt;Rusage&lt;/code&gt; has two elements, each of which is of type &lt;code&gt;Timeval&lt;/code&gt; .</source>
          <target state="translated">Darle a un elemento de estructura un tipo de clase que tambi&amp;eacute;n es una estructura es c&amp;oacute;mo se anidan las estructuras. Aqu&amp;iacute;, &lt;code&gt;Timeval&lt;/code&gt; representa un tiempo (segundos y microsegundos) y &lt;code&gt;Rusage&lt;/code&gt; tiene dos elementos, cada uno de los cuales es de tipo &lt;code&gt;Timeval&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c05c0b34dc6bfd6214a8b97afd38b066294f5abb" translate="yes" xml:space="preserve">
          <source>Giving a struct element a class type that is also a struct is how structs are nested. Here, &lt;code&gt;Timeval&lt;/code&gt; represents a time (seconds and microseconds), and &lt;code&gt;Rusage&lt;/code&gt; has two elements, each of which is of type &lt;code&gt;Timeval&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d166f9da4bac6d857f7dc131be5d65de1b02def6" translate="yes" xml:space="preserve">
          <source>Giving additional meanings to a symbol or construct. Actually, all languages do overloading to one extent or another, since people are good at figuring out things from &lt;b&gt;context&lt;/b&gt;.</source>
          <target state="translated">Dar significados adicionales a un s&amp;iacute;mbolo o construcci&amp;oacute;n. En realidad, todos los lenguajes se sobrecargan en un grado u otro, ya que las personas son buenas para descifrar cosas del &lt;b&gt;contexto&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e8b8f975ca429de01bb46828d5e9ad364deeb90c" translate="yes" xml:space="preserve">
          <source>Giving an invalid value for &lt;code&gt;$sock_type&lt;/code&gt; will &lt;code&gt;croak&lt;/code&gt; .</source>
          <target state="translated">Dando un valor no v&amp;aacute;lido para &lt;code&gt;$sock_type&lt;/code&gt; va a &lt;code&gt;croak&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10109e20d3ef4e69e4ba1f7e5c674f9df95fc01e" translate="yes" xml:space="preserve">
          <source>Giving an invalid value for &lt;code&gt;$sock_type&lt;/code&gt; will &lt;code&gt;croak&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f57f0ea36677c92cf9afe99cb8959d03cc0961e" translate="yes" xml:space="preserve">
          <source>Giving up control</source>
          <target state="translated">Renunciar al control</target>
        </trans-unit>
        <trans-unit id="ac34b82dc93bde9b29a5a3004c3ddbeef7e257a6" translate="yes" xml:space="preserve">
          <source>Glob elements can be extracted through the postfix dereferencing feature:</source>
          <target state="translated">Los elementos del globo pueden ser extraídos a través de la función de desreferenciación postfijo:</target>
        </trans-unit>
        <trans-unit id="f6641c458cc0583d3613a6a86e40173a73aab142" translate="yes" xml:space="preserve">
          <source>Glob not terminated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bba5393d5751445bbbac73e8d2d26ee97a6c53" translate="yes" xml:space="preserve">
          <source>Glob-style pattern matching for rules</source>
          <target state="translated">Patrón de estilo global que coincide con las reglas</target>
        </trans-unit>
        <trans-unit id="586c371162ed972fff02dbee194ab54579306095" translate="yes" xml:space="preserve">
          <source>Global DLLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4853985ae8961c644b701f3a4211e427659afca" translate="yes" xml:space="preserve">
          <source>Global Destruction</source>
          <target state="translated">Destrucción global</target>
        </trans-unit>
        <trans-unit id="d4326c5fc3d6b26143e4368742fe314ae01c47ca" translate="yes" xml:space="preserve">
          <source>Global Overriding</source>
          <target state="translated">Anulación global</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">Variables globales</target>
        </trans-unit>
        <trans-unit id="2cbdcda340ba1e2e7ca0ffb07cf96cf77ae074ef" translate="yes" xml:space="preserve">
          <source>Global buffers requested for the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74b56bb1057578230abe272aa56e202301adbc0" translate="yes" xml:space="preserve">
          <source>Global destruction.</source>
          <target state="translated">Destrucción global.</target>
        </trans-unit>
        <trans-unit id="e7f5c9eb53159b83da104e3bda376cd7346692a8" translate="yes" xml:space="preserve">
          <source>Global matching</source>
          <target state="translated">Coincidencia global</target>
        </trans-unit>
        <trans-unit id="a872e74ca2223071a991a7dc6c5ea6db791004e6" translate="yes" xml:space="preserve">
          <source>Global state maintained by XSUBs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e13a92f72eb76d8c508c2dc21b04feb11b16eff" translate="yes" xml:space="preserve">
          <source>Global symbol &quot;%s&quot; requires explicit package name (did you forget to declare &quot;my %s&quot;?)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="3650821866c81f2ac2894b41d87da9c715e1e8ce" translate="yes" xml:space="preserve">
          <source>Glue to provide EXISTS for AnyDBM_File for Storable use</source>
          <target state="translated">Pegamento para proporcionar EXISTENCIAS para el archivo AnyDBM_para uso de almacenamiento</target>
        </trans-unit>
        <trans-unit id="4909b3a46d83dbbf52b8710b4dc26c66ca78944e" translate="yes" xml:space="preserve">
          <source>Glue to provide EXISTS for NDBM_File for Storable use</source>
          <target state="translated">Pegamento para proporcionar EXISTENCIAS para el archivo NDBM para uso de almacenamiento</target>
        </trans-unit>
        <trans-unit id="d57f000cec87f12e43b8b27b36323279bd6bf351" translate="yes" xml:space="preserve">
          <source>Glue to provide EXISTS for SDBM_File for Storable use</source>
          <target state="translated">Pegamento para proporcionar EXISTENCIAS para el archivo SDBM para uso de almacenamiento</target>
        </trans-unit>
        <trans-unit id="1ef566e266fcd5938f2e20f4951576b582c8951b" translate="yes" xml:space="preserve">
          <source>Go and write your program. Everywhere in your program where you would say:</source>
          <target state="translated">Ve y escribe tu programa.En todas partes de tu programa donde dirías:</target>
        </trans-unit>
        <trans-unit id="17a5012f10d8e9cdb0ba165e243a06151fb8f234" translate="yes" xml:space="preserve">
          <source>Go into the newly-created directory and type:</source>
          <target state="translated">Entra en el directorio recién creado y escribe:</target>
        </trans-unit>
        <trans-unit id="bb969927295c4c8629a766337faf9d2987763158" translate="yes" xml:space="preserve">
          <source>Goal #1:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa364708854c41e2aaf01b89a8ca544d0591051" translate="yes" xml:space="preserve">
          <source>Goal #2:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05beafe9dca70a4a92356525cf080da1fcabd65d" translate="yes" xml:space="preserve">
          <source>Goal #3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9eecdd12afc7f1400662096cf586f7f0a2f8e4" translate="yes" xml:space="preserve">
          <source>Goal #4:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84961568f47f9182f766681bff3b6dd90dcc10a" translate="yes" xml:space="preserve">
          <source>Going forward, specification version numbers will be integers and decimal portions will correspond to a release date for the CPAN::Meta library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c6ec10417b35abc144d3f4a0729c76abf5e284" translate="yes" xml:space="preserve">
          <source>Going past the 70th column in a verbatim block might be ungracefully wrapped by some formatters.</source>
          <target state="translated">Pasar de la columna 70 en un bloque literal podría ser envuelto sin gracia por algunos formateadores.</target>
        </trans-unit>
        <trans-unit id="4a647f902e0d765ea12195a96e4829f8b1e8aa9f" translate="yes" xml:space="preserve">
          <source>Good Practices</source>
          <target state="translated">Buenas prácticas</target>
        </trans-unit>
        <trans-unit id="7d80a18b9b9c68e6a7c1c8a8d0dbf303700b7763" translate="yes" xml:space="preserve">
          <source>Good example:</source>
          <target state="translated">Un buen ejemplo:</target>
        </trans-unit>
        <trans-unit id="4143405b286941b2e4ea2b9f669d260327d04f9b" translate="yes" xml:space="preserve">
          <source>Good for tracking down why things don't work with your particular setup.</source>
          <target state="translated">Es bueno para rastrear por qué las cosas no funcionan con tu configuración particular.</target>
        </trans-unit>
        <trans-unit id="f73c69efaf3df1b92a97b27aa347eb13fea306c3" translate="yes" xml:space="preserve">
          <source>Good patches (tight code, complete, correct) stand more chance of going in. Sloppy or incorrect patches might be placed on the back burner until the pumpking has time to fix, or might be discarded altogether without further notice.</source>
          <target state="translated">Los buenos parches (código estricto,completo,correcto)tienen más posibilidades de entrar.Los parches descuidados o incorrectos pueden ser colocados en el quemador trasero hasta que el bombeo tenga tiempo de arreglarse,o pueden ser descartados por completo sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="96e99dfa2e51dca66243d416a2cf4eff66499d06" translate="yes" xml:space="preserve">
          <source>Good places to look for pre-existing modules include &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; and &lt;a href=&quot;https://metacpan.org&quot;&gt;https://metacpan.org&lt;/a&gt; and asking on &lt;code&gt;module-authors@perl.org&lt;/code&gt; (&lt;a href=&quot;http://lists.perl.org/list/module-authors.html&quot;&gt;http://lists.perl.org/list/module-authors.html&lt;/a&gt;).</source>
          <target state="translated">Buenos lugares para buscar m&amp;oacute;dulos preexistentes incluyen &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; y &lt;a href=&quot;https://metacpan.org&quot;&gt;https://metacpan.org&lt;/a&gt; y preguntar en &lt;code&gt;module-authors@perl.org&lt;/code&gt; ( &lt;a href=&quot;http://lists.perl.org/list/module-authors.html&quot;&gt;http://lists.perl.org/list /module-authors.html&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2204cbb75fbcc2f7a7c3bd131ef1fc6ce9423848" translate="yes" xml:space="preserve">
          <source>Good places to look for pre-existing modules include &lt;a href=&quot;https://metacpan.org&quot;&gt;MetaCPAN&lt;/a&gt; and &lt;a href=&quot;http://prepan.org&quot;&gt;PrePAN&lt;/a&gt; and asking on &lt;code&gt;module-authors@perl.org&lt;/code&gt; (&lt;a href=&quot;https://lists.perl.org/list/module-authors.html&quot;&gt;https://lists.perl.org/list/module-authors.html&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1707029b59612c93d147b82e0c5b435886ce180c" translate="yes" xml:space="preserve">
          <source>Gory details of parsing quoted constructs</source>
          <target state="translated">Detalles sangrientos del análisis de las construcciones citadas</target>
        </trans-unit>
        <trans-unit id="bbd8ec1cd2d79b0a075cc6f6de1b4a7f725a4726" translate="yes" xml:space="preserve">
          <source>Got an error from DosAllocMem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f16c19388eabd103562554c9bfa091b6dac302" translate="yes" xml:space="preserve">
          <source>Got that? As of Perl 5.8.7, &lt;b&gt;&quot;UTF-8&quot;&lt;/b&gt; means UTF-8 in its current sense, which is conservative and strict and security-conscious, whereas &lt;b&gt;&quot;utf8&quot;&lt;/b&gt; means UTF-8 in its former sense, which was liberal and loose and lax. &lt;code&gt;Encode&lt;/code&gt; version 2.10 or later thus groks this subtle but critically important distinction between &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; and &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; .</source>
          <target state="translated">&amp;iquest;Lo tengo? A partir de Perl 5.8.7, &lt;b&gt;&quot;UTF-8&quot;&lt;/b&gt; significa UTF-8 en su sentido actual, que es conservador, estricto y consciente de la seguridad, mientras que &lt;b&gt;&quot;utf8&quot;&lt;/b&gt; significa UTF-8 en su sentido anterior, que era liberal y suelto y flojo. &lt;code&gt;Encode&lt;/code&gt; ,la versi&amp;oacute;n 2.10 o posterior asimila esta sutil pero cr&amp;iacute;ticamente importante distinci&amp;oacute;n entre &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; y &lt;code&gt;&quot;utf8&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90ebaa561920aa9c2dc9e089697bca34ce37bae3" translate="yes" xml:space="preserve">
          <source>Got that? As of Perl 5.8.7, &lt;b&gt;&quot;UTF-8&quot;&lt;/b&gt; means UTF-8 in its current sense, which is conservative and strict and security-conscious, whereas &lt;b&gt;&quot;utf8&quot;&lt;/b&gt; means UTF-8 in its former sense, which was liberal and loose and lax. &lt;code&gt;Encode&lt;/code&gt; version 2.10 or later thus groks this subtle but critically important distinction between &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; and &lt;code&gt;&quot;utf8&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4fc0a0d78b25de463f95089769282373893971" translate="yes" xml:space="preserve">
          <source>Got that? Larry is always right, even when he was wrong. It's rare to see either Rule exercised, but they are often alluded to.</source>
          <target state="translated">¿Entendiste? Larry siempre tiene razón,incluso cuando se equivocó.Es raro ver que alguna de las dos reglas se ejerza,pero a menudo se alude a ellas.</target>
        </trans-unit>
        <trans-unit id="0a9ffc4a328e6d21b11f3b8312d08e5b413aec49" translate="yes" xml:space="preserve">
          <source>Goto</source>
          <target state="translated">Goto</target>
        </trans-unit>
        <trans-unit id="ca69ac23523fe10118230a18e01d42c76c8abcda" translate="yes" xml:space="preserve">
          <source>Goto celib-palm-3.0\inc\cewin32.h, search for</source>
          <target state="translated">Ve a celib-palm-3.0inccewin32.h,busca por</target>
        </trans-unit>
        <trans-unit id="a85e9c5d6dac87806ef2eaf1d93698fc48760a76" translate="yes" xml:space="preserve">
          <source>Goto undefined subroutine%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5890e910925d55654694f7ac1d42c03b68abbff2" translate="yes" xml:space="preserve">
          <source>Gotta have a plan!</source>
          <target state="translated">¡Tiene que tener un plan!</target>
        </trans-unit>
        <trans-unit id="df8da02e8026798b67902a6787a5e32f5d1a8e68" translate="yes" xml:space="preserve">
          <source>Gprof Profiling</source>
          <target state="translated">Perfil de Gprof</target>
        </trans-unit>
        <trans-unit id="55ce61dea540285b5729c947a17f82efa2f6d1fa" translate="yes" xml:space="preserve">
          <source>Grafts</source>
          <target state="translated">Grafts</target>
        </trans-unit>
        <trans-unit id="3259bccd5547a6fb8f77a4aaea022a14a41cb136" translate="yes" xml:space="preserve">
          <source>Graham Barr &amp;lt;</source>
          <target state="translated">Graham Barr &amp;lt;</target>
        </trans-unit>
        <trans-unit id="42879164d6188855410d722427bd053e05e54ab7" translate="yes" xml:space="preserve">
          <source>Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;</source>
          <target state="translated">Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3732fa7e665009645e9e3e4379dd15edc1deb872" translate="yes" xml:space="preserve">
          <source>Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;, Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;, Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</source>
          <target state="translated">Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;, Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;, Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="04f7ed11e65f8179b2c21de31c70c0e5a2b54f2f" translate="yes" xml:space="preserve">
          <source>Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;, Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</source>
          <target state="translated">Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;, Marcus Holland-Moritz &amp;lt;mhx@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7820aa7c6db183e706a7e84c2116e052f42811c0" translate="yes" xml:space="preserve">
          <source>Graham Barr, the original Configure script of libnet.</source>
          <target state="translated">Graham Barr,el guión original de Configure de libnet.</target>
        </trans-unit>
        <trans-unit id="6433e49daadbc911a68d39c3c194d36d03e3dce3" translate="yes" xml:space="preserve">
          <source>Graham Barr. Currently maintained by the Perl Porters. Please report all bugs to &amp;lt;perlbug@perl.org&amp;gt;.</source>
          <target state="translated">Graham Barr. Actualmente mantenido por Perl Porters. Informe todos los errores a &amp;lt;perlbug@perl.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="87a1ea2f5e9ab380ccaeb3b75aeec67585ecc358" translate="yes" xml:space="preserve">
          <source>Graham Barr. atmark() by Lincoln Stein. Currently maintained by the Perl Porters. Please report all bugs to &amp;lt;perlbug@perl.org&amp;gt;.</source>
          <target state="translated">Graham Barr. atmark () de Lincoln Stein. Actualmente mantenido por Perl Porters. Informe todos los errores a &amp;lt;perlbug@perl.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="851fd61fa3fb1f5808ef8c8f9dd236974160fdad" translate="yes" xml:space="preserve">
          <source>Graham Knop &amp;lt;haarg@haarg.org&amp;gt;</source>
          <target state="translated">Graham Knop &amp;lt;haarg@haarg.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6fb9ba6977c2fe4e9f6adc9a0ece5aa2b87ae637" translate="yes" xml:space="preserve">
          <source>Graham Ollis &amp;lt;plicease@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd17342cb47b948d64f169d73cfeec3f8b3e3f31" translate="yes" xml:space="preserve">
          <source>Grammar</source>
          <target state="translated">Grammar</target>
        </trans-unit>
        <trans-unit id="ca8c988917ca583e838e2647bffdc0dd152b9fb8" translate="yes" xml:space="preserve">
          <source>Grammatical note on local()</source>
          <target state="translated">Nota gramatical sobre local()</target>
        </trans-unit>
        <trans-unit id="2299a70876b7b20196c0e232824b6e303cf0f817" translate="yes" xml:space="preserve">
          <source>Grapheme_Link</source>
          <target state="translated">Grapheme_Link</target>
        </trans-unit>
        <trans-unit id="844b43fd71cbef7f18e867fe292f5c5684e1ab12" translate="yes" xml:space="preserve">
          <source>Great care is necessary when defining the command if quoting needs to be done. For instance, you would need to say:</source>
          <target state="translated">Hay que tener mucho cuidado al definir el comando si es necesario citarlo.Por ejemplo,necesitaría decir:</target>
        </trans-unit>
        <trans-unit id="4902a456caa9a4eab463ce526c9df0f6180be184" translate="yes" xml:space="preserve">
          <source>Greece</source>
          <target state="translated">Greece</target>
        </trans-unit>
        <trans-unit id="aacdfd21674e83c3c0b99f5359b19144d7666c82" translate="yes" xml:space="preserve">
          <source>Gregor Hermann &amp;lt;gregoa@debian.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5e7d8a89c7b18aac43a9485b1546ac5b284f75" translate="yes" xml:space="preserve">
          <source>Group ID&amp;mdash;in Unix, the numeric group ID that the &lt;b&gt;operating system&lt;/b&gt; uses to identify you and members of your &lt;b&gt;group&lt;/b&gt;.</source>
          <target state="translated">ID de grupo: en Unix, el ID de grupo num&amp;eacute;rico que utiliza el &lt;b&gt;sistema operativo&lt;/b&gt; para identificarlo a usted y a los miembros de su &lt;b&gt;grupo&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="16a718e915556d62f893e87ee82787d36995c7e4" translate="yes" xml:space="preserve">
          <source>Group Perl's functions a la perlfunc.pod</source>
          <target state="translated">Las funciones del grupo Perl a la perlfunc.pod</target>
        </trans-unit>
        <trans-unit id="893d792c6d1b1a9f4d49b51e99c5345d804a3939" translate="yes" xml:space="preserve">
          <source>Group name must start with a non-digit word character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2d2b2b97d3fc7cff00f1012c3e7d17c04c2768" translate="yes" xml:space="preserve">
          <source>Group of languages collectively called &quot;Otom&amp;iacute;&quot;.</source>
          <target state="translated">Grupo de lenguas denominadas colectivamente &quot;otom&amp;iacute;&quot;.</target>
        </trans-unit>
        <trans-unit id="2bfcba6c579bd2ce1f3564ea422bb81f6281834e" translate="yes" xml:space="preserve">
          <source>Group ownership of directories that already exist will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb77c777665eaa5c9fc03cd1712f2d2993483948" translate="yes" xml:space="preserve">
          <source>Group ownwership of directories that already exist will not be changed.</source>
          <target state="translated">La propiedad colectiva de los directorios que ya existen no cambiará.</target>
        </trans-unit>
        <trans-unit id="fc00408fdf05ce5150089b75b75b23c46962261d" translate="yes" xml:space="preserve">
          <source>Grouping things and hierarchical matching</source>
          <target state="translated">Agrupar las cosas y hacerlas coincidir jerárquicamente</target>
        </trans-unit>
        <trans-unit id="fee5f710c9ba7310f55f4c68e3911ad898f334f8" translate="yes" xml:space="preserve">
          <source>Growing Your Own</source>
          <target state="translated">Creciendo tu propio</target>
        </trans-unit>
        <trans-unit id="fe293b21525de44a2e12eb8c0027d2290b7e1a71" translate="yes" xml:space="preserve">
          <source>Gtk and Gtk2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7864c5c65bb01ac0a14a3115852b7c02219c584f" translate="yes" xml:space="preserve">
          <source>Guaran&amp;iacute;</source>
          <target state="translated">Guaran&amp;iacute;</target>
        </trans-unit>
        <trans-unit id="23ca9988de5733d8c8247a3e4e4982df4f209ed4" translate="yes" xml:space="preserve">
          <source>Guess the name of this package by examining the working directory's name. MakeMaker calls this only if the developer has not supplied a NAME attribute.</source>
          <target state="translated">Adivina el nombre de este paquete examinando el nombre del directorio de trabajo.MakeMaker llama a esto sólo si el desarrollador no ha proporcionado un atributo NAME.</target>
        </trans-unit>
        <trans-unit id="07aa51a012723e8368dc093b343c1ff642baa052" translate="yes" xml:space="preserve">
          <source>Guess.U</source>
          <target state="translated">Guess.U</target>
        </trans-unit>
        <trans-unit id="b6684e2eba17124bde1d0355e24c5684aef1bed6" translate="yes" xml:space="preserve">
          <source>Guesses encoding from data</source>
          <target state="translated">Adivina la codificación de los datos</target>
        </trans-unit>
        <trans-unit id="73b139c37c0097cfe3599d3082c96b0c2aee8d6a" translate="yes" xml:space="preserve">
          <source>Guidelines for Converting Perl 4 Library Scripts into Modules</source>
          <target state="translated">Directrices para convertir los scripts de biblioteca de Perl 4 en módulos</target>
        </trans-unit>
        <trans-unit id="c758bdbdcf1ca454825428e4f69546fbfdaf18d9" translate="yes" xml:space="preserve">
          <source>Guidelines for Module Creation</source>
          <target state="translated">Directrices para la creación de módulos</target>
        </trans-unit>
        <trans-unit id="5fc6aecec704586c9198ddc6d24910690ea4c4e4" translate="yes" xml:space="preserve">
          <source>Guidelines for Reusing Application Code</source>
          <target state="translated">Directrices para la reutilización del código de aplicación</target>
        </trans-unit>
        <trans-unit id="b1f36e56060bf112e405cf82b761c5b4b96e7caf" translate="yes" xml:space="preserve">
          <source>Guillem Jover &amp;lt;guillem@hadrons.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f22068b470b55c5659b24a529d486d165efe1e8" translate="yes" xml:space="preserve">
          <source>Gulliver's Travels</source>
          <target state="translated">Los viajes de Gulliver</target>
        </trans-unit>
        <trans-unit id="d3d42475682a0666adb5abe77243023160ef0a45" translate="yes" xml:space="preserve">
          <source>Gunzip/gzip for OS/390 is discussed at:</source>
          <target state="translated">Gunzip/gzip para OS/390 se discute en:</target>
        </trans-unit>
        <trans-unit id="93a0fe097041b93e0be65ee154daffc6b1381bc9" translate="yes" xml:space="preserve">
          <source>Gurusamy Sarathy &amp;lt;gsar@activestate.com&amp;gt;</source>
          <target state="translated">Gurusamy Sarathy &amp;lt;gsar@activestate.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d960951b2cdfc9f9204beae43f12a4a11b295b41" translate="yes" xml:space="preserve">
          <source>Gurusamy Sarathy gsar@activestate.com</source>
          <target state="translated">Gurusamy Sarathy gsar@activestate.com</target>
        </trans-unit>
        <trans-unit id="7c88e96e80542c5ab8c25d94ba78c38a9434f36e" translate="yes" xml:space="preserve">
          <source>GvAV</source>
          <target state="translated">GvAV</target>
        </trans-unit>
        <trans-unit id="93e9014719ba7dd6bd9c9a5946fe1b93538edf1f" translate="yes" xml:space="preserve">
          <source>GvCV</source>
          <target state="translated">GvCV</target>
        </trans-unit>
        <trans-unit id="aafef8d6561e3651edafc5890e67e14dff424872" translate="yes" xml:space="preserve">
          <source>GvHV</source>
          <target state="translated">GvHV</target>
        </trans-unit>
        <trans-unit id="f991fe9870fc45fa7b0143b9ae1b6bc1ca3392d4" translate="yes" xml:space="preserve">
          <source>GvREFCNT</source>
          <target state="translated">GvREFCNT</target>
        </trans-unit>
        <trans-unit id="f6f249bdd6a51ddf7f142e9b9a80faa131f6974a" translate="yes" xml:space="preserve">
          <source>GvSV</source>
          <target state="translated">GvSV</target>
        </trans-unit>
        <trans-unit id="ddf1c563576d03de876ebbb0aae2f006c136dc9f" translate="yes" xml:space="preserve">
          <source>Gv_AMupdate</source>
          <target state="translated">Gv_AMupdate</target>
        </trans-unit>
        <trans-unit id="5351767f64737ac06c8bff705b0350e3b12bf9fe" translate="yes" xml:space="preserve">
          <source>Gzip Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="db954ca5c29d07dccf4b2cd89bd036d330b99ae8" translate="yes" xml:space="preserve">
          <source>H -number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6779059ab26129a6e380e0ef513d4df3cbdbef7" translate="yes" xml:space="preserve">
          <source>H.Merijn Brand &amp;lt;h.m.brand@xs4all.nl&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58edf605e14f939b5061c16becc3c237b2cf3c47" translate="yes" xml:space="preserve">
          <source>H.Merijn Brand &amp;lt;h.m.brand@xs4all.nl&amp;gt; Jeff Okamoto &amp;lt;okamoto@corp.hp.com&amp;gt;</source>
          <target state="translated">Marca H.Merijn &amp;lt;hmbrand@xs4all.nl&amp;gt; Jeff Okamoto &amp;lt;okamoto@corp.hp.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0b19d1e1b8a5918571f9c9d135638b9f04547d8f" translate="yes" xml:space="preserve">
          <source>HANDLE</source>
          <target state="translated">HANDLE</target>
        </trans-unit>
        <trans-unit id="47ce9e7227c5c88413414b245a64737d1d7aa032" translate="yes" xml:space="preserve">
          <source>HANDLE-&amp;gt;autoflush( EXPR )</source>
          <target state="translated">MANIJA-&amp;gt; autoflush (EXPR)</target>
        </trans-unit>
        <trans-unit id="e39692187e35b8d86da8462f683967a48317dea2" translate="yes" xml:space="preserve">
          <source>HANDLE-&amp;gt;format_lines_left(EXPR)</source>
          <target state="translated">HANDLE-&amp;gt;format_lines_left(EXPR)</target>
        </trans-unit>
        <trans-unit id="209a918918c25cd99d83f2f0dbbc4f467dc693f1" translate="yes" xml:space="preserve">
          <source>HANDLE-&amp;gt;format_lines_per_page(EXPR)</source>
          <target state="translated">HANDLE-&amp;gt;format_lines_per_page(EXPR)</target>
        </trans-unit>
        <trans-unit id="f1d2f9361bebc33157aeedef49dc5f8e73598847" translate="yes" xml:space="preserve">
          <source>HANDLE-&amp;gt;format_name(EXPR)</source>
          <target state="translated">HANDLE-&amp;gt;format_name(EXPR)</target>
        </trans-unit>
        <trans-unit id="0c9bdf53fa0c2bc01c5c44ec8066b07d741898ab" translate="yes" xml:space="preserve">
          <source>HANDLE-&amp;gt;format_page_number(EXPR)</source>
          <target state="translated">HANDLE-&amp;gt;format_page_number(EXPR)</target>
        </trans-unit>
        <trans-unit id="7462f62c1d1e40bafc8b07b413de84a660ada74e" translate="yes" xml:space="preserve">
          <source>HANDLE-&amp;gt;format_top_name(EXPR)</source>
          <target state="translated">HANDLE-&amp;gt;format_top_name(EXPR)</target>
        </trans-unit>
        <trans-unit id="69f09f09d96a3982a3608cf0a03c946ae72aee61" translate="yes" xml:space="preserve">
          <source>HANDLE-&amp;gt;input_line_number( EXPR )</source>
          <target state="translated">HANDLE-&amp;gt; input_line_number (EXPR)</target>
        </trans-unit>
        <trans-unit id="db41c0239e45c0e3b7059c151c4adb6338795f77" translate="yes" xml:space="preserve">
          <source>HANDLE_FLAG_INHERIT</source>
          <target state="translated">HANDLE_FLAG_INHERIT</target>
        </trans-unit>
        <trans-unit id="c8a128a1c9ef12c12e3c9fff40e91e634c10d778" translate="yes" xml:space="preserve">
          <source>HANDLE_FLAG_PROTECT_FROM_CLOSE</source>
          <target state="translated">HANDLE_FLAG_PROTECT_FROM_CLOSE</target>
        </trans-unit>
        <trans-unit id="f8435efca06ef2ecdd8e0b507cc5cef4ba204c42" translate="yes" xml:space="preserve">
          <source>HARDLINK</source>
          <target state="translated">HARDLINK</target>
        </trans-unit>
        <trans-unit id="789c59b41e5418de142d321c95b023de4bdfe79e" translate="yes" xml:space="preserve">
          <source>HASHES OF ARRAYS</source>
          <target state="translated">...DE MATRICES...</target>
        </trans-unit>
        <trans-unit id="530c7188bb0935938e3b58577815f4334a49e6ef" translate="yes" xml:space="preserve">
          <source>HASHES OF HASHES</source>
          <target state="translated">HASHES DE HASHES</target>
        </trans-unit>
        <trans-unit id="d3053d5db9cc8cb93b26db3c26c76bdfdff06ace" translate="yes" xml:space="preserve">
          <source>HEADER</source>
          <target state="translated">HEADER</target>
        </trans-unit>
        <trans-unit id="a880c390a6cf41f70f9a43af2b194442bbe8c615" translate="yes" xml:space="preserve">
          <source>HEY</source>
          <target state="translated">HEY</target>
        </trans-unit>
        <trans-unit id="b9cd18c768bfd2083a9ac760b8041edbaa72c7c4" translate="yes" xml:space="preserve">
          <source>HEf_SVKEY</source>
          <target state="translated">HEf_SVKEY</target>
        </trans-unit>
        <trans-unit id="fc5d4b9117ba9e87388174aee4f4970bdfe8d066" translate="yes" xml:space="preserve">
          <source>HH</source>
          <target state="translated">HH</target>
        </trans-unit>
        <trans-unit id="5b8cce18efcb259ac8ee29e1cd21dcc198081fdb" translate="yes" xml:space="preserve">
          <source>HHHH</source>
          <target state="translated">HHHH</target>
        </trans-unit>
        <trans-unit id="d77d0b27955f008358918e195742c4c8208699e1" translate="yes" xml:space="preserve">
          <source>HIGH</source>
          <target state="translated">HIGH</target>
        </trans-unit>
        <trans-unit id="9c2ea135ec1db4f446c806f7895ae6f2c302104a" translate="yes" xml:space="preserve">
          <source>HINTS AND TIPS</source>
          <target state="translated">CONSEJOS Y SUGERENCIAS</target>
        </trans-unit>
        <trans-unit id="f6dc58f5e8036353a7ac15516c30ac562e23dc26" translate="yes" xml:space="preserve">
          <source>HISTORY</source>
          <target state="translated">HISTORY</target>
        </trans-unit>
        <trans-unit id="d0e8f9a5a2dbdd8722af6ec7f2972e1375fb801e" translate="yes" xml:space="preserve">
          <source>HMAC-SHA-1/224/256/384/512</source>
          <target state="translated">HMAC-SHA-1/224/256/384/512</target>
        </trans-unit>
        <trans-unit id="7731962fb19e09fff22c1be46abc4b02e9ff78eb" translate="yes" xml:space="preserve">
          <source>HOME</source>
          <target state="translated">HOME</target>
        </trans-unit>
        <trans-unit id="687695890e9e2ec947fdeb9bf817e5fc0911f2bf" translate="yes" xml:space="preserve">
          <source>HOOKS</source>
          <target state="translated">HOOKS</target>
        </trans-unit>
        <trans-unit id="a76f8ee2872265eb6fe359928ee6904e71dc9d05" translate="yes" xml:space="preserve">
          <source>HOW IT WORKS</source>
          <target state="translated">CÓMO FUNCIONA</target>
        </trans-unit>
        <trans-unit id="e600c98fe8777fa43cea8c7f053ad797f5be4db6" translate="yes" xml:space="preserve">
          <source>HOW TO USE (THE EASY WAY)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc39d7b9b79bc6d75414a8ad9ee6ee875828738b" translate="yes" xml:space="preserve">
          <source>HOW TO USE (THE HARD WAY)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab9f433c21086a197b4e1c36ca01d70a2e0dffa" translate="yes" xml:space="preserve">
          <source>HOW TO USE MAKETEXT</source>
          <target state="translated">CÓMO USAR MAKETEXT</target>
        </trans-unit>
        <trans-unit id="6ab52b908787e3ae467e585a2243118089d23d99" translate="yes" xml:space="preserve">
          <source>HP Itanium 2 systems are usually referred to with model description &quot;HP Integrity&quot;.</source>
          <target state="translated">Los sistemas de Itanium 2 de HP suelen denominarse con la descripción del modelo &quot;Integridad de HP&quot;.</target>
        </trans-unit>
        <trans-unit id="a35088083875e2de4dedaf2dca0ae84350b5e92b" translate="yes" xml:space="preserve">
          <source>HP PA-RISC systems are usually referred to with model description &quot;HP 9000&quot;. The last CPU in this series is the PA-8900. Support for PA-RISC architectured machines officially ended as shown in the following table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3417f4faadcebc07bb9497031485b632cc05e1" translate="yes" xml:space="preserve">
          <source>HP also ships servers with the 128-bit Itanium processor(s). The cx26x0 is told to have Madison 6. As of the date of this document's last update, the following systems contain Itanium or Itanium 2 chips (this is likely to be out of date):</source>
          <target state="translated">HP también envía servidores con los procesadores Itanium de 128 bits.Se dice que el cx26x0 tiene Madison 6.A la fecha de la última actualización de este documento,los siguientes sistemas contienen chips de Itanium o Itanium 2 (es probable que estén desactualizados):</target>
        </trans-unit>
        <trans-unit id="8d4391f0427fa0cb914bda064998c9b6cf7d23d3" translate="yes" xml:space="preserve">
          <source>HP has a C/C++ static analyzer product for HP-UX caller Code Advisor. (Link not given here because the URL is horribly long and seems horribly unstable; use the search engine of your choice to find it.) The use of the &lt;code&gt;cadvise_cc&lt;/code&gt; recipe with &lt;code&gt;Configure ... -Dcc=./cadvise_cc&lt;/code&gt; (see cadvise &quot;User Guide&quot;) is recommended; as is the use of &lt;code&gt;+wall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0a2c854fdfe25037f6f2462163a3677a8c0d9a" translate="yes" xml:space="preserve">
          <source>HP has asked the porting centre to move Open Source binaries from /opt to /usr/local, so binaries produced since the start of July 2002 are located in /usr/local.</source>
          <target state="translated">HP ha pedido al centro de portabilidad que traslade los binarios de código abierto de /opt a /usr/local,por lo que los binarios producidos desde principios de julio de 2002 se encuentran en /usr/local.</target>
        </trans-unit>
        <trans-unit id="a764a39116b67d584d0e922398f34d8a6157ce49" translate="yes" xml:space="preserve">
          <source>HP porting centre tries to keep up with customer demand and release updates from the Open Source community. Having precompiled Perl binaries available is obvious, though &quot;up-to-date&quot; is something relative. At the moment of writing only perl-5.10.1 was available (with 5.16.3 being the latest stable release from the porters point of view).</source>
          <target state="translated">El centro de portabilidad de HP trata de mantenerse al día con la demanda de los clientes y publicar las actualizaciones de la comunidad de código abierto.Tener binarios de Perl precompilados disponibles es obvio,aunque &quot;actualizado&quot; es algo relativo.En el momento de escribir este artículo sólo estaba disponible el perl 5.10.1 (siendo 5.16.3 la última versión estable desde el punto de vista de los porteros).</target>
        </trans-unit>
        <trans-unit id="add793b4cd90e315447341dd87e2674b6f6bf947" translate="yes" xml:space="preserve">
          <source>HP porting centre tries to keep up with customer demand and release updates from the Open Source community. Having precompiled Perl binaries available is obvious, though &quot;up-to-date&quot; is something relative. At the moment of writing perl-5.10.1 and 5.28.0 were available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbd2af4559edefe4dd19c07c7c19b95825a0430" translate="yes" xml:space="preserve">
          <source>HP's HP9000 Unix systems run on HP's own Precision Architecture (PA-RISC) chip. HP-UX used to run on the Motorola MC68000 family of chips, but any machine with this chip in it is quite obsolete and this document will not attempt to address issues for compiling Perl on the Motorola chipset.</source>
          <target state="translated">Los sistemas HP9000 Unix de HP funcionan con el chip de Arquitectura de Precisión (PA-RISC)de HP.HP-UX solía funcionar con la familia de chips Motorola MC68000,pero cualquier máquina con este chip es bastante obsoleta y este documento no intentará abordar los problemas de la compilación de Perl en el chipset Motorola.</target>
        </trans-unit>
        <trans-unit id="880e3ff3e606f859fc4dde60cd558255e131f001" translate="yes" xml:space="preserve">
          <source>HP's HP9000 Unix systems run on HP's own Precision Architecture (PA-RISC) chip. HP-UX used to run on the Motorola MC68000 family of chips, but any machine with this chip in it is quite obsolete and this document will not attempt to address issues for compiling Perl on the Motorola chipset. Even though PA-RISC hardware is not sold anymore, a lot of machines still running on these CPU's can be found in the wild.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c305ce22fa1ddad5ff6a9a241e6067a9f35cad67" translate="yes" xml:space="preserve">
          <source>HP-UX</source>
          <target state="translated">HP-UX</target>
        </trans-unit>
        <trans-unit id="5d006886dc4fd65e0adca5c8c02c5767eb4d1359" translate="yes" xml:space="preserve">
          <source>HP-UX 11 Y2K patch &quot;Y2K-1100 B.11.00.B0125 HP-UX Core OS Year 2000 Patch Bundle&quot; has been reported to break the io/fs test #18 which tests whether utime() can change timestamps. The Y2K patch seems to break utime() so that over NFS the timestamps do not get changed (on local filesystems utime() still works). This has probably been fixed on your system by now.</source>
          <target state="translated">Se ha informado que el parche HP-UX 11 Y2K &quot;Y2K-1100 B.11.00.B0125 HP-UX Core OS Year 2000 Patch Bundle&quot; rompe la prueba io/fs #18 que comprueba si utime()puede cambiar las marcas de tiempo.El parche del año 2000 parece romper utime()para que en NFS no se cambien las marcas de tiempo (en los sistemas de archivos locales utime()sigue funcionando).Probablemente esto ya se haya solucionado en tu sistema.</target>
        </trans-unit>
        <trans-unit id="97187cfde6c75a8b8deebd75a13a60ae1c81f420" translate="yes" xml:space="preserve">
          <source>HP-UX 11i documentation on syslog, &lt;a href=&quot;http://docs.hp.com/en/B2355-60130/syslog.3C.html&quot;&gt;http://docs.hp.com/en/B2355-60130/syslog.3C.html&lt;/a&gt;</source>
          <target state="translated">Documentaci&amp;oacute;n de HP-UX 11i en syslog, &lt;a href=&quot;http://docs.hp.com/en/B2355-60130/syslog.3C.html&quot;&gt;http://docs.hp.com/en/B2355-60130/syslog.3C.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed2a9bb260e4ae72bbe1af113a3b7bdf4f05246c" translate="yes" xml:space="preserve">
          <source>HP-UX Kernel Parameters (maxdsiz) for Compiling Perl</source>
          <target state="translated">Parámetros del núcleo HP-UX (maxdsiz)para compilar Perl</target>
        </trans-unit>
        <trans-unit id="83019d5a780dd0ff3c9db7fabc3a90c74127c6c2" translate="yes" xml:space="preserve">
          <source>HP-UX also runs on the new Itanium processor. This requires the use of a different version of HP-UX (currently 11.23 or 11i v2), and with the exception of a few differences detailed below and in later sections, Perl should compile with no problems.</source>
          <target state="translated">El HP-UX también funciona con el nuevo procesador Itanium.Esto requiere el uso de una versión diferente de HP-UX (actualmente 11.23 o 11i v2),y con la excepción de algunas diferencias que se detallan a continuación y en secciones posteriores,Perl debería compilar sin problemas.</target>
        </trans-unit>
        <trans-unit id="1d125d82d143012eb929f6160766c96e578f0298" translate="yes" xml:space="preserve">
          <source>HP-UX also runs on the newer Itanium processor. This requires the use of HP-UX version 11.23 (11i v2) or 11.31 (11i v3), and with the exception of a few differences detailed below and in later sections, Perl should compile with no problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc19e78ac072e943aed407c41f2503cdb482688" translate="yes" xml:space="preserve">
          <source>HP-UX cadvise (Code Advisor)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6054c4b79943ef67e4dcb28eb588b66781f366f6" translate="yes" xml:space="preserve">
          <source>HP-UX supports dynamically loadable libraries (shared libraries). Shared libraries end with the suffix .sl. On Itanium systems, they end with the suffix .so.</source>
          <target state="translated">HP-UX soporta bibliotecas cargables dinámicamente (bibliotecas compartidas).Las bibliotecas compartidas terminan con el sufijo .sl.En los sistemas Itanium,terminan con el sufijo .so.</target>
        </trans-unit>
        <trans-unit id="b4319bb42f0da477a0906018447c3096d305eb37" translate="yes" xml:space="preserve">
          <source>HP-UX versions</source>
          <target state="translated">HP-UX versions</target>
        </trans-unit>
        <trans-unit id="0c355dad6ecf8b6970623574fcecedac49554b22" translate="yes" xml:space="preserve">
          <source>HP-UX versions before 10.30 require a separate installation of a POSIX threads library package. Two examples are the HP DCE package, available on &quot;HP-UX Hardware Extensions 3.0, Install and Core OS, Release 10.20, April 1999 (B3920-13941)&quot; or the Freely available PTH package, available on H.Merijn's site (&lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http://mirrors.develooper.com/hpux/&lt;/a&gt;). The use of PTH will be unsupported in perl-5.12 and up and is rather buggy in 5.11.x.</source>
          <target state="translated">Las versiones de HP-UX anteriores a la 10.30 requieren una instalaci&amp;oacute;n separada de un paquete de biblioteca de subprocesos POSIX. Dos ejemplos son el paquete HP DCE, disponible en &quot;HP-UX Hardware Extensions 3.0, Install and Core OS, Release 10.20, April 1999 (B3920-13941)&quot; o el paquete PTH de libre disponibilidad, disponible en el sitio de H.Merijn ( &lt;a href=&quot;http://mirrors.develooper.com/hpux/&quot;&gt;http: //mirrors.develooper.com/hpux/&lt;/a&gt; ). El uso de PTH no ser&amp;aacute; compatible con perl-5.12 y versiones posteriores y tiene algunos errores en 5.11.x.</target>
        </trans-unit>
        <trans-unit id="6300aa55afa8bf02e973bd6a558a179a30e1f585" translate="yes" xml:space="preserve">
          <source>HPFS</source>
          <target state="translated">HPFS</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="ae70bc50ce534eb0105058b7b1522f4597dc620f" translate="yes" xml:space="preserve">
          <source>HTML charref mode (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2be72b2d469286542425f84d15023962183962" translate="yes" xml:space="preserve">
          <source>HTML_string</source>
          <target state="translated">HTML_string</target>
        </trans-unit>
        <trans-unit id="64e75e01631bde6e4c66cc0848e48e0e81e21b3e" translate="yes" xml:space="preserve">
          <source>HTTP &amp;amp; NETWORK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d1305b7d421bfab1c584e1b3a7cf4b5ad6100e" translate="yes" xml:space="preserve">
          <source>HTTP::Tiny</source>
          <target state="translated">HTTP::Tiny</target>
        </trans-unit>
        <trans-unit id="1593daf90ee92997798e7c9ba64487e429248ed3" translate="yes" xml:space="preserve">
          <source>HTTP::Tiny - A small, simple, correct HTTP/1.1 client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de96c82ab1c9cdb371d5db2534e8dba3e300f4b" translate="yes" xml:space="preserve">
          <source>HTTP::Tiny can proxy both &lt;code&gt;http&lt;/code&gt; and &lt;code&gt;https&lt;/code&gt; requests. Only Basic proxy authorization is supported and it must be provided as part of the proxy URL: &lt;code&gt;http://user:pass@proxy.example.com/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7c104dfa49bc8b7e9fbf8a2bf935e253a788eb" translate="yes" xml:space="preserve">
          <source>HTTP::Tiny focuses on correct transport. Users are responsible for ensuring that user-defined headers and content are compliant with the HTTP/1.1 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38d4dd8a81a735c3930f7b6f2dc55fa797343ae" translate="yes" xml:space="preserve">
          <source>HTTP::Tiny is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb10b64b6b7cee3af9f574696e99543d15e2129d" translate="yes" xml:space="preserve">
          <source>HTTP::Tiny supports the following proxy environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af40fad62df82d3c206edc7b46390ba49959a8f" translate="yes" xml:space="preserve">
          <source>HV</source>
          <target state="translated">HV</target>
        </trans-unit>
        <trans-unit id="9386c18987cda4e4b47eab3b2d462dd758250ce8" translate="yes" xml:space="preserve">
          <source>Ha! Try that with your garden variety regexp package...</source>
          <target state="translated">¡Ja! Intenta eso con tu paquete de variedad de jardín regexp...</target>
        </trans-unit>
        <trans-unit id="d88e3f220c919ffbf868396a7d774a5334f737c8" translate="yes" xml:space="preserve">
          <source>Hack, hack, hack. Keep in mind that Perl runs on many different platforms, with different operating systems that have different capabilities, different filesystem organizations, and even different character sets. &lt;a href=&quot;perlhacktips&quot;&gt;perlhacktips&lt;/a&gt; gives advice on this.</source>
          <target state="translated">Hack, hack, hack. Tenga en cuenta que Perl se ejecuta en muchas plataformas diferentes, con diferentes sistemas operativos que tienen diferentes capacidades, diferentes organizaciones de sistemas de archivos e incluso diferentes conjuntos de caracteres. &lt;a href=&quot;perlhacktips&quot;&gt;perlhacktips&lt;/a&gt; da consejos sobre esto.</target>
        </trans-unit>
        <trans-unit id="aa83b6b9d8de018c03b6e14834f7dbb735668abf" translate="yes" xml:space="preserve">
          <source>Hackathons</source>
          <target state="translated">Hackathons</target>
        </trans-unit>
        <trans-unit id="70b5ad218deb587375e9d9ea493155e8eea890e8" translate="yes" xml:space="preserve">
          <source>Hackathons are a very different kind of gathering where Perl hackers gather to do just that, hack nonstop for an extended (several day) period on a specific project or projects. Information about hackathons can be located in the same place as information about &lt;a href=&quot;#Workshops&quot;&gt;workshops&lt;/a&gt; as well as in &lt;a href=&quot;irc://irc.perl.org/#perl&quot;&gt;irc://irc.perl.org/#perl&lt;/a&gt;.</source>
          <target state="translated">Los hackatones son un tipo de reuni&amp;oacute;n muy diferente donde los piratas inform&amp;aacute;ticos de Perl se re&amp;uacute;nen para hacer precisamente eso, piratear sin parar durante un per&amp;iacute;odo prolongado (varios d&amp;iacute;as) en un proyecto o proyectos espec&amp;iacute;ficos. La informaci&amp;oacute;n sobre hackatones se puede encontrar en el mismo lugar que la informaci&amp;oacute;n sobre &lt;a href=&quot;#Workshops&quot;&gt;talleres&lt;/a&gt; , as&amp;iacute; como en &lt;a href=&quot;irc://irc.perl.org/#perl&quot;&gt;irc: //irc.perl.org/#perl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5b2f425b8ec6dc0f52bcfb2fe8c13331b8f6480" translate="yes" xml:space="preserve">
          <source>Hacking Perl to work on earlier Unicode versions (for very serious hackers only)</source>
          <target state="translated">Hacking Perl para trabajar en versiones anteriores de Unicode (sólo para hackers muy serios)</target>
        </trans-unit>
        <trans-unit id="c241df4cb37e7ba32f33cd5ab23a83488a78b7ae" translate="yes" xml:space="preserve">
          <source>Hacking tools and documentation</source>
          <target state="translated">Herramientas de hacking y documentación</target>
        </trans-unit>
        <trans-unit id="602beba2438c01897c485451edb2f2cc86633c34" translate="yes" xml:space="preserve">
          <source>Had to create %s unexpectedly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86df64465c5e97b2cf5ef681688c0680e733d5cf" translate="yes" xml:space="preserve">
          <source>Haiku</source>
          <target state="translated">Haiku</target>
        </trans-unit>
        <trans-unit id="2cd3bee34e1e2aafe8cc6f8bcda061ef9d49610f" translate="yes" xml:space="preserve">
          <source>Half a &lt;b&gt;byte&lt;/b&gt;, equivalent to one &lt;b&gt;hexadecimal&lt;/b&gt; digit, and worth four &lt;b&gt;bits&lt;/b&gt;.</source>
          <target state="translated">Medio &lt;b&gt;byte&lt;/b&gt; , equivalente a un d&amp;iacute;gito &lt;b&gt;hexadecimal&lt;/b&gt; y con un valor de cuatro &lt;b&gt;bits&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="6d8ab5e201dd91380811a77b55a7a931f3d5eee4" translate="yes" xml:space="preserve">
          <source>Halfway between &lt;code&gt;ok()&lt;/code&gt; and &lt;code&gt;is()&lt;/code&gt; lies &lt;code&gt;cmp_ok()&lt;/code&gt; . This allows you to compare two arguments using any binary perl operator. The test passes if the comparison is true and fails otherwise.</source>
          <target state="translated">A medio camino entre &lt;code&gt;ok()&lt;/code&gt; y &lt;code&gt;is()&lt;/code&gt; encuentra &lt;code&gt;cmp_ok()&lt;/code&gt; . Esto le permite comparar dos argumentos usando cualquier operador perl binario. La prueba pasa si la comparaci&amp;oacute;n es verdadera y falla en caso contrario.</target>
        </trans-unit>
        <trans-unit id="cfee9331a26c8019adee0d29a9ba050dd1ac3641" translate="yes" xml:space="preserve">
          <source>Halfway between &lt;code&gt;ok()&lt;/code&gt; and &lt;code&gt;is()&lt;/code&gt; lies &lt;code&gt;cmp_ok()&lt;/code&gt;. This allows you to compare two arguments using any binary perl operator. The test passes if the comparison is true and fails otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86179df6c35646296ecd922e347bf8fb4cdc3c6c" translate="yes" xml:space="preserve">
          <source>Hand-editing</source>
          <target state="translated">Hand-editing</target>
        </trans-unit>
        <trans-unit id="2243466296e92364f7bf27ac345ae2a71eab76a8" translate="yes" xml:space="preserve">
          <source>Handle is open.</source>
          <target state="translated">El mango está abierto.</target>
        </trans-unit>
        <trans-unit id="9bb0ae5137688cc1b8e62808a86d332a61061726" translate="yes" xml:space="preserve">
          <source>Handles compile-time scope entry. Arranges for hints to be restored on block exit and also handles pad sequence numbers to make lexical variables scope right. Returns a savestack index for use with &lt;code&gt;block_end&lt;/code&gt; .</source>
          <target state="translated">Maneja la entrada de alcance en tiempo de compilaci&amp;oacute;n. Organiza que las sugerencias se restauren al salir del bloque y tambi&amp;eacute;n maneja los n&amp;uacute;meros de secuencia del pad para que las variables l&amp;eacute;xicas tengan un alcance correcto. Devuelve un &amp;iacute;ndice de savestack para usar con &lt;code&gt;block_end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab1b19f04bb1317fba3f910449270efd5565be88" translate="yes" xml:space="preserve">
          <source>Handles compile-time scope entry. Arranges for hints to be restored on block exit and also handles pad sequence numbers to make lexical variables scope right. Returns a savestack index for use with &lt;code&gt;block_end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadca6115d853e86175413031bcfebcbec35442a" translate="yes" xml:space="preserve">
          <source>Handles compile-time scope exit.</source>
          <target state="translated">Maneja la salida de la pantalla de tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="8e7e0dd257d42c19a22d84dd680aab03b4645ae7" translate="yes" xml:space="preserve">
          <source>Handles compile-time scope exit. &lt;code&gt;floor&lt;/code&gt; is the savestack index returned by &lt;code&gt;block_start&lt;/code&gt;, and &lt;code&gt;seq&lt;/code&gt; is the body of the block. Returns the block, possibly modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbfa1a57fe1955a23aba6a4d759ffdeff314724" translate="yes" xml:space="preserve">
          <source>Handles copying &lt;code&gt;$(MYEXTLIB)&lt;/code&gt; as starter for final static library that then gets added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78a213e08f22079d0727d65ee7cd82040828af3" translate="yes" xml:space="preserve">
          <source>Handles that were opened write-only won't work. Handles that were opened read-only will work as long as you don't try to modify the array. Handles must be attached to seekable sources of data---that means no pipes or sockets. If &lt;code&gt;Tie::File&lt;/code&gt; can detect that you supplied a non-seekable handle, the &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call will throw an exception. (On Unix systems, it can detect this.)</source>
          <target state="translated">Los identificadores que se abrieron solo de escritura no funcionar&amp;aacute;n. Los identificadores que se abrieron como de solo lectura funcionar&amp;aacute;n siempre que no intente modificar la matriz. Las manijas deben estar conectadas a fuentes de datos buscables, lo que significa que no hay tuber&amp;iacute;as ni enchufes. Si &lt;code&gt;Tie::File&lt;/code&gt; puede detectar que proporcionaste un identificador que no se puede buscar, la llamada de &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; generar&amp;aacute; una excepci&amp;oacute;n. (En sistemas Unix, puede detectar esto).</target>
        </trans-unit>
        <trans-unit id="5f2455dc72c01e04f7cb2a120d3caf4c7e83b89d" translate="yes" xml:space="preserve">
          <source>Handles that were opened write-only won't work. Handles that were opened read-only will work as long as you don't try to modify the array. Handles must be attached to seekable sources of data---that means no pipes or sockets. If &lt;code&gt;Tie::File&lt;/code&gt; can detect that you supplied a non-seekable handle, the &lt;code&gt;tie&lt;/code&gt; call will throw an exception. (On Unix systems, it can detect this.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dca08a90c7ec673523c972aeb9655cc6ba04e87" translate="yes" xml:space="preserve">
          <source>Handles the installing and uninstalling of perl modules, scripts, man pages, etc...</source>
          <target state="translated">Se encarga de la instalación y desinstalación de los módulos de perl,scripts,páginas de hombre,etc...</target>
        </trans-unit>
        <trans-unit id="caa1714db5e5ddfa607afe3449dc66f6283180d0" translate="yes" xml:space="preserve">
          <source>Handling Duplicate Keys</source>
          <target state="translated">Manejo de llaves duplicadas</target>
        </trans-unit>
        <trans-unit id="0f01c504507d7832a1cac719e698e1e7e8a378a8" translate="yes" xml:space="preserve">
          <source>Handling Malformed Data</source>
          <target state="translated">Manejo de datos malformados</target>
        </trans-unit>
        <trans-unit id="f0f0fc76a1e441991cde68774fcefb6a0861fb18" translate="yes" xml:space="preserve">
          <source>Handling Unicode</source>
          <target state="translated">Manejo de Unicode</target>
        </trans-unit>
        <trans-unit id="5c331b1b1b146d85b0798abcb652f4dbd9cc2a65" translate="yes" xml:space="preserve">
          <source>Handling Unicode is for the most part transparent: just use the strings as usual. Functions like &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; will work on the Unicode characters; regular expressions will work on the Unicode characters (see &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; and &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;).</source>
          <target state="translated">El manejo de Unicode es en su mayor parte transparente: simplemente use las cadenas como de costumbre. Funciones como &lt;code&gt;&lt;a href=&quot;functions/index&quot;&gt;index()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; funcionar&amp;aacute;n con los caracteres Unicode; las expresiones regulares funcionar&amp;aacute;n en los caracteres Unicode (ver &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; y &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b53b68423a2d10312f79c4e7788b10fc80971e39" translate="yes" xml:space="preserve">
          <source>Handling Unicode is for the most part transparent: just use the strings as usual. Functions like &lt;code&gt;index()&lt;/code&gt;, &lt;code&gt;length()&lt;/code&gt;, and &lt;code&gt;substr()&lt;/code&gt; will work on the Unicode characters; regular expressions will work on the Unicode characters (see &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; and &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d69acff614c1d827ede2f260f6a46a48647c42" translate="yes" xml:space="preserve">
          <source>Handling simple options is straightforward:</source>
          <target state="translated">El manejo de opciones simples es sencillo:</target>
        </trans-unit>
        <trans-unit id="8e71d792bc3c7ca46b9ebe6e4e08dc39ffe6877b" translate="yes" xml:space="preserve">
          <source>Handling the SIGHUP Signal in Daemons</source>
          <target state="translated">Manejar la señal de la VISUALIZACIÓN en los demonios</target>
        </trans-unit>
        <trans-unit id="6e120aed62a343cea2462c78b0c345bd93d57340" translate="yes" xml:space="preserve">
          <source>Handy Values</source>
          <target state="translated">Valores prácticos</target>
        </trans-unit>
        <trans-unit id="049503c569a7548e0e0aaf7ff650cdb7e260c634" translate="yes" xml:space="preserve">
          <source>Handy for putting in notes which might be useful for debugging, but don't indicate a problem.</source>
          <target state="translated">Es útil para poner notas que pueden ser útiles para la depuración,pero no indican un problema.</target>
        </trans-unit>
        <trans-unit id="57d70b3a1b3e8f06b27f21ad6f5e77255bd44b1f" translate="yes" xml:space="preserve">
          <source>Handy for things like...</source>
          <target state="translated">Es útil para cosas como...</target>
        </trans-unit>
        <trans-unit id="04a45a64a65bd1462cbe3b6ef2c3619b7fc7d816" translate="yes" xml:space="preserve">
          <source>Handy for this sort of thing:</source>
          <target state="translated">Es útil para este tipo de cosas:</target>
        </trans-unit>
        <trans-unit id="eb631afbbf9621a14aebc98eacec8ff594f19f3b" translate="yes" xml:space="preserve">
          <source>Handy tip: put &lt;code&gt;set PERLDOC=-ortf&lt;/code&gt; in your</source>
          <target state="translated">&lt;code&gt;set PERLDOC=-ortf&lt;/code&gt; pr&amp;aacute;ctico: coloque el conjunto PERLDOC = -ortf en su</target>
        </trans-unit>
        <trans-unit id="506eecb432a2c8fe45656c023dac6e502795db55" translate="yes" xml:space="preserve">
          <source>Hangul Syllable Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951499a6cfa4736aa7a1d36a7019e79078429a7e" translate="yes" xml:space="preserve">
          <source>HangulSyllableType.txt</source>
          <target state="translated">HangulSyllableType.txt</target>
        </trans-unit>
        <trans-unit id="7cf3612d90dc653542fad94e9962eab0afe4c4ac" translate="yes" xml:space="preserve">
          <source>Hans Dieter Pearcey &lt;code&gt;hdp@cpan.org&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5f45cb92e25fd3e9f4ed85dddd70a19341bbf4" translate="yes" xml:space="preserve">
          <source>Hard and symbolic (&quot;soft&quot;) links; linkname should specify target.</source>
          <target state="translated">Enlaces duros y simbólicos (&quot;blandos&quot;);el nombre del enlace debe especificar el objetivo.</target>
        </trans-unit>
        <trans-unit id="cdae1ec5d05114509a53fe67f0320c6eadea6400" translate="yes" xml:space="preserve">
          <source>Hard links are implemented on Win32 under NTFS only. They are natively supported on Windows 2000 and later. On Windows NT they are implemented using the Windows POSIX subsystem support and the Perl process will need Administrator or Backup Operator privileges to create hard links.</source>
          <target state="translated">Los enlaces duros se implementan en Win32 bajo NTFS solamente.Están soportados de forma nativa en Windows 2000 y posteriores.En Windows NT se implementan usando el soporte del subsistema POSIX de Windows y el proceso Perl necesitará privilegios de Administrador o de Operador de Backup para crear enlaces duros.</target>
        </trans-unit>
        <trans-unit id="fd756d3e871622cf9bdef94fc2aa35729d65f76a" translate="yes" xml:space="preserve">
          <source>Hard references are smart--they keep track of reference counts for you, automatically freeing the thing referred to when its reference count goes to zero. (Reference counts for values in self-referential or cyclic data structures may not go to zero without a little help; see &lt;a href=&quot;#Circular-References&quot;&gt;&quot;Circular References&quot;&lt;/a&gt; for a detailed explanation.) If that thing happens to be an object, the object is destructed. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more about objects. (In a sense, everything in Perl is an object, but we usually reserve the word for references to objects that have been officially &quot;blessed&quot; into a class package.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cec0c304aaf210bfe25cbb78814c09191b199ee" translate="yes" xml:space="preserve">
          <source>Hard references are smart--they keep track of reference counts for you, automatically freeing the thing referred to when its reference count goes to zero. (Reference counts for values in self-referential or cyclic data structures may not go to zero without a little help; see &lt;a href=&quot;#Circular-References&quot;&gt;Circular References&lt;/a&gt; for a detailed explanation.) If that thing happens to be an object, the object is destructed. See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for more about objects. (In a sense, everything in Perl is an object, but we usually reserve the word for references to objects that have been officially &quot;blessed&quot; into a class package.)</source>
          <target state="translated">Las referencias duras son inteligentes: realizan un seguimiento de los recuentos de referencias para usted, liberando autom&amp;aacute;ticamente la cosa a la que se hace referencia cuando su recuento de referencias llega a cero. (Los recuentos de referencia para valores en estructuras de datos c&amp;iacute;clicas o autorreferenciales pueden no llegar a cero sin un poco de ayuda; consulte &lt;a href=&quot;#Circular-References&quot;&gt;Referencias circulares&lt;/a&gt; para obtener una explicaci&amp;oacute;n detallada). Si esa cosa resulta ser un objeto, el objeto se destruye. Consulte &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los objetos. (En cierto sentido, todo en Perl es un objeto, pero normalmente reservamos la palabra para referencias a objetos que han sido &quot;bendecidos&quot; oficialmente en un paquete de clase).</target>
        </trans-unit>
        <trans-unit id="66e944742ea0249f6f2a6fd52c3e9e415e65aaeb" translate="yes" xml:space="preserve">
          <source>Harness output delegate for default console output</source>
          <target state="translated">Aprovechar la salida del delegado para la salida de la consola por defecto</target>
        </trans-unit>
        <trans-unit id="2dd2c2e596e19cb5f6f12eac61588cccdf06ec03" translate="yes" xml:space="preserve">
          <source>Harness output delegate for file output</source>
          <target state="translated">Aprovechar el delegado de salida para la salida de archivos</target>
        </trans-unit>
        <trans-unit id="363bd8bca1592722722a3ac3fe8ee3189add2d7b" translate="yes" xml:space="preserve">
          <source>Harness output delegate for parallel console output</source>
          <target state="translated">Delegado de salida del arnés para la salida de la consola paralela</target>
        </trans-unit>
        <trans-unit id="ba951792ddfec9b17fd8944b4026a028108c3aa1" translate="yes" xml:space="preserve">
          <source>Has already been</source>
          <target state="translated">Ya ha sido</target>
        </trans-unit>
        <trans-unit id="d8861f9d9089d32f3fb836f33024a00d9824a27b" translate="yes" xml:space="preserve">
          <source>Has global effect, persists after the application exits.</source>
          <target state="translated">Tiene un efecto global,persiste después de la salida de la aplicación.</target>
        </trans-unit>
        <trans-unit id="d791fc07c3f03c0d15e5cd282a309f1887be4bb0" translate="yes" xml:space="preserve">
          <source>Has it been done before?</source>
          <target state="translated">¿Se ha hecho antes?</target>
        </trans-unit>
        <trans-unit id="2929382f580bfdd31a77bfbbda12fefbb2e9c2b6" translate="yes" xml:space="preserve">
          <source>Has the same behavior as the match operator. Also, the left operand of &lt;code&gt;=~&lt;/code&gt; becomes tainted when a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect, if modified as a result of a substitution based on a regular expression match involving any of the things mentioned in the previous item, or of case-mapping, such as &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; ,&lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , or &lt;code&gt;\F&lt;/code&gt; .</source>
          <target state="translated">Tiene el mismo comportamiento que el operador de coincidencia. Adem&amp;aacute;s, el operando izquierdo de &lt;code&gt;=~&lt;/code&gt; se corrompe cuando una forma de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; que incluye &lt;code&gt;LC_CTYPE&lt;/code&gt; est&amp;aacute; en vigor, si se modifica como resultado de una sustituci&amp;oacute;n basada en una coincidencia de expresi&amp;oacute;n regular que involucre cualquiera de las cosas mencionadas en el elemento anterior, o del caso -mapping, tales como &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , o &lt;code&gt;\F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0b06c2eb9bde536e47408d65b8dbc18da216062" translate="yes" xml:space="preserve">
          <source>Has the same behavior as the match operator. Also, the left operand of &lt;code&gt;=~&lt;/code&gt; becomes tainted when a &lt;code&gt;use locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect, if modified as a result of a substitution based on a regular expression match involving any of the things mentioned in the previous item, or of case-mapping, such as &lt;code&gt;\l&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt;,&lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, or &lt;code&gt;\F&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd8a4f5a97ed6a865ef03c82bac1954b46e0a68" translate="yes" xml:space="preserve">
          <source>Hash (&lt;code&gt;'%'&lt;/code&gt; or &lt;code&gt;'*%'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e911d125c069efa7d913b344e0f08f8969421a" translate="yes" xml:space="preserve">
          <source>Hash API Extensions</source>
          <target state="translated">Extensiones del Hash API</target>
        </trans-unit>
        <trans-unit id="ffc5f6e94a276eeaf94de20a0e4f426d64a6723d" translate="yes" xml:space="preserve">
          <source>Hash Algorithm - Hash algorithms like the one used in Perl are well known to be vulnerable to collision attacks on their hash function. Such attacks involve constructing a set of keys which collide into the same bucket producing inefficient behavior. Such attacks often depend on discovering the seed of the hash function used to map the keys to buckets. That seed is then used to brute-force a key set which can be used to mount a denial of service attack. In Perl 5.8.1 changes were introduced to harden Perl to such attacks, and then later in Perl 5.18.0 these features were enhanced and additional protections added.</source>
          <target state="translated">Algoritmo Hash-Los algoritmos Hash como el utilizado en Perl son bien conocidos por ser vulnerables a los ataques de colisión en su función de hash.Tales ataques implican la construcción de un conjunto de llaves que colisionan en el mismo cubo produciendo un comportamiento ineficiente.Tales ataques a menudo dependen del descubrimiento de la semilla de la función hash usada para mapear las llaves de los cubos.Esa semilla se utiliza para forzar un juego de llaves que puede ser usado para montar un ataque de negación de servicio.En Perl 5.8.1 se introdujeron cambios para endurecer el Perl a tales ataques,y más tarde en Perl 5.18.0 se mejoraron estas características y se añadieron protecciones adicionales.</target>
        </trans-unit>
        <trans-unit id="f61062d96868959d8bad3f3f9d8706be2a8eb3f6" translate="yes" xml:space="preserve">
          <source>Hash Manipulation Functions</source>
          <target state="translated">Funciones de manipulación del hash</target>
        </trans-unit>
        <trans-unit id="722f31dda86bb5212ab7b2c1afdf8b00513530ac" translate="yes" xml:space="preserve">
          <source>Hash Seed Randomization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a28810109f74274cf74cf5b33143c35d878dd91" translate="yes" xml:space="preserve">
          <source>Hash Traversal Randomization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacc32410490d8f503c47a016128793f41b30f3f" translate="yes" xml:space="preserve">
          <source>Hash entries are returned in an apparently random order. The actual random order is specific to a given hash; the exact same series of operations on two hashes may result in a different order for each hash. Any insertion into the hash may change the order, as will any deletion, with the exception that the most recent key returned by &lt;a href=&quot;#each-HASH&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#keys-HASH&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; may be deleted without changing the order. So long as a given hash is unmodified you may rely on &lt;a href=&quot;#keys-HASH&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#values-HASH&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#each-HASH&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; to repeatedly return the same order as each other. See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;&quot;Algorithmic Complexity Attacks&quot; in perlsec&lt;/a&gt; for details on why hash order is randomized. Aside from the guarantees provided here the exact details of Perl's hash algorithm and the hash traversal order are subject to change in any release of Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431e8961d246bf31774f7d0fd18486a3592113ae" translate="yes" xml:space="preserve">
          <source>Hash entries are returned in an apparently random order. The actual random order is specific to a given hash; the exact same series of operations on two hashes may result in a different order for each hash. Any insertion into the hash may change the order, as will any deletion, with the exception that the most recent key returned by &lt;a href=&quot;#each-HASH&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#keys-HASH&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; may be deleted without changing the order. So long as a given hash is unmodified you may rely on &lt;a href=&quot;#keys-HASH&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#values-HASH&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#each-HASH&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt; to repeatedly return the same order as each other. See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;&quot;Algorithmic Complexity Attacks&quot; in perlsec&lt;/a&gt; for details on why hash order is randomized. Aside from the guarantees provided here the exact details of Perl's hash algorithm and the hash traversal order are subject to change in any release of Perl. Tied hashes may behave differently to Perl's hashes with respect to changes in order on insertion and deletion of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305905caf9fb73ce326146ab6da346f5a44d3d5e" translate="yes" xml:space="preserve">
          <source>Hash entries are returned in an apparently random order. The actual random order is specific to a given hash; the exact same series of operations on two hashes may result in a different order for each hash. Any insertion into the hash may change the order, as will any deletion, with the exception that the most recent key returned by &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; may be deleted without changing the order. So long as a given hash is unmodified you may rely on &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; to repeatedly return the same order as each other. See &lt;a href=&quot;../perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt; for details on why hash order is randomized. Aside from the guarantees provided here the exact details of Perl's hash algorithm and the hash traversal order are subject to change in any release of Perl.</source>
          <target state="translated">Las entradas hash se devuelven en un orden aparentemente aleatorio. El orden aleatorio real es espec&amp;iacute;fico de un hash dado; la misma serie exacta de operaciones en dos hashes puede resultar en un orden diferente para cada hash. Cualquier inserci&amp;oacute;n en el hash puede cambiar el orden, al igual que cualquier eliminaci&amp;oacute;n, con la excepci&amp;oacute;n de que la clave m&amp;aacute;s reciente devuelto por &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; puede ser eliminado sin cambiar el orden. Siempre que un hash dado no est&amp;eacute; modificado, puede confiar en las &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , los &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; para devolver repetidamente el mismo orden que el otro. Ver &lt;a href=&quot;../perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Ataques de complejidad algor&amp;iacute;tmica en perlsec&lt;/a&gt;para obtener detalles sobre por qu&amp;eacute; el orden hash es aleatorio. Aparte de las garant&amp;iacute;as proporcionadas aqu&amp;iacute;, los detalles exactos del algoritmo hash de Perl y el orden transversal de hash est&amp;aacute;n sujetos a cambios en cualquier versi&amp;oacute;n de Perl.</target>
        </trans-unit>
        <trans-unit id="38990845f56b0504f14a42e264d2e90a4529057f" translate="yes" xml:space="preserve">
          <source>Hash entries are returned in an apparently random order. The actual random order is specific to a given hash; the exact same series of operations on two hashes may result in a different order for each hash. Any insertion into the hash may change the order, as will any deletion, with the exception that the most recent key returned by &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; may be deleted without changing the order. So long as a given hash is unmodified you may rely on &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; to repeatedly return the same order as each other. See &lt;a href=&quot;../perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt; for details on why hash order is randomized. Aside from the guarantees provided here the exact details of Perl's hash algorithm and the hash traversal order are subject to change in any release of Perl. Tied hashes may behave differently to Perl's hashes with respect to changes in order on insertion and deletion of items.</source>
          <target state="translated">Las entradas hash se devuelven en un orden aparentemente aleatorio. El orden aleatorio real es espec&amp;iacute;fico de un hash dado; la misma serie exacta de operaciones en dos hashes puede resultar en un orden diferente para cada hash. Cualquier inserci&amp;oacute;n en el hash puede cambiar el orden, al igual que cualquier eliminaci&amp;oacute;n, con la excepci&amp;oacute;n de que la clave m&amp;aacute;s reciente devuelto por &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; puede ser eliminado sin cambiar el orden. Siempre que un hash dado no est&amp;eacute; modificado, puede confiar en las &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , los &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; para devolver repetidamente el mismo orden que el otro. Ver &lt;a href=&quot;../perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Ataques de complejidad algor&amp;iacute;tmica en perlsec&lt;/a&gt;para obtener detalles sobre por qu&amp;eacute; el orden hash es aleatorio. Aparte de las garant&amp;iacute;as proporcionadas aqu&amp;iacute;, los detalles exactos del algoritmo hash de Perl y el orden transversal de hash est&amp;aacute;n sujetos a cambios en cualquier versi&amp;oacute;n de Perl. Los hash vinculados pueden comportarse de manera diferente a los hash de Perl con respecto a los cambios en el orden de inserci&amp;oacute;n y eliminaci&amp;oacute;n de elementos.</target>
        </trans-unit>
        <trans-unit id="e9c5186b59e1d86cc131a1fce52452e4e4a1c3b7" translate="yes" xml:space="preserve">
          <source>Hash entries are returned in an apparently random order. The actual random order is specific to a given hash; the exact same series of operations on two hashes may result in a different order for each hash. Any insertion into the hash may change the order, as will any deletion, with the exception that the most recent key returned by &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; may be deleted without changing the order. So long as a given hash is unmodified you may rely on &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; to repeatedly return the same order as each other. See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt; for details on why hash order is randomized. Aside from the guarantees provided here the exact details of Perl's hash algorithm and the hash traversal order are subject to change in any release of Perl.</source>
          <target state="translated">Las entradas hash se devuelven en un orden aparentemente aleatorio. El orden aleatorio real es espec&amp;iacute;fico de un hash dado; la misma serie exacta de operaciones en dos hashes puede resultar en un orden diferente para cada hash. Cualquier inserci&amp;oacute;n en el hash puede cambiar el orden, al igual que cualquier eliminaci&amp;oacute;n, con la excepci&amp;oacute;n de que la clave m&amp;aacute;s reciente devuelto por &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; puede ser eliminado sin cambiar el orden. Siempre que un hash dado no est&amp;eacute; modificado, puede confiar en las &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , los &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; para devolver repetidamente el mismo orden que el otro. Ver &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Ataques de complejidad algor&amp;iacute;tmica en perlsec&lt;/a&gt;para obtener detalles sobre por qu&amp;eacute; el orden hash es aleatorio. Aparte de las garant&amp;iacute;as proporcionadas aqu&amp;iacute;, los detalles exactos del algoritmo hash de Perl y el orden transversal de hash est&amp;aacute;n sujetos a cambios en cualquier versi&amp;oacute;n de Perl.</target>
        </trans-unit>
        <trans-unit id="c3ca36bf1a5daf8ef9f034a1d277717a3712e5c2" translate="yes" xml:space="preserve">
          <source>Hash entries are returned in an apparently random order. The actual random order is specific to a given hash; the exact same series of operations on two hashes may result in a different order for each hash. Any insertion into the hash may change the order, as will any deletion, with the exception that the most recent key returned by &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; may be deleted without changing the order. So long as a given hash is unmodified you may rely on &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; to repeatedly return the same order as each other. See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt; for details on why hash order is randomized. Aside from the guarantees provided here the exact details of Perl's hash algorithm and the hash traversal order are subject to change in any release of Perl. Tied hashes may behave differently to Perl's hashes with respect to changes in order on insertion and deletion of items.</source>
          <target state="translated">Las entradas hash se devuelven en un orden aparentemente aleatorio. El orden aleatorio real es espec&amp;iacute;fico de un hash dado; la misma serie exacta de operaciones en dos hashes puede resultar en un orden diferente para cada hash. Cualquier inserci&amp;oacute;n en el hash puede cambiar el orden, al igual que cualquier eliminaci&amp;oacute;n, con la excepci&amp;oacute;n de que la clave m&amp;aacute;s reciente devuelto por &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; puede ser eliminado sin cambiar el orden. Siempre que un hash dado no est&amp;eacute; modificado, puede confiar en las &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , los &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; para devolver repetidamente el mismo orden que el otro. Ver &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Ataques de complejidad algor&amp;iacute;tmica en perlsec&lt;/a&gt;para obtener detalles sobre por qu&amp;eacute; el orden hash es aleatorio. Aparte de las garant&amp;iacute;as proporcionadas aqu&amp;iacute;, los detalles exactos del algoritmo hash de Perl y el orden transversal de hash est&amp;aacute;n sujetos a cambios en cualquier versi&amp;oacute;n de Perl. Los hash vinculados pueden comportarse de manera diferente a los hash de Perl con respecto a los cambios en el orden de inserci&amp;oacute;n y eliminaci&amp;oacute;n de elementos.</target>
        </trans-unit>
        <trans-unit id="450c7d18d41b71db86a014ec4874cb370e9139cb" translate="yes" xml:space="preserve">
          <source>Hash keys are &lt;b&gt;never&lt;/b&gt; tainted.</source>
          <target state="translated">Las claves hash &lt;b&gt;nunca&lt;/b&gt; est&amp;aacute;n contaminadas.</target>
        </trans-unit>
        <trans-unit id="d3bb008d092d1635eab043a4b8199104071bf333" translate="yes" xml:space="preserve">
          <source>Hash keys are strings, so you can't really use a reference as the key. When you try to do that, perl turns the reference into its stringified form (for instance, &lt;code&gt;HASH(0xDEADBEEF)&lt;/code&gt; ). From there you can't get back the reference from the stringified form, at least without doing some extra work on your own.</source>
          <target state="translated">Las claves hash son cadenas, por lo que realmente no puede usar una referencia como clave. Cuando intenta hacer eso, perl convierte la referencia en su forma en cadena (por ejemplo, &lt;code&gt;HASH(0xDEADBEEF)&lt;/code&gt; ). A partir de ah&amp;iacute;, no puede recuperar la referencia del formulario en cadena, al menos sin hacer un trabajo adicional por su cuenta.</target>
        </trans-unit>
        <trans-unit id="256656f318911c4b99b0f0616a83baa9886ad936" translate="yes" xml:space="preserve">
          <source>Hash keys are strings, so you can't really use a reference as the key. When you try to do that, perl turns the reference into its stringified form (for instance, &lt;code&gt;HASH(0xDEADBEEF)&lt;/code&gt;). From there you can't get back the reference from the stringified form, at least without doing some extra work on your own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c6d3b1e20fc06f0ae8fafd3e33b459483ea84f" translate="yes" xml:space="preserve">
          <source>Hash lookup of which core extensions were built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78b3989df5bd5b4bee3a8e811b9eb95d6fd1010" translate="yes" xml:space="preserve">
          <source>Hash refs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bd740a5fed92f4652182fc91352eb825ae6b82" translate="yes" xml:space="preserve">
          <source>Hash subscripts are similar, only instead of square brackets curly brackets are used. For example:</source>
          <target state="translated">Los subíndices del hash son similares,sólo que en lugar de corchetes se usan corchetes rizados.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="0f05d6e4a748b9c8f33a3dd349b88ed9bc020a76" translate="yes" xml:space="preserve">
          <source>Hash values do not spring into existence upon mere reference.</source>
          <target state="translated">Los valores del hash no nacen por mera referencia.</target>
        </trans-unit>
        <trans-unit id="060e2951a35019d6292c77892149e6ae4655ab4b" translate="yes" xml:space="preserve">
          <source>Hash::Util</source>
          <target state="translated">Hash::Util</target>
        </trans-unit>
        <trans-unit id="6df60ce76a6dd2245295b960eb619bae5a40a333" translate="yes" xml:space="preserve">
          <source>Hash::Util - A selection of general-utility hash subroutines</source>
          <target state="translated">Hash::Util-Una selección de subrutinas de hash de utilidad general</target>
        </trans-unit>
        <trans-unit id="fc6dfd7516cd148dfcfbc9b4b53977f84b109b02" translate="yes" xml:space="preserve">
          <source>Hash::Util::FieldHash</source>
          <target state="translated">Hash::Util::FieldHash</target>
        </trans-unit>
        <trans-unit id="2761eb764ac1f31cb8db8bfca9f4810ccd72d904" translate="yes" xml:space="preserve">
          <source>Hash::Util::FieldHash - Support for Inside-Out Classes</source>
          <target state="translated">Hash::Util::FieldHash-Apoyo a las clases de adentro hacia afuera</target>
        </trans-unit>
        <trans-unit id="7586bfa5dab5c10b087765f9a931752b869fef56" translate="yes" xml:space="preserve">
          <source>HashBase will not export &lt;code&gt;new()&lt;/code&gt; if there is already a &lt;code&gt;new()&lt;/code&gt; method in your packages inheritance chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5551ebd48f7eaa66477f72c449e4b2ccfc0f9609" translate="yes" xml:space="preserve">
          <source>Hashes</source>
          <target state="translated">Hashes</target>
        </trans-unit>
        <trans-unit id="5003cfd9a645097d80f1b1984336d3badcf5c150" translate="yes" xml:space="preserve">
          <source>Hashes contain pairs of scalars: the first is the key, the second is the value. The key will be coerced to a string, although the value can be any kind of scalar: string, number, or reference. If a key &lt;code&gt;$key&lt;/code&gt; is present in %hash, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists($hash{$key})&lt;/a&gt;&lt;/code&gt; will return true. The value for a given key can be &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, in which case &lt;code&gt;$hash{$key}&lt;/code&gt; will be &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; while &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $hash{$key}&lt;/code&gt; will return true. This corresponds to (&lt;code&gt;$key&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;) being in the hash.</source>
          <target state="translated">Los hash contienen pares de escalares: el primero es la clave, el segundo es el valor. La clave se convertir&amp;aacute; en una cadena, aunque el valor puede ser cualquier tipo de escalar: cadena, n&amp;uacute;mero o referencia. Si una clave &lt;code&gt;$key&lt;/code&gt; est&amp;aacute; presente en% hash, &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists($hash{$key})&lt;/a&gt;&lt;/code&gt; devolver&amp;aacute; verdadero. El valor de una clave determinada puede ser &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , en cuyo caso &lt;code&gt;$hash{$key}&lt;/code&gt; ser&amp;aacute; &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; mientras &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt; $hash{$key}&lt;/code&gt; devolver&amp;aacute; verdadero. Esto corresponde a que ( &lt;code&gt;$key&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ) est&amp;eacute; en el hash.</target>
        </trans-unit>
        <trans-unit id="ed15845c84e91acb212b68d97fc5cccfa145f86e" translate="yes" xml:space="preserve">
          <source>Hashes contain pairs of scalars: the first is the key, the second is the value. The key will be coerced to a string, although the value can be any kind of scalar: string, number, or reference. If a key &lt;code&gt;$key&lt;/code&gt; is present in %hash, &lt;code&gt;exists($hash{$key})&lt;/code&gt; will return true. The value for a given key can be &lt;code&gt;undef&lt;/code&gt;, in which case &lt;code&gt;$hash{$key}&lt;/code&gt; will be &lt;code&gt;undef&lt;/code&gt; while &lt;code&gt;exists $hash{$key}&lt;/code&gt; will return true. This corresponds to (&lt;code&gt;$key&lt;/code&gt;, &lt;code&gt;undef&lt;/code&gt;) being in the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5674cfb04f68937d23325c6f7c4d9203e5e6faf" translate="yes" xml:space="preserve">
          <source>Hashes have no particular internal order, though you can sort the keys and loop through them.</source>
          <target state="translated">Los hachís no tienen un orden interno particular,aunque puedes ordenar las teclas y hacer un bucle a través de ellas.</target>
        </trans-unit>
        <trans-unit id="11d64fa5d0ff2f867536af648f416f1c5edf27d3" translate="yes" xml:space="preserve">
          <source>Hashes were the first Perl data type to be tied (see dbmopen()). A class implementing a tied hash should define the following methods: TIEHASH is the constructor. FETCH and STORE access the key and value pairs. EXISTS reports whether a key is present in the hash, and DELETE deletes one. CLEAR empties the hash by deleting all the key and value pairs. FIRSTKEY and NEXTKEY implement the keys() and each() functions to iterate over all the keys. SCALAR is triggered when the tied hash is evaluated in scalar context, and in 5.28 onwards, by &lt;code&gt;keys&lt;/code&gt; in boolean context. UNTIE is called when &lt;code&gt;untie&lt;/code&gt; happens, and DESTROY is called when the tied variable is garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a5b7f57189106155ae1686164009308c7fb48e" translate="yes" xml:space="preserve">
          <source>Hashes were the first Perl data type to be tied (see dbmopen()). A class implementing a tied hash should define the following methods: TIEHASH is the constructor. FETCH and STORE access the key and value pairs. EXISTS reports whether a key is present in the hash, and DELETE deletes one. CLEAR empties the hash by deleting all the key and value pairs. FIRSTKEY and NEXTKEY implement the keys() and each() functions to iterate over all the keys. SCALAR is triggered when the tied hash is evaluated in scalar context. UNTIE is called when &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; happens, and DESTROY is called when the tied variable is garbage collected.</source>
          <target state="translated">Los hash fueron el primer tipo de datos de Perl que se vincul&amp;oacute; (consulte dbmopen ()). Una clase que implemente un hash vinculado debe definir los siguientes m&amp;eacute;todos: TIEHASH es el constructor. FETCH y STORE acceden a los pares de clave y valor. EXISTS informa si una clave est&amp;aacute; presente en el hash y DELETE elimina una. CLEAR vac&amp;iacute;a el hash eliminando todos los pares de clave y valor. FIRSTKEY y NEXTKEY implementan las funciones keys () y each () para iterar sobre todas las claves. ESCALAR se activa cuando el hash vinculado se eval&amp;uacute;a en un contexto escalar. Se llama a &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; cuando ocurre untie , y se llama a DESTROY cuando la variable vinculada es la recolecci&amp;oacute;n de basura.</target>
        </trans-unit>
        <trans-unit id="00ee967aadbfebd86b3235daf9d26b53205682c3" translate="yes" xml:space="preserve">
          <source>Hashing order and checksums</source>
          <target state="translated">Orden de hashing y sumas de control</target>
        </trans-unit>
        <trans-unit id="3f4d761db68098a751847d9083882bbf309c01a1" translate="yes" xml:space="preserve">
          <source>Hashref of .pm files and *.pl files to be installed. e.g.</source>
          <target state="translated">Hashref de los archivos .pm y los archivos *.pl que se instalarán,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="e654482e1464037d016cd8389b44c8067b3f7edd" translate="yes" xml:space="preserve">
          <source>Hashref of .xs files. MakeMaker will default this. e.g.</source>
          <target state="translated">Hashref de los archivos .xs.MakeMaker hará esto por defecto,por ejemplo</target>
        </trans-unit>
        <trans-unit id="54306e4b7a73d064c3f0a92d38a328cc3c6fc248" translate="yes" xml:space="preserve">
          <source>Hashref of pod-containing files. MakeMaker will default this to all EXE_FILES files that include POD directives. The files listed here will be converted to man pages and installed as was requested at Configure time.</source>
          <target state="translated">Hashref de los archivos que contienen la cápsula.MakeMaker hará esto por defecto a todos los archivos EXE_FILES que incluyan directivas POD.Los archivos listados aquí serán convertidos en páginas de manual e instalados como se solicitó en Configurar tiempo.</target>
        </trans-unit>
        <trans-unit id="e03929c9c89c518c1a46f519dc21b0db453de58a" translate="yes" xml:space="preserve">
          <source>Hashref of symbol names for routines to be made available as universal symbols. Each key/value pair consists of the package name and an array of routine names in that package. Used only under AIX, OS/2, VMS and Win32 at present. The routine names supplied will be expanded in the same way as XSUB names are expanded by the XS() macro. Defaults to</source>
          <target state="translated">Hashref de los nombres de los símbolos para las rutinas que se pondrán a disposición como símbolos universales.Cada par clave/valor consiste en el nombre del paquete y un conjunto de nombres de rutinas en ese paquete.Actualmente se usa sólo en AIX,OS/2,VMS y Win32.Los nombres de las rutinas suministradas se expandirán de la misma manera que los nombres XSUB se expanden con la macro XS().El valor por defecto es</target>
        </trans-unit>
        <trans-unit id="0e5b1d03af67cbc5ad483521c6061ce63fe7c5e2" translate="yes" xml:space="preserve">
          <source>Hashref that assigns to *.pm and *.pod files the files into which the manpages are to be written. MakeMaker parses all *.pod and *.pm files for POD directives. Files that contain POD will be the default keys of the MAN3PODS hashref. These will then be converted to man pages during &lt;code&gt;make&lt;/code&gt; and will be installed during &lt;code&gt;make install&lt;/code&gt; .</source>
          <target state="translated">Hashref que asigna a los archivos * .pm y * .pod los archivos en los que se escribir&amp;aacute;n las p&amp;aacute;ginas de manual. MakeMaker analiza todos los archivos * .pod y * .pm para las directivas POD. Los archivos que contienen POD ser&amp;aacute;n las claves predeterminadas del hashref de MAN3PODS. Estos luego se convertir&amp;aacute;n a p&amp;aacute;ginas de manual durante &lt;code&gt;make&lt;/code&gt; y se instalar&amp;aacute;n durante &lt;code&gt;make install&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e298a85cf0430820689a9fd4666229176cc4269d" translate="yes" xml:space="preserve">
          <source>Hashref that assigns to *.pm and *.pod files the files into which the manpages are to be written. MakeMaker parses all *.pod and *.pm files for POD directives. Files that contain POD will be the default keys of the MAN3PODS hashref. These will then be converted to man pages during &lt;code&gt;make&lt;/code&gt; and will be installed during &lt;code&gt;make install&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a765c84d56e0aa5f774648e2602400523cde1aca" translate="yes" xml:space="preserve">
          <source>Hashref with options controlling the operation of &lt;code&gt;XSMULTI&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c40a20db4b296ec67dfa94b908457cfde4c540" translate="yes" xml:space="preserve">
          <source>Have a .ucm file ready. You can get it from somewhere or you can write your own from scratch or you can grab one from the Encode distribution and customize it. For the UCM format, see the next Chapter. In the example below, I'll call my theoretical encoding myascii, defined in</source>
          <target state="translated">Tenga un archivo .ucm listo.Puedes conseguirlo de algún sitio o puedes escribir el tuyo propio desde cero o puedes coger uno de la distribución Encode y personalizarlo.Para el formato UCM,ver el siguiente capítulo.En el siguiente ejemplo,llamaré a mi codificación teórica myascii,definida en</target>
        </trans-unit>
        <trans-unit id="7e1aafb3365aa620ad71622b6d9e66ff51332860" translate="yes" xml:space="preserve">
          <source>Have a look at the &lt;code&gt;look&lt;/code&gt; (!) command.</source>
          <target state="translated">Eche un vistazo al comando &lt;code&gt;look&lt;/code&gt; (!).</target>
        </trans-unit>
        <trans-unit id="8d27c15838302800e87f5a9ade00864fd9b117bc" translate="yes" xml:space="preserve">
          <source>Have a look at the CPAN::Site module.</source>
          <target state="translated">Echa un vistazo al módulo del sitio CPAN::Site.</target>
        </trans-unit>
        <trans-unit id="2682f428ec2cd20e9cdf6753b7db50d45fa0c287" translate="yes" xml:space="preserve">
          <source>Have you got it right?</source>
          <target state="translated">¿Lo has entendido bien?</target>
        </trans-unit>
        <trans-unit id="60004c6dbf1e8f9315ee254f18d4e8b2a9fce3c6" translate="yes" xml:space="preserve">
          <source>Have you included all relevant information?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1c0002422cc934d4f43ea061dac2a317b36bcc" translate="yes" xml:space="preserve">
          <source>Have you looked at CPAN (see &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;)? The chances are that someone has already written a module that can solve your problem. Have you read the appropriate manpages? Here's a brief index:</source>
          <target state="translated">&amp;iquest;Ha mirado CPAN (ver &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt; )? Lo m&amp;aacute;s probable es que alguien ya haya escrito un m&amp;oacute;dulo que pueda resolver su problema. &amp;iquest;Ha le&amp;iacute;do las p&amp;aacute;ginas de manual correspondientes? Aqu&amp;iacute; hay un breve &amp;iacute;ndice:</target>
        </trans-unit>
        <trans-unit id="4732d1c70c9c00b316d946047ce44e3469a4a557" translate="yes" xml:space="preserve">
          <source>Having 57 modules all called Sort will not make life easy for anyone (though having 23 called Sort::Quick is only marginally better :-). Imagine someone trying to install your module alongside many others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea81edd1a4ca564780d9031bb647dc99cf58fa7" translate="yes" xml:space="preserve">
          <source>Having 57 modules all called Sort will not make life easy for anyone (though having 23 called Sort::Quick is only marginally better :-). Imagine someone trying to install your module alongside many others. If in any doubt ask for suggestions in comp.lang.perl.misc.</source>
          <target state="translated">Tener 57 módulos llamados Sort no le hará la vida fácil a nadie (aunque tener 23 llamados Sort::Quick es sólo marginalmente mejor :-).Imagina a alguien tratando de instalar tu módulo junto con muchos otros.Si tiene alguna duda pida sugerencias en comp.lang.perl.misc.</target>
        </trans-unit>
        <trans-unit id="d5c3a74f90c179abbbb2a8aabfd9df58154dbdba" translate="yes" xml:space="preserve">
          <source>Having PERLDOCDEBUG set to a positive integer will make perldoc emit even more descriptive output than the &lt;code&gt;-D&lt;/code&gt; switch does; the higher the number, the more it emits.</source>
          <target state="translated">Tener PERLDOCDEBUG establecido en un entero positivo har&amp;aacute; que perldoc emita una salida a&amp;uacute;n m&amp;aacute;s descriptiva que la que hace el modificador &lt;code&gt;-D&lt;/code&gt; ; cuanto mayor sea el n&amp;uacute;mero, m&amp;aacute;s emite.</target>
        </trans-unit>
        <trans-unit id="475dd7f4c80bb5dca06b4bee66ecdd1370715023" translate="yes" xml:space="preserve">
          <source>Having RSX and the latest</source>
          <target state="translated">Teniendo RSX y el último</target>
        </trans-unit>
        <trans-unit id="831389895e5cb7d92cb0b30b5f20a040e5b28ad0" translate="yes" xml:space="preserve">
          <source>Having a comma after the last element of an enum list</source>
          <target state="translated">Tener una coma después del último elemento de una lista de enumeración</target>
        </trans-unit>
        <trans-unit id="eb3a777ac79c8871a640c69bcf5b76d7b538148e" translate="yes" xml:space="preserve">
          <source>Having a meaning. Perl thinks that some of the things people try to do are devoid of meaning; in particular, making use of variables that have never been given a &lt;b&gt;value&lt;/b&gt; and performing certain operations on data that isn&amp;rsquo;t there. For example, if you try to read data past the end of a file, Perl will hand you back an undefined value. See also &lt;b&gt;false&lt;/b&gt; and the &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; entry in Camel chapter 27, &amp;ldquo;Functions&amp;rdquo;.</source>
          <target state="translated">Tener un significado. Perl piensa que algunas de las cosas que la gente intenta hacer carecen de significado; en particular, haciendo uso de variables a las que nunca se les ha dado un &lt;b&gt;valor&lt;/b&gt; y realizando ciertas operaciones en datos que no est&amp;aacute;n all&amp;iacute;. Por ejemplo, si intenta leer datos m&amp;aacute;s all&amp;aacute; del final de un archivo, Perl le devolver&amp;aacute; un valor indefinido. Consulte tambi&amp;eacute;n &lt;b&gt;false&lt;/b&gt; y la entrada &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; en el cap&amp;iacute;tulo 27 de Camel, &amp;ldquo;Funciones&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="d814a7a08cc6adb5ea05a2df41a45594d3bcb67b" translate="yes" xml:space="preserve">
          <source>Having a meaning. Perl thinks that some of the things people try to do are devoid of meaning; in particular, making use of variables that have never been given a &lt;b&gt;value&lt;/b&gt; and performing certain operations on data that isn&amp;rsquo;t there. For example, if you try to read data past the end of a file, Perl will hand you back an undefined value. See also &lt;b&gt;false&lt;/b&gt; and the &lt;code&gt;defined&lt;/code&gt; entry in Camel chapter 27, &amp;ldquo;Functions&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9f1d17b3780ae4ae6a7c92cd0343417040db2e" translate="yes" xml:space="preserve">
          <source>Having done your bit, please be prepared to wait, to be told the bug is in your code, or possibly to get no reply at all. The volunteers who maintain Perl are busy folks, so if your problem is an obvious bug in your own code, is difficult to understand or is a duplicate of an existing report, you may not receive a personal reply.</source>
          <target state="translated">Habiendo hecho su parte,por favor,prepárese para esperar,para que le digan que el bicho está en su código,o posiblemente para no obtener ninguna respuesta.Los voluntarios que mantienen Perl son gente ocupada,así que si su problema es un error obvio en su propio código,es difícil de entender o es un duplicado de un informe existente,puede que no reciba una respuesta personal.</target>
        </trans-unit>
        <trans-unit id="61dfbdc92422646f02edc5b064d4a445a5156276" translate="yes" xml:space="preserve">
          <source>Having multiple DBM implementations makes it trivial to copy database formats:</source>
          <target state="translated">Tener múltiples implementaciones de DBM hace que sea trivial copiar formatos de bases de datos:</target>
        </trans-unit>
        <trans-unit id="0a36716594c37d5edd82c337ce9f21f289c12c13" translate="yes" xml:space="preserve">
          <source>Having pseudo-process IDs be negative integers breaks down for the integer &lt;code&gt;-1&lt;/code&gt; because the wait() and waitpid() functions treat this number as being special. The tacit assumption in the current implementation is that the system never allocates a thread ID of &lt;code&gt;1&lt;/code&gt; for user threads. A better representation for pseudo-process IDs will be implemented in future.</source>
          <target state="translated">Tener ID de pseudoproceso como n&amp;uacute;meros enteros negativos se desglosa para el entero &lt;code&gt;-1&lt;/code&gt; porque las funciones wait () y waitpid () tratan este n&amp;uacute;mero como especial. La suposici&amp;oacute;n t&amp;aacute;cita en la implementaci&amp;oacute;n actual es que el sistema nunca asigna un ID de hilo de &lt;code&gt;1&lt;/code&gt; para los hilos de usuario. En el futuro, se implementar&amp;aacute; una mejor representaci&amp;oacute;n de las ID de pseudoprocesos.</target>
        </trans-unit>
        <trans-unit id="fff5183df30472b7e88394295e20e9d8990e8e07" translate="yes" xml:space="preserve">
          <source>Having read &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; you will probably have already guessed that the error is caused by the extra copy of the tied object stored in &lt;code&gt;$X&lt;/code&gt; . If you haven't, then the problem boils down to the fact that the &lt;b&gt;DB_File&lt;/b&gt; destructor, DESTROY, will not be called until</source>
          <target state="translated">Despu&amp;eacute;s de leer &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; es probable que ya han adivinado que el error es causado por la copia extra del objeto atado almacenada en &lt;code&gt;$X&lt;/code&gt; . Si no lo ha hecho, entonces el problema se reduce al hecho de que el destructor &lt;b&gt;DB_File&lt;/b&gt; , &lt;b&gt;DESTROY&lt;/b&gt; , no se llamar&amp;aacute; hasta</target>
        </trans-unit>
        <trans-unit id="5c1e2b19d7b5e00f5d0c88fd12f5698cccf89784" translate="yes" xml:space="preserve">
          <source>Having read &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; you will probably have already guessed that the error is caused by the extra copy of the tied object stored in &lt;code&gt;$X&lt;/code&gt;. If you haven't, then the problem boils down to the fact that the &lt;b&gt;DB_File&lt;/b&gt; destructor, DESTROY, will not be called until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690025fd44237769b46324cf68642f14ae190ff2" translate="yes" xml:space="preserve">
          <source>Having the SDK installed also means that you need to have either the Metrowerks CodeWarrior installed (2.8 and 3.0 were used in testing) or the Microsoft Visual C++ 6.0 installed (SP3 minimum, SP5 recommended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893bf15d4ad790d3a646d05f171a2db30641c0d1" translate="yes" xml:space="preserve">
          <source>Having threads support requires all of Perl and all of the XS modules in the Perl installation to be rebuilt; it is not just a question of adding the &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; module (i.e., threaded and non-threaded Perls are binary incompatible).</source>
          <target state="translated">Tener soporte para subprocesos requiere que se reconstruyan todo Perl y todos los m&amp;oacute;dulos XS en la instalaci&amp;oacute;n de Perl; no es s&amp;oacute;lo una cuesti&amp;oacute;n de agregar el m&amp;oacute;dulo de &lt;a href=&quot;threads&quot;&gt;subprocesos&lt;/a&gt; (es decir, Perls subprocesados ​​y no subprocesos son incompatibles binariamente).</target>
        </trans-unit>
        <trans-unit id="123977c7eddfac195115408ec1d6b6b93c199204" translate="yes" xml:space="preserve">
          <source>Having to do with numbers represented in base 2. That means there&amp;rsquo;s basically two numbers: 0 and 1. Also used to describe a file of &amp;ldquo;nontext&amp;rdquo;, presumably because such a file makes full use of all the binary bits in its bytes. With the advent of &lt;b&gt;Unicode&lt;/b&gt;, this distinction, already suspect, loses even more of its meaning.</source>
          <target state="translated">Tiene que ver con n&amp;uacute;meros representados en base 2. Eso significa que hay b&amp;aacute;sicamente dos n&amp;uacute;meros: 0 y 1. Tambi&amp;eacute;n se usa para describir un archivo de &quot;no texto&quot;, presumiblemente porque dicho archivo hace un uso completo de todos los bits binarios en sus bytes. Con la llegada de &lt;b&gt;Unicode&lt;/b&gt; , esta distinci&amp;oacute;n, ya sospechosa, pierde a&amp;uacute;n m&amp;aacute;s su significado.</target>
        </trans-unit>
        <trans-unit id="2a50b726078402c27e07b8c0e368389163cec09c" translate="yes" xml:space="preserve">
          <source>Having to even think about the &lt;code&gt;$^S&lt;/code&gt; variable in your exception handlers is simply wrong. &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; as currently implemented invites grievous and difficult to track down errors. Avoid it and use an &lt;code&gt;END{}&lt;/code&gt; or CORE::GLOBAL::die override instead.</source>
          <target state="translated">Tener que pensar siquiera en la variable &lt;code&gt;$^S&lt;/code&gt; en sus controladores de excepciones es simplemente incorrecto. &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; tal como se implementa actualmente, invita a errores graves y dif&amp;iacute;ciles de rastrear. Ev&amp;iacute;telo y use un &lt;code&gt;END{}&lt;/code&gt; o CORE :: GLOBAL :: die override en su lugar.</target>
        </trans-unit>
        <trans-unit id="1824af5feb4f3df315f45b16c88c9796572c2341" translate="yes" xml:space="preserve">
          <source>Having zero modifiers makes this a no-op (so why did you specify it, unless it's generated code), and starting in v5.30, warns under &lt;a href=&quot;re#%27strict%27-mode&quot;&gt;&lt;code&gt;use re 'strict'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd5e433024c5701e895446816548ab95da2bc1b" translate="yes" xml:space="preserve">
          <source>Hawai'ian</source>
          <target state="translated">Hawai'ian</target>
        </trans-unit>
        <trans-unit id="172ba6a86380c5b6896beb3518c06339ca0edf94" translate="yes" xml:space="preserve">
          <source>He elaborates: In &quot;I scanned %g directories&quot;, you'd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9670c78ad31649495cc9999c8a7211c06bd1e87" translate="yes" xml:space="preserve">
          <source>HeHASH</source>
          <target state="translated">HeHASH</target>
        </trans-unit>
        <trans-unit id="c5e6018dcb2cae886c9d1c47690a4c54c44362c1" translate="yes" xml:space="preserve">
          <source>HeKEY</source>
          <target state="translated">HeKEY</target>
        </trans-unit>
        <trans-unit id="9b0c456032d23a1f8428e404c8fc000632b68f15" translate="yes" xml:space="preserve">
          <source>HeKLEN</source>
          <target state="translated">HeKLEN</target>
        </trans-unit>
        <trans-unit id="381f36fe8447fe95ed079c250bb4b4ea3d7e634b" translate="yes" xml:space="preserve">
          <source>HePV</source>
          <target state="translated">HePV</target>
        </trans-unit>
        <trans-unit id="fdb5f6488be2e53e093eac0872e26f417981c939" translate="yes" xml:space="preserve">
          <source>HeSVKEY</source>
          <target state="translated">HeSVKEY</target>
        </trans-unit>
        <trans-unit id="447de7df6f86d340b3c07a2481291e089c189a73" translate="yes" xml:space="preserve">
          <source>HeSVKEY_force</source>
          <target state="translated">HeSVKEY_force</target>
        </trans-unit>
        <trans-unit id="4dfba14a02b68cc98a5e87bdeb926ccb87da936c" translate="yes" xml:space="preserve">
          <source>HeSVKEY_set</source>
          <target state="translated">HeSVKEY_set</target>
        </trans-unit>
        <trans-unit id="4067c20911f4da7e02f3110fa44de6d983420d3a" translate="yes" xml:space="preserve">
          <source>HeUTF8</source>
          <target state="translated">HeUTF8</target>
        </trans-unit>
        <trans-unit id="9335e04810db397c2e35f214a69df586b346125d" translate="yes" xml:space="preserve">
          <source>HeVAL</source>
          <target state="translated">HeVAL</target>
        </trans-unit>
        <trans-unit id="fec5f9830205e3861054b7879046770547986753" translate="yes" xml:space="preserve">
          <source>Head.U</source>
          <target state="translated">Head.U</target>
        </trans-unit>
        <trans-unit id="0c0e898a8ae956ef15e057a684b77851cb08216e" translate="yes" xml:space="preserve">
          <source>Head1 through head4 produce headings, head1 being the highest level. The text in the rest of this paragraph is the content of the heading. For example:</source>
          <target state="translated">La cabeza 1 a la cabeza 4 producen encabezamientos,siendo la cabeza 1 el nivel más alto.El texto en el resto de este párrafo es el contenido del encabezamiento.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a96c65c60dd2beb6caf0aeaa3157c363f099df86" translate="yes" xml:space="preserve">
          <source>Headers mentioned in the RFCs and some other, well-known headers are generated with their canonical case. Other headers are sent in the case provided by the user. Except for control headers (which are sent first), headers are sent in arbitrary order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967ca9215da8ba98cad45c97fab5f98884cce72e" translate="yes" xml:space="preserve">
          <source>Heading Content&quot; command or to a &quot;=item Item Content&quot; command. This specification does not specify what behavior should be in the case of a given document having several things all seeming to produce the same</source>
          <target state="translated">al comando &quot;Contenido de la partida&quot; o a un comando &quot;=contenido de la partida&quot;.Esta especificación no especifica qué comportamiento debe tener un documento dado que tiene varias cosas que parecen producir lo mismo</target>
        </trans-unit>
        <trans-unit id="7a7c06f07a69ec449fd37c3b79a4e6409f1c6971" translate="yes" xml:space="preserve">
          <source>Hearing the word &quot;in&quot; is an</source>
          <target state="translated">Escuchar la palabra &quot;en&quot; es una</target>
        </trans-unit>
        <trans-unit id="7801d25365100494fe3fa68254035e723fdad847" translate="yes" xml:space="preserve">
          <source>Hebrew; now it doesn't.</source>
          <target state="translated">Hebreo;ahora ya no.</target>
        </trans-unit>
        <trans-unit id="84135281bd9f7278283b58aab96226bf3b6fa87a" translate="yes" xml:space="preserve">
          <source>Heed the moderators.</source>
          <target state="translated">Presta atención a los moderadores.</target>
        </trans-unit>
        <trans-unit id="a675c00310a9bb5810f1eb379886d21c46bbc50c" translate="yes" xml:space="preserve">
          <source>Help save the world! Share your code in a form that makes it easy to reuse.</source>
          <target state="translated">¡Ayuda a salvar el mundo! Comparte tu código en una forma que sea fácil de reutilizar.</target>
        </trans-unit>
        <trans-unit id="72b65259063cf5501bdb369bad55680bb3e05273" translate="yes" xml:space="preserve">
          <source>Help testing test modules built with Test::Builder</source>
          <target state="translated">Ayuda para probar los módulos de prueba construidos con Test::Builder</target>
        </trans-unit>
        <trans-unit id="dfa0352ee0b635278bac396dced255cafcd73368" translate="yes" xml:space="preserve">
          <source>HelpMessage</source>
          <target state="translated">HelpMessage</target>
        </trans-unit>
        <trans-unit id="b604e9e00b8aff400d6b282c4559d7681123e27e" translate="yes" xml:space="preserve">
          <source>Helper class for PerlIO layers implemented in perl</source>
          <target state="translated">Clase de ayuda para las capas de perlIO implementadas en perl</target>
        </trans-unit>
        <trans-unit id="d26b8b46f8f2af4fb8c967fdcb3034722b09bfec" translate="yes" xml:space="preserve">
          <source>Helper for &lt;code&gt;grok_number()&lt;/code&gt;, accepts various ways of spelling &quot;infinity&quot; or &quot;not a number&quot;, and returns one of the following flag combinations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4057a75cb8ff5877d986e9f1a93f90da05a4393c" translate="yes" xml:space="preserve">
          <source>Helper for grok_number(), accepts various ways of spelling &quot;infinity&quot; or &quot;not a number&quot;, and returns one of the following flag combinations:</source>
          <target state="translated">Ayudante para grok_number(),acepta varias formas de deletrear &quot;infinito&quot; o &quot;no un número&quot;,y devuelve una de las siguientes combinaciones de banderas:</target>
        </trans-unit>
        <trans-unit id="5d886854c3e45c23f2a67ad8886bba6332d21933" translate="yes" xml:space="preserve">
          <source>Helper functions for ExtUtils::Constant</source>
          <target state="translated">Funciones de ayuda para las Extintas::Constante</target>
        </trans-unit>
        <trans-unit id="2ec89dcb4b12d932844486071240245216868013" translate="yes" xml:space="preserve">
          <source>Helper routine for &lt;a href=&quot;ExtUtils::MM_Unix#fixin&quot;&gt;MM-&amp;gt;fixin()&lt;/a&gt;, overridden because there's no such thing as an actual shebang line that will be interpreted by the shell, so we just prepend $Config{startperl} and preserve the shebang line argument for any switches it may contain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537e8e5aa520f3bdee23b191d8b4efb107769f00" translate="yes" xml:space="preserve">
          <source>Helper routine for MM-&amp;gt;fixin(), overridden because there's no such thing as an actual shebang line that will be interpreted by the shell, so we just prepend $Config{startperl} and preserve the shebang line argument for any switches it may contain.</source>
          <target state="translated">Rutina auxiliar para MM-&amp;gt; fixin (), anulada porque no existe tal cosa como una l&amp;iacute;nea shebang real que sea interpretada por el shell, as&amp;iacute; que simplemente anteponemos $ Config {startperl} y preservamos el argumento de la l&amp;iacute;nea shebang para cualquier conmutador que pueda contener. .</target>
        </trans-unit>
        <trans-unit id="754ebef25d2322da9a737d155f7bf715f1ba74eb" translate="yes" xml:space="preserve">
          <source>Helper subroutine for subdirs</source>
          <target state="translated">Subrutina de ayuda para las subdivisiones</target>
        </trans-unit>
        <trans-unit id="8a7149426bc5c4ad71c933b4d1d21cfffd9c3bea" translate="yes" xml:space="preserve">
          <source>Helpers for POD parsing and conversion</source>
          <target state="translated">Ayudantes para el análisis y la conversión de POD</target>
        </trans-unit>
        <trans-unit id="a1d186be4c77271bc365d307a5b69f017e030f41" translate="yes" xml:space="preserve">
          <source>Hence the &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;unimport&lt;/code&gt; routines are called at &lt;b&gt;compile time&lt;/b&gt; for the user's code.</source>
          <target state="translated">Por lo tanto, las rutinas de &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n y &lt;code&gt;unimport&lt;/code&gt; importaci&amp;oacute;n se llaman en &lt;b&gt;tiempo de compilaci&amp;oacute;n&lt;/b&gt; para el c&amp;oacute;digo del usuario.</target>
        </trans-unit>
        <trans-unit id="e2cc4b7767688df7b44bdf876b726e44848c3c3c" translate="yes" xml:space="preserve">
          <source>Hence the &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;unimport&lt;/code&gt; routines are called at &lt;b&gt;compile time&lt;/b&gt; for the user's code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1698c95c1d69a8153fa73a579994fee537ea27f4" translate="yes" xml:space="preserve">
          <source>Hence you derive the following simple function to abstract that. It selects a random integer between the two given integers (inclusive). For example: &lt;code&gt;random_int_between(50,120)&lt;/code&gt; .</source>
          <target state="translated">Por lo tanto, deriva la siguiente funci&amp;oacute;n simple para abstraer eso. Selecciona un n&amp;uacute;mero entero aleatorio entre los dos n&amp;uacute;meros enteros dados (inclusive). Por ejemplo: &lt;code&gt;random_int_between(50,120)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4370860a4cda36f4a61b51bfe47376529e7c3d64" translate="yes" xml:space="preserve">
          <source>Hence you derive the following simple function to abstract that. It selects a random integer between the two given integers (inclusive). For example: &lt;code&gt;random_int_between(50,120)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc265d279911dd3bbb1e57f33ddb7cc94242a04f" translate="yes" xml:space="preserve">
          <source>Hence, at this point, the start of the buffer that we allocated lives at &lt;code&gt;SvPVX(sv) - SvIV(sv)&lt;/code&gt; in memory and the PV pointer is pointing into the middle of this allocated storage.</source>
          <target state="translated">Por lo tanto, en este punto, el inicio del b&amp;uacute;fer que &lt;code&gt;SvPVX(sv) - SvIV(sv)&lt;/code&gt; vive en SvPVX (sv) - SvIV (sv) en la memoria y el puntero PV apunta al medio de este almacenamiento asignado.</target>
        </trans-unit>
        <trans-unit id="045ed35d9ead65236dd53e0cae88ac0c2f700143" translate="yes" xml:space="preserve">
          <source>Hence, checking &lt;code&gt;SvTYPE(sv) &amp;lt; SVt_PVAV&lt;/code&gt; is the best way to see whether something is a scalar.</source>
          <target state="translated">Por lo tanto, verificar &lt;code&gt;SvTYPE(sv) &amp;lt; SVt_PVAV&lt;/code&gt; es la mejor manera de ver si algo es un escalar.</target>
        </trans-unit>
        <trans-unit id="556105a47e879b5cd197003b03f2c9d9168ed783" translate="yes" xml:space="preserve">
          <source>Hence, if you load this module on Perl 5.26.0, you will get one warning that the module is no longer supported; and the module will do nothing thereafter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8da77ebcbcb4587ef2329234538c69cccafa62" translate="yes" xml:space="preserve">
          <source>Hence, on Mac OS, both</source>
          <target state="translated">Por lo tanto,en Mac OS,ambos</target>
        </trans-unit>
        <trans-unit id="28d05e677bb92a81e181eb6f8a5252850baf1f6f" translate="yes" xml:space="preserve">
          <source>Hence, putting it all together:</source>
          <target state="translated">Por lo tanto,ponerlo todo junto:</target>
        </trans-unit>
        <trans-unit id="78ae19820d96f656888a032f8938f666eaec4599" translate="yes" xml:space="preserve">
          <source>Hence, the aim of of a call to &lt;code&gt;extract_multiple&lt;/code&gt; in a list context is to split the processed string into as many non-overlapping fields as possible, by repeatedly applying each of the specified extractors to the remainder of the string. Thus &lt;code&gt;extract_multiple&lt;/code&gt; is a generalized form of Perl's &lt;code&gt;&lt;a href=&quot;../functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; subroutine.</source>
          <target state="translated">Por lo tanto, el objetivo de una llamada a &lt;code&gt;extract_multiple&lt;/code&gt; en un contexto de lista es dividir la cadena procesada en tantos campos no superpuestos como sea posible, aplicando repetidamente cada uno de los extractores especificados al resto de la cadena. Por tanto, &lt;code&gt;extract_multiple&lt;/code&gt; es una forma generalizada de la subrutina &lt;code&gt;&lt;a href=&quot;../functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; de Perl .</target>
        </trans-unit>
        <trans-unit id="0323aa4fd2151904fef4f800f370657ab5f29a7a" translate="yes" xml:space="preserve">
          <source>Hence, the aim of of a call to &lt;code&gt;extract_multiple&lt;/code&gt; in a list context is to split the processed string into as many non-overlapping fields as possible, by repeatedly applying each of the specified extractors to the remainder of the string. Thus &lt;code&gt;extract_multiple&lt;/code&gt; is a generalized form of Perl's &lt;code&gt;split&lt;/code&gt; subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e76b82b230d1b216ea5fc74faa050d88bd7bb1a" translate="yes" xml:space="preserve">
          <source>Henk P. Penning maintains a site that collects data about CPAN sites:</source>
          <target state="translated">Henk P.Penning mantiene un sitio que recoge datos sobre los sitios CPAN:</target>
        </trans-unit>
        <trans-unit id="7f6138ce4b63e599ea6c8a23a9a9d862a811b01c" translate="yes" xml:space="preserve">
          <source>Henry Gabryjelski &amp;lt;henryg@WPI.EDU&amp;gt; - for the suggestion of creating directories recursively.</source>
          <target state="translated">Henry Gabryjelski &amp;lt;henryg@WPI.EDU&amp;gt; - por la sugerencia de crear directorios de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="7a134925882ae538ad42b93b5979387207fbfb32" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;$ARTICLE&lt;/code&gt; must be a global (package) scalar variable - not one declared with &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#state-VARLIST&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2206fdca717cfb115864c58cfc1242ec1e8f30" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;$ARTICLE&lt;/code&gt; must be a global (package) scalar variable - not one declared with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;$ARTICLE&lt;/code&gt; debe ser una variable escalar global (paquete), no una declarada con &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ff0824227f04d195446a9ca4c80c3a2f4841adc" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;$ARTICLE&lt;/code&gt; must be a global (package) scalar variable - not one declared with &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;$ARTICLE&lt;/code&gt; debe ser una variable escalar global (paquete), no una declarada con &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7adfbace1a84aad46b6dc65bb49ec212586f4854" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;--verbose&lt;/code&gt; and &lt;code&gt;--quiet&lt;/code&gt; control the same variable &lt;code&gt;$verbose&lt;/code&gt; , but with opposite values.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;--verbose&lt;/code&gt; y &lt;code&gt;--quiet&lt;/code&gt; controlan la misma variable &lt;code&gt;$verbose&lt;/code&gt; , pero con valores opuestos.</target>
        </trans-unit>
        <trans-unit id="d3f64a7bd9317a944a7376aabb90068d62d19a13" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;--verbose&lt;/code&gt; and &lt;code&gt;--quiet&lt;/code&gt; control the same variable &lt;code&gt;$verbose&lt;/code&gt;, but with opposite values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869e9b788a94b86ab899941e02856974518155a7" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;//g&lt;/code&gt; and &lt;code&gt;\G&lt;/code&gt; create a 'tag team' handoff of the string from one regexp to the other. Regexps with an independent subexpression are much like this, with a handoff of the string to the independent subexpression, and a handoff of the string back to the enclosing regexp.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;//g&lt;/code&gt; y &lt;code&gt;\G&lt;/code&gt; crear un 'equipo de la etiqueta' traspaso de la cadena de una expresi&amp;oacute;n regular a la otra. Las expresiones regulares con una subexpresi&amp;oacute;n independiente son muy parecidas a esto, con una transferencia de la cadena a la subexpresi&amp;oacute;n independiente y una transferencia de la cadena de regreso a la expresi&amp;oacute;n regular adjunta.</target>
        </trans-unit>
        <trans-unit id="71e7bd7e0715889b83b0e1df6c21eb89086431d8" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;/g&lt;/code&gt; and &lt;code&gt;\G&lt;/code&gt; create a &quot;tag team&quot; handoff of the string from one regexp to the other. Regexps with an independent subexpression are much like this, with a handoff of the string to the independent subexpression, and a handoff of the string back to the enclosing regexp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b495cc26b10b4cfa7edd523e971b1223bc39631" translate="yes" xml:space="preserve">
          <source>Here again Perl works just like the shell in that the &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; clobbers an existing file.</source>
          <target state="translated">Aqu&amp;iacute;, de nuevo, Perl funciona igual que el shell en el sentido de que &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; golpea un archivo existente.</target>
        </trans-unit>
        <trans-unit id="0b249e3305de27f4ee7d8f5a9ef3f95983593269" translate="yes" xml:space="preserve">
          <source>Here are Perl's functions (including things that look like functions, like some keywords and named operators) arranged by category. Some functions appear in more than one place.</source>
          <target state="translated">Aquí están las funciones de Perl (incluyendo cosas que parecen funciones,como algunas palabras clave y operadores nombrados)ordenadas por categoría.Algunas funciones aparecen en más de un lugar.</target>
        </trans-unit>
        <trans-unit id="ce8540faf1c5c6c5be2f416cad08509fdda29d23" translate="yes" xml:space="preserve">
          <source>Here are Perl's functions (including things that look like functions, like some keywords and named operators) arranged by category. Some functions appear in more than one place. Any warnings, including those produced by keywords, are described in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86585cb3324adc532f3c4c9a1e007eedd102a2eb" translate="yes" xml:space="preserve">
          <source>Here are a collection of (possibly) useful canned recipes for &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; hay una colecci&amp;oacute;n de recetas enlatadas (posiblemente) &amp;uacute;tiles para &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6b2a8b8e88687652afd4febd5437e6847aab7c6e" translate="yes" xml:space="preserve">
          <source>Here are a collection of (possibly) useful canned recipes for &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;unpack&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213525a9716fa0289377679cccd7e684d87732e5" translate="yes" xml:space="preserve">
          <source>Here are a couple of possibilities:</source>
          <target state="translated">Aquí hay un par de posibilidades:</target>
        </trans-unit>
        <trans-unit id="bc67517efb30f9fba9421a6919635fb13eb305fb" translate="yes" xml:space="preserve">
          <source>Here are a few example that show the capabilities of the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de690581aef8b0c61e87b43058be3d94a077aff4" translate="yes" xml:space="preserve">
          <source>Here are a few examples to demonstrate usage of Perl's benchmarking tools.</source>
          <target state="translated">Aquí hay algunos ejemplos para demostrar el uso de las herramientas de benchmarking de Perl.</target>
        </trans-unit>
        <trans-unit id="a8331c63f719d3fa459c3be0fc4500f91a2bc542" translate="yes" xml:space="preserve">
          <source>Here are a few examples which illustrate the key concepts - as such most of them are of little practical use.</source>
          <target state="translated">A continuación se presentan algunos ejemplos que ilustran los conceptos clave,por lo que la mayoría de ellos son de poca utilidad práctica.</target>
        </trans-unit>
        <trans-unit id="6d45496eb99d38ab7ab859d9d23312ec9997a265" translate="yes" xml:space="preserve">
          <source>Here are a few hints for creating high-quality patches:</source>
          <target state="translated">Aquí hay algunos consejos para crear parches de alta calidad:</target>
        </trans-unit>
        <trans-unit id="ee5bae63f174379946589f4804bf6cb746e57ff8" translate="yes" xml:space="preserve">
          <source>Here are a few notes on the C function</source>
          <target state="translated">Aquí hay algunas notas sobre la función C</target>
        </trans-unit>
        <trans-unit id="4cf9a82c924ee686ad6e561bd6e1b0affa2a2991" translate="yes" xml:space="preserve">
          <source>Here are a few simple examples. First, let's pass in several arrays to a function and have it &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; all of then, returning a new list of all their former last elements:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestran algunos ejemplos sencillos. Primero, pasemos varios arreglos a una funci&amp;oacute;n y hagamos que &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; todo, devolviendo una nueva lista de todos sus &amp;uacute;ltimos elementos anteriores:</target>
        </trans-unit>
        <trans-unit id="07bc756b4525b03a743a457897293bde8f42d28d" translate="yes" xml:space="preserve">
          <source>Here are a few simple examples. First, let's pass in several arrays to a function and have it &lt;code&gt;pop&lt;/code&gt; all of then, returning a new list of all their former last elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778c5e77d32e09526eea8078cdc25093f593316e" translate="yes" xml:space="preserve">
          <source>Here are a few ways, all painful, to deal with it:</source>
          <target state="translated">Aquí hay algunas maneras,todas dolorosas,de lidiar con ello:</target>
        </trans-unit>
        <trans-unit id="4d368f7513a7890d1d9530618552892450a6a185" translate="yes" xml:space="preserve">
          <source>Here are a few words taken from the Berkeley DB FAQ (at</source>
          <target state="translated">Aquí hay algunas palabras tomadas de la FAQ de la DB de Berkeley (en</target>
        </trans-unit>
        <trans-unit id="dbcbf329948c2249a19622b8073b1367ff9cb194" translate="yes" xml:space="preserve">
          <source>Here are a few words taken from the Berkeley DB FAQ (at &lt;a href=&quot;http://www.oracle.com/technology/products/berkeley-db/db/index.html&quot;&gt;http://www.oracle.com/technology/products/berkeley-db/db/index.html&lt;/a&gt;) regarding the license:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de0d7b44e720bda0c9a25fbb58e38764c2a5fa0" translate="yes" xml:space="preserve">
          <source>Here are examples of &lt;code&gt;//s&lt;/code&gt; and &lt;code&gt;//m&lt;/code&gt; in action:</source>
          <target state="translated">Estos son ejemplos de &lt;code&gt;//s&lt;/code&gt; y &lt;code&gt;//m&lt;/code&gt; en acci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="019f88f2ee6b0e36fd2598271f5d4aac4291dbff" translate="yes" xml:space="preserve">
          <source>Here are examples of &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; in action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13167d0662ec600bc247b1050d48340c5a1f9fa" translate="yes" xml:space="preserve">
          <source>Here are examples of many kinds of file opens. Those using &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; all assume that you've pulled in the constants from &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt;:</source>
          <target state="translated">Aqu&amp;iacute; hay ejemplos de muchos tipos de apertura de archivos. Aquellos que usan &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; suponen que ha extra&amp;iacute;do las constantes de &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="285c2ac838211f7ab63456da8593b46a7ba8d4ec" translate="yes" xml:space="preserve">
          <source>Here are examples of many kinds of file opens. Those using &lt;code&gt;sysopen&lt;/code&gt; all assume that you've pulled in the constants from &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b269a27d981a83ad06f7f43ed4b5271ebb95e10" translate="yes" xml:space="preserve">
          <source>Here are examples of the constructors and the valid options available for DB_HASH, DB_BTREE and DB_RECNO respectively.</source>
          <target state="translated">Aquí hay ejemplos de los constructores y las opciones válidas disponibles para DB_HASH,DB_BTREE y DB_RECNO respectivamente.</target>
        </trans-unit>
        <trans-unit id="feffd8fe1a5cbaddbff753bfdc84e56b03609303" translate="yes" xml:space="preserve">
          <source>Here are some code samples showing a possible usage of Storable:</source>
          <target state="translated">Aquí hay algunas muestras de código que muestran un posible uso de Storable:</target>
        </trans-unit>
        <trans-unit id="b97373427a9280cf0da7790f9dd7dc5b0d29339d" translate="yes" xml:space="preserve">
          <source>Here are some concerns to keep in mind when using an endianness modifier:</source>
          <target state="translated">Estas son algunas de las preocupaciones que hay que tener en cuenta cuando se utiliza un modificador de la tutela:</target>
        </trans-unit>
        <trans-unit id="c18e94a9efc11f05f3d5f2b6edc571204b41c5d4" translate="yes" xml:space="preserve">
          <source>Here are some examples of how that works on an ASCII platform:</source>
          <target state="translated">Aquí hay algunos ejemplos de cómo funciona eso en una plataforma ASCII:</target>
        </trans-unit>
        <trans-unit id="ca06cec84a9ef5e9ca766f7b0195777a639a43ed" translate="yes" xml:space="preserve">
          <source>Here are some examples of how to use these:</source>
          <target state="translated">Aquí hay algunos ejemplos de cómo usarlos:</target>
        </trans-unit>
        <trans-unit id="84bd37d6cce9f50a387d161b1db1876dd2e66de5" translate="yes" xml:space="preserve">
          <source>Here are some examples of that:</source>
          <target state="translated">Aquí hay algunos ejemplos de eso:</target>
        </trans-unit>
        <trans-unit id="eb016178c05ee24cc48ff8dddc178e709d61edd0" translate="yes" xml:space="preserve">
          <source>Here are some examples of usage of the &quot;cmd&quot; shell:</source>
          <target state="translated">Aquí hay algunos ejemplos del uso del caparazón &quot;cmd&quot;:</target>
        </trans-unit>
        <trans-unit id="b17211739968de398ac6cabe7b5c9c6e7b2ffe53" translate="yes" xml:space="preserve">
          <source>Here are some examples that explain the reasons why certain results occur while handling infinity:</source>
          <target state="translated">Aquí hay algunos ejemplos que explican las razones por las que ciertos resultados ocurren mientras se maneja el infinito:</target>
        </trans-unit>
        <trans-unit id="5a87004d684b1273adb1c5dad1a3b884a901f693" translate="yes" xml:space="preserve">
          <source>Here are some examples that you should be able to type into your command shell:</source>
          <target state="translated">Aquí hay algunos ejemplos que debería ser capaz de escribir en su shell de comando:</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">Aquí hay algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="1ffece14922bda83136b1a5ca004aee395c4815b" translate="yes" xml:space="preserve">
          <source>Here are some further observations based on experiments: The C runtime breaks arguments at spaces and passes them to programs in argc/argv. Double quotes can be used to prevent arguments with spaces in them from being split up. You can put a double quote in an argument by escaping it with a backslash and enclosing the whole argument within double quotes. The backslash and the pair of double quotes surrounding the argument will be stripped by the C runtime.</source>
          <target state="translated">Aquí hay algunas observaciones adicionales basadas en experimentos:El tiempo de ejecución C rompe los argumentos en los espacios y los pasa a los programas en argc/argv.Las comillas dobles pueden usarse para evitar que los argumentos con espacios en ellos se dividan.Se puede poner una cita doble en un argumento escapando de él con una barra invertida y encerrando todo el argumento entre comillas dobles.La barra invertida y el par de comillas dobles que rodean el argumento serán eliminadas por el tiempo de ejecución de C.</target>
        </trans-unit>
        <trans-unit id="a4980f1bbd2b4cd245b8c8043825f0a0babf7335" translate="yes" xml:space="preserve">
          <source>Here are some more examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b595570315b5625b2174cdd7459401aaf7451f5" translate="yes" xml:space="preserve">
          <source>Here are some more examples; be aware that when using an explicit index, the &lt;code&gt;$&lt;/code&gt; may need escaping:</source>
          <target state="translated">A continuaci&amp;oacute;n se muestran algunos ejemplos m&amp;aacute;s; tenga en cuenta que al usar un &amp;iacute;ndice expl&amp;iacute;cito, el &lt;code&gt;$&lt;/code&gt; puede necesitar escapar:</target>
        </trans-unit>
        <trans-unit id="c694403eaca658591930c8c7c2bb34296f84a099" translate="yes" xml:space="preserve">
          <source>Here are some notable values:</source>
          <target state="translated">Aquí hay algunos valores notables:</target>
        </trans-unit>
        <trans-unit id="cc7e40e86aef57a83594c5dfdd7f8a1c23f71b5f" translate="yes" xml:space="preserve">
          <source>Here are some other examples:</source>
          <target state="translated">Aquí hay algunos otros ejemplos:</target>
        </trans-unit>
        <trans-unit id="5552dd4aff82cc5a2b99f42ba7a6d2949d5c6e2e" translate="yes" xml:space="preserve">
          <source>Here are some other functions:</source>
          <target state="translated">Aquí hay algunas otras funciones:</target>
        </trans-unit>
        <trans-unit id="79024a11d0139db04c2facf9ae0e8d93da4c05aa" translate="yes" xml:space="preserve">
          <source>Here are some other more substantive style issues to think about:</source>
          <target state="translated">Aquí hay otros temas de estilo más sustanciales en los que pensar:</target>
        </trans-unit>
        <trans-unit id="8de6ff6be7dbb16b2f90d46db02214f1b31982a4" translate="yes" xml:space="preserve">
          <source>Here are some samples of syntactically valid declarations, with annotation as to how they resolve internally into &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; attributes&lt;/code&gt; invocations by perl. These examples are primarily useful to see how the &quot;appropriate package&quot; is found for the possible method lookups for package-defined attributes.</source>
          <target state="translated">Aqu&amp;iacute; hay algunos ejemplos de declaraciones sint&amp;aacute;cticamente v&amp;aacute;lidas, con anotaciones sobre c&amp;oacute;mo se resuelven internamente en invocaciones de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; attributes&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; por perl. Estos ejemplos son principalmente &amp;uacute;tiles para ver c&amp;oacute;mo se encuentra el &quot;paquete apropiado&quot; para las posibles b&amp;uacute;squedas de m&amp;eacute;todos para atributos definidos por paquetes.</target>
        </trans-unit>
        <trans-unit id="f09c78fd713d777b16d7b0dc7451ff268dfc7da3" translate="yes" xml:space="preserve">
          <source>Here are some samples of syntactically valid declarations, with annotation as to how they resolve internally into &lt;code&gt;use attributes&lt;/code&gt; invocations by perl. These examples are primarily useful to see how the &quot;appropriate package&quot; is found for the possible method lookups for package-defined attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef6c8462426b25783d9f2c73bd41688e54925d5" translate="yes" xml:space="preserve">
          <source>Here are some variants, most of which don't work:</source>
          <target state="translated">Aquí hay algunas variantes,la mayoría de las cuales no funcionan:</target>
        </trans-unit>
        <trans-unit id="0361977099d002d67600facecf96ac617d8167ef" translate="yes" xml:space="preserve">
          <source>Here are the current possible types, with short descriptions:</source>
          <target state="translated">Aquí están los posibles tipos actuales,con breves descripciones:</target>
        </trans-unit>
        <trans-unit id="67895007dd0c6840199574bcaf648ce79505acd6" translate="yes" xml:space="preserve">
          <source>Here are the methods for the DotFiles tied hash.</source>
          <target state="translated">Aquí están los métodos para el hachís de los DotFiles.</target>
        </trans-unit>
        <trans-unit id="bdd9e497208f79834038783c1e02aab82a664f8b" translate="yes" xml:space="preserve">
          <source>Here are the methods:</source>
          <target state="translated">Aquí están los métodos:</target>
        </trans-unit>
        <trans-unit id="308b3fd3c823fd8f4a8be7a1c05819c0bdbe51b4" translate="yes" xml:space="preserve">
          <source>Here are the places where Perl will assume &lt;code&gt;$_&lt;/code&gt; even if you don't use it:</source>
          <target state="translated">Estos son los lugares donde Perl asumir&amp;aacute; &lt;code&gt;$_&lt;/code&gt; incluso si no lo usa:</target>
        </trans-unit>
        <trans-unit id="0a9a64ecb96bf415307190a704ba59f675ea62cc" translate="yes" xml:space="preserve">
          <source>Here are the possible keys for the hash:</source>
          <target state="translated">Aquí están las posibles claves para el hachís:</target>
        </trans-unit>
        <trans-unit id="133a7307c88c0ca94d0fd77ce650ab97042a4831" translate="yes" xml:space="preserve">
          <source>Here are the quote-like operators that apply to pattern matching and related activities.</source>
          <target state="translated">Aquí están los operadores de cita que se aplican a la comparación de patrones y actividades relacionadas.</target>
        </trans-unit>
        <trans-unit id="c59988c08aece7bd08debf7ada77c7366bd57099" translate="yes" xml:space="preserve">
          <source>Here are the rules that are used in &lt;code&gt;catdir()&lt;/code&gt; ; note that we try to be as compatible as possible to Unix:</source>
          <target state="translated">Estas son las reglas que se utilizan en &lt;code&gt;catdir()&lt;/code&gt; ; tenga en cuenta que intentamos ser lo m&amp;aacute;s compatibles posible con Unix:</target>
        </trans-unit>
        <trans-unit id="3ed36fd5ffaf22cc0a28878706f0e8bf6dac1f65" translate="yes" xml:space="preserve">
          <source>Here are the rules that are used in &lt;code&gt;catdir()&lt;/code&gt;; note that we try to be as compatible as possible to Unix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa7fef747fea48e4e4795cd9eaeefa09930bbdb" translate="yes" xml:space="preserve">
          <source>Here are the short and long forms of the values the &lt;code&gt;General Category&lt;/code&gt; property can have:</source>
          <target state="translated">Estas son las formas cortas y largas de los valores que puede tener la propiedad &lt;code&gt;General Category&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="420394a2a2618e29901a0ab672922a30d23423d8" translate="yes" xml:space="preserve">
          <source>Here are the statistics for Perl 5.005_62 on my system:</source>
          <target state="translated">Aquí están las estadísticas de Perl 5.005_62 en mi sistema:</target>
        </trans-unit>
        <trans-unit id="fd03473c869638bd902e9d6b0f20d91be736706a" translate="yes" xml:space="preserve">
          <source>Here are the suggested ways of modifying your include path, including environment variables, run-time switches, and in-code statements:</source>
          <target state="translated">Aquí están las formas sugeridas para modificar su ruta de inclusión,incluyendo variables de entorno,interruptores de tiempo de ejecución y declaraciones en código:</target>
        </trans-unit>
        <trans-unit id="c09b558fc05cb8053f5a3187154e8896a601ad3a" translate="yes" xml:space="preserve">
          <source>Here are the ways that Perl knows that a string should be treated as Unicode:</source>
          <target state="translated">Aquí están las formas en que Perl sabe que una cadena debe ser tratada como Unicode:</target>
        </trans-unit>
        <trans-unit id="4358e9bb262d19ae65de17de5c9b7a341e07eea3" translate="yes" xml:space="preserve">
          <source>Here are what those parameters to the new() constructor mean:</source>
          <target state="translated">Esto es lo que significan esos parámetros para el nuevo constructor:</target>
        </trans-unit>
        <trans-unit id="d3c80c52da3a7596fb4bd95e7f557fcc03ea2102" translate="yes" xml:space="preserve">
          <source>Here documents are found in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;. Check for these three things:</source>
          <target state="translated">Aqu&amp;iacute; los documentos se encuentran en &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; . Compruebe estas tres cosas:</target>
        </trans-unit>
        <trans-unit id="484c5007fac2b871f4ec1de41d18168107149ae5" translate="yes" xml:space="preserve">
          <source>Here in our DotFiles example, we'll be careful not to let them try to overwrite the file unless they've called the clobber() method on the original object reference returned by tie().</source>
          <target state="translated">Aquí,en nuestro ejemplo de DotFiles,tendremos cuidado de que no intenten sobreescribir el archivo a menos que hayan llamado al método clobber()en la referencia del objeto original devuelto por tie().</target>
        </trans-unit>
        <trans-unit id="47c02f53e38b9b0fb6a0ae2769d47d0a5b5b6556" translate="yes" xml:space="preserve">
          <source>Here is a DBM Filter that does it:</source>
          <target state="translated">Aquí hay un filtro DBM que lo hace:</target>
        </trans-unit>
        <trans-unit id="f525e8a25cabfe7d14de3785ff13475d1795d58b" translate="yes" xml:space="preserve">
          <source>Here is a Perl subroutine which prints whatever parameters are passed to it.</source>
          <target state="translated">Aquí hay una subrutina de Perl que imprime los parámetros que se le pasan.</target>
        </trans-unit>
        <trans-unit id="45cd387e7d7083c724152df763a18216115c4120" translate="yes" xml:space="preserve">
          <source>Here is a Perl subroutine,</source>
          <target state="translated">Aquí hay una subrutina de Perl,</target>
        </trans-unit>
        <trans-unit id="badb362bb0ad7ef4caa28ee99b671c9b8a6d2d3a" translate="yes" xml:space="preserve">
          <source>Here is a brief checklist on how to use Maketext to localize applications:</source>
          <target state="translated">A continuación se presenta una breve lista de verificación sobre cómo utilizar Maketext para localizar aplicaciones:</target>
        </trans-unit>
        <trans-unit id="e180555a648403b54c19cc98b95102cc9c7da450" translate="yes" xml:space="preserve">
          <source>Here is a code snippet to tell what &quot;word&quot; characters are in the current locale, in that locale's order:</source>
          <target state="translated">Aquí hay un fragmento de código para decir qué caracteres de la &quot;palabra&quot; están en la localidad actual,en el orden de esa localidad:</target>
        </trans-unit>
        <trans-unit id="1d9d16b43d949b27c929aa01a0989059daef7367" translate="yes" xml:space="preserve">
          <source>Here is a crude diagram of how filehandle, PerlIO, and Encode interact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd600b00d9b275c1b848cf418f2f3dc7bc149f6" translate="yes" xml:space="preserve">
          <source>Here is a definition of the interface available:</source>
          <target state="translated">Aquí está una definición de la interfaz disponible:</target>
        </trans-unit>
        <trans-unit id="4ffd58769a04701c527d60f25ae6cee8c3577aa1" translate="yes" xml:space="preserve">
          <source>Here is a definition of the interface:</source>
          <target state="translated">Aquí hay una definición de la interfaz:</target>
        </trans-unit>
        <trans-unit id="86773bb3e419f5d3ec6cdc84464ead386b08f646" translate="yes" xml:space="preserve">
          <source>Here is a filter which a variation of the &lt;code&gt;Joe2Jim&lt;/code&gt; filter. As well as substituting all occurrences of &lt;code&gt;&quot;Joe&quot;&lt;/code&gt; to &lt;code&gt;&quot;Jim&quot;&lt;/code&gt; it keeps a count of the number of substitutions made in the context object.</source>
          <target state="translated">Aqu&amp;iacute; hay un filtro que es una variaci&amp;oacute;n del filtro &lt;code&gt;Joe2Jim&lt;/code&gt; . Adem&amp;aacute;s de sustituir todas las apariciones de &lt;code&gt;&quot;Joe&quot;&lt;/code&gt; por &lt;code&gt;&quot;Jim&quot;&lt;/code&gt; , mantiene un recuento del n&amp;uacute;mero de sustituciones realizadas en el objeto de contexto.</target>
        </trans-unit>
        <trans-unit id="4d0499c68821327c798829729804b1a0bcda02ab" translate="yes" xml:space="preserve">
          <source>Here is a formula to ensurrogate a Unicode character \x{10000} and above;</source>
          <target state="translated">Aquí hay una fórmula para asegurar un personaje de Unicode \x{10000}y superior;</target>
        </trans-unit>
        <trans-unit id="5e13ad2f9de57b9ee78127b86f1be789cace5f69" translate="yes" xml:space="preserve">
          <source>Here is a less often used example:</source>
          <target state="translated">He aquí un ejemplo que se utiliza con menos frecuencia:</target>
        </trans-unit>
        <trans-unit id="8615e06af1883810bfc6afe31e15071d09d0a5c7" translate="yes" xml:space="preserve">
          <source>Here is a list of additional methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0815879d63f4c647e36f2a3e53c2a854eb38d7a9" translate="yes" xml:space="preserve">
          <source>Here is a list of facet types by package. The packages are not used internally, but are where the documentation for each type is kept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f9d3fd360afdcd3acc8bec172ad26a0315b6d8" translate="yes" xml:space="preserve">
          <source>Here is a list of the common features of the anonymous sub and the &lt;code&gt;filter()&lt;/code&gt; method.</source>
          <target state="translated">Aqu&amp;iacute; hay una lista de las caracter&amp;iacute;sticas comunes del sub an&amp;oacute;nimo y el m&amp;eacute;todo &lt;code&gt;filter()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1832b72be8a1d9f95753e5f4c415597ea4ff02d1" translate="yes" xml:space="preserve">
          <source>Here is a list of the valid options:</source>
          <target state="translated">Aquí hay una lista de las opciones válidas:</target>
        </trans-unit>
        <trans-unit id="8914294fa8d99540ed79b9d165dee16297f1d6a9" translate="yes" xml:space="preserve">
          <source>Here is a longer example of &lt;code&gt;given&lt;/code&gt; :</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo m&amp;aacute;s extenso de &lt;code&gt;given&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="770b47b87a22658ce1106c32715d366b237fafe0" translate="yes" xml:space="preserve">
          <source>Here is a longer example of &lt;code&gt;given&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b951146917555dc2bff07eaf853fe90ebe90da08" translate="yes" xml:space="preserve">
          <source>Here is a more complete description of how &lt;code&gt;carp&lt;/code&gt; and &lt;code&gt;croak&lt;/code&gt; work. What they do is search the call-stack for a function call stack where they have not been told that there shouldn't be an error. If every call is marked safe, they give up and give a full stack backtrace instead. In other words they presume that the first likely looking potential suspect is guilty. Their rules for telling whether a call shouldn't generate errors work as follows:</source>
          <target state="translated">Aqu&amp;iacute; hay una descripci&amp;oacute;n m&amp;aacute;s completa de c&amp;oacute;mo funcionan la &lt;code&gt;carp&lt;/code&gt; a y el &lt;code&gt;croak&lt;/code&gt; . Lo que hacen es buscar en la pila de llamadas una pila de llamadas de funci&amp;oacute;n en la que no se les ha dicho que no deber&amp;iacute;a haber un error. Si cada llamada est&amp;aacute; marcada como segura, se dan por vencidos y dan un seguimiento de pila completo en su lugar. En otras palabras, suponen que el primer sospechoso potencial que parece probable es culpable. Sus reglas para saber si una llamada no debe generar errores funcionan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="faf8b9ff2265f8681cbbc8e12a3625240f11fc4d" translate="yes" xml:space="preserve">
          <source>Here is a more complete example that makes use of some of the methods described above. It also makes use of the API interface directly (see &lt;a href=&quot;#THE-API-INTERFACE&quot;&gt;&quot;THE API INTERFACE&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d5f1ad420c45c5ca7b8cd720763979928a0e80" translate="yes" xml:space="preserve">
          <source>Here is a more complete example that makes use of some of the methods described above. It also makes use of the API interface directly (see &lt;a href=&quot;#THE-API-INTERFACE&quot;&gt;THE API INTERFACE&lt;/a&gt;).</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo m&amp;aacute;s completo que hace uso de algunos de los m&amp;eacute;todos descritos anteriormente. Tambi&amp;eacute;n hace uso de la interfaz API directamente (consulte &lt;a href=&quot;#THE-API-INTERFACE&quot;&gt;LA INTERFAZ API&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="481b0824c1ad273d7763f1ffdf818909caa88617" translate="yes" xml:space="preserve">
          <source>Here is a possible workaround: create a toplevel</source>
          <target state="translated">Aquí hay una posible solución:crear un nivel superior</target>
        </trans-unit>
        <trans-unit id="aac02f3544d72b59392576f2e2d1edbb502cf904" translate="yes" xml:space="preserve">
          <source>Here is a real example. Netscape 2.0 keeps a record of the locations you visit along with the time you last visited them in a DB_HASH database. This is usually stored in the file</source>
          <target state="translated">Aquí hay un ejemplo real.Netscape 2.0 mantiene un registro de los lugares que visitas junto con la hora de la última vez que los visitaste en una base de datos DB_HASH.Esto se almacena normalmente en el archivo</target>
        </trans-unit>
        <trans-unit id="645c6ed6c5edc9279cd1369bce1c3b76531901ff" translate="yes" xml:space="preserve">
          <source>Here is a sample chunk of code to break up and put back together again some fixed-format input lines, in this case from the output of a normal, Berkeley-style ps:</source>
          <target state="translated">Aquí hay un trozo de código de muestra para romper y recomponer algunas líneas de entrada de formato fijo,en este caso de la salida de una ps normal,al estilo de Berkeley:</target>
        </trans-unit>
        <trans-unit id="38eab965034c311c9ba1e3fb718a8ef1f540a4a4" translate="yes" xml:space="preserve">
          <source>Here is a script that saves, redirects, and restores &lt;code&gt;STDOUT&lt;/code&gt; and &lt;code&gt;STDERR&lt;/code&gt; using various methods:</source>
          <target state="translated">Aqu&amp;iacute; hay un script que guarda, redirige y restaura &lt;code&gt;STDOUT&lt;/code&gt; y &lt;code&gt;STDERR&lt;/code&gt; usando varios m&amp;eacute;todos:</target>
        </trans-unit>
        <trans-unit id="bf170b2ef98b6313890763a8318d77c620c61ec2" translate="yes" xml:space="preserve">
          <source>Here is a script which uses it:</source>
          <target state="translated">Aquí hay un guión que lo utiliza:</target>
        </trans-unit>
        <trans-unit id="d109e8133d36be8ec27bcf8a10b412b1b37621e9" translate="yes" xml:space="preserve">
          <source>Here is a short breakdown of perl's operation:</source>
          <target state="translated">Aquí hay un pequeño desglose de la operación de Perl:</target>
        </trans-unit>
        <trans-unit id="b641d2582f209503d29beece571a8e6d76517863" translate="yes" xml:space="preserve">
          <source>Here is a short example which shows how &lt;code&gt;IO::Select&lt;/code&gt; could be used to write a server which communicates with several sockets while also listening for more connections on a listen socket</source>
          <target state="translated">Aqu&amp;iacute; hay un breve ejemplo que muestra c&amp;oacute;mo &lt;code&gt;IO::Select&lt;/code&gt; podr&amp;iacute;a usarse para escribir un servidor que se comunica con varios sockets mientras tambi&amp;eacute;n escucha m&amp;aacute;s conexiones en un socket de escucha</target>
        </trans-unit>
        <trans-unit id="f42a88335a66627a85ff6a9bee66b1f0bc358b5d" translate="yes" xml:space="preserve">
          <source>Here is a short, but incomplete summary:</source>
          <target state="translated">Aquí hay un resumen corto,pero incompleto:</target>
        </trans-unit>
        <trans-unit id="120acde3518e6786e0d2c79e05b71648be345e7b" translate="yes" xml:space="preserve">
          <source>Here is a simple XSUB which illustrates the mechanics of calling both the &lt;code&gt;PrintID&lt;/code&gt; and &lt;code&gt;Display&lt;/code&gt; methods from C.</source>
          <target state="translated">Aqu&amp;iacute; hay un XSUB simple que ilustra la mec&amp;aacute;nica de llamar a los m&amp;eacute;todos &lt;code&gt;PrintID&lt;/code&gt; y &lt;code&gt;Display&lt;/code&gt; desde C.</target>
        </trans-unit>
        <trans-unit id="fe479990bde1cedb7827b08a0b51384331185af7" translate="yes" xml:space="preserve">
          <source>Here is a simple constructor:</source>
          <target state="translated">Aquí hay un simple constructor:</target>
        </trans-unit>
        <trans-unit id="8cf9fcb79a6528df89e621ddbe45b24482b8eaf2" translate="yes" xml:space="preserve">
          <source>Here is a simple example of how to add a new target to the generated Makefile:</source>
          <target state="translated">Aquí hay un ejemplo simple de cómo añadir un nuevo objetivo al Makefile generado:</target>
        </trans-unit>
        <trans-unit id="68aa8a40a88c99ac15d963facbd3494dfdead354" translate="yes" xml:space="preserve">
          <source>Here is a simple example of the technique, using the &lt;a href=&quot;Hash::Util::FieldHash&quot;&gt;Hash::Util::FieldHash&lt;/a&gt; core module. This module was added to the core to support inside-out object implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cda83fc05639dd468f5eab757cfe3f54097a29" translate="yes" xml:space="preserve">
          <source>Here is a simple example of the technique, using the &lt;a href=&quot;hash/util/fieldhash&quot;&gt;Hash::Util::FieldHash&lt;/a&gt; core module. This module was added to the core to support inside-out object implementations.</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo simple de la t&amp;eacute;cnica, usando el m&amp;oacute;dulo principal &lt;a href=&quot;hash/util/fieldhash&quot;&gt;Hash :: Util :: FieldHash&lt;/a&gt; . Este m&amp;oacute;dulo se agreg&amp;oacute; al n&amp;uacute;cleo para admitir implementaciones de objetos de adentro hacia afuera.</target>
        </trans-unit>
        <trans-unit id="559816aad9ae4c16103f091e70123c0b683add53" translate="yes" xml:space="preserve">
          <source>Here is a simple example that uses RECNO (if you are using a version of Perl earlier than 5.004_57 this example won't work -- see &lt;a href=&quot;#Extra-RECNO-Methods&quot;&gt;&quot;Extra RECNO Methods&quot;&lt;/a&gt; for a workaround).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126689dd133c61c2158a4c313ed301c9a4876c96" translate="yes" xml:space="preserve">
          <source>Here is a simple example that uses RECNO (if you are using a version of Perl earlier than 5.004_57 this example won't work -- see &lt;a href=&quot;#Extra-RECNO-Methods&quot;&gt;Extra RECNO Methods&lt;/a&gt; for a workaround).</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo simple que usa RECNO (si est&amp;aacute; usando una versi&amp;oacute;n de Perl anterior a 5.004_57, este ejemplo no funcionar&amp;aacute;; consulte &lt;a href=&quot;#Extra-RECNO-Methods&quot;&gt;M&amp;eacute;todos RECNO adicionales&lt;/a&gt; para obtener una soluci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="319b9d58a92f86f8037b1f0bce75684db1494b7b" translate="yes" xml:space="preserve">
          <source>Here is a skeleton for the</source>
          <target state="translated">Aquí hay un esqueleto para el</target>
        </trans-unit>
        <trans-unit id="550484c98d2783ef867d760a633e2f2132a4d47b" translate="yes" xml:space="preserve">
          <source>Here is a snippet of XSUB which defines</source>
          <target state="translated">Aquí hay un fragmento de XSUB que define</target>
        </trans-unit>
        <trans-unit id="002abcfd840947931c322494ad132e91e82ebd0f" translate="yes" xml:space="preserve">
          <source>Here is a snippet of code that is loosely based on Tom Christiansen's</source>
          <target state="translated">Aquí hay un fragmento de código que está vagamente basado en el</target>
        </trans-unit>
        <trans-unit id="45cde31767fc2f9538502554458696cb23085fa9" translate="yes" xml:space="preserve">
          <source>Here is a trivial XSUB which prints the context in which it is currently executing.</source>
          <target state="translated">Aquí hay un trivial XSUB que imprime el contexto en el que se está ejecutando actualmente.</target>
        </trans-unit>
        <trans-unit id="10eee1483a3720a88b88f2a6e6f0dd7de0f97165" translate="yes" xml:space="preserve">
          <source>Here is a trivial example of using &lt;code&gt;deflate&lt;/code&gt; . It simply reads standard input, deflates it and writes it to standard output.</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo trivial del uso de &lt;code&gt;deflate&lt;/code&gt; . Simplemente lee la entrada est&amp;aacute;ndar, la desinfla y la escribe en la salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="c80454242f7e359341fe858a8036d1c91f6e349e" translate="yes" xml:space="preserve">
          <source>Here is a trivial example of using &lt;code&gt;deflate&lt;/code&gt;. It simply reads standard input, deflates it and writes it to standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ea711e9831279932d6165629ca443cfabce37a" translate="yes" xml:space="preserve">
          <source>Here is a typical example of context popping, as found in &lt;code&gt;pp_leavesub&lt;/code&gt; (simplified slightly):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1868baee762e5828998b63475228ea8991afb128" translate="yes" xml:space="preserve">
          <source>Here is a very brief example of a policy module that expires each cache item after ten seconds.</source>
          <target state="translated">He aquí un ejemplo muy breve de un módulo de política que expira cada elemento de la memoria caché después de diez segundos.</target>
        </trans-unit>
        <trans-unit id="7f88bfdf5db7c3c03b6f8f2495da889972cfe524" translate="yes" xml:space="preserve">
          <source>Here is a very spartan uudecoder that will work on EBCDIC:</source>
          <target state="translated">Aquí hay un uudecodificador muy espartano que funcionará en el EBCDIC:</target>
        </trans-unit>
        <trans-unit id="d946c977086b5be12c98dcb6ff1ce5c76b228d28" translate="yes" xml:space="preserve">
          <source>Here is an efficient way to delete all files that haven't been modified for at least a week:</source>
          <target state="translated">Esta es una manera eficiente de borrar todos los archivos que no han sido modificados por lo menos durante una semana:</target>
        </trans-unit>
        <trans-unit id="70fccfa6b6af36450513847e29399b60a48adeac" translate="yes" xml:space="preserve">
          <source>Here is an example from big5-eten.</source>
          <target state="translated">Aquí hay un ejemplo de big5-eten.</target>
        </trans-unit>
        <trans-unit id="e9c9019a4b9d1c2c747c162dad5a190290c7d35f" translate="yes" xml:space="preserve">
          <source>Here is an example of backtracking: Let's say you want to find the word following &quot;foo&quot; in the string &quot;Food is on the foo table.&quot;:</source>
          <target state="translated">Aquí hay un ejemplo de retroceso:Digamos que quieres encontrar la palabra que sigue a &quot;foo&quot; en la cadena &quot;La comida está en la mesa foo&quot;:</target>
        </trans-unit>
        <trans-unit id="ea40af6afb8d235271ee69af60576e5fd7626d85" translate="yes" xml:space="preserve">
          <source>Here is an example of how to access the option name and value from within a subroutine:</source>
          <target state="translated">A continuación se muestra un ejemplo de cómo acceder al nombre y al valor de la opción desde una subrutina:</target>
        </trans-unit>
        <trans-unit id="205e5e253d5e8d9713777fb82bdd5445436cb1b6" translate="yes" xml:space="preserve">
          <source>Here is an example of how your own code can go broken:</source>
          <target state="translated">Aquí hay un ejemplo de cómo tu propio código puede romperse:</target>
        </trans-unit>
        <trans-unit id="748768cc7486ba197e2bf8648f0ea7277ae15d72" translate="yes" xml:space="preserve">
          <source>Here is an example of the script which &quot;calculates&quot; the side of circumscribed octagon using the above package:</source>
          <target state="translated">He aquí un ejemplo de la escritura que &quot;calcula&quot; el lado del octógono circunscrito utilizando el paquete anterior:</target>
        </trans-unit>
        <trans-unit id="404268aa749a8cb74398fcef4885ddfb5e393936" translate="yes" xml:space="preserve">
          <source>Here is an example of these principles in action:</source>
          <target state="translated">He aquí un ejemplo de estos principios en acción:</target>
        </trans-unit>
        <trans-unit id="d36af1892ac909ba4b83e53e087863bb90d56692" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;NVtime&lt;/code&gt; from C:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo del uso de &lt;code&gt;NVtime&lt;/code&gt; de C:</target>
        </trans-unit>
        <trans-unit id="7c9994bdad12e2f359f710fa2f6ef403d1effd52" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;inflate&lt;/code&gt; .</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo del uso de &lt;code&gt;inflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db70c2ba72c1ebe893c3bd333e0df1b322d0b57a" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;inflate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e2da397e1c17983df2e6041276a4e28620f94d" translate="yes" xml:space="preserve">
          <source>Here is an example of using an optional parameter to override the default buffer size.</source>
          <target state="translated">He aquí un ejemplo de utilización de un parámetro opcional para anular el tamaño de la memoria intermedia predeterminada.</target>
        </trans-unit>
        <trans-unit id="8f3c57546ccedafc9770a8f0efa81f37adc91294" translate="yes" xml:space="preserve">
          <source>Here is an example of using the &lt;code&gt;Compress::Raw::Zlib::Deflate&lt;/code&gt; optional parameter list to override the default buffer size and compression level. All other options will take their default values.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un ejemplo del uso de la lista de par&amp;aacute;metros opcionales &lt;code&gt;Compress::Raw::Zlib::Deflate&lt;/code&gt; para anular el tama&amp;ntilde;o de b&amp;uacute;fer predeterminado y el nivel de compresi&amp;oacute;n. Todas las dem&amp;aacute;s opciones tomar&amp;aacute;n sus valores predeterminados.</target>
        </trans-unit>
        <trans-unit id="87545ecf0b6e7815b60232cfb74673f436cd6fe1" translate="yes" xml:space="preserve">
          <source>Here is an example of using the &lt;code&gt;deflateInit&lt;/code&gt; optional parameter list to override the default buffer size and compression level. All other options will take their default values.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un ejemplo del uso de la lista de par&amp;aacute;metros opcionales &lt;code&gt;deflateInit&lt;/code&gt; para anular el tama&amp;ntilde;o de b&amp;uacute;fer y el nivel de compresi&amp;oacute;n predeterminados. Todas las dem&amp;aacute;s opciones tomar&amp;aacute;n sus valores predeterminados.</target>
        </trans-unit>
        <trans-unit id="09d05a4a26dea0db21fa2d5b84da51786c319d41" translate="yes" xml:space="preserve">
          <source>Here is an example of using the &lt;code&gt;inflateInit&lt;/code&gt; optional parameter to override the default buffer size.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un ejemplo del uso del par&amp;aacute;metro opcional &lt;code&gt;inflateInit&lt;/code&gt; para anular el tama&amp;ntilde;o de b&amp;uacute;fer predeterminado.</target>
        </trans-unit>
        <trans-unit id="c7cbd7a5ef78ce531e711de3f32a263a9851ff1b" translate="yes" xml:space="preserve">
          <source>Here is an example of using the filter:</source>
          <target state="translated">He aquí un ejemplo de uso del filtro:</target>
        </trans-unit>
        <trans-unit id="e4ff3e36580b38b61c7a227d4955c81060aeb814" translate="yes" xml:space="preserve">
          <source>Here is an example script that uses &lt;code&gt;Filter::sh&lt;/code&gt; :</source>
          <target state="translated">Aqu&amp;iacute; hay un script de ejemplo que usa &lt;code&gt;Filter::sh&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="626be57a73915f6479e3b15d4d6386f5b48c7020" translate="yes" xml:space="preserve">
          <source>Here is an example script that uses &lt;code&gt;Filter::sh&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012645975f14da1f34bb102f202aaf2953a30bc6" translate="yes" xml:space="preserve">
          <source>Here is an example script which uses the interface. It implements a</source>
          <target state="translated">Aquí hay un ejemplo de guión que utiliza la interfaz.Implementa un</target>
        </trans-unit>
        <trans-unit id="1cbf7c7be1c22fad45e3015eadd538010d85816f" translate="yes" xml:space="preserve">
          <source>Here is an example that makes use of this tie:</source>
          <target state="translated">Aquí hay un ejemplo que hace uso de esta corbata:</target>
        </trans-unit>
        <trans-unit id="a8ff5767311ec468cc89661ca51ca82e04f18ab9" translate="yes" xml:space="preserve">
          <source>Here is an example that renames all c files to cpp.</source>
          <target state="translated">Aquí hay un ejemplo que renombra todos los archivos c a cpp.</target>
        </trans-unit>
        <trans-unit id="80e0e9e4bb3140e634ddeaa722387560a0149a79" translate="yes" xml:space="preserve">
          <source>Here is an example to illustrate how the bits actually fall in place:</source>
          <target state="translated">Aquí hay un ejemplo para ilustrar cómo los bits realmente caen en su lugar:</target>
        </trans-unit>
        <trans-unit id="d0e29b3fe9551af38ec63a152fe4f4ef139ee92e" translate="yes" xml:space="preserve">
          <source>Here is an example where a string containing blank-separated words, numbers and single dashes is to be split into its components. Using &lt;code&gt;/\s+/&lt;/code&gt; alone won't work, because spaces are not required between dashes, or a word or a dash. Additional places for a split are established by looking ahead and behind:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un ejemplo en el que una cadena que contiene palabras separadas en blanco, n&amp;uacute;meros y guiones simples se divide en sus componentes. Usar &lt;code&gt;/\s+/&lt;/code&gt; solo no funcionar&amp;aacute;, porque no se requieren espacios entre guiones, o una palabra o un gui&amp;oacute;n. Los lugares adicionales para una divisi&amp;oacute;n se establecen mirando hacia adelante y hacia atr&amp;aacute;s:</target>
        </trans-unit>
        <trans-unit id="4b737180e2561bd5a0699f794a8b8783a4667057" translate="yes" xml:space="preserve">
          <source>Here is an example which illustrates the problem from a &lt;b&gt;DB_File&lt;/b&gt; perspective:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo que ilustra el problema desde una perspectiva &lt;b&gt;DB_File&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="f644e6370d9a6fe28106ff279c08d32f76b322b7" translate="yes" xml:space="preserve">
          <source>Here is an extreme example. Consider the Fibonacci sequence, defined by the following function:</source>
          <target state="translated">He aquí un ejemplo extremo.Consideremos la secuencia de Fibonacci,definida por la siguiente función:</target>
        </trans-unit>
        <trans-unit id="87cc084321780edd34384cbc3149445fe191a094" translate="yes" xml:space="preserve">
          <source>Here is an interesting idea that doesn't involve the Debug filter. Currently Perl subroutines have fairly limited support for formal parameter lists. You can specify the number of parameters and their type, but you still have to manually take them out of the &lt;code&gt;@_&lt;/code&gt; array yourself. Write a source filter that allows you to have a named parameter list. Such a filter would turn this:</source>
          <target state="translated">Aqu&amp;iacute; hay una idea interesante que no involucra el filtro de depuraci&amp;oacute;n. Actualmente, las subrutinas de Perl tienen un soporte bastante limitado para listas de par&amp;aacute;metros formales. Puede especificar el n&amp;uacute;mero de par&amp;aacute;metros y su tipo, pero a&amp;uacute;n tiene que sacarlos manualmente de la matriz &lt;code&gt;@_&lt;/code&gt; usted mismo. Escriba un filtro de origen que le permita tener una lista de par&amp;aacute;metros con nombre. Tal filtro convertir&amp;iacute;a esto:</target>
        </trans-unit>
        <trans-unit id="cdf048c5ea517c38dde03f3aa3ec4c135c3bd31b" translate="yes" xml:space="preserve">
          <source>Here is another real-life example. By default, whenever Perl writes to a DBM database it always writes the key and value as strings. So when you use this:</source>
          <target state="translated">Aquí hay otro ejemplo de la vida real.De forma predeterminada,siempre que Perl escribe en una base de datos DBM,siempre escribe la clave y el valor como cadenas.Así que cuando usas esto:</target>
        </trans-unit>
        <trans-unit id="25d95fcca3eab15fb28653dc8409bb9ada80176a" translate="yes" xml:space="preserve">
          <source>Here is how &lt;code&gt;Encode&lt;/code&gt; handles the UTF8 flag.</source>
          <target state="translated">As&amp;iacute; es como &lt;code&gt;Encode&lt;/code&gt; maneja la bandera UTF8.</target>
        </trans-unit>
        <trans-unit id="a3b1ac2677b1b9f8b57e877bf8d52ae893a26dd3" translate="yes" xml:space="preserve">
          <source>Here is how the blind poet would modernise the encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e87986f55aa1d049d1fc43e956c467b865ddf7" translate="yes" xml:space="preserve">
          <source>Here is how to query the database for the &lt;b&gt;de&lt;/b&gt; (Deutsch or German) locale.</source>
          <target state="translated">A continuaci&amp;oacute;n se explica c&amp;oacute;mo consultar la base de datos para la configuraci&amp;oacute;n regional &lt;b&gt;de&lt;/b&gt; (Deutsch o alem&amp;aacute;n).</target>
        </trans-unit>
        <trans-unit id="b74dc5032afa362c898993b212d8c65907cee21d" translate="yes" xml:space="preserve">
          <source>Here is how to use this module.</source>
          <target state="translated">Aquí está cómo usar este módulo.</target>
        </trans-unit>
        <trans-unit id="e417973919b13f8ed343cc33d50cf8bf18dd96fb" translate="yes" xml:space="preserve">
          <source>Here is how to write your native data out using UTF-8 (or UTF-EBCDIC) and then read it back in.</source>
          <target state="translated">Aquí está cómo escribir sus datos nativos usando UTF-8 (o UTF-EBCDIC)y luego volver a leerlos.</target>
        </trans-unit>
        <trans-unit id="e23347f9a27415c41076a210002eea6fcec860f7" translate="yes" xml:space="preserve">
          <source>Here is our &lt;code&gt;File&lt;/code&gt; class using &lt;code&gt;Moose&lt;/code&gt; :</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; nuestra clase &lt;code&gt;File&lt;/code&gt; usando &lt;code&gt;Moose&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9495aaee55fb80cc67d19bf52eb6559a4bfcab26" translate="yes" xml:space="preserve">
          <source>Here is our &lt;code&gt;File&lt;/code&gt; class using &lt;code&gt;Moose&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd300984a980fc559dc1a1ab348f5e54e30db5c" translate="yes" xml:space="preserve">
          <source>Here is same snippet of code rewritten using &lt;code&gt;globmap&lt;/code&gt;</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; el mismo fragmento de c&amp;oacute;digo reescrito usando &lt;code&gt;globmap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d1d9e97293f2045a09f6d838c3b2ec8fb4c6f77" translate="yes" xml:space="preserve">
          <source>Here is some explanation of that format:</source>
          <target state="translated">Aquí hay una explicación de ese formato:</target>
        </trans-unit>
        <trans-unit id="f6967e582bf81d06472d4e74fa87d3738c79e15a" translate="yes" xml:space="preserve">
          <source>Here is the Perl subroutine</source>
          <target state="translated">Aquí está la subrutina de Perl</target>
        </trans-unit>
        <trans-unit id="c14eb5e60796cb8513e72c1a3dc8468ba095c078" translate="yes" xml:space="preserve">
          <source>Here is the answer for the exercise: In the case of str(), we need no explicit recursion since the overloaded &lt;code&gt;.&lt;/code&gt;-operator will fall back to an existing overloaded operator &lt;code&gt;&quot;&quot;&lt;/code&gt; . Overloaded arithmetic operators</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; la respuesta para el ejercicio: en el caso de str (), no necesitamos una recursividad expl&amp;iacute;cita desde la sobrecarga &lt;code&gt;.&lt;/code&gt; -operador recurrir&amp;aacute; a un operador sobrecargado existente &lt;code&gt;&quot;&quot;&lt;/code&gt; . Operadores aritm&amp;eacute;ticos sobrecargados</target>
        </trans-unit>
        <trans-unit id="859c0d277a95c300a54069c3c3fa1998c806c07c" translate="yes" xml:space="preserve">
          <source>Here is the answer for the exercise: In the case of str(), we need no explicit recursion since the overloaded &lt;code&gt;.&lt;/code&gt;-operator will fall back to an existing overloaded operator &lt;code&gt;&quot;&quot;&lt;/code&gt;. Overloaded arithmetic operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0490d051b62ee770784e189641a4237c3b3f3c05" translate="yes" xml:space="preserve">
          <source>Here is the complete Debug filter:</source>
          <target state="translated">Aquí está el filtro de depuración completo:</target>
        </trans-unit>
        <trans-unit id="1389bf6f29596689df97762593fe5eec3e652d54" translate="yes" xml:space="preserve">
          <source>Here is the complete list of POP macros available, along with the types they return.</source>
          <target state="translated">Aquí está la lista completa de macros POP disponibles,junto con los tipos que devuelven.</target>
        </trans-unit>
        <trans-unit id="41758a39c9a7b172d40507117ebc8d6513b795ee" translate="yes" xml:space="preserve">
          <source>Here is the crux of the problem. A side-effect of opening the &lt;b&gt;DB_File&lt;/b&gt; database in step 2 is that an initial block from the database will get read from disk and cached in memory.</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; el meollo del problema. Un efecto secundario de abrir la base de datos &lt;b&gt;DB_File&lt;/b&gt; en el paso 2 es que un bloque inicial de la base de datos se leer&amp;aacute; del disco y se almacenar&amp;aacute; en la memoria cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="c51e4961cb27feed1f60a5e6765893809aef1e36" translate="yes" xml:space="preserve">
          <source>Here is the hooking interface:</source>
          <target state="translated">Aquí está la interfaz de enganche:</target>
        </trans-unit>
        <trans-unit id="a16851851d330cec48f9b8e9d6adc8c31c07b46b" translate="yes" xml:space="preserve">
          <source>Here is the list of options. Some options can be in short format (-f) or long (--from) one.</source>
          <target state="translated">Aquí está la lista de opciones.Algunas opciones pueden ser en formato corto (-f)o largo (--desde).</target>
        </trans-unit>
        <trans-unit id="59a0c7a2e7021b69e05a0894a3173e1357ec31a3" translate="yes" xml:space="preserve">
          <source>Here is the list of things which may be &quot;broken&quot; on EMX (from EMX docs):</source>
          <target state="translated">Aquí está la lista de cosas que pueden estar &quot;rotas&quot; en el EMX (de los documentos del EMX):</target>
        </trans-unit>
        <trans-unit id="2ff240e57cd35b4f33c424da68af14cbdadb7f0a" translate="yes" xml:space="preserve">
          <source>Here is the module.</source>
          <target state="translated">Aquí está el módulo.</target>
        </trans-unit>
        <trans-unit id="1061d133b7ebfd4153ef09e5ea8f0d70a6682093" translate="yes" xml:space="preserve">
          <source>Here is the output (split into several lines):</source>
          <target state="translated">Aquí está la salida (dividida en varias líneas):</target>
        </trans-unit>
        <trans-unit id="8d77260497f2dd38213b4c5d12c82639b7bb64d8" translate="yes" xml:space="preserve">
          <source>Here is the output from the code above.</source>
          <target state="translated">Aquí está la salida del código de arriba.</target>
        </trans-unit>
        <trans-unit id="afa8a8a3c0bd9e2f5b6e60996a561b236f9c8638" translate="yes" xml:space="preserve">
          <source>Here is the output from the script:</source>
          <target state="translated">Aquí está la salida del guión:</target>
        </trans-unit>
        <trans-unit id="3165612e15dd81d081ad2ea3bdee303a0e8cef7a" translate="yes" xml:space="preserve">
          <source>Here is the output:</source>
          <target state="translated">Aquí está la salida:</target>
        </trans-unit>
        <trans-unit id="bc7f872b555210687127240090558fcc03c8212f" translate="yes" xml:space="preserve">
          <source>Here is the relevant quote from the dbopen man page where it defines the use of the R_CURSOR flag with seq:</source>
          <target state="translated">Aquí está la cita relevante de la página del hombre de dbopen donde define el uso de la bandera R_CURSOR con seq:</target>
        </trans-unit>
        <trans-unit id="2219210520e554129a1633cb7206210581ad4e0f" translate="yes" xml:space="preserve">
          <source>Here is the sample C file:</source>
          <target state="translated">Aquí está el archivo de muestra C:</target>
        </trans-unit>
        <trans-unit id="4b7d8db184d6d571b8ca9a214519cc03ef4c5e4a" translate="yes" xml:space="preserve">
          <source>Here is the script above rewritten using the &lt;code&gt;seq&lt;/code&gt; API method.</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; el script anterior reescrito usando el m&amp;eacute;todo API &lt;code&gt;seq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e67d178bb0da6449165979cec1cd5461e419a26" translate="yes" xml:space="preserve">
          <source>Here is the text of</source>
          <target state="translated">Aquí está el texto de</target>
        </trans-unit>
        <trans-unit id="ff1b450e27d60fd1ad40e7bb902cfa0aa22a3e80" translate="yes" xml:space="preserve">
          <source>Here is what C has that Perl doesn't:</source>
          <target state="translated">Esto es lo que tiene la C que no tiene Perl:</target>
        </trans-unit>
        <trans-unit id="16fc2b68835145e65475f1bb3c3809808bf7eb3b" translate="yes" xml:space="preserve">
          <source>Here is yet another way to print your environment:</source>
          <target state="translated">Aquí hay otra forma de imprimir su entorno:</target>
        </trans-unit>
        <trans-unit id="a9c1621c9657e20cbf24cd9acf9471928604302c" translate="yes" xml:space="preserve">
          <source>Here some simple examples. For the full details of the data structure and the related glob-style pattern matching, see &lt;a href=&quot;TAP::Parser::Scheduler#Rules-data-structure&quot;&gt;&quot;Rules data structure&quot; in TAP::Parser::Scheduler&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8ed8a023e586883874c39ef49b4107598cdc9c" translate="yes" xml:space="preserve">
          <source>Here some simple examples. For the full details of the data structure and the related glob-style pattern matching, see &lt;a href=&quot;parser/scheduler#Rules-data-structure&quot;&gt;Rules data structure in TAP::Parser::Scheduler&lt;/a&gt;.</source>
          <target state="translated">Aqu&amp;iacute; algunos ejemplos sencillos. Para obtener todos los detalles de la estructura de datos y la coincidencia de patrones de estilo glob relacionados, consulte &lt;a href=&quot;parser/scheduler#Rules-data-structure&quot;&gt;Estructura de datos de reglas en TAP :: Parser :: Scheduler&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c82546a7315fbf02695dbf5d467040f6b1a876b8" translate="yes" xml:space="preserve">
          <source>Here the actual architecture of the Synology system matters. You have to find out where the gcc libraries have been installed. Look in /opt for a directory similar to arm-none-linux-gnueab or powerpc-linux-gnuspe. In the instructions below I'll use powerpc-linux-gnuspe as an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac9540016a9d087f8c1a19391a980dab40c0a80" translate="yes" xml:space="preserve">
          <source>Here the first call caches the list (1,2,3,4,5,6,7). The second call does not really make sense. &lt;code&gt;Memoize&lt;/code&gt; cannot guess what behavior &lt;code&gt;iota&lt;/code&gt; should have in scalar context without actually calling it in scalar context. Normally &lt;code&gt;Memoize&lt;/code&gt;</source>
          <target state="translated">Aqu&amp;iacute;, la primera llamada almacena en cach&amp;eacute; la lista (1,2,3,4,5,6,7). La segunda llamada realmente no tiene sentido. &lt;code&gt;Memoize&lt;/code&gt; no puede adivinar qu&amp;eacute; comportamiento deber&amp;iacute;a tener &lt;code&gt;iota&lt;/code&gt; en un contexto escalar sin llamarlo realmente en un contexto escalar. Normalmente &lt;code&gt;Memoize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9449cd01fe2c1ad3593def47ef2650f44e48880d" translate="yes" xml:space="preserve">
          <source>Here the first line will load &lt;code&gt;Carp&lt;/code&gt;</source>
          <target state="translated">Aqu&amp;iacute; la primera l&amp;iacute;nea cargar&amp;aacute; &lt;code&gt;Carp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ec7a9d65cd4bf61cf8b315b7aa4990f3fbae6e4" translate="yes" xml:space="preserve">
          <source>Here the generated XS function returns nothing on success, and will die() with a meaningful error message on error.</source>
          <target state="translated">Aquí la función XS generada no devuelve nada sobre el éxito,y morirá()con un mensaje de error significativo sobre el error.</target>
        </trans-unit>
        <trans-unit id="083a79c03137ba3c061edc8bbcb5ea85ceb9fdd1" translate="yes" xml:space="preserve">
          <source>Here the multi-argument form of pipe open() is preferred because the pattern and indeed even the filenames themselves might hold metacharacters.</source>
          <target state="translated">Aquí se prefiere la forma multiargumento de pipe open()porque el patrón y,de hecho,incluso los propios nombres de archivo pueden contener metacaracteres.</target>
        </trans-unit>
        <trans-unit id="84ce6346e023cfe513980b15261a23a5e8073bce" translate="yes" xml:space="preserve">
          <source>Here the number of bytes chopped off (1) is shown next as the OFFSET. The portion of the string between the &quot;real&quot; and the &quot;fake&quot; beginnings is shown in parentheses, and the values of &lt;code&gt;SvCUR&lt;/code&gt; and &lt;code&gt;SvLEN&lt;/code&gt; reflect the fake beginning, not the real one. (The first character of the string buffer happens to have changed to &quot;\1&quot; here, not &quot;1&quot;, because the current implementation stores the offset count in the string buffer. This is subject to change.)</source>
          <target state="translated">Aqu&amp;iacute;, el n&amp;uacute;mero de bytes cortados (1) se muestra a continuaci&amp;oacute;n como OFFSET. La parte de la cadena entre el comienzo &quot;real&quot; y el &quot;falso&quot; se muestra entre par&amp;eacute;ntesis, y los valores de &lt;code&gt;SvCUR&lt;/code&gt; y &lt;code&gt;SvLEN&lt;/code&gt; reflejan el comienzo falso, no el real. (El primer car&amp;aacute;cter del b&amp;uacute;fer de cadenas ha cambiado a &quot;\ 1&quot; aqu&amp;iacute;, no a &quot;1&quot;, porque la implementaci&amp;oacute;n actual almacena el recuento de compensaci&amp;oacute;n en el b&amp;uacute;fer de cadenas. Esto est&amp;aacute; sujeto a cambios).</target>
        </trans-unit>
        <trans-unit id="02f2e253f1bb4668aac3cfa34c16cf32f5c7d557" translate="yes" xml:space="preserve">
          <source>Here translator() is a subroutine which takes</source>
          <target state="translated">Aquí el traductor()es una subrutina que toma</target>
        </trans-unit>
        <trans-unit id="5ec73b17b809ba7add1fdfcfb1b37379d0947f01" translate="yes" xml:space="preserve">
          <source>Here we are assuming &lt;code&gt;My::I18N::en&lt;/code&gt; to own the main lexicon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ad459c54b1acfe7be7330c75e06154ad271928" translate="yes" xml:space="preserve">
          <source>Here we can see a much more complex program, with various optimisations in play. At regnode 10 we see an example where a character class with only one character in it was turned into an &lt;code&gt;EXACT&lt;/code&gt; node. We can also see where an entire alternation was turned into a &lt;code&gt;TRIE-EXACT&lt;/code&gt; node. As a consequence, some of the regnodes have been marked as optimised away. We can see that the &lt;code&gt;$&lt;/code&gt; symbol has been converted into an &lt;code&gt;EOL&lt;/code&gt; regop, a special piece of code that looks for &lt;code&gt;\n&lt;/code&gt; or the end of the string.</source>
          <target state="translated">Aqu&amp;iacute; podemos ver un programa mucho m&amp;aacute;s complejo, con varias optimizaciones en juego. En regnode 10 vemos un ejemplo en el que una clase de car&amp;aacute;cter con solo un car&amp;aacute;cter se convirti&amp;oacute; en un nodo &lt;code&gt;EXACT&lt;/code&gt; O . Tambi&amp;eacute;n podemos ver d&amp;oacute;nde una alternancia completa se convirti&amp;oacute; en un nodo &lt;code&gt;TRIE-EXACT&lt;/code&gt; . Como consecuencia, algunos de los regnodos se han marcado como optimizados. Podemos ver que el s&amp;iacute;mbolo &lt;code&gt;$&lt;/code&gt; se ha convertido en una repetici&amp;oacute;n &lt;code&gt;EOL&lt;/code&gt; , un fragmento de c&amp;oacute;digo especial que busca &lt;code&gt;\n&lt;/code&gt; o el final de la cadena.</target>
        </trans-unit>
        <trans-unit id="9e88298fdbd00bad0c423ba34b385ffbc4d523ec" translate="yes" xml:space="preserve">
          <source>Here we describe the internal form your code is converted to by Perl. Start with a simple example:</source>
          <target state="translated">Aquí describimos la forma interna en la que su código es convertido por Perl.Empieza con un simple ejemplo:</target>
        </trans-unit>
        <trans-unit id="c7a54d30dda627090722af6ca7619feef7f811fd" translate="yes" xml:space="preserve">
          <source>Here we discuss how to build Perl under AmigaOS.</source>
          <target state="translated">Aquí discutimos cómo construir Perl bajo el AmigaOS.</target>
        </trans-unit>
        <trans-unit id="5a948596d25d15dea7b9635c0bba86ef5734411f" translate="yes" xml:space="preserve">
          <source>Here we discuss how to build Perl under OS/2.</source>
          <target state="translated">Aquí discutimos cómo construir Perl bajo OS/2.</target>
        </trans-unit>
        <trans-unit id="e0ac29b536b198edfced84637724dab1c5327400" translate="yes" xml:space="preserve">
          <source>Here we document the backslash sequences that don't fall in one of the categories above. These are:</source>
          <target state="translated">Aquí documentamos las secuencias de barra invertida que no entran en ninguna de las categorías anteriores.Estas son:</target>
        </trans-unit>
        <trans-unit id="78599b796151b0cc81f36fe73ffc3c8ea3b46215" translate="yes" xml:space="preserve">
          <source>Here we list environment variables with are either OS/2- and DOS- and Win*-specific, or are more important under OS/2 than under other OSes.</source>
          <target state="translated">Aquí enumeramos las variables de entorno que son específicas de OS/2 y DOS y Win*,o que son más importantes en OS/2 que en otros sistemas operativos.</target>
        </trans-unit>
        <trans-unit id="2d28d2754acd9ac1365a8c90a3604a80ec81bb16" translate="yes" xml:space="preserve">
          <source>Here we list major changes which could make you by surprise.</source>
          <target state="translated">Aquí tenemos una lista de los principales cambios que podrían sorprenderte.</target>
        </trans-unit>
        <trans-unit id="ffa194969d86c572c4f360d304be10a58d841a2b" translate="yes" xml:space="preserve">
          <source>Here we suppose that conversion to &lt;code&gt;MyObject&lt;/code&gt; in the INPUT: section and from MyObject when processing RETVAL will modify a global variable &lt;code&gt;global_state&lt;/code&gt; . After these conversions are performed, we restore the old value of &lt;code&gt;global_state&lt;/code&gt; (to avoid memory leaks, for example).</source>
          <target state="translated">Aqu&amp;iacute; suponemos que la conversi&amp;oacute;n a &lt;code&gt;MyObject&lt;/code&gt; en la secci&amp;oacute;n INPUT: y desde MyObject al procesar RETVAL modificar&amp;aacute; una variable global &lt;code&gt;global_state&lt;/code&gt; . Una vez realizadas estas conversiones, restauramos el valor anterior de &lt;code&gt;global_state&lt;/code&gt; (para evitar p&amp;eacute;rdidas de memoria, por ejemplo).</target>
        </trans-unit>
        <trans-unit id="c12f8daf742cd0e2e4cefb5aa95001afa9ec6004" translate="yes" xml:space="preserve">
          <source>Here we suppose that conversion to &lt;code&gt;MyObject&lt;/code&gt; in the INPUT: section and from MyObject when processing RETVAL will modify a global variable &lt;code&gt;global_state&lt;/code&gt;. After these conversions are performed, we restore the old value of &lt;code&gt;global_state&lt;/code&gt; (to avoid memory leaks, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ed5c8e65b6eb8ae2e55830259cac345b514bb1" translate="yes" xml:space="preserve">
          <source>Here we'll create some files that will generate a test library. These will include a C source file and a header file. We'll also create a Makefile.PL in this directory. Then we'll make sure that running make at the Mytest2 level will automatically run this Makefile.PL file and the resulting Makefile.</source>
          <target state="translated">Aquí crearemos algunos archivos que generarán una biblioteca de pruebas.Estos incluirán un archivo de fuente C y un archivo de cabecera.También crearemos un Makefile.PL en este directorio.Luego nos aseguraremos de que al ejecutar make en el nivel Mytest2,automáticamente se ejecutará este archivo Makefile.PL y el Makefile resultante.</target>
        </trans-unit>
        <trans-unit id="930cec360a8de0d300404f1ae97c04e5862e5b86" translate="yes" xml:space="preserve">
          <source>Here we're using the typeglobs to do symbol table aliasing. It's a tad subtle, though, and also won't work if you're using &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables, because only globals (even in disguise as &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;s) are in the symbol table.</source>
          <target state="translated">Aqu&amp;iacute; estamos usando typeglobs para hacer alias de tablas de s&amp;iacute;mbolos. Sin embargo, es un poco sutil y tampoco funcionar&amp;aacute; si est&amp;aacute;s usando &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables, porque solo los globales (incluso disfrazados de &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; es ) est&amp;aacute;n en la tabla de s&amp;iacute;mbolos.</target>
        </trans-unit>
        <trans-unit id="06be2ecbc25fb96dbb599240b486ce47b84ed17c" translate="yes" xml:space="preserve">
          <source>Here we're using the typeglobs to do symbol table aliasing. It's a tad subtle, though, and also won't work if you're using &lt;code&gt;my&lt;/code&gt; variables, because only globals (even in disguise as &lt;code&gt;local&lt;/code&gt;s) are in the symbol table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca4ef30e473f35ac20ca9ad8e996a139eaf86fb" translate="yes" xml:space="preserve">
          <source>Here we've created a reference to an anonymous array of three elements whose final element is itself a reference to another anonymous array of three elements. (The multidimensional syntax described later can be used to access this. For example, after the above, &lt;code&gt;$arrayref-&amp;gt;[2][1]&lt;/code&gt; would have the value &quot;b&quot;.)</source>
          <target state="translated">Aqu&amp;iacute; hemos creado una referencia a una matriz an&amp;oacute;nima de tres elementos cuyo elemento final es en s&amp;iacute; mismo una referencia a otra matriz an&amp;oacute;nima de tres elementos. (La sintaxis multidimensional descrita m&amp;aacute;s adelante se puede utilizar para acceder a esto. Por ejemplo, despu&amp;eacute;s de lo anterior, &lt;code&gt;$arrayref-&amp;gt;[2][1]&lt;/code&gt; tendr&amp;iacute;a el valor &quot;b&quot;).</target>
        </trans-unit>
        <trans-unit id="977db011c41d89278867b065d331c7d420016e2c" translate="yes" xml:space="preserve">
          <source>Here you see an example of Perl's system abstraction, which we'll see later: &lt;code&gt;PerlMem_malloc&lt;/code&gt; is either your system's &lt;code&gt;malloc&lt;/code&gt; , or Perl's own &lt;code&gt;malloc&lt;/code&gt; as defined in</source>
          <target state="translated">Aqu&amp;iacute; puede ver un ejemplo de la abstracci&amp;oacute;n del sistema de Perl, que veremos m&amp;aacute;s adelante: &lt;code&gt;PerlMem_malloc&lt;/code&gt; es el &lt;code&gt;malloc&lt;/code&gt; de su sistema o el propio &lt;code&gt;malloc&lt;/code&gt; de Perl como se define en</target>
        </trans-unit>
        <trans-unit id="b64b714460c7f17586b097330025e123e22543a5" translate="yes" xml:space="preserve">
          <source>Here you see an example of Perl's system abstraction, which we'll see later: &lt;code&gt;PerlMem_malloc&lt;/code&gt; is either your system's &lt;code&gt;malloc&lt;/code&gt;, or Perl's own &lt;code&gt;malloc&lt;/code&gt; as defined in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afea48b05d5e51f5f1638375ce5b0e27610663a4" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a full program showing how to make use of locale-sensitive sorting, Unicode casing, and managing print widths when some of the characters take up zero or two columns, not just one column each time. When run, the following program produces this nicely aligned output:</source>
          <target state="translated">Aqu&amp;iacute; hay un programa completo que muestra c&amp;oacute;mo hacer uso de la clasificaci&amp;oacute;n sensible a la configuraci&amp;oacute;n regional, el uso de may&amp;uacute;sculas y min&amp;uacute;sculas Unicode y la administraci&amp;oacute;n de anchos de impresi&amp;oacute;n cuando algunos de los caracteres ocupan cero o dos columnas, no solo una columna cada vez. Cuando se ejecuta, el siguiente programa produce esta salida bien alineada:</target>
        </trans-unit>
        <trans-unit id="6a19b2363612bc52e7e1f472c3c8e257075049a6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to implicitly manage the translation; all encoding and decoding is done automatically, just as with streams that have a particular encoding attached to them:</source>
          <target state="translated">A continuaci&amp;oacute;n, se explica c&amp;oacute;mo administrar impl&amp;iacute;citamente la traducci&amp;oacute;n; toda la codificaci&amp;oacute;n y decodificaci&amp;oacute;n se realiza autom&amp;aacute;ticamente, al igual que con las transmisiones que tienen una codificaci&amp;oacute;n particular adjunta:</target>
        </trans-unit>
        <trans-unit id="e1c2be9aec08f68310e7254caae4389bbea07c40" translate="yes" xml:space="preserve">
          <source>Here's &lt;code&gt;modrm&lt;/code&gt; , a little utility to cleanly remove an installed module.</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; &lt;code&gt;modrm&lt;/code&gt; , una peque&amp;ntilde;a utilidad para eliminar limpiamente un m&amp;oacute;dulo instalado.</target>
        </trans-unit>
        <trans-unit id="07ce2ba300c1f805c13e04282fb9bd9b4aef88e6" translate="yes" xml:space="preserve">
          <source>Here's &lt;code&gt;modrm&lt;/code&gt;, a little utility to cleanly remove an installed module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb297651ed81fb994c8862e1324045de85e7420" translate="yes" xml:space="preserve">
          <source>Here's a UDP program similar to the sample Internet TCP client given earlier. However, instead of checking one host at a time, the UDP version will check many of them asynchronously by simulating a multicast and then using select() to do a timed-out wait for I/O. To do something similar with TCP, you'd have to use a different socket handle for each host.</source>
          <target state="translated">Aquí hay un programa UDP similar al ejemplo del cliente TCP de Internet dado anteriormente.Sin embargo,en lugar de comprobar un host a la vez,la versión UDP comprobará muchos de ellos asincrónicamente simulando una multidifusión y luego usando select()para hacer una espera temporizada de E/S.Para hacer algo similar con TCP,tendrías que usar un manejador de sockets diferente para cada host.</target>
        </trans-unit>
        <trans-unit id="4f4b45b7c3f776b4fbc38fc3bb7e907362d3ca50" translate="yes" xml:space="preserve">
          <source>Here's a brief lead of how to upgrade the compiler to the latest level. Of course this is subject to changes. You can only upgrade versions from ftp-available updates if the first three digit groups are the same (in where you can skip intermediate unlike the patches in the developer snapshots of Perl), or to one version up where the &quot;base&quot; is available. In other words, the AIX compiler patches are cumulative.</source>
          <target state="translated">Aquí hay una breve pista de cómo actualizar el compilador al último nivel.Por supuesto que esto está sujeto a cambios.Sólo puede actualizar las versiones de las actualizaciones disponibles en el ftp si los primeros tres grupos de dígitos son los mismos (en los que puede saltarse el intermedio a diferencia de los parches en las instantáneas del desarrollador de Perl),o a una versión superior donde la &quot;base&quot; está disponible.En otras palabras,los parches del compilador AIX son acumulativos.</target>
        </trans-unit>
        <trans-unit id="9083bbfd93bc36a0ba2fe1e425a822a01dff192a" translate="yes" xml:space="preserve">
          <source>Here's a brief recap of the options we covered:</source>
          <target state="translated">Aquí hay un breve resumen de las opciones que hemos cubierto:</target>
        </trans-unit>
        <trans-unit id="b70c746e9664f4a89ae78b4bc44345a9debc8745" translate="yes" xml:space="preserve">
          <source>Here's a classic non-closure function-generating function:</source>
          <target state="translated">Aquí hay una clásica función generadora de funciones sin cierre:</target>
        </trans-unit>
        <trans-unit id="737671b9935a9677418172be58d93041b2c042de" translate="yes" xml:space="preserve">
          <source>Here's a client that creates a TCP connection to the &quot;daytime&quot; service at port 13 of the host name &quot;localhost&quot; and prints out everything that the server there cares to provide.</source>
          <target state="translated">Aquí hay un cliente que crea una conexión TCP al servicio &quot;diurno&quot; en el puerto 13 del nombre de host &quot;localhost&quot; e imprime todo lo que el servidor de allí se preocupa por proporcionar.</target>
        </trans-unit>
        <trans-unit id="a5f63dc35eae9c630d6e8946bcdd1e57d0bacb18" translate="yes" xml:space="preserve">
          <source>Here's a complete example of matching IPV4 internet protocol addresses in any (single) script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9872b20edef13d184c9e33e7e54f0406f2852dd" translate="yes" xml:space="preserve">
          <source>Here's a diversion: copy &quot;runperl.bat&quot; to &quot;runperl&quot;, and type &quot;runperl&quot;. Explain the observed behavior, or lack thereof. :) Hint: .gnidnats llits er'uoy fi ,&quot;lrepnur&quot; eteled :tniH</source>
          <target state="translated">He aquí una distracción:copie &quot;runperl.bat&quot; en &quot;runperl&quot;,y escriba &quot;runperl&quot;.Explique el comportamiento observado,o la falta del mismo.:)Pista:.gnidnats llits er'uoy fi,&quot;lrepnur&quot; eteled :tniH</target>
        </trans-unit>
        <trans-unit id="cf12c485957b201d4ea57553686d7cb0039dde88" translate="yes" xml:space="preserve">
          <source>Here's a list of the backslash sequences that are character classes. They are discussed in more detail below. (For the backslash sequences that aren't character classes, see &lt;a href=&quot;perlrebackslash&quot;&gt;perlrebackslash&lt;/a&gt;.)</source>
          <target state="translated">Aqu&amp;iacute; hay una lista de las secuencias de barra invertida que son clases de caracteres. Se comentan con m&amp;aacute;s detalle a continuaci&amp;oacute;n. (Para las secuencias de barra invertida que no son clases de caracteres, consulte &lt;a href=&quot;perlrebackslash&quot;&gt;perlrebackslash&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5ab128180a319c2d07a98a10caf6a07254c0f651" translate="yes" xml:space="preserve">
          <source>Here's a list of the currently unsupported API, and also the version of Perl below which it is unsupported:</source>
          <target state="translated">Aquí hay una lista de la API actualmente no soportada,y también la versión de Perl bajo la cual no está soportada:</target>
        </trans-unit>
        <trans-unit id="33b154fc2c3c454de669961df32cf81dfe425d93" translate="yes" xml:space="preserve">
          <source>Here's a little program that generates all permutations of all the words on each line of input. The algorithm embodied in the &lt;code&gt;permute()&lt;/code&gt; function is discussed in Volume 4 (still unpublished) of Knuth's</source>
          <target state="translated">Aqu&amp;iacute; hay un peque&amp;ntilde;o programa que genera todas las permutaciones de todas las palabras en cada l&amp;iacute;nea de entrada. El algoritmo incorporado en la funci&amp;oacute;n &lt;code&gt;permute()&lt;/code&gt; se analiza en el Volumen 4 (a&amp;uacute;n sin publicar) de Knuth's</target>
        </trans-unit>
        <trans-unit id="ac1edab256d838d310d923b4a7442c76a785939d" translate="yes" xml:space="preserve">
          <source>Here's a little program that's somewhat like fmt(1):</source>
          <target state="translated">Aquí hay un pequeño programa que es algo así como fmt(1):</target>
        </trans-unit>
        <trans-unit id="fd6a03a6db0cc55634b2b495ac28f42a4ed52934" translate="yes" xml:space="preserve">
          <source>Here's a lovely Perlish solution by Larry Rosler. It exploits properties of bitwise xor on ASCII strings.</source>
          <target state="translated">Aquí hay una encantadora solución de Perlish de Larry Rosler.Explota las propiedades del bitwise xor en las cadenas ASCII.</target>
        </trans-unit>
        <trans-unit id="c5fae574ad1367dcbd0544744e45226bb907e0c9" translate="yes" xml:space="preserve">
          <source>Here's a mailbox appender for BSD systems.</source>
          <target state="translated">Aquí hay un programa de buzón de correo para sistemas BSD.</target>
        </trans-unit>
        <trans-unit id="39554d786a12cee063a370b311126f557d404cc0" translate="yes" xml:space="preserve">
          <source>Here's a more complicated example: suppose that you wanted &lt;code&gt;struct netconfig&lt;/code&gt; to be blessed into the class &lt;code&gt;Net::Config&lt;/code&gt; . One way to do this is to use underscores (_) to separate package names, as follows:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo m&amp;aacute;s complicado: suponga que desea que &lt;code&gt;struct netconfig&lt;/code&gt; sea ​​bendecido en la clase &lt;code&gt;Net::Config&lt;/code&gt; . Una forma de hacer esto es usar guiones bajos (_) para separar los nombres de los paquetes, de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="40fb940b270cba1c2d6bdc833bd631f4a1ae5a33" translate="yes" xml:space="preserve">
          <source>Here's a more complicated example: suppose that you wanted &lt;code&gt;struct netconfig&lt;/code&gt; to be blessed into the class &lt;code&gt;Net::Config&lt;/code&gt;. One way to do this is to use underscores (_) to separate package names, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef76926490bf6bc7991a173108bb3e76598bbc43" translate="yes" xml:space="preserve">
          <source>Here's a more extensive illustration using vec():</source>
          <target state="translated">Aquí hay una ilustración más extensa usando vec():</target>
        </trans-unit>
        <trans-unit id="9b21353c7b746d6125b0bd9ccdf2d5f6e32ae7e7" translate="yes" xml:space="preserve">
          <source>Here's a more sophisticated example of using %Config:</source>
          <target state="translated">Aquí hay un ejemplo más sofisticado del uso de %Config:</target>
        </trans-unit>
        <trans-unit id="79fc5a3fa5bc2df2e735e49c28e40c308b498181" translate="yes" xml:space="preserve">
          <source>Here's a much better web-page hit counter:</source>
          <target state="translated">Aquí hay un contador de visitas de la página web mucho mejor:</target>
        </trans-unit>
        <trans-unit id="d392ab49a010fb0ac59f9f0078cb125cae17692b" translate="yes" xml:space="preserve">
          <source>Here's a partial table of features the different packages offer:</source>
          <target state="translated">Aquí hay una tabla parcial de las características que ofrecen los diferentes paquetes:</target>
        </trans-unit>
        <trans-unit id="41a14f9ddca1a8bfb40a30abc5c0f1b2c1f62eef" translate="yes" xml:space="preserve">
          <source>Here's a quick mapping for the utilities/modules, and their names for the $BLACKLIST, $METHOD_FAIL and other internal functions.</source>
          <target state="translated">Aquí hay un rápido mapeo de las utilidades/módulos,y sus nombres para la $BLACKLIST,$METHOD_FAIL y otras funciones internas.</target>
        </trans-unit>
        <trans-unit id="65dd6cf38c10a9b90787d2bbbbe67a89618fa22e" translate="yes" xml:space="preserve">
          <source>Here's a real world example, taken from work done to resolve &lt;a href=&quot;https://github.com/Perl/perl5/issues/10118&quot;&gt;perl #10118&lt;/a&gt;. Use of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda00e934fa6376dbf363c4a7973b5685c850503" translate="yes" xml:space="preserve">
          <source>Here's a reservoir-sampling algorithm from the Camel Book:</source>
          <target state="translated">Aquí hay un algoritmo de muestreo de reservorios del Libro de los Camellos:</target>
        </trans-unit>
        <trans-unit id="9e206bb004fc82d9ef3fcc3d4b1c49d6f3d42ac3" translate="yes" xml:space="preserve">
          <source>Here's a safe backtick or pipe open for read:</source>
          <target state="translated">Aquí hay un palo seguro o un tubo abierto para leer:</target>
        </trans-unit>
        <trans-unit id="a7cce3c8a9d58b666d239193afb2494a20bba3a2" translate="yes" xml:space="preserve">
          <source>Here's a sample TCP client using Internet-domain sockets:</source>
          <target state="translated">Aquí hay un ejemplo de un cliente TCP que usa los enchufes del dominio de Internet:</target>
        </trans-unit>
        <trans-unit id="9c9e5f5e52c5d8da22662f4567979deb732ae0a9" translate="yes" xml:space="preserve">
          <source>Here's a sample Unix-domain client:</source>
          <target state="translated">Aquí hay una muestra de un cliente de dominio Unix:</target>
        </trans-unit>
        <trans-unit id="d1aee0a8129cd8627dd813843d4743d6011f0d62" translate="yes" xml:space="preserve">
          <source>Here's a sample plugin, for your reference:</source>
          <target state="translated">Aquí hay un plugin de muestra,para su referencia:</target>
        </trans-unit>
        <trans-unit id="bee38889229a5c9d4ff45e0c3ab7e676e43a251f" translate="yes" xml:space="preserve">
          <source>Here's a sample program,</source>
          <target state="translated">Aquí hay un programa de muestra,</target>
        </trans-unit>
        <trans-unit id="705113e6af32ce6049ec614b7bd8ea0f06bc826f" translate="yes" xml:space="preserve">
          <source>Here's a sample showing how to create and use a record whose fields are of many different sorts:</source>
          <target state="translated">Aquí hay una muestra que muestra cómo crear y utilizar un registro cuyos campos son de muchos tipos diferentes:</target>
        </trans-unit>
        <trans-unit id="16fbac9b09446fb7fa1607fa6cbcd3cd579323e7" translate="yes" xml:space="preserve">
          <source>Here's a sample:</source>
          <target state="translated">Aquí hay una muestra:</target>
        </trans-unit>
        <trans-unit id="d48d2b1ee87d318b2f88933c600ad433cc38ac05" translate="yes" xml:space="preserve">
          <source>Here's a short bibliography courtesy of J&amp;uuml;rgen Christoffel:</source>
          <target state="translated">Aqu&amp;iacute; hay una breve bibliograf&amp;iacute;a cortes&amp;iacute;a de J&amp;uuml;rgen Christoffel:</target>
        </trans-unit>
        <trans-unit id="7b6db8c67bc1492d1475adb966fe40db79852b40" translate="yes" xml:space="preserve">
          <source>Here's a simple client that takes a remote host to fetch a document from, and then a list of files to get from that host. This is a more interesting client than the previous one because it first sends something to the server before fetching the server's response.</source>
          <target state="translated">Aquí hay un simple cliente que toma un host remoto para obtener un documento,y luego una lista de archivos para obtener de ese host.Este es un cliente más interesante que el anterior porque primero envía algo al servidor antes de obtener la respuesta del servidor.</target>
        </trans-unit>
        <trans-unit id="6d6b6f3994774d06d8f1e409ff389cf7bc440169" translate="yes" xml:space="preserve">
          <source>Here's a simple example of a switch based on pattern matching, lined up in a way to make it look more like a switch statement. We'll do a multiway conditional based on the type of reference stored in $whatchamacallit:</source>
          <target state="translated">Aquí hay un ejemplo simple de un interruptor basado en la coincidencia de patrones,alineado de manera que se parezca más a una declaración de interruptor.Haremos un condicional multidireccional basado en el tipo de referencia almacenado en $whatchamacallit:</target>
        </trans-unit>
        <trans-unit id="adf661fec1c7ed224422528dd69c23adb6998e67" translate="yes" xml:space="preserve">
          <source>Here's a simple example to illustrate the difference between the two range operators:</source>
          <target state="translated">Aquí hay un ejemplo simple para ilustrar la diferencia entre los dos operadores de rango:</target>
        </trans-unit>
        <trans-unit id="24f0b23833358ef065f35cfbec9242ef09ccac71" translate="yes" xml:space="preserve">
          <source>Here's a simple program which converts between Celsius and Fahrenheit, it too has a problem:</source>
          <target state="translated">Aquí hay un simple programa que convierte entre Celsius y Fahrenheit,también tiene un problema:</target>
        </trans-unit>
        <trans-unit id="0837b2c8d138afbded4f97677c64e44b344b5f56" translate="yes" xml:space="preserve">
          <source>Here's a simple-minded example program that rewrites its command-line parameters as integers correctly formatted in the current locale:</source>
          <target state="translated">He aquí un programa de ejemplo sencillo que reescribe sus parámetros de línea de comandos como números enteros correctamente formateados en el lugar actual:</target>
        </trans-unit>
        <trans-unit id="f4b1ca0d619e6e130110c613ca994de9ad0679d7" translate="yes" xml:space="preserve">
          <source>Here's a small example showing shared memory usage.</source>
          <target state="translated">Aquí hay un pequeño ejemplo que muestra el uso de la memoria compartida.</target>
        </trans-unit>
        <trans-unit id="ca0b16455dba662fbcb02846342b83e69dabc681" translate="yes" xml:space="preserve">
          <source>Here's a summary of the possible predicates:</source>
          <target state="translated">Aquí hay un resumen de los posibles predicados:</target>
        </trans-unit>
        <trans-unit id="58dc9ec13109b06fde34d79108b2ec3645eaf897" translate="yes" xml:space="preserve">
          <source>Here's a test to make sure that the data contains nothing but &quot;word&quot; characters (alphabetics, numerics, and underscores), a hyphen, an at sign, or a dot.</source>
          <target state="translated">He aquí una prueba para asegurarse de que los datos no contienen más que caracteres de &quot;palabra&quot; (alfabéticos,numéricos y subrayados),un guión,un signo &quot;at&quot; o un punto.</target>
        </trans-unit>
        <trans-unit id="759693dd6cb991ad225a2379fc23020ea66b9451" translate="yes" xml:space="preserve">
          <source>Here's a trick for interpolating a subroutine call into a string:</source>
          <target state="translated">Aquí hay un truco para interpolar una llamada de subrutina en una cadena:</target>
        </trans-unit>
        <trans-unit id="566b3956738219763456c200fc999f82ae79bed2" translate="yes" xml:space="preserve">
          <source>Here's a truly obscure example:</source>
          <target state="translated">Aquí hay un ejemplo verdaderamente oscuro:</target>
        </trans-unit>
        <trans-unit id="673e00298dcf732578c132c6f7ebc33b00f2f5a5" translate="yes" xml:space="preserve">
          <source>Here's a way to do backticks reasonably safely. Notice how the &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; is not called with a string that the shell could expand. This is by far the best way to call something that might be subjected to shell escapes: just never call the shell at all.</source>
          <target state="translated">Aqu&amp;iacute; hay una forma de hacer comillas invertidas de forma razonablemente segura. Observe c&amp;oacute;mo no se llama al &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; con una cadena que el shell pueda expandir. Esta es, con mucho, la mejor manera de llamar a algo que podr&amp;iacute;a estar sujeto a escapes de shell: simplemente nunca llame al shell en absoluto.</target>
        </trans-unit>
        <trans-unit id="d9c7cd5d68bc715c0bc2090946109f25a3884bfa" translate="yes" xml:space="preserve">
          <source>Here's a way to do backticks reasonably safely. Notice how the &lt;code&gt;exec&lt;/code&gt; is not called with a string that the shell could expand. This is by far the best way to call something that might be subjected to shell escapes: just never call the shell at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaae86ddf2180ef145c4679eb81721d464c8d5e" translate="yes" xml:space="preserve">
          <source>Here's an even simpler example: I wrote a simple ray tracer; the program would look in a certain direction, figure out what it was looking at, and then convert the `color' value (typically a string like `red') of that object to a red, green, and blue pixel value, like this:</source>
          <target state="translated">Aquí hay un ejemplo aún más simple:Escribí un simple trazador de rayos;el programa miraría en una cierta dirección,averiguaría qué es lo que está mirando,y luego convertiría el valor del &quot;color&quot; (típicamente una cadena como &quot;rojo&quot;)de ese objeto en un valor de píxeles rojo,verde y azul,como este:</target>
        </trans-unit>
        <trans-unit id="eb7f2b2a1f46da14792dc92fada7de16651b64e3" translate="yes" xml:space="preserve">
          <source>Here's an example of a module as a blessed scalar:</source>
          <target state="translated">Aquí hay un ejemplo de un módulo como un escalar bendito:</target>
        </trans-unit>
        <trans-unit id="433e4046c8d4a59acb27a1b8715b8d822849f3f4" translate="yes" xml:space="preserve">
          <source>Here's an example of a semaphore:</source>
          <target state="translated">Aquí hay un ejemplo de un semáforo:</target>
        </trans-unit>
        <trans-unit id="e5da5564566886484e5f1909e68561f2893fc59f" translate="yes" xml:space="preserve">
          <source>Here's an example of a simple .t file for the fictional Film module.</source>
          <target state="translated">Aquí hay un ejemplo de un simple archivo .t para el módulo de cine de ficción.</target>
        </trans-unit>
        <trans-unit id="00e3c595287e645175478199893dcfbab0d3f383" translate="yes" xml:space="preserve">
          <source>Here's an example of a somewhat interesting tied hash class: it gives you a hash representing a particular user's dot files. You index into the hash with the name of the file (minus the dot) and you get back that dot file's contents. For example:</source>
          <target state="translated">Aquí hay un ejemplo de una clase de hachís empatado algo interesante:te da un hachís que representa los archivos de puntos de un usuario en particular.Se indexa en el hash con el nombre del archivo (menos el punto)y se obtiene el contenido de ese archivo de puntos.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="44172aa24b9ebcb09c3ac7dacdd0f49ad41ffcca" translate="yes" xml:space="preserve">
          <source>Here's an example of how to copy a binary file:</source>
          <target state="translated">Aquí hay un ejemplo de cómo copiar un archivo binario:</target>
        </trans-unit>
        <trans-unit id="db4ebf9573581d82c8cc95cd18272cd15b08d992" translate="yes" xml:space="preserve">
          <source>Here's an example of how to pass in a string and a regular expression for it to match against. You construct the pattern with the &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; operator:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;mo pasar una cadena y una expresi&amp;oacute;n regular para que coincida. Construyes el patr&amp;oacute;n con el operador &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="99a411d8c049e8f5d02a926ffc1bf596e0d48187" translate="yes" xml:space="preserve">
          <source>Here's an example of how to pass in a string and a regular expression for it to match against. You construct the pattern with the &lt;code&gt;qr//&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637519bbaa8687d335368b0791bb0e149bbe34ba" translate="yes" xml:space="preserve">
          <source>Here's an example of running that program, which we'll call</source>
          <target state="translated">Aquí hay un ejemplo de la ejecución de ese programa,que llamaremos</target>
        </trans-unit>
        <trans-unit id="36af409f70db85a39900fd4afda6942fc83aa2ef" translate="yes" xml:space="preserve">
          <source>Here's an example of setting a filehandle named &lt;code&gt;$REMOTE&lt;/code&gt; to be non-blocking at the system level. You'll have to negotiate &lt;a href=&quot;perlvar#%24%7C&quot;&gt;&lt;code&gt;$|&lt;/code&gt;&lt;/a&gt; on your own, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f582133574110a3518036c490af80a6f46ec43be" translate="yes" xml:space="preserve">
          <source>Here's an example of setting a filehandle named &lt;code&gt;REMOTE&lt;/code&gt; to be non-blocking at the system level. You'll have to negotiate &lt;code&gt;$|&lt;/code&gt; on your own, though.</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un ejemplo de c&amp;oacute;mo configurar un identificador de archivo llamado &lt;code&gt;REMOTE&lt;/code&gt; para que no bloquee a nivel del sistema. Tendr&amp;aacute;s que negociar &lt;code&gt;$|&lt;/code&gt; aunque por tu cuenta.</target>
        </trans-unit>
        <trans-unit id="5747af8299e3ce8766cc1e6c9250f3bd0c64b9fc" translate="yes" xml:space="preserve">
          <source>Here's an example of using open2():</source>
          <target state="translated">Aquí hay un ejemplo del uso de open2():</target>
        </trans-unit>
        <trans-unit id="52ee3997caaa83f241ead3aa88bc5b3a35f1e445" translate="yes" xml:space="preserve">
          <source>Here's an example of using the &lt;code&gt;$ENV{PERLDB_OPTS}&lt;/code&gt; variable:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un ejemplo del uso de la variable &lt;code&gt;$ENV{PERLDB_OPTS}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="244af372fc1dc3d578b9e7b6c1576ec36ffa9ff8" translate="yes" xml:space="preserve">
          <source>Here's an example of what a stack backtrace via &lt;code&gt;T&lt;/code&gt; command might look like:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;mo se ver&amp;iacute;a un seguimiento de pila a trav&amp;eacute;s del comando &lt;code&gt;T&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e488d97af419d58ca23b439a55505523edbe2e65" translate="yes" xml:space="preserve">
          <source>Here's an example of what you need for a simple module:</source>
          <target state="translated">Aquí hay un ejemplo de lo que se necesita para un módulo simple:</target>
        </trans-unit>
        <trans-unit id="daccc2549e31545d57fdedfeee9273ddd1b0ff86" translate="yes" xml:space="preserve">
          <source>Here's an example script file:</source>
          <target state="translated">Aquí hay un archivo de guión de ejemplo:</target>
        </trans-unit>
        <trans-unit id="acda0e1d4c96684fdc356f00d807ddf1f623f6ae" translate="yes" xml:space="preserve">
          <source>Here's an example that looks up nonnumeric uids in the passwd file:</source>
          <target state="translated">Aquí hay un ejemplo que busca uides no numéricos en el archivo passwd:</target>
        </trans-unit>
        <trans-unit id="5c0f7a1e07a375e4333db5cd9cca105a10ea230a" translate="yes" xml:space="preserve">
          <source>Here's an example that makes sure that whoever runs this program knows their password:</source>
          <target state="translated">Aquí hay un ejemplo que asegura que quienquiera que ejecute este programa sepa su contraseña:</target>
        </trans-unit>
        <trans-unit id="2ba3dad78e5e2c46821c06eb650b17001a0a2ef6" translate="yes" xml:space="preserve">
          <source>Here's an example to test whether Nagle's algorithm is enabled on a socket:</source>
          <target state="translated">Aquí hay un ejemplo para probar si el algoritmo de Nagle está habilitado en un enchufe:</target>
        </trans-unit>
        <trans-unit id="d274e7c0c009a3ac1b895b776347d105b0d85baa" translate="yes" xml:space="preserve">
          <source>Here's an example using a recursive regular expression. The goal is to capture all of the text within angle brackets, including the text in nested angle brackets. This sample text has two &quot;major&quot; groups: a group with one level of nesting and a group with two levels of nesting. There are five total groups in angle brackets:</source>
          <target state="translated">Aquí hay un ejemplo usando una expresión regular recursiva.El objetivo es capturar todo el texto dentro de los corchetes de ángulo,incluyendo el texto entre corchetes de ángulo anidados.Este texto de muestra tiene dos grupos &quot;principales&quot;:un grupo con un nivel de anidación y un grupo con dos niveles de anidación.Hay cinco grupos totales entre corchetes de ángulo:</target>
        </trans-unit>
        <trans-unit id="61f04271f847d0c8988094c50219a148be404036" translate="yes" xml:space="preserve">
          <source>Here's an example.</source>
          <target state="translated">Aquí hay un ejemplo.</target>
        </trans-unit>
        <trans-unit id="af1afc0eb692136e51fe1f2de2eb325d93796576" translate="yes" xml:space="preserve">
          <source>Here's an example. It used to be a common paradigm, for decades, in the perl core to use &lt;code&gt;strchr(&quot;list&quot;, c)&lt;/code&gt; to see if the character &lt;code&gt;c&lt;/code&gt; is any of the ones given in &lt;code&gt;&quot;list&quot;&lt;/code&gt;, a double-quote-enclosed string of the set of characters that we are seeing if &lt;code&gt;c&lt;/code&gt; is one of. As long as &lt;code&gt;c&lt;/code&gt; isn't a &lt;code&gt;NUL&lt;/code&gt;, it works. But when &lt;code&gt;c&lt;/code&gt; is a &lt;code&gt;NUL&lt;/code&gt;, &lt;code&gt;strchr&lt;/code&gt; returns a pointer to the terminating &lt;code&gt;NUL&lt;/code&gt; in &lt;code&gt;&quot;list&quot;&lt;/code&gt;. This likely will result in a segfault or a security issue when the caller uses that end pointer as the starting point to read from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">Aquí hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="ea18952ce84912806a08117b90f220eff293cf76" translate="yes" xml:space="preserve">
          <source>Here's another example of using &lt;code&gt;..&lt;/code&gt; :</source>
          <target state="translated">Aqu&amp;iacute; hay otro ejemplo de uso de &lt;code&gt;..&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="15ed5c05afc05681027a67404fe0661073a709bb" translate="yes" xml:space="preserve">
          <source>Here's another example of using &lt;code&gt;..&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b272b51e8dfc98c92e4358c6ca3238363075ae" translate="yes" xml:space="preserve">
          <source>Here's another example. Let's say you'd like to match a number at the end of a string, and you also want to keep the preceding part of the match. So you write this:</source>
          <target state="translated">Aquí hay otro ejemplo.Digamos que quieres hacer coincidir un número al final de una cadena,y también quieres mantener la parte anterior de la coincidencia.Así que escribes esto:</target>
        </trans-unit>
        <trans-unit id="6d394fbb45cdbc9850e3f0051e919676f4c5a2f8" translate="yes" xml:space="preserve">
          <source>Here's another interesting wanted function. It will find all symbolic links that don't resolve:</source>
          <target state="translated">Aquí hay otra interesante función de búsqueda.Encontrará todos los vínculos simbólicos que no se resuelven:</target>
        </trans-unit>
        <trans-unit id="6dabe892652409d7baaf4ea9766517a9552179bd" translate="yes" xml:space="preserve">
          <source>Here's another simplistic example that illustrates the use of thread signalling in conjunction with a semaphore to provide rudimentary</source>
          <target state="translated">Aquí hay otro ejemplo simplista que ilustra el uso de la señalización de hilos en conjunción con un semáforo para proporcionar una rudimentaria</target>
        </trans-unit>
        <trans-unit id="de1305ff8bab2aad6bcd989ab04908e0dc517958" translate="yes" xml:space="preserve">
          <source>Here's another strategy: Open a pipe to yourself, using &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(MYSELF, &quot;|-&quot;)&lt;/code&gt; (see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;) and always write() to MYSELF instead of STDOUT. Have your child process massage its STDIN to rearrange headers and footers however you like. Not very convenient, but doable.</source>
          <target state="translated">Aqu&amp;iacute; hay otra estrategia: abre una tuber&amp;iacute;a para ti mismo, usando &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;(MYSELF, &quot;|-&quot;)&lt;/code&gt; (ver &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; ) y siempre escribe () en MYSELF en lugar de STDOUT. Haga que su hijo procese su STDIN para reorganizar los encabezados y pies de p&amp;aacute;gina como desee. No muy conveniente, pero factible.</target>
        </trans-unit>
        <trans-unit id="89e8986edeec6b98232eb3810b91a1ddd6bfcc03" translate="yes" xml:space="preserve">
          <source>Here's another strategy: Open a pipe to yourself, using &lt;code&gt;open(MYSELF, &quot;|-&quot;)&lt;/code&gt; (see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;) and always write() to MYSELF instead of STDOUT. Have your child process massage its STDIN to rearrange headers and footers however you like. Not very convenient, but doable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac230c93491a8097772635d05027ee087235965" translate="yes" xml:space="preserve">
          <source>Here's another way to check for sentences in a paragraph:</source>
          <target state="translated">Aquí hay otra forma de comprobar las frases de un párrafo:</target>
        </trans-unit>
        <trans-unit id="273a17fa15878be17fe206b05c8584be04a69acf" translate="yes" xml:space="preserve">
          <source>Here's another, slightly less painful, way to do it from Benjamin Goldberg, who uses a zero-width negative look-behind assertion.</source>
          <target state="translated">Aquí hay otra forma,ligeramente menos dolorosa,de hacerlo de Benjamín Goldberg,que usa una afirmación de mirada negativa de ancho cero.</target>
        </trans-unit>
        <trans-unit id="0cddef9286505d532aaa041e36320e67de4b2c80" translate="yes" xml:space="preserve">
          <source>Here's another; let's compute spherical volumes:</source>
          <target state="translated">Aquí hay otro;vamos a calcular volúmenes esféricos:</target>
        </trans-unit>
        <trans-unit id="15dc729f18ba699bddbeda2935fed34db64f6cdb" translate="yes" xml:space="preserve">
          <source>Here's code that finds everything between START and END in a paragraph:</source>
          <target state="translated">Aquí hay un código que encuentra todo lo que hay entre el COMIENZO y el FINAL en un párrafo:</target>
        </trans-unit>
        <trans-unit id="26eff15275e0bc723eda9623b566a21d7d660ee9" translate="yes" xml:space="preserve">
          <source>Here's how a C programmer might code up a particular algorithm in Perl:</source>
          <target state="translated">Así es como un programador de C podría codificar un algoritmo particular en Perl:</target>
        </trans-unit>
        <trans-unit id="f53c4c5c95494b6983dc9580a97d651bc52209f4" translate="yes" xml:space="preserve">
          <source>Here's how it really works:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5725ea72516798e0e59187e116804b3012dacd34" translate="yes" xml:space="preserve">
          <source>Here's how that might look:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c646f07c7dfa6ee86de30d8e7226eba37cb787f8" translate="yes" xml:space="preserve">
          <source>Here's how to do one operation using a loop. We'll assume an @AoA variable as before.</source>
          <target state="translated">Aquí está cómo hacer una operación usando un bucle.Asumiremos una variable @AoA como antes.</target>
        </trans-unit>
        <trans-unit id="268a5d49f5ba74b653796a536ebf6253b796189f" translate="yes" xml:space="preserve">
          <source>Here's how to perform each step for each operating system. This is &amp;lt;not&amp;gt; a substitute for reading the README and INSTALL files that might have come with your module!</source>
          <target state="translated">A continuaci&amp;oacute;n, se explica c&amp;oacute;mo realizar cada paso para cada sistema operativo. &amp;iexcl;Esto &amp;lt;no&amp;gt; sustituye la lectura de los archivos README e INSTALL que pueden haber venido con su m&amp;oacute;dulo!</target>
        </trans-unit>
        <trans-unit id="f61d7cd6d889dcf489e482c04dbdd66a13cc2eb1" translate="yes" xml:space="preserve">
          <source>Here's how to use &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;\G&lt;/code&gt; :</source>
          <target state="translated">Aqu&amp;iacute; se explica c&amp;oacute;mo usar &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//gc&lt;/a&gt;&lt;/code&gt; con &lt;code&gt;\G&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="26c1023a9e6ac89e64f8047581df9767933e6cd7" translate="yes" xml:space="preserve">
          <source>Here's how to use &lt;code&gt;m//gc&lt;/code&gt; with &lt;code&gt;\G&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b07fa8c9ee5cfa969d3c94936ee2dff05c5e76" translate="yes" xml:space="preserve">
          <source>Here's how to use our little example:</source>
          <target state="translated">Aquí está cómo usar nuestro pequeño ejemplo:</target>
        </trans-unit>
        <trans-unit id="f9a1c6d8d1b1e5ebc9092a952afe3520c4d3df94" translate="yes" xml:space="preserve">
          <source>Here's how we can make the first example safer:</source>
          <target state="translated">Así es como podemos hacer que el primer ejemplo sea más seguro:</target>
        </trans-unit>
        <trans-unit id="1c3c6addf8c05cad39d9f725c53d0c79d67cc1b7" translate="yes" xml:space="preserve">
          <source>Here's how you might write a function that returns a list of keys occurring in all the hashes passed to it:</source>
          <target state="translated">Así es como se puede escribir una función que devuelva una lista de las teclas que aparecen en todos los hashes pasados a ella:</target>
        </trans-unit>
        <trans-unit id="4247da91d20e93ce8300b57f7c386a920c116cb0" translate="yes" xml:space="preserve">
          <source>Here's how you'd compile the example in the next section, &lt;a href=&quot;#Adding-a-Perl-interpreter-to-your-C-program&quot;&gt;&quot;Adding a Perl interpreter to your C program&quot;&lt;/a&gt;, on my Linux box:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2023d3bcf8a706017206316be16158eb0a8503" translate="yes" xml:space="preserve">
          <source>Here's how you'd compile the example in the next section, &lt;a href=&quot;#Adding-a-Perl-interpreter-to-your-C-program&quot;&gt;Adding a Perl interpreter to your C program&lt;/a&gt;, on my Linux box:</source>
          <target state="translated">As&amp;iacute; es como compilar&amp;iacute;a el ejemplo en la siguiente secci&amp;oacute;n, &lt;a href=&quot;#Adding-a-Perl-interpreter-to-your-C-program&quot;&gt;Agregar un int&amp;eacute;rprete de Perl a su programa C&lt;/a&gt; , en mi caja de Linux:</target>
        </trans-unit>
        <trans-unit id="3c91b848d807e7b04b1ab06ec49ea4392d7ec7d3" translate="yes" xml:space="preserve">
          <source>Here's how, given a vector in &lt;code&gt;$vec&lt;/code&gt; , you can get those bits into your &lt;code&gt;@ints&lt;/code&gt; array:</source>
          <target state="translated">As&amp;iacute; es como, dado un vector en &lt;code&gt;$vec&lt;/code&gt; , puede obtener esos bits en su matriz &lt;code&gt;@ints&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="05e823e1939b1a8d4b1e60b3d1cc0a6d9b92d2ab" translate="yes" xml:space="preserve">
          <source>Here's how, given a vector in &lt;code&gt;$vec&lt;/code&gt;, you can get those bits into your &lt;code&gt;@ints&lt;/code&gt; array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22975b2012514ff308ba25754da36c22aeb6ce2b" translate="yes" xml:space="preserve">
          <source>Here's one strategy: If you have a fixed-size footer, you can get footers by checking $FORMAT_LINES_LEFT before each write() and print the footer yourself if necessary.</source>
          <target state="translated">Aquí hay una estrategia:Si tienes un pie de página de tamaño fijo,puedes obtenerlo marcando $FORMAT_LINES_LEFT antes de cada escritura()e imprimir el pie de página tú mismo si es necesario.</target>
        </trans-unit>
        <trans-unit id="525e3062fa27a1689f30b9419dfa2b5e57815b15" translate="yes" xml:space="preserve">
          <source>Here's our &lt;code&gt;File&lt;/code&gt; class once more:</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; nuestra clase &lt;code&gt;File&lt;/code&gt; una vez m&amp;aacute;s:</target>
        </trans-unit>
        <trans-unit id="b1783e928a570b5dc6d74dafaff14364959e7e0f" translate="yes" xml:space="preserve">
          <source>Here's our &lt;code&gt;File&lt;/code&gt; class with &lt;code&gt;Class::Accessor&lt;/code&gt; :</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; nuestra clase &lt;code&gt;File&lt;/code&gt; con &lt;code&gt;Class::Accessor&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="327f9e2f42a9d97334b0e6c830bc13c66b0647cf" translate="yes" xml:space="preserve">
          <source>Here's our &lt;code&gt;File&lt;/code&gt; class with &lt;code&gt;Class::Accessor&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95130bd2aff1326444cc7bcdc6d685db2ff09cc5" translate="yes" xml:space="preserve">
          <source>Here's some advice: supply a creation mode of &lt;code&gt;0666&lt;/code&gt; for regular files (in &lt;a href=&quot;#sysopen-FILEHANDLE%2CFILENAME%2CMODE&quot;&gt;&lt;code&gt;sysopen&lt;/code&gt;&lt;/a&gt;) and one of &lt;code&gt;0777&lt;/code&gt; for directories (in &lt;a href=&quot;#mkdir-FILENAME%2CMODE&quot;&gt;&lt;code&gt;mkdir&lt;/code&gt;&lt;/a&gt;) and executable files. This gives users the freedom of choice: if they want protected files, they might choose process umasks of &lt;code&gt;022&lt;/code&gt;, &lt;code&gt;027&lt;/code&gt;, or even the particularly antisocial mask of &lt;code&gt;077&lt;/code&gt;. Programs should rarely if ever make policy decisions better left to the user. The exception to this is when writing files that should be kept private: mail files, web browser cookies,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57354b9e0e2f7e59368dea0a84947b0e2a0827cd" translate="yes" xml:space="preserve">
          <source>Here's some advice: supply a creation mode of &lt;code&gt;0666&lt;/code&gt; for regular files (in &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;) and one of &lt;code&gt;0777&lt;/code&gt; for directories (in &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt;) and executable files. This gives users the freedom of choice: if they want protected files, they might choose process umasks of &lt;code&gt;022&lt;/code&gt; , &lt;code&gt;027&lt;/code&gt; , or even the particularly antisocial mask of &lt;code&gt;077&lt;/code&gt; . Programs should rarely if ever make policy decisions better left to the user. The exception to this is when writing files that should be kept private: mail files, web browser cookies,</source>
          <target state="translated">Aqu&amp;iacute; hay algunos consejos: proporcione un modo de creaci&amp;oacute;n de &lt;code&gt;0666&lt;/code&gt; para archivos normales (en &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; ) y uno de &lt;code&gt;0777&lt;/code&gt; para directorios (en &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt; ) y archivos ejecutables. Esto les da a los usuarios la libertad de elecci&amp;oacute;n: si quieren archivos protegidos, pueden elegir umasks de proceso de &lt;code&gt;022&lt;/code&gt; , &lt;code&gt;027&lt;/code&gt; , o incluso la m&amp;aacute;scara particularmente antisocial de &lt;code&gt;077&lt;/code&gt; . Los programas rara vez, si es que alguna vez, deber&amp;iacute;an tomar decisiones pol&amp;iacute;ticas que sea mejor dejar al usuario. La excepci&amp;oacute;n a esto es cuando se escriben archivos que deben mantenerse privados: archivos de correo, cookies del navegador web,</target>
        </trans-unit>
        <trans-unit id="e2752daa5f028f44257bc9623ea0f7f9230b9d85" translate="yes" xml:space="preserve">
          <source>Here's some advice: supply a creation mode of &lt;code&gt;0666&lt;/code&gt; for regular files (in &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;) and one of &lt;code&gt;0777&lt;/code&gt; for directories (in &lt;code&gt;&lt;a href=&quot;mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt;) and executable files. This gives users the freedom of choice: if they want protected files, they might choose process umasks of &lt;code&gt;022&lt;/code&gt; , &lt;code&gt;027&lt;/code&gt; , or even the particularly antisocial mask of &lt;code&gt;077&lt;/code&gt; . Programs should rarely if ever make policy decisions better left to the user. The exception to this is when writing files that should be kept private: mail files, web browser cookies,</source>
          <target state="translated">Aqu&amp;iacute; hay algunos consejos: proporcione un modo de creaci&amp;oacute;n de &lt;code&gt;0666&lt;/code&gt; para archivos normales (en &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; ) y uno de &lt;code&gt;0777&lt;/code&gt; para directorios (en &lt;code&gt;&lt;a href=&quot;mkdir&quot;&gt;mkdir&lt;/a&gt;&lt;/code&gt; ) y archivos ejecutables. Esto les da a los usuarios la libertad de elecci&amp;oacute;n: si quieren archivos protegidos, pueden elegir umasks de proceso de &lt;code&gt;022&lt;/code&gt; , &lt;code&gt;027&lt;/code&gt; , o incluso la m&amp;aacute;scara particularmente antisocial de &lt;code&gt;077&lt;/code&gt; . Los programas rara vez, si es que alguna vez, deber&amp;iacute;an tomar decisiones pol&amp;iacute;ticas que sea mejor dejar al usuario. La excepci&amp;oacute;n a esto es cuando se escriben archivos que deben mantenerse privados: archivos de correo, cookies del navegador web,</target>
        </trans-unit>
        <trans-unit id="4ed39bdc449f7cf4b3c38e3ffdf7cd70fa08f940" translate="yes" xml:space="preserve">
          <source>Here's some code that finds sentences that begin with &quot;From &quot; (which would be mangled by many mailers):</source>
          <target state="translated">Aquí hay un código que encuentra frases que empiezan con &quot;De&quot; (que sería destrozado por muchos correos):</target>
        </trans-unit>
        <trans-unit id="aa42825d4fc178008e13f884fd63afc0d6bcd50d" translate="yes" xml:space="preserve">
          <source>Here's some entries from the output of the property &quot;Nv&quot;, which has format &lt;code&gt;&quot;ar&quot;&lt;/code&gt; .</source>
          <target state="translated">Aqu&amp;iacute; hay algunas entradas de la salida de la propiedad &quot;Nv&quot;, que tiene el formato &lt;code&gt;&quot;ar&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79efac09c122b4a103329f6db97a15af7c7c6205" translate="yes" xml:space="preserve">
          <source>Here's some entries from the output of the property &quot;Nv&quot;, which has format &lt;code&gt;&quot;ar&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983afceb3200f14ad7cf769e6f457a540b745124" translate="yes" xml:space="preserve">
          <source>Here's some more recommendations</source>
          <target state="translated">Aquí hay algunas recomendaciones más</target>
        </trans-unit>
        <trans-unit id="425356b04c5e4659def26c3afe717def29a81e4c" translate="yes" xml:space="preserve">
          <source>Here's something Larry suggested: if a &lt;code&gt;U&lt;/code&gt; is the first active format during a &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, (for example, &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; &quot;U3C8&quot;, @stuff&lt;/code&gt; ) then the resulting string should be treated as UTF-8 encoded.</source>
          <target state="translated">Aqu&amp;iacute; hay algo que sugiri&amp;oacute; Larry: si una &lt;code&gt;U&lt;/code&gt; es el primer formato activo durante un &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; (por ejemplo, &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; &quot;U3C8&quot;, @stuff&lt;/code&gt; ), entonces la cadena resultante debe tratarse como codificada en UTF-8.</target>
        </trans-unit>
        <trans-unit id="4378597a87d2aa3b47f60334936696fad7b403c9" translate="yes" xml:space="preserve">
          <source>Here's something Larry suggested: if a &lt;code&gt;U&lt;/code&gt; is the first active format during a &lt;code&gt;pack&lt;/code&gt;, (for example, &lt;code&gt;pack &quot;U3C8&quot;, @stuff&lt;/code&gt;) then the resulting string should be treated as UTF-8 encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b314a6f828aa6ba79d336b2bc1f9e451bb9826c7" translate="yes" xml:space="preserve">
          <source>Here's that program; tested on v5.14.</source>
          <target state="translated">Aquí está ese programa;probado en la v5.14.</target>
        </trans-unit>
        <trans-unit id="ce077bf1b8dbc3882bb449e22e472c33bd6126e0" translate="yes" xml:space="preserve">
          <source>Here's the Apache configuration entry you'll need to make use of it. Once set it will result in everything in the /compressed directory will be compressed automagically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1fe856f88363dd186e2e7ada6054be89d9b374" translate="yes" xml:space="preserve">
          <source>Here's the answer to the problem I posed earlier, of reformatting a file of city and country names.</source>
          <target state="translated">Aquí está la respuesta al problema que planteé antes,de reformatear un archivo de nombres de ciudades y países.</target>
        </trans-unit>
        <trans-unit id="ec2064253b0b50a2575cd193f528ea54b5bba134" translate="yes" xml:space="preserve">
          <source>Here's the case of taking a reference to the same memory location again and again:</source>
          <target state="translated">Este es el caso de tomar una referencia a la misma ubicación de la memoria una y otra vez:</target>
        </trans-unit>
        <trans-unit id="a750afb60c3b3c5f05dc778fe8f81eda212eb4a1" translate="yes" xml:space="preserve">
          <source>Here's the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687ec9bc2da6b7d16d8a23c230dfb7c1307404b0" translate="yes" xml:space="preserve">
          <source>Here's the code. We'll</source>
          <target state="translated">Aquí está el código.Nosotros...</target>
        </trans-unit>
        <trans-unit id="22e52845e690ffb85ae425e49263d746dcf8be45" translate="yes" xml:space="preserve">
          <source>Here's the code:</source>
          <target state="translated">Aquí está el código:</target>
        </trans-unit>
        <trans-unit id="faf00dc9cd5933c3e758b3e429588f852416f9ff" translate="yes" xml:space="preserve">
          <source>Here's the comprehensive list of values you can expect as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d590121c2fc19f8a6623b373db411150058833" translate="yes" xml:space="preserve">
          <source>Here's the constructor:</source>
          <target state="translated">Aquí está el constructor:</target>
        </trans-unit>
        <trans-unit id="67de0300ad7e657a8db469b4cb89cf11ed0c9b15" translate="yes" xml:space="preserve">
          <source>Here's the fetch for our DotFiles example.</source>
          <target state="translated">Aquí está la búsqueda de nuestro ejemplo de DotFiles.</target>
        </trans-unit>
        <trans-unit id="ea37c8a435a5d1ae861daa3601c34204e044ad1a" translate="yes" xml:space="preserve">
          <source>Here's the general rule: When you approach a task commonly done using a whole range of platforms, think about writing portable code. That way, you don't sacrifice much by way of the implementation choices you can avail yourself of, and at the same time you can give your users lots of platform choices. On the other hand, when you have to take advantage of some unique feature of a particular platform, as is often the case with systems programming (whether for Unix, Windows, VMS, etc.), consider writing platform-specific code.</source>
          <target state="translated">Esta es la regla general:Cuando se aborda una tarea comúnmente realizada utilizando una amplia gama de plataformas,piense en escribir código portátil.De esta manera,no se sacrifica mucho por las opciones de implementación que se pueden aprovechar,y al mismo tiempo se puede dar a los usuarios muchas opciones de plataforma.Por otra parte,cuando tenga que aprovechar alguna característica única de una plataforma concreta,como suele ocurrir con la programación de sistemas (ya sea para Unix,Windows,VMS,etc.),considere la posibilidad de escribir código específico para la plataforma.</target>
        </trans-unit>
        <trans-unit id="9c681da90263d542164ba3d2f3ec45d3fa28748f" translate="yes" xml:space="preserve">
          <source>Here's the most basic test program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5763f4294d53b8fde1e0d145ff3e1ebda9932aa" translate="yes" xml:space="preserve">
          <source>Here's the start of</source>
          <target state="translated">Aquí está el comienzo de</target>
        </trans-unit>
        <trans-unit id="62dfcd0f3177b39de6db7b0fd66738d0abd59908" translate="yes" xml:space="preserve">
          <source>Here's two outputs (or 'renderings'), using the -exec and -basic (i.e. default) formatting conventions on the same code snippet.</source>
          <target state="translated">Aquí hay dos salidas (o &quot;renderings&quot;),usando las convenciones de formato -exec y -basic (es decir,por defecto)en el mismo fragmento de código.</target>
        </trans-unit>
        <trans-unit id="b7e6198c27f03baf5a7cf4c101c7cbf2083f6919" translate="yes" xml:space="preserve">
          <source>Here's what happens: when Perl reads in a string literal, it sticks to 8 bit encoding as long as it can. (But perhaps originally it was internally encoded as UTF-8, when you dumped it.) When it has to give that up because other characters are added to the text string, it silently upgrades the string to UTF-8.</source>
          <target state="translated">Esto es lo que sucede:cuando Perl lee en una cadena literal,se adhiere a la codificación de 8 bits tanto como puede.(Pero quizás originalmente estaba codificado internamente como UTF-8,cuando lo volcaste).Cuando tiene que renunciar a eso porque se agregan otros caracteres a la cadena de texto,silenciosamente actualiza la cadena a UTF-8.</target>
        </trans-unit>
        <trans-unit id="3d080817ae211b70ffb8548327b1435f255163a6" translate="yes" xml:space="preserve">
          <source>Here,</source>
          <target state="translated">Here,</target>
        </trans-unit>
        <trans-unit id="664fb069ea88b967ad1512f692644a45d6f7de10" translate="yes" xml:space="preserve">
          <source>Here, &quot;=head1 Foo&quot; and &quot;=cut&quot; are command paragraphs because the first line of each matches &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=[a-zA-Z]/&lt;/a&gt;&lt;/code&gt;. &quot;</source>
          <target state="translated">Aqu&amp;iacute;, &quot;= head1 Foo&quot; y &quot;= cut&quot; son p&amp;aacute;rrafos de comando porque la primera l&amp;iacute;nea de cada uno coincide con &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=[a-zA-Z]/&lt;/a&gt;&lt;/code&gt; . &quot;</target>
        </trans-unit>
        <trans-unit id="6e880e78238dbe97c5e8b6a05af56ed349c5a146" translate="yes" xml:space="preserve">
          <source>Here, &quot;=head1 Foo&quot; and &quot;=cut&quot; are command paragraphs because the first line of each matches &lt;code&gt;m/\A=[a-zA-Z]/&lt;/code&gt;. &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2d91e5d5873ea3e50cabcf6bf495277d88e43b" translate="yes" xml:space="preserve">
          <source>Here, $subroutine is the function that the caller called (rather than the function containing the caller). Note that $subroutine may be &lt;code&gt;(&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; if the frame is not a subroutine call, but an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. In such a case additional elements $evaltext and &lt;code&gt;$is_require&lt;/code&gt; are set: &lt;code&gt;$is_require&lt;/code&gt; is true if the frame is created by a &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement, $evaltext contains the text of the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; statement. In particular, for an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; statement, $subroutine is &lt;code&gt;(&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; , but $evaltext is undefined. (Note also that each &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement creates a &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; frame inside an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; frame.) $subroutine may also be &lt;code&gt;(unknown)&lt;/code&gt; if this particular subroutine happens to have been deleted from the symbol table. &lt;code&gt;$hasargs&lt;/code&gt; is true if a new instance of &lt;code&gt;@_&lt;/code&gt; was set up for the frame. &lt;code&gt;$hints&lt;/code&gt; and &lt;code&gt;$bitmask&lt;/code&gt; contain pragmatic hints that the caller was compiled with. &lt;code&gt;$hints&lt;/code&gt; corresponds to &lt;code&gt;$^H&lt;/code&gt; , and &lt;code&gt;$bitmask&lt;/code&gt; corresponds to &lt;code&gt;${^WARNING_BITS}&lt;/code&gt; . The &lt;code&gt;$hints&lt;/code&gt; and &lt;code&gt;$bitmask&lt;/code&gt; values are subject to change between versions of Perl, and are not meant for external use.</source>
          <target state="translated">Aqu&amp;iacute;, $ subrutina es la funci&amp;oacute;n que llam&amp;oacute; el llamador (en lugar de la funci&amp;oacute;n que contiene al llamador). Tenga en cuenta que $ subrutina puede ser &lt;code&gt;(&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; si el marco no es una llamada de subrutina, sino una &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n . En tal caso, se establecen los elementos adicionales $ evaltext y &lt;code&gt;$is_require&lt;/code&gt; : &lt;code&gt;$is_require&lt;/code&gt; es verdadero si el marco es creado por una declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , $ evaltext contiene el texto de la declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; . En particular, para una instrucci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; , $ subrutina es &lt;code&gt;(&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; , pero $ evaltext no est&amp;aacute; definido. (Tenga en cuenta tambi&amp;eacute;n que cada &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; La instrucci&amp;oacute;n crea un marco &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; dentro de un marco &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; .) $ subrutina tambi&amp;eacute;n puede ser &lt;code&gt;(unknown)&lt;/code&gt; si esta subrutina en particular ha sido eliminada de la tabla de s&amp;iacute;mbolos. &lt;code&gt;$hasargs&lt;/code&gt; es verdadero si se configur&amp;oacute; una nueva instancia de &lt;code&gt;@_&lt;/code&gt; para el marco. &lt;code&gt;$hints&lt;/code&gt; y &lt;code&gt;$bitmask&lt;/code&gt; contienen sugerencias pragm&amp;aacute;ticas con las que se compil&amp;oacute; el llamador. &lt;code&gt;$hints&lt;/code&gt; corresponde a &lt;code&gt;$^H&lt;/code&gt; , y &lt;code&gt;$bitmask&lt;/code&gt; corresponde a &lt;code&gt;${^WARNING_BITS}&lt;/code&gt; . Los &lt;code&gt;$hints&lt;/code&gt; y &lt;code&gt;$bitmask&lt;/code&gt; Los valores est&amp;aacute;n sujetos a cambios entre versiones de Perl y no est&amp;aacute;n pensados ​​para uso externo.</target>
        </trans-unit>
        <trans-unit id="0cf857d30373eeccb44d9f659b21b0118b696cbc" translate="yes" xml:space="preserve">
          <source>Here, $subroutine is the function that the caller called (rather than the function containing the caller). Note that $subroutine may be &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; if the frame is not a subroutine call, but an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. In such a case additional elements $evaltext and &lt;code&gt;$is_require&lt;/code&gt; are set: &lt;code&gt;$is_require&lt;/code&gt; is true if the frame is created by a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement, $evaltext contains the text of the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; statement. In particular, for an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; statement, $subroutine is &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; , but $evaltext is undefined. (Note also that each &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement creates a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; frame inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; frame.) $subroutine may also be &lt;code&gt;(unknown)&lt;/code&gt; if this particular subroutine happens to have been deleted from the symbol table. &lt;code&gt;$hasargs&lt;/code&gt; is true if a new instance of &lt;code&gt;@_&lt;/code&gt; was set up for the frame. &lt;code&gt;$hints&lt;/code&gt; and &lt;code&gt;$bitmask&lt;/code&gt; contain pragmatic hints that the caller was compiled with. &lt;code&gt;$hints&lt;/code&gt; corresponds to &lt;code&gt;$^H&lt;/code&gt; , and &lt;code&gt;$bitmask&lt;/code&gt; corresponds to &lt;code&gt;${^WARNING_BITS}&lt;/code&gt; . The &lt;code&gt;$hints&lt;/code&gt; and &lt;code&gt;$bitmask&lt;/code&gt; values are subject to change between versions of Perl, and are not meant for external use.</source>
          <target state="translated">Aqu&amp;iacute;, $ subrutina es la funci&amp;oacute;n que llam&amp;oacute; el llamador (en lugar de la funci&amp;oacute;n que contiene al llamador). Tenga en cuenta que $ subrutina puede ser &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; si el marco no es una llamada de subrutina, sino una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n . En tal caso, se establecen los elementos adicionales $ evaltext y &lt;code&gt;$is_require&lt;/code&gt; : &lt;code&gt;$is_require&lt;/code&gt; es verdadero si el marco es creado por una declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , $ evaltext contiene el texto de la declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; . En particular, para una instrucci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; BLOCK&lt;/code&gt; , $ subrutina es &lt;code&gt;(&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;)&lt;/code&gt; , pero $ evaltext no est&amp;aacute; definido. (Tenga en cuenta tambi&amp;eacute;n que cada &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; La instrucci&amp;oacute;n crea un marco &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; dentro de un marco &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; EXPR&lt;/code&gt; .) $ subrutina tambi&amp;eacute;n puede ser &lt;code&gt;(unknown)&lt;/code&gt; si esta subrutina en particular ha sido eliminada de la tabla de s&amp;iacute;mbolos. &lt;code&gt;$hasargs&lt;/code&gt; es verdadero si se configur&amp;oacute; una nueva instancia de &lt;code&gt;@_&lt;/code&gt; para el marco. &lt;code&gt;$hints&lt;/code&gt; y &lt;code&gt;$bitmask&lt;/code&gt; contienen sugerencias pragm&amp;aacute;ticas con las que se compil&amp;oacute; el llamador. &lt;code&gt;$hints&lt;/code&gt; corresponde a &lt;code&gt;$^H&lt;/code&gt; , y &lt;code&gt;$bitmask&lt;/code&gt; corresponde a &lt;code&gt;${^WARNING_BITS}&lt;/code&gt; . Los &lt;code&gt;$hints&lt;/code&gt; y &lt;code&gt;$bitmask&lt;/code&gt; Los valores est&amp;aacute;n sujetos a cambios entre versiones de Perl y no est&amp;aacute;n pensados ​​para uso externo.</target>
        </trans-unit>
        <trans-unit id="f3735e4f7cd84efb99098edde43ca86112a7452e" translate="yes" xml:space="preserve">
          <source>Here, $subroutine is the function that the caller called (rather than the function containing the caller). Note that $subroutine may be &lt;code&gt;(eval)&lt;/code&gt; if the frame is not a subroutine call, but an &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;. In such a case additional elements $evaltext and &lt;code&gt;$is_require&lt;/code&gt; are set: &lt;code&gt;$is_require&lt;/code&gt; is true if the frame is created by a &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; statement, $evaltext contains the text of the &lt;code&gt;eval EXPR&lt;/code&gt; statement. In particular, for an &lt;code&gt;eval BLOCK&lt;/code&gt; statement, $subroutine is &lt;code&gt;(eval)&lt;/code&gt;, but $evaltext is undefined. (Note also that each &lt;a href=&quot;#use-Module-VERSION-LIST&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; statement creates a &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; frame inside an &lt;code&gt;eval EXPR&lt;/code&gt; frame.) $subroutine may also be &lt;code&gt;(unknown)&lt;/code&gt; if this particular subroutine happens to have been deleted from the symbol table. &lt;code&gt;$hasargs&lt;/code&gt; is true if a new instance of &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt; was set up for the frame. &lt;code&gt;$hints&lt;/code&gt; and &lt;code&gt;$bitmask&lt;/code&gt; contain pragmatic hints that the caller was compiled with. &lt;code&gt;$hints&lt;/code&gt; corresponds to &lt;a href=&quot;perlvar#%24%5EH&quot;&gt;&lt;code&gt;$^H&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;$bitmask&lt;/code&gt; corresponds to &lt;a href=&quot;perlvar#%24%7B%5EWARNING_BITS%7D&quot;&gt;&lt;code&gt;${^WARNING_BITS}&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;$hints&lt;/code&gt; and &lt;code&gt;$bitmask&lt;/code&gt; values are subject to change between versions of Perl, and are not meant for external use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa26f85e260be75edcd0346a364ee2896d298ec" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;(?&amp;gt;[^()]+)&lt;/code&gt; breaks the degeneracy of string partitioning by gobbling up as much of the string as possible and keeping it. Then match failures fail much more quickly.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;(?&amp;gt;[^()]+)&lt;/code&gt; Rompe la degeneraci&amp;oacute;n de la partici&amp;oacute;n de cadenas engullendo tanta cadena como sea posible y guard&amp;aacute;ndola. Luego, los fallos de coincidencia fallan mucho m&amp;aacute;s r&amp;aacute;pidamente.</target>
        </trans-unit>
        <trans-unit id="a1b989b57eb518dccad89ad922a4fe2c3b8290b8" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;.?&lt;/code&gt; eats its maximal one character at the earliest possible position in the string, &lt;code&gt;'a'&lt;/code&gt; in &lt;code&gt;programming&lt;/code&gt; , leaving &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}&lt;/a&gt;&lt;/code&gt; the opportunity to match both &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt;'s. Finally,</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;.?&lt;/code&gt; come su m&amp;aacute;ximo un car&amp;aacute;cter en la posici&amp;oacute;n m&amp;aacute;s temprana posible en la cadena, &lt;code&gt;'a'&lt;/code&gt; en &lt;code&gt;programming&lt;/code&gt; , dejando a &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}&lt;/a&gt;&lt;/code&gt; la oportunidad de coincidir con ambas &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; . Finalmente,</target>
        </trans-unit>
        <trans-unit id="6940871278768e0d3843403746506dfab5014fac" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;.?&lt;/code&gt; eats its maximal one character at the earliest possible position in the string, &lt;code&gt;'a'&lt;/code&gt; in &lt;code&gt;programming&lt;/code&gt;, leaving &lt;code&gt;m{1,2}&lt;/code&gt; the opportunity to match both &lt;code&gt;'m'&lt;/code&gt;'s. Finally,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a0735ee9beb6f441c46c7bd92351e785038614" translate="yes" xml:space="preserve">
          <source>Here, The earliest possible match is at the first &lt;code&gt;'m'&lt;/code&gt; in &lt;code&gt;programming&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}&lt;/a&gt;&lt;/code&gt; is the first quantifier, so it gets to match a maximal &lt;code&gt;mm&lt;/code&gt; .</source>
          <target state="translated">Aqu&amp;iacute;, la coincidencia m&amp;aacute;s temprana posible est&amp;aacute; en la primera &lt;code&gt;'m'&lt;/code&gt; en la &lt;code&gt;programming&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}&lt;/a&gt;&lt;/code&gt; es el primer cuantificador, por lo que llega a coincidir con un &lt;code&gt;mm&lt;/code&gt; m&amp;aacute;ximo .</target>
        </trans-unit>
        <trans-unit id="aadfcc9f4e36a1550c20bdeb59b13a55d871dfc7" translate="yes" xml:space="preserve">
          <source>Here, The earliest possible match is at the first &lt;code&gt;'m'&lt;/code&gt; in &lt;code&gt;programming&lt;/code&gt;. &lt;code&gt;m{1,2}&lt;/code&gt; is the first quantifier, so it gets to match a maximal &lt;code&gt;mm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3716a6d294692219d3cd1801d8d99a5dbba94e08" translate="yes" xml:space="preserve">
          <source>Here, all the alternatives match at the first string position, so the first alternative is the one that matches. If some of the alternatives are truncations of the others, put the longest ones first to give them a chance to match.</source>
          <target state="translated">Aquí,todas las alternativas coinciden en la posición de la primera cuerda,así que la primera alternativa es la que coincide.Si algunas de las alternativas son truncamientos de las otras,ponga las más largas primero para darles la oportunidad de coincidir.</target>
        </trans-unit>
        <trans-unit id="689480ae64fc1f47a0a934be3391ff1dd20b6f51" translate="yes" xml:space="preserve">
          <source>Here, code is written for all the currently linked extensions along with code for &lt;code&gt;DBI&lt;/code&gt; and &lt;code&gt;DBD::Oracle&lt;/code&gt; .</source>
          <target state="translated">Aqu&amp;iacute;, el c&amp;oacute;digo se escribe para todas las extensiones vinculadas actualmente junto con el c&amp;oacute;digo para &lt;code&gt;DBI&lt;/code&gt; y &lt;code&gt;DBD::Oracle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e1da21ea3d3d0f4b406cb9d4b1c545dbb154ce6" translate="yes" xml:space="preserve">
          <source>Here, code is written for all the currently linked extensions along with code for &lt;code&gt;DBI&lt;/code&gt; and &lt;code&gt;DBD::Oracle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaaa9a188728345ceda0023a2930141166a0d68" translate="yes" xml:space="preserve">
          <source>Here, the code points 0x964 and 0x965 are both used in Bengali, Devanagari, Gurmukhi, and Oriya, but no other scripts.</source>
          <target state="translated">Aquí,los puntos de código 0x964 y 0x965 se usan en bengalí,Devanagari,Gurmukhi y Oriya,pero no en otras escrituras.</target>
        </trans-unit>
        <trans-unit id="c6406af5e03eb4f4938f3da32dd26a4c74c548ed" translate="yes" xml:space="preserve">
          <source>Here, the regexp matches at the start of the string. The first quantifier &lt;code&gt;.*&lt;/code&gt; grabs as much as possible, leaving just a single &lt;code&gt;'m'&lt;/code&gt; for the second quantifier &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute;, la expresi&amp;oacute;n regular coincide con el comienzo de la cadena. El primer cuantificador &lt;code&gt;.*&lt;/code&gt; Captura tanto como sea posible, dejando solo una &lt;code&gt;'m'&lt;/code&gt; para el segundo cuantificador &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m{1,2}&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bd5106d8c958bc219ebcb6fcaec8723192083e1" translate="yes" xml:space="preserve">
          <source>Here, the regexp matches at the start of the string. The first quantifier &lt;code&gt;.*&lt;/code&gt; grabs as much as possible, leaving just a single &lt;code&gt;'m'&lt;/code&gt; for the second quantifier &lt;code&gt;m{1,2}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10eb1d2f1c36813ee26854f2e1241cc9e1fd565" translate="yes" xml:space="preserve">
          <source>Here, we use a second &lt;code&gt;open&lt;/code&gt; argument of &lt;code&gt;&quot;|-&quot;&lt;/code&gt;, signifying that the filehandle assigned to &lt;code&gt;$cat_fh&lt;/code&gt; should be a write-pipe. We can then use it just as we would a write-only ordinary filehandle, including the basic function of &lt;code&gt;print&lt;/code&gt;-ing data to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d40285a9c3c8ccdbd6762112a10bef59352519d" translate="yes" xml:space="preserve">
          <source>Here, when the '$a' in the eval is being compiled, f() is not currently being executed, so its $a is not available for capture.</source>
          <target state="translated">Aquí,cuando se está compilando el '$a' de la evaluación,f()no se está ejecutando actualmente,por lo que su $a no está disponible para su captura.</target>
        </trans-unit>
        <trans-unit id="dd7c1c3b995f345fd62ac66cfeb3e09d91946309" translate="yes" xml:space="preserve">
          <source>Here, when the '\&amp;amp;a' in the eval is being compiled, f() is not currently being executed, so its &amp;amp;a is not available for capture.</source>
          <target state="translated">Aqu&amp;iacute;, cuando se compila '\ &amp;amp; a' en la evaluaci&amp;oacute;n, f () no se est&amp;aacute; ejecutando actualmente, por lo que su &amp;amp; a no est&amp;aacute; disponible para su captura.</target>
        </trans-unit>
        <trans-unit id="ede19d3c74e6b3a68c4bd3de5c03f1c72f2ba22c" translate="yes" xml:space="preserve">
          <source>Hex strings may only represent integers. Strings that would cause integer overflow trigger a warning. Leading whitespace is not stripped, unlike oct(). To present something as hex, look into &lt;a href=&quot;#printf&quot;&gt;printf&lt;/a&gt;, &lt;a href=&quot;#sprintf&quot;&gt;sprintf&lt;/a&gt;, and &lt;a href=&quot;#unpack&quot;&gt;unpack&lt;/a&gt;.</source>
          <target state="translated">Las cadenas hexadecimales solo pueden representar n&amp;uacute;meros enteros. Las cadenas que provocar&amp;iacute;an un desbordamiento de enteros activan una advertencia. Los espacios en blanco iniciales no se eliminan, a diferencia de oct (). Para presentar algo como hexadecimal, busque en &lt;a href=&quot;#printf&quot;&gt;printf&lt;/a&gt; , &lt;a href=&quot;#sprintf&quot;&gt;sprintf&lt;/a&gt; y &lt;a href=&quot;#unpack&quot;&gt;descomprima&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4ab04b2f53a36bbb2dc5c2deb103b3c069c62c2" translate="yes" xml:space="preserve">
          <source>Hex strings may only represent integers. Strings that would cause integer overflow trigger a warning. Leading whitespace is not stripped, unlike oct(). To present something as hex, look into &lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;, &lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;, and &lt;a href=&quot;unpack&quot;&gt;unpack&lt;/a&gt;.</source>
          <target state="translated">Las cadenas hexadecimales solo pueden representar n&amp;uacute;meros enteros. Las cadenas que provocar&amp;iacute;an un desbordamiento de enteros activan una advertencia. Los espacios en blanco iniciales no se eliminan, a diferencia de oct (). Para presentar algo como hexadecimal, busque en &lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt; , &lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt; y &lt;a href=&quot;unpack&quot;&gt;descomprima&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f63676066d11c05b5d8b9b8be78e1e17f582eed6" translate="yes" xml:space="preserve">
          <source>Hexadecimal (prefixed with &quot;0x&quot;) and binary numbers (prefixed with &quot;0b&quot;) are accepted, too. Please note that octal numbers are not recognized by new(), so the following will print &quot;123&quot;:</source>
          <target state="translated">También se aceptan los números hexadecimales (prefijados con &quot;0x&quot;)y binarios (prefijados con &quot;0b&quot;).Tenga en cuenta que los números octales no son reconocidos por new(),por lo que lo siguiente se imprimirá &quot;123&quot;:</target>
        </trans-unit>
        <trans-unit id="2486d235457d8e2812e9f4481543bdfa3dc85c5e" translate="yes" xml:space="preserve">
          <source>Hexadecimal Notation</source>
          <target state="translated">Hexadecimal Notation</target>
        </trans-unit>
        <trans-unit id="d754dce244e30fbc42722c0d0d3408fc0e8b5ff5" translate="yes" xml:space="preserve">
          <source>Hexadecimal escapes</source>
          <target state="translated">Hexadecimal leakage</target>
        </trans-unit>
        <trans-unit id="ceb4c2b4da9935612f806f0eaf63dea44928d37a" translate="yes" xml:space="preserve">
          <source>Hexadecimal float: exponent overflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6787bb9bded584a1ccebdd178acfcd973639f3f7" translate="yes" xml:space="preserve">
          <source>Hexadecimal float: exponent underflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48201f76ddff073fa44d07df4a8baaecc78c6e0e" translate="yes" xml:space="preserve">
          <source>Hexadecimal float: internal error (%s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fdf425e37a4288160c1066f4c9ea378b81d48e" translate="yes" xml:space="preserve">
          <source>Hexadecimal float: mantissa overflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fee2dcc28bb2107c935539547a0cafdbf2783a" translate="yes" xml:space="preserve">
          <source>Hexadecimal float: precision loss</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f362cd2180b7cce0594c6133e6481cd125bcf0e" translate="yes" xml:space="preserve">
          <source>Hexadecimal float: unsupported long double format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0055aac53ab95723749bf6b5bb8f9b5857c75d3e" translate="yes" xml:space="preserve">
          <source>Hexadecimal floating point can start just like a hexadecimal literal, and it can be followed by an optional fractional hexadecimal part, but it must be followed by &lt;code&gt;p&lt;/code&gt; , an optional sign, and a power of two. The format is useful for accurately presenting floating point values, avoiding conversions to or from decimal floating point, and therefore avoiding possible loss in precision. Notice that while most current platforms use the 64-bit IEEE 754 floating point, not all do. Another potential source of (low-order) differences are the floating point rounding modes, which can differ between CPUs, operating systems, and compilers, and which Perl doesn't control.</source>
          <target state="translated">El punto flotante hexadecimal puede comenzar como un literal hexadecimal, y puede ir seguido de una parte hexadecimal fraccional opcional, pero debe ir seguido de &lt;code&gt;p&lt;/code&gt; , un signo opcional y una potencia de dos. El formato es &amp;uacute;til para presentar con precisi&amp;oacute;n valores de coma flotante, evitar conversiones hacia o desde coma flotante decimal y, por lo tanto, evitar una posible p&amp;eacute;rdida de precisi&amp;oacute;n. Tenga en cuenta que, si bien la mayor&amp;iacute;a de las plataformas actuales utilizan el punto flotante IEEE 754 de 64 bits, no todas lo hacen. Otra fuente potencial de diferencias (de orden inferior) son los modos de redondeo de punto flotante, que pueden diferir entre CPU, sistemas operativos y compiladores, y que Perl no controla.</target>
        </trans-unit>
        <trans-unit id="6538253332ea41555b76df01c0a9eb4e30e75f6d" translate="yes" xml:space="preserve">
          <source>Hexadecimal floating point can start just like a hexadecimal literal, and it can be followed by an optional fractional hexadecimal part, but it must be followed by &lt;code&gt;p&lt;/code&gt;, an optional sign, and a power of two. The format is useful for accurately presenting floating point values, avoiding conversions to or from decimal floating point, and therefore avoiding possible loss in precision. Notice that while most current platforms use the 64-bit IEEE 754 floating point, not all do. Another potential source of (low-order) differences are the floating point rounding modes, which can differ between CPUs, operating systems, and compilers, and which Perl doesn't control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8905655ccfc1958b445b80fef0232ecf74e57bc8" translate="yes" xml:space="preserve">
          <source>Hexadecimal number &amp;gt; 0xffffffff non-portable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f839007ffa6c33e78ea32b2edbfe75db988fef" translate="yes" xml:space="preserve">
          <source>Hexadecimal, octal, or binary, representations in string literals (e.g. '0xff') are not automatically converted to their integer representation. The hex() and oct() functions make these conversions for you. See &lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt; and &lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt; for more details.</source>
          <target state="translated">Las representaciones hexadecimales, octales o binarias en cadenas literales (por ejemplo, '0xff') no se convierten autom&amp;aacute;ticamente a su representaci&amp;oacute;n entera. Las funciones hex () y oct () realizan estas conversiones por usted. Consulte &lt;a href=&quot;functions/hex&quot;&gt;hex&lt;/a&gt; y &lt;a href=&quot;functions/oct&quot;&gt;oct&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="394f3535ef6619d95b226f10b0fb91749452cd92" translate="yes" xml:space="preserve">
          <source>Hexadecimal, octal, or binary, representations in string literals (e.g. '0xff') are not automatically converted to their integer representation. The hex() and oct() functions make these conversions for you. See &lt;a href=&quot;perlfunc#hex&quot;&gt;&quot;hex&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#oct&quot;&gt;&quot;oct&quot; in perlfunc&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0d47fb48d369e779ea66f99b77ac3ba09d56e3" translate="yes" xml:space="preserve">
          <source>Hey, isn't Perl supposed to make this sort of thing easy? Well, it does, if you use the right tools. &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; are designed to help you out when dealing with fixed-width data like the above. Let's have a look at a solution with &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Oye, &amp;iquest;no se supone que Perl te facilitar&amp;aacute; este tipo de cosas? Bueno, lo hace, si usa las herramientas adecuadas. &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; est&amp;aacute;n dise&amp;ntilde;ados para ayudarlo cuando se trata de datos de ancho fijo como el anterior. Echemos un vistazo a una soluci&amp;oacute;n con &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="07a002a323d2c31a9141607bc892ee1574aeebbd" translate="yes" xml:space="preserve">
          <source>Hey, isn't Perl supposed to make this sort of thing easy? Well, it does, if you use the right tools. &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;unpack&lt;/code&gt; are designed to help you out when dealing with fixed-width data like the above. Let's have a look at a solution with &lt;code&gt;unpack&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38419124bd7b06ea4fc82f2ec5707cd4239617e6" translate="yes" xml:space="preserve">
          <source>Hiding Perl_</source>
          <target state="translated">Hiding Perl_</target>
        </trans-unit>
        <trans-unit id="1428b1718a9c369e65d9d918143e0a1d8ca542e9" translate="yes" xml:space="preserve">
          <source>Hiding or invalidating some other definition of the same name. (Not to be confused with &lt;b&gt;overloading&lt;/b&gt;, which adds definitions that must be disambiguated some other way.) To confuse the issue further, we use the word with two overloaded definitions: to describe how you can define your own &lt;b&gt;subroutine&lt;/b&gt; to hide a built-in &lt;b&gt;function&lt;/b&gt; of the same name (see the section &amp;ldquo;Overriding Built-in Functions&amp;rdquo; in Camel chapter 11, &amp;ldquo;Modules&amp;rdquo;), and to describe how you can define a replacement &lt;b&gt;method&lt;/b&gt; in a &lt;b&gt;derived class&lt;/b&gt; to hide a &lt;b&gt;base class&lt;/b&gt;&amp;rsquo;s method of the same name (see Camel chapter 12, &amp;ldquo;Objects&amp;rdquo;).</source>
          <target state="translated">Ocultar o invalidar alguna otra definici&amp;oacute;n del mismo nombre. (No debe confundirse con &lt;b&gt;sobrecarga&lt;/b&gt; , que agrega definiciones que deben eliminarse de la ambig&amp;uuml;edad de alguna otra manera). Para confundir a&amp;uacute;n m&amp;aacute;s el problema, usamos la palabra con dos definiciones sobrecargadas: para describir c&amp;oacute;mo puede definir su propia &lt;b&gt;subrutina&lt;/b&gt; para ocultar una &lt;b&gt;funci&amp;oacute;n&lt;/b&gt; del mismo nombre (consulte la secci&amp;oacute;n &quot;Anulaci&amp;oacute;n de funciones incorporadas&quot; en el cap&amp;iacute;tulo 11 de Camel, &quot;M&amp;oacute;dulos&quot;), y para describir c&amp;oacute;mo puede definir un &lt;b&gt;m&amp;eacute;todo de&lt;/b&gt; reemplazo en una &lt;b&gt;clase derivada&lt;/b&gt; para ocultar el &lt;b&gt;m&amp;eacute;todo&lt;/b&gt; de una &lt;b&gt;clase &lt;/b&gt;&lt;b&gt;base&lt;/b&gt; de la mismo nombre (consulte el cap&amp;iacute;tulo 12 de Camel, &amp;ldquo;Objetos&amp;rdquo;).</target>
        </trans-unit>
        <trans-unit id="c470287cb379da96c293a62fb8664cf2247d2b55" translate="yes" xml:space="preserve">
          <source>High Level</source>
          <target state="translated">High Level</target>
        </trans-unit>
        <trans-unit id="ad6c175822059b79229ebfc786ac972d1cc9dd61" translate="yes" xml:space="preserve">
          <source>High resolution alarm, sleep, gettimeofday, interval timers</source>
          <target state="translated">Alarma de alta resolución,sueño,hora de llegada del día,temporizadores de intervalo...</target>
        </trans-unit>
        <trans-unit id="06ec56d2d4a59020901e32260159cfaa9fcc9ac8" translate="yes" xml:space="preserve">
          <source>High-level commands do such initializations automatically.</source>
          <target state="translated">Los comandos de alto nivel hacen tales inicializaciones automáticamente.</target>
        </trans-unit>
        <trans-unit id="e29ea1646e3ae3268842b4efea0250df490ad525" translate="yes" xml:space="preserve">
          <source>Higher-Order Perl</source>
          <target state="translated">Perl de orden superior</target>
        </trans-unit>
        <trans-unit id="2f40e6c9a09885ca0cf7997c2375c0fe1fb31d9f" translate="yes" xml:space="preserve">
          <source>Hint: The &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; tutorial covers the T_INOUT, T_IN, and T_OUT XS types nicely.</source>
          <target state="translated">Sugerencia: el tutorial de &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; cubre muy bien los tipos T_INOUT, T_IN y T_OUT XS.</target>
        </trans-unit>
        <trans-unit id="e3d4d7c7e48bee9d90099bb119b39917c09def77" translate="yes" xml:space="preserve">
          <source>Hint: sometimes appending &lt;code&gt;&quot;, stopped&quot;&lt;/code&gt; to your message will cause it to make better sense when the string &lt;code&gt;&quot;at foo line 123&quot;&lt;/code&gt; is appended. Suppose you are running script &quot;canasta&quot;.</source>
          <target state="translated">Sugerencia: a veces agregar &lt;code&gt;&quot;, stopped&quot;&lt;/code&gt; a su mensaje har&amp;aacute; que tenga m&amp;aacute;s sentido cuando se agregue la cadena &lt;code&gt;&quot;at foo line 123&quot;&lt;/code&gt; . Suponga que est&amp;aacute; ejecutando el script &quot;canasta&quot;.</target>
        </trans-unit>
        <trans-unit id="eef8e89aeb708a408921fec1b9e87c4d04faaced" translate="yes" xml:space="preserve">
          <source>Hints</source>
          <target state="translated">Hints</target>
        </trans-unit>
        <trans-unit id="4d29825148796b94b3706b9469ee384bc5c32604" translate="yes" xml:space="preserve">
          <source>Hints can be provided for both scalar and list contexts. Note that an autodying subroutine will never see a void context, as &lt;code&gt;autodie&lt;/code&gt; always needs to capture the return value for examination. Autodying subroutines called in void context act as if they're called in a scalar context, but their return value is discarded after it has been checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7ad51592f12093f07f504091e6b4574d36b5ff" translate="yes" xml:space="preserve">
          <source>Hints for Writing Pod</source>
          <target state="translated">Pistas para escribir la vaina</target>
        </trans-unit>
        <trans-unit id="b645eb28e32b28c0363e14b822198d8bf042449d" translate="yes" xml:space="preserve">
          <source>Hints may consist of subroutine references, objects overloading smart-match, regular expressions, and depending on Perl version possibly other things. You can specify different hints for how failure should be identified in scalar and list contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd94510567b2e65da4d128c15c97d4b8bf6c814e" translate="yes" xml:space="preserve">
          <source>Hintsfile support</source>
          <target state="translated">Apoyo a los archivos de pistas</target>
        </trans-unit>
        <trans-unit id="57ec96f40e52a96bf96bf4e1bcab6928fd860e76" translate="yes" xml:space="preserve">
          <source>Historical note: A few older Pod processors would not see a &quot;&amp;gt;&quot; as closing a &quot;C&amp;lt;&quot; code, if the &quot;&amp;gt;&quot; was immediately preceded by a &quot;-&quot;. This was so that this:</source>
          <target state="translated">Nota hist&amp;oacute;rica: algunos procesadores de Pod m&amp;aacute;s antiguos no ver&amp;iacute;an un &quot;&amp;gt;&quot; como cierre de un c&amp;oacute;digo &quot;C &amp;lt;&quot;, si &quot;&amp;gt;&quot; fuera inmediatamente precedido por un &quot;-&quot;. Esto fue para que esto:</target>
        </trans-unit>
        <trans-unit id="456da061b07638f2efc60c23c53fa3c2c51535e7" translate="yes" xml:space="preserve">
          <source>Historical notes: 'die' used to be the default value of &lt;code&gt;$huge&lt;/code&gt; . Now, 'wrap' is the default value.</source>
          <target state="translated">Notas hist&amp;oacute;ricas: 'morir' sol&amp;iacute;a ser el valor predeterminado de &lt;code&gt;$huge&lt;/code&gt; . Ahora, 'envolver' es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="19ea8843c58830508eaf140dfecf76c53f9de3a3" translate="yes" xml:space="preserve">
          <source>Historical notes: 'die' used to be the default value of &lt;code&gt;$huge&lt;/code&gt;. Now, 'wrap' is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e800c8fc87d99008c1563976a3e7822cfaf0d87" translate="yes" xml:space="preserve">
          <source>Historically Perl has been a refcounted language. This means that each variable tracks how many things reference it, and when the variable is no longer referenced it will automatically free itself. In theory Perl code should not have to care about this, and in a future version Perl might change to some other strategy, although in practice this is unlikely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b09a13158d2d1c843704dc0085426732de965d7" translate="yes" xml:space="preserve">
          <source>Historically Perl has varied in whether sorting is stable by default. If stability matters, it can be controlled explicitly by using the &lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt; pragma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bea0d3c8dc12ea86900e60a2460f211b081d43" translate="yes" xml:space="preserve">
          <source>Historically, any software that you give away, particularly if you make the source code available as well. Now often called &lt;b&gt;open source software&lt;/b&gt;. Recently there has been a trend to use the term in contradistinction to &lt;b&gt;open source software&lt;/b&gt;, to refer only to free software released under the Free Software Foundation&amp;rsquo;s GPL (General Public License), but this is difficult to justify etymologically.</source>
          <target state="translated">Hist&amp;oacute;ricamente, cualquier software que regale, especialmente si tambi&amp;eacute;n hace que el c&amp;oacute;digo fuente est&amp;eacute; disponible. Ahora a menudo se llama &lt;b&gt;software de c&amp;oacute;digo abierto&lt;/b&gt; . Recientemente, ha habido una tendencia a utilizar el t&amp;eacute;rmino en contraposici&amp;oacute;n al &lt;b&gt;software de c&amp;oacute;digo abierto&lt;/b&gt; , para referirse &amp;uacute;nicamente al software libre publicado bajo la GPL (Licencia P&amp;uacute;blica General) de la Free Software Foundation, pero esto es dif&amp;iacute;cil de justificar etimol&amp;oacute;gicamente.</target>
        </trans-unit>
        <trans-unit id="97391b474b93a4ff5ad2004bc1c3d103a9fb4d4e" translate="yes" xml:space="preserve">
          <source>Historically, only the pumpking cherry-picked changes from bleadperl into maintperl. This has scaling problems. At the same time, maintenance branches of stable versions of Perl need to be treated with great care. To that end, as of Perl 5.12, we have a new process for maint branches.</source>
          <target state="translated">Históricamente,sólo la cereza de la bomba cambia de bleadperl a maintperl.Esto tiene problemas de escalamiento.Al mismo tiempo,las ramas de mantenimiento de las versiones estables de Perl necesitan ser tratadas con mucho cuidado.Para ello,a partir de Perl 5.12,tenemos un nuevo proceso para el mantenimiento de las ramas.</target>
        </trans-unit>
        <trans-unit id="a70077bc9082a3c8ea160dc01f918a3a65a6e212" translate="yes" xml:space="preserve">
          <source>Historically, these would be generated by the &lt;a href=&quot;h2ph&quot;&gt;h2ph&lt;/a&gt; tool, part of the standard perl distribution. This program converts &lt;code&gt;cpp(1)&lt;/code&gt; directives in C header files to files containing subroutine definitions, like &lt;code&gt;SYS_getitimer()&lt;/code&gt; , which you can use as arguments to your functions. It doesn't work perfectly, but it usually gets most of the job done. Simple files like</source>
          <target state="translated">Hist&amp;oacute;ricamente, estos ser&amp;iacute;an generados por la herramienta &lt;a href=&quot;h2ph&quot;&gt;h2ph&lt;/a&gt; , parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl. Este programa convierte las directivas &lt;code&gt;cpp(1)&lt;/code&gt; en archivos de encabezado C en archivos que contienen definiciones de subrutinas, como &lt;code&gt;SYS_getitimer()&lt;/code&gt; , que puede usar como argumentos para sus funciones. No funciona perfectamente, pero normalmente hace la mayor parte del trabajo. Archivos simples como</target>
        </trans-unit>
        <trans-unit id="63c14478e9043824d23cc2298dab27f2d02eeb16" translate="yes" xml:space="preserve">
          <source>Historically, these would be generated by the &lt;a href=&quot;h2ph&quot;&gt;h2ph&lt;/a&gt; tool, part of the standard perl distribution. This program converts &lt;code&gt;cpp(1)&lt;/code&gt; directives in C header files to files containing subroutine definitions, like &lt;code&gt;SYS_getitimer()&lt;/code&gt;, which you can use as arguments to your functions. It doesn't work perfectly, but it usually gets most of the job done. Simple files like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723525aec4e05b078bfa1f7212775fddba5a19b2" translate="yes" xml:space="preserve">
          <source>Historically, we've held ourselves to a far higher standard than backward-compatibility -- bugward-compatibility. Any accident of implementation or unintentional side-effect of running some bit of code has been considered to be a feature of the language to be defended with the same zeal as any other feature or functionality. No matter how frustrating these unintentional features may be to us as we continue to improve Perl, these unintentional features often deserve our protection. It is very important that existing software written in Perl continue to work correctly. If end-user developers have adopted a bug as a feature, we need to treat it as such.</source>
          <target state="translated">Históricamente,nos hemos mantenido en un estándar mucho más alto que la compatibilidad con el pasado,la compatibilidad con los errores.Cualquier accidente de implementación o efecto secundario no intencionado de ejecutar algún trozo de código ha sido considerado como una característica del lenguaje que debe ser defendida con el mismo celo que cualquier otra característica o funcionalidad.No importa cuán frustrantes puedan ser estas características no intencionadas para nosotros a medida que continuamos mejorando Perl,estas características no intencionadas a menudo merecen nuestra protección.Es muy importante que el software existente escrito en Perl siga funcionando correctamente.Si los desarrolladores de usuarios finales han adoptado un error como una característica,necesitamos tratarlo como tal.</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="2e6d74e94851d72f49d2c6b59183be96d60c8e34" translate="yes" xml:space="preserve">
          <source>History and Background</source>
          <target state="translated">Historia y antecedentes</target>
        </trans-unit>
        <trans-unit id="ace535b09698d3ae2888504e132d0829ba6b4d7d" translate="yes" xml:space="preserve">
          <source>History of CPAN Meta Spec changes</source>
          <target state="translated">Historia de los cambios en el CPAN Meta Spec</target>
        </trans-unit>
        <trans-unit id="3e8e120f18fdbffd8b9be5d8fa532f5e8e03fa02" translate="yes" xml:space="preserve">
          <source>History of Middle Earth</source>
          <target state="translated">Historia de la Tierra Media</target>
        </trans-unit>
        <trans-unit id="9d34c3581dd43beee5ddd060d0bab25f439fd94b" translate="yes" xml:space="preserve">
          <source>History of WinCE port</source>
          <target state="translated">Historia del puerto WinCE</target>
        </trans-unit>
        <trans-unit id="e73e3de4102afafe13d5b9177c279b777279e4aa" translate="yes" xml:space="preserve">
          <source>Hmm. What happened here? If you've been following along, you know that the above pattern should be effectively (almost) the same as the last one; enclosing the &lt;code&gt;'d'&lt;/code&gt; in a character class isn't going to change what it matches. So why does the first not print while the second one does?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9733ac081a67789bdb91140dbb2aaf4de5c5ec7b" translate="yes" xml:space="preserve">
          <source>Hmm. What happened here? If you've been following along, you know that the above pattern should be effectively (almost) the same as the last one; enclosing the &lt;code&gt;d&lt;/code&gt; in a character class isn't going to change what it matches. So why does the first not print while the second one does?</source>
          <target state="translated">Hmm. &amp;iquest;Que pas&amp;oacute; aqu&amp;iacute;? Si lo ha seguido, sabe que el patr&amp;oacute;n anterior deber&amp;iacute;a ser efectivamente (casi) el mismo que el anterior; incluir la &lt;code&gt;d&lt;/code&gt; en una clase de car&amp;aacute;cter no va a cambiar lo que coincide. Entonces, &amp;iquest;por qu&amp;eacute; el primero no se imprime mientras que el segundo s&amp;iacute;?</target>
        </trans-unit>
        <trans-unit id="821ac8e428a38ddcf25e2027bc128ec6e743a489" translate="yes" xml:space="preserve">
          <source>Hmm... that's still a bit ugly. How about this:</source>
          <target state="translated">Hmm...eso es todavía un poco feo.Que tal esto:</target>
        </trans-unit>
        <trans-unit id="511721548acc73e7ad2a7122ec29970e3c6188d3" translate="yes" xml:space="preserve">
          <source>Holds information on the longest string that must occur at a fixed offset from the start of the pattern, and the longest string that must occur at a floating offset from the start of the pattern. Used to do Fast-Boyer-Moore searches on the string to find out if its worth using the regex engine at all, and if so where in the string to search.</source>
          <target state="translated">Contiene información sobre la cadena más larga que debe ocurrir en un desplazamiento fijo desde el comienzo del patrón,y la cadena más larga que debe ocurrir en un desplazamiento flotante desde el comienzo del patrón.Se utiliza para hacer búsquedas en la cadena para averiguar si vale la pena utilizar el motor regex,y si es así,en qué parte de la cadena se debe buscar.</target>
        </trans-unit>
        <trans-unit id="959988c98232c3eb8b17616f91948b459e04946f" translate="yes" xml:space="preserve">
          <source>Holds some explanation in the case of an error.</source>
          <target state="translated">Tiene alguna explicación en el caso de un error.</target>
        </trans-unit>
        <trans-unit id="01443708f436be923f0aee8880549437dad1a448" translate="yes" xml:space="preserve">
          <source>Holds the last reported error. Kept for historical reasons, but its use is very much discouraged. Use the &lt;code&gt;error()&lt;/code&gt; method instead:</source>
          <target state="translated">Contiene el &amp;uacute;ltimo error informado. Se conserva por motivos hist&amp;oacute;ricos, pero se desaconseja mucho su uso. Utilice el m&amp;eacute;todo &lt;code&gt;error()&lt;/code&gt; lugar:</target>
        </trans-unit>
        <trans-unit id="c95db6ed76758307edcf864f1a4ab2acb112562d" translate="yes" xml:space="preserve">
          <source>Holds the output of the &lt;code&gt;date&lt;/code&gt; command when the configuration file was produced. This is used to tag both</source>
          <target state="translated">Contiene la salida del comando de &lt;code&gt;date&lt;/code&gt; cuando se gener&amp;oacute; el archivo de configuraci&amp;oacute;n. Esto se usa para etiquetar tanto</target>
        </trans-unit>
        <trans-unit id="739c29f4f6f84e7a7eaff9a32fa3671bc3d08941" translate="yes" xml:space="preserve">
          <source>Holds the private path used by Configure to find out the libraries. Its value is prepend to libpth. This variable takes care of special machines, like the mips. Usually, it should be empty.</source>
          <target state="translated">Contiene la ruta privada usada por Configurar para encontrar las bibliotecas.Su valor está prefijado a libpth.Esta variable se encarga de las máquinas especiales,como los mips.Normalmente,debería estar vacía.</target>
        </trans-unit>
        <trans-unit id="582b824400c82cf0f40f9f7c604827d48ea750f5" translate="yes" xml:space="preserve">
          <source>Holds the standard error of the executed command (or empty string if there was no STDERR output or if &lt;code&gt;discard_output&lt;/code&gt; was used; it's always defined!)</source>
          <target state="translated">Contiene el error est&amp;aacute;ndar del comando ejecutado (o una cadena vac&amp;iacute;a si no hubo salida STDERR o si se us&amp;oacute; &lt;code&gt;discard_output&lt;/code&gt; ; &amp;iexcl;siempre est&amp;aacute; definido!)</target>
        </trans-unit>
        <trans-unit id="7c3e4c3ddb7125c1c1e75cedd0d2a9c28f53291d" translate="yes" xml:space="preserve">
          <source>Holds the standard output and error of the executed command merged into one stream (or empty string if there was no output at all or if &lt;code&gt;discard_output&lt;/code&gt; was used; it's always defined!)</source>
          <target state="translated">Contiene la salida est&amp;aacute;ndar y el error del comando ejecutado combinado en una secuencia (o una cadena vac&amp;iacute;a si no hubo ninguna salida o si se us&amp;oacute; &lt;code&gt;discard_output&lt;/code&gt; ; &amp;iexcl;siempre est&amp;aacute; definido!)</target>
        </trans-unit>
        <trans-unit id="5f9c8ab4b280eb2c610d191400d239df37776272" translate="yes" xml:space="preserve">
          <source>Holds the standard output of the executed command (or empty string if there was no STDOUT output or if &lt;code&gt;discard_output&lt;/code&gt; was used; it's always defined!)</source>
          <target state="translated">Contiene la salida est&amp;aacute;ndar del comando ejecutado (o una cadena vac&amp;iacute;a si no hubo salida STDOUT o si se us&amp;oacute; &lt;code&gt;discard_output&lt;/code&gt; ; &amp;iexcl;siempre est&amp;aacute; definida!)</target>
        </trans-unit>
        <trans-unit id="1f43fffdbf7b0c05af0b8fc8fcc67b1c8be39947" translate="yes" xml:space="preserve">
          <source>Home page for ISO 15924.</source>
          <target state="translated">Página principal de ISO 15924.</target>
        </trans-unit>
        <trans-unit id="1ba2fa3de9992cda18c006a91b37960fee16b9e0" translate="yes" xml:space="preserve">
          <source>Hook manipulation</source>
          <target state="translated">Manipulación de ganchos</target>
        </trans-unit>
        <trans-unit id="5027e8d0e915f65d00ad88208e35669396121f09" translate="yes" xml:space="preserve">
          <source>Hook stack for managing scopes via %^H</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="4b09a3b7ef7178d5866c8b4122a3b1b80e280cb2" translate="yes" xml:space="preserve">
          <source>Hopefully the contents of each of the filters should be self-explanatory. Both &quot;fetch&quot; filters remove the terminating NULL, and both &quot;store&quot; filters add a terminating NULL.</source>
          <target state="translated">Esperemos que el contenido de cada uno de los filtros se explique por sí mismo.Ambos filtros de &quot;buscar&quot; eliminan el NULL terminal,y ambos filtros de &quot;almacenar&quot; añaden un NULL terminal.</target>
        </trans-unit>
        <trans-unit id="1a684169a4210a05fab1617879fe368df08034f1" translate="yes" xml:space="preserve">
          <source>HostName</source>
          <target state="translated">HostName</target>
        </trans-unit>
        <trans-unit id="5a0c43672840e7d1029ec4aa340b54209da75c4a" translate="yes" xml:space="preserve">
          <source>Hostname and service name for the local address to &lt;code&gt;bind()&lt;/code&gt; to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3159cb6d83d75fcd994ddd9e9c2b1dcf0d071ae6" translate="yes" xml:space="preserve">
          <source>Hostname and service name for the peer to &lt;code&gt;connect()&lt;/code&gt; to. The service name may be given as a port number, as a decimal string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c81abc87bdc5538df96766fcae6d44438449d0a" translate="yes" xml:space="preserve">
          <source>How</source>
          <target state="translated">How</target>
        </trans-unit>
        <trans-unit id="b28755c4371822ab05bbd3edfbd84f8ae5c44516" translate="yes" xml:space="preserve">
          <source>How Do I Convert Binary Data Into a Particular Encoding, Or Vice Versa?</source>
          <target state="translated">¿Cómo convierto datos binarios en una codificación particular,o viceversa?</target>
        </trans-unit>
        <trans-unit id="5ec153ad02980479ddc59f23ab37e27027e62588" translate="yes" xml:space="preserve">
          <source>How Do I Detect Data That's Not Valid In a Particular Encoding?</source>
          <target state="translated">¿Cómo detecto los datos que no son válidos en una codificación particular?</target>
        </trans-unit>
        <trans-unit id="83daa5c8b58e95efd16e89c69000aaf2de146549" translate="yes" xml:space="preserve">
          <source>How Do I Display Unicode? How Do I Input Unicode?</source>
          <target state="translated">¿Cómo puedo mostrar el Unicode? ¿Cómo introduzco el Unicode?</target>
        </trans-unit>
        <trans-unit id="eed7b35ef6f59f0cb6c635063802f8b69563cf7e" translate="yes" xml:space="preserve">
          <source>How Do I Find Out What Encoding a File Has?</source>
          <target state="translated">¿Cómo averiguo qué es lo que tiene la codificación de un archivo?</target>
        </trans-unit>
        <trans-unit id="87e4752c70fc96666a27cf0847bc95f48c8b5c9c" translate="yes" xml:space="preserve">
          <source>How Do I Know Whether My String Is In Unicode?</source>
          <target state="translated">¿Cómo sé si mi cuerda está en Unicode?</target>
        </trans-unit>
        <trans-unit id="9a4dab32f52f3d5fb8384770ca50058013424c08" translate="yes" xml:space="preserve">
          <source>How Do I Make My Scripts Work With Unicode?</source>
          <target state="translated">¿Cómo hago para que mis guiones funcionen con Unicode?</target>
        </trans-unit>
        <trans-unit id="aa967413382158f18536864c2c5f2d495ed0e167" translate="yes" xml:space="preserve">
          <source>How Does Unicode Work With Traditional Locales?</source>
          <target state="translated">¿Cómo funciona el Unicode con los locales tradicionales?</target>
        </trans-unit>
        <trans-unit id="ed7d6cb8e007f613e72e9f2c9f88a4738718ec79" translate="yes" xml:space="preserve">
          <source>How Lexical Warnings interact with &lt;b&gt;-w&lt;/b&gt;/&lt;code&gt;$^W&lt;/code&gt; :</source>
          <target state="translated">C&amp;oacute;mo interact&amp;uacute;an las advertencias l&amp;eacute;xicas con &lt;b&gt;-w&lt;/b&gt; / &lt;code&gt;$^W&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0ba774a79f5bdd71460b672473718c53cdc18568" translate="yes" xml:space="preserve">
          <source>How Lexical Warnings interact with &lt;b&gt;-w&lt;/b&gt;/&lt;code&gt;$^W&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d502798bd5bd5bfc80ae2ff245f8510eaa3465" translate="yes" xml:space="preserve">
          <source>How Perl Chooses an Operator Implementation</source>
          <target state="translated">Cómo Perl elige un operador Implementación</target>
        </trans-unit>
        <trans-unit id="9d0dbe99bf0e202fd46e73a61d85e7d37d314d99" translate="yes" xml:space="preserve">
          <source>How PerlIO_apply_layera fits in, where its docs, was it made public?</source>
          <target state="translated">¿Cómo encaja PerlIO_apply_layera,donde sus documentos,se hizo público?</target>
        </trans-unit>
        <trans-unit id="c8ce23a97419be4cb95d062b610a07bbe22ce84e" translate="yes" xml:space="preserve">
          <source>How Plugins work?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c739c2b8daeba650fc90008192e941caa8ca99" translate="yes" xml:space="preserve">
          <source>How SUPER is Resolved</source>
          <target state="translated">Cómo se resuelve el SUPER</target>
        </trans-unit>
        <trans-unit id="30ea041c36c78a4bf2e3a15655945d87e8d2b703" translate="yes" xml:space="preserve">
          <source>How To Write A Makefile.PL</source>
          <target state="translated">Cómo escribir un Makefile.PL</target>
        </trans-unit>
        <trans-unit id="4a252fc6f68b2a5fddacedeb60aa9691abebcc2a" translate="yes" xml:space="preserve">
          <source>How a piece of code actually goes about doing its job. Users of the code should not count on implementation details staying the same unless they are part of the published &lt;b&gt;interface&lt;/b&gt;.</source>
          <target state="translated">C&amp;oacute;mo un fragmento de c&amp;oacute;digo realmente hace su trabajo. Los usuarios del c&amp;oacute;digo no deben contar con que los detalles de la implementaci&amp;oacute;n permanezcan iguales a menos que sean parte de la &lt;b&gt;interfaz&lt;/b&gt; publicada .</target>
        </trans-unit>
        <trans-unit id="e2e38e1473acd589790c55670049e3a998855b25" translate="yes" xml:space="preserve">
          <source>How are you supposed to know what flavour of Make a Makefile has been generated for if you didn't specify a value explicitly? Search the generated Makefile for the definition of the MAKE variable, which is used to recursively invoke the Make utility. That will tell you what Make you're supposed to invoke the Makefile with.</source>
          <target state="translated">¿Cómo se supone que sabes para qué sabor de &quot;Make a Makefile&quot; se ha generado si no especificaste un valor explícitamente? Busca en el Makefile generado la definición de la variable MAKE,que se utiliza para invocar recursivamente la utilidad Make.Eso te dirá con qué Make se supone que debes invocar el Makefile.</target>
        </trans-unit>
        <trans-unit id="411ad64f6dc4be13b3049742bd05bd21505c6bc7" translate="yes" xml:space="preserve">
          <source>How big is it?</source>
          <target state="translated">¿Qué tan grande es?</target>
        </trans-unit>
        <trans-unit id="27c74f66aeb35e0636195d822a7e3464616e6fc2" translate="yes" xml:space="preserve">
          <source>How can I access a dynamic variable while a similarly named lexical is in scope?</source>
          <target state="translated">¿Cómo puedo acceder a una variable dinámica mientras que un léxico de nombre similar está en juego?</target>
        </trans-unit>
        <trans-unit id="a4335b4f09781554b24ada06ac33e99c54ce3d7c" translate="yes" xml:space="preserve">
          <source>How can I access or change N characters of a string?</source>
          <target state="translated">¿Cómo puedo acceder o cambiar N caracteres de una cadena?</target>
        </trans-unit>
        <trans-unit id="5371ca66bd4ba8690a33a1384214275dda640111" translate="yes" xml:space="preserve">
          <source>How can I always keep my hash sorted?</source>
          <target state="translated">¿Cómo puedo mantener siempre mi hachís en orden?</target>
        </trans-unit>
        <trans-unit id="8584960f36ac9f047e34a3eda935743347b5f7f6" translate="yes" xml:space="preserve">
          <source>How can I call backticks without shell processing?</source>
          <target state="translated">¿Cómo puedo llamar a los backticks sin el procesamiento de la cáscara?</target>
        </trans-unit>
        <trans-unit id="cd430257f97dbf507a96e7339aa72325a34a2ee9" translate="yes" xml:space="preserve">
          <source>How can I call my system's unique C functions from Perl?</source>
          <target state="translated">¿Cómo puedo llamar a las funciones C únicas de mi sistema desde Perl?</target>
        </trans-unit>
        <trans-unit id="90f43bbd8d5db22db1ec788113816dce3fba1fdc" translate="yes" xml:space="preserve">
          <source>How can I capture STDERR from an external command?</source>
          <target state="translated">¿Cómo puedo capturar el STDERR desde un comando externo?</target>
        </trans-unit>
        <trans-unit id="84907121b70e047be5c9daea9434199430d20e18" translate="yes" xml:space="preserve">
          <source>How can I catch accesses to undefined variables, functions, or methods?</source>
          <target state="translated">¿Cómo puedo conseguir accesos a variables,funciones o métodos no definidos?</target>
        </trans-unit>
        <trans-unit id="c73810cc9a224a5b0753f3ce02b7769672b7dc50" translate="yes" xml:space="preserve">
          <source>How can I change the permissions of a file on a remote server ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13761e1cadfb4e6d275a8cd44df7f322009226b" translate="yes" xml:space="preserve">
          <source>How can I check if a key exists in a multilevel hash?</source>
          <target state="translated">¿Cómo puedo comprobar si existe una clave en un hash multinivel?</target>
        </trans-unit>
        <trans-unit id="9501d5027299df90931400bb41c70210a1c7aacf" translate="yes" xml:space="preserve">
          <source>How can I comment out a large block of Perl code?</source>
          <target state="translated">¿Cómo puedo comentar un gran bloque de código Perl?</target>
        </trans-unit>
        <trans-unit id="639138b8959cf833940b74db28e00ac3d078eb9d" translate="yes" xml:space="preserve">
          <source>How can I compare two dates and find the difference?</source>
          <target state="translated">¿Cómo puedo comparar dos fechas y encontrar la diferencia?</target>
        </trans-unit>
        <trans-unit id="92731d0a16ed8941afe35ab6fae1c71e5ff73d63" translate="yes" xml:space="preserve">
          <source>How can I compile my Perl program into byte code or C?</source>
          <target state="translated">¿Cómo puedo compilar mi programa Perl en código de bytes o C?</target>
        </trans-unit>
        <trans-unit id="f297bf1c9610312e098c5eff2eb10783e881e05c" translate="yes" xml:space="preserve">
          <source>How can I convert my shell script to perl?</source>
          <target state="translated">¿Cómo puedo convertir mi script de shell en perl?</target>
        </trans-unit>
        <trans-unit id="fc9934bcfd8649f3922c04fc5693703b33981e29" translate="yes" xml:space="preserve">
          <source>How can I convince others to use Perl?</source>
          <target state="translated">¿Cómo puedo convencer a otros de que usen Perl?</target>
        </trans-unit>
        <trans-unit id="61781e6bf9642bee00811fb1e34ef7698e18ae20" translate="yes" xml:space="preserve">
          <source>How can I copy a file?</source>
          <target state="translated">¿Cómo puedo copiar un archivo?</target>
        </trans-unit>
        <trans-unit id="62ee42141b7c95a311d0f8cb97c8e383832868b4" translate="yes" xml:space="preserve">
          <source>How can I count the number of occurrences of a substring within a string?</source>
          <target state="translated">¿Cómo puedo contar el número de ocurrencias de una subcadena dentro de una cadena?</target>
        </trans-unit>
        <trans-unit id="e426c21b9ed422b544529af4c9449106fd8175dd" translate="yes" xml:space="preserve">
          <source>How can I debug my scripts that use Net::* modules ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aa6516dbefab9dd5eb5222f4701f9c5f218b7c" translate="yes" xml:space="preserve">
          <source>How can I determine if a string is a text string or a binary string?</source>
          <target state="translated">¿Cómo puedo determinar si una cadena es de texto o binaria?</target>
        </trans-unit>
        <trans-unit id="218779f6e2b4819e8fa691d46344a18cc62cfb76" translate="yes" xml:space="preserve">
          <source>How can I do RPC in Perl?</source>
          <target state="translated">¿Cómo puedo hacer RPC en Perl?</target>
        </trans-unit>
        <trans-unit id="67ea1bb995fcd1fc57c8e9b92a095f41d9b7834f" translate="yes" xml:space="preserve">
          <source>How can I do an atexit() or setjmp()/longjmp()? (Exception handling)</source>
          <target state="translated">¿Cómo puedo hacer un atexit()o setjmp()/longjmp()? (Manejo de excepciones)</target>
        </trans-unit>
        <trans-unit id="5af190bbb735548d1facf32f768401f6d294971f" translate="yes" xml:space="preserve">
          <source>How can I do approximate matching?</source>
          <target state="translated">¿Cómo puedo hacer una comparación aproximada?</target>
        </trans-unit>
        <trans-unit id="570f18a5d24dc2e398fe91082824106830a64146" translate="yes" xml:space="preserve">
          <source>How can I expand variables in text strings?</source>
          <target state="translated">¿Cómo puedo expandir las variables en las cadenas de texto?</target>
        </trans-unit>
        <trans-unit id="79199189d2f681d40463922bceb5338164a11bf3" translate="yes" xml:space="preserve">
          <source>How can I find out my current or calling package?</source>
          <target state="translated">¿Cómo puedo averiguar mi paquete actual o de llamadas?</target>
        </trans-unit>
        <trans-unit id="2174489b130a993ef91515d9a1c4f01f1df7d31d" translate="yes" xml:space="preserve">
          <source>How can I find the Julian Day?</source>
          <target state="translated">¿Cómo puedo encontrar el Día de Julián?</target>
        </trans-unit>
        <trans-unit id="b9735d79cbde5c76c3fddd9a7f2ea2d91841d1f1" translate="yes" xml:space="preserve">
          <source>How can I free an array or hash so my program shrinks?</source>
          <target state="translated">¿Cómo puedo liberar un arreglo o hash para que mi programa se reduzca?</target>
        </trans-unit>
        <trans-unit id="a65a81dcfe85675764c8fa953a5501143a7a4d4c" translate="yes" xml:space="preserve">
          <source>How can I get #!perl to work on [MS-DOS,NT,...]?</source>
          <target state="translated">¿Cómo puedo hacer que #!perl trabaje en [MS-DOS,NT,...]?</target>
        </trans-unit>
        <trans-unit id="bf6b38eb1c743c27901f724e241bc103f6e22f1a" translate="yes" xml:space="preserve">
          <source>How can I get &lt;code&gt;#!perl&lt;/code&gt; to work on [MS-DOS,NT,...]?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedo hacer que &lt;code&gt;#!perl&lt;/code&gt; funcione en [MS-DOS, NT, ...]?</target>
        </trans-unit>
        <trans-unit id="402e6fe7ce516fa4af09165ec04abd0ecfff56b0" translate="yes" xml:space="preserve">
          <source>How can I get a binary version of Perl?</source>
          <target state="translated">¿Cómo puedo conseguir una versión binaria de Perl?</target>
        </trans-unit>
        <trans-unit id="70a068e99378aace39b694de85966e9dee8710b7" translate="yes" xml:space="preserve">
          <source>How can I get the modification time of a file on a remote FTP server ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da1a103ebf1acd1fb34a8083f53578de0506ba8" translate="yes" xml:space="preserve">
          <source>How can I get the size of a file on a remote FTP server ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01d20dc05214c47d4b244f669680dc5511e26c5" translate="yes" xml:space="preserve">
          <source>How can I get the unique keys from two hashes?</source>
          <target state="translated">¿Cómo puedo obtener las llaves únicas de dos hachas?</target>
        </trans-unit>
        <trans-unit id="c41c416bf1bb0f25b4ae1ae9fd568032d02685fd" translate="yes" xml:space="preserve">
          <source>How can I hide the source for my Perl program?</source>
          <target state="translated">¿Cómo puedo ocultar la fuente de mi programa Perl?</target>
        </trans-unit>
        <trans-unit id="6c1e3d2428ca43719e62fc8b4685854b671a4efe" translate="yes" xml:space="preserve">
          <source>How can I hope to use regular expressions without creating illegible and unmaintainable code?</source>
          <target state="translated">¿Cómo puedo esperar usar expresiones regulares sin crear un código ilegible e inalterable?</target>
        </trans-unit>
        <trans-unit id="b41e3d8caca6f525dc73482358563647f9033bf1" translate="yes" xml:space="preserve">
          <source>How can I know how many entries are in a hash?</source>
          <target state="translated">¿Cómo puedo saber cuántas entradas hay en un hash?</target>
        </trans-unit>
        <trans-unit id="91090b21439190b378705149c5300b111d7f99b3" translate="yes" xml:space="preserve">
          <source>How can I lock a file?</source>
          <target state="translated">¿Cómo puedo bloquear un archivo?</target>
        </trans-unit>
        <trans-unit id="2b525e6fbe8d4f65916593a6d6f3bcc00b55e5ee" translate="yes" xml:space="preserve">
          <source>How can I make &lt;code&gt;\w&lt;/code&gt; match national character sets?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedo hacer coincidir &lt;code&gt;\w&lt;/code&gt; con los conjuntos de caracteres nacionales?</target>
        </trans-unit>
        <trans-unit id="493e8171097525007801a396579dca3fc0ae7646" translate="yes" xml:space="preserve">
          <source>How can I make \w match national character sets?</source>
          <target state="translated">¿Cómo puedo hacer que coincidan los conjuntos de caracteres nacionales?</target>
        </trans-unit>
        <trans-unit id="8efd8bb825816036c83b0bc4f4bc86a0e0087ba8" translate="yes" xml:space="preserve">
          <source>How can I make a filehandle local to a subroutine? How do I pass filehandles between subroutines? How do I make an array of filehandles?</source>
          <target state="translated">¿Cómo puedo hacer un filehandle local a una subrutina? ¿Cómo paso filehandles entre subrutinas? ¿Cómo hago un array de filehandles?</target>
        </trans-unit>
        <trans-unit id="225121f6ad8826944237905943573b1a1ad7146a" translate="yes" xml:space="preserve">
          <source>How can I make my CGI script more efficient?</source>
          <target state="translated">¿Cómo puedo hacer que mi script CGI sea más eficiente?</target>
        </trans-unit>
        <trans-unit id="aa449d7fc61d0c5f65c319dcdaf3c309d5a861d5" translate="yes" xml:space="preserve">
          <source>How can I make my Perl program run faster?</source>
          <target state="translated">¿Cómo puedo hacer que mi programa Perl funcione más rápido?</target>
        </trans-unit>
        <trans-unit id="da8314c9a027c83b1de3d8a02639e8b7fd488456" translate="yes" xml:space="preserve">
          <source>How can I make my Perl program take less memory?</source>
          <target state="translated">¿Cómo puedo hacer que mi programa Perl tome menos memoria?</target>
        </trans-unit>
        <trans-unit id="ab79906bd54ede65c9167982f83df39910ca41eb" translate="yes" xml:space="preserve">
          <source>How can I make my hash remember the order I put elements into it?</source>
          <target state="translated">¿Cómo puedo hacer que mi hachís recuerde el orden en que puse los elementos en él?</target>
        </trans-unit>
        <trans-unit id="eff3ee7a75a95b7dc6ebbcab6cdc87f62eaed0b6" translate="yes" xml:space="preserve">
          <source>How can I make the Perl equivalent of a C structure/C++ class/hash or array of hashes or arrays?</source>
          <target state="translated">¿Cómo puedo hacer el equivalente en Perl de una estructura C/clase C++/hash o conjunto de hashes o matrices?</target>
        </trans-unit>
        <trans-unit id="313eaa4ceba4000008228fa89da4dfffac4883cb" translate="yes" xml:space="preserve">
          <source>How can I manipulate fixed-record-length files?</source>
          <target state="translated">¿Cómo puedo manipular archivos de longitud de grabación fija?</target>
        </trans-unit>
        <trans-unit id="e9c4cf85e44267039f73e90a4005aa7e0fbde93f" translate="yes" xml:space="preserve">
          <source>How can I match a locale-smart version of /[a-zA-Z]/?</source>
          <target state="translated">¿Cómo puedo hacer coincidir una versión local inteligente de /[a-zA-Z]/?</target>
        </trans-unit>
        <trans-unit id="a09d0b29b89d8c572780ffdaa75b2f1b8df250c7" translate="yes" xml:space="preserve">
          <source>How can I match a locale-smart version of &lt;code&gt;/[a-zA-Z]/&lt;/code&gt; ?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedo hacer coincidir una versi&amp;oacute;n de configuraci&amp;oacute;n regional inteligente de &lt;code&gt;/[a-zA-Z]/&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="46f9f4e17442c3dcf3475bc074cd33f2cbbe23ef" translate="yes" xml:space="preserve">
          <source>How can I match a locale-smart version of &lt;code&gt;/[a-zA-Z]/&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc211b194ec96e0a9f39c2fc3c9760c5684f182" translate="yes" xml:space="preserve">
          <source>How can I match strings with multibyte characters?</source>
          <target state="translated">¿Cómo puedo hacer coincidir cadenas con caracteres multibyte?</target>
        </trans-unit>
        <trans-unit id="77dcf6b0c4c91ea96666741c5ba2af5b17f44eab" translate="yes" xml:space="preserve">
          <source>How can I measure time under a second?</source>
          <target state="translated">¿Cómo puedo medir el tiempo en menos de un segundo?</target>
        </trans-unit>
        <trans-unit id="fc57917cedb17fe47cbb1a1fb4694f4b806c4a38" translate="yes" xml:space="preserve">
          <source>How can I open a file named with a leading &quot;&amp;gt;&quot; or trailing blanks?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db0de0b51e68209069c4bcced248be111e64bf1" translate="yes" xml:space="preserve">
          <source>How can I open a file with a leading &quot;&amp;gt;&quot; or trailing blanks?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedo abrir un archivo con un &quot;&amp;gt;&quot; al principio o espacios en blanco al final?</target>
        </trans-unit>
        <trans-unit id="2e27cd7875437a1d5b58c674aa20e1a1f445ed2f" translate="yes" xml:space="preserve">
          <source>How can I open a filehandle to a string?</source>
          <target state="translated">¿Cómo puedo abrir un filehandle a una cuerda?</target>
        </trans-unit>
        <trans-unit id="66bdbd7c5e5fc4cc3882f787c23fdf9783890787" translate="yes" xml:space="preserve">
          <source>How can I open a pipe both to and from a command?</source>
          <target state="translated">¿Cómo puedo abrir una tubería desde y hacia un comando?</target>
        </trans-unit>
        <trans-unit id="01291b9947177ee6a9867efb46ea11fb8dc4a814" translate="yes" xml:space="preserve">
          <source>How can I organize tests into subdirectories and have them run?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc95647ff06623df9f3fe7b151e5174f6d8d433a" translate="yes" xml:space="preserve">
          <source>How can I output Roman numerals?</source>
          <target state="translated">¿Cómo puedo emitir números romanos?</target>
        </trans-unit>
        <trans-unit id="e415a2ec1d5bacc294697e39127dad698ce08519" translate="yes" xml:space="preserve">
          <source>How can I output my numbers with commas added?</source>
          <target state="translated">¿Cómo puedo imprimir mis números con comas añadidas?</target>
        </trans-unit>
        <trans-unit id="71d9df292afc1f28ab8d43537f9b2fc5e1d5e39d" translate="yes" xml:space="preserve">
          <source>How can I pass/return a {Function, FileHandle, Array, Hash, Method, Regex}?</source>
          <target state="translated">¿Cómo puedo pasar/devolver una {Función,FileHandle,Array,Hash,Method,Regex}?</target>
        </trans-unit>
        <trans-unit id="607da88807131fb0d75ed3b744e20b136c3c6945" translate="yes" xml:space="preserve">
          <source>How can I prevent addition of unwanted keys into a hash?</source>
          <target state="translated">¿Cómo puedo evitar que se añadan llaves no deseadas a un hachís?</target>
        </trans-unit>
        <trans-unit id="132c95be002620b77b84199839203d3bbecd265f" translate="yes" xml:space="preserve">
          <source>How can I print out a word-frequency or line-frequency summary?</source>
          <target state="translated">¿Cómo puedo imprimir un resumen de frecuencia de palabras o de líneas?</target>
        </trans-unit>
        <trans-unit id="9b8afbc5c9adfffb10eaf9f9e73e6a5dd9a33727" translate="yes" xml:space="preserve">
          <source>How can I pull out lines between two patterns that are themselves on different lines?</source>
          <target state="translated">¿Cómo puedo sacar líneas entre dos patrones que a su vez están en líneas diferentes?</target>
        </trans-unit>
        <trans-unit id="aa09f1e8ecf9751a8e601635407b1b85b484a991" translate="yes" xml:space="preserve">
          <source>How can I quote a variable to use in a regex?</source>
          <target state="translated">¿Cómo puedo citar una variable para usarla en un regex?</target>
        </trans-unit>
        <trans-unit id="5048ee292d54dc738c8b2e4a4e9d40ed88661804" translate="yes" xml:space="preserve">
          <source>How can I read a single character from a file? From the keyboard?</source>
          <target state="translated">¿Cómo puedo leer un solo carácter de un archivo? ¿Desde el teclado?</target>
        </trans-unit>
        <trans-unit id="bd4bea532194d27e8f4c0167b3ea139fc3e738e8" translate="yes" xml:space="preserve">
          <source>How can I read in a file by paragraphs?</source>
          <target state="translated">¿Cómo puedo leer en un archivo por párrafos?</target>
        </trans-unit>
        <trans-unit id="d86b23e0a7033694a41285ad01891788240ba487" translate="yes" xml:space="preserve">
          <source>How can I read in an entire file all at once?</source>
          <target state="translated">¿Cómo puedo leer un archivo entero de una sola vez?</target>
        </trans-unit>
        <trans-unit id="be068faf9cf22c97ef84fb173f7722fe689af084" translate="yes" xml:space="preserve">
          <source>How can I recognise a UTF-8 string?</source>
          <target state="translated">¿Cómo puedo reconocer una cadena de UTF-8?</target>
        </trans-unit>
        <trans-unit id="28052c84845f30a6d5db733cf8047009c5a791db" translate="yes" xml:space="preserve">
          <source>How can I reliably rename a file?</source>
          <target state="translated">¿Cómo puedo renombrar un archivo de forma fiable?</target>
        </trans-unit>
        <trans-unit id="8a768c48e2e0b2fc34f88cb4e753c4bb5f8f926e" translate="yes" xml:space="preserve">
          <source>How can I remove duplicate elements from a list or array?</source>
          <target state="translated">¿Cómo puedo eliminar los elementos duplicados de una lista o matriz?</target>
        </trans-unit>
        <trans-unit id="daff1cd30b2b776eb20a1e8ba332328966a941c8" translate="yes" xml:space="preserve">
          <source>How can I set up a footer format to be used with write()?</source>
          <target state="translated">¿Cómo puedo configurar un formato de pie de página para ser usado con write()?</target>
        </trans-unit>
        <trans-unit id="e1d8eb9609efe77a17044341626f5d092fb4352d" translate="yes" xml:space="preserve">
          <source>How can I sleep() or alarm() for under a second?</source>
          <target state="translated">¿Cómo puedo dormir o alarmarme por menos de un segundo?</target>
        </trans-unit>
        <trans-unit id="2e588f9010bcd10392f7edf040ae56a945189e99" translate="yes" xml:space="preserve">
          <source>How can I split a [character]-delimited string except when inside [character]?</source>
          <target state="translated">¿Cómo puedo dividir una cadena delimitada por [personaje]excepto cuando está dentro de [personaje]?</target>
        </trans-unit>
        <trans-unit id="043a45581bbf861e01b6d8df458229f88cd7fe73" translate="yes" xml:space="preserve">
          <source>How can I store a multidimensional array in a DBM file?</source>
          <target state="translated">¿Cómo puedo almacenar una matriz multidimensional en un archivo DBM?</target>
        </trans-unit>
        <trans-unit id="3e3f15708830cd90fcc2e8ed11e6fc04c0345d66" translate="yes" xml:space="preserve">
          <source>How can I take a string and turn it into epoch seconds?</source>
          <target state="translated">¿Cómo puedo tomar una cuerda y convertirla en segundos de época?</target>
        </trans-unit>
        <trans-unit id="279887cb82cd1ebda6c6c1a0b09fc6f0014cb878" translate="yes" xml:space="preserve">
          <source>How can I tell if a variable is tainted?</source>
          <target state="translated">¿Cómo puedo saber si una variable está contaminada?</target>
        </trans-unit>
        <trans-unit id="58516c6da782669b8d9c7cfc7d02262b3e4bb1bb" translate="yes" xml:space="preserve">
          <source>How can I tell whether a certain element is contained in a list or array?</source>
          <target state="translated">¿Cómo puedo saber si un determinado elemento está contenido en una lista o matriz?</target>
        </trans-unit>
        <trans-unit id="a5d5b57593f0038532f9a469856b028182200632" translate="yes" xml:space="preserve">
          <source>How can I tell whether my encoding fully supports PerlIO ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81aaf6c4723167313d15ab1c5f7e5b530f8557ce" translate="yes" xml:space="preserve">
          <source>How can I tell whether there's a character waiting on a filehandle?</source>
          <target state="translated">¿Cómo puedo saber si hay un personaje esperando en un archivador?</target>
        </trans-unit>
        <trans-unit id="b2fcf8739ca319f39af63e3ce5170d91f44f77f2" translate="yes" xml:space="preserve">
          <source>How can I translate tildes (~) in a filename?</source>
          <target state="translated">¿Cómo puedo traducir tildes (~)en un nombre de archivo?</target>
        </trans-unit>
        <trans-unit id="881f014c19a83fce123198524d0af95f5abeddf7" translate="yes" xml:space="preserve">
          <source>How can I use Perl interactively?</source>
          <target state="translated">¿Cómo puedo usar Perl de forma interactiva?</target>
        </trans-unit>
        <trans-unit id="4822820e0cebd48f928eec2f020bfeb1c6c58fcc" translate="yes" xml:space="preserve">
          <source>How can I use Perl's -i option from within a program?</source>
          <target state="translated">¿Cómo puedo usar la opción -i de Perl desde un programa?</target>
        </trans-unit>
        <trans-unit id="b59721a4c76a7fca29f80e903b0f2dded9b41579" translate="yes" xml:space="preserve">
          <source>How can I use Perl's &lt;code&gt;-i&lt;/code&gt; option from within a program?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedo utilizar la opci&amp;oacute;n &lt;code&gt;-i&lt;/code&gt; de Perl desde un programa?</target>
        </trans-unit>
        <trans-unit id="a0b830d488369e5b57f08961ae54b6541e391fcb" translate="yes" xml:space="preserve">
          <source>How can I use a filehandle indirectly?</source>
          <target state="translated">¿Cómo puedo usar un filehandle indirectamente?</target>
        </trans-unit>
        <trans-unit id="2954afefc188233ca0982e40813f35aedafa9c02" translate="yes" xml:space="preserve">
          <source>How can I use a reference as a hash key?</source>
          <target state="translated">¿Cómo puedo usar una referencia como una llave hash?</target>
        </trans-unit>
        <trans-unit id="1cd3f90234d9f2d28d7f7859571cd8142dbcb6f4" translate="yes" xml:space="preserve">
          <source>How can I use a variable as a variable name?</source>
          <target state="translated">¿Cómo puedo usar una variable como nombre de variable?</target>
        </trans-unit>
        <trans-unit id="0c905d4e5eee64ffc80c2808116d673741258304" translate="yes" xml:space="preserve">
          <source>How can I use curses with Perl?</source>
          <target state="translated">¿Cómo puedo usar maldiciones con Perl?</target>
        </trans-unit>
        <trans-unit id="50c6bbc4fb82176bf9d1327a643a764fb7e991f8" translate="yes" xml:space="preserve">
          <source>How can I write a GUI (X, Tk, Gtk, etc.) in Perl?</source>
          <target state="translated">¿Cómo puedo escribir un GUI (X,Tk,Gtk,etc.)en Perl?</target>
        </trans-unit>
        <trans-unit id="81e8482ca19f1c03f3246a06ec608fbebf4e5f7c" translate="yes" xml:space="preserve">
          <source>How can I write expect in Perl?</source>
          <target state="translated">¿Cómo puedo escribir esperar en Perl?</target>
        </trans-unit>
        <trans-unit id="1ed0197c720cb0aff97775cc40d6071cc2ec1d85" translate="yes" xml:space="preserve">
          <source>How can I write() into a string?</source>
          <target state="translated">¿Cómo puedo escribir en una cadena?</target>
        </trans-unit>
        <trans-unit id="ebe948a96ce8ed3fcef25d460b5826d6e46a03f1" translate="yes" xml:space="preserve">
          <source>How can you figure out what to add? Assuming your Perl is post-5.001, execute a &lt;code&gt;perl -V&lt;/code&gt; command and pay special attention to the &quot;cc&quot; and &quot;ccflags&quot; information.</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedes averiguar qu&amp;eacute; agregar? Suponiendo que su Perl es posterior a 5.001, ejecute un comando &lt;code&gt;perl -V&lt;/code&gt; y preste especial atenci&amp;oacute;n a la informaci&amp;oacute;n &quot;cc&quot; y &quot;ccflags&quot;.</target>
        </trans-unit>
        <trans-unit id="7839a80cf8d473225aea7a22d12034d28e88fd87" translate="yes" xml:space="preserve">
          <source>How can you tell the difference between a non-zero status that is the result of a VMS native error status or an encoded Unix status? You can not unless you look at the ${^CHILD_ERROR_NATIVE} value. The ${^CHILD_ERROR_NATIVE} value returns the actual VMS status value and check the severity bits. If the severity bits are equal to 1, then if the numeric value for &lt;code&gt;$?&lt;/code&gt; is between 2 and 255 or 0, then &lt;code&gt;$?&lt;/code&gt; accurately reflects a value passed back from a Unix application. If &lt;code&gt;$?&lt;/code&gt; is 1, and the severity bits indicate a VMS error (2), then &lt;code&gt;$?&lt;/code&gt; is from a Unix application exit value.</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puede saber la diferencia entre un estado distinto de cero que es el resultado de un estado de error nativo de VMS o un estado Unix codificado? No puedes a menos que mires el valor $ {^ CHILD_ERROR_NATIVE}. El valor $ {^ CHILD_ERROR_NATIVE} devuelve el valor de estado real de VMS y verifica los bits de gravedad. Si los bits de gravedad son iguales a 1, entonces si el valor num&amp;eacute;rico de &lt;code&gt;$?&lt;/code&gt; est&amp;aacute; entre 2 y 255 o 0, entonces &lt;code&gt;$?&lt;/code&gt; refleja con precisi&amp;oacute;n un valor devuelto desde una aplicaci&amp;oacute;n Unix. Si &lt;code&gt;$?&lt;/code&gt; es 1 y los bits de gravedad indican un error de VMS (2), luego &lt;code&gt;$?&lt;/code&gt; es de un valor de salida de la aplicaci&amp;oacute;n Unix.</target>
        </trans-unit>
        <trans-unit id="10e8b70e261dbd1684433d0e38a377a1e6c6f1bf" translate="yes" xml:space="preserve">
          <source>How come exec() doesn't return?</source>
          <target state="translated">¿Cómo es que el ejecutivo no regresa?</target>
        </trans-unit>
        <trans-unit id="642d4ca1dadf5e67b2382dbc957dee2d26101ca3" translate="yes" xml:space="preserve">
          <source>How come when I open a file read-write it wipes it out?</source>
          <target state="translated">¿Cómo es que cuando abro un archivo de lectura-escritura lo borra?</target>
        </trans-unit>
        <trans-unit id="120ce3c4d0d569cc353775c742050f216df78c10" translate="yes" xml:space="preserve">
          <source>How come? Because once upon a time, the argument to push() had to be a real array, not just a reference to one. That's no longer true. In fact, the line marked &quot;implicit deref&quot; above works just fine--in this instance--to do what the one that says explicit deref did.</source>
          <target state="translated">¿Cómo es eso? Porque hace tiempo,el argumento para empujar tenía que ser un arreglo real,no sólo una referencia a uno.Eso ya no es cierto.De hecho,la línea marcada como &quot;implicit deref&quot; arriba funciona muy bien,en este caso,para hacer lo que hizo el que dice &quot;explicit deref&quot;.</target>
        </trans-unit>
        <trans-unit id="1a8c1eab260cee26d9dd30d8d1f6ad51a65f4aa2" translate="yes" xml:space="preserve">
          <source>How deeply nested the event is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e345122aff9e67ed09307eafafa850438366608" translate="yes" xml:space="preserve">
          <source>How deeply nested the hub was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a52c2fce0f47a3f02d91b4d141841b4a0759aa" translate="yes" xml:space="preserve">
          <source>How do I access .tar.Z files?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cd8e41b71c05362e2e05b8fea674b5b9428071" translate="yes" xml:space="preserve">
          <source>How do I add a directory to my include path (@INC) at runtime?</source>
          <target state="translated">¿Cómo añado un directorio a mi ruta de inclusión (@INC)en tiempo de ejecución?</target>
        </trans-unit>
        <trans-unit id="a8c4b858302cc359dbd26e7a94330185357e2027" translate="yes" xml:space="preserve">
          <source>How do I add the directory my program lives in to the module/library search path?</source>
          <target state="translated">¿Cómo añado el directorio en el que vive mi programa a la ruta de búsqueda del módulo/biblioteca?</target>
        </trans-unit>
        <trans-unit id="3767a07fd4ca1c10dc3a53f806060f350ef02ac9" translate="yes" xml:space="preserve">
          <source>How do I adopt or take over a module already on CPAN?</source>
          <target state="translated">¿Cómo adopto o me hago cargo de un módulo que ya está en el CPAN?</target>
        </trans-unit>
        <trans-unit id="2b820f99468b1968d2885fc455211ce9aab00b68" translate="yes" xml:space="preserve">
          <source>How do I ask the user for a password?</source>
          <target state="translated">¿Cómo le pido al usuario una contraseña?</target>
        </trans-unit>
        <trans-unit id="203a77501794721d243b497cab58f25f10122bf4" translate="yes" xml:space="preserve">
          <source>How do I automate an HTML form submission?</source>
          <target state="translated">¿Cómo puedo automatizar el envío de un formulario HTML?</target>
        </trans-unit>
        <trans-unit id="b9487e21fcb84b27b564a1a52da3c445074087f9" translate="yes" xml:space="preserve">
          <source>How do I avoid zombies on a Unix system?</source>
          <target state="translated">¿Cómo evito los zombis en un sistema Unix?</target>
        </trans-unit>
        <trans-unit id="f3a92921961d16b06b6e90c94b5e844a5163c8ba" translate="yes" xml:space="preserve">
          <source>How do I capitalize all the words on one line?</source>
          <target state="translated">¿Cómo pongo en mayúsculas todas las palabras de una línea?</target>
        </trans-unit>
        <trans-unit id="4bb5fa72780a70fbcd38ea05720abb4024270f79" translate="yes" xml:space="preserve">
          <source>How do I change the Nth occurrence of something?</source>
          <target state="translated">¿Cómo cambio la enésima ocurrencia de algo?</target>
        </trans-unit>
        <trans-unit id="bbe71d73de3e4f641a5e48b9cabe7daee1df1bb9" translate="yes" xml:space="preserve">
          <source>How do I change, delete, or insert a line in a file, or append to the beginning of a file?</source>
          <target state="translated">¿Cómo cambio,borro o inserto una línea en un archivo,o añado al principio de un archivo?</target>
        </trans-unit>
        <trans-unit id="26ebac281176cc167fc28682837fc8035f2df7f9" translate="yes" xml:space="preserve">
          <source>How do I check a valid mail address?</source>
          <target state="translated">¿Cómo puedo comprobar una dirección de correo válida?</target>
        </trans-unit>
        <trans-unit id="a6d4bc02f449734d8d38a8c79be0738d1807657b" translate="yes" xml:space="preserve">
          <source>How do I check whether input is ready on the keyboard?</source>
          <target state="translated">¿Cómo puedo comprobar si la entrada está lista en el teclado?</target>
        </trans-unit>
        <trans-unit id="e9d5289c1b2381a4bfc799f6d79379a45148a056" translate="yes" xml:space="preserve">
          <source>How do I clear a package?</source>
          <target state="translated">¿Cómo puedo limpiar un paquete?</target>
        </trans-unit>
        <trans-unit id="da64d3ab23e8dfda8ada8eca869e3e4304053e10" translate="yes" xml:space="preserve">
          <source>How do I clear the screen?</source>
          <target state="translated">¿Cómo despejo la pantalla?</target>
        </trans-unit>
        <trans-unit id="dc7b6aff1b04d81838ccfc000e127a9b49e09b59" translate="yes" xml:space="preserve">
          <source>How do I close a file descriptor by number?</source>
          <target state="translated">¿Cómo cierro un descriptor de archivo por número?</target>
        </trans-unit>
        <trans-unit id="2102c2d58d3c697659db6f147f9c7750ead5e836" translate="yes" xml:space="preserve">
          <source>How do I close a process's filehandle without waiting for it to complete?</source>
          <target state="translated">¿Cómo cierro el expediente de un proceso sin esperar a que se complete?</target>
        </trans-unit>
        <trans-unit id="82c4851509fc2188559dfc3bbd26e54406e86a76" translate="yes" xml:space="preserve">
          <source>How do I compare strings?</source>
          <target state="translated">¿Cómo comparo las cuerdas?</target>
        </trans-unit>
        <trans-unit id="a5014833338499c76ba684cef2ad05a8939c7509" translate="yes" xml:space="preserve">
          <source>How do I compute the difference of two arrays? How do I compute the intersection of two arrays?</source>
          <target state="translated">¿Cómo calculo la diferencia de dos matrices? ¿Cómo calculo la intersección de dos matrices?</target>
        </trans-unit>
        <trans-unit id="28baf17ec2f9a6ff5d6d17753e8bf70e57ef541a" translate="yes" xml:space="preserve">
          <source>How do I convert a string to UTF-8?</source>
          <target state="translated">¿Cómo convierto una cadena a UTF-8?</target>
        </trans-unit>
        <trans-unit id="a1ff2698b449bb489c981be9b3dd682dc2dd11e3" translate="yes" xml:space="preserve">
          <source>How do I convert between numeric representations/bases/radixes?</source>
          <target state="translated">¿Cómo puedo convertir entre representaciones numéricas/bases/radios?</target>
        </trans-unit>
        <trans-unit id="0506850f7d31bd4782eb7c2ff13183ae7d6e27bb" translate="yes" xml:space="preserve">
          <source>How do I convert from binary to decimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6763571be4b24365fdbf47562a891c2c2a4061df" translate="yes" xml:space="preserve">
          <source>How do I convert from decimal to binary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135991f8dae083c523ec58906bfcb69cccb0578d" translate="yes" xml:space="preserve">
          <source>How do I convert from decimal to hexadecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fe51b125b1634217406cabccf1c4ca07f98c99" translate="yes" xml:space="preserve">
          <source>How do I convert from decimal to octal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e154b3973b3e38c40dce2887c701eeb759ba7d9" translate="yes" xml:space="preserve">
          <source>How do I convert from encoding FOO to encoding BAR?</source>
          <target state="translated">¿Cómo paso de la codificación FOO a la codificación BAR?</target>
        </trans-unit>
        <trans-unit id="4b920c4f62d053fb6ad8f68f4bc740e16585148f" translate="yes" xml:space="preserve">
          <source>How do I convert from octal to decimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8274dd7834392a793f979a76735c021fd05ed705" translate="yes" xml:space="preserve">
          <source>How do I convert hexadecimal into decimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9aa83752cb5484c41a1a794b8c3e92b85b90232" translate="yes" xml:space="preserve">
          <source>How do I copy an entire directory?</source>
          <target state="translated">¿Cómo puedo copiar un directorio entero?</target>
        </trans-unit>
        <trans-unit id="878e0980aa72aa1b56f3382c08eb0ae977818037" translate="yes" xml:space="preserve">
          <source>How do I count the number of lines in a file?</source>
          <target state="translated">¿Cómo cuento el número de líneas de un archivo?</target>
        </trans-unit>
        <trans-unit id="86a1974c296e30057e2194a7ef2242b7c1cfd98c" translate="yes" xml:space="preserve">
          <source>How do I create a Module::Build based Build.PL derived from an ExtUtils::MakeMaker focused Makefile.PL?</source>
          <target state="translated">¿Cómo creo un Módulo::Build basado en Build.PL derivado de un ExtUtils::MakeMaker enfocado en Makefile.PL?</target>
        </trans-unit>
        <trans-unit id="aa6bdbe546fadef34a6ec8c386dc99a9b330832e" translate="yes" xml:space="preserve">
          <source>How do I create a class?</source>
          <target state="translated">¿Cómo creo una clase?</target>
        </trans-unit>
        <trans-unit id="4d74113d708c10f061b26ff7fcdab35341dbf82e" translate="yes" xml:space="preserve">
          <source>How do I create a module?</source>
          <target state="translated">¿Cómo creo un módulo?</target>
        </trans-unit>
        <trans-unit id="236c38bf7065e57bd631c8a83a8f5bfc130478e7" translate="yes" xml:space="preserve">
          <source>How do I create a static variable?</source>
          <target state="translated">¿Cómo creo una variable estática?</target>
        </trans-unit>
        <trans-unit id="b74b37fe4636da83763c3e9df557c6184ae8c0f0" translate="yes" xml:space="preserve">
          <source>How do I create a switch or case statement?</source>
          <target state="translated">¿Cómo creo una declaración de cambio o de caso?</target>
        </trans-unit>
        <trans-unit id="87e0957c61f867da042ce74af89ed18af7f653b6" translate="yes" xml:space="preserve">
          <source>How do I cross-reference my Perl programs?</source>
          <target state="translated">¿Cómo cruzo las referencias de mis programas Perl?</target>
        </trans-unit>
        <trans-unit id="70f54b8026aba3fe0b07c960855d5b7aab7bb809" translate="yes" xml:space="preserve">
          <source>How do I debug my Perl programs?</source>
          <target state="translated">¿Cómo puedo depurar mis programas Perl?</target>
        </trans-unit>
        <trans-unit id="97378d9d3fe8991aaac89412355467232d0a4c27" translate="yes" xml:space="preserve">
          <source>How do I declare/create a structure?</source>
          <target state="translated">¿Cómo declaro/creo una estructura?</target>
        </trans-unit>
        <trans-unit id="2f51e7bb07a2328659ee4f97c52bb6f158f54842" translate="yes" xml:space="preserve">
          <source>How do I decode a MIME/BASE64 string?</source>
          <target state="translated">¿Cómo decodifico una cadena MIME/BASE64?</target>
        </trans-unit>
        <trans-unit id="2cd19e271c87d62d106f8fec30b522eacf831c74" translate="yes" xml:space="preserve">
          <source>How do I decode encrypted password files?</source>
          <target state="translated">¿Cómo decodifico los archivos de contraseñas cifradas?</target>
        </trans-unit>
        <trans-unit id="23d494744b67cf68faa6ba521e0dbfb0f945c204" translate="yes" xml:space="preserve">
          <source>How do I decode or create those %-encodings on the web?</source>
          <target state="translated">¿Cómo decodifico o creo esas codificaciones en la web?</target>
        </trans-unit>
        <trans-unit id="ee2564195c16e10af1a2a54e803a2d5eaa4bba4a" translate="yes" xml:space="preserve">
          <source>How do I define methods for every class/object?</source>
          <target state="translated">¿Cómo se definen los métodos para cada clase/objeto?</target>
        </trans-unit>
        <trans-unit id="65a1e2e0843b152e3e957dda320e2bd68a2d232e" translate="yes" xml:space="preserve">
          <source>How do I delete a directory tree?</source>
          <target state="translated">¿Cómo puedo eliminar un árbol de directorios?</target>
        </trans-unit>
        <trans-unit id="39ddaeab66eebefd8e49abf20a3ac9b4d117bd4d" translate="yes" xml:space="preserve">
          <source>How do I delete everything not in my</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6598461e8184a71f0045d1091c9275b621efb6c" translate="yes" xml:space="preserve">
          <source>How do I delete the last N lines from a file?</source>
          <target state="translated">¿Cómo borro las últimas N líneas de un archivo?</target>
        </trans-unit>
        <trans-unit id="82c2c49b1820b2e4b306f272a2091aeedd8bf680" translate="yes" xml:space="preserve">
          <source>How do I determine whether a scalar is a number/whole/integer/float?</source>
          <target state="translated">¿Cómo determino si un escalar es un número/entero/entero/flotación?</target>
        </trans-unit>
        <trans-unit id="f65b76741f09d6f8756a10de0d88399c941d8dbe" translate="yes" xml:space="preserve">
          <source>How do I do (anything)?</source>
          <target state="translated">¿Cómo hago (cualquier cosa)?</target>
        </trans-unit>
        <trans-unit id="5a3899f947a018efe1a69e369cf5894457670072" translate="yes" xml:space="preserve">
          <source>How do I do a &lt;code&gt;tail -f&lt;/code&gt; in perl?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo hago un &lt;code&gt;tail -f&lt;/code&gt; en perl?</target>
        </trans-unit>
        <trans-unit id="08d06a078c58ebbf0c5a4ee81c3c6214665f0e66" translate="yes" xml:space="preserve">
          <source>How do I do a tail -f in perl?</source>
          <target state="translated">¿Cómo hago una cola -f en perl?</target>
        </trans-unit>
        <trans-unit id="8a1d6beddae75cca1e0c47c227a5ded3e3a37f2c" translate="yes" xml:space="preserve">
          <source>How do I do fancy stuff with the keyboard/screen/mouse?</source>
          <target state="translated">¿Cómo hago las cosas elegantes con el teclado/pantalla/ratón?</target>
        </trans-unit>
        <trans-unit id="4adc2a7ad5bba352a704cf7278066f75dfdb1320" translate="yes" xml:space="preserve">
          <source>How do I download files from an FTP server ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaabf13bf44c3d2a6f003d0da1ad9d016f78129" translate="yes" xml:space="preserve">
          <source>How do I dup() a filehandle in Perl?</source>
          <target state="translated">¿Cómo puedo duplicar un filehandle en Perl?</target>
        </trans-unit>
        <trans-unit id="c99c99752028698e07bd697c4f55f10aeb2574b2" translate="yes" xml:space="preserve">
          <source>How do I efficiently match many regular expressions at once?</source>
          <target state="translated">¿Cómo puedo hacer coincidir eficientemente muchas expresiones regulares a la vez?</target>
        </trans-unit>
        <trans-unit id="d8501dfb7a286a0bc3e79d726ff0aa33a83b4611" translate="yes" xml:space="preserve">
          <source>How do I expand function calls in a string?</source>
          <target state="translated">¿Cómo puedo ampliar las llamadas de función en una cadena?</target>
        </trans-unit>
        <trans-unit id="40ad9f6ac9837b05501210a465bcfa76304dce6b" translate="yes" xml:space="preserve">
          <source>How do I expand tabs in a string?</source>
          <target state="translated">¿Cómo puedo expandir las pestañas en una cadena?</target>
        </trans-unit>
        <trans-unit id="1794d4b7480b0f45fea6bded5c811dbf977507ba" translate="yes" xml:space="preserve">
          <source>How do I extract URLs?</source>
          <target state="translated">¿Cómo extraigo las URL?</target>
        </trans-unit>
        <trans-unit id="e7089a10dfdd460d912e93d4c4488293420a3931" translate="yes" xml:space="preserve">
          <source>How do I extract only files that have property X from an archive?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4490e28bfd20b3131d4a6a9a43d5708c9217af3c" translate="yes" xml:space="preserve">
          <source>How do I extract selected columns from a string?</source>
          <target state="translated">¿Cómo extraigo columnas seleccionadas de una cadena?</target>
        </trans-unit>
        <trans-unit id="5e9ce3143a0232dce445afb94a4cd2cbabc5866a" translate="yes" xml:space="preserve">
          <source>How do I fetch an HTML file?</source>
          <target state="translated">¿Cómo puedo obtener un archivo HTML?</target>
        </trans-unit>
        <trans-unit id="5874d66493051782bd5b330106175c43ebb7b6dd" translate="yes" xml:space="preserve">
          <source>How do I fetch/put an (S)FTP file?</source>
          <target state="translated">¿Cómo puedo recuperar/colocar un archivo (S)FTP?</target>
        </trans-unit>
        <trans-unit id="930fdbc050be8c4df7c4e53dd8aa59f284368264" translate="yes" xml:space="preserve">
          <source>How do I find matching/nesting anything?</source>
          <target state="translated">¿Cómo encuentro algo que coincida o se anide?</target>
        </trans-unit>
        <trans-unit id="bc8fb538829e6c584fa0187f483d1bbaba9e7351" translate="yes" xml:space="preserve">
          <source>How do I find out if I'm running interactively or not?</source>
          <target state="translated">¿Cómo puedo saber si estoy corriendo interactivamente o no?</target>
        </trans-unit>
        <trans-unit id="67eefe0342c38d62f056273caef773f2b1d22382" translate="yes" xml:space="preserve">
          <source>How do I find out my hostname, domainname, or IP address?</source>
          <target state="translated">¿Cómo averiguo mi nombre de host,nombre de dominio o dirección IP?</target>
        </trans-unit>
        <trans-unit id="b35cce5c620df3c5213a5b63c9524655cbb9d4b9" translate="yes" xml:space="preserve">
          <source>How do I find out which operating system I'm running under?</source>
          <target state="translated">¿Cómo puedo saber bajo qué sistema operativo estoy corriendo?</target>
        </trans-unit>
        <trans-unit id="01907eb2e6a268c88ab9c2c3bfb59105a7c7e3c4" translate="yes" xml:space="preserve">
          <source>How do I find the current century or millennium?</source>
          <target state="translated">¿Cómo encuentro el siglo o el milenio actual?</target>
        </trans-unit>
        <trans-unit id="3463510f64a1c5a49fcc37902eead9f9ac95605b" translate="yes" xml:space="preserve">
          <source>How do I find the day or week of the year?</source>
          <target state="translated">¿Cómo encuentro el día o la semana del año?</target>
        </trans-unit>
        <trans-unit id="982d40212fc998a0686d78df9c4ba26898354f0e" translate="yes" xml:space="preserve">
          <source>How do I find the first array element for which a condition is true?</source>
          <target state="translated">¿Cómo encuentro el primer elemento de la matriz para el cual una condición es verdadera?</target>
        </trans-unit>
        <trans-unit id="74e25e9ffe5b922252ebf9163105b704200cdbaf" translate="yes" xml:space="preserve">
          <source>How do I find the soundex value of a string?</source>
          <target state="translated">¿Cómo encuentro el valor de sonido de una cuerda?</target>
        </trans-unit>
        <trans-unit id="d5fb344779130b34177124faae9f510c7450c0be" translate="yes" xml:space="preserve">
          <source>How do I find the user's mail address?</source>
          <target state="translated">¿Cómo encuentro la dirección de correo del usuario?</target>
        </trans-unit>
        <trans-unit id="9b5f48590c3589b927773b9f4489ef3e2df19ab7" translate="yes" xml:space="preserve">
          <source>How do I find which modules are installed on my system?</source>
          <target state="translated">¿Cómo encuentro qué módulos están instalados en mi sistema?</target>
        </trans-unit>
        <trans-unit id="db22bcad0e65ee82eb15cee813db7ad1bc862f74" translate="yes" xml:space="preserve">
          <source>How do I find yesterday's date?</source>
          <target state="translated">¿Cómo encuentro la fecha de ayer?</target>
        </trans-unit>
        <trans-unit id="f14d19d9f33ebecf97e59acd91f7a3e35d168a35" translate="yes" xml:space="preserve">
          <source>How do I flush/unbuffer an output filehandle? Why must I do this?</source>
          <target state="translated">¿Cómo puedo tirar de la cadena/desencargar un mango de archivo de salida? ¿Por qué debo hacer esto?</target>
        </trans-unit>
        <trans-unit id="50ced00e1da5731e9f081395bef33daf71015cca" translate="yes" xml:space="preserve">
          <source>How do I fork a daemon process?</source>
          <target state="translated">¿Cómo se bifurca el proceso de un demonio?</target>
        </trans-unit>
        <trans-unit id="b5197890f13966fd4c7d88cf82096a37fc11915e" translate="yes" xml:space="preserve">
          <source>How do I get MakeMaker and Module::Build to install to the same place?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4fad4fa61c86e768baf3c503d80347718f36c7" translate="yes" xml:space="preserve">
          <source>How do I get a directory listing from an FTP server ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1e555b8ad44f5ee09984b301d45f763b3ab693" translate="yes" xml:space="preserve">
          <source>How do I get a file's timestamp in perl?</source>
          <target state="translated">¿Cómo consigo la marca de tiempo de un archivo en perl?</target>
        </trans-unit>
        <trans-unit id="f416b305fcb8113d5bc19886df8b83bac5c89fb3" translate="yes" xml:space="preserve">
          <source>How do I get a random number between X and Y?</source>
          <target state="translated">¿Cómo consigo un número al azar entre X e Y?</target>
        </trans-unit>
        <trans-unit id="0f092c3cc9246e7de03f0d8e8c730fbe8df49215" translate="yes" xml:space="preserve">
          <source>How do I get the screen size?</source>
          <target state="translated">¿Cómo obtengo el tamaño de la pantalla?</target>
        </trans-unit>
        <trans-unit id="d2945107e7da57555f0937b6495cd275527b10d0" translate="yes" xml:space="preserve">
          <source>How do I handle Unicode strings?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3313630d3f982060a390f5f1946717a57153c40" translate="yes" xml:space="preserve">
          <source>How do I handle binary data correctly?</source>
          <target state="translated">¿Cómo puedo manejar correctamente los datos binarios?</target>
        </trans-unit>
        <trans-unit id="3d9eeab5302abcd051b9c7c58a10262f71b93d0d" translate="yes" xml:space="preserve">
          <source>How do I handle circular lists?</source>
          <target state="translated">¿Cómo manejo las listas circulares?</target>
        </trans-unit>
        <trans-unit id="25bc3d27f1f1d3400779cec866f02e11e267bcde" translate="yes" xml:space="preserve">
          <source>How do I handle linked lists?</source>
          <target state="translated">¿Cómo manejo las listas de enlaces?</target>
        </trans-unit>
        <trans-unit id="22ab3c17d49644f7643e768f33f866efb0521ae5" translate="yes" xml:space="preserve">
          <source>How do I install a &quot;DEVELOPER RELEASE&quot; of a module?</source>
          <target state="translated">¿Cómo instalo una &quot;LIBERACIÓN DE DESARROLLO&quot; de un módulo?</target>
        </trans-unit>
        <trans-unit id="51ca5bd4b613176b7121cb512580f3d074cc9e12" translate="yes" xml:space="preserve">
          <source>How do I install a module and all its dependencies from the commandline, without being prompted for anything, despite my CPAN configuration (or lack thereof)?</source>
          <target state="translated">¿Cómo puedo instalar un módulo y todas sus dependencias desde la línea de comandos,sin que se me pida nada,a pesar de la configuración de mi CPAN (o la falta de ella)?</target>
        </trans-unit>
        <trans-unit id="332f266fa06f1a0ab802b1da5c10c6890675f4de" translate="yes" xml:space="preserve">
          <source>How do I install a module from CPAN?</source>
          <target state="translated">¿Cómo instalo un módulo del CPAN?</target>
        </trans-unit>
        <trans-unit id="125fb980d7aaa7ca2242befa5648bc32166dc7e6" translate="yes" xml:space="preserve">
          <source>How do I install a module into my home directory?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d861f5b4b26ce38782c487c2b8f360184457002f" translate="yes" xml:space="preserve">
          <source>How do I keep from installing man pages?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d92a5148bd9660c144884977d59745697a0930" translate="yes" xml:space="preserve">
          <source>How do I keep my $VERSION up to date without resetting it manually?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779b60119e9ac89f1b4bb8ccca7aa17790f78529" translate="yes" xml:space="preserve">
          <source>How do I keep my own module/library directory?</source>
          <target state="translated">¿Cómo mantengo mi propio directorio de módulos/bibliotecas?</target>
        </trans-unit>
        <trans-unit id="712ff90db628f146b683448ab9a743ea57d1a8f1" translate="yes" xml:space="preserve">
          <source>How do I keep persistent data across program calls?</source>
          <target state="translated">¿Cómo mantengo los datos persistentes en las llamadas del programa?</target>
        </trans-unit>
        <trans-unit id="a20b09e11bad429f8e02c602624e45b441c22369" translate="yes" xml:space="preserve">
          <source>How do I look up a hash element by value?</source>
          <target state="translated">¿Cómo busco un elemento de hachís por su valor?</target>
        </trans-unit>
        <trans-unit id="fc81f211ace7f04a35490b5be3fe4452ee1626e9" translate="yes" xml:space="preserve">
          <source>How do I make a system() exit on control-C?</source>
          <target state="translated">¿Cómo hago para que un sistema salga en el control-C?</target>
        </trans-unit>
        <trans-unit id="58c641789837b76dd9abee18041837a328da4bf8" translate="yes" xml:space="preserve">
          <source>How do I make a temporary file name?</source>
          <target state="translated">¿Cómo hago un nombre de archivo temporal?</target>
        </trans-unit>
        <trans-unit id="f0fab6b039e898671e7205067775272f3896476e" translate="yes" xml:space="preserve">
          <source>How do I make sure users can't enter values into a form that causes my CGI script to do bad things?</source>
          <target state="translated">¿Cómo me aseguro de que los usuarios no puedan introducir valores en un formulario que provoque que mi script CGI haga cosas malas?</target>
        </trans-unit>
        <trans-unit id="717678bc544dca5a8699132ee02462800aee62d3" translate="yes" xml:space="preserve">
          <source>How do I make two or more XS files coexist in the same directory?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e83c97b2d0052618a071494ce58ad0aa5de46bd" translate="yes" xml:space="preserve">
          <source>How do I manipulate arrays of bits?</source>
          <target state="translated">¿Cómo puedo manipular conjuntos de bits?</target>
        </trans-unit>
        <trans-unit id="f91d0deef997d3bfa3ece796fb840e0045a0792b" translate="yes" xml:space="preserve">
          <source>How do I match XML, HTML, or other nasty, ugly things with a regex?</source>
          <target state="translated">¿Cómo puedo hacer coincidir XML,HTML u otras cosas desagradables y feas con un regex?</target>
        </trans-unit>
        <trans-unit id="9e10d6b9fcc0dce9241e02f9e3f41bcdabf8cf6b" translate="yes" xml:space="preserve">
          <source>How do I match a regular expression that's in a variable?</source>
          <target state="translated">¿Cómo puedo hacer coincidir una expresión regular que está en una variable?</target>
        </trans-unit>
        <trans-unit id="5d4e304caa9da74ae39c7e0f1bc8a660a934e36b" translate="yes" xml:space="preserve">
          <source>How do I merge two hashes?</source>
          <target state="translated">¿Cómo puedo fusionar dos hashes?</target>
        </trans-unit>
        <trans-unit id="e98a867a19e12d012764c76bf6e04f0613af63d6" translate="yes" xml:space="preserve">
          <source>How do I modify the shadow password file on a Unix system?</source>
          <target state="translated">¿Cómo modifico el archivo de contraseñas de la sombra en un sistema Unix?</target>
        </trans-unit>
        <trans-unit id="c7095e8729e8a7f2287429c858bc0e6162426248" translate="yes" xml:space="preserve">
          <source>How do I multiply matrices?</source>
          <target state="translated">¿Cómo multiplico las matrices?</target>
        </trans-unit>
        <trans-unit id="9460689c66cd7c2602f152fc7b62b5a75f54acdd" translate="yes" xml:space="preserve">
          <source>How do I open a file without blocking?</source>
          <target state="translated">¿Cómo puedo abrir un archivo sin bloquearlo?</target>
        </trans-unit>
        <trans-unit id="9724c57d7e62b1229f27e461cfe00d869c775e7e" translate="yes" xml:space="preserve">
          <source>How do I pack arrays of doubles or floats for XS code?</source>
          <target state="translated">¿Cómo empaqueto matrices de dobles o flotadores para el código XS?</target>
        </trans-unit>
        <trans-unit id="4400dc02ad15b6fc00f373b7446035015d4ee6bf" translate="yes" xml:space="preserve">
          <source>How do I pad a string with blanks or pad a number with zeroes?</source>
          <target state="translated">¿Cómo relleno una cuerda con espacios en blanco o relleno un número con ceros?</target>
        </trans-unit>
        <trans-unit id="d0e3e8a036359d14fc456cf2c14236b5f608bd62" translate="yes" xml:space="preserve">
          <source>How do I parse a mail header?</source>
          <target state="translated">¿Cómo puedo analizar el encabezado de un correo?</target>
        </trans-unit>
        <trans-unit id="9e0cafd923d528d129dae6e8757b0045ebfe45d2" translate="yes" xml:space="preserve">
          <source>How do I perform an operation on a series of integers?</source>
          <target state="translated">¿Cómo realizo una operación en una serie de números enteros?</target>
        </trans-unit>
        <trans-unit id="0ea5e302520f6bb39c41ab5c626ec6b77bff9c77" translate="yes" xml:space="preserve">
          <source>How do I permute N elements of a list?</source>
          <target state="translated">¿Cómo puedo permutar N elementos de una lista?</target>
        </trans-unit>
        <trans-unit id="2bb4f19e6e2b56ae1fd37e0d6e014e129c77c2b4" translate="yes" xml:space="preserve">
          <source>How do I prevent &quot;object version X.XX does not match bootstrap parameter Y.YY&quot; errors?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b942fa715d105d63d048d010625e34a4e15cc06" translate="yes" xml:space="preserve">
          <source>How do I print out or copy a recursive data structure?</source>
          <target state="translated">¿Cómo imprimo o copio una estructura de datos recursiva?</target>
        </trans-unit>
        <trans-unit id="0cee12c0d629b76061795de4e8ea8e8aad20c9a2" translate="yes" xml:space="preserve">
          <source>How do I print something out in color?</source>
          <target state="translated">¿Cómo puedo imprimir algo en color?</target>
        </trans-unit>
        <trans-unit id="8c5e011ff87e317620443254f20726209e4d5142" translate="yes" xml:space="preserve">
          <source>How do I print to more than one file at once?</source>
          <target state="translated">¿Cómo puedo imprimir en más de un archivo a la vez?</target>
        </trans-unit>
        <trans-unit id="8e6e30c99d7d46a63b6dd2a8de7f090b5c3b78f8" translate="yes" xml:space="preserve">
          <source>How do I process an entire hash?</source>
          <target state="translated">¿Cómo se procesa un hachís entero?</target>
        </trans-unit>
        <trans-unit id="271b9d3d652ec230aba0c388cad00cfb6ec4cadb" translate="yes" xml:space="preserve">
          <source>How do I process each word on each line?</source>
          <target state="translated">¿Cómo proceso cada palabra en cada línea?</target>
        </trans-unit>
        <trans-unit id="067d5b88bfca3ed1b6b7d97cd252f5dd16cbb5b2" translate="yes" xml:space="preserve">
          <source>How do I process/modify each element of an array?</source>
          <target state="translated">¿Cómo proceso/modifico cada elemento de un conjunto?</target>
        </trans-unit>
        <trans-unit id="4b013be3c59b874a12db528d39cfb66ea2b4d285" translate="yes" xml:space="preserve">
          <source>How do I profile my Perl programs?</source>
          <target state="translated">¿Cómo hago el perfil de mis programas Perl?</target>
        </trans-unit>
        <trans-unit id="907ce6af6f55d655a78f0e8c0ae363954d37ba4f" translate="yes" xml:space="preserve">
          <source>How do I put a &quot;-?&quot; option into a Getopt::Long?</source>
          <target state="translated">¿Cómo pongo una opción &quot;-?&quot; en un Getopt::Long?</target>
        </trans-unit>
        <trans-unit id="c7fe97c54150572fb4431657021f14d59fd4861f" translate="yes" xml:space="preserve">
          <source>How do I put a password on my web pages?</source>
          <target state="translated">¿Cómo pongo una contraseña en mis páginas web?</target>
        </trans-unit>
        <trans-unit id="aabceca15e4a4d5d9ca824c2b010057c5ffb938d" translate="yes" xml:space="preserve">
          <source>How do I randomly update a binary file?</source>
          <target state="translated">¿Cómo actualizo al azar un archivo binario?</target>
        </trans-unit>
        <trans-unit id="be52f21f6d10d6ab8f3f91d7f9754bf001810264" translate="yes" xml:space="preserve">
          <source>How do I read and write the serial port?</source>
          <target state="translated">¿Cómo leo y escribo el puerto serie?</target>
        </trans-unit>
        <trans-unit id="88cf95522fd81b968df3c101e350990093c3aa09" translate="yes" xml:space="preserve">
          <source>How do I read email?</source>
          <target state="translated">¿Cómo puedo leer el correo electrónico?</target>
        </trans-unit>
        <trans-unit id="f7f8ec70d59120dd78e53b84aba791742e9edd1e" translate="yes" xml:space="preserve">
          <source>How do I read just one key without waiting for a return key?</source>
          <target state="translated">¿Cómo puedo leer una sola llave sin esperar a que me devuelvan la llave?</target>
        </trans-unit>
        <trans-unit id="b3ea24ef99830bfeddb0edd113b634795cbe4cbc" translate="yes" xml:space="preserve">
          <source>How do I recompress using a different compression?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d36808740d961fdd3bc4db24c2ee814f31ee7c" translate="yes" xml:space="preserve">
          <source>How do I redefine a builtin function, operator, or method?</source>
          <target state="translated">¿Cómo redefino una función,un operador o un método incorporado?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
