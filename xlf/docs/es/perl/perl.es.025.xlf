<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="fb785a40ce237466b61cf74c58f19b12f7daa54a" translate="yes" xml:space="preserve">
          <source>Also note that there's no value for UNITCHECK-blocks. That's because those are run for each compilation unit individually, and therefore is not a global interpreter phase.</source>
          <target state="translated">También hay que tener en cuenta que no hay valor para los bloques de UNITCHECK.Eso se debe a que se ejecutan para cada unidad de compilación individualmente,y por lo tanto no es una fase de interpretación global.</target>
        </trans-unit>
        <trans-unit id="8af529a7344d9be72e889a1f3967799ba9dc98d6" translate="yes" xml:space="preserve">
          <source>Also note that these instructions are tailored for installing the module into your system's repository of Perl modules, but you can install modules into any directory you wish. For instance, where I say &lt;code&gt;perl Makefile.PL&lt;/code&gt; , you can substitute &lt;code&gt;perl Makefile.PL
PREFIX=/my/perl_directory&lt;/code&gt; to install the modules into</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que estas instrucciones est&amp;aacute;n dise&amp;ntilde;adas para instalar el m&amp;oacute;dulo en el repositorio de m&amp;oacute;dulos Perl de su sistema, pero puede instalar m&amp;oacute;dulos en cualquier directorio que desee. Por ejemplo, cuando digo &lt;code&gt;perl Makefile.PL&lt;/code&gt; , puede sustituir &lt;code&gt;perl Makefile.PL PREFIX=/my/perl_directory&lt;/code&gt; para instalar los m&amp;oacute;dulos en</target>
        </trans-unit>
        <trans-unit id="981eced70a1fd7e3f9ca6ea4e94af48969947ff9" translate="yes" xml:space="preserve">
          <source>Also note that these instructions are tailored for installing the module into your system's repository of Perl modules, but you can install modules into any directory you wish. For instance, where I say &lt;code&gt;perl Makefile.PL&lt;/code&gt;, you can substitute &lt;code&gt;perl Makefile.PL PREFIX=/my/perl_directory&lt;/code&gt; to install the modules into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736913cda9c361fafb5f7987b822471b70893809" translate="yes" xml:space="preserve">
          <source>Also note that this does not (yet) work with all configurations, it is known to fail with 64-bit versions of GCC.</source>
          <target state="translated">También hay que tener en cuenta que esto no funciona (todavía)con todas las configuraciones,se sabe que falla con las versiones de 64 bits de GCC.</target>
        </trans-unit>
        <trans-unit id="1ab79db4a65e3d1bcd26f59f38af2eeb810bbb25" translate="yes" xml:space="preserve">
          <source>Also note that under the current implementation, shared variables use a little more memory and are a little slower than ordinary variables.</source>
          <target state="translated">Obsérvese también que,con arreglo a la aplicación actual,las variables compartidas utilizan un poco más de memoria y son un poco más lentas que las variables ordinarias.</target>
        </trans-unit>
        <trans-unit id="df7301891c8738a820a79c945053b0568b895b92" translate="yes" xml:space="preserve">
          <source>Also note that whether enums are implicitly morphable to ints varies between compilers, you might need to (int).</source>
          <target state="translated">Obsérvese también que el hecho de que los enums sean implícitamente transformables en ints varía de un compilador a otro,por lo que tal vez sea necesario (int).</target>
        </trans-unit>
        <trans-unit id="3fe91d0953fd134d385ab62185c6773cb118c04f" translate="yes" xml:space="preserve">
          <source>Also note that while the order of the hash elements might be randomized, this &quot;pseudo-ordering&quot; should &lt;b&gt;not&lt;/b&gt; be used for applications like shuffling a list randomly (use &lt;code&gt;List::Util::shuffle()&lt;/code&gt; for that, see &lt;a href=&quot;List::Util&quot;&gt;List::Util&lt;/a&gt;, a standard core module since Perl 5.8.0; or the CPAN module &lt;code&gt;Algorithm::Numerical::Shuffle&lt;/code&gt;), or for generating permutations (use e.g. the CPAN modules &lt;code&gt;Algorithm::Permute&lt;/code&gt; or &lt;code&gt;Algorithm::FastPermute&lt;/code&gt;), or for any cryptographic applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971b7944044758dad02956ec65121b0bd485f6a2" translate="yes" xml:space="preserve">
          <source>Also note that while the order of the hash elements might be randomized, this &quot;pseudo-ordering&quot; should &lt;b&gt;not&lt;/b&gt; be used for applications like shuffling a list randomly (use &lt;code&gt;List::Util::shuffle()&lt;/code&gt; for that, see &lt;a href=&quot;list/util&quot;&gt;List::Util&lt;/a&gt;, a standard core module since Perl 5.8.0; or the CPAN module &lt;code&gt;Algorithm::Numerical::Shuffle&lt;/code&gt; ), or for generating permutations (use e.g. the CPAN modules &lt;code&gt;Algorithm::Permute&lt;/code&gt; or &lt;code&gt;Algorithm::FastPermute&lt;/code&gt; ), or for any cryptographic applications.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que si bien el orden de los elementos hash puede ser aleatorio, este &quot;pseudoordenar&quot; &lt;b&gt;no&lt;/b&gt; debe usarse para aplicaciones como mezclar aleatoriamente una lista (use &lt;code&gt;List::Util::shuffle()&lt;/code&gt; para eso, vea &lt;a href=&quot;list/util&quot;&gt;List :: Util&lt;/a&gt; , un m&amp;oacute;dulo central est&amp;aacute;ndar desde Perl 5.8.0; o el m&amp;oacute;dulo CPAN &lt;code&gt;Algorithm::Numerical::Shuffle&lt;/code&gt; ), o para generar permutaciones (use, por ejemplo, los m&amp;oacute;dulos CPAN &lt;code&gt;Algorithm::Permute&lt;/code&gt; o &lt;code&gt;Algorithm::FastPermute&lt;/code&gt; ), o para cualquier aplicaci&amp;oacute;n criptogr&amp;aacute;fica .</target>
        </trans-unit>
        <trans-unit id="1cc898b24b5934f9ecf52c4f2514750c1a887e03" translate="yes" xml:space="preserve">
          <source>Also note that you should set the &lt;code&gt;Efs&lt;/code&gt; option to true if you are working with UTF8 filenames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4516f893f396703a765e286979d300545dd3cb43" translate="yes" xml:space="preserve">
          <source>Also note that, for the superuser on the local filesystems, the &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , and &lt;code&gt;-W&lt;/code&gt; tests always return 1, and &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; return 1 if any execute bit is set in the mode. Scripts run by the superuser may thus need to do a stat() to determine the actual mode of the file, or temporarily set their effective uid to something else.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, para el superusuario en los sistemas de archivos locales, las pruebas &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; y &lt;code&gt;-W&lt;/code&gt; siempre devuelven 1, y &lt;code&gt;-x&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; devuelven 1 si se establece alg&amp;uacute;n bit de ejecuci&amp;oacute;n en el modo. Es posible que los scripts ejecutados por el superusuario necesiten realizar un stat () para determinar el modo real del archivo, o establecer temporalmente su uid efectivo en otra cosa.</target>
        </trans-unit>
        <trans-unit id="63277c7c7b95830e3556168d50e815433213b167" translate="yes" xml:space="preserve">
          <source>Also note that, for the superuser on the local filesystems, the &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , and &lt;code&gt;-W&lt;/code&gt; tests always return 1, and &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; return 1 if any execute bit is set in the mode. Scripts run by the superuser may thus need to do a stat() to determine the actual mode of the file, or temporarily set their effective uid to something else.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que, para el superusuario en los sistemas de archivos locales, las pruebas &lt;code&gt;-r&lt;/code&gt; , &lt;code&gt;-R&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; y &lt;code&gt;-W&lt;/code&gt; siempre devuelven 1, y &lt;code&gt;-x&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; devuelven 1 si se establece alg&amp;uacute;n bit de ejecuci&amp;oacute;n en el modo. Es posible que los scripts ejecutados por el superusuario necesiten realizar un stat () para determinar el modo real del archivo, o establecer temporalmente su uid efectivo en otra cosa.</target>
        </trans-unit>
        <trans-unit id="4c12857d50953ae8911fef9be5deb3cb6261b630" translate="yes" xml:space="preserve">
          <source>Also note that, for the superuser on the local filesystems, the &lt;code&gt;-r&lt;/code&gt;, &lt;code&gt;-R&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;, and &lt;code&gt;-W&lt;/code&gt; tests always return 1, and &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;-X&lt;/code&gt; return 1 if any execute bit is set in the mode. Scripts run by the superuser may thus need to do a &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; to determine the actual mode of the file, or temporarily set their effective uid to something else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0223c3f3274398a55ed8725b06675a40efd8ef" translate="yes" xml:space="preserve">
          <source>Also note that:</source>
          <target state="translated">También tenga en cuenta que..:</target>
        </trans-unit>
        <trans-unit id="87da44cc851ca2f3b8c127c8f7ddc08e6bd458e4" translate="yes" xml:space="preserve">
          <source>Also note, that because all ASCII characters are UTF-8 invariant (meaning they have the exact same representation (always a single byte) whether encoded in UTF-8 or not), &lt;code&gt;isASCII&lt;/code&gt; will give the correct results when called with any byte in any string encoded or not in UTF-8. And similarly &lt;code&gt;isASCII_utf8&lt;/code&gt; will work properly on any string encoded or not in UTF-8.</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que debido a que todos los caracteres ASCII son invariantes UTF-8 (lo que significa que tienen exactamente la misma representaci&amp;oacute;n (siempre un solo byte) ya sea que est&amp;eacute;n codificados en UTF-8 o no), &lt;code&gt;isASCII&lt;/code&gt; dar&amp;aacute; los resultados correctos cuando se llame con cualquier byte en cualquier cadena codificada o no en UTF-8. Y de manera similar, &lt;code&gt;isASCII_utf8&lt;/code&gt; funcionar&amp;aacute; correctamente en cualquier cadena codificada o no en UTF-8.</target>
        </trans-unit>
        <trans-unit id="523b244d1d9de0ba3f1938d9267c5634264d7182" translate="yes" xml:space="preserve">
          <source>Also notice that no matter what arguments you pass to perl_parse(), PERL_SYS_INIT3() must be invoked on the C main() argc, argv and env and only once.</source>
          <target state="translated">También note que no importa qué argumentos pase a perl_parse(),PERL_SYS_INIT3()debe ser invocado en el C main()argc,argv y env y sólo una vez.</target>
        </trans-unit>
        <trans-unit id="84e807ea22d37e9fcac5bf336f329420c5d937c0" translate="yes" xml:space="preserve">
          <source>Also of use is &lt;a href=&quot;File::Basename&quot;&gt;&lt;code&gt;File::Basename&lt;/code&gt;&lt;/a&gt; from the standard distribution, which splits a pathname into pieces (base filename, full path to directory, and file suffix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b1e0d1886e4ff75f5ec5ef85846c4c02e181e1" translate="yes" xml:space="preserve">
          <source>Also of use is &lt;code&gt;File::Basename&lt;/code&gt; from the standard distribution, which splits a pathname into pieces (base filename, full path to directory, and file suffix).</source>
          <target state="translated">Tambi&amp;eacute;n es &amp;uacute;til &lt;code&gt;File::Basename&lt;/code&gt; de la distribuci&amp;oacute;n est&amp;aacute;ndar, que divide un nombre de ruta en partes (nombre de archivo base, ruta completa al directorio y sufijo de archivo).</target>
        </trans-unit>
        <trans-unit id="5f72eee36e825db36f597f9decf9236b17c32472" translate="yes" xml:space="preserve">
          <source>Also parsed as terms are the &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; constructs, as well as subroutine and method calls, and the anonymous constructors &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; .</source>
          <target state="translated">Tambi&amp;eacute;n se analizan como t&amp;eacute;rminos las construcciones &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; {}&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; {}&lt;/code&gt; , as&amp;iacute; como las llamadas a subrutinas y m&amp;eacute;todos, y los constructores an&amp;oacute;nimos &lt;code&gt;[]&lt;/code&gt; y &lt;code&gt;{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76e4187069aa3cdfe5b15fb66a75e8d762b8a3c7" translate="yes" xml:space="preserve">
          <source>Also parsed as terms are the &lt;code&gt;do {}&lt;/code&gt; and &lt;code&gt;eval {}&lt;/code&gt; constructs, as well as subroutine and method calls, and the anonymous constructors &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab49029f03642de1877e97fc5e4ccdaa8f4d8b8" translate="yes" xml:space="preserve">
          <source>Also read the &lt;a href=&quot;#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot;&lt;/a&gt; section above, about how &lt;code&gt;Carp&lt;/code&gt; decides where the error is reported from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bae6f7ee0c691e590b07608d4c9653431dd798" translate="yes" xml:space="preserve">
          <source>Also read the &lt;a href=&quot;#DESCRIPTION&quot;&gt;DESCRIPTION&lt;/a&gt; section above, about how &lt;code&gt;Carp&lt;/code&gt; decides where the error is reported from.</source>
          <target state="translated">Lea tambi&amp;eacute;n la secci&amp;oacute;n &lt;a href=&quot;#DESCRIPTION&quot;&gt;DESCRIPCI&amp;Oacute;N&lt;/a&gt; anterior, sobre c&amp;oacute;mo &lt;code&gt;Carp&lt;/code&gt; decide desde d&amp;oacute;nde se informa el error.</target>
        </trans-unit>
        <trans-unit id="6e8426be1042a9c74b01dabfc6cf09d489acf3c6" translate="yes" xml:space="preserve">
          <source>Also referred to as &quot;Dotted-Integer&quot;, these contains more than one decimal point and may have an optional embedded underscore, see &lt;a href=&quot;#Dotted-Decimal-Versions&quot;&gt;&quot;Dotted-Decimal Versions&quot;&lt;/a&gt;. This is what is commonly used in most open source software as the &quot;external&quot; version (the one used as part of the tag or tarfile name). A leading 'v' character is now required and will warn if it missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e594eb3334af2971f8b461e9ae7e0b95244811c" translate="yes" xml:space="preserve">
          <source>Also remember that &quot;|&quot; is interpreted as a literal within square brackets, so if you write &lt;code&gt;[fee|fie|foe]&lt;/code&gt; you're really only matching &lt;code&gt;[feio|]&lt;/code&gt; .</source>
          <target state="translated">Tambi&amp;eacute;n recuerde que &quot;|&quot; se interpreta como un literal entre corchetes, por lo que si escribe &lt;code&gt;[fee|fie|foe]&lt;/code&gt; realidad s&amp;oacute;lo coincide con &lt;code&gt;[feio|]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d930463c65b067a74fc5ff7d23d0ccb6261af74" translate="yes" xml:space="preserve">
          <source>Also remember that C doesn't allow you to safely say &lt;code&gt;foo(SvPV(s, len),
len);&lt;/code&gt;. It might work with your compiler, but it won't work for everyone. Break this sort of statement up into separate assignments:</source>
          <target state="translated">Tambi&amp;eacute;n recuerde que C no le permite decir con seguridad &lt;code&gt;foo(SvPV(s, len), len);&lt;/code&gt; . Puede que funcione con su compilador, pero no funcionar&amp;aacute; para todos. Divida este tipo de declaraci&amp;oacute;n en asignaciones separadas:</target>
        </trans-unit>
        <trans-unit id="f44fcd946ba2f23c70977904fbf45aba4b6fafca" translate="yes" xml:space="preserve">
          <source>Also remember that the &lt;code&gt;%p&lt;/code&gt; format really does require a void pointer:</source>
          <target state="translated">Tambi&amp;eacute;n recuerde que el formato &lt;code&gt;%p&lt;/code&gt; realmente requiere un puntero vac&amp;iacute;o:</target>
        </trans-unit>
        <trans-unit id="d484e6b6d31da17dc2ff01d2d2dda31cda9e2d99" translate="yes" xml:space="preserve">
          <source>Also remember: If the META file contains a provides field, you shouldn't be indexing anything in the first place - just use that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058a190dd3d11e3f9bf93212c115f6265d98bac0" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; or &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;.</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; o &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f380eae13c59641be526fa28a59640fd146bd59e" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;perlfunc#binmode&quot;&gt;&quot;binmode&quot; in perlfunc&lt;/a&gt; or &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b821601b2c44fa646b454cc4c61309ada267db9f" translate="yes" xml:space="preserve">
          <source>Also see the &lt;b&gt;--lquote&lt;/b&gt; and &lt;b&gt;--rquote&lt;/b&gt; options, which can be used to set the left and right quotes independently. If both &lt;b&gt;--quotes&lt;/b&gt; and one of the other options is set, &lt;b&gt;--lquote&lt;/b&gt; or &lt;b&gt;--rquote&lt;/b&gt; overrides &lt;b&gt;--quotes&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124ca3ad4251372cd630b0c4f1d026a6e1bb631a" translate="yes" xml:space="preserve">
          <source>Also see the &lt;b&gt;--quotes&lt;/b&gt; option, which can be used to set both quotes at once. If both &lt;b&gt;--quotes&lt;/b&gt; and one of the other options is set, &lt;b&gt;--lquote&lt;/b&gt; or &lt;b&gt;--rquote&lt;/b&gt; overrides &lt;b&gt;--quotes&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f14f1236967cfa8b858394733973952439e548" translate="yes" xml:space="preserve">
          <source>Also see the &lt;code&gt;lquote&lt;/code&gt; and &lt;code&gt;rquote&lt;/code&gt; options, which can be used to set the left and right quotes independently. If both &lt;code&gt;quotes&lt;/code&gt; and one of the other options is set, &lt;code&gt;lquote&lt;/code&gt; or &lt;code&gt;rquote&lt;/code&gt; overrides &lt;code&gt;quotes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43f69db8fdd0609b53e771f0c648e36f1cca6c0" translate="yes" xml:space="preserve">
          <source>Also see the &lt;code&gt;quotes&lt;/code&gt; option, which can be used to set both quotes at once. If both &lt;code&gt;quotes&lt;/code&gt; and one of the other options is set, &lt;code&gt;lquote&lt;/code&gt; or &lt;code&gt;rquote&lt;/code&gt; overrides &lt;code&gt;quotes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa855f9ba4cde9a2842bd3fc97af3045ad2e00c0" translate="yes" xml:space="preserve">
          <source>Also see:</source>
          <target state="translated">También ver:</target>
        </trans-unit>
        <trans-unit id="e8ab5cecbe34d47a3838306a541fd22a09e183f0" translate="yes" xml:space="preserve">
          <source>Also starting in v5.8.1, the &lt;code&gt;DATA&lt;/code&gt; pseudo-filehandle is translated from the encoding into UTF-8.</source>
          <target state="translated">Tambi&amp;eacute;n a partir de la v5.8.1, el pseudo- identificador de archivo &lt;code&gt;DATA&lt;/code&gt; se traduce de la codificaci&amp;oacute;n a UTF-8.</target>
        </trans-unit>
        <trans-unit id="ab76f7fb0dafb2fd9b645c8d2859052a429122ce" translate="yes" xml:space="preserve">
          <source>Also study &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; carefully to avoid any bad assumptions about the operating system, filesystems, character set, and so forth.</source>
          <target state="translated">Tambi&amp;eacute;n estudie &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; detenidamente para evitar cualquier suposici&amp;oacute;n err&amp;oacute;nea sobre el sistema operativo, los sistemas de archivos, el conjunto de caracteres, etc.</target>
        </trans-unit>
        <trans-unit id="2e87f20f7d97b568a4954fba96e48f292ed18abb" translate="yes" xml:space="preserve">
          <source>Also unchanged is the quoting of non-UTF-8 strings when outside the scope of a &lt;a href=&quot;feature#The-%27unicode_strings%27-feature&quot;&gt;&lt;code&gt;use feature 'unicode_strings'&lt;/code&gt;&lt;/a&gt;, which is to quote all characters in the upper Latin1 range. This provides complete backwards compatibility for old programs which do not use Unicode. (Note that &lt;code&gt;unicode_strings&lt;/code&gt; is automatically enabled within the scope of a &lt;code&gt;use v5.12&lt;/code&gt; or greater.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330eeffd40ec44ea764cda155371e57d6de9d850" translate="yes" xml:space="preserve">
          <source>Also unchanged is the quoting of non-UTF-8 strings when outside the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; , which is to quote all characters in the upper Latin1 range. This provides complete backwards compatibility for old programs which do not use Unicode. (Note that &lt;code&gt;unicode_strings&lt;/code&gt; is automatically enabled within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.12&lt;/code&gt; or greater.)</source>
          <target state="translated">Tampoco se modifican las citas de cadenas que no son UTF-8 cuando est&amp;aacute;n fuera del alcance de una &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; 'unicode_strings' , que consiste en citar todos los caracteres en el rango superior de Latin1. Esto proporciona compatibilidad completa con versiones anteriores para programas antiguos que no utilizan Unicode. (Tenga en cuenta que &lt;code&gt;unicode_strings&lt;/code&gt; se habilita autom&amp;aacute;ticamente dentro del alcance de un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.12&lt;/code&gt; o superior).</target>
        </trans-unit>
        <trans-unit id="d897a47e8affb873fdb6ab1911f0d831b446c551" translate="yes" xml:space="preserve">
          <source>Also unchanged is the quoting of non-UTF-8 strings when outside the scope of a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; , which is to quote all characters in the upper Latin1 range. This provides complete backwards compatibility for old programs which do not use Unicode. (Note that &lt;code&gt;unicode_strings&lt;/code&gt; is automatically enabled within the scope of a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.12&lt;/code&gt; or greater.)</source>
          <target state="translated">Tampoco se modifican las citas de cadenas que no son UTF-8 cuando est&amp;aacute;n fuera del alcance de una &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; &lt;a href=&quot;use&quot;&gt;uso&lt;/a&gt; 'unicode_strings' , que consiste en citar todos los caracteres en el rango superior de Latin1. Esto proporciona compatibilidad completa con versiones anteriores para programas antiguos que no utilizan Unicode. (Tenga en cuenta que &lt;code&gt;unicode_strings&lt;/code&gt; se habilita autom&amp;aacute;ticamente dentro del alcance de un &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.12&lt;/code&gt; o superior).</target>
        </trans-unit>
        <trans-unit id="77e4638580e542bd7efbc6ad1037c219e33a2a27" translate="yes" xml:space="preserve">
          <source>Also unlike &lt;code&gt;fileparse()&lt;/code&gt; , &lt;code&gt;dirname()&lt;/code&gt; does not include a trailing slash on its returned path.</source>
          <target state="translated">Tambi&amp;eacute;n a diferencia de &lt;code&gt;fileparse()&lt;/code&gt; , &lt;code&gt;dirname()&lt;/code&gt; no incluye una barra al final en su ruta devuelta.</target>
        </trans-unit>
        <trans-unit id="26303c82ac6b3a7fa556573e39f86a09e33051c1" translate="yes" xml:space="preserve">
          <source>Also unlike &lt;code&gt;fileparse()&lt;/code&gt;, &lt;code&gt;dirname()&lt;/code&gt; does not include a trailing slash on its returned path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf4e79f0d2cc479a41a6179c877f4a73d453199" translate="yes" xml:space="preserve">
          <source>Also when working on Perl programs on VMS, if you need a syntax in a specific operating system format, then you need either to check the appropriate DECC$ feature logical, or call a conversion routine to force it to that format.</source>
          <target state="translated">También cuando se trabaja en programas Perl en VMS,si se necesita una sintaxis en un formato específico del sistema operativo,entonces hay que comprobar la lógica de la característica DECC$ apropiada,o llamar a una rutina de conversión para forzarla a ese formato.</target>
        </trans-unit>
        <trans-unit id="5fc47794ba1a865aaaa0f149000e05b513e4f015" translate="yes" xml:space="preserve">
          <source>Also you have to be careful when using &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; as a value in AVs or HVs (see &lt;a href=&quot;#AVs%2C-HVs-and-undefined-values&quot;&gt;&quot;AVs, HVs and undefined values&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a91fa72735b293f0702212cc8b8ff7dd3fc1bc" translate="yes" xml:space="preserve">
          <source>Also you have to be careful when using &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; as a value in AVs or HVs (see &lt;a href=&quot;#AVs%2c-HVs-and-undefined-values&quot;&gt;AVs, HVs and undefined values&lt;/a&gt;).</source>
          <target state="translated">Tambi&amp;eacute;n debe tener cuidado al usar &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; como valor en AV o HV (consulte &lt;a href=&quot;#AVs%2c-HVs-and-undefined-values&quot;&gt;AV, HV y valores no definidos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="88b9515cdbcd45bb30a5ed0507a9f79663403c03" translate="yes" xml:space="preserve">
          <source>Also, &lt;b&gt;in Perl 5.8.x and earlier&lt;/b&gt;, this pragma uses pseudo-hashes, the effect being that you can have objects with named fields which are as compact and as fast arrays to access, as long as the objects are accessed through properly typed variables.</source>
          <target state="translated">Adem&amp;aacute;s, &lt;b&gt;en Perl 5.8.xy versiones anteriores&lt;/b&gt; , este pragma utiliza pseudo-hashes, el efecto es que puede tener objetos con campos con nombre que son tan compactos y matrices de acceso r&amp;aacute;pido, siempre y cuando se acceda a los objetos a trav&amp;eacute;s de variables escritas correctamente. .</target>
        </trans-unit>
        <trans-unit id="67b0ddab77dcdca452f298cae2c04c86ed3d38be" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;\c\&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; yields &lt;code&gt; chr(28) . &quot;&lt;i&gt;X&lt;/i&gt;&quot;&lt;/code&gt; for any</source>
          <target state="translated">Adem&amp;aacute;s, &lt;code&gt;\c\&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; produce &lt;code&gt; chr(28) . &quot;&lt;i&gt;X&lt;/i&gt;&quot;&lt;/code&gt; para cualquier</target>
        </trans-unit>
        <trans-unit id="d7b7987422ffa4fcf0f2ef8eb8b0440e2263954b" translate="yes" xml:space="preserve">
          <source>Also, Case_Folding is accessible through the &lt;code&gt;/i&lt;/code&gt; modifier in regular expressions, the &lt;code&gt;\F&lt;/code&gt; transliteration escape, and the &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">Adem&amp;aacute;s, Case_Folding es accesible a trav&amp;eacute;s del modificador &lt;code&gt;/i&lt;/code&gt; en expresiones regulares, el escape de transliteraci&amp;oacute;n &lt;code&gt;\F&lt;/code&gt; y el operador &lt;code&gt;&lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d028de5400e80b7bddfc22d550144658f5c96f35" translate="yes" xml:space="preserve">
          <source>Also, Case_Folding is accessible through the &lt;code&gt;/i&lt;/code&gt; modifier in regular expressions, the &lt;code&gt;\F&lt;/code&gt; transliteration escape, and the &lt;code&gt;&lt;a href=&quot;perlfunc#fc&quot;&gt;fc&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329290910e0fbb3b491e01928584618de2f21b4e" translate="yes" xml:space="preserve">
          <source>Also, Configure might abort with</source>
          <target state="translated">Además,Configurar podría abortar con</target>
        </trans-unit>
        <trans-unit id="dbf6f9732bd6d02a3c14e683c3aa4b4c3c151f41" translate="yes" xml:space="preserve">
          <source>Also, a &lt;code&gt;&quot;r&quot;&lt;/code&gt; and/or &lt;code&gt;&quot;w&quot;&lt;/code&gt; in &lt;code&gt;$sMode&lt;/code&gt; is used to decide how the file descriptor is converted into a Perl file handle, even though this doesn't appear to make a difference. One of the following is used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e804a10723cc82e329f560a2f2a4e122d8ad225" translate="yes" xml:space="preserve">
          <source>Also, a backslash followed by two or three octal digits is considered an octal number.</source>
          <target state="translated">Además,una barra invertida seguida de dos o tres dígitos octales se considera un número octal.</target>
        </trans-unit>
        <trans-unit id="931d2aa4d5ca7dba171a5dba8982f8a76fb7815e" translate="yes" xml:space="preserve">
          <source>Also, as of Perl 5.30, delimiters which are unassigned code points but that may someday become assigned are prohibited. Otherwise, code that works today would fail to compile if the currently unassigned delimiter ends up being something that isn't a stand-alone grapheme. Because Unicode is never going to assign &lt;a href=&quot;perlunicode#Noncharacter-code-points&quot;&gt;non-character code points&lt;/a&gt;, nor &lt;a href=&quot;perlunicode#Beyond-Unicode-code-points&quot;&gt;code points that are above the legal Unicode maximum&lt;/a&gt;, those can be delimiters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc421c7386da7b14eefaf275d4a113f5c542cb3" translate="yes" xml:space="preserve">
          <source>Also, both these methods currently allow only single characters to be named. To name a sequence of characters, use a &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;custom translator&lt;/a&gt; (described below).</source>
          <target state="translated">Adem&amp;aacute;s, ambos m&amp;eacute;todos permiten actualmente nombrar solo caracteres individuales. Para nombrar una secuencia de caracteres, use un &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;traductor personalizado&lt;/a&gt; (descrito a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="0b19a92a5a63a3defc0247ff7123f75e1b423945" translate="yes" xml:space="preserve">
          <source>Also, calling &amp;amp;$coderef($lh, ...parameters...) can throw any sort of exception (if, say, code in that sub tries to divide by zero). But a very common exception occurs when you have Bracket Notation text that says to call a method &quot;foo&quot;, but there is no such method. (E.g., &quot;You have [qua&lt;b&gt;tn&lt;/b&gt;,_1,ball].&quot; will throw an exception on trying to call $lh-&amp;gt;qua&lt;b&gt;tn&lt;/b&gt;($_[1],'ball') -- you presumably meant &quot;quant&quot;.) &lt;code&gt;maketext&lt;/code&gt; catches these exceptions, but only to make the error message more readable, at which point it rethrows the exception.</source>
          <target state="translated">Adem&amp;aacute;s, llamar a &amp;amp; $ coderef ($ lh, ... par&amp;aacute;metros ...) puede generar cualquier tipo de excepci&amp;oacute;n (si, digamos, el c&amp;oacute;digo en ese sub intenta dividir por cero). Pero una excepci&amp;oacute;n muy com&amp;uacute;n ocurre cuando tiene un texto de notaci&amp;oacute;n entre corchetes que dice llamar a un m&amp;eacute;todo &quot;foo&quot;, pero no existe tal m&amp;eacute;todo. (Por ejemplo, &quot;Tienes [qua &lt;b&gt;tn&lt;/b&gt; , _1, ball].&quot; Lanzar&amp;aacute; una excepci&amp;oacute;n al intentar llamar $ lh-&amp;gt; qua &lt;b&gt;tn&lt;/b&gt; ($ _ [1], 'ball') - presumiblemente quer&amp;iacute;as decir &quot;quant&quot;. ) &lt;code&gt;maketext&lt;/code&gt; detecta estas excepciones, pero solo para hacer que el mensaje de error sea m&amp;aacute;s legible, momento en el que vuelve a generar la excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bd6593efc170267903ffe758130a7c9bc58d5233" translate="yes" xml:space="preserve">
          <source>Also, entries like</source>
          <target state="translated">También,entradas como</target>
        </trans-unit>
        <trans-unit id="74a420b208a6c382bb28f75840a5f1acef599188" translate="yes" xml:space="preserve">
          <source>Also, every C program that uses Perl must link in the</source>
          <target state="translated">Además,cada programa C que usa Perl debe enlazar en el</target>
        </trans-unit>
        <trans-unit id="34500a88731ba3291ee1333607a6b7ca5f090a54" translate="yes" xml:space="preserve">
          <source>Also, feel free to play with experimental features. Run</source>
          <target state="translated">Además,siéntase libre de jugar con características experimentales.Ejecute</target>
        </trans-unit>
        <trans-unit id="efa6c1b4904cf64e5362ea949feda8f167d890cd" translate="yes" xml:space="preserve">
          <source>Also, for a somewhat finer-grained set of characters that are in programming language identifiers beyond the ASCII range, you may wish to instead use the more customized &lt;a href=&quot;#Unicode-Properties&quot;&gt;&quot;Unicode Properties&quot;&lt;/a&gt;, &lt;code&gt;\p{ID_Start}&lt;/code&gt;, &lt;code&gt;\p{ID_Continue}&lt;/code&gt;, &lt;code&gt;\p{XID_Start}&lt;/code&gt;, and &lt;code&gt;\p{XID_Continue}&lt;/code&gt;. See &lt;a href=&quot;http://unicode.org/reports/tr31&quot;&gt;http://unicode.org/reports/tr31&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8f99a26ea97ae4edab854723c19d8a2e3a7a2e" translate="yes" xml:space="preserve">
          <source>Also, for a somewhat finer-grained set of characters that are in programming language identifiers beyond the ASCII range, you may wish to instead use the more customized &lt;a href=&quot;#Unicode-Properties&quot;&gt;Unicode Properties&lt;/a&gt;, &lt;code&gt;\p{ID_Start}&lt;/code&gt; , &lt;code&gt;\p{ID_Continue}&lt;/code&gt; , &lt;code&gt;\p{XID_Start}&lt;/code&gt; , and &lt;code&gt;\p{XID_Continue}&lt;/code&gt; . See &lt;a href=&quot;http://unicode.org/reports/tr31&quot;&gt;http://unicode.org/reports/tr31&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, para un conjunto de caracteres algo m&amp;aacute;s detallado que se encuentran en identificadores de lenguaje de programaci&amp;oacute;n m&amp;aacute;s all&amp;aacute; del rango ASCII, es posible que desee utilizar las &lt;a href=&quot;#Unicode-Properties&quot;&gt;propiedades Unicode&lt;/a&gt; m&amp;aacute;s personalizadas , &lt;code&gt;\p{ID_Start}&lt;/code&gt; , &lt;code&gt;\p{ID_Continue}&lt;/code&gt; , &lt;code&gt;\p{XID_Start}&lt;/code&gt; y &lt;code&gt;\p{XID_Continue}&lt;/code&gt; . Ver &lt;a href=&quot;http://unicode.org/reports/tr31&quot;&gt;http://unicode.org/reports/tr31&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccef320717b4d17e6eccfe71944895dfdb94c8a6" translate="yes" xml:space="preserve">
          <source>Also, having valid values as keys becomes very useful if you set up an _AUTO lexicon. _AUTO lexicons are discussed in a later section.</source>
          <target state="translated">Además,tener valores válidos como claves se vuelve muy útil si se establece un léxico de _AUTO.Los léxicos de AUTO se discuten en una sección posterior.</target>
        </trans-unit>
        <trans-unit id="57c4e07e0cc219d38dd06e6e1bcf0b1ea8e52540" translate="yes" xml:space="preserve">
          <source>Also, if the SV passed to &lt;code&gt;mg_find&lt;/code&gt; or &lt;code&gt;mg_findext&lt;/code&gt; is not of type SVt_PVMG, Perl may core dump.</source>
          <target state="translated">Adem&amp;aacute;s, si el SV pasado a &lt;code&gt;mg_find&lt;/code&gt; o &lt;code&gt;mg_findext&lt;/code&gt; no es del tipo SVt_PVMG, Perl puede realizar un volcado del n&amp;uacute;cleo.</target>
        </trans-unit>
        <trans-unit id="a715fbfabba33c1ab0f07edc90c111741da66e2f" translate="yes" xml:space="preserve">
          <source>Also, in binary properties, 'Yes', 'T', and 'True' are all synonyms for 'Y'. And 'No', 'F', and 'False' are all synonyms for 'N'. The table shows 'Y*' and 'N*' to indicate this, and doesn't have separate entries for the other possibilities. Note that not all properties which have values 'Yes' and 'No' are binary, and they have all their values spelled out without using this wild card, and a &lt;code&gt;NOT&lt;/code&gt; clause in their description that highlights their not being binary. These also require the compound form to match them, whereas true binary properties have both single and compound forms available.</source>
          <target state="translated">Adem&amp;aacute;s, en las propiedades binarias, 'S&amp;iacute;', 'T' y 'Verdadero' son sin&amp;oacute;nimos de 'Y'. Y 'No', 'F' y 'Falso' son sin&amp;oacute;nimos de 'N'. La tabla muestra 'Y *' y 'N *' para indicar esto, y no tiene entradas separadas para las otras posibilidades. Tenga en cuenta que no todas las propiedades que tienen valores 'S&amp;iacute;' y 'No' son binarias, y tienen todos sus valores detallados sin usar este comod&amp;iacute;n, y una cl&amp;aacute;usula &lt;code&gt;NOT&lt;/code&gt; en su descripci&amp;oacute;n que resalta que no son binarios. Estos tambi&amp;eacute;n requieren que la forma compuesta coincida con ellos, mientras que las verdaderas propiedades binarias tienen formas simples y compuestas disponibles.</target>
        </trans-unit>
        <trans-unit id="a00a976f777c7c9555d5a4f1c975df6f1666beb4" translate="yes" xml:space="preserve">
          <source>Also, in the context of &lt;b&gt;Unicode&lt;/b&gt;, a writing system for a particular language or group of languages, such as Greek, Bengali, or Tengwar.</source>
          <target state="translated">Adem&amp;aacute;s, en el contexto de &lt;b&gt;Unicode&lt;/b&gt; , un sistema de escritura para un idioma o grupo de idiomas en particular, como el griego, el bengal&amp;iacute; o el tengwar.</target>
        </trans-unit>
        <trans-unit id="d74824efd3c4979bad6a6f8c4e477bf4cb023fd4" translate="yes" xml:space="preserve">
          <source>Also, it's worth noting that patterns defined this way probably will not be as efficient, as the optimizer is not very clever about handling them.</source>
          <target state="translated">Además,cabe señalar que los patrones definidos de esta manera probablemente no serán tan eficientes,ya que el optimizador no es muy inteligente para manejarlos.</target>
        </trans-unit>
        <trans-unit id="487cc7057b2c00a1fbc251ce9c403787bcbb592b" translate="yes" xml:space="preserve">
          <source>Also, lines should not be split within &lt;code&gt;CRLF&lt;/code&gt; (i.e. there is no empty line between &lt;code&gt;\r&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt; ). For &lt;code&gt;CRLF&lt;/code&gt; , try the &lt;code&gt;:crlf&lt;/code&gt; layer (see &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;).</source>
          <target state="translated">Adem&amp;aacute;s, las l&amp;iacute;neas no deben dividirse dentro de &lt;code&gt;CRLF&lt;/code&gt; (es decir, no hay una l&amp;iacute;nea vac&amp;iacute;a entre &lt;code&gt;\r&lt;/code&gt; y &lt;code&gt;\n&lt;/code&gt; ). Para &lt;code&gt;CRLF&lt;/code&gt; , pruebe la capa &lt;code&gt;:crlf&lt;/code&gt; (consulte &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f3992030bd7e3a922eb5df07ea510b7432d80298" translate="yes" xml:space="preserve">
          <source>Also, lines should not be split within &lt;code&gt;CRLF&lt;/code&gt; (i.e. there is no empty line between &lt;code&gt;\r&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt;). For &lt;code&gt;CRLF&lt;/code&gt;, try the &lt;code&gt;:crlf&lt;/code&gt; layer (see &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63323aa4e4ec3045e43bf822a9f6601fadcf053b" translate="yes" xml:space="preserve">
          <source>Also, negative signal values don't do anything special under VMS; they're just converted to the corresponding positive value.</source>
          <target state="translated">Además,los valores de la señal negativa no hacen nada especial bajo el VMS;sólo se convierten al correspondiente valor positivo.</target>
        </trans-unit>
        <trans-unit id="6a350d1c09fc9665a8e389e53064c822190440b0" translate="yes" xml:space="preserve">
          <source>Also, note that using the file tests for security purposes is a lost cause from the start: there is a window open for race conditions (who is to say that the permissions will not change between the test and the real operation?). Therefore if you are serious about security, just try the real operation and test for its success - think in terms of atomic operations. Filetests are more useful for filesystem administrative tasks, when you have no need for the content of the elements on disk.</source>
          <target state="translated">Además,tenga en cuenta que el uso de las pruebas de archivo con fines de seguridad es una causa perdida desde el principio:hay una ventana abierta para las condiciones de carrera (¿quién dice que los permisos no cambiarán entre la prueba y la operación real?).Por lo tanto,si se toma en serio la seguridad,sólo hay que probar la operación real y comprobar su éxito:piense en términos de operaciones atómicas.Las pruebas de archivos son más útiles para las tareas administrativas del sistema de archivos,cuando no se necesita el contenido de los elementos del disco.</target>
        </trans-unit>
        <trans-unit id="d574d865815009daf05f1054bf415b0bf6943266" translate="yes" xml:space="preserve">
          <source>Also, note the following:</source>
          <target state="translated">Además,tenga en cuenta lo siguiente:</target>
        </trans-unit>
        <trans-unit id="48ddb81f1627e1f3a6389ef3f6f1aa66ba367e47" translate="yes" xml:space="preserve">
          <source>Also, once a project is otherwise complete and you start to localize it, you can scrape together all the various keys you use, and pass it to a translator; and then the translator's work will go faster if what he's presented is this:</source>
          <target state="translated">Además,una vez que un proyecto está terminado y empiezas a localizarlo,puedes reunir las distintas claves que utilizas y pasárselas a un traductor;y entonces el trabajo del traductor irá más rápido si lo que se presenta es esto:</target>
        </trans-unit>
        <trans-unit id="25de230710079ae2e7ac75bdcf59f8719d1c3ed7" translate="yes" xml:space="preserve">
          <source>Also, perl can be recompiled to operate on an earlier version of the Unicode standard. Further information is at &lt;code&gt;$Config{privlib}&lt;/code&gt; /</source>
          <target state="translated">Adem&amp;aacute;s, perl puede recompilarse para operar en una versi&amp;oacute;n anterior del est&amp;aacute;ndar Unicode. M&amp;aacute;s informaci&amp;oacute;n est&amp;aacute; en &lt;code&gt;$Config{privlib}&lt;/code&gt; /</target>
        </trans-unit>
        <trans-unit id="b542e84834d4e9866d33acb374e33e8f660c85fa" translate="yes" xml:space="preserve">
          <source>Also, perl can be recompiled to operate on an earlier version of the Unicode standard. Further information is at &lt;code&gt;$Config{privlib}&lt;/code&gt;/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76997e16af65c741ca3a61aadd72db51de092e73" translate="yes" xml:space="preserve">
          <source>Also, since &lt;code&gt;$x&lt;/code&gt; is lexical, it can't be reached or modified by any Perl code outside.</source>
          <target state="translated">Adem&amp;aacute;s, dado que &lt;code&gt;$x&lt;/code&gt; es l&amp;eacute;xico, ning&amp;uacute;n c&amp;oacute;digo Perl externo puede alcanzarlo ni modificarlo.</target>
        </trans-unit>
        <trans-unit id="38f33518e3f4f0a218000c4a9eb29242c2ff03c6" translate="yes" xml:space="preserve">
          <source>Also, since the number of opcodes in your current version of perl might not be an exact multiple of eight, there may be unused bits in the last byte of an upset. This should not cause any problems (Opcode functions ignore those extra bits) but it does mean that using the ~ operator will typically not produce the same 'physical' opset 'string' as the invert_opset function.</source>
          <target state="translated">Además,como el número de opcodes en su versión actual de perl podría no ser un múltiplo exacto de ocho,puede haber bits sin usar en el último byte de una alteración.Esto no debería causar ningún problema (las funciones de opcode ignoran esos bits extra)pero significa que usar el operador ~ típicamente no producirá la misma 'cadena' de opsets 'física' que la función invert_opset.</target>
        </trans-unit>
        <trans-unit id="3ed7ac3c49479a3dd530e1364bfdfcfdef42d4e9" translate="yes" xml:space="preserve">
          <source>Also, some common socket &quot;newline&quot; constants are provided: the constants &lt;code&gt;CR&lt;/code&gt; , &lt;code&gt;LF&lt;/code&gt; , and &lt;code&gt;CRLF&lt;/code&gt; , as well as &lt;code&gt;$CR&lt;/code&gt; , &lt;code&gt;$LF&lt;/code&gt; , and &lt;code&gt;$CRLF&lt;/code&gt; , which map to &lt;code&gt;\015&lt;/code&gt; , &lt;code&gt;\012&lt;/code&gt; , and &lt;code&gt;\015\012&lt;/code&gt; . If you do not want to use the literal characters in your programs, then use the constants provided here. They are not exported by default, but can be imported individually, and with the &lt;code&gt;:crlf&lt;/code&gt; export tag:</source>
          <target state="translated">Adem&amp;aacute;s, se proporcionan algunas constantes de &quot;nueva l&amp;iacute;nea&quot; de socket comunes: las constantes &lt;code&gt;CR&lt;/code&gt; , &lt;code&gt;LF&lt;/code&gt; y &lt;code&gt;CRLF&lt;/code&gt; , as&amp;iacute; como &lt;code&gt;$CR&lt;/code&gt; , &lt;code&gt;$LF&lt;/code&gt; y &lt;code&gt;$CRLF&lt;/code&gt; , que se asignan a &lt;code&gt;\015&lt;/code&gt; , &lt;code&gt;\012&lt;/code&gt; y &lt;code&gt;\015\012&lt;/code&gt; . Si no desea utilizar los caracteres literales en sus programas, utilice las constantes que se proporcionan aqu&amp;iacute;. No se exportan de forma predeterminada, pero se pueden importar individualmente y con la etiqueta de exportaci&amp;oacute;n &lt;code&gt;:crlf&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="09c79652fdab8435dc64bf1d503eb44817957310" translate="yes" xml:space="preserve">
          <source>Also, some common socket &quot;newline&quot; constants are provided: the constants &lt;code&gt;CR&lt;/code&gt;, &lt;code&gt;LF&lt;/code&gt;, and &lt;code&gt;CRLF&lt;/code&gt;, as well as &lt;code&gt;$CR&lt;/code&gt;, &lt;code&gt;$LF&lt;/code&gt;, and &lt;code&gt;$CRLF&lt;/code&gt;, which map to &lt;code&gt;\015&lt;/code&gt;, &lt;code&gt;\012&lt;/code&gt;, and &lt;code&gt;\015\012&lt;/code&gt;. If you do not want to use the literal characters in your programs, then use the constants provided here. They are not exported by default, but can be imported individually, and with the &lt;code&gt;:crlf&lt;/code&gt; export tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c4a82fda1ed827381af159c98e8fcbdf05900b" translate="yes" xml:space="preserve">
          <source>Also, some special instructions for building Perl with Sun Studio on Linux. Following the normal &lt;code&gt;Configure&lt;/code&gt; , you have to run make as follows:</source>
          <target state="translated">Adem&amp;aacute;s, algunas instrucciones especiales para construir Perl con Sun Studio en Linux. Siguiendo la &lt;code&gt;Configure&lt;/code&gt; normal , debe ejecutar make de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="430b83395a22758023df144cbbf527affef6a44c" translate="yes" xml:space="preserve">
          <source>Also, subroutines could be declared with the &lt;code&gt;:locked&lt;/code&gt; attribute which would serialize access to the subroutine, but allowed different threads non-simultaneous access.</source>
          <target state="translated">Adem&amp;aacute;s, las subrutinas podr&amp;iacute;an declararse con el atributo &lt;code&gt;:locked&lt;/code&gt; que serializar&amp;iacute;a el acceso a la subrutina, pero permitir&amp;iacute;a el acceso no simult&amp;aacute;neo de diferentes subprocesos.</target>
        </trans-unit>
        <trans-unit id="f700fce01f8bef830aa30a8774e7a762bfbaf65f" translate="yes" xml:space="preserve">
          <source>Also, the internal representation of Time::Piece-&amp;gt;strftime deviates from the standard POSIX implementation in that is uses the epoch (instead of separate year, month, day parts). This change was added in version 1.30. If you must have a more traditional strftime (which will normally never calculate day light saving times correctly), you can pass the date parts from Time::Piece into the strftime function provided by the POSIX module (see strftime in &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7201d576462a40ab9a535c50ec57d12c94dd4c2" translate="yes" xml:space="preserve">
          <source>Also, the object is configured such that it stringifies to the name of the temporary file and so can be compared to a filename directly. It numifies to the &lt;code&gt;refaddr&lt;/code&gt; the same as other handles and so can be compared to other handles with &lt;code&gt;==&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb14deb83dae5ba493a96acfadaf1236cbdc5ea" translate="yes" xml:space="preserve">
          <source>Also, the object is configured such that it stringifies to the name of the temporary file and so can be compared to a filename directly. It numifies to the C</source>
          <target state="translated">Además,el objeto está configurado de tal manera que se encadena al nombre del archivo temporal y así puede ser comparado con un nombre de archivo directamente.Se numera a la C</target>
        </trans-unit>
        <trans-unit id="913c9e19c71d84db5eb4e7b9fa93a06fccc33227" translate="yes" xml:space="preserve">
          <source>Also, the range 'A' - 'Z' in ASCII is an unbroken sequence of 26 upper case alphabetic characters. That is not true in EBCDIC. Nor for 'a' to 'z'. But '0' - '9' is an unbroken range in both systems. Don't assume anything about other ranges. (Note that special handling of ranges in regular expression patterns and transliterations makes it appear to Perl code that the aforementioned ranges are all unbroken.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7807da341a2e1187eef533ebec80cd0117d203" translate="yes" xml:space="preserve">
          <source>Also, the range 'A' - 'Z' in ASCII is an unbroken sequence of 26 upper case alphabetic characters. That is not true in EBCDIC. Nor for 'a' to 'z'. But '0' - '9' is an unbroken range in both systems. Don't assume anything about other ranges. (Note that special handling of ranges in regular expression patterns makes it appear to Perl code that the aforementioned ranges are all unbroken.)</source>
          <target state="translated">Además,el rango 'A'-'Z' en ASCII es una secuencia ininterrumpida de 26 caracteres alfabéticos en mayúsculas.Eso no es cierto en el EBCDIC.Ni tampoco para la 'a' a la 'z'.Pero &quot;0&quot;-&quot;9&quot; es un rango ininterrumpido en ambos sistemas.No asumas nada sobre otros rangos.(Nótese que el manejo especial de los rangos en los patrones de expresión regular hace que parezca al código Perl que los mencionados rangos son todos ininterrumpidos).</target>
        </trans-unit>
        <trans-unit id="ed48bbc731848457db80d2fadad2fe9e698169b3" translate="yes" xml:space="preserve">
          <source>Also, the use of Unicode may present security issues that aren't obvious, see &lt;a href=&quot;#Security-Implications-of-Unicode&quot;&gt;&quot;Security Implications of Unicode&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e213d7b8a81bd451ffb3f3ae8fa862e904a6c3" translate="yes" xml:space="preserve">
          <source>Also, the use of Unicode may present security issues that aren't obvious. Read &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr36&quot;&gt;Unicode Security Considerations&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, el uso de Unicode puede presentar problemas de seguridad que no son obvios. Lea las &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr36&quot;&gt;consideraciones de seguridad de Unicode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a6ddd5f6cea51490776d1ee7aa46674933e080d" translate="yes" xml:space="preserve">
          <source>Also, under this modifier, case-insensitive matching works on the full set of Unicode characters. The &lt;code&gt;KELVIN SIGN&lt;/code&gt; , for example matches the letters &quot;k&quot; and &quot;K&quot;; and &lt;code&gt;LATIN SMALL LIGATURE FF&lt;/code&gt; matches the sequence &quot;ff&quot;, which, if you're not prepared, might make it look like a hexadecimal constant, presenting another potential security issue. See &lt;a href=&quot;http://unicode.org/reports/tr36&quot;&gt;http://unicode.org/reports/tr36&lt;/a&gt; for a detailed discussion of Unicode security issues.</source>
          <target state="translated">Adem&amp;aacute;s, bajo este modificador, la coincidencia que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas funciona en el conjunto completo de caracteres Unicode. El &lt;code&gt;KELVIN SIGN&lt;/code&gt; , por ejemplo, coincide con las letras &quot;k&quot; y &quot;K&quot;; y &lt;code&gt;LATIN SMALL LIGATURE FF&lt;/code&gt; coincide con la secuencia &quot;ff&quot;, que, si no est&amp;aacute; preparado, puede hacer que parezca una constante hexadecimal, presentando otro problema de seguridad potencial. Consulte &lt;a href=&quot;http://unicode.org/reports/tr36&quot;&gt;http://unicode.org/reports/tr36&lt;/a&gt; para obtener una discusi&amp;oacute;n detallada de los problemas de seguridad de Unicode.</target>
        </trans-unit>
        <trans-unit id="082c639d640961ab2741dc8437aea7d26245da44" translate="yes" xml:space="preserve">
          <source>Also, under this modifier, case-insensitive matching works on the full set of Unicode characters. The &lt;code&gt;KELVIN SIGN&lt;/code&gt;, for example matches the letters &quot;k&quot; and &quot;K&quot;; and &lt;code&gt;LATIN SMALL LIGATURE FF&lt;/code&gt; matches the sequence &quot;ff&quot;, which, if you're not prepared, might make it look like a hexadecimal constant, presenting another potential security issue. See &lt;a href=&quot;https://unicode.org/reports/tr36&quot;&gt;https://unicode.org/reports/tr36&lt;/a&gt; for a detailed discussion of Unicode security issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d458ad7a020a232313ae8d56db7bcab0ded5305" translate="yes" xml:space="preserve">
          <source>Also, various synonyms like &lt;code&gt;\p{Alpha}&lt;/code&gt; for &lt;code&gt;\p{XPosixAlpha}&lt;/code&gt; ; all listed in &lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;Properties accessible through \p{} and \P{} in perluniprops&lt;/a&gt;</source>
          <target state="translated">Adem&amp;aacute;s, varios sin&amp;oacute;nimos como &lt;code&gt;\p{Alpha}&lt;/code&gt; para &lt;code&gt;\p{XPosixAlpha}&lt;/code&gt; ; todos listados en &lt;a href=&quot;perluniprops#Properties-accessible-through-%5cp%7b%7d-and-%5cP%7b%7d&quot;&gt;Propiedades accesibles a trav&amp;eacute;s de \ p {} y \ P {} en perluniprops&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="185cbf92e7b7051aa2f9930ee2ca151063ceb454" translate="yes" xml:space="preserve">
          <source>Also, various synonyms like &lt;code&gt;\p{Alpha}&lt;/code&gt; for &lt;code&gt;\p{XPosixAlpha}&lt;/code&gt;; all listed in &lt;a href=&quot;perluniprops#Properties-accessible-through-%5Cp%7B%7D-and-%5CP%7B%7D&quot;&gt;&quot;Properties accessible through \p{} and \P{}&quot; in perluniprops&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd51e4e1d10037d178287b3c2e52d39f31c50f2" translate="yes" xml:space="preserve">
          <source>Also, when your</source>
          <target state="translated">Además,cuando tu</target>
        </trans-unit>
        <trans-unit id="94df63c3696c6e9f216a0b26ed643a62ffdfe44b" translate="yes" xml:space="preserve">
          <source>Also, white space, hyphens, and underscores are normally ignored everywhere between the {braces}, and hence can be freely added or removed even if the &lt;code&gt;/x&lt;/code&gt; modifier hasn't been specified on the regular expression. But in the table below a '&lt;b&gt;T&lt;/b&gt;' at the beginning of an entry means that tighter (stricter) rules are used for that entry:</source>
          <target state="translated">Adem&amp;aacute;s, los espacios en blanco, los guiones y los guiones bajos normalmente se ignoran en todas partes entre las {llaves} y, por lo tanto, se pueden agregar o eliminar libremente incluso si el modificador &lt;code&gt;/x&lt;/code&gt; no se ha especificado en la expresi&amp;oacute;n regular. Pero en la siguiente tabla, una ' &lt;b&gt;T&lt;/b&gt; ' al comienzo de una entrada significa que se usan reglas m&amp;aacute;s estrictas (m&amp;aacute;s estrictas) para esa entrada:</target>
        </trans-unit>
        <trans-unit id="87ea7db4a430030d90185495584807fc225cd906" translate="yes" xml:space="preserve">
          <source>Also:</source>
          <target state="translated">Also:</target>
        </trans-unit>
        <trans-unit id="554a943cef6b1565f2a13a13d21f280b671c0db6" translate="yes" xml:space="preserve">
          <source>Alter regular expression behaviour</source>
          <target state="translated">Alterar el comportamiento de expresión regular</target>
        </trans-unit>
        <trans-unit id="4b26f888988c3f23411577d380346f5e87008e97" translate="yes" xml:space="preserve">
          <source>Alternate Stack Manipulation</source>
          <target state="translated">Manipulación de pilas alternas</target>
        </trans-unit>
        <trans-unit id="baff84fe31ffd586fd0cbbd5cab56329f0775d04" translate="yes" xml:space="preserve">
          <source>Alternate form of specifying the local address to &lt;code&gt;bind()&lt;/code&gt; to. This should be an array of the form returned by &lt;code&gt;Socket::getaddrinfo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db36f7208c555076a29994a086e6ad6fe2b6c88" translate="yes" xml:space="preserve">
          <source>Alternate form of specifying the peer to &lt;code&gt;connect()&lt;/code&gt; to. This should be an array of the form returned by &lt;code&gt;Socket::getaddrinfo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4495ae5a9f0394b58820a885d0978ae962fd139c" translate="yes" xml:space="preserve">
          <source>Alternately I can pass an open filehandle as source and have the parser read from that rather than attempting to run a test script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5fc16ac82340f31ba65517d29fc05e91506541" translate="yes" xml:space="preserve">
          <source>Alternately I can supply the names of my substitute classes to the TAP::Harness constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9227d0ca3877e84e35d83f9ac364f43162e4ef9e" translate="yes" xml:space="preserve">
          <source>Alternately, if the language used to write my tests allows a shebang line I can use that to specify the interpreter. Here's a test written in PHP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd038ee8b646edddd400b75f62f9db870f503cd5" translate="yes" xml:space="preserve">
          <source>Alternately, if you have an SV that is a blessed reference, you can find out the stash pointer by using:</source>
          <target state="translated">Alternativamente,si tienes un SV que es una referencia bendita,puedes encontrar el puntero del escondite usando:</target>
        </trans-unit>
        <trans-unit id="6589e5a8ee283a61027f2499ac81f9bd22f55b5a" translate="yes" xml:space="preserve">
          <source>Alternately, if you import &lt;code&gt;:constants&lt;/code&gt; , you can use the following constants directly:</source>
          <target state="translated">Alternativamente, si importa &lt;code&gt;:constants&lt;/code&gt; , puede usar las siguientes constantes directamente:</target>
        </trans-unit>
        <trans-unit id="8a245817c61d1ffafbf0a5d7c18cd6a72b400a7e" translate="yes" xml:space="preserve">
          <source>Alternately, if you import &lt;code&gt;:constants&lt;/code&gt;, you can use the following constants directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3835ce5fac7a47f4550c37daaf24821ea36a9658" translate="yes" xml:space="preserve">
          <source>Alternately, if you use OS/2-ish shell, like CMD or 4os2, put the following at the start of your perl script:</source>
          <target state="translated">Alternativamente,si usas un shell OS/2-ish,como CMD o 4os2,pon lo siguiente al principio de tu script perl:</target>
        </trans-unit>
        <trans-unit id="3c02b30c04d1bd2e064bba714a6c966f7e7001cc" translate="yes" xml:space="preserve">
          <source>Alternately, try running pod2text on</source>
          <target state="translated">Alternativamente,intenta ejecutar pod2text en</target>
        </trans-unit>
        <trans-unit id="c6586bf995507ef47c1e8462c0b96f9bda48432b" translate="yes" xml:space="preserve">
          <source>Alternately, you can change to binary mode on an existing handle this way:</source>
          <target state="translated">Alternativamente,puedes cambiar a modo binario en una manija existente de esta manera:</target>
        </trans-unit>
        <trans-unit id="436c604fc9e91f4036987513f30ceb0b117df526" translate="yes" xml:space="preserve">
          <source>Alternately, you can set the global variable &lt;code&gt;$Carp::Verbose&lt;/code&gt; to true. See the &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; section below.</source>
          <target state="translated">Alternativamente, puede establecer la variable global &lt;code&gt;$Carp::Verbose&lt;/code&gt; en verdadero. Consulte la secci&amp;oacute;n &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="15f2c59a8b9b5baf596fabaf5af782241acbedb6" translate="yes" xml:space="preserve">
          <source>Alternately, you can specify the exact directory to place the extension's files by placing a &quot;PREFIX=/destination/directory&quot; after the make install (or in between the make and install if you have a brain-dead version of make). This can be very useful if you are building an extension that will eventually be distributed to multiple systems. You can then just archive the files in the destination directory and distribute them to your destination systems.</source>
          <target state="translated">Alternativamente,puedes especificar el directorio exacto para colocar los archivos de la extensión colocando un &quot;PREFIX=/destino/directorio&quot; después del make install (o entre el make y el install si tienes una versión de make con muerte cerebral).Esto puede ser muy útil si estás construyendo una extensión que eventualmente será distribuida a múltiples sistemas.Entonces puedes simplemente archivar los archivos en el directorio de destino y distribuirlos a tus sistemas de destino.</target>
        </trans-unit>
        <trans-unit id="e00c3a1ce8b9e2b0c7ee0051f3ec0d7cf8bcbdb9" translate="yes" xml:space="preserve">
          <source>Alternately, you can try to get a replacement for the system's &lt;b&gt;Execute&lt;/b&gt; command that honors the #!/usr/bin/perl syntax in scripts and set the s-Bit of your scripts. Then you can invoke your scripts like under UNIX with</source>
          <target state="translated">Alternativamente, puede intentar obtener un reemplazo para el comando &lt;b&gt;Ejecutar&lt;/b&gt; del sistema que respete la sintaxis #! / Usr / bin / perl en los scripts y establecer el s-Bit de sus scripts. Luego puede invocar sus scripts como en UNIX con</target>
        </trans-unit>
        <trans-unit id="70b8f05f7796eca9b3373c7ecd058a653ad0409c" translate="yes" xml:space="preserve">
          <source>Alternately, you can use &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, the regular expression quote operator (see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more details). It quotes and perhaps compiles the pattern, and you can apply regular expression flags to the pattern.</source>
          <target state="translated">Alternativamente, puede usar &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; , el operador de comillas de expresi&amp;oacute;n regular (vea &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; para m&amp;aacute;s detalles). Cita y quiz&amp;aacute;s compila el patr&amp;oacute;n, y puede aplicar marcas de expresi&amp;oacute;n regular al patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7d48931e8ff9955945645810ae372a2695434121" translate="yes" xml:space="preserve">
          <source>Alternately, you can use &lt;code&gt;qr//&lt;/code&gt;, the regular expression quote operator (see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more details). It quotes and perhaps compiles the pattern, and you can apply regular expression flags to the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b04c7a5831dedb851aed975f051c1cac400682e" translate="yes" xml:space="preserve">
          <source>Alternation</source>
          <target state="translated">Alternation</target>
        </trans-unit>
        <trans-unit id="be9a6aa6691045b50a599c27892a7efaa458c7af" translate="yes" xml:space="preserve">
          <source>Alternation allows a regexp to choose among alternatives, but by itself it is unsatisfying. The reason is that each alternative is a whole regexp, but sometime we want alternatives for just part of a regexp. For instance, suppose we want to search for housecats or housekeepers. The regexp &lt;code&gt;housecat|housekeeper&lt;/code&gt; fits the bill, but is inefficient because we had to type &lt;code&gt;house&lt;/code&gt; twice. It would be nice to have parts of the regexp be constant, like &lt;code&gt;house&lt;/code&gt; , and some parts have alternatives, like &lt;code&gt;cat|keeper&lt;/code&gt; .</source>
          <target state="translated">La alternancia permite que una expresi&amp;oacute;n regular elija entre alternativas, pero por s&amp;iacute; misma no es satisfactoria. La raz&amp;oacute;n es que cada alternativa es una expresi&amp;oacute;n regular completa, pero a veces queremos alternativas solo para una parte de una expresi&amp;oacute;n regular. Por ejemplo, supongamos que queremos buscar gatos dom&amp;eacute;sticos o amas de llaves. El &lt;code&gt;housecat|housekeeper&lt;/code&gt; regexp housecat) encaja perfectamente, pero es ineficiente porque tuvimos que escribir &lt;code&gt;house&lt;/code&gt; dos veces. Ser&amp;iacute;a bueno que algunas partes de la expresi&amp;oacute;n regular fueran constantes, como &lt;code&gt;house&lt;/code&gt; , y algunas partes tuvieran alternativas, como &lt;code&gt;cat|keeper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2748d57020b2771f7481af94280b0d7745a90798" translate="yes" xml:space="preserve">
          <source>Alternation allows a regexp to choose among alternatives, but by itself it is unsatisfying. The reason is that each alternative is a whole regexp, but sometime we want alternatives for just part of a regexp. For instance, suppose we want to search for housecats or housekeepers. The regexp &lt;code&gt;housecat|housekeeper&lt;/code&gt; fits the bill, but is inefficient because we had to type &lt;code&gt;house&lt;/code&gt; twice. It would be nice to have parts of the regexp be constant, like &lt;code&gt;house&lt;/code&gt;, and some parts have alternatives, like &lt;code&gt;cat|keeper&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf43ccde7eeaee521a4a189652a63c1baacf5e0" translate="yes" xml:space="preserve">
          <source>Alternations behave the same way in groups as out of them: at a given string position, the leftmost alternative that allows the regexp to match is taken. So in the last example at the first string position, &lt;code&gt;&quot;20&quot;&lt;/code&gt; matches the second alternative, but there is nothing left over to match the next two digits &lt;code&gt;\d\d&lt;/code&gt; . So Perl moves on to the next alternative, which is the null alternative and that works, since &lt;code&gt;&quot;20&quot;&lt;/code&gt; is two digits.</source>
          <target state="translated">Las alternancias se comportan de la misma manera en grupos que fuera de ellos: en una posici&amp;oacute;n de cadena dada, se toma la alternativa m&amp;aacute;s a la izquierda que permite que la expresi&amp;oacute;n regular coincida. Entonces, en el &amp;uacute;ltimo ejemplo en la primera posici&amp;oacute;n de la cadena, &lt;code&gt;&quot;20&quot;&lt;/code&gt; coincide con la segunda alternativa, pero no queda nada para coincidir con los siguientes dos d&amp;iacute;gitos &lt;code&gt;\d\d&lt;/code&gt; . Entonces, Perl pasa a la siguiente alternativa, que es la alternativa nula y que funciona, ya que &lt;code&gt;&quot;20&quot;&lt;/code&gt; son dos d&amp;iacute;gitos.</target>
        </trans-unit>
        <trans-unit id="ef0bb58311a4cc103103ca6beeb54a0245223e8c" translate="yes" xml:space="preserve">
          <source>Alternations behave the same way in groups as out of them: at a given string position, the leftmost alternative that allows the regexp to match is taken. So in the last example at the first string position, &lt;code&gt;&quot;20&quot;&lt;/code&gt; matches the second alternative, but there is nothing left over to match the next two digits &lt;code&gt;\d\d&lt;/code&gt;. So Perl moves on to the next alternative, which is the null alternative and that works, since &lt;code&gt;&quot;20&quot;&lt;/code&gt; is two digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45912dbd856f0ddf337c48eab0e2b6ac8ae702c" translate="yes" xml:space="preserve">
          <source>Alternative Hash Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92135acee6fb42da0402ddedc5b8263e8afa69de" translate="yes" xml:space="preserve">
          <source>Alternative capture group numbering</source>
          <target state="translated">Numeración de grupos de captura alternativos</target>
        </trans-unit>
        <trans-unit id="ef523340b1a308a5c82202213f6749b6e6b1eda0" translate="yes" xml:space="preserve">
          <source>Alternative libraries &lt;a href=&quot;Math::BigInt::Calc&quot;&gt;Math::BigInt::Calc&lt;/a&gt;, &lt;a href=&quot;Math::BigInt::GMP&quot;&gt;Math::BigInt::GMP&lt;/a&gt;, and &lt;a href=&quot;Math::BigInt::Pari&quot;&gt;Math::BigInt::Pari&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701e87ca0ad0ba8cd11eda21d6ba26ee826bdec9" translate="yes" xml:space="preserve">
          <source>Alternative libraries &lt;a href=&quot;Math::BigInt::FastCalc&quot;&gt;Math::BigInt::FastCalc&lt;/a&gt;, &lt;a href=&quot;Math::BigInt::GMP&quot;&gt;Math::BigInt::GMP&lt;/a&gt;, and &lt;a href=&quot;Math::BigInt::Pari&quot;&gt;Math::BigInt::Pari&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c07200d4699b036f2138680fade3c9689f7058" translate="yes" xml:space="preserve">
          <source>Alternative math libraries</source>
          <target state="translated">Bibliotecas de matemáticas alternativas</target>
        </trans-unit>
        <trans-unit id="6aa5c766a08c26061e42a91b28e7696a27f14067" translate="yes" xml:space="preserve">
          <source>Alternative option starters</source>
          <target state="translated">Arranques de opción alternativa</target>
        </trans-unit>
        <trans-unit id="443fe46b83982a5185e410eceac3b7185f7ae257" translate="yes" xml:space="preserve">
          <source>Alternative to Test::More::use_ok</source>
          <target state="translated">Alternativa a la prueba::Más::use_ok</target>
        </trans-unit>
        <trans-unit id="c7461a3c1c3204afbbfd69dbbccd1e2b59471f99" translate="yes" xml:space="preserve">
          <source>Alternative warn and die for modules</source>
          <target state="translated">La alternativa de advertir y morir por los módulos</target>
        </trans-unit>
        <trans-unit id="12e5972b55b252c3c9bc2d82985850d79c96249e" translate="yes" xml:space="preserve">
          <source>Alternatively edit the init file interactively via: 3rd mouse button -&amp;gt; New Display -&amp;gt; Edit Menu</source>
          <target state="translated">Alternativamente, edite el archivo de inicio de forma interactiva a trav&amp;eacute;s de: 3er bot&amp;oacute;n del mouse -&amp;gt; Nueva pantalla -&amp;gt; Men&amp;uacute; de edici&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="44c86b27ab468eef89d417477ce09eb4480abfb2" translate="yes" xml:space="preserve">
          <source>Alternatively look here: &lt;a href=&quot;http://www.unix.com/man-page/FreeBSD/3/strftime/&quot;&gt;http://www.unix.com/man-page/FreeBSD/3/strftime/&lt;/a&gt;</source>
          <target state="translated">Alternativamente, busque aqu&amp;iacute;: &lt;a href=&quot;http://www.unix.com/man-page/FreeBSD/3/strftime/&quot;&gt;http://www.unix.com/man-page/FreeBSD/3/strftime/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e35a7c6545b16241ad2de0b09b446ca8d6a30265" translate="yes" xml:space="preserve">
          <source>Alternatively one can use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d17661d2312f06dcd6c1a5156f20af2512c469b" translate="yes" xml:space="preserve">
          <source>Alternatively the list of subfields can by supplied as a scalar, thus</source>
          <target state="translated">Alternativamente la lista de subcampos puede ser suministrada como un escalar,así</target>
        </trans-unit>
        <trans-unit id="2d8ede1527fb5e6a736864b76d2f172c35af4997" translate="yes" xml:space="preserve">
          <source>Alternatively you can use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094a83381a58e4403aca1b491639e03749297bf0" translate="yes" xml:space="preserve">
          <source>Alternatively you can use the XPUSHs() macro, which combines a &lt;code&gt;EXTEND(SP, 1)&lt;/code&gt; and &lt;code&gt;PUSHs()&lt;/code&gt;. This is less efficient if you're pushing multiple values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3d4d311210785c85520063de48eeff7de6af69" translate="yes" xml:space="preserve">
          <source>Alternatively you can use the compiler directive our() to bring a dynamic variable into the current lexical scope.</source>
          <target state="translated">Alternativamente puede usar la directiva del compilador our()para traer una variable dinámica al ámbito léxico actual.</target>
        </trans-unit>
        <trans-unit id="2cec5cf8bbfadcf33f7e5849e13d536e2c1766e0" translate="yes" xml:space="preserve">
          <source>Alternatively you can use:</source>
          <target state="translated">Alternativamente puedes usar:</target>
        </trans-unit>
        <trans-unit id="43f0cea439a0fe2f49f0e9b79ff517dcdbec8d84" translate="yes" xml:space="preserve">
          <source>Alternatively you may be able to get these docs prebuilt from &lt;code&gt;CPAN&lt;/code&gt; .</source>
          <target state="translated">Alternativamente, puede obtener estos documentos predise&amp;ntilde;ados de &lt;code&gt;CPAN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7f7013a74aa2034d027da86e6edefa6ad1f3b65" translate="yes" xml:space="preserve">
          <source>Alternatively you may be able to get these docs prebuilt from CPAN.</source>
          <target state="translated">Alternativamente,puede obtener estos documentos preconstruidos de la CPAN.</target>
        </trans-unit>
        <trans-unit id="06dab9dc9469b67b9f013b1f7d978b8fd09b7e74" translate="yes" xml:space="preserve">
          <source>Alternatively, Berkeley DB version 1 is available at your nearest CPAN archive in</source>
          <target state="translated">Alternativamente,la versión 1 de la base de datos Berkeley está disponible en el archivo CPAN más cercano en</target>
        </trans-unit>
        <trans-unit id="4613df2f546fec79f85cfae70e64069cb1648bc9" translate="yes" xml:space="preserve">
          <source>Alternatively, a version range &lt;b&gt;may&lt;/b&gt; use the operators &amp;lt; (less than), &amp;lt;= (less than or equal), &amp;gt; (greater than), &amp;gt;= (greater than or equal), == (equal), and != (not equal). For example, the specification &lt;code&gt;&amp;lt; 2.0&lt;/code&gt; means that any version of the prerequisite less than 2.0 is suitable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18aa5e8fea6653b702c48738f98b3e8db633fcaf" translate="yes" xml:space="preserve">
          <source>Alternatively, an array reference of section specifications can be used:</source>
          <target state="translated">Como alternativa,se puede utilizar una referencia de la matriz de las especificaciones de la sección:</target>
        </trans-unit>
        <trans-unit id="89c6743b65649f02ac7d006f9c75c999b8c0f7a0" translate="yes" xml:space="preserve">
          <source>Alternatively, as of version 2.24, the configuration options may be passed together with the &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement:</source>
          <target state="translated">Alternativamente, a partir de la versi&amp;oacute;n 2.24, las opciones de configuraci&amp;oacute;n se pueden pasar junto con la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="865e46b39731975715e5505f357dc99fc1bb9e96" translate="yes" xml:space="preserve">
          <source>Alternatively, as of version 2.24, the configuration options may be passed together with the &lt;code&gt;use&lt;/code&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6383e28e6083bea50110ff705c0169c065025b" translate="yes" xml:space="preserve">
          <source>Alternatively, if &lt;code&gt;decode_pod&lt;/code&gt; is set, it will decode the collected pod sections according to the &lt;code&gt;=encoding&lt;/code&gt; declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f72336ff028f49493e1034a2d5aa23e62a23ff" translate="yes" xml:space="preserve">
          <source>Alternatively, if the &lt;code&gt;string&lt;/code&gt; parameter is given, the supplied string will be parsed instead of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9aa6c54c04158a408f2c0b76a7a51f158187ce5" translate="yes" xml:space="preserve">
          <source>Alternatively, if you don't need perlglob.exe and don't need to enable the USE_SETARGV option then you can safely just remove all mention of $(GLOBEXE) from win32/Makefile and setargv.obj won't be required anyway.</source>
          <target state="translated">Alternativamente,si no necesitas perlglob.exe y no necesitas habilitar la opción USE_SETARGV entonces puedes eliminar con seguridad toda mención de $(GLOBEXE)de win32/Makefile y setargv.obj no será necesario de todos modos.</target>
        </trans-unit>
        <trans-unit id="068fceff1e33e5da627a6b110b456936f6082b0c" translate="yes" xml:space="preserve">
          <source>Alternatively, if you have the &lt;code&gt;gunzip&lt;/code&gt; program available, you can use this to read compressed files</source>
          <target state="translated">Alternativamente, si tiene el programa &lt;code&gt;gunzip&lt;/code&gt; disponible, puede usarlo para leer archivos comprimidos</target>
        </trans-unit>
        <trans-unit id="4d16466752d2c087e599f1526f5793b26a5e2b0a" translate="yes" xml:space="preserve">
          <source>Alternatively, if you want to read the &lt;code&gt;&quot;data1&quot;&lt;/code&gt; member into memory, use a scalar reference for the &lt;code&gt;output&lt;/code&gt; parameter.</source>
          <target state="translated">Alternativamente, si desea leer el miembro &lt;code&gt;&quot;data1&quot;&lt;/code&gt; en la memoria, use una referencia escalar para el par&amp;aacute;metro de &lt;code&gt;output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="067a937688c2a4c5c986d21853b255fbc5aefe6e" translate="yes" xml:space="preserve">
          <source>Alternatively, one can round the results explicitly using one of &lt;a href=&quot;#round%28%29&quot;&gt;&quot;round()&quot;&lt;/a&gt;, &lt;a href=&quot;#bround%28%29&quot;&gt;&quot;bround()&quot;&lt;/a&gt; or &lt;a href=&quot;#bfround%28%29&quot;&gt;&quot;bfround()&quot;&lt;/a&gt; or by passing the desired accuracy to the method as an additional parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742c3c00178ebe72a9bfad0e3ef29810b62b04e9" translate="yes" xml:space="preserve">
          <source>Alternatively, put this as the first line of your script:</source>
          <target state="translated">Alternativamente,pon esto como la primera línea de tu guión:</target>
        </trans-unit>
        <trans-unit id="daefa0329439a8224d52050e5214c48286284b22" translate="yes" xml:space="preserve">
          <source>Alternatively, rather than having to explicitly name each of the files that you want to compress, you could use a fileglob to select all the &lt;code&gt;txt&lt;/code&gt; files in the current directory, as follows</source>
          <target state="translated">Alternativamente, en lugar de tener que nombrar expl&amp;iacute;citamente cada uno de los archivos que desea comprimir, puede usar un fileglob para seleccionar todos los archivos &lt;code&gt;txt&lt;/code&gt; en el directorio actual, de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="eefa7323e5eca7f13253bb419c7f371832614e4a" translate="yes" xml:space="preserve">
          <source>Alternatively, simply use &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; for comparisons, this always gets it right. There is not yet a way to get a number automatically represented as a string that matches exactly the way Perl represents it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44b1aed9efe7eda393df0bd7f553f139ab03a17" translate="yes" xml:space="preserve">
          <source>Alternatively, simply use &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; for comparisons, this will get it always right. There is not yet a way to get a number automatically represented as a string that matches exactly the way Perl represents it.</source>
          <target state="translated">Alternativamente, simplemente use &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; para las comparaciones, esto siempre lo har&amp;aacute; bien. A&amp;uacute;n no existe una forma de representar un n&amp;uacute;mero autom&amp;aacute;ticamente como una cadena que coincida exactamente con la forma en que Perl lo representa.</target>
        </trans-unit>
        <trans-unit id="055ca33d620827ab022a97400794bf3fb8a2807b" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;Text::ParseWords&quot;&gt;Text::ParseWords&lt;/a&gt; module (part of the standard Perl distribution) lets you say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad4e77e5423588b083e2af8975456f597a84a91" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;text/parsewords&quot;&gt;Text::ParseWords&lt;/a&gt; module (part of the standard Perl distribution) lets you say:</source>
          <target state="translated">Alternativamente, el m&amp;oacute;dulo &lt;a href=&quot;text/parsewords&quot;&gt;Text :: ParseWords&lt;/a&gt; (parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl) le permite decir:</target>
        </trans-unit>
        <trans-unit id="e3f5b7f0771697b931c8ecd89602848a9590421e" translate="yes" xml:space="preserve">
          <source>Alternatively, the crypt libraries in GNU libc have been ported to Cygwin.</source>
          <target state="translated">Alternativamente,las bibliotecas de criptas en GNU libc han sido portadas a Cygwin.</target>
        </trans-unit>
        <trans-unit id="43ccb7ccf6de944158b57bdf33cf5e43082dfbc3" translate="yes" xml:space="preserve">
          <source>Alternatively, use the macro &lt;a href=&quot;#CopLABEL_len_flags&quot;&gt;&quot;&lt;code&gt;CopLABEL_len_flags&lt;/code&gt;&quot;&lt;/a&gt;; or if you don't need to know if the label is UTF-8 or not, the macro &lt;a href=&quot;#CopLABEL_len&quot;&gt;&quot;&lt;code&gt;CopLABEL_len&lt;/code&gt;&quot;&lt;/a&gt;; or if you additionally dont need to know the length, &lt;a href=&quot;#CopLABEL&quot;&gt;&quot;&lt;code&gt;CopLABEL&lt;/code&gt;&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996763dc438b824d04ceb178a7d6d2de1f4e3617" translate="yes" xml:space="preserve">
          <source>Alternatively, using a customized typemap for your purposes in the first place is probably preferable.</source>
          <target state="translated">Como alternativa,probablemente sea preferible utilizar un mapa tipográfico personalizado para sus propósitos en primer lugar.</target>
        </trans-unit>
        <trans-unit id="818d3daf2781969164beb46d939858b0992b14b8" translate="yes" xml:space="preserve">
          <source>Alternatively, we could have used &lt;code&gt;C&lt;/code&gt; to unpack the individually accessible byte registers FL, FH, AL, AH, etc.:</source>
          <target state="translated">Alternativamente, podr&amp;iacute;amos haber usado &lt;code&gt;C&lt;/code&gt; para descomprimir los registros de bytes accesibles individualmente FL, FH, AL, AH, etc .:</target>
        </trans-unit>
        <trans-unit id="87ca4d1f50f588b444c138934de28912a7c4fa3d" translate="yes" xml:space="preserve">
          <source>Alternatively, we might be able to use a command line option such as -R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c917006b223001c63f85b3d40138b38f9bf9a9" translate="yes" xml:space="preserve">
          <source>Alternatively, you can achieve a similar static effect by declaring the variable in a separate block outside the function, e.g.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973c34c798c56bb32a7153f1be5f39dd390df9c7" translate="yes" xml:space="preserve">
          <source>Alternatively, you can fiddle with the stack directly: &lt;code&gt;SP&lt;/code&gt; gives you the first element in your portion of the stack, and &lt;code&gt;TOP*&lt;/code&gt; gives you the top SV/IV/NV/etc. on the stack. So, for instance, to do unary negation of an integer:</source>
          <target state="translated">Alternativamente, puede jugar con la pila directamente: &lt;code&gt;SP&lt;/code&gt; le da el primer elemento en su porci&amp;oacute;n de la pila, y &lt;code&gt;TOP*&lt;/code&gt; le da el SV / IV / NV / etc. en la pila. Entonces, por ejemplo, para hacer una negaci&amp;oacute;n unaria de un n&amp;uacute;mero entero:</target>
        </trans-unit>
        <trans-unit id="4486c955e53dc63730c2501b04fe03ec6d1fb66c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can quote the class name:</source>
          <target state="translated">Alternativamente,puede citar el nombre de la clase:</target>
        </trans-unit>
        <trans-unit id="3dc4c1bc0515a5f540589d100b6ce1224a32ad91" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify that the option can have multiple values by adding a &quot;@&quot;, and pass a reference to a scalar as the destination:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9393a15204a23768f5fb6e120d832da535fff827" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify that the option can have multiple values by adding a &quot;@&quot;, and pass a scalar reference as the destination:</source>
          <target state="translated">Alternativamente,se puede especificar que la opción puede tener múltiples valores añadiendo una &quot;@&quot;,y pasar una referencia escalar como destino:</target>
        </trans-unit>
        <trans-unit id="86794ed15412a1fa79e33d4ba8f3e04841c9eebc" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;code&gt;plan()&lt;/code&gt; function. Useful for when you have to calculate the number of tests.</source>
          <target state="translated">Alternativamente, puede utilizar la funci&amp;oacute;n &lt;code&gt;plan()&lt;/code&gt; . &amp;Uacute;til para cuando tienes que calcular el n&amp;uacute;mero de pruebas.</target>
        </trans-unit>
        <trans-unit id="bd695ed1549655fbf2b6a69e34efa112b5887ecd" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the GCC_EXEC_PREFIX environment variable to ensure that Sun's as and ld are used. Consult your gcc documentation for further information on the -B option and the GCC_EXEC_PREFIX variable.</source>
          <target state="translated">Alternativamente,puedes usar la variable de entorno GCC_EXEC_PREFIX para asegurarte de que se usen el &quot;as&quot; y el &quot;ld&quot; del Sol.Consulte la documentación de su gcc para obtener más información sobre la opción -B y la variable GCC_EXEC_PREFIX.</target>
        </trans-unit>
        <trans-unit id="ee23e1f9045483d4017c29efb93306a8f81a02a3" translate="yes" xml:space="preserve">
          <source>Alternatively, you may inspect the value of &lt;a href=&quot;perlvar#%24%7B%5ECHILD_ERROR_NATIVE%7D&quot;&gt;&lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;posix#WIFEXITED&quot;&gt;&lt;code&gt;W*()&lt;/code&gt;&lt;/a&gt; calls from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3eb7cca34a1ce6ec3422f81caa582587938fc9" translate="yes" xml:space="preserve">
          <source>Alternatively, you may inspect the value of &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; with the &lt;code&gt;W*()&lt;/code&gt; calls from the POSIX module.</source>
          <target state="translated">Alternativamente, puede inspeccionar el valor de &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; con las llamadas &lt;code&gt;W*()&lt;/code&gt; desde el m&amp;oacute;dulo POSIX.</target>
        </trans-unit>
        <trans-unit id="273eb19a8880a15607895e1cd30f571a681e7c99" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass a single &lt;code&gt;ExtUtils::Typemaps::InputMap&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98574b24c9752f26b07d4e571e873801f591432e" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass a single &lt;code&gt;ExtUtils::Typemaps::OutputMap&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baaa9fdf5df5a376581f707e9bd2202f9c63495" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass a single &lt;code&gt;ExtUtils::Typemaps::Type&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc46e4aa2514a5747d9e66b804729fd4f6f91eb" translate="yes" xml:space="preserve">
          <source>Alternatives are tried from left to right, so the first alternative found for which the entire expression matches, is the one that is chosen. This means that alternatives are not necessarily greedy. For example: when matching &lt;code&gt;foo|foot&lt;/code&gt; against &quot;barefoot&quot;, only the &quot;foo&quot; part will match, as that is the first alternative tried, and it successfully matches the target string. (This might not seem important, but it is important when you are capturing matched text using parentheses.)</source>
          <target state="translated">Las alternativas se intentan de izquierda a derecha, por lo que la primera alternativa encontrada para la que coincide toda la expresi&amp;oacute;n es la que se elige. Esto significa que las alternativas no son necesariamente codiciosas. Por ejemplo: al hacer coincidir &lt;code&gt;foo|foot&lt;/code&gt; con &quot;descalzo&quot;, solo la parte &quot;foo&quot; coincidir&amp;aacute;, ya que es la primera alternativa que se intenta y coincide con &amp;eacute;xito con la cadena de destino. (Puede que esto no parezca importante, pero es importante cuando se captura texto coincidente con par&amp;eacute;ntesis).</target>
        </trans-unit>
        <trans-unit id="c8af2aafd15c21262760094a19550be8139535e2" translate="yes" xml:space="preserve">
          <source>Alternatives are tried from left to right, so the first alternative found for which the entire expression matches, is the one that is chosen. This means that alternatives are not necessarily greedy. For example: when matching &lt;code&gt;foo|foot&lt;/code&gt; against &lt;code&gt;&quot;barefoot&quot;&lt;/code&gt;, only the &lt;code&gt;&quot;foo&quot;&lt;/code&gt; part will match, as that is the first alternative tried, and it successfully matches the target string. (This might not seem important, but it is important when you are capturing matched text using parentheses.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178ef3c8a39076052130de80299d367dd5e6090f" translate="yes" xml:space="preserve">
          <source>Alternatives to raw</source>
          <target state="translated">Alternativas a la cruda</target>
        </trans-unit>
        <trans-unit id="52a09d99c8be7488acf8d5679596a3a7ebeeb466" translate="yes" xml:space="preserve">
          <source>Alternatives: &lt;a href=&quot;Test2::AsyncSubtest&quot;&gt;Test2::AsyncSubtest&lt;/a&gt; and &lt;a href=&quot;Test2::Workflow&quot;&gt;Test2::Workflow&lt;/a&gt; (not stable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc6e5f9721668e6a6d8a7cd85c26663fa384cb4" translate="yes" xml:space="preserve">
          <source>Alternativly look at &lt;a href=&quot;Plack::Middleware::Auth::Basic&quot;&gt;Plack::Middleware::Auth::Basic&lt;/a&gt;, or one of the other &lt;a href=&quot;https://metacpan.org/search?q=plack+auth&quot;&gt;Plack authentication&lt;/a&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895965b31db8e4bfa4de954e884b587830b4927d" translate="yes" xml:space="preserve">
          <source>Alternativly look at &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::Auth::Basic&quot;&gt;Plack::Middleware::Auth::Basic&lt;/a&gt;, or one of the other &lt;a href=&quot;http://search.cpan.org/perldoc/https:#%2fmetacpan.org%2fsearch%3fq%3dplack%2bauth&quot;&gt;Plack authentication&lt;/a&gt; options.</source>
          <target state="translated">Alternativamente, mire &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::Auth::Basic&quot;&gt;Plack :: Middleware :: Auth :: Basic&lt;/a&gt; , o una de las otras opciones de &lt;a href=&quot;http://search.cpan.org/perldoc/https:#%2fmetacpan.org%2fsearch%3fq%3dplack%2bauth&quot;&gt;autenticaci&amp;oacute;n de Plack&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="083655cd712cf57272ed2f0a7a5805f36d9802f0" translate="yes" xml:space="preserve">
          <source>Although &lt;b&gt;DB_File&lt;/b&gt; cannot do this directly, there is a module which can layer transparently over &lt;b&gt;DB_File&lt;/b&gt; to accomplish this feat.</source>
          <target state="translated">Aunque &lt;b&gt;DB_File&lt;/b&gt; no puede hacer esto directamente, hay un m&amp;oacute;dulo que puede &lt;b&gt;superponerse de forma&lt;/b&gt; transparente sobre &lt;b&gt;DB_File&lt;/b&gt; para lograr esta haza&amp;ntilde;a.</target>
        </trans-unit>
        <trans-unit id="3768f14455445c5980f80214d4ffa65dc7a14002" translate="yes" xml:space="preserve">
          <source>Although &lt;b&gt;DB_File&lt;/b&gt; is covered by the Perl license, the library it makes use of, namely Berkeley DB, is not. Berkeley DB has its own copyright and its own license. Please take the time to read it.</source>
          <target state="translated">Aunque &lt;b&gt;DB_File&lt;/b&gt; est&amp;aacute; cubierto por la licencia de Perl, la biblioteca que utiliza, a saber, Berkeley DB, no lo est&amp;aacute;. Berkeley DB tiene sus propios derechos de autor y su propia licencia. T&amp;oacute;mese el tiempo para leerlo.</target>
        </trans-unit>
        <trans-unit id="73b1840016122f68e05350fe0f1ab0303bd2fd8b" translate="yes" xml:space="preserve">
          <source>Although &lt;b&gt;DB_File&lt;/b&gt; is intended to be used with Berkeley DB version 1, it can also be used with version 2, 3 or 4. In this case the interface is limited to the functionality provided by Berkeley DB 1.x. Anywhere the version 2 or greater interface differs, &lt;b&gt;DB_File&lt;/b&gt; arranges for it to work like version 1. This feature allows &lt;b&gt;DB_File&lt;/b&gt; scripts that were built with version 1 to be migrated to version 2 or greater without any changes.</source>
          <target state="translated">Aunque &lt;b&gt;DB_File&lt;/b&gt; est&amp;aacute; dise&amp;ntilde;ado para usarse con Berkeley DB versi&amp;oacute;n 1, tambi&amp;eacute;n se puede usar con la versi&amp;oacute;n 2, 3 o 4. En este caso, la interfaz est&amp;aacute; limitada a la funcionalidad proporcionada por Berkeley DB 1.x. En cualquier lugar donde la interfaz de la versi&amp;oacute;n 2 o superior difiera, &lt;b&gt;DB_File&lt;/b&gt; hace que funcione como la versi&amp;oacute;n 1. Esta caracter&amp;iacute;stica permite que los scripts &lt;b&gt;DB_File&lt;/b&gt; que se &lt;b&gt;crearon&lt;/b&gt; con la versi&amp;oacute;n 1 se migren a la versi&amp;oacute;n 2 o superior sin cambios.</target>
        </trans-unit>
        <trans-unit id="a4ee4e9c8be6f9bb865a03f9dd6635b3149d28d3" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;$_&lt;/code&gt; doesn't actually appear explicitly in the sample filters above, it is implicitly used in a number of places.</source>
          <target state="translated">Aunque &lt;code&gt;$_&lt;/code&gt; en realidad no aparece expl&amp;iacute;citamente en los filtros de muestra anteriores, se usa impl&amp;iacute;citamente en varios lugares.</target>
        </trans-unit>
        <trans-unit id="80dfb6d994a40fa49e44520920eac36d9fa1f16f" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; %hash&lt;/code&gt; is false on a plain not-yet-used hash, it becomes true in several non-obvious circumstances, including iterators, weak references, stash names, even remaining true after &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %hash&lt;/code&gt; . These things make &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; %hash&lt;/code&gt; fairly useless in practice, so it now generates a fatal error.</source>
          <target state="translated">Aunque el &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; %hash&lt;/code&gt; &lt;a href=&quot;functions/defined&quot;&gt;definido&lt;/a&gt; es falso en un hash simple que a&amp;uacute;n no se ha utilizado, se vuelve verdadero en varias circunstancias no obvias, incluidos iteradores, referencias d&amp;eacute;biles, nombres de escondite, e incluso permanece verdadero despu&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt; %hash&lt;/code&gt; . Estas cosas hacen que el &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; %hash&lt;/code&gt; &lt;a href=&quot;functions/defined&quot;&gt;definido sea&lt;/a&gt; bastante in&amp;uacute;til en la pr&amp;aacute;ctica, por lo que ahora genera un error fatal.</target>
        </trans-unit>
        <trans-unit id="7ff687f6589d5bc55ea5b6cd3b7acf0a8989e998" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;Compress::Zlib&lt;/code&gt; has a pair of functions called &lt;code&gt;compress&lt;/code&gt; and &lt;code&gt;uncompress&lt;/code&gt;, they are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1f79335b5e25baa8b910d3ca247a13fd7eda4e" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;cmp_ok()&lt;/code&gt; was introduced in 0.40, 0.86 fixed an important bug to make it safe for overloaded objects; the fixed first shipped with Perl in 5.10.1 as part of Test::More 0.92.</source>
          <target state="translated">Aunque &lt;code&gt;cmp_ok()&lt;/code&gt; se introdujo en 0.40, 0.86 corrigi&amp;oacute; un error importante para hacerlo seguro para objetos sobrecargados; el primero se envi&amp;oacute; con Perl en 5.10.1 como parte de Test :: More 0.92.</target>
        </trans-unit>
        <trans-unit id="a46f1c081d434cfa72b0670296268695a927ef72" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;defined %hash&lt;/code&gt; is false on a plain not-yet-used hash, it becomes true in several non-obvious circumstances, including iterators, weak references, stash names, even remaining true after &lt;code&gt;undef %hash&lt;/code&gt;. These things make &lt;code&gt;defined %hash&lt;/code&gt; fairly useless in practice, so it now generates a fatal error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4fc726a9484b19113d6eedd6d8805f1968eb73" translate="yes" xml:space="preserve">
          <source>Although FileCache can be used with piped opens ('-|' or '|-') doing so is strongly discouraged. If FileCache finds it necessary to close and then reopen a pipe, the command at the far end of the pipe will be reexecuted - the results of performing IO on FileCache'd pipes is unlikely to be what you expect. The ability to use FileCache on pipes may be removed in a future release.</source>
          <target state="translated">Aunque el FileCache puede ser usado con aberturas entubadas ('-|' o '|-')se desaconseja fuertemente hacerlo.Si FileCache encuentra necesario cerrar y luego reabrir una tubería,el comando en el extremo más alejado de la tubería se volverá a ejecutar-los resultados de realizar IO en las tuberías de FileCache es poco probable que sea lo que esperas.La capacidad de usar FileCache en tuberías puede ser eliminada en una futura versión.</target>
        </trans-unit>
        <trans-unit id="077804ce34db1c72deaf81a9a83f1e62f8a114a7" translate="yes" xml:space="preserve">
          <source>Although I have made use of only the &lt;code&gt;POP*&lt;/code&gt; macros to access values returned from Perl subroutines, it is also possible to bypass these macros and read the stack using the &lt;code&gt;ST&lt;/code&gt; macro (See &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; for a full description of the &lt;code&gt;ST&lt;/code&gt; macro).</source>
          <target state="translated">Aunque solo he utilizado las macros &lt;code&gt;POP*&lt;/code&gt; para acceder a los valores devueltos desde las subrutinas de Perl, tambi&amp;eacute;n es posible omitir estas macros y leer la pila usando la macro &lt;code&gt;ST&lt;/code&gt; (Ver &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; para una descripci&amp;oacute;n completa de la macro &lt;code&gt;ST&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ebf0c3d2a317483257bd5985b5509d45e615f5a4" translate="yes" xml:space="preserve">
          <source>Although PA-RISC binaries can run on Itanium systems, you should not attempt to use a PA-RISC version of Perl on an Itanium system. This is because shared libraries created on an Itanium system cannot be loaded while running a PA-RISC executable.</source>
          <target state="translated">Aunque los binarios PA-RISC pueden funcionar en sistemas Itanium,no debes intentar usar una versión PA-RISC de Perl en un sistema Itanium.Esto se debe a que las bibliotecas compartidas creadas en un sistema Itanium no pueden ser cargadas mientras se ejecuta un ejecutable PA-RISC.</target>
        </trans-unit>
        <trans-unit id="2b071251c66f97d7a5a833d31d9bbb833fc948ef" translate="yes" xml:space="preserve">
          <source>Although Perl will automatically grow strings for you, if you need to force Perl to allocate more memory for your SV, you can use the macro</source>
          <target state="translated">Aunque Perl hará crecer automáticamente las cuerdas para usted,si necesita forzar a Perl para que le asigne más memoria para su SV,puede usar la macro</target>
        </trans-unit>
        <trans-unit id="3fece6ab5bd6d283eb840842e215942103cb610e" translate="yes" xml:space="preserve">
          <source>Although Plan 9 Perl currently only provides static loading, it is built with a number of useful extensions. These include Opcode, FileHandle, Fcntl, and POSIX. Expect to see others (and DynaLoading!) in the future.</source>
          <target state="translated">Aunque el Plan 9 Perl actualmente sólo proporciona carga estática,está construido con un número de extensiones útiles.Estas incluyen Opcode,FileHandle,Fcntl,y POSIX.Espera ver otras (y DynaLoading!)en el futuro.</target>
        </trans-unit>
        <trans-unit id="e4e6f6df84571e93788f39ee96ef2a5f0752bec2" translate="yes" xml:space="preserve">
          <source>Although Test::More has been a core module in versions of Perl since 5.6.2, Test::More has evolved since then, and not all of the features you're used to will be present in the shipped version of Test::More. If you are writing a module, don't forget to indicate in your package metadata the minimum version of Test::More that you require. For instance, if you want to use &lt;code&gt;done_testing()&lt;/code&gt; but want your test script to run on Perl 5.10.0, you will need to explicitly require Test::More &amp;gt; 0.88.</source>
          <target state="translated">Aunque Test :: More ha sido un m&amp;oacute;dulo central en las versiones de Perl desde la 5.6.2, Test :: More ha evolucionado desde entonces, y no todas las funciones a las que est&amp;aacute; acostumbrado estar&amp;aacute;n presentes en la versi&amp;oacute;n enviada de Test :: M&amp;aacute;s. Si est&amp;aacute; escribiendo un m&amp;oacute;dulo, no olvide indicar en los metadatos de su paquete la versi&amp;oacute;n m&amp;iacute;nima de Test :: More que necesita. Por ejemplo, si desea usar &lt;code&gt;done_testing()&lt;/code&gt; pero desea que su script de prueba se ejecute en Perl 5.10.0, deber&amp;aacute; solicitar expl&amp;iacute;citamente Test :: More&amp;gt; 0.88.</target>
        </trans-unit>
        <trans-unit id="4b6eb7d4608b6bb5e2737f99ed626a9c3d3fdff3" translate="yes" xml:space="preserve">
          <source>Although all mathematical operations on version objects are forbidden by default, it is possible to retrieve a number which corresponds to the version object through the use of the $obj-&amp;gt;numify method. For formatting purposes, when displaying a number which corresponds a version object, all sub versions are assumed to have three decimal places. So for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cac5f469f6b90c62f4e56ab4bfa747637957a2" translate="yes" xml:space="preserve">
          <source>Although as of 5.14, that can be also be accomplished this way:</source>
          <target state="translated">Aunque a partir del 5.14,eso también se puede lograr de esta manera:</target>
        </trans-unit>
        <trans-unit id="06dbd031cbe601d39502de2a4b463b8de205125c" translate="yes" xml:space="preserve">
          <source>Although at first sight there seems to be quite a lot going on in &lt;code&gt;Apache::GZip&lt;/code&gt;, you could sum up what the code was doing as follows -- read the contents of the file in &lt;code&gt;$r-&amp;gt;filename&lt;/code&gt;, compress it and write the compressed data to standard output. That's all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b446ed3017bd4a5c94fd715dbc357d36cd8b9eae" translate="yes" xml:space="preserve">
          <source>Although if your manager accused you of seeking job security (or rapid insecurity) through inscrutable code, it would be hard to argue. :-) If I were you, I'd put that in a function:</source>
          <target state="translated">Aunque si tu gerente te acusara de buscar seguridad laboral (o una rápida inseguridad)a través de un código inescrutable,sería difícil de argumentar.:-)Si yo fuera tú,pondría eso en una función:</target>
        </trans-unit>
        <trans-unit id="4a4e26bb6dd1017566ef68d6d6d4ea499d6e917f" translate="yes" xml:space="preserve">
          <source>Although it has no direct equivalent in C, Perl's &lt;code&gt;//&lt;/code&gt; operator is related to its C-style &quot;or&quot;. In fact, it's exactly the same as &lt;code&gt;||&lt;/code&gt;, except that it tests the left hand side's definedness instead of its truth. Thus, &lt;code&gt;EXPR1 // EXPR2&lt;/code&gt; returns the value of &lt;code&gt;EXPR1&lt;/code&gt; if it's defined, otherwise, the value of &lt;code&gt;EXPR2&lt;/code&gt; is returned. (&lt;code&gt;EXPR1&lt;/code&gt; is evaluated in scalar context, &lt;code&gt;EXPR2&lt;/code&gt; in the context of &lt;code&gt;//&lt;/code&gt; itself). Usually, this is the same result as &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;(EXPR1) ? EXPR1 : EXPR2&lt;/code&gt; (except that the ternary-operator form can be used as a lvalue, while &lt;code&gt;EXPR1 // EXPR2&lt;/code&gt; cannot). This is very useful for providing default values for variables. If you actually want to test if at least one of &lt;code&gt;$x&lt;/code&gt; and &lt;code&gt;$y&lt;/code&gt; is defined, use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;($x // $y)&lt;/code&gt; .</source>
          <target state="translated">Aunque no tiene un equivalente directo en C, el operador &lt;code&gt;//&lt;/code&gt; de Perl est&amp;aacute; relacionado con su estilo C &quot;o&quot;. De hecho, es exactamente lo mismo que &lt;code&gt;||&lt;/code&gt; , excepto que prueba la definici&amp;oacute;n del lado izquierdo en lugar de su verdad. Por lo tanto, &lt;code&gt;EXPR1 // EXPR2&lt;/code&gt; devuelve el valor de &lt;code&gt;EXPR1&lt;/code&gt; si est&amp;aacute; definido; de lo contrario, se devuelve el valor de &lt;code&gt;EXPR2&lt;/code&gt; . ( &lt;code&gt;EXPR1&lt;/code&gt; se eval&amp;uacute;a en contexto escalar, &lt;code&gt;EXPR2&lt;/code&gt; en el contexto de &lt;code&gt;//&lt;/code&gt; s&amp;iacute; mismo). Normalmente, este es el mismo resultado que el &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;(EXPR1) ? EXPR1 : EXPR2&lt;/code&gt; (excepto que la forma de operador ternario se puede usar como un valor l, mientras que &lt;code&gt;EXPR1 // EXPR2&lt;/code&gt; no puedo). Esto es muy &amp;uacute;til para proporcionar valores predeterminados para variables. Si realmente desea probar si al menos uno de &lt;code&gt;$x&lt;/code&gt; y &lt;code&gt;$y&lt;/code&gt; est&amp;aacute; definido, use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;($x // $y)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fb2cc3c9a7a9c586fba874bcd544c7350b090af" translate="yes" xml:space="preserve">
          <source>Although it has no direct equivalent in C, Perl's &lt;code&gt;//&lt;/code&gt; operator is related to its C-style &quot;or&quot;. In fact, it's exactly the same as &lt;code&gt;||&lt;/code&gt;, except that it tests the left hand side's definedness instead of its truth. Thus, &lt;code&gt;EXPR1 // EXPR2&lt;/code&gt; returns the value of &lt;code&gt;EXPR1&lt;/code&gt; if it's defined, otherwise, the value of &lt;code&gt;EXPR2&lt;/code&gt; is returned. (&lt;code&gt;EXPR1&lt;/code&gt; is evaluated in scalar context, &lt;code&gt;EXPR2&lt;/code&gt; in the context of &lt;code&gt;//&lt;/code&gt; itself). Usually, this is the same result as &lt;code&gt;defined(EXPR1) ? EXPR1 : EXPR2&lt;/code&gt; (except that the ternary-operator form can be used as a lvalue, while &lt;code&gt;EXPR1 // EXPR2&lt;/code&gt; cannot). This is very useful for providing default values for variables. If you actually want to test if at least one of &lt;code&gt;$x&lt;/code&gt; and &lt;code&gt;$y&lt;/code&gt; is defined, use &lt;code&gt;defined($x // $y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d57a21b7f19f0f3f2ceca275a472340c6e4e3a5" translate="yes" xml:space="preserve">
          <source>Although it has the same precedence as in C, Perl's &lt;code&gt;?:&lt;/code&gt; operator produces an lvalue. This assigns $x to either $if_true or $if_false, depending on the trueness of $maybe:</source>
          <target state="translated">Aunque tiene la misma precedencia que en C, el operador &lt;code&gt;?:&lt;/code&gt; De Perl produce un valor l. Esto asigna $ x a $ if_true o $ if_false, dependiendo de la veracidad de $ maybe:</target>
        </trans-unit>
        <trans-unit id="5ee0b4360c14601bcb250b62e156bc4ae2010689" translate="yes" xml:space="preserve">
          <source>Although it is a bit confusing and some people object to the terminology, it is worth taking a look at a comment that has been in</source>
          <target state="translated">Aunque es un poco confuso y algunas personas objetan la terminología,vale la pena echar un vistazo a un comentario que ha estado en</target>
        </trans-unit>
        <trans-unit id="da1e430c6e0d63cde26c5c8c71827f0d44bf6196" translate="yes" xml:space="preserve">
          <source>Although it is not illegal, the use of &lt;code&gt;MultiHomed&lt;/code&gt; on a socket which is in non-blocking mode is of little use. This is because the first connect will never fail with a timeout as the connect call will not block.</source>
          <target state="translated">Aunque no es ilegal, el uso de &lt;code&gt;MultiHomed&lt;/code&gt; en un socket que est&amp;aacute; en modo sin bloqueo es de poca utilidad. Esto se debe a que la primera conexi&amp;oacute;n nunca fallar&amp;aacute; con un tiempo de espera, ya que la llamada de conexi&amp;oacute;n no se bloquear&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e93362b29f52a34d35cc322a788d526233d087a7" translate="yes" xml:space="preserve">
          <source>Although it is possible (with some effort on your part) to use this module to access .zip files, there are other perl modules available that will do all the hard work for you. Check out &lt;code&gt;Archive::Zip&lt;/code&gt; , &lt;code&gt;Archive::Zip::SimpleZip&lt;/code&gt; , &lt;code&gt;IO::Compress::Zip&lt;/code&gt; and &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; .</source>
          <target state="translated">Aunque es posible (con un poco de esfuerzo de su parte) utilizar este m&amp;oacute;dulo para acceder a archivos .zip, hay otros m&amp;oacute;dulos de perl disponibles que har&amp;aacute;n todo el trabajo duro por usted. Consulte &lt;code&gt;Archive::Zip&lt;/code&gt; , &lt;code&gt;Archive::Zip::SimpleZip&lt;/code&gt; , &lt;code&gt;IO::Compress::Zip&lt;/code&gt; e &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c711291979b77793d98593cadd4dda9f5e5ad0f" translate="yes" xml:space="preserve">
          <source>Although it is possible (with some effort on your part) to use this module to access .zip files, there are other perl modules available that will do all the hard work for you. Check out &lt;code&gt;Archive::Zip&lt;/code&gt;, &lt;code&gt;Archive::Zip::SimpleZip&lt;/code&gt;, &lt;code&gt;IO::Compress::Zip&lt;/code&gt; and &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a135fdb236629c700a0674370bcc8d9bb97bd72" translate="yes" xml:space="preserve">
          <source>Although it may be considered internal, the class hierarchy does matter for both users and programmer. CPAN.pm deals with the four classes mentioned above, and those classes all share a set of methods. Classical single polymorphism is in effect. A metaclass object registers all objects of all kinds and indexes them with a string. The strings referencing objects have a separated namespace (well, not completely separated):</source>
          <target state="translated">Aunque se puede considerar interna,la jerarquía de clases es importante tanto para los usuarios como para el programador.El CPAN.pm se ocupa de las cuatro clases mencionadas anteriormente,y todas esas clases comparten un conjunto de métodos.El polimorfismo clásico único está en efecto.Un objeto de metaclase registra todos los objetos de todas las clases y los indexa con una cadena.Las cadenas que hacen referencia a los objetos tienen un espacio de nombres separado (bueno,no completamente separado):</target>
        </trans-unit>
        <trans-unit id="c770d25bc14389e491ccd1785ab555be61626cb8" translate="yes" xml:space="preserve">
          <source>Although it may not be immediately obvious from the code above, the associative array interface can be used to write values with duplicate keys, but it cannot be used to read them back from the database.</source>
          <target state="translated">Aunque puede no ser inmediatamente obvio a partir del código anterior,la interfaz de la matriz asociativa puede utilizarse para escribir valores con claves duplicadas,pero no puede utilizarse para volver a leerlos de la base de datos.</target>
        </trans-unit>
        <trans-unit id="180ef42cd3ef3f7ed108e6700423675760cce278" translate="yes" xml:space="preserve">
          <source>Although it might seem like a real pain, it is really worth the effort of having a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; in all your scripts.</source>
          <target state="translated">Aunque pueda parecer una verdadera molestia, realmente vale la pena el esfuerzo de tener un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; en todos sus scripts.</target>
        </trans-unit>
        <trans-unit id="566dc93bd22756361b44728a27034002b97a3383" translate="yes" xml:space="preserve">
          <source>Although it might seem like a real pain, it is really worth the effort of having a &lt;code&gt;use strict&lt;/code&gt; in all your scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf682b28167943a367ab8e4c8b1a462063a4d50" translate="yes" xml:space="preserve">
          <source>Although it's less convenient in some ways than the tied hash interface, you can also call methods directly to manipulate individual symbols. In some cases, this allows you finer control than using a tied hash aggregate. The following methods are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eddb5fd279be6b295018b9f9f42e02ddccfda46" translate="yes" xml:space="preserve">
          <source>Although memory overhead of bigger buckets is kept inside the bucket, for smaller buckets, it is kept in separate areas. This field gives the total size of these areas.</source>
          <target state="translated">Aunque la memoria de los cubos más grandes se mantiene dentro del cubo,para los cubos más pequeños,se mantiene en áreas separadas.Este campo da el tamaño total de estas áreas.</target>
        </trans-unit>
        <trans-unit id="89dede28bef0b8e7f141797013c579678fb08474" translate="yes" xml:space="preserve">
          <source>Although no warning is currently raised, the results are not well defined when these operations are performed on operands that aren't either numbers (see &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;&quot;Integer Arithmetic&quot;&lt;/a&gt;) nor bitstrings (see &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;&quot;Bitwise String Operators&quot;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe78f913ab3f5713143fe4461404c36ff017beb" translate="yes" xml:space="preserve">
          <source>Although no warning is currently raised, the results are not well defined when these operations are performed on operands that aren't either numbers (see &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Integer Arithmetic&lt;/a&gt;) nor bitstrings (see &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;Bitwise String Operators&lt;/a&gt;).</source>
          <target state="translated">Aunque actualmente no se genera ninguna advertencia, los resultados no est&amp;aacute;n bien definidos cuando estas operaciones se realizan en operandos que no son n&amp;uacute;meros (consulte &lt;a href=&quot;#Integer-Arithmetic&quot;&gt;Aritm&amp;eacute;tica de enteros&lt;/a&gt; ) ni cadenas de bits (consulte &lt;a href=&quot;#Bitwise-String-Operators&quot;&gt;Operadores de cadenas de bits&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c94501363b8d49d883be5ef00569dcb0d5283b0f" translate="yes" xml:space="preserve">
          <source>Although not for the faint of heart, Perl does support a &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; statement. There are three forms: &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;-LABEL, &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;-EXPR, and &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;-&amp;amp;NAME. A loop's LABEL is not actually a valid target for a &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;; it's just the name of the loop.</source>
          <target state="translated">Aunque no es para los d&amp;eacute;biles de coraz&amp;oacute;n, Perl admite una declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; . Hay tres formas: &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; -LABEL, &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; -EXPR y &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; - &amp;amp; NAME. LABEL de un bucle no es en realidad un objetivo v&amp;aacute;lido para un &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; ; es solo el nombre del bucle.</target>
        </trans-unit>
        <trans-unit id="1069922d0daa5d3be0e9150c826b5a6eaf7851b6" translate="yes" xml:space="preserve">
          <source>Although not for the faint of heart, Perl does support a &lt;code&gt;goto&lt;/code&gt; statement. There are three forms: &lt;code&gt;goto&lt;/code&gt;-LABEL, &lt;code&gt;goto&lt;/code&gt;-EXPR, and &lt;code&gt;goto&lt;/code&gt;-&amp;amp;NAME. A loop's LABEL is not actually a valid target for a &lt;code&gt;goto&lt;/code&gt;; it's just the name of the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c556c081516373f750515951f1b9a5217dc9bdfc" translate="yes" xml:space="preserve">
          <source>Although one can already do quite a lot with the literal string regexps above, we've only scratched the surface of regular expression technology. In this and subsequent sections we will introduce regexp concepts (and associated metacharacter notations) that will allow a regexp to represent not just a single character sequence, but a</source>
          <target state="translated">Aunque ya se puede hacer mucho con la cadena literal regexps de arriba,sólo hemos arañado la superficie de la tecnología de expresión regular.En esta y en las siguientes secciones introduciremos los conceptos de regexp (y las notaciones de metacaracteres asociadas)que permitirán que una regexp represente no sólo una secuencia de caracteres única,sino una</target>
        </trans-unit>
        <trans-unit id="2365e59fbff407c44bacc5b415419bc0925eb6e4" translate="yes" xml:space="preserve">
          <source>Although one does not have to follow this convention, be aware that the convention for UNIX man pages for commands is for the man page title to be in all-uppercase, even if the command isn't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a0eac57e1c4484372ccab28955e18fb02ea640" translate="yes" xml:space="preserve">
          <source>Although one would expect the quantities $y and $z to be the same and equal to 100000 they will differ and instead will be 0 and 100000 respectively.</source>
          <target state="translated">Aunque se esperaría que las cantidades $y y $z fueran las mismas e igual a 100000,diferirán y en su lugar serán 0 y 100000 respectivamente.</target>
        </trans-unit>
        <trans-unit id="5829c5fcc8ce3b64df01881896b3b15fd774741a" translate="yes" xml:space="preserve">
          <source>Although only a single value was expected to be returned from</source>
          <target state="translated">Aunque se esperaba que sólo se devolviera un único valor de</target>
        </trans-unit>
        <trans-unit id="2a2b97db7310124d07426632d32011d83ef42107" translate="yes" xml:space="preserve">
          <source>Although primarily designed for use with multi-threaded Perl, the macros have been designed so that they will work with non-threaded Perl as well.</source>
          <target state="translated">Aunque se han diseñado principalmente para su uso con Perl multihilo,las macros han sido diseñadas para que funcionen también con Perl sin hilos.</target>
        </trans-unit>
        <trans-unit id="797e69b4382557ebf9cc947a771d199448156185" translate="yes" xml:space="preserve">
          <source>Although similar, file path specifications differ between Unix, Windows, Mac OS, OS/2, VMS, VOS, RISC OS, and probably others. Unix, for example, is one of the few OSes that has the elegant idea of a single root directory.</source>
          <target state="translated">Aunque son similares,las especificaciones de la ruta de los archivos difieren entre Unix,Windows,Mac OS,OS/2,VMS,VOS,RISC OS,y probablemente otros.Unix,por ejemplo,es uno de los pocos sistemas operativos que tiene la elegante idea de un único directorio raíz.</target>
        </trans-unit>
        <trans-unit id="d6190ff15955860c6c9fdd297f5be90390874780" translate="yes" xml:space="preserve">
          <source>Although test failures should be enough, extra diagnostics can be triggered at the end of a test run. &lt;code&gt;onfail&lt;/code&gt; is passed an array ref of hash refs that describe each test failure. Each hash will contain at least the following fields: &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;repetition&lt;/code&gt; , and &lt;code&gt;result&lt;/code&gt; . (You shouldn't rely on any other fields being present.) If the test had an expected value or a diagnostic (or &quot;note&quot;) string, these will also be included.</source>
          <target state="translated">Aunque las fallas de prueba deber&amp;iacute;an ser suficientes, se pueden activar diagn&amp;oacute;sticos adicionales al final de una ejecuci&amp;oacute;n de prueba. &lt;code&gt;onfail&lt;/code&gt; se pasa una referencia de matriz de referencias hash que describen cada falla de prueba. Cada hash contendr&amp;aacute; al menos los siguientes campos: &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;repetition&lt;/code&gt; y &lt;code&gt;result&lt;/code&gt; ado . (No debe confiar en que haya otros campos presentes). Si la prueba ten&amp;iacute;a un valor esperado o una cadena de diagn&amp;oacute;stico (o &quot;nota&quot;), estos tambi&amp;eacute;n se incluir&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="cb955315f15c5e807d16b61b980d5ee47a32430b" translate="yes" xml:space="preserve">
          <source>Although test failures should be enough, extra diagnostics can be triggered at the end of a test run. &lt;code&gt;onfail&lt;/code&gt; is passed an array ref of hash refs that describe each test failure. Each hash will contain at least the following fields: &lt;code&gt;package&lt;/code&gt;, &lt;code&gt;repetition&lt;/code&gt;, and &lt;code&gt;result&lt;/code&gt;. (You shouldn't rely on any other fields being present.) If the test had an expected value or a diagnostic (or &quot;note&quot;) string, these will also be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224e863badf25248ea988718d8bd34cef72cce5a" translate="yes" xml:space="preserve">
          <source>Although that form may run into trouble in network transit (due to the presence of 8 bit characters) or on non ISO-Latin character sets. But it does allow &lt;code&gt;Is_c1&lt;/code&gt; to be rewritten so it works on Perls that don't have &lt;code&gt;'unicode_strings'&lt;/code&gt; (earlier than v5.14):</source>
          <target state="translated">Aunque esa forma puede tener problemas en el tr&amp;aacute;nsito de la red (debido a la presencia de caracteres de 8 bits) o en conjuntos de caracteres no latinos ISO. Pero s&amp;iacute; permite &lt;code&gt;Is_c1&lt;/code&gt; para que funcione en Perls que no tienen &lt;code&gt;'unicode_strings'&lt;/code&gt; (anteriores a v5.14):</target>
        </trans-unit>
        <trans-unit id="99123ea723cf2a29473e47c091f28928ebbdafd8" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;%&lt;/code&gt; code is documented as returning a &quot;checksum&quot;: don't put your trust in such values! Even when applied to a small number of bytes, they won't guarantee a noticeable Hamming distance.</source>
          <target state="translated">Aunque el c&amp;oacute;digo &lt;code&gt;%&lt;/code&gt; est&amp;aacute; documentado como una &quot;suma de comprobaci&amp;oacute;n&quot;: &amp;iexcl;no conf&amp;iacute;e en tales valores! Incluso cuando se aplican a una peque&amp;ntilde;a cantidad de bytes, no garantizan una distancia de Hamming notable.</target>
        </trans-unit>
        <trans-unit id="6834c0c595f466c17dc9377b6377ec111fa7e11c" translate="yes" xml:space="preserve">
          <source>Although the above may seem a bit confusing at first, it generally does &quot;the right thing&quot; in most situations. This determination of the default values to use is based upon the following typical Unix conventions:</source>
          <target state="translated">Aunque lo anterior puede parecer un poco confuso al principio,generalmente hace &quot;lo correcto&quot; en la mayoría de las situaciones.Esta determinación de los valores por defecto a utilizar se basa en las siguientes convenciones típicas de Unix:</target>
        </trans-unit>
        <trans-unit id="a0b752b8fd0002195999a4940b4a67ff51de0cf2" translate="yes" xml:space="preserve">
          <source>Although the error message above refers to the second tie() statement in the script, the source of the problem is really with the untie() statement that precedes it.</source>
          <target state="translated">Aunque el mensaje de error de arriba se refiere a la segunda declaración tie()del guión,la fuente del problema es realmente con la declaración untie()que la precede.</target>
        </trans-unit>
        <trans-unit id="050771d84c3ebf7bfb6e4438000d2961a2adc2a7" translate="yes" xml:space="preserve">
          <source>Although the functionality provided by this flag may seem straightforward, it should be used only if there is a good reason to do so. The reason for being cautious is that, even if you have specified the G_NOARGS flag, it is still possible for the Perl subroutine that has been called to think that you have passed it parameters.</source>
          <target state="translated">Aunque la funcionalidad que ofrece esta bandera puede parecer sencilla,sólo debe utilizarse si hay una buena razón para hacerlo.La razón para ser cauteloso es que,incluso si se ha especificado el indicador G_NOARGS,sigue siendo posible que la subrutina Perl que ha sido llamada piense que se le han pasado los parámetros.</target>
        </trans-unit>
        <trans-unit id="0019a6a5066bef3137d87deda446668085e7063b" translate="yes" xml:space="preserve">
          <source>Although the ignored argument doesn't go into a variable, it is still mandatory for the caller to pass it.</source>
          <target state="translated">Aunque el argumento ignorado no entra en una variable,sigue siendo obligatorio que la persona que llama lo pase.</target>
        </trans-unit>
        <trans-unit id="35ed9f698c7272524026c7a45834a834a74d7bb0" translate="yes" xml:space="preserve">
          <source>Although the main discussion of Perl security issues can be found in &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;, a discussion of Perl's locale handling would be incomplete if it did not draw your attention to locale-dependent security issues. Locales--particularly on systems that allow unprivileged users to build their own locales--are untrustworthy. A malicious (or just plain broken) locale can make a locale-aware application give unexpected results. Here are a few possibilities:</source>
          <target state="translated">Aunque la discusi&amp;oacute;n principal de los problemas de seguridad de Perl se puede encontrar en &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt; , una discusi&amp;oacute;n del manejo de la configuraci&amp;oacute;n regional de Perl estar&amp;iacute;a incompleta si no llamara su atenci&amp;oacute;n sobre los problemas de seguridad dependientes de la configuraci&amp;oacute;n regional. Las configuraciones regionales, particularmente en sistemas que permiten a los usuarios sin privilegios crear sus propias configuraciones regionales, no son confiables. Una configuraci&amp;oacute;n regional maliciosa (o simplemente rota) puede hacer que una aplicaci&amp;oacute;n con reconocimiento de configuraci&amp;oacute;n regional d&amp;eacute; resultados inesperados. He aqu&amp;iacute; algunas posibilidades:</target>
        </trans-unit>
        <trans-unit id="6ad8f5d884e3bfe99068d75f61c2b91c556f88ba" translate="yes" xml:space="preserve">
          <source>Although the most deeply nested array or hash element will not spring into existence just because its existence was tested, any intervening ones will. Thus &lt;code&gt;$ref-&amp;gt;{&quot;A&quot;}&lt;/code&gt; and &lt;code&gt;$ref-&amp;gt;{&quot;A&quot;}-&amp;gt;{&quot;B&quot;}&lt;/code&gt; will spring into existence due to the existence test for the $key element above. This happens anywhere the arrow operator is used, including even here:</source>
          <target state="translated">Aunque la matriz o el elemento hash m&amp;aacute;s profundamente anidado no surgir&amp;aacute; solo porque su existencia haya sido probada, cualquiera que intervenga lo har&amp;aacute;. As&amp;iacute;, &lt;code&gt;$ref-&amp;gt;{&quot;A&quot;}&lt;/code&gt; y &lt;code&gt;$ref-&amp;gt;{&quot;A&quot;}-&amp;gt;{&quot;B&quot;}&lt;/code&gt; surgir&amp;aacute;n debido a la prueba de existencia del elemento $ key anterior. Esto sucede en cualquier lugar donde se use el operador de flecha, incluso aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="d1b22581bc0b80baeffbb205fa759bdb0ff242e5" translate="yes" xml:space="preserve">
          <source>Although the most deeply nested array or hash element will not spring into existence just because its existence was tested, any intervening ones will. Thus &lt;code&gt;$ref-&amp;gt;{&quot;A&quot;}&lt;/code&gt; and &lt;code&gt;$ref-&amp;gt;{&quot;A&quot;}-&amp;gt;{&quot;B&quot;}&lt;/code&gt; will spring into existence due to the existence test for the &lt;code&gt;$key&lt;/code&gt; element above. This happens anywhere the arrow operator is used, including even here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece6731e40fd98f25883ef891976cdd74d8b5353" translate="yes" xml:space="preserve">
          <source>Although the optree is read-only, there is an overlay facility that allows you to override what values the various B::*OP methods return for a particular op. &lt;code&gt;$B::overlay&lt;/code&gt; should be set to reference a two-deep hash: indexed by OP address, then method name. Whenever a an op method is called, the value in the hash is returned if it exists. This facility is used by B::Deparse to &quot;undo&quot; some optimisations. For example:</source>
          <target state="translated">Aunque el &amp;aacute;rbol opcional es de solo lectura, hay una funci&amp;oacute;n de superposici&amp;oacute;n que le permite anular qu&amp;eacute; valores devuelven los diversos m&amp;eacute;todos B :: * OP para una operaci&amp;oacute;n en particular. &lt;code&gt;$B::overlay&lt;/code&gt; debe configurarse para hacer referencia a un hash de dos profundidades: indexado por direcci&amp;oacute;n OP, luego nombre del m&amp;eacute;todo. Siempre que se llama a un m&amp;eacute;todo de operaci&amp;oacute;n, se devuelve el valor del hash si existe. B :: Deparse utiliza esta funci&amp;oacute;n para &quot;deshacer&quot; algunas optimizaciones. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4006666c099c71fba2fd95778e8d769cab92e521" translate="yes" xml:space="preserve">
          <source>Although the primary purpose for the existence of &lt;code&gt;Compress::Raw::Bzip2&lt;/code&gt; is for use by the &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; and &lt;code&gt;IO::Compress::Bunzip2&lt;/code&gt; modules, it can be used on its own for simple compression/uncompression tasks.</source>
          <target state="translated">Aunque el prop&amp;oacute;sito principal de la existencia de &lt;code&gt;Compress::Raw::Bzip2&lt;/code&gt; es para que lo utilicen los m&amp;oacute;dulos &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; e &lt;code&gt;IO::Compress::Bunzip2&lt;/code&gt; , se puede usar por s&amp;iacute; solo para tareas simples de compresi&amp;oacute;n / descompresi&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="73cce3599d213093393a3d6545498d75ae280481" translate="yes" xml:space="preserve">
          <source>Although the techniques described here are applicable when embedding Perl in a C program, this is not the primary goal of this document. There are other details that must be considered and are specific to embedding Perl. For details on embedding Perl in C refer to &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Aunque las t&amp;eacute;cnicas descritas aqu&amp;iacute; son aplicables al incrustar Perl en un programa C, este no es el objetivo principal de este documento. Hay otros detalles que deben tenerse en cuenta y son espec&amp;iacute;ficos para incrustar Perl. Para obtener detalles sobre &lt;a href=&quot;perlembed&quot;&gt;c&amp;oacute;mo&lt;/a&gt; incrustar Perl en C, consulte perlembed .</target>
        </trans-unit>
        <trans-unit id="14e1e99a665303302472280aa271e6e7551860a9" translate="yes" xml:space="preserve">
          <source>Although there can be any number of source streams in existence at any given time, only one will be active.</source>
          <target state="translated">Aunque puede haber cualquier número de corrientes fuente en existencia en un momento dado,sólo una estará activa.</target>
        </trans-unit>
        <trans-unit id="837688ce8fc062bca9030ce8b90ed396865f417d" translate="yes" xml:space="preserve">
          <source>Although these are grouped by family, they all have the precedence of assignment. These combined assignment operators can only operate on scalars, whereas the ordinary assignment operator can assign to arrays, hashes, lists and even references. (See &lt;a href=&quot;perldata#Context&quot;&gt;&quot;Context&quot;&lt;/a&gt; and &lt;a href=&quot;perldata#List-value-constructors&quot;&gt;&quot;List value constructors&quot; in perldata&lt;/a&gt;, and &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;&quot;Assigning to References&quot; in perlref&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84534656a685169f0194cbbe1e16531f562b033" translate="yes" xml:space="preserve">
          <source>Although these are grouped by family, they all have the precedence of assignment. These combined assignment operators can only operate on scalars, whereas the ordinary assignment operator can assign to arrays, hashes, lists and even references. (See &lt;a href=&quot;perldata#Context&quot;&gt;Context&lt;/a&gt; and &lt;a href=&quot;perldata#List-value-constructors&quot;&gt;List value constructors in perldata&lt;/a&gt;, and &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Assigning to References in perlref&lt;/a&gt;.)</source>
          <target state="translated">Aunque est&amp;aacute;n agrupados por familia, todos tienen prioridad de asignaci&amp;oacute;n. Estos operadores de asignaci&amp;oacute;n combinados solo pueden operar en escalares, mientras que el operador de asignaci&amp;oacute;n ordinario puede asignar a matrices, hashes, listas e incluso referencias. (Consulte &lt;a href=&quot;perldata#List-value-constructors&quot;&gt;Constructores de valor de lista&lt;/a&gt; y &lt;a href=&quot;perldata#Context&quot;&gt;contexto &lt;/a&gt;en perldata , y &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Asignaci&amp;oacute;n a referencias en perlref&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1f0ef7687de397f14de7592d67f915d2f79f2a4c" translate="yes" xml:space="preserve">
          <source>Although this function returns its values on the perl argument stack, it doesn't take any parameters from that stack (and thus in particular there's no need to do a &lt;code&gt;PUSHMARK&lt;/code&gt; before calling it, unlike &lt;a href=&quot;#call_pv&quot;&gt;&quot;call_pv&quot;&lt;/a&gt; for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459be48ccfdeb87ea73fbd1fbec51d1410292106" translate="yes" xml:space="preserve">
          <source>Although this function returns its values on the perl argument stack, it doesn't take any parameters from that stack (and thus in particular there's no need to do a PUSHMARK before calling it, unlike &lt;a href=&quot;#call_pv&quot;&gt;call_pv&lt;/a&gt; for example).</source>
          <target state="translated">Aunque esta funci&amp;oacute;n devuelve sus valores en la pila de argumentos de perl, no toma ning&amp;uacute;n par&amp;aacute;metro de esa pila (y por lo tanto, en particular, no es necesario hacer un PUSHMARK antes de llamarlo, a diferencia de &lt;a href=&quot;#call_pv&quot;&gt;call_pv,&lt;/a&gt; por ejemplo).</target>
        </trans-unit>
        <trans-unit id="9ecb9099e922e4493577adbe3649de5e0005a135" translate="yes" xml:space="preserve">
          <source>Although this keyword is optional and in some cases provides redundant information it should always be used. This keyword will ensure that the XSUBs appear in the desired package.</source>
          <target state="translated">Aunque esta palabra clave es opcional y en algunos casos proporciona información redundante,siempre debe utilizarse.Esta palabra clave asegurará que los XSUB aparezcan en el paquete deseado.</target>
        </trans-unit>
        <trans-unit id="66fb31ad783a8264f17dab51f3aa1ad011017a08" translate="yes" xml:space="preserve">
          <source>Although this option can be used with the OO interface, it is of most use with the one-shot interface. For example, the code below shows how &lt;code&gt;FilterName&lt;/code&gt; can be used to remove the path component from a series of filenames before they are stored in &lt;code&gt;$zipfile&lt;/code&gt; .</source>
          <target state="translated">Aunque esta opci&amp;oacute;n se puede utilizar con la interfaz OO, es m&amp;aacute;s &amp;uacute;til con la interfaz de un solo uso. Por ejemplo, el siguiente c&amp;oacute;digo muestra c&amp;oacute;mo &lt;code&gt;FilterName&lt;/code&gt; se puede usar para eliminar el componente de ruta de una serie de nombres de archivo antes de que se almacenen en &lt;code&gt;$zipfile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7045e0d3148f2b5800c2c6d6d41c5d9e7c09642" translate="yes" xml:space="preserve">
          <source>Although this option can be used with the OO interface, it is of most use with the one-shot interface. For example, the code below shows how &lt;code&gt;FilterName&lt;/code&gt; can be used to remove the path component from a series of filenames before they are stored in &lt;code&gt;$zipfile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2398658140451226b4cd3f1886215ebf8c65091f" translate="yes" xml:space="preserve">
          <source>Although this stuff is easier to explain using examples, you first need be aware of a few important definitions.</source>
          <target state="translated">Aunque estas cosas son más fáciles de explicar con ejemplos,primero hay que tener en cuenta algunas definiciones importantes.</target>
        </trans-unit>
        <trans-unit id="5d6b9d5e42d7a86677e3f471c1e47e328daf1dc8" translate="yes" xml:space="preserve">
          <source>Although very useful, the big problem with using &lt;b&gt;-w&lt;/b&gt; on the command line to enable warnings is that it is all or nothing. Take the typical scenario when you are writing a Perl program. Parts of the code you will write yourself, but it's very likely that you will make use of pre-written Perl modules. If you use the &lt;b&gt;-w&lt;/b&gt; flag in this case, you end up enabling warnings in pieces of code that you haven't written.</source>
          <target state="translated">Aunque es muy &amp;uacute;til, el gran problema de usar &lt;b&gt;-w&lt;/b&gt; en la l&amp;iacute;nea de comando para habilitar las advertencias es que es todo o nada. Tome el escenario t&amp;iacute;pico cuando est&amp;eacute; escribiendo un programa en Perl. Partes del c&amp;oacute;digo lo escribir&amp;aacute;s t&amp;uacute; mismo, pero es muy probable que uses m&amp;oacute;dulos de Perl escritos previamente. Si usa el indicador &lt;b&gt;-w&lt;/b&gt; en este caso, termina habilitando advertencias en fragmentos de c&amp;oacute;digo que no ha escrito.</target>
        </trans-unit>
        <trans-unit id="560edbbb945d8ba093edcea345708feb744a0493" translate="yes" xml:space="preserve">
          <source>Although we do suggest that you always build your own Perl from the source code, both for maximal configurability and for security, in case you are in a hurry you can check &lt;a href=&quot;http://www.cpan.org/ports/index.html&quot;&gt;http://www.cpan.org/ports/index.html&lt;/a&gt; for binary distributions.</source>
          <target state="translated">Aunque le sugerimos que siempre cree su propio Perl a partir del c&amp;oacute;digo fuente, tanto para m&amp;aacute;xima configurabilidad como por seguridad, en caso de que tenga prisa, puede consultar &lt;a href=&quot;http://www.cpan.org/ports/index.html&quot;&gt;http://www.cpan.org/ports/index.html&lt;/a&gt; para distribuciones binarias.</target>
        </trans-unit>
        <trans-unit id="cd023125cfeba9eec78f15bbf69240c8b819181b" translate="yes" xml:space="preserve">
          <source>Although we wish to free any temps at the same time, we have to be careful not to free any temps which are keeping return args alive; nor to free the temps we have just created while mortal copying return args. Fortunately, &lt;code&gt;leave_adjust_stacks()&lt;/code&gt; is capable of making mortal copies of return args, shifting args down the stack, and only processing those entries on the temps stack that are safe to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ce08a44dd2ba4f6ce9e91fa3d420e93dff144d" translate="yes" xml:space="preserve">
          <source>Although write can work with lexical or package variables, whatever variables you use have to scope in the format. That most likely means you'll want to localize some package variables:</source>
          <target state="translated">Aunque Write puede trabajar con variables léxicas o de paquete,cualquier variable que use tiene que ser contemplada en el formato.Lo más probable es que quieras localizar algunas variables de paquete:</target>
        </trans-unit>
        <trans-unit id="e5edf100e2a7db4baae600915e4757f07b6f80de" translate="yes" xml:space="preserve">
          <source>Although, for historical reasons, the &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; distribution takes its name from this module it now exists only to provide &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; with an interface that is somewhat backwards compatible with &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; 2.xx. If you're writing new code consider using &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; directly instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e9346790d51b0db2514b5ac70a5da4526349c7" translate="yes" xml:space="preserve">
          <source>Although, for historical reasons, the &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; distribution takes its name from this module it now exists only to provide &lt;a href=&quot;../tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; with an interface that is somewhat backwards compatible with &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; 2.xx. If you're writing new code consider using &lt;a href=&quot;../tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; directly instead.</source>
          <target state="translated">Aunque, por razones hist&amp;oacute;ricas, la distribuci&amp;oacute;n &lt;a href=&quot;harness&quot;&gt;Test :: Harness&lt;/a&gt; toma su nombre de este m&amp;oacute;dulo, ahora solo existe para proporcionar a &lt;a href=&quot;../tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt; una interfaz que es algo retrocompatible con &lt;a href=&quot;harness&quot;&gt;Test :: Harness&lt;/a&gt; 2.xx. Si est&amp;aacute; escribiendo un nuevo c&amp;oacute;digo, considere usar &lt;a href=&quot;../tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt; directamente en su lugar.</target>
        </trans-unit>
        <trans-unit id="31fcae02d3e65b92831cdd124f189410606de910" translate="yes" xml:space="preserve">
          <source>Alvestrand, Harald Tveit. 1995.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f966b3ea336af8830bc18236a5389bd937c78b7c" translate="yes" xml:space="preserve">
          <source>Always be civil.</source>
          <target state="translated">Siempre sea civilizado.</target>
        </trans-unit>
        <trans-unit id="c369c01b27ace1a743bc3e37d378c5dbbf093f50" translate="yes" xml:space="preserve">
          <source>Always check the return codes of system calls. Good error messages should go to &lt;code&gt;STDERR&lt;/code&gt; , include which program caused the problem, what the failed system call and arguments were, and (VERY IMPORTANT) should contain the standard system error message for what went wrong. Here's a simple but sufficient example:</source>
          <target state="translated">Siempre verifique los c&amp;oacute;digos de retorno de las llamadas al sistema. Los buenos mensajes de error deben ir a &lt;code&gt;STDERR&lt;/code&gt; , incluir qu&amp;eacute; programa caus&amp;oacute; el problema, cu&amp;aacute;les fueron la llamada al sistema fallida y los argumentos, y (MUY IMPORTANTE) deben contener el mensaje de error est&amp;aacute;ndar del sistema para lo que sali&amp;oacute; mal. Aqu&amp;iacute; hay un ejemplo simple pero suficiente:</target>
        </trans-unit>
        <trans-unit id="c9f2011c5ea88ecfcfb89f58ad78e623f2ab76d8" translate="yes" xml:space="preserve">
          <source>Always check the return codes of system calls. Good error messages should go to &lt;code&gt;STDERR&lt;/code&gt;, include which program caused the problem, what the failed system call and arguments were, and (VERY IMPORTANT) should contain the standard system error message for what went wrong. Here's a simple but sufficient example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5844f1a31b652c47f84d0aaae5c714b741011321" translate="yes" xml:space="preserve">
          <source>Always commit changes to config variables to disk?</source>
          <target state="translated">¿Siempre confirman los cambios de las variables de configuración en el disco?</target>
        </trans-unit>
        <trans-unit id="c9994fb26151727507038319136d7dd61608906c" translate="yes" xml:space="preserve">
          <source>Always comparing to a version object will help avoid surprises:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2fdc72c972de55363038192e944aae07f2f5ef" translate="yes" xml:space="preserve">
          <source>Always decompose on the way in, then recompose on the way out.</source>
          <target state="translated">Siempre se descomponen al entrar y luego se recomponen al salir.</target>
        </trans-unit>
        <trans-unit id="a981ab84adf96ff26a362806abc6776217d3e6df" translate="yes" xml:space="preserve">
          <source>Always evaluates to &lt;code&gt;%X&lt;/code&gt;, the locale's appropriate time representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ade828ef985c357a4f590a718feea06b8ef69f" translate="yes" xml:space="preserve">
          <source>Always evaluates to &lt;code&gt;%c&lt;/code&gt;, the locale's appropriate date and time representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500eaed1bf2ab70574a92f0ee3e10b9af4499072" translate="yes" xml:space="preserve">
          <source>Always evaluates to &lt;code&gt;%x&lt;/code&gt;, the locale's appropriate date representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c61fff2e0b1e2b49630e69bc2a2e99ec24ecff3" translate="yes" xml:space="preserve">
          <source>Always explicitly and immediately call close() on the writable end of any pipe, unless that process is actually writing to it. Even if you don't explicitly call close(), Perl will still close() all filehandles during global destruction. As previously discussed, if those filehandles have been opened with Safe Pipe Open, this will result in calling waitpid(), which may again deadlock.</source>
          <target state="translated">Siempre explícitamente e inmediatamente llame a close()en el extremo escribible de cualquier tubería,a menos que ese proceso esté realmente escribiendo en ella.Incluso si no se llama explícitamente a close(),Perl seguirá cerrando()todos los filehandles durante la destrucción global.Como ya se ha dicho,si esos filehandles se han abierto con Safe Pipe Open,esto resultará en la llamada a waitpid(),lo que puede volver a provocar un bloqueo.</target>
        </trans-unit>
        <trans-unit id="242eddbfa115df236054209d0570301b5af3c68e" translate="yes" xml:space="preserve">
          <source>Always place the START_MY_CXT macro directly after the declaration of &lt;code&gt;my_cxt_t&lt;/code&gt; .</source>
          <target state="translated">Coloque siempre la macro START_MY_CXT directamente despu&amp;eacute;s de la declaraci&amp;oacute;n de &lt;code&gt;my_cxt_t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a1f78b377f3f4dbcc2f8cd296fbf35bd7322707" translate="yes" xml:space="preserve">
          <source>Always place the START_MY_CXT macro directly after the declaration of &lt;code&gt;my_cxt_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891f99ab9e41224456357d41b700c51457def43d" translate="yes" xml:space="preserve">
          <source>Always quote the version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f26e154493acc9e3d45671d863271e7464d39e" translate="yes" xml:space="preserve">
          <source>Always strive to remain compatible with previous released versions. Otherwise try to add a mechanism to revert to the old behavior if people rely on it. Document incompatible changes.</source>
          <target state="translated">Siempre se esfuerza por mantener la compatibilidad con las versiones anteriores.De lo contrario,trate de agregar un mecanismo para volver al viejo comportamiento si la gente confía en él.Documente los cambios incompatibles.</target>
        </trans-unit>
        <trans-unit id="1c41f11cd18971bbdb3e2ef9969d459e5296677c" translate="yes" xml:space="preserve">
          <source>Always try to check and verify signatures if a SIGNATURE file is in the package and Module::Signature is installed (yes/no)?</source>
          <target state="translated">Siempre trate de comprobar y verificar las firmas si un archivo de FIRMA está en el paquete y el Módulo::Firma está instalado (sí/no)?</target>
        </trans-unit>
        <trans-unit id="24f1e77216b2edc00da08bfb70769a17a94800b4" translate="yes" xml:space="preserve">
          <source>Always try to show upload date with 'd' and 'm' command (yes/no)?</source>
          <target state="translated">¿Intenta siempre mostrar la fecha de subida con el comando &quot;d&quot; y &quot;m&quot; (sí/no)?</target>
        </trans-unit>
        <trans-unit id="ab3692e008452cea5b34a3fe52ad03c81207161c" translate="yes" xml:space="preserve">
          <source>Always use &lt;b&gt;-w&lt;/b&gt;.</source>
          <target state="translated">Utilice siempre &lt;b&gt;-w&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="f5dc9ef4a983f2881df95298081703042e4c314a" translate="yes" xml:space="preserve">
          <source>Always use a dotted-decimal with (at least) three components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af0291b70c5a30fa81736f480600ed39cabe174" translate="yes" xml:space="preserve">
          <source>Always use a leading-v</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8367b54257a55d960e03d572f3ffce6e4f988276" translate="yes" xml:space="preserve">
          <source>Always use with a subtag. Notable forms: {sgn-gb} British Sign Language (BSL); {sgn-ie} Irish Sign Language (ESL); {sgn-ni} Nicaraguan Sign Language (ISN); {sgn-us} American Sign Language (ASL).</source>
          <target state="translated">Siempre se usa con una subeplaca.Formas notables:{sgn-gb}Lenguaje de Señas Británico (BSL);{sgn-ie}Lenguaje de signos irlandés (ESL);{sgn-ni}Lenguaje de signos nicaragüense (ISN);{sgn-us}Lenguaje de Señas Americano (ASL).</target>
        </trans-unit>
        <trans-unit id="d7fc26ae93e0cf00af5e88a1fe69971068f3bf0a" translate="yes" xml:space="preserve">
          <source>Ambiguous Local Times (DST)</source>
          <target state="translated">Horas locales ambiguas (DST)</target>
        </trans-unit>
        <trans-unit id="60b78dd3bc38b79497387b8798a6af56908b3286" translate="yes" xml:space="preserve">
          <source>Ambiguous call resolved as CORE::%s(), qualify as such or use &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d6325a5322b24a8cad3df61889fcccc37da082" translate="yes" xml:space="preserve">
          <source>Ambiguous range in transliteration operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edda76ce0ef49493fbd99f6a03d679fce823d7ca" translate="yes" xml:space="preserve">
          <source>Ambiguous use of %c resolved as operator %c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f919429ce49eab88ebaca27d4b763e67507277" translate="yes" xml:space="preserve">
          <source>Ambiguous use of %c{%s[...]} resolved to %c%s[...]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c963134cf7d24b861988abb82e92519a22caf5a" translate="yes" xml:space="preserve">
          <source>Ambiguous use of %c{%s{...}} resolved to %c%s{...}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d7860a6ad7ad4f88f893704243eeb8b4377d90" translate="yes" xml:space="preserve">
          <source>Ambiguous use of %c{%s} resolved to %c%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67f229db4a4d1b5f2225b9846f84a14f01ccc8d" translate="yes" xml:space="preserve">
          <source>Ambiguous use of %s resolved as %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59caacddbf40a7be1f1b173255e30458a45962f9" translate="yes" xml:space="preserve">
          <source>Ambiguous use of -%s resolved as -&amp;amp;%s()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61e588022eb4910c7d278a411480210f9347590" translate="yes" xml:space="preserve">
          <source>Ambulation.pm</source>
          <target state="translated">Ambulation.pm</target>
        </trans-unit>
        <trans-unit id="7dec8f79f324daec9e2bc3cec19154d9b44d20cf" translate="yes" xml:space="preserve">
          <source>Amiga Developers Environment</source>
          <target state="translated">Entorno de los desarrolladores de la Amiga</target>
        </trans-unit>
        <trans-unit id="e2b08dd8d56c6933a46584a5b28aac8a3ed2befa" translate="yes" xml:space="preserve">
          <source>Amiga Specific Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb77f842d900a2dedf7fde5ab4f77cd221a01f3" translate="yes" xml:space="preserve">
          <source>Amiga,</source>
          <target state="translated">Amiga,</target>
        </trans-unit>
        <trans-unit id="e6b810bb50ff4aa9149ad36bef5c0f4e23da0b22" translate="yes" xml:space="preserve">
          <source>Amiga::ARexx</source>
          <target state="translated">Amiga::ARexx</target>
        </trans-unit>
        <trans-unit id="01a8977a9be8d612968643e3bf495cf6b7267806" translate="yes" xml:space="preserve">
          <source>Amiga::ARexx - Perl extension for ARexx support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adf028f8c6d2a6a1f2e1490947a8c498843d956" translate="yes" xml:space="preserve">
          <source>Amiga::ARexx METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06d09541ec208da13b7be9ff5bbfee7e66e27b2" translate="yes" xml:space="preserve">
          <source>Amiga::ARexx::Msg METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7974d6ce506c1fbe8763064a655033977f865b" translate="yes" xml:space="preserve">
          <source>Amiga::Exec</source>
          <target state="translated">Amiga::Exec</target>
        </trans-unit>
        <trans-unit id="d165b945227b32b2aec4eb213a7b6887056e595f" translate="yes" xml:space="preserve">
          <source>Amiga::Exec - Perl extension for low level amiga support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6763cfad1bb35aed134ab02bf5d64d5a57ca8187" translate="yes" xml:space="preserve">
          <source>Amnesty will prevent a failed assertion from causing the overall test to fail. In other words it marks a failure as expected and allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c76575f93cf9b6439e5c8c228d14871841f2be6" translate="yes" xml:space="preserve">
          <source>Among IBM EBCDIC character code sets there are 13 characters that are often mapped to different integer values. Those characters are known as the 13 &quot;variant&quot; characters and are:</source>
          <target state="translated">Entre los conjuntos de códigos de caracteres EBCDIC de IBM hay 13 caracteres que a menudo se asignan a diferentes valores enteros.Esos caracteres se conocen como los 13 caracteres &quot;variante&quot; y son:</target>
        </trans-unit>
        <trans-unit id="dc547e0c079def6202bb164de4204e6fef69df9c" translate="yes" xml:space="preserve">
          <source>Amongst the changes made for OS/2 are...</source>
          <target state="translated">Entre los cambios realizados para el OS/2 están...</target>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="translated">An</target>
        </trans-unit>
        <trans-unit id="a57b3b45aeac822e093194b4bfd981f0e59fb655" translate="yes" xml:space="preserve">
          <source>An &quot;=over&quot; ... &quot;=back&quot; region containing no &quot;=item&quot; paragraphs at all, and containing only some number of ordinary/verbatim paragraphs, and possibly also some nested &quot;=over&quot; ... &quot;=back&quot; regions, &quot;=for...&quot; paragraphs, and &quot;=begin&quot;...&quot;=end&quot; regions. Such an itemless &quot;=over&quot; ... &quot;=back&quot; region in Pod is equivalent in meaning to a &quot;&amp;lt;blockquote&amp;gt;...&amp;lt;/blockquote&amp;gt;&quot; element in HTML.</source>
          <target state="translated">Una regi&amp;oacute;n &quot;= over&quot; ... &quot;= back&quot; que no contiene p&amp;aacute;rrafos &quot;= item&quot; en absoluto, y que solo contiene algunos p&amp;aacute;rrafos ordinarios / textuales, y posiblemente tambi&amp;eacute;n algunos &quot;= over&quot; ... &quot;= back&quot; anidados regiones, &quot;= para ...&quot; p&amp;aacute;rrafos y &quot;= comienzo&quot; ... &quot;= final&quot; regiones. Esta regi&amp;oacute;n &quot;= over&quot; ... &quot;= back&quot; sin elementos en Pod tiene un significado equivalente a un elemento &quot;&amp;lt;blockquote&amp;gt; ... &amp;lt;/blockquote&amp;gt;&quot; en HTML.</target>
        </trans-unit>
        <trans-unit id="a1fa998f4d85fe0a03c929b0df6c0b9a9c55bdd0" translate="yes" xml:space="preserve">
          <source>An &quot;=over&quot; ... &quot;=back&quot; region containing only &quot;=item *&quot; commands, each followed by some number of ordinary/verbatim paragraphs, other nested &quot;=over&quot; ... &quot;=back&quot; regions, &quot;=for...&quot; paragraphs, and &quot;=begin&quot;...&quot;=end&quot; regions.</source>
          <target state="translated">Un &quot;=sobre&quot; ...una región &quot;=back&quot; que contiene sólo comandos &quot;=item *&quot;,cada uno seguido de un número de párrafos ordinarios/verbatimétricos,otros anidados &quot;=over&quot; ......regiones &quot;=retroceso&quot;,&quot;=para...&quot; párrafos,y regiones &quot;=comienzo&quot;...&quot;=fin&quot;.</target>
        </trans-unit>
        <trans-unit id="f7c11a0a43a54d0c5011769a3613a3b8e32e4b7f" translate="yes" xml:space="preserve">
          <source>An &quot;=over&quot; ... &quot;=back&quot; region containing only &quot;=item [text]&quot; commands, each one (or each group of them) followed by some number of ordinary/verbatim paragraphs, other nested &quot;=over&quot; ... &quot;=back&quot; regions, or &quot;=for...&quot; paragraphs, and &quot;=begin&quot;...&quot;=end&quot; regions.</source>
          <target state="translated">Un &quot;=sobre&quot; ...Una región &quot;=back&quot; que contiene sólo comandos &quot;=item [texto]&quot;,cada uno (o cada grupo de ellos)seguido de un cierto número de párrafos ordinarios/verbatim,otros anidados &quot;=over&quot; ...regiones &quot;=retroceso&quot;,o &quot;=para...&quot; párrafos,y regiones &quot;=comienzo&quot;...&quot;=fin&quot;.</target>
        </trans-unit>
        <trans-unit id="bf06369b3eb3e5c957377be368c2f7244136f0a8" translate="yes" xml:space="preserve">
          <source>An &quot;=over&quot; ... &quot;=back&quot; region containing only &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s+\d+\.?\s*\z/&lt;/a&gt;&lt;/code&gt; paragraphs, each one (or each group of them) followed by some number of ordinary/verbatim paragraphs, other nested &quot;=over&quot; ... &quot;=back&quot; regions, &quot;=for...&quot; paragraphs, and/or &quot;=begin&quot;...&quot;=end&quot; codes. Note that the numbers must start at 1 in each section, and must proceed in order and without skipping numbers.</source>
          <target state="translated">Una regi&amp;oacute;n &quot;= sobre&quot; ... &quot;= atr&amp;aacute;s&quot; que contiene solo &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s+\d+\.?\s*\z/&lt;/a&gt;&lt;/code&gt; p&amp;aacute;rrafos, cada uno (o cada grupo de ellos) seguido de alg&amp;uacute;n n&amp;uacute;mero de p&amp;aacute;rrafos ordinarios / textuales, otras regiones anidadas &quot;= sobre&quot; ... &quot;= atr&amp;aacute;s&quot;, &quot;= para ...&quot; p&amp;aacute;rrafos y / o c&amp;oacute;digos &quot;= comenzar&quot; ... &quot;= final&quot;. Tenga en cuenta que los n&amp;uacute;meros deben comenzar en 1 en cada secci&amp;oacute;n y deben proceder en orden y sin omitir n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="927c2fc26d9fdc3522cb89e03e51cb9a3f52db71" translate="yes" xml:space="preserve">
          <source>An &quot;=over&quot; ... &quot;=back&quot; region containing only &lt;code&gt;m/\A=item\s+\d+\.?\s*\z/&lt;/code&gt; paragraphs, each one (or each group of them) followed by some number of ordinary/verbatim paragraphs, other nested &quot;=over&quot; ... &quot;=back&quot; regions, &quot;=for...&quot; paragraphs, and/or &quot;=begin&quot;...&quot;=end&quot; codes. Note that the numbers must start at 1 in each section, and must proceed in order and without skipping numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c821406e2ce644bf837234397ad75d8f26b35cf" translate="yes" xml:space="preserve">
          <source>An &quot;independent&quot; subexpression, one which matches the substring that a</source>
          <target state="translated">Una subexpresión &quot;independiente&quot;,una que coincide con la subcadena que un</target>
        </trans-unit>
        <trans-unit id="16be1ac4526418524ec7dfd0204b1847a01b249e" translate="yes" xml:space="preserve">
          <source>An &quot;independent&quot; subexpression, one which matches the substring that a standalone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a02e2541679357b758fec91e5c00ccb84d49cd8" translate="yes" xml:space="preserve">
          <source>An &quot;internal&quot; derivative of &quot;perlio&quot; which can be used to provide Unread() function for layers which have no buffer or cannot be bothered. (Basically this layer's &lt;code&gt;Fill()&lt;/code&gt; pops itself off the stack and so resumes reading from layer below.)</source>
          <target state="translated">Un derivado &quot;interno&quot; de &quot;perlio&quot; que puede usarse para proporcionar la funci&amp;oacute;n Unread () para capas que no tienen b&amp;uacute;fer o que no se pueden molestar. (B&amp;aacute;sicamente, el &lt;code&gt;Fill()&lt;/code&gt; esta capa sale de la pila y, por lo tanto, reanuda la lectura desde la capa inferior).</target>
        </trans-unit>
        <trans-unit id="94f93318c67b8e306fa7a939182b6dc1a8d99788" translate="yes" xml:space="preserve">
          <source>An &quot;internal&quot; method, subject to change, currently called to allow an overriding class to cache information that will then be passed into all the &lt;code&gt;*param*&lt;/code&gt; calls. (Yes, having to read the source to make sense of this is considered a known bug).</source>
          <target state="translated">Un m&amp;eacute;todo &quot;interno&quot;, sujeto a cambios, actualmente llamado para permitir que una clase primordial almacene en cach&amp;eacute; informaci&amp;oacute;n que luego se pasar&amp;aacute; a todas las llamadas &lt;code&gt;*param*&lt;/code&gt; . (S&amp;iacute;, tener que leer la fuente para entender esto se considera un error conocido).</target>
        </trans-unit>
        <trans-unit id="c723dc089a4e0462d0565d4c223eb6a79ebcd3aa" translate="yes" xml:space="preserve">
          <source>An $eol of &quot;&quot; (the empty string) is special. In this case, no &quot;soft line breaks&quot; are introduced and binary mode is effectively enabled so that any &quot;\n&quot; in the original data is encoded as well.</source>
          <target state="translated">Un $eol de &quot;&quot; (la cuerda vacía)es especial.En este caso,no se introducen &quot;cortes de línea suaves&quot; y el modo binario se habilita de manera efectiva para que cualquier &quot;\n&quot; en los datos originales se codifique también.</target>
        </trans-unit>
        <trans-unit id="5a6a13a346ab7340f151e0f470997f73ed378c5a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof&lt;/code&gt;&lt;/a&gt; without an argument uses the last file read. Using &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof()&lt;/code&gt;&lt;/a&gt; with empty parentheses is different. It refers to the pseudo file formed from the files listed on the command line and accessed via the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator. Since &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; isn't explicitly opened, as a normal filehandle is, an &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof()&lt;/code&gt;&lt;/a&gt; before &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; has been used will cause &lt;a href=&quot;perlvar#%40ARGV&quot;&gt;&lt;code&gt;@ARGV&lt;/code&gt;&lt;/a&gt; to be examined to determine if input is available. Similarly, an &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof()&lt;/code&gt;&lt;/a&gt; after &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; has returned end-of-file will assume you are processing another &lt;a href=&quot;perlvar#%40ARGV&quot;&gt;&lt;code&gt;@ARGV&lt;/code&gt;&lt;/a&gt; list, and if you haven't set &lt;a href=&quot;perlvar#%40ARGV&quot;&gt;&lt;code&gt;@ARGV&lt;/code&gt;&lt;/a&gt;, will read input from &lt;code&gt;STDIN&lt;/code&gt;; see &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1711b8c03a9928dbbe638d8c791d95aa2c85763c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declaration declares an alias for a package variable that will be visible across its entire lexical scope, even across package boundaries. The package in which the variable is entered is determined at the point of the declaration, not at the point of use. This means the following behavior holds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91de5a24da27e5fce41ca7887051c5441493c51" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declaration may also have a list of attributes associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efa71e97154f5e1c53935b4d4b0410d3433b623" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;XSUB&lt;/b&gt; forms the basic unit of the XS interface. After compilation by the &lt;b&gt;xsubpp&lt;/b&gt; compiler, each XSUB amounts to a C function definition which will provide the glue between Perl calling conventions and C calling conventions.</source>
          <target state="translated">Un &lt;b&gt;XSUB&lt;/b&gt; forma la unidad b&amp;aacute;sica de la interfaz XS. Despu&amp;eacute;s de la compilaci&amp;oacute;n por el compilador &lt;b&gt;xsubpp&lt;/b&gt; , cada XSUB equivale a una definici&amp;oacute;n de funci&amp;oacute;n C que proporcionar&amp;aacute; el enlace entre las convenciones de llamadas de Perl y las convenciones de llamadas de C.</target>
        </trans-unit>
        <trans-unit id="09718e49ee8b20061f562ba9e5c34673e940b8ad" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;anonymous&lt;/b&gt; subroutine that, when a reference to it is generated at runtime, keeps track of the identities of externally visible &lt;b&gt;lexical variables&lt;/b&gt;, even after those lexical variables have supposedly gone out of &lt;b&gt;scope&lt;/b&gt;. They&amp;rsquo;re called &amp;ldquo;closures&amp;rdquo; because this sort of behavior gives mathematicians a sense of closure.</source>
          <target state="translated">Una subrutina &lt;b&gt;an&amp;oacute;nima&lt;/b&gt; que, cuando se genera una referencia a ella en tiempo de ejecuci&amp;oacute;n, realiza un seguimiento de las identidades de las &lt;b&gt;variables l&amp;eacute;xicas&lt;/b&gt; visibles externamente , incluso despu&amp;eacute;s de que esas variables l&amp;eacute;xicas supuestamente hayan salido de su &lt;b&gt;alcance&lt;/b&gt; . Se les llama &quot;cierres&quot; porque este tipo de comportamiento les da a los matem&amp;aacute;ticos una sensaci&amp;oacute;n de cierre.</target>
        </trans-unit>
        <trans-unit id="9e2f49be17e25fca915fffd9825b7a69527fa78a" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;argument&lt;/b&gt;-passing mechanism in which the &lt;b&gt;formal arguments&lt;/b&gt; refer directly to the &lt;b&gt;actual arguments&lt;/b&gt;, and the &lt;b&gt;subroutine&lt;/b&gt; can change the actual arguments by changing the formal arguments. That is, the formal argument is an &lt;b&gt;alias&lt;/b&gt; for the actual argument. See also &lt;b&gt;call by value&lt;/b&gt;.</source>
          <target state="translated">Un mecanismo de paso de &lt;b&gt;argumentos&lt;/b&gt; en el que los &lt;b&gt;argumentos formales se&lt;/b&gt; refieren directamente a los &lt;b&gt;argumentos reales&lt;/b&gt; , y la &lt;b&gt;subrutina&lt;/b&gt; puede cambiar los argumentos reales cambiando los argumentos formales. Es decir, el argumento formal es un &lt;b&gt;alias&lt;/b&gt; del argumento real. Consulte tambi&amp;eacute;n &lt;b&gt;llamada por valor&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="4e9ca74e5eb3ceca0031d5a290a9926f188e9f44" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;argument&lt;/b&gt;-passing mechanism in which the &lt;b&gt;formal arguments&lt;/b&gt; refer to a copy of the &lt;b&gt;actual arguments&lt;/b&gt;, and the &lt;b&gt;subroutine&lt;/b&gt; cannot change the actual arguments by changing the formal arguments. See also &lt;b&gt;call by reference&lt;/b&gt;.</source>
          <target state="translated">Un mecanismo de paso de &lt;b&gt;argumentos&lt;/b&gt; en el que los &lt;b&gt;argumentos formales se&lt;/b&gt; refieren a una copia de los &lt;b&gt;argumentos reales&lt;/b&gt; , y la &lt;b&gt;subrutina&lt;/b&gt; no puede cambiar los argumentos reales cambiando los argumentos formales. Ver tambi&amp;eacute;n &lt;b&gt;llamar por referencia&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="3ae7537da81b89a37f1fba19db52f45ea5a64265" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;assertion&lt;/b&gt; that peeks at the string to the left of the current match location.</source>
          <target state="translated">Una &lt;b&gt;afirmaci&amp;oacute;n&lt;/b&gt; que se asoma a la cadena a la izquierda de la ubicaci&amp;oacute;n de coincidencia actual.</target>
        </trans-unit>
        <trans-unit id="9186a718ac3c2fd4c0066859c2036b1188f86bf7" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;assertion&lt;/b&gt; that peeks at the string to the right of the current match location.</source>
          <target state="translated">Una &lt;b&gt;afirmaci&amp;oacute;n&lt;/b&gt; que se asoma a la cadena a la derecha de la ubicaci&amp;oacute;n de coincidencia actual.</target>
        </trans-unit>
        <trans-unit id="fccd6c0eca3ee2fd48a0479b2f7467ef677a981b" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;assertion&lt;/b&gt; that states something exists and perhaps describes what it&amp;rsquo;s like, without giving any commitment as to how or where you&amp;rsquo;ll use it. A declaration is like the part of your recipe that says, &amp;ldquo;two cups flour, one large egg, four or five tadpoles&amp;hellip;&amp;rdquo; See &lt;b&gt;statement&lt;/b&gt; for its opposite. Note that some declarations also function as statements. Subroutine declarations also act as definitions if a body is supplied.</source>
          <target state="translated">Una &lt;b&gt;afirmaci&amp;oacute;n&lt;/b&gt; que establece que algo existe y tal vez describe c&amp;oacute;mo es, sin comprometerse sobre c&amp;oacute;mo o d&amp;oacute;nde lo usar&amp;aacute;. Una declaraci&amp;oacute;n es como la parte de su receta que dice, &amp;ldquo;dos tazas de harina, un huevo grande, cuatro o cinco renacuajos&amp;hellip;&amp;rdquo; Vea la &lt;b&gt;declaraci&amp;oacute;n&lt;/b&gt; para su opuesto. Tenga en cuenta que algunas declaraciones tambi&amp;eacute;n funcionan como declaraciones. Las declaraciones de subrutinas tambi&amp;eacute;n act&amp;uacute;an como definiciones si se proporciona un cuerpo.</target>
        </trans-unit>
        <trans-unit id="a79df62ffe9655f3bb9b573a11129a38c97d9727" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;attribute&lt;/b&gt; of an &lt;b&gt;object&lt;/b&gt;; data stored with the particular object rather than with the class as a whole.</source>
          <target state="translated">Un &lt;b&gt;atributo&lt;/b&gt; de un &lt;b&gt;objeto&lt;/b&gt; ; datos almacenados con el objeto particular en lugar de con la clase como un todo.</target>
        </trans-unit>
        <trans-unit id="6b5c38c6212536b2650f8fd4b5e6e9c46fa7ac78" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;expression&lt;/b&gt; that evaluates to something that can be used as a &lt;b&gt;filehandle&lt;/b&gt;: a &lt;b&gt;string&lt;/b&gt; (filehandle name), a &lt;b&gt;typeglob&lt;/b&gt;, a typeglob &lt;b&gt;reference&lt;/b&gt;, or a low-level &lt;b&gt;IO&lt;/b&gt; object.</source>
          <target state="translated">Una &lt;b&gt;expresi&amp;oacute;n&lt;/b&gt; que se eval&amp;uacute;a como algo que puede ser utilizado como un &lt;b&gt;gestor de archivo&lt;/b&gt; : una &lt;b&gt;cadena&lt;/b&gt; (nombre de gestor de archivo), un &lt;b&gt;typeglob&lt;/b&gt; , un typeglob &lt;b&gt;referencia&lt;/b&gt; , o un bajo nivel de &lt;b&gt;IO&lt;/b&gt; objeto.</target>
        </trans-unit>
        <trans-unit id="a9ea33da0846dba2dfc2c719e640a6b936943a76" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;expression&lt;/b&gt; that yields a &lt;b&gt;value&lt;/b&gt; that an &lt;b&gt;operator&lt;/b&gt; operates on. See also &lt;b&gt;precedence&lt;/b&gt;.</source>
          <target state="translated">Una &lt;b&gt;expresi&amp;oacute;n&lt;/b&gt; que produce un &lt;b&gt;valor sobre el&lt;/b&gt; que opera un &lt;b&gt;operador&lt;/b&gt; . V&amp;eacute;ase tambi&amp;eacute;n &lt;b&gt;precedencia&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="cc6a827ebadd37467385c749c36afe5cfe5a720e" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;increment&lt;/b&gt; operator that knows how to bump up ASCII alphabetics as well as numbers.</source>
          <target state="translated">Un operador de &lt;b&gt;incremento&lt;/b&gt; que sabe c&amp;oacute;mo aumentar el alfabeto ASCII y los n&amp;uacute;meros.</target>
        </trans-unit>
        <trans-unit id="6e6a46de7223236ab22a0ae8657b922fe424257e" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;instance&lt;/b&gt; of a &lt;b&gt;class&lt;/b&gt;. Something that &amp;ldquo;knows&amp;rdquo; what user-defined type (class) it is, and what it can do because of what class it is. Your program can request an object to do things, but the object gets to decide whether it wants to do them or not. Some objects are more accommodating than others.</source>
          <target state="translated">Una &lt;b&gt;instancia&lt;/b&gt; de una &lt;b&gt;clase&lt;/b&gt; . Algo que &amp;ldquo;sabe&amp;rdquo; qu&amp;eacute; tipo (clase) definido por el usuario es, y qu&amp;eacute; puede hacer debido a la clase que es. Su programa puede solicitarle a un objeto que haga cosas, pero el objeto decide si quiere hacerlas o no. Algunos objetos son m&amp;aacute;s c&amp;oacute;modos que otros.</target>
        </trans-unit>
        <trans-unit id="193974eee4df69740e47a6c9868c573734e793d8" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;object&lt;/b&gt; is a data structure that bundles together data and subroutines which operate on that data. An object's data is called &lt;b&gt;attributes&lt;/b&gt;, and its subroutines are called &lt;b&gt;methods&lt;/b&gt;. An object can be thought of as a noun (a person, a web service, a computer).</source>
          <target state="translated">Un &lt;b&gt;objeto&lt;/b&gt; es una estructura de datos que agrupa datos y subrutinas que operan sobre esos datos. Los datos de un objeto se denominan &lt;b&gt;atributos&lt;/b&gt; y sus subrutinas se denominan &lt;b&gt;m&amp;eacute;todos&lt;/b&gt; . Un objeto se puede considerar como un sustantivo (una persona, un servicio web, una computadora).</target>
        </trans-unit>
        <trans-unit id="9f3264403f458576129fd753f7da0132d1126157" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; X&lt;code&gt;that looks something like a &lt;b&gt;literal&lt;/b&gt;,
such as the output-grabbing operator, &amp;lt;literal
moreinfo=&quot;none&quot;&lt;/code&gt;`&amp;gt;</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; X &lt;code&gt;that looks something like a &lt;b&gt;literal&lt;/b&gt;, such as the output-grabbing operator, &amp;lt;literal moreinfo=&quot;none&quot;&lt;/code&gt; `&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e3876b6031a7c1f940174f56c5f7362a7f615429" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; taking three &lt;b&gt;operands&lt;/b&gt;. Sometimes pronounced &lt;b&gt;trinary&lt;/b&gt;.</source>
          <target state="translated">Un &lt;b&gt;operador que&lt;/b&gt; toma tres &lt;b&gt;operandos&lt;/b&gt; . A veces se pronuncia &lt;b&gt;trinario&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="209f1fbbc9e85cade5ad6da705d3c26984c35559" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that comes in between its &lt;b&gt;operands&lt;/b&gt;, such as multiplication in &lt;code&gt;24 * 7&lt;/code&gt; .</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; que se encuentra entre sus &lt;b&gt;operandos&lt;/b&gt; , como la multiplicaci&amp;oacute;n en &lt;code&gt;24 * 7&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f71291b7c0cc8bd6ef4195e1d392449e6f1d53" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that comes in between its &lt;b&gt;operands&lt;/b&gt;, such as multiplication in &lt;code&gt;24 * 7&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463ba99d535672eaf8355ca19021da8d2cf33452" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that does something with a list of values, such as &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;. Usually used for named built-in operators (such as &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;) that do not require parentheses around their &lt;b&gt;argument&lt;/b&gt; list.</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; que hace algo con una lista de valores, como &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; . Usualmente se usa para operadores incorporados con nombre (como &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; ) que no requieren par&amp;eacute;ntesis alrededor de su lista de &lt;b&gt;argumentos&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="74d9d7e2bcff5578ed582b2be81c1fd95c4fc9ac" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that does something with a list of values, such as &lt;code&gt;join&lt;/code&gt; or &lt;code&gt;grep&lt;/code&gt;. Usually used for named built-in operators (such as &lt;code&gt;print&lt;/code&gt;, &lt;code&gt;unlink&lt;/code&gt;, and &lt;code&gt;system&lt;/code&gt;) that do not require parentheses around their &lt;b&gt;argument&lt;/b&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2a4670adc782be015d0bb2ea5ffee02ea42397" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that follows its &lt;b&gt;operand&lt;/b&gt;, as in &lt;code&gt;$x++&lt;/code&gt; .</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; que sigue a su &lt;b&gt;operando&lt;/b&gt; , como en &lt;code&gt;$x++&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2a91b007dceec65feca65e72cf86b169ecd0ff6" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that follows its &lt;b&gt;operand&lt;/b&gt;, as in &lt;code&gt;$x++&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7f1151c5c90e6fb1284f5e0bc779ad8ed2e33c" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that precedes its &lt;b&gt;operand&lt;/b&gt;, as in &lt;code&gt;++$x&lt;/code&gt; .</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; que precede a su &lt;b&gt;operando&lt;/b&gt; , como en &lt;code&gt;++$x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25f284ffc65045a6c69870223421c5797a335e9" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that precedes its &lt;b&gt;operand&lt;/b&gt;, as in &lt;code&gt;++$x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabe188f0a1b9c27289c477dd8047df3b523cb5a" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that says whether a particular ordering relationship is &lt;b&gt;true&lt;/b&gt; about a pair of &lt;b&gt;operands&lt;/b&gt;. Perl has both numeric and string relational operators. See &lt;b&gt;collating sequence&lt;/b&gt;.</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; que dice si una relaci&amp;oacute;n de orden particular es &lt;b&gt;verdadera&lt;/b&gt; sobre un par de &lt;b&gt;operandos&lt;/b&gt; . Perl tiene operadores relacionales num&amp;eacute;ricos y de cadena. Consulte la &lt;b&gt;secuencia de clasificaci&amp;oacute;n&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="717a4af81f7132fc96e1d23c981f1ff3401e5290" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that surrounds its &lt;b&gt;operand&lt;/b&gt;, like the angle operator, or parentheses, or a hug.</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; que rodea su &lt;b&gt;operando&lt;/b&gt; , como el operador de &amp;aacute;ngulo, o par&amp;eacute;ntesis, o un abrazo.</target>
        </trans-unit>
        <trans-unit id="355f7096b65520d72731600341dac924b0bb6aad" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; that takes two &lt;b&gt;operands&lt;/b&gt;.</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; que toma dos &lt;b&gt;operandos&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b7885e2c7085b9ecc7bc4fd21946e64edd22e910" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;operator&lt;/b&gt; whose assigned mission in life is to change the value of a &lt;b&gt;variable&lt;/b&gt;.</source>
          <target state="translated">Un &lt;b&gt;operador&lt;/b&gt; cuya misi&amp;oacute;n asignada en la vida es cambiar el valor de una &lt;b&gt;variable&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="7b3959ebca99af56cd591ab2c731b4edab6ffa5f" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;ordinary paragraph&lt;/b&gt;. A paragraph is an ordinary paragraph if its first line matches neither &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=[a-zA-Z]/&lt;/a&gt;&lt;/code&gt; nor &lt;code&gt;m/\A[ \t]/&lt;/code&gt; ,</source>
          <target state="translated">Un &lt;b&gt;p&amp;aacute;rrafo ordinario&lt;/b&gt; . Un p&amp;aacute;rrafo es un p&amp;aacute;rrafo ordinario si su primera l&amp;iacute;nea no coincide con &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=[a-zA-Z]/&lt;/a&gt;&lt;/code&gt; ni &lt;code&gt;m/\A[ \t]/&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="8dd7686cbc9fa2ea98c8a7eb1004bca8a6b2e068" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;ordinary paragraph&lt;/b&gt;. A paragraph is an ordinary paragraph if its first line matches neither &lt;code&gt;m/\A=[a-zA-Z]/&lt;/code&gt; nor &lt;code&gt;m/\A[ \t]/&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98f8de412a14cfe117cc1f33fdf08a188a327cd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; without an argument uses the last file read. Using &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; with empty parentheses is different. It refers to the pseudo file formed from the files listed on the command line and accessed via the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator. Since &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; isn't explicitly opened, as a normal filehandle is, an &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; before &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; has been used will cause &lt;code&gt;@ARGV&lt;/code&gt; to be examined to determine if input is available. Similarly, an &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; after &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; has returned end-of-file will assume you are processing another &lt;code&gt;@ARGV&lt;/code&gt; list, and if you haven't set &lt;code&gt;@ARGV&lt;/code&gt; , will read input from &lt;code&gt;STDIN&lt;/code&gt; ; see &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; sin un argumento usa el &amp;uacute;ltimo archivo le&amp;iacute;do. Usar &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; con par&amp;eacute;ntesis vac&amp;iacute;os es diferente. Se refiere al pseudo archivo formado a partir de los archivos enumerados en la l&amp;iacute;nea de comando y al que se accede a trav&amp;eacute;s del operador &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; . Dado que &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; no se abre expl&amp;iacute;citamente, como lo es un &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; normal, un eof () antes de que se haya usado &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; har&amp;aacute; que &lt;code&gt;@ARGV&lt;/code&gt; sea ​​examinado para determinar si la entrada est&amp;aacute; disponible. De manera similar, un &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; despu&amp;eacute;s de que &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; haya devuelto el final del archivo asumir&amp;aacute; que est&amp;aacute; procesando otra lista &lt;code&gt;@ARGV&lt;/code&gt; , y si no ha configurado &lt;code&gt;@ARGV&lt;/code&gt; , leer&amp;aacute; la entrada de &lt;code&gt;STDIN&lt;/code&gt; ; ver &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;Operadores de E / S en perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b538c9784366b2a5b380fc1646cd6d2c36676cbb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; ''&lt;/code&gt; executed within a subroutine defined in the &lt;code&gt;DB&lt;/code&gt; package doesn't see the usual surrounding lexical scope, but rather the scope of the first non-DB piece of code that called it. You don't normally need to worry about this unless you are writing a Perl debugger.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; ''&lt;/code&gt; ejecutada dentro de una subrutina definida en el paquete &lt;code&gt;DB&lt;/code&gt; no ve el alcance l&amp;eacute;xico circundante habitual, sino m&amp;aacute;s bien el alcance de la primera pieza de c&amp;oacute;digo no DB que lo llam&amp;oacute;. Normalmente, no necesita preocuparse por esto a menos que est&amp;eacute; escribiendo un depurador de Perl.</target>
        </trans-unit>
        <trans-unit id="9638cc264773db141fdbff9966aa75b61a42b264" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; without an argument uses the last file read. Using &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; with empty parentheses is different. It refers to the pseudo file formed from the files listed on the command line and accessed via the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator. Since &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; isn't explicitly opened, as a normal filehandle is, an &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; before &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; has been used will cause &lt;code&gt;@ARGV&lt;/code&gt; to be examined to determine if input is available. Similarly, an &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; after &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; has returned end-of-file will assume you are processing another &lt;code&gt;@ARGV&lt;/code&gt; list, and if you haven't set &lt;code&gt;@ARGV&lt;/code&gt; , will read input from &lt;code&gt;STDIN&lt;/code&gt; ; see &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; sin un argumento usa el &amp;uacute;ltimo archivo le&amp;iacute;do. Usar &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; con par&amp;eacute;ntesis vac&amp;iacute;os es diferente. Se refiere al pseudo archivo formado a partir de los archivos enumerados en la l&amp;iacute;nea de comando y al que se accede a trav&amp;eacute;s del operador &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; . Dado que &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; no se abre expl&amp;iacute;citamente, como lo es un &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; normal, un eof () antes de que se haya usado &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; har&amp;aacute; que &lt;code&gt;@ARGV&lt;/code&gt; sea ​​examinado para determinar si la entrada est&amp;aacute; disponible. De manera similar, un &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof()&lt;/a&gt;&lt;/code&gt; despu&amp;eacute;s de que &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; haya devuelto el final del archivo asumir&amp;aacute; que est&amp;aacute; procesando otra lista &lt;code&gt;@ARGV&lt;/code&gt; , y si no ha configurado &lt;code&gt;@ARGV&lt;/code&gt; , leer&amp;aacute; la entrada de &lt;code&gt;STDIN&lt;/code&gt; ; ver &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;Operadores de E / S en perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f39d8054296556b4b922794a4d5a34f617f1fc94" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;, however, can see lexical variables of the scope it is being evaluated in, so long as the names aren't hidden by declarations within the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; itself. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">Un &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; , sin embargo, puede ver variables l&amp;eacute;xicas del &amp;aacute;mbito en el que se est&amp;aacute; evaluando, siempre que los nombres no est&amp;eacute;n ocultos por declaraciones dentro del &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; . Ver &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6342bae4fda60017077e5c45e326240a9752de8d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; ''&lt;/code&gt; executed within a subroutine defined in the &lt;code&gt;DB&lt;/code&gt; package doesn't see the usual surrounding lexical scope, but rather the scope of the first non-DB piece of code that called it. You don't normally need to worry about this unless you are writing a Perl debugger.</source>
          <target state="translated">Una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; ''&lt;/code&gt; ejecutada dentro de una subrutina definida en el paquete &lt;code&gt;DB&lt;/code&gt; no ve el alcance l&amp;eacute;xico circundante habitual, sino m&amp;aacute;s bien el alcance de la primera pieza de c&amp;oacute;digo no DB que lo llam&amp;oacute;. Normalmente, no necesita preocuparse por esto a menos que est&amp;eacute; escribiendo un depurador de Perl.</target>
        </trans-unit>
        <trans-unit id="e98b3b90e3045dc3b637b5a6dd09b73503e89407" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration declares an alias for a package variable that will be visible across its entire lexical scope, even across package boundaries. The package in which the variable is entered is determined at the point of the declaration, not at the point of use. This means the following behavior holds:</source>
          <target state="translated">Una declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declara un alias para una variable de paquete que ser&amp;aacute; visible en todo su &amp;aacute;mbito l&amp;eacute;xico, incluso a trav&amp;eacute;s de los l&amp;iacute;mites del paquete. El paquete en el que se ingresa la variable se determina en el punto de la declaraci&amp;oacute;n, no en el punto de uso. Esto significa que se cumple el siguiente comportamiento:</target>
        </trans-unit>
        <trans-unit id="b85b4821ea02e10c76868c61d73ce67c03c3c58f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration may also have a list of attributes associated with it.</source>
          <target state="translated">Una declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n puede tener una lista de atributos asociados.</target>
        </trans-unit>
        <trans-unit id="0e6a38b5837351a0fa7ad12169129c95c04803d4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration declares an alias for a package variable that will be visible across its entire lexical scope, even across package boundaries. The package in which the variable is entered is determined at the point of the declaration, not at the point of use. This means the following behavior holds:</source>
          <target state="translated">Una declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declara un alias para una variable de paquete que ser&amp;aacute; visible en todo su &amp;aacute;mbito l&amp;eacute;xico, incluso a trav&amp;eacute;s de los l&amp;iacute;mites del paquete. El paquete en el que se ingresa la variable se determina en el punto de la declaraci&amp;oacute;n, no en el punto de uso. Esto significa que se cumple el siguiente comportamiento:</target>
        </trans-unit>
        <trans-unit id="ff67756e1b83b8c246879fd06b2405feac998276" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration may also have a list of attributes associated with it.</source>
          <target state="translated">Una declaraci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n puede tener una lista de atributos asociados.</target>
        </trans-unit>
        <trans-unit id="09f284e34c7193100513bdbf0c748168a131c400" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;=item&lt;/code&gt; or &lt;code&gt;=back&lt;/code&gt; command has been found outside a &lt;code&gt;=over&lt;/code&gt; /&lt;code&gt;=back&lt;/code&gt; block.</source>
          <target state="translated">Se ha encontrado un comando &lt;code&gt;=item&lt;/code&gt; o &lt;code&gt;=back&lt;/code&gt; fuera de un bloque &lt;code&gt;=over&lt;/code&gt; / &lt;code&gt;=back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74ddbf837617e690734ce4e331574925980ad4cf" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;=item&lt;/code&gt; or &lt;code&gt;=back&lt;/code&gt; command has been found outside a &lt;code&gt;=over&lt;/code&gt;/&lt;code&gt;=back&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cb1e02933a96ffc4b888e742e11e5e2a0810c8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;END&lt;/code&gt; code block is executed as late as possible, that is, after perl has finished running the program and just before the interpreter is being exited, even if it is exiting as a result of a die() function. (But not if it's morphing into another program via &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;, or being blown out of the water by a signal--you have to trap that yourself (if you can).) You may have multiple &lt;code&gt;END&lt;/code&gt; blocks within a file--they will execute in reverse order of definition; that is: last in, first out (LIFO). &lt;code&gt;END&lt;/code&gt; blocks are not executed when you run perl with the &lt;code&gt;-c&lt;/code&gt; switch, or if compilation fails.</source>
          <target state="translated">Un bloque de c&amp;oacute;digo &lt;code&gt;END&lt;/code&gt; se ejecuta lo m&amp;aacute;s tarde posible, es decir, despu&amp;eacute;s de que perl ha terminado de ejecutar el programa y justo antes de que se salga del int&amp;eacute;rprete, incluso si est&amp;aacute; saliendo como resultado de una funci&amp;oacute;n die (). (Pero no si se est&amp;aacute; transformando en otro programa a trav&amp;eacute;s de un &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; o si una se&amp;ntilde;al lo saca del agua; debe atraparlo usted mismo (si puede)). Puede tener varios bloques &lt;code&gt;END&lt;/code&gt; dentro de un archivo; ejecutar en orden inverso de definici&amp;oacute;n; es decir: &amp;uacute;ltimo en entrar, primero en salir (LIFO). &lt;code&gt;END&lt;/code&gt; bloques END no se ejecutan cuando ejecuta perl con la &lt;code&gt;-c&lt;/code&gt; , o si falla la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e942cc0968d145d9b00a1b1c78467e33e46acc43" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;END&lt;/code&gt; code block is executed as late as possible, that is, after perl has finished running the program and just before the interpreter is being exited, even if it is exiting as a result of a die() function. (But not if it's morphing into another program via &lt;code&gt;exec&lt;/code&gt;, or being blown out of the water by a signal--you have to trap that yourself (if you can).) You may have multiple &lt;code&gt;END&lt;/code&gt; blocks within a file--they will execute in reverse order of definition; that is: last in, first out (LIFO). &lt;code&gt;END&lt;/code&gt; blocks are not executed when you run perl with the &lt;code&gt;-c&lt;/code&gt; switch, or if compilation fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e32fa7ec52528fa53daf789a891351a0047191f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExtUtils::Typemaps&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2106dcfb583dc95f2d7d0a7530b5308a6cea8ccd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IO::Handle&lt;/code&gt; object is a reference to a symbol/GLOB reference (see the &lt;code&gt;Symbol&lt;/code&gt; package). Some modules that inherit from &lt;code&gt;IO::Handle&lt;/code&gt; may want to keep object related variables in the hash table part of the GLOB. In an attempt to prevent modules trampling on each other I propose the that any such module should prefix its variables with its own name separated by _'s. For example the IO::Socket module keeps a &lt;code&gt;timeout&lt;/code&gt; variable in 'io_socket_timeout'.</source>
          <target state="translated">Un objeto &lt;code&gt;IO::Handle&lt;/code&gt; es una referencia a una referencia de s&amp;iacute;mbolo / GLOB (consulte el paquete de &lt;code&gt;Symbol&lt;/code&gt; ). Algunos m&amp;oacute;dulos que heredan de &lt;code&gt;IO::Handle&lt;/code&gt; pueden querer mantener las variables relacionadas con el objeto en la parte de la tabla hash del GLOB. En un intento de evitar que los m&amp;oacute;dulos se pisoteen entre s&amp;iacute;, propongo que cualquier m&amp;oacute;dulo de este tipo deba anteponer sus variables con su propio nombre separado por _. Por ejemplo, el m&amp;oacute;dulo IO :: Socket mantiene una variable de &lt;code&gt;timeout&lt;/code&gt; en 'io_socket_timeout'.</target>
        </trans-unit>
        <trans-unit id="ddbf17a10e023000ccc30961ca5b0d4cd79dd73a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;eval ''&lt;/code&gt; executed within a subroutine defined in the &lt;code&gt;DB&lt;/code&gt; package doesn't see the usual surrounding lexical scope, but rather the scope of the first non-DB piece of code that called it. You don't normally need to worry about this unless you are writing a Perl debugger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf77a66a50c9398b1fd7246b531ff3583302d3a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;eval()&lt;/code&gt;, however, can see lexical variables of the scope it is being evaluated in, so long as the names aren't hidden by declarations within the &lt;code&gt;eval()&lt;/code&gt; itself. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4327b0847cdc34977cdbdda7e68546f97fba6ace" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;https&lt;/code&gt; connection may be made via an &lt;code&gt;http&lt;/code&gt; proxy that supports the CONNECT command (i.e. RFC 2817). You may not proxy &lt;code&gt;https&lt;/code&gt; via a proxy that itself requires &lt;code&gt;https&lt;/code&gt; to communicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7b8e2c63742b11c42dcae1ac500eab80f3ab56" translate="yes" xml:space="preserve">
          <source>An Array Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4bdf476b3365f09a887c13f6c40076ebfaf6c1" translate="yes" xml:space="preserve">
          <source>An Aside About Smarter and Safer Code</source>
          <target state="translated">Además de un código más inteligente y seguro</target>
        </trans-unit>
        <trans-unit id="3b01e7833f6ef8368a6a19aec43504160373e004" translate="yes" xml:space="preserve">
          <source>An E&amp;lt;...&amp;gt; surrounding strange content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e626c65821f55eedc24b3d056f760901055b33ab" translate="yes" xml:space="preserve">
          <source>An Error Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96ae95b9e6d2684c36b739e4e16b84332bd4be3" translate="yes" xml:space="preserve">
          <source>An Event-Driven Program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd29613666219a97f2491f0610be4945ceed298" translate="yes" xml:space="preserve">
          <source>An Example</source>
          <target state="translated">Un ejemplo</target>
        </trans-unit>
        <trans-unit id="f8c1ce33e34656d389a163577db68ecf2ef0ded0" translate="yes" xml:space="preserve">
          <source>An Example -- the NULL termination problem.</source>
          <target state="translated">Un ejemplo...el problema de la terminación NULL.</target>
        </trans-unit>
        <trans-unit id="b0338e71cce0b4ccb879ecd4b7099e83ebe3be92" translate="yes" xml:space="preserve">
          <source>An Example: the NULL termination problem.</source>
          <target state="translated">Un ejemplo:el problema de la terminación NULL.</target>
        </trans-unit>
        <trans-unit id="8c00947f1047eee3af23c94728ed5ad710d9cb2f" translate="yes" xml:space="preserve">
          <source>An INSTALL file should be included, and should contain simple installation instructions. When using ExtUtils::MakeMaker this will usually be:</source>
          <target state="translated">Se debe incluir un archivo de INSTALACIÓN,y debe contener instrucciones de instalación simples.Cuando se usa ExtUtils::MakeMaker esto será normalmente:</target>
        </trans-unit>
        <trans-unit id="506b7c2a6739d4b086313431ab2d8807d26d26ea" translate="yes" xml:space="preserve">
          <source>An Input FileGlob string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d4eb0ecab7adc479ea3b6eef3a6aca32ccbec3" translate="yes" xml:space="preserve">
          <source>An OFFSET may be specified to place the read data at some place in the string other than the beginning. A negative OFFSET specifies placement at that many characters counting backwards from the end of the string. A positive OFFSET greater than the length of SCALAR results in the string being padded to the required size with &lt;code&gt;&quot;\0&quot;&lt;/code&gt; bytes before the result of the read is appended.</source>
          <target state="translated">Se puede especificar un OFFSET para colocar los datos le&amp;iacute;dos en alg&amp;uacute;n lugar de la cadena que no sea el principio. Un OFFSET negativo especifica la ubicaci&amp;oacute;n en esa cantidad de caracteres contando hacia atr&amp;aacute;s desde el final de la cadena. Un OFFSET positivo mayor que la longitud de ESCALAR da como resultado que la cadena se rellene al tama&amp;ntilde;o requerido con bytes &lt;code&gt;&quot;\0&quot;&lt;/code&gt; antes de que se agregue el resultado de la lectura.</target>
        </trans-unit>
        <trans-unit id="0dc3cbd84029f4f613840045b9422510efa87d84" translate="yes" xml:space="preserve">
          <source>An OFFSET may be specified to write the data from some part of the string other than the beginning. A negative OFFSET specifies writing that many characters counting backwards from the end of the string. If SCALAR is of length zero, you can only use an OFFSET of 0.</source>
          <target state="translated">Se puede especificar un OFFSET para escribir los datos de alguna parte de la cadena que no sea el principio.Un OFFSET negativo especifica la escritura de tantos caracteres contando hacia atrás desde el final de la cadena.Si ESCALAR es de longitud cero,sólo se puede usar un OFFSET de 0.</target>
        </trans-unit>
        <trans-unit id="bd9383fdee820dfd7a79259db8339a2ec8fb85d9" translate="yes" xml:space="preserve">
          <source>An Object is Simply a Data Structure</source>
          <target state="translated">Un objeto es simplemente una estructura de datos</target>
        </trans-unit>
        <trans-unit id="a75b7e5900f9f9a5e2336a6194fd54179bb27c7e" translate="yes" xml:space="preserve">
          <source>An Output FileGlob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813d4e6c344e0e779c908b93f3b8922ba5b51b2f" translate="yes" xml:space="preserve">
          <source>An RDF vocabulary to describe software projects. &lt;a href=&quot;http://usefulinc.com/doap&quot;&gt;http://usefulinc.com/doap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2be5f7e627a6ada01e5f83f900c749a12504c5b" translate="yes" xml:space="preserve">
          <source>An RPN expression can also be interpreted in another way, as a sequence of operations on a stack, one operation per token. A literal or variable token pushes a value onto the stack. A binary operator pulls two items off the stack, performs a calculation with them, and pushes the result back onto the stack. The stack starts out empty, and at the end of the expression there must be exactly one value left on the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451423395ae3ecccc772428a72078e3af59aea77" translate="yes" xml:space="preserve">
          <source>An RPN expression may be any of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69ceb552111cae999e0e9d8f79c888a4e18b2ab" translate="yes" xml:space="preserve">
          <source>An SV (or AV, HV, etc.) is allocated in two parts: the head (struct sv, av, hv...) contains type and reference count information, and for many types, a pointer to the body (struct xrv, xpv, xpviv...), which contains fields specific to each type. Some types store all they need in the head, so don't have a body.</source>
          <target state="translated">Un SV (o AV,HV,etc.)se asigna en dos partes:la cabeza (struct sv,av,hv...)contiene información sobre el tipo y el recuento de referencia,y para muchos tipos,un puntero al cuerpo (struct xrv,xpv,xpviv...),que contiene campos específicos para cada tipo.Algunos tipos almacenan todo lo que necesitan en la cabeza,así que no tienen un cuerpo.</target>
        </trans-unit>
        <trans-unit id="0db48295b7cb634bd39479ea9baf6751db33420c" translate="yes" xml:space="preserve">
          <source>An SV can be created and loaded with one command. There are five types of values that can be loaded: an integer value (IV), an unsigned integer value (UV), a double (NV), a string (PV), and another scalar (SV). (&quot;PV&quot; stands for &quot;Pointer Value&quot;. You might think that it is misnamed because it is described as pointing only to strings. However, it is possible to have it point to other things. For example, it could point to an array of UVs. But, using it for non-strings requires care, as the underlying assumption of much of the internals is that PVs are just for strings. Often, for example, a trailing &lt;code&gt;NUL&lt;/code&gt; is tacked on automatically. The non-string use is documented only in this paragraph.)</source>
          <target state="translated">Un SV se puede crear y cargar con un comando. Hay cinco tipos de valores que se pueden cargar: un valor entero (IV), un valor entero sin signo (UV), un valor doble (NV), una cadena (PV) y otro escalar (SV). (&quot;PV&quot; significa &quot;Valor de puntero&quot;. Podr&amp;iacute;a pensar que tiene un nombre incorrecto porque se describe como apuntando solo a cadenas. Sin embargo, es posible que apunte a otras cosas. Por ejemplo, podr&amp;iacute;a apuntar a una matriz de UV. Pero usarlo para no cadenas requiere cuidado, ya que la suposici&amp;oacute;n subyacente de gran parte de los componentes internos es que los PV son solo para cadenas. A menudo, por ejemplo, un &lt;code&gt;NUL&lt;/code&gt; final se agrega autom&amp;aacute;ticamente. El uso sin cadenas es documentado solo en este p&amp;aacute;rrafo).</target>
        </trans-unit>
        <trans-unit id="e49daf61f2f4bab338dc0435e2098c4740ae32f6" translate="yes" xml:space="preserve">
          <source>An SV may be passed as a second argument. If so, the name will be assigned to it and it will be returned. Otherwise the returned SV will be a new mortal.</source>
          <target state="translated">Se puede pasar un SV como segundo argumento.Si es así,se le asignará el nombre y será devuelto.De lo contrario,el SV devuelto será un nuevo mortal.</target>
        </trans-unit>
        <trans-unit id="7e60a0da99f77ec00184644cb08929c2fbb88e98" translate="yes" xml:space="preserve">
          <source>An URL for a bug tracker (e.g. Bugzilla or RT queue) for this project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb53ac6b527ff22855aa21b588aeb5e456de693" translate="yes" xml:space="preserve">
          <source>An URL for an official statement of this distribution's license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d6fdbeeb22295aa04aac68ad9fd7f77cf9046a" translate="yes" xml:space="preserve">
          <source>An XS module that is locale-dependent could have been written under the assumption that it will never be called in a multi-threaded environment, and so uses other non-locale constructs that aren't multi-thread-safe. See &lt;a href=&quot;perlxs#Thread-aware-system-interfaces&quot;&gt;&quot;Thread-aware system interfaces&quot; in perlxs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a93457850bdbb33ca102c024544fcdc99dd999" translate="yes" xml:space="preserve">
          <source>An XSUB section continues until another section-start keyword is found.</source>
          <target state="translated">Una sección XSUB continúa hasta que se encuentra otra palabra clave de inicio de sección.</target>
        </trans-unit>
        <trans-unit id="db98408a971f988d838aae97c21a88cbfeff498b" translate="yes" xml:space="preserve">
          <source>An abstract character&amp;rsquo;s integer value. Same thing as &lt;b&gt;codepoint&lt;/b&gt;.</source>
          <target state="translated">Valor entero de un car&amp;aacute;cter abstracto. Lo mismo que el &lt;b&gt;punto de c&amp;oacute;digo&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="bd8526c4f7f2f82dc46961c40bfa270781cafa7e" translate="yes" xml:space="preserve">
          <source>An accessor function can be redefined in order to provide additional checking of values, etc. Here, we want the &lt;code&gt;count&lt;/code&gt; element always to be nonnegative, so we redefine the &lt;code&gt;count&lt;/code&gt; accessor accordingly.</source>
          <target state="translated">Se puede redefinir una funci&amp;oacute;n de acceso para proporcionar una verificaci&amp;oacute;n adicional de valores, etc. Aqu&amp;iacute;, queremos que el elemento de &lt;code&gt;count&lt;/code&gt; siempre sea no negativo, por lo que redefinimos el acceso de &lt;code&gt;count&lt;/code&gt; consecuencia.</target>
        </trans-unit>
        <trans-unit id="76864d299088548272113a8d31dd2510d163d674" translate="yes" xml:space="preserve">
          <source>An accessor lets you add additional code around attribute access. For example, you could apply a default to an attribute that wasn't set in the constructor, or you could validate that a new value for the attribute is acceptable.</source>
          <target state="translated">Un accesorio te permite añadir código adicional alrededor del acceso a los atributos.Por ejemplo,puedes aplicar un valor predeterminado a un atributo que no se haya establecido en el constructor,o puedes validar que un nuevo valor para el atributo es aceptable.</target>
        </trans-unit>
        <trans-unit id="7f7dfcb0e79b76d6607a032d4c42004b6d846b72" translate="yes" xml:space="preserve">
          <source>An action that terminates a process will terminate</source>
          <target state="translated">Una acción que pone fin a un proceso terminará</target>
        </trans-unit>
        <trans-unit id="3d55486b7ae618b0c9e5822b88065546dbd8b09b" translate="yes" xml:space="preserve">
          <source>An actual piece of data, in contrast to all the variables, references, keys, indices, operators, and whatnot that you need to access the value.</source>
          <target state="translated">Un dato real,en contraste con todas las variables,referencias,claves,índices,operadores y demás que se necesitan para acceder al valor.</target>
        </trans-unit>
        <trans-unit id="1e18a14c7435e1ad99b33d06cb67211ccd6f13ff" translate="yes" xml:space="preserve">
          <source>An adjectival pseudofunction that warps the meaning of an &lt;b&gt;lvalue&lt;/b&gt; in some declarative fashion. Currently there are three lvalue modifiers: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una pseudofunci&amp;oacute;n adjetiva que deforma el significado de un valor &lt;b&gt;l&lt;/b&gt; de alguna manera declarativa. Actualmente, hay tres modificadores de lvalue: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="147929b2af4f7b23dfdf17e155cb639bdee82ce1" translate="yes" xml:space="preserve">
          <source>An adjectival pseudofunction that warps the meaning of an &lt;b&gt;lvalue&lt;/b&gt; in some declarative fashion. Currently there are three lvalue modifiers: &lt;code&gt;my&lt;/code&gt;, &lt;code&gt;our&lt;/code&gt;, and &lt;code&gt;local&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450e105909f5464a91b8d711013a548cdad0ecea" translate="yes" xml:space="preserve">
          <source>An algorithm to map a character set to a byte sequence. You don't have to be able to tell which character set a given byte sequence belongs. 7-bit ISO-2022 is a CES but it cannot be a CCS. EUC is an example of being both a CCS and CES.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddce428631d662b65df938a0ab59dc6d26df5c3" translate="yes" xml:space="preserve">
          <source>An alias can map to either an official Unicode character name (not a loose matched name) or to a numeric code point (ordinal). The latter is useful for assigning names to code points in Unicode private use areas such as U+E800 through U+F8FF. A numeric code point must be a non-negative integer, or a string beginning with &lt;code&gt;&quot;U+&quot;&lt;/code&gt; or &lt;code&gt;&quot;0x&quot;&lt;/code&gt; with the remainder considered to be a hexadecimal integer. A literal numeric constant must be unsigned; it will be interpreted as hex if it has a leading zero or contains non-decimal hex digits; otherwise it will be interpreted as decimal. If it begins with &lt;code&gt;&quot;U+&quot;&lt;/code&gt; , it is interpreted as the Unicode code point; otherwise it is interpreted as native. (Only code points below 256 can differ between Unicode and native.) Thus &lt;code&gt;U+41&lt;/code&gt; is always the Latin letter &quot;A&quot;; but &lt;code&gt;0x41&lt;/code&gt; can be &quot;NO-BREAK SPACE&quot; on EBCDIC platforms.</source>
          <target state="translated">Un alias se puede asignar a un nombre de car&amp;aacute;cter oficial Unicode (no a un nombre suelto coincidente) oa un punto de c&amp;oacute;digo num&amp;eacute;rico (ordinal). Este &amp;uacute;ltimo es &amp;uacute;til para asignar nombres a puntos de c&amp;oacute;digo en &amp;aacute;reas de uso privado Unicode como U + E800 a U + F8FF. Un punto de c&amp;oacute;digo num&amp;eacute;rico debe ser un n&amp;uacute;mero entero no negativo o una cadena que comience con &lt;code&gt;&quot;U+&quot;&lt;/code&gt; o &lt;code&gt;&quot;0x&quot;&lt;/code&gt; y el resto se considerar&amp;aacute; un n&amp;uacute;mero entero hexadecimal. Una constante num&amp;eacute;rica literal debe estar sin signo; se interpretar&amp;aacute; como hexadecimal si tiene un cero a la izquierda o contiene d&amp;iacute;gitos hexadecimales que no son decimales; de lo contrario, se interpretar&amp;aacute; como decimal. Si comienza con &lt;code&gt;&quot;U+&quot;&lt;/code&gt; , se interpreta como el punto de c&amp;oacute;digo Unicode; de lo contrario, se interpreta como nativo. (Solo los puntos de c&amp;oacute;digo por debajo de 256 pueden diferir entre Unicode y nativo.) As&amp;iacute; &lt;code&gt;U+41&lt;/code&gt; es siempre la letra latina &quot;A&quot;; pero &lt;code&gt;0x41&lt;/code&gt; puede ser &quot;ESPACIO SIN ROTURA&quot; en plataformas EBCDIC.</target>
        </trans-unit>
        <trans-unit id="307b5df586934d78ce8b5dabe9ab9b8c2f875563" translate="yes" xml:space="preserve">
          <source>An alias can map to either an official Unicode character name (not a loose matched name) or to a numeric code point (ordinal). The latter is useful for assigning names to code points in Unicode private use areas such as U+E800 through U+F8FF. A numeric code point must be a non-negative integer, or a string beginning with &lt;code&gt;&quot;U+&quot;&lt;/code&gt; or &lt;code&gt;&quot;0x&quot;&lt;/code&gt; with the remainder considered to be a hexadecimal integer. A literal numeric constant must be unsigned; it will be interpreted as hex if it has a leading zero or contains non-decimal hex digits; otherwise it will be interpreted as decimal. If it begins with &lt;code&gt;&quot;U+&quot;&lt;/code&gt;, it is interpreted as the Unicode code point; otherwise it is interpreted as native. (Only code points below 256 can differ between Unicode and native.) Thus &lt;code&gt;U+41&lt;/code&gt; is always the Latin letter &quot;A&quot;; but &lt;code&gt;0x41&lt;/code&gt; can be &quot;NO-BREAK SPACE&quot; on EBCDIC platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2346eaad655197a010139149e8271c64c649a891" translate="yes" xml:space="preserve">
          <source>An alias for fullname</source>
          <target state="translated">Un alias para el nombre completo</target>
        </trans-unit>
        <trans-unit id="7fe1e0c1ce121b1e661962490b3a8d17f0df008e" translate="yes" xml:space="preserve">
          <source>An alias for hostfqdn ().</source>
          <target state="translated">Un alias de hostfqdn ().</target>
        </trans-unit>
        <trans-unit id="0f9c5134c84e70c19466ac6665667bdc11f335df" translate="yes" xml:space="preserve">
          <source>An alphanumeric name preceded by dollar sign refers to a Perl scalar variable. Only variables declared with &lt;code&gt;my&lt;/code&gt; or &lt;code&gt;state&lt;/code&gt; are supported. If the variable's value is not a native integer, it will be converted to an integer, by Perl's usual mechanisms, at the time it is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa449dd40ff0246bd3a833083086ff6fe9ea989c" translate="yes" xml:space="preserve">
          <source>An alternate (and possibly simpler) method to pushing values on the stack is to use the macro:</source>
          <target state="translated">Un método alternativo (y posiblemente más simple)para empujar los valores en la pila es usar la macro:</target>
        </trans-unit>
        <trans-unit id="1921a2093ccc86489ce0ad3cb2bb5dbbb1b5fcf0" translate="yes" xml:space="preserve">
          <source>An alternate delimiter may be specified using &lt;a href=&quot;#-Fpattern&quot;&gt;-F&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490e5f218f41d502acc0f80b9b4c03244664bdb6" translate="yes" xml:space="preserve">
          <source>An alternate delimiter may be specified using &lt;b&gt;-F&lt;/b&gt;.</source>
          <target state="translated">Se puede especificar un delimitador alternativo mediante &lt;b&gt;-F&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="a3cee96423e82840fff05ec16e3bc4bd5558bd28" translate="yes" xml:space="preserve">
          <source>An alternate filename that points to the real &lt;b&gt;filename&lt;/b&gt;, which in turn points to the real &lt;b&gt;file&lt;/b&gt;. Whenever the &lt;b&gt;operating system&lt;/b&gt; is trying to parse a &lt;b&gt;pathname&lt;/b&gt; containing a symbolic link, it merely substitutes the new name and continues parsing.</source>
          <target state="translated">Un nombre de archivo alternativo que apunta al &lt;b&gt;nombre de archivo&lt;/b&gt; real , que a su vez apunta al &lt;b&gt;archivo&lt;/b&gt; real . Siempre que el &lt;b&gt;sistema operativo&lt;/b&gt; intenta analizar un &lt;b&gt;nombre de ruta que&lt;/b&gt; contiene un enlace simb&amp;oacute;lico, simplemente sustituye el nuevo nombre y contin&amp;uacute;a analizando.</target>
        </trans-unit>
        <trans-unit id="567849086db2a3773d0ebaa265c330619cbbb371" translate="yes" xml:space="preserve">
          <source>An alternate interface to Filter::Util::Call is now available. See &lt;a href=&quot;../simple&quot;&gt;Filter::Simple&lt;/a&gt; for more details.</source>
          <target state="translated">Ahora est&amp;aacute; disponible una interfaz alternativa a Filter :: Util :: Call. Consulte &lt;a href=&quot;../simple&quot;&gt;Filtro :: Simple&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="309e6a9857cb37095aa6e70561b74ca78f25b7d4" translate="yes" xml:space="preserve">
          <source>An alternate interface to Filter::Util::Call is now available. See &lt;a href=&quot;Filter::Simple&quot;&gt;Filter::Simple&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c89b199090d1d97e837c8f064d662931bf60c5" translate="yes" xml:space="preserve">
          <source>An alternate way to create a new version object is through the exported qv() sub. This is not strictly like other q? operators (like qq, qw), in that the only delimiters supported are parentheses (or spaces). It is the best way to initialize a short version without triggering the floating point interpretation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675501f93d17028172930c214a15945683c8e504" translate="yes" xml:space="preserve">
          <source>An alternative approach to cache flushing is to use the &lt;code&gt;HASH&lt;/code&gt; option (see above) to request that &lt;code&gt;Memoize&lt;/code&gt; use a particular hash variable as its cache. Then you can examine or modify the hash at any time in any way you desire. You may flush the cache by using &lt;code&gt;%hash = ()&lt;/code&gt; .</source>
          <target state="translated">Un enfoque alternativo para el vaciado de cach&amp;eacute; es usar la opci&amp;oacute;n &lt;code&gt;HASH&lt;/code&gt; (ver arriba) para solicitar que &lt;code&gt;Memoize&lt;/code&gt; use una variable hash particular como su cach&amp;eacute;. Luego, puede examinar o modificar el hash en cualquier momento y de la forma que desee. Puede vaciar el cach&amp;eacute; usando &lt;code&gt;%hash = ()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8b6136f62918ff1ea1ed138ea0c96c6d31fc586" translate="yes" xml:space="preserve">
          <source>An alternative approach to cache flushing is to use the &lt;code&gt;HASH&lt;/code&gt; option (see above) to request that &lt;code&gt;Memoize&lt;/code&gt; use a particular hash variable as its cache. Then you can examine or modify the hash at any time in any way you desire. You may flush the cache by using &lt;code&gt;%hash = ()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fe156c5b22968eab0fbdde266b1268db8760ef" translate="yes" xml:space="preserve">
          <source>An alternative is CamelBones, a framework that allows access to both Foundation and AppKit classes and objects, so that full GUI applications can be built in Perl. CamelBones can be found on SourceForge, at &lt;a href=&quot;http://www.sourceforge.net/projects/camelbones/&quot;&gt;http://www.sourceforge.net/projects/camelbones/&lt;/a&gt;.</source>
          <target state="translated">Una alternativa es CamelBones, un marco que permite el acceso a las clases y objetos de Foundation y AppKit, de modo que se puedan construir aplicaciones GUI completas en Perl. CamelBones se puede encontrar en SourceForge, en &lt;a href=&quot;http://www.sourceforge.net/projects/camelbones/&quot;&gt;http://www.sourceforge.net/projects/camelbones/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b9956d0c6aedc296243c0a951b58bd48cc08ba5" translate="yes" xml:space="preserve">
          <source>An alternative is CamelBones, a framework that allows access to both Foundation and AppKit classes and objects, so that full GUI applications can be built in Perl. CamelBones can be found on SourceForge, at &lt;a href=&quot;https://www.sourceforge.net/projects/camelbones/&quot;&gt;https://www.sourceforge.net/projects/camelbones/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf70c06c68960fa2b5ce48b474675e096b9430d" translate="yes" xml:space="preserve">
          <source>An alternative method of debugging regexps is to embed &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; statements within the regexp. This provides a blow-by-blow account of the backtracking in an alternation:</source>
          <target state="translated">Un m&amp;eacute;todo alternativo para depurar expresiones regulares es incrustar declaraciones de &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; dentro de la expresi&amp;oacute;n regular. Esto proporciona un relato paso a paso del retroceso en una alternancia:</target>
        </trans-unit>
        <trans-unit id="d38adacc9748189f199af8dc89eab5c14ea53178" translate="yes" xml:space="preserve">
          <source>An alternative method of debugging regexps is to embed &lt;code&gt;print&lt;/code&gt; statements within the regexp. This provides a blow-by-blow account of the backtracking in an alternation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797f91185d7afbacb2d3c5eed6df4adbd22d2a7d" translate="yes" xml:space="preserve">
          <source>An alternative reference is the Info-Zip appnote. This is available from &lt;a href=&quot;ftp://ftp.info-zip.org/pub/infozip/doc/&quot;&gt;ftp://ftp.info-zip.org/pub/infozip/doc/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577bb949a7cbee63183e379cdce8743144bb2e97" translate="yes" xml:space="preserve">
          <source>An alternative to using &lt;a href=&quot;#substr-EXPR%2COFFSET%2CLENGTH%2CREPLACEMENT&quot;&gt;&lt;code&gt;substr&lt;/code&gt;&lt;/a&gt; as an lvalue is to specify the replacement string as the 4th argument. This allows you to replace parts of the EXPR and return what was there before in one operation, just as you can with &lt;a href=&quot;#splice-ARRAY%2COFFSET%2CLENGTH%2CLIST&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf78a032596f44477dfca0392a1f37e462bfc42f" translate="yes" xml:space="preserve">
          <source>An alternative to using substr() as an lvalue is to specify the replacement string as the 4th argument. This allows you to replace parts of the EXPR and return what was there before in one operation, just as you can with splice().</source>
          <target state="translated">Una alternativa al uso de substr()como valor l es especificar la cadena de sustitución como el 4º argumento.Esto le permite reemplazar partes de la EXPR y devolver lo que estaba allí antes en una sola operación,tal como se puede hacer con splice().</target>
        </trans-unit>
        <trans-unit id="25b5286961be13762e984cfd1189ea7a9bb06d7a" translate="yes" xml:space="preserve">
          <source>An alternative to writing the filter in C is to create a separate executable in the language of your choice. The separate executable reads from standard input, does whatever processing is necessary, and writes the filtered data to standard output. &lt;code&gt;Filter::cpp&lt;/code&gt; is an example of a source filter implemented as a separate executable - the executable is the C preprocessor bundled with your C compiler.</source>
          <target state="translated">Una alternativa a escribir el filtro en C es crear un ejecutable separado en el idioma de su elecci&amp;oacute;n. El ejecutable independiente lee de la entrada est&amp;aacute;ndar, realiza el procesamiento necesario y escribe los datos filtrados en la salida est&amp;aacute;ndar. &lt;code&gt;Filter::cpp&lt;/code&gt; es un ejemplo de un filtro de origen implementado como un ejecutable separado: el ejecutable es el preprocesador de C incluido con su compilador de C.</target>
        </trans-unit>
        <trans-unit id="9216315bb2214d5ed94f6db6fec42532477a8283" translate="yes" xml:space="preserve">
          <source>An alternative way of writing something more easily; a shortcut.</source>
          <target state="translated">Una forma alternativa de escribir algo más fácilmente;un atajo.</target>
        </trans-unit>
        <trans-unit id="d69bfaa7d98ebed8954a924a638458e2ecf0b867" translate="yes" xml:space="preserve">
          <source>An alternative way to achieve this can be seen in &lt;a href=&quot;Gtk2::CodeGen&quot;&gt;Gtk2::CodeGen&lt;/a&gt; and &lt;a href=&quot;Glib::CodeGen&quot;&gt;Glib::CodeGen&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3719242868ba601b24b2c4019225372b6d1ba5a6" translate="yes" xml:space="preserve">
          <source>An alternatively is the Info-Zip appnote. This is available from &lt;a href=&quot;ftp://ftp.info-zip.org/pub/infozip/doc/&quot;&gt;ftp://ftp.info-zip.org/pub/infozip/doc/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ef70866e892e0391f54f3f0e595fde0691ccb0" translate="yes" xml:space="preserve">
          <source>An anchor useful in basic regexps is the</source>
          <target state="translated">Un ancla útil en los regexps básicos es el</target>
        </trans-unit>
        <trans-unit id="a941741e26d01bf48e71deca7cfe67d745df0d18" translate="yes" xml:space="preserve">
          <source>An anonymous array of alternative library specifications to be searched for (in order) until at least one library is found. E.g.</source>
          <target state="translated">Una serie anónima de especificaciones alternativas de biblioteca que se buscarán (en orden)hasta que se encuentre al menos una biblioteca.Por ejemplo.</target>
        </trans-unit>
        <trans-unit id="c253698bf9e4f75c2b5d0a18558b851f2d3f6b5e" translate="yes" xml:space="preserve">
          <source>An application that takes the trouble to use information in &lt;code&gt;LC_MONETARY&lt;/code&gt; may format debits as if they were credits and vice versa if that locale has been subverted. Or it might make payments in US dollars instead of Hong Kong dollars.</source>
          <target state="translated">Una aplicaci&amp;oacute;n que se toma la molestia de usar informaci&amp;oacute;n en &lt;code&gt;LC_MONETARY&lt;/code&gt; puede formatear d&amp;eacute;bitos como si fueran cr&amp;eacute;ditos y viceversa si esa configuraci&amp;oacute;n regional se ha subvertido. O podr&amp;iacute;a realizar pagos en d&amp;oacute;lares estadounidenses en lugar de d&amp;oacute;lares de Hong Kong.</target>
        </trans-unit>
        <trans-unit id="01ac9da7b76fdd816e4e95bf07e705af326d0f2c" translate="yes" xml:space="preserve">
          <source>An application using Module can say something like:</source>
          <target state="translated">Una aplicación que usa el Módulo puede decir algo como:</target>
        </trans-unit>
        <trans-unit id="a335ab967a8e1f5c521e6fbf8a762d039a0699ab" translate="yes" xml:space="preserve">
          <source>An archaic expression for what is more correctly referred to as &lt;b&gt;list context&lt;/b&gt;.</source>
          <target state="translated">Una expresi&amp;oacute;n arcaica para lo que se conoce m&amp;aacute;s correctamente como &lt;b&gt;contexto de lista&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="7dd0ff3c6abfb69f462a62c5017ae088c797d806" translate="yes" xml:space="preserve">
          <source>An argument can be ignored by omitting the main part of the name from a parameter declaration, leaving just a bare &lt;code&gt;$&lt;/code&gt; sigil. For example,</source>
          <target state="translated">Se puede ignorar un argumento omitiendo la parte principal del nombre de una declaraci&amp;oacute;n de par&amp;aacute;metro, dejando solo un &lt;code&gt;$&lt;/code&gt; sigil. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="3f5cfd48537bc41203499ec678c7f8d1ffcc4184" translate="yes" xml:space="preserve">
          <source>An argument line supplying values to plug into the previous picture line.</source>
          <target state="translated">Una línea de argumentación que suministra valores para conectar con la línea de la imagen anterior.</target>
        </trans-unit>
        <trans-unit id="e1318b0f2b2dd2f7e8a55cad33c819c262a23ea1" translate="yes" xml:space="preserve">
          <source>An array can also change its length:</source>
          <target state="translated">Una matriz también puede cambiar su longitud:</target>
        </trans-unit>
        <trans-unit id="a7633012ecb371a2113d013c22d2c030bb2a3192" translate="yes" xml:space="preserve">
          <source>An array can be accessed one scalar at a time by specifying a dollar sign (&lt;code&gt;$&lt;/code&gt; ), then the name of the array (without the leading &lt;code&gt;@&lt;/code&gt; ), then the subscript inside square brackets. For example:</source>
          <target state="translated">Se puede acceder a una matriz un escalar a la vez especificando un signo de d&amp;oacute;lar ( &lt;code&gt;$&lt;/code&gt; ), luego el nombre de la matriz (sin la &lt;code&gt;@&lt;/code&gt; inicial ), luego el sub&amp;iacute;ndice entre corchetes. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="540cdd79efe573437a7605791a2eb1616100de60" translate="yes" xml:space="preserve">
          <source>An array can be accessed one scalar at a time by specifying a dollar sign (&lt;code&gt;$&lt;/code&gt;), then the name of the array (without the leading &lt;code&gt;@&lt;/code&gt;), then the subscript inside square brackets. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015711954685a7b3ea99a44f6e657f520fa53416" translate="yes" xml:space="preserve">
          <source>An array of an array is just a regular old array @AoA that you can get at with two subscripts, like &lt;code&gt;$AoA[3][2]&lt;/code&gt; . Here's a declaration of the array:</source>
          <target state="translated">Una matriz de una matriz es simplemente una matriz antigua regular @AoA a la que puede acceder con dos sub&amp;iacute;ndices, como &lt;code&gt;$AoA[3][2]&lt;/code&gt; . Aqu&amp;iacute; hay una declaraci&amp;oacute;n de la matriz:</target>
        </trans-unit>
        <trans-unit id="11613ff6241b5d0054882bce3b479c51b671807c" translate="yes" xml:space="preserve">
          <source>An array of an array is just a regular old array @AoA that you can get at with two subscripts, like &lt;code&gt;$AoA[3][2]&lt;/code&gt;. Here's a declaration of the array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae61cf59e4cd9db6ee9b5a175cc315be8ef10741" translate="yes" xml:space="preserve">
          <source>An array of constants' names, either scalars containing names, or hashrefs as detailed in &lt;a href=&quot;#C_constant&quot;&gt;&quot;C_constant&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aee3421650400587ce5406d39d397928a2add0e" translate="yes" xml:space="preserve">
          <source>An array of constants' names, either scalars containing names, or hashrefs as detailed in &lt;a href=&quot;#C_constant&quot;&gt;C_constant&lt;/a&gt;.</source>
          <target state="translated">Una matriz de nombres de constantes, ya sean escalares que contienen nombres o hashrefs como se detalla en &lt;a href=&quot;#C_constant&quot;&gt;C_constant&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4dbdb6c0876baa594d12d6a72f40a78381bda16" translate="yes" xml:space="preserve">
          <source>An array of file names for the shared objects that were loaded.</source>
          <target state="translated">Un conjunto de nombres de archivos para los objetos compartidos que fueron cargados.</target>
        </trans-unit>
        <trans-unit id="26930aebfa1fee021fd440dae3cf343080566995" translate="yes" xml:space="preserve">
          <source>An array of module (package) names that have been bootstrap'ed.</source>
          <target state="translated">Un conjunto de nombres de módulos (paquetes)que han sido arrancados.</target>
        </trans-unit>
        <trans-unit id="e8f1da37492eab7b118aed0b3744e018cc0392dd" translate="yes" xml:space="preserve">
          <source>An array of non-negative integers that is used for comparison purposes with other version objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792d37106ab796a9da516b2cfe4619175268f4f1" translate="yes" xml:space="preserve">
          <source>An array of patches on CPAN or on the local disk to be applied in order via an external patch program. If the value for the &lt;code&gt;-p&lt;/code&gt; parameter is &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; is determined by reading the patch beforehand. The path to each patch is either an absolute path on the local filesystem or relative to a patch directory specified in the &lt;code&gt;patches_dir&lt;/code&gt; configuration variable or in the format of a canonical distro name. For examples please consult the distroprefs/ directory in the CPAN.pm distribution (these examples are not installed by default).</source>
          <target state="translated">Una serie de parches en CPAN o en el disco local que se aplicar&amp;aacute;n en orden mediante un programa de parches externo. Si el valor del par&amp;aacute;metro &lt;code&gt;-p&lt;/code&gt; es &lt;code&gt;0&lt;/code&gt; o &lt;code&gt;1&lt;/code&gt; , se determina leyendo el parche de antemano. La ruta a cada parche es una ruta absoluta en el sistema de archivos local o relativa a un directorio de parche especificado en la variable de configuraci&amp;oacute;n &lt;code&gt;patches_dir&lt;/code&gt; o en el formato de un nombre de distribuci&amp;oacute;n can&amp;oacute;nico. Para obtener ejemplos, consulte el directorio distroprefs / en la distribuci&amp;oacute;n CPAN.pm (estos ejemplos no est&amp;aacute;n instalados por defecto).</target>
        </trans-unit>
        <trans-unit id="b89f1be8b64b665e2888aa36341ca67f3fc8a573" translate="yes" xml:space="preserve">
          <source>An array of the handles returned by successful calls to dl_load_file(), made by bootstrap, in the order in which they were loaded. Can be used with dl_find_symbol() to look for a symbol in any of the loaded files.</source>
          <target state="translated">Un arreglo de los &quot;handles&quot; devueltos por llamadas exitosas a dl_load_file(),hechas por bootstrap,en el orden en que fueron cargadas.Puede ser usado con dl_find_symbol()para buscar un símbolo en cualquiera de los archivos cargados.</target>
        </trans-unit>
        <trans-unit id="c823d47a703f9ce8bdd6c6bd99c53c578f964658" translate="yes" xml:space="preserve">
          <source>An array reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2042400b9cf51420ca0bb02f4a95651f7d9e0fc1" translate="yes" xml:space="preserve">
          <source>An array represents a list of values:</source>
          <target state="translated">Una matriz representa una lista de valores:</target>
        </trans-unit>
        <trans-unit id="7ce42eb4fb16bbef377321c32853b8f06079f21c" translate="yes" xml:space="preserve">
          <source>An array which exposes the contents of the capture buffers, if any, of the last successful pattern match, not counting patterns matched in nested blocks that have been exited already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58bf09473fcb443f32238cd3f343fe1cb52e884" translate="yes" xml:space="preserve">
          <source>An array with multiple subscripts for finding a single element. Perl implements these using &lt;b&gt;references&lt;/b&gt;&amp;mdash;see Camel chapter 9, &amp;ldquo;Data Structures&amp;rdquo;.</source>
          <target state="translated">Una matriz con varios sub&amp;iacute;ndices para encontrar un solo elemento. Perl los implementa usando &lt;b&gt;referencias &amp;mdash;&lt;/b&gt; vea el cap&amp;iacute;tulo 9 de Camel, &amp;ldquo;Estructuras de datos&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="e730b7563caa7a9a3615b79242bd88575f2b5d2f" translate="yes" xml:space="preserve">
          <source>An attempt to &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;require $module&quot;&lt;/code&gt; failed, even though the list of extensions indicated that it should succeed. Correct by conducting a proper installation.</source>
          <target state="translated">Un intento de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;require $module&quot;&lt;/code&gt; fall&amp;oacute;, aunque la lista de extensiones indicaba que deber&amp;iacute;a tener &amp;eacute;xito. Corrija realizando una instalaci&amp;oacute;n adecuada.</target>
        </trans-unit>
        <trans-unit id="f00d85ec569efd3d0ba1b09d16f4a00196ee0d74" translate="yes" xml:space="preserve">
          <source>An attempt to &lt;code&gt;eval &quot;require $module&quot;&lt;/code&gt; failed, even though the list of extensions indicated that it should succeed. Correct by conducting a proper installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8668d93103d45211068cbb7aa1991bd63b959bd9" translate="yes" xml:space="preserve">
          <source>An attempt to allocate memory failed.</source>
          <target state="translated">Un intento de asignar memoria falló.</target>
        </trans-unit>
        <trans-unit id="4965e597a6abdfe2d520970b55b8363275b2a451" translate="yes" xml:space="preserve">
          <source>An attempt to set an unrecognized attribute is a fatal error. (The error is trappable, but it still stops the compilation within that &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.) Setting an attribute with a name that's all lowercase letters that's not a built-in attribute (such as &quot;foo&quot;) will result in a warning with &lt;b&gt;-w&lt;/b&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings 'reserved'&lt;/code&gt; .</source>
          <target state="translated">Un intento de establecer un atributo no reconocido es un error fatal. (El error es atrapable, pero a&amp;uacute;n detiene la compilaci&amp;oacute;n dentro de esa &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n ). Establecer un atributo con un nombre que sea todo en min&amp;uacute;sculas que no sea un atributo incorporado (como &quot;foo&quot;) resultar&amp;aacute; en una advertencia con &lt;b&gt;-w&lt;/b&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings 'reserved'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a24018dbac9a81adda03170beee4acf228798de6" translate="yes" xml:space="preserve">
          <source>An attempt to set an unrecognized attribute is a fatal error. (The error is trappable, but it still stops the compilation within that &lt;code&gt;eval&lt;/code&gt;.) Setting an attribute with a name that's all lowercase letters that's not a built-in attribute (such as &quot;foo&quot;) will result in a warning with &lt;b&gt;-w&lt;/b&gt; or &lt;code&gt;use warnings 'reserved'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c1784b7ddee55af5b75a4bf233031106bc926c" translate="yes" xml:space="preserve">
          <source>An attribute handler was specified with an &lt;code&gt;:ATTR(&lt;i&gt;ref_type&lt;/i&gt;)&lt;/code&gt;, but the type of referent it was defined to handle wasn't one of the five permitted: &lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;ARRAY&lt;/code&gt; , &lt;code&gt;HASH&lt;/code&gt; , &lt;code&gt;CODE&lt;/code&gt; , or &lt;code&gt;ANY&lt;/code&gt; .</source>
          <target state="translated">Se especific&amp;oacute; un controlador de atributo con un &lt;code&gt;:ATTR(&lt;i&gt;ref_type&lt;/i&gt;)&lt;/code&gt; , pero el tipo de referente que se defini&amp;oacute; para manejar no era uno de los cinco permitidos: &lt;code&gt;SCALAR&lt;/code&gt; , &lt;code&gt;ARRAY&lt;/code&gt; , &lt;code&gt;HASH&lt;/code&gt; , &lt;code&gt;CODE&lt;/code&gt; o &lt;code&gt;ANY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be2ec17006c02c47726210c596c995f951690163" translate="yes" xml:space="preserve">
          <source>An attribute handler was specified with an &lt;code&gt;:ATTR(&lt;i&gt;ref_type&lt;/i&gt;)&lt;/code&gt;, but the type of referent it was defined to handle wasn't one of the five permitted: &lt;code&gt;SCALAR&lt;/code&gt;, &lt;code&gt;ARRAY&lt;/code&gt;, &lt;code&gt;HASH&lt;/code&gt;, &lt;code&gt;CODE&lt;/code&gt;, or &lt;code&gt;ANY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed24a1addfea7e1a18f9560990ecafe644b6003" translate="yes" xml:space="preserve">
          <source>An attribute is a piece of data belonging to a particular object. Unlike most object-oriented languages, Perl provides no special syntax or support for declaring and manipulating attributes.</source>
          <target state="translated">Un atributo es un dato que pertenece a un objeto particular.A diferencia de la mayoría de los lenguajes orientados a objetos,Perl no proporciona una sintaxis especial o soporte para declarar y manipular atributos.</target>
        </trans-unit>
        <trans-unit id="4774fb20b25b2c00d90761710a32f25902ad2435" translate="yes" xml:space="preserve">
          <source>An attribute list is a sequence of attribute specifications, separated by whitespace or a colon (with optional whitespace). Each attribute specification is a simple name, optionally followed by a parenthesised parameter list. If such a parameter list is present, it is scanned past as for the rules for the &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q()&lt;/a&gt;&lt;/code&gt; operator. (See &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators in perlop&lt;/a&gt;.) The parameter list is passed as it was found, however, and not as per &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Una lista de atributos es una secuencia de especificaciones de atributos, separadas por espacios en blanco o dos puntos (con espacios en blanco opcionales). Cada especificaci&amp;oacute;n de atributo es un nombre simple, seguido opcionalmente por una lista de par&amp;aacute;metros entre par&amp;eacute;ntesis. Si tal lista de par&amp;aacute;metros est&amp;aacute; presente, se escanea m&amp;aacute;s all&amp;aacute; de las reglas para el operador &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q()&lt;/a&gt;&lt;/code&gt; . (Consulte &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Operadores de cotizaciones y similares en perlop&lt;/a&gt; ). Sin embargo, la lista de par&amp;aacute;metros se pasa tal como se encontr&amp;oacute; y no seg&amp;uacute;n &lt;code&gt;&lt;a href=&quot;functions/q&quot;&gt;q()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc6c334100243f2c62d45354cd17461eb4374199" translate="yes" xml:space="preserve">
          <source>An attribute list is a sequence of attribute specifications, separated by whitespace or a colon (with optional whitespace). Each attribute specification is a simple name, optionally followed by a parenthesised parameter list. If such a parameter list is present, it is scanned past as for the rules for the &lt;code&gt;q()&lt;/code&gt; operator. (See &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;&quot;Quote and Quote-like Operators&quot; in perlop&lt;/a&gt;.) The parameter list is passed as it was found, however, and not as per &lt;code&gt;q()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a21fa1e7844543aacf6b214485b949a7b1705b" translate="yes" xml:space="preserve">
          <source>An early change, in fact the change that made Test2 an idea, was a change to the indentation of the subtest note. It was decided it would be more readable to outdent the subtest note instead of having it inline with the subtest:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6356b19b83a0de734fd036ef3412ad9e0499e73b" translate="yes" xml:space="preserve">
          <source>An effect similar to &lt;code&gt;(?&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt; may be achieved by writing &lt;code&gt;(?=(&lt;i&gt;pattern&lt;/i&gt;))\g{-1}&lt;/code&gt;. This matches the same substring as a standalone &lt;code&gt;a+&lt;/code&gt;, and the following &lt;code&gt;\g{-1}&lt;/code&gt; eats the matched string; it therefore makes a zero-length assertion into an analogue of &lt;code&gt;(?&amp;gt;...)&lt;/code&gt;. (The difference between these two constructs is that the second one uses a capturing group, thus shifting ordinals of backreferences in the rest of a regular expression.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ff4a009f82a7cfb00247fff66222df5571297d" translate="yes" xml:space="preserve">
          <source>An effect similar to &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; may be achieved by writing &lt;code&gt;(?=(pattern))\g{-1}&lt;/code&gt; . This matches the same substring as a standalone &lt;code&gt;a+&lt;/code&gt; , and the following &lt;code&gt;\g{-1}&lt;/code&gt; eats the matched string; it therefore makes a zero-length assertion into an analogue of &lt;code&gt;(?&amp;gt;...)&lt;/code&gt;. (The difference between these two constructs is that the second one uses a capturing group, thus shifting ordinals of backreferences in the rest of a regular expression.)</source>
          <target state="translated">Se puede lograr un efecto similar a &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; escribiendo &lt;code&gt;(?=(pattern))\g{-1}&lt;/code&gt; . Esto coincide con la misma subcadena que un &lt;code&gt;a+&lt;/code&gt; independiente , y el siguiente &lt;code&gt;\g{-1}&lt;/code&gt; come la cadena coincidente; por lo tanto, convierte una aserci&amp;oacute;n de longitud cero en un an&amp;aacute;logo de &lt;code&gt;(?&amp;gt;...)&lt;/code&gt; . (La diferencia entre estas dos construcciones es que la segunda usa un grupo de captura, cambiando as&amp;iacute; los ordinales de las referencias inversas en el resto de una expresi&amp;oacute;n regular).</target>
        </trans-unit>
        <trans-unit id="c5d792d65a737f380eae7ddca70051ed5bf418d1" translate="yes" xml:space="preserve">
          <source>An embedded perl needs to be started up while the global locale is in effect. See &lt;a href=&quot;perlembed#Using-embedded-Perl-with-POSIX-locales&quot;&gt;&quot;Using embedded Perl with POSIX locales&quot; in perlembed&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65503b1bc3cc6e29b56e0751024a1c32f6babaa5" translate="yes" xml:space="preserve">
          <source>An empty &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830fe5530bf8a388dd3b4e1cd4354d40bf489efb" translate="yes" xml:space="preserve">
          <source>An empty E&amp;lt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de720044af3435092cdfe83370a7cafc924ed83" translate="yes" xml:space="preserve">
          <source>An empty X&amp;lt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5eb41f6f24dfa906c0da1eda1f150cd75892a06" translate="yes" xml:space="preserve">
          <source>An empty leading field is produced when there is a positive-width match at the beginning of EXPR. For instance:</source>
          <target state="translated">Se produce un campo delantero vacío cuando hay una coincidencia de anchura positiva al principio de la EXPR.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7c1d0be8e8ca70fd2b14e62fb21989504ef1df2a" translate="yes" xml:space="preserve">
          <source>An empty list as soon as an explicit &lt;code&gt;break&lt;/code&gt; is encountered.</source>
          <target state="translated">Una lista vac&amp;iacute;a tan pronto como se encuentre una &lt;code&gt;break&lt;/code&gt; expl&amp;iacute;cita .</target>
        </trans-unit>
        <trans-unit id="39e866d4dec47e8ffded31535bf330825a29cb83" translate="yes" xml:space="preserve">
          <source>An empty list, in list context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbf0f80f22fc5d795da7f111754a1b9ed2a4fe4" translate="yes" xml:space="preserve">
          <source>An empty trailing field, on the other hand, is produced when there is a match at the end of EXPR, regardless of the length of the match (of course, unless a non-zero LIMIT is given explicitly, such fields are removed, as in the last example). Thus:</source>
          <target state="translated">En cambio,se produce un campo de arrastre vacío cuando hay una coincidencia al final de EXPR,independientemente de la duración de la coincidencia (por supuesto,a menos que se indique explícitamente un LÍMITE no nulo,tales campos se eliminan,como en el último ejemplo).Así pues:</target>
        </trans-unit>
        <trans-unit id="cd562f569c7a192c547c6c2160f193f3f97949c6" translate="yes" xml:space="preserve">
          <source>An enchantment, illusion, phantasm, or jugglery. Said when Perl&amp;rsquo;s magical &lt;b&gt;dwimmer&lt;/b&gt; effects don&amp;rsquo;t do what you expect, but rather seem to be the product of arcane</source>
          <target state="translated">Un encantamiento, una ilusi&amp;oacute;n, un fantasma o un malabarismo. Dicho cuando los efectos de &lt;b&gt;atenuaci&amp;oacute;n&lt;/b&gt; m&amp;aacute;gica de Perl no hacen lo que esperabas, sino que parecen ser el producto de arcanos</target>
        </trans-unit>
        <trans-unit id="5a1e64f9893fb69df07a9e0956194fcfd71ca286" translate="yes" xml:space="preserve">
          <source>An endpoint for network communication among multiple &lt;b&gt;processes&lt;/b&gt; that works much like a telephone or a post office box. The most important thing about a socket is its &lt;b&gt;network address&lt;/b&gt; (like a phone number). Different kinds of sockets have different kinds of addresses&amp;mdash;some look like filenames, and some don&amp;rsquo;t.</source>
          <target state="translated">Un punto final para la comunicaci&amp;oacute;n en red entre m&amp;uacute;ltiples &lt;b&gt;procesos&lt;/b&gt; que funciona de manera muy similar a un tel&amp;eacute;fono o un apartado postal. Lo m&amp;aacute;s importante de un enchufe es su &lt;b&gt;direcci&amp;oacute;n de red&lt;/b&gt; (como un n&amp;uacute;mero de tel&amp;eacute;fono). Los diferentes tipos de sockets tienen diferentes tipos de direcciones; algunos se parecen a nombres de archivo y otros no.</target>
        </trans-unit>
        <trans-unit id="84340afb233fc1ed2c36b5178d0bb87bc821d3fd" translate="yes" xml:space="preserve">
          <source>An entire computer program crammed into one line of text.</source>
          <target state="translated">Un programa de ordenador entero atiborrado de una línea de texto.</target>
        </trans-unit>
        <trans-unit id="0b89a9a0affedc51570a8afe57fcceb747dbf5fe" translate="yes" xml:space="preserve">
          <source>An entity specified by number (dec, hex, oct) is out of range (1-255).</source>
          <target state="translated">Una entidad especificada por número (dec,hex,oct)está fuera de rango (1-255).</target>
        </trans-unit>
        <trans-unit id="e4a99f74cee987dba72920fbff7e10dc623de69d" translate="yes" xml:space="preserve">
          <source>An entry of the form &lt;code&gt;-La:\foo&lt;/code&gt; specifies the &lt;code&gt;a:\foo&lt;/code&gt; directory to look for the libraries that follow.</source>
          <target state="translated">Una entrada de la forma &lt;code&gt;-La:\foo&lt;/code&gt; especifica el directorio a &lt;code&gt;a:\foo&lt;/code&gt; para buscar las bibliotecas que siguen.</target>
        </trans-unit>
        <trans-unit id="e872c91a08d6535bc529f64f8ec25e1266b0facd" translate="yes" xml:space="preserve">
          <source>An entry of the form &lt;code&gt;-lfoo&lt;/code&gt; specifies the library &lt;code&gt;foo&lt;/code&gt; , which may be spelled differently depending on what kind of compiler you are using. If you are using GCC, it gets translated to &lt;code&gt;libfoo.a&lt;/code&gt; , but for other win32 compilers, it becomes &lt;code&gt;foo.lib&lt;/code&gt; . If no files are found by those translated names, one more attempt is made to find them using either &lt;code&gt;foo.a&lt;/code&gt; or &lt;code&gt;libfoo.lib&lt;/code&gt; , depending on whether GCC or some other win32 compiler is being used, respectively.</source>
          <target state="translated">Una entrada de la forma &lt;code&gt;-lfoo&lt;/code&gt; especifica la biblioteca &lt;code&gt;foo&lt;/code&gt; , que puede escribirse de manera diferente dependiendo del tipo de compilador que est&amp;eacute; utilizando. Si est&amp;aacute; utilizando GCC, se traduce a &lt;code&gt;libfoo.a&lt;/code&gt; , pero para otros compiladores de win32, se convierte en &lt;code&gt;foo.lib&lt;/code&gt; . Si no se encuentran archivos con esos nombres traducidos, se hace un intento m&amp;aacute;s para encontrarlos usando &lt;code&gt;foo.a&lt;/code&gt; o &lt;code&gt;libfoo.lib&lt;/code&gt; , dependiendo de si se est&amp;aacute; usando GCC o alg&amp;uacute;n otro compilador win32, respectivamente.</target>
        </trans-unit>
        <trans-unit id="b955ec169e3cf404a025241c85cc35d91ed6e518" translate="yes" xml:space="preserve">
          <source>An entry of the form &lt;code&gt;-lfoo&lt;/code&gt; specifies the library &lt;code&gt;foo&lt;/code&gt;, which may be spelled differently depending on what kind of compiler you are using. If you are using GCC, it gets translated to &lt;code&gt;libfoo.a&lt;/code&gt;, but for other win32 compilers, it becomes &lt;code&gt;foo.lib&lt;/code&gt;. If no files are found by those translated names, one more attempt is made to find them using either &lt;code&gt;foo.a&lt;/code&gt; or &lt;code&gt;libfoo.lib&lt;/code&gt;, depending on whether GCC or some other win32 compiler is being used, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542b3550714b3908eea8d8c13ea7256018c9e930" translate="yes" xml:space="preserve">
          <source>An entry that matches &lt;code&gt;/:nodefault/i&lt;/code&gt; disables the appending of default libraries found in &lt;code&gt;$Config{perllibs}&lt;/code&gt; (this should be only needed very rarely).</source>
          <target state="translated">Una entrada que coincide con &lt;code&gt;/:nodefault/i&lt;/code&gt; deshabilita la adici&amp;oacute;n de bibliotecas predeterminadas que se encuentran en &lt;code&gt;$Config{perllibs}&lt;/code&gt; (esto solo deber&amp;iacute;a ser necesario muy raramente).</target>
        </trans-unit>
        <trans-unit id="54596c2d41917bea50cab186303f4d27d58e3783" translate="yes" xml:space="preserve">
          <source>An entry that matches &lt;code&gt;/:nosearch/i&lt;/code&gt; disables all searching for the libraries specified after it. Translation of &lt;code&gt;-Lfoo&lt;/code&gt; and &lt;code&gt;-lfoo&lt;/code&gt; still happens as appropriate (depending on compiler being used, as reflected by &lt;code&gt;$Config{cc}&lt;/code&gt; ), but the entries are not verified to be valid files or directories.</source>
          <target state="translated">Una entrada que coincide con &lt;code&gt;/:nosearch/i&lt;/code&gt; deshabilita todas las b&amp;uacute;squedas de las bibliotecas especificadas a continuaci&amp;oacute;n. La traducci&amp;oacute;n de &lt;code&gt;-Lfoo&lt;/code&gt; y &lt;code&gt;-lfoo&lt;/code&gt; todav&amp;iacute;a ocurre seg&amp;uacute;n sea apropiado (dependiendo del compilador que se est&amp;eacute; usando, como lo refleja &lt;code&gt;$Config{cc}&lt;/code&gt; ), pero no se verifica que las entradas sean archivos o directorios v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="0f36c83e40eae68ee067d041dd5eaac816d400ba" translate="yes" xml:space="preserve">
          <source>An entry that matches &lt;code&gt;/:nosearch/i&lt;/code&gt; disables all searching for the libraries specified after it. Translation of &lt;code&gt;-Lfoo&lt;/code&gt; and &lt;code&gt;-lfoo&lt;/code&gt; still happens as appropriate (depending on compiler being used, as reflected by &lt;code&gt;$Config{cc}&lt;/code&gt;), but the entries are not verified to be valid files or directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341641ec8dfdfc884739074e9d2b0f226cf6a1e7" translate="yes" xml:space="preserve">
          <source>An entry that matches &lt;code&gt;/:search/i&lt;/code&gt; reenables searching for the libraries specified after it. You can put it at the end to enable searching for default libraries specified by &lt;code&gt;$Config{perllibs}&lt;/code&gt; .</source>
          <target state="translated">Una entrada que coincide con &lt;code&gt;/:search/i&lt;/code&gt; vuelve a habilitar la b&amp;uacute;squeda de las bibliotecas especificadas despu&amp;eacute;s. Puede ponerlo al final para habilitar la b&amp;uacute;squeda de bibliotecas predeterminadas especificadas por &lt;code&gt;$Config{perllibs}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58b3df12b9c4c1391c5d6a764ee07751d9f03ea6" translate="yes" xml:space="preserve">
          <source>An entry that matches &lt;code&gt;/:search/i&lt;/code&gt; reenables searching for the libraries specified after it. You can put it at the end to enable searching for default libraries specified by &lt;code&gt;$Config{perllibs}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764e7bd0665e9fa3ca103f1f3c69a2b0a336ccc2" translate="yes" xml:space="preserve">
          <source>An enum of flags for Perl types. These are found in the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac77ebce5cb434a4347aeb52157baf13e86e68f" translate="yes" xml:space="preserve">
          <source>An enum of flags for Perl types. These are found in the file &lt;b&gt;sv.h&lt;/b&gt; in the &lt;code&gt;svtype&lt;/code&gt; enum. Test these flags with the &lt;code&gt;SvTYPE&lt;/code&gt; macro.</source>
          <target state="translated">Una enumeraci&amp;oacute;n de banderas para tipos de Perl. Estos se encuentran en el archivo &lt;b&gt;sv.h&lt;/b&gt; en la enumeraci&amp;oacute;n &lt;code&gt;svtype&lt;/code&gt; . Pruebe estos indicadores con la macro &lt;code&gt;SvTYPE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a352e1f402bd0b0688137a6b2ecc0dfb6c13f18b" translate="yes" xml:space="preserve">
          <source>An enum value. Used to transfer an enum component from C. There is no reason to pass an enum value to C since it is stored as an IV inside perl.</source>
          <target state="translated">Un valor numérico.Se utiliza para transferir un componente enum de C.No hay razón para pasar un valor enum a C ya que se almacena como una IV dentro de perl.</target>
        </trans-unit>
        <trans-unit id="22fd110d7c238cdd41592c0a602172ada41cc36a" translate="yes" xml:space="preserve">
          <source>An environment variable is used, rather than parallel make itself, because &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; needs to be able to schedule individual non-conflicting test scripts itself, and there is no standard interface to &lt;code&gt;make&lt;/code&gt; utilities to interact with their job schedulers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b348ed9fe24e3e5ab044fd0ea208d3866c0f50" translate="yes" xml:space="preserve">
          <source>An environment variable is used, rather than parallel make itself, because &lt;a href=&quot;tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; needs to be able to schedule individual non-conflicting test scripts itself, and there is no standard interface to &lt;code&gt;make&lt;/code&gt; utilities to interact with their job schedulers.</source>
          <target state="translated">Se usa una variable de entorno, en lugar de hacer en paralelo, porque &lt;a href=&quot;tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt; necesita poder programar scripts de prueba individuales no conflictivos por s&amp;iacute; mismo, y no hay una interfaz est&amp;aacute;ndar para &lt;code&gt;make&lt;/code&gt; utilidades interact&amp;uacute;en con sus programadores de trabajos.</target>
        </trans-unit>
        <trans-unit id="066862fe86f40b5704d122b8bfa39f1462669702" translate="yes" xml:space="preserve">
          <source>An error has occurred (for &lt;code&gt;PerlIO_error()&lt;/code&gt; ).</source>
          <target state="translated">Ha ocurrido un error (para &lt;code&gt;PerlIO_error()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d508ac8c71c775f43142d23e442e2000fbf79e9" translate="yes" xml:space="preserve">
          <source>An error has occurred (for &lt;code&gt;PerlIO_error()&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf25473c20a4c33f096f0b4023a99e2a049e0b27" translate="yes" xml:space="preserve">
          <source>An essential part of any good development process is appropriate error handling with appropriately informative messages, however there exists a school of thought which suggests that log files should be</source>
          <target state="translated">Una parte esencial de cualquier buen proceso de desarrollo es el manejo adecuado de los errores con mensajes informativos apropiados,sin embargo existe una escuela de pensamiento que sugiere que los archivos de registro deben ser</target>
        </trans-unit>
        <trans-unit id="66bdaa16d0763f3a76de0b4a13d35f1b3d80f29a" translate="yes" xml:space="preserve">
          <source>An even stranger template code is &lt;code&gt;%&lt;/code&gt; &amp;lt;</source>
          <target state="translated">Un c&amp;oacute;digo de plantilla a&amp;uacute;n m&amp;aacute;s extra&amp;ntilde;o es &lt;code&gt;%&lt;/code&gt; &amp;lt;</target>
        </trans-unit>
        <trans-unit id="c948915c37e1832c4cdb4ea5562b06199c7d0645" translate="yes" xml:space="preserve">
          <source>An even stranger template code is &lt;code&gt;%&lt;/code&gt;&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5463243357a8ee13bfd32810dc057038bf9e07" translate="yes" xml:space="preserve">
          <source>An event that causes a &lt;b&gt;handler&lt;/b&gt; to be run.</source>
          <target state="translated">Un evento que hace que se ejecute un &lt;b&gt;controlador&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="aa855332f899b198338c3e15641312b3dfa643e8" translate="yes" xml:space="preserve">
          <source>An example conversion function for a typemapped struct &lt;code&gt;foo_t *&lt;/code&gt; might be:</source>
          <target state="translated">Un ejemplo de funci&amp;oacute;n de conversi&amp;oacute;n para una estructura de tipo &lt;code&gt;foo_t *&lt;/code&gt; podr&amp;iacute;a ser:</target>
        </trans-unit>
        <trans-unit id="ec7aaa34ffb73c97f6ed68693695810184b33f37" translate="yes" xml:space="preserve">
          <source>An example disabling Nagle's algorithm on a socket:</source>
          <target state="translated">Un ejemplo de desactivación del algoritmo de Nagle en un enchufe:</target>
        </trans-unit>
        <trans-unit id="370a61094a87b707b90886b80eccf424717c5430" translate="yes" xml:space="preserve">
          <source>An example for Russian and some languages using the Cyrillic script:</source>
          <target state="translated">Un ejemplo para el ruso y algunos idiomas que usan la escritura cirílica:</target>
        </trans-unit>
        <trans-unit id="62a8d925afd0ed802ddeaf7e7056d235e6263d4e" translate="yes" xml:space="preserve">
          <source>An example may make this clearer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562686eabf6589e6760dcb870fbc2918a4b18229" translate="yes" xml:space="preserve">
          <source>An example of all of the phases Perl code can see:</source>
          <target state="translated">Un ejemplo de todas las fases que el código Perl puede ver:</target>
        </trans-unit>
        <trans-unit id="b3f8fac7e809f312cdc7e6d944996bb2ded1f5bf" translate="yes" xml:space="preserve">
          <source>An example of how this is used is the &lt;a href=&quot;Test2::Formatter::TAP&quot;&gt;Test2::Formatter::TAP&lt;/a&gt; formatter. For unbuffered subtests the events are rendered as they are generated. At the end of the subtest, the final subtest event is rendered, but the &lt;code&gt;subevents&lt;/code&gt; attribute is ignored. For buffered subtests the opposite occurs, the events are NOT rendered as they are generated, instead the &lt;code&gt;subevents&lt;/code&gt; attribute is used to render them all at once. This is useful when running subtests tests in parallel, since without it the output from subtests would be interleaved together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5242beac10407637f4a4b464517825d71718f4a4" translate="yes" xml:space="preserve">
          <source>An example of how this might be used is as follows:</source>
          <target state="translated">Un ejemplo de cómo podría utilizarse es el siguiente:</target>
        </trans-unit>
        <trans-unit id="5a34b3fb3e9dbd7f514687e325a9fcbdaa8609fe" translate="yes" xml:space="preserve">
          <source>An example of this is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af46ea4947cfe8e14d48ae32223fb001ec7bc498" translate="yes" xml:space="preserve">
          <source>An example of using Name property wildcards is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9dc32ca31441503bc05feea6fc9cf1b0dfb98e" translate="yes" xml:space="preserve">
          <source>An example output might be:</source>
          <target state="translated">Un ejemplo de salida podría ser:</target>
        </trans-unit>
        <trans-unit id="d132f664732cae183fc32adf49e25fe3aca9db69" translate="yes" xml:space="preserve">
          <source>An example taken from an article posted to comp.lang.perl.misc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516a8fafa09adceb915093c484c5d89d031db306" translate="yes" xml:space="preserve">
          <source>An example usage looks like:</source>
          <target state="translated">Un ejemplo de uso parece:</target>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="translated">Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="b3e01d95d4f7169aa36a737a1211243d324cf5ef" translate="yes" xml:space="preserve">
          <source>An exception</source>
          <target state="translated">Una excepción</target>
        </trans-unit>
        <trans-unit id="af317c13cfaee4d2548fba4cee59592a6612afcd" translate="yes" xml:space="preserve">
          <source>An exception event will display to STDERR, and will prevent the overall test file from passing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ab19b971476be687f1585d2d4d367fb367ec27" translate="yes" xml:space="preserve">
          <source>An exception is considered to match a string if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441facb85290f4d6c3e35bab01158ccc81039064" translate="yes" xml:space="preserve">
          <source>An exception to the above rule is that &lt;code&gt;\N{U+&lt;i&gt;hex number&lt;/i&gt;}&lt;/code&gt; is always interpreted as a Unicode code point, so that &lt;code&gt;\N{U+0050}&lt;/code&gt; is &lt;code&gt;&quot;P&quot;&lt;/code&gt; even on EBCDIC platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb08b0a2e1d46bb5d472e490ea7b28d5dd9e956d" translate="yes" xml:space="preserve">
          <source>An exception to this is that you may assign to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in a list. This is useful for throwing away some of the return values of a function:</source>
          <target state="translated">Una excepci&amp;oacute;n a esto es que puede asignar &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en una lista. Esto es &amp;uacute;til para descartar algunos de los valores de retorno de una funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b907b876869fb91f8d35b06170f79ee9f948ffa2" translate="yes" xml:space="preserve">
          <source>An exception to this is that you may assign to &lt;code&gt;undef&lt;/code&gt; in a list. This is useful for throwing away some of the return values of a function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1bf7c1ca3df304818b1a482b2ae19817ae3aee" translate="yes" xml:space="preserve">
          <source>An exception will be raised if &lt;code&gt;verify_SSL&lt;/code&gt; is true and no CA certificate file is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc1d98cce4c241de46d33d676c33734f841fc89" translate="yes" xml:space="preserve">
          <source>An executable compiled on a PA-RISC 2.0 platform will not execute on a PA-RISC 1.1 platform, even if they are running the same version of HP-UX. If you are building Perl on a PA-RISC 2.0 platform and want that Perl to also run on a PA-RISC 1.1, the compiler flags +DAportable and +DS32 should be used.</source>
          <target state="translated">Un ejecutable compilado en una plataforma PA-RISC 2.0 no se ejecutará en una plataforma PA-RISC 1.1,aunque estén ejecutando la misma versión de HP-UX.Si está construyendo Perl en una plataforma PA-RISC 2.0 y quiere que ese Perl también se ejecute en una PA-RISC 1.1,deben usarse las banderas del compilador +DAportable y +DS32.</target>
        </trans-unit>
        <trans-unit id="089b36ce65cddba1918a51ae6a46d8831ee39956" translate="yes" xml:space="preserve">
          <source>An exit status of 0 implies &quot;success&quot;. For example, &lt;b&gt;diff(1)&lt;/b&gt; exits with a status of 0 if the two files have the same contents.</source>
          <target state="translated">Un estado de salida de 0 implica &quot;&amp;eacute;xito&quot;. Por ejemplo, &lt;b&gt;diff (1)&lt;/b&gt; sale con un estado de 0 si los dos archivos tienen el mismo contenido.</target>
        </trans-unit>
        <trans-unit id="bbd4429d08a5ebe605cc6bfbbfa2eaacec53a0f9" translate="yes" xml:space="preserve">
          <source>An exit status of 1 implies possibly abnormal, but non-defective, program termination. For example, &lt;b&gt;grep(1)&lt;/b&gt; exits with a status of 1 if it did</source>
          <target state="translated">Un estado de salida de 1 implica una terminaci&amp;oacute;n del programa posiblemente anormal, pero no defectuosa. Por ejemplo, &lt;b&gt;grep (1)&lt;/b&gt; sale con un estado de 1 si lo hizo</target>
        </trans-unit>
        <trans-unit id="e246081e6327d64a230056100ee6a6d47e29ef00" translate="yes" xml:space="preserve">
          <source>An exit status of 2 or more implies a fatal error. For example, &lt;b&gt;ls(1)&lt;/b&gt; exits with a status of 2 if you specify an illegal (unknown) option on the command line.</source>
          <target state="translated">Un estado de salida de 2 o m&amp;aacute;s implica un error fatal. Por ejemplo, &lt;b&gt;ls (1)&lt;/b&gt; sale con un estado de 2 si especifica una opci&amp;oacute;n ilegal (desconocida) en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="1ff1cef51589fc8dbb6faba666f12b831fe6b899" translate="yes" xml:space="preserve">
          <source>An experimental pseudolayer that removes the topmost layer. Use with the same care as is reserved for nitroglycerine.</source>
          <target state="translated">Una pseudocapa experimental que elimina la capa superior.Se usa con el mismo cuidado que se reserva para la nitroglicerina.</target>
        </trans-unit>
        <trans-unit id="846db25d0ecc19ed2c5fd44070c00f6f8a9c0772" translate="yes" xml:space="preserve">
          <source>An explanation of VMS file specs can be found at &lt;a href=&quot;http://h71000.www7.hp.com/doc/731FINAL/4506/4506pro_014.html#apps_locating_naming_files&quot;&gt;http://h71000.www7.hp.com/doc/731FINAL/4506/4506pro_014.html#apps_locating_naming_files&lt;/a&gt;.</source>
          <target state="translated">Puede encontrar una explicaci&amp;oacute;n de las especificaciones del archivo VMS en &lt;a href=&quot;http://h71000.www7.hp.com/doc/731FINAL/4506/4506pro_014.html#apps_locating_naming_files&quot;&gt;http://h71000.www7.hp.com/doc/731FINAL/4506/4506pro_014.html#apps_locating_naming_files&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b85172cf7a158b615a4c1e4c610cfa79b7fa2c51" translate="yes" xml:space="preserve">
          <source>An explicit format parameter index, such as &lt;code&gt;2$&lt;/code&gt;. By default sprintf will format the next unused argument in the list, but this allows you to take the arguments out of order:</source>
          <target state="translated">Un &amp;iacute;ndice de par&amp;aacute;metro de formato expl&amp;iacute;cito, como &lt;code&gt;2$&lt;/code&gt; . Por defecto, sprintf formatear&amp;aacute; el siguiente argumento no utilizado en la lista, pero esto le permite desordenar los argumentos:</target>
        </trans-unit>
        <trans-unit id="52691b6df07cdbefee8cb7a498d3dc93b2c8dd90" translate="yes" xml:space="preserve">
          <source>An exploration of some of the issues facing Perl programmers on EBCDIC based computers.</source>
          <target state="translated">Una exploración de algunos de los problemas a los que se enfrentan los programadores de Perl en las computadoras basadas en EBCDIC.</target>
        </trans-unit>
        <trans-unit id="372a1e4ea54335151ba75e3cd2ea53899b760f24" translate="yes" xml:space="preserve">
          <source>An expression which, when its value changes, causes a breakpoint in the Perl debugger.</source>
          <target state="translated">Una expresión que,al cambiar su valor,provoca un punto de ruptura en el depurador de Perl.</target>
        </trans-unit>
        <trans-unit id="d16dfa398c1840b695b36040deeba3088ca6a02a" translate="yes" xml:space="preserve">
          <source>An extension is a way of calling compiled C code from Perl. Reading &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; is a good place to learn more about extensions.</source>
          <target state="translated">Una extensi&amp;oacute;n es una forma de llamar a c&amp;oacute;digo C compilado desde Perl. Leer &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; es un buen lugar para aprender m&amp;aacute;s sobre las extensiones.</target>
        </trans-unit>
        <trans-unit id="9164cae08d37bdf18edf58e540f0e6c559fb27cc" translate="yes" xml:space="preserve">
          <source>An extension that is built with the above steps is ready to use on systems supporting dynamic loading. On systems that do not support dynamic loading, any newly created extension has to be linked together with the available resources. MakeMaker supports the linking process by creating appropriate targets in the Makefile whenever an extension is built. You can invoke the corresponding section of the makefile with</source>
          <target state="translated">Una extensión que se construye con los pasos anteriores está lista para ser usada en sistemas que soporten la carga dinámica.En los sistemas que no soportan la carga dinámica,cualquier extensión recién creada tiene que ser enlazada junto con los recursos disponibles.MakeMaker apoya el proceso de vinculación mediante la creación de objetivos adecuados en el Makefile siempre que se construye una extensión.Puedes invocar la sección correspondiente del Makefile con</target>
        </trans-unit>
        <trans-unit id="62fe96c831d4e5434f2a2484c5da0d22ce2c69d7" translate="yes" xml:space="preserve">
          <source>An external &lt;b&gt;subroutine&lt;/b&gt; defined in &lt;b&gt;XS&lt;/b&gt;.</source>
          <target state="translated">Una &lt;b&gt;subrutina&lt;/b&gt; externa definida en &lt;b&gt;XS&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="7422ed8b7617c92670f322946ad1f9ad0f35ee57" translate="yes" xml:space="preserve">
          <source>An extra field consists of zero or more subfields. Each subfield consists of a two byte header followed by the subfield data.</source>
          <target state="translated">Un campo extra consiste en cero o más subcampos.Cada subcampo consiste en un encabezado de dos bytes seguido de los datos del subcampo.</target>
        </trans-unit>
        <trans-unit id="18c0e84026650565acf5b36d62e6093af36330f9" translate="yes" xml:space="preserve">
          <source>An extraordinarily exported, expeditiously excellent, expressly eXternal Subroutine, executed in existing C or C++ or in an exciting extension language called (exasperatingly) XS.</source>
          <target state="translated">Una subrutina extraordinariamente exportada,expeditivamente excelente,expresamente eXterna,ejecutada en C o C++existente o en un excitante lenguaje de extensión llamado (exasperantemente)XS.</target>
        </trans-unit>
        <trans-unit id="5ae0ec1c420230a4b9a6f6f5a35cd2c66a33eeb2" translate="yes" xml:space="preserve">
          <source>An extremely lightweight &lt;b&gt;DB_File&lt;/b&gt; wrapper that simply flocks a lockfile before tie-ing the database and drops the lock after the untie. Allows one to use the same lockfile for multiple databases to avoid deadlock problems, if desired. Use for databases where updates are reads are quick and simple flock locking semantics are enough.</source>
          <target state="translated">Un contenedor &lt;b&gt;DB_File&lt;/b&gt; extremadamente liviano que simplemente &lt;b&gt;agrupa un archivo de&lt;/b&gt; bloqueo antes de vincular la base de datos y suelta el bloqueo despu&amp;eacute;s de la desvinculaci&amp;oacute;n. Permite usar el mismo archivo de bloqueo para m&amp;uacute;ltiples bases de datos para evitar problemas de interbloqueo, si se desea. &amp;Uacute;selo para bases de datos donde las actualizaciones se leen son r&amp;aacute;pidas y la sem&amp;aacute;ntica de bloqueo de bandadas simple es suficiente.</target>
        </trans-unit>
        <trans-unit id="6c7aaf1b9af23250eb8ede6f4c91ca5fbe3ad083" translate="yes" xml:space="preserve">
          <source>An identifier (not necessarily related to the real name of a file) that represents a particular instance of opening a file, until you close it. If you&amp;rsquo;re going to open and close several different files in succession, it&amp;rsquo;s fine to open each of them with the same filehandle, so you don&amp;rsquo;t have to write out separate code to process each file.</source>
          <target state="translated">Un identificador (no necesariamente relacionado con el nombre real de un archivo) que representa una instancia particular de abrir un archivo, hasta que lo cierra. Si va a abrir y cerrar varios archivos diferentes en sucesi&amp;oacute;n, est&amp;aacute; bien abrir cada uno de ellos con el mismo identificador de archivo, por lo que no tiene que escribir un c&amp;oacute;digo separado para procesar cada archivo.</target>
        </trans-unit>
        <trans-unit id="2ca4f6f5a018c6a780d2f920105ee21e87c135e6" translate="yes" xml:space="preserve">
          <source>An immediate filter allows you to specify the filter code to be used at the point where the filter is applied to a dbm. In this mode the Filter_*_Push methods expects to receive exactly two parameters.</source>
          <target state="translated">Un filtro inmediato permite especificar el código de filtro que se utilizará en el punto en que el filtro se aplica a un dbm.En este modo,los métodos Filter_*_Push esperan recibir exactamente dos parámetros.</target>
        </trans-unit>
        <trans-unit id="854d43de9440512807e67ff18407c545a932b325" translate="yes" xml:space="preserve">
          <source>An imperfect standard</source>
          <target state="translated">Un estándar imperfecto</target>
        </trans-unit>
        <trans-unit id="20af74febdbf871248a6b2f4c417ca9aaffe6f3f" translate="yes" xml:space="preserve">
          <source>An important property of the digest algorithms is that the digest is</source>
          <target state="translated">Una propiedad importante de los algoritmos de digestión es que la digestión es</target>
        </trans-unit>
        <trans-unit id="5358f4c4e85e881620623ef0fa458c651c57bf92" translate="yes" xml:space="preserve">
          <source>An incremental option is specified with a plus &lt;code&gt;+&lt;/code&gt; after the option name:</source>
          <target state="translated">Una opci&amp;oacute;n incremental se especifica con un signo m&amp;aacute;s &lt;code&gt;+&lt;/code&gt; despu&amp;eacute;s del nombre de la opci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="eff14445a69700081714d1ed9ff369fb4f2bc735" translate="yes" xml:space="preserve">
          <source>An index of character names is available on-line from the Unicode Consortium, &lt;a href=&quot;http://www.unicode.org/charts/charindex.html&quot;&gt;http://www.unicode.org/charts/charindex.html&lt;/a&gt;; explanatory material with links to other resources at &lt;a href=&quot;http://www.unicode.org/standard/where&quot;&gt;http://www.unicode.org/standard/where&lt;/a&gt;.</source>
          <target state="translated">Un &amp;iacute;ndice de nombres de personajes est&amp;aacute; disponible en l&amp;iacute;nea en Unicode Consortium, &lt;a href=&quot;http://www.unicode.org/charts/charindex.html&quot;&gt;http://www.unicode.org/charts/charindex.html&lt;/a&gt; ; material explicativo con enlaces a otros recursos en &lt;a href=&quot;http://www.unicode.org/standard/where&quot;&gt;http://www.unicode.org/standard/where&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00b6943f411e2de4ec124878b41ea6334f76e3b4" translate="yes" xml:space="preserve">
          <source>An index of character names is available on-line from the Unicode Consortium, &lt;a href=&quot;https://www.unicode.org/charts/charindex.html&quot;&gt;https://www.unicode.org/charts/charindex.html&lt;/a&gt;; explanatory material with links to other resources at &lt;a href=&quot;https://www.unicode.org/standard/where&quot;&gt;https://www.unicode.org/standard/where&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef770a25a15f3c0ce63ccdcd24649733fd026bd0" translate="yes" xml:space="preserve">
          <source>An indirect filehandle is the use of something other than a symbol in a place that a filehandle is expected. Here are ways to get indirect filehandles:</source>
          <target state="translated">Un filehandle indirecto es el uso de algo que no sea un símbolo en un lugar donde se espera un filehandle.Aquí hay formas de conseguir mangos de archivo indirectos:</target>
        </trans-unit>
        <trans-unit id="858451a2efc846133fcc1f6e934e6a48b50f2e8c" translate="yes" xml:space="preserve">
          <source>An informative hash, accessible via &lt;code&gt;details()&lt;/code&gt; , is stored for each test you perform. So memory usage will scale linearly with each test run. Although this is not a problem for most test suites, it can become an issue if you do large (hundred thousands to million) combinatorics tests in the same run.</source>
          <target state="translated">Se almacena un hash informativo, accesible a trav&amp;eacute;s de &lt;code&gt;details()&lt;/code&gt; , para cada prueba que realiza. Por tanto, el uso de la memoria se escalar&amp;aacute; linealmente con cada ejecuci&amp;oacute;n de prueba. Aunque esto no es un problema para la mayor&amp;iacute;a de los conjuntos de pruebas, puede convertirse en un problema si realiza pruebas combinatorias grandes (cientos de miles a millones) en la misma ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="701384a60361f136947eccd77eb6f91598d0f6e9" translate="yes" xml:space="preserve">
          <source>An informative hash, accessible via &lt;code&gt;details()&lt;/code&gt;, is stored for each test you perform. So memory usage will scale linearly with each test run. Although this is not a problem for most test suites, it can become an issue if you do large (hundred thousands to million) combinatorics tests in the same run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e6a3af85651e42bfa391fe495fc3734c02ae8b" translate="yes" xml:space="preserve">
          <source>An input file that uses source filtering probably won't be deparsed into runnable code, because it will still include the &lt;b&gt;use&lt;/b&gt; declaration for the source filtering module, even though the code that is produced is already ordinary Perl which shouldn't be filtered again.</source>
          <target state="translated">Un archivo de entrada que usa filtrado de fuente probablemente no se descompondr&amp;aacute; en c&amp;oacute;digo ejecutable, porque a&amp;uacute;n incluir&amp;aacute; la declaraci&amp;oacute;n de &lt;b&gt;uso&lt;/b&gt; para el m&amp;oacute;dulo de filtrado de fuente, aunque el c&amp;oacute;digo que se produce ya es Perl ordinario que no deber&amp;iacute;a filtrarse nuevamente.</target>
        </trans-unit>
        <trans-unit id="aa16b38820f7deb5595d1bc31e5c4264a804f15b" translate="yes" xml:space="preserve">
          <source>An installation can choose to allow any of these to be matched by downloading the Unicode database from &lt;a href=&quot;http://www.unicode.org/Public/&quot;&gt;http://www.unicode.org/Public/&lt;/a&gt; to &lt;code&gt;$Config{privlib}&lt;/code&gt; /</source>
          <target state="translated">Una instalaci&amp;oacute;n puede optar por permitir que cualquiera de estos &lt;code&gt;$Config{privlib}&lt;/code&gt; descargando la base de datos Unicode de &lt;a href=&quot;http://www.unicode.org/Public/&quot;&gt;http://www.unicode.org/Public/&lt;/a&gt; a $ Config {privlib} /</target>
        </trans-unit>
        <trans-unit id="41c8e8c55ba26c070500d10138a4327fcb1ea456" translate="yes" xml:space="preserve">
          <source>An installation can choose to allow any of these to be matched by downloading the Unicode database from &lt;a href=&quot;http://www.unicode.org/Public/&quot;&gt;http://www.unicode.org/Public/&lt;/a&gt; to &lt;code&gt;$Config{privlib}&lt;/code&gt;/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a014f84e1453ef226d46effcd0a9cbfe569a9f81" translate="yes" xml:space="preserve">
          <source>An instance of a running program. Under multitasking systems like Unix, two or more separate processes could be running the same program independently at the same time&amp;mdash;in fact, the &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; function is designed to bring about this happy state of affairs. Under other operating systems, processes are sometimes called &amp;ldquo;threads&amp;rdquo;, &amp;ldquo;tasks&amp;rdquo;, or &amp;ldquo;jobs&amp;rdquo;, often with slight nuances in meaning.</source>
          <target state="translated">Una instancia de un programa en ejecuci&amp;oacute;n. En sistemas multitarea como Unix, dos o m&amp;aacute;s procesos separados podr&amp;iacute;an ejecutar el mismo programa de forma independiente al mismo tiempo; de hecho, la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; est&amp;aacute; dise&amp;ntilde;ada para lograr este feliz estado de cosas. En otros sistemas operativos, los procesos a veces se denominan &quot;subprocesos&quot;, &quot;tareas&quot; o &quot;trabajos&quot;, a menudo con ligeros matices en el significado.</target>
        </trans-unit>
        <trans-unit id="d7bfae97a3fa7902fae2c04baaa1f1c2a7428aa8" translate="yes" xml:space="preserve">
          <source>An instance of a running program. Under multitasking systems like Unix, two or more separate processes could be running the same program independently at the same time&amp;mdash;in fact, the &lt;code&gt;fork&lt;/code&gt; function is designed to bring about this happy state of affairs. Under other operating systems, processes are sometimes called &amp;ldquo;threads&amp;rdquo;, &amp;ldquo;tasks&amp;rdquo;, or &amp;ldquo;jobs&amp;rdquo;, often with slight nuances in meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0214de560f2556559c172656f6d4683531a40229" translate="yes" xml:space="preserve">
          <source>An integer divisor when you&amp;rsquo;re interested in the remainder instead of the quotient.</source>
          <target state="translated">Un divisor entero cuando est&amp;aacute; interesado en el resto en lugar del cociente.</target>
        </trans-unit>
        <trans-unit id="ef97a772df2ab33140914238f0dfa09aa1f2481c" translate="yes" xml:space="preserve">
          <source>An integer in the range from 0 to 1, inclusive. The smallest possible unit of information storage. An eighth of a &lt;b&gt;byte&lt;/b&gt; or of a dollar. (The term &amp;ldquo;Pieces of Eight&amp;rdquo; comes from being able to split the old Spanish dollar into 8 bits, each of which still counted for money. That&amp;rsquo;s why a 25- cent piece today is still &amp;ldquo;two bits&amp;rdquo;.)</source>
          <target state="translated">Un n&amp;uacute;mero entero en el rango de 0 a 1, inclusive. La unidad m&amp;aacute;s peque&amp;ntilde;a posible de almacenamiento de informaci&amp;oacute;n. Un octavo de &lt;b&gt;byte&lt;/b&gt; o de un d&amp;oacute;lar. (El t&amp;eacute;rmino &quot;Piezas de ocho&quot; proviene de poder dividir el antiguo d&amp;oacute;lar espa&amp;ntilde;ol en 8 bits, cada uno de los cuales todav&amp;iacute;a contaba como dinero. Es por eso que una moneda de 25 centavos hoy sigue siendo &quot;dos bits&quot;).</target>
        </trans-unit>
        <trans-unit id="487c5ee86805465c96baeca407a9f1d4e496a654" translate="yes" xml:space="preserve">
          <source>An interesting property of the 32 C0 control characters in the ASCII table is that they can &quot;literally&quot; be constructed as control characters in Perl, e.g. &lt;code&gt;(&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;(0)&lt;/code&gt; eq &lt;code&gt;\c@&lt;/code&gt; )&amp;gt; &lt;code&gt;(&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;(1)&lt;/code&gt; eq &lt;code&gt;\cA&lt;/code&gt; )&amp;gt;, and so on. Perl on EBCDIC platforms has been ported to take &lt;code&gt;\c@&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(0)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;\cA&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(1)&lt;/a&gt;&lt;/code&gt;, etc. as well, but the characters that result depend on which code page you are using. The table below uses the standard acronyms for the controls. The POSIX-BC and 1047 sets are identical throughout this range and differ from the 0037 set at only one spot (21 decimal). Note that the line terminator character may be generated by &lt;code&gt;\cJ&lt;/code&gt; on ASCII platforms but by &lt;code&gt;\cU&lt;/code&gt; on 1047 or POSIX-BC platforms and cannot be generated as a &lt;code&gt;&quot;\c.letter.&quot;&lt;/code&gt; control character on 0037 platforms. Note also that &lt;code&gt;\c\&lt;/code&gt; cannot be the final element in a string or regex, as it will absorb the terminator. But &lt;code&gt;\c\&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; is a &lt;code&gt;FILE
SEPARATOR&lt;/code&gt; concatenated with</source>
          <target state="translated">Una propiedad interesante de los 32 caracteres de control C0 en la tabla ASCII es que se pueden construir &quot;literalmente&quot; como caracteres de control en Perl, por ejemplo &lt;code&gt;(&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;(0)&lt;/code&gt; eq &lt;code&gt;\c@&lt;/code&gt; )&amp;gt; &lt;code&gt;(&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;(1)&lt;/code&gt; eq &lt;code&gt;\cA&lt;/code&gt; )&amp;gt; , y as&amp;iacute;. Perl en plataformas EBCDIC se ha adaptado para llevar &lt;code&gt;\c@&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(0)&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;\cA&lt;/code&gt; a &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(1)&lt;/a&gt;&lt;/code&gt; , etc. tambi&amp;eacute;n, pero los caracteres que resultan dependen de la p&amp;aacute;gina de c&amp;oacute;digos que est&amp;eacute; utilizando. La siguiente tabla utiliza los acr&amp;oacute;nimos est&amp;aacute;ndar para los controles. Los conjuntos POSIX-BC y 1047 son id&amp;eacute;nticos en todo este rango y difieren del conjunto 0037 en un solo lugar (21 decimal). Tenga en cuenta que el car&amp;aacute;cter de terminaci&amp;oacute;n de l&amp;iacute;nea puede ser generado por &lt;code&gt;\cJ&lt;/code&gt; en plataformas ASCII pero por &lt;code&gt;\cU&lt;/code&gt; en plataformas 1047 o POSIX-BC y no puede generarse como una &lt;code&gt;&quot;\c.letter.&quot;&lt;/code&gt; personaje de control en plataformas 0037. Tenga en cuenta tambi&amp;eacute;n que &lt;code&gt;\c\&lt;/code&gt; no puede ser el elemento final en una cadena o expresi&amp;oacute;n regular, ya que absorber&amp;aacute; el terminador. Pero &lt;code&gt;\c\&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; es un &lt;code&gt;FILE SEPARATOR&lt;/code&gt; concatenado con</target>
        </trans-unit>
        <trans-unit id="5ec5858c69c508303478b5682163ba9de4ba1b6f" translate="yes" xml:space="preserve">
          <source>An interesting property of the 32 C0 control characters in the ASCII table is that they can &quot;literally&quot; be constructed as control characters in Perl, e.g. &lt;code&gt;(chr(0)&lt;/code&gt; eq &lt;code&gt;\c@&lt;/code&gt;)&amp;gt; &lt;code&gt;(chr(1)&lt;/code&gt; eq &lt;code&gt;\cA&lt;/code&gt;)&amp;gt;, and so on. Perl on EBCDIC platforms has been ported to take &lt;code&gt;\c@&lt;/code&gt; to &lt;code&gt;chr(0)&lt;/code&gt; and &lt;code&gt;\cA&lt;/code&gt; to &lt;code&gt;chr(1)&lt;/code&gt;, etc. as well, but the characters that result depend on which code page you are using. The table below uses the standard acronyms for the controls. The POSIX-BC and 1047 sets are identical throughout this range and differ from the 0037 set at only one spot (21 decimal). Note that the line terminator character may be generated by &lt;code&gt;\cJ&lt;/code&gt; on ASCII platforms but by &lt;code&gt;\cU&lt;/code&gt; on 1047 or POSIX-BC platforms and cannot be generated as a &lt;code&gt;&quot;\c.letter.&quot;&lt;/code&gt; control character on 0037 platforms. Note also that &lt;code&gt;\c\&lt;/code&gt; cannot be the final element in a string or regex, as it will absorb the terminator. But &lt;code&gt;\c\&lt;i&gt;X&lt;/i&gt;&lt;/code&gt; is a &lt;code&gt;FILE SEPARATOR&lt;/code&gt; concatenated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef88cb460d98eb7a1821664038bd8e659735536" translate="yes" xml:space="preserve">
          <source>An internal &amp;ldquo;glob value&amp;rdquo; typedef, holding a &lt;b&gt;typeglob&lt;/b&gt;. The &lt;code&gt;GV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">Un typedef interno de &quot;valor glob&quot;, que contiene un &lt;b&gt;typeglob&lt;/b&gt; . El tipo &lt;code&gt;GV&lt;/code&gt; es una subclase de &lt;b&gt;SV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="365d20928561014537aae861944e88c7698c35b5" translate="yes" xml:space="preserve">
          <source>An internal I/O object. Can also mean &lt;b&gt;indirect object&lt;/b&gt;.</source>
          <target state="translated">Un objeto de E / S interno. Tambi&amp;eacute;n puede significar &lt;b&gt;objeto indirecto&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="56ae7164116e23d92fc781838b142ca53874c36a" translate="yes" xml:space="preserve">
          <source>An internal function to generate the embedded perl code that will regenerate the constant subroutines.</source>
          <target state="translated">Una función interna para generar el código perl incrustado que regenerará las subrutinas constantes.</target>
        </trans-unit>
        <trans-unit id="7baaf8aedf397c98d596c2159887aa7f484b6db4" translate="yes" xml:space="preserve">
          <source>An internal function to generate the embedded perl code that will regenerate the constant subroutines. Parameters are the same as for C_constant.</source>
          <target state="translated">Una función interna para generar el código perl incrustado que regenerará las subrutinas constantes.Los parámetros son los mismos que para C_constante.</target>
        </trans-unit>
        <trans-unit id="85667dd393cb7f2981dedf066accff60dc1411e5" translate="yes" xml:space="preserve">
          <source>An internal method to generate a suitable &lt;code&gt;switch&lt;/code&gt; clause, called by &lt;code&gt;C_constant&lt;/code&gt;</source>
          <target state="translated">Un m&amp;eacute;todo interno para generar una cl&amp;aacute;usula de &lt;code&gt;switch&lt;/code&gt; adecuada , llamada por &lt;code&gt;C_constant&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69e28cd04a2779fc9d5742eab6b3a6ded1892dd3" translate="yes" xml:space="preserve">
          <source>An internal representation of your program wherein lower-level &lt;b&gt;constructs&lt;/b&gt; dangle off the higher-level constructs enclosing them.</source>
          <target state="translated">Una representaci&amp;oacute;n interna de su programa en la que las &lt;b&gt;construcciones de&lt;/b&gt; nivel inferior cuelgan de las construcciones de nivel superior que las encierran.</target>
        </trans-unit>
        <trans-unit id="ce42a8cc64b6b6a7bf11b4b312683fee15a303f0" translate="yes" xml:space="preserve">
          <source>An internal shorthand for a &amp;ldquo;push- pop&amp;rdquo; code; that is, C code implementing Perl&amp;rsquo;s stack machine.</source>
          <target state="translated">Una abreviatura interna para un c&amp;oacute;digo &quot;push-pop&quot;; es decir, c&amp;oacute;digo C que implementa la m&amp;aacute;quina de pila de Perl.</target>
        </trans-unit>
        <trans-unit id="2be767144e56c8e338304ff9f530373044c5bc8a" translate="yes" xml:space="preserve">
          <source>An internal variable used by &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;. A string in two parts, separated by a &lt;code&gt;\0&lt;/code&gt; byte, the first part describes the input layers, the second part describes the output layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d1d6d772129317410071c249632c5b5382b664" translate="yes" xml:space="preserve">
          <source>An internal variable used by PerlIO. A string in two parts, separated by a &lt;code&gt;\0&lt;/code&gt; byte, the first part describes the input layers, the second part describes the output layers.</source>
          <target state="translated">Una variable interna utilizada por PerlIO. Una cadena en dos partes, separadas por un byte &lt;code&gt;\0&lt;/code&gt; , la primera parte describe las capas de entrada, la segunda parte describe las capas de salida.</target>
        </trans-unit>
        <trans-unit id="30d4f93cd3d13081a21910a8e9e9a9f2e19354af" translate="yes" xml:space="preserve">
          <source>An invalid POD command has been found. Valid are &lt;code&gt;=head1&lt;/code&gt; , &lt;code&gt;=head2&lt;/code&gt; , &lt;code&gt;=head3&lt;/code&gt; , &lt;code&gt;=head4&lt;/code&gt; , &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; , &lt;code&gt;=back&lt;/code&gt; , &lt;code&gt;=begin&lt;/code&gt; , &lt;code&gt;=end&lt;/code&gt; , &lt;code&gt;=for&lt;/code&gt; , &lt;code&gt;=pod&lt;/code&gt; , &lt;code&gt;=cut&lt;/code&gt;</source>
          <target state="translated">Se ha encontrado un comando POD no v&amp;aacute;lido. Los v&amp;aacute;lidos son &lt;code&gt;=head1&lt;/code&gt; , &lt;code&gt;=head2&lt;/code&gt; , &lt;code&gt;=head3&lt;/code&gt; , &lt;code&gt;=head4&lt;/code&gt; , &lt;code&gt;=over&lt;/code&gt; , &lt;code&gt;=item&lt;/code&gt; , &lt;code&gt;=back&lt;/code&gt; , &lt;code&gt;=begin&lt;/code&gt; , &lt;code&gt;=end&lt;/code&gt; , &lt;code&gt;=for&lt;/code&gt; , &lt;code&gt;=pod&lt;/code&gt; , &lt;code&gt;=cut&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="680a8cfcc47d942c4c76eb14d38af7a01657dc85" translate="yes" xml:space="preserve">
          <source>An invalid POD command has been found. Valid are &lt;code&gt;=head1&lt;/code&gt;, &lt;code&gt;=head2&lt;/code&gt;, &lt;code&gt;=head3&lt;/code&gt;, &lt;code&gt;=head4&lt;/code&gt;, &lt;code&gt;=over&lt;/code&gt;, &lt;code&gt;=item&lt;/code&gt;, &lt;code&gt;=back&lt;/code&gt;, &lt;code&gt;=begin&lt;/code&gt;, &lt;code&gt;=end&lt;/code&gt;, &lt;code&gt;=for&lt;/code&gt;, &lt;code&gt;=pod&lt;/code&gt;, &lt;code&gt;=cut&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf1c0648159d8ce5ec8b307b5ed4c7e4b2df3c9" translate="yes" xml:space="preserve">
          <source>An invalid markup command has been encountered. Valid are: &lt;code&gt;B&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;I&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;S&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Se ha encontrado un comando de marcado no v&amp;aacute;lido. Son v&amp;aacute;lidos: &lt;code&gt;B&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;I&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;S&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt; , &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab0cc889ac8e69a2e34e2105510c7875248e79d9" translate="yes" xml:space="preserve">
          <source>An invalid markup command has been encountered. Valid are: &lt;code&gt;B&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;C&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;E&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;F&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;I&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;S&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;X&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1262d5508556d2b36a24c42f3e9a2dee57cb72" translate="yes" xml:space="preserve">
          <source>An item &quot;_*&quot; is interpreted to mean &quot;all of @_ except $_[0]&quot;. I.e., &lt;code&gt;@_[1..$#_]&lt;/code&gt; . Note that this is an empty list in the case of calls like $lh-&amp;gt;maketext(</source>
          <target state="translated">Un elemento &quot;_ *&quot; se interpreta como &quot;todo @_ excepto $ _ [0]&quot;. Es decir, &lt;code&gt;@_[1..$#_]&lt;/code&gt; . Tenga en cuenta que esta es una lista vac&amp;iacute;a en el caso de llamadas como $ lh-&amp;gt; maketext (</target>
        </trans-unit>
        <trans-unit id="c7832bda7130f94045f7bfb60ec1dccf55e7e697" translate="yes" xml:space="preserve">
          <source>An item &quot;_*&quot; is interpreted to mean &quot;all of @_ except $_[0]&quot;. I.e., &lt;code&gt;@_[1..$#_]&lt;/code&gt;. Note that this is an empty list in the case of calls like $lh-&amp;gt;maketext(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af9ff7e003c973fa83a18c634e0daee75f8051b" translate="yes" xml:space="preserve">
          <source>An item that is &quot;_</source>
          <target state="translated">Un artículo que es &quot;_</target>
        </trans-unit>
        <trans-unit id="7b5f2c15e59a54bf0587db95d2a9b094a2521830" translate="yes" xml:space="preserve">
          <source>An number specifying the maximum number of fields to return. If this argument is omitted (or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;), split continues as long as possible.</source>
          <target state="translated">Un n&amp;uacute;mero que especifica el n&amp;uacute;mero m&amp;aacute;ximo de campos para devolver. Si este argumento se omite (o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ), la divisi&amp;oacute;n contin&amp;uacute;a el mayor tiempo posible.</target>
        </trans-unit>
        <trans-unit id="da38298cadbae3dcfcb616625cc2268ee1079670" translate="yes" xml:space="preserve">
          <source>An number specifying the maximum number of fields to return. If this argument is omitted (or &lt;code&gt;undef&lt;/code&gt;), split continues as long as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabc404e0d4e219ccc6748ea24d333aab485d543" translate="yes" xml:space="preserve">
          <source>An object belonging to a language class is called a &quot;language handle&quot;; it's typically a flyweight object.</source>
          <target state="translated">Un objeto perteneciente a una clase de lenguaje se llama &quot;manija de lenguaje&quot;;es típicamente un objeto de peso mosca.</target>
        </trans-unit>
        <trans-unit id="49f2fe3106e7ff8ff917e823e3eefb2822882e64" translate="yes" xml:space="preserve">
          <source>An object corresponding to a paragraph of POD input text. It may be a plain paragraph, a verbatim paragraph, or a command paragraph (see &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;).</source>
          <target state="translated">Un objeto que corresponde a un p&amp;aacute;rrafo del texto de entrada de POD. Puede ser un p&amp;aacute;rrafo simple, un p&amp;aacute;rrafo literal o un p&amp;aacute;rrafo de comando (ver &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8c3786be4e01790b87960925526e572088af640f" translate="yes" xml:space="preserve">
          <source>An object corresponding to a tree of parsed POD text. Each &quot;node&quot; in a parse-tree (or</source>
          <target state="translated">Un objeto que corresponde a un árbol de texto POD analizado.Cada &quot;nodo&quot; de un árbol de análisis (o</target>
        </trans-unit>
        <trans-unit id="7e0998ddd63a38891699bf9ec1b0ac44c576baee" translate="yes" xml:space="preserve">
          <source>An object corresponding to an interior sequence command from the POD input text (see &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;).</source>
          <target state="translated">Un objeto correspondiente a un comando de secuencia interior del texto de entrada del POD (ver &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9a21e67f15a49134056700786cd13ad755082aac" translate="yes" xml:space="preserve">
          <source>An object is simply a data structure that knows to which class it belongs.</source>
          <target state="translated">Un objeto es simplemente una estructura de datos que sabe a qué clase pertenece.</target>
        </trans-unit>
        <trans-unit id="a359cbcceea3057766a3859aec9166b89f1082b5" translate="yes" xml:space="preserve">
          <source>An object method that initializes the first and last name to its two arguments. If called as a class method, &lt;code&gt;init()&lt;/code&gt; creates an object in the given class and initializes that.</source>
          <target state="translated">Un m&amp;eacute;todo de objeto que inicializa el nombre y apellido en sus dos argumentos. Si se llama como un m&amp;eacute;todo de clase, &lt;code&gt;init()&lt;/code&gt; crea un objeto en la clase dada y lo inicializa.</target>
        </trans-unit>
        <trans-unit id="2624824193fa16111d4b98614c9c89fd43601093" translate="yes" xml:space="preserve">
          <source>An object of a class created by the first and third forms is based on an array, whereas an object of a class created by the second form is based on a hash. The array-based forms will be somewhat faster and smaller; the hash-based forms are more flexible.</source>
          <target state="translated">Un objeto de una clase creada por la primera y la tercera forma se basa en una matriz,mientras que un objeto de una clase creada por la segunda forma se basa en un hash.Las formas basadas en un array serán algo más rápidas y pequeñas;las formas basadas en un hash son más flexibles.</target>
        </trans-unit>
        <trans-unit id="439e33121717fb8b3802d4a57550afd4a17f81f5" translate="yes" xml:space="preserve">
          <source>An object of class Archive::Tar represents a .tar(.gz) archive full of files and things.</source>
          <target state="translated">Un objeto de la clase Archive::Tar representa un archivo .tar(.gz)lleno de archivos y cosas.</target>
        </trans-unit>
        <trans-unit id="fcd5621c0c225a91e3f7d06ac2a91fa4ab613367" translate="yes" xml:space="preserve">
          <source>An object representing a POD interior sequence command. It has the following methods/attributes:</source>
          <target state="translated">Un objeto que representa un comando de secuencia interior POD.Tiene los siguientes métodos/atributos:</target>
        </trans-unit>
        <trans-unit id="c24cc2e914ce53bfd778879fef27948d64904b08" translate="yes" xml:space="preserve">
          <source>An object representing a paragraph of POD input text. It has the following methods/attributes:</source>
          <target state="translated">Un objeto que representa un párrafo del texto de entrada del POD.Tiene los siguientes métodos/atributos:</target>
        </trans-unit>
        <trans-unit id="6fdb094e1018942aa0eb673bb8c92b50838eeb01" translate="yes" xml:space="preserve">
          <source>An object represents a single discrete thing. For example, an object might represent a file. The attributes for a file object might include its path, content, and last modification time. If we created an object to represent</source>
          <target state="translated">Un objeto representa una única cosa discreta.Por ejemplo,un objeto puede representar un archivo.Los atributos de un objeto de archivo podrían incluir su ruta,contenido y tiempo de última modificación.Si creamos un objeto para representar</target>
        </trans-unit>
        <trans-unit id="ca7e61e203c4b11d26a8c4d45f16575384df7da5" translate="yes" xml:space="preserve">
          <source>An object that overloads an assignment operator does so only in respect of assignments to that object. In other words, Perl never calls the corresponding methods with the third argument (the &quot;swap&quot; argument) set to TRUE. For example, the operation</source>
          <target state="translated">Un objeto que sobrecarga a un operador de asignación lo hace sólo con respecto a las asignaciones a ese objeto.En otras palabras,Perl nunca llama a los métodos correspondientes con el tercer argumento (el argumento &quot;swap&quot;)puesto a TRUE.Por ejemplo,la operación</target>
        </trans-unit>
        <trans-unit id="5dcc2b27aa012d9c72429af38062f2b4f54986c2" translate="yes" xml:space="preserve">
          <source>An object's members cannot be made accessible as variables. The closest Perl equivalent to &lt;code&gt;with(object) { method() }&lt;/code&gt; is &lt;code&gt;for&lt;/code&gt; , which can alias &lt;code&gt;$_&lt;/code&gt; to the object:</source>
          <target state="translated">Los miembros de un objeto no se pueden hacer accesibles como variables. El equivalente de Perl m&amp;aacute;s cercano a &lt;code&gt;with(object) { method() }&lt;/code&gt; es &lt;code&gt;for&lt;/code&gt; , que puede alias &lt;code&gt;$_&lt;/code&gt; al objeto:</target>
        </trans-unit>
        <trans-unit id="667eaf5552288796413270dd142cf8898197f884" translate="yes" xml:space="preserve">
          <source>An object's members cannot be made accessible as variables. The closest Perl equivalent to &lt;code&gt;with(object) { method() }&lt;/code&gt; is &lt;code&gt;for&lt;/code&gt;, which can alias &lt;code&gt;$_&lt;/code&gt; to the object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b940725a20a5223e137a3da755a048d1310c8a3b" translate="yes" xml:space="preserve">
          <source>An object, however, is a reference to blessed data, so if &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; are objects then the assignment &lt;code&gt;$a = $b&lt;/code&gt; copies only the reference, leaving &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; referring to the same object data. One might therefore expect the operation &lt;code&gt;--$a&lt;/code&gt; to decrement &lt;code&gt;$b&lt;/code&gt; as well as &lt;code&gt;$a&lt;/code&gt; . However, this would not be consistent with how we expect the mathematical operators to work.</source>
          <target state="translated">Un objeto, sin embargo, es una referencia a los datos bendito, por lo que si &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; son objetos entonces la asignaci&amp;oacute;n &lt;code&gt;$a = $b&lt;/code&gt; copias s&amp;oacute;lo la referencia, dejando &lt;code&gt;$a&lt;/code&gt; y &lt;code&gt;$b&lt;/code&gt; en referencia a los mismos datos de objeto. Por lo tanto, uno podr&amp;iacute;a esperar que la operaci&amp;oacute;n &lt;code&gt;--$a&lt;/code&gt; a reduzca &lt;code&gt;$b&lt;/code&gt; adem&amp;aacute;s de &lt;code&gt;$a&lt;/code&gt; . Sin embargo, esto no ser&amp;iacute;a consistente con c&amp;oacute;mo esperamos que funcionen los operadores matem&amp;aacute;ticos.</target>
        </trans-unit>
        <trans-unit id="25fb12e7db9c947b1012ab13c08ddc21606a22cc" translate="yes" xml:space="preserve">
          <source>An object, however, is a reference to blessed data, so if &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; are objects then the assignment &lt;code&gt;$a = $b&lt;/code&gt; copies only the reference, leaving &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; referring to the same object data. One might therefore expect the operation &lt;code&gt;--$a&lt;/code&gt; to decrement &lt;code&gt;$b&lt;/code&gt; as well as &lt;code&gt;$a&lt;/code&gt;. However, this would not be consistent with how we expect the mathematical operators to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee679c1ad7f71a88f44d59f19712e4063863e7e" translate="yes" xml:space="preserve">
          <source>An older style is to use a bareword as the filehandle, as</source>
          <target state="translated">Un estilo más antiguo es usar una palabra clave como el filehandle,como</target>
        </trans-unit>
        <trans-unit id="60dc562d58d05afda178b352ef3aa2e15f8841ff" translate="yes" xml:space="preserve">
          <source>An op is a fundamental operation that Perl can perform: all the built-in functions and operators are ops, and there are a series of ops which deal with concepts the interpreter needs internally - entering and leaving a block, ending a statement, fetching a variable, and so on.</source>
          <target state="translated">Una operación es una operación fundamental que Perl puede realizar:todas las funciones y operadores incorporados son ops,y hay una serie de ops que se ocupan de los conceptos que el intérprete necesita internamente-entrar y salir de un bloque,terminar una declaración,buscar una variable,y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="7d7b9e438ab0eb414e5789ea7e5ffe93395e4dff" translate="yes" xml:space="preserve">
          <source>An operator with only one &lt;b&gt;operand&lt;/b&gt;, like &lt;code&gt;!&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt;. Unary operators are usually prefix operators; that is, they precede their operand. The &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;&amp;ndash;&amp;ndash;&lt;/code&gt; operators can be either prefix or postfix. (Their position</source>
          <target state="translated">Un operador con un solo &lt;b&gt;operando&lt;/b&gt; , como &lt;code&gt;!&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/chdir&quot;&gt;chdir&lt;/a&gt;&lt;/code&gt; . Los operadores unarios suelen ser operadores de prefijo; es decir, preceden a su operando. Los operadores &lt;code&gt;++&lt;/code&gt; y &lt;code&gt;&amp;ndash;&amp;ndash;&lt;/code&gt; pueden ser prefijos o sufijos. (Su posici&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="2af9fb33db84bf30fe452d6a36fe8b4e335e0649" translate="yes" xml:space="preserve">
          <source>An operator with only one &lt;b&gt;operand&lt;/b&gt;, like &lt;code&gt;!&lt;/code&gt; or &lt;code&gt;chdir&lt;/code&gt;. Unary operators are usually prefix operators; that is, they precede their operand. The &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;&amp;ndash;&amp;ndash;&lt;/code&gt; operators can be either prefix or postfix. (Their position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9db1e29b16d48958d935e90ad14b3aea77dc3c" translate="yes" xml:space="preserve">
          <source>An opname or optag can be prefixed with an exclamation mark, e.g., !mkdir. Negating an opname or optag means remove the corresponding ops from the accumulated set of ops at that point.</source>
          <target state="translated">Un opname u optag puede ser prefijado con un signo de exclamación,por ejemplo,!mkdir.Negar un opname u optag significa eliminar las operaciones correspondientes del conjunto de operaciones acumuladas en ese momento.</target>
        </trans-unit>
        <trans-unit id="dd9db1bae968b2ebc8590123585766603b6be162" translate="yes" xml:space="preserve">
          <source>An option on a pattern or substitution, such as &lt;code&gt;/i&lt;/code&gt; to render the pattern case- insensitive.</source>
          <target state="translated">Una opci&amp;oacute;n en un patr&amp;oacute;n o sustituci&amp;oacute;n, como &lt;code&gt;/i&lt;/code&gt; para hacer que el patr&amp;oacute;n no distinga entre may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="1a49163e236ca9288cd8e7003ee1066226da4567" translate="yes" xml:space="preserve">
          <source>An option you give on a command line to influence the way your program works, usually introduced with a minus sign. The word is also used as a nickname for a &lt;b&gt;switch statement&lt;/b&gt;.</source>
          <target state="translated">Una opci&amp;oacute;n que da en una l&amp;iacute;nea de comando para influir en la forma en que funciona su programa, generalmente se presenta con un signo menos. La palabra tambi&amp;eacute;n se usa como apodo para una &lt;b&gt;declaraci&amp;oacute;n de cambio&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="eab6379d02e7da9bfe1cac71088e9311f2348060" translate="yes" xml:space="preserve">
          <source>An optional array of other socket options to apply after the three listed above. The value is an ARRAY containing 2- or 3-element ARRAYrefs. Each inner array relates to a single option, giving the level and option name, and an optional value. If the value element is missing, it will be given the value of a platform-sized integer 1 constant (i.e. suitable to enable most of the common boolean options).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2561efefd0f2b6e16416b85a2d7a359b74ad024" translate="yes" xml:space="preserve">
          <source>An optional feature provided by a CPAN distribution</source>
          <target state="translated">Una característica opcional proporcionada por una distribución CPAN</target>
        </trans-unit>
        <trans-unit id="9645245b8e6172ce42528bd667596edb4e44c226" translate="yes" xml:space="preserve">
          <source>An optional filehandle (or IO::Handle ) that output will be printed to.</source>
          <target state="translated">Un filehandle opcional (o IO::Handle)en el que se imprimirá la salida.</target>
        </trans-unit>
        <trans-unit id="bcc5a81df3ac1dbb29e0b23ff110e8ac5f546061" translate="yes" xml:space="preserve">
          <source>An optional filehandle (or IO::Handle ) to which the output string will be printed.</source>
          <target state="translated">Un filehandle opcional (o IO::Handle)al que se imprimirá la cadena de salida.</target>
        </trans-unit>
        <trans-unit id="2f9901f0f16239239419edd137f25118d48c58b4" translate="yes" xml:space="preserve">
          <source>An optional parameter can be nameless just like a mandatory parameter. For example,</source>
          <target state="translated">Un parámetro opcional puede no tener nombre,al igual que un parámetro obligatorio.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="c0d6b2a0df46d7d7fb341e1412dc44bcca1bf51c" translate="yes" xml:space="preserve">
          <source>An optional part of a &lt;b&gt;subroutine&lt;/b&gt; declaration telling the Perl compiler how many and what flavor of arguments may be passed as &lt;b&gt;actual arguments&lt;/b&gt;, so you can write subroutine calls that parse much like built-in functions. (Or don&amp;rsquo;t parse, as the case may be.)</source>
          <target state="translated">Una parte opcional de una declaraci&amp;oacute;n de &lt;b&gt;subrutina&lt;/b&gt; que le dice al compilador de Perl cu&amp;aacute;ntos y qu&amp;eacute; tipo de argumentos se pueden pasar como &lt;b&gt;argumentos reales&lt;/b&gt; , por lo que puede escribir llamadas a subrutinas que analicen de manera muy similar a las funciones integradas. (O no analice, seg&amp;uacute;n sea el caso).</target>
        </trans-unit>
        <trans-unit id="a21eb72be8656b34c88984249eec6f0bab32e544" translate="yes" xml:space="preserve">
          <source>An optional third parameter can be used to specify the buffer size used for copying. This is the number of bytes from the first file, that will be held in memory at any given time, before being written to the second file. The default buffer size depends upon the file, but will generally be the whole file (up to 2MB), or 1k for filehandles that do not reference files (eg. sockets).</source>
          <target state="translated">Se puede utilizar un tercer parámetro opcional para especificar el tamaño de la memoria intermedia utilizada para la copia.Se trata del número de bytes del primer archivo,que se mantendrá en la memoria en un momento dado,antes de ser escrito en el segundo archivo.El tamaño de la memoria intermedia por defecto depende del archivo,pero generalmente será el archivo completo (hasta 2MB),o 1k para los archivos que no hacen referencia a archivos (por ejemplo,sockets).</target>
        </trans-unit>
        <trans-unit id="0ba928fdaea76c696564501e58ec48f20c5c9dc1" translate="yes" xml:space="preserve">
          <source>An ordered sequence of &lt;b&gt;values&lt;/b&gt;, stored such that you can easily access any of the values using an</source>
          <target state="translated">Una secuencia ordenada de &lt;b&gt;valores&lt;/b&gt; , almacenada de modo que pueda acceder f&amp;aacute;cilmente a cualquiera de los valores mediante un</target>
        </trans-unit>
        <trans-unit id="2b793fb04f1842403dcb9eae8e630daf85625e60" translate="yes" xml:space="preserve">
          <source>An ordered set of scalar values.</source>
          <target state="translated">Un conjunto ordenado de valores escalares.</target>
        </trans-unit>
        <trans-unit id="5c49a2821f5a5074f3f77a39e2cb0f3e615a425e" translate="yes" xml:space="preserve">
          <source>An ordinary disk file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77cc50988bf220f630f8fad5e50fc8b8f153295" translate="yes" xml:space="preserve">
          <source>An ordinary hard disk partition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d009c1cdb4335605c0d3fe2975d2046a8496a5" translate="yes" xml:space="preserve">
          <source>An overview of the Perl interpreter source code and some details on how Perl does what it does.</source>
          <target state="translated">Una visión general del código fuente del intérprete de Perl y algunos detalles de cómo Perl hace lo que hace.</target>
        </trans-unit>
        <trans-unit id="bfd206b59d07c02456cd04b8e043a98488117f17" translate="yes" xml:space="preserve">
          <source>An overview of the Perl source tree. This will help you find the files you're looking for.</source>
          <target state="translated">Una visión general del árbol fuente de Perl.Esto le ayudará a encontrar los archivos que está buscando.</target>
        </trans-unit>
        <trans-unit id="a982a39a2d5d6b9f37342b5e83c23e1f0856fa85" translate="yes" xml:space="preserve">
          <source>An uncaught &lt;b&gt;exception&lt;/b&gt;, which causes termination of the &lt;b&gt;process&lt;/b&gt; after printing a message on your &lt;b&gt;standard error&lt;/b&gt; stream. Errors that happen inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; are not fatal. Instead, the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; terminates after placing the exception message in the &lt;code&gt;$@&lt;/code&gt; (&lt;code&gt;$EVAL_ERROR&lt;/code&gt; ) variable. You can try to provoke a fatal error with the &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; operator (known as throwing or raising an exception), but this may be caught by a dynamically enclosing &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. If not caught, the &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; becomes a fatal error.</source>
          <target state="translated">Una &lt;b&gt;excepci&amp;oacute;n no&lt;/b&gt; detectada , que provoca la finalizaci&amp;oacute;n del &lt;b&gt;proceso&lt;/b&gt; despu&amp;eacute;s de imprimir un mensaje en su secuencia de &lt;b&gt;errores est&amp;aacute;ndar&lt;/b&gt; . Los errores que ocurren dentro de una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n no son fatales. En cambio, la &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n finaliza despu&amp;eacute;s de colocar el mensaje de excepci&amp;oacute;n en la variable &lt;code&gt;$@&lt;/code&gt; ( &lt;code&gt;$EVAL_ERROR&lt;/code&gt; ). Puede intentar provocar un error fatal con el operador del &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; (conocido como lanzar o generar una excepci&amp;oacute;n), pero esto puede ser detectado por una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n que lo encierra din&amp;aacute;micamente . Si no se captura, el &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; convierte en un error fatal.</target>
        </trans-unit>
        <trans-unit id="f1a5d434a9faff9684c6af59ceb8c569c1859cc2" translate="yes" xml:space="preserve">
          <source>An uncaught &lt;b&gt;exception&lt;/b&gt;, which causes termination of the &lt;b&gt;process&lt;/b&gt; after printing a message on your &lt;b&gt;standard error&lt;/b&gt; stream. Errors that happen inside an &lt;code&gt;eval&lt;/code&gt; are not fatal. Instead, the &lt;code&gt;eval&lt;/code&gt; terminates after placing the exception message in the &lt;code&gt;$@&lt;/code&gt; (&lt;code&gt;$EVAL_ERROR&lt;/code&gt;) variable. You can try to provoke a fatal error with the &lt;code&gt;die&lt;/code&gt; operator (known as throwing or raising an exception), but this may be caught by a dynamically enclosing &lt;code&gt;eval&lt;/code&gt;. If not caught, the &lt;code&gt;die&lt;/code&gt; becomes a fatal error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe98c7b5bde8acca47b9d777c6042909674e86b2" translate="yes" xml:space="preserve">
          <source>An unclosed formatting code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b48446507c5be16337d09d4b16f13d55933f7d" translate="yes" xml:space="preserve">
          <source>An undefined $port argument is taken as zero; an undefined $ip6_address is considered a fatal error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9293e352420d9fd32f5883ba4908461fd77eae" translate="yes" xml:space="preserve">
          <source>An undefined $port argument is taken as zero; an undefined $ip_address is considered a fatal error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54365bc1044b88eb77fbf7f1b4c0664f5bcb036c" translate="yes" xml:space="preserve">
          <source>An undefined value is not permitted as a record separator. Perl's special &quot;paragraph mode&quot; semantics (&amp;agrave; la &lt;code&gt;$/ = &quot;&quot;&lt;/code&gt; ) are not emulated.</source>
          <target state="translated">No se permite un valor indefinido como separador de registros. La sem&amp;aacute;ntica especial de &quot;modo p&amp;aacute;rrafo&quot; de Perl (&amp;agrave; la &lt;code&gt;$/ = &quot;&quot;&lt;/code&gt; ) no se emula.</target>
        </trans-unit>
        <trans-unit id="0407455390a08706db99e80a71be456dbdff3c3e" translate="yes" xml:space="preserve">
          <source>An undefined value is not permitted as a record separator. Perl's special &quot;paragraph mode&quot; semantics (&amp;agrave; la &lt;code&gt;$/ = &quot;&quot;&lt;/code&gt;) are not emulated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64166e760d6e4e08cfb550598a86717021fc931" translate="yes" xml:space="preserve">
          <source>An unnamed list of temporary scalar values that may be passed around within a program from any list-generating function to any function or construct that provides a &lt;b&gt;list context&lt;/b&gt;.</source>
          <target state="translated">Una lista sin nombre de valores escalares temporales que se pueden pasar dentro de un programa desde cualquier funci&amp;oacute;n generadora de listas a cualquier funci&amp;oacute;n o construcci&amp;oacute;n que proporcione un &lt;b&gt;contexto de lista&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b7a4ac1dececd2f0138b0d9e87eae14a3bf0f323" translate="yes" xml:space="preserve">
          <source>An unordered association of &lt;b&gt;key&lt;/b&gt;/&lt;b&gt;value&lt;/b&gt; pairs, stored such that you can easily use a string &lt;b&gt;key&lt;/b&gt; to look up its associated data &lt;b&gt;value&lt;/b&gt;. This glossary is like a hash, where the word to be defined is the key and the definition is the value. A hash is also sometimes septisyllabically called an &amp;ldquo;associative array&amp;rdquo;, which is a pretty good reason for simply calling it a &amp;ldquo;hash&amp;rdquo; instead.</source>
          <target state="translated">Una asociaci&amp;oacute;n desordenada de pares &lt;b&gt;clave&lt;/b&gt; / &lt;b&gt;valor&lt;/b&gt; , almacenada de manera que pueda usar f&amp;aacute;cilmente una &lt;b&gt;clave de&lt;/b&gt; cadena para buscar su &lt;b&gt;valor de&lt;/b&gt; datos asociado . Este glosario es como un hash, donde la palabra a definir es la clave y la definici&amp;oacute;n es el valor. Un hash tambi&amp;eacute;n se denomina a veces de forma septisil&amp;aacute;bica &quot;matriz asociativa&quot;, lo que es una buena raz&amp;oacute;n para llamarlo simplemente &quot;hash&quot;.</target>
        </trans-unit>
        <trans-unit id="b718389bf63428a7f7a0b8e8cfc5e0574b25619d" translate="yes" xml:space="preserve">
          <source>An unset or empty PERLIO is equivalent to the default set of layers for your platform; for example, &lt;code&gt;:unix:perlio&lt;/code&gt; on Unix-like systems and &lt;code&gt;:unix:crlf&lt;/code&gt; on Windows and other DOS-like systems.</source>
          <target state="translated">Un PERLIO vac&amp;iacute;o o sin configurar equivale al conjunto de capas predeterminado para su plataforma; por ejemplo &lt;code&gt;:unix:crlf&lt;/code&gt; &lt;code&gt;:unix:perlio&lt;/code&gt; en sistemas similares a Unix y : unix: crlf en Windows y otros sistemas similares a DOS.</target>
        </trans-unit>
        <trans-unit id="1b2099e63b3baac079849a311cb94bc9726d2b6a" translate="yes" xml:space="preserve">
          <source>An unsigned byte.</source>
          <target state="translated">Un byte sin firmar.</target>
        </trans-unit>
        <trans-unit id="17f8abaddabc70c518443c4340875b6f3d1f87f6" translate="yes" xml:space="preserve">
          <source>An unsigned integer.</source>
          <target state="translated">Un número entero sin firmar.</target>
        </trans-unit>
        <trans-unit id="6dc9fd633e86a9f8c5100a5a45701b6dac466c39" translate="yes" xml:space="preserve">
          <source>An upgrade to the PA-RISC design, it shipped for many years in many different system.</source>
          <target state="translated">Una actualización del diseño del PA-RISC,que se envió durante muchos años en muchos sistemas diferentes.</target>
        </trans-unit>
        <trans-unit id="05468cfd5e27b4298d95a71824d624b7c4dbc8a7" translate="yes" xml:space="preserve">
          <source>An xV that is visible at the Perl level should not become unreferenced and thus be destroyed. Normally, an object will only become unreferenced when it is no longer visible, often by the same means that makes it invisible. For example, a Perl reference value (RV) owns a reference to its referent, so if the RV is overwritten that reference gets destroyed, and the no-longer-reachable referent may be destroyed as a result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd7bedc3ca5ffad7ed1a2379448571632c9a196" translate="yes" xml:space="preserve">
          <source>Analogously to &lt;code&gt;pTHX&lt;/code&gt; , there are equivalent forms for when the macro is the first or last in multiple arguments, where an underscore represents a comma, i.e. &lt;code&gt;_aMY_CXT&lt;/code&gt; , &lt;code&gt;aMY_CXT_&lt;/code&gt; , &lt;code&gt;_pMY_CXT&lt;/code&gt; and &lt;code&gt;pMY_CXT_&lt;/code&gt; .</source>
          <target state="translated">An&amp;aacute;logamente al &lt;code&gt;pTHX&lt;/code&gt; , hay formas equivalentes para cuando el macro es el primero o el &amp;uacute;ltimo en m&amp;uacute;ltiples argumentos, donde un subrayado representa una coma, es decir &lt;code&gt;_aMY_CXT&lt;/code&gt; , &lt;code&gt;aMY_CXT_&lt;/code&gt; , &lt;code&gt;_pMY_CXT&lt;/code&gt; y &lt;code&gt;pMY_CXT_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39d947054eb91fd720a6dfc1c92ebab2af540974" translate="yes" xml:space="preserve">
          <source>Analogously to &lt;code&gt;pTHX&lt;/code&gt;, there are equivalent forms for when the macro is the first or last in multiple arguments, where an underscore represents a comma, i.e. &lt;code&gt;_aMY_CXT&lt;/code&gt;, &lt;code&gt;aMY_CXT_&lt;/code&gt;, &lt;code&gt;_pMY_CXT&lt;/code&gt; and &lt;code&gt;pMY_CXT_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf45b9159d8cf5fded0f359396c02baabcce4fe" translate="yes" xml:space="preserve">
          <source>Analyses the string in order to make fast searches on it using fbm_instr() -- the Boyer-Moore algorithm.</source>
          <target state="translated">Analiza la cadena para hacer búsquedas rápidas en ella usando fbm_instr()--el algoritmo Boyer-Moore.</target>
        </trans-unit>
        <trans-unit id="69b405aab620184a43024659654fa4b84c6160c1" translate="yes" xml:space="preserve">
          <source>Analyzes the string in order to make fast searches on it using &lt;code&gt;fbm_instr()&lt;/code&gt; -- the Boyer-Moore algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23a158b83cb28ac3361aeaadb0ea701f833add8" translate="yes" xml:space="preserve">
          <source>Anantha Kesari H Y (hyanantha@novell.com) Aditya C (caditya@novell.com)</source>
          <target state="translated">Anantha Kesari H Y (hyanantha@novell.com)Aditya C (caditya@novell.com)</target>
        </trans-unit>
        <trans-unit id="e7694709c56de3564de85fb7f6b62bf3f9d5a2dd" translate="yes" xml:space="preserve">
          <source>Anatomy of .xs file</source>
          <target state="translated">Anatomía del archivo .xs</target>
        </trans-unit>
        <trans-unit id="c371090fde9f09dd68fd0c025b019139f11c3b43" translate="yes" xml:space="preserve">
          <source>Anatomy of a typemap</source>
          <target state="translated">Anatomía de un mapa tipo</target>
        </trans-unit>
        <trans-unit id="a01e33f4dcdb6ba1ae9f34a97cf8f6deeedf1a8d" translate="yes" xml:space="preserve">
          <source>And</source>
          <target state="translated">And</target>
        </trans-unit>
        <trans-unit id="126b187e44894c18f8676c982d3d84ada9d1092e" translate="yes" xml:space="preserve">
          <source>And &lt;a href=&quot;Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt; supports odd bit counts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56126a3ba8ff8d615bfc883458ff2ad74c4445f8" translate="yes" xml:space="preserve">
          <source>And &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt; supports odd bit counts:</source>
          <target state="translated">Y &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit :: Vector&lt;/a&gt; admite recuentos de bits impares:</target>
        </trans-unit>
        <trans-unit id="0fdb46cc394058268f8370b027acd6f7507ad5af" translate="yes" xml:space="preserve">
          <source>And a print to show what values we're currently using:</source>
          <target state="translated">Y una impresión para mostrar qué valores estamos usando actualmente:</target>
        </trans-unit>
        <trans-unit id="3e6cfdab3639e924ccc0236d51702eea17278fbe" translate="yes" xml:space="preserve">
          <source>And add the following code to Mytest.t, while incrementing the &quot;11&quot; tests to &quot;13&quot;:</source>
          <target state="translated">Y añade el siguiente código a Mytest.t,mientras incrementa las pruebas &quot;11&quot; a &quot;13&quot;:</target>
        </trans-unit>
        <trans-unit id="7e934152fc5094b95aee4b1e3cfca4dfe3b716a5" translate="yes" xml:space="preserve">
          <source>And also add the following function definition to the end of the .xs file:</source>
          <target state="translated">Y también añadir la siguiente definición de función al final del archivo .xs:</target>
        </trans-unit>
        <trans-unit id="e095a5f2bc9f3ebef8eb601baecde5aacc183619" translate="yes" xml:space="preserve">
          <source>And an even parity bit can be determined like this:</source>
          <target state="translated">Y un bit de paridad uniforme puede ser determinado así:</target>
        </trans-unit>
        <trans-unit id="fa65fe1d258f3efe5fa4b14f6a4bdf869e0bca12" translate="yes" xml:space="preserve">
          <source>And don't forget, all commands but &lt;code&gt;=encoding&lt;/code&gt; last up until the end of its</source>
          <target state="translated">Y no lo olvide, todos los comandos excepto &lt;code&gt;=encoding&lt;/code&gt; duran hasta el final de su</target>
        </trans-unit>
        <trans-unit id="d49f8a3fb63a02de3bc96673eb479046741fcd21" translate="yes" xml:space="preserve">
          <source>And elsewhere:</source>
          <target state="translated">Y en otros lugares:</target>
        </trans-unit>
        <trans-unit id="81cb3b2a1b531c9a6c9a5580cd54769bc7cdb329" translate="yes" xml:space="preserve">
          <source>And especially its subject 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d86ebfaa42125fcbf7621caf9b51d0d516488b0" translate="yes" xml:space="preserve">
          <source>And even if you take all the above into account, ANSI still lets this:</source>
          <target state="translated">E incluso si se tiene en cuenta todo lo anterior,la ANSI todavía permite esto:</target>
        </trans-unit>
        <trans-unit id="7a24c6f39dbf571ec01b5431e8552ecca7394253" translate="yes" xml:space="preserve">
          <source>And finally create a file Makefile.PL that looks like this:</source>
          <target state="translated">Y finalmente crear un archivo Makefile.PL que se vea así:</target>
        </trans-unit>
        <trans-unit id="ae77b129ec8a4042483f52a6f594546db002727e" translate="yes" xml:space="preserve">
          <source>And finally we'll test that we don't make Unicode strings if &lt;code&gt;U&lt;/code&gt; is &lt;b&gt;not&lt;/b&gt; the first active format:</source>
          <target state="translated">Y finalmente probaremos que no hacemos cadenas Unicode si &lt;code&gt;U&lt;/code&gt; &lt;b&gt;no&lt;/b&gt; es el primer formato activo:</target>
        </trans-unit>
        <trans-unit id="a3e1249d44e165c645bd656a34581eba0f8a1e5b" translate="yes" xml:space="preserve">
          <source>And finally, END OF CHARMAP ends the section.</source>
          <target state="translated">Y finalmente,el FINAL DEL CARMEN termina la sección.</target>
        </trans-unit>
        <trans-unit id="2d457e986a9ae5a62a56559cd5a194f65f8d8696" translate="yes" xml:space="preserve">
          <source>And finally, in list context, it will try to extract as many objects from the stream as it can find and return them, or the empty list otherwise. For this to work, there must be no separators (other than whitespace) between the JSON objects or arrays, instead they must be concatenated back-to-back. If an error occurs, an exception will be raised as in the scalar context case. Note that in this case, any previously-parsed JSON texts will be lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa08a28d9fbfd1e04544d3cbe387157894102ef" translate="yes" xml:space="preserve">
          <source>And finally, the &lt;code&gt;//&lt;/code&gt; default delimiters for a match can be changed to arbitrary delimiters by putting an &lt;code&gt;'m'&lt;/code&gt; out front:</source>
          <target state="translated">Y finalmente, los &lt;code&gt;//&lt;/code&gt; delimitadores predeterminados para una coincidencia se pueden cambiar a delimitadores arbitrarios poniendo una &lt;code&gt;'m'&lt;/code&gt; al principio:</target>
        </trans-unit>
        <trans-unit id="8bfb479933b19ce9cc3cdcd7ea52e1ab56622323" translate="yes" xml:space="preserve">
          <source>And finally, the flag UNICODE_WARN_ILLEGAL_INTERCHANGE selects all four of the above WARN flags; and UNICODE_DISALLOW_ILLEGAL_INTERCHANGE selects all four DISALLOW flags.</source>
          <target state="translated">Y finalmente,la bandera UNICODE_WARN_ILLEGAL_INTERCHANGE selecciona las cuatro banderas de ADVERTENCIA anteriores;y UNICODE_DISALLOW_ILLEGAL_INTERCHANGE selecciona las cuatro banderas de DESARROLLO.</target>
        </trans-unit>
        <trans-unit id="805a895ac4ae294cb6372936f60badec42431ba0" translate="yes" xml:space="preserve">
          <source>And get the correct results.</source>
          <target state="translated">Y obtener los resultados correctos.</target>
        </trans-unit>
        <trans-unit id="e2f2205f3663f3c210b60bce452eee7ce9387b44" translate="yes" xml:space="preserve">
          <source>And have a look at the return value:</source>
          <target state="translated">Y echa un vistazo al valor de retorno:</target>
        </trans-unit>
        <trans-unit id="fbc4c3241647a832011ec07f9650e675a0c500ca" translate="yes" xml:space="preserve">
          <source>And here are some alternative portable ways to write them:</source>
          <target state="translated">Y aquí hay algunas formas portátiles alternativas para escribirlas:</target>
        </trans-unit>
        <trans-unit id="dd7d82addca3d88c7a2654bf3c9e6dcef14475a8" translate="yes" xml:space="preserve">
          <source>And here is an example of</source>
          <target state="translated">Y aquí hay un ejemplo de</target>
        </trans-unit>
        <trans-unit id="d607f0d907db7da1691c33f97b8d6b2f2769c71d" translate="yes" xml:space="preserve">
          <source>And here is some Perl to test it.</source>
          <target state="translated">Y aquí hay algo de Perl para probarlo.</target>
        </trans-unit>
        <trans-unit id="eae54ac5b1d17fae865a39da8414bc4e94611b48" translate="yes" xml:space="preserve">
          <source>And here is the function from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a015e04d33b93191e1790b436d13c5a1d0ec08" translate="yes" xml:space="preserve">
          <source>And here is the previous example modified to use the &lt;code&gt;comment&lt;/code&gt; method (which requires the tied object):</source>
          <target state="translated">Y aqu&amp;iacute; est&amp;aacute; el ejemplo anterior modificado para usar el m&amp;eacute;todo de &lt;code&gt;comment&lt;/code&gt; (que requiere el objeto vinculado):</target>
        </trans-unit>
        <trans-unit id="949c884471ed5b1d107f6efb48c3d4a2b28f9c98" translate="yes" xml:space="preserve">
          <source>And here it is as a subroutine, modeled after the above:</source>
          <target state="translated">Y aquí está como una subrutina,modelada según lo anterior:</target>
        </trans-unit>
        <trans-unit id="33110031311636694f867a410fcd13fa8bb80c0c" translate="yes" xml:space="preserve">
          <source>And here's a corresponding server to go along with it. We'll leave the address as &lt;code&gt;INADDR_ANY&lt;/code&gt; so that the kernel can choose the appropriate interface on multihomed hosts. If you want sit on a particular interface (like the external side of a gateway or firewall machine), fill this in with your real address instead.</source>
          <target state="translated">Y aqu&amp;iacute; hay un servidor correspondiente para acompa&amp;ntilde;arlo. Dejaremos la direcci&amp;oacute;n como &lt;code&gt;INADDR_ANY&lt;/code&gt; para que el kernel pueda elegir la interfaz adecuada en hosts m&amp;uacute;ltiples. Si desea sentarse en una interfaz en particular (como el lado externo de una puerta de enlace o una m&amp;aacute;quina de firewall), complete esto con su direcci&amp;oacute;n real.</target>
        </trans-unit>
        <trans-unit id="dbd6a4af2108db6ae982ecf10d7522ed7e526a16" translate="yes" xml:space="preserve">
          <source>And here's a corresponding server. You don't have to worry about silly network terminators here because Unix domain sockets are guaranteed to be on the localhost, and thus everything works right.</source>
          <target state="translated">Y aquí hay un servidor correspondiente.No tienes que preocuparte por tontos terminadores de red aquí porque los sockets de dominio Unix están garantizados en el host local,y por lo tanto todo funciona bien.</target>
        </trans-unit>
        <trans-unit id="944b5652f25ab675361c7efd6d5681a5765fc752" translate="yes" xml:space="preserve">
          <source>And here's a multitasking version. It's multitasked in that like most typical servers, it spawns (fork()s) a slave server to handle the client request so that the master server can quickly go back to service a new client.</source>
          <target state="translated">Y aquí hay una versión multitarea.Es multitarea en la que,como la mayoría de los servidores típicos,genera un servidor esclavo para manejar la solicitud del cliente,de modo que el servidor maestro pueda volver rápidamente a atender a un nuevo cliente.</target>
        </trans-unit>
        <trans-unit id="412d21e904b4a5d9be299f9e46dd7d8fb8650015" translate="yes" xml:space="preserve">
          <source>And here's a reimplementation of the Perl &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; operator:</source>
          <target state="translated">Y aqu&amp;iacute; hay una reimplementaci&amp;oacute;n del operador &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; de Perl :</target>
        </trans-unit>
        <trans-unit id="328ddc059366c7b26584066902e71a55942bcb50" translate="yes" xml:space="preserve">
          <source>And here's a reimplementation of the Perl &lt;code&gt;grep&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39e0321aadc55f074a271968aaa41d7162f8c6f" translate="yes" xml:space="preserve">
          <source>And here's a safe pipe open for writing:</source>
          <target state="translated">Y aquí hay un tubo seguro abierto para escribir:</target>
        </trans-unit>
        <trans-unit id="e0737e576532a52571f2f02f804f1b9fffb668de" translate="yes" xml:space="preserve">
          <source>And here's how it could be (ab)used:</source>
          <target state="translated">Y así es como podría ser (ab)utilizado:</target>
        </trans-unit>
        <trans-unit id="9d8d64c2d75cb873a59d78e68255422a53fcc02a" translate="yes" xml:space="preserve">
          <source>And here's how to start up a child process you intend to read from:</source>
          <target state="translated">Y así es como se inicia un proceso infantil del que pretenden leer:</target>
        </trans-unit>
        <trans-unit id="4c941c96c3f11d53f1f07f2e00498b7a8046f1f0" translate="yes" xml:space="preserve">
          <source>And here's the &lt;code&gt;HotKey&lt;/code&gt; module, which hides the somewhat mystifying calls to manipulate the POSIX termios structures.</source>
          <target state="translated">Y aqu&amp;iacute; est&amp;aacute; el m&amp;oacute;dulo &lt;code&gt;HotKey&lt;/code&gt; , que oculta las llamadas un tanto desconcertantes para manipular las estructuras de los termios POSIX.</target>
        </trans-unit>
        <trans-unit id="c1de37a9a564348e268bb7765797260079df1212" translate="yes" xml:space="preserve">
          <source>And if it's an integer</source>
          <target state="translated">Y si es un número entero</target>
        </trans-unit>
        <trans-unit id="1e83d880ce4037fe2787ac7496582407c6b33838" translate="yes" xml:space="preserve">
          <source>And if the protocol you're using supports a way of letting the recipient know which character encoding you used, please help the receiving end by using that feature! For example, E-mail and HTTP support MIME headers, so you can use the &lt;code&gt;Content-Type&lt;/code&gt; header. They can also have &lt;code&gt;Content-Length&lt;/code&gt; to indicate the number of</source>
          <target state="translated">Y si el protocolo que est&amp;aacute; utilizando admite una forma de hacerle saber al destinatario qu&amp;eacute; codificaci&amp;oacute;n de caracteres utiliz&amp;oacute;, &amp;iexcl;ayude al receptor utilizando esa funci&amp;oacute;n! Por ejemplo, el correo electr&amp;oacute;nico y HTTP admiten encabezados MIME, por lo que puede utilizar el encabezado &lt;code&gt;Content-Type&lt;/code&gt; . Tambi&amp;eacute;n pueden tener &lt;code&gt;Content-Length&lt;/code&gt; para indicar el n&amp;uacute;mero de</target>
        </trans-unit>
        <trans-unit id="c041e6b2053eeffc72c3a76864ceba40caffea7d" translate="yes" xml:space="preserve">
          <source>And if you used &lt;code&gt;&quot;*&quot;&lt;/code&gt;'s in the internal groups instead of limiting them to 0 through 5 matches, then it would take forever--or until you ran out of stack space. Moreover, these internal optimizations are not always applicable. For example, if you put &lt;code&gt;{0,5}&lt;/code&gt; instead of &lt;code&gt;&quot;*&quot;&lt;/code&gt; on the external group, no current optimization is applicable, and the match takes a long time to finish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530bb41f401dd9a37c76bab8cac0844cf9ab82e0" translate="yes" xml:space="preserve">
          <source>And if you used &lt;code&gt;*&lt;/code&gt; 's in the internal groups instead of limiting them to 0 through 5 matches, then it would take forever--or until you ran out of stack space. Moreover, these internal optimizations are not always applicable. For example, if you put &lt;code&gt;{0,5}&lt;/code&gt; instead of &lt;code&gt;*&lt;/code&gt; on the external group, no current optimization is applicable, and the match takes a long time to finish.</source>
          <target state="translated">Y si us&amp;oacute; &lt;code&gt;*&lt;/code&gt; en los grupos internos en lugar de limitarlos a 0 a 5 coincidencias, tomar&amp;iacute;a una eternidad, o hasta que se quede sin espacio de pila. Adem&amp;aacute;s, estas optimizaciones internas no siempre son aplicables. Por ejemplo, si coloca &lt;code&gt;{0,5}&lt;/code&gt; en lugar de &lt;code&gt;*&lt;/code&gt; en el grupo externo, no se aplicar&amp;aacute; ninguna optimizaci&amp;oacute;n actual y la coincidencia tardar&amp;aacute; mucho en finalizar.</target>
        </trans-unit>
        <trans-unit id="85fb030d5b378f589d8d5a1abf4a0effa17a51ec" translate="yes" xml:space="preserve">
          <source>And if you want to repeat any previous command, use the exclamation: '&lt;b&gt;!&lt;/b&gt;':</source>
          <target state="translated">Y si desea repetir cualquier comando anterior, use la exclamaci&amp;oacute;n: ' &lt;b&gt;!&lt;/b&gt; ':</target>
        </trans-unit>
        <trans-unit id="e2e9c56949878c68d60537e13a0fee819e61a651" translate="yes" xml:space="preserve">
          <source>And if you want to update your remote-tracking branches for all defined remotes simultaneously you can do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ee0ae161979dc9986599ac47ae17f4297a5e95" translate="yes" xml:space="preserve">
          <source>And if you wanted to list line 5 again, type 'l 5', (note the space):</source>
          <target state="translated">Y si quieres listar la línea 5 de nuevo,escribe 'l 5',(nota el espacio):</target>
        </trans-unit>
        <trans-unit id="749d2869c6a2cd1160d264bfc5684c9df865e407" translate="yes" xml:space="preserve">
          <source>And if you're not writing a formatter class, but are instead just writing a program that does something simple with a Pod::PullParser object (and not an object of a subclass), then there's no reason to bother subclassing to add a &lt;code&gt;run&lt;/code&gt; method.</source>
          <target state="translated">Y si no est&amp;aacute; escribiendo una clase de formateador, sino que simplemente est&amp;aacute; escribiendo un programa que hace algo simple con un objeto Pod :: PullParser (y no un objeto de una subclase), entonces no hay raz&amp;oacute;n para molestarse en subclasificar para agregar una &lt;code&gt;run&lt;/code&gt; m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="a90e884faa57a601f440de65c751d0540510d763" translate="yes" xml:space="preserve">
          <source>And in gdb do:</source>
          <target state="translated">Y en gdb hacer:</target>
        </trans-unit>
        <trans-unit id="81cf331b9c5b31a88becd7901f7891213a4ee929" translate="yes" xml:space="preserve">
          <source>And in gdb:</source>
          <target state="translated">Y en gdb:</target>
        </trans-unit>
        <trans-unit id="46441ba6d0d6e8d0a7cff3ad4e65de9157fcaa3a" translate="yes" xml:space="preserve">
          <source>And in the special case of Unix value 1 the encoding is:</source>
          <target state="translated">Y en el caso especial del valor 1 de Unix la codificación es:</target>
        </trans-unit>
        <trans-unit id="c703bcbb84cf0b00ade16c5fcf17098b7ecf2788" translate="yes" xml:space="preserve">
          <source>And it worked; nowadays, those legacy standards are rarely used. Most everyone uses Unicode.</source>
          <target state="translated">Y funcionó;hoy en día,esos estándares de legado se utilizan raramente.Casi todo el mundo usa Unicode.</target>
        </trans-unit>
        <trans-unit id="54037314563b22510a39098497cd62d4a291d5ca" translate="yes" xml:space="preserve">
          <source>And it'll be faster, too, since we can begin processing the program's stdout immediately, rather than waiting for the program to finish.</source>
          <target state="translated">Y será más rápido,también,ya que podemos empezar a procesar la salida del programa inmediatamente,en lugar de esperar a que el programa termine.</target>
        </trans-unit>
        <trans-unit id="05b8d44f52c6cb1137bdef7406a03b86305390f3" translate="yes" xml:space="preserve">
          <source>And just before we start the loop, we'll set &lt;code&gt;patcopy&lt;/code&gt; to be the start of &lt;code&gt;pat&lt;/code&gt; :</source>
          <target state="translated">Y justo antes de comenzar el ciclo, configuraremos &lt;code&gt;patcopy&lt;/code&gt; para que sea el comienzo de &lt;code&gt;pat&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1283b8c922466a3c7b07d1feee37151a4dce3090" translate="yes" xml:space="preserve">
          <source>And just before we start the loop, we'll set &lt;code&gt;patcopy&lt;/code&gt; to be the start of &lt;code&gt;pat&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9997bbf1b12f8dbc675ed04e53a7e01c218a79" translate="yes" xml:space="preserve">
          <source>And just use a multilevel hash to start with.</source>
          <target state="translated">Y para empezar,usa un hachís de varios niveles.</target>
        </trans-unit>
        <trans-unit id="6f762806ee86000a08af1e9120bb69dbd27df3b8" translate="yes" xml:space="preserve">
          <source>And let's have a look at it:</source>
          <target state="translated">Y echemos un vistazo:</target>
        </trans-unit>
        <trans-unit id="2fcd80e8aae7192e91938fbeb5e4135bca3cc513" translate="yes" xml:space="preserve">
          <source>And likewise, the &lt;code&gt;UNICODE_WARN_SUPER&lt;/code&gt; and &lt;code&gt;UNICODE_DISALLOW_SUPER&lt;/code&gt; flags affect the handling of code points that are above the Unicode maximum of 0x10FFFF. Languages other than Perl may not be able to accept files that contain these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3304a768e2182435437e989432d9119802e93fc2" translate="yes" xml:space="preserve">
          <source>And locally for months:</source>
          <target state="translated">Y localmente durante meses:</target>
        </trans-unit>
        <trans-unit id="a3a5e5aaccae80b6482e3c73484c3e27d16e3695" translate="yes" xml:space="preserve">
          <source>And make sure the '|1' or '|3' entry FOLLOWS the '|0' entry.</source>
          <target state="translated">Y asegúrate de que la entrada '|1' o '|3' siga a la entrada '|0'.</target>
        </trans-unit>
        <trans-unit id="13b0bb554f54abc8fbffc8c8994d2d663c4a335c" translate="yes" xml:space="preserve">
          <source>And make the &lt;code&gt;SHELL&lt;/code&gt; environment variable point to this</source>
          <target state="translated">Y haga que la variable de entorno &lt;code&gt;SHELL&lt;/code&gt; apunte a esto</target>
        </trans-unit>
        <trans-unit id="be7020a4d943fe59e561bee80058c6fdc65ab9a2" translate="yes" xml:space="preserve">
          <source>And more miscellaneous functions:</source>
          <target state="translated">Y más funciones misceláneas:</target>
        </trans-unit>
        <trans-unit id="a60081f8386184766dad1be5fdc437aa5eeeb0e1" translate="yes" xml:space="preserve">
          <source>And note that unlike the first example, this will permanently set &lt;code&gt;$^W&lt;/code&gt; since it cannot both run during compile-time and be localized to a run-time block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804a1ae29f0ee92582bcfc8bf24a3ed82f77d6d1" translate="yes" xml:space="preserve">
          <source>And note, that some items returned by &lt;code&gt;Localeconv&lt;/code&gt; are available through &lt;a href=&quot;perlapi#Perl_langinfo&quot;&gt;&quot;Perl_langinfo&quot; in perlapi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2abac4d1c06c7d4176cadc5fbb88490348f44bd" translate="yes" xml:space="preserve">
          <source>And now some examples as a list operator:</source>
          <target state="translated">Y ahora algunos ejemplos como operador de lista:</target>
        </trans-unit>
        <trans-unit id="325f253298d4946260db0eee17abb5d004c58cf0" translate="yes" xml:space="preserve">
          <source>And now the Perl program calling &lt;code&gt;tzname&lt;/code&gt; , the two values will be assigned as in:</source>
          <target state="translated">Y ahora el programa Perl llamando a &lt;code&gt;tzname&lt;/code&gt; , los dos valores se asignar&amp;aacute;n como en:</target>
        </trans-unit>
        <trans-unit id="f59e966510e8c065dbf5dc3f3cc9146205ad5af4" translate="yes" xml:space="preserve">
          <source>And now the Perl program calling &lt;code&gt;tzname&lt;/code&gt;, the two values will be assigned as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d6d0f0cc9d0f09a7a155f9b933e949a3d93b8d" translate="yes" xml:space="preserve">
          <source>And now when we run it, we get &quot;\n&quot; still, but at least we know why. Just getting this script to compile has exposed the '$varl' (with the letter 'l') variable, and simply changing $varl to $var1 solves the problem.</source>
          <target state="translated">Y ahora,cuando lo ejecutamos,nos quedamos &quot;\N&quot; quietos,pero al menos sabemos por qué.El simple hecho de hacer que este script se compile ha expuesto la variable '$varl' (con la letra 'l'),y el simple hecho de cambiar $varl por $var1 resuelve el problema.</target>
        </trans-unit>
        <trans-unit id="5ed144a58c9fd20df52c8636158ebb39098e1299" translate="yes" xml:space="preserve">
          <source>And now whenever either of those variables is accessed, its current system priority is retrieved and returned. If those variables are set, then the process's priority is changed!</source>
          <target state="translated">Y ahora cada vez que se accede a cualquiera de esas variables,se recupera y se devuelve su prioridad actual del sistema.Si esas variables se establecen,entonces la prioridad del proceso se cambia.</target>
        </trans-unit>
        <trans-unit id="f9560789fd59b77ec60e56d7ede2c768c8b84e1a" translate="yes" xml:space="preserve">
          <source>And now you will only have duplicates when the keys themselves are truly the same. (note: in versions of the db library prior to about November 1996, such duplicate keys were retained so it was possible to recover the original keys in sets of keys that compared as equal).</source>
          <target state="translated">Y ahora sólo tendrás duplicados cuando las llaves sean realmente las mismas.(nota:en las versiones de la biblioteca de la db anteriores a alrededor de noviembre de 1996,tales llaves duplicadas se conservaban para que fuera posible recuperar las llaves originales en conjuntos de llaves que se compararan como iguales).</target>
        </trans-unit>
        <trans-unit id="5a5750ab899553015c34706ef7f35d79aa761c9c" translate="yes" xml:space="preserve">
          <source>And of course a very basic test:</source>
          <target state="translated">Y por supuesto una prueba muy básica:</target>
        </trans-unit>
        <trans-unit id="892ba36b3022eacc3edbb4c21af99c36c593d715" translate="yes" xml:space="preserve">
          <source>And on the off chance you need a literal tilde in a bracket expression, you get it with &quot;~~&quot;.</source>
          <target state="translated">Y en el caso de que necesites un tilde literal en una expresión entre paréntesis,lo obtienes con &quot;~~&quot;.</target>
        </trans-unit>
        <trans-unit id="7c31eaf7ebf6ce5c72185594ad0e1b74e04b6fe1" translate="yes" xml:space="preserve">
          <source>And only on Solaris 8 you also need:</source>
          <target state="translated">Y sólo en Solaris 8 también se necesita:</target>
        </trans-unit>
        <trans-unit id="15fba9c4eb39007661b94becfb32901d56aa6cd3" translate="yes" xml:space="preserve">
          <source>And only the last two of these match:</source>
          <target state="translated">Y sólo los dos últimos coinciden:</target>
        </trans-unit>
        <trans-unit id="96df95971f3fa6b1c473a349d8884984b667322b" translate="yes" xml:space="preserve">
          <source>And other assignment variations are analogous to &lt;code&gt;'+='&lt;/code&gt; and &lt;code&gt;'-='&lt;/code&gt; (and similar to &lt;code&gt;'.='&lt;/code&gt; and &lt;code&gt;'x='&lt;/code&gt; above):</source>
          <target state="translated">Y otras variaciones de asignaci&amp;oacute;n son an&amp;aacute;logas a &lt;code&gt;'+='&lt;/code&gt; y &lt;code&gt;'-='&lt;/code&gt; (y similares a &lt;code&gt;'.='&lt;/code&gt; Y &lt;code&gt;'x='&lt;/code&gt; arriba):</target>
        </trans-unit>
        <trans-unit id="efa161d50be827f153878be8fe5d6eeddd3f9aab" translate="yes" xml:space="preserve">
          <source>And perhaps most importantly, keep the items consistent: either use &quot;=item *&quot; for all of them, to produce bullets; or use &quot;=item 1.&quot;, &quot;=item 2.&quot;, etc., to produce numbered lists; or use &quot;=item foo&quot;, &quot;=item bar&quot;, etc.--namely, things that look nothing like bullets or numbers.</source>
          <target state="translated">Y quizás lo más importante,mantener los elementos consistentes:o bien usar &quot;=elemento *&quot; para todos ellos,para producir balas;o bien usar &quot;=elemento 1.&quot;,&quot;=elemento 2.&quot;,etc.,para producir listas numeradas;o bien usar &quot;=elemento foo&quot;,&quot;=elemento bar&quot;,etc.,es decir,cosas que no se parecen en nada a las balas o a los números.</target>
        </trans-unit>
        <trans-unit id="ac0a1fd097b0dfd986a143395713cf6857292218" translate="yes" xml:space="preserve">
          <source>And perhaps most importantly, keep the items consistent: either use &quot;=item *&quot; for all of them, to produce bullets; or use &quot;=item 1.&quot;, &quot;=item 2.&quot;, etc., to produce numbered lists; or use &quot;=item foo&quot;, &quot;=item bar&quot;, etc.--namely, things that look nothing like bullets or numbers. (If you have a list that contains both: 1) things that don't look like bullets nor numbers, plus 2) things that do, you should preface the bullet- or number-like items with &lt;code&gt;Z&amp;lt;&amp;gt;&lt;/code&gt;. See &lt;a href=&quot;#Z%3C%3E-a-null-%28zero-effect%29-formatting-code&quot;&gt;Z&amp;lt;&amp;gt;&lt;/a&gt; below for an example.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b837400890ba807a5f5e88629d11f36f624c30a2" translate="yes" xml:space="preserve">
          <source>And pull new changes from the repository, and update your local repository (must be clean first)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abab37034be7516f5a858adebbbb45b8ced8395" translate="yes" xml:space="preserve">
          <source>And push the branch to your fork:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91e4f8b7302927647ddce5513c00f7d31bca99b" translate="yes" xml:space="preserve">
          <source>And since we're on that subject ...</source>
          <target state="translated">Y ya que estamos en ese tema...</target>
        </trans-unit>
        <trans-unit id="787438686ae95a1032fa3a9e1aa177c6c4fd8565" translate="yes" xml:space="preserve">
          <source>And so do these:</source>
          <target state="translated">Y también lo hacen estos:</target>
        </trans-unit>
        <trans-unit id="d57613d3e5e04fb527cb785d3cbc34d0addd45d8" translate="yes" xml:space="preserve">
          <source>And some of the entries are marked as &quot;undocumented&quot;. This means that they aren't necessarily considered stable, and could be changed or removed in some future release without warning. It is therefore a bad idea to use them without further checking. It could be that these are considered to be for perl core use only; or it could be, though, that &lt;code&gt;Devel::PPPort&lt;/code&gt; doesn't know where to find their documentation, or that it's just an oversight that they haven't been documented. If you want to use one, and potentially have it backported, first send mail to &lt;a href=&quot;mailto:perl5-porters@perl.org&quot;&gt;mailto:perl5-porters@perl.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a765d6600ae95d5f3b4bad120d6d7aba62ac6d" translate="yes" xml:space="preserve">
          <source>And success is always the value 0 in all behaviors.</source>
          <target state="translated">Y el éxito es siempre el valor 0 en todos los comportamientos.</target>
        </trans-unit>
        <trans-unit id="438bed71f720bad1480f9f02fbee09a0688495fa" translate="yes" xml:space="preserve">
          <source>And suppose then that you answer client requests for language $wanted by just looking up $greetings{$wanted}.</source>
          <target state="translated">Y supongamos entonces que respondes a las peticiones de los clientes para el lenguaje $deseado con sólo buscar $saludos{$deseados}.</target>
        </trans-unit>
        <trans-unit id="2669b5893403010caa914594080405bbbce0ff5c" translate="yes" xml:space="preserve">
          <source>And suppose you write a program that reads that file and then runs as a daemon, answering client requests that specify a language tag and then expect the string that says how to greet in that language. So an interaction looks like:</source>
          <target state="translated">Y supongamos que escribes un programa que lee ese archivo y luego se ejecuta como un demonio,respondiendo a las solicitudes de los clientes que especifican una etiqueta de idioma y luego esperas la cadena que dice cómo saludar en ese idioma.Así que una interacción parece:</target>
        </trans-unit>
        <trans-unit id="2df99fba715f8ad036f73439b0d1c572a25bb0d8" translate="yes" xml:space="preserve">
          <source>And that does the Right Thing.</source>
          <target state="translated">Y eso hace lo correcto.</target>
        </trans-unit>
        <trans-unit id="f185ef04d67f1d1642dde1d5aaeb827268181df4" translate="yes" xml:space="preserve">
          <source>And that's where the first quirk strikes: &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; templates have to be stuffed with &lt;code&gt;x&lt;/code&gt; codes to get those extra fill bytes.</source>
          <target state="translated">Y ah&amp;iacute; es donde aparece la primera peculiaridad: &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; plantillas de empaquetado y &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; deben rellenarse con c&amp;oacute;digos &lt;code&gt;x&lt;/code&gt; para obtener esos bytes de relleno adicionales.</target>
        </trans-unit>
        <trans-unit id="faa61c2d15a96573c75e47bc47738ee4332bd44e" translate="yes" xml:space="preserve">
          <source>And that's where the first quirk strikes: &lt;code&gt;pack&lt;/code&gt; and &lt;code&gt;unpack&lt;/code&gt; templates have to be stuffed with &lt;code&gt;x&lt;/code&gt; codes to get those extra fill bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2e146487dcd6b006ca0fe732ee06c5f66c58a6" translate="yes" xml:space="preserve">
          <source>And the &lt;code&gt;*&lt;/code&gt; quantifier (or its equivalent &lt;code&gt;(0,}&lt;/code&gt;) is illegal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c7d2fddd9456e1d45eb87fbe318da0c23d0419" translate="yes" xml:space="preserve">
          <source>And the removal of:</source>
          <target state="translated">Y la eliminación de:</target>
        </trans-unit>
        <trans-unit id="6321b918eecf63aae95252ec27d4a4007661cbea" translate="yes" xml:space="preserve">
          <source>And then at least you can use the values(), which will be real refs, instead of the keys(), which won't.</source>
          <target state="translated">Y al menos puedes usar los valores(),que serán verdaderos referentes,en lugar de las teclas(),que no lo serán.</target>
        </trans-unit>
        <trans-unit id="4c721f20845157aa106a3ca5329f5d50475f12f2" translate="yes" xml:space="preserve">
          <source>And then hard-code it, leaving porting as an exercise to your successor.</source>
          <target state="translated">Y luego lo codificaste,dejando la portabilidad como un ejercicio para tu sucesor.</target>
        </trans-unit>
        <trans-unit id="47e6e2e5fec5f13213aa3c81c38b973ca1f59e41" translate="yes" xml:space="preserve">
          <source>And then instead of storing the compiled value in the lexicon hash it will store it in $lh-&amp;gt;{'_external_lex_cache'}</source>
          <target state="translated">Y luego, en lugar de almacenar el valor compilado en el hash del l&amp;eacute;xico, lo almacenar&amp;aacute; en $ lh -&amp;gt; {'_ external_lex_cache'}</target>
        </trans-unit>
        <trans-unit id="4ddb0364527af5ee5b5762f819c0ea16f6ac0a17" translate="yes" xml:space="preserve">
          <source>And then open as before, choosing &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; , or &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; as needed:</source>
          <target state="translated">Y luego abra como antes, eligiendo &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; , &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; o &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; seg&amp;uacute;n sea necesario:</target>
        </trans-unit>
        <trans-unit id="c1e2199a985f69bef0e671090e4f82d7d27c974b" translate="yes" xml:space="preserve">
          <source>And then open as before, choosing &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt;, or &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; as needed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733e92d2677896a5105fc9334a5547dcbabc4286" translate="yes" xml:space="preserve">
          <source>And then provide a typemap entry &lt;code&gt;T_PTROBJ_SPECIAL&lt;/code&gt; that maps underscores to double-colons (::), and declare &lt;code&gt;Net_Config&lt;/code&gt; to be of that type:</source>
          <target state="translated">Y luego proporcione una entrada de &lt;code&gt;T_PTROBJ_SPECIAL&lt;/code&gt; tipos T_PTROBJ_SPECIAL que asigne guiones bajos a dos puntos dobles (: :), y declare que &lt;code&gt;Net_Config&lt;/code&gt; sea ​​de ese tipo:</target>
        </trans-unit>
        <trans-unit id="0b78c6f57eb325a818fb40b5bb64b41ae51db883" translate="yes" xml:space="preserve">
          <source>And then replace the hash name with the reference:</source>
          <target state="translated">Y luego reemplace el nombre del hachís con la referencia:</target>
        </trans-unit>
        <trans-unit id="1482b41f1c8c23a1b6f51e392e8562858f488f4e" translate="yes" xml:space="preserve">
          <source>And then set PERL5LIB to</source>
          <target state="translated">Y luego establezca PERL5LIB a</target>
        </trans-unit>
        <trans-unit id="e66399c5da24330a870822849d8e76cf4cddfe41" translate="yes" xml:space="preserve">
          <source>And then step until you hit what you're looking for. This works well in a loop if you want to only break at certain iterations:</source>
          <target state="translated">Y luego dar un paso hasta que encuentres lo que estás buscando.Esto funciona bien en un bucle si quieres romper sólo en ciertas iteraciones:</target>
        </trans-unit>
        <trans-unit id="4fa5c1cdc4927fc4a1301e4902474775669ad62e" translate="yes" xml:space="preserve">
          <source>And these conditions hold</source>
          <target state="translated">Y estas condiciones mantienen</target>
        </trans-unit>
        <trans-unit id="d5d9b0ee41acfcea7375d0a36877f181aee3c098" translate="yes" xml:space="preserve">
          <source>And they all mean exactly the same as this:</source>
          <target state="translated">Y todos significan exactamente lo mismo que esto:</target>
        </trans-unit>
        <trans-unit id="8536c300c45ef5952d0313ea8b714a35911f6d2e" translate="yes" xml:space="preserve">
          <source>And this example uses anonymous subroutines to create separate counters:</source>
          <target state="translated">Y este ejemplo utiliza subrutinas anónimas para crear contadores separados:</target>
        </trans-unit>
        <trans-unit id="2e09b2a3ab0575b70e3e084aed68993db1ebce78" translate="yes" xml:space="preserve">
          <source>And this is the XS code:</source>
          <target state="translated">Y este es el código XS:</target>
        </trans-unit>
        <trans-unit id="0991be3e57b74fce439099710428de62b394a4a0" translate="yes" xml:space="preserve">
          <source>And this is the reason that many of the C library string handling functions should not be used. They don't cope with the full generality of Perl strings. It may be that your test cases don't have embedded &lt;code&gt;NUL&lt;/code&gt;s, and so the tests pass, whereas there may well eventually arise real-world cases where they fail. A lesson here is to include &lt;code&gt;NUL&lt;/code&gt;s in your tests. Now it's fairly rare in most real world cases to get &lt;code&gt;NUL&lt;/code&gt;s, so your code may seem to work, until one day a &lt;code&gt;NUL&lt;/code&gt; comes along.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0a495178fdf07510ea88975dd8d193311ceae6" translate="yes" xml:space="preserve">
          <source>And this is what the script above will print:</source>
          <target state="translated">Y esto es lo que el guión de arriba imprimirá:</target>
        </trans-unit>
        <trans-unit id="f3108d27ee1408a1d7ae19ba3de728a5ab7ca78b" translate="yes" xml:space="preserve">
          <source>And this isn't the whole story. Starting in Perl v5.12, strings that aren't encoded in UTF-8 may also be treated as Unicode under various conditions (see &lt;a href=&quot;perlunicode#ASCII-Rules-versus-Unicode-Rules&quot;&gt;&quot;ASCII Rules versus Unicode Rules&quot; in perlunicode&lt;/a&gt;). This is only really a problem for characters whose ordinals are between 128 and 255, and their behavior varies under ASCII versus Unicode rules in ways that your code cares about (see &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;&quot;The &quot;Unicode Bug&quot;&quot; in perlunicode&lt;/a&gt;). There is no published API for dealing with this, as it is subject to change, but you can look at the code for &lt;code&gt;pp_lc&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35194f4922bc124f887493e5a4a0600918a32f35" translate="yes" xml:space="preserve">
          <source>And this isn't the whole story. Starting in Perl v5.12, strings that aren't encoded in UTF-8 may also be treated as Unicode under various conditions (see &lt;a href=&quot;perlunicode#ASCII-Rules-versus-Unicode-Rules&quot;&gt;ASCII Rules versus Unicode Rules in perlunicode&lt;/a&gt;). This is only really a problem for characters whose ordinals are between 128 and 255, and their behavior varies under ASCII versus Unicode rules in ways that your code cares about (see &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug in perlunicode&lt;/a&gt;). There is no published API for dealing with this, as it is subject to change, but you can look at the code for &lt;code&gt;pp_lc&lt;/code&gt; in</source>
          <target state="translated">Y esta no es toda la historia. A partir de Perl v5.12, las cadenas que no est&amp;aacute;n codificadas en UTF-8 tambi&amp;eacute;n pueden tratarse como Unicode en diversas condiciones (consulte &lt;a href=&quot;perlunicode#ASCII-Rules-versus-Unicode-Rules&quot;&gt;Reglas ASCII frente a Reglas Unicode en perlunicode&lt;/a&gt; ). Esto es solo un problema para los caracteres cuyos ordinales est&amp;aacute;n entre 128 y 255, y su comportamiento var&amp;iacute;a seg&amp;uacute;n las reglas ASCII frente a Unicode en formas que le interesan a su c&amp;oacute;digo (consulte &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;El error Unicode en perlunicode&lt;/a&gt; ). No hay una API publicada para lidiar con esto, ya que est&amp;aacute; sujeta a cambios, pero puede consultar el c&amp;oacute;digo de &lt;code&gt;pp_lc&lt;/code&gt; en</target>
        </trans-unit>
        <trans-unit id="04dc4562232363a5a2cdcef5ad0c57a632cc4d72" translate="yes" xml:space="preserve">
          <source>And this one reads from the child:</source>
          <target state="translated">Y este lee del niño:</target>
        </trans-unit>
        <trans-unit id="22fab1b1ab24735dd2f54767a6ec2977de574611" translate="yes" xml:space="preserve">
          <source>And this too is valid:</source>
          <target state="translated">Y esto también es válido:</target>
        </trans-unit>
        <trans-unit id="ca100b799213c6d95d191edf790bdf80dab3cf7a" translate="yes" xml:space="preserve">
          <source>And this:</source>
          <target state="translated">Y esto:</target>
        </trans-unit>
        <trans-unit id="ca54ab72a0f62623ded9fadca0c4ae598b7f81fe" translate="yes" xml:space="preserve">
          <source>And to check the sequence in which the library directories are searched by perl, run</source>
          <target state="translated">Y para comprobar la secuencia en la que los directorios de la biblioteca se buscan por perl,ejecute</target>
        </trans-unit>
        <trans-unit id="362fec7b951a6425bfa81311e580eeb12dfb603d" translate="yes" xml:space="preserve">
          <source>And to desurrogate;</source>
          <target state="translated">Y para destituir;</target>
        </trans-unit>
        <trans-unit id="2615ff8743f40d3114fe04e3d5a96ce87c8f4c9d" translate="yes" xml:space="preserve">
          <source>And try again:</source>
          <target state="translated">Y lo intentamos de nuevo:</target>
        </trans-unit>
        <trans-unit id="92794ee0d6f5c6f795ca92dffa6111092171b2bc" translate="yes" xml:space="preserve">
          <source>And we end up with the program:</source>
          <target state="translated">Y terminamos con el programa:</target>
        </trans-unit>
        <trans-unit id="fea4a67d42b69d2a6859a380b25f39bb4220097d" translate="yes" xml:space="preserve">
          <source>And whitespace may be used between the &lt;code&gt;~&lt;/code&gt; and quoted delimiters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397d92a7cd41c0dad432b26c8f27299cae1c6b41" translate="yes" xml:space="preserve">
          <source>And with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding &quot;euc-jp&quot;&lt;/code&gt; in effect, it is the same thing as that code in UTF-8:</source>
          <target state="translated">Y con la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding &quot;euc-jp&quot;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; &quot;euc-jp&quot; en efecto, es lo mismo que ese c&amp;oacute;digo en UTF-8:</target>
        </trans-unit>
        <trans-unit id="5057821b43bf3328e6eb98ddc5e990c468614ce5" translate="yes" xml:space="preserve">
          <source>And with &lt;code&gt;use encoding &quot;euc-jp&quot;&lt;/code&gt; in effect, it is the same thing as that code in UTF-8:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b354e965b809ff14ff904fafbdc0b4de89c4bc4e" translate="yes" xml:space="preserve">
          <source>And with boolean methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd73bf27445a15ee33df36a7d8cf60d584177c03" translate="yes" xml:space="preserve">
          <source>And you can see the changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a140f07fc1f24b5deb3f2211fd3e22212c7dcd8" translate="yes" xml:space="preserve">
          <source>And you may also sense that you do not want to bother your translators with having to write Perl code -- you'd much rather that they spend their</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72514ebfb8885208b2209c125f8bbac4bdc3aa69" translate="yes" xml:space="preserve">
          <source>And you write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cc2408ca05432d5f7face5b62924a44acb8f84" translate="yes" xml:space="preserve">
          <source>And your caller module would be something like this:</source>
          <target state="translated">Y tu módulo de llamadas sería algo así:</target>
        </trans-unit>
        <trans-unit id="f429519c2ad8f6db43559b6df0122aa7e92ef582" translate="yes" xml:space="preserve">
          <source>And, as you'll have noticed from the previous example, if you override &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; glob operator is overridden as well.</source>
          <target state="translated">Y, como habr&amp;aacute; notado en el ejemplo anterior, si anula &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;&lt;/code&gt; , el operador glob &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; tambi&amp;eacute;n se anula .</target>
        </trans-unit>
        <trans-unit id="09ddb5c3e778ae1b6a95dadacffb550e09674ca1" translate="yes" xml:space="preserve">
          <source>And, as you'll have noticed from the previous example, if you override &lt;code&gt;glob&lt;/code&gt;, the &lt;code&gt;&amp;lt;*&amp;gt;&lt;/code&gt; glob operator is overridden as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f027b49b77d3cee2d1bd5a0ad1af1a5214bdb5ba" translate="yes" xml:space="preserve">
          <source>And, most importantly, there's all the practical details of how to actually go about deriving from Maketext so you can use it for your interfaces, and the various tools and conventions for starting out and maintaining individual language modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0872d4a5d2061a3d40ffa31b9853ff607e66e0c5" translate="yes" xml:space="preserve">
          <source>And, the Name and Name_Aliases properties are accessible through the &lt;code&gt;\N{}&lt;/code&gt; interpolation in double-quoted strings and regular expressions; and functions &lt;code&gt;charnames::viacode()&lt;/code&gt; , &lt;code&gt;charnames::vianame()&lt;/code&gt; , and &lt;code&gt;charnames::string_vianame()&lt;/code&gt; (which require a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames ();&lt;/code&gt; to be specified.</source>
          <target state="translated">Y, las propiedades Name y Name_Aliases son accesibles a trav&amp;eacute;s de la interpolaci&amp;oacute;n &lt;code&gt;\N{}&lt;/code&gt; en cadenas entre comillas dobles y expresiones regulares; y funciones &lt;code&gt;charnames::viacode()&lt;/code&gt; , &lt;code&gt;charnames::vianame()&lt;/code&gt; y &lt;code&gt;charnames::string_vianame()&lt;/code&gt; (que requieren un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames ();&lt;/code&gt; para ser especificado.</target>
        </trans-unit>
        <trans-unit id="a3d4a9b48a0e71abc1829b589dc1a4bb4344372b" translate="yes" xml:space="preserve">
          <source>And, there is a technique that can be used to handle variable length lookbehinds on earlier releases, and longer than 255 characters. It is described in &lt;a href=&quot;http://www.drregex.com/2019/02/variable-length-lookbehinds-actually.html&quot;&gt;http://www.drregex.com/2019/02/variable-length-lookbehinds-actually.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49cf0754660175d0a77b4c857d087e651cbf367" translate="yes" xml:space="preserve">
          <source>And, with Perl 5.10 and later, you don't have to check for an inheritance to see if the object can handle a role. For that, you can use &lt;code&gt;DOES&lt;/code&gt; , which comes from &lt;code&gt;UNIVERSAL&lt;/code&gt; :</source>
          <target state="translated">Y, con Perl 5.10 y versiones posteriores, no es necesario verificar si hay una herencia para ver si el objeto puede manejar un rol. Para eso, puedes usar &lt;code&gt;DOES&lt;/code&gt; , que viene de &lt;code&gt;UNIVERSAL&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="df1177936aa7e7d352017983c64995f489a2f05c" translate="yes" xml:space="preserve">
          <source>And, with Perl 5.10 and later, you don't have to check for an inheritance to see if the object can handle a role. For that, you can use &lt;code&gt;DOES&lt;/code&gt;, which comes from &lt;code&gt;UNIVERSAL&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973c0aeb4f70654b3b70d2e3c1f5c993e73805e5" translate="yes" xml:space="preserve">
          <source>Andreas J. Koenig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c4d01ab2b12800c7bf2f6468b98b449d53a99b" translate="yes" xml:space="preserve">
          <source>Andreas Koenig &amp;lt;andk@cpan.org&amp;gt;, Branislav Zahradnik &amp;lt;barney@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b41c9a4e6f27e4cb868723e388d3e3baf23ec77" translate="yes" xml:space="preserve">
          <source>Andreas Koenig &lt;code&gt;&amp;lt;andk@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Andreas Koenig &lt;code&gt;&amp;lt;andk@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17721a7a6efc10cf2782e06109ae542e5e371c5d" translate="yes" xml:space="preserve">
          <source>Andreas Koenig &lt;code&gt;andreas.koenig@anima.de&lt;/code&gt;</source>
          <target state="translated">Andreas Koenig &lt;code&gt;andreas.koenig@anima.de&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1928f95c598b9e69462fcb512625cf8e28923044" translate="yes" xml:space="preserve">
          <source>Android</source>
          <target state="translated">Android</target>
        </trans-unit>
        <trans-unit id="f2f8905b2465e6f0ad9cfd91b9febf4156adfa14" translate="yes" xml:space="preserve">
          <source>Andy Armstong &amp;lt;andy@hexten.net&amp;gt;</source>
          <target state="translated">Andy Armstong &amp;lt;andy@hexten.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d272317e48a940ed9b68adfad919572635019ce3" translate="yes" xml:space="preserve">
          <source>Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b85b5eb312e6917fec0aa730c7d70660252958f" translate="yes" xml:space="preserve">
          <source>Andy Armstrong, &amp;lt;andy@hexten.net&amp;gt;</source>
          <target state="translated">Andy Armstrong, &amp;lt;andy@hexten.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9084574cd986898323dbe20b46abf1751fbbf849" translate="yes" xml:space="preserve">
          <source>Andy Broad &amp;lt;andy@broad.ology.org.uk&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9ef1486d01c7ad977376f692dc981d906e478c" translate="yes" xml:space="preserve">
          <source>Andy Dougherty &lt;code&gt;doughera@lafayette.edu&lt;/code&gt; , Andreas K&amp;ouml;nig &lt;code&gt;andreas.koenig@mind.de&lt;/code&gt; , Tim Bunce &lt;code&gt;timb@cpan.org&lt;/code&gt; . VMS support by Charles Bailey &lt;code&gt;bailey@newman.upenn.edu&lt;/code&gt; . OS/2 support by Ilya Zakharevich &lt;code&gt;ilya@math.ohio-state.edu&lt;/code&gt; .</source>
          <target state="translated">Andy Dougherty &lt;code&gt;doughera@lafayette.edu&lt;/code&gt; , Andreas K&amp;ouml;nig &lt;code&gt;andreas.koenig@mind.de&lt;/code&gt; , Tim Bunce &lt;code&gt;timb@cpan.org&lt;/code&gt; . Soporte de VMS por Charles Bailey &lt;code&gt;bailey@newman.upenn.edu&lt;/code&gt; . Soporte para OS / 2 por Ilya Zakharevich &lt;code&gt;ilya@math.ohio-state.edu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54b2fb7511cb7a7c3493b4e0650ca3d85102f114" translate="yes" xml:space="preserve">
          <source>Andy Dougherty &lt;code&gt;doughera@lafayette.edu&lt;/code&gt;, Andreas K&amp;ouml;nig &lt;code&gt;andreas.koenig@mind.de&lt;/code&gt;, Tim Bunce &lt;code&gt;timb@cpan.org&lt;/code&gt;. VMS support by Charles Bailey &lt;code&gt;bailey@newman.upenn.edu&lt;/code&gt;. OS/2 support by Ilya Zakharevich &lt;code&gt;ilya@math.ohio-state.edu&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb884ee85ba557bf7e891804c953fd2fabe3f95" translate="yes" xml:space="preserve">
          <source>Andy Glew,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9371666f1dc2fa002dd7c688c18705bc84f8f9d0" translate="yes" xml:space="preserve">
          <source>Andy Lester</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f309e7ea03de47735dc8e5cfc8cc01f796755634" translate="yes" xml:space="preserve">
          <source>Anecdotal estimates of source-to-compiled code bloat suggest an eightfold increase. This means that the compiled form of reasonable (normally commented, properly indented etc.) code will take about eight times more space in memory than the code took on disk.</source>
          <target state="translated">Las estimaciones anecdóticas de la hinchazón del código fuente a código compilado sugieren un aumento de ocho veces.Esto significa que la forma compilada de código razonable (normalmente comentado,correctamente indentado,etc.)tomará cerca de ocho veces más espacio en la memoria que el código tomado en el disco.</target>
        </trans-unit>
        <trans-unit id="dd5ff38fa4ac27c93c3c6622ac77c49ca0b0e6b7" translate="yes" xml:space="preserve">
          <source>Angle brackets not written as &lt;code&gt;&amp;lt;lt&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;gt&amp;gt;&lt;/code&gt; can potentially cause errors as they could be misinterpreted as markup commands. This is only printed when the -warnings level is greater than 1.</source>
          <target state="translated">Los corchetes angulares que no est&amp;aacute;n escritos como &lt;code&gt;&amp;lt;lt&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;gt&amp;gt;&lt;/code&gt; pueden causar errores, ya que podr&amp;iacute;an malinterpretarse como comandos de marcado. Esto solo se imprime cuando el nivel de advertencias es mayor que 1.</target>
        </trans-unit>
        <trans-unit id="4a0daf5f778b84f7d47324f4951f69110d4d48b4" translate="yes" xml:space="preserve">
          <source>Anno Siegel (ANNO) wrote the xs code and the changes in perl proper Jerry Hedden (JDHEDDEN) made it faster</source>
          <target state="translated">Anno Siegel (ANNO)escribió el código xs y los cambios en el perl propio Jerry Hedden (JDHEDDEN)lo hicieron más rápido</target>
        </trans-unit>
        <trans-unit id="602afe4dcabe1b2fe81bdeaea0130200ac9160dc" translate="yes" xml:space="preserve">
          <source>AnnoCPAN: Annotated CPAN documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa7bfd58b194e39ca2dde6c48f032e168048d8e" translate="yes" xml:space="preserve">
          <source>Annotated POD for &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt;: &lt;a href=&quot;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads&quot;&gt;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads&lt;/a&gt;</source>
          <target state="translated">POD anotado para &lt;a href=&quot;threads&quot;&gt;hilos&lt;/a&gt; : &lt;a href=&quot;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads&quot;&gt;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7858242352e2796cb227df6cabe7747dcc9c11c4" translate="yes" xml:space="preserve">
          <source>Annotated POD for &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt;: &lt;a href=&quot;https://web.archive.org/web/20171028020148/http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads&quot;&gt;https://web.archive.org/web/20171028020148/http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba63b983b01c370d674ecdc009b4d7bcd13f4f33" translate="yes" xml:space="preserve">
          <source>Annotated POD for &lt;a href=&quot;threads/shared&quot;&gt;threads::shared&lt;/a&gt;: &lt;a href=&quot;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads%3A%3Ashared&quot;&gt;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads%3A%3Ashared&lt;/a&gt;</source>
          <target state="translated">POD anotado para &lt;a href=&quot;threads/shared&quot;&gt;hilos :: compartido&lt;/a&gt; : &lt;a href=&quot;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads%3A%3Ashared&quot;&gt;http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads%3A%3Ashared&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ff3b3d306ae85d31c9461b66532ebdda6c7e205" translate="yes" xml:space="preserve">
          <source>Annotated POD for &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt;: &lt;a href=&quot;https://web.archive.org/web/20171028020148/http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads%3A%3Ashared&quot;&gt;https://web.archive.org/web/20171028020148/http://annocpan.org/?mode=search&amp;amp;field=Module&amp;amp;name=threads%3A%3Ashared&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0700dd0d246c337cd6fa922a92caa253e25b21" translate="yes" xml:space="preserve">
          <source>Annotated list of characters</source>
          <target state="translated">Lista anotada de personajes</target>
        </trans-unit>
        <trans-unit id="c10f845c88bdb301cd3ade696bdf99cccd4ed1f0" translate="yes" xml:space="preserve">
          <source>Annotated tags in the canonical perl.git repository will never be deleted or modified. Think long and hard about whether you want to push a local tag to perl.git before doing so. (Pushing simple tags is not allowed.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5154e030234862764507248749c6a7c751b8bc6" translate="yes" xml:space="preserve">
          <source>Anonymous Subroutines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911169a23e106a872e476c8d2fa5935672c571c0" translate="yes" xml:space="preserve">
          <source>Anonymous hash and array composers like these can be intermixed freely to produce as complicated a structure as you want. The multidimensional syntax described below works for these too. The values above are literals, but variables and expressions would work just as well, because assignment operators in Perl (even within local() or my()) are executable statements, not compile-time declarations.</source>
          <target state="translated">Compositores anónimos de hash y array como estos pueden mezclarse libremente para producir una estructura tan complicada como se desee.La sintaxis multidimensional que se describe a continuación funciona también para estos.Los valores anteriores son literales,pero las variables y expresiones funcionarían igual de bien,porque los operadores de asignación en Perl (incluso dentro de local()o my())son declaraciones ejecutables,no declaraciones en tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="ddd265fb1f3b46963f4185e092c2f56d761a6e96" translate="yes" xml:space="preserve">
          <source>Anonymous subroutines act as closures with respect to my() variables, that is, variables lexically visible within the current scope. Closure is a notion out of the Lisp world that says if you define an anonymous function in a particular lexical context, it pretends to run in that context even when it's called outside the context.</source>
          <target state="translated">Las subrutinas anónimas actúan como cierres con respecto a mis()variables,es decir,las variables léxicas visibles dentro del ámbito actual.El cierre es una noción fuera del mundo de Lisp que dice que si se define una función anónima en un contexto léxico particular,pretende ejecutarse en ese contexto incluso cuando se llama fuera de él.</target>
        </trans-unit>
        <trans-unit id="3eb95879a615d5ea34c741b40bf67030c1977968" translate="yes" xml:space="preserve">
          <source>Anonymous subroutines get to capture each time you execute the &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; operator, as they are created on the fly. If you are accustomed to using nested subroutines in other programming languages with their own private variables, you'll have to work at it a bit in Perl. The intuitive coding of this type of thing incurs mysterious warnings about &quot;will not stay shared&quot; due to the reasons explained above. For example, this won't work:</source>
          <target state="translated">Las subrutinas an&amp;oacute;nimas pueden capturar cada vez que ejecuta el &lt;code&gt;&lt;a href=&quot;functions/sub&quot;&gt;sub&lt;/a&gt;&lt;/code&gt; operador , ya que se crean sobre la marcha. Si est&amp;aacute; acostumbrado a usar subrutinas anidadas en otros lenguajes de programaci&amp;oacute;n con sus propias variables privadas, tendr&amp;aacute; que trabajar un poco en Perl. La codificaci&amp;oacute;n intuitiva de este tipo de cosas incurre en misteriosas advertencias sobre &quot;no permanecer&amp;aacute; compartido&quot; por las razones explicadas anteriormente. Por ejemplo, esto no funcionar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="484e8735a38d0b2c3316b6b4767502150b9246c0" translate="yes" xml:space="preserve">
          <source>Anonymous subroutines get to capture each time you execute the &lt;code&gt;sub&lt;/code&gt; operator, as they are created on the fly. If you are accustomed to using nested subroutines in other programming languages with their own private variables, you'll have to work at it a bit in Perl. The intuitive coding of this type of thing incurs mysterious warnings about &quot;will not stay shared&quot; due to the reasons explained above. For example, this won't work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0878cc2f5c4c23ed0c52c0dfcedfeb6916f96a7" translate="yes" xml:space="preserve">
          <source>Another Example</source>
          <target state="translated">Otro ejemplo</target>
        </trans-unit>
        <trans-unit id="58127100a894b61eeb7ff5e87057e807d55c8b96" translate="yes" xml:space="preserve">
          <source>Another Example -- Key is a C int.</source>
          <target state="translated">Otro ejemplo...La clave es una C int.</target>
        </trans-unit>
        <trans-unit id="60d38257f9d2129e1058114b1893e74a3db974bb" translate="yes" xml:space="preserve">
          <source>Another Example: Key is a C int.</source>
          <target state="translated">Otro ejemplo:La clave es una C int.</target>
        </trans-unit>
        <trans-unit id="c610761bff33dc8f8934a509a66662b8c1def3f8" translate="yes" xml:space="preserve">
          <source>Another P5P contributor recommended installation and use of Devel::PatchPerl for this situation, first to determine the version of perl at the commit in question, then to patch the source code at that point to facilitate a build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5842d0c6f0b2a32d5a2aac4ce0ec4bcd453989" translate="yes" xml:space="preserve">
          <source>Another Portable Binary Encoding</source>
          <target state="translated">Otra codificación binaria portátil</target>
        </trans-unit>
        <trans-unit id="a3a811e6345c52a72030025da749e7378837c8a7" translate="yes" xml:space="preserve">
          <source>Another brief debugger, slightly more useful, can be created with only the line:</source>
          <target state="translated">Otro breve depurador,ligeramente más útil,puede ser creado con sólo la línea:</target>
        </trans-unit>
        <trans-unit id="723c39858f051ddac15e8257e9c5bc5481712afe" translate="yes" xml:space="preserve">
          <source>Another common error is to use ordinary parentheses to construct a list reference when you should be using square or curly brackets, for example, if you say</source>
          <target state="translated">Otro error común es el uso de paréntesis ordinarios para construir una lista de referencia cuando se deberían utilizar corchetes o rizos,por ejemplo,si se dice</target>
        </trans-unit>
        <trans-unit id="989f6c267d1aa6631d47641c01947fa297495517" translate="yes" xml:space="preserve">
          <source>Another common use for this construct is when you need to execute something without the shell's interference. With system(), it's straightforward, but you can't use a pipe open or backticks safely. That's because there's no way to stop the shell from getting its hands on your arguments. Instead, use lower-level control to call exec() directly.</source>
          <target state="translated">Otro uso común de esta construcción es cuando se necesita ejecutar algo sin la interferencia del proyectil.Con system(),es sencillo,pero no se puede usar un tubo abierto o un palo trasero de forma segura.Eso es porque no hay manera de evitar que el shell ponga sus manos en tus argumentos.En su lugar,usa el control de nivel inferior para llamar directamente a exec().</target>
        </trans-unit>
        <trans-unit id="948bec86ec25e1c793c75848e3f095908f00b9e7" translate="yes" xml:space="preserve">
          <source>Another complication is that the representation used for the program differs if it needs to store Unicode, but it's not always possible to know for sure whether it does until midway through parsing. The Unicode representation for the program is larger, and cannot be matched as efficiently. (See &lt;a href=&quot;#Unicode-and-Localisation-Support&quot;&gt;&quot;Unicode and Localisation Support&quot;&lt;/a&gt; below for more details as to why.) If the pattern contains literal Unicode, it's obvious that the program needs to store Unicode. Otherwise, the parser optimistically assumes that the more efficient representation can be used, and starts sizing on this basis. However, if it then encounters something in the pattern which must be stored as Unicode, such as an &lt;code&gt;\x{...}&lt;/code&gt; escape sequence representing a character literal, then this means that all previously calculated sizes need to be redone, using values appropriate for the Unicode representation. This is another instance where the parsing needs to be restarted, and it can and is done immediately. The function returns failure, and sets the flag &lt;code&gt;RESTART_UTF8&lt;/code&gt; (encapsulated by using the macro &lt;code&gt;REQUIRE_UTF8&lt;/code&gt;). This restart request is propagated up the call chain in a similar fashion, until it is &quot;caught&quot; in &lt;code&gt;Perl_re_op_compile()&lt;/code&gt;, which marks the pattern as containing Unicode, and restarts the sizing pass. It is also possible for constructions within run-time code blocks to turn out to need Unicode representation., which is signalled by &lt;code&gt;S_compile_runtime_code()&lt;/code&gt; returning false to &lt;code&gt;Perl_re_op_compile()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e79a0e3805beb03c075ab9c59ea2fd3f85cbbe5" translate="yes" xml:space="preserve">
          <source>Another complication is that the representation used for the program differs if it needs to store Unicode, but it's not always possible to know for sure whether it does until midway through parsing. The Unicode representation for the program is larger, and cannot be matched as efficiently. (See &lt;a href=&quot;#Unicode-and-Localisation-Support&quot;&gt;Unicode and Localisation Support&lt;/a&gt; below for more details as to why.) If the pattern contains literal Unicode, it's obvious that the program needs to store Unicode. Otherwise, the parser optimistically assumes that the more efficient representation can be used, and starts sizing on this basis. However, if it then encounters something in the pattern which must be stored as Unicode, such as an &lt;code&gt;\x{...}&lt;/code&gt; escape sequence representing a character literal, then this means that all previously calculated sizes need to be redone, using values appropriate for the Unicode representation. Currently, all regular expression constructions which can trigger this are parsed by code in &lt;code&gt;regatom()&lt;/code&gt; .</source>
          <target state="translated">Otra complicaci&amp;oacute;n es que la representaci&amp;oacute;n utilizada para el programa difiere si necesita almacenar Unicode, pero no siempre es posible saber con certeza si lo hace hasta la mitad del an&amp;aacute;lisis. La representaci&amp;oacute;n Unicode del programa es m&amp;aacute;s grande y no se puede combinar con tanta eficacia. (Consulte &lt;a href=&quot;#Unicode-and-Localisation-Support&quot;&gt;Soporte de localizaci&amp;oacute;n y Unicode a&lt;/a&gt; continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles sobre el motivo). Si el patr&amp;oacute;n contiene Unicode literal, es obvio que el programa necesita almacenar Unicode. De lo contrario, el analizador asume de manera optimista que se puede usar la representaci&amp;oacute;n m&amp;aacute;s eficiente y comienza a dimensionar sobre esta base. Sin embargo, si luego encuentra algo en el patr&amp;oacute;n que debe almacenarse como Unicode, como un &lt;code&gt;\x{...}&lt;/code&gt; secuencia de escape que representa un car&amp;aacute;cter literal, entonces esto significa que todos los tama&amp;ntilde;os previamente calculados deben rehacerse, utilizando valores apropiados para la representaci&amp;oacute;n Unicode. Actualmente, todas las construcciones de expresiones regulares que pueden desencadenar esto se &lt;code&gt;regatom()&lt;/code&gt; mediante c&amp;oacute;digo en regatom () .</target>
        </trans-unit>
        <trans-unit id="8b313efb71a57a4464cb94a659a9e8b90c24250e" translate="yes" xml:space="preserve">
          <source>Another confusion with both these properties is that the definition is not that the code point has been</source>
          <target state="translated">Otra confusión con ambas propiedades es que la definición no es que el punto de código ha sido</target>
        </trans-unit>
        <trans-unit id="8de6445149b9f420296053261c9997adf2340600" translate="yes" xml:space="preserve">
          <source>Another consequence of using &lt;a href=&quot;#binmode-FILEHANDLE%2C-LAYER&quot;&gt;&lt;code&gt;binmode&lt;/code&gt;&lt;/a&gt; (on some systems) is that special end-of-file markers will be seen as part of the data stream. For systems from the Microsoft family this means that, if your binary data contain &lt;code&gt;\cZ&lt;/code&gt;, the I/O subsystem will regard it as the end of the file, unless you use &lt;a href=&quot;#binmode-FILEHANDLE%2C-LAYER&quot;&gt;&lt;code&gt;binmode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7643f36484ae100d2da2d3c144ef9dbeaed949e" translate="yes" xml:space="preserve">
          <source>Another consequence of using binmode() (on some systems) is that special end-of-file markers will be seen as part of the data stream. For systems from the Microsoft family this means that, if your binary data contain &lt;code&gt;\cZ&lt;/code&gt; , the I/O subsystem will regard it as the end of the file, unless you use binmode().</source>
          <target state="translated">Otra consecuencia de usar binmode () (en algunos sistemas) es que los marcadores especiales de fin de archivo se ver&amp;aacute;n como parte del flujo de datos. Para los sistemas de la familia Microsoft, esto significa que, si sus datos binarios contienen &lt;code&gt;\cZ&lt;/code&gt; , el subsistema de E / S lo considerar&amp;aacute; como el final del archivo, a menos que use binmode ().</target>
        </trans-unit>
        <trans-unit id="3cc44056a9f339f4466b010a8b6a440f514bb627" translate="yes" xml:space="preserve">
          <source>Another construct to be wary of is the inappropriate use of hex (unless you use &lt;code&gt;\N{U+...}&lt;/code&gt; ) or octal constants in regular expressions. Consider the following set of subs:</source>
          <target state="translated">Otra construcci&amp;oacute;n de la que hay que tener cuidado es el uso inapropiado de hexadecimal (a menos que use &lt;code&gt;\N{U+...}&lt;/code&gt; ) o constantes octales en expresiones regulares. Considere el siguiente conjunto de subs:</target>
        </trans-unit>
        <trans-unit id="4bdabce8c57375ff87d8b683a0b4feedd678dfa2" translate="yes" xml:space="preserve">
          <source>Another construct to be wary of is the inappropriate use of hex (unless you use &lt;code&gt;\N{U+...}&lt;/code&gt;) or octal constants in regular expressions. Consider the following set of subs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd580d9d1c12fa08ea2d8378d289e2825dd48a0c" translate="yes" xml:space="preserve">
          <source>Another description starts with notions of &quot;better&quot;/&quot;worse&quot;. All the substrings which may be matched by the given regular expression can be sorted from the &quot;best&quot; match to the &quot;worst&quot; match, and it is the &quot;best&quot; match which is chosen. This substitutes the question of &quot;what is chosen?&quot; by the question of &quot;which matches are better, and which are worse?&quot;.</source>
          <target state="translated">Otra descripción comienza con las nociones de &quot;mejor&quot;/&quot;peor&quot;.Todos los substratos que pueden coincidir con la expresión regular dada pueden ser ordenados de la &quot;mejor&quot; a la &quot;peor&quot; coincidencia,y es la &quot;mejor&quot; coincidencia la que se elige.Esto sustituye la pregunta de &quot;¿qué se elige?&quot; por la pregunta de &quot;¿qué coincidencias son mejores y cuáles son peores?&quot;.</target>
        </trans-unit>
        <trans-unit id="856a6f6c8652259321cab00a9ad8f033dc81e6f4" translate="yes" xml:space="preserve">
          <source>Another drawback is only valid for Perl versions before 5.6.0. This drawback is that the seek and tell functions (both the builtin version and POSIX module version) will not perform correctly.</source>
          <target state="translated">Otro inconveniente es válido sólo para las versiones de Perl anteriores a la 5.6.0.Este inconveniente es que las funciones de búsqueda y aviso (tanto la versión incorporada como la versión del módulo POSIX)no funcionarán correctamente.</target>
        </trans-unit>
        <trans-unit id="d8eeb28f49e1f9d89b4e036aaf71838ed7700dd9" translate="yes" xml:space="preserve">
          <source>Another dummy layer. When pushed it pops itself and sets the &lt;code&gt;PERLIO_F_UTF8&lt;/code&gt; flag on the layer which was (and now is once more) the top of the stack.</source>
          <target state="translated">Otra capa ficticia. Cuando se presiona, aparece y establece la bandera &lt;code&gt;PERLIO_F_UTF8&lt;/code&gt; en la capa que era (y ahora es una vez m&amp;aacute;s) la parte superior de la pila.</target>
        </trans-unit>
        <trans-unit id="d9e8985e4a56d117b356dcbeb0c42c3cbcba847b" translate="yes" xml:space="preserve">
          <source>Another example of a data paragraph:</source>
          <target state="translated">Otro ejemplo de un párrafo de datos:</target>
        </trans-unit>
        <trans-unit id="b5c62d28b9310748f7a00e0cde763766b0ceff47" translate="yes" xml:space="preserve">
          <source>Another example switched the first &quot;latin1&quot; encoding it finds to &quot;utf8&quot; in a pod file:</source>
          <target state="translated">Otro ejemplo cambió la primera codificación &quot;latin1&quot; que encuentra a &quot;utf8&quot; en un archivo pod:</target>
        </trans-unit>
        <trans-unit id="50f1426af11ad7a924141e38d176e901ed8b9c69" translate="yes" xml:space="preserve">
          <source>Another example that shows that within &lt;code&gt;\p{...}&lt;/code&gt;, &lt;code&gt;/x&lt;/code&gt; isn't needed to have spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedf5ccdeb6bf446ef7cfb01d8db4c4b042b2078" translate="yes" xml:space="preserve">
          <source>Another example:</source>
          <target state="translated">Otro ejemplo:</target>
        </trans-unit>
        <trans-unit id="ece934d7c44856dd3f545147d03b2aa737a1de6d" translate="yes" xml:space="preserve">
          <source>Another form of code expression is the</source>
          <target state="translated">Otra forma de expresión de código es la</target>
        </trans-unit>
        <trans-unit id="48b78ab1e531e9b3794c2d43c0589ca792ae0b42" translate="yes" xml:space="preserve">
          <source>Another form of optimisation that can occur is the post-parse &quot;peep-hole&quot; optimisation, where inefficient constructs are replaced by more efficient constructs. The &lt;code&gt;TAIL&lt;/code&gt; regops which are used during parsing to mark the end of branches and the end of groups are examples of this. These regops are used as place-holders during construction and &quot;always match&quot; so they can be &quot;optimised away&quot; by making the things that point to the &lt;code&gt;TAIL&lt;/code&gt; point to the thing that &lt;code&gt;TAIL&lt;/code&gt; points to, thus &quot;skipping&quot; the node.</source>
          <target state="translated">Otra forma de optimizaci&amp;oacute;n que puede ocurrir es la optimizaci&amp;oacute;n de &quot;mirilla&quot; posterior al an&amp;aacute;lisis, donde las construcciones ineficientes son reemplazadas por construcciones m&amp;aacute;s eficientes. Las repeticiones de &lt;code&gt;TAIL&lt;/code&gt; que se utilizan durante el an&amp;aacute;lisis para marcar el final de las ramas y el final de los grupos son ejemplos de esto. Estos regops se utilizan como marcadores de posici&amp;oacute;n durante la construcci&amp;oacute;n y &quot;siempre coinciden&quot; para que puedan &quot;optimizarse&quot; haciendo que las cosas que apuntan a &lt;code&gt;TAIL&lt;/code&gt; apunten a lo que &lt;code&gt;TAIL&lt;/code&gt; apunta, &quot;saltando&quot; el nodo.</target>
        </trans-unit>
        <trans-unit id="6a81857ae4b443a44f359782c057cbbbeb457048" translate="yes" xml:space="preserve">
          <source>Another good reason in addition to readability and maintainability for using relative backreferences is illustrated by the following example, where a simple pattern for matching peculiar strings is used:</source>
          <target state="translated">Otra buena razón,además de la legibilidad y la facilidad de mantenimiento,para utilizar referencias retrospectivas relativas se ilustra en el siguiente ejemplo,en el que se utiliza una pauta sencilla para hacer coincidir cadenas peculiares:</target>
        </trans-unit>
        <trans-unit id="bfac64b9584bc828981db16d0cc4e6658be646cc" translate="yes" xml:space="preserve">
          <source>Another interesting approach to IPC is making your single program go multiprocess and communicate between--or even amongst--yourselves. The open() function will accept a file argument of either &lt;code&gt;&quot;-|&quot;&lt;/code&gt; or &lt;code&gt;&quot;|-&quot;&lt;/code&gt; to do a very interesting thing: it forks a child connected to the filehandle you've opened. The child is running the same program as the parent. This is useful for safely opening a file when running under an assumed UID or GID, for example. If you open a pipe</source>
          <target state="translated">Otro enfoque interesante de IPC es hacer que su &amp;uacute;nico programa sea multiproceso y se comunique entre ustedes, o incluso entre ellos. La funci&amp;oacute;n open () aceptar&amp;aacute; un argumento de archivo de &lt;code&gt;&quot;-|&quot;&lt;/code&gt; o &lt;code&gt;&quot;|-&quot;&lt;/code&gt; para hacer algo muy interesante: bifurca a un ni&amp;ntilde;o conectado al identificador de archivo que ha abierto. El ni&amp;ntilde;o ejecuta el mismo programa que el padre. Esto es &amp;uacute;til para abrir de forma segura un archivo cuando se ejecuta bajo un UID o GID supuesto, por ejemplo. Si abres una pipa</target>
        </trans-unit>
        <trans-unit id="4522d51a25407d48caa1899497ae3f892458c192" translate="yes" xml:space="preserve">
          <source>Another interesting approach to IPC is making your single program go multiprocess and communicate between--or even amongst--yourselves. The two-argument form of the open() function will accept a file argument of either &lt;code&gt;&quot;-|&quot;&lt;/code&gt; or &lt;code&gt;&quot;|-&quot;&lt;/code&gt; to do a very interesting thing: it forks a child connected to the filehandle you've opened. The child is running the same program as the parent. This is useful for safely opening a file when running under an assumed UID or GID, for example. If you open a pipe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075cc903bac6f7e2aa6bd64ab5e44c58b488750c" translate="yes" xml:space="preserve">
          <source>Another interesting signal to send is signal number zero. This doesn't actually affect a child process, but instead checks whether it's alive or has changed its UIDs.</source>
          <target state="translated">Otra señal interesante para enviar es la señal número cero.Esto no afecta realmente a un proceso infantil,sino que comprueba si está vivo o ha cambiado su UID.</target>
        </trans-unit>
        <trans-unit id="5625c9da79ea74fa11d7487b4856a60b8a448f5c" translate="yes" xml:space="preserve">
          <source>Another interface for querying locale-dependent information is the &lt;code&gt;I18N::Langinfo::langinfo()&lt;/code&gt; function, available at least in Unix-like systems and VMS.</source>
          <target state="translated">Otra interfaz para consultar informaci&amp;oacute;n dependiente de la configuraci&amp;oacute;n regional es la funci&amp;oacute;n &lt;code&gt;I18N::Langinfo::langinfo()&lt;/code&gt; , disponible al menos en sistemas tipo Unix y VMS.</target>
        </trans-unit>
        <trans-unit id="b2c6ea999a64bd42bd0c393eb0d4d13d68bfe00e" translate="yes" xml:space="preserve">
          <source>Another interface for querying locale-dependent information is the &lt;code&gt;I18N::Langinfo::langinfo()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0169360cab902c54c29d1ed679e73f96ea0a5a" translate="yes" xml:space="preserve">
          <source>Another is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdba3e1788bc415b19d9a9a11cdf704cabf535e" translate="yes" xml:space="preserve">
          <source>Another kind of client-server setup is one that uses not connections, but messages. UDP communications involve much lower overhead but also provide less reliability, as there are no promises that messages will arrive at all, let alone in order and unmangled. Still, UDP offers some advantages over TCP, including being able to &quot;broadcast&quot; or &quot;multicast&quot; to a whole bunch of destination hosts at once (usually on your local subnet). If you find yourself overly concerned about reliability and start building checks into your message system, then you probably should use just TCP to start with.</source>
          <target state="translated">Otro tipo de configuración cliente-servidor es el que no utiliza conexiones,sino mensajes.Las comunicaciones UDP implican una sobrecarga mucho menor pero también proporcionan menos fiabilidad,ya que no hay promesas de que los mensajes lleguen en absoluto,y mucho menos en orden y sin manipular.Aún así,UDP ofrece algunas ventajas sobre TCP,incluyendo la posibilidad de &quot;transmitir&quot; o &quot;multidifusión&quot; a un montón de hosts de destino a la vez (normalmente en su subred local).Si se encuentra excesivamente preocupado por la fiabilidad y empieza a construir comprobaciones en su sistema de mensajes,entonces probablemente debería utilizar sólo TCP para empezar.</target>
        </trans-unit>
        <trans-unit id="15bc936b8bd7810df3b41eba0889fe66dfa9061e" translate="yes" xml:space="preserve">
          <source>Another memory limiting item to check is your MAXASSIZE parameter in your 'SYS1.PARMLIB(BPXPRMxx)' data set (note too that as of V2R8 address space limits can be set on a per user ID basis in the USS segment of a RACF profile). People have reported successful builds of Perl with MAXASSIZE parameters as small as 503316480 (and it may be possible to build Perl with a MAXASSIZE smaller than that).</source>
          <target state="translated">Otro elemento de limitación de memoria a comprobar es el parámetro MAXASSIZE en su conjunto de datos 'SYS1.PARMLIB(BPXPRMxx)' (nótese también que a partir de V2R8 los límites de espacio de direcciones pueden establecerse en base a la identificación de cada usuario en el segmento USS de un perfil RACF).Se ha informado de que se han realizado con éxito construcciones de Perl con parámetros MAXASSIZE tan pequeños como 503316480 (y tal vez sea posible construir Perl con un MAXASSIZE más pequeño que ese).</target>
        </trans-unit>
        <trans-unit id="7f12c23dd22baed9e55a21bc829f2cdbb2990e89" translate="yes" xml:space="preserve">
          <source>Another mnemonic for this modifier is &quot;Depends&quot;, as the rules actually used depend on various things, and as a result you can get unexpected results. See &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;&quot;The &quot;Unicode Bug&quot;&quot; in perlunicode&lt;/a&gt;. The Unicode Bug has become rather infamous, leading to yet another (without swearing) name for this modifier, &quot;Dodgy&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce05ce9dfc0d776de0b8b42183a9011dbca61f46" translate="yes" xml:space="preserve">
          <source>Another mnemonic for this modifier is &quot;Depends&quot;, as the rules actually used depend on various things, and as a result you can get unexpected results. See &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug in perlunicode&lt;/a&gt;. The Unicode Bug has become rather infamous, leading to yet another (printable) name for this modifier, &quot;Dodgy&quot;.</source>
          <target state="translated">Otro mnem&amp;oacute;nico para este modificador es &quot;Depende&quot;, ya que las reglas realmente utilizadas dependen de varias cosas y, como resultado, puede obtener resultados inesperados. Consulte &lt;a href=&quot;perlunicode#The-%22Unicode-Bug%22&quot;&gt;El error Unicode en perlunicode&lt;/a&gt; . El error Unicode se ha vuelto bastante infame, lo que lleva a otro nombre (imprimible) para este modificador, &quot;Dodgy&quot;.</target>
        </trans-unit>
        <trans-unit id="df7cbfe3fb975c17e692f6a855e0332ef03824f0" translate="yes" xml:space="preserve">
          <source>Another nonstandard extension to the JSON syntax, enabled with the &lt;code&gt;allow_tags&lt;/code&gt; setting, are tagged values. In this implementation, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfb16782780267975128af9b462f0c7f8f09971" translate="yes" xml:space="preserve">
          <source>Another odd-man-out in the template alphabet is &lt;code&gt;u&lt;/code&gt; , which packs a &quot;uuencoded string&quot;. (&quot;uu&quot; is short for Unix-to-Unix.) Chances are that you won't ever need this encoding technique which was invented to overcome the shortcomings of old-fashioned transmission mediums that do not support other than simple ASCII data. The essential recipe is simple: Take three bytes, or 24 bits. Split them into 4 six-packs, adding a space (0x20) to each. Repeat until all of the data is blended. Fold groups of 4 bytes into lines no longer than 60 and garnish them in front with the original byte count (incremented by 0x20) and a &lt;code&gt;&quot;\n&quot;&lt;/code&gt; at the end. - The &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; chef will prepare this for you, a la minute, when you select pack code &lt;code&gt;u&lt;/code&gt; on the menu:</source>
          <target state="translated">Otro extra&amp;ntilde;o en el alfabeto de la plantilla es &lt;code&gt;u&lt;/code&gt; , que incluye una &quot;cadena codificada en uuen&quot;. (&quot;uu&quot; es la abreviatura de Unix-to-Unix). Lo m&amp;aacute;s probable es que nunca necesite esta t&amp;eacute;cnica de codificaci&amp;oacute;n que fue inventada para superar las deficiencias de los medios de transmisi&amp;oacute;n anticuados que no admiten otros datos que no sean simples ASCII. La receta esencial es simple: tome tres bytes o 24 bits. Div&amp;iacute;dalos en 4 paquetes de seis, agregando un espacio (0x20) a cada uno. Repita hasta que se mezclen todos los datos. Doble grupos de 4 bytes en l&amp;iacute;neas de no m&amp;aacute;s de 60 y ad&amp;oacute;rnelos al frente con el n&amp;uacute;mero de bytes original (incrementado en 0x20) y un &lt;code&gt;&quot;\n&quot;&lt;/code&gt; al final. - El chef del &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; preparar&amp;aacute; esto para usted, un minuto, cuando seleccione el c&amp;oacute;digo de paquete &lt;code&gt;u&lt;/code&gt; en el men&amp;uacute;:</target>
        </trans-unit>
        <trans-unit id="0815afa133e3357f3c224c29010f1fab6f9eb77d" translate="yes" xml:space="preserve">
          <source>Another odd-man-out in the template alphabet is &lt;code&gt;u&lt;/code&gt;, which packs a &quot;uuencoded string&quot;. (&quot;uu&quot; is short for Unix-to-Unix.) Chances are that you won't ever need this encoding technique which was invented to overcome the shortcomings of old-fashioned transmission mediums that do not support other than simple ASCII data. The essential recipe is simple: Take three bytes, or 24 bits. Split them into 4 six-packs, adding a space (0x20) to each. Repeat until all of the data is blended. Fold groups of 4 bytes into lines no longer than 60 and garnish them in front with the original byte count (incremented by 0x20) and a &lt;code&gt;&quot;\n&quot;&lt;/code&gt; at the end. - The &lt;code&gt;pack&lt;/code&gt; chef will prepare this for you, a la minute, when you select pack code &lt;code&gt;u&lt;/code&gt; on the menu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b90d55edc9bd711b381039fe4df0f81ca8e910" translate="yes" xml:space="preserve">
          <source>Another operator with surprising precedence is exponentiation. It binds more tightly even than unary minus, making &lt;code&gt;-2**2&lt;/code&gt; produce a negative four and not a positive one. It is also right-associating, meaning that &lt;code&gt;2**3**2&lt;/code&gt; is two raised to the ninth power, not eight squared.</source>
          <target state="translated">Otro operador con sorprendente precedencia es la exponenciaci&amp;oacute;n. Se une m&amp;aacute;s estrechamente incluso que el menos unario, haciendo que &lt;code&gt;-2**2&lt;/code&gt; produzca un cuatro negativo y no uno positivo. Tambi&amp;eacute;n se asocia a la derecha, lo que significa que &lt;code&gt;2**3**2&lt;/code&gt; es dos elevado a la novena potencia, no ocho al cuadrado.</target>
        </trans-unit>
        <trans-unit id="0a8ead7308fc061719df6bc244f6348d6cfaf232" translate="yes" xml:space="preserve">
          <source>Another optimisation that can occur is that of &quot;&lt;code&gt;EXACT&lt;/code&gt; merging&quot; which is where two consecutive &lt;code&gt;EXACT&lt;/code&gt; nodes are merged into a single regop. An even more aggressive form of this is that a branch sequence of the form &lt;code&gt;EXACT BRANCH ... EXACT&lt;/code&gt; can be converted into a &lt;code&gt;TRIE-EXACT&lt;/code&gt; regop.</source>
          <target state="translated">Otra optimizaci&amp;oacute;n que puede ocurrir es el de &quot; &lt;code&gt;EXACT&lt;/code&gt; fusi&amp;oacute;n&quot;, que es la que dos consecutivos &lt;code&gt;EXACT&lt;/code&gt; linf&amp;aacute;ticos se fusionan en un solo regop. Una forma a&amp;uacute;n m&amp;aacute;s agresiva de esto es que una secuencia de rama de la forma &lt;code&gt;EXACT BRANCH ... EXACT&lt;/code&gt; puede convertirse en una &lt;code&gt;TRIE-EXACT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd2c2ceaa1b82e7064a95fc5a1daa0bbc069a63f" translate="yes" xml:space="preserve">
          <source>Another option for Perls starting with 5.16, if you only care about ASCII matches, is to add the &lt;code&gt;/aa&lt;/code&gt; modifier to the regex. This will exclude all these non-obvious matches, thus getting rid of this message. You can also say</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aabd99f333ab712e259e5fbe14c5365c3fb3eb5" translate="yes" xml:space="preserve">
          <source>Another option is to use the &lt;code&gt;iter&lt;/code&gt; class method to iterate over the files in the tarball without reading them all in memory at once.</source>
          <target state="translated">Otra opci&amp;oacute;n es usar el m&amp;eacute;todo de la clase &lt;code&gt;iter&lt;/code&gt; para iterar sobre los archivos en el tarball sin leerlos todos en la memoria a la vez.</target>
        </trans-unit>
        <trans-unit id="82d37f84faabd12d777cc2ff160de45bc66b098d" translate="yes" xml:space="preserve">
          <source>Another option is to use the make written in Perl, available from CPAN.</source>
          <target state="translated">Otra opción es usar la marca escrita en Perl,disponible en el CPAN.</target>
        </trans-unit>
        <trans-unit id="655a86d88b6839dd2179128ff91b78ce22ba6c96" translate="yes" xml:space="preserve">
          <source>Another peculiarity of urllist is that the site that we could successfully fetch the last file from automatically gets a preference token and is tried as the first site for the next request. So if you add a new site at runtime it may happen that the previously preferred site will be tried another time. This means that if you want to disallow a site for the next transfer, it must be explicitly removed from urllist.</source>
          <target state="translated">Otra peculiaridad de urllist es que el sitio del que pudimos obtener con éxito el último archivo obtiene automáticamente un token de preferencia y se prueba como el primer sitio para la siguiente solicitud.Así que si se añade un nuevo sitio en tiempo de ejecución puede ocurrir que el sitio preferido anteriormente se intente en otra ocasión.Esto significa que si quieres rechazar un sitio para la siguiente transferencia,debe ser explícitamente eliminado de la lista de direcciones.</target>
        </trans-unit>
        <trans-unit id="ce6cb12c61e008cd3f2b006405f6306cfa9808f3" translate="yes" xml:space="preserve">
          <source>Another point worth noting is that in the first series of examples I have made use of only the</source>
          <target state="translated">Otro punto que vale la pena señalar es que en la primera serie de ejemplos he utilizado sólo la</target>
        </trans-unit>
        <trans-unit id="4398365ad3174110f099b9553fe6a9ab1f982409" translate="yes" xml:space="preserve">
          <source>Another popular use for &lt;code&gt;recompile&lt;/code&gt; is to act as a rescue in case your perl breaks binary compatibility. If one of the modules that CPAN uses is in turn depending on binary compatibility (so you cannot run CPAN commands), then you should try the CPAN::Nox module for recovery.</source>
          <target state="translated">Otro uso popular de la &lt;code&gt;recompile&lt;/code&gt; es actuar como un rescate en caso de que su perl rompa la compatibilidad binaria. Si uno de los m&amp;oacute;dulos que usa CPAN depende a su vez de la compatibilidad binaria (por lo que no puede ejecutar comandos CPAN), entonces debe probar el m&amp;oacute;dulo CPAN :: Nox para la recuperaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9d8cd00450b93b9762fe1f4860bcee6a18ea20de" translate="yes" xml:space="preserve">
          <source>Another possibility is that you forgot a backslash. Perl isn't smart enough to figure out what you really meant.</source>
          <target state="translated">Otra posibilidad es que hayas olvidado una barra invertida.Perl no es lo suficientemente listo para entender lo que realmente quieres decir.</target>
        </trans-unit>
        <trans-unit id="385e095c764654e0fb183ec8deedb8c0e3232a76" translate="yes" xml:space="preserve">
          <source>Another possible reason for problems is that you've used the indirect object syntax (eg, &lt;code&gt;find Guru &quot;Samy&quot;&lt;/code&gt; ) on a class name before Perl has seen that such a package exists. It's wisest to make sure your packages are all defined before you start using them, which will be taken care of if you use the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement instead of &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;. If not, make sure to use arrow notation (eg., &lt;code&gt;Guru-&amp;gt;find(&quot;Samy&quot;)&lt;/code&gt; ) instead. Object notation is explained in &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">Otra posible raz&amp;oacute;n de los problemas es que ha utilizado la sintaxis de objeto indirecto (por ejemplo, &lt;code&gt;find Guru &quot;Samy&quot;&lt;/code&gt; ) en un nombre de clase antes de que Perl haya visto que tal paquete existe. Es m&amp;aacute;s prudente asegurarse de que todos sus paquetes est&amp;eacute;n definidos antes de comenzar a usarlos, lo que se solucionar&amp;aacute; si usa la declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; lugar de &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; . De lo contrario, aseg&amp;uacute;rese de utilizar la notaci&amp;oacute;n de flechas (por ejemplo, &lt;code&gt;Guru-&amp;gt;find(&quot;Samy&quot;)&lt;/code&gt; ) en su lugar. La notaci&amp;oacute;n de objetos se explica en &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb10e4ab85598fb1febe5de364db832f8ae6b33d" translate="yes" xml:space="preserve">
          <source>Another possible reason for problems is that you've used the indirect object syntax (eg, &lt;code&gt;find Guru &quot;Samy&quot;&lt;/code&gt;) on a class name before Perl has seen that such a package exists. It's wisest to make sure your packages are all defined before you start using them, which will be taken care of if you use the &lt;code&gt;use&lt;/code&gt; statement instead of &lt;code&gt;require&lt;/code&gt;. If not, make sure to use arrow notation (eg., &lt;code&gt;Guru-&amp;gt;find(&quot;Samy&quot;)&lt;/code&gt;) instead. Object notation is explained in &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c972997167e011df9a56046ecd4a5023cc5037ca" translate="yes" xml:space="preserve">
          <source>Another problem that occurs with inside-out classes is serialization. Since the object data is not in its usual place, standard routines like &lt;code&gt;Storable::freeze()&lt;/code&gt; , &lt;code&gt;Storable::thaw()&lt;/code&gt; and &lt;code&gt;Data::Dumper::Dumper()&lt;/code&gt; can't deal with it on their own. Both &lt;code&gt;Data::Dumper&lt;/code&gt; and &lt;code&gt;Storable&lt;/code&gt; provide the necessary hooks to make things work, but the functions or methods used by the hooks must be provided by each inside-out class.</source>
          <target state="translated">Otro problema que ocurre con las clases de adentro hacia afuera es la serializaci&amp;oacute;n. Dado que los datos del objeto no est&amp;aacute;n en su lugar habitual, las rutinas est&amp;aacute;ndar como &lt;code&gt;Storable::freeze()&lt;/code&gt; , &lt;code&gt;Storable::thaw()&lt;/code&gt; y &lt;code&gt;Data::Dumper::Dumper()&lt;/code&gt; no pueden manejarlo por s&amp;iacute; mismas. Tanto &lt;code&gt;Data::Dumper&lt;/code&gt; como &lt;code&gt;Storable&lt;/code&gt; proporcionan los ganchos necesarios para que las cosas funcionen, pero las funciones o m&amp;eacute;todos utilizados por los ganchos deben ser proporcionados por cada clase de adentro hacia afuera.</target>
        </trans-unit>
        <trans-unit id="0ea375285a64fb396aba7ed50ea3def9a1613d41" translate="yes" xml:space="preserve">
          <source>Another problem that occurs with inside-out classes is serialization. Since the object data is not in its usual place, standard routines like &lt;code&gt;Storable::freeze()&lt;/code&gt;, &lt;code&gt;Storable::thaw()&lt;/code&gt; and &lt;code&gt;Data::Dumper::Dumper()&lt;/code&gt; can't deal with it on their own. Both &lt;code&gt;Data::Dumper&lt;/code&gt; and &lt;code&gt;Storable&lt;/code&gt; provide the necessary hooks to make things work, but the functions or methods used by the hooks must be provided by each inside-out class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4838334963e3cee1c557a4f6afcd664375d054be" translate="yes" xml:space="preserve">
          <source>Another problem with this approach is that operations that cross the single byte/multiple byte boundary are not well-defined, and so are disallowed. (This boundary is between the codepoints at 255/256.) For example, lower casing LATIN CAPITAL LETTER Y WITH DIAERESIS (U+0178) should return LATIN SMALL LETTER Y WITH DIAERESIS (U+00FF). But in the Greek locale, for example, there is no character at 0xFF, and Perl has no way of knowing what the character at 0xFF is really supposed to represent. Thus it disallows the operation. In this mode, the lowercase of U+0178 is itself.</source>
          <target state="translated">Otro problema de este enfoque es que las operaciones que cruzan el límite de un solo byte/múltiples bytes no están bien definidas,por lo que no se permiten.(Este límite está entre los puntos de código en 255/256.)Por ejemplo,la carcasa inferior LATIN CAPITAL LETTER Y WITH DIAERESIS (U+0178)debería devolver LATIN SMALL LETTER Y WITH DIAERESIS (U+00FF).Pero en la localidad griega,por ejemplo,no hay ningún personaje en 0xFF,y Perl no tiene forma de saber qué se supone que representa realmente el personaje en 0xFF.Por lo tanto,no permite la operación.En este modo,la minúscula de U+0178 es en sí misma.</target>
        </trans-unit>
        <trans-unit id="e3482e337a3d87721af4bdffd6d9b7cb27fdfc8f" translate="yes" xml:space="preserve">
          <source>Another reason it isn't completely a drop-in replacement is that it is declared to return &lt;code&gt;const char *&lt;/code&gt;, whereas the system setlocale omits the &lt;code&gt;const&lt;/code&gt; (presumably because its API was specified long ago, and can't be updated; it is illegal to change the information &lt;code&gt;setlocale&lt;/code&gt; returns; doing so leads to segfaults.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d25e58d1b57cecb55c387a5dd5c52709e7a7cf9" translate="yes" xml:space="preserve">
          <source>Another reason that folks sometimes think they want a variable to contain the name of a variable is that they don't know how to build proper data structures using hashes. For example, let's say they wanted two hashes in their program: %fred and %barney, and that they wanted to use another scalar variable to refer to those by name.</source>
          <target state="translated">Otra razón por la que la gente a veces piensa que quiere que una variable contenga el nombre de una variable es que no saben cómo construir estructuras de datos adecuadas utilizando hashes.Por ejemplo,digamos que quieren dos hashes en su programa:%fred y %barney,y que quisieran usar otra variable escalar para referirse a ellas por su nombre.</target>
        </trans-unit>
        <trans-unit id="0421a2fa7b166fbdb782231a9f8dbd1fd87115e8" translate="yes" xml:space="preserve">
          <source>Another reason to use &lt;code&gt;HASH&lt;/code&gt; is to provide your own hash variable. You can then inspect or modify the contents of the hash to gain finer control over the cache management.</source>
          <target state="translated">Otra raz&amp;oacute;n para usar &lt;code&gt;HASH&lt;/code&gt; es proporcionar su propia variable hash. Luego, puede inspeccionar o modificar el contenido del hash para obtener un control m&amp;aacute;s preciso sobre la administraci&amp;oacute;n de la cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="1d033aa9337856f2221026f5c7e24c794df0edbb" translate="yes" xml:space="preserve">
          <source>Another sample module, &lt;a href=&quot;Memoize::Saves&quot;&gt;Memoize::Saves&lt;/a&gt;, is available in a separate distribution on CPAN. It implements a policy that allows you to specify that certain function values would always be looked up afresh. See the documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8bed8e10e25cfa736414741ddf1e9e2d2b9072" translate="yes" xml:space="preserve">
          <source>Another sample module, &lt;a href=&quot;http://search.cpan.org/perldoc/Memoize::Saves&quot;&gt;Memoize::Saves&lt;/a&gt;, is available in a separate distribution on CPAN. It implements a policy that allows you to specify that certain function values would always be looked up afresh. See the documentation for details.</source>
          <target state="translated">Otro m&amp;oacute;dulo de muestra, &lt;a href=&quot;http://search.cpan.org/perldoc/Memoize::Saves&quot;&gt;Memoize :: Saves&lt;/a&gt; , est&amp;aacute; disponible en una distribuci&amp;oacute;n separada en CPAN. Implementa una pol&amp;iacute;tica que le permite especificar que ciertos valores de funci&amp;oacute;n siempre se buscar&amp;aacute;n de nuevo. Consulte la documentaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="5d1b15340e7ecbdf1f65260c165ba0bcb3105f71" translate="yes" xml:space="preserve">
          <source>Another subtle error that can occur in resolving prerequisites comes from the way that modules in prerequisites are indexed to distribution files on CPAN. When a module is deleted from a distribution, prerequisites calling for that module could indicate an older distribution should be installed, potentially overwriting files from a newer distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67a475c6b156df5eac51c84854028a80181079b" translate="yes" xml:space="preserve">
          <source>Another thing to try is learning whether your Perl was compiled with the system malloc or with Perl's builtin malloc. Whichever one it is, try using the other one and see whether this makes a difference. Information about malloc is in the</source>
          <target state="translated">Otra cosa que hay que intentar es aprender si tu Perl fue compilado con el malloqueo del sistema o con el malloqueo construido de Perl.Sea cual sea,intenta usar el otro y mira si esto hace una diferencia.La información sobre el malloqueo está en el</target>
        </trans-unit>
        <trans-unit id="a1cb48749447600d090febf98d3e4d0e00ee484e" translate="yes" xml:space="preserve">
          <source>Another thing you should bear in mind is that the UNINST parameter can be dangerous when you are installing into a private area because you might accidentally remove modules that other people depend on that are not using the private area.</source>
          <target state="translated">Otra cosa que debes tener en cuenta es que el parámetro UNINST puede ser peligroso cuando estás instalando en un área privada porque podrías quitar accidentalmente los módulos de los que dependen otras personas que no están usando el área privada.</target>
        </trans-unit>
        <trans-unit id="254082198376f41ade29efc6ce1df2a3ebdfd235" translate="yes" xml:space="preserve">
          <source>Another thorough remedy to that runtime vs. compile-time trap is to use &lt;a href=&quot;Exporter::Easy&quot;&gt;Exporter::Easy&lt;/a&gt;, which is a wrapper of Exporter that allows all boilerplate code at a single gulp in the use statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7600b26c92e308f5a7b9737781947f5e033b05" translate="yes" xml:space="preserve">
          <source>Another thorough remedy to that runtime vs. compile-time trap is to use &lt;a href=&quot;http://search.cpan.org/perldoc/Exporter::Easy&quot;&gt;Exporter::Easy&lt;/a&gt;, which is a wrapper of Exporter that allows all boilerplate code at a single gulp in the use statement.</source>
          <target state="translated">Otro remedio completo para esa trampa en tiempo de ejecuci&amp;oacute;n versus tiempo de compilaci&amp;oacute;n es usar &lt;a href=&quot;http://search.cpan.org/perldoc/Exporter::Easy&quot;&gt;Exporter :: Easy&lt;/a&gt; , que es un contenedor de Exporter que permite todo el c&amp;oacute;digo repetitivo de un solo trago en la declaraci&amp;oacute;n de uso.</target>
        </trans-unit>
        <trans-unit id="8f128db16727c4206b263e3f2e5e2f91028aada1" translate="yes" xml:space="preserve">
          <source>Another typical use of redispatch would be in &lt;code&gt;AUTOLOAD&lt;/code&gt; 'ed methods. If such a method determined that it was not able to handle a particular call, it might choose to redispatch that call, in the hope that some other &lt;code&gt;AUTOLOAD&lt;/code&gt; (above it, or to its left) might do better.</source>
          <target state="translated">Otro uso t&amp;iacute;pico de redispatch ser&amp;iacute;a en los m&amp;eacute;todos ed de &lt;code&gt;AUTOLOAD&lt;/code&gt; . Si tal m&amp;eacute;todo determina que no es capaz de manejar una llamada en particular, podr&amp;iacute;a optar por volver a enviar esa llamada, con la esperanza de que alg&amp;uacute;n otro &lt;code&gt;AUTOLOAD&lt;/code&gt; (arriba de &amp;eacute;l, o a su izquierda) pueda hacerlo mejor.</target>
        </trans-unit>
        <trans-unit id="c4228b8c62bb634355292e1e3ac8e4544658301e" translate="yes" xml:space="preserve">
          <source>Another typical use of redispatch would be in &lt;code&gt;AUTOLOAD&lt;/code&gt;'ed methods. If such a method determined that it was not able to handle a particular call, it might choose to redispatch that call, in the hope that some other &lt;code&gt;AUTOLOAD&lt;/code&gt; (above it, or to its left) might do better.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f35e8d306941d11adce5505a92ca2044351acf" translate="yes" xml:space="preserve">
          <source>Another unofficial source of data. Currently, it is not used to get data, but the notes and explanatory material were very useful for understanding discrepancies between the sources.</source>
          <target state="translated">Otra fuente de datos no oficial.Actualmente no se utiliza para obtener datos,pero las notas y el material explicativo fueron muy útiles para comprender las discrepancias entre las fuentes.</target>
        </trans-unit>
        <trans-unit id="a159ba74ceaa166e4b6d8831134290b3cd8265be" translate="yes" xml:space="preserve">
          <source>Another use for &lt;code&gt;MERGE&lt;/code&gt; is when you want both kinds of return values stored in the same disk file; this saves you from having to deal with two disk files instead of one. You can use a normalizer function to keep the two sets of return values separate. For example:</source>
          <target state="translated">Otro uso de &lt;code&gt;MERGE&lt;/code&gt; es cuando desea que ambos tipos de valores de retorno se almacenen en el mismo archivo de disco; esto le evita tener que lidiar con dos archivos de disco en lugar de uno. Puede utilizar una funci&amp;oacute;n de normalizaci&amp;oacute;n para mantener separados los dos conjuntos de valores de retorno. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="3dd7e16e7ef3fb6df50c7af26f6bc9d68c338053" translate="yes" xml:space="preserve">
          <source>Another use for a closure is to make a variable</source>
          <target state="translated">Otro uso de un cierre es hacer que una variable</target>
        </trans-unit>
        <trans-unit id="5cec4425942c518509d1fda3df7b77a63ebbfefa" translate="yes" xml:space="preserve">
          <source>Another use for escape sequences is to specify characters that cannot (or which you prefer not to) be written literally. These are described in detail in &lt;a href=&quot;perlrebackslash#Character-Escapes&quot;&gt;&quot;Character Escapes&quot; in perlrebackslash&lt;/a&gt;, but the next three paragraphs briefly describe some of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46f51ca5d9afdb7291b96d0559a5eecba4e7c63" translate="yes" xml:space="preserve">
          <source>Another use for normalizers is when the function depends on data other than those in its arguments. Suppose you have a function which returns a value which depends on the current hour of the day:</source>
          <target state="translated">Otro uso de los normalizadores es cuando la función depende de datos distintos a los de sus argumentos.Supongamos que tienes una función que devuelve un valor que depende de la hora actual del día:</target>
        </trans-unit>
        <trans-unit id="62444c7bc781846313fe8302369f08d7688eae95" translate="yes" xml:space="preserve">
          <source>Another use for the INIT: section is to check for preconditions before making a call to the C function:</source>
          <target state="translated">Otro uso de la sección INIT:es comprobar las condiciones previas antes de hacer una llamada a la función C:</target>
        </trans-unit>
        <trans-unit id="3a9f1ae19985a41ad9db3a10b2882d84afcc8d3c" translate="yes" xml:space="preserve">
          <source>Another use for typeglobs is to pass filehandles into a function or to create new filehandles. If you need to use a typeglob to save away a filehandle, do it this way:</source>
          <target state="translated">Otro uso de las glóbulos rojos es pasar los mangos de archivos a una función o crear nuevos mangos de archivos.Si necesitas usar un typeglob para guardar un filehandle,hazlo de esta manera:</target>
        </trans-unit>
        <trans-unit id="bd85fb00e79bd02a66b771e2ae402c322124bc55" translate="yes" xml:space="preserve">
          <source>Another use is to indicate that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385eea7f2546356b9012fe969f08ace72fffebdd" translate="yes" xml:space="preserve">
          <source>Another use of symbol tables is for making &quot;constant&quot; scalars.</source>
          <target state="translated">Otro uso de las tablas de símbolos es para hacer escalares &quot;constantes&quot;.</target>
        </trans-unit>
        <trans-unit id="7e444bc856c81853904c1c90381dc826b2163cfa" translate="yes" xml:space="preserve">
          <source>Another use of the generic object would be as a template. It is a convenient place to store class-specific defaults for various fields to be used in actual object initialization.</source>
          <target state="translated">Otro uso del objeto genérico sería como plantilla.Es un lugar conveniente para almacenar los valores por defecto específicos de la clase para varios campos que se utilizarán en la inicialización del objeto real.</target>
        </trans-unit>
        <trans-unit id="03d707d0fcf79e0d7b50ca27287f1758fef3a3d9" translate="yes" xml:space="preserve">
          <source>Another useful shortcut is that, if you use a literal array or hash as the argument to &lt;code&gt;given&lt;/code&gt; , it is turned into a reference. So &lt;code&gt;given(@foo)&lt;/code&gt; is the same as &lt;code&gt;given(\@foo)&lt;/code&gt; , for example.</source>
          <target state="translated">Otro atajo &amp;uacute;til es que, si usa una matriz literal o hash como argumento para &lt;code&gt;given&lt;/code&gt; , se convierte en una referencia. Entonces, &lt;code&gt;given(@foo)&lt;/code&gt; es lo mismo que &lt;code&gt;given(\@foo)&lt;/code&gt; , por ejemplo.</target>
        </trans-unit>
        <trans-unit id="cc6a78b5df54e2e6affa44db83d9141a9a6580a8" translate="yes" xml:space="preserve">
          <source>Another useful shortcut is that, if you use a literal array or hash as the argument to &lt;code&gt;given&lt;/code&gt;, it is turned into a reference. So &lt;code&gt;given(@foo)&lt;/code&gt; is the same as &lt;code&gt;given(\@foo)&lt;/code&gt;, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a05112cda91b50dc34bb4913074b7fa53fabce3" translate="yes" xml:space="preserve">
          <source>Another variation on a theme. This time we will modify the &lt;code&gt;Subst&lt;/code&gt; filter to allow a starting and stopping pattern to be specified as well as the</source>
          <target state="translated">Otra variaci&amp;oacute;n de un tema. Esta vez modificaremos el filtro &lt;code&gt;Subst&lt;/code&gt; para permitir que se especifique un patr&amp;oacute;n de inicio y parada, as&amp;iacute; como el</target>
        </trans-unit>
        <trans-unit id="95d0ad8589b46d03f061e120707df66c84d9cbde" translate="yes" xml:space="preserve">
          <source>Another version uses a global match in list context, then assigns the result to a scalar, producing a count of the number of matches.</source>
          <target state="translated">Otra versión utiliza una coincidencia global en el contexto de la lista,luego asigna el resultado a un escalar,produciendo un conteo del número de coincidencias.</target>
        </trans-unit>
        <trans-unit id="a0589db0a4f4f29bef401c1107ff7696f0cffdbb" translate="yes" xml:space="preserve">
          <source>Another way is to assign to a substr() that's off the end of the string.</source>
          <target state="translated">Otra forma es asignar a una substr()que está fuera del final de la cadena.</target>
        </trans-unit>
        <trans-unit id="d77d43e614a814160a75653eb86a2b6f1db8267e" translate="yes" xml:space="preserve">
          <source>Another way is to use the &lt;a href=&quot;Tie::File&quot;&gt;Tie::File&lt;/a&gt; module, which treats the entire file as an array. Simply access a random array element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c83abcaae94dfa04aa0d7e9c83f8b2a9880cd1b" translate="yes" xml:space="preserve">
          <source>Another way is to use the &lt;a href=&quot;tie/file&quot;&gt;Tie::File&lt;/a&gt; module, which treats the entire file as an array. Simply access a random array element.</source>
          <target state="translated">Otra forma es usar el m&amp;oacute;dulo &lt;a href=&quot;tie/file&quot;&gt;Tie :: File&lt;/a&gt; , que trata todo el archivo como una matriz. Simplemente acceda a un elemento de matriz aleatorio.</target>
        </trans-unit>
        <trans-unit id="360771e8bfe1eade19d5dbc8ea8baae5f8a955ef" translate="yes" xml:space="preserve">
          <source>Another way is to use undef as an element on the left-hand-side:</source>
          <target state="translated">Otra forma es usar el Undef como un elemento del lado izquierdo:</target>
        </trans-unit>
        <trans-unit id="b6dde2905ab30997325ea52458484ff80b17847e" translate="yes" xml:space="preserve">
          <source>Another way of describing the operation is this: If &lt;code&gt;/c&lt;/code&gt; is specified, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b74b30f842e3a2fe422587280e297e6a0fb34e2" translate="yes" xml:space="preserve">
          <source>Another way of thinking about this function is finding a needle in a haystack. &lt;code&gt;big&lt;/code&gt; points to the first byte in the haystack. &lt;code&gt;big_end&lt;/code&gt; points to one byte beyond the final byte in the haystack. &lt;code&gt;little&lt;/code&gt; points to the first byte in the needle. &lt;code&gt;little_end&lt;/code&gt; points to one byte beyond the final byte in the needle. All the parameters must be non-&lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81299a8407385b954919f2cec05019d576de6e8" translate="yes" xml:space="preserve">
          <source>Another way to create anonymous filehandles is with the Symbol module or with the IO::Handle module and its ilk. These modules have the advantage of not hiding different types of the same name during the local(). See the bottom of &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; for an example.</source>
          <target state="translated">Otra forma de crear identificadores de archivos an&amp;oacute;nimos es con el m&amp;oacute;dulo S&amp;iacute;mbolo o con el m&amp;oacute;dulo IO :: Mango y similares. Estos m&amp;oacute;dulos tienen la ventaja de no ocultar diferentes tipos del mismo nombre durante el local (). Vea la parte inferior de &lt;a href=&quot;functions/open&quot;&gt;abierto&lt;/a&gt; para ver un ejemplo.</target>
        </trans-unit>
        <trans-unit id="6660859ea71d8fc8ba79b6222c7cabca290a534d" translate="yes" xml:space="preserve">
          <source>Another way to create anonymous filehandles is with the Symbol module or with the IO::Handle module and its ilk. These modules have the advantage of not hiding different types of the same name during the local(). See the bottom of &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e614c6db5b38b002f45562db1a27e62289c42947" translate="yes" xml:space="preserve">
          <source>Another way to debug compile-time code is to start the debugger, set a breakpoint on the</source>
          <target state="translated">Otra forma de depurar el código en tiempo de compilación es iniciar el depurador,establecer un punto de ruptura en el</target>
        </trans-unit>
        <trans-unit id="9901f72c76524abdcc53f059c75aff5db9ab2a29" translate="yes" xml:space="preserve">
          <source>Another way to declare &lt;code&gt;host&lt;/code&gt; is to use a C block in the CODE: section:</source>
          <target state="translated">Otra forma de declarar &lt;code&gt;host&lt;/code&gt; es usar un bloque C en la secci&amp;oacute;n CODE::</target>
        </trans-unit>
        <trans-unit id="205baf27defe296be93a335acebfa113cc8193c2" translate="yes" xml:space="preserve">
          <source>Another way to disable the safe signal behavior locally is to use the &lt;code&gt;Perl::Unsafe::Signals&lt;/code&gt; module from CPAN, which affects all signals.</source>
          <target state="translated">Otra forma de deshabilitar el comportamiento de la se&amp;ntilde;al segura localmente es usar el &lt;code&gt;Perl::Unsafe::Signals&lt;/code&gt; de CPAN, que afecta a todas las se&amp;ntilde;ales.</target>
        </trans-unit>
        <trans-unit id="11569e74dec6446efa52dec2c7a4e093532b6648" translate="yes" xml:space="preserve">
          <source>Another way to examine the tree is to use a compiler back-end module, such as &lt;a href=&quot;B::Concise&quot;&gt;B::Concise&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68459b39b80a3326501665280a8d6df2de3c0dc3" translate="yes" xml:space="preserve">
          <source>Another way to examine the tree is to use a compiler back-end module, such as &lt;a href=&quot;b/concise&quot;&gt;B::Concise&lt;/a&gt;.</source>
          <target state="translated">Otra forma de examinar el &amp;aacute;rbol es utilizar un m&amp;oacute;dulo de back-end del compilador, como &lt;a href=&quot;b/concise&quot;&gt;B :: Concise&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1475dee12421b2759f280ec12406b6a9a8686bb7" translate="yes" xml:space="preserve">
          <source>Another way to lay hands on a reference to the underlying object is to use the tied() function, so they might alternately have set clobber using:</source>
          <target state="translated">Otra forma de poner las manos en una referencia al objeto subyacente es usar la función tied(),por lo que alternativamente podrían haber establecido el uso de clobber:</target>
        </trans-unit>
        <trans-unit id="00149c3d1137c9330feb23e2fe36062f95ccc0ba" translate="yes" xml:space="preserve">
          <source>Another way to look at it is via bits:</source>
          <target state="translated">Otra forma de verlo es a través de los bits:</target>
        </trans-unit>
        <trans-unit id="87cb792899401773acea6f65b31b31644b7caaf0" translate="yes" xml:space="preserve">
          <source>Another way to modify &lt;code&gt;@INC&lt;/code&gt; without modifying the program, is to use the &lt;code&gt;lib&lt;/code&gt; pragma, e.g.:</source>
          <target state="translated">Otra forma de modificar &lt;code&gt;@INC&lt;/code&gt; sin modificar el programa, es usar &lt;code&gt;lib&lt;/code&gt; pragma, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="53f5ac93c7a0f074f16d88622079abd1a07b9541" translate="yes" xml:space="preserve">
          <source>Another way to see the output of a PM program is to run it as</source>
          <target state="translated">Otra forma de ver la salida de un programa PM es ejecutarlo como</target>
        </trans-unit>
        <trans-unit id="60d4191bfc5b5a27fe1df7d104bb0fb301db392c" translate="yes" xml:space="preserve">
          <source>Another way to skip over characters in a UTF-8 string is to use &lt;code&gt;utf8_hop&lt;/code&gt; , which takes a string and a number of characters to skip over. You're on your own about bounds checking, though, so don't use it lightly.</source>
          <target state="translated">Otra forma de omitir caracteres en una cadena UTF-8 es usar &lt;code&gt;utf8_hop&lt;/code&gt; , que requiere una cadena y varios caracteres para omitir. Sin embargo, est&amp;aacute; solo en la verificaci&amp;oacute;n de l&amp;iacute;mites, as&amp;iacute; que no lo use a la ligera.</target>
        </trans-unit>
        <trans-unit id="bdbeba721ab6028c2b3830fe28f0b278956ef2ae" translate="yes" xml:space="preserve">
          <source>Another way to skip over characters in a UTF-8 string is to use &lt;code&gt;utf8_hop&lt;/code&gt;, which takes a string and a number of characters to skip over. You're on your own about bounds checking, though, so don't use it lightly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbeb1bfc20bbb2eabb0051011fd1f94e30bfced" translate="yes" xml:space="preserve">
          <source>Another way to specify many INSTALL directories with a single parameter is LIB.</source>
          <target state="translated">Otra forma de especificar muchos directorios de INSTALACIÓN con un solo parámetro es LIB.</target>
        </trans-unit>
        <trans-unit id="ab320674027c2ae8c6c6ac4c9c8202490be618cd" translate="yes" xml:space="preserve">
          <source>Another way to write &lt;code&gt;Is_latin_1()&lt;/code&gt; would be to use the characters in the range explicitly:</source>
          <target state="translated">Otra forma de escribir &lt;code&gt;Is_latin_1()&lt;/code&gt; ser&amp;iacute;a usar los caracteres en el rango expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="7b86cf4ed2b3d4be5d67a5a0ca22b08970c9b1b4" translate="yes" xml:space="preserve">
          <source>Ansgar Burchardt &amp;lt;ansgar@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb531954bffd941479549648f2841c2d77a7164" translate="yes" xml:space="preserve">
          <source>Anton Tagunov doubts its usefulness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697b561300a9259946d1254bc1d65f626fe87539" translate="yes" xml:space="preserve">
          <source>Any $(FOO) used in the examples are make variables, not Perl.</source>
          <target state="translated">Cualquier $(FOO)usado en los ejemplos son variables de fabricación,no Perl.</target>
        </trans-unit>
        <trans-unit id="bea7ca75aae1ff5f6e730010d46af50a09d7d1c8" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;perlunicode#User-Defined-Character-Properties&quot;&gt;user-defined property&lt;/a&gt; used must be already defined by the time the regular expression is compiled (but note that this construct can be used instead of such properties).</source>
          <target state="translated">Cualquier &lt;a href=&quot;perlunicode#User-Defined-Character-Properties&quot;&gt;propiedad&lt;/a&gt; definida por el usuario utilizada debe estar ya definida para el momento en que se compila la expresi&amp;oacute;n regular (pero tenga en cuenta que esta construcci&amp;oacute;n se puede usar en lugar de dichas propiedades).</target>
        </trans-unit>
        <trans-unit id="31e755c53eda86352ddd4b11acb45031c2d27960" translate="yes" xml:space="preserve">
          <source>Any &lt;b&gt;class method&lt;/b&gt;, &lt;b&gt;instance&lt;/b&gt;, or &lt;b&gt;subroutine&lt;/b&gt; that composes, initializes, blesses, and returns an &lt;b&gt;object&lt;/b&gt;. Sometimes we use the term loosely to mean a &lt;b&gt;composer&lt;/b&gt;.</source>
          <target state="translated">Cualquier &lt;b&gt;m&amp;eacute;todo de clase&lt;/b&gt; , &lt;b&gt;instancia&lt;/b&gt; o &lt;b&gt;subrutina&lt;/b&gt; que compone, inicializa, bendice y devuelve un &lt;b&gt;objeto&lt;/b&gt; . A veces usamos el t&amp;eacute;rmino de manera vaga para referirnos a un &lt;b&gt;compositor&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="ebc443723afa597f0f46ae7e71ea2b268b18eec2" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;\&lt;/code&gt; (backslashes) are converted to &lt;code&gt;/&lt;/code&gt; (forward slashes), and then File::Spec::Unix canonpath() is called on the result.</source>
          <target state="translated">Cualquier &lt;code&gt;\&lt;/code&gt; (barras invertidas) se convierte a &lt;code&gt;/&lt;/code&gt; (barras diagonales), y luego se llama File :: Spec :: Unix canonpath () en el resultado.</target>
        </trans-unit>
        <trans-unit id="0297ad87a59e1b9acfbd34804e1d88eb60665363" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; is run unconditionally. An</source>
          <target state="translated">Cualquier &lt;code&gt;make&lt;/code&gt; o &lt;code&gt;test&lt;/code&gt; se ejecuta incondicionalmente. Un</target>
        </trans-unit>
        <trans-unit id="bf7362a2fe12e03fc4b84c1c886bc1d5ed325938" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;use utf8&lt;/code&gt; or &lt;code&gt;no utf8&lt;/code&gt; declarations within the string have no effect, and source filters are forbidden. (&lt;code&gt;unicode_strings&lt;/code&gt;, however, can appear within the string.) See also the &lt;a href=&quot;#evalbytes-EXPR&quot;&gt;&lt;code&gt;evalbytes&lt;/code&gt;&lt;/a&gt; operator, which works properly with source filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd3503f8d612240a0cdcfcf3958cd4b47fd1bc1" translate="yes" xml:space="preserve">
          <source>Any SV may be magical, that is, it has special features that a normal SV does not have. These features are stored in the SV structure in a linked list of &lt;code&gt;struct magic&lt;/code&gt; 's, typedef'ed to &lt;code&gt;MAGIC&lt;/code&gt; .</source>
          <target state="translated">Cualquier SV puede ser m&amp;aacute;gico, es decir, tiene caracter&amp;iacute;sticas especiales que no tiene un SV normal. Estas caracter&amp;iacute;sticas se almacenan en la estructura SV en una lista enlazada de &lt;code&gt;struct magic&lt;/code&gt; , definidas como &lt;code&gt;MAGIC&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33b69c22f5834c109ce23cffa5c65513da0e84fe" translate="yes" xml:space="preserve">
          <source>Any SV may be magical, that is, it has special features that a normal SV does not have. These features are stored in the SV structure in a linked list of &lt;code&gt;struct magic&lt;/code&gt;'s, typedef'ed to &lt;code&gt;MAGIC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3990dd07c484552abc78d056ff16c2e2a8e23114" translate="yes" xml:space="preserve">
          <source>Any additional arguments are expected to be names of modules to generate code for.</source>
          <target state="translated">Se espera que cualquier argumento adicional sean los nombres de los módulos para los que se genere código.</target>
        </trans-unit>
        <trans-unit id="33e9e1331c3f51ebe91a9bc05248aec433c1afce" translate="yes" xml:space="preserve">
          <source>Any additional arguments found before the &lt;b&gt;--&lt;/b&gt; token are expected to be names of modules to generate code for.</source>
          <target state="translated">Todos los argumentos adicionales que se encuentran antes de que el &lt;b&gt;-&lt;/b&gt; se espera que sean contadores a nombres de m&amp;oacute;dulos de generaci&amp;oacute;n de c&amp;oacute;digo para.</target>
        </trans-unit>
        <trans-unit id="c6e53a3422c150f8910984634fe5fc4926bb37bc" translate="yes" xml:space="preserve">
          <source>Any additional flags you wish to pass to the linker.</source>
          <target state="translated">Cualquier bandera adicional que desee pasar al enlazador.</target>
        </trans-unit>
        <trans-unit id="76af9e90cc2fb275b94658ee19c44c077d496116" translate="yes" xml:space="preserve">
          <source>Any argument provided is passed as CHECK to underlying Encode::decode() call. Pass the value &lt;code&gt;Encode::FB_CROAK&lt;/code&gt; to have the decoding croak if not all the command line arguments can be decoded. See &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;&quot;Handling Malformed Data&quot; in Encode&lt;/a&gt; for details on other options for CHECK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fc9753c4799266fbd1d9873fa8ed5292bbf609" translate="yes" xml:space="preserve">
          <source>Any argument which looks like a signal name (that is, &lt;code&gt;/^[A-Z][A-Z0-9]*$/&lt;/code&gt; ) indicates that &lt;b&gt;sigtrap&lt;/b&gt; should install a handler for that name.</source>
          <target state="translated">Cualquier argumento que parezca un nombre de se&amp;ntilde;al (es decir, &lt;code&gt;/^[A-Z][A-Z0-9]*$/&lt;/code&gt; ) indica que &lt;b&gt;sigtrap&lt;/b&gt; deber&amp;iacute;a instalar un controlador para ese nombre.</target>
        </trans-unit>
        <trans-unit id="f26e937185e1c5cd97a379a8dabb810b138157bc" translate="yes" xml:space="preserve">
          <source>Any argument which looks like a signal name (that is, &lt;code&gt;/^[A-Z][A-Z0-9]*$/&lt;/code&gt;) indicates that &lt;b&gt;sigtrap&lt;/b&gt; should install a handler for that name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669f46fd59266a6910f9368caa3825ce94a0d579" translate="yes" xml:space="preserve">
          <source>Any arguments after the second '--' token are additional linker arguments that will be examined for potential conflict. If there is no conflict, the additional arguments will be part of the output.</source>
          <target state="translated">Cualquier argumento después de la segunda ficha '--' son argumentos adicionales de enlace que serán examinados para un posible conflicto.Si no hay conflicto,los argumentos adicionales serán parte del resultado.</target>
        </trans-unit>
        <trans-unit id="b8ba7c975cc3879d276e04e3e9eb8ad2f669d5cb" translate="yes" xml:space="preserve">
          <source>Any arguments passed in show up in the array &lt;code&gt;@_&lt;/code&gt; . (They may also show up in lexical variables introduced by a signature; see &lt;a href=&quot;#Signatures&quot;&gt;Signatures&lt;/a&gt; below.) Therefore, if you called a function with two arguments, those would be stored in &lt;code&gt;$_[0]&lt;/code&gt; and &lt;code&gt;$_[1]&lt;/code&gt; . The array &lt;code&gt;@_&lt;/code&gt; is a local array, but its elements are aliases for the actual scalar parameters. In particular, if an element &lt;code&gt;$_[0]&lt;/code&gt; is updated, the corresponding argument is updated (or an error occurs if it is not updatable). If an argument is an array or hash element which did not exist when the function was called, that element is created only when (and if) it is modified or a reference to it is taken. (Some earlier versions of Perl created the element whether or not the element was assigned to.) Assigning to the whole array &lt;code&gt;@_&lt;/code&gt; removes that aliasing, and does not update any arguments.</source>
          <target state="translated">Cualquier argumento que se pase se muestra en la matriz &lt;code&gt;@_&lt;/code&gt; . (Tambi&amp;eacute;n pueden aparecer en variables l&amp;eacute;xicas introducidas por una firma; consulte &lt;a href=&quot;#Signatures&quot;&gt;Firmas a&lt;/a&gt; continuaci&amp;oacute;n). Por lo tanto, si llama a una funci&amp;oacute;n con dos argumentos, estos se almacenar&amp;iacute;an en &lt;code&gt;$_[0]&lt;/code&gt; y &lt;code&gt;$_[1]&lt;/code&gt; . La matriz &lt;code&gt;@_&lt;/code&gt; es una matriz local, pero sus elementos son alias de los par&amp;aacute;metros escalares reales. En particular, si un elemento &lt;code&gt;$_[0]&lt;/code&gt; se actualiza, se actualiza el argumento correspondiente (o se produce un error si no es actualizable). Si un argumento es una matriz o un elemento hash que no exist&amp;iacute;a cuando se llam&amp;oacute; a la funci&amp;oacute;n, ese elemento se crea solo cuando (y si) se modifica o se toma una referencia a &amp;eacute;l. (Algunas versiones anteriores de Perl creaban el elemento independientemente de si el elemento estaba asignado o no). La asignaci&amp;oacute;n a toda la matriz &lt;code&gt;@_&lt;/code&gt; elimina ese alias y no actualiza ning&amp;uacute;n argumento.</target>
        </trans-unit>
        <trans-unit id="f35f240798e3c5e460d473d423be038d4c72e7d0" translate="yes" xml:space="preserve">
          <source>Any arguments passed in show up in the array &lt;code&gt;@_&lt;/code&gt;. (They may also show up in lexical variables introduced by a signature; see &lt;a href=&quot;#Signatures&quot;&gt;&quot;Signatures&quot;&lt;/a&gt; below.) Therefore, if you called a function with two arguments, those would be stored in &lt;code&gt;$_[0]&lt;/code&gt; and &lt;code&gt;$_[1]&lt;/code&gt;. The array &lt;code&gt;@_&lt;/code&gt; is a local array, but its elements are aliases for the actual scalar parameters. In particular, if an element &lt;code&gt;$_[0]&lt;/code&gt; is updated, the corresponding argument is updated (or an error occurs if it is not updatable). If an argument is an array or hash element which did not exist when the function was called, that element is created only when (and if) it is modified or a reference to it is taken. (Some earlier versions of Perl created the element whether or not the element was assigned to.) Assigning to the whole array &lt;code&gt;@_&lt;/code&gt; removes that aliasing, and does not update any arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6247c19341895e60632e62b6ff63ef2ca7a1ee" translate="yes" xml:space="preserve">
          <source>Any attempt by the code in STRING to use an operator which is not permitted by the compartment will cause an error (at run-time of the main program but at compile-time for the code in STRING). The error is of the form &quot;'%s' trapped by operation mask...&quot;.</source>
          <target state="translated">Cualquier intento por parte del código en STRING de utilizar un operador que no esté permitido por el compartimiento causará un error (en tiempo de ejecución del programa principal pero en tiempo de compilación del código en STRING).El error es de la forma &quot;'%s' atrapados por la máscara de operación...&quot;.</target>
        </trans-unit>
        <trans-unit id="813cebd9a54eacff09b02a5f15b34a12df0ec8d1" translate="yes" xml:space="preserve">
          <source>Any backslashed prototype character represents an actual argument that must start with that character (optionally preceded by &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;), with the exception of &lt;code&gt;$&lt;/code&gt; , which will accept any scalar lvalue expression, such as &lt;code&gt;$foo = 7&lt;/code&gt; or &lt;code&gt;my_function()-&amp;gt;[0]&lt;/code&gt; . The value passed as part of &lt;code&gt;@_&lt;/code&gt; will be a reference to the actual argument given in the subroutine call, obtained by applying &lt;code&gt;\&lt;/code&gt; to that argument.</source>
          <target state="translated">Cualquier car&amp;aacute;cter prototipo con barra invertida representa un argumento real que debe comenzar con ese car&amp;aacute;cter (opcionalmente precedido por &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; ), con la excepci&amp;oacute;n de &lt;code&gt;$&lt;/code&gt; , que aceptar&amp;aacute; cualquier expresi&amp;oacute;n escalar lvalue, como &lt;code&gt;$foo = 7&lt;/code&gt; o &lt;code&gt;my_function()-&amp;gt;[0]&lt;/code&gt; . El valor pasado como parte de &lt;code&gt;@_&lt;/code&gt; ser&amp;aacute; una referencia al argumento real dado en la llamada a la subrutina, obtenido aplicando &lt;code&gt;\&lt;/code&gt; a ese argumento.</target>
        </trans-unit>
        <trans-unit id="ffa3112ef74eec5708dbce1d67d94690c63f3116" translate="yes" xml:space="preserve">
          <source>Any backslashed prototype character represents an actual argument that must start with that character (optionally preceded by &lt;code&gt;my&lt;/code&gt;, &lt;code&gt;our&lt;/code&gt; or &lt;code&gt;local&lt;/code&gt;), with the exception of &lt;code&gt;$&lt;/code&gt;, which will accept any scalar lvalue expression, such as &lt;code&gt;$foo = 7&lt;/code&gt; or &lt;code&gt;my_function()-&amp;gt;[0]&lt;/code&gt;. The value passed as part of &lt;code&gt;@_&lt;/code&gt; will be a reference to the actual argument given in the subroutine call, obtained by applying &lt;code&gt;\&lt;/code&gt; to that argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8738a2a75fb40cb2ee10b2d9e2137a995a5cab3" translate="yes" xml:space="preserve">
          <source>Any call from a package to itself is safe.</source>
          <target state="translated">Cualquier llamada de un paquete a sí mismo es segura.</target>
        </trans-unit>
        <trans-unit id="4b72ee9b0cb5399c6a83f5d4a70d821be8027231" translate="yes" xml:space="preserve">
          <source>Any call from an internal Perl module is safe. (Nothing keeps user modules from marking themselves as internal to Perl, but this practice is discouraged.)</source>
          <target state="translated">Cualquier llamada desde un módulo Perl interno es segura.(Nada impide que los módulos de usuario se marquen como internos de Perl,pero se desaconseja esta práctica).</target>
        </trans-unit>
        <trans-unit id="32561ad60b0d62ef81eb27f4c0654f92745f16b5" translate="yes" xml:space="preserve">
          <source>Any call to Perl's warning system (eg Carp itself) is safe. (This rule is what keeps it from reporting the error at the point where you call &lt;code&gt;carp&lt;/code&gt; or &lt;code&gt;croak&lt;/code&gt; .)</source>
          <target state="translated">Cualquier llamada al sistema de advertencia de Perl (por ejemplo, Carp) es segura. (Esta regla es lo que evita que informe el error en el punto en el que llama &lt;code&gt;carp&lt;/code&gt; a o &lt;code&gt;croak&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b252f8b26d454c8056df1a78fc7a97e6d22f01f" translate="yes" xml:space="preserve">
          <source>Any call to Perl's warning system (eg Carp itself) is safe. (This rule is what keeps it from reporting the error at the point where you call &lt;code&gt;carp&lt;/code&gt; or &lt;code&gt;croak&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be54b4dca13888b86e758e818195dea970243c9" translate="yes" xml:space="preserve">
          <source>Any character not matched by &lt;code&gt;\d&lt;/code&gt; is matched by &lt;code&gt;\D&lt;/code&gt; .</source>
          <target state="translated">Cualquier car&amp;aacute;cter que no reconozca &lt;code&gt;\d&lt;/code&gt; se corresponde con &lt;code&gt;\D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a92f497a3debf42be69af7cf310d253bf9089f09" translate="yes" xml:space="preserve">
          <source>Any character not matched by &lt;code&gt;\d&lt;/code&gt; is matched by &lt;code&gt;\D&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072286fccc69e711078f97acb3c710b733c38c10" translate="yes" xml:space="preserve">
          <source>Any character not matched by &lt;code&gt;\s&lt;/code&gt; is matched by &lt;code&gt;\S&lt;/code&gt; .</source>
          <target state="translated">Cualquier car&amp;aacute;cter que no reconozca &lt;code&gt;\s&lt;/code&gt; se corresponde con &lt;code&gt;\S&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f9b47e6ac747d8625677192454745261e50c9f3" translate="yes" xml:space="preserve">
          <source>Any character not matched by &lt;code&gt;\s&lt;/code&gt; is matched by &lt;code&gt;\S&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd14be74c570e6d8f1d353ef998bd9cdb853857" translate="yes" xml:space="preserve">
          <source>Any character not matched by &lt;code&gt;\w&lt;/code&gt; is matched by &lt;code&gt;\W&lt;/code&gt; .</source>
          <target state="translated">Cualquier car&amp;aacute;cter que no coincidan con &lt;code&gt;\w&lt;/code&gt; se corresponde con &lt;code&gt;\W&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca92dc8b5b50382eccc8de66976a91add27a47ad" translate="yes" xml:space="preserve">
          <source>Any character not matched by &lt;code&gt;\w&lt;/code&gt; is matched by &lt;code&gt;\W&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45bb18b3ba9ff92c60226f6eef9c2b785d393ac" translate="yes" xml:space="preserve">
          <source>Any character not part of the 65-character base64 subset is silently ignored. Characters occurring after a '=' padding character are never decoded.</source>
          <target state="translated">Cualquier personaje que no forme parte del subconjunto de 65 caracteres de base64 es ignorado silenciosamente.Los caracteres que aparecen después de un carácter de relleno &quot;=&quot; nunca son decodificados.</target>
        </trans-unit>
        <trans-unit id="fdc4fb7a943f332e78ce7564ebae9fbe7a142c7e" translate="yes" xml:space="preserve">
          <source>Any character that is</source>
          <target state="translated">Cualquier personaje que sea</target>
        </trans-unit>
        <trans-unit id="d1ae992eb64cfaf05e3391f63560921ed6515ef6" translate="yes" xml:space="preserve">
          <source>Any character with the General Category of Combining Mark (&lt;code&gt;\p{GC=M}&lt;/code&gt; ), which may be spacing or nonspacing. Some are even invisible. A sequence of combining characters following a grapheme base character together make up a single user-visible character called a &lt;b&gt;grapheme&lt;/b&gt;. Most but not all diacritics are combining characters, and vice versa.</source>
          <target state="translated">Cualquier car&amp;aacute;cter con la categor&amp;iacute;a general de marca combinada ( &lt;code&gt;\p{GC=M}&lt;/code&gt; ), que puede ser espaciado o no espaciado. Algunos incluso son invisibles. Una secuencia de caracteres combinados que siguen a un car&amp;aacute;cter base de grafema juntos forman un &amp;uacute;nico car&amp;aacute;cter visible para el usuario llamado &lt;b&gt;grafema&lt;/b&gt; . La mayor&amp;iacute;a de los signos diacr&amp;iacute;ticos, aunque no todos, combinan caracteres y viceversa.</target>
        </trans-unit>
        <trans-unit id="f7f37ee9ffee4805d8681593ea741f6cb413f361" translate="yes" xml:space="preserve">
          <source>Any character with the General Category of Combining Mark (&lt;code&gt;\p{GC=M}&lt;/code&gt;), which may be spacing or nonspacing. Some are even invisible. A sequence of combining characters following a grapheme base character together make up a single user-visible character called a &lt;b&gt;grapheme&lt;/b&gt;. Most but not all diacritics are combining characters, and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47500f097947cd7ef6b655a33fe0adeaed93c8c" translate="yes" xml:space="preserve">
          <source>Any class derived from an overloaded class is also overloaded and inherits its operator implementations. If the same operator is overloaded in more than one ancestor then the implementation is determined by the usual inheritance rules.</source>
          <target state="translated">Cualquier clase derivada de una clase sobrecargada también está sobrecargada y hereda sus implementaciones de operador.Si el mismo operador está sobrecargado en más de un ancestro,entonces la implementación está determinada por las reglas de herencia habituales.</target>
        </trans-unit>
        <trans-unit id="82762c13b8c241690349f9ba71914d3aafcada68" translate="yes" xml:space="preserve">
          <source>Any class for which this function returns true is &quot;universal&quot; in the sense that all classes potentially inherit methods from it.</source>
          <target state="translated">Cualquier clase para la que esta función se cumpla es &quot;universal&quot; en el sentido de que todas las clases heredan potencialmente métodos de ella.</target>
        </trans-unit>
        <trans-unit id="4c366c83fbe5661336d1ed5dad628d12372f6675" translate="yes" xml:space="preserve">
          <source>Any class may define hooks that will be called during the serialization and deserialization process on objects that are instances of that class. Those hooks can redefine the way serialization is performed (and therefore, how the symmetrical deserialization should be conducted).</source>
          <target state="translated">Cualquier clase puede definir los ganchos que se llamarán durante el proceso de serialización y deserialización en los objetos que son instancias de esa clase.Esos ganchos pueden redefinir la forma en que se realiza la serialización (y,por lo tanto,la forma en que debe realizarse la deserialización simétrica).</target>
        </trans-unit>
        <trans-unit id="6e6281f412687ca7280049212c9dd37d5f605837" translate="yes" xml:space="preserve">
          <source>Any command not recognized by the debugger is directly executed (&lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;'d) as Perl code in the current package. (The debugger uses the DB package for keeping its own state information.)</source>
          <target state="translated">Cualquier comando no reconocido por el depurador se ejecuta directamente ( &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 'd) como c&amp;oacute;digo Perl en el paquete actual. (El depurador usa el paquete DB para mantener su propia informaci&amp;oacute;n de estado).</target>
        </trans-unit>
        <trans-unit id="78f7d4f4e5eb056442905f4be332daa2d7078212" translate="yes" xml:space="preserve">
          <source>Any command not recognized by the debugger is directly executed (&lt;code&gt;eval&lt;/code&gt;'d) as Perl code in the current package. (The debugger uses the DB package for keeping its own state information.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fcc44228bcb7043c7f8789e115cc416dabfd31" translate="yes" xml:space="preserve">
          <source>Any committer may cherry-pick any commit from blead to a maint branch by first adding an entry to the relevant voting file in the maint-votes branch announcing the commit as a candidate for back-porting, and then waiting for at least two other committers to add their votes in support of this (i.e. a total of at least three votes is required before a commit may be back-ported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8dc7e3add242376e935c5e7dec68c1bf0f28dae" translate="yes" xml:space="preserve">
          <source>Any committer may cherry-pick any commit from blead to a maint branch if they send mail to perl5-porters announcing their intent to cherry-pick a specific commit along with a rationale for doing so and at least two other committers respond to the list giving their assent. (This policy applies to current and former pumpkings, as well as other committers.)</source>
          <target state="translated">Cualquier autor puede escoger cualquier compromiso de la lista de la rama de mantenimiento si envía un correo a los portadores de perl5 anunciando su intención de escoger un compromiso específico junto con una justificación para hacerlo y al menos otros dos autores responden a la lista dando su consentimiento.(Esta política se aplica a los actuales y antiguos calabozos,así como a otros committers).</target>
        </trans-unit>
        <trans-unit id="b95f0a7c9cbc43fb72281273ec465950ff501fea" translate="yes" xml:space="preserve">
          <source>Any contained POSIX character classes, including things like &lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\D&lt;/code&gt; respect the &lt;code&gt;/a&lt;/code&gt; (and &lt;code&gt;/aa&lt;/code&gt; ) modifiers.</source>
          <target state="translated">Cualquier clase de caracteres POSIX contenida, incluidas cosas como &lt;code&gt;\w&lt;/code&gt; y &lt;code&gt;\D&lt;/code&gt; respetan los modificadores &lt;code&gt;/a&lt;/code&gt; (y &lt;code&gt;/aa&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ed912b6d995f34c695ed9e38e5b4d742feccc889" translate="yes" xml:space="preserve">
          <source>Any contained POSIX character classes, including things like &lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\D&lt;/code&gt; respect the &lt;code&gt;/a&lt;/code&gt; (and &lt;code&gt;/aa&lt;/code&gt;) modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db2df3ee56bd2a814ccc5209f324c5b3591842c" translate="yes" xml:space="preserve">
          <source>Any data types supported by &lt;a href=&quot;../threads/shared&quot;&gt;threads::shared&lt;/a&gt; can be passed via queues:</source>
          <target state="translated">Cualquier tipo de datos admitido por &lt;a href=&quot;../threads/shared&quot;&gt;threads :: shared&lt;/a&gt; se puede pasar a trav&amp;eacute;s de colas:</target>
        </trans-unit>
        <trans-unit id="4e0656683c3bae7fc0640dbcbac9a2b39fa2d301" translate="yes" xml:space="preserve">
          <source>Any data types supported by &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt; can be passed via queues:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e796dc658263f7829a0c740b0d175dbd881579ef" translate="yes" xml:space="preserve">
          <source>Any diagnostics that were output for the test. This only includes diagnostics output &lt;b&gt;after&lt;/b&gt; the test result is declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500c84c6a69d3cbc0070a804d35fd877c67e676d" translate="yes" xml:space="preserve">
          <source>Any directory to prefix to the extraction path, if any</source>
          <target state="translated">Cualquier directorio con el prefijo de la ruta de extracción,si lo hay.</target>
        </trans-unit>
        <trans-unit id="fe63280e6a478a3a4b2a298d74baf468659f885a" translate="yes" xml:space="preserve">
          <source>Any existing</source>
          <target state="translated">Cualquier</target>
        </trans-unit>
        <trans-unit id="910f15fcdac4d39c624eb5925c6aedfca05cbd8f" translate="yes" xml:space="preserve">
          <source>Any extension to Perl, including those containing XSUBs, should have a Perl module to serve as the bootstrap which pulls the extension into Perl. This module will export the extension's functions and variables to the Perl program and will cause the extension's XSUBs to be linked into Perl. The following module will be used for most of the examples in this document and should be used from Perl with the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; command as shown earlier. Perl modules are explained in more detail later in this document.</source>
          <target state="translated">Cualquier extensi&amp;oacute;n de Perl, incluidas las que contienen XSUB, debe tener un m&amp;oacute;dulo Perl que sirva como bootstrap que lleva la extensi&amp;oacute;n a Perl. Este m&amp;oacute;dulo exportar&amp;aacute; las funciones y variables de la extensi&amp;oacute;n al programa Perl y har&amp;aacute; que los XSUB de la extensi&amp;oacute;n se vinculen a Perl. El siguiente m&amp;oacute;dulo se utilizar&amp;aacute; para la mayor&amp;iacute;a de los ejemplos de este documento y debe utilizarse desde Perl con el comando &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; como se mostr&amp;oacute; anteriormente. Los m&amp;oacute;dulos de Perl se explican con m&amp;aacute;s detalle m&amp;aacute;s adelante en este documento.</target>
        </trans-unit>
        <trans-unit id="4138f336ca25f7058dac8592c9829407df50fe3e" translate="yes" xml:space="preserve">
          <source>Any extension to Perl, including those containing XSUBs, should have a Perl module to serve as the bootstrap which pulls the extension into Perl. This module will export the extension's functions and variables to the Perl program and will cause the extension's XSUBs to be linked into Perl. The following module will be used for most of the examples in this document and should be used from Perl with the &lt;code&gt;use&lt;/code&gt; command as shown earlier. Perl modules are explained in more detail later in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a23450424903dcd5fa1cc3d1a014ad157de4c5" translate="yes" xml:space="preserve">
          <source>Any extra arguments which shouldn't be passed on to &lt;code&gt;plan()&lt;/code&gt; should be stripped off by this method.</source>
          <target state="translated">Cualquier argumento adicional que no deba pasarse a &lt;code&gt;plan()&lt;/code&gt; debe eliminarse mediante este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="479572afcef4faf54a80923b02d6ecab023cba50" translate="yes" xml:space="preserve">
          <source>Any extra arguments you want passed into the subtest code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e812c3c14740bd790df37fd5ab976ff0e033c047" translate="yes" xml:space="preserve">
          <source>Any filehandles open at the time of the fork() will be dup()-ed. Thus, the files can be closed independently in the parent and child, but beware that the dup()-ed handles will still share the same seek pointer. Changing the seek position in the parent will change it in the child and vice-versa. One can avoid this by opening files that need distinct seek pointers separately in the child.</source>
          <target state="translated">Cualquier mango de archivo abierto en el momento de la bifurcación se duplicará.Por lo tanto,los archivos pueden ser cerrados independientemente en el padre y el hijo,pero tened en cuenta que los mangos dup()-ed seguirán compartiendo el mismo puntero de búsqueda.Cambiar la posición del buscador en el padre lo cambiará en el hijo y viceversa.Uno puede evitar esto abriendo archivos que necesitan distintos punteros de búsqueda por separado en el hijo.</target>
        </trans-unit>
        <trans-unit id="187558535ccb5da9eca3826ba8e4d8b30ca76bc1" translate="yes" xml:space="preserve">
          <source>Any function in the list below may be used either with or without parentheses around its arguments. (The syntax descriptions omit the parentheses.) If you use parentheses, the simple but occasionally surprising rule is this: It</source>
          <target state="translated">Cualquier función de la lista que figura a continuación puede utilizarse con o sin paréntesis alrededor de sus argumentos.(Las descripciones de sintaxis omiten los paréntesis.)Si se usan paréntesis,la regla simple pero a veces sorprendente es ésta:Es</target>
        </trans-unit>
        <trans-unit id="9f6c837fd47f5e061c1ecbb824c94df3994dcde5" translate="yes" xml:space="preserve">
          <source>Any good book on software engineering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c8f5e2946c066d9a62168dcf66b92198c6784a" translate="yes" xml:space="preserve">
          <source>Any keys for which the value is &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be ignored.</source>
          <target state="translated">Se ignorar&amp;aacute;n las claves cuyo valor sea &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c7f27e33616c341daf05c0b6c508f0fa8fdbd74" translate="yes" xml:space="preserve">
          <source>Any keys for which the value is &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be ignored.</source>
          <target state="translated">Se ignorar&amp;aacute;n las claves cuyo valor sea &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b98397e3061065c914af3247fdcc89fdfd6a02c2" translate="yes" xml:space="preserve">
          <source>Any keys for which the value is &lt;code&gt;undef&lt;/code&gt; will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568e69d3500c9fb9cde3152f15ae5ed8fcf84af4" translate="yes" xml:space="preserve">
          <source>Any keys not described in this specification document (whether top-level or within compound data structures described herein) are considered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204edb5197689fcdc449ffc64469cd176c221d73" translate="yes" xml:space="preserve">
          <source>Any large IRC network (Dalnet, EFnet) is also likely to have a #perl channel, with varying activity levels.</source>
          <target state="translated">Cualquier gran red IRC (Dalnet,EFnet)también es probable que tenga un canal #perl,con diferentes niveles de actividad.</target>
        </trans-unit>
        <trans-unit id="9ec17e0cbd0b3e2eebd6b6cf6a596cebb4cfc33d" translate="yes" xml:space="preserve">
          <source>Any letters between &lt;code&gt;&quot;?&quot;&lt;/code&gt; and &lt;code&gt;&quot;:&quot;&lt;/code&gt; act as flags modifiers as with &lt;code&gt;(?adluimnsx-imnsx)&lt;/code&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44271c2c405bf35e52ab0041e6847e60ca1ca0c2" translate="yes" xml:space="preserve">
          <source>Any letters between &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;:&lt;/code&gt; act as flags modifiers as with &lt;code&gt;(?adluimsx-imsx)&lt;/code&gt; . For example,</source>
          <target state="translated">&amp;iquest;Alguna letra entre &lt;code&gt;?&lt;/code&gt; y &lt;code&gt;:&lt;/code&gt; act&amp;uacute;an como modificadores de banderas como con &lt;code&gt;(?adluimsx-imsx)&lt;/code&gt; . Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="5618684dee489724ebf8f57ba00718b3f30e3494" translate="yes" xml:space="preserve">
          <source>Any method calls on an object created with &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; will be dispatched to the package as a normal object.</source>
          <target state="translated">Cualquier llamada a un m&amp;eacute;todo en un objeto creado con &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; se enviar&amp;aacute; al paquete como un objeto normal.</target>
        </trans-unit>
        <trans-unit id="26b68c72e2b484267b2f658de2349d6444e86420" translate="yes" xml:space="preserve">
          <source>Any method calls on an object created with &lt;code&gt;qr//&lt;/code&gt; will be dispatched to the package as a normal object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125ade77b67e2c4cd7a637af74e96e943bde8b70" translate="yes" xml:space="preserve">
          <source>Any methods marked</source>
          <target state="translated">Cualquier método marcado</target>
        </trans-unit>
        <trans-unit id="c1aa612608eba8166ce338b4b530d56d4e20399c" translate="yes" xml:space="preserve">
          <source>Any methods not listed here are derived from Math::BigFloat (or Math::BigInt), so make sure you check these two modules for further information.</source>
          <target state="translated">Cualquier método no listado aquí se deriva de Math::BigFloat (o Math::BigInt),así que asegúrate de revisar estos dos módulos para más información.</target>
        </trans-unit>
        <trans-unit id="9782a834fd90fe5d5545a24d61a39706e25bf926" translate="yes" xml:space="preserve">
          <source>Any mixture is possible. For example, the most frequently used options could be stored in variables while all other options get stored in the hash:</source>
          <target state="translated">Cualquier mezcla es posible.Por ejemplo,las opciones más utilizadas podrían almacenarse en variables mientras que todas las demás opciones se almacenan en el hash:</target>
        </trans-unit>
        <trans-unit id="d9afc9d2e9f12a7ae747d6b9bda2062ad21b9fd2" translate="yes" xml:space="preserve">
          <source>Any names which are not tags are added to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; unchanged but will trigger a warning (with &lt;code&gt;-w&lt;/code&gt; ) to avoid misspelt tags names being silently added to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; . Future versions may make this a fatal error.</source>
          <target state="translated">Todos los nombres que no sean etiquetas se agregan a &lt;code&gt;@EXPORT&lt;/code&gt; o &lt;code&gt;@EXPORT_OK&lt;/code&gt; sin cambios, pero activar&amp;aacute;n una advertencia (con &lt;code&gt;-w&lt;/code&gt; ) para evitar que los nombres de etiquetas mal escritos se agreguen silenciosamente a &lt;code&gt;@EXPORT&lt;/code&gt; o &lt;code&gt;@EXPORT_OK&lt;/code&gt; . Las versiones futuras pueden convertir esto en un error fatal.</target>
        </trans-unit>
        <trans-unit id="f1edfb250e37d4b9a7863e1b2498e2a280885f23" translate="yes" xml:space="preserve">
          <source>Any names which are not tags are added to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; unchanged but will trigger a warning (with &lt;code&gt;-w&lt;/code&gt;) to avoid misspelt tags names being silently added to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt;. Future versions may make this a fatal error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485a3dceff3fe3343086f55cd7ded47422eb7429" translate="yes" xml:space="preserve">
          <source>Any newlines in $perl_code will be escaped. Leading and trailing newlines will be stripped. Makes this idiom much easier:</source>
          <target state="translated">Cualquier línea nueva en $perl_code se escapará.Las nuevas líneas principales y posteriores serán eliminadas.Hace que este lenguaje sea mucho más fácil:</target>
        </trans-unit>
        <trans-unit id="85505e3e03d4cfb2c5d76c353aad39b235819057" translate="yes" xml:space="preserve">
          <source>Any non-whitespace delimiter may replace the slashes. Add space after the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; when using a character allowed in identifiers. If single quotes are used, no interpretation is done on the replacement string (the &lt;code&gt;/e&lt;/code&gt; modifier overrides this, however). Note that Perl treats backticks as normal delimiters; the replacement text is not evaluated as a command. If the</source>
          <target state="translated">Cualquier delimitador que no sea un espacio en blanco puede reemplazar las barras. Agregue espacio despu&amp;eacute;s de la &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; cuando use un car&amp;aacute;cter permitido en identificadores. Si se utilizan comillas simples, no se realiza ninguna interpretaci&amp;oacute;n en la cadena de reemplazo ( sin embargo, el modificador &lt;code&gt;/e&lt;/code&gt; anula esto). Tenga en cuenta que Perl trata las comillas inversas como delimitadores normales; el texto de reemplazo no se eval&amp;uacute;a como un comando. Si el</target>
        </trans-unit>
        <trans-unit id="48ec8f1e8af52f4ed4957bdfee1ffd49c84a8c6f" translate="yes" xml:space="preserve">
          <source>Any non-whitespace delimiter may replace the slashes. Add space after the &lt;code&gt;s&lt;/code&gt; when using a character allowed in identifiers. If single quotes are used, no interpretation is done on the replacement string (the &lt;code&gt;/e&lt;/code&gt; modifier overrides this, however). Note that Perl treats backticks as normal delimiters; the replacement text is not evaluated as a command. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21321c35f59a007bf7dcddd13bebabd646dd3b58" translate="yes" xml:space="preserve">
          <source>Any number of &lt;code&gt;(*PRUNE)&lt;/code&gt; assertions may be used in a pattern.</source>
          <target state="translated">Se puede usar cualquier n&amp;uacute;mero de afirmaciones &lt;code&gt;(*PRUNE)&lt;/code&gt; en un patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8bc2478d6a5974c2f338a393e6f6ea8ec88b251c" translate="yes" xml:space="preserve">
          <source>Any number of arguments can occur in the list before the array but the input and output arrays must be the last elements in the list.</source>
          <target state="translated">Cualquier número de argumentos puede ocurrir en la lista antes de la matriz,pero las matrices de entrada y salida deben ser los últimos elementos de la lista.</target>
        </trans-unit>
        <trans-unit id="637eecabf535d7591a4a05a68e784539a4cbb56d" translate="yes" xml:space="preserve">
          <source>Any number of tildes and surrounding whitespace will be collapsed to a single space.</source>
          <target state="translated">Cualquier número de tildes y el espacio blanco circundante se colapsará en un solo espacio.</target>
        </trans-unit>
        <trans-unit id="6743acd9891044d5d8bdbb4fb2163336b42729f9" translate="yes" xml:space="preserve">
          <source>Any numerical value returned which is less than SVt_PVAV will be a scalar of some form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c027e1a6e6b64e23c560209fac7288c23f0070f0" translate="yes" xml:space="preserve">
          <source>Any of the &lt;a href=&quot;IO::Socket#CONSTRUCTOR-ARGUMENTS&quot;&gt;&quot;CONSTRUCTOR ARGUMENTS&quot; in IO::Socket&lt;/a&gt; may be passed to the constructor, but if any arguments are provided, then one of them must be the &lt;a href=&quot;IO::Socket#Domain&quot;&gt;&quot;Domain&quot; in IO::Socket&lt;/a&gt; argument. The &lt;a href=&quot;IO::Socket#Domain&quot;&gt;&quot;Domain&quot; in IO::Socket&lt;/a&gt; argument can, by default, be either &lt;code&gt;AF_INET&lt;/code&gt; or &lt;code&gt;AF_UNIX&lt;/code&gt;. Other domains can be used if a proper subclass for the domain family is registered. All other arguments will be passed to the &lt;code&gt;configuration&lt;/code&gt; method of the package for that domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c5d3662ce5a04f9a5a84a78523f9d65e2d1542" translate="yes" xml:space="preserve">
          <source>Any of the bit masks can also be &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. The timeout, if specified, is in seconds, which may be fractional. Note: not all implementations are capable of returning the &lt;code&gt;$timeleft&lt;/code&gt;. If not, they always return &lt;code&gt;$timeleft&lt;/code&gt; equal to the supplied &lt;code&gt;$timeout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799d3a594ea06ab8f69431e4521092706a0ca250" translate="yes" xml:space="preserve">
          <source>Any of the bit masks can also be undef. The timeout, if specified, is in seconds, which may be fractional. Note: not all implementations are capable of returning the $timeleft. If not, they always return $timeleft equal to the supplied $timeout.</source>
          <target state="translated">Cualquiera de las máscaras de mordida también puede ser indefinida.El tiempo de espera,si se especifica,es en segundos,que puede ser fraccionario.Nota:no todas las implementaciones son capaces de devolver el $tiempo restante.Si no,siempre devuelven el tiempo restante igual al tiempo de espera suministrado.</target>
        </trans-unit>
        <trans-unit id="96dac77ef4a45d1d47b4f15ad920f1efda518fb4" translate="yes" xml:space="preserve">
          <source>Any of these modifiers can be set to apply globally to all regular expressions compiled within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re&lt;/code&gt; . See &lt;a href=&quot;re#'%2fflags'-mode&quot;&gt;'/flags' mode in re&lt;/a&gt;.</source>
          <target state="translated">Cualquiera de estos modificadores se puede configurar para que se aplique globalmente a todas las expresiones regulares compiladas dentro del alcance de un &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re&lt;/code&gt; . Consulte el modo &lt;a href=&quot;re#'%2fflags'-mode&quot;&gt;'/ flags' en re&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="511eb3ecca55bf6890b46608108a95afce5c385f" translate="yes" xml:space="preserve">
          <source>Any of these modifiers can be set to apply globally to all regular expressions compiled within the scope of a &lt;code&gt;use re&lt;/code&gt;. See &lt;a href=&quot;re#%27%2Fflags%27-mode&quot;&gt;&quot;'/flags' mode&quot; in re&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72e7a2b4416a01397ed95a3d69723c275ceb3de" translate="yes" xml:space="preserve">
          <source>Any of these statements are nice replacements for &lt;code&gt;BEGIN { &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Exporter; @ISA = qw(Exporter); }&lt;/code&gt; with the same compile-time effect. The basic difference is that &lt;code&gt;base&lt;/code&gt; code interacts with declared &lt;code&gt;fields&lt;/code&gt; while &lt;code&gt;parent&lt;/code&gt; is a streamlined version of the older &lt;code&gt;base&lt;/code&gt; code to just establish the IS-A relationship.</source>
          <target state="translated">Cualquiera de estas declaraciones son buenos reemplazos para &lt;code&gt;BEGIN { &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; Exporter; @ISA = qw(Exporter); }&lt;/code&gt; con el mismo efecto en tiempo de compilaci&amp;oacute;n. La diferencia b&amp;aacute;sica es que el c&amp;oacute;digo &lt;code&gt;base&lt;/code&gt; interact&amp;uacute;a con los &lt;code&gt;fields&lt;/code&gt; declarados , mientras que el &lt;code&gt;parent&lt;/code&gt; es una versi&amp;oacute;n simplificada del c&amp;oacute;digo &lt;code&gt;base&lt;/code&gt; anterior para simplemente establecer la relaci&amp;oacute;n IS-A.</target>
        </trans-unit>
        <trans-unit id="a58afbeb2eaab93b0832f3d91597b76dd426bf94" translate="yes" xml:space="preserve">
          <source>Any of these statements are nice replacements for &lt;code&gt;BEGIN { require Exporter; @ISA = qw(Exporter); }&lt;/code&gt; with the same compile-time effect. The basic difference is that &lt;code&gt;base&lt;/code&gt; code interacts with declared &lt;code&gt;fields&lt;/code&gt; while &lt;code&gt;parent&lt;/code&gt; is a streamlined version of the older &lt;code&gt;base&lt;/code&gt; code to just establish the IS-A relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d3e07363608f1d20995e0548f7b8658feed7f4" translate="yes" xml:space="preserve">
          <source>Any omitted or empty regular expressions will default to &quot;.*&quot;. Please note that each regular expression given is implicitly anchored by adding &quot;^&quot; and &quot;$&quot; to the beginning and end. Also, if a given regular expression starts with a &quot;!&quot; character, then the expression is</source>
          <target state="translated">Cualquier expresión regular omitida o vacía será por defecto &quot;.*&quot;.Tenga en cuenta que cada expresión regular dada está implícitamente anclada agregando &quot;^&quot; y &quot;$&quot; al principio y al final.Además,si una expresión regular dada comienza con un carácter &quot;!&quot;,entonces la expresión es</target>
        </trans-unit>
        <trans-unit id="0f87f06eba2caf7b827d1f8e16065d83ac575560" translate="yes" xml:space="preserve">
          <source>Any other character it taken literally.</source>
          <target state="translated">Cualquier otro personaje que se haya tomado literalmente.</target>
        </trans-unit>
        <trans-unit id="3effb550cd8c77527aa9de81743828a3b7722f93" translate="yes" xml:space="preserve">
          <source>Any other parameters specific to the method</source>
          <target state="translated">Cualquier otro parámetro específico del método</target>
        </trans-unit>
        <trans-unit id="c9c0186423c77aa8d8e97bed87ca7acf745a240d" translate="yes" xml:space="preserve">
          <source>Any other return code means that a flush point was not found. If more data is available, &lt;code&gt;inflateSync&lt;/code&gt; can be called repeatedly with more compressed data until the flush point is found.</source>
          <target state="translated">Cualquier otro c&amp;oacute;digo de retorno significa que no se encontr&amp;oacute; un punto de descarga. Si hay m&amp;aacute;s datos disponibles, &lt;code&gt;inflateSync&lt;/code&gt; se puede llamar repetidamente con m&amp;aacute;s datos comprimidos hasta que se encuentre el punto de descarga.</target>
        </trans-unit>
        <trans-unit id="f1dc9b8d3bdcecba91d97097df903ce52027fe14" translate="yes" xml:space="preserve">
          <source>Any other string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c9cefe7b574f70d77490b40ef9d059faa47f0c" translate="yes" xml:space="preserve">
          <source>Any parameters to be pushed onto the stack should be bracketed by the &lt;code&gt;PUSHMARK&lt;/code&gt; and &lt;code&gt;PUTBACK&lt;/code&gt; macros. The purpose of these two macros, in this context, is to count the number of parameters you are pushing automatically. Then whenever Perl is creating the &lt;code&gt;@_&lt;/code&gt; array for the subroutine, it knows how big to make it.</source>
          <target state="translated">Todos los par&amp;aacute;metros que se van a &lt;code&gt;PUSHMARK&lt;/code&gt; en la pila deben estar entre corchetes con las macros PUSHMARK y &lt;code&gt;PUTBACK&lt;/code&gt; . El prop&amp;oacute;sito de estas dos macros, en este contexto, es contar el n&amp;uacute;mero de par&amp;aacute;metros que est&amp;aacute; presionando autom&amp;aacute;ticamente. Entonces, cada vez que Perl est&amp;aacute; creando la matriz &lt;code&gt;@_&lt;/code&gt; para la subrutina, sabe qu&amp;eacute; tan grande hacerla.</target>
        </trans-unit>
        <trans-unit id="393576095a8de6bc0086f7597df6e48f941f115a" translate="yes" xml:space="preserve">
          <source>Any pattern containing a special backtracking verb that allows an argument has the special behaviour that when executed it sets the current package's &lt;code&gt;$REGERROR&lt;/code&gt; and &lt;code&gt;$REGMARK&lt;/code&gt; variables. When doing so the following rules apply:</source>
          <target state="translated">Cualquier patr&amp;oacute;n que contenga un verbo de retroceso especial que permita un argumento tiene el comportamiento especial de que cuando se ejecuta establece las variables &lt;code&gt;$REGERROR&lt;/code&gt; y &lt;code&gt;$REGMARK&lt;/code&gt; del paquete actual . Al hacerlo, se aplican las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="0f7c0d8ab3a57bbfaec5da2f59e5489aaf2f7ee1" translate="yes" xml:space="preserve">
          <source>Any references that are the same as one of those passed in will be named &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">Cualquier referencia que sea igual a una de las pasadas se llamar&amp;aacute; &lt;code&gt;$VAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0947cd6471d04a9e9e7aba2d6ed254ce36b6a65" translate="yes" xml:space="preserve">
          <source>Any regular expression special characters in &lt;code&gt;$regex&lt;/code&gt; are still special, and the pattern still has to be valid or Perl will complain. For instance, in this pattern there is an unpaired parenthesis.</source>
          <target state="translated">Cualquier car&amp;aacute;cter especial de expresi&amp;oacute;n regular en &lt;code&gt;$regex&lt;/code&gt; sigue siendo especial, y el patr&amp;oacute;n todav&amp;iacute;a tiene que ser v&amp;aacute;lido o Perl se quejar&amp;aacute;. Por ejemplo, en este patr&amp;oacute;n hay un par&amp;eacute;ntesis no apareado.</target>
        </trans-unit>
        <trans-unit id="fe7f6f318181e1a9721562694a44d98bb9f0d89c" translate="yes" xml:space="preserve">
          <source>Any scalar value that doesn&amp;rsquo;t evaluate to 0 or &lt;code&gt;&quot;&quot;&lt;/code&gt; .</source>
          <target state="translated">Cualquier valor escalar que no se eval&amp;uacute;e en 0 o &lt;code&gt;&quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc814185c98806f976443ba7f707c9de190e5102" translate="yes" xml:space="preserve">
          <source>Any scalar value that doesn&amp;rsquo;t evaluate to 0 or &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aef8e8c0d886239b79a86d40fbcb9638ca8176a" translate="yes" xml:space="preserve">
          <source>Any scalar variable may carry &lt;code&gt;PERL_MAGIC_collxfrm&lt;/code&gt; magic that contains the scalar data of the variable, but transformed to such a format that a normal memory comparison can be used to compare the data according to the locale settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9848f5389028c0e6f897c58baee24bbe4b4452b" translate="yes" xml:space="preserve">
          <source>Any scalar variable may carry PERL_MAGIC_collxfrm magic that contains the scalar data of the variable, but transformed to such a format that a normal memory comparison can be used to compare the data according to the locale settings.</source>
          <target state="translated">Cualquier variable escalar puede llevar la magia PERL_MAGIC_collxfrm que contiene los datos escalares de la variable,pero transformados a un formato tal que se puede utilizar una comparación de memoria normal para comparar los datos según los ajustes de la localidad.</target>
        </trans-unit>
        <trans-unit id="38fbec488780a53c892b68c97c1898064ef5cf3c" translate="yes" xml:space="preserve">
          <source>Any simple statement may optionally be followed by a</source>
          <target state="translated">Cualquier declaración simple puede ser opcionalmente seguida por una</target>
        </trans-unit>
        <trans-unit id="6edad6532b87dcd9565ed8ca948fd8e9febfc827" translate="yes" xml:space="preserve">
          <source>Any single character in a pattern matches that same character in the target string, unless the character is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57ad08ad6b4b977666be8da12ed7e9b3597a3e6" translate="yes" xml:space="preserve">
          <source>Any single character matches itself, unless it is a</source>
          <target state="translated">Cualquier personaje individual se ajusta a sí mismo,a menos que sea un</target>
        </trans-unit>
        <trans-unit id="f581a0aac4749093894a9605cfac9a184c97919e" translate="yes" xml:space="preserve">
          <source>Any special flags that might need to be passed to ld to create a shared library suitable for dynamic loading. It is up to the makefile to use it. (See &lt;a href=&quot;../config#lddlflags&quot;&gt;lddlflags in Config&lt;/a&gt;)</source>
          <target state="translated">Cualquier indicador especial que deba pasarse a ld para crear una biblioteca compartida adecuada para la carga din&amp;aacute;mica. Depende del archivo MAKE usarlo. (Ver &lt;a href=&quot;../config#lddlflags&quot;&gt;lddlflags en Config&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="bea6827ac537eb7924457a4cf759d617d88c98bb" translate="yes" xml:space="preserve">
          <source>Any special flags that might need to be passed to ld to create a shared library suitable for dynamic loading. It is up to the makefile to use it. (See &lt;a href=&quot;config#lddlflags&quot;&gt;&quot;lddlflags&quot; in Config&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae1c49f6637fcf58ae140f395f043a2e193fb5a" translate="yes" xml:space="preserve">
          <source>Any statement within the body of a loop that can make a loop prematurely stop looping or skip an &lt;b&gt;iteration&lt;/b&gt;. Generally, you shouldn&amp;rsquo;t try this on roller coasters.</source>
          <target state="translated">Cualquier declaraci&amp;oacute;n dentro del cuerpo de un bucle que pueda hacer que un bucle detenga prematuramente el bucle u omita una &lt;b&gt;iteraci&amp;oacute;n&lt;/b&gt; . Generalmente, no deber&amp;iacute;as probar esto en monta&amp;ntilde;as rusas.</target>
        </trans-unit>
        <trans-unit id="a7b963c94b597f0a356b5a56744621822590c340" translate="yes" xml:space="preserve">
          <source>Any string eval which is executed by code executing in a compartment, or by code called from code executing in a compartment, will be eval'd in the namespace of the compartment. This is potentially a serious problem.</source>
          <target state="translated">Cualquier evaluación de cadena que se ejecute mediante un código que se ejecute en un compartimento,o mediante un código llamado desde un código que se ejecute en un compartimento,se evaluará en el espacio de nombres del compartimento.Esto es potencialmente un problema grave.</target>
        </trans-unit>
        <trans-unit id="8a7a9db7b2a7d9c3bc4a0371b24f090bb005ce01" translate="yes" xml:space="preserve">
          <source>Any switches in the &lt;code&gt;PERLDOC&lt;/code&gt; environment variable will be used before the command line arguments.</source>
          <target state="translated">Todos los modificadores de la variable de entorno &lt;code&gt;PERLDOC&lt;/code&gt; se utilizar&amp;aacute;n antes de los argumentos de la l&amp;iacute;nea de comandos.</target>
        </trans-unit>
        <trans-unit id="7c3b8e236160fc72cba179bfa08e7e8fcf86e97c" translate="yes" xml:space="preserve">
          <source>Any test which does not match a rule will be run in sequence at the end of the run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c697d8a2e427d5d56c9e1028dbc399fcc4b347e2" translate="yes" xml:space="preserve">
          <source>Any time after Perl starts running your main program. See also &lt;b&gt;compile phase&lt;/b&gt;. Run phase is mostly spent in &lt;b&gt;runtime&lt;/b&gt; but may also be spent in &lt;b&gt;compile time&lt;/b&gt; when &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">En cualquier momento despu&amp;eacute;s de que Perl comience a ejecutar su programa principal. Consulte tambi&amp;eacute;n la &lt;b&gt;fase de compilaci&amp;oacute;n&lt;/b&gt; . Fase de ejecuci&amp;oacute;n se gasta sobre todo en &lt;b&gt;tiempo de ejecuci&amp;oacute;n&lt;/b&gt; , pero tambi&amp;eacute;n puede ser gastado en &lt;b&gt;tiempo de compilaci&amp;oacute;n&lt;/b&gt; cuando se &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2c3d3bd0813c99a89a071ee04615c19b004d52d" translate="yes" xml:space="preserve">
          <source>Any time after Perl starts running your main program. See also &lt;b&gt;compile phase&lt;/b&gt;. Run phase is mostly spent in &lt;b&gt;runtime&lt;/b&gt; but may also be spent in &lt;b&gt;compile time&lt;/b&gt; when &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00807e0e44bec9e684bd05f5d6ca841ffb6f513c" translate="yes" xml:space="preserve">
          <source>Any time before Perl starts running your main program. See also &lt;b&gt;run phase&lt;/b&gt;. Compile phase is mostly spent in &lt;b&gt;compile time&lt;/b&gt;, but may also be spent in &lt;b&gt;runtime&lt;/b&gt; when &lt;code&gt;BEGIN&lt;/code&gt; blocks, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; declarations, or constant subexpressions are being evaluated. The startup and import code of any &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; declaration is also run during compile phase.</source>
          <target state="translated">En cualquier momento antes de que Perl comience a ejecutar su programa principal. Consulte tambi&amp;eacute;n la &lt;b&gt;fase de ejecuci&amp;oacute;n&lt;/b&gt; . La fase de compilaci&amp;oacute;n se gasta principalmente en &lt;b&gt;tiempo de compilaci&amp;oacute;n&lt;/b&gt; , pero tambi&amp;eacute;n se puede gastar en &lt;b&gt;tiempo&lt;/b&gt; de &lt;b&gt;ejecuci&amp;oacute;n&lt;/b&gt; cuando se &lt;code&gt;BEGIN&lt;/code&gt; bloques BEGIN , declaraciones de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , o subexpresiones constantes. El c&amp;oacute;digo de inicio e importaci&amp;oacute;n de cualquier declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n se ejecuta durante la fase de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="89bbb32771fb02c8c9a2b7c9c816ca4c3b49cddb" translate="yes" xml:space="preserve">
          <source>Any time before Perl starts running your main program. See also &lt;b&gt;run phase&lt;/b&gt;. Compile phase is mostly spent in &lt;b&gt;compile time&lt;/b&gt;, but may also be spent in &lt;b&gt;runtime&lt;/b&gt; when &lt;code&gt;BEGIN&lt;/code&gt; blocks, &lt;code&gt;use&lt;/code&gt; or &lt;code&gt;no&lt;/code&gt; declarations, or constant subexpressions are being evaluated. The startup and import code of any &lt;code&gt;use&lt;/code&gt; declaration is also run during compile phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08963a941982a994fe2895ea2c775da89cda3e41" translate="yes" xml:space="preserve">
          <source>Any time you're doing a &quot;this equals that&quot; sort of test, use &lt;code&gt;is()&lt;/code&gt;. It even works on arrays. The test is always in scalar context, so you can test how many elements are in an array this way. [5]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa83fb5c769020023303529abde854eefeaa0d66" translate="yes" xml:space="preserve">
          <source>Any version between 1.00 and 1.82 inclusive would be acceptable, except for 1.75.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34097998161c40da19bcb944501b160cf796dc7" translate="yes" xml:space="preserve">
          <source>Any version from version 1.2 onward, except version 1.5, that also precedes version 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5515dadcc88944ac0dd16b3a430dc89d34c3d0" translate="yes" xml:space="preserve">
          <source>Any version which &quot;looks like a number&quot;, see &lt;a href=&quot;#Decimal-Versions&quot;&gt;&quot;Decimal Versions&quot;&lt;/a&gt;. This also includes versions with a single decimal point and a single embedded underscore, see &lt;a href=&quot;#Alpha-Versions&quot;&gt;&quot;Alpha Versions&quot;&lt;/a&gt;, even though these must be quoted to preserve the underscore formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc6b65d5c451906eff3dea5dd5120214b2325bd" translate="yes" xml:space="preserve">
          <source>Any/all fields and accessors are autovivified into existence. There is no way to know what metadata may be added, so any is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bea195cc0120bd58a5f6ddfad70e861a932bba8" translate="yes" xml:space="preserve">
          <source>AnyDBM_File</source>
          <target state="translated">AnyDBM_File</target>
        </trans-unit>
        <trans-unit id="abf989fc06a7a8552843b93b1474a012067198d8" translate="yes" xml:space="preserve">
          <source>AnyDBM_File - provide framework for multiple DBMs</source>
          <target state="translated">AnyDBM_File-proporciona un marco de trabajo para múltiples DBMs</target>
        </trans-unit>
        <trans-unit id="29c9b5ccd4a8843ac06d93de6db98a168d9747a5" translate="yes" xml:space="preserve">
          <source>Anyone interested in resurrecting this file should pull the old version from the MakeMaker CVS repository and contact makemaker@perl.org.</source>
          <target state="translated">Cualquiera que esté interesado en resucitar este archivo debe sacar la versión antigua del repositorio CVS de MakeMaker y ponerse en contacto con makemaker@perl.org.</target>
        </trans-unit>
        <trans-unit id="f1313a33b13e0ad302add61f009e5344735237ef" translate="yes" xml:space="preserve">
          <source>Anything after this line is the description of XSUB functions. These descriptions are translated by &lt;b&gt;xsubpp&lt;/b&gt; into C code which implements these functions using Perl calling conventions, and which makes these functions visible from Perl interpreter.</source>
          <target state="translated">Cualquier cosa despu&amp;eacute;s de esta l&amp;iacute;nea es la descripci&amp;oacute;n de las funciones XSUB. Estas descripciones son traducidas por &lt;b&gt;xsubpp&lt;/b&gt; a c&amp;oacute;digo C que implementa estas funciones usando convenciones de llamadas de Perl, y que hace que estas funciones sean visibles desde el int&amp;eacute;rprete de Perl.</target>
        </trans-unit>
        <trans-unit id="7767ddde79c4e54f955f8a8770af897489800878" translate="yes" xml:space="preserve">
          <source>Anything before this line is plain C code which describes which headers to include, and defines some convenience functions. No translations are performed on this part, apart from having embedded POD documentation skipped over (see &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;) it goes into the generated output C file as is.</source>
          <target state="translated">Cualquier cosa antes de esta l&amp;iacute;nea es c&amp;oacute;digo C simple que describe qu&amp;eacute; encabezados incluir y define algunas funciones de conveniencia. No se realizan traducciones en esta parte, aparte de que se omite la documentaci&amp;oacute;n de POD incrustada (ver &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; ), ingresa en el archivo C de salida generado tal como est&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="9e010e0ae6e0590e5e1834d00dd2ae5e4328a555" translate="yes" xml:space="preserve">
          <source>Anything between white space and an end of line within a &lt;code&gt;MANIFEST&lt;/code&gt; file is considered to be a comment. Any line beginning with # is also a comment. Beginning with ExtUtils::Manifest 1.52, a filename may contain whitespace characters if it is enclosed in single quotes; single quotes or backslashes in that filename must be backslash-escaped.</source>
          <target state="translated">Cualquier cosa entre un espacio en blanco y un final de l&amp;iacute;nea dentro de un archivo &lt;code&gt;MANIFEST&lt;/code&gt; se considera un comentario. Cualquier l&amp;iacute;nea que comience con # tambi&amp;eacute;n es un comentario. A partir de ExtUtils :: Manifest 1.52, un nombre de archivo puede contener espacios en blanco si est&amp;aacute; entre comillas simples; las comillas simples o las barras invertidas en ese nombre de archivo deben tener un escape de barra invertida.</target>
        </trans-unit>
        <trans-unit id="d23663e502213da0e6ba19093e62429d22e02845" translate="yes" xml:space="preserve">
          <source>Anything else is a Perl-specific convenience abbreviation. Specify one or more scripts by names if you want short names that are script-specific.</source>
          <target state="translated">Cualquier otra cosa es una abreviatura de conveniencia específica de Perl.Especifique uno o más guiones por nombre si quiere nombres cortos que sean específicos del guión.</target>
        </trans-unit>
        <trans-unit id="7d749de0de5c93aeb0a7eeebe5226cb0dd35304d" translate="yes" xml:space="preserve">
          <source>Anything in EXPR that matches PATTERN is taken to be a separator that separates the EXPR into substrings (called &quot;</source>
          <target state="translated">Cualquier cosa en el EXPR que coincida con el PATRÓN se toma como un separador que separa el EXPR en subcadenas (llamado &quot;</target>
        </trans-unit>
        <trans-unit id="beac50162375e06d01167c42cce2dc5426c4e092" translate="yes" xml:space="preserve">
          <source>Anything marked as BE is Big Endian (or network byte order) and LE is Little Endian (aka VAX byte order). For anything not marked either BE or LE, a character called Byte Order Mark (BOM) indicating the endianness is prepended to the string.</source>
          <target state="translated">Cualquier cosa marcada como BE es Big Endian (o orden de bytes de la red)y LE es Little Endian (alias orden de bytes VAX).Para todo lo que no esté marcado como BE o LE,un carácter llamado Marca de Orden de Byte (BOM),que indica la endianidad,se prepara para la cadena.</target>
        </trans-unit>
        <trans-unit id="09e186b65803161a334d1142c77aae1e01d4460e" translate="yes" xml:space="preserve">
          <source>Anything not listed here is not part of the public API, and should not be used by extension writers at all. For these reasons, blindly using functions listed in proto.h is to be avoided when writing extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c6485292ca5760fa287d9f9ae8c3f36373f766" translate="yes" xml:space="preserve">
          <source>Anything put here will be passed to &lt;a href=&quot;ExtUtils::MM_Any#postamble-%28o%29&quot;&gt;MY::postamble()&lt;/a&gt; if you have one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595fc50992e17250599953061722960b35607014" translate="yes" xml:space="preserve">
          <source>Anything put here will be passed to MY::postamble() if you have one.</source>
          <target state="translated">Cualquier cosa que se ponga aquí será pasada a MI::postamble()si tiene uno.</target>
        </trans-unit>
        <trans-unit id="eb489bfffc02c3f32a21cb7909eae48c47e3d9b4" translate="yes" xml:space="preserve">
          <source>Anything that follows &lt;code&gt;#&lt;/code&gt; is treated as a comment.</source>
          <target state="translated">Todo lo que sigue a &lt;code&gt;#&lt;/code&gt; se considera un comentario.</target>
        </trans-unit>
        <trans-unit id="aaea73d52ae0a47a220342d260ea4c54a027d322" translate="yes" xml:space="preserve">
          <source>Anything you can legally say in a spot where a &lt;b&gt;value&lt;/b&gt; is required. Typically composed of &lt;b&gt;literals&lt;/b&gt;, &lt;b&gt;variables&lt;/b&gt;, &lt;b&gt;operators&lt;/b&gt;, &lt;b&gt;functions&lt;/b&gt;, and &lt;b&gt;subroutine&lt;/b&gt; calls, not necessarily in that order.</source>
          <target state="translated">Todo lo que pueda decir legalmente en un lugar donde se requiera un &lt;b&gt;valor&lt;/b&gt; . Normalmente se compone de &lt;b&gt;literales&lt;/b&gt; , &lt;b&gt;variables&lt;/b&gt; , &lt;b&gt;operadores&lt;/b&gt; , &lt;b&gt;funciones&lt;/b&gt; y llamadas a &lt;b&gt;subrutinas&lt;/b&gt; , no necesariamente en ese orden.</target>
        </trans-unit>
        <trans-unit id="90ac4d3777dbcf43ec0f981e70e6cb4230e6e6f9" translate="yes" xml:space="preserve">
          <source>Anyway, here it is. Should run on perl v4 or greater. Maybe less.</source>
          <target state="translated">De todos modos,aquí está.Debería funcionar con perl v4 o superior.Tal vez menos.</target>
        </trans-unit>
        <trans-unit id="2e755b3358691db1161de932e3c7e74daf5374dd" translate="yes" xml:space="preserve">
          <source>Anyway, this is what you can do if you can't help yourself.</source>
          <target state="translated">De todos modos,esto es lo que puedes hacer si no puedes evitarlo.</target>
        </trans-unit>
        <trans-unit id="61fbeb450419f819d1d3fb527e61bbd77f1f245b" translate="yes" xml:space="preserve">
          <source>Anywhere you'd put an identifier (or chain of identifiers) as part of a variable or subroutine name, you can replace the identifier with a BLOCK returning a reference of the correct type. In other words, the previous examples could be written like this:</source>
          <target state="translated">En cualquier lugar donde pongas un identificador (o cadena de identificadores)como parte de un nombre de variable o subrutina,puedes sustituir el identificador por un BLOQUE que devuelva una referencia del tipo correcto.En otras palabras,los ejemplos anteriores podrían escribirse así:</target>
        </trans-unit>
        <trans-unit id="c4897c70becad60eb583b067e9239c22c138553c" translate="yes" xml:space="preserve">
          <source>Anywhere you'd put an identifier (or chain of identifiers) as part of a variable or subroutine name, you can replace the identifier with a simple scalar variable containing a reference of the correct type:</source>
          <target state="translated">En cualquier lugar donde se ponga un identificador (o cadena de identificadores)como parte de un nombre de variable o subrutina,se puede sustituir el identificador por una simple variable escalar que contenga una referencia del tipo correcto:</target>
        </trans-unit>
        <trans-unit id="1152548ba48e279bc989a0c42814e21456001922" translate="yes" xml:space="preserve">
          <source>Apache::GZip Revisited</source>
          <target state="translated">Apache::GZip Revisado</target>
        </trans-unit>
        <trans-unit id="eef8ccdc1b5028a7590e9e7eb6807d9775169439" translate="yes" xml:space="preserve">
          <source>Apart from being non-portable to some operating systems, this made it difficult to use &lt;code&gt;gzopen&lt;/code&gt; in situations where you wanted to extract/create a gzip data stream that is embedded in a larger file, without having to resort to opening and closing the file multiple times.</source>
          <target state="translated">Adem&amp;aacute;s de no ser port&amp;aacute;til para algunos sistemas operativos, esto dificultaba el uso de &lt;code&gt;gzopen&lt;/code&gt; en situaciones en las que deseaba extraer / crear un flujo de datos gzip que est&amp;aacute; incrustado en un archivo m&amp;aacute;s grande, sin tener que recurrir a abrir y cerrar el archivo varias veces. veces.</target>
        </trans-unit>
        <trans-unit id="4e3144b6ad1fe422c840b3431e9e995cf1a334a3" translate="yes" xml:space="preserve">
          <source>Apart from discussing the C interface provided by Perl for writing callbacks the document uses a series of examples to show how the interface actually works in practice. In addition some techniques for coding callbacks are covered.</source>
          <target state="translated">Además de examinar la interfaz C que proporciona Perl para escribir las llamadas de retorno,el documento utiliza una serie de ejemplos para mostrar cómo funciona realmente la interfaz en la práctica.Además,se abordan algunas técnicas para codificar las devoluciones de llamada.</target>
        </trans-unit>
        <trans-unit id="6c594049f559b0aa030aaa7fc2712868c419ba1f" translate="yes" xml:space="preserve">
          <source>Apart from now being a boolean, the &lt;code&gt;$^W&lt;/code&gt; variable operates in exactly the same horrible uncontrolled global way, except that it cannot disable/enable default warnings.</source>
          <target state="translated">Aparte de ser ahora un valor booleano, la variable &lt;code&gt;$^W&lt;/code&gt; opera exactamente de la misma manera global descontrolada y horrible, excepto que no puede deshabilitar / habilitar las advertencias predeterminadas.</target>
        </trans-unit>
        <trans-unit id="03dfbadf395083cbac3ebe537f5fd26158769beb" translate="yes" xml:space="preserve">
          <source>Apart from resetting the iterator, &lt;code&gt;values @array&lt;/code&gt; in list context is the same as plain &lt;code&gt;@array&lt;/code&gt;. (We recommend that you use void context &lt;code&gt;keys @array&lt;/code&gt; for this, but reasoned that taking &lt;code&gt;values @array&lt;/code&gt; out would require more documentation than leaving it in.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177ebac14cb8719946f6e7935d5609a89f70ecb3" translate="yes" xml:space="preserve">
          <source>Apart from the behavior described above, Perl does not expand multiple levels of interpolation. In particular, contrary to the expectations of shell programmers, back-quotes do</source>
          <target state="translated">Aparte del comportamiento descrito anteriormente,Perl no expande los múltiples niveles de interpolación.En particular,contrariamente a las expectativas de los programadores de shell,las comillas hacen</target>
        </trans-unit>
        <trans-unit id="5e5b5fcfebfb49c5cb95c4adedad19fe315234ce" translate="yes" xml:space="preserve">
          <source>Apart from the first parameter, import can accept an optional list of parameters. These can be used to pass parameters to the filter. For example:</source>
          <target state="translated">Aparte del primer parámetro,la importación puede aceptar una lista opcional de parámetros.Estos pueden ser usados para pasar parámetros al filtro.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ea290b2592c04a29efbf4275fbffd4e15c783ad7" translate="yes" xml:space="preserve">
          <source>Apart from the overstrike, it in all ways functions like Pod::Text. See &lt;a href=&quot;../text&quot;&gt;Pod::Text&lt;/a&gt; for details and available options.</source>
          <target state="translated">Aparte del overstrike, en todos los sentidos funciona como Pod :: Text. Consulte &lt;a href=&quot;../text&quot;&gt;Pod :: Text&lt;/a&gt; para obtener detalles y opciones disponibles.</target>
        </trans-unit>
        <trans-unit id="da695cf6105edcb1a8b40d8d706c52df71f42750" translate="yes" xml:space="preserve">
          <source>Apart from the overstrike, it in all ways functions like Pod::Text. See &lt;a href=&quot;Pod::Text&quot;&gt;Pod::Text&lt;/a&gt; for details and available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9828a7d2d366fc4b8702a1f03e94b53802450369" translate="yes" xml:space="preserve">
          <source>Apollo Domain/OS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f771942800f2d67122e33798021164ef80e3a2" translate="yes" xml:space="preserve">
          <source>App::Cpan</source>
          <target state="translated">App::Cpan</target>
        </trans-unit>
        <trans-unit id="5d59978967734805e51a9980657b59fbf6558d9e" translate="yes" xml:space="preserve">
          <source>App::Cpan - easily interact with CPAN from the command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fd50fcdac085cfabfc65f7db775038f8cecc31" translate="yes" xml:space="preserve">
          <source>App::Prove</source>
          <target state="translated">App::Prove</target>
        </trans-unit>
        <trans-unit id="3a1656ea85b06be3923d0763368c6414c09514c6" translate="yes" xml:space="preserve">
          <source>App::Prove - Implements the &lt;code&gt;prove&lt;/code&gt; command.</source>
          <target state="translated">App :: Prove - Implementa el comando de &lt;code&gt;prove&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7174791288d36e70929f8c68ba39037f796046e4" translate="yes" xml:space="preserve">
          <source>App::Prove::State</source>
          <target state="translated">App::Prove::State</target>
        </trans-unit>
        <trans-unit id="39ce25b85982de5bdaced90b86fd5469adc9a51a" translate="yes" xml:space="preserve">
          <source>App::Prove::State - State storage for the &lt;code&gt;prove&lt;/code&gt; command.</source>
          <target state="translated">App :: Prove :: State - Almacenamiento de estado para el comando de &lt;code&gt;prove&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96f79883bf2f299a489c18241a0f9c3ce22137d2" translate="yes" xml:space="preserve">
          <source>App::Prove::State::Result</source>
          <target state="translated">App::Prove::State::Result</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
