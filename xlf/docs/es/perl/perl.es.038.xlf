<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="dbd5594c7134763067cde3b54f3bfaeaa68b552a" translate="yes" xml:space="preserve">
          <source>If the child process follows the convention of C programs compiled with the _POSIX_EXIT macro set, the status value will contain the actual value of 0 to 255 returned by that program on a normal exit.</source>
          <target state="translated">Si el proceso hijo sigue la convención de los programas C compilados con el conjunto de macros _POSIX_EXIT,el valor de estado contendrá el valor real de 0 a 255 devuelto por ese programa en una salida normal.</target>
        </trans-unit>
        <trans-unit id="ba30380d4c3fff1189949a912a23e2f3c323237f" translate="yes" xml:space="preserve">
          <source>If the class shown in &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt; were placed in the MyClass.pm module, then the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2359effbd1215640880aada1292b5fa0877c9a" translate="yes" xml:space="preserve">
          <source>If the class shown in &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt; were placed in the MyClass.pm module, then the following code:</source>
          <target state="translated">Si la clase que se muestra en &lt;a href=&quot;#SYNOPSIS&quot;&gt;SINOPSIS&lt;/a&gt; se coloc&amp;oacute; en el m&amp;oacute;dulo MyClass.pm, entonces el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="2f9ec72ad3a19d5c4b84af5eba887a50b7eef9b5" translate="yes" xml:space="preserve">
          <source>If the client asks for &quot;fr&quot;, that will look up successfully in %greetings, to the value &quot;Bonjour&quot;. And if the client asks for &quot;i-mingo&quot;, that will look up successfully in %greetings, to the value &quot;Hau'&quot;.</source>
          <target state="translated">Si el cliente pregunta por &quot;fr&quot;,que mirará con éxito en % saludos,al valor &quot;Bonjour&quot;.Y si el cliente pide &quot;i-mingo&quot;,que mirará hacia arriba con éxito en %saludos,con el valor &quot;Hau'&quot;.</target>
        </trans-unit>
        <trans-unit id="1e012fb4a0052bc107066983e24cd424b0582af0" translate="yes" xml:space="preserve">
          <source>If the code point is unassigned, this returns the block it would belong to if it were assigned. (If the Unicode version being used is so early as to not have blocks, all code points are considered to be in &lt;code&gt;No_Block&lt;/code&gt; .)</source>
          <target state="translated">Si el punto de c&amp;oacute;digo no est&amp;aacute; asignado, esto devuelve el bloque al que pertenecer&amp;iacute;a si estuviera asignado. (Si la versi&amp;oacute;n Unicode que se est&amp;aacute; utilizando es tan temprana que no tiene bloques, se considera que todos los puntos de c&amp;oacute;digo est&amp;aacute;n en &lt;code&gt;No_Block&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="318dcf1cce3429cb8c9fd8f8fb72e309dc55b11b" translate="yes" xml:space="preserve">
          <source>If the code point is unassigned, this returns the block it would belong to if it were assigned. (If the Unicode version being used is so early as to not have blocks, all code points are considered to be in &lt;code&gt;No_Block&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46675f67eada0291c64ffce7fc8980b9b58c2b77" translate="yes" xml:space="preserve">
          <source>If the code to be executed doesn't vary, you may use the eval-BLOCK form to trap run-time errors without incurring the penalty of recompiling each time. The error, if any, is still returned in &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt;. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced2db748e9e7079888c75fca8f7175caebcea61" translate="yes" xml:space="preserve">
          <source>If the code to be executed doesn't vary, you may use the eval-BLOCK form to trap run-time errors without incurring the penalty of recompiling each time. The error, if any, is still returned in &lt;code&gt;$@&lt;/code&gt; . Examples:</source>
          <target state="translated">Si el c&amp;oacute;digo que se ejecutar&amp;aacute; no var&amp;iacute;a, puede utilizar el formulario eval-BLOCK para atrapar errores en tiempo de ejecuci&amp;oacute;n sin incurrir en la penalizaci&amp;oacute;n de volver a compilar cada vez. El error, si lo hay, todav&amp;iacute;a se devuelve en &lt;code&gt;$@&lt;/code&gt; . Ejemplos:</target>
        </trans-unit>
        <trans-unit id="2bd498c74c7384947431c9fbfc4c96437164ae53" translate="yes" xml:space="preserve">
          <source>If the code to execute had been passed in as a string, &lt;code&gt;'$line = &amp;lt;STDIN&amp;gt;'&lt;/code&gt; , there would have been no way for the hypothetical timeout() function to access the lexical variable $line back in its caller's scope.</source>
          <target state="translated">Si el c&amp;oacute;digo a ejecutar se hubiera pasado como una cadena, &lt;code&gt;'$line = &amp;lt;STDIN&amp;gt;'&lt;/code&gt; , no habr&amp;iacute;a habido forma de que la funci&amp;oacute;n hipot&amp;eacute;tica timeout () acceda a la variable l&amp;eacute;xica $ line en el alcance de su llamador.</target>
        </trans-unit>
        <trans-unit id="c1827c22ec543702fffafe0a0fe1de8c30879660" translate="yes" xml:space="preserve">
          <source>If the code to execute had been passed in as a string, &lt;code&gt;'$line = &amp;lt;STDIN&amp;gt;'&lt;/code&gt;, there would have been no way for the hypothetical timeout() function to access the lexical variable $line back in its caller's scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68179989040030e944377fc50f5fa69dee822170" translate="yes" xml:space="preserve">
          <source>If the command works, you can move to the next step, but beware: &lt;b&gt;You'll have to remove the directory from the device once you are done! Unlike &lt;i&gt;/mnt/asec&lt;/i&gt;, &lt;i&gt;/data/local/tmp&lt;/i&gt; may not get automatically garbage collected once you shut off the phone&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c340c9bb0fb834396be0e28dd3dddd81bf15437" translate="yes" xml:space="preserve">
          <source>If the condition expression of a &lt;code&gt;while&lt;/code&gt; statement is based on any of a group of iterative expression types then it gets some magic treatment. The affected iterative expression types are &lt;a href=&quot;perlfunc#readline-EXPR&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&lt;code&gt;&amp;lt;FILEHANDLE&amp;gt;&lt;/code&gt;&lt;/a&gt; input operator, &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#glob-EXPR&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&lt;code&gt;&amp;lt;PATTERN&amp;gt;&lt;/code&gt;&lt;/a&gt; globbing operator, and &lt;a href=&quot;perlfunc#each-HASH&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt;. If the condition expression is one of these expression types, then the value yielded by the iterative operator will be implicitly assigned to &lt;code&gt;$_&lt;/code&gt;. If the condition expression is one of these expression types or an explicit assignment of one of them to a scalar, then the condition actually tests for definedness of the expression's value, not for its regular truth value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5dcda0eb63d695c2273d9f58a5b27fc7e844c60" translate="yes" xml:space="preserve">
          <source>If the configurations variable &lt;code&gt;build_dir_reuse&lt;/code&gt; is set to a true value, then CPAN.pm reads the collected YAML files. If the stored signature matches the currently running perl, the stored state is loaded into memory such that persistence between sessions is effectively established.</source>
          <target state="translated">Si la variable de configuraci&amp;oacute;n &lt;code&gt;build_dir_reuse&lt;/code&gt; se establece en un valor verdadero, CPAN.pm lee los archivos YAML recopilados. Si la firma almacenada coincide con el perl que se est&amp;aacute; ejecutando actualmente, el estado almacenado se carga en la memoria de manera que la persistencia entre sesiones se establece de manera efectiva.</target>
        </trans-unit>
        <trans-unit id="a91d44bc473043f072a494275450d9c876250d17" translate="yes" xml:space="preserve">
          <source>If the connection is via a firewall then the &lt;code&gt;authorize&lt;/code&gt; method will be called with no arguments.</source>
          <target state="translated">Si la conexi&amp;oacute;n es a trav&amp;eacute;s de un cortafuegos , se llamar&amp;aacute; al m&amp;eacute;todo de &lt;code&gt;authorize&lt;/code&gt; sin argumentos.</target>
        </trans-unit>
        <trans-unit id="880ff18ec98ddcf514d383275dae13c355bbcadf" translate="yes" xml:space="preserve">
          <source>If the construct is a here-doc, the ending delimiter is a line that has a terminating string as the content. Therefore &lt;code&gt;&amp;lt;&amp;lt;EOF&lt;/code&gt; is terminated by &lt;code&gt;EOF&lt;/code&gt; immediately followed by &lt;code&gt;&quot;\n&quot;&lt;/code&gt; and starting from the first column of the terminating line. When searching for the terminating line of a here-doc, nothing is skipped. In other words, lines after the here-doc syntax are compared with the terminating string line by line.</source>
          <target state="translated">Si la construcci&amp;oacute;n es un here-doc, el delimitador final es una l&amp;iacute;nea que tiene una cadena final como contenido. Por lo tanto, &lt;code&gt;&amp;lt;&amp;lt;EOF&lt;/code&gt; termina con &lt;code&gt;EOF&lt;/code&gt; seguido inmediatamente por &lt;code&gt;&quot;\n&quot;&lt;/code&gt; y comenzando desde la primera columna de la l&amp;iacute;nea de terminaci&amp;oacute;n. Al buscar la l&amp;iacute;nea final de un here-doc, no se omite nada. En otras palabras, las l&amp;iacute;neas despu&amp;eacute;s de la sintaxis here-doc se comparan con la cadena de terminaci&amp;oacute;n l&amp;iacute;nea por l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="e1f5405c8fb7cef756ea27523f26d6d391697258" translate="yes" xml:space="preserve">
          <source>If the constructor fails undef will be returned and an error message will be in $@</source>
          <target state="translated">Si el constructor falla,Undef será devuelto y el mensaje de error será en $@.</target>
        </trans-unit>
        <trans-unit id="fd68f60bc1a46c89ed70417ef132417733df0aab" translate="yes" xml:space="preserve">
          <source>If the constructor fails, it will set &lt;code&gt;$@&lt;/code&gt; to an appropriate error message; this may be from &lt;code&gt;$!&lt;/code&gt; or it may be some other string; not every failure necessarily has an associated &lt;code&gt;errno&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03d6a855f28c1f0fcb373d36da3e2b752b1b618" translate="yes" xml:space="preserve">
          <source>If the constructor is only passed a single argument, it is assumed to be a &lt;code&gt;Peer&lt;/code&gt; specification.</source>
          <target state="translated">Si al constructor solo se le pasa un &amp;uacute;nico argumento, se asume que es una especificaci&amp;oacute;n de &lt;code&gt;Peer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59d6c514d80580b526f459658680b5bcb3039600" translate="yes" xml:space="preserve">
          <source>If the constructor is only passed a single argument, it is assumed to be a &lt;code&gt;PeerAddr&lt;/code&gt; specification.</source>
          <target state="translated">Si al constructor solo se le pasa un &amp;uacute;nico argumento, se supone que es una especificaci&amp;oacute;n &lt;code&gt;PeerAddr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="253c66bbe032a626b97c6e706376db98b636ddae" translate="yes" xml:space="preserve">
          <source>If the constructor is passed a defined but false value for the &lt;code&gt;Blocking&lt;/code&gt; argument then the socket is put into non-blocking mode. When in non-blocking mode, the socket will not be set up by the time the constructor returns, because the underlying &lt;code&gt;connect(2)&lt;/code&gt; syscall would otherwise have to block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1d4da7e238174b01de906293d93c6822b7ffed" translate="yes" xml:space="preserve">
          <source>If the count doesn't impress your friends, then the code might. :-)</source>
          <target state="translated">Si el recuento no impresiona a tus amigos,entonces el código podría.:-)</target>
        </trans-unit>
        <trans-unit id="e2812a31f32729d7d8acbab2252b618f1597089e" translate="yes" xml:space="preserve">
          <source>If the current directory is not writable, file is created using modified &lt;code&gt;tmpnam&lt;/code&gt; , so there may be a race condition.</source>
          <target state="translated">Si no se puede escribir en el directorio actual, el archivo se crea utilizando &lt;code&gt;tmpnam&lt;/code&gt; modificado , por lo que puede haber una condici&amp;oacute;n de carrera.</target>
        </trans-unit>
        <trans-unit id="58341845d1b46d579ba494b307ff64132940c287" translate="yes" xml:space="preserve">
          <source>If the current directory is not writable, file is created using modified &lt;code&gt;tmpnam&lt;/code&gt;, so there may be a race condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494e23aba89eecf5e12f5237686e230eddf4cf1f" translate="yes" xml:space="preserve">
          <source>If the current tests are considered &quot;TODO&quot; it will return the reason, if any. This reason can come from a &lt;code&gt;$TODO&lt;/code&gt; variable or the last call to &lt;code&gt;todo_start()&lt;/code&gt; .</source>
          <target state="translated">Si las pruebas actuales se consideran &quot;TODO&quot;, devolver&amp;aacute; el motivo, si lo hubiera. Esta raz&amp;oacute;n puede provenir de una variable &lt;code&gt;$TODO&lt;/code&gt; o la &amp;uacute;ltima llamada a &lt;code&gt;todo_start()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33c537a42d68a9fab37456220c53df0c1404714b" translate="yes" xml:space="preserve">
          <source>If the current tests are considered &quot;TODO&quot; it will return the reason, if any. This reason can come from a &lt;code&gt;$TODO&lt;/code&gt; variable or the last call to &lt;code&gt;todo_start()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07a75af0e09b32f52321893f3368ffdcf3680ce" translate="yes" xml:space="preserve">
          <source>If the data the &lt;code&gt;info&lt;/code&gt; facet needs to convey can be represented as a table then the data may be placed in this attribute in a more raw form for better display. The data must also be represented in the &lt;code&gt;details&lt;/code&gt; attribute for renderers which do not support rendering tables directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc2b173d8d4940a748b9c83e49e0862799d41a0" translate="yes" xml:space="preserve">
          <source>If the debugging output of &lt;code&gt;-D&lt;/code&gt; doesn't help you, it's time to step through perl's execution with a source-level debugger.</source>
          <target state="translated">Si la salida de depuraci&amp;oacute;n de &lt;code&gt;-D&lt;/code&gt; no le ayuda, es hora de pasar por la ejecuci&amp;oacute;n de perl con un depurador de nivel de fuente.</target>
        </trans-unit>
        <trans-unit id="e01dfde61dfe31eebc6c4d98caf34437480ee91e" translate="yes" xml:space="preserve">
          <source>If the default collation sequence is used, and the BASE is less than or equal to 36, the letter case in STR is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9b61b179e59a5faa76c718b44a80bf30b29231" translate="yes" xml:space="preserve">
          <source>If the deferred-write buffer isn't yet full, but the total size of the buffer and the read cache would exceed the &lt;code&gt;memory&lt;/code&gt; limit, the oldest records will be expired from the read cache until the total size is under the limit.</source>
          <target state="translated">Si el b&amp;uacute;fer de escritura diferida a&amp;uacute;n no est&amp;aacute; lleno, pero el tama&amp;ntilde;o total del b&amp;uacute;fer y el cach&amp;eacute; de lectura exceden el l&amp;iacute;mite de &lt;code&gt;memory&lt;/code&gt; , los registros m&amp;aacute;s antiguos caducar&amp;aacute;n del cach&amp;eacute; de lectura hasta que el tama&amp;ntilde;o total est&amp;eacute; por debajo del l&amp;iacute;mite.</target>
        </trans-unit>
        <trans-unit id="2d787ba93d433e8611c0010f5b5125e21c2fae5b" translate="yes" xml:space="preserve">
          <source>If the delimiter chosen is a single quote, no interpolation is done on either the</source>
          <target state="translated">Si el delimitador elegido es una sola cita,no se hace ninguna interpolación sobre</target>
        </trans-unit>
        <trans-unit id="938284088206ea35ed759b0277c2738a57db55da" translate="yes" xml:space="preserve">
          <source>If the delimiter chosen is a single quote, no variable interpolation is done on either the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd691ad27529116a3a5593dc1f80d4b01d408999" translate="yes" xml:space="preserve">
          <source>If the destination (second argument) already exists and is a directory, and the source (first argument) is not a filehandle, then the source file will be copied into the directory specified by the destination, using the same base name as the source file. It's a failure to have a filehandle as the source when the destination is a directory.</source>
          <target state="translated">Si el destino (segundo argumento)ya existe y es un directorio,y la fuente (primer argumento)no es un filehandle,entonces el archivo fuente se copiará en el directorio especificado por el destino,utilizando el mismo nombre base que el archivo fuente.Es un fallo tener un filehandle como fuente cuando el destino es un directorio.</target>
        </trans-unit>
        <trans-unit id="bf967ef029273cc2d212ca164cc9a8a6a20b4430" translate="yes" xml:space="preserve">
          <source>If the element type does not start with a &lt;code&gt;'*'&lt;/code&gt; , the accessor returns the element value (after assignment). If the element type starts with a &lt;code&gt;'*'&lt;/code&gt; , a reference to the element itself is returned.</source>
          <target state="translated">Si el tipo de elemento no comienza con un &lt;code&gt;'*'&lt;/code&gt; , el descriptor de acceso devuelve el valor del elemento (despu&amp;eacute;s de la asignaci&amp;oacute;n). Si el tipo de elemento comienza con un &lt;code&gt;'*'&lt;/code&gt; , se devuelve una referencia al elemento en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="087f6b4ba4b4848e4cef927f8a6659e4cd63651c" translate="yes" xml:space="preserve">
          <source>If the element type does not start with a &lt;code&gt;'*'&lt;/code&gt;, the accessor returns the element value (after assignment). If the element type starts with a &lt;code&gt;'*'&lt;/code&gt;, a reference to the element itself is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e23930732591461e14ec21d8b1f90dcd530ad74" translate="yes" xml:space="preserve">
          <source>If the element type is &lt;code&gt;'$'&lt;/code&gt; , the value of the element (after assignment) is returned. If the element type is &lt;code&gt;'*$'&lt;/code&gt; , a reference to the element is returned.</source>
          <target state="translated">Si el tipo de elemento es &lt;code&gt;'$'&lt;/code&gt; , se devuelve el valor del elemento (despu&amp;eacute;s de la asignaci&amp;oacute;n). Si el tipo de elemento es &lt;code&gt;'*$'&lt;/code&gt; , se devuelve una referencia al elemento.</target>
        </trans-unit>
        <trans-unit id="416316907f2cce96ccc209eeb130ba72299c8e3b" translate="yes" xml:space="preserve">
          <source>If the element type is &lt;code&gt;'$'&lt;/code&gt;, the value of the element (after assignment) is returned. If the element type is &lt;code&gt;'*$'&lt;/code&gt;, a reference to the element is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bac597df37b35f3a7dd05dd8ec187e68ab2f23b" translate="yes" xml:space="preserve">
          <source>If the empty regex &lt;code&gt;//&lt;/code&gt; is used, the string is split into individual characters. If the regex has groupings, then the list produced contains the matched substrings from the groupings as well:</source>
          <target state="translated">Si se usa la expresi&amp;oacute;n regular vac&amp;iacute;a &lt;code&gt;//&lt;/code&gt; , la cadena se divide en caracteres individuales. Si la expresi&amp;oacute;n regular tiene agrupaciones, entonces la lista generada tambi&amp;eacute;n contiene las subcadenas coincidentes de las agrupaciones:</target>
        </trans-unit>
        <trans-unit id="8e04e07bd20c824f00e23be10a97b35d7d8bdaf8" translate="yes" xml:space="preserve">
          <source>If the empty regexp &lt;code&gt;//&lt;/code&gt; is used, the regexp always matches and the string is split into individual characters. If the regexp has groupings, then the resulting list contains the matched substrings from the groupings as well. For instance,</source>
          <target state="translated">Si se usa la expresi&amp;oacute;n regular vac&amp;iacute;a &lt;code&gt;//&lt;/code&gt; , la expresi&amp;oacute;n regular siempre coincide y la cadena se divide en caracteres individuales. Si la expresi&amp;oacute;n regular tiene agrupaciones, la lista resultante tambi&amp;eacute;n contiene las subcadenas coincidentes de las agrupaciones. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="9160efcd7b61ecdb5eab89bb5f1048b8690bd897" translate="yes" xml:space="preserve">
          <source>If the entereval op is permitted then the code can use eval &quot;...&quot; to 'hide' code which might use denied ops. This is not a major problem since when the code tries to execute the eval it will fail because the opmask is still in effect. However this technique would allow clever, and possibly harmful, code to 'probe' the boundaries of what is possible.</source>
          <target state="translated">Si la operación entereval está permitida,el código puede usar eval &quot;...&quot; para &quot;esconder&quot; el código que podría usar operaciones denegadas.Esto no es un gran problema ya que cuando el código intenta ejecutar la evaluación fallará porque la máscara de operaciones sigue en efecto.Sin embargo,esta técnica permitiría que un código inteligente,y posiblemente dañino,&quot;sondeara&quot; los límites de lo posible.</target>
        </trans-unit>
        <trans-unit id="a6dd91d8fc44e261add22f788040f3b0d9653b9a" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code&gt;PERL_TEST_HARNESS_DUMP_TAP&lt;/code&gt; is defined it should name a directory into which a copy of the raw TAP for each test will be written. TAP is written to files named for each test. Subdirectories will be created as needed.</source>
          <target state="translated">Si se define la variable de entorno &lt;code&gt;PERL_TEST_HARNESS_DUMP_TAP&lt;/code&gt; , debe nombrar un directorio en el que se escribir&amp;aacute; una copia del TAP sin procesar para cada prueba. TAP se escribe en archivos nombrados para cada prueba. Los subdirectorios se crear&amp;aacute;n seg&amp;uacute;n sea necesario.</target>
        </trans-unit>
        <trans-unit id="1677cef1b7d08b33d16cc5ab5e637dae11805c4b" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code&gt;SSL_CERT_FILE&lt;/code&gt; is present, HTTP::Tiny will try to find a CA certificate file in that location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e9e60a253e04ba9480e07ca8d4f04ff80b74d6" translate="yes" xml:space="preserve">
          <source>If the event is a final subtest event, this should contain the subtest ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d65844b53fa3e967e642960ca12717bb316d545" translate="yes" xml:space="preserve">
          <source>If the event is inside a subtest this should have the subtest ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e66c1c6198ecf06cc2142e9e5e1dd957bf8c18d" translate="yes" xml:space="preserve">
          <source>If the executable called by system()/exec()/pipe-open()/&lt;code&gt;``&lt;/code&gt; is a script with the &quot;magic&quot; &lt;code&gt;#!&lt;/code&gt; line or &lt;code&gt;extproc&lt;/code&gt; line which specifies shell;</source>
          <target state="translated">Si el ejecutable llamado por system () / exec () / pipe-open () / &lt;code&gt;``&lt;/code&gt; es un script con la &quot;magia&quot; &lt;code&gt;#!&lt;/code&gt; l&amp;iacute;nea o l&amp;iacute;nea &lt;code&gt;extproc&lt;/code&gt; que especifica shell;</target>
        </trans-unit>
        <trans-unit id="2a754fbd5a5705920e61152dd8c6911b9ca9d965" translate="yes" xml:space="preserve">
          <source>If the executable called by system()/exec()/pipe-open()/&lt;code&gt;``&lt;/code&gt; is a script without &quot;magic&quot; line, and &lt;code&gt;$ENV{EXECSHELL}&lt;/code&gt; is set to shell;</source>
          <target state="translated">Si el ejecutable llamado por system () / exec () / pipe-open () / &lt;code&gt;``&lt;/code&gt; es un script sin l&amp;iacute;nea &quot;m&amp;aacute;gica&quot;, y &lt;code&gt;$ENV{EXECSHELL}&lt;/code&gt; est&amp;aacute; configurado como shell;</target>
        </trans-unit>
        <trans-unit id="6143c4a0521be912f40be9869aedf7b75cf3c5aa" translate="yes" xml:space="preserve">
          <source>If the executable called by system()/exec()/pipe-open()/&lt;code&gt;``&lt;/code&gt; is not found (is not this remark obsolete?);</source>
          <target state="translated">Si el ejecutable llamado por system () / exec () / pipe-open () / &lt;code&gt;``&lt;/code&gt; no se encuentra (&amp;iquest;no es esta observaci&amp;oacute;n obsoleta?);</target>
        </trans-unit>
        <trans-unit id="50b9d8b532d25e89b151dc2833716077761d9468" translate="yes" xml:space="preserve">
          <source>If the exit status used is less than 2, then output is printed on &lt;code&gt;STDOUT&lt;/code&gt; . Otherwise output is printed on &lt;code&gt;STDERR&lt;/code&gt; .</source>
          <target state="translated">Si el estado de salida utilizado es menor que 2, la salida se imprime en &lt;code&gt;STDOUT&lt;/code&gt; . De lo contrario, la salida se imprime en &lt;code&gt;STDERR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6254e53f84fb9e366ade9a7d71888f7244075a2" translate="yes" xml:space="preserve">
          <source>If the exit status used is less than 2, then output is printed on &lt;code&gt;STDOUT&lt;/code&gt;. Otherwise output is printed on &lt;code&gt;STDERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f5e0e5ea6330c7048648eb2edf1ad4ccc05a55" translate="yes" xml:space="preserve">
          <source>If the experimental &quot;bitwise&quot; feature is enabled (see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;), a fifth TRUE argument is passed to subroutines handling &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; . This indicates that the caller is expecting numeric behaviour. The fourth argument will be &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, as that position (&lt;code&gt;$_[3]&lt;/code&gt; ) is reserved for use by &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt;.</source>
          <target state="translated">Si la caracter&amp;iacute;stica experimental &quot;bit a bit&quot; est&amp;aacute; habilitada (ver &lt;a href=&quot;feature&quot;&gt;caracter&amp;iacute;stica&lt;/a&gt; ), se pasa un quinto argumento TRUE a las subrutinas que manejan &lt;code&gt;&amp;amp;&lt;/code&gt; , &lt;code&gt;|&lt;/code&gt; , &lt;code&gt;^&lt;/code&gt; y &lt;code&gt;~&lt;/code&gt; . Esto indica que la persona que llama espera un comportamiento num&amp;eacute;rico. El cuarto argumento ser&amp;aacute; &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , ya que esa posici&amp;oacute;n ( &lt;code&gt;$_[3]&lt;/code&gt; ) est&amp;aacute; reservada para su uso por &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d70ab84f3a316c00496bd0dced7b93acc9fa6af" translate="yes" xml:space="preserve">
          <source>If the experimental &quot;bitwise&quot; feature is enabled via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'bitwise'&lt;/code&gt; , then this operator always treats its operand as numbers. This feature produces a warning unless you also use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings
'experimental::bitwise'&lt;/code&gt; .</source>
          <target state="translated">Si la funci&amp;oacute;n experimental &quot;bit a bit&quot; est&amp;aacute; habilitada mediante la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'bitwise'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; &quot;bit a bit&quot; , este operador siempre trata su operando como n&amp;uacute;meros. Esta caracter&amp;iacute;stica produce una advertencia a menos que tambi&amp;eacute;n utiliza &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::bitwise'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="429f3423b67c7b1e2fda19e3e61bde6079c26d75" translate="yes" xml:space="preserve">
          <source>If the experimental &quot;bitwise&quot; feature is enabled via &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'bitwise'&lt;/code&gt; , then unary &lt;code&gt;&quot;~&quot;&lt;/code&gt; always treats its argument as a number, and an alternate form of the operator, &lt;code&gt;&quot;~.&quot;&lt;/code&gt; , always treats its argument as a string. So &lt;code&gt;~0&lt;/code&gt; and &lt;code&gt;~&quot;0&quot;&lt;/code&gt; will both give 2**32-1 on 32-bit platforms, whereas &lt;code&gt;~.0&lt;/code&gt; and &lt;code&gt;~.&quot;0&quot;&lt;/code&gt; will both yield &lt;code&gt;&quot;\xff&quot;&lt;/code&gt; . This feature produces a warning unless you use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::bitwise'&lt;/code&gt; .</source>
          <target state="translated">Si la funci&amp;oacute;n experimental &quot;bit a bit&quot; est&amp;aacute; habilitada mediante la &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'bitwise'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; &quot;bit a bit&quot; , entonces unario &lt;code&gt;&quot;~&quot;&lt;/code&gt; siempre trata su argumento como un n&amp;uacute;mero y una forma alternativa del operador, &lt;code&gt;&quot;~.&quot;&lt;/code&gt; , siempre trata su argumento como una cadena. As&amp;iacute; que &lt;code&gt;~0&lt;/code&gt; y &lt;code&gt;~&quot;0&quot;&lt;/code&gt; dar&amp;aacute;n 2 ** 32-1 en plataformas de 32 bits, mientras que &lt;code&gt;~.0&lt;/code&gt; y &lt;code&gt;~.&quot;0&quot;&lt;/code&gt; dar&amp;aacute;n &lt;code&gt;&quot;\xff&quot;&lt;/code&gt; . Esta funci&amp;oacute;n genera una advertencia a menos que &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'experimental::bitwise'&lt;/code&gt; utilice advertencias 'experimental :: bitwise' .</target>
        </trans-unit>
        <trans-unit id="bc923038f738e51827c6486386f676bb16b7db9f" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a label name, its scope will be resolved dynamically. This allows for computed &lt;a href=&quot;#goto-LABEL&quot;&gt;&lt;code&gt;goto&lt;/code&gt;&lt;/a&gt;s per FORTRAN, but isn't necessarily recommended if you're optimizing for maintainability:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c964489535901a948a3b23073f9b9bb3c0a3e6" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a label name, its scope will be resolved dynamically. This allows for computed &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;s per FORTRAN, but isn't necessarily recommended if you're optimizing for maintainability:</source>
          <target state="translated">Si la expresi&amp;oacute;n se eval&amp;uacute;a como un nombre de etiqueta, su alcance se resolver&amp;aacute; din&amp;aacute;micamente. Esto permite &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; s calculados por FORTRAN, pero no se recomienda necesariamente si est&amp;aacute; optimizando para la mantenibilidad:</target>
        </trans-unit>
        <trans-unit id="c0c3c70b730f0e2950f8179af548175b3c6ef32a" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a label name, its scope will be resolved dynamically. This allows for computed &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;s per FORTRAN, but isn't necessarily recommended if you're optimizing for maintainability:</source>
          <target state="translated">Si la expresi&amp;oacute;n se eval&amp;uacute;a como un nombre de etiqueta, su alcance se resolver&amp;aacute; din&amp;aacute;micamente. Esto permite &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; s calculados por FORTRAN, pero no se recomienda necesariamente si est&amp;aacute; optimizando para la mantenibilidad:</target>
        </trans-unit>
        <trans-unit id="3a5f344d7e209018f81b3bb395e41710ea76000e" translate="yes" xml:space="preserve">
          <source>If the extension doesn't contain a &lt;code&gt;*&lt;/code&gt; , then it is appended to the end of the current filename as a suffix. If the extension does contain one or more &lt;code&gt;*&lt;/code&gt; characters, then each &lt;code&gt;*&lt;/code&gt; is replaced with the current filename. In Perl terms, you could think of this as:</source>
          <target state="translated">Si la extensi&amp;oacute;n no contiene un &lt;code&gt;*&lt;/code&gt; , se agrega al final del nombre de archivo actual como sufijo. Si la extensi&amp;oacute;n contiene uno o m&amp;aacute;s &lt;code&gt;*&lt;/code&gt; caracteres, entonces cada &lt;code&gt;*&lt;/code&gt; se reemplaza con el nombre de archivo actual. En t&amp;eacute;rminos de Perl, podr&amp;iacute;a pensar en esto como:</target>
        </trans-unit>
        <trans-unit id="de01c14a7209a45c44123f6710c3fc14dda93261" translate="yes" xml:space="preserve">
          <source>If the extension doesn't contain a &lt;code&gt;*&lt;/code&gt;, then it is appended to the end of the current filename as a suffix. If the extension does contain one or more &lt;code&gt;*&lt;/code&gt; characters, then each &lt;code&gt;*&lt;/code&gt; is replaced with the current filename. In Perl terms, you could think of this as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912122ed04813ef6afa69c21de9ff5d7b9578a1b" translate="yes" xml:space="preserve">
          <source>If the extension links to a library that it builds, set this to the name of the library (see SDBM_File)</source>
          <target state="translated">Si la extensión se vincula a una biblioteca que construye,establezca esto al nombre de la biblioteca (ver SDBM_File)</target>
        </trans-unit>
        <trans-unit id="d3a643174ddd0d9876c30f4ff9ae6dc788ca282c" translate="yes" xml:space="preserve">
          <source>If the extension might need extra libraries, they should be included here. The extension Makefile.PL will take care of checking whether the libraries actually exist and how they should be loaded. The extra libraries should be specified in the form -lm -lposix, etc, just as on the cc command line. By default, the Makefile.PL will search through the library path determined by Configure. That path can be augmented by including arguments of the form &lt;b&gt;-L/another/library/path&lt;/b&gt; in the extra-libraries argument.</source>
          <target state="translated">Si la extensi&amp;oacute;n puede necesitar bibliotecas adicionales, deben incluirse aqu&amp;iacute;. La extensi&amp;oacute;n Makefile.PL se encargar&amp;aacute; de comprobar si las bibliotecas existen realmente y c&amp;oacute;mo deben cargarse. Las bibliotecas adicionales deben especificarse en la forma -lm -lposix, etc., al igual que en la l&amp;iacute;nea de comando cc. De forma predeterminada, Makefile.PL buscar&amp;aacute; en la ruta de la biblioteca determinada por Configure. Esa ruta se puede aumentar al incluir argumentos de la forma &lt;b&gt;-L / otra / biblioteca / ruta&lt;/b&gt; en el argumento de bibliotecas extra.</target>
        </trans-unit>
        <trans-unit id="effa256cfcef0cdd6582a1503da6bdf1fb1d1f9e" translate="yes" xml:space="preserve">
          <source>If the external</source>
          <target state="translated">Si el exterior</target>
        </trans-unit>
        <trans-unit id="2e204c469081d0ce7742a3d71bcaeedaf9240cda" translate="yes" xml:space="preserve">
          <source>If the extractor fails to match (in the case of a regex extractor), or returns an empty list or an undefined value (in the case of a subroutine extractor), it is assumed to have failed to extract. If none of the extractor subroutines succeeds, then one character is extracted from the start of the text and the extraction subroutines reapplied. Characters which are thus removed are accumulated and eventually become the next field (unless the fourth argument is true, in which case they are discarded).</source>
          <target state="translated">Si el extractor no coincide (en el caso de un extractor regex),o devuelve una lista vacía o un valor indefinido (en el caso de un extractor de subrutinas),se supone que ha fallado en la extracción.Si ninguna de las subrutinas del extractor tiene éxito,se extrae un carácter del comienzo del texto y se vuelven a aplicar las subrutinas de extracción.Los caracteres que se extraen de esta manera se acumulan y eventualmente se convierten en el siguiente campo (a menos que el cuarto argumento sea cierto,en cuyo caso se descartan).</target>
        </trans-unit>
        <trans-unit id="17d2c98a680d0b983c00126ba7fbf7037583b89d" translate="yes" xml:space="preserve">
          <source>If the extractor is a hash reference, it must contain exactly one element. The value of that element is one of the above extractor types (subroutine reference, regular expression, or string). The key of that element is the name of a class into which the successful return value of the extractor will be blessed.</source>
          <target state="translated">Si el extractor es una referencia de hachís,debe contener exactamente un elemento.El valor de ese elemento es uno de los tipos de extractor mencionados anteriormente (referencia de subrutina,expresión regular o cadena).La clave de ese elemento es el nombre de una clase en la que se bendecirá el valor de retorno del extractor.</target>
        </trans-unit>
        <trans-unit id="a2187e610c6c9ce986c9ab2bc434fe210c96d6c7" translate="yes" xml:space="preserve">
          <source>If the extractor is a precompiled regular expression or a string, it is matched against the text in a scalar context with a leading '\G' and the gc modifiers enabled. The extracted value is either $1 if that variable is defined after the match, or else the complete match (i.e. $&amp;amp;).</source>
          <target state="translated">Si el extractor es una expresi&amp;oacute;n regular precompilada o una cadena, se compara con el texto en un contexto escalar con una '\ G' inicial y los modificadores gc habilitados. El valor extra&amp;iacute;do es $ 1 si esa variable se define despu&amp;eacute;s de la coincidencia, o bien la coincidencia completa (es decir, $ &amp;amp;).</target>
        </trans-unit>
        <trans-unit id="8efec72894ea829331e728164da92723ccc10f46" translate="yes" xml:space="preserve">
          <source>If the extractor is a subroutine it is called in a list context and is expected to return a list of a single element, namely the extracted text. It may optionally also return two further arguments: a string representing the text left after extraction (like $' for a pattern match), and a string representing any prefix skipped before the extraction (like $` in a pattern match). Note that this is designed to facilitate the use of other Text::Balanced subroutines with &lt;code&gt;extract_multiple&lt;/code&gt; . Note too that the value returned by an extractor subroutine need not bear any relationship to the corresponding substring of the original text (see examples below).</source>
          <target state="translated">Si el extractor es una subrutina, se llama en un contexto de lista y se espera que devuelva una lista de un solo elemento, es decir, el texto extra&amp;iacute;do. Opcionalmente, tambi&amp;eacute;n puede devolver dos argumentos m&amp;aacute;s: una cadena que representa el texto que queda despu&amp;eacute;s de la extracci&amp;oacute;n (como $ 'para una coincidencia de patr&amp;oacute;n) y una cadena que representa cualquier prefijo omitido antes de la extracci&amp;oacute;n (como $ `en una coincidencia de patr&amp;oacute;n). Tenga en cuenta que esto est&amp;aacute; dise&amp;ntilde;ado para facilitar el uso de otras subrutinas Text :: Balanced con &lt;code&gt;extract_multiple&lt;/code&gt; . Tenga en cuenta tambi&amp;eacute;n que el valor devuelto por una subrutina extractora no necesita tener ninguna relaci&amp;oacute;n con la subcadena correspondiente del texto original (ver ejemplos a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="91257d19dbe73c3f0115d0e82b54c986793ce4ee" translate="yes" xml:space="preserve">
          <source>If the extractor is a subroutine it is called in a list context and is expected to return a list of a single element, namely the extracted text. It may optionally also return two further arguments: a string representing the text left after extraction (like $' for a pattern match), and a string representing any prefix skipped before the extraction (like $` in a pattern match). Note that this is designed to facilitate the use of other Text::Balanced subroutines with &lt;code&gt;extract_multiple&lt;/code&gt;. Note too that the value returned by an extractor subroutine need not bear any relationship to the corresponding substring of the original text (see examples below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a385fcb5d8ca5cfa07426e73b4f41df3b2f355d3" translate="yes" xml:space="preserve">
          <source>If the field contains a numeric value it will be displayed in hex. Zip stored most numbers in little-endian format - the value displayed will have the little-endian encoding removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12045367f64a99179f5690e61487afbfd5fe1436" translate="yes" xml:space="preserve">
          <source>If the file begins by an UTF-8, UTF-16BE or UTF-16LE byte-order mark, then it is skipped before processing, and the content of the file is also decoded appropriately starting from perl 5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0b45c8a0563151ba3b588e7383417bdd5f8a3d" translate="yes" xml:space="preserve">
          <source>If the file does not exist, &lt;code&gt;cpan&lt;/code&gt; dies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4293d2972da49b7deee5cbac8e57e93be999a13" translate="yes" xml:space="preserve">
          <source>If the file is a symlink, the file it's pointing to</source>
          <target state="translated">Si el archivo es un enlace simbólico,el archivo al que apunta</target>
        </trans-unit>
        <trans-unit id="1260f14708b5c4f0e969b3d9b19ac87d75cb1573" translate="yes" xml:space="preserve">
          <source>If the file is pulled in by &lt;code&gt;perl_parse()&lt;/code&gt; , compiled into a newly constructed interpreter, and subsequently cleaned out with &lt;code&gt;perl_destruct()&lt;/code&gt; afterwards, you're shielded from most namespace troubles.</source>
          <target state="translated">Si el archivo es extra&amp;iacute;do por &lt;code&gt;perl_parse()&lt;/code&gt; , compilado en un int&amp;eacute;rprete reci&amp;eacute;n construido y posteriormente limpiado con &lt;code&gt;perl_destruct()&lt;/code&gt; , estar&amp;aacute; protegido de la mayor&amp;iacute;a de los problemas de espacio de nombres.</target>
        </trans-unit>
        <trans-unit id="12e4d1ea92f7af34b6047df7fcc8abb443c9f062" translate="yes" xml:space="preserve">
          <source>If the file is pulled in by &lt;code&gt;perl_parse()&lt;/code&gt;, compiled into a newly constructed interpreter, and subsequently cleaned out with &lt;code&gt;perl_destruct()&lt;/code&gt; afterwards, you're shielded from most namespace troubles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0047e959707fe337b2aa331e4b4d29cbdd3ddf49" translate="yes" xml:space="preserve">
          <source>If the file named by FILENAME does not exist and the &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; call creates it (typically because MODE includes the &lt;code&gt;O_CREAT&lt;/code&gt; flag), then the value of PERMS specifies the permissions of the newly created file. If you omit the PERMS argument to &lt;a href=&quot;#sysopen-FILEHANDLE%2CFILENAME%2CMODE&quot;&gt;&lt;code&gt;sysopen&lt;/code&gt;&lt;/a&gt;, Perl uses the octal value &lt;code&gt;0666&lt;/code&gt;. These permission values need to be in octal, and are modified by your process's current &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972b095c8cf0635710238db90318d20a5a12c4b1" translate="yes" xml:space="preserve">
          <source>If the file named by FILENAME does not exist and the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; call creates it (typically because MODE includes the &lt;code&gt;O_CREAT&lt;/code&gt; flag), then the value of PERMS specifies the permissions of the newly created file. If you omit the PERMS argument to &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, Perl uses the octal value &lt;code&gt;0666&lt;/code&gt; . These permission values need to be in octal, and are modified by your process's current &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si el archivo nombrado por FILENAME no existe y la llamada &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; crea (normalmente porque MODE incluye el indicador &lt;code&gt;O_CREAT&lt;/code&gt; ), entonces el valor de PERMS especifica los permisos del archivo reci&amp;eacute;n creado. Si omite el argumento PERMS para &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , Perl usa el valor octal &lt;code&gt;0666&lt;/code&gt; . Estos valores de permiso deben estar en octal y son modificados por la &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; actual de su proceso .</target>
        </trans-unit>
        <trans-unit id="8aa66e9311c9629d0b8c20e950c88829b4d37f7e" translate="yes" xml:space="preserve">
          <source>If the file named by FILENAME does not exist and the &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; call creates it (typically because MODE includes the &lt;code&gt;O_CREAT&lt;/code&gt; flag), then the value of PERMS specifies the permissions of the newly created file. If you omit the PERMS argument to &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, Perl uses the octal value &lt;code&gt;0666&lt;/code&gt; . These permission values need to be in octal, and are modified by your process's current &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si el archivo nombrado por FILENAME no existe y la llamada &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; crea (normalmente porque MODE incluye el indicador &lt;code&gt;O_CREAT&lt;/code&gt; ), entonces el valor de PERMS especifica los permisos del archivo reci&amp;eacute;n creado. Si omite el argumento PERMS para &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , Perl usa el valor octal &lt;code&gt;0666&lt;/code&gt; . Estos valores de permiso deben estar en octal y son modificados por la &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; actual de su proceso .</target>
        </trans-unit>
        <trans-unit id="afca59eeb0296a7f173f43e8587c0ce7c2de1f87" translate="yes" xml:space="preserve">
          <source>If the file specification is already in a valid VMS syntax, it will be passed through unchanged, except that the UTF-8 flag will be cleared since VMS format file specifications are never in UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20f26d4d2cfe896fd9be41e5561303708778051" translate="yes" xml:space="preserve">
          <source>If the file that contains the module begins by an UTF-8, UTF-16BE or UTF-16LE byte-order mark, then it is skipped before processing, and the content of the file is also decoded appropriately starting from perl 5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9e946eeefcb8ca3ed866d0a22b192157304573" translate="yes" xml:space="preserve">
          <source>If the file to be opened contains binary data instead of text characters, then the &lt;code&gt;MODE&lt;/code&gt; argument to &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; is a little different. Instead of specifying the encoding, you tell Perl that your data are in raw bytes.</source>
          <target state="translated">Si el archivo que se abrir&amp;aacute; contiene datos binarios en lugar de caracteres de texto, entonces el argumento &lt;code&gt;MODE&lt;/code&gt; para &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; es un poco diferente. En lugar de especificar la codificaci&amp;oacute;n, le dice a Perl que sus datos est&amp;aacute;n en bytes sin procesar.</target>
        </trans-unit>
        <trans-unit id="b62027d4bfba52954180b6ef864f354108e4a798" translate="yes" xml:space="preserve">
          <source>If the file to be opened contains binary data instead of text characters, then the &lt;code&gt;MODE&lt;/code&gt; argument to &lt;code&gt;open&lt;/code&gt; is a little different. Instead of specifying the encoding, you tell Perl that your data are in raw bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7727f14d3896e4199132a911f1277a6913be80" translate="yes" xml:space="preserve">
          <source>If the file was loaded via a hook (e.g. a subroutine reference, see &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; for a description of these hooks), this hook is by default inserted into &lt;code&gt;%INC&lt;/code&gt; in place of a filename. Note, however, that the hook may have set the &lt;code&gt;%INC&lt;/code&gt; entry by itself to provide some more specific info.</source>
          <target state="translated">Si el archivo se carg&amp;oacute; a trav&amp;eacute;s de un gancho (por ejemplo, una referencia de subrutina, consulte &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; para una descripci&amp;oacute;n de estos ganchos), este gancho se inserta por defecto en &lt;code&gt;%INC&lt;/code&gt; en lugar de un nombre de archivo. Sin embargo, tenga en cuenta que el gancho puede haber establecido la entrada &lt;code&gt;%INC&lt;/code&gt; por s&amp;iacute; mismo para proporcionar informaci&amp;oacute;n m&amp;aacute;s espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="cf52c06965f9e5fc28f2b729df47caf3473ff123" translate="yes" xml:space="preserve">
          <source>If the file was loaded via a hook (e.g. a subroutine reference, see &lt;a href=&quot;perlfunc#require&quot;&gt;&quot;require&quot; in perlfunc&lt;/a&gt; for a description of these hooks), this hook is by default inserted into &lt;code&gt;%INC&lt;/code&gt; in place of a filename. Note, however, that the hook may have set the &lt;code&gt;%INC&lt;/code&gt; entry by itself to provide some more specific info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbada7e6f993214c7ee778a69597cde7ab2c7bef" translate="yes" xml:space="preserve">
          <source>If the file was modified and the server response includes a properly formatted &lt;code&gt;Last-Modified&lt;/code&gt; header, the file modification time will be updated accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1055d8f3bf09e356a8ac90a312ee4c58ffecab8f" translate="yes" xml:space="preserve">
          <source>If the filehandle came from a piped open, &lt;a href=&quot;#close-FILEHANDLE&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; returns false if one of the other syscalls involved fails or if its program exits with non-zero status. If the only problem was that the program exited non-zero, &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; will be set to &lt;code&gt;0&lt;/code&gt;. Closing a pipe also waits for the process executing on the pipe to exit--in case you wish to look at the output of the pipe afterwards--and implicitly puts the exit status value of that command into &lt;a href=&quot;perlvar#%24%3F&quot;&gt;&lt;code&gt;$?&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%24%7B%5ECHILD_ERROR_NATIVE%7D&quot;&gt;&lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e74503c754d78c3ba0f9051478f8b0d722c72c1" translate="yes" xml:space="preserve">
          <source>If the filehandle came from a piped open, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; returns false if one of the other syscalls involved fails or if its program exits with non-zero status. If the only problem was that the program exited non-zero, &lt;code&gt;$!&lt;/code&gt; will be set to &lt;code&gt;0&lt;/code&gt; . Closing a pipe also waits for the process executing on the pipe to exit--in case you wish to look at the output of the pipe afterwards--and implicitly puts the exit status value of that command into &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</source>
          <target state="translated">Si el identificador de archivo proviene de una canalizaci&amp;oacute;n abierta, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; devuelve falso si una de las otras llamadas al sistema involucradas falla o si su programa sale con un estado distinto de cero. Si el &amp;uacute;nico problema fue que el programa sali&amp;oacute; distinto de cero, &lt;code&gt;$!&lt;/code&gt; se establecer&amp;aacute; en &lt;code&gt;0&lt;/code&gt; . Cerrar una tuber&amp;iacute;a tambi&amp;eacute;n espera a que salga el proceso que se ejecuta en la tuber&amp;iacute;a, en caso de que desee ver la salida de la tuber&amp;iacute;a despu&amp;eacute;s, e impl&amp;iacute;citamente pone el valor de estado de salida de ese comando en &lt;code&gt;$?&lt;/code&gt; y &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a275dda5ca271e5742fe50c27b80a1dea7fadc2a" translate="yes" xml:space="preserve">
          <source>If the filehandle came from a piped open, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; returns false if one of the other syscalls involved fails or if its program exits with non-zero status. If the only problem was that the program exited non-zero, &lt;code&gt;$!&lt;/code&gt; will be set to &lt;code&gt;0&lt;/code&gt; . Closing a pipe also waits for the process executing on the pipe to exit--in case you wish to look at the output of the pipe afterwards--and implicitly puts the exit status value of that command into &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</source>
          <target state="translated">Si el identificador de archivo proviene de una canalizaci&amp;oacute;n abierta, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; devuelve falso si una de las otras llamadas al sistema involucradas falla o si su programa sale con un estado distinto de cero. Si el &amp;uacute;nico problema fue que el programa sali&amp;oacute; distinto de cero, &lt;code&gt;$!&lt;/code&gt; se establecer&amp;aacute; en &lt;code&gt;0&lt;/code&gt; . Cerrar una tuber&amp;iacute;a tambi&amp;eacute;n espera a que salga el proceso que se ejecuta en la tuber&amp;iacute;a, en caso de que desee ver la salida de la tuber&amp;iacute;a despu&amp;eacute;s, e impl&amp;iacute;citamente pone el valor de estado de salida de ese comando en &lt;code&gt;$?&lt;/code&gt; y &lt;code&gt;${^CHILD_ERROR_NATIVE}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc5e1415bd14e8d1ec6ad1e512653e073ea2d16" translate="yes" xml:space="preserve">
          <source>If the filename supplied contains directory separators (and so is an absolute or relative pathname), and if that file is not found, platforms that append file extensions will do so and try to look for the file with those extensions added, one by one.</source>
          <target state="translated">Si el nombre de archivo suministrado contiene separadores de directorios (y por lo tanto es una ruta absoluta o relativa),y si ese archivo no se encuentra,las plataformas que añaden extensiones de archivos lo harán e intentarán buscar el archivo con esas extensiones añadidas,una por una.</target>
        </trans-unit>
        <trans-unit id="8b638dc989817125971a607e8fa00529b2b307c1" translate="yes" xml:space="preserve">
          <source>If the final value specified is not in the sequence that the magical increment would produce, the sequence goes until the next value would be longer than the final value specified.</source>
          <target state="translated">Si el valor final especificado no está en la secuencia que produciría el incremento mágico,la secuencia va hasta que el siguiente valor sea más largo que el valor final especificado.</target>
        </trans-unit>
        <trans-unit id="a33c6e16dc7645806ca8dcd82f881fedaded9d02" translate="yes" xml:space="preserve">
          <source>If the final value specified is not in the sequence that the magical increment would produce, the sequence goes until the next value would be longer than the final value specified. If the length of the final string is shorter than the first, the empty list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f8e1e30b780f6553cc08550f9370ae0ed9b97a" translate="yes" xml:space="preserve">
          <source>If the first argument is a reference to an array, the pseudo-hash will be created with keys from that array. If a second argument is supplied, it must also be a reference to an array whose elements will be used as the values. If the second array contains less elements than the first, the trailing elements of the pseudo-hash will not be initialized. This makes it particularly useful for creating a pseudo-hash from subroutine arguments:</source>
          <target state="translated">Si el primer argumento es una referencia a una matriz,el pseudo-hash se creará con claves de esa matriz.Si se proporciona un segundo argumento,también debe ser una referencia a una matriz cuyos elementos se utilizarán como valores.Si la segunda matriz contiene menos elementos que la primera,los elementos finales del pseudo-hash no se inicializarán.Esto lo hace particularmente útil para crear un pseudo-hash a partir de los argumentos de las subrutinas:</target>
        </trans-unit>
        <trans-unit id="9f235f80bacbd6f2376896bcd2071e6b6ed89634" translate="yes" xml:space="preserve">
          <source>If the first argument is an empty string &quot;&quot; or is a volume name, i.e. matches the pattern /^[^:]+:/, the resulting path is &lt;b&gt;absolute&lt;/b&gt;.</source>
          <target state="translated">Si el primer argumento es una cadena vac&amp;iacute;a &quot;&quot; o es un nombre de volumen, es decir, coincide con el patr&amp;oacute;n / ^ [^:] +: /, la ruta resultante es &lt;b&gt;absoluta&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="89aa8ef2f6a6df7b419aa16ffe18ced8031ac672" translate="yes" xml:space="preserve">
          <source>If the first character after the &lt;b&gt;-M&lt;/b&gt; or &lt;b&gt;-m&lt;/b&gt; is a dash (&lt;b&gt;-&lt;/b&gt;) then the 'use' is replaced with 'no'.</source>
          <target state="translated">Si el primer car&amp;aacute;cter despu&amp;eacute;s de &lt;b&gt;-M&lt;/b&gt; o &lt;b&gt;-m&lt;/b&gt; es un gui&amp;oacute;n ( &lt;b&gt;-&lt;/b&gt; ), entonces el 'uso' se reemplaza por 'no'.</target>
        </trans-unit>
        <trans-unit id="d6369cd957319ca2b8d2442c19d6fcbc6b24183a" translate="yes" xml:space="preserve">
          <source>If the first character after the &lt;b&gt;-M&lt;/b&gt; or &lt;b&gt;-m&lt;/b&gt; is a dash (&lt;b&gt;-&lt;/b&gt;) then the 'use' is replaced with 'no'. This makes no difference for &lt;b&gt;-m&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781d0d29a2affd4018c32ec572f1b116a7081027" translate="yes" xml:space="preserve">
          <source>If the first chars of a Perl script are &lt;code&gt;&quot;extproc &quot;&lt;/code&gt; , this line is treated as &lt;code&gt;#!&lt;/code&gt; -line, thus all the switches on this line are processed (twice if script was started via cmd.exe). See &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;DESCRIPTION in perlrun&lt;/a&gt;.</source>
          <target state="translated">Si los primeros caracteres de un script en Perl son &lt;code&gt;&quot;extproc &quot;&lt;/code&gt; , esta l&amp;iacute;nea se trata como &lt;code&gt;#!&lt;/code&gt; -line, por lo que todos los conmutadores de esta l&amp;iacute;nea se procesan (dos veces si el script se inici&amp;oacute; a trav&amp;eacute;s de cmd.exe). Ver &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;DESCRIPCI&amp;Oacute;N en perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="581c684b617d92750c5f38a91fda2e5d76163206" translate="yes" xml:space="preserve">
          <source>If the first chars of a Perl script are &lt;code&gt;&quot;extproc &quot;&lt;/code&gt;, this line is treated as &lt;code&gt;#!&lt;/code&gt;-line, thus all the switches on this line are processed (twice if script was started via cmd.exe). See &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot; in perlrun&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46518f452342a5c022fec8e53026c8608f2e02a" translate="yes" xml:space="preserve">
          <source>If the first digit following the backslash is a 0, it's an octal escape.</source>
          <target state="translated">Si el primer dígito que sigue a la barra invertida es un 0,es un escape octal.</target>
        </trans-unit>
        <trans-unit id="5675bafb3dc48482ba4a4f320234c0b4d704c9a0" translate="yes" xml:space="preserve">
          <source>If the first element of the return value (&lt;code&gt;success&lt;/code&gt; ) was 0, then some error occurred. This second element is the error message the command you requested exited with, if available. This is generally a pretty printed value of &lt;code&gt;$?&lt;/code&gt; or &lt;code&gt;$@&lt;/code&gt; . See &lt;code&gt;perldoc perlvar&lt;/code&gt; for details on what they can contain. If the error was a timeout, the &lt;code&gt;error message&lt;/code&gt; will be prefixed with the string &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; , the timeout class.</source>
          <target state="translated">Si el primer elemento del valor de retorno ( &lt;code&gt;success&lt;/code&gt; ) fue 0, se produjo alg&amp;uacute;n error. Este segundo elemento es el mensaje de error con el que sali&amp;oacute; el comando que solicit&amp;oacute;, si est&amp;aacute; disponible. Este es generalmente un valor bastante impreso de &lt;code&gt;$?&lt;/code&gt; o &lt;code&gt;$@&lt;/code&gt; . Consulte &lt;code&gt;perldoc perlvar&lt;/code&gt; para obtener detalles sobre lo que pueden contener. Si el error fue un tiempo de espera, el &lt;code&gt;error message&lt;/code&gt; tendr&amp;aacute; como prefijo la cadena &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; , la clase de tiempo de espera.</target>
        </trans-unit>
        <trans-unit id="638a2f7fa728eb482819629ddfdf65e5299a089f" translate="yes" xml:space="preserve">
          <source>If the first element of the return value (&lt;code&gt;success&lt;/code&gt;) was 0, then some error occurred. This second element is the error message the command you requested exited with, if available. This is generally a pretty printed value of &lt;code&gt;$?&lt;/code&gt; or &lt;code&gt;$@&lt;/code&gt;. See &lt;code&gt;perldoc perlvar&lt;/code&gt; for details on what they can contain. If the error was a timeout, the &lt;code&gt;error message&lt;/code&gt; will be prefixed with the string &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt;, the timeout class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a57fb9b1830952d24356efef9c0744590e7e139" translate="yes" xml:space="preserve">
          <source>If the first item in a bracket group is &quot;*&quot;, it's taken as shorthand for the so commonly called &quot;quant&quot; method. Similarly, if the first item in a bracket group is &quot;#&quot;, it's taken to be shorthand for &quot;numf&quot;.</source>
          <target state="translated">Si el primer elemento de un grupo entre paréntesis es &quot;*&quot;,se toma como abreviatura del método comúnmente llamado &quot;quant&quot;.Del mismo modo,si el primer elemento de un grupo de paréntesis es &quot;#&quot;,se toma como abreviatura de &quot;numf&quot;.</target>
        </trans-unit>
        <trans-unit id="1953104edb77654c33631a60ba8219310b08e426" translate="yes" xml:space="preserve">
          <source>If the first item in a bracket group is the empty-string, or &quot;_*&quot; or &quot;_</source>
          <target state="translated">Si el primer elemento de un grupo de paréntesis es la cadena vacía,o &quot;_*&quot; o &quot;_&quot;...</target>
        </trans-unit>
        <trans-unit id="bf6e94a3fad4e68b50306c3295f243e0a73b5811" translate="yes" xml:space="preserve">
          <source>If the first item in a bracket group looks like a method name, then that group is interpreted like this:</source>
          <target state="translated">Si el primer elemento de un grupo entre paréntesis se parece a un nombre de método,entonces ese grupo se interpreta así:</target>
        </trans-unit>
        <trans-unit id="ccf14e3215a8aeb1aa87eb4f44052cead882fc98" translate="yes" xml:space="preserve">
          <source>If the first operand has a &quot;nomethod&quot; method then use that.</source>
          <target state="translated">Si el primer operando tiene un método de &quot;nomethod&quot;,entonces usa eso.</target>
        </trans-unit>
        <trans-unit id="a0dadbb13895f7c7975effc9602b93ea5e861379" translate="yes" xml:space="preserve">
          <source>If the first operand has declared a subroutine to overload the operator then use that implementation.</source>
          <target state="translated">Si el primer operando ha declarado una subrutina para sobrecargar al operador,entonces utilice esa implementación.</target>
        </trans-unit>
        <trans-unit id="f7ca747166805083d1be553c7e78c86f97bd5b0c" translate="yes" xml:space="preserve">
          <source>If the flag &lt;code&gt;UTF8_CHECK_ONLY&lt;/code&gt; is passed, no warnings are generated, and hence no AV is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63722d831a3c09d59c00e59b75ba5f74f6230f38" translate="yes" xml:space="preserve">
          <source>If the flag is present in &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; will delete whitespace from the start of the subject string before it's operated on. What is considered whitespace depends on if the subject is a UTF-8 string and if the &lt;code&gt;RXf_PMf_LOCALE&lt;/code&gt; flag is set.</source>
          <target state="translated">Si la bandera est&amp;aacute; presente en &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; eliminar&amp;aacute; los espacios en blanco desde el inicio de la cadena de asunto antes de que se opere. Lo que se considera espacio en blanco depende de si el asunto es una cadena UTF-8 y si se establece el indicador &lt;code&gt;RXf_PMf_LOCALE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69393e8c9a9ff1f7ad6c1d1075c45161dd52ff73" translate="yes" xml:space="preserve">
          <source>If the flag is present in &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt;&lt;code&gt;split&lt;/code&gt; will delete whitespace from the start of the subject string before it's operated on. What is considered whitespace depends on if the subject is a UTF-8 string and if the &lt;code&gt;RXf_PMf_LOCALE&lt;/code&gt; flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc08ae29def75bcb01866771948171d3f78fd50" translate="yes" xml:space="preserve">
          <source>If the function is used across several files, but intended only for Perl's internal use (and this should be the common case), do not export it to the public API. See the discussion about</source>
          <target state="translated">Si la función se utiliza en varios archivos,pero está destinada únicamente al uso interno de Perl (y éste debería ser el caso común),no la exporte a la API pública.Véase la discusión sobre</target>
        </trans-unit>
        <trans-unit id="0cd096b932efa03a9f98d53e47997c47f5475a48" translate="yes" xml:space="preserve">
          <source>If the function is used only inside one source code file, make it static. See the discussion about</source>
          <target state="translated">Si la función se usa sólo dentro de un archivo de código fuente,hazlo estático.Vea la discusión sobre</target>
        </trans-unit>
        <trans-unit id="56833441b11ff81d3798d0015a0f9476e6600637" translate="yes" xml:space="preserve">
          <source>If the function wants to handle the keyword, it first must parse anything following the keyword that is part of the syntax introduced by the keyword. See &lt;a href=&quot;#Lexer-interface&quot;&gt;&quot;Lexer interface&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d809f75a0fec341370456ffe5542097322b23570" translate="yes" xml:space="preserve">
          <source>If the function wants to handle the keyword, it first must parse anything following the keyword that is part of the syntax introduced by the keyword. See &lt;a href=&quot;#Lexer-interface&quot;&gt;Lexer interface&lt;/a&gt; for details.</source>
          <target state="translated">Si la funci&amp;oacute;n quiere manejar la palabra clave, primero debe analizar todo lo que sigue a la palabra clave que es parte de la sintaxis introducida por la palabra clave. Consulte la &lt;a href=&quot;#Lexer-interface&quot;&gt;interfaz de Lexer&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4257aa9162577acd082afc2803cd5eba4d35b6a8" translate="yes" xml:space="preserve">
          <source>If the function's name is &lt;b&gt;DESTROY&lt;/b&gt; then the C++ &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; function will be called and &lt;code&gt;THIS&lt;/code&gt; will be given as its parameter. The generated C++ code for</source>
          <target state="translated">Si el nombre de la funci&amp;oacute;n es &lt;b&gt;DESTROY&lt;/b&gt; , se llamar&amp;aacute; a la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; C ++ y se dar&amp;aacute; &lt;code&gt;THIS&lt;/code&gt; como par&amp;aacute;metro. El c&amp;oacute;digo C ++ generado para</target>
        </trans-unit>
        <trans-unit id="2d5573b215565d0881940be9d2690435373f68b6" translate="yes" xml:space="preserve">
          <source>If the function's name is &lt;b&gt;DESTROY&lt;/b&gt; then the C++ &lt;code&gt;delete&lt;/code&gt; function will be called and &lt;code&gt;THIS&lt;/code&gt; will be given as its parameter. The generated C++ code for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9d5afefb1f72725e3effbcde85fc42f858949b" translate="yes" xml:space="preserve">
          <source>If the function's name is &lt;b&gt;new&lt;/b&gt; then the C++ &lt;code&gt;new&lt;/code&gt; function will be called to create a dynamic C++ object. The XSUB will expect the class name, which will be kept in a variable called &lt;code&gt;CLASS&lt;/code&gt; , to be given as the first argument.</source>
          <target state="translated">Si el nombre de la funci&amp;oacute;n es &lt;b&gt;nuevo&lt;/b&gt; , se llamar&amp;aacute; a la &lt;code&gt;new&lt;/code&gt; funci&amp;oacute;n de C ++ para crear un objeto din&amp;aacute;mico de C ++. El XSUB esperar&amp;aacute; que el nombre de la clase, que se mantendr&amp;aacute; en una variable llamada &lt;code&gt;CLASS&lt;/code&gt; , se proporcione como primer argumento.</target>
        </trans-unit>
        <trans-unit id="55694f31aaf01067ff0315ab3ecdf0ed7ab87a27" translate="yes" xml:space="preserve">
          <source>If the function's name is &lt;b&gt;new&lt;/b&gt; then the C++ &lt;code&gt;new&lt;/code&gt; function will be called to create a dynamic C++ object. The XSUB will expect the class name, which will be kept in a variable called &lt;code&gt;CLASS&lt;/code&gt;, to be given as the first argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b71bbee27e0cc31a2af0019a27b599b4619d0d9" translate="yes" xml:space="preserve">
          <source>If the generated module were architecture-specific, you could replace &lt;code&gt;$(INST_LIB)&lt;/code&gt; above with &lt;code&gt;$(INST_ARCHLIB)&lt;/code&gt;, although if you locate modules under</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf92d6194fe17b6faa691c083e3aa66b73fd41bc" translate="yes" xml:space="preserve">
          <source>If the given file is a Storable image return a hash describing it. If the file is readable, but not a Storable image return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If the file does not exist or is unreadable then croak.</source>
          <target state="translated">Si el archivo dado es una imagen almacenable, devuelve un hash que lo describe. Si el archivo es legible, pero no una imagen &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; devuelve undef . Si el archivo no existe o es ilegible, croar.</target>
        </trans-unit>
        <trans-unit id="1e8a49ab1a01520f2d7d29b472d08d17beed998e" translate="yes" xml:space="preserve">
          <source>If the given file is a Storable image return a hash describing it. If the file is readable, but not a Storable image return &lt;code&gt;undef&lt;/code&gt;. If the file does not exist or is unreadable then croak.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5f5dfa299a465aa9a0110ad7326e956c843743" translate="yes" xml:space="preserve">
          <source>If the given string is in FCD (&quot;Fast C or D&quot; form; cf. UTN #5), it returns the string without modification; otherwise it returns an FCD string.</source>
          <target state="translated">Si la cadena dada está en FCD (forma &quot;Fast C o D&quot;;cf.UTN #5),devuelve la cadena sin modificaciones;de lo contrario,devuelve una cadena FCD.</target>
        </trans-unit>
        <trans-unit id="12d092a8012a2b0bc17122d5b49e40f14ceca06d" translate="yes" xml:space="preserve">
          <source>If the global variable $KEEP_ALL is true, the file or directory will not be removed.</source>
          <target state="translated">Si la variable global $KEEP_ALL es verdadera,el archivo o directorio no será eliminado.</target>
        </trans-unit>
        <trans-unit id="cc1c6dee6d24dc894200423540415887a91afb83" translate="yes" xml:space="preserve">
          <source>If the groupings in a regex are nested, &lt;code&gt;$1&lt;/code&gt; gets the group with the leftmost opening parenthesis, &lt;code&gt;$2&lt;/code&gt; the next opening parenthesis, etc. For example, here is a complex regex and the matching variables indicated below it:</source>
          <target state="translated">Si las agrupaciones en una expresi&amp;oacute;n regular est&amp;aacute;n anidadas, &lt;code&gt;$1&lt;/code&gt; obtiene el grupo con el par&amp;eacute;ntesis de apertura m&amp;aacute;s a la izquierda, &lt;code&gt;$2&lt;/code&gt; el siguiente par&amp;eacute;ntesis de apertura, etc. Por ejemplo, aqu&amp;iacute; hay una expresi&amp;oacute;n regular compleja y las variables coincidentes indicadas debajo de ella:</target>
        </trans-unit>
        <trans-unit id="9d3242285e88212205a68d263609b12616c56fc8" translate="yes" xml:space="preserve">
          <source>If the groupings in a regexp are nested, &lt;code&gt;$1&lt;/code&gt; gets the group with the leftmost opening parenthesis, &lt;code&gt;$2&lt;/code&gt; the next opening parenthesis,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b41f5fdfcf62fc4686ef889212a3544a4d2078" translate="yes" xml:space="preserve">
          <source>If the groupings in a regexp are nested, &lt;code&gt;$1&lt;/code&gt; gets the group with the leftmost opening parenthesis, &lt;code&gt;$2&lt;/code&gt; the next opening parenthesis, etc. Here is a regexp with nested groups:</source>
          <target state="translated">Si las agrupaciones en una expresi&amp;oacute;n regular est&amp;aacute;n anidadas, &lt;code&gt;$1&lt;/code&gt; obtiene el grupo con el par&amp;eacute;ntesis de apertura m&amp;aacute;s a la izquierda, &lt;code&gt;$2&lt;/code&gt; el siguiente par&amp;eacute;ntesis de apertura, etc. Aqu&amp;iacute; hay una expresi&amp;oacute;n regular con grupos anidados:</target>
        </trans-unit>
        <trans-unit id="ccea903e5c5ba097dd604b81034d2fccf458d781" translate="yes" xml:space="preserve">
          <source>If the gunzip program encounters a file containing multiple gzip files concatenated together it will automatically uncompress them all. The example below illustrates this behaviour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7672fac594e6a7dd98d2bae0c51d24e5065e39e4" translate="yes" xml:space="preserve">
          <source>If the gzip FEXTRA header field is present it must conform to the sub-field structure as defined in RFC 1952.</source>
          <target state="translated">Si el campo de cabecera gzip FEXTRA está presente,debe ajustarse a la estructura de subcampo como se define en el RFC 1952.</target>
        </trans-unit>
        <trans-unit id="948511a86fa3a757ed333c1057a05dc236b1ed7b" translate="yes" xml:space="preserve">
          <source>If the gzip header contains a comment field (FCOMMENT) it consists solely of ISO 8859-1 characters plus line-feed.</source>
          <target state="translated">Si el encabezado del gzip contiene un campo de comentario (COMENTARIO),está compuesto únicamente de caracteres ISO 8859-1 más la línea de alimentación.</target>
        </trans-unit>
        <trans-unit id="309f2d92f5e86ee4880748347a713d797525d1c3" translate="yes" xml:space="preserve">
          <source>If the gzip header contains a name field (FNAME) it consists solely of ISO 8859-1 characters.</source>
          <target state="translated">Si el encabezado del gzip contiene un campo de nombre (FNAME)está compuesto únicamente por caracteres ISO 8859-1.</target>
        </trans-unit>
        <trans-unit id="5ae4fed28b97ca4227cf5c00d60d4d6f2110ce60" translate="yes" xml:space="preserve">
          <source>If the hash is tied dispatches through to the SCALAR tied method, otherwise if the hash contains no keys returns 0, otherwise returns a mortal sv containing a string specifying the number of used buckets, followed by a slash, followed by the number of available buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76da98a8a76e4650e3f026f7c68c78b99cc6936b" translate="yes" xml:space="preserve">
          <source>If the hash is very large, you might not want to create a long list of keys. To save some memory, you can grab one key-value pair at a time using &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;, which returns a pair you haven't seen yet:</source>
          <target state="translated">Si el hash es muy grande, es posible que no desee crear una lista larga de claves. Para ahorrar algo de memoria, puede tomar un par clave-valor a la vez usando &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; , que devuelve un par que a&amp;uacute;n no ha visto:</target>
        </trans-unit>
        <trans-unit id="80cd0158384418c000a070c2edb04e7bd8c177a8" translate="yes" xml:space="preserve">
          <source>If the hash is very large, you might not want to create a long list of keys. To save some memory, you can grab one key-value pair at a time using &lt;code&gt;each()&lt;/code&gt;, which returns a pair you haven't seen yet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb896d2cffead7d5fc78c0ddc9c3c52939333bc" translate="yes" xml:space="preserve">
          <source>If the hint provided is a subroutine, then &lt;code&gt;autodie&lt;/code&gt; will pass the complete return value to that subroutine. If the hint is any other value, then &lt;code&gt;autodie&lt;/code&gt; will smart-match against the value provided. In Perl 5.8.x there is no smart-match operator, and as such only subroutine hints are supported in these versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d353d642decb66a3abbcefcf79e58c99b0ba1e9" translate="yes" xml:space="preserve">
          <source>If the hook is an array reference, its first element must be a subroutine reference. This subroutine is called as above, but the first parameter is the array reference. This lets you indirectly pass arguments to the subroutine.</source>
          <target state="translated">Si el gancho es una referencia de matriz,su primer elemento debe ser una referencia de subrutina.Esta subrutina se llama como arriba,pero el primer parámetro es la referencia del array.Esto le permite pasar indirectamente argumentos a la subrutina.</target>
        </trans-unit>
        <trans-unit id="75efff7a12e92261036612262090b64712859893" translate="yes" xml:space="preserve">
          <source>If the hook is an object, it must provide an &lt;code&gt;INC&lt;/code&gt; method that will be called as above, the first parameter being the object itself. (Note that you must fully qualify the sub's name, as unqualified &lt;code&gt;INC&lt;/code&gt; is always forced into package &lt;code&gt;main&lt;/code&gt;.) Here is a typical code layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089781c4ed94b59afd45ade73f63dd3ae0adcf17" translate="yes" xml:space="preserve">
          <source>If the hook is an object, it must provide an INC method that will be called as above, the first parameter being the object itself. (Note that you must fully qualify the sub's name, as unqualified &lt;code&gt;INC&lt;/code&gt; is always forced into package &lt;code&gt;main&lt;/code&gt; .) Here is a typical code layout:</source>
          <target state="translated">Si el gancho es un objeto, debe proporcionar un m&amp;eacute;todo INC que se llamar&amp;aacute; como se indic&amp;oacute; anteriormente, siendo el primer par&amp;aacute;metro el objeto mismo. (Tenga en cuenta que debe calificar completamente el nombre del sub, ya que &lt;code&gt;INC&lt;/code&gt; no calificado siempre se fuerza en el paquete &lt;code&gt;main&lt;/code&gt; ). Aqu&amp;iacute; hay un dise&amp;ntilde;o de c&amp;oacute;digo t&amp;iacute;pico:</target>
        </trans-unit>
        <trans-unit id="dc5ac6730609a596bd949c3bb5ec01a23d4ffce0" translate="yes" xml:space="preserve">
          <source>If the initial value specified isn't part of a magical increment sequence (that is, a non-empty string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; ), only the initial value will be returned. So the following will only return an alpha:</source>
          <target state="translated">Si el valor inicial especificado no es parte de una secuencia de incremento m&amp;aacute;gico (es decir, una cadena no vac&amp;iacute;a que coincide con &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt; ), solo el valor inicial ser devuelto. Entonces, lo siguiente solo devolver&amp;aacute; un alfa:</target>
        </trans-unit>
        <trans-unit id="f20e6769b4c4dc9b5fc71b6e41306b51022683e2" translate="yes" xml:space="preserve">
          <source>If the initial value specified isn't part of a magical increment sequence (that is, a non-empty string matching &lt;code&gt;/^[a-zA-Z]*[0-9]*\z/&lt;/code&gt;), only the initial value will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1ecd771a78ded6bdca0c84c4a8624d300c4df7" translate="yes" xml:space="preserve">
          <source>If the initialization begins with &lt;code&gt;=&lt;/code&gt; , then it is output in the declaration for the input variable, replacing the initialization supplied by the typemap. If the initialization begins with &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt; , then it is performed after all of the input variables have been declared. In the &lt;code&gt;;&lt;/code&gt; case the initialization normally supplied by the typemap is not performed. For the &lt;code&gt;+&lt;/code&gt; case, the declaration for the variable will include the initialization from the typemap. A global variable, &lt;code&gt;%v&lt;/code&gt; , is available for the truly rare case where information from one initialization is needed in another initialization.</source>
          <target state="translated">Si la inicializaci&amp;oacute;n comienza con &lt;code&gt;=&lt;/code&gt; , entonces se genera en la declaraci&amp;oacute;n de la variable de entrada, reemplazando la inicializaci&amp;oacute;n proporcionada por el typemap. Si la inicializaci&amp;oacute;n comienza con &lt;code&gt;;&lt;/code&gt; o &lt;code&gt;+&lt;/code&gt; , luego se realiza despu&amp;eacute;s de que se hayan declarado todas las variables de entrada. En el &lt;code&gt;;&lt;/code&gt; caso no se realiza la inicializaci&amp;oacute;n proporcionada normalmente por el typemap. Para el caso &lt;code&gt;+&lt;/code&gt; , la declaraci&amp;oacute;n de la variable incluir&amp;aacute; la inicializaci&amp;oacute;n del typemap. Una variable global, &lt;code&gt;%v&lt;/code&gt; , est&amp;aacute; disponible para el caso realmente raro en el que se necesita informaci&amp;oacute;n de una inicializaci&amp;oacute;n en otra inicializaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ef3d32f84fa869f08148860d3a1b874f45f05bbf" translate="yes" xml:space="preserve">
          <source>If the initialization begins with &lt;code&gt;=&lt;/code&gt;, then it is output in the declaration for the input variable, replacing the initialization supplied by the typemap. If the initialization begins with &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;, then it is performed after all of the input variables have been declared. In the &lt;code&gt;;&lt;/code&gt; case the initialization normally supplied by the typemap is not performed. For the &lt;code&gt;+&lt;/code&gt; case, the declaration for the variable will include the initialization from the typemap. A global variable, &lt;code&gt;%v&lt;/code&gt;, is available for the truly rare case where information from one initialization is needed in another initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a641a3d375c74024ce1445924cf66af681f41ebd" translate="yes" xml:space="preserve">
          <source>If the input code point's name has more than one synonym, they are returned joined into a single comma-separated string.</source>
          <target state="translated">Si el nombre del punto de código de entrada tiene más de un sinónimo,se devuelven unidos en una sola cadena separada por comas.</target>
        </trans-unit>
        <trans-unit id="9e071ed158601437a7fd928632778e71dc9740aa" translate="yes" xml:space="preserve">
          <source>If the input file/buffer contains multiple compressed data streams, this option will uncompress the whole lot as a single data stream.</source>
          <target state="translated">Si el archivo/bufete de entrada contiene múltiples flujos de datos comprimidos,esta opción descomprimirá todo el lote como un solo flujo de datos.</target>
        </trans-unit>
        <trans-unit id="3c582e01c3ed1134227361002db4abc5ef87f0a6" translate="yes" xml:space="preserve">
          <source>If the input is a buffer, &lt;code&gt;trailingData&lt;/code&gt; will return everything from the end of the compressed data stream to the end of the buffer.</source>
          <target state="translated">Si la entrada es un b&amp;uacute;fer, &lt;code&gt;trailingData&lt;/code&gt; devolver&amp;aacute; todo desde el final del flujo de datos comprimidos hasta el final del b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="646ddea5cc7fe42fca7b5f673b48b7968e951a94" translate="yes" xml:space="preserve">
          <source>If the input is a filehandle, &lt;code&gt;trailingData&lt;/code&gt; will return the data that is left in the filehandle input buffer once the end of the compressed data stream has been reached. You can then use the filehandle to read the rest of the input file.</source>
          <target state="translated">Si la entrada es un identificador de archivo, &lt;code&gt;trailingData&lt;/code&gt; devolver&amp;aacute; los datos que quedan en el b&amp;uacute;fer de entrada del identificador de archivo una vez que se haya alcanzado el final del flujo de datos comprimidos. A continuaci&amp;oacute;n, puede usar el identificador de archivo para leer el resto del archivo de entrada.</target>
        </trans-unit>
        <trans-unit id="68ffb2242fbe49d90e0f353510f536b7c97b26ff" translate="yes" xml:space="preserve">
          <source>If the input is a gzip (RFC 1952) data stream, the following will be checked:</source>
          <target state="translated">Si la entrada es un flujo de datos gzip (RFC 1952),se comprobará lo siguiente:</target>
        </trans-unit>
        <trans-unit id="fbb62e9bad07668939b33bd6b3f35cbd2a29221c" translate="yes" xml:space="preserve">
          <source>If the input is an RFC 1950 data stream, the following will be checked:</source>
          <target state="translated">Si la entrada es un flujo de datos RFC 1950,se comprobará lo siguiente:</target>
        </trans-unit>
        <trans-unit id="681895bf526e306295ee60c6f4d01df1e2e0e233" translate="yes" xml:space="preserve">
          <source>If the input is being interpreted as UTF-8 and a UTF-8 encoding error is encountered, an exception is generated.</source>
          <target state="translated">Si la entrada se interpreta como UTF-8 y se encuentra un error de codificación UTF-8,se genera una excepción.</target>
        </trans-unit>
        <trans-unit id="3c3ba700c41877fa613cc375e9afc8a49773890d" translate="yes" xml:space="preserve">
          <source>If the input is unknown &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned in scalar context; an empty-list in list context. If the input is known, the number of elements in the list is returned if called in scalar context.</source>
          <target state="translated">Si la entrada es desconocida, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en contexto escalar; una lista vac&amp;iacute;a en el contexto de lista. Si se conoce la entrada, se devuelve el n&amp;uacute;mero de elementos de la lista si se llama en un contexto escalar.</target>
        </trans-unit>
        <trans-unit id="a3761d436a5408df215f967b2c72bd018ebcc47f" translate="yes" xml:space="preserve">
          <source>If the input is unknown &lt;code&gt;undef&lt;/code&gt; is returned in scalar context; an empty-list in list context. If the input is known, the number of elements in the list is returned if called in scalar context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45a90c97d69c88324a18a4a975329202a110a46" translate="yes" xml:space="preserve">
          <source>If the input string is longer than needed, extra characters are ignored.</source>
          <target state="translated">Si la cadena de entrada es más larga de lo necesario,los caracteres adicionales son ignorados.</target>
        </trans-unit>
        <trans-unit id="daec947152f5e00d64f719376318858935b663a6" translate="yes" xml:space="preserve">
          <source>If the input string is longer than needed, remaining characters are ignored.</source>
          <target state="translated">Si la cadena de entrada es más larga de lo necesario,los caracteres restantes se ignoran.</target>
        </trans-unit>
        <trans-unit id="1a191161ccbd661c7961516bab02ad1f7aadb16a" translate="yes" xml:space="preserve">
          <source>If the interdependence of your &lt;code&gt;BOOT:&lt;/code&gt; section and Perl code is more complicated than this (e.g., the &lt;code&gt;BOOT:&lt;/code&gt; section makes calls to Perl functions which make calls to XSUBs with prototypes), get rid of the &lt;code&gt;BOOT:&lt;/code&gt; section altogether. Replace it with a function &lt;code&gt;onBOOT()&lt;/code&gt; , and call it like this:</source>
          <target state="translated">Si la interdependencia de su secci&amp;oacute;n &lt;code&gt;BOOT:&lt;/code&gt; y el c&amp;oacute;digo Perl es m&amp;aacute;s complicada que esto (por ejemplo, la secci&amp;oacute;n &lt;code&gt;BOOT:&lt;/code&gt; realiza llamadas a funciones Perl que hacen llamadas a XSUB con prototipos), elimine la secci&amp;oacute;n &lt;code&gt;BOOT:&lt;/code&gt; por completo. Reempl&amp;aacute;celo con una funci&amp;oacute;n &lt;code&gt;onBOOT()&lt;/code&gt; y ll&amp;aacute;melo as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="baa35ea6f799cdc2c58744681c4a0f8490276128" translate="yes" xml:space="preserve">
          <source>If the interdependence of your &lt;code&gt;BOOT:&lt;/code&gt; section and Perl code is more complicated than this (e.g., the &lt;code&gt;BOOT:&lt;/code&gt; section makes calls to Perl functions which make calls to XSUBs with prototypes), get rid of the &lt;code&gt;BOOT:&lt;/code&gt; section altogether. Replace it with a function &lt;code&gt;onBOOT()&lt;/code&gt;, and call it like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2909f2e071daf0b882a5795cb2264aafaf8e4b0b" translate="yes" xml:space="preserve">
          <source>If the interpreter's &lt;code&gt;PL_exit_flags&lt;/code&gt; word has the &lt;code&gt;PERL_EXIT_DESTRUCT_END&lt;/code&gt; flag set, then this function will execute code in &lt;code&gt;END&lt;/code&gt; blocks before performing the rest of destruction. If it is desired to make any use of the interpreter between &lt;a href=&quot;#perl_parse&quot;&gt;&quot;perl_parse&quot;&lt;/a&gt; and &lt;a href=&quot;#perl_destruct&quot;&gt;&quot;perl_destruct&quot;&lt;/a&gt; other than just calling &lt;a href=&quot;#perl_run&quot;&gt;&quot;perl_run&quot;&lt;/a&gt;, then this flag should be set early on. This matters if &lt;a href=&quot;#perl_run&quot;&gt;&quot;perl_run&quot;&lt;/a&gt; will not be called, or if anything else will be done in addition to calling &lt;a href=&quot;#perl_run&quot;&gt;&quot;perl_run&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4475a90b24f7b1ba4a7b6ea113603191eff994" translate="yes" xml:space="preserve">
          <source>If the kernel set-id script feature isn't disabled, then any set-id script provides an exploitable vulnerability. Perl can't avoid being exploitable, but will point out vulnerable scripts where it can. If Perl detects that it is being applied to a set-id script then it will complain loudly that your set-id script is insecure, and won't run it. When Perl complains, you need to remove the set-id bit from the script to eliminate the vulnerability. Refusing to run the script doesn't in itself close the vulnerability; it is just Perl's way of encouraging you to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4a966e522ce068cba366c74c39330ba735c481" translate="yes" xml:space="preserve">
          <source>If the key does not exist the method returns 1.</source>
          <target state="translated">Si la clave no existe,el método devuelve 1.</target>
        </trans-unit>
        <trans-unit id="f85edef10f25d12c44c4dedc4c6946807ec9d900" translate="yes" xml:space="preserve">
          <source>If the label equals '-', then Concise will treat the bit as a raw bit and not try to display it symbolically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74ad7c032adb69e8741c3ce089dbedf2af387c8" translate="yes" xml:space="preserve">
          <source>If the language handle has a &quot;fail&quot; attribute whose value is a coderef, then $lh-&amp;gt;maketext(</source>
          <target state="translated">Si el identificador de idioma tiene un atributo &quot;fail&quot; cuyo valor es un coderef, entonces $ lh-&amp;gt; maketext (</target>
        </trans-unit>
        <trans-unit id="74b0a2c233bae54a5a0a22d4c6904ecf217ffcc9" translate="yes" xml:space="preserve">
          <source>If the language handle has no &quot;fail&quot; attribute, maketext will simply throw an exception (i.e., it calls &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, mentioning the</source>
          <target state="translated">Si el identificador de idioma no tiene el atributo &quot;fail&quot;, maketext simplemente lanzar&amp;aacute; una excepci&amp;oacute;n (es decir, llama a &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , mencionando el</target>
        </trans-unit>
        <trans-unit id="ed178838d46c1e8b7a50a0bfb02973479dc8e58f" translate="yes" xml:space="preserve">
          <source>If the language handle has no &quot;fail&quot; attribute, maketext will simply throw an exception (i.e., it calls &lt;code&gt;die&lt;/code&gt;, mentioning the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c30b1f2ee79d6c9f16717998b6ca5cb7a43494" translate="yes" xml:space="preserve">
          <source>If the last definition is removed, then the DOS device name is also deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f576169bf47c87f2f0af12c0e2e1a4146c280c" translate="yes" xml:space="preserve">
          <source>If the last element of LIST does not end in a newline, the current script line number and input line number (if any) are also printed, and a newline is supplied. Note that the &quot;input line number&quot; (also known as &quot;chunk&quot;) is subject to whatever notion of &quot;line&quot; happens to be currently in effect, and is also available as the special variable &lt;code&gt;$.&lt;/code&gt; . See &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt; and &lt;a href=&quot;../perlvar#%24.&quot;&gt;$. in perlvar&lt;/a&gt;.</source>
          <target state="translated">Si el &amp;uacute;ltimo elemento de LIST no termina en una nueva l&amp;iacute;nea, tambi&amp;eacute;n se imprimen el n&amp;uacute;mero de l&amp;iacute;nea de secuencia de comandos actual y el n&amp;uacute;mero de l&amp;iacute;nea de entrada (si corresponde), y se proporciona una nueva l&amp;iacute;nea. Tenga en cuenta que el &quot;n&amp;uacute;mero de l&amp;iacute;nea de entrada&quot; (tambi&amp;eacute;n conocido como &quot;fragmento&quot;) est&amp;aacute; sujeto a cualquier noci&amp;oacute;n de &quot;l&amp;iacute;nea&quot; que est&amp;eacute; actualmente en vigor, y tambi&amp;eacute;n est&amp;aacute; disponible como la variable especial &lt;code&gt;$.&lt;/code&gt; . Vea &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$ / en perlvar&lt;/a&gt; y &lt;a href=&quot;../perlvar#%24.&quot;&gt;$. en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ddf8780e7e7d9b3df1dc954871c1e6b0c532c31" translate="yes" xml:space="preserve">
          <source>If the last element of LIST does not end in a newline, the current script line number and input line number (if any) are also printed, and a newline is supplied. Note that the &quot;input line number&quot; (also known as &quot;chunk&quot;) is subject to whatever notion of &quot;line&quot; happens to be currently in effect, and is also available as the special variable &lt;code&gt;$.&lt;/code&gt; . See &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt; and &lt;a href=&quot;perlvar#%24.&quot;&gt;$. in perlvar&lt;/a&gt;.</source>
          <target state="translated">Si el &amp;uacute;ltimo elemento de LIST no termina en una nueva l&amp;iacute;nea, tambi&amp;eacute;n se imprimen el n&amp;uacute;mero de l&amp;iacute;nea de secuencia de comandos actual y el n&amp;uacute;mero de l&amp;iacute;nea de entrada (si corresponde), y se proporciona una nueva l&amp;iacute;nea. Tenga en cuenta que el &quot;n&amp;uacute;mero de l&amp;iacute;nea de entrada&quot; (tambi&amp;eacute;n conocido como &quot;fragmento&quot;) est&amp;aacute; sujeto a cualquier noci&amp;oacute;n de &quot;l&amp;iacute;nea&quot; que est&amp;eacute; actualmente en vigor, y tambi&amp;eacute;n est&amp;aacute; disponible como la variable especial &lt;code&gt;$.&lt;/code&gt; . Vea &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$ / en perlvar&lt;/a&gt; y &lt;a href=&quot;perlvar#%24.&quot;&gt;$. en perlvar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65ccdf7ae6afe2d083d0de8afca0765301ad5a3c" translate="yes" xml:space="preserve">
          <source>If the left hand side is neither a package name nor an object, then the method call will cause an error, but see the section on &lt;a href=&quot;#Method-Call-Variations&quot;&gt;&quot;Method Call Variations&quot;&lt;/a&gt; for more nuances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90835049bf9dceb2b3128f6e0da3805c87bc497" translate="yes" xml:space="preserve">
          <source>If the left hand side is neither a package name nor an object, then the method call will cause an error, but see the section on &lt;a href=&quot;#Method-Call-Variations&quot;&gt;Method Call Variations&lt;/a&gt; for more nuances.</source>
          <target state="translated">Si el lado izquierdo no es un nombre de paquete ni un objeto, la llamada al m&amp;eacute;todo provocar&amp;aacute; un error, pero consulte la secci&amp;oacute;n sobre &lt;a href=&quot;#Method-Call-Variations&quot;&gt;Variaciones de la llamada al m&amp;eacute;todo&lt;/a&gt; para obtener m&amp;aacute;s matices.</target>
        </trans-unit>
        <trans-unit id="37bacecd2332508665ec81733fbdffa749ac5bfa" translate="yes" xml:space="preserve">
          <source>If the length of the input string is not even, it behaves as if padded by a null character at the end. Similarly, &quot;extra&quot; nybbles are ignored during unpacking.</source>
          <target state="translated">Si la longitud de la cadena de entrada no es uniforme,se comporta como si estuviera rellena por un carácter nulo al final.De manera similar,los nibbles &quot;extra&quot; son ignorados durante el desempaque.</target>
        </trans-unit>
        <trans-unit id="88b7864a27a0577ffff54b7d555aea0617e9d505" translate="yes" xml:space="preserve">
          <source>If the length of the input string is not evenly divisible by 8, the remainder is packed as if the input string were padded by null characters at the end. Similarly during unpacking, &quot;extra&quot; bits are ignored.</source>
          <target state="translated">Si la longitud de la cadena de entrada no es divisible uniformemente por 8,el resto se empaqueta como si la cadena de entrada estuviera rellena de caracteres nulos al final.De manera similar,durante el desempaque,los bits &quot;extra&quot; son ignorados.</target>
        </trans-unit>
        <trans-unit id="a2e67d3ea522ed96fe7a9c8431714f7f3d0ba5c5" translate="yes" xml:space="preserve">
          <source>If the library happens to be in a location not in &lt;code&gt;$Config{libpth}&lt;/code&gt; , you need:</source>
          <target state="translated">Si la biblioteca se encuentra en una ubicaci&amp;oacute;n que no est&amp;aacute; en &lt;code&gt;$Config{libpth}&lt;/code&gt; , necesita:</target>
        </trans-unit>
        <trans-unit id="c256d5d027a4accdcc167669a7812e5bf777ccbe" translate="yes" xml:space="preserve">
          <source>If the library happens to be in a location not in &lt;code&gt;$Config{libpth}&lt;/code&gt;, you need:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96118a855a2f1b2515701521249ef16334052e1f" translate="yes" xml:space="preserve">
          <source>If the line number is &lt;code&gt;.&lt;/code&gt;, sets a breakpoint on the current line:</source>
          <target state="translated">Si el n&amp;uacute;mero de l&amp;iacute;nea es &lt;code&gt;.&lt;/code&gt; , establece un punto de interrupci&amp;oacute;n en la l&amp;iacute;nea actual:</target>
        </trans-unit>
        <trans-unit id="94650250941df693d5a68b4ac245a935f3b9c2e5" translate="yes" xml:space="preserve">
          <source>If the list moderators tell you that you are not being civil, carefully consider how your words have appeared before responding in any way. Were they kind? You may protest, but repeated protest in the face of a repeatedly reaffirmed decision is not acceptable. Repeatedly protesting about the moderators' decisions regarding a third party is also unacceptable, as is continuing to initiate off-list contact with the moderators about their decisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93c03970a56584f9fb61994432bc17cb7db5f12" translate="yes" xml:space="preserve">
          <source>If the list moderators tell you that you are not being civil, carefully consider how your words have appeared before responding in any way. You may protest, but repeated protest in the face of a repeatedly reaffirmed decision is not acceptable.</source>
          <target state="translated">Si los moderadores de la lista le dicen que no está siendo cortés,considere cuidadosamente cómo han aparecido sus palabras antes de responder de cualquier manera.Puede protestar,pero no es aceptable una protesta repetida ante una decisión repetidamente reafirmada.</target>
        </trans-unit>
        <trans-unit id="e0a9f58b026642b9c9e8e7bb8deab3007d5236f6" translate="yes" xml:space="preserve">
          <source>If the locale from the user's environment is desired, there should be no need for XS code to set the locale except for &lt;code&gt;LC_NUMERIC&lt;/code&gt; , as perl has already set it up. XS code should avoid changing the locale, as it can adversely affect other, unrelated, code and may not be thread safe. However, some alien libraries that may be called do set it, such as &lt;code&gt;Gtk&lt;/code&gt; . This can cause problems for the perl core and other modules. Starting in v5.20.1, calling the function &lt;a href=&quot;perlapi#sync_locale&quot;&gt;sync_locale()&lt;/a&gt; from XS should be sufficient to avoid most of these problems. Prior to this, you need a pure Perl statement that does this:</source>
          <target state="translated">Si se desea la configuraci&amp;oacute;n regional del entorno del usuario, no deber&amp;iacute;a ser necesario el c&amp;oacute;digo XS para establecer la configuraci&amp;oacute;n regional, excepto &lt;code&gt;LC_NUMERIC&lt;/code&gt; , ya que perl ya lo ha configurado. El c&amp;oacute;digo XS debe evitar cambiar la configuraci&amp;oacute;n regional, ya que puede afectar negativamente a otros c&amp;oacute;digos no relacionados y puede que no sea seguro para subprocesos. Sin embargo, algunas bibliotecas alien&amp;iacute;genas a las que se puede llamar s&amp;iacute; lo configuran, como &lt;code&gt;Gtk&lt;/code&gt; . Esto puede causar problemas para el n&amp;uacute;cleo de perl y otros m&amp;oacute;dulos. A partir de la v5.20.1, llamar a la funci&amp;oacute;n &lt;a href=&quot;perlapi#sync_locale&quot;&gt;sync_locale ()&lt;/a&gt; desde XS deber&amp;iacute;a ser suficiente para evitar la mayor&amp;iacute;a de estos problemas. Antes de esto, necesita una declaraci&amp;oacute;n de Perl pura que haga esto:</target>
        </trans-unit>
        <trans-unit id="29cc247eadfeb453e1955bad0bbc5ed23022a753" translate="yes" xml:space="preserve">
          <source>If the locale from the user's environment is desired, there should be no need for XS code to set the locale except for &lt;code&gt;LC_NUMERIC&lt;/code&gt;, as perl has already set the others up. XS code should avoid changing the locale, as it can adversely affect other, unrelated, code and may not be thread-safe. To minimize problems, the macros &lt;a href=&quot;perlapi#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot; in perlapi&lt;/a&gt;, &lt;a href=&quot;perlapi#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;&quot;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot; in perlapi&lt;/a&gt;, and &lt;a href=&quot;perlapi#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot; in perlapi&lt;/a&gt; should be used to affect any needed change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4664ee573739492d5623b9369f8faea69d271aa1" translate="yes" xml:space="preserve">
          <source>If the main thread exits while there are detached threads which are still running, then Perl's global destruction phase is not executed because otherwise certain global structures that control the operation of threads and that are allocated in the main thread's memory may get destroyed before the detached thread is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823e97e3e713d61f96695c0b7d66500ba0535b81" translate="yes" xml:space="preserve">
          <source>If the make process encounters trouble with either compilation or linking then try setting the _C89_CCMODE to 1. Assuming sh is your login shell then run:</source>
          <target state="translated">Si el proceso de fabricación encuentra problemas con la compilación o el enlace,intente configurar el _C89_CCMODE en 1.Asumiendo que sh es su shell de inicio de sesión,entonces ejecute:</target>
        </trans-unit>
        <trans-unit id="fa7d8db26880e3b2b83f69006312ed2e5013aabf" translate="yes" xml:space="preserve">
          <source>If the member name in the zip archive is not valid UTF-8 when this optionn is true, the script will die with an error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0119f182d57e85f55c259aad67e5507f5a71d506" translate="yes" xml:space="preserve">
          <source>If the method is called in scalar context, then it will try to extract exactly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae0fed8c834da6c72af01b4cce727e6b5ec751e" translate="yes" xml:space="preserve">
          <source>If the module &lt;code&gt;Module&lt;/code&gt; is already loaded, then the declaration</source>
          <target state="translated">Si el m&amp;oacute;dulo &lt;code&gt;Module&lt;/code&gt; ya est&amp;aacute; cargado, entonces la declaraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="1b3cd9a44d834ecaba373518cdced67ef6882e1c" translate="yes" xml:space="preserve">
          <source>If the module &lt;code&gt;Module&lt;/code&gt; is not loaded yet, then the above declaration declares functions func1() and func2() in the current package. When these functions are called, they load the package &lt;code&gt;Module&lt;/code&gt; if needed, and substitute themselves with the correct definitions.</source>
          <target state="translated">Si el m&amp;oacute;dulo &lt;code&gt;Module&lt;/code&gt; a&amp;uacute;n no est&amp;aacute; cargado, la declaraci&amp;oacute;n anterior declara las funciones func1 () y func2 () en el paquete actual. Cuando se llaman estas funciones, cargan el paquete &lt;code&gt;Module&lt;/code&gt; si es necesario y se sustituyen por las definiciones correctas.</target>
        </trans-unit>
        <trans-unit id="aa83e5ba98e2e00acddd7117050d321e4e9d54d9" translate="yes" xml:space="preserve">
          <source>If the module is already loaded, &lt;code&gt;mark_as_loaded&lt;/code&gt; will carp about this and tell you from where the &lt;code&gt;PACKAGE&lt;/code&gt; has been loaded already.</source>
          <target state="translated">Si el m&amp;oacute;dulo ya est&amp;aacute; cargado, &lt;code&gt;mark_as_loaded&lt;/code&gt; le informar&amp;aacute; de d&amp;oacute;nde ya se ha cargado el &lt;code&gt;PACKAGE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1cec740a866f3242f2245723f611d8e6a35a17e" translate="yes" xml:space="preserve">
          <source>If the module is already unloaded, &lt;code&gt;mark_as_unloaded&lt;/code&gt; will carp about this and tell you the &lt;code&gt;PACKAGE&lt;/code&gt; has been unloaded already.</source>
          <target state="translated">Si el m&amp;oacute;dulo ya est&amp;aacute; descargado, &lt;code&gt;mark_as_unloaded&lt;/code&gt; responder&amp;aacute; sobre esto y le dir&amp;aacute; que el &lt;code&gt;PACKAGE&lt;/code&gt; ya se descarg&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="55dd2ee6ad71be855cc8cea6dc45014e0de598b9" translate="yes" xml:space="preserve">
          <source>If the module is needed inside the</source>
          <target state="translated">Si el módulo se necesita dentro de la</target>
        </trans-unit>
        <trans-unit id="fab3a0f11307492451a39d88e9be980974dcb4d2" translate="yes" xml:space="preserve">
          <source>If the module will only be used inside a thread, you can try loading the module from inside the thread entry point function using &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; if needed):</source>
          <target state="translated">Si el m&amp;oacute;dulo solo se usar&amp;aacute; dentro de un hilo, puede intentar cargar el m&amp;oacute;dulo desde dentro de la funci&amp;oacute;n de punto de entrada del hilo usando &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; (e &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; ar si es necesario):</target>
        </trans-unit>
        <trans-unit id="b3aa735bc422b148dd84e6d085642a87f49e47ba" translate="yes" xml:space="preserve">
          <source>If the module will only be used inside a thread, you can try loading the module from inside the thread entry point function using &lt;code&gt;require&lt;/code&gt; (and &lt;code&gt;import&lt;/code&gt; if needed):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3b3934908dc77b79dcbb0b789e5b838d36463c" translate="yes" xml:space="preserve">
          <source>If the name is given in UTF-8, set this to &lt;code&gt;HVhek_UTF8&lt;/code&gt; . The value is passed direct as the parameter</source>
          <target state="translated">Si el nombre se da en UTF-8, &lt;code&gt;HVhek_UTF8&lt;/code&gt; en HVhek_UTF8 . El valor se pasa directamente como par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="873d55d8a257eaf7386c02b0cf4a9016781f6d23" translate="yes" xml:space="preserve">
          <source>If the name is given in UTF-8, set this to &lt;code&gt;HVhek_UTF8&lt;/code&gt;. The value is passed direct as the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ddfa3306f944720376a989f9d5fd87c400eb47" translate="yes" xml:space="preserve">
          <source>If the name is omitted, format &quot;STDOUT&quot; is defined. A single &quot;.&quot; in column 1 is used to terminate a format. FORMLIST consists of a sequence of lines, each of which may be one of three types:</source>
          <target state="translated">Si se omite el nombre,se define el formato &quot;STDOUT&quot;.Un solo &quot;.&quot; en la columna 1 se utiliza para terminar un formato.FORMLIST consiste en una secuencia de líneas,cada una de las cuales puede ser de tres tipos:</target>
        </trans-unit>
        <trans-unit id="0def4cf3757d0553a2341afef733c2c0849f1052" translate="yes" xml:space="preserve">
          <source>If the name is unknown, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned (or an empty list in list context). Note that Perl typically recognizes property names in regular expressions with an optional &lt;code&gt;&quot;Is_&lt;/code&gt; &quot; (with or without the underscore) prefixed to them, such as &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . This function does not recognize those in the input, returning &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Nor are they included in the output as possible synonyms.</source>
          <target state="translated">Si el nombre es desconocido, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; (o una lista vac&amp;iacute;a en el contexto de la lista). Tenga en cuenta que Perl normalmente reconoce nombres de propiedades en expresiones regulares con un &lt;code&gt;&quot;Is_&lt;/code&gt; &quot; opcional (con o sin el subrayado) como prefijo, como &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . Esta funci&amp;oacute;n no reconoce los de la entrada, devolviendo &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Tampoco se incluyen en la salida como posibles sin&amp;oacute;nimos.</target>
        </trans-unit>
        <trans-unit id="88548ac66c76967c7a6bd845c8445fe8da2c6437" translate="yes" xml:space="preserve">
          <source>If the name is unknown, &lt;code&gt;undef&lt;/code&gt; is returned (or an empty list in list context). Note that Perl typically recognizes property names in regular expressions with an optional &lt;code&gt;&quot;Is_&lt;/code&gt;&quot; (with or without the underscore) prefixed to them, such as &lt;code&gt;\p{isgc=punct}&lt;/code&gt;. This function does not recognize those in the input, returning &lt;code&gt;undef&lt;/code&gt;. Nor are they included in the output as possible synonyms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79bb3cadb8f975e939ef18071a526a4b5d3363e" translate="yes" xml:space="preserve">
          <source>If the named parameter &lt;code&gt;config_override&lt;/code&gt; is specified, it should be a reference to a hash which contains all information usually found in &lt;code&gt;%Config::Config&lt;/code&gt; . For example, you can obtain the configuration information for a separate perl installation and pass that in.</source>
          <target state="translated">Si se especifica el par&amp;aacute;metro con nombre &lt;code&gt;config_override&lt;/code&gt; , deber&amp;iacute;a ser una referencia a un hash que contenga toda la informaci&amp;oacute;n que normalmente se encuentra en &lt;code&gt;%Config::Config&lt;/code&gt; . Por ejemplo, puede obtener la informaci&amp;oacute;n de configuraci&amp;oacute;n para una instalaci&amp;oacute;n de perl separada y pasarla.</target>
        </trans-unit>
        <trans-unit id="455e39c93d939d0a811460c9e6eb8b61291c4896" translate="yes" xml:space="preserve">
          <source>If the named parameter &lt;code&gt;config_override&lt;/code&gt; is specified, it should be a reference to a hash which contains all information usually found in &lt;code&gt;%Config::Config&lt;/code&gt;. For example, you can obtain the configuration information for a separate perl installation and pass that in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3ef5746e8cd5bab310439aa50dba89f545a584" translate="yes" xml:space="preserve">
          <source>If the named parameter &lt;code&gt;skip_cwd&lt;/code&gt; is true, the current directory &lt;code&gt;.&lt;/code&gt; will be stripped from &lt;code&gt;@INC&lt;/code&gt; before searching for .packlists. This keeps ExtUtils::Installed from finding modules installed in other perls that happen to be located below the current directory.</source>
          <target state="translated">Si el par&amp;aacute;metro con nombre &lt;code&gt;skip_cwd&lt;/code&gt; es verdadero, el directorio actual &lt;code&gt;.&lt;/code&gt; se &lt;code&gt;@INC&lt;/code&gt; de @INC antes de buscar .packlists. Esto evita que ExtUtils :: Installed encuentre m&amp;oacute;dulos instalados en otras perls que se encuentren debajo del directorio actual.</target>
        </trans-unit>
        <trans-unit id="7f6facbdb87684a56df7a20a0d54e6b8073b8eb9" translate="yes" xml:space="preserve">
          <source>If the new version of the C library is ABI-compatible (that's Application Binary Interface compatible) with the version you're upgrading from, and if the shared library version didn't change, no re-compilation should be necessary.</source>
          <target state="translated">Si la nueva versión de la biblioteca C es compatible con la ABI (es decir,compatible con la Interfaz Binaria de la Aplicación)con la versión de la que se está actualizando,y si la versión de la biblioteca compartida no cambió,no debería ser necesaria una recompilación.</target>
        </trans-unit>
        <trans-unit id="3f6451aaf2bf86188eece8b63b5bab6c7257462f" translate="yes" xml:space="preserve">
          <source>If the next character is in (or extends into) the next chunk of input text, the next chunk will be read in. Normally the current chunk will be discarded at the same time, but if</source>
          <target state="translated">Si el siguiente carácter está en (o se extiende en)el siguiente trozo de texto introducido,el siguiente trozo se leerá en.Normalmente el trozo actual se descartará al mismo tiempo,pero si</target>
        </trans-unit>
        <trans-unit id="1f73682ad19692885d11822d4f6d7cb69031b04a" translate="yes" xml:space="preserve">
          <source>If the next character is in (or extends into) the next chunk of input text, the next chunk will be read in. Normally the current chunk will be discarded at the same time, but if &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;LEX_KEEP_PREVIOUS&lt;/code&gt; bit set, then the current chunk will not be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6672795e23362230912b4b8b4e28fb661f0a19" translate="yes" xml:space="preserve">
          <source>If the number consists of digits only, JSON::PP will try to represent it as an integer value. If that fails, it will try to represent it as a numeric (floating point) value if that is possible without loss of precision. Otherwise it will preserve the number as a string value (in which case you lose roundtripping ability, as the JSON number will be re-encoded to a JSON string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7862ebb65f1805f38240d9ec3614885b02e6ad" translate="yes" xml:space="preserve">
          <source>If the number following the backslash is N (in decimal), and Perl already has seen N capture groups, Perl considers this a backreference. Otherwise, it considers it an octal escape. If N has more than three digits, Perl takes only the first three for the octal escape; the rest are matched as is.</source>
          <target state="translated">Si el número que sigue a la barra invertida es N (en decimal),y Perl ya ha visto grupos de captura de N,Perl considera esto como una retro-referencia.De lo contrario,lo considera un escape octal.Si N tiene más de tres dígitos,Perl toma sólo los tres primeros para el escape octal;el resto se empareja tal cual.</target>
        </trans-unit>
        <trans-unit id="fad0df49da49393094ec039045da70fce50b5429" translate="yes" xml:space="preserve">
          <source>If the number of data bytes ($bytes) is given, that many data bytes are included in the ping packet sent to the remote host. The number of data bytes is ignored if the protocol is &quot;tcp&quot;. The minimum (and default) number of data bytes is 1 if the protocol is &quot;udp&quot; and 0 otherwise. The maximum number of data bytes that can be specified is 1024.</source>
          <target state="translated">Si se da el número de bytes de datos ($bytes),esos muchos bytes de datos se incluyen en el paquete ping enviado al host remoto.El número de bytes de datos se ignora si el protocolo es &quot;tcp&quot;.El número mínimo (y predeterminado)de bytes de datos es 1 si el protocolo es &quot;udp&quot; y 0 en caso contrario.El número máximo de bytes de datos que se puede especificar es 1024.</target>
        </trans-unit>
        <trans-unit id="173b84764a7ba838f6e1039dc98cb544515aa621" translate="yes" xml:space="preserve">
          <source>If the number of data bytes (&lt;code&gt;bytes&lt;/code&gt;) is given, that many data bytes are included in the ping packet sent to the remote host. The number of data bytes is ignored if the protocol is &quot;tcp&quot;. The minimum (and default) number of data bytes is 1 if the protocol is &quot;udp&quot; and 0 otherwise. The maximum number of data bytes that can be specified is 65535, but staying below the MTU (1472 bytes for ICMP) is recommended. Many small devices cannot deal with fragmented ICMP packets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea88b95c30f8557b60611e6fa0d52e56ecf8669" translate="yes" xml:space="preserve">
          <source>If the number of partitions on the disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34b4bc1598422e778b8ed9662906c7efb975344" translate="yes" xml:space="preserve">
          <source>If the number of scalars in the left-hand list is greater than that in the left-hand list, the &quot;missing&quot; scalars will become undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c7831330bbfcd31669c32d53f7a76b28d963cd" translate="yes" xml:space="preserve">
          <source>If the number of scalars in the left-hand list is less than that in the right-hand list, the &quot;extra&quot; scalars in the right-hand list will simply not be assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf726231b3d599cdbe46b108046dbf7815381c4c" translate="yes" xml:space="preserve">
          <source>If the object has been passed to a child process during a fork, the file will be deleted when the object goes out of scope in the parent.</source>
          <target state="translated">Si el objeto se ha pasado a un proceso hijo durante una bifurcación,el archivo se eliminará cuando el objeto se salga del ámbito de aplicación en el padre.</target>
        </trans-unit>
        <trans-unit id="39e52d92c6b313ed3349d0401be82f80d273536a" translate="yes" xml:space="preserve">
          <source>If the only casing for a code point is locale-dependent, then the returned hash will not have any of the base keys, like &lt;code&gt;code&lt;/code&gt; , &lt;code&gt;upper&lt;/code&gt; , etc., but will contain only locale keys.</source>
          <target state="translated">Si la &amp;uacute;nica may&amp;uacute;scula para un punto de c&amp;oacute;digo depende de la configuraci&amp;oacute;n regional, entonces el hash devuelto no tendr&amp;aacute; ninguna de las claves base, como &lt;code&gt;code&lt;/code&gt; , &lt;code&gt;upper&lt;/code&gt; , etc., sino que solo contendr&amp;aacute; claves de configuraci&amp;oacute;n regional.</target>
        </trans-unit>
        <trans-unit id="4285420e25852376bd4b42fe10dbce58fa32d6ad" translate="yes" xml:space="preserve">
          <source>If the only casing for a code point is locale-dependent, then the returned hash will not have any of the base keys, like &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;upper&lt;/code&gt;, etc., but will contain only locale keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fa159e601e547a6489ad99ba45fba36084dad4" translate="yes" xml:space="preserve">
          <source>If the only comparison needed is whether an installed module is of a sufficiently high version, a direct test may be done using the string form of &lt;code&gt;eval&lt;/code&gt; and the &lt;code&gt;use&lt;/code&gt; function. For example, for module &lt;code&gt;$mod&lt;/code&gt; and version prerequisite &lt;code&gt;$prereq&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51d5a9ae61f6c29388fc414c6297a691764547b" translate="yes" xml:space="preserve">
          <source>If the operand is a reference to a blessed object, then the name of the class into which the referent is blessed will be returned. &lt;code&gt;ref&lt;/code&gt; doesn't care what the physical type of the referent is; blessing takes precedence over such concerns. Beware that exact comparison of &lt;code&gt;ref&lt;/code&gt; results against a class name doesn't perform a class membership test: a class's members also include objects blessed into subclasses, for which &lt;code&gt;ref&lt;/code&gt; will return the name of the subclass. Also beware that class names can clash with the built-in type names (described below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7623f1bb883be3a3b5a21de5d5644725c26daefe" translate="yes" xml:space="preserve">
          <source>If the operand is a reference to an unblessed object, then the return value indicates the type of object. If the unblessed referent is not a scalar, then the return value will be one of the strings &lt;code&gt;ARRAY&lt;/code&gt;, &lt;code&gt;HASH&lt;/code&gt;, &lt;code&gt;CODE&lt;/code&gt;, &lt;code&gt;FORMAT&lt;/code&gt;, or &lt;code&gt;IO&lt;/code&gt;, indicating only which kind of object it is. If the unblessed referent is a scalar, then the return value will be one of the strings &lt;code&gt;SCALAR&lt;/code&gt;, &lt;code&gt;VSTRING&lt;/code&gt;, &lt;code&gt;REF&lt;/code&gt;, &lt;code&gt;GLOB&lt;/code&gt;, &lt;code&gt;LVALUE&lt;/code&gt;, or &lt;code&gt;REGEXP&lt;/code&gt;, depending on the kind of value the scalar currently has. But note that &lt;code&gt;qr//&lt;/code&gt; scalars are created already blessed, so &lt;code&gt;ref qr/.../&lt;/code&gt; will likely return &lt;code&gt;Regexp&lt;/code&gt;. Beware that these built-in type names can also be used as class names, so &lt;code&gt;ref&lt;/code&gt; returning one of these names doesn't unambiguously indicate that the referent is of the kind to which the name refers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa1ec170d0d4fcfcfbbdd9dd518a1d70b552ce0" translate="yes" xml:space="preserve">
          <source>If the operand is not a reference, then the empty string will be returned. An empty string will only be returned in this situation. &lt;code&gt;ref&lt;/code&gt; is often useful to just test whether a value is a reference, which can be done by comparing the result to the empty string. It is a common mistake to use the result of &lt;code&gt;ref&lt;/code&gt; directly as a truth value: this goes wrong because &lt;code&gt;0&lt;/code&gt; (which is false) can be returned for a reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addcad10a864d1cffc4846608d394fea1feac09a" translate="yes" xml:space="preserve">
          <source>If the operands to a binary bitwise op are strings of different sizes, &lt;b&gt;|&lt;/b&gt; and &lt;b&gt;^&lt;/b&gt; ops act as though the shorter operand had additional zero bits on the right, while the &lt;b&gt;&amp;amp;&lt;/b&gt; op acts as though the longer operand were truncated to the length of the shorter. The granularity for such extension or truncation is one or more bytes.</source>
          <target state="translated">Si los operandos de una operaci&amp;oacute;n binaria bit a bit son cadenas de diferentes tama&amp;ntilde;os, &lt;b&gt;| &lt;/b&gt;y &lt;b&gt;^&lt;/b&gt; ops act&amp;uacute;an como si el operando m&amp;aacute;s corto tuviera cero bits adicionales a la derecha, mientras que &lt;b&gt;&amp;amp;&lt;/b&gt; op act&amp;uacute;a como si el operando m&amp;aacute;s largo estuviera truncado a la longitud del m&amp;aacute;s corto. La granularidad de dicha extensi&amp;oacute;n o truncamiento es de uno o m&amp;aacute;s bytes.</target>
        </trans-unit>
        <trans-unit id="c7870bd3c024159f240305b7047279e21ad1fe56" translate="yes" xml:space="preserve">
          <source>If the operating system supports it (for example BSD derived systems), the filehandle will be opened with O_EXLOCK (open with exclusive file lock). This can sometimes cause problems if the intention is to pass the filename to another system that expects to take an exclusive lock itself (such as DBD::SQLite) whilst ensuring that the tempfile is not reused. In this situation the &quot;EXLOCK&quot; option can be passed to tempfile. By default EXLOCK will be true (this retains compatibility with earlier releases).</source>
          <target state="translated">Si el sistema operativo lo soporta (por ejemplo,los sistemas derivados de BSD),el filehandle se abrirá con O_EXLOCK (abrir con bloqueo exclusivo de archivos).Esto a veces puede causar problemas si la intención es pasar el nombre del archivo a otro sistema que espera tomar un bloqueo exclusivo por sí mismo (como DBD::SQLite)mientras se asegura de que el archivo temporal no se reutiliza.En esta situación,la opción &quot;EXLOCK&quot; puede pasarse a tempfile.Por defecto EXLOCK será true (esto mantiene la compatibilidad con versiones anteriores).</target>
        </trans-unit>
        <trans-unit id="e19b7bb4d69a3c985ce8931960025916d3561c3a" translate="yes" xml:space="preserve">
          <source>If the operation being timed out is system() or qx(), this technique is liable to generate zombies. If this matters to you, you'll need to do your own fork() and exec(), and kill the errant child process.</source>
          <target state="translated">Si la operación que se está cronometrando es system()o qx(),esta técnica es susceptible de generar zombis.Si esto te importa,tendrás que hacer tu propio fork()y exec(),y matar el proceso del niño errante.</target>
        </trans-unit>
        <trans-unit id="05f4a71ea34fe9d7ddbd210db5290a2dfa223838" translate="yes" xml:space="preserve">
          <source>If the operation shown is &quot;ToFold&quot;, it means that case-insensitive matching in a regular expression was done on the code point.</source>
          <target state="translated">Si la operación mostrada es &quot;ToFold&quot;,significa que la correspondencia sin mayúsculas y minúsculas en una expresión regular se hizo en el punto de código.</target>
        </trans-unit>
        <trans-unit id="3ba42937f598291497eafce66d29e91aabe688c5" translate="yes" xml:space="preserve">
          <source>If the optimization can not be applied, this returns undef. If it can be applied, this method returns a hash reference containing the following information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a982ec5add551174c87d54c0c75cad924249147a" translate="yes" xml:space="preserve">
          <source>If the option destination is a reference to a hash, the option will take, as value, strings of the form</source>
          <target state="translated">Si el destino de la opción es una referencia a un hash,la opción tomará,como valor,cadenas de la forma</target>
        </trans-unit>
        <trans-unit id="ab8a370e734c2b7f25ad3475fabaef52fd095ddb" translate="yes" xml:space="preserve">
          <source>If the option is provided, and &lt;code&gt;PERL_PERTURB_KEYS&lt;/code&gt; is NOT set, then a value of '0' implies &lt;code&gt;PERL_PERTURB_KEYS=0&lt;/code&gt; and any other value implies &lt;code&gt;PERL_PERTURB_KEYS=2&lt;/code&gt; .</source>
          <target state="translated">Si se proporciona la opci&amp;oacute;n y NO se establece &lt;code&gt;PERL_PERTURB_KEYS&lt;/code&gt; , entonces un valor de '0' implica &lt;code&gt;PERL_PERTURB_KEYS=0&lt;/code&gt; y cualquier otro valor implica &lt;code&gt;PERL_PERTURB_KEYS=2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d707532b21b034988218d78dc5dd2089b91f3ef" translate="yes" xml:space="preserve">
          <source>If the option is provided, and &lt;code&gt;PERL_PERTURB_KEYS&lt;/code&gt; is NOT set, then a value of '0' implies &lt;code&gt;PERL_PERTURB_KEYS=0&lt;/code&gt; and any other value implies &lt;code&gt;PERL_PERTURB_KEYS=2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb774833de734f7b65efa56e3c7c5f53234542f8" translate="yes" xml:space="preserve">
          <source>If the option is set to false, the output buffer in the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method will be truncated before uncompressed data is written to it.</source>
          <target state="translated">Si la opci&amp;oacute;n se establece en false, el b&amp;uacute;fer de salida en el m&amp;eacute;todo &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; se truncar&amp;aacute; antes de que se escriban datos sin comprimir.</target>
        </trans-unit>
        <trans-unit id="a7e5a140437039036cbeabf084c8f96c887a93f7" translate="yes" xml:space="preserve">
          <source>If the option is set to true, uncompressed data will be appended to the output buffer by the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method.</source>
          <target state="translated">Si la opci&amp;oacute;n se establece en verdadera, los datos sin comprimir se agregar&amp;aacute;n al b&amp;uacute;fer de salida mediante el m&amp;eacute;todo &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c22c2720bbc793b56d2bdb2031cd852762e79aba" translate="yes" xml:space="preserve">
          <source>If the option is set to true, uncompressed data will be appended to the output buffer in the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods.</source>
          <target state="translated">Si la opci&amp;oacute;n se establece en verdadera, los datos sin comprimir se agregar&amp;aacute;n al b&amp;uacute;fer de salida en los m&amp;eacute;todos &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; y &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="943c28148863687139f9e45e03407da89d7e13fa" translate="yes" xml:space="preserve">
          <source>If the option value is required, Getopt::Long will take the command line argument that follows the option and assign this to the option variable. If, however, the option value is specified as optional, this will only be done if that value does not look like a valid command line option itself.</source>
          <target state="translated">Si se requiere el valor de la opción,Getopt::Long tomará el argumento de la línea de comandos que sigue a la opción y lo asignará a la variable de la opción.Sin embargo,si se especifica el valor de la opción como opcional,esto sólo se hará si ese valor no parece una opción de línea de comandos válida en sí misma.</target>
        </trans-unit>
        <trans-unit id="8b25fc0c82dd37f9c4b9d7996e6e001cd8c1c22e" translate="yes" xml:space="preserve">
          <source>If the order of &lt;code&gt;sv_setiv&lt;/code&gt; and &lt;code&gt;sv_setpv&lt;/code&gt; had been reversed, then the macro &lt;code&gt;SvPOK_on&lt;/code&gt; would need to be called instead of &lt;code&gt;SvIOK_on&lt;/code&gt; .</source>
          <target state="translated">Si el orden de &lt;code&gt;sv_setiv&lt;/code&gt; y &lt;code&gt;sv_setpv&lt;/code&gt; se hubiera invertido, entonces la macro &lt;code&gt;SvPOK_on&lt;/code&gt; deber&amp;iacute;a ser llamada en lugar de &lt;code&gt;SvIOK_on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2507fa462b26287b008669ac5e4307de24ce4d06" translate="yes" xml:space="preserve">
          <source>If the order of &lt;code&gt;sv_setiv&lt;/code&gt; and &lt;code&gt;sv_setpv&lt;/code&gt; had been reversed, then the macro &lt;code&gt;SvPOK_on&lt;/code&gt; would need to be called instead of &lt;code&gt;SvIOK_on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0f391156a0e1896106ec41b93d3c42cc8fd48b" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; already contains a value (typically from a previous eval) that value is reused after appending &lt;code&gt;&quot;\t...propagated&quot;&lt;/code&gt; . This is useful for propagating exceptions:</source>
          <target state="translated">Si la salida est&amp;aacute; vac&amp;iacute;a y &lt;code&gt;$@&lt;/code&gt; ya contiene un valor (normalmente de una evaluaci&amp;oacute;n anterior), ese valor se reutiliza despu&amp;eacute;s de agregar &lt;code&gt;&quot;\t...propagated&quot;&lt;/code&gt; . Esto es &amp;uacute;til para propagar excepciones:</target>
        </trans-unit>
        <trans-unit id="25d81dad12165191ac2a4d2f3e667fda9ababd8e" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; already contains a value (typically from a previous eval) that value is used after appending &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; to &lt;code&gt;$@&lt;/code&gt; . This is useful for staying almost, but not entirely similar to &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si la salida est&amp;aacute; vac&amp;iacute;a y &lt;code&gt;$@&lt;/code&gt; ya contiene un valor (generalmente de una evaluaci&amp;oacute;n anterior), ese valor se usa despu&amp;eacute;s de agregar &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; a &lt;code&gt;$@&lt;/code&gt; . Esto es &amp;uacute;til para quedarse casi, pero no del todo similar a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65e420bc5858eb45a1dddd4a10cb455bd1ce4cc1" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; already contains a value (typically from a previous eval) that value is used after appending &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; to &lt;code&gt;$@&lt;/code&gt; . This is useful for staying almost, but not entirely similar to &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si la salida est&amp;aacute; vac&amp;iacute;a y &lt;code&gt;$@&lt;/code&gt; ya contiene un valor (generalmente de una evaluaci&amp;oacute;n anterior), ese valor se usa despu&amp;eacute;s de agregar &lt;code&gt;&quot;\t...caught&quot;&lt;/code&gt; a &lt;code&gt;$@&lt;/code&gt; . Esto es &amp;uacute;til para quedarse casi, pero no del todo similar a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cfa46357b1516decacabae244126181d8b80b21" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; contains an object reference that has a &lt;code&gt;PROPAGATE&lt;/code&gt; method, that method will be called with additional file and line number parameters. The return value replaces the value in &lt;code&gt;$@&lt;/code&gt; ; i.e., as if &lt;code&gt;$@ = &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; were called.</source>
          <target state="translated">Si la salida est&amp;aacute; vac&amp;iacute;a y &lt;code&gt;$@&lt;/code&gt; contiene una referencia de objeto que tiene un m&amp;eacute;todo &lt;code&gt;PROPAGATE&lt;/code&gt; , ese m&amp;eacute;todo se llamar&amp;aacute; con par&amp;aacute;metros adicionales de n&amp;uacute;mero de l&amp;iacute;nea y archivo. El valor de retorno reemplaza el valor en &lt;code&gt;$@&lt;/code&gt; ; es decir, como si &lt;code&gt;$@ = &lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; fueron llamados.</target>
        </trans-unit>
        <trans-unit id="a97492155e7589378bb301645dfa7c34b680ef04" translate="yes" xml:space="preserve">
          <source>If the output is empty and &lt;code&gt;$@&lt;/code&gt; contains an object reference that has a &lt;code&gt;PROPAGATE&lt;/code&gt; method, that method will be called with additional file and line number parameters. The return value replaces the value in &lt;code&gt;$@&lt;/code&gt; ; i.e., as if &lt;code&gt;$@ = &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; were called.</source>
          <target state="translated">Si la salida est&amp;aacute; vac&amp;iacute;a y &lt;code&gt;$@&lt;/code&gt; contiene una referencia de objeto que tiene un m&amp;eacute;todo &lt;code&gt;PROPAGATE&lt;/code&gt; , ese m&amp;eacute;todo se llamar&amp;aacute; con par&amp;aacute;metros adicionales de n&amp;uacute;mero de l&amp;iacute;nea y archivo. El valor de retorno reemplaza el valor en &lt;code&gt;$@&lt;/code&gt; ; es decir, como si &lt;code&gt;$@ = &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; { $@-&amp;gt;PROPAGATE(__FILE__, __LINE__) };&lt;/code&gt; fueron llamados.</target>
        </trans-unit>
        <trans-unit id="4e71a254b15b38644afabad82376b2bb1e4f7fab" translate="yes" xml:space="preserve">
          <source>If the output of the &lt;code&gt;h h&lt;/code&gt; command (or any command, for that matter) scrolls past your screen, precede the command with a leading pipe symbol so that it's run through your pager, as in</source>
          <target state="translated">Si la salida del comando &lt;code&gt;h h&lt;/code&gt; (o cualquier comando, para el caso) se desplaza m&amp;aacute;s all&amp;aacute; de su pantalla, preceda el comando con un s&amp;iacute;mbolo de tuber&amp;iacute;a inicial para que se ejecute a trav&amp;eacute;s de su buscapersonas, como en</target>
        </trans-unit>
        <trans-unit id="f7911c6fed712fb085afb893540153d04c3ba2b2" translate="yes" xml:space="preserve">
          <source>If the package has a mailing list, include a URL or subscription instructions here.</source>
          <target state="translated">Si el paquete tiene una lista de correo,incluye una URL o instrucciones de suscripción aquí.</target>
        </trans-unit>
        <trans-unit id="2bd5efd382acc87571dd747451ad45f157dd85d7" translate="yes" xml:space="preserve">
          <source>If the package has a web site, include a URL here.</source>
          <target state="translated">Si el paquete tiene un sitio web,incluye un URL aquí.</target>
        </trans-unit>
        <trans-unit id="128d72462f8fdf7586cd07b73dc9169d6e753911" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, &lt;code&gt;U+FFFE&lt;/code&gt; has a minimal primary weight. The comparison between &lt;code&gt;&quot;$a1\x{FFFE}$a2&quot;&lt;/code&gt; and &lt;code&gt;&quot;$b1\x{FFFE}$b2&quot;&lt;/code&gt; first compares &lt;code&gt;$a1&lt;/code&gt; and &lt;code&gt;$b1&lt;/code&gt; at level 1, and then &lt;code&gt;$a2&lt;/code&gt; and &lt;code&gt;$b2&lt;/code&gt; at level 1, as followed.</source>
          <target state="translated">Si el par&amp;aacute;metro se hace verdadero, &lt;code&gt;U+FFFE&lt;/code&gt; tiene un peso primario m&amp;iacute;nimo. La comparaci&amp;oacute;n entre &lt;code&gt;&quot;$a1\x{FFFE}$a2&quot;&lt;/code&gt; y &lt;code&gt;&quot;$b1\x{FFFE}$b2&quot;&lt;/code&gt; primero compara &lt;code&gt;$a1&lt;/code&gt; y &lt;code&gt;$b1&lt;/code&gt; en el nivel 1, y luego &lt;code&gt;$a2&lt;/code&gt; y &lt;code&gt;$b2&lt;/code&gt; en el nivel 1, como sigue .</target>
        </trans-unit>
        <trans-unit id="c1bc1d540aa212d81d3c27835031fe5adbb0eee1" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, &lt;code&gt;U+FFFF&lt;/code&gt; has a highest primary weight. When a boolean of &lt;code&gt;$coll-&amp;gt;ge($str, &quot;abc&quot;)&lt;/code&gt; and &lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; is true, it is expected that &lt;code&gt;$str&lt;/code&gt; begins with &lt;code&gt;&quot;abc&quot;&lt;/code&gt; , or another primary equivalent. &lt;code&gt;$str&lt;/code&gt; may be &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; , &lt;code&gt;&quot;abc012&quot;&lt;/code&gt; , but should not include &lt;code&gt;U+FFFF&lt;/code&gt; such as &lt;code&gt;&quot;abc\x{FFFF}xyz&quot;&lt;/code&gt; .</source>
          <target state="translated">Si el par&amp;aacute;metro se hace verdadero, &lt;code&gt;U+FFFF&lt;/code&gt; tiene un peso primario m&amp;aacute;s alto. Cuando un valor booleano de &lt;code&gt;$coll-&amp;gt;ge($str, &quot;abc&quot;)&lt;/code&gt; y &lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; es verdadero, se espera que &lt;code&gt;$str&lt;/code&gt; comience con &lt;code&gt;&quot;abc&quot;&lt;/code&gt; , u otro equivalente primario. &lt;code&gt;$str&lt;/code&gt; puede ser &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; , &lt;code&gt;&quot;abc012&quot;&lt;/code&gt; , pero no debe incluir &lt;code&gt;U+FFFF&lt;/code&gt; como &lt;code&gt;&quot;abc\x{FFFF}xyz&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd592631134dd93dfb6509b2405e1e6bdddd05d2" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, &lt;code&gt;U+FFFF&lt;/code&gt; has a highest primary weight. When a boolean of &lt;code&gt;$coll-&amp;gt;ge($str, &quot;abc&quot;)&lt;/code&gt; and &lt;code&gt;$coll-&amp;gt;le($str, &quot;abc\x{FFFF}&quot;)&lt;/code&gt; is true, it is expected that &lt;code&gt;$str&lt;/code&gt; begins with &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, or another primary equivalent. &lt;code&gt;$str&lt;/code&gt; may be &lt;code&gt;&quot;abcd&quot;&lt;/code&gt;, &lt;code&gt;&quot;abc012&quot;&lt;/code&gt;, but should not include &lt;code&gt;U+FFFF&lt;/code&gt; such as &lt;code&gt;&quot;abc\x{FFFF}xyz&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2379a678967ce11b206cce9256eec402c626744e" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, a final, tie-breaking level is used. If no difference of weights is found after the comparison through all the level specified by &lt;code&gt;level&lt;/code&gt; , the comparison with code points will be performed. For the tie-breaking comparison, the sort key has code points of the original string appended. Completely ignorable characters are not ignored.</source>
          <target state="translated">Si el par&amp;aacute;metro se hace verdadero, se utiliza un nivel final de desempate. Si no se encuentra diferencia de pesos despu&amp;eacute;s de la comparaci&amp;oacute;n a trav&amp;eacute;s de todo el nivel especificado por &lt;code&gt;level&lt;/code&gt; , se realizar&amp;aacute; la comparaci&amp;oacute;n con puntos de c&amp;oacute;digo. Para la comparaci&amp;oacute;n de desempate, la clave de clasificaci&amp;oacute;n tiene puntos de c&amp;oacute;digo de la cadena original adjunta. Los caracteres completamente ignorables no se ignoran.</target>
        </trans-unit>
        <trans-unit id="cf3801fdcc987b0c168aed25eff11116ed2d9d13" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, a final, tie-breaking level is used. If no difference of weights is found after the comparison through all the level specified by &lt;code&gt;level&lt;/code&gt;, the comparison with code points will be performed. For the tie-breaking comparison, the sort key has code points of the original string appended. Completely ignorable characters are not ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d70ed0cf4279c5cf91d7d6890341737c51d4df" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, accents (and other primary ignorable characters) are ignored, even though cases are taken into account.</source>
          <target state="translated">Si el parámetro se hace verdadero,se ignoran los acentos (y otros caracteres primarios ignorables),aunque se tienen en cuenta los casos.</target>
        </trans-unit>
        <trans-unit id="3ffce08d047eaee75c853cd8ab3be63e13efe5a7" translate="yes" xml:space="preserve">
          <source>If the parameter is made true, for a contraction with three or more characters (here nicknamed &quot;long contraction&quot;), initial substrings will be handled. For example, a contraction ABC, where A is a starter, and B and C are non-starters (character with non-zero combining character class), will be detected even if there is not AB as a contraction.</source>
          <target state="translated">Si el parámetro se hace verdadero,para una contracción de tres o más caracteres (aquí denominada &quot;contracción larga&quot;),se manejarán las subcadenas iniciales.Por ejemplo,una contracción ABC,en la que A es un iniciador,y B y C son no-iniciadores (carácter con clase de carácter de combinación no cero),se detectará incluso si no hay AB como contracción.</target>
        </trans-unit>
        <trans-unit id="6196ed90d85a5642d1f2bff307d9850731d3ee76" translate="yes" xml:space="preserve">
          <source>If the parameters to the INCLUDE: keyword are followed by a pipe (&lt;code&gt;|&lt;/code&gt;) then the compiler will interpret the parameters as a command. This feature is mildly deprecated in favour of the &lt;code&gt;INCLUDE_COMMAND:&lt;/code&gt; directive, as documented below.</source>
          <target state="translated">Si los par&amp;aacute;metros de la palabra clave INCLUDE: van seguidos de una barra vertical ( &lt;code&gt;|&lt;/code&gt; ), el compilador interpretar&amp;aacute; los par&amp;aacute;metros como un comando. Esta caracter&amp;iacute;stica est&amp;aacute; ligeramente en desuso a favor de la directiva &lt;code&gt;INCLUDE_COMMAND:&lt;/code&gt; , como se documenta a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="60984150a4a273c37051fdd1024089806a686df1" translate="yes" xml:space="preserve">
          <source>If the parent process is killed (either using Perl's kill() builtin, or using some external means) all the pseudo-processes are killed as well, and the whole process exits.</source>
          <target state="translated">Si se mata el proceso padre (ya sea usando el buildtin de Perl kill(),o usando algún medio externo)todos los pseudo-procesos son matados también,y el proceso entero sale.</target>
        </trans-unit>
        <trans-unit id="aa64f5b5dc3063c1ec88bf3714d6a78f8885563e" translate="yes" xml:space="preserve">
          <source>If the pattern contains embedded code, such as</source>
          <target state="translated">Si el patrón contiene código incrustado,como</target>
        </trans-unit>
        <trans-unit id="c8e637c05d0476b3ff64dcc72c39f7a79e3a588a" translate="yes" xml:space="preserve">
          <source>If the pattern contains its delimiter within it, that delimiter must be escaped. Prefixing it with a backslash (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400ab285c2500104132be9cd3fcc1a752df8a4f5" translate="yes" xml:space="preserve">
          <source>If the pattern does not match any pathname, then bsd_glob() returns a list consisting of only the pattern. If &lt;code&gt;GLOB_QUOTE&lt;/code&gt; is set, its effect is present in the pattern returned.</source>
          <target state="translated">Si el patr&amp;oacute;n no coincide con ning&amp;uacute;n nombre de ruta, bsd_glob () devuelve una lista que consta solo del patr&amp;oacute;n. Si se establece &lt;code&gt;GLOB_QUOTE&lt;/code&gt; , su efecto est&amp;aacute; presente en el patr&amp;oacute;n devuelto.</target>
        </trans-unit>
        <trans-unit id="6adde583f90fd2399e3928b4e6217841c09c97fb" translate="yes" xml:space="preserve">
          <source>If the pattern may match only at a handful of places, with &lt;code&gt;TYPE&lt;/code&gt; being &lt;code&gt;SBOL&lt;/code&gt; , &lt;code&gt;MBOL&lt;/code&gt; , or &lt;code&gt;GPOS&lt;/code&gt; . See the table below.</source>
          <target state="translated">Si el patr&amp;oacute;n puede coincidir s&amp;oacute;lo en un pu&amp;ntilde;ado de lugares, con &lt;code&gt;TYPE&lt;/code&gt; ser &lt;code&gt;SBOL&lt;/code&gt; , &lt;code&gt;MBOL&lt;/code&gt; o &lt;code&gt;GPOS&lt;/code&gt; . Consulte la tabla siguiente.</target>
        </trans-unit>
        <trans-unit id="40469f0b5b6e999f3b3f0091f7983d3535304a67" translate="yes" xml:space="preserve">
          <source>If the pattern may match only at a handful of places, with &lt;code&gt;TYPE&lt;/code&gt; being &lt;code&gt;SBOL&lt;/code&gt;, &lt;code&gt;MBOL&lt;/code&gt;, or &lt;code&gt;GPOS&lt;/code&gt;. See the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ce5cbb841f39a51912df72d9768f6a6a5fae33" translate="yes" xml:space="preserve">
          <source>If the pattern was used as follows</source>
          <target state="translated">Si el patrón se utilizó de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="2dd05fadef47c4bd45462fdfaa94e04afc77ad22" translate="yes" xml:space="preserve">
          <source>If the performance in such cases is unacceptable, you may defer the actual writing, and then have it done all at once. The following loop will perform much better for large files:</source>
          <target state="translated">Si la actuación en tales casos es inaceptable,puede aplazar la escritura real,y luego hacerla de una sola vez.El siguiente bucle funcionará mucho mejor para los archivos grandes:</target>
        </trans-unit>
        <trans-unit id="956656b1b2d0c77e2fbe4d0d92677dc48070a8ed" translate="yes" xml:space="preserve">
          <source>If the platform is MS-DOS like and normally does CRLF to &quot;\n&quot; translation for text files then the default layers are :</source>
          <target state="translated">Si la plataforma es como el MS-DOS y normalmente hace CRLF para &quot;\n&quot; la traducción de los archivos de texto,entonces las capas por defecto son :</target>
        </trans-unit>
        <trans-unit id="5f1c5a6b0ba8f7ba98047b8fb60cfdcca7e45034" translate="yes" xml:space="preserve">
          <source>If the platform is MS-DOS like and normally does CRLF to &quot;\n&quot; translation for text files then the default layers are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee788dad0c5b1cd15e2fa5ddb122d4f9bd910af" translate="yes" xml:space="preserve">
          <source>If the platform supports the &lt;code&gt;langinfo(CODESET)&lt;/code&gt; interface, the codeset returned is used as the default encoding for the open pragma.</source>
          <target state="translated">Si la plataforma admite la &lt;code&gt;langinfo(CODESET)&lt;/code&gt; , el conjunto de c&amp;oacute;digos devuelto se utiliza como codificaci&amp;oacute;n predeterminada para el pragma abierto.</target>
        </trans-unit>
        <trans-unit id="e029b7bfe44b40ce79cdafd38dd9f57646af8f39" translate="yes" xml:space="preserve">
          <source>If the program exits without all threads having either been joined or detached, then a warning will be issued.</source>
          <target state="translated">Si el programa sale sin que todos los hilos se hayan unido o separado,entonces se emitirá una advertencia.</target>
        </trans-unit>
        <trans-unit id="68122aab68b9511758161a833aab14bd7cf8f3f4" translate="yes" xml:space="preserve">
          <source>If the program exits without all threads having either been joined or detached, then this warning will be issued.</source>
          <target state="translated">Si el programa sale sin que todos los hilos se hayan unido o separado,entonces se emitirá esta advertencia.</target>
        </trans-unit>
        <trans-unit id="3f05e0c9adcc7343a41a8d24201ee4c19ce64a54" translate="yes" xml:space="preserve">
          <source>If the program has been given to perl via the switches &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;-E&lt;/code&gt; , &lt;code&gt;$0&lt;/code&gt; will contain the string &lt;code&gt;&quot;-e&quot;&lt;/code&gt; .</source>
          <target state="translated">Si el programa ha sido entregado a perl mediante los conmutadores &lt;code&gt;-e&lt;/code&gt; o &lt;code&gt;-E&lt;/code&gt; , &lt;code&gt;$0&lt;/code&gt; contendr&amp;aacute; la cadena &lt;code&gt;&quot;-e&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b296afa5e8ade3ba3ac78a9d465e171ac5067f8" translate="yes" xml:space="preserve">
          <source>If the program has been given to perl via the switches &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;-E&lt;/code&gt;, &lt;code&gt;$0&lt;/code&gt; will contain the string &lt;code&gt;&quot;-e&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187d3c3b9917db708f6b4997f1f577493d56ad38" translate="yes" xml:space="preserve">
          <source>If the program is syntactically correct, it is executed. If the program runs off the end without hitting an exit() or die() operator, an implicit &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit(0)&lt;/a&gt;&lt;/code&gt; is provided to indicate successful completion.</source>
          <target state="translated">Si el programa es sint&amp;aacute;cticamente correcto, se ejecuta. Si el programa se ejecuta al final sin presionar un operador exit () o die (), se proporciona una &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit(0)&lt;/a&gt;&lt;/code&gt; impl&amp;iacute;cita (0) para indicar una finalizaci&amp;oacute;n exitosa.</target>
        </trans-unit>
        <trans-unit id="c7da837d3689d8811d08d5a2ade1a1a152e04568" translate="yes" xml:space="preserve">
          <source>If the program is syntactically correct, it is executed. If the program runs off the end without hitting an exit() or die() operator, an implicit &lt;code&gt;exit(0)&lt;/code&gt; is provided to indicate successful completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf82d5604429bbfe1cb41298b645fa1f014e9ae" translate="yes" xml:space="preserve">
          <source>If the property doesn't have such a restricted set, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Si la propiedad no tiene un conjunto tan restringido, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f561839327dfb379f3ced83b14775ceeeefed09a" translate="yes" xml:space="preserve">
          <source>If the property doesn't have such a restricted set, &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f736ee647a4d5e1589838b72f5b05af7545714ad" translate="yes" xml:space="preserve">
          <source>If the property name is unknown, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. Note that Perl typically recognizes property names in regular expressions with an optional &lt;code&gt;&quot;Is_&lt;/code&gt; &quot; (with or without the underscore) prefixed to them, such as &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . This function does not recognize those in the property parameter, returning &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si se desconoce el nombre de la propiedad, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Tenga en cuenta que Perl normalmente reconoce nombres de propiedades en expresiones regulares con un &lt;code&gt;&quot;Is_&lt;/code&gt; &quot; opcional (con o sin el subrayado) como prefijo, como &lt;code&gt;\p{isgc=punct}&lt;/code&gt; . Esta funci&amp;oacute;n no reconoce los del par&amp;aacute;metro de propiedad, devolviendo &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8e6c1687e04cb1c576cc3de9ba670b370bee76a" translate="yes" xml:space="preserve">
          <source>If the property name is unknown, &lt;code&gt;undef&lt;/code&gt; is returned. Note that Perl typically recognizes property names in regular expressions with an optional &lt;code&gt;&quot;Is_&lt;/code&gt;&quot; (with or without the underscore) prefixed to them, such as &lt;code&gt;\p{isgc=punct}&lt;/code&gt;. This function does not recognize those in the property parameter, returning &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaf0816b79f3c9b4d1b468e6b1d9a01691cd781" translate="yes" xml:space="preserve">
          <source>If the protocol is set to &quot;tcp&quot;, this method may be called any number of times, and each call to the ping() method (below) will use the most recent $local_addr. If the protocol is &quot;icmp&quot; or &quot;udp&quot;, then bind() must be called at most once per object, and (if it is called at all) must be called before the first call to ping() for that object.</source>
          <target state="translated">Si el protocolo está configurado como &quot;tcp&quot;,este método puede ser llamado cualquier número de veces,y cada llamada al método ping()(abajo)utilizará el más reciente $local_addr.Si el protocolo es &quot;icmp&quot; o &quot;udp&quot;,entonces bind()debe ser llamado como máximo una vez por objeto,y (si es llamado en absoluto)debe ser llamado antes de la primera llamada a ping()para ese objeto.</target>
        </trans-unit>
        <trans-unit id="bd278d79ed04376a1ab23bc38f3813d0d8a95858" translate="yes" xml:space="preserve">
          <source>If the prototypes are enabled, you can disable it locally for a given XSUB as in the following example:</source>
          <target state="translated">Si los prototipos están habilitados,puedes deshabilitarlo localmente para un determinado XSUB como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="22222d2992db775cc93f4e6df7a745c81e01a6be" translate="yes" xml:space="preserve">
          <source>If the referenced object has been blessed into a package, then that package name is returned instead. But don't use that, as it's now considered &quot;bad practice&quot;. For one reason, an object could be using a class called &lt;code&gt;Regexp&lt;/code&gt; or &lt;code&gt;IO&lt;/code&gt; , or even &lt;code&gt;HASH&lt;/code&gt; . Also, &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; doesn't take into account subclasses, like &lt;code&gt;isa&lt;/code&gt; does.</source>
          <target state="translated">Si el objeto al que se hace referencia se ha convertido en un paquete, entonces se devuelve ese nombre de paquete. Pero no use eso, ya que ahora se considera una &quot;mala pr&amp;aacute;ctica&quot;. Por una raz&amp;oacute;n, un objeto podr&amp;iacute;a estar usando una clase llamada &lt;code&gt;Regexp&lt;/code&gt; o &lt;code&gt;IO&lt;/code&gt; , o incluso &lt;code&gt;HASH&lt;/code&gt; . Adem&amp;aacute;s, &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; no tiene en cuenta las subclases, como hace &lt;code&gt;isa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf268542a8929b7e398cc1536659093d140d5216" translate="yes" xml:space="preserve">
          <source>If the referenced object has been blessed into a package, then that package name is returned instead. But don't use that, as it's now considered &quot;bad practice&quot;. For one reason, an object could be using a class called &lt;code&gt;Regexp&lt;/code&gt; or &lt;code&gt;IO&lt;/code&gt; , or even &lt;code&gt;HASH&lt;/code&gt; . Also, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; doesn't take into account subclasses, like &lt;code&gt;isa&lt;/code&gt; does.</source>
          <target state="translated">Si el objeto al que se hace referencia se ha convertido en un paquete, entonces se devuelve ese nombre de paquete. Pero no use eso, ya que ahora se considera una &quot;mala pr&amp;aacute;ctica&quot;. Por una raz&amp;oacute;n, un objeto podr&amp;iacute;a estar usando una clase llamada &lt;code&gt;Regexp&lt;/code&gt; o &lt;code&gt;IO&lt;/code&gt; , o incluso &lt;code&gt;HASH&lt;/code&gt; . Adem&amp;aacute;s, &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; no tiene en cuenta las subclases, como hace &lt;code&gt;isa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09e68bc71ae659a158de263698e821903752a759" translate="yes" xml:space="preserve">
          <source>If the referred library is an archive library, then it is treated as a simple collection of .o modules (all of which must contain PIC). These modules are then linked into the shared library.</source>
          <target state="translated">Si la biblioteca referida es una biblioteca de archivo,entonces se trata como una simple colección de módulos .o (todos los cuales deben contener PIC).Estos módulos son entonces enlazados a la biblioteca compartida.</target>
        </trans-unit>
        <trans-unit id="487c69f3c32cf6208263be856047bd1120b5cb11" translate="yes" xml:space="preserve">
          <source>If the regex engine was entered, the output may look like this:</source>
          <target state="translated">Si se introdujo el motor regex,la salida puede verse así:</target>
        </trans-unit>
        <trans-unit id="4071da6362bfae97335d6ccd04527e0675ca1ecf" translate="yes" xml:space="preserve">
          <source>If the remote server sends data a byte at time, and you need that data immediately without waiting for a newline (which might not happen), you may wish to replace the &lt;code&gt;while&lt;/code&gt; loop in the parent with the following:</source>
          <target state="translated">Si el servidor remoto env&amp;iacute;a un byte de datos en el tiempo, y es necesario que los datos inmediatamente sin esperar a una nueva l&amp;iacute;nea (que podr&amp;iacute;a no suceder), es posible que desee reemplazar el &lt;code&gt;while&lt;/code&gt; bucle en la matriz con la siguiente:</target>
        </trans-unit>
        <trans-unit id="78e886a06c0d6c64ae06980c39f4979b0d06c657" translate="yes" xml:space="preserve">
          <source>If the repeat count is &lt;code&gt;*&lt;/code&gt; , the offset is relative to the start of the packed string.</source>
          <target state="translated">Si el recuento de repeticiones es &lt;code&gt;*&lt;/code&gt; , el desplazamiento es relativo al inicio de la cadena empaquetada.</target>
        </trans-unit>
        <trans-unit id="0c6d8ab738d17a47ddcc7210024698f2d723ba66" translate="yes" xml:space="preserve">
          <source>If the repeat count is &lt;code&gt;*&lt;/code&gt;, the offset is relative to the start of the packed string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71535d2706781140ebf79d95c5c1eb0328f89697" translate="yes" xml:space="preserve">
          <source>If the repeat count is &lt;code&gt;0&lt;/code&gt; , it's relative to the current position.</source>
          <target state="translated">Si el recuento de repeticiones es &lt;code&gt;0&lt;/code&gt; , es relativo a la posici&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="8bb595e18165255d40d28696ced7cb987361acca" translate="yes" xml:space="preserve">
          <source>If the repeat count is &lt;code&gt;0&lt;/code&gt;, it's relative to the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adddd684b7b4b320c5c6cd3d4e144f8d42b00be2" translate="yes" xml:space="preserve">
          <source>If the requested class doesn't yet exist, this function will still succeed, and return &lt;code&gt;[ $classname ]&lt;/code&gt;</source>
          <target state="translated">Si la clase solicitada a&amp;uacute;n no existe, esta funci&amp;oacute;n a&amp;uacute;n tendr&amp;aacute; &amp;eacute;xito y devolver&amp;aacute; &lt;code&gt;[ $classname ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3c8df40676c5ef413c4d428cc8bce1edd4a74be" translate="yes" xml:space="preserve">
          <source>If the required version is older than Perl 5.10, the &quot;:default&quot; feature bundle is automatically loaded instead.</source>
          <target state="translated">Si la versión requerida es anterior a Perl 5.10,el paquete de características &quot;:default&quot; se carga automáticamente en su lugar.</target>
        </trans-unit>
        <trans-unit id="d407bfa98e92001cef51aaea080c36419318c881" translate="yes" xml:space="preserve">
          <source>If the result is a fraction, it is converted into a floating point number to the accuracy of your platform.</source>
          <target state="translated">Si el resultado es una fracción,se convierte en un número de punto flotante para la precisión de su plataforma.</target>
        </trans-unit>
        <trans-unit id="a0f32bf4dd5015a300ddb6707d47fae5eba9e46c" translate="yes" xml:space="preserve">
          <source>If the result is multiple script names, they are returned joined into a single comma-separated string.</source>
          <target state="translated">Si el resultado son varios nombres de secuencia de comandos,se devuelven unidos en una sola cadena separada por comas.</target>
        </trans-unit>
        <trans-unit id="45ec7fbff805996e6714524f94283d541160e6c3" translate="yes" xml:space="preserve">
          <source>If the return type of the XSUB includes &lt;code&gt;static&lt;/code&gt; , the method is considered to be a static method. It will call the C++ function using the class::method() syntax. If the method is not static the function will be called using the THIS-&amp;gt;method() syntax.</source>
          <target state="translated">Si el tipo de retorno de XSUB incluye &lt;code&gt;static&lt;/code&gt; , el m&amp;eacute;todo se considera est&amp;aacute;tico. Llamar&amp;aacute; a la funci&amp;oacute;n C ++ usando la sintaxis class :: method (). Si el m&amp;eacute;todo no es est&amp;aacute;tico, la funci&amp;oacute;n se llamar&amp;aacute; utilizando la sintaxis THIS-&amp;gt; method ().</target>
        </trans-unit>
        <trans-unit id="b467c0c1883d9fa2c1ada74a10e9d69505846ac1" translate="yes" xml:space="preserve">
          <source>If the return type of the XSUB includes &lt;code&gt;static&lt;/code&gt;, the method is considered to be a static method. It will call the C++ function using the class::method() syntax. If the method is not static the function will be called using the THIS-&amp;gt;method() syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b11488412f3e860557eb1891af20655d0de0fe4" translate="yes" xml:space="preserve">
          <source>If the return value of reval() is (or contains) any code reference, those code references are wrapped to be themselves executed always in the compartment. See &lt;a href=&quot;#wrap_code_refs_within&quot;&gt;&quot;wrap_code_refs_within&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ff7ce638cb043eea1113e455241d4090a0ba15" translate="yes" xml:space="preserve">
          <source>If the return value of reval() is (or contains) any code reference, those code references are wrapped to be themselves executed always in the compartment. See &lt;a href=&quot;#wrap_code_refs_within&quot;&gt;wrap_code_refs_within&lt;/a&gt;.</source>
          <target state="translated">Si el valor de retorno de reval () es (o contiene) cualquier referencia de c&amp;oacute;digo, esas referencias de c&amp;oacute;digo se envuelven para que se ejecuten siempre en el compartimento. Consulte &lt;a href=&quot;#wrap_code_refs_within&quot;&gt;wrap_code_refs_within&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b5b2e1517f57a24f52793e2d523bf3e3916b624" translate="yes" xml:space="preserve">
          <source>If the revision (previously &quot;tracking version&quot;) number of UCA is given, behavior of that revision is emulated on collating. If omitted, the return value of &lt;code&gt;UCA_Version()&lt;/code&gt; is used.</source>
          <target state="translated">Si se proporciona el n&amp;uacute;mero de revisi&amp;oacute;n (anteriormente &quot;versi&amp;oacute;n de seguimiento&quot;) de UCA, el comportamiento de esa revisi&amp;oacute;n se emula en la clasificaci&amp;oacute;n. Si se omite, se usa el valor de retorno de &lt;code&gt;UCA_Version()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a7a3bfd506eaa3a5969fb39449cbd90048c5cd5" translate="yes" xml:space="preserve">
          <source>If the right argument is an expression rather than a search pattern, substitution, or transliteration, it is interpreted as a search pattern at run time. Note that this means that its contents will be interpolated twice, so</source>
          <target state="translated">Si el argumento correcto es una expresión en lugar de un patrón de búsqueda,sustitución o transliteración,se interpreta como un patrón de búsqueda en tiempo de ejecución.Nótese que esto significa que su contenido será interpolado dos veces,por lo que</target>
        </trans-unit>
        <trans-unit id="397d47eee4fc1ac1405170a336868a5dec199f77" translate="yes" xml:space="preserve">
          <source>If the same C type is used in several different contexts which require different translations, &lt;code&gt;typedef&lt;/code&gt; several new types mapped to this C type, and create separate</source>
          <target state="translated">Si se usa el mismo tipo C en varios contextos diferentes que requieren traducciones diferentes, escriba &lt;code&gt;typedef&lt;/code&gt; varios tipos nuevos asignados a este tipo C y cree</target>
        </trans-unit>
        <trans-unit id="456756c29fcce7da570891f767727aa9e1c8ea70" translate="yes" xml:space="preserve">
          <source>If the same character (or a sequence of characters) exists in the collation element table through &lt;code&gt;table&lt;/code&gt; , mapping to collation elements is overridden. If it does not exist, the mapping is defined additionally.</source>
          <target state="translated">Si el mismo car&amp;aacute;cter (o una secuencia de caracteres) existe en la tabla de elementos de clasificaci&amp;oacute;n a trav&amp;eacute;s de la &lt;code&gt;table&lt;/code&gt; , se anula la asignaci&amp;oacute;n a los elementos de clasificaci&amp;oacute;n. Si no existe, el mapeo se define adicionalmente.</target>
        </trans-unit>
        <trans-unit id="e4dde7b413bfb31794120513bb19ebe90728fd10" translate="yes" xml:space="preserve">
          <source>If the same character (or a sequence of characters) exists in the collation element table through &lt;code&gt;table&lt;/code&gt;, mapping to collation elements is overridden. If it does not exist, the mapping is defined additionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250b229660b09d1a93cecb0077c43fdb021bc44f" translate="yes" xml:space="preserve">
          <source>If the scalar contains a number the raw SV will be leaner.</source>
          <target state="translated">Si el escalar contiene un número,el SV en bruto será más delgado.</target>
        </trans-unit>
        <trans-unit id="129cba7aa8d1059953f619ec45963493064daafb" translate="yes" xml:space="preserve">
          <source>If the scalar from the previous example had an extra reference:</source>
          <target state="translated">Si el escalar del ejemplo anterior tenía una referencia extra:</target>
        </trans-unit>
        <trans-unit id="942a6cfe1787a0e79c2fbf6e9025269b48593e53" translate="yes" xml:space="preserve">
          <source>If the script says that your package is incomplete, and asks whether to continue, just answer with Y (this can only happen if you don't use long filenames or forget to issue &quot;set FNCASE=y&quot; first).</source>
          <target state="translated">Si el guión dice que su paquete está incompleto,y pregunta si debe continuar,sólo responda con Y (esto sólo puede suceder si no usa nombres de archivo largos o se olvida de emitir primero &quot;set FNCASE=y&quot;).</target>
        </trans-unit>
        <trans-unit id="1ebc636a0a5f78fe0991b4d30678c7a47413c67b" translate="yes" xml:space="preserve">
          <source>If the second argument to a piped &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; contains shell metacharacters, perl &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt;s, then &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;s a shell to decode the metacharacters and eventually run the desired program. If the program couldn't be run, it's the shell that gets the message, not Perl. All your Perl program can find out is whether the shell itself could be successfully started. You can still capture the shell's STDERR and check it for error messages. See &lt;a href=&quot;#How-can-I-capture-STDERR-from-an-external-command%3f&quot;&gt;How can I capture STDERR from an external command?&lt;/a&gt; elsewhere in this document, or use the &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt; module.</source>
          <target state="translated">Si el segundo argumento de un &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; canal contiene metacaracteres de shell, perl &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; s, entonces &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; sa shell para decodificar los metacaracteres y finalmente ejecutar el programa deseado. Si el programa no se pudo ejecutar, es el shell el que recibe el mensaje, no Perl. Todo lo que su programa Perl puede averiguar es si el propio shell puede iniciarse correctamente. A&amp;uacute;n puede capturar el STDERR del shell y verificar si hay mensajes de error. Consulte &lt;a href=&quot;#How-can-I-capture-STDERR-from-an-external-command%3f&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo capturar STDERR desde un comando externo?&lt;/a&gt; en otra parte de este documento, o utilice el m&amp;oacute;dulo &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c86f791ed05e6400ffb0303d6157f674dcf38a9" translate="yes" xml:space="preserve">
          <source>If the second argument to a piped &lt;code&gt;open()&lt;/code&gt; contains shell metacharacters, perl &lt;code&gt;fork()&lt;/code&gt;s, then &lt;code&gt;exec()&lt;/code&gt;s a shell to decode the metacharacters and eventually run the desired program. If the program couldn't be run, it's the shell that gets the message, not Perl. All your Perl program can find out is whether the shell itself could be successfully started. You can still capture the shell's STDERR and check it for error messages. See &lt;a href=&quot;#How-can-I-capture-STDERR-from-an-external-command%3F&quot;&gt;&quot;How can I capture STDERR from an external command?&quot;&lt;/a&gt; elsewhere in this document, or use the &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a485d6980d01df96f56ec659ef159a6f3e30c7c" translate="yes" xml:space="preserve">
          <source>If the second operand has a &quot;nomethod&quot; method then use that.</source>
          <target state="translated">Si el segundo operando tiene un método &quot;nometódico&quot;,entonces usa eso.</target>
        </trans-unit>
        <trans-unit id="d89fc930c903cfb2489602dfe78fa395aab16a02" translate="yes" xml:space="preserve">
          <source>If the second parameter (a boolean) is omitted or false, the decomposition is canonical decomposition; if the second parameter (a boolean) is true, the decomposition is compatibility decomposition.</source>
          <target state="translated">Si el segundo parámetro (un booleano)se omite o es falso,la descomposición es descomposición canónica;si el segundo parámetro (un booleano)es verdadero,la descomposición es descomposición por compatibilidad.</target>
        </trans-unit>
        <trans-unit id="cdc3a4f8b493e77f4b46b059968dc0b38f7409ec" translate="yes" xml:space="preserve">
          <source>If the selected element is outside the string, the value 0 is returned. If an element off the end of the string is written to, Perl will first extend the string with sufficiently many zero bytes. It is an error to try to write off the beginning of the string (i.e., negative OFFSET).</source>
          <target state="translated">Si el elemento seleccionado está fuera de la cadena,se devuelve el valor 0.Si se escribe un elemento fuera del final de la cadena,Perl primero extenderá la cadena con suficientes bytes cero.Es un error intentar escribir el comienzo de la cadena (es decir,un OFFSET negativo).</target>
        </trans-unit>
        <trans-unit id="a0efffe8f3cec0c66bc0076cfbf0d0f016059fa0" translate="yes" xml:space="preserve">
          <source>If the semaphore's count would drop below zero, this method will block until either the semaphore's count is greater than or equal to the amount you're &lt;code&gt;down&lt;/code&gt;ing the semaphore's count by, or until the timeout is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08309d3b072967d3ab275a7c77649be9b9f2f474" translate="yes" xml:space="preserve">
          <source>If the semaphore's count would drop below zero, this method will block until such time as the semaphore's count is greater than or equal to the amount you're &lt;code&gt;down&lt;/code&gt; ing the semaphore's count by.</source>
          <target state="translated">Si el recuento del sem&amp;aacute;foro cae por debajo de cero, este m&amp;eacute;todo se bloquear&amp;aacute; hasta el momento en que el recuento del sem&amp;aacute;foro sea mayor o igual a la cantidad que est&amp;aacute; &lt;code&gt;down&lt;/code&gt; el recuento del sem&amp;aacute;foro.</target>
        </trans-unit>
        <trans-unit id="083a8e90721e210cc119c4e7060a13485c79131e" translate="yes" xml:space="preserve">
          <source>If the semaphore's count would drop below zero, this method will block until such time as the semaphore's count is greater than or equal to the amount you're &lt;code&gt;down&lt;/code&gt;ing the semaphore's count by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cf6efaba2d8b062462556a6172122cd62a7391" translate="yes" xml:space="preserve">
          <source>If the semaphore's count would drop below zero, this method will return</source>
          <target state="translated">Si la cuenta del semáforo cayera por debajo de cero,este método devolvería</target>
        </trans-unit>
        <trans-unit id="43da8fe1e0dfe354dcb09a89c8401b1d0438aefd" translate="yes" xml:space="preserve">
          <source>If the sequence contains a single code point which is unassigned to a character in the version of Unicode being used, the function will return TRUE, and the script will be &lt;code&gt;SCX_Unknown&lt;/code&gt;. Any other combination of unassigned code points in the input sequence will result in the function treating the input as not being a script run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecadb78dff58886929648354bb050576d1075181" translate="yes" xml:space="preserve">
          <source>If the sequence is empty, TRUE is returned, but &lt;code&gt;*ret_script&lt;/code&gt; (if asked for) will be &lt;code&gt;SCX_INVALID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feaf413a0792a40fde39688dd7794f1b79d23f9d" translate="yes" xml:space="preserve">
          <source>If the shareable image isn't in any of these places, you'll need to define a logical name</source>
          <target state="translated">Si la imagen compartida no está en ninguno de estos lugares,tendrás que definir un nombre lógico</target>
        </trans-unit>
        <trans-unit id="34b3b705ebfb832784afae8421a8cf44e644e9c0" translate="yes" xml:space="preserve">
          <source>If the socket is in a connected state, the peer address is returned. If the socket is not in a connected state, &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d77daa474d5b520bbe270f2db415132f8e51945" translate="yes" xml:space="preserve">
          <source>If the socket is in a connected state, the peer address is returned. If the socket is not in a connected state, undef is returned.</source>
          <target state="translated">Si el enchufe está en un estado conectado,se devuelve la dirección del par.Si el enchufe no está en un estado conectado,se devuelve el Undef.</target>
        </trans-unit>
        <trans-unit id="bc839afaf75ab77ac378c573dd37cfe67fada222" translate="yes" xml:space="preserve">
          <source>If the source number can be represented in the target form, that representation is used.</source>
          <target state="translated">Si el número de la fuente puede representarse en la forma de destino,se utiliza esa representación.</target>
        </trans-unit>
        <trans-unit id="ad2456e62439e41ca828e4d7a559faef86d9a12f" translate="yes" xml:space="preserve">
          <source>If the source number is between two numbers representable in the target form, a representation of one of these numbers is used. (</source>
          <target state="translated">Si el número de la fuente está entre dos números representables en la forma del objetivo,se utiliza una representación de uno de estos números.(</target>
        </trans-unit>
        <trans-unit id="5807a3edb0534ce60ac2857df2fbffa4467c6e15" translate="yes" xml:space="preserve">
          <source>If the source number is outside of the limits representable in the target form, a representation of the closest limit is used. (</source>
          <target state="translated">Si el número de la fuente está fuera de los límites representables en la forma del objetivo,se utiliza una representación del límite más cercano.(</target>
        </trans-unit>
        <trans-unit id="a2b6fc7f507aeb4c29a8733766d6c6136c45fda9" translate="yes" xml:space="preserve">
          <source>If the special input filename &quot;&quot;, &quot;-&quot; or &quot;&amp;lt;&amp;amp;STDIN&quot; is given then the STDIN filehandle is used for input (and no open or close is performed). If no input filename is specified then &quot;-&quot; is implied. Filehandle references, or objects that support the regular IO operations (like &lt;code&gt;&amp;lt;$fh&amp;gt;&lt;/code&gt; or &lt;code&gt;$fh-&amp;lt;Egt&lt;/code&gt;getline&amp;gt;) are also accepted; the handles must already be opened.</source>
          <target state="translated">Si se proporciona el nombre de archivo de entrada especial &quot;&quot;, &quot;-&quot; o &quot;&amp;lt;&amp;amp; STDIN&quot;, se utiliza el identificador de archivo STDIN para la entrada (y no se realiza ninguna apertura o cierre). Si no se especifica ning&amp;uacute;n nombre de archivo de entrada, se implica &quot;-&quot;. Tambi&amp;eacute;n se aceptan referencias de identificadores de archivos u objetos que admiten las operaciones de E / S regulares (como &lt;code&gt;&amp;lt;$fh&amp;gt;&lt;/code&gt; o &lt;code&gt;$fh-&amp;lt;Egt&lt;/code&gt; getline&amp;gt;); las asas ya deben estar abiertas.</target>
        </trans-unit>
        <trans-unit id="3247f1e5568a45232c218d52498138f8657c71b9" translate="yes" xml:space="preserve">
          <source>If the specification of the class was not completely valid, the message indicates that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec8f0307ac0cd29be9e31e20412d0003c85f12a" translate="yes" xml:space="preserve">
          <source>If the standard options aren't enough, you may want to subclass Pod::Simple::XHMTL. These are the most likely candidates for methods you'll want to override when subclassing.</source>
          <target state="translated">Si las opciones estándar no son suficientes,puede que quieras subclasificar Pod::Simple::XHMTL.Estos son los candidatos más probables para los métodos que querrás anular al subclasificar.</target>
        </trans-unit>
        <trans-unit id="c57481fa08ceb2f9368092d11351ebd6c6865947" translate="yes" xml:space="preserve">
          <source>If the string can not be interpreted, NaN is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc03084e4b347434da04ee646a45ae6dc9795b98" translate="yes" xml:space="preserve">
          <source>If the string exception does not end in a newline, the current script line number and input line number (if any) and a newline are appended to it. Note that the &quot;input line number&quot; (also known as &quot;chunk&quot;) is subject to whatever notion of &quot;line&quot; happens to be currently in effect, and is also available as the special variable &lt;a href=&quot;perlvar#%24.&quot;&gt;&lt;code&gt;$.&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&quot;$/&quot; in perlvar&lt;/a&gt; and &lt;a href=&quot;perlvar#%24.&quot;&gt;&quot;$.&quot; in perlvar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61afcdbf0b63afa329f8dddf52dc441cb7c93f4b" translate="yes" xml:space="preserve">
          <source>If the string happens to be encoded as UTF-8 internally (and thus has the UTF8 flag set), &lt;a href=&quot;#vec-EXPR%2COFFSET%2CBITS&quot;&gt;&lt;code&gt;vec&lt;/code&gt;&lt;/a&gt; tries to convert it to use a one-byte-per-character internal representation. However, if the string contains characters with values of 256 or higher, a fatal error will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c4f5fed91805150d0fb1f5cc265445f3719afe" translate="yes" xml:space="preserve">
          <source>If the string happens to be encoded as UTF-8 internally (and thus has the UTF8 flag set), this is ignored by &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;, and it operates on the internal byte string, not the conceptual character string, even if you only have characters with values less than 256.</source>
          <target state="translated">Si la cadena est&amp;aacute; codificada como UTF-8 internamente (y por lo tanto tiene la bandera UTF8 activada), &lt;code&gt;&lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; lo ignora y opera en la cadena de bytes interna, no en la cadena de caracteres conceptual, incluso si solo tiene caracteres con valores inferiores a 256.</target>
        </trans-unit>
        <trans-unit id="e46f7dff46b6e909ca2a4c0f1cd989e3474f6367" translate="yes" xml:space="preserve">
          <source>If the string happens to be encoded as UTF-8 internally (and thus has the UTF8 flag set), this is ignored by &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt;, and it operates on the internal byte string, not the conceptual character string, even if you only have characters with values less than 256.</source>
          <target state="translated">Si la cadena est&amp;aacute; codificada como UTF-8 internamente (y por lo tanto tiene la bandera UTF8 activada), &lt;code&gt;&lt;a href=&quot;vec&quot;&gt;vec&lt;/a&gt;&lt;/code&gt; lo ignora y opera en la cadena de bytes interna, no en la cadena de caracteres conceptual, incluso si solo tiene caracteres con valores inferiores a 256.</target>
        </trans-unit>
        <trans-unit id="7652f3d26c3d783ee2b0cdbd7edb6550d6506acc" translate="yes" xml:space="preserve">
          <source>If the string has a &quot;0b&quot; prefix, it is interpreted as a binary number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ff0fdfcd38431066beb5169d3e97b3f28b4513" translate="yes" xml:space="preserve">
          <source>If the string has a &quot;0x&quot; prefix, it is interpreted as a hexadecimal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556906a3727707516e15ba62fe70b3006b4bd52d" translate="yes" xml:space="preserve">
          <source>If the string is just one character in length, the Unicode numeric value is returned if it has one, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; otherwise. Note that this need not be a whole number. &lt;code&gt;num(&quot;\N{TIBETAN DIGIT HALF ZERO}&quot;)&lt;/code&gt; , for example returns -0.5.</source>
          <target state="translated">Si la cadena tiene solo un car&amp;aacute;cter, se devuelve el valor num&amp;eacute;rico Unicode si tiene uno, o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; caso contrario. Tenga en cuenta que no es necesario que sea un n&amp;uacute;mero entero. &lt;code&gt;num(&quot;\N{TIBETAN DIGIT HALF ZERO}&quot;)&lt;/code&gt; , por ejemplo, devuelve -0,5.</target>
        </trans-unit>
        <trans-unit id="4fce93c48f5e7099a349c6ef5a41848fb5f748c7" translate="yes" xml:space="preserve">
          <source>If the string is just one character in length, the Unicode numeric value is returned if it has one, or &lt;code&gt;undef&lt;/code&gt; otherwise. If the optional scalar ref is passed, it would be set to 1 if the return is valid; or 0 if the return is &lt;code&gt;undef&lt;/code&gt;. Note that the numeric value returned need not be a whole number. &lt;code&gt;num(&quot;\N{TIBETAN DIGIT HALF ZERO}&quot;)&lt;/code&gt;, for example returns -0.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c98175c6574b582a8455429e44a48ac7e74d895" translate="yes" xml:space="preserve">
          <source>If the string is more than one character, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned unless all its characters are decimal digits (that is, they would match &lt;code&gt;\d+&lt;/code&gt; ), from the same script. For example if you have an ASCII '0' and a Bengali '3', mixed together, they aren't considered a valid number, and &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. A further restriction is that the digits all have to be of the same form. A half-width digit mixed with a full-width one will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. The Arabic script has two sets of digits; &lt;code&gt;num&lt;/code&gt; will return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; unless all the digits in the string come from the same set.</source>
          <target state="translated">Si la cadena tiene m&amp;aacute;s de un car&amp;aacute;cter, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; a menos que todos sus caracteres sean d&amp;iacute;gitos decimales (es decir, coincidir&amp;iacute;an con &lt;code&gt;\d+&lt;/code&gt; ), del mismo script. Por ejemplo, si tiene un ASCII '0' y un bengal&amp;iacute; '3', mezclados, no se consideran un n&amp;uacute;mero v&amp;aacute;lido y se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . Otra restricci&amp;oacute;n es que todos los d&amp;iacute;gitos deben tener la misma forma. Un d&amp;iacute;gito de medio ancho mezclado con uno de ancho completo devolver&amp;aacute; &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . La escritura &amp;aacute;rabe tiene dos conjuntos de d&amp;iacute;gitos; &lt;code&gt;num&lt;/code&gt; devolver&amp;aacute; &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; a menos que todos los d&amp;iacute;gitos de la cadena provengan del mismo conjunto.</target>
        </trans-unit>
        <trans-unit id="38c89008b47ecbaadc076b7aa2f24f0e7c6c9985" translate="yes" xml:space="preserve">
          <source>If the string is more than one character, &lt;code&gt;undef&lt;/code&gt; is returned unless all its characters are decimal digits (that is, they would match &lt;code&gt;\d+&lt;/code&gt;), from the same script. For example if you have an ASCII '0' and a Bengali '3', mixed together, they aren't considered a valid number, and &lt;code&gt;undef&lt;/code&gt; is returned. A further restriction is that the digits all have to be of the same form. A half-width digit mixed with a full-width one will return &lt;code&gt;undef&lt;/code&gt;. The Arabic script has two sets of digits; &lt;code&gt;num&lt;/code&gt; will return &lt;code&gt;undef&lt;/code&gt; unless all the digits in the string come from the same set. In all cases, the optional scalar ref parameter is set to how long any valid initial substring of digits is; hence it will be set to the entire string length if the main return value is not &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc51a016846748fdbc037c08fcea8e548c16fe0" translate="yes" xml:space="preserve">
          <source>If the string used for the filename and/or comment is not valid UTF-8 when this option is true, the script will die with a &quot;wide character&quot; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc54c0830b9373d2798de2bf5260229a62e838a3" translate="yes" xml:space="preserve">
          <source>If the subroutine has one of a few special names, such as &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt;, then it will be claimed by the appropriate queue for automatic running of phase-related subroutines. In this case the relevant glob will be left not containing any subroutine, even if it did contain one before. Execution of the subroutine will likely be a no-op, unless &lt;code&gt;sv&lt;/code&gt; was a tied array or the caller modified the subroutine in some interesting way before it was executed. In the case of &lt;code&gt;BEGIN&lt;/code&gt;, the treatment is buggy: the sub will be executed when only half built, and may be deleted prematurely, possibly causing a crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1db3945f60801d9fe74fe01151fa3c625ba2ad" translate="yes" xml:space="preserve">
          <source>If the subroutine has one of a few special names, such as &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt;, then it will be claimed by the appropriate queue for automatic running of phase-related subroutines. In this case the relevant glob will be left not containing any subroutine, even if it did contain one before. In the case of &lt;code&gt;BEGIN&lt;/code&gt;, the subroutine will be executed and the reference to it disposed of before this function returns, and also before its prototype is set. If a &lt;code&gt;BEGIN&lt;/code&gt; subroutine would not be sufficiently constructed by this function to be ready for execution then the caller must prevent this happening by giving the subroutine a different name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb58246d15f13a6f8775c588f89be7261648c55a" translate="yes" xml:space="preserve">
          <source>If the subroutine has one of a few special names, such as &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;END&lt;/code&gt;, then it will be claimed by the appropriate queue for automatic running of phase-related subroutines. In this case the relevant glob will be left not containing any subroutine, even if it did contain one before. In the case of &lt;code&gt;BEGIN&lt;/code&gt;, the subroutine will be executed and the reference to it disposed of before this function returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c4922eb5c062cef768c57176fb78d4965487a5" translate="yes" xml:space="preserve">
          <source>If the subroutine is an XSUB, the elements to be compared are pushed on to the stack, the way arguments are usually passed to XSUBs. $a and $b are not set.</source>
          <target state="translated">Si la subrutina es un XSUB,los elementos a comparar son empujados a la pila,de la misma manera que los argumentos son usualmente pasados a los XSUB.$a y $b no están establecidos.</target>
        </trans-unit>
        <trans-unit id="1afca0c8662d7dc27c024fcc727c62d11480ea99" translate="yes" xml:space="preserve">
          <source>If the subroutine is an XSUB, the elements to be compared are pushed on to the stack, the way arguments are usually passed to XSUBs. &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; are not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976151f66fa723fd3131374feb62ee8e2fa9f3b7" translate="yes" xml:space="preserve">
          <source>If the subroutine needs to signal an error, it should call die() with the desired error message as its argument. GetOptions() will catch the die(), issue the error message, and record that an error result must be returned upon completion.</source>
          <target state="translated">Si la subrutina necesita señalar un error,debe llamar a die()con el mensaje de error deseado como argumento.GetOptions()atrapará el dado(),emitirá el mensaje de error,y registrará que un resultado de error debe ser devuelto al finalizar.</target>
        </trans-unit>
        <trans-unit id="40540ec0b48601a220c70ec78c454bb0e1f51c33" translate="yes" xml:space="preserve">
          <source>If the subroutine returns a scalar with a newline or a filehandle, it will be interpreted as raw TAP or as a TAP stream, respectively.</source>
          <target state="translated">Si la subrutina devuelve un escalar con una nueva línea o un filehandle,se interpretará como TAP en bruto o como una corriente TAP,respectivamente.</target>
        </trans-unit>
        <trans-unit id="ca613cca9ddf94b18fd3a6da5979f02e2a0a3fcf" translate="yes" xml:space="preserve">
          <source>If the subroutine's prototype is &lt;code&gt;($$)&lt;/code&gt; , the elements to be compared are passed by reference in &lt;code&gt;@_&lt;/code&gt; , as for a normal subroutine. This is slower than unprototyped subroutines, where the elements to be compared are passed into the subroutine as the package global variables $a and $b (see example below). Note that in the latter case, it is usually highly counter-productive to declare $a and $b as lexicals.</source>
          <target state="translated">Si el prototipo de la subrutina es &lt;code&gt;($$)&lt;/code&gt; , los elementos a comparar se pasan por referencia en &lt;code&gt;@_&lt;/code&gt; , como en una subrutina normal. Esto es m&amp;aacute;s lento que las subrutinas sin prototipo, donde los elementos que se van a comparar se pasan a la subrutina como las variables globales del paquete $ ay $ b (ver ejemplo a continuaci&amp;oacute;n). Tenga en cuenta que en el &amp;uacute;ltimo caso, suele ser muy contraproducente declarar $ ay $ b como l&amp;eacute;xicos.</target>
        </trans-unit>
        <trans-unit id="84b98f5d60037882d103faaf29e539e20c444828" translate="yes" xml:space="preserve">
          <source>If the subroutine's prototype is &lt;code&gt;($$)&lt;/code&gt;, the elements to be compared are passed by reference in &lt;a href=&quot;perlvar#%40_&quot;&gt;&lt;code&gt;@_&lt;/code&gt;&lt;/a&gt;, as for a normal subroutine. This is slower than unprototyped subroutines, where the elements to be compared are passed into the subroutine as the package global variables &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; (see example below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8a697c5090fd8ce94c13b5cefb41955f99b010" translate="yes" xml:space="preserve">
          <source>If the sv already is UTF-8 (or if it is not POK), or if the encoding is not a reference, nothing is done to the sv. If the encoding is not an &lt;code&gt;Encode::XS&lt;/code&gt; Encoding object, bad things will happen. (See</source>
          <target state="translated">Si el sv ya es UTF-8 (o si no es POK), o si la codificaci&amp;oacute;n no es una referencia, no se hace nada al sv. Si la codificaci&amp;oacute;n no es un objeto &lt;code&gt;Encode::XS&lt;/code&gt; Encoding, suceder&amp;aacute;n cosas malas. (Ver</target>
        </trans-unit>
        <trans-unit id="25e6d11786b2dfdb0f52678b6850a3dff8731c46" translate="yes" xml:space="preserve">
          <source>If the sv is the target of a weak reference then it returns the back references structure associated with the sv; otherwise return NULL.</source>
          <target state="translated">Si el sv es el objetivo de una referencia débil,entonces devuelve la estructura de referencias trasera asociada al sv;de lo contrario,devuelve NULL.</target>
        </trans-unit>
        <trans-unit id="82b0821b14cc4cbb805ab8ac00aa5900da22e409" translate="yes" xml:space="preserve">
          <source>If the symbol &lt;code&gt;:void&lt;/code&gt; appears in the import list, then functions named later in that import list raise an exception only when these are called in void context--that is, when their return values are ignored. For example</source>
          <target state="translated">Si el s&amp;iacute;mbolo &lt;code&gt;:void&lt;/code&gt; aparece en la lista de importaci&amp;oacute;n, las funciones nombradas m&amp;aacute;s adelante en esa lista de importaci&amp;oacute;n generan una excepci&amp;oacute;n solo cuando se llaman en contexto vac&amp;iacute;o, es decir, cuando se ignoran sus valores de retorno. Por ejemplo</target>
        </trans-unit>
        <trans-unit id="50cf7df5061941de64a11ddf12781ae7a8f3290f" translate="yes" xml:space="preserve">
          <source>If the system Perl is compiled in has thread-safe variants of such calls, they will be used. Beyond that, Perl is at the mercy of the thread-safety or -unsafety of the calls. Please consult your C library call documentation.</source>
          <target state="translated">Si el sistema en el que se compila Perl tiene variantes de seguridad de hilo de tales llamadas,se usarán.Más allá de eso,Perl está a merced de la seguridad de los hilos o de la inseguridad de las llamadas.Por favor,consulte la documentación de llamadas de su biblioteca C.</target>
        </trans-unit>
        <trans-unit id="d5b1234bec481f7f0fb540471e8867994b10762a" translate="yes" xml:space="preserve">
          <source>If the target machine is little-endian, we could write:</source>
          <target state="translated">Si la máquina objetivo es pequeña,podríamos escribir:</target>
        </trans-unit>
        <trans-unit id="4756e731e627a9969d09a902907c109ca92f4013" translate="yes" xml:space="preserve">
          <source>If the template is not specified, a template is always automatically generated. This temporary file is placed in tmpdir() (&lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;) unless a directory is specified explicitly with the DIR option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff635540edd5aea28a885e06a80c5c6844ba7c11" translate="yes" xml:space="preserve">
          <source>If the template is not specified, a template is always automatically generated. This temporary file is placed in tmpdir() (L&amp;lt;:spec&amp;gt;) unless a directory is specified explicitly with the DIR option.</source>
          <target state="translated">Si no se especifica la plantilla, siempre se genera una plantilla autom&amp;aacute;ticamente. Este archivo temporal se coloca en tmpdir () (L &amp;lt;: spec&amp;gt;) a menos que se especifique un directorio expl&amp;iacute;citamente con la opci&amp;oacute;n DIR.</target>
        </trans-unit>
        <trans-unit id="593ec0746d963b28de5ba2cf0799b3f4777c63c7" translate="yes" xml:space="preserve">
          <source>If the temporary file can not be created undef is returned. Currently this command will probably not work when the temporary directory is on an NFS file system.</source>
          <target state="translated">Si el archivo temporal no puede ser creado,se devuelve el Undef.Actualmente este comando probablemente no funcionará cuando el directorio temporal esté en un sistema de archivos NFS.</target>
        </trans-unit>
        <trans-unit id="326e7cf804954bda3811121b38cb7c631e7575fe" translate="yes" xml:space="preserve">
          <source>If the terminating string is quoted, the type of quotes used determine the treatment of the text.</source>
          <target state="translated">Si se cita la cadena de terminación,el tipo de citas utilizadas determina el tratamiento del texto.</target>
        </trans-unit>
        <trans-unit id="957eb5ae659823f7ba1c0183ec0ac873de8b4109" translate="yes" xml:space="preserve">
          <source>If the test is unplanned, this method will always return false. See &lt;code&gt;is_unplanned&lt;/code&gt; .</source>
          <target state="translated">Si la prueba no est&amp;aacute; planificada, este m&amp;eacute;todo siempre devolver&amp;aacute; falso. Consulte &lt;code&gt;is_unplanned&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20d3ba6a3f24850f51b5f59f10528892b52a140e" translate="yes" xml:space="preserve">
          <source>If the test is unplanned, this method will always return false. See &lt;code&gt;is_unplanned&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfabe273698ccd033cf292d0d277e005ca02c57" translate="yes" xml:space="preserve">
          <source>If the tests fail &lt;code&gt;prove&lt;/code&gt; will exit with non-zero status.</source>
          <target state="translated">Si las pruebas fallan, la &lt;code&gt;prove&lt;/code&gt; saldr&amp;aacute; con un estado distinto de cero.</target>
        </trans-unit>
        <trans-unit id="269c79628ff3b9a7faad565d0d36f6d320d9b282" translate="yes" xml:space="preserve">
          <source>If the text of the L&amp;lt;&amp;gt; escape is entirely enclosed in double quotes, it's interpreted as a link to a section for backward compatibility.</source>
          <target state="translated">Si el texto del escape L &amp;lt;&amp;gt; est&amp;aacute; completamente encerrado entre comillas dobles, se interpreta como un enlace a una secci&amp;oacute;n para compatibilidad con versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="f92e03b607dab58b8f2f2e3c224ccb0a3fc3ca6c" translate="yes" xml:space="preserve">
          <source>If the text of the error message starts with an exclamation mark &lt;code&gt;!&lt;/code&gt; it is interpreted specially by GetOptions(). There is currently one special command implemented: &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die(&quot;!FINISH&quot;)&lt;/a&gt;&lt;/code&gt; will cause GetOptions() to stop processing options, as if it encountered a double dash &lt;code&gt;--&lt;/code&gt; .</source>
          <target state="translated">Si el texto del mensaje de error comienza con un signo de exclamaci&amp;oacute;n &lt;code&gt;!&lt;/code&gt; es interpretado especialmente por GetOptions (). Actualmente hay un comando especial implementado: &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die(&quot;!FINISH&quot;)&lt;/a&gt;&lt;/code&gt; har&amp;aacute; que GetOptions () detenga las opciones de procesamiento, como si encontrara un gui&amp;oacute;n doble &lt;code&gt;--&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d332109bf38a18b83347b1abe4af5018dfcf4a0" translate="yes" xml:space="preserve">
          <source>If the text of the error message starts with an exclamation mark &lt;code&gt;!&lt;/code&gt; it is interpreted specially by GetOptions(). There is currently one special command implemented: &lt;code&gt;die(&quot;!FINISH&quot;)&lt;/code&gt; will cause GetOptions() to stop processing options, as if it encountered a double dash &lt;code&gt;--&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a21a0dcb36b1ce3d43912ccebce5a460b97864" translate="yes" xml:space="preserve">
          <source>If the third argument is</source>
          <target state="translated">Si el tercer argumento es</target>
        </trans-unit>
        <trans-unit id="b232866b6ad063c73d4ad37ea476edb565d6de63" translate="yes" xml:space="preserve">
          <source>If the third argument,</source>
          <target state="translated">Si el tercer argumento,</target>
        </trans-unit>
        <trans-unit id="66bf0740d3ced4e3ce4166e93bb8bdf81549240a" translate="yes" xml:space="preserve">
          <source>If the thread being &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;ed &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;d, the error it died with will be returned at this time. If you don't want the thread performing the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; to die as well, you should either wrap the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; in an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or use the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; thread method instead of &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si el hilo que se est&amp;aacute; &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; ed &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; d, el error con el que muri&amp;oacute; se devolver&amp;aacute; en este momento. Si no desea que el hilo que realiza la &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; muera tambi&amp;eacute;n, debe envolver la &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; en una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n o usar el m&amp;eacute;todo del hilo de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n en lugar de &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a5af2f1be44751c2177059f4e6af4dd499466cc" translate="yes" xml:space="preserve">
          <source>If the thread being &lt;code&gt;join&lt;/code&gt;ed &lt;code&gt;die&lt;/code&gt;d, the error it died with will be returned at this time. If you don't want the thread performing the &lt;code&gt;join&lt;/code&gt; to die as well, you should either wrap the &lt;code&gt;join&lt;/code&gt; in an &lt;code&gt;eval&lt;/code&gt; or use the &lt;code&gt;eval&lt;/code&gt; thread method instead of &lt;code&gt;join&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2279b2f8b74fd7d772a6ba18eb3177b3a248c49d" translate="yes" xml:space="preserve">
          <source>If the timeout is reached, this method will return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd970acc5e28ee89d2e82334dde273c65bae5b7" translate="yes" xml:space="preserve">
          <source>If the title can't be found, then get_short_title returns empty-string (&quot;&quot;).</source>
          <target state="translated">Si el título no puede ser encontrado,entonces get_short_title devuelve una cadena vacía (&quot;&quot;).</target>
        </trans-unit>
        <trans-unit id="697a489e14d5b870ec5510bd4b458c67ab45bad8" translate="yes" xml:space="preserve">
          <source>If the typeglob &lt;code&gt;gv&lt;/code&gt; can be expressed more succinctly, by having something other than a real GV in its place in the stash, replace it with the optimised form. Basic requirements for this are that &lt;code&gt;gv&lt;/code&gt; is a real typeglob, is sufficiently ordinary, and is only referenced from its package. This function is meant to be used when a GV has been looked up in part to see what was there, causing upgrading, but based on what was found it turns out that the real GV isn't required after all.</source>
          <target state="translated">Si el &lt;code&gt;gv&lt;/code&gt; de typeglob se puede expresar de manera m&amp;aacute;s sucinta, al tener algo que no sea un GV real en su lugar en el alijo, reempl&amp;aacute;celo con la forma optimizada. Los requisitos b&amp;aacute;sicos para esto son que &lt;code&gt;gv&lt;/code&gt; sea ​​un typeglob real, lo suficientemente ordinario y solo se haga referencia a &amp;eacute;l desde su paquete. Esta funci&amp;oacute;n est&amp;aacute; destinada a utilizarse cuando se ha buscado un GV en parte para ver qu&amp;eacute; estaba all&amp;iacute;, lo que provoc&amp;oacute; la actualizaci&amp;oacute;n, pero seg&amp;uacute;n lo que se encontr&amp;oacute;, resulta que el GV real no es necesario despu&amp;eacute;s de todo.</target>
        </trans-unit>
        <trans-unit id="7e317e256420ab2a48b2f7e7b312c3d9f416e521" translate="yes" xml:space="preserve">
          <source>If the underlying &lt;code&gt;IO::Handle&lt;/code&gt; is closed, or if there are any read or write failures, the file handle will be forced closed, and &lt;code&gt;code()&lt;/code&gt; will return &quot;421&quot; (temporary connection failure) and &lt;code&gt;message()&lt;/code&gt; will return &quot;[$pkg] Connection closed&quot; (where $pkg is the name of the class that subclassed &lt;code&gt;Net::Cmd&lt;/code&gt; ). The _set_status_closed() method can be overridden to set a different message (by calling set_status()) or otherwise trap this error.</source>
          <target state="translated">Si el &lt;code&gt;IO::Handle&lt;/code&gt; subyacente est&amp;aacute; cerrado, o si hay fallas de lectura o escritura, se forzar&amp;aacute; el cierre del identificador del archivo y el &lt;code&gt;code()&lt;/code&gt; devolver&amp;aacute; &quot;421&quot; (falla de conexi&amp;oacute;n temporal) y el &lt;code&gt;message()&lt;/code&gt; devolver&amp;aacute; &quot;[ $ pkg] Conexi&amp;oacute;n cerrada &quot;(donde $ pkg es el nombre de la clase que subclasific&amp;oacute; &lt;code&gt;Net::Cmd&lt;/code&gt; ). El m&amp;eacute;todo _set_status_closed () se puede anular para establecer un mensaje diferente (llamando a set_status ()) o capturar este error.</target>
        </trans-unit>
        <trans-unit id="1e77ce40e4dd7efc2c043a17aee5d821a48fe672" translate="yes" xml:space="preserve">
          <source>If the underlying &lt;code&gt;IO::Handle&lt;/code&gt; is closed, or if there are any read or write failures, the file handle will be forced closed, and &lt;code&gt;code()&lt;/code&gt; will return &quot;421&quot; (temporary connection failure) and &lt;code&gt;message()&lt;/code&gt; will return &quot;[$pkg] Connection closed&quot; (where $pkg is the name of the class that subclassed &lt;code&gt;Net::Cmd&lt;/code&gt;). The _set_status_closed() method can be overridden to set a different message (by calling set_status()) or otherwise trap this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc3b2cf894256f273b0349af8d5d688d0cdcb39" translate="yes" xml:space="preserve">
          <source>If the user builds a shared</source>
          <target state="translated">Si el usuario construye un sistema compartido</target>
        </trans-unit>
        <trans-unit id="32324af5745fb70c85007da7a27faa556a189cfd" translate="yes" xml:space="preserve">
          <source>If the user didn't specify anything, it's interpreted as having used the &lt;code&gt;please&lt;/code&gt; tag. It's up to you to make this useful.</source>
          <target state="translated">Si el usuario no especific&amp;oacute; nada, se interpreta que ha utilizado la etiqueta &lt;code&gt;please&lt;/code&gt; . Depende de usted hacer que esto sea &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="cd074d1ec9315994a5770ffd227be188d8ea3674" translate="yes" xml:space="preserve">
          <source>If the user does not have HTML::Lint installed, the whole block of code</source>
          <target state="translated">Si el usuario no tiene HTML::Lint instalado,todo el bloque de código</target>
        </trans-unit>
        <trans-unit id="b39c8811f479889c6eabed43038bf7a333557852" translate="yes" xml:space="preserve">
          <source>If the user has superuser privileges, and is not working on AFS or relatives, then the defaults for INSTALLPRIVLIB, INSTALLARCHLIB, INSTALLSCRIPT, etc. will be appropriate, and this incantation will be the best:</source>
          <target state="translated">Si el usuario tiene privilegios de superusuario,y no está trabajando en AFS o familiares,entonces los valores por defecto para INSTALLPRIVLIB,INSTALLARCHLIB,INSTALLSCRIPT,etc.serán apropiados,y este conjuro será el mejor:</target>
        </trans-unit>
        <trans-unit id="3d9745c4616cab220c27715466f7a222d8b72268" translate="yes" xml:space="preserve">
          <source>If the value</source>
          <target state="translated">Si el valor</target>
        </trans-unit>
        <trans-unit id="1676523b419ae746e43ad6553d2687aea42c504e" translate="yes" xml:space="preserve">
          <source>If the value doesn't match the 'make' program you want to use, edit Config.pm to fix it.</source>
          <target state="translated">Si el valor no coincide con el programa 'make' que quieres usar,edita Config.pm para arreglarlo.</target>
        </trans-unit>
        <trans-unit id="9aa86f4743abc7079a416abc9073771271ff4394" translate="yes" xml:space="preserve">
          <source>If the value is &amp;lt;= &lt;code&gt;UV_MAX&lt;/code&gt; it is returned as a UV, the output flags are clear, and nothing is written to</source>
          <target state="translated">Si el valor es &amp;lt;= &lt;code&gt;UV_MAX&lt;/code&gt; , se devuelve como UV, los indicadores de salida est&amp;aacute;n limpios y no se escribe nada en</target>
        </trans-unit>
        <trans-unit id="69db17f26df78ff9935057c8c72522c8171dedc4" translate="yes" xml:space="preserve">
          <source>If the value is &amp;lt;= &lt;code&gt;UV_MAX&lt;/code&gt; it is returned as a UV, the output flags are clear, and nothing is written to &lt;code&gt;*result&lt;/code&gt;. If the value is &amp;gt; &lt;code&gt;UV_MAX&lt;/code&gt;, &lt;code&gt;grok_bin&lt;/code&gt; returns &lt;code&gt;UV_MAX&lt;/code&gt;, sets &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; in the output flags, and writes an approximation of the correct value into &lt;code&gt;*result&lt;/code&gt; (which is an NV; or the approximation is discarded if &lt;code&gt;result&lt;/code&gt; is NULL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33edf1191e45f2f7c173468860c56b9c68eec7c" translate="yes" xml:space="preserve">
          <source>If the value is &amp;lt;= &lt;code&gt;UV_MAX&lt;/code&gt; it is returned as a UV, the output flags are clear, and nothing is written to &lt;code&gt;*result&lt;/code&gt;. If the value is &amp;gt; &lt;code&gt;UV_MAX&lt;/code&gt;, &lt;code&gt;grok_hex&lt;/code&gt; returns &lt;code&gt;UV_MAX&lt;/code&gt;, sets &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; in the output flags, and writes an approximation of the correct value into &lt;code&gt;*result&lt;/code&gt; (which is an NV; or the approximation is discarded if &lt;code&gt;result&lt;/code&gt; is NULL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11949fed265c94f0f9f0cc1d3c0a3164a55a86d5" translate="yes" xml:space="preserve">
          <source>If the value is &amp;lt;= &lt;code&gt;UV_MAX&lt;/code&gt; it is returned as a UV, the output flags are clear, and nothing is written to &lt;code&gt;*result&lt;/code&gt;. If the value is &amp;gt; &lt;code&gt;UV_MAX&lt;/code&gt;, &lt;code&gt;grok_oct&lt;/code&gt; returns &lt;code&gt;UV_MAX&lt;/code&gt;, sets &lt;code&gt;PERL_SCAN_GREATER_THAN_UV_MAX&lt;/code&gt; in the output flags, and writes an approximation of the correct value into &lt;code&gt;*result&lt;/code&gt; (which is an NV; or the approximation is discarded if &lt;code&gt;result&lt;/code&gt; is NULL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd15952acdcd265d4f18a816b3be548c37a82d83" translate="yes" xml:space="preserve">
          <source>If the value is &amp;lt;= UV_MAX it is returned as a UV, the output flags are clear, and nothing is written to</source>
          <target state="translated">Si el valor es &amp;lt;= UV_MAX, se devuelve como UV, los indicadores de salida est&amp;aacute;n limpios y no se escribe nada en</target>
        </trans-unit>
        <trans-unit id="c10d8690679793d91d603d7249997075229bffed" translate="yes" xml:space="preserve">
          <source>If the value is a coderef, we return &amp;amp;$value($lh, ...parameters...).</source>
          <target state="translated">Si el valor es un coderef, devolvemos &amp;amp; $ value ($ lh, ... par&amp;aacute;metros ...).</target>
        </trans-unit>
        <trans-unit id="ef50a320b2209faad43a3f8213d92ea4b618e424" translate="yes" xml:space="preserve">
          <source>If the value is a scalarref, the scalar is dereferenced and returned (and any parameters are ignored).</source>
          <target state="translated">Si el valor es un escalar,el escalar se desreferencia y se devuelve (y se ignoran los parámetros).</target>
        </trans-unit>
        <trans-unit id="6f950a468109b8d39520112d3f58effdc56407fc" translate="yes" xml:space="preserve">
          <source>If the value is a string that</source>
          <target state="translated">Si el valor es una cadena que</target>
        </trans-unit>
        <trans-unit id="034aa5dfb1d3fc388ace8815e3c3af316b7fe0f0" translate="yes" xml:space="preserve">
          <source>If the value is true, then the appropriate pragma is assumed to be in the ambient scope, otherwise not.</source>
          <target state="translated">Si el valor es cierto,entonces se supone que el pragmatismo apropiado está en el ámbito ambiental,de lo contrario no.</target>
        </trans-unit>
        <trans-unit id="c4b0ded1a1deef22b5fab46f3c6efeda2921b5b8" translate="yes" xml:space="preserve">
          <source>If the value of</source>
          <target state="translated">Si el valor de</target>
        </trans-unit>
        <trans-unit id="3679a65190bd3883b712c84ff2c3ed51da02c8c9" translate="yes" xml:space="preserve">
          <source>If the value of the number can fit in a UV, it is returned in &lt;code&gt;*valuep&lt;/code&gt;. &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; will be set to indicate that &lt;code&gt;*valuep&lt;/code&gt; is valid, &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; will never be set unless &lt;code&gt;*valuep&lt;/code&gt; is valid, but &lt;code&gt;*valuep&lt;/code&gt; may have been assigned to during processing even though &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; is not set on return. If &lt;code&gt;valuep&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;IS_NUMBER_IN_UV&lt;/code&gt; will be set for the same cases as when &lt;code&gt;valuep&lt;/code&gt; is non-&lt;code&gt;NULL&lt;/code&gt;, but no actual assignment (or SEGV) will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3799e4ea2da2d340ca2beed8a5872250c216eb41" translate="yes" xml:space="preserve">
          <source>If the value of the number can fit in a UV, it is returned in the *valuep IS_NUMBER_IN_UV will be set to indicate that *valuep is valid, IS_NUMBER_IN_UV will never be set unless *valuep is valid, but *valuep may have been assigned to during processing even though IS_NUMBER_IN_UV is not set on return. If valuep is NULL, IS_NUMBER_IN_UV will be set for the same cases as when valuep is non-NULL, but no actual assignment (or SEGV) will occur.</source>
          <target state="translated">Si el valor del número puede caber en un UV,se devuelve en el *valorep IS_NUMBER_IN_UV se fijará para indicar que *valorep es válido,IS_NUMBER_IN_UV nunca se fijará a menos que *valorep sea válido,pero *valorep puede haber sido asignado durante el procesamiento aunque IS_NUMBER_IN_UV no se fije en el retorno.Si el valorep es NULL,IS_NUMBER_IN_UV se fijará para los mismos casos que cuando el valorep no es NULLL,pero no se producirá ninguna asignación real (o SEGV).</target>
        </trans-unit>
        <trans-unit id="d417792987cefdc8fbbad820c7047930346b40c5" translate="yes" xml:space="preserve">
          <source>If the value to pack is too long, the result is truncated. If it's too long and an explicit count is provided, &lt;code&gt;Z&lt;/code&gt; packs only &lt;code&gt;$count-1&lt;/code&gt; bytes, followed by a null byte. Thus &lt;code&gt;Z&lt;/code&gt; always packs a trailing null, except when the count is 0.</source>
          <target state="translated">Si el valor para empaquetar es demasiado largo, el resultado se trunca. Si es demasiado largo y se proporciona un recuento expl&amp;iacute;cito, &lt;code&gt;Z&lt;/code&gt; empaqueta solo &lt;code&gt;$count-1&lt;/code&gt; bytes, seguido de un byte nulo. Por lo tanto, &lt;code&gt;Z&lt;/code&gt; siempre incluye un nulo final, excepto cuando el recuento es 0.</target>
        </trans-unit>
        <trans-unit id="2b18faee7915986e7efaa1de04f931c2b8c71f1c" translate="yes" xml:space="preserve">
          <source>If the values are all small integers, you could use a simple indexed array. This kind of an array will take up less space:</source>
          <target state="translated">Si los valores son todos números enteros pequeños,podrías usar una simple matriz indexada.Este tipo de matriz ocupará menos espacio:</target>
        </trans-unit>
        <trans-unit id="5cc9e16e91b4a8896cd9faaa5f9549cbc7085c8f" translate="yes" xml:space="preserve">
          <source>If the values in question are integers instead of strings, you can save quite a lot of space by using bit strings instead:</source>
          <target state="translated">Si los valores en cuestión son enteros en lugar de cadenas,se puede ahorrar bastante espacio utilizando cadenas de bits en su lugar:</target>
        </trans-unit>
        <trans-unit id="82319500e10e873dfa0526d703945d89b55231f8" translate="yes" xml:space="preserve">
          <source>If the values of &lt;code&gt;$mod&lt;/code&gt; and &lt;code&gt;$prereq&lt;/code&gt; have not been scrubbed, however, this presents security implications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e7da39372f108fea1077e432f6f8a5490ef1c9" translate="yes" xml:space="preserve">
          <source>If the variable is locked by another thread, the &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; call will block until it's available. &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; is recursive, so multiple calls to &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; are safe--the variable will remain locked until the outermost lock on the variable goes out of scope.</source>
          <target state="translated">Si la variable est&amp;aacute; bloqueada por otro hilo, la llamada de &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; se bloquear&amp;aacute; hasta que est&amp;eacute; disponible. &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; es recursivo, por lo que varias llamadas a &lt;code&gt;&lt;a href=&quot;functions/lock&quot;&gt;lock&lt;/a&gt;&lt;/code&gt; son seguras: la variable permanecer&amp;aacute; bloqueada hasta que el bloqueo m&amp;aacute;s externo de la variable quede fuera de alcance.</target>
        </trans-unit>
        <trans-unit id="d43da14411193cb05153c9413f27d1e7c410d9b1" translate="yes" xml:space="preserve">
          <source>If the variable is locked by another thread, the &lt;code&gt;lock&lt;/code&gt; call will block until it's available. &lt;code&gt;lock&lt;/code&gt; is recursive, so multiple calls to &lt;code&gt;lock&lt;/code&gt; are safe--the variable will remain locked until the outermost lock on the variable goes out of scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a274850c71686d34e3baa803737f0dedda24d3" translate="yes" xml:space="preserve">
          <source>If the variable is not set, or if the head of space-separated list is empty, the best available package is loaded.</source>
          <target state="translated">Si la variable no está fijada,o si el encabezado de la lista separada del espacio está vacío,se carga el mejor paquete disponible.</target>
        </trans-unit>
        <trans-unit id="332df1267de6f0a87c793832b4c5597a101a667d" translate="yes" xml:space="preserve">
          <source>If the warning comes from other than I/O, this diagnostic probably indicates that incorrect results are being obtained. You should examine your code to determine how a wide character is getting to an operation that doesn't handle them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b83d018cb7a8db8be65fb54c56d8b5b7e8cb24" translate="yes" xml:space="preserve">
          <source>If the warnings category, &lt;code&gt;$category&lt;/code&gt; , has been set to &quot;FATAL&quot; in the calling module then die. Otherwise return.</source>
          <target state="translated">Si la categor&amp;iacute;a de advertencias, &lt;code&gt;$category&lt;/code&gt; , se ha establecido en &quot;FATAL&quot; en el m&amp;oacute;dulo de llamada, muere. De lo contrario, regrese.</target>
        </trans-unit>
        <trans-unit id="834ab1c45a3f45ffae4b5d0f33ce4babb0604bab" translate="yes" xml:space="preserve">
          <source>If the warnings category, &lt;code&gt;$category&lt;/code&gt;, has been set to &quot;FATAL&quot; in the calling module then die. Otherwise return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e41570d4b0ba06d69d1ed0ddaa70c09dffea4d" translate="yes" xml:space="preserve">
          <source>If the whole program is Unicode (signified by using 8-bit &lt;b&gt;U&lt;/b&gt;nicode &lt;b&gt;T&lt;/b&gt;ransformation &lt;b&gt;F&lt;/b&gt;ormat), then all literal strings within it must be Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de09cf9a89a26f0cb448619847689ec2527d3db" translate="yes" xml:space="preserve">
          <source>If the whole program is Unicode (signified by using 8-bit &lt;b&gt;U&lt;/b&gt;nicode &lt;b&gt;T&lt;/b&gt;ransformation &lt;b&gt;F&lt;/b&gt;ormat), then all strings within it must be Unicode.</source>
          <target state="translated">Si todo el programa es Unicode (representado mediante el uso de 8 bits &lt;b&gt;T&lt;/b&gt; nicode &lt;b&gt;T&lt;/b&gt; ransformaci&amp;oacute;n &lt;b&gt;F&lt;/b&gt; ormato), a continuaci&amp;oacute;n, todas las cadenas dentro de ella deben ser Unicode.</target>
        </trans-unit>
        <trans-unit id="9cdf7f58b72ea89ccbb496e2eb6b9b4bc7fadaa5" translate="yes" xml:space="preserve">
          <source>If the word &lt;code&gt;while&lt;/code&gt; is replaced by the word &lt;code&gt;until&lt;/code&gt; , the sense of the test is reversed, but the conditional is still tested before the first iteration.</source>
          <target state="translated">Si la palabra &lt;code&gt;while&lt;/code&gt; se reemplaza por la palabra &lt;code&gt;until&lt;/code&gt; , el sentido de la prueba se invierte, pero el condicional a&amp;uacute;n se prueba antes de la primera iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bb24c8d0dff7253263fabb1012737a1c5185daa5" translate="yes" xml:space="preserve">
          <source>If the word &lt;code&gt;while&lt;/code&gt; is replaced by the word &lt;code&gt;until&lt;/code&gt;, the sense of the test is reversed, but the conditional is still tested before the first iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10166029e96e7fe67231308fbe3c16515584c847" translate="yes" xml:space="preserve">
          <source>If there are additional casing rules that apply only in certain locales, an additional key for each will be defined in the returned hash. Each such key will be its locale name, defined as a 2-letter ISO 3166 country code, possibly followed by a &quot;_&quot; and a 2-letter ISO language code (possibly followed by a &quot;_&quot; and a variant code). You can find the lists of all possible locales, see &lt;a href=&quot;../locale/country&quot;&gt;Locale::Country&lt;/a&gt; and &lt;a href=&quot;../locale/language&quot;&gt;Locale::Language&lt;/a&gt;. (In Unicode 6.0, the only locales returned by this function are &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;az&lt;/code&gt; .)</source>
          <target state="translated">Si hay reglas de may&amp;uacute;sculas y min&amp;uacute;sculas adicionales que se aplican solo en ciertas configuraciones regionales, se definir&amp;aacute; una clave adicional para cada una en el hash devuelto. Cada una de estas claves ser&amp;aacute; su nombre de configuraci&amp;oacute;n regional, definido como un c&amp;oacute;digo de pa&amp;iacute;s ISO 3166 de 2 letras, posiblemente seguido de un &quot;_&quot; y un c&amp;oacute;digo de idioma ISO de 2 letras (posiblemente seguido de un &quot;_&quot; y un c&amp;oacute;digo de variante). Puede encontrar las listas de todas las configuraciones &lt;a href=&quot;../locale/country&quot;&gt;regionales&lt;/a&gt; posibles, consulte Locale :: Country y &lt;a href=&quot;../locale/language&quot;&gt;Locale :: Language&lt;/a&gt; . (En Unicode 6.0, las &amp;uacute;nicas configuraciones regionales devueltas por esta funci&amp;oacute;n son &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;az&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="c9b92a1c0c95f09069f2ada78514b6761e600855" translate="yes" xml:space="preserve">
          <source>If there are additional casing rules that apply only in certain locales, an additional key for each will be defined in the returned hash. Each such key will be its locale name, defined as a 2-letter ISO 3166 country code, possibly followed by a &quot;_&quot; and a 2-letter ISO language code (possibly followed by a &quot;_&quot; and a variant code). You can find the lists of all possible locales, see &lt;a href=&quot;Locale::Country&quot;&gt;Locale::Country&lt;/a&gt; and &lt;a href=&quot;Locale::Language&quot;&gt;Locale::Language&lt;/a&gt;. (In Unicode 6.0, the only locales returned by this function are &lt;code&gt;lt&lt;/code&gt;, &lt;code&gt;tr&lt;/code&gt;, and &lt;code&gt;az&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10187abc55d0802b4b3951872dffe3ad9dfa823c" translate="yes" xml:space="preserve">
          <source>If there are fewer than &lt;code&gt;$count&lt;/code&gt; items in the list then the function will return once all of them have been randomly selected; effectively the function behaves similarly to &lt;a href=&quot;#shuffle&quot;&gt;&quot;shuffle&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91a8fd751937bd233ccdf982bb8140e1a1456b2" translate="yes" xml:space="preserve">
          <source>If there are more pack codes or if the repeat count of a field or a group is larger than what the remainder of the input string allows, the result is not well defined: the repeat count may be decreased, or &lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt; may produce empty strings or zeros, or it may raise an exception. If the input string is longer than one described by the TEMPLATE, the remainder of that input string is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c264a98231858c182cc8e558543c798b7c30e957" translate="yes" xml:space="preserve">
          <source>If there are more pack codes or if the repeat count of a field or a group is larger than what the remainder of the input string allows, the result is not well defined: the repeat count may be decreased, or &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; may produce empty strings or zeros, or it may raise an exception. If the input string is longer than one described by the TEMPLATE, the remainder of that input string is ignored.</source>
          <target state="translated">Si hay m&amp;aacute;s c&amp;oacute;digos de paquete o si el recuento de repeticiones de un campo o grupo es mayor de lo que permite el resto de la cadena de entrada, el resultado no est&amp;aacute; bien definido: el recuento de repeticiones puede disminuir o &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; puede producir un vac&amp;iacute;o cadenas o ceros, o puede generar una excepci&amp;oacute;n. Si la cadena de entrada es m&amp;aacute;s larga que la descrita por la PLANTILLA, el resto de esa cadena de entrada se ignora.</target>
        </trans-unit>
        <trans-unit id="b76f7ceb246d4c2d7fabcbfce30f4b0cda04fc65" translate="yes" xml:space="preserve">
          <source>If there are more pack codes or if the repeat count of a field or a group is larger than what the remainder of the input string allows, the result is not well defined: the repeat count may be decreased, or &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; may produce empty strings or zeros, or it may raise an exception. If the input string is longer than one described by the TEMPLATE, the remainder of that input string is ignored.</source>
          <target state="translated">Si hay m&amp;aacute;s c&amp;oacute;digos de paquete o si el recuento de repeticiones de un campo o grupo es mayor de lo que permite el resto de la cadena de entrada, el resultado no est&amp;aacute; bien definido: el recuento de repeticiones puede disminuir o &lt;code&gt;&lt;a href=&quot;unpack&quot;&gt;unpack()&lt;/a&gt;&lt;/code&gt; puede producir un vac&amp;iacute;o cadenas o ceros, o puede generar una excepci&amp;oacute;n. Si la cadena de entrada es m&amp;aacute;s larga que la descrita por la PLANTILLA, el resto de esa cadena de entrada se ignora.</target>
        </trans-unit>
        <trans-unit id="68b83d3193021444c248ae823551b36481a4afcb" translate="yes" xml:space="preserve">
          <source>If there are multiple threads running, &lt;a href=&quot;#close-FILEHANDLE&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on a filehandle from a piped open returns true without waiting for the child process to terminate, if the filehandle is still open in another thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8ae3d8fd9e42e9aba417d2727a1cef25f1654d" translate="yes" xml:space="preserve">
          <source>If there are multiple threads running, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on a filehandle from a piped open returns true without waiting for the child process to terminate, if the filehandle is still open in another thread.</source>
          <target state="translated">Si hay varios subprocesos en ejecuci&amp;oacute;n, &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; en un identificador de archivo desde un canal abierto devuelve verdadero sin esperar a que termine el proceso hijo, si el identificador de archivo todav&amp;iacute;a est&amp;aacute; abierto en otro subproceso.</target>
        </trans-unit>
        <trans-unit id="2d703ea78c6bd312ccc4d4536374984caf742a2c" translate="yes" xml:space="preserve">
          <source>If there are multiple threads running, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on a filehandle from a piped open returns true without waiting for the child process to terminate, if the filehandle is still open in another thread.</source>
          <target state="translated">Si hay varios subprocesos en ejecuci&amp;oacute;n, &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; en un identificador de archivo desde un canal abierto devuelve verdadero sin esperar a que termine el proceso hijo, si el identificador de archivo todav&amp;iacute;a est&amp;aacute; abierto en otro subproceso.</target>
        </trans-unit>
        <trans-unit id="b367c7608072c7b2e27d64beb7fdc3ebcfc5757e" translate="yes" xml:space="preserve">
          <source>If there are no case mappings for the &lt;a href=&quot;#code-point-argument&quot;&gt;&quot;code point argument&quot;&lt;/a&gt;, or if all three possible mappings (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ca3b8e4b7d3fd6327a3431ba332cb4654544b7" translate="yes" xml:space="preserve">
          <source>If there are no case mappings for the &lt;a href=&quot;#code-point-argument&quot;&gt;code point argument&lt;/a&gt;, or if all three possible mappings (</source>
          <target state="translated">Si no hay asignaciones de may&amp;uacute;sculas y min&amp;uacute;sculas para el &lt;a href=&quot;#code-point-argument&quot;&gt;argumento del punto de c&amp;oacute;digo&lt;/a&gt; , o si las tres asignaciones posibles (</target>
        </trans-unit>
        <trans-unit id="4d288bab40c0346d55a3c0eb77940eab7a6641ad" translate="yes" xml:space="preserve">
          <source>If there are no shell metacharacters in the argument of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;, Perl runs the command directly, without using the shell, and can correctly report whether the command started.</source>
          <target state="translated">Si no hay metacaracteres de shell en el argumento de &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; , Perl ejecuta el comando directamente, sin usar el shell, y puede informar correctamente si el comando se inici&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="07b923cdb7f2db79984c43279c6e1908fa7560e3" translate="yes" xml:space="preserve">
          <source>If there are no shell metacharacters in the argument of &lt;code&gt;open()&lt;/code&gt;, Perl runs the command directly, without using the shell, and can correctly report whether the command started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b3c9dc933e2482f8eba281e591135e3899389e" translate="yes" xml:space="preserve">
          <source>If there are no threads blocked in a &lt;code&gt;cond_wait&lt;/code&gt; on the variable, the signal is discarded.</source>
          <target state="translated">Si no hay subprocesos bloqueados en un &lt;code&gt;cond_wait&lt;/code&gt; en la variable, la se&amp;ntilde;al se descarta.</target>
        </trans-unit>
        <trans-unit id="dcf5c5ee7e0424ea7ada5c7826f4b90fdb2a116c" translate="yes" xml:space="preserve">
          <source>If there are no threads blocked in a &lt;code&gt;cond_wait&lt;/code&gt; on the variable, the signal is discarded. By always locking before signaling, you can (with care), avoid signaling before another thread has entered cond_wait().</source>
          <target state="translated">Si no hay subprocesos bloqueados en un &lt;code&gt;cond_wait&lt;/code&gt; en la variable, la se&amp;ntilde;al se descarta. Al bloquear siempre antes de la se&amp;ntilde;alizaci&amp;oacute;n, puede (con cuidado) evitar la se&amp;ntilde;alizaci&amp;oacute;n antes de que otro hilo haya entrado en cond_wait ().</target>
        </trans-unit>
        <trans-unit id="a5de19948908467a5a983001d47b7d9a0689b746" translate="yes" xml:space="preserve">
          <source>If there are no valid digits between the braces, the generated character is the NULL character (&lt;code&gt;\x{00}&lt;/code&gt; ). However, an explicit empty brace (&lt;code&gt;\x{}&lt;/code&gt; ) will not cause a warning (currently).</source>
          <target state="translated">Si no hay d&amp;iacute;gitos v&amp;aacute;lidos entre llaves, el car&amp;aacute;cter generado es el car&amp;aacute;cter NULO ( &lt;code&gt;\x{00}&lt;/code&gt; ). Sin embargo, una llave vac&amp;iacute;a expl&amp;iacute;cita ( &lt;code&gt;\x{}&lt;/code&gt; ) no provocar&amp;aacute; una advertencia (actualmente).</target>
        </trans-unit>
        <trans-unit id="954b2d334088acf7ff9ea75b92d63622f7bf51c0" translate="yes" xml:space="preserve">
          <source>If there are no valid digits between the braces, the generated character is the NULL character (&lt;code&gt;\x{00}&lt;/code&gt;). However, an explicit empty brace (&lt;code&gt;\x{}&lt;/code&gt;) will not cause a warning (currently).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b342c6d59112da790e47e12118a22cde8dbcaf22" translate="yes" xml:space="preserve">
          <source>If there are only a few field hashes to declare, it is simplest to</source>
          <target state="translated">Si sólo hay unos pocos campos que declarar,lo más sencillo es</target>
        </trans-unit>
        <trans-unit id="ae8e9a2c571cd018342d9c2118caec048fd77da4" translate="yes" xml:space="preserve">
          <source>If there are only three arguments and the third argument is a hash reference, the keys of that hash can have values &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;fold&lt;/code&gt; , and &lt;code&gt;comp&lt;/code&gt; or &lt;code&gt;xfrm&lt;/code&gt; (see below), and their corresponding values will be used as the parameters.</source>
          <target state="translated">Si solo hay tres argumentos y el tercer argumento es una referencia hash, las claves de ese hash pueden tener valores &lt;code&gt;dict&lt;/code&gt; , &lt;code&gt;fold&lt;/code&gt; y &lt;code&gt;comp&lt;/code&gt; o &lt;code&gt;xfrm&lt;/code&gt; (ver m&amp;aacute;s abajo), y sus valores correspondientes se usar&amp;aacute;n como par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="e81956a0441efe3f26746423f2c17c9cee5f29f4" translate="yes" xml:space="preserve">
          <source>If there are only three arguments and the third argument is a hash reference, the keys of that hash can have values &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;fold&lt;/code&gt;, and &lt;code&gt;comp&lt;/code&gt; or &lt;code&gt;xfrm&lt;/code&gt; (see below), and their corresponding values will be used as the parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e86b013905dd12651149e8ec83c3ae6cf6c6b73" translate="yes" xml:space="preserve">
          <source>If there are two modules using &lt;code&gt;FindBin&lt;/code&gt; from different directories under the same interpreter, this won't work. Since &lt;code&gt;FindBin&lt;/code&gt; uses a &lt;code&gt;BEGIN&lt;/code&gt; block, it'll be executed only once, and only the first caller will get it right. This is a problem under mod_perl and other persistent Perl environments, where you shouldn't use this module. Which also means that you should avoid using &lt;code&gt;FindBin&lt;/code&gt; in modules that you plan to put on CPAN. To make sure that &lt;code&gt;FindBin&lt;/code&gt; will work is to call the &lt;code&gt;again&lt;/code&gt; function:</source>
          <target state="translated">Si hay dos m&amp;oacute;dulos que usan &lt;code&gt;FindBin&lt;/code&gt; de diferentes directorios bajo el mismo int&amp;eacute;rprete, esto no funcionar&amp;aacute;. Dado que &lt;code&gt;FindBin&lt;/code&gt; usa un bloque &lt;code&gt;BEGIN&lt;/code&gt; , se ejecutar&amp;aacute; solo una vez, y solo la primera persona que llame lo har&amp;aacute; bien. Este es un problema en mod_perl y otros entornos de Perl persistentes, donde no deber&amp;iacute;a usar este m&amp;oacute;dulo. Lo que tambi&amp;eacute;n significa que debe evitar usar &lt;code&gt;FindBin&lt;/code&gt; en m&amp;oacute;dulos que planea poner en CPAN. Para asegurarse de que &lt;code&gt;FindBin&lt;/code&gt; funcione es llamar a la funci&amp;oacute;n de &lt;code&gt;again&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fcc3c3e2760c5e396f33222005be848fc9fe18e0" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; BLOCK, it is always executed just before the conditional is about to be evaluated again. Thus it can be used to increment a loop variable, even when the loop has been continued via the &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; statement.</source>
          <target state="translated">Si hay un BLOQUE &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; , siempre se ejecuta justo antes de que el condicional est&amp;eacute; a punto de ser evaluado nuevamente. Por lo tanto, puede usarse para incrementar una variable de ciclo, incluso cuando el ciclo ha continuado mediante la &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; instrucci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="47225f2cbf093a41e464bfd235d898451ab3fec3" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;continue&lt;/code&gt; BLOCK, it is always executed just before the conditional is about to be evaluated again. Thus it can be used to increment a loop variable, even when the loop has been continued via the &lt;code&gt;next&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b36be5061281671022cf399b379651681b1d4d0" translate="yes" xml:space="preserve">
          <source>If there is a case folding for that code point, a reference to a hash with the following fields is returned:</source>
          <target state="translated">Si hay un caso que se pliega para ese punto de código,se devuelve una referencia a un hash con los siguientes campos:</target>
        </trans-unit>
        <trans-unit id="791dad5bf77a3c7753599734b55d1d951806d6b3" translate="yes" xml:space="preserve">
          <source>If there is a possibility of malformed input, use instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6424bf8b1f44f30e366f5038ca9bafadec447990" translate="yes" xml:space="preserve">
          <source>If there is a read or write timeout &lt;code&gt;code()&lt;/code&gt; will return &quot;421&quot; (temporary connection failure) and &lt;code&gt;message()&lt;/code&gt; will return &quot;[$pkg] Timeout&quot; (where $pkg is the name of the class that subclassed &lt;code&gt;Net::Cmd&lt;/code&gt; ). The _set_status_timeout() method can be overridden to set a different message (by calling set_status()) or otherwise trap this error.</source>
          <target state="translated">Si hay un &lt;code&gt;code()&lt;/code&gt; tiempo de espera de lectura o escritura () devolver&amp;aacute; &quot;421&quot; (falla de conexi&amp;oacute;n temporal) y el &lt;code&gt;message()&lt;/code&gt; devolver&amp;aacute; &quot;[$ pkg] Timeout&quot; (donde $ pkg es el nombre de la clase que subclasific&amp;oacute; &lt;code&gt;Net::Cmd&lt;/code&gt; ). El m&amp;eacute;todo _set_status_timeout () se puede anular para establecer un mensaje diferente (llamando a set_status ()) o capturar este error.</target>
        </trans-unit>
        <trans-unit id="5c5ddbe053c3383dcb2da814550e984622b561fa" translate="yes" xml:space="preserve">
          <source>If there is a read or write timeout &lt;code&gt;code()&lt;/code&gt; will return &quot;421&quot; (temporary connection failure) and &lt;code&gt;message()&lt;/code&gt; will return &quot;[$pkg] Timeout&quot; (where $pkg is the name of the class that subclassed &lt;code&gt;Net::Cmd&lt;/code&gt;). The _set_status_timeout() method can be overridden to set a different message (by calling set_status()) or otherwise trap this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a08eec9ef05dccf9a00729a1af45acee83fa1a4" translate="yes" xml:space="preserve">
          <source>If there is a syntax error or runtime error, or a &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; statement is executed, &lt;code&gt;eval&lt;/code&gt; returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; in scalar context, or an empty list in list context, and &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt; is set to the error message. (Prior to 5.16, a bug caused &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; to be returned in list context for syntax errors, but not for runtime errors.) If there was no error, &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt; is set to the empty string. A control flow operator like &lt;a href=&quot;#last-LABEL&quot;&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#goto-LABEL&quot;&gt;&lt;code&gt;goto&lt;/code&gt;&lt;/a&gt; can bypass the setting of &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt;. Beware that using &lt;code&gt;eval&lt;/code&gt; neither silences Perl from printing warnings to STDERR, nor does it stuff the text of warning messages into &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt;. To do either of those, you have to use the &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;$SIG{__WARN__}&lt;/code&gt;&lt;/a&gt; facility, or turn off warnings inside the BLOCK or EXPR using &lt;code&gt;no warnings 'all'&lt;/code&gt;. See &lt;a href=&quot;#warn-LIST&quot;&gt;&lt;code&gt;warn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;, and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11aba41a92baa1006f7ccfb764892fd564d365da" translate="yes" xml:space="preserve">
          <source>If there is a syntax error or runtime error, or a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; statement is executed, &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in scalar context or an empty list in list context, and &lt;code&gt;$@&lt;/code&gt; is set to the error message. (Prior to 5.16, a bug caused &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to be returned in list context for syntax errors, but not for runtime errors.) If there was no error, &lt;code&gt;$@&lt;/code&gt; is set to the empty string. A control flow operator like &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; can bypass the setting of &lt;code&gt;$@&lt;/code&gt; . Beware that using &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; neither silences Perl from printing warnings to STDERR, nor does it stuff the text of warning messages into &lt;code&gt;$@&lt;/code&gt; . To do either of those, you have to use the &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; facility, or turn off warnings inside the BLOCK or EXPR using &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; . See &lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;, &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;, and &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Si hay un error de sintaxis o de tiempo de ejecuci&amp;oacute;n, o se ejecuta una sentencia &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en contexto escalar o una lista vac&amp;iacute;a en contexto de lista, y &lt;code&gt;$@&lt;/code&gt; se establece en el mensaje de error. (Antes de 5.16, un error provocaba que se devolviera &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en el contexto de lista para errores de sintaxis, pero no para errores de tiempo de ejecuci&amp;oacute;n). Si no hab&amp;iacute;a ning&amp;uacute;n error, &lt;code&gt;$@&lt;/code&gt; se establece en la cadena vac&amp;iacute;a. Un operador de control de flujo como &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; puede omitir la configuraci&amp;oacute;n de &lt;code&gt;$@&lt;/code&gt; . Tenga en cuenta que el uso de &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; no evita que Perl imprima advertencias en STDERR, ni rellena el texto de los mensajes de advertencia en &lt;code&gt;$@&lt;/code&gt; . Para hacer cualquiera de esos, debe usar la funci&amp;oacute;n &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; , o desactivar las advertencias dentro de BLOCK o EXPR &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; usar advertencias 'all' . Consulte &lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt; , &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; y &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebacccba519ce29c0edb6165a1d7c06041545422" translate="yes" xml:space="preserve">
          <source>If there is a syntax error or runtime error, or a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; statement is executed, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in scalar context or an empty list in list context, and &lt;code&gt;$@&lt;/code&gt; is set to the error message. (Prior to 5.16, a bug caused &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; to be returned in list context for syntax errors, but not for runtime errors.) If there was no error, &lt;code&gt;$@&lt;/code&gt; is set to the empty string. A control flow operator like &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; can bypass the setting of &lt;code&gt;$@&lt;/code&gt; . Beware that using &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; neither silences Perl from printing warnings to STDERR, nor does it stuff the text of warning messages into &lt;code&gt;$@&lt;/code&gt; . To do either of those, you have to use the &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; facility, or turn off warnings inside the BLOCK or EXPR using &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; . See &lt;a href=&quot;#warn&quot;&gt;warn&lt;/a&gt;, &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;, and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">Si hay un error de sintaxis o de tiempo de ejecuci&amp;oacute;n, o se ejecuta una sentencia &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; devuelve &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en contexto escalar o una lista vac&amp;iacute;a en contexto de lista, y &lt;code&gt;$@&lt;/code&gt; se establece en el mensaje de error. (Antes de 5.16, un error provocaba que se devolviera &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en el contexto de lista para errores de sintaxis, pero no para errores de tiempo de ejecuci&amp;oacute;n). Si no hab&amp;iacute;a ning&amp;uacute;n error, &lt;code&gt;$@&lt;/code&gt; se establece en la cadena vac&amp;iacute;a. Un operador de control de flujo como &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; puede omitir la configuraci&amp;oacute;n de &lt;code&gt;$@&lt;/code&gt; . Tenga en cuenta que el uso de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; no evita que Perl imprima advertencias en STDERR, ni rellena el texto de los mensajes de advertencia en &lt;code&gt;$@&lt;/code&gt; . Para hacer cualquiera de esos, debe usar la funci&amp;oacute;n &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; , o desactivar las advertencias dentro de BLOCK o EXPR &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; warnings 'all'&lt;/code&gt; usar advertencias 'all' . Consulte &lt;a href=&quot;#warn&quot;&gt;warn&lt;/a&gt; , &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; y &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0363f8d22dbc9b336b291dea3342e0d06c042240" translate="yes" xml:space="preserve">
          <source>If there is already a subroutine of the specified name, then the new sub will either replace the existing one in the glob or be merged with the existing one. A warning may be generated about redefinition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f502d2c87f9e6854805c11486fbe0df87ab65e99" translate="yes" xml:space="preserve">
          <source>If there is already a subroutine of the specified name, then the new sub will replace the existing one in the glob. A warning may be generated about the redefinition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b62d67db30c0ed8a724a981f3cdb26a57d7bac9" translate="yes" xml:space="preserve">
          <source>If there is already a subroutine of the specified name, then the new sub will replace the existing one in the glob. A warning may be generated about the redefinition. If the old subroutine was &lt;code&gt;CvCONST&lt;/code&gt; then the decision about whether to warn is influenced by an expectation about whether the new subroutine will become a constant of similar value. That expectation is determined by &lt;code&gt;const_svp&lt;/code&gt;. (Note that the call to this function doesn't make the new subroutine &lt;code&gt;CvCONST&lt;/code&gt; in any case; that is left to the caller.) If &lt;code&gt;const_svp&lt;/code&gt; is null then it indicates that the new subroutine will not become a constant. If &lt;code&gt;const_svp&lt;/code&gt; is non-null then it indicates that the new subroutine will become a constant, and it points to an &lt;code&gt;SV*&lt;/code&gt; that provides the constant value that the subroutine will have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5466934b0ce09952bbdf7a873d8e98baf5e63870" translate="yes" xml:space="preserve">
          <source>If there is an error then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">Si hay un error, se &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b85ca592364b34a60190d51f6450258a4cd0c81b" translate="yes" xml:space="preserve">
          <source>If there is an error then &lt;code&gt;undef&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467d2ed550f37bc1b9fda912fd43e11ff12b4118" translate="yes" xml:space="preserve">
          <source>If there is any question about whether a given patch might merit inclusion in a maint release, then it almost certainly should not be included.</source>
          <target state="translated">Si hay alguna duda sobre si un parche determinado puede merecer ser incluido en una liberación de mantenimiento,entonces casi seguro que no debe ser incluido.</target>
        </trans-unit>
        <trans-unit id="ca419a7d4011e71c524719322dfff4afd6d50991" translate="yes" xml:space="preserve">
          <source>If there is more than one argument in LIST, this calls &lt;a href=&quot;http://man.he.net/man3/execvp&quot;&gt;execvp(3)&lt;/a&gt; with the arguments in LIST. If there is only one element in LIST, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt;, which is more efficient. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8376c45472eeb9e97a43b3d977d663509a5686" translate="yes" xml:space="preserve">
          <source>If there is more than one argument in LIST, this calls execvp(3) with the arguments in LIST. If there is only one element in LIST, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. Examples:</source>
          <target state="translated">Si hay m&amp;aacute;s de un argumento en LIST, esto llama a execvp (3) con los argumentos en LIST. Si solo hay un elemento en LIST, se verifica el argumento en busca de metacaracteres de shell, y si hay alguno, el argumento completo se pasa al shell de comandos del sistema para su an&amp;aacute;lisis (esto es &lt;code&gt;/bin/sh -c&lt;/code&gt; en plataformas Unix, pero var&amp;iacute;a en otras plataformas). Si no hay metacaracteres de shell en el argumento, se divide en palabras y se pasa directamente a &lt;code&gt;execvp&lt;/code&gt; , que es m&amp;aacute;s eficiente. Ejemplos:</target>
        </trans-unit>
        <trans-unit id="2594b97a91aa3fa79863d35058be1a8172ac679a" translate="yes" xml:space="preserve">
          <source>If there is no</source>
          <target state="translated">Si no hay</target>
        </trans-unit>
        <trans-unit id="836d7eec1f71c6b6f4181b3811b03cbac0e80430" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;\E&lt;/code&gt; , case is converted until the end of the string. The regexps &lt;code&gt;\L\u$word&lt;/code&gt; or &lt;code&gt;\u\L$word&lt;/code&gt; convert the first character of &lt;code&gt;$word&lt;/code&gt; to uppercase and the rest of the characters to lowercase.</source>
          <target state="translated">Si no hay &lt;code&gt;\E&lt;/code&gt; , el caso se convierte hasta el final de la cadena. Las expresiones regulares &lt;code&gt;\L\u$word&lt;/code&gt; o &lt;code&gt;\u\L$word&lt;/code&gt; convierten el primer car&amp;aacute;cter de &lt;code&gt;$word&lt;/code&gt; a may&amp;uacute;sculas y el resto de caracteres a min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="f1b2b91591fb1955a250148f5d6f9f32438d8436" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;\E&lt;/code&gt;, case is converted until the end of the string. The regexps &lt;code&gt;\L\u$word&lt;/code&gt; or &lt;code&gt;\u\L$word&lt;/code&gt; convert the first character of &lt;code&gt;$word&lt;/code&gt; to uppercase and the rest of the characters to lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73d7b3af9d178254858949bc270c269c6e2e60d" translate="yes" xml:space="preserve">
          <source>If there is no INSTALL.SKIP file in the make directory then this value can be used to provide a default.</source>
          <target state="translated">Si no hay un archivo INSTALL.SKIP en el directorio make,entonces este valor puede ser usado para proporcionar un valor por defecto.</target>
        </trans-unit>
        <trans-unit id="3610af61096f12f4c9e6f52b35a24b772a2c16bd" translate="yes" xml:space="preserve">
          <source>If there is no Pod in the given document, then the event structure will be this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349639462c1781c6c7203933948097f1b032dbf1" translate="yes" xml:space="preserve">
          <source>If there is no case folding for the input code point, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Si no hay plegado de may&amp;uacute;sculas y min&amp;uacute;sculas para el punto de c&amp;oacute;digo de entrada, se devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fb296c4463c79fc259188fecb37636b958c8768" translate="yes" xml:space="preserve">
          <source>If there is no case folding for the input code point, &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a8d9cc6cec6caebf969b32884584509dabbda2" translate="yes" xml:space="preserve">
          <source>If there is no corresponding capture group defined, then it is a fatal error. Recursing deeper than 50 times without consuming any input string will also result in a fatal error. The maximum depth is compiled into perl, so changing it requires a custom build.</source>
          <target state="translated">Si no se define un grupo de captura correspondiente,entonces es un error fatal.Recurrir a más de 50 veces sin consumir ninguna cadena de entrada también resultará en un error fatal.La profundidad máxima está compilada en perl,por lo que cambiarla requiere una construcción personalizada.</target>
        </trans-unit>
        <trans-unit id="9a6e24a6b319d54eae6772ce7d4930464be16411" translate="yes" xml:space="preserve">
          <source>If there is no corresponding capture group defined, then it is a fatal error. Recursing deeply without consuming any input string will also result in a fatal error. The depth at which that happens is compiled into perl, so it can be changed with a custom build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28265c4ced5473656451fd65ecb5d6a73bdd1b4e" translate="yes" xml:space="preserve">
          <source>If there is no description, its the same as the parameter to WriteMakefile() documented in &lt;a href=&quot;ExtUtils::MakeMaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c7947682ddf8ce5897cbba5d096660017802ec" translate="yes" xml:space="preserve">
          <source>If there is no description, its the same as the parameter to WriteMakefile() documented in ExtUtils::MakeMaker.</source>
          <target state="translated">Si no hay una descripción,es lo mismo que el parámetro de WriteMakefile()documentado en ExtUtils::MakeMaker.</target>
        </trans-unit>
        <trans-unit id="9a08244ff3de5da70abd74d4f48bc9a98bd5fd63" translate="yes" xml:space="preserve">
          <source>If there is no error, then the method returns the value of the last expression evaluated, or a return statement may be used, just as with subroutines and &lt;b&gt;eval()&lt;/b&gt;. The context (list or scalar) is determined by the caller as usual.</source>
          <target state="translated">Si no hay ning&amp;uacute;n error, el m&amp;eacute;todo devuelve el valor de la &amp;uacute;ltima expresi&amp;oacute;n evaluada, o se puede usar una declaraci&amp;oacute;n de retorno, al igual que con las subrutinas y &lt;b&gt;eval ()&lt;/b&gt; . El contexto (lista o escalar) lo determina la persona que llama como de costumbre.</target>
        </trans-unit>
        <trans-unit id="9fcf9881e5055fcb38df136c867429f9722c1a7e" translate="yes" xml:space="preserve">
          <source>If there is no global precision or accuracy set, &lt;b&gt;and&lt;/b&gt; the operation in question was not called with a requested precision or accuracy, &lt;b&gt;and&lt;/b&gt; the input $x has no accuracy or precision set, then a fallback parameter will be used. For historical reasons, it is called &lt;code&gt;div_scale&lt;/code&gt; and can be accessed via:</source>
          <target state="translated">Si no hay una precisi&amp;oacute;n global o un conjunto de precisi&amp;oacute;n, &lt;b&gt;y&lt;/b&gt; la operaci&amp;oacute;n en cuesti&amp;oacute;n no se llam&amp;oacute; con la precisi&amp;oacute;n o exactitud solicitada, &lt;b&gt;y&lt;/b&gt; la entrada $ x no tiene exactitud o un conjunto de precisi&amp;oacute;n, se utilizar&amp;aacute; un par&amp;aacute;metro de reserva. Por razones hist&amp;oacute;ricas, se llama &lt;code&gt;div_scale&lt;/code&gt; y se puede acceder a trav&amp;eacute;s de:</target>
        </trans-unit>
        <trans-unit id="bbd1fd130f18a572d29a93b5834a0fdb0347ebb7" translate="yes" xml:space="preserve">
          <source>If there is no interactivity then you may still want to look at using something like &lt;a href=&quot;http://search.cpan.org/perldoc/https:#%2fmetacpan.org%2fmodule%2fTemplate&quot;&gt;Template Toolkit&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::TemplateToolkit&quot;&gt;Plack::Middleware::TemplateToolkit&lt;/a&gt; so maintenance of your HTML files (and other assets) is easier.</source>
          <target state="translated">Si no hay interactividad, es posible que desee utilizar algo como &lt;a href=&quot;http://search.cpan.org/perldoc/https:#%2fmetacpan.org%2fmodule%2fTemplate&quot;&gt;Template Toolkit&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::TemplateToolkit&quot;&gt;Plack :: Middleware :: TemplateToolkit&lt;/a&gt; para que el mantenimiento de sus archivos HTML (y otros activos) sea m&amp;aacute;s f&amp;aacute;cil.</target>
        </trans-unit>
        <trans-unit id="a299e842222c6ed90a64aa41cd2a789a3c361e2f" translate="yes" xml:space="preserve">
          <source>If there is no interactivity then you may still want to look at using something like &lt;a href=&quot;https://metacpan.org/module/Template&quot;&gt;Template Toolkit&lt;/a&gt; or &lt;a href=&quot;Plack::Middleware::TemplateToolkit&quot;&gt;Plack::Middleware::TemplateToolkit&lt;/a&gt; so maintenance of your HTML files (and other assets) is easier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd8956e9b63cae584008cf6c1bbe7cd26c8c5c5" translate="yes" xml:space="preserve">
          <source>If there is no matching entry found and there is no default defined, or no .netrc file is found, then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Si no se encuentra una entrada coincidente y no hay una definici&amp;oacute;n predeterminada, o no se encuentra un archivo &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devuelve undef .</target>
        </trans-unit>
        <trans-unit id="e6537a61412be05c76bbd6dbb9043f0a60ac95b9" translate="yes" xml:space="preserve">
          <source>If there is no matching entry found and there is no default defined, or no .netrc file is found, then &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6dfba39c8f615f2c8441ca5b61296e07f9cf19" translate="yes" xml:space="preserve">
          <source>If there is no top hub, and you do not ask to leave IPC and formatter undef, then a new formatter will be created, and the IPC instance from &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40165726268e187e7ad5a226c93cb70fb5e7ae2c" translate="yes" xml:space="preserve">
          <source>If there is only one argument and it is a reference to an array then the array is assumed to contain a list of key-value pairs specifying the options. In this case the option &quot;from_to&quot; is mandatory. This style means that you do not have to supply a cryptic list of arguments and can use a self documenting argument list that is easier to understand.</source>
          <target state="translated">Si sólo hay un argumento y se trata de una referencia a una matriz,se supone que la matriz contiene una lista de pares clave-valor que especifica las opciones.En este caso la opción &quot;de_a&quot; es obligatoria.Este estilo significa que no es necesario proporcionar una lista críptica de argumentos y que se puede utilizar una lista de argumentos autodocumentada que sea más fácil de entender.</target>
        </trans-unit>
        <trans-unit id="663e6f7ad7626839945e055f61dd00fa139292d7" translate="yes" xml:space="preserve">
          <source>If there was an error authenticating the user then</source>
          <target state="translated">Si hubo un error en la autentificación del usuario,entonces</target>
        </trans-unit>
        <trans-unit id="c4805e4afe7a0ccfe45caa54514a077972082082" translate="yes" xml:space="preserve">
          <source>If there's already an entry in &lt;code&gt;%table&lt;/code&gt; for the current &lt;code&gt;$country&lt;/code&gt; , then nothing is different. Line 6 will locate the value in &lt;code&gt;$table{$country}&lt;/code&gt; , which is a reference to an array, and push &lt;code&gt;$city&lt;/code&gt; into the array. But what does it do when &lt;code&gt;$country&lt;/code&gt; holds a key, say &lt;code&gt;Greece&lt;/code&gt; , that is not yet in &lt;code&gt;%table&lt;/code&gt; ?</source>
          <target state="translated">Si ya hay una entrada en la &lt;code&gt;%table&lt;/code&gt; para el &lt;code&gt;$country&lt;/code&gt; actual , entonces nada es diferente. La l&amp;iacute;nea 6 ubicar&amp;aacute; el valor en &lt;code&gt;$table{$country}&lt;/code&gt; , que es una referencia a una matriz, y colocar&amp;aacute; &lt;code&gt;$city&lt;/code&gt; en la matriz. Pero, &amp;iquest;qu&amp;eacute; hace cuando &lt;code&gt;$country&lt;/code&gt; tiene una clave, digamos &lt;code&gt;Greece&lt;/code&gt; , que a&amp;uacute;n no est&amp;aacute; en la &lt;code&gt;%table&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="9e3670f66abc27b9c0c1a9a3a64b0edd5b7f7779" translate="yes" xml:space="preserve">
          <source>If there's already an entry in &lt;code&gt;%table&lt;/code&gt; for the current &lt;code&gt;$country&lt;/code&gt;, then nothing is different. Line 6 will locate the value in &lt;code&gt;$table{$country}&lt;/code&gt;, which is a reference to an array, and push &lt;code&gt;$city&lt;/code&gt; into the array. But what does it do when &lt;code&gt;$country&lt;/code&gt; holds a key, say &lt;code&gt;Greece&lt;/code&gt;, that is not yet in &lt;code&gt;%table&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79b95fc8b6f0bdad9a42663607fbb6bbfce24c2" translate="yes" xml:space="preserve">
          <source>If there's no &lt;code&gt;\w&lt;/code&gt; in &lt;code&gt;s1&lt;/code&gt; nor in &lt;code&gt;s2&lt;/code&gt; , why does their concatenation have one?</source>
          <target state="translated">Si no hay &lt;code&gt;\w&lt;/code&gt; en &lt;code&gt;s1&lt;/code&gt; ni en &lt;code&gt;s2&lt;/code&gt; , &amp;iquest;por qu&amp;eacute; su concatenaci&amp;oacute;n tiene uno?</target>
        </trans-unit>
        <trans-unit id="f998e73c18ed98eef0579d8f9950627eae9eb668" translate="yes" xml:space="preserve">
          <source>If there's no &lt;code&gt;\w&lt;/code&gt; in &lt;code&gt;s1&lt;/code&gt; nor in &lt;code&gt;s2&lt;/code&gt;, why does their concatenation have one?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e887683b17f434ea92edf8b372be7bfa0a590185" translate="yes" xml:space="preserve">
          <source>If there's no handle_unknown_option, then we just warn, and then increment the error counter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d867e0a4fd4a8ea827c16a08b87197c9c461d55" translate="yes" xml:space="preserve">
          <source>If these dependent libraries are not listed at shared library creation time, you will get fatal &quot;Unresolved symbol&quot; errors at run time when the library is loaded.</source>
          <target state="translated">Si estas bibliotecas dependientes no aparecen en la lista en el momento de la creación de la biblioteca compartida,se producirán errores fatales de &quot;símbolo no resuelto&quot; en el momento de la ejecución cuando se cargue la biblioteca.</target>
        </trans-unit>
        <trans-unit id="66c4d2d6f3874b5b92940f178682f9bbdd8c1db5" translate="yes" xml:space="preserve">
          <source>If these operators are not explicitly overloaded then they work in the normal way, yielding the underlying scalar, array, or whatever stores the object data (or the appropriate error message if the dereference operator doesn't match it). Defining a catch-all &lt;code&gt;'nomethod'&lt;/code&gt; (see &lt;a href=&quot;#nomethod&quot;&gt;below&lt;/a&gt;) makes no difference to this as the catch-all function will not be called to implement a missing dereference operator.</source>
          <target state="translated">Si estos operadores no est&amp;aacute;n expl&amp;iacute;citamente sobrecargados, entonces funcionan de la manera normal, produciendo el escalar subyacente, la matriz o lo que sea que almacene los datos del objeto (o el mensaje de error apropiado si el operador de desreferencia no coincide). Definir un &lt;code&gt;'nomethod'&lt;/code&gt; catch-all (ver m&amp;aacute;s &lt;a href=&quot;#nomethod&quot;&gt;abajo&lt;/a&gt; ) no hace ninguna diferencia en esto, ya que la funci&amp;oacute;n catch-all no se llamar&amp;aacute; para implementar un operador de desreferenciaci&amp;oacute;n faltante.</target>
        </trans-unit>
        <trans-unit id="e7e81ed1aafee87e39f3bf4df7400134171b1b47" translate="yes" xml:space="preserve">
          <source>If these were ordinary paragraphs, the Pod parser would try to expand the &quot;E&amp;lt;/em&amp;gt;&quot; (in the first paragraph) as a formatting code, just like &quot;E&amp;lt;lt&amp;gt;&quot; or &quot;E&amp;lt;eacute&amp;gt;&quot;. But since this is in a &quot;=begin</source>
          <target state="translated">Si estos fueran p&amp;aacute;rrafos normales, el analizador de Pod intentar&amp;iacute;a expandir &quot;E &amp;lt;/em&amp;gt;&quot; (en el primer p&amp;aacute;rrafo) como un c&amp;oacute;digo de formato, como &quot;E &amp;lt;lt&amp;gt;&quot; o &quot;E &amp;lt;eacute&amp;gt;&quot;. Pero como esto est&amp;aacute; en &quot;= begin</target>
        </trans-unit>
        <trans-unit id="fc6b5f11ab146ad9637defe5808c195788361c30" translate="yes" xml:space="preserve">
          <source>If these weren't meant to be POSIX classes, this warning message is spurious, and can be suppressed by reordering things, such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4135dfc8a9407c20cefc1359ee43028a8d9e9a77" translate="yes" xml:space="preserve">
          <source>If they are not composable, it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si no se pueden componer, devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a6c7139e709a41aafbcb832650d6f1102386857" translate="yes" xml:space="preserve">
          <source>If they are not composable, it returns &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7928853cb29cf0ed7b6549f627a68e66710a9993" translate="yes" xml:space="preserve">
          <source>If they wanted to clobber something, they might say:</source>
          <target state="translated">Si quisieran golpear algo,podrían decir:</target>
        </trans-unit>
        <trans-unit id="005637a170229ceb4ce45f18dce99b88396f9f92" translate="yes" xml:space="preserve">
          <source>If things aren't broken, upgrading perl may break them (or at least issue new warnings).</source>
          <target state="translated">Si las cosas no están rotas,mejorar el perl puede romperlas (o al menos emitir nuevas advertencias).</target>
        </trans-unit>
        <trans-unit id="f401b770207b3e95d6e44d96ff6ad2d9bf229b05" translate="yes" xml:space="preserve">
          <source>If this attribute is set to true, the parser will not ignore empty &lt;code&gt;=over&lt;/code&gt;/&lt;code&gt;=back&lt;/code&gt; blocks. The type of &lt;code&gt;=over&lt;/code&gt; will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3184843a959ec8cbcadf6df48b4b495b6b3f78" translate="yes" xml:space="preserve">
          <source>If this behaviour is not desirable, the &lt;code&gt;error&lt;/code&gt; attribute may be used to hold a reference to a variable, which will be used to store the diagnostics. The variable is made a reference to an array of hash references. Each hash contain a single key/value pair where the key is the name of the file, and the value is the error message (including the contents of &lt;code&gt;$!&lt;/code&gt; when appropriate). If a general error is encountered the diagnostic key will be empty.</source>
          <target state="translated">Si este comportamiento no es deseable, el atributo de &lt;code&gt;error&lt;/code&gt; se puede usar para contener una referencia a una variable, que se usar&amp;aacute; para almacenar los diagn&amp;oacute;sticos. La variable se hace referencia a una matriz de referencias hash. Cada hash contiene un solo par clave / valor donde la clave es el nombre del archivo y el valor es el mensaje de error (incluido el contenido de &lt;code&gt;$!&lt;/code&gt; Cuando corresponda). Si se encuentra un error general, la clave de diagn&amp;oacute;stico estar&amp;aacute; vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="b9e80a2a00d7763bcb33166ac12286d96be2d204" translate="yes" xml:space="preserve">
          <source>If this bit is set and a file [but not a directory] named &lt;code&gt;$sNewName&lt;/code&gt; already exists, then it will be replaced by &lt;code&gt;$sOldName&lt;/code&gt;. If this bit is not set then &lt;code&gt;MoveFileEx&lt;/code&gt; will fail rather than replace an existing &lt;code&gt;$sNewName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9fb1ea3eae474e9c243073b7277960fe7cd8b7" translate="yes" xml:space="preserve">
          <source>If this bit is set, then calls to &lt;code&gt;CloseHandle&lt;/code&gt; against this handle will be ignored, leaving the handle open and usable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0ba2e4466abc8ea8b16e3596960ca402d75037" translate="yes" xml:space="preserve">
          <source>If this bit is set, then children of this process who inherit handles [that is, processes created by calls to the Win32 &lt;code&gt;CreateProcess&lt;/code&gt; API with the &lt;code&gt;bInheritHandles&lt;/code&gt; parameter specified as &lt;code&gt;TRUE&lt;/code&gt;], will inherit this particular object handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfffc413c869bcf00848584ef88629d0cba8d4b7" translate="yes" xml:space="preserve">
          <source>If this command lists any paths that don't exist on your system, then you may need to move the appropriate libraries to these locations, or create symbolic links, aliases, or shortcuts appropriately. &lt;code&gt;@INC&lt;/code&gt; is also printed as part of the output of</source>
          <target state="translated">Si este comando enumera las rutas que no existen en su sistema, es posible que deba mover las bibliotecas apropiadas a estas ubicaciones o crear enlaces simb&amp;oacute;licos, alias o accesos directos de manera apropiada. &lt;code&gt;@INC&lt;/code&gt; tambi&amp;eacute;n se imprime como parte de la salida de</target>
        </trans-unit>
        <trans-unit id="4975023e8ced451b521e66f7c64344d22c9935aa" translate="yes" xml:space="preserve">
          <source>If this directory is exactly the same as the prefix which was compiled into</source>
          <target state="translated">Si este directorio es exactamente el mismo que el prefijo en el que fue compilado</target>
        </trans-unit>
        <trans-unit id="285c8028480f1bd9da414482302791b2b2e5917d" translate="yes" xml:space="preserve">
          <source>If this displays any &lt;code&gt;D&lt;/code&gt; or &lt;code&gt;d&lt;/code&gt; symbols (or possibly &lt;code&gt;C&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt; ), you have non-const data. The symbols the &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; removed are as follows: &lt;code&gt;Tt&lt;/code&gt; are</source>
          <target state="translated">Si muestra alg&amp;uacute;n s&amp;iacute;mbolo &lt;code&gt;D&lt;/code&gt; o &lt;code&gt;d&lt;/code&gt; (o posiblemente &lt;code&gt;C&lt;/code&gt; o &lt;code&gt;c&lt;/code&gt; ), tiene datos que no son constantes. Los s&amp;iacute;mbolos que elimin&amp;oacute; el &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; son los siguientes: &lt;code&gt;Tt&lt;/code&gt; son</target>
        </trans-unit>
        <trans-unit id="e00722416b7c55f26c8b791511437fbf3bd5fa48" translate="yes" xml:space="preserve">
          <source>If this displays any &lt;code&gt;D&lt;/code&gt; or &lt;code&gt;d&lt;/code&gt; symbols (or possibly &lt;code&gt;C&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt;), you have non-const data. The symbols the &lt;code&gt;grep&lt;/code&gt; removed are as follows: &lt;code&gt;Tt&lt;/code&gt; are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abdac7aa391382bc2754c2374cb867d27e05580" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to a true value, all of the functions defined by this module (color(), colored(), and all of the constants not previously used in the program) will not output any escape sequences and instead will just return the empty string or pass through the original text as appropriate. This is intended to support easy use of scripts using this module on platforms that don't support ANSI escape sequences.</source>
          <target state="translated">Si esta variable de entorno se establece a un valor verdadero,todas las funciones definidas por este módulo (color(),coloreadas(),y todas las constantes no utilizadas previamente en el programa)no emitirán ninguna secuencia de escape y en su lugar sólo devolverán la cadena vacía o pasarán a través del texto original según corresponda.Esto tiene como objetivo facilitar el uso de los scripts que usan este módulo en plataformas que no soportan las secuencias de escape ANSI.</target>
        </trans-unit>
        <trans-unit id="38f035ce9a9a2458333cab9abdbe9a0ca164bacc" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to a true value, all of the functions defined by this module (color(), colored(), and all of the constants) will not output any escape sequences and instead will just return the empty string or pass through the original text as appropriate. This is intended to support easy use of scripts using this module on platforms that don't support ANSI escape sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18c65b6596250b7fc84f994b0860dfb64443933" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to any value, it suppresses generation of escape sequences the same as if ANSI_COLORS_DISABLED is set to a true value. This implements the &lt;a href=&quot;https://no-color.org/&quot;&gt;https://no-color.org/&lt;/a&gt; informal standard. Programs that want to enable color despite NO_COLOR being set will need to unset that environment variable before any constant or function provided by this module is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876cbaf8d98a55944949f12e34d25c434a20bad7" translate="yes" xml:space="preserve">
          <source>If this environment variable is true then normal install processes will always overwrite older identical files during the install process.</source>
          <target state="translated">Si esta variable de entorno es verdadera,los procesos de instalación normales siempre sobrescribirán los archivos idénticos más antiguos durante el proceso de instalación.</target>
        </trans-unit>
        <trans-unit id="e053edd732d7c1c9c9166271bdb64b8b374b5d23" translate="yes" xml:space="preserve">
          <source>If this event is nested inside of other events, this should be the depth of nesting. (This is mainly for subtests)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b941d4f353a594151f4f0a38deaca7c7d4a4d4" translate="yes" xml:space="preserve">
          <source>If this feature is enabled (which is the default under a &lt;code&gt;use 5.16&lt;/code&gt; or higher declaration), EXPR is considered to be in the same encoding as the surrounding program. Thus if &lt;a href=&quot;utf8&quot;&gt;&lt;code&gt;use utf8&lt;/code&gt;&lt;/a&gt; is in effect, the string will be treated as being UTF-8 encoded. Otherwise, the string is considered to be a sequence of independent bytes. Bytes that correspond to ASCII-range code points will have their normal meanings for operators in the string. The treatment of the other bytes depends on if the &lt;a href=&quot;feature#The-%27unicode_strings%27-feature&quot;&gt;&lt;code&gt;'unicode_strings&quot;&lt;/code&gt; feature&lt;/a&gt; is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7eb5123560aed4a2756b83ae3d2c52a26a17f8b" translate="yes" xml:space="preserve">
          <source>If this field is omitted, it defaults to 1 (true).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fe5d03fc19f605909f122565e563658cd995e6" translate="yes" xml:space="preserve">
          <source>If this field is zero then &lt;code&gt;PerlIO_pushed&lt;/code&gt; does not malloc anything and assumes layer's Pushed function will do any required layer stack manipulation - used to avoid malloc/free overhead for dummy layers. If the field is non-zero it must be at least the size of &lt;code&gt;PerlIOl&lt;/code&gt; , &lt;code&gt;PerlIO_pushed&lt;/code&gt; will allocate memory for the layer's data structures and link new layer onto the stream's stack. (If the layer's Pushed method returns an error indication the layer is popped again.)</source>
          <target state="translated">Si este campo es cero, entonces &lt;code&gt;PerlIO_pushed&lt;/code&gt; no mallociza nada y asume que la funci&amp;oacute;n Pushed de la capa har&amp;aacute; cualquier manipulaci&amp;oacute;n requerida de la pila de capas - usada para evitar malloc / free overhead para capas ficticias. Si el campo es distinto de cero, debe tener al menos el tama&amp;ntilde;o de &lt;code&gt;PerlIOl&lt;/code&gt; , &lt;code&gt;PerlIO_pushed&lt;/code&gt; asignar&amp;aacute; memoria para las estructuras de datos de la capa y vincular&amp;aacute; la nueva capa a la pila del flujo. (Si el m&amp;eacute;todo Pushed de la capa devuelve una indicaci&amp;oacute;n de error, la capa vuelve a aparecer).</target>
        </trans-unit>
        <trans-unit id="a5a45df8d66f9a394f3a4c96ed9c17f127fd5118" translate="yes" xml:space="preserve">
          <source>If this field is zero then &lt;code&gt;PerlIO_pushed&lt;/code&gt; does not malloc anything and assumes layer's Pushed function will do any required layer stack manipulation - used to avoid malloc/free overhead for dummy layers. If the field is non-zero it must be at least the size of &lt;code&gt;PerlIOl&lt;/code&gt;, &lt;code&gt;PerlIO_pushed&lt;/code&gt; will allocate memory for the layer's data structures and link new layer onto the stream's stack. (If the layer's Pushed method returns an error indication the layer is popped again.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eff879286b0f884c3e6b0dc473e05a91d80d4a8" translate="yes" xml:space="preserve">
          <source>If this function is being sourced in from a separate file via &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;, then this is probably just fine. If it's all in the main program, you'll need to arrange for the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; to be executed early, either by putting the whole block above your main program, or more likely, placing merely a &lt;code&gt;BEGIN&lt;/code&gt; code block around it to make sure it gets executed before your program starts to run:</source>
          <target state="translated">Si esta funci&amp;oacute;n se obtiene de un archivo separado a trav&amp;eacute;s de &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; , entonces probablemente est&amp;eacute; bien. Si todo est&amp;aacute; en el programa principal, necesitar&amp;aacute; hacer arreglos para que &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; se ejecute temprano, ya sea colocando todo el bloque encima de su programa principal, o m&amp;aacute;s probablemente, colocando simplemente un bloque de c&amp;oacute;digo &lt;code&gt;BEGIN&lt;/code&gt; alrededor para asegurarse de que se ejecute ejecutado antes de que su programa comience a ejecutarse:</target>
        </trans-unit>
        <trans-unit id="3b08fb8fb677146606e9cfcd0ad7806affc639d2" translate="yes" xml:space="preserve">
          <source>If this function is being sourced in from a separate file via &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;use&lt;/code&gt;, then this is probably just fine. If it's all in the main program, you'll need to arrange for the &lt;code&gt;my&lt;/code&gt; to be executed early, either by putting the whole block above your main program, or more likely, placing merely a &lt;code&gt;BEGIN&lt;/code&gt; code block around it to make sure it gets executed before your program starts to run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5121e7b7256f6d0ab378dc9bff9a8c6dad43577" translate="yes" xml:space="preserve">
          <source>If this happens to you, there's not much you can do except switch to use a different locale or use &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; to translate from the locale into UTF-8; if that's impracticable, you have been warned that some things may break.</source>
          <target state="translated">Si esto le sucede, no hay mucho que pueda hacer excepto cambiar para usar una configuraci&amp;oacute;n regional diferente o usar &lt;a href=&quot;encode&quot;&gt;Codificar&lt;/a&gt; para traducir de la configuraci&amp;oacute;n regional a UTF-8; si eso es impracticable, se le advirti&amp;oacute; que algunas cosas pueden romperse.</target>
        </trans-unit>
        <trans-unit id="faa64c33180aaefa8582782daf214d7a2f4780a7" translate="yes" xml:space="preserve">
          <source>If this interior sequence is nested inside of another interior sequence, then the outer/parent sequence that contains it is returned. Otherwise &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Si esta secuencia interior est&amp;aacute; anidada dentro de otra secuencia interior, se devuelve la secuencia externa / principal que la contiene. De &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; contrario, se devuelve undef .</target>
        </trans-unit>
        <trans-unit id="bf7d995797b0338af1d03b9d03a8511323aeb269" translate="yes" xml:space="preserve">
          <source>If this is a TODO test and an 'ok' line, this method returns true. Otherwise, it will always return false (regardless of passing status on non-todo tests).</source>
          <target state="translated">Si esto es una prueba de TODO y una línea de 'ok',este método devuelve verdadero.De lo contrario,siempre devolverá false (independientemente del estado de aprobación de las pruebas no TODO).</target>
        </trans-unit>
        <trans-unit id="604eb865cff5427575c78b447eb628e9c645992c" translate="yes" xml:space="preserve">
          <source>If this is a simple scalar then it will be treated as a boolean for the 'buffered' setting. If this is a hash reference then it will be used as a parameters hash. The param hash will be used for hub construction (with the specified keys removed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7666722db0ac2cfa26e5cabc574e02e68556877" translate="yes" xml:space="preserve">
          <source>If this is being called as &lt;code&gt;re::regname&lt;/code&gt; , &lt;code&gt;re::regnames&lt;/code&gt; or &lt;code&gt;re::regnames_count&lt;/code&gt; , if any. The first two will be combined with &lt;code&gt;RXapif_ONE&lt;/code&gt; or &lt;code&gt;RXapif_ALL&lt;/code&gt; .</source>
          <target state="translated">Si esto se llama como &lt;code&gt;re::regname&lt;/code&gt; , &lt;code&gt;re::regnames&lt;/code&gt; o &lt;code&gt;re::regnames_count&lt;/code&gt; , si lo hay. Los dos primeros se combinar&amp;aacute;n con &lt;code&gt;RXapif_ONE&lt;/code&gt; o &lt;code&gt;RXapif_ALL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79a068f47ba129d0ff77349a01057b9518f8fbed" translate="yes" xml:space="preserve">
          <source>If this is being called as &lt;code&gt;re::regname&lt;/code&gt;, &lt;code&gt;re::regnames&lt;/code&gt; or &lt;code&gt;re::regnames_count&lt;/code&gt;, if any. The first two will be combined with &lt;code&gt;RXapif_ONE&lt;/code&gt; or &lt;code&gt;RXapif_ALL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edbce2664bb4f91955d900ea95b27deaa6b5a4b" translate="yes" xml:space="preserve">
          <source>If this is in &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; it will be passed to &lt;code&gt;Perl_fbm_instr&lt;/code&gt; by &lt;code&gt;pp_split&lt;/code&gt; which will treat the subject string as a multi-line string.</source>
          <target state="translated">Si esto es en &lt;code&gt;rx-&amp;gt;extflags&lt;/code&gt; que ser&amp;aacute;n pasados a &lt;code&gt;Perl_fbm_instr&lt;/code&gt; por &lt;code&gt;pp_split&lt;/code&gt; que tratar&amp;aacute; la cadena de asunto como una cadena de m&amp;uacute;ltiples l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="3e0c042153cf9f6ff54247584b15672ab611a4af" translate="yes" xml:space="preserve">
          <source>If this is negative, and amounts to &lt;code&gt;HEf_SVKEY&lt;/code&gt; , it indicates the entry holds an &lt;code&gt;SV*&lt;/code&gt; key. Otherwise, holds the actual length of the key. Can be assigned to. The &lt;code&gt;HePV()&lt;/code&gt; macro is usually preferable for finding key lengths.</source>
          <target state="translated">Si es negativo y equivale a &lt;code&gt;HEf_SVKEY&lt;/code&gt; , indica que la entrada tiene una clave &lt;code&gt;SV*&lt;/code&gt; . De lo contrario, contiene la longitud real de la clave. Puede asignarse a. La macro &lt;code&gt;HePV()&lt;/code&gt; suele ser preferible para encontrar longitudes de clave.</target>
        </trans-unit>
        <trans-unit id="f90d0f4d493e8df7c15bcc83bca70a42ffcdb6df" translate="yes" xml:space="preserve">
          <source>If this is negative, and amounts to &lt;code&gt;HEf_SVKEY&lt;/code&gt;, it indicates the entry holds an &lt;code&gt;SV*&lt;/code&gt; key. Otherwise, holds the actual length of the key. Can be assigned to. The &lt;code&gt;HePV()&lt;/code&gt; macro is usually preferable for finding key lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddda819aeefa94d361f2fc0677ccc065e6c33f4f" translate="yes" xml:space="preserve">
          <source>If this is starting to sound scarier than it's worth, relax. Perl has some features to help you avoid its most common pitfalls. The best way to avoid getting confused is to start every program like this:</source>
          <target state="translated">Si esto está empezando a sonar más aterrador de lo que vale,relájate.Perl tiene algunas características que te ayudan a evitar sus problemas más comunes.La mejor manera de evitar confundirse es iniciar cada programa como este:</target>
        </trans-unit>
        <trans-unit id="c2cd7396387cdb373b2dd32a6d21ffa39a9fbdd0" translate="yes" xml:space="preserve">
          <source>If this is true, none of that will be done.</source>
          <target state="translated">Si esto es cierto,nada de eso se hará.</target>
        </trans-unit>
        <trans-unit id="998c59b2484753d1482d0ff9ba7497a84e80fcd4" translate="yes" xml:space="preserve">
          <source>If this is what you intended then you can silence the warning by using &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/${\}/&lt;/a&gt;&lt;/code&gt; (for example: &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo${\}s+bar/&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Si esto es lo que pretend&amp;iacute;a, puede silenciar la advertencia usando &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/${\}/&lt;/a&gt;&lt;/code&gt; (por ejemplo: &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/foo${\}s+bar/&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="44c23df76d34643bd06f7fcbfd01951d86e6affe" translate="yes" xml:space="preserve">
          <source>If this is what you intended then you can silence the warning by using &lt;code&gt;m/${\}/&lt;/code&gt; (for example: &lt;code&gt;m/foo${\}s+bar/&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f4b7328771b0d9e19ff0a7ce5f9c13e4b36300" translate="yes" xml:space="preserve">
          <source>If this is your first use of Sys::Syslog, you must read the doc.</source>
          <target state="translated">Si es la primera vez que usas Sys::Syslog,debes leer el documento.</target>
        </trans-unit>
        <trans-unit id="51d2478f45a9802ed436c7d6c5c2a5bb72aeb395" translate="yes" xml:space="preserve">
          <source>If this optimization is applicable, &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; will emit a &lt;code&gt;dXSTARG;&lt;/code&gt; definition at the start of the generated XSUB code, and type (see below) dependent code to set &lt;code&gt;TARG&lt;/code&gt; and push it on the stack at the end of the generated XSUB code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51861420a23f19227e776c6bc3a38fdcea309df1" translate="yes" xml:space="preserve">
          <source>If this option is not present, the value stored in XFL field will be determined by the setting of the &lt;code&gt;Level&lt;/code&gt; option.</source>
          <target state="translated">Si esta opci&amp;oacute;n no est&amp;aacute; presente, el valor almacenado en el campo XFL ser&amp;aacute; determinado por la configuraci&amp;oacute;n de la opci&amp;oacute;n &lt;code&gt;Level&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="415323d14a6e182890345d78f7ae3f3149cdff1f" translate="yes" xml:space="preserve">
          <source>If this option is set and the input file/buffer is not compressed data, the module will allow reading of it anyway.</source>
          <target state="translated">Si esta opción está activada y el archivo/bufete de entrada no tiene datos comprimidos,el módulo permitirá la lectura del mismo de todas formas.</target>
        </trans-unit>
        <trans-unit id="805aae725ba9def01f764562edc887adcbc46d85" translate="yes" xml:space="preserve">
          <source>If this option is set, Pod::Man will instead output UTF-8. If your *roff implementation can handle it, this is the best output format to use and avoids corruption of documents containing non-ASCII characters. However, be warned that *roff source with literal UTF-8 characters is not supported by many implementations and may even result in segfaults and other bad behavior.</source>
          <target state="translated">Si esta opción está activada,Pod::Man emitirá en su lugar UTF-8.Si su implementación *roff puede manejarlo,este es el mejor formato de salida a utilizar y evita la corrupción de documentos que contienen caracteres no ASCII.Sin embargo,ten en cuenta que la fuente *roff con caracteres UTF-8 literales no está soportada por muchas implementaciones e incluso puede resultar en fallos de segmento y otros malos comportamientos.</target>
        </trans-unit>
        <trans-unit id="9276827e0a43ce0cd98e803156d215d94a1cfced" translate="yes" xml:space="preserve">
          <source>If this paragraph is a command paragraph, then this method will return the name of the command (</source>
          <target state="translated">Si este párrafo es un párrafo de comando,entonces este método devolverá el nombre del comando (</target>
        </trans-unit>
        <trans-unit id="bcc44b3b4b66c03b7a2464f3e737f50efd9dbf21" translate="yes" xml:space="preserve">
          <source>If this paragraph is a command paragraph, then this method will return the prefix used to denote the command (which should be the string &quot;=&quot; or &quot;==&quot;).</source>
          <target state="translated">Si este párrafo es un párrafo de comando,entonces este método devolverá el prefijo usado para denotar el comando (que debería ser la cadena &quot;=&quot; o &quot;==&quot;).</target>
        </trans-unit>
        <trans-unit id="97d5af9792754821d43f791eb7a3e99d0e1078a4" translate="yes" xml:space="preserve">
          <source>If this paragraph is a command paragraph, then this method will return the text used to separate the command name from the rest of the paragraph (if any).</source>
          <target state="translated">Si este párrafo es un párrafo de comando,entonces este método devolverá el texto utilizado para separar el nombre del comando del resto del párrafo (si lo hay).</target>
        </trans-unit>
        <trans-unit id="b75f187e2f383fe73ad62fc9d325ab173aba9b5e" translate="yes" xml:space="preserve">
          <source>If this parameter is not used, certain error conditions may raise a fatal error that will cause the program to halt, unless trapped in an &lt;code&gt;eval&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f4b76081f3628eb70be0fbee8dbf0d6e9f3ca4" translate="yes" xml:space="preserve">
          <source>If this parameter is not used, certain error conditions may raise a fatal error that will cause the program will halt, unless trapped in an &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; block.</source>
          <target state="translated">Si no se usa este par&amp;aacute;metro, ciertas condiciones de error pueden generar un error fatal que har&amp;aacute; que el programa se detenga, a menos que quede atrapado en un bloque de &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="0d2fb08e29fba6225fdf1f445f37f2366e459721" translate="yes" xml:space="preserve">
          <source>If this regexp matches, &lt;code&gt;$1&lt;/code&gt; contains a string starting with &lt;code&gt;'ab'&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; is either set to &lt;code&gt;'cd'&lt;/code&gt; or &lt;code&gt;'ef'&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; equals either &lt;code&gt;'gi'&lt;/code&gt; or &lt;code&gt;'j'&lt;/code&gt; , and &lt;code&gt;$4&lt;/code&gt; is either set to &lt;code&gt;'gi'&lt;/code&gt; , just like &lt;code&gt;$3&lt;/code&gt; , or it remains undefined.</source>
          <target state="translated">Si esta expresi&amp;oacute;n regular coincide, &lt;code&gt;$1&lt;/code&gt; contiene una cadena que comienza con &lt;code&gt;'ab'&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; se establece en &lt;code&gt;'cd'&lt;/code&gt; o &lt;code&gt;'ef'&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; es igual a &lt;code&gt;'gi'&lt;/code&gt; o &lt;code&gt;'j'&lt;/code&gt; , y &lt;code&gt;$4&lt;/code&gt; se establece en &lt;code&gt;'gi'&lt;/code&gt; , simplemente como &lt;code&gt;$3&lt;/code&gt; , o permanece indefinido.</target>
        </trans-unit>
        <trans-unit id="1b5fa9692a7ddbf5956b5114988e2959b2c5e493" translate="yes" xml:space="preserve">
          <source>If this regexp matches, &lt;code&gt;$1&lt;/code&gt; contains a string starting with &lt;code&gt;'ab'&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt; is either set to &lt;code&gt;'cd'&lt;/code&gt; or &lt;code&gt;'ef'&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt; equals either &lt;code&gt;'gi'&lt;/code&gt; or &lt;code&gt;'j'&lt;/code&gt;, and &lt;code&gt;$4&lt;/code&gt; is either set to &lt;code&gt;'gi'&lt;/code&gt;, just like &lt;code&gt;$3&lt;/code&gt;, or it remains undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf2f5a008449abe516d485f423f30c756bf9374" translate="yes" xml:space="preserve">
          <source>If this seems like a lot, then feel free to inherit from merely the standard Tie::StdHash module for most of your methods, redefining only the interesting ones. See &lt;a href=&quot;Tie::Hash&quot;&gt;Tie::Hash&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f92dc123bfc535dc7925652fedf35a2b5f0876" translate="yes" xml:space="preserve">
          <source>If this seems like a lot, then feel free to inherit from merely the standard Tie::StdHash module for most of your methods, redefining only the interesting ones. See &lt;a href=&quot;tie/hash&quot;&gt;Tie::Hash&lt;/a&gt; for details.</source>
          <target state="translated">Si esto le parece mucho, entonces si&amp;eacute;ntase libre de heredar simplemente del m&amp;oacute;dulo est&amp;aacute;ndar Tie :: StdHash para la mayor&amp;iacute;a de sus m&amp;eacute;todos, redefiniendo solo los interesantes. Consulte &lt;a href=&quot;tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="c67ef6ff224aaeb335a4c34ee8f8573b58ab3fc4" translate="yes" xml:space="preserve">
          <source>If this still doesn't work, look into the &lt;code&gt;clearerr&lt;/code&gt; method from &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;, which resets the error and end-of-file states on the handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f60efe640d39524c6e11c22deb74b1e7bd6e48" translate="yes" xml:space="preserve">
          <source>If this still doesn't work, look into the &lt;code&gt;clearerr&lt;/code&gt; method from &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;, which resets the error and end-of-file states on the handle.</source>
          <target state="translated">Si esto a&amp;uacute;n no funciona, busque el m&amp;eacute;todo m&amp;aacute;s &lt;code&gt;clearerr&lt;/code&gt; de &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; , que restablece el error y los estados de fin de archivo en el identificador.</target>
        </trans-unit>
        <trans-unit id="5f660c829995c0ccf8574939955dcb34cbb1fbc2" translate="yes" xml:space="preserve">
          <source>If this template key is true, enforces that if this key is provided by user input, its value is &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt;. This just means that the user is not allowed to pass &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; as a value for this key and is equivalent to: allow =&amp;gt; sub { defined $_[0] &amp;amp;&amp;amp; OTHER TESTS }</source>
          <target state="translated">Si esta clave de plantilla es verdadera, obliga a que si esta clave la proporciona la entrada del usuario, se &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; su valor . Esto solo significa que el usuario no puede pasar &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; como valor para esta clave y es equivalente a: allow =&amp;gt; sub {definido $ _ [0] &amp;amp;&amp;amp; OTRAS PRUEBAS}</target>
        </trans-unit>
        <trans-unit id="e156c85e449c1c19860e80cb4d0bda5ed5967f61" translate="yes" xml:space="preserve">
          <source>If this template key is true, enforces that if this key is provided by user input, its value is &lt;code&gt;defined&lt;/code&gt;. This just means that the user is not allowed to pass &lt;code&gt;undef&lt;/code&gt; as a value for this key and is equivalent to: allow =&amp;gt; sub { defined $_[0] &amp;amp;&amp;amp; OTHER TESTS }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bbabb48932b2f041b390c777de07be84c85182" translate="yes" xml:space="preserve">
          <source>If this value is defined but false then such an operation has ocurred, but should not impact later operations.</source>
          <target state="translated">Si este valor está definido pero es falso,entonces se ha producido una operación de este tipo,pero no debe afectar a las operaciones posteriores.</target>
        </trans-unit>
        <trans-unit id="cc6a20a1fa0fe02624d3822b74f6ca89396c5ee4" translate="yes" xml:space="preserve">
          <source>If this variable is set to a true value, then &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; on Windows will not try to open the file. This means that the link count cannot be determined and file attributes may be out of date if additional hardlinks to the file exist. On the other hand, not opening the file is considerably faster, especially for files on network drives.</source>
          <target state="translated">Si esta variable se establece en un valor verdadero, &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; en Windows no intentar&amp;aacute; abrir el archivo. Esto significa que el recuento de enlaces no se puede determinar y los atributos del archivo pueden estar desactualizados si existen enlaces duros adicionales al archivo. Por otro lado, no abrir el archivo es considerablemente m&amp;aacute;s r&amp;aacute;pido, especialmente para archivos en unidades de red.</target>
        </trans-unit>
        <trans-unit id="bea7dc99d361b98967fbf94336d0529e85ea5d0f" translate="yes" xml:space="preserve">
          <source>If this variable is set to a true value, then &lt;code&gt;stat()&lt;/code&gt; on Windows will not try to open the file. This means that the link count cannot be determined and file attributes may be out of date if additional hardlinks to the file exist. On the other hand, not opening the file is considerably faster, especially for files on network drives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e9d7214894094637d48b5893992a1d4deebf1e" translate="yes" xml:space="preserve">
          <source>If this variable is true then such an operation has occurred and anything depending on this module cannot proceed until a reboot has occurred.</source>
          <target state="translated">Si esta variable es verdadera,entonces tal operación ha ocurrido y cualquier cosa que dependa de este módulo no puede proceder hasta que se haya producido un reinicio.</target>
        </trans-unit>
        <trans-unit id="0523b9c70c7c9e8111746aca12afc08517491534" translate="yes" xml:space="preserve">
          <source>If this warning does come from I/O, the easiest way to quiet it is simply to add the &lt;code&gt;:utf8&lt;/code&gt; layer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c3e520fc9953b8c23b0cb154effeffba4245f7" translate="yes" xml:space="preserve">
          <source>If three (or more) arguments are specified, the open mode (including optional encoding) in the second argument are distinct from the filename in the third. If MODE is &lt;code&gt;&amp;lt;&lt;/code&gt; or nothing, the file is opened for input. If MODE is &lt;code&gt;&amp;gt;&lt;/code&gt;, the file is opened for output, with existing files first being truncated (&quot;clobbered&quot;) and nonexisting files newly created. If MODE is &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , the file is opened for appending, again being created if necessary.</source>
          <target state="translated">Si se especifican tres (o m&amp;aacute;s) argumentos, el modo abierto (incluida la codificaci&amp;oacute;n opcional) en el segundo argumento es distinto del nombre de archivo en el tercero. Si MODE es &lt;code&gt;&amp;lt;&lt;/code&gt; o nada, el archivo se abre para entrada. Si MODE es &lt;code&gt;&amp;gt;&lt;/code&gt; , el archivo se abre para la salida, con los archivos existentes primero truncados (&quot;aplastados&quot;) y los archivos no existentes reci&amp;eacute;n creados. Si MODE es &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , el archivo se abre para agregar, y se crea nuevamente si es necesario.</target>
        </trans-unit>
        <trans-unit id="977c9556940f8be99675602713d0721d1fa68782" translate="yes" xml:space="preserve">
          <source>If trailing data is present immediately after the zip archive and the &lt;code&gt;Transparent&lt;/code&gt; option is enabled, this method will consider that trailing data to be another member of the zip archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e10a47d1100af2f4e741fa10c714b1d6eb83c05" translate="yes" xml:space="preserve">
          <source>If true (the default value), we autogenerate a JavaScript in the output directory, and set our HTML files to use it. Currently, the JavaScript is used only to get the browser to remember what stylesheet it prefers. TODO: continue</source>
          <target state="translated">Si es true (el valor por defecto),autogeneramos un JavaScript en el directorio de salida,y configuramos nuestros archivos HTML para usarlo.Actualmente,el JavaScript se usa sólo para que el navegador recuerde qué hoja de estilo prefiere.TODO:continuar</target>
        </trans-unit>
        <trans-unit id="634c500cd04e5d0b913158c1c6e9ccddc0f9bc06" translate="yes" xml:space="preserve">
          <source>If true (the default value), we autogenerate some CSS files in the output directory, and set our HTML files to use those. TODO: continue</source>
          <target state="translated">Si es true (el valor por defecto),autogeneramos algunos archivos CSS en el directorio de salida,y configuramos nuestros archivos HTML para usarlos.TODO:continuar</target>
        </trans-unit>
        <trans-unit id="ed672b2b381b7d94345040cc4eb4667fc3d97c8b" translate="yes" xml:space="preserve">
          <source>If true and a code reference, will be called with the symbolic link name and the directory it lives in as arguments. Otherwise, if true and warnings are on, warning &quot;symbolic_link_name is a dangling symbolic link\n&quot; will be issued. If false, the dangling symbolic link will be silently ignored.</source>
          <target state="translated">Si es cierto y una referencia de código,se llamará con el nombre simbólico del enlace y el directorio en el que vive como argumentos.De lo contrario,si true y las advertencias están activadas,se emitirá la advertencia &quot;nombre_de_enlace_simbólico es un enlace simbólico colgante&quot;.Si es falso,el enlace simbólico colgante será ignorado silenciosamente.</target>
        </trans-unit>
        <trans-unit id="93e6a2b3c3a0187d609e46522f3b6f893e49aa02" translate="yes" xml:space="preserve">
          <source>If true is returned, those arguments &lt;b&gt;should&lt;/b&gt; in theory be processed with &lt;code&gt;quadmath_snprintf()&lt;/code&gt;, but in case there is more than one such format specifier (see &lt;a href=&quot;#quadmath_format_valid&quot;&gt;&quot;quadmath_format_valid&quot;&lt;/a&gt;), and if there is anything else beyond that one (even just a single byte), they &lt;b&gt;cannot&lt;/b&gt; be processed because &lt;code&gt;quadmath_snprintf()&lt;/code&gt; is very strict, accepting only one format spec, and nothing else. In this case, the code should probably fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3fdfd0a40c103a2211bdac354013485a8b6be3" translate="yes" xml:space="preserve">
          <source>If true is returned, those arguments &lt;b&gt;should&lt;/b&gt; in theory be processed with quadmath_snprintf(), but in case there is more than one such format specifier (see &lt;a href=&quot;#quadmath_format_single&quot;&gt;quadmath_format_single&lt;/a&gt;), and if there is anything else beyond that one (even just a single byte), they &lt;b&gt;cannot&lt;/b&gt; be processed because quadmath_snprintf() is very strict, accepting only one format spec, and nothing else. In this case, the code should probably fail.</source>
          <target state="translated">Si se devuelve verdadero, en teor&amp;iacute;a esos argumentos &lt;b&gt;deber&amp;iacute;an&lt;/b&gt; procesarse con quadmath_snprintf (), pero en caso de que haya m&amp;aacute;s de un especificador de formato (ver &lt;a href=&quot;#quadmath_format_single&quot;&gt;quadmath_format_single&lt;/a&gt; ), y si hay algo m&amp;aacute;s m&amp;aacute;s all&amp;aacute; de ese (incluso un solo byte), no &lt;b&gt;se&lt;/b&gt; pueden procesar porque quadmath_snprintf () es muy estricto, acepta solo una especificaci&amp;oacute;n de formato y nada m&amp;aacute;s. En este caso, el c&amp;oacute;digo probablemente deber&amp;iacute;a fallar.</target>
        </trans-unit>
        <trans-unit id="0653af7b3995880e12e86c1b6df46b2abdc8adcd" translate="yes" xml:space="preserve">
          <source>If true then &lt;code&gt;Configure&lt;/code&gt; will check each hostname given that it exists</source>
          <target state="translated">Si es verdadero, &lt;code&gt;Configure&lt;/code&gt; comprobar&amp;aacute; cada nombre de host dado que existe</target>
        </trans-unit>
        <trans-unit id="5e192827bd7624c2eefa078600e9250f2fd8d099" translate="yes" xml:space="preserve">
          <source>If true then &lt;code&gt;make test&lt;/code&gt; may attempt to connect to hosts given in the configuration.</source>
          <target state="translated">Si es verdadero, entonces &lt;code&gt;make test&lt;/code&gt; puede intentar conectarse a los hosts indicados en la configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0dfb0e1e33130859f2e7e4109870d6a5dff7d085" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;TAP::Harness&lt;/code&gt; will output the verbose results of running its tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd986bfa48b8d9de9607995da53c20f474abed0" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;Test::Harness&lt;/code&gt; will output the verbose results of running its tests. Setting &lt;code&gt;$Test::Harness::verbose&lt;/code&gt; will override this, or you can use the &lt;code&gt;-v&lt;/code&gt; switch in the</source>
          <target state="translated">Si es verdadero, &lt;code&gt;Test::Harness&lt;/code&gt; generar&amp;aacute; los resultados detallados de ejecutar sus pruebas. La configuraci&amp;oacute;n de &lt;code&gt;$Test::Harness::verbose&lt;/code&gt; anular&amp;aacute; esto, o puede usar el modificador &lt;code&gt;-v&lt;/code&gt; en el</target>
        </trans-unit>
        <trans-unit id="44529fee5d3eb44416500710e8dc9bea67c57ded" translate="yes" xml:space="preserve">
          <source>If true, STDERR and STDOUT are the same filehandle. This may cause breakage if STDERR contains anything resembling TAP format, but does allow exact synchronization.</source>
          <target state="translated">Si es cierto,STDERR y STDOUT son el mismo mango de archivo.Esto puede causar una ruptura si STDERR contiene algo parecido al formato TAP,pero permite una sincronización exacta.</target>
        </trans-unit>
        <trans-unit id="fe1c5580c4e77a7f54f6b42fc274494bf3ad60b5" translate="yes" xml:space="preserve">
          <source>If true, make install will be verbose</source>
          <target state="translated">Si es cierto,make install será verboso</target>
        </trans-unit>
        <trans-unit id="a169cfeed98e3c1eafec522650538e080de52944" translate="yes" xml:space="preserve">
          <source>If true, set the &lt;code&gt;SO_BROADCAST&lt;/code&gt; sockopt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e14d9f9dc273a75bb28fef309ebf7b650f85381" translate="yes" xml:space="preserve">
          <source>If true, set the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; sockopt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89fb240c4dc14ea640fd2d16ea6df8791107ad3" translate="yes" xml:space="preserve">
          <source>If true, set the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; sockopt (not all OSes implement this sockopt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab1cddffad75299c410b1e954057e9efb6fb3e2" translate="yes" xml:space="preserve">
          <source>If true, uses proxy subs. See &lt;a href=&quot;ExtUtils::Constant::ProxySubs&quot;&gt;ExtUtils::Constant::ProxySubs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2c5a318ef60df6e780dd24e4ef173dd23b6b3c" translate="yes" xml:space="preserve">
          <source>If true, uses proxy subs. See &lt;a href=&quot;http://search.cpan.org/perldoc/ExtUtils::Constant::ProxySubs&quot;&gt;ExtUtils::Constant::ProxySubs&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, usa subs de proxy. Consulte &lt;a href=&quot;http://search.cpan.org/perldoc/ExtUtils::Constant::ProxySubs&quot;&gt;ExtUtils :: Constant :: ProxySubs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33b670decc24a56dd9e5e0101143f31051cabe4b" translate="yes" xml:space="preserve">
          <source>If two arrays smartmatch each other, then they are deep copies of each others' values, as this example reports:</source>
          <target state="translated">Si dos matrices coinciden de manera inteligente,entonces son copias profundas de los valores del otro,como informa este ejemplo:</target>
        </trans-unit>
        <trans-unit id="acee3e1d7871c445b42f87ba144a405a067cf53f" translate="yes" xml:space="preserve">
          <source>If two characters here and next (as code points) are composable (including Hangul Jamo/Syllables and Composition Exclusions), it returns the code point of the composite.</source>
          <target state="translated">Si dos caracteres de aquí y los siguientes (como puntos de código)son componibles (incluyendo Hangul Jamo/Sílabos y Exclusiones de composición),devuelve el punto de código del compuesto.</target>
        </trans-unit>
        <trans-unit id="5cba0eaa180ef04fc5494ba487a038ca330cd204" translate="yes" xml:space="preserve">
          <source>If type is non-Unix (see &lt;a href=&quot;#fileparse_set_fstype&quot;&gt;&quot;fileparse_set_fstype&quot;&lt;/a&gt;) then the pattern matching for suffix removal is performed case-insensitively, since those systems are not case-sensitive when opening existing files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42360b0ce037c1aa50c01166917adec5fecc2590" translate="yes" xml:space="preserve">
          <source>If type is non-Unix (see &lt;a href=&quot;#fileparse_set_fstype&quot;&gt;fileparse_set_fstype&lt;/a&gt;) then the pattern matching for suffix removal is performed case-insensitively, since those systems are not case-sensitive when opening existing files.</source>
          <target state="translated">Si el tipo no es Unix (consulte &lt;a href=&quot;#fileparse_set_fstype&quot;&gt;fileparse_set_fstype&lt;/a&gt; ), la coincidencia de patrones para la eliminaci&amp;oacute;n del sufijo se realiza sin distinci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas, ya que esos sistemas no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas al abrir archivos existentes.</target>
        </trans-unit>
        <trans-unit id="2fd48f2e17e1f717f9f154bd3292076827285d01" translate="yes" xml:space="preserve">
          <source>If umask(2) is not implemented on your system and you are trying to restrict access for</source>
          <target state="translated">Si umask(2)no está implementado en su sistema y está tratando de restringir el acceso para</target>
        </trans-unit>
        <trans-unit id="67a1f447b6ee3db12f569b14d8d5a13cc81a620d" translate="yes" xml:space="preserve">
          <source>If unsafe signals is in effect, then signal handling is not thread-safe, and the &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; signalling method cannot be used.</source>
          <target state="translated">Si hay se&amp;ntilde;ales inseguras, entonces el manejo de se&amp;ntilde;ales no es seguro para subprocesos, y el m&amp;eacute;todo de se&amp;ntilde;alizaci&amp;oacute;n &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; no se puede usar.</target>
        </trans-unit>
        <trans-unit id="70663a96a9c0a32a9a2fde13b31bf56729b3885e" translate="yes" xml:space="preserve">
          <source>If upgrading is in effect, returns PI, rounded to N digits with the current rounding mode:</source>
          <target state="translated">Si la actualización está en efecto,devuelve PI,redondeado a N dígitos con el modo de redondeo actual:</target>
        </trans-unit>
        <trans-unit id="6635daa00264b763872dbf741802de705f31e8f0" translate="yes" xml:space="preserve">
          <source>If used with -v &amp;lt;version&amp;gt; then all utilities released with that version of perl are listed, and any utility programs named on the command line are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d763c9ab9f9ca920e89e5e82fe0a4c19ddec98c7" translate="yes" xml:space="preserve">
          <source>If used with a single argument in a scalar context, returns the string consisting of the code points of the named sequence, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no named sequence by that name exists. If used with a single argument in a list context, it returns the list of the ordinals of the code points.</source>
          <target state="translated">Si se usa con un solo argumento en un contexto escalar, devuelve la cadena que consta de los puntos de c&amp;oacute;digo de la secuencia nombrada, o &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; si no existe una secuencia nombrada con ese nombre. Si se usa con un solo argumento en un contexto de lista, devuelve la lista de los ordinales de los puntos de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="da57dfd2566c5bbbb36939e6a816eb57d92a5102" translate="yes" xml:space="preserve">
          <source>If used with a single argument in a scalar context, returns the string consisting of the code points of the named sequence, or &lt;code&gt;undef&lt;/code&gt; if no named sequence by that name exists. If used with a single argument in a list context, it returns the list of the ordinals of the code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaceddc3b74ab2a5e89e9e5517463a3fd4ed9e1" translate="yes" xml:space="preserve">
          <source>If used with no arguments in a list context, it returns a hash with the names of all the named sequences as the keys and their sequences as strings as the values. Otherwise, it returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or an empty list depending on the context.</source>
          <target state="translated">Si se usa sin argumentos en un contexto de lista, devuelve un hash con los nombres de todas las secuencias nombradas como claves y sus secuencias como cadenas como valores. De lo contrario, devuelve &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; o una lista vac&amp;iacute;a seg&amp;uacute;n el contexto.</target>
        </trans-unit>
        <trans-unit id="0407b6cc8a060a9f5a98513aa0ab0a70e400908b" translate="yes" xml:space="preserve">
          <source>If used with no arguments in a list context, it returns a hash with the names of all the named sequences as the keys and their sequences as strings as the values. Otherwise, it returns &lt;code&gt;undef&lt;/code&gt; or an empty list depending on the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ccd67205017380c2547c8a9567b9cb20e04c0c" translate="yes" xml:space="preserve">
          <source>If using &lt;a href=&quot;#crypt-PLAINTEXT%2CSALT&quot;&gt;&lt;code&gt;crypt&lt;/code&gt;&lt;/a&gt; on a Unicode string (which</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcae58a7d75cf50d08d76e85d4556f2e6099dd18" translate="yes" xml:space="preserve">
          <source>If using &lt;a href=&quot;https://metacpan.org/pod/BerkeleyDB&quot;&gt;BerkeleyDB&lt;/a&gt; isn't an option, there are a number of modules available on CPAN that can be used to implement locking. Each one implements locking differently and has different goals in mind. It is therefore worth knowing the difference, so that you can pick the right one for your application. Here are the three locking wrappers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1f504c6467cdb5b94820cfba3df9e446f6d20a" translate="yes" xml:space="preserve">
          <source>If using &lt;b&gt;BerkeleyDB&lt;/b&gt; isn't an option, there are a number of modules available on CPAN that can be used to implement locking. Each one implements locking differently and has different goals in mind. It is therefore worth knowing the difference, so that you can pick the right one for your application. Here are the three locking wrappers:</source>
          <target state="translated">Si usar &lt;b&gt;BerkeleyDB&lt;/b&gt; no es una opci&amp;oacute;n, hay varios m&amp;oacute;dulos disponibles en CPAN que se pueden usar para implementar el bloqueo. Cada uno implementa el bloqueo de manera diferente y tiene diferentes objetivos en mente. Por lo tanto, vale la pena conocer la diferencia, para que pueda elegir el m&amp;aacute;s adecuado para su aplicaci&amp;oacute;n. Aqu&amp;iacute; est&amp;aacute;n los tres envoltorios de bloqueo:</target>
        </trans-unit>
        <trans-unit id="b0d8dee3f60efc11f28b77ac32acb4a0d6da837c" translate="yes" xml:space="preserve">
          <source>If using a Perl file as a source, optional switches may be passed which will be used when invoking the perl executable.</source>
          <target state="translated">Si se utiliza un archivo Perl como fuente,pueden pasarse conmutadores opcionales que se utilizarán al invocar el ejecutable de Perl.</target>
        </trans-unit>
        <trans-unit id="a612abcdba4adc1d68486aebb4d51b768494dc19" translate="yes" xml:space="preserve">
          <source>If using adb, a &quot;basic&quot; Configure line will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c2e41b4856cbf4192df9fdfdae8eb4debbc3b0" translate="yes" xml:space="preserve">
          <source>If using crypt() on a Unicode string (which</source>
          <target state="translated">Si se usa crypt()en una cadena de Unicode (que</target>
        </trans-unit>
        <trans-unit id="45cfcf2e0c855940dc64008801ae135f972cfd74" translate="yes" xml:space="preserve">
          <source>If using ftp remember to transfer the distribution in binary format.</source>
          <target state="translated">Si utiliza el ftp recuerde transferir la distribución en formato binario.</target>
        </trans-unit>
        <trans-unit id="b6fa09de90b513e62acb77e553ed8a67bf3a34b1" translate="yes" xml:space="preserve">
          <source>If using gcc, you can add the &lt;code&gt;-std=c89&lt;/code&gt; option which will hopefully catch most of these unportabilities. (However it might also catch incompatibilities in your system's header files.)</source>
          <target state="translated">Si usa gcc, puede agregar la opci&amp;oacute;n &lt;code&gt;-std=c89&lt;/code&gt; que, con suerte, detectar&amp;aacute; la mayor&amp;iacute;a de estas inportabilidades. (Sin embargo, tambi&amp;eacute;n puede detectar incompatibilidades en los archivos de encabezado de su sistema).</target>
        </trans-unit>
        <trans-unit id="fae0365130c2e3d1490dd7527e14992a1ddb3fda" translate="yes" xml:space="preserve">
          <source>If using ssh, it's not too different -- we just change targetrun to ssh, and pass in targetuser and targetport. It ends up looking like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664754e120bf0080d8c4c2636edd9c4d43e0b86a" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding&lt;/code&gt; pragma without an explicit encoding name, the PERL_ENCODING environment variable is consulted for an encoding name.</source>
          <target state="translated">Si utiliza el pragma de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; encoding&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; sin un nombre de codificaci&amp;oacute;n expl&amp;iacute;cito, se consulta la variable de entorno PERL_ENCODING para obtener un nombre de codificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="47d8d46dc66c1660b89d6816f6548597b112a1d7" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;gcc -Wall&lt;/code&gt; note that not all the possible warnings (like &lt;code&gt;-Wuninitialized&lt;/code&gt;) are given unless you also compile with &lt;code&gt;-O&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfca052b74a8f394827d7f4faa9fd4f5bf5109bf" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;gcc -Wall&lt;/code&gt; note that not all the possible warnings (like &lt;code&gt;-Wunitialized&lt;/code&gt; ) are given unless you also compile with &lt;code&gt;-O&lt;/code&gt; .</source>
          <target state="translated">Si utiliza &lt;code&gt;gcc -Wall&lt;/code&gt; , tenga en cuenta que no se proporcionan todas las advertencias posibles (como &lt;code&gt;-Wunitialized&lt;/code&gt; ) a menos que tambi&amp;eacute;n compile con &lt;code&gt;-O&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa9480a44177272fde2828188fac358cc2184e4c" translate="yes" xml:space="preserve">
          <source>If using the &lt;code&gt;use encoding&lt;/code&gt; pragma without an explicit encoding name, the PERL_ENCODING environment variable is consulted for an encoding name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49dda8790f1c37a11e446613192c2ff1c5642e05" translate="yes" xml:space="preserve">
          <source>If using the VC IDE, to build use for example the File-&amp;gt;Open Workspace-&amp;gt; C:\Symbian\8.0a\S60_2nd_FP2\epoc32\build\symbian\perl\perl\wins\perl.dsw The emulator binaries will appear in the same directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f25526e76efefdb9a4ff18e831107d545ddc34" translate="yes" xml:space="preserve">
          <source>If using the VC IDE, you will a lot of warnings in the beginning of the build because a lot of headers mentioned by the source cannot be found, but this is not serious since those headers are not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f6a03b7ab2b25638142acde2118920ba4f7593" translate="yes" xml:space="preserve">
          <source>If we add a &lt;code&gt;(*PRUNE)&lt;/code&gt; before the count like the following</source>
          <target state="translated">Si agregamos un &lt;code&gt;(*PRUNE)&lt;/code&gt; antes del conteo como el siguiente</target>
        </trans-unit>
        <trans-unit id="f49196da102bf295b3091d7157018af8c9071a57" translate="yes" xml:space="preserve">
          <source>If we call a method on a &lt;code&gt;Child&lt;/code&gt; object and that method is not defined in the &lt;code&gt;Child&lt;/code&gt; class, Perl will look for that method in the &lt;code&gt;Parent&lt;/code&gt; class and then, if necessary, in the &lt;code&gt;Grandparent&lt;/code&gt; class.</source>
          <target state="translated">Si llamamos a un m&amp;eacute;todo en un objeto &lt;code&gt;Child&lt;/code&gt; y ese m&amp;eacute;todo no est&amp;aacute; definido en la clase &lt;code&gt;Child&lt;/code&gt; , Perl buscar&amp;aacute; ese m&amp;eacute;todo en la clase &lt;code&gt;Parent&lt;/code&gt; y luego, si es necesario, en la clase &lt;code&gt;Grandparent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef968fd799fd1b1033f77f3853f27266c25aff48" translate="yes" xml:space="preserve">
          <source>If we can tell that there is no valid start point then we don't bother running the interpreter at all. Likewise, if we know from the analysis phase that we cannot detect a short-cut to the start position, we go straight to the interpreter.</source>
          <target state="translated">Si podemos decir que no hay un punto de partida válido entonces no nos molestamos en correr el intérprete en absoluto.Del mismo modo,si sabemos por la fase de análisis que no podemos detectar un atajo a la posición de inicio,vamos directamente al intérprete.</target>
        </trans-unit>
        <trans-unit id="ee8cb3b419bcafdec86df4116638973be94d94a5" translate="yes" xml:space="preserve">
          <source>If we could reliably use `goto &amp;amp;` on core builtins, we wouldn't need this subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd027f23ebc9bafdd0ef83ac988a2e8f6205abb" translate="yes" xml:space="preserve">
          <source>If we encrypt this with &lt;code&gt;mkrot13&lt;/code&gt; :</source>
          <target state="translated">Si &lt;code&gt;mkrot13&lt;/code&gt; esto con mkrot13 :</target>
        </trans-unit>
        <trans-unit id="b2db7414804acef79a0ead64758e1284fbf24a9c" translate="yes" xml:space="preserve">
          <source>If we encrypt this with &lt;code&gt;mkrot13&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b742d69e435d1dc4ae57558eae468b9e3038bfd1" translate="yes" xml:space="preserve">
          <source>If we have a string which needs to be modified, while a regex will almost always be much more flexible, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt;, an oft underused tool, can still be a useful. One scenario might be replace all vowels with another character. The regex solution might look like this:</source>
          <target state="translated">Si tenemos una cadena que necesita ser modificada, mientras que una expresi&amp;oacute;n regular ser&amp;aacute; casi siempre mucho m&amp;aacute;s flexible, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr&lt;/a&gt;&lt;/code&gt; , una herramienta frecuentemente infrautilizada, puede ser &amp;uacute;til. Un escenario podr&amp;iacute;a ser reemplazar todas las vocales con otro car&amp;aacute;cter. La soluci&amp;oacute;n de expresiones regulares podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="d8dec03047abaaa8042a15b74ce655789698f5d5" translate="yes" xml:space="preserve">
          <source>If we have a string which needs to be modified, while a regex will almost always be much more flexible, &lt;code&gt;tr&lt;/code&gt;, an oft underused tool, can still be a useful. One scenario might be replace all vowels with another character. The regex solution might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e855f5e5eecc49e2e1826c2e605b2358ee8b64" translate="yes" xml:space="preserve">
          <source>If we look at any of the C code generated by any of the examples except example 1, you will notice a number of references to ST(n), where n is usually 0. &quot;ST&quot; is actually a macro that points to the n'th argument on the argument stack. ST(0) is thus the first argument on the stack and therefore the first argument passed to the XSUB, ST(1) is the second argument, and so on.</source>
          <target state="translated">Si observamos cualquiera de los códigos C generados por cualquiera de los ejemplos,excepto el ejemplo 1,notaremos una serie de referencias a ST(n),donde n suele ser 0.&quot;ST&quot; es en realidad un macro que apunta al argumento n'th de la pila de argumentos.ST(0)es,por tanto,el primer argumento de la pila y,por lo tanto,el primer argumento que se pasa al XSUB,ST(1)es el segundo argumento,y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="b4b727c2115d816f7a5edf98b373babd311821be" translate="yes" xml:space="preserve">
          <source>If we replace the &lt;code&gt; (?{local $c = $c + 1;})&lt;/code&gt; with &lt;code&gt; (?{$c = $c + 1;})&lt;/code&gt;, the variable changes are</source>
          <target state="translated">Si reemplazamos &lt;code&gt; (?{local $c = $c + 1;})&lt;/code&gt; con &lt;code&gt; (?{$c = $c + 1;})&lt;/code&gt; , los cambios de variable son</target>
        </trans-unit>
        <trans-unit id="6b22701c7de1c1b18f83a3da253320877e6db57e" translate="yes" xml:space="preserve">
          <source>If we want to call the function in scalar context, we have to do a bit more work. We can really have any code we like inside the braces, so we simply have to end with the scalar reference, although how you do that is up to you, and you can use code inside the braces. Note that the use of parens creates a list context, so we need &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; to force the scalar context on the function:</source>
          <target state="translated">Si queremos llamar a la funci&amp;oacute;n en un contexto escalar, tenemos que trabajar un poco m&amp;aacute;s. Realmente podemos tener cualquier c&amp;oacute;digo que nos guste dentro de las llaves, as&amp;iacute; que simplemente tenemos que terminar con la referencia escalar, aunque la forma en que lo haga depende de usted, y puede usar c&amp;oacute;digo dentro de las llaves. Tenga en cuenta que el uso de parens crea un contexto de lista, por lo que necesitamos &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; para forzar el contexto escalar en la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b2ecb0d182e5a6aa3494d3aa82a88c04143a9745" translate="yes" xml:space="preserve">
          <source>If we want to call the function in scalar context, we have to do a bit more work. We can really have any code we like inside the braces, so we simply have to end with the scalar reference, although how you do that is up to you, and you can use code inside the braces. Note that the use of parens creates a list context, so we need &lt;code&gt;scalar&lt;/code&gt; to force the scalar context on the function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa4af82f261a5bfccad859728bbc5e698f2ad5a" translate="yes" xml:space="preserve">
          <source>If we want to sort by the hash value instead, we use the hash key to look it up. We still get out a list of keys, but this time they are ordered by their value.</source>
          <target state="translated">Si queremos clasificar por el valor de hash en su lugar,usamos la clave de hash para buscarlo.Todavía tenemos una lista de claves,pero esta vez están ordenadas por su valor.</target>
        </trans-unit>
        <trans-unit id="1a0a23be20e0afdc53dc3805694c934e04c1d63f" translate="yes" xml:space="preserve">
          <source>If we wanted to include the mp3's title in the greeting, we could override the method:</source>
          <target state="translated">Si quisiéramos incluir el título del mp3 en el saludo,podríamos anular el método:</target>
        </trans-unit>
        <trans-unit id="215abf71d62aea6c4bacd7ab63842ca42cbc8d09" translate="yes" xml:space="preserve">
          <source>If we were interested in performance, not in code compactness, in the success branch we would not use &lt;code&gt;XPUSHs&lt;/code&gt; macros, but &lt;code&gt;PUSHs&lt;/code&gt; macros, and would pre-extend the stack before pushing the return values:</source>
          <target state="translated">Si estuvi&amp;eacute;ramos interesados ​​en el rendimiento, no en la compacidad del c&amp;oacute;digo, en la rama de &amp;eacute;xito no &lt;code&gt;XPUSHs&lt;/code&gt; macros XPUSH , sino macros &lt;code&gt;PUSHs&lt;/code&gt; , y pre-extender&amp;iacute;amos la pila antes de presionar los valores de retorno:</target>
        </trans-unit>
        <trans-unit id="65993e20767895a57d8f797f997352ddbf9ddad7" translate="yes" xml:space="preserve">
          <source>If we've done things right, you'll probably want to write a new source, rather than sub-classing this (see &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; for that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed55ede23a733b9689b8f241805b425f9dc0c341" translate="yes" xml:space="preserve">
          <source>If we've done things right, you'll probably want to write a new source, rather than sub-classing this (see &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; for that).</source>
          <target state="translated">Si hemos hecho las cosas bien, probablemente querr&amp;aacute; escribir una nueva fuente, en lugar de subclasificarla (vea &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; para eso).</target>
        </trans-unit>
        <trans-unit id="433a6e7876c97a91d0108a2079322b6917a252c6" translate="yes" xml:space="preserve">
          <source>If what the angle brackets contain is a simple scalar variable (for example, &lt;code&gt;$foo&lt;/code&gt; ), then that variable contains the name of the filehandle to input from, or its typeglob, or a reference to the same. For example:</source>
          <target state="translated">Si lo que contienen los corchetes angulares es una variable escalar simple (por ejemplo, &lt;code&gt;$foo&lt;/code&gt; ), entonces esa variable contiene el nombre del identificador de archivo desde el que se ingresa, o su typeglob, o una referencia al mismo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6838a6ca305b32b023903f5887f6858a0601c74f" translate="yes" xml:space="preserve">
          <source>If what the angle brackets contain is a simple scalar variable (for example, &lt;code&gt;$foo&lt;/code&gt;), then that variable contains the name of the filehandle to input from, or its typeglob, or a reference to the same. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b51d046d4f4e47130f90dab13b7fc186caff6e3" translate="yes" xml:space="preserve">
          <source>If what's within the angle brackets is neither a filehandle nor a simple scalar variable containing a filehandle name, typeglob, or typeglob reference, it is interpreted as a filename pattern to be globbed, and either a list of filenames or the next filename in the list is returned, depending on context. This distinction is determined on syntactic grounds alone. That means &lt;code&gt;&amp;lt;$x&amp;gt;&lt;/code&gt; is always a &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; from an indirect handle, but &lt;code&gt;&amp;lt;$hash{key}&amp;gt;&lt;/code&gt; is always a &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt;. That's because &lt;code&gt;$x&lt;/code&gt; is a simple scalar variable, but &lt;code&gt;$hash{key}&lt;/code&gt; is not--it's a hash element. Even &lt;code&gt;&amp;lt;$x &amp;gt;&lt;/code&gt; (note the extra space) is treated as &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;(&quot;$x &quot;)&lt;/code&gt; , not &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline($x)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Si lo que est&amp;aacute; dentro de los corchetes angulares no es ni un identificador de archivo ni una variable escalar simple que contenga un nombre de identificador de archivo, typeglob o referencia de typeglob, se interpreta como un patr&amp;oacute;n de nombre de archivo para ser globled y como una lista de nombres de archivo o el siguiente nombre de archivo en la lista. se devuelve, seg&amp;uacute;n el contexto. Esta distinci&amp;oacute;n se determina &amp;uacute;nicamente sobre bases sint&amp;aacute;cticas. Eso significa que &lt;code&gt;&amp;lt;$x&amp;gt;&lt;/code&gt; es siempre un &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; de un identificador indirecto, pero &lt;code&gt;&amp;lt;$hash{key}&amp;gt;&lt;/code&gt; es siempre un &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob()&lt;/a&gt;&lt;/code&gt; . Eso es porque &lt;code&gt;$x&lt;/code&gt; es una variable escalar simple, pero &lt;code&gt;$hash{key}&lt;/code&gt; no lo es, es un elemento hash. Incluso &lt;code&gt;&amp;lt;$x &amp;gt;&lt;/code&gt; (tenga en cuenta el espacio adicional) se trata como &lt;code&gt;&lt;a href=&quot;functions/glob&quot;&gt;glob&lt;/a&gt;(&quot;$x &quot;)&lt;/code&gt; ,no &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline($x)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6919e586a25966a42d5d004843760749c92f077" translate="yes" xml:space="preserve">
          <source>If what's within the angle brackets is neither a filehandle nor a simple scalar variable containing a filehandle name, typeglob, or typeglob reference, it is interpreted as a filename pattern to be globbed, and either a list of filenames or the next filename in the list is returned, depending on context. This distinction is determined on syntactic grounds alone. That means &lt;code&gt;&amp;lt;$x&amp;gt;&lt;/code&gt; is always a &lt;code&gt;readline()&lt;/code&gt; from an indirect handle, but &lt;code&gt;&amp;lt;$hash{key}&amp;gt;&lt;/code&gt; is always a &lt;code&gt;glob()&lt;/code&gt;. That's because &lt;code&gt;$x&lt;/code&gt; is a simple scalar variable, but &lt;code&gt;$hash{key}&lt;/code&gt; is not--it's a hash element. Even &lt;code&gt;&amp;lt;$x &amp;gt;&lt;/code&gt; (note the extra space) is treated as &lt;code&gt;glob(&quot;$x &quot;)&lt;/code&gt;, not &lt;code&gt;readline($x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b842d8a427447b55d56f0f86ffb1407d7bbf70b" translate="yes" xml:space="preserve">
          <source>If whitespace is mostly irrelevant, how does one include space characters in an extended regexp? The answer is to backslash it &lt;code&gt;'\ '&lt;/code&gt; or put it in a character class &lt;code&gt;[ ]&lt;/code&gt; . The same thing goes for pound signs: use &lt;code&gt;\#&lt;/code&gt; or &lt;code&gt;[#]&lt;/code&gt;. For instance, Perl allows a space between the sign and the mantissa or integer, and we could add this to our regexp as follows:</source>
          <target state="translated">Si los espacios en blanco son en su mayor&amp;iacute;a irrelevantes, &amp;iquest;c&amp;oacute;mo se incluyen los caracteres de espacio en una expresi&amp;oacute;n regular extendida? La respuesta es una barra invertida &lt;code&gt;'\ '&lt;/code&gt; o ponerlo en una clase de car&amp;aacute;cter &lt;code&gt;[ ]&lt;/code&gt; . Lo mismo ocurre con los signos de libra: use &lt;code&gt;\#&lt;/code&gt; o &lt;code&gt;[#]&lt;/code&gt; . Por ejemplo, Perl permite un espacio entre el signo y la mantisa o entero, y podr&amp;iacute;amos agregar esto a nuestra expresi&amp;oacute;n regular de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="5ea95fa4866be380e5de6f53e01cf2830a2660fd" translate="yes" xml:space="preserve">
          <source>If whitespace is mostly irrelevant, how does one include space characters in an extended regexp? The answer is to backslash it &lt;code&gt;'\ '&lt;/code&gt; or put it in a character class &lt;code&gt;[ ]&lt;/code&gt;. The same thing goes for pound signs: use &lt;code&gt;\#&lt;/code&gt; or &lt;code&gt;[#]&lt;/code&gt;. For instance, Perl allows a space between the sign and the mantissa or integer, and we could add this to our regexp as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6171e2e12a8c60c3485d29916f7ac5529de6161" translate="yes" xml:space="preserve">
          <source>If writing a plugin is not enough, you can write your own test harness; one of the motives for the 3.00 rewrite of Test::Harness was to make it easier to subclass and extend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac523288e8907db49cd44aeec42c46983d54f41" translate="yes" xml:space="preserve">
          <source>If you</source>
          <target state="translated">Si tú...</target>
        </trans-unit>
        <trans-unit id="a97a499d1638eac60812016983597e71f2e68467" translate="yes" xml:space="preserve">
          <source>If you &quot;mmap&quot; the file with the File::Map module from CPAN, you can virtually load the entire file into a string without actually storing it in memory:</source>
          <target state="translated">Si &quot;mmap&quot; el archivo con el módulo File::Map del CPAN,puedes cargar virtualmente todo el archivo en una cadena sin almacenarlo en la memoria:</target>
        </trans-unit>
        <trans-unit id="bbc7d708aba8a01827e46990051f630f335a2e71" translate="yes" xml:space="preserve">
          <source>If you &lt;a href=&quot;#fork&quot;&gt;&lt;code&gt;fork&lt;/code&gt;&lt;/a&gt; without ever waiting on your children, you will accumulate zombies. On some systems, you can avoid this by setting &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;$SIG{CHLD}&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt;. See also &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for more examples of forking and reaping moribund children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fdf3b9fc81571db27bb02cd29a8e0b53b10cc5" translate="yes" xml:space="preserve">
          <source>If you &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; without ever waiting on your children, you will accumulate zombies. On some systems, you can avoid this by setting &lt;code&gt;$SIG{CHLD}&lt;/code&gt; to &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . See also &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for more examples of forking and reaping moribund children.</source>
          <target state="translated">Si se &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; sin esperar a sus hijos, acumular&amp;aacute; zombis. En algunos sistemas, puede evitar esto configurando &lt;code&gt;$SIG{CHLD}&lt;/code&gt; en &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; para ver m&amp;aacute;s ejemplos de bifurcaciones y cosechas de ni&amp;ntilde;os moribundos.</target>
        </trans-unit>
        <trans-unit id="3342529f369584d116691354aca02d8a637cdc3f" translate="yes" xml:space="preserve">
          <source>If you &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; without ever waiting on your children, you will accumulate zombies. On some systems, you can avoid this by setting &lt;code&gt;$SIG{CHLD}&lt;/code&gt; to &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . See also &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for more examples of forking and reaping moribund children.</source>
          <target state="translated">Si se &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; sin esperar a sus hijos, acumular&amp;aacute; zombis. En algunos sistemas, puede evitar esto configurando &lt;code&gt;$SIG{CHLD}&lt;/code&gt; en &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; para ver m&amp;aacute;s ejemplos de bifurcaciones y cosechas de ni&amp;ntilde;os moribundos.</target>
        </trans-unit>
        <trans-unit id="bb90d14b290d4320ac5634dcbc5bece03b18182e" translate="yes" xml:space="preserve">
          <source>If you actually need to be able to get a real reference back from each hash entry, you can use the Tie::RefHash module, which does the required work for you.</source>
          <target state="translated">Si realmente necesitas ser capaz de obtener una referencia real de cada entrada de hash,puedes usar el módulo Tie::RefHash,que hace el trabajo necesario por ti.</target>
        </trans-unit>
        <trans-unit id="0863c378529bcaaf05a08fbe7b9d62fcdd40f533" translate="yes" xml:space="preserve">
          <source>If you actually want to bless into the stringified version of the reference supplied, you need to stringify it yourself, for example by:</source>
          <target state="translated">Si realmente quieres bendecir en la versión encordada de la referencia suministrada,necesitas encordarla tú mismo,por ejemplo por:</target>
        </trans-unit>
        <trans-unit id="7632fd79ddaeaed4fd83611844af65a8558ccb38" translate="yes" xml:space="preserve">
          <source>If you actually want to pack Unicode codepoints, use the &lt;code&gt;&quot;U&quot;&lt;/code&gt; format instead.</source>
          <target state="translated">Si realmente desea empaquetar puntos de c&amp;oacute;digo Unicode, use el formato &lt;code&gt;&quot;U&quot;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="30a06cdba55cf94e2b0d8887615268f65da700c2" translate="yes" xml:space="preserve">
          <source>If you add the &lt;code&gt;stringify&lt;/code&gt; import option to your &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; declaration, then using a threads object in a string or a string context (e.g., as a hash key) will cause its ID to be used as the value:</source>
          <target state="translated">Si agrega la opci&amp;oacute;n de importaci&amp;oacute;n de &lt;code&gt;stringify&lt;/code&gt; a su declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; , entonces el uso de un objeto de hilos en una cadena o un contexto de cadena (por ejemplo, como una clave hash) har&amp;aacute; que su ID se use como el valor:</target>
        </trans-unit>
        <trans-unit id="30adb136bf842fc19188bd6258e57dee7ddb8e9f" translate="yes" xml:space="preserve">
          <source>If you add the &lt;code&gt;stringify&lt;/code&gt; import option to your &lt;code&gt;use threads&lt;/code&gt; declaration, then using a threads object in a string or a string context (e.g., as a hash key) will cause its ID to be used as the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24defde4aa2bffa14e170e2d3b5990c2b9ad5b66" translate="yes" xml:space="preserve">
          <source>If you already have a Perl repository, you should ensure that you're on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f0b688e7f7db776b8a41a0294b1be395b96046" translate="yes" xml:space="preserve">
          <source>If you already have the data in memory or if you want to keep your code simple, you can use one of the sv_cat*() variants, such as sv_catpvn(). If you want to insert anywhere in the string you can use sv_insert() or sv_insert_flags().</source>
          <target state="translated">Si ya tienes los datos en memoria o si quieres mantener tu código simple,puedes usar una de las variantes de sv_cat*(),como sv_catpvn().Si quieres insertar en cualquier parte de la cadena puedes usar sv_insert()o sv_insert_flags().</target>
        </trans-unit>
        <trans-unit id="d0e6e027d69f3e21d5d8d4eaafdf5a18b7a271a0" translate="yes" xml:space="preserve">
          <source>If you also specify the &lt;code&gt;save&lt;/code&gt; option newly passing tests will be excluded from subsequent runs.</source>
          <target state="translated">Si tambi&amp;eacute;n especifica la opci&amp;oacute;n de &lt;code&gt;save&lt;/code&gt; , las pruebas que pasen recientemente se excluir&amp;aacute;n de las ejecuciones posteriores.</target>
        </trans-unit>
        <trans-unit id="f2315b4f443374dc91536026901e2322007448a6" translate="yes" xml:space="preserve">
          <source>If you alter your @_ arguments in a subroutine (such as with &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;), the stack backtrace will not show the original values.</source>
          <target state="translated">Si modifica sus argumentos @_ en una subrutina (como con &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; ), el seguimiento de la pila no mostrar&amp;aacute; los valores originales.</target>
        </trans-unit>
        <trans-unit id="87b7e2c0f9e7bf47de8a9bd321c66e6de23241e4" translate="yes" xml:space="preserve">
          <source>If you alter your @_ arguments in a subroutine (such as with &lt;code&gt;shift&lt;/code&gt; or &lt;code&gt;pop&lt;/code&gt;), the stack backtrace will not show the original values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bf3485b53b1f2fcb4fdcf6bb2cccc1e74cefad" translate="yes" xml:space="preserve">
          <source>If you are a committer to Perl and you think the patch is good, you can then merge it into blead then push it out to the main repository:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcce70763746b8ab89abce0fda8214efc82356bb" translate="yes" xml:space="preserve">
          <source>If you are accustomed to using perl from various command-line shells found in UNIX environments, you will be less than pleased with what Windows offers by way of a command shell.</source>
          <target state="translated">Si está acostumbrado a usar perl desde varios shells de línea de comandos que se encuentran en entornos UNIX,no estará muy satisfecho con lo que Windows ofrece por medio de un shell de comandos.</target>
        </trans-unit>
        <trans-unit id="75851b1a6055f8c9601d27bb8e4f2638f62e5f5e" translate="yes" xml:space="preserve">
          <source>If you are advanced enough with building C code, here is a suggestion to speed up building perl, and the later &lt;code&gt;make test&lt;/code&gt; . Try to keep your PATH enviromental variable with the least number of folders possible (remember to keep your C compiler's folders there). &lt;code&gt;C:\WINDOWS\system32&lt;/code&gt; or &lt;code&gt;C:\WINNT\system32&lt;/code&gt; depending on your OS version should be first folder in PATH, since &quot;cmd.exe&quot; is the most commonly launched program during the build and later testing.</source>
          <target state="translated">Si est&amp;aacute; lo suficientemente avanzado con la creaci&amp;oacute;n de c&amp;oacute;digo C, aqu&amp;iacute; hay una sugerencia para acelerar la creaci&amp;oacute;n de perl y la posterior &lt;code&gt;make test&lt;/code&gt; creaci&amp;oacute;n . Intente mantener su variable ambiental PATH con la menor cantidad de carpetas posible (recuerde mantener las carpetas de su compilador de C all&amp;iacute;). &lt;code&gt;C:\WINDOWS\system32&lt;/code&gt; o &lt;code&gt;C:\WINNT\system32&lt;/code&gt; dependiendo de la versi&amp;oacute;n de su sistema operativo, deber&amp;iacute;a ser la primera carpeta en PATH, ya que &quot;cmd.exe&quot; es el programa que se ejecuta con m&amp;aacute;s frecuencia durante la compilaci&amp;oacute;n y las pruebas posteriores.</target>
        </trans-unit>
        <trans-unit id="04da8dab27ca1a90f04cb94a9ccc32581630ed82" translate="yes" xml:space="preserve">
          <source>If you are advanced enough with building C code, here is a suggestion to speed up building perl, and the later &lt;code&gt;make test&lt;/code&gt;. Try to keep your PATH environmental variable with the least number of folders possible (remember to keep your C compiler's folders there). &lt;code&gt;C:\WINDOWS\system32&lt;/code&gt; or &lt;code&gt;C:\WINNT\system32&lt;/code&gt; depending on your OS version should be first folder in PATH, since &quot;cmd.exe&quot; is the most commonly launched program during the build and later testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6e47c6af55350e3bd275924a9467fa5be92cb6" translate="yes" xml:space="preserve">
          <source>If you are author of a package and wonder if your $VERSION can be parsed, please try the above method.</source>
          <target state="translated">Si eres el autor de un paquete y te preguntas si tu versión puede ser analizada,por favor intenta el método anterior.</target>
        </trans-unit>
        <trans-unit id="e9341f5fe0aca50dc1a438efa6a2a0829ec331a7" translate="yes" xml:space="preserve">
          <source>If you are building Perl from source, the Perl test suite file</source>
          <target state="translated">Si está construyendo Perl desde la fuente,el archivo del conjunto de pruebas de Perl</target>
        </trans-unit>
        <trans-unit id="fd709122178ec9749d3b052901d53a7e7c059f96" translate="yes" xml:space="preserve">
          <source>If you are calling &lt;b&gt;pod2usage()&lt;/b&gt; from a module and want to display that module's POD, you can use this:</source>
          <target state="translated">Si est&amp;aacute; llamando a &lt;b&gt;pod2usage ()&lt;/b&gt; desde un m&amp;oacute;dulo y desea mostrar el POD de ese m&amp;oacute;dulo, puede usar esto:</target>
        </trans-unit>
        <trans-unit id="f5b3eed9ee23b3eafd899b21c185d1c6a6521682" translate="yes" xml:space="preserve">
          <source>If you are careful, it is possible to mix API calls with the tied hash/array interface in the same piece of code. Although only a few of the methods used to implement the tied interface currently make use of the cursor, you should always assume that the cursor has been changed any time the tied hash/array interface is used. As an example, this code will probably not do what you expect:</source>
          <target state="translated">Si tienes cuidado,es posible mezclar las llamadas a la API con la interfaz hash/array atada en el mismo código.Aunque sólo algunos de los métodos utilizados para implementar la interfaz ligada utilizan actualmente el cursor,siempre se debe asumir que el cursor ha sido cambiado cada vez que se utiliza la interfaz ligada hash/arreglos.Como ejemplo,este código probablemente no hará lo que usted espera:</target>
        </trans-unit>
        <trans-unit id="f310b0eef5419b5aba99dec1af26f1763cc1c050" translate="yes" xml:space="preserve">
          <source>If you are certain that you want a different tool to use the same context you may pass it a snapshot. &lt;code&gt;$ctx-&amp;gt;snapshot&lt;/code&gt; will give you a shallow clone of the context that is safe to pass around or store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e316a557a29cf6095279d19d99c5e2d5b583af0" translate="yes" xml:space="preserve">
          <source>If you are certain that you want to save the context for later, you can use a snapshot. &lt;code&gt;$ctx-&amp;gt;snapshot&lt;/code&gt; will give you a shallow clone of the context that is safe to pass around or store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46443ee64846124969f99d9a251a1b5c33defa28" translate="yes" xml:space="preserve">
          <source>If you are coming here because code of yours is being adversely affected by someone's use of this variable, you can usually work around it by doing this:</source>
          <target state="translated">Si vienes aquí porque tu código está siendo afectado negativamente por el uso de esta variable por parte de alguien,normalmente puedes evitarlo haciendo esto:</target>
        </trans-unit>
        <trans-unit id="580a992ac4c85198002e3da1ab0af0114ef2843d" translate="yes" xml:space="preserve">
          <source>If you are compiling Perl on a remotely-mounted NFS filesystem, the test io/fs.t may fail on test #18. This appears to be a bug in HP-UX and no fix is currently available.</source>
          <target state="translated">Si está compilando Perl en un sistema de archivos NFS montado remotamente,la prueba io/fs.t puede fallar en la prueba #18.Esto parece ser un error en HP-UX y no hay ninguna solución disponible actualmente.</target>
        </trans-unit>
        <trans-unit id="3b33c19354a1a90e2387b434d12153c90f20f627" translate="yes" xml:space="preserve">
          <source>If you are compiling in PASE, then &quot;make install&quot; is the only thing you will need to do.</source>
          <target state="translated">Si estás compilando en PASE,entonces &quot;hacer instalar&quot; es lo único que tendrás que hacer.</target>
        </trans-unit>
        <trans-unit id="81413ae9ed04e602e1a5e2aa34f9a9228c164afc" translate="yes" xml:space="preserve">
          <source>If you are compiling on AIX, simply do a &quot;make install&quot; on the AIX box. Once the install finishes, tar up the /QOpenSys/perl directory. Transfer the tarball to the OS/400 using FTP with the following commands:</source>
          <target state="translated">Si estás compilando en AIX,simplemente haz un &quot;make install&quot; en la caja de AIX.Una vez que la instalación termine,alquitrana el directorio /QOpenSys/perl.Transfiere el tarball al OS/400 usando FTP con los siguientes comandos:</target>
        </trans-unit>
        <trans-unit id="633f40501c71cc3d9b9dd021b947e0958a8636a6" translate="yes" xml:space="preserve">
          <source>If you are confident that all byte-strings will be in a specific encoding like UTF-8,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c32dcfc58ac17c09099d20bc9bc3a8e41bba8b" translate="yes" xml:space="preserve">
          <source>If you are content with the test result, just &quot;make install&quot;</source>
          <target state="translated">Si estás contento con el resultado de la prueba,sólo &quot;haz la instalación&quot;</target>
        </trans-unit>
        <trans-unit id="aa6a61423fd16b04dc17486be56b73db7a8c3506" translate="yes" xml:space="preserve">
          <source>If you are creating a PerlIO layer, you may want to be lazy, in other words, implement only the methods that interest you. The other methods you can either replace with the &quot;blank&quot; methods</source>
          <target state="translated">Si está creando una capa de PerlIO,puede que quiera ser perezoso,en otras palabras,implementar sólo los métodos que le interesen.Los otros métodos pueden ser reemplazados por los métodos &quot;en blanco&quot;</target>
        </trans-unit>
        <trans-unit id="602ef84230a9a9bbabefd6f60652a28db56ddfcd" translate="yes" xml:space="preserve">
          <source>If you are creating a Zip file using the one-shot interface, and any of the input files is greater than 4Gig, a zip64 complaint zip file will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2de75d9b2a463fc1f9325a0ae503a9f6861718" translate="yes" xml:space="preserve">
          <source>If you are developing a suite of related modules/classes it's good practice to use nested classes with a common prefix as this will avoid namespace clashes. For example: Xyz::Control, Xyz::View, Xyz::Model etc. Use the modules in this list as a naming guide.</source>
          <target state="translated">Si está desarrollando un conjunto de módulos/clases relacionadas,es una buena práctica utilizar clases anidadas con un prefijo común,ya que así se evitarán los conflictos entre espacios de nombres.Por ejemplo:Xyz::Control,Xyz::Vista,Xyz::Modelo etc.Use los módulos de esta lista como una guía de nomenclatura.</target>
        </trans-unit>
        <trans-unit id="cf3f54058ec5c3861eafa70f589fb5c16feca4d3" translate="yes" xml:space="preserve">
          <source>If you are doing a blocking &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt;, you'll have to arrange for an alarm handler to provide a timeout (see &lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;). If you have a non-blocking open, you'll likely have a non-blocking read, which means you may have to use a 4-arg &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; to determine whether I/O is ready on that device (see &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; haciendo un bloqueo de &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread()&lt;/a&gt;&lt;/code&gt; , tendr&amp;aacute; que hacer arreglos para que un administrador de alarmas proporcione un tiempo de espera (ver &lt;a href=&quot;functions/alarm&quot;&gt;alarma&lt;/a&gt; ). Si tiene una apertura sin bloqueo, es probable que tenga una lectura sin bloqueo, lo que significa que es posible que deba usar un &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; 4 argumentos para determinar si la E / S est&amp;aacute; lista en ese dispositivo (consulte &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3262a8838df2cab768e5f0aeb8b39d02c8c5bb9" translate="yes" xml:space="preserve">
          <source>If you are doing a blocking &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;sysread()&lt;/code&gt;, you'll have to arrange for an alarm handler to provide a timeout (see &lt;a href=&quot;perlfunc#alarm&quot;&gt;&quot;alarm&quot; in perlfunc&lt;/a&gt;). If you have a non-blocking open, you'll likely have a non-blocking read, which means you may have to use a 4-arg &lt;code&gt;select()&lt;/code&gt; to determine whether I/O is ready on that device (see &lt;a href=&quot;perlfunc#select&quot;&gt;&quot;select&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0d9c19ee9bcc3793bd395f6bcc7da295d90db4" translate="yes" xml:space="preserve">
          <source>If you are doing something complex, such as moving through many pages and forms or a web site, you can use &lt;a href=&quot;WWW::Mechanize&quot;&gt;WWW::Mechanize&lt;/a&gt;. See its documentation for all the details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27eb5f2751e7b3c976fa3693eb1b047c9ea468b5" translate="yes" xml:space="preserve">
          <source>If you are doing something complex, such as moving through many pages and forms or a web site, you can use &lt;a href=&quot;http://search.cpan.org/perldoc/WWW::Mechanize&quot;&gt;WWW::Mechanize&lt;/a&gt;. See its documentation for all the details.</source>
          <target state="translated">Si est&amp;aacute; haciendo algo complejo, como moverse por muchas p&amp;aacute;ginas y formularios o un sitio web, puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/WWW::Mechanize&quot;&gt;WWW :: Mechanize&lt;/a&gt; . Consulte su documentaci&amp;oacute;n para conocer todos los detalles.</target>
        </trans-unit>
        <trans-unit id="1a9b4d7923308acf7ee68c13a2cd11f90f3c70ce" translate="yes" xml:space="preserve">
          <source>If you are experiencing variable suicide, that &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $f&lt;/code&gt; in the subroutine doesn't pick up a fresh copy of the &lt;code&gt;$f&lt;/code&gt; whose value is &lt;code&gt;'foo'&lt;/code&gt; . The output shows that inside the subroutine the value of &lt;code&gt;$f&lt;/code&gt; leaks through when it shouldn't, as in this output:</source>
          <target state="translated">Si est&amp;aacute; experimentando un suicidio variable, &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $f&lt;/code&gt; en la subrutina no obtiene una copia nueva de &lt;code&gt;$f&lt;/code&gt; cuyo valor es &lt;code&gt;'foo'&lt;/code&gt; . La salida muestra que dentro de la subrutina el valor de &lt;code&gt;$f&lt;/code&gt; filtra cuando no deber&amp;iacute;a, como en esta salida:</target>
        </trans-unit>
        <trans-unit id="90ffffc1c986cd8a0326c90c4ba333b4ce6ffe43" translate="yes" xml:space="preserve">
          <source>If you are experiencing variable suicide, that &lt;code&gt;my $f&lt;/code&gt; in the subroutine doesn't pick up a fresh copy of the &lt;code&gt;$f&lt;/code&gt; whose value is &lt;code&gt;'foo'&lt;/code&gt;. The output shows that inside the subroutine the value of &lt;code&gt;$f&lt;/code&gt; leaks through when it shouldn't, as in this output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbeae6d94c0568a9909c55582ce46133df1b3000" translate="yes" xml:space="preserve">
          <source>If you are familiar with the</source>
          <target state="translated">Si está familiarizado con el</target>
        </trans-unit>
        <trans-unit id="09b5540260d1429f031cae6d4fea34d1c0219ed0" translate="yes" xml:space="preserve">
          <source>If you are forking many processes in parallel that are all creating temporary files, you may need to reset the random number seed using srand(EXPR) in each child else all the children will attempt to walk through the same set of random file names and may well cause themselves to give up if they exceed the number of retry attempts.</source>
          <target state="translated">Si estás bifurcando muchos procesos en paralelo que están todos creando archivos temporales,puede que necesites reiniciar la semilla de números aleatorios usando srand(EXPR)en cada hijo,de lo contrario todos los hijos intentarán pasar por el mismo conjunto de nombres de archivos aleatorios y puede que se den por vencidos si superan el número de intentos de reintento.</target>
        </trans-unit>
        <trans-unit id="79eaecd3ef824520bc14f0a6f551bc580fb007f0" translate="yes" xml:space="preserve">
          <source>If you are going to convert the script to a module you can use the opportunity to redesign the interface. The guidelines for module creation above include many of the issues you should consider.</source>
          <target state="translated">Si vas a convertir el guión en un módulo puedes usar la oportunidad de rediseñar la interfaz.Las directrices para la creación de módulos que se han mencionado anteriormente incluyen muchas de las cuestiones que debes considerar.</target>
        </trans-unit>
        <trans-unit id="37c8864889db08a398c2a1fd61fb5557dd86b1b1" translate="yes" xml:space="preserve">
          <source>If you are going to put something onto the Perl stack, you need to know where to put it. This is the purpose of the macro &lt;code&gt;dSP&lt;/code&gt; --it declares and initializes a</source>
          <target state="translated">Si va a poner algo en la pila de Perl, necesita saber d&amp;oacute;nde ponerlo. Este es el prop&amp;oacute;sito de la macro &lt;code&gt;dSP&lt;/code&gt; : declara e inicializa un</target>
        </trans-unit>
        <trans-unit id="537495a37e599c942d74bd5d8aca0155b4da8202" translate="yes" xml:space="preserve">
          <source>If you are going to put something onto the Perl stack, you need to know where to put it. This is the purpose of the macro &lt;code&gt;dSP&lt;/code&gt;--it declares and initializes a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf3f133791811ca9201975358ebf1e226d3c50a" translate="yes" xml:space="preserve">
          <source>If you are going to use the HP DCE package, the library used for threading is /usr/lib/libcma.sl, but there have been multiple updates of that library over time. Perl will build with the first version, but it will not pass the test suite. Older Oracle versions might be a compelling reason not to update that library, otherwise please find a newer version in one of the following patches: PHSS_19739, PHSS_20608, or PHSS_23672</source>
          <target state="translated">Si vas a utilizar el paquete HP DCE,la biblioteca utilizada para el subproceso es /usr/lib/libcma.sl,pero ha habido múltiples actualizaciones de esa biblioteca a lo largo del tiempo.Perl se construirá con la primera versión,pero no pasará el paquete de pruebas.Las versiones antiguas de Oracle pueden ser una razón de peso para no actualizar esa biblioteca,de lo contrario,por favor encuentre una versión más reciente en uno de los siguientes parches:PHSS_19739,PHSS_20608,o PHSS_23672</target>
        </trans-unit>
        <trans-unit id="330882464199f1a0851acc4b79e3a966cdc91c15" translate="yes" xml:space="preserve">
          <source>If you are going to use this method you have to be aware of a possible memory leak which can arise under very specific circumstances. To explain these circumstances you need to know a bit about the flow of control between Perl and the callback routine.</source>
          <target state="translated">Si va a utilizar este método tiene que ser consciente de una posible fuga de memoria que puede surgir en circunstancias muy específicas.Para explicar estas circunstancias necesitas saber un poco sobre el flujo de control entre Perl y la rutina de devolución de llamada.</target>
        </trans-unit>
        <trans-unit id="91073f8278c247bf05c5742a59e2d0906bf12cbd" translate="yes" xml:space="preserve">
          <source>If you are going to write a platform specific MM package, please try to limit the necessary overrides to primitive methods, and if it is not possible to do so, let's work out how to achieve that gain.</source>
          <target state="translated">Si va a escribir un paquete MM específico para una plataforma,por favor,intente limitar las anulaciones necesarias a los métodos primitivos,y si no es posible hacerlo,averigüemos cómo conseguir esa ganancia.</target>
        </trans-unit>
        <trans-unit id="3470649433d76902fec9be392ea404a581213006" translate="yes" xml:space="preserve">
          <source>If you are having trouble with square brackets then consider switching your rlogin or telnet client. Try to avoid older 3270 emulators and ISHELL for working with Perl on USS.</source>
          <target state="translated">Si tienes problemas con los corchetes,entonces considera cambiar tu cliente rlogin o telnet.Intenta evitar los emuladores 3270 más antiguos e ISHELL para trabajar con Perl en USS.</target>
        </trans-unit>
        <trans-unit id="fb193e3267912e83638916e973e0dcc8b120aead" translate="yes" xml:space="preserve">
          <source>If you are in any doubt about the license situation, contact either the Berkeley DB authors or the author of DB_File. See &lt;a href=&quot;#AUTHOR&quot;&gt;&quot;AUTHOR&quot;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be777d0c50e7b77da7283f3ff8a7e540b7f7344c" translate="yes" xml:space="preserve">
          <source>If you are in any doubt about the license situation, contact either the Berkeley DB authors or the author of DB_File. See &lt;a href=&quot;#AUTHOR&quot;&gt;AUTHOR&lt;/a&gt; for details.</source>
          <target state="translated">Si tiene alguna duda sobre la situaci&amp;oacute;n de la licencia, comun&amp;iacute;quese con los autores de Berkeley DB o con el autor de DB_File. Ver &lt;a href=&quot;#AUTHOR&quot;&gt;AUTOR&lt;/a&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="99320978b9537887ebc85e1dfd4bdf0910cbc812" translate="yes" xml:space="preserve">
          <source>If you are in doubt which package contains a file you are missing, try to find an installation that has that file. Then do a</source>
          <target state="translated">Si tiene dudas sobre qué paquete contiene un archivo que le falta,intente encontrar una instalación que tenga ese archivo.Luego haga un</target>
        </trans-unit>
        <trans-unit id="92276bc0e44e1b658a5288e18f73cfbd284b63bb" translate="yes" xml:space="preserve">
          <source>If you are intending to manipulate bitstrings, be certain that you're supplying bitstrings: If an operand is a number, that will imply a &lt;b&gt;numeric&lt;/b&gt; bitwise operation. You may explicitly show which type of operation you intend by using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;0+&lt;/code&gt; , as in the examples below.</source>
          <target state="translated">Si tiene la intenci&amp;oacute;n de manipular cadenas de bits, aseg&amp;uacute;rese de proporcionar cadenas de bits: si un operando es un n&amp;uacute;mero, eso implicar&amp;aacute; una operaci&amp;oacute;n &lt;b&gt;num&amp;eacute;rica&lt;/b&gt; bit a bit. Puede mostrar expl&amp;iacute;citamente qu&amp;eacute; tipo de operaci&amp;oacute;n desea utilizar utilizando &lt;code&gt;&quot;&quot;&lt;/code&gt; o &lt;code&gt;0+&lt;/code&gt; , como en los ejemplos siguientes.</target>
        </trans-unit>
        <trans-unit id="2877e8cae4b72c189b80caef94210456b80f06da" translate="yes" xml:space="preserve">
          <source>If you are intending to manipulate bitstrings, be certain that you're supplying bitstrings: If an operand is a number, that will imply a &lt;b&gt;numeric&lt;/b&gt; bitwise operation. You may explicitly show which type of operation you intend by using &lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;0+&lt;/code&gt;, as in the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e74d8ccd8d67f221dc38d69397982438ef8887" translate="yes" xml:space="preserve">
          <source>If you are interested in the guts underlying these systems, check out &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; interesado en las agallas que subyacen a estos sistemas, consulte &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f81bce975381ffe867c89af365021d38913e30eb" translate="yes" xml:space="preserve">
          <source>If you are interested in the z/OS (formerly known as OS/390) and POSIX-BC (BS2000) ports of Perl then see the perl-mvs mailing list. To subscribe, send an empty message to perl-mvs-subscribe@perl.org.</source>
          <target state="translated">Si está interesado en los puertos z/OS (antes conocido como OS/390)y POSIX-BC (BS2000)de Perl,entonces vea la lista de correo de perl-mvs.Para suscribirse,envíe un mensaje vacío a perl-mvs-subscribe@perl.org.</target>
        </trans-unit>
        <trans-unit id="81e9b341887276c07ed78e971fe73fb2fe685324" translate="yes" xml:space="preserve">
          <source>If you are interested in writing new tools you should take a look at &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b06deb07c89c9dfd8a2b96ce84d618599bef3b" translate="yes" xml:space="preserve">
          <source>If you are interested in writing tests using new tools then you should look at &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt;. &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt; is a separate cpan distribution that contains many tools implemented on Test2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d9bbb97bd39f15f79a0ad6f3bd53d77bb54ef1" translate="yes" xml:space="preserve">
          <source>If you are looking for a &quot;bar&quot; that isn't preceded by a &quot;foo&quot;, &lt;code&gt;/(?!foo)bar/&lt;/code&gt; will not do what you want. That's because the &lt;code&gt;(?!foo)&lt;/code&gt; is just saying that the next thing cannot be &quot;foo&quot;--and it's not, it's a &quot;bar&quot;, so &quot;foobar&quot; will match. Use look-behind instead (see below).</source>
          <target state="translated">Si est&amp;aacute; buscando una &quot;barra&quot; que no est&amp;eacute; precedida por un &quot;foo&quot;, &lt;code&gt;/(?!foo)bar/&lt;/code&gt; no har&amp;aacute; lo que quiere. Eso es porque el &lt;code&gt;(?!foo)&lt;/code&gt; solo est&amp;aacute; diciendo que lo siguiente no puede ser &quot;foo&quot; - y no lo es, es una &quot;barra&quot;, por lo que &quot;foobar&quot; coincidir&amp;aacute;. En su lugar, utilice mirar hacia atr&amp;aacute;s (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="f7b2a50928124f0618a8144a8e1baa9cc8e568eb" translate="yes" xml:space="preserve">
          <source>If you are looking for a &quot;bar&quot; that isn't preceded by a &quot;foo&quot;, &lt;code&gt;/(?!foo)bar/&lt;/code&gt; will not do what you want. That's because the &lt;code&gt;(?!foo)&lt;/code&gt; is just saying that the next thing cannot be &quot;foo&quot;--and it's not, it's a &quot;bar&quot;, so &quot;foobar&quot; will match. Use lookbehind instead (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc60d35f80efdd879c9aa94cc9f2ee7ad195384c" translate="yes" xml:space="preserve">
          <source>If you are looking for a class that does everything for you that you don't define yourself, use the &lt;code&gt;Tie::StdScalar&lt;/code&gt; class, not the &lt;code&gt;Tie::Scalar&lt;/code&gt; one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20427718038bfba8c53137f8646eb9abfc2ff46" translate="yes" xml:space="preserve">
          <source>If you are looking for a class that does everything for you you don't define yourself, use the &lt;code&gt;Tie::StdScalar&lt;/code&gt; class, not the &lt;code&gt;Tie::Scalar&lt;/code&gt; one.</source>
          <target state="translated">Si est&amp;aacute; buscando una clase que haga todo por usted, no se define usted mismo, use la clase &lt;code&gt;Tie::StdScalar&lt;/code&gt; , no la clase &lt;code&gt;Tie::Scalar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7787fb3feb00a627232c8ef4ce3954c9d7deed73" translate="yes" xml:space="preserve">
          <source>If you are looking for a table of contents to the Perl library modules documentation, see the &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt; page.</source>
          <target state="translated">Si est&amp;aacute; buscando una tabla de contenido para la documentaci&amp;oacute;n de los m&amp;oacute;dulos de la biblioteca de Perl, consulte la p&amp;aacute;gina de &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40f5e81161933568c426f178117fbe0b2c9f0084" translate="yes" xml:space="preserve">
          <source>If you are looking for a table of contents to the Perl library modules documentation, see the &lt;a href=&quot;perltoc&quot;&gt;perltoc&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fac826063cfc00ef4ae02f7626b0848d723ad5d" translate="yes" xml:space="preserve">
          <source>If you are looking for an example, I recommend that you look at the simple example in the Memoize::Expire documentation, or at the code for Memoize::Expire itself.</source>
          <target state="translated">Si está buscando un ejemplo,le recomiendo que mire el ejemplo simple en la documentación de Memoize::Expire,o en el código de Memoize::Expire en sí mismo.</target>
        </trans-unit>
        <trans-unit id="01bb70148d15624f6da074182f77ad2f0eee86c6" translate="yes" xml:space="preserve">
          <source>If you are looking for helpers with &lt;code&gt;is&lt;/code&gt;, &lt;code&gt;like&lt;/code&gt;, and others, see &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33652a525614ae7d89321a43fb11331d7e5b6fa" translate="yes" xml:space="preserve">
          <source>If you are making use of the Perl stack pointer in your code you must always refresh the local copy using SPAGAIN whenever you make use of the</source>
          <target state="translated">Si estás haciendo uso del puntero de pila de Perl en tu código siempre debes refrescar la copia local usando SPAGAIN siempre que hagas uso del</target>
        </trans-unit>
        <trans-unit id="31bb9506f4ff23e6db70b0b08455755a7de18605" translate="yes" xml:space="preserve">
          <source>If you are not using threads, forking, or IPC then the only difference between a &lt;code&gt;filter&lt;/code&gt; and a &lt;code&gt;pre_filter&lt;/code&gt; is that &lt;code&gt;pre_filter&lt;/code&gt; subs run first. When you are using threads, forking, or IPC, pre_filters happen to events before they are sent to their destination proc/thread, ordinary filters happen only in the destination hub/thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0468c5bae6319f4655b5720508b9d190b598ea2a" translate="yes" xml:space="preserve">
          <source>If you are on a Unix-like system, you might be able to get away with a system call where you put an &lt;code&gt;&amp;amp;&lt;/code&gt; on the end of the command:</source>
          <target state="translated">Si est&amp;aacute; en un sistema similar a Unix, es posible que pueda salirse con la suya con una llamada al sistema en la que ponga un &lt;code&gt;&amp;amp;&lt;/code&gt; al final del comando:</target>
        </trans-unit>
        <trans-unit id="74fb92ccab7935bd1e0cc2c8300a7bef29eb75de" translate="yes" xml:space="preserve">
          <source>If you are on a non-UNIX platform &lt;b&gt;perldoc&lt;/b&gt;&lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;, as some features may be unimplemented or work differently.</source>
          <target state="translated">Si est&amp;aacute; en una plataforma &lt;b&gt;perldoc &lt;/b&gt;&lt;a href=&quot;perlport&quot;&gt;perlport que&lt;/a&gt; no es UNIX , ya que algunas caracter&amp;iacute;sticas pueden no estar implementadas o funcionar de manera diferente.</target>
        </trans-unit>
        <trans-unit id="5f59ff52a71652ecb89231c85ecae2ce17688eb9" translate="yes" xml:space="preserve">
          <source>If you are on a system that correctly implements &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; and you use the example appending code from &quot;perldoc -f flock&quot; everything will be OK even if the OS you are on doesn't implement append mode correctly (if such a system exists). So if you are happy to restrict yourself to OSs that implement &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; (and that's not really much of a restriction) then that is what you should do.</source>
          <target state="translated">Si est&amp;aacute;s en un sistema que implementa correctamente &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; y usas el c&amp;oacute;digo adjunto de ejemplo de &quot;perldoc -f flock&quot;, todo estar&amp;aacute; bien incluso si el sistema operativo en el que est&amp;aacute;s no implementa correctamente el modo append (si tal sistema existe). Entonces, si est&amp;aacute; contento de restringirse a sistemas operativos que implementan &lt;code&gt;&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; (y eso no es realmente una gran restricci&amp;oacute;n), entonces eso es lo que debe hacer.</target>
        </trans-unit>
        <trans-unit id="775ac36d1065d528736d6584503c5960de9afca8" translate="yes" xml:space="preserve">
          <source>If you are on a system that correctly implements &lt;code&gt;flock&lt;/code&gt; and you use the example appending code from &quot;perldoc -f flock&quot; everything will be OK even if the OS you are on doesn't implement append mode correctly (if such a system exists). So if you are happy to restrict yourself to OSs that implement &lt;code&gt;flock&lt;/code&gt; (and that's not really much of a restriction) then that is what you should do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d7fa3e38420fc843370b116c9be081ea5603e0" translate="yes" xml:space="preserve">
          <source>If you are only exporting function names it is recommended to omit the ampersand, as the implementation is faster this way.</source>
          <target state="translated">Si sólo se exportan los nombres de las funciones se recomienda omitir el ampersand,ya que la implementación es más rápida de esta manera.</target>
        </trans-unit>
        <trans-unit id="2de91fd61e5dabce87e62b432c1af2d2e0384486" translate="yes" xml:space="preserve">
          <source>If you are overriding any of these methods in your Makefile.PL (in the MY class), please report that to the makemaker mailing list. We are trying to minimize the necessary method overrides and switch to data driven Makefile.PLs wherever possible. In the long run less methods will be overridable via the MY class.</source>
          <target state="translated">Si está anulando alguno de estos métodos en su Makefile.PL (en la clase MY),por favor informe de ello a la lista de correo makemaker.Estamos tratando de minimizar las anulaciones de los métodos necesarios y cambiar a Makefile.PLs basado en datos siempre que sea posible.A largo plazo,menos métodos serán anulados a través de la clase MY.</target>
        </trans-unit>
        <trans-unit id="25095e5b9b6ab11015f95ba50809b8be1a58758d" translate="yes" xml:space="preserve">
          <source>If you are particularly interested in customizing this module's output even more, see the source and/or write to me.</source>
          <target state="translated">Si está particularmente interesado en personalizar aún más la salida de este módulo,vea la fuente y/o escríbame.</target>
        </trans-unit>
        <trans-unit id="d40865e3f4f814dc75edbc20fbc8762037c6c824" translate="yes" xml:space="preserve">
          <source>If you are printing IVs, UVs, or NVS instead of the stdio(3) style formatting codes like &lt;code&gt;%d&lt;/code&gt; , &lt;code&gt;%ld&lt;/code&gt; , &lt;code&gt;%f&lt;/code&gt; , you should use the following macros for portability</source>
          <target state="translated">Si est&amp;aacute; imprimiendo IV, UV o NVS en lugar de los c&amp;oacute;digos de formato de estilo stdio (3) como &lt;code&gt;%d&lt;/code&gt; , &lt;code&gt;%ld&lt;/code&gt; , &lt;code&gt;%f&lt;/code&gt; , debe usar las siguientes macros para la portabilidad</target>
        </trans-unit>
        <trans-unit id="367b87e5b6a685cdb2627b032e60c907e2607076" translate="yes" xml:space="preserve">
          <source>If you are printing IVs, UVs, or NVS instead of the stdio(3) style formatting codes like &lt;code&gt;%d&lt;/code&gt;, &lt;code&gt;%ld&lt;/code&gt;, &lt;code&gt;%f&lt;/code&gt;, you should use the following macros for portability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da5a3aba0348fe8e8ae52d62d3e9bfb01a53b73" translate="yes" xml:space="preserve">
          <source>If you are printing addresses of pointers, use %p or UVxf combined with PTR2UV().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b082a380f246d61dd682cd511f2ea77809e32735" translate="yes" xml:space="preserve">
          <source>If you are printing addresses of pointers, use UVxf combined with PTR2UV(), do not use %lx or %p.</source>
          <target state="translated">Si está imprimiendo direcciones de punteros,use UVxf combinado con PTR2UV(),no use %lx o %p.</target>
        </trans-unit>
        <trans-unit id="b6f4ed221243b9dde4f0f2cc29b067e485bbf822" translate="yes" xml:space="preserve">
          <source>If you are reading this documentation, looking for a replacement for the &lt;code&gt;FileHandle&lt;/code&gt; package, then I suggest you read the documentation for &lt;code&gt;IO::File&lt;/code&gt; too.</source>
          <target state="translated">Si est&amp;aacute; leyendo esta documentaci&amp;oacute;n, buscando un reemplazo para el paquete &lt;code&gt;FileHandle&lt;/code&gt; , le sugiero que lea tambi&amp;eacute;n la documentaci&amp;oacute;n de &lt;code&gt;IO::File&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c40246fed4e0a31f96c46a72d0a85e56bbe29c3" translate="yes" xml:space="preserve">
          <source>If you are reading this in the future then it's possible that the state of the art has changed. We recommend you start by reading the perlootut document in the latest stable release of Perl, rather than this version.</source>
          <target state="translated">Si estás leyendo esto en el futuro,entonces es posible que el estado de la técnica haya cambiado.Le recomendamos que empiece leyendo el documento de perlootut en la última versión estable de Perl,en lugar de esta versión.</target>
        </trans-unit>
        <trans-unit id="d0add6c557074aa94dbce442362b0e5da76c5396" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Bzip2 can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Compress :: Bzip2 puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de salida se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para escribir en un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="b7e4df4e4f27db0bf9a46e2a1941e85758d61068" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Deflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Compress :: Deflate puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de salida se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para escribir en un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="41e65ffc69fed189ecd525fba0988f92db4e7035" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Gzip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Compress :: Gzip puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de salida se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para escribir en un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="c6b6ef257ae9881b6bd3fd8eaa22b1a4c05c99ca" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::RawDeflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Compress :: RawDeflate puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de salida se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para escribir en un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="3c423a94c7fc5cb61812044d70c6c094354f683a" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Compress::Zip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Compress :: Zip se puede usar exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de salida se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para escribir en un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="5fea5722273a1695c99b2d6f3f73bb1257cd24c3" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::AnyInflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Uncompress :: AnyInflate puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de entrada se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para leer una l&amp;iacute;nea de un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="b2972d5cdbb1eb98b989631b3ded397e40e59e75" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::AnyUncompress can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Uncompress :: AnyUncompress puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de entrada se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para leer una l&amp;iacute;nea de un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="18aa1921698d337e93a7e4edaa2b66e95de457bf" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Bunzip2 can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Uncompress :: Bunzip2 puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de entrada se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para leer una l&amp;iacute;nea de un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="f86eb994b5def7f39f87b382b570ded31372309e" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Gunzip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Uncompress :: Gunzip se puede usar exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de entrada se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para leer una l&amp;iacute;nea de un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="05ab40d4db9fa577fb79380b48870abe52f5c6be" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Inflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto &lt;code&gt;$z&lt;/code&gt; devuelto por IO :: Uncompress :: Inflate puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de entrada se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para leer una l&amp;iacute;nea de un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="d70a4ecbd7bb1c964123dba102fe8a49b561cb00" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::RawInflate can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Uncompress :: RawInflate puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de entrada se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para leer una l&amp;iacute;nea de un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="3608890b582bffd465c544ac9e831ad2b06501a0" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt; , returned from IO::Uncompress::Unzip can be used exactly like an &lt;a href=&quot;../file&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt; . For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.005 o mejor, el objeto, &lt;code&gt;$z&lt;/code&gt; , devuelto por IO :: Uncompress :: Unzip puede usarse exactamente como un &lt;a href=&quot;../file&quot;&gt;identificador de archivo IO :: File&lt;/a&gt; . Esto significa que todas las operaciones normales del archivo de entrada se pueden realizar con &lt;code&gt;$z&lt;/code&gt; . Por ejemplo, para leer una l&amp;iacute;nea de un archivo / b&amp;uacute;fer comprimido, puede usar cualquiera de estas formas</target>
        </trans-unit>
        <trans-unit id="c3f55f8a5aa9143947c1b03103f8fcb1230f8026" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Compress::Bzip2 can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c943ecc09f7906641ce0c8c9195f36b53b0da84" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Compress::Deflate can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d2de3cb6af8e02dfa388bc8385e1f9fef63232" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Compress::Gzip can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f19394fb5dae0da1468d85a7077d6de961381d1" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Compress::RawDeflate can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8705529210f30abadfa2690a88a8e55709062caf" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Compress::Zip can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal output file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to write to a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8dcbb9c89b754c497d19b04a16a87cbcd0b450" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Uncompress::AnyInflate can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc295bba8742677124dc7e9dbafd6bdce18ea43" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Uncompress::AnyUncompress can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04020399fea242c9c0dc69403e3ea87fc90e780" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Uncompress::Bunzip2 can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8386c862fdf7a36268d1e2d11759b36cc61a052" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Uncompress::Gunzip can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e228b2a0d2a2705757b5a03c01b16b81052402f0" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Uncompress::Inflate can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250328bb572e14771a91f743881702e8168f7ce1" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Uncompress::RawInflate can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7ddace8a1bf7c76549d07abf22fa8e8e550364" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.005 or better the object, &lt;code&gt;$z&lt;/code&gt;, returned from IO::Uncompress::Unzip can be used exactly like an &lt;a href=&quot;IO::File&quot;&gt;IO::File&lt;/a&gt; filehandle. This means that all normal input file operations can be carried out with &lt;code&gt;$z&lt;/code&gt;. For example, to read a line from a compressed file/buffer you can use either of these forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f53b731da5c3618fcf6d87c9434da7f9ed2f65" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.6.0 or better, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma allows fine control of what warnings are produced. See &lt;a href=&quot;perllexwarn&quot;&gt;perllexwarn&lt;/a&gt; for more details.</source>
          <target state="translated">Si est&amp;aacute; ejecutando Perl 5.6.0 o superior, el pragma de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;uso&lt;/a&gt; permite un control preciso de las advertencias que se producen. Consulte &lt;a href=&quot;perllexwarn&quot;&gt;perllexwarn&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e3a447e1361d79aaa9ee74688b52a31d693ae7e5" translate="yes" xml:space="preserve">
          <source>If you are running Perl 5.6.0 or better, the &lt;code&gt;use warnings&lt;/code&gt; pragma allows fine control of what warnings are produced. See &lt;a href=&quot;perllexwarn&quot;&gt;perllexwarn&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8514c8e63d77882efdff2789324ce75a2c20f4" translate="yes" xml:space="preserve">
          <source>If you are running VOS Release 14.4.1 or later, you can obtain a pre-compiled, supported copy of perl by purchasing the GNU Tools product from Stratus Technologies.</source>
          <target state="translated">Si está ejecutando la versión 14.4.1 de VOS o posterior,puede obtener una copia precompilada y soportada de perl comprando el producto GNU Tools de Stratus Technologies.</target>
        </trans-unit>
        <trans-unit id="90113b08f2e5803b4f4fa9119cc6038c86b7bb42" translate="yes" xml:space="preserve">
          <source>If you are running a Unix derivative this value defaults to</source>
          <target state="translated">Si está ejecutando un derivado de Unix,este valor por defecto es</target>
        </trans-unit>
        <trans-unit id="9cc43bdd9e8f39cf93edce0474ecd12686e0c219" translate="yes" xml:space="preserve">
          <source>If you are running experiments with embedding perl as a library into other applications, you might find MakeMaker is not sufficient. You'd better have a look at &lt;a href=&quot;ExtUtils::Embed&quot;&gt;ExtUtils::Embed&lt;/a&gt; which is a collection of utilities for embedding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae421a254aed7ffd059cb6be52110578a85cd308" translate="yes" xml:space="preserve">
          <source>If you are running experiments with embedding perl as a library into other applications, you might find MakeMaker is not sufficient. You'd better have a look at ExtUtils::Embed which is a collection of utilities for embedding.</source>
          <target state="translated">Si estás haciendo experimentos para incrustar perl como una biblioteca en otras aplicaciones,puede que descubras que MakeMaker no es suficiente.Será mejor que eches un vistazo a ExtUtils::Embed que es una colección de utilidades para incrustar.</target>
        </trans-unit>
        <trans-unit id="743cbf656ee357233b7747fd85635a26f54ae749" translate="yes" xml:space="preserve">
          <source>If you are running the tests from a emacs shell window, you may see failures in op/stat.t. Run &quot;dmake test-notty&quot; in that case.</source>
          <target state="translated">Si está ejecutando las pruebas desde una ventana de la shell del emacs,puede que vea fallos en op/stat.t.Ejecute &quot;dmake test-notty&quot; en ese caso.</target>
        </trans-unit>
        <trans-unit id="eb661707e45d0fa6207ff65030fca0e35ac953eb" translate="yes" xml:space="preserve">
          <source>If you are running under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (and if you aren't, why in the world aren't you?), you'll have to add some declarations to make it happy:</source>
          <target state="translated">Si est&amp;aacute; ejecutando bajo &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict&lt;/code&gt; (y si no lo est&amp;aacute;, &amp;iquest;por qu&amp;eacute; demonios no lo est&amp;aacute;?), Tendr&amp;aacute; que agregar algunas declaraciones para hacerlo feliz:</target>
        </trans-unit>
        <trans-unit id="0cc4f2e6ac843fbaf8224a05183a7220196cd15a" translate="yes" xml:space="preserve">
          <source>If you are running under &lt;code&gt;use strict&lt;/code&gt; (and if you aren't, why in the world aren't you?), you'll have to add some declarations to make it happy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767de91007776d2ff4bd67fc3c5e04ab7cebdfa3" translate="yes" xml:space="preserve">
          <source>If you are seeing spaces between the elements of your array when you print the array, you are probably interpolating the array in double quotes:</source>
          <target state="translated">Si al imprimir la matriz se ven espacios entre los elementos de la misma,es probable que esté interpolando la matriz entre comillas:</target>
        </trans-unit>
        <trans-unit id="094ee1dd3418e11cdcfc777d87840149f066679d" translate="yes" xml:space="preserve">
          <source>If you are stuck with older Perls, you can do Unicode with the &lt;a href=&quot;Unicode::String&quot;&gt;Unicode::String&lt;/a&gt; module, and character conversions using the &lt;a href=&quot;Unicode::Map8&quot;&gt;Unicode::Map8&lt;/a&gt; and &lt;a href=&quot;Unicode::Map&quot;&gt;Unicode::Map&lt;/a&gt; modules. If you are using Japanese encodings, you might try using the jperl 5.005_03.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bb00dc57c212c5f89aeced92e2138d70407e36" translate="yes" xml:space="preserve">
          <source>If you are stuck with older Perls, you can do Unicode with the &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::String&quot;&gt;Unicode::String&lt;/a&gt; module, and character conversions using the &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map8&quot;&gt;Unicode::Map8&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map&quot;&gt;Unicode::Map&lt;/a&gt; modules. If you are using Japanese encodings, you might try using the jperl 5.005_03.</source>
          <target state="translated">Si est&amp;aacute; atascado con Perls m&amp;aacute;s antiguos, puede hacer Unicode con el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::String&quot;&gt;Unicode :: String&lt;/a&gt; y conversiones de caracteres usando los m&amp;oacute;dulos &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map8&quot;&gt;Unicode :: Map8&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Map&quot;&gt;Unicode :: Map&lt;/a&gt; . Si usa codificaciones japonesas, puede intentar usar jperl 5.005_03.</target>
        </trans-unit>
        <trans-unit id="a4539f5703f218245f234df49c0b9e75bd10857f" translate="yes" xml:space="preserve">
          <source>If you are submitting a code patch there are several things that you can do to help the Perl 5 Porters accept your patch.</source>
          <target state="translated">Si estás presentando un parche de código,hay varias cosas que puedes hacer para ayudar a los Portadores de Perl 5 a aceptar tu parche.</target>
        </trans-unit>
        <trans-unit id="9d2ae6978c448ceee8a44a91cddc4545fb9e5c5e" translate="yes" xml:space="preserve">
          <source>If you are targetting an ARM device -- which currently includes the vast majority of phones and tablets -- you'll want to pass -Dcc=arm-unknown-nto-qnx8.0.0eabi-gcc to Configure. Alternatively, if you are targetting an x86 device, or using the simulator provided with the NDK, you should specify -Dcc=ntox86-gcc instead.</source>
          <target state="translated">Si usted está apuntando a un dispositivo ARM-que actualmente incluye la gran mayoría de los teléfonos y tabletas-usted querrá pasar -Dcc=arm-unknown-nto-qnx8.0.0eabi-gcc a Configurar.Alternativamente,si estás apuntando a un dispositivo x86,o usando el simulador provisto con el NDK,deberías especificar -Dcc=ntox86-gcc en su lugar.</target>
        </trans-unit>
        <trans-unit id="562b5f2e0c42aed49d34015bad0780eaae56e849" translate="yes" xml:space="preserve">
          <source>If you are targetting x86 Android, you will have to change &lt;code&gt;$TARGETARCH-gcc&lt;/code&gt; to &lt;code&gt;i686-linux-android-gcc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81847f52511bd6e6f2d950ba6b028d46d7fda4c" translate="yes" xml:space="preserve">
          <source>If you are testing locales (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), there are helper functions in</source>
          <target state="translated">Si est&amp;aacute; probando locales (ver &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; ), hay funciones auxiliares en</target>
        </trans-unit>
        <trans-unit id="638d5e69c0134925bf444f9f37d95ff5346d9353" translate="yes" xml:space="preserve">
          <source>If you are testing only once, the standard module &lt;a href=&quot;List::Util&quot;&gt;List::Util&lt;/a&gt; exports the function &lt;code&gt;any&lt;/code&gt; for this purpose. It works by stopping once it finds the element. It's written in C for speed, and its Perl equivalent looks like this subroutine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1005d40b52c8fba9456ef2a3b1ec6cff90f7233f" translate="yes" xml:space="preserve">
          <source>If you are testing only once, the standard module &lt;a href=&quot;list/util&quot;&gt;List::Util&lt;/a&gt; exports the function &lt;code&gt;first&lt;/code&gt; for this purpose. It works by stopping once it finds the element. It's written in C for speed, and its Perl equivalent looks like this subroutine:</source>
          <target state="translated">Si est&amp;aacute; probando solo una vez, el m&amp;oacute;dulo est&amp;aacute;ndar &lt;a href=&quot;list/util&quot;&gt;List :: Util&lt;/a&gt; exporta la funci&amp;oacute;n &lt;code&gt;first&lt;/code&gt; para este prop&amp;oacute;sito. Funciona deteni&amp;eacute;ndose una vez que encuentra el elemento. Est&amp;aacute; escrito en C para la velocidad, y su equivalente en Perl se parece a esta subrutina:</target>
        </trans-unit>
        <trans-unit id="ee2ce6dbafcb9d4d548485293c0456fbed2a8877" translate="yes" xml:space="preserve">
          <source>If you are trying to use this instead of &lt;a href=&quot;#write-FILEHANDLE&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; to capture the output, you may find it easier to open a filehandle to a scalar (&lt;code&gt;open my $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt;) and write to that instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf3c25ab12fb420d9fdf6ea0144e15dc43f0fe2" translate="yes" xml:space="preserve">
          <source>If you are trying to use this instead of &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; to capture the output, you may find it easier to open a filehandle to a scalar (&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; ) and write to that instead.</source>
          <target state="translated">Si est&amp;aacute; intentando usar esto en lugar de &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; para capturar la salida, puede que le resulte m&amp;aacute;s f&amp;aacute;cil abrir un &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; en un escalar ( &lt;a href=&quot;functions/open&quot;&gt;abra&lt;/a&gt; $ fh, &quot;&amp;gt;&quot;, \ $ salida ) y escribir en &amp;eacute;l en su lugar.</target>
        </trans-unit>
        <trans-unit id="87f126d580b9d17eb9520e5adc6ebcd7b64cbce8" translate="yes" xml:space="preserve">
          <source>If you are trying to use this instead of &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; to capture the output, you may find it easier to open a filehandle to a scalar (&lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; ) and write to that instead.</source>
          <target state="translated">Si est&amp;aacute; intentando usar esto en lugar de &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; para capturar la salida, puede que le resulte m&amp;aacute;s f&amp;aacute;cil abrir un &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; $fh, &quot;&amp;gt;&quot;, \$output&lt;/code&gt; en un escalar ( &lt;a href=&quot;open&quot;&gt;abra&lt;/a&gt; $ fh, &quot;&amp;gt;&quot;, \ $ salida ) y escribir en &amp;eacute;l en su lugar.</target>
        </trans-unit>
        <trans-unit id="f0601abe3b8fe05fc06de5499fb9941a40db6bc0" translate="yes" xml:space="preserve">
          <source>If you are unable to send your report using &lt;b&gt;perlbug&lt;/b&gt; (most likely because your system doesn't have a way to send mail that perlbug recognizes), you may be able to use this tool to compose your report and save it to a file which you can then send to &lt;b&gt;perlbug@perl.org&lt;/b&gt; using your regular mail client.</source>
          <target state="translated">Si no puede enviar su informe usando &lt;b&gt;perlbug&lt;/b&gt; (probablemente porque su sistema no tiene una forma de enviar correo que perlbug reconozca), puede utilizar esta herramienta para redactar su informe y guardarlo en un archivo que usted luego puede enviarlo a &lt;b&gt;perlbug@perl.org&lt;/b&gt; usando su cliente de correo regular.</target>
        </trans-unit>
        <trans-unit id="dd788f693f0912cff62f6c5004a3304201e94790" translate="yes" xml:space="preserve">
          <source>If you are used to working with a version of Perl prior to the introduction of lexically scoped warnings, or have code that uses both lexical warnings and &lt;code&gt;$^W&lt;/code&gt; , this section will describe how they interact.</source>
          <target state="translated">Si est&amp;aacute; acostumbrado a trabajar con una versi&amp;oacute;n de Perl antes de la introducci&amp;oacute;n de advertencias con &amp;aacute;mbito l&amp;eacute;xico, o tiene un c&amp;oacute;digo que usa tanto advertencias l&amp;eacute;xicas como &lt;code&gt;$^W&lt;/code&gt; , esta secci&amp;oacute;n describir&amp;aacute; c&amp;oacute;mo interact&amp;uacute;an.</target>
        </trans-unit>
        <trans-unit id="d4b0bb469edf0650ec3f65bb5c7e77e909873d27" translate="yes" xml:space="preserve">
          <source>If you are used to working with a version of Perl prior to the introduction of lexically scoped warnings, or have code that uses both lexical warnings and &lt;code&gt;$^W&lt;/code&gt;, this section will describe how they interact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e74829ea9d71b80a5466e72595b5d826dd1692" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt; or one of its subclasses, you can call the &lt;code&gt;autoflush&lt;/code&gt; method to change the settings of the filehandle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c883172a7bd8c24338f9dd7a287c030969e4c2" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt; or one of its subclasses, you can call the &lt;code&gt;autoflush&lt;/code&gt; method to change the settings of the filehandle:</source>
          <target state="translated">Si est&amp;aacute; utilizando &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; o una de sus subclases, puede llamar al m&amp;eacute;todo &lt;code&gt;autoflush&lt;/code&gt; para cambiar la configuraci&amp;oacute;n del filehandle:</target>
        </trans-unit>
        <trans-unit id="66ca3a901cfd38d2b33b77415f58b3c173825a91" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;HePV&lt;/code&gt; to get values to pass to &lt;code&gt;newSVpvn()&lt;/code&gt; to create a new SV, you should consider using &lt;code&gt;newSVhek(HeKEY_hek(he))&lt;/code&gt; as it is more efficient.</source>
          <target state="translated">Si est&amp;aacute; usando &lt;code&gt;HePV&lt;/code&gt; para obtener valores para pasar a &lt;code&gt;newSVpvn()&lt;/code&gt; para crear un nuevo SV, deber&amp;iacute;a considerar usar &lt;code&gt;newSVhek(HeKEY_hek(he))&lt;/code&gt; ya que es m&amp;aacute;s eficiente.</target>
        </trans-unit>
        <trans-unit id="987d668924ef21e965c8815374cd5ece61317689" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;nanosleep&lt;/code&gt; for something else than mixing sleeping with signals, give some thought to whether Perl is the tool you should be using for work requiring nanosecond accuracies.</source>
          <target state="translated">Si est&amp;aacute; utilizando &lt;code&gt;nanosleep&lt;/code&gt; para algo m&amp;aacute;s que mezclar dormir con se&amp;ntilde;ales, piense si Perl es la herramienta que deber&amp;iacute;a utilizar para trabajos que requieren precisiones de nanosegundos.</target>
        </trans-unit>
        <trans-unit id="ef7387a4fe9a4611da9e256c7be19f5e356ca6ea" translate="yes" xml:space="preserve">
          <source>If you are using ACLs, there is a pragma called &lt;a href=&quot;filetest&quot;&gt;&lt;code&gt;filetest&lt;/code&gt;&lt;/a&gt; that may produce more accurate results than the bare &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; mode bits. When under &lt;code&gt;use filetest 'access'&lt;/code&gt;, the above-mentioned filetests test whether the permission can(not) be granted using the &lt;a href=&quot;http://man.he.net/man2/access&quot;&gt;access(2)&lt;/a&gt; family of system calls. Also note that the &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;-X&lt;/code&gt; tests may under this pragma return true even if there are no execute permission bits set (nor any extra execute permission ACLs). This strangeness is due to the underlying system calls' definitions. Note also that, due to the implementation of &lt;code&gt;use filetest 'access'&lt;/code&gt;, the &lt;code&gt;_&lt;/code&gt; special filehandle won't cache the results of the file tests when this pragma is in effect. Read the documentation for the &lt;a href=&quot;filetest&quot;&gt;&lt;code&gt;filetest&lt;/code&gt;&lt;/a&gt; pragma for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a45f762f42b66675541c22b88f50402f53057c" translate="yes" xml:space="preserve">
          <source>If you are using ACLs, there is a pragma called &lt;code&gt;filetest&lt;/code&gt; that may produce more accurate results than the bare stat() mode bits. When under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; the above-mentioned filetests test whether the permission can(not) be granted using the access(2) family of system calls. Also note that the &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; may under this pragma return true even if there are no execute permission bits set (nor any extra execute permission ACLs). This strangeness is due to the underlying system calls' definitions. Note also that, due to the implementation of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , the &lt;code&gt;_&lt;/code&gt; special filehandle won't cache the results of the file tests when this pragma is in effect. Read the documentation for the &lt;code&gt;filetest&lt;/code&gt; pragma for more information.</source>
          <target state="translated">Si est&amp;aacute; utilizando ACL, existe un pragma llamado &lt;code&gt;filetest&lt;/code&gt; que puede producir resultados m&amp;aacute;s precisos que los bits del modo stat (). Cuando se &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; las pruebas de archivo mencionadas anteriormente prueban si el permiso se puede (no) otorgar utilizando la familia de llamadas al sistema access (2). Tambi&amp;eacute;n tenga en cuenta que &lt;code&gt;-x&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; pueden bajo este pragma devolver verdadero incluso si no hay ning&amp;uacute;n conjunto de bits de permiso de ejecuci&amp;oacute;n (ni ACL de permisos de ejecuci&amp;oacute;n adicionales). Esta extra&amp;ntilde;eza se debe a las definiciones de las llamadas al sistema subyacente. Tenga en cuenta tambi&amp;eacute;n que, debido a la implementaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , el &lt;code&gt;_&lt;/code&gt; El identificador de archivo especial no almacenar&amp;aacute; en cach&amp;eacute; los resultados de las pruebas de archivo cuando este pragma est&amp;eacute; en vigor. Lea la documentaci&amp;oacute;n de &lt;code&gt;filetest&lt;/code&gt; pragma para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="536f259afd4833a386595561631d799b0872387d" translate="yes" xml:space="preserve">
          <source>If you are using ACLs, there is a pragma called &lt;code&gt;filetest&lt;/code&gt; that may produce more accurate results than the bare stat() mode bits. When under &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; the above-mentioned filetests test whether the permission can(not) be granted using the access(2) family of system calls. Also note that the &lt;code&gt;-x&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; may under this pragma return true even if there are no execute permission bits set (nor any extra execute permission ACLs). This strangeness is due to the underlying system calls' definitions. Note also that, due to the implementation of &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , the &lt;code&gt;_&lt;/code&gt; special filehandle won't cache the results of the file tests when this pragma is in effect. Read the documentation for the &lt;code&gt;filetest&lt;/code&gt; pragma for more information.</source>
          <target state="translated">Si est&amp;aacute; utilizando ACL, existe un pragma llamado &lt;code&gt;filetest&lt;/code&gt; que puede producir resultados m&amp;aacute;s precisos que los bits del modo stat (). Cuando se &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; las pruebas de archivo mencionadas anteriormente prueban si el permiso se puede (no) otorgar utilizando la familia de llamadas al sistema access (2). Tambi&amp;eacute;n tenga en cuenta que &lt;code&gt;-x&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;-x&quot;&gt;-X&lt;/a&gt;&lt;/code&gt; pueden bajo este pragma devolver verdadero incluso si no hay ning&amp;uacute;n conjunto de bits de permiso de ejecuci&amp;oacute;n (ni ACL de permisos de ejecuci&amp;oacute;n adicionales). Esta extra&amp;ntilde;eza se debe a las definiciones de las llamadas al sistema subyacente. Tenga en cuenta tambi&amp;eacute;n que, debido a la implementaci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; , el &lt;code&gt;_&lt;/code&gt; El identificador de archivo especial no almacenar&amp;aacute; en cach&amp;eacute; los resultados de las pruebas de archivo cuando este pragma est&amp;eacute; en vigor. Lea la documentaci&amp;oacute;n de &lt;code&gt;filetest&lt;/code&gt; pragma para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4cb0cc5912b1065f25576985628bc261176328a3" translate="yes" xml:space="preserve">
          <source>If you are using MacOS, the same concerns apply. MacPerl (for Classic environments) comes with a simple editor. Popular external editors are BBEdit ( &lt;a href=&quot;http://www.barebones.com/products/bbedit/&quot;&gt;http://www.barebones.com/products/bbedit/&lt;/a&gt; ) or Alpha ( &lt;a href=&quot;http://www.his.com/~jguyer/Alpha/Alpha8.html&quot;&gt;http://www.his.com/~jguyer/Alpha/Alpha8.html&lt;/a&gt; ). MacOS X users can use Unix editors as well.</source>
          <target state="translated">Si est&amp;aacute; utilizando MacOS, se aplican las mismas preocupaciones. MacPerl (para entornos Classic) viene con un editor simple. Los editores externos m&amp;aacute;s populares son BBEdit ( &lt;a href=&quot;http://www.barebones.com/products/bbedit/&quot;&gt;http://www.barebones.com/products/bbedit/&lt;/a&gt; ) o Alpha ( &lt;a href=&quot;http://www.his.com/~jguyer/Alpha/Alpha8.html&quot;&gt;http://www.his.com/~jguyer/Alpha/Alpha8.html&lt;/a&gt; ). Los usuarios de MacOS X tambi&amp;eacute;n pueden usar editores de Unix.</target>
        </trans-unit>
        <trans-unit id="6089a0839b7337d6b244906202548f79ff85a178" translate="yes" xml:space="preserve">
          <source>If you are using Plack (which most frameworks do), then &lt;a href=&quot;Plack::Middleware::Rewrite&quot;&gt;Plack::Middleware::Rewrite&lt;/a&gt; is worth looking at if you are migrating from Apache or have URL's you want to always redirect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4548a312b12b5507979ee1df1e5c700b717005" translate="yes" xml:space="preserve">
          <source>If you are using Plack (which most frameworks do), then &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::Rewrite&quot;&gt;Plack::Middleware::Rewrite&lt;/a&gt; is worth looking at if you are migrating from Apache or have URL's you want to always redirect.</source>
          <target state="translated">Si est&amp;aacute; utilizando Plack (lo que hacen la mayor&amp;iacute;a de los marcos), entonces vale la pena mirar &lt;a href=&quot;http://search.cpan.org/perldoc/Plack::Middleware::Rewrite&quot;&gt;Plack :: Middleware :: Rewrite&lt;/a&gt; si est&amp;aacute; migrando desde Apache o si tiene URL que desea redirigir siempre.</target>
        </trans-unit>
        <trans-unit id="88dc2855988852eaabc5467d99d4705c5f78e44c" translate="yes" xml:space="preserve">
          <source>If you are using Term::ANSIColor in a console command, consider supporting the CLICOLOR standard. See &lt;a href=&quot;#Supporting-CLICOLOR&quot;&gt;&quot;Supporting CLICOLOR&quot;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b08c775dc3592188f9dd4afa0190ccbb806664" translate="yes" xml:space="preserve">
          <source>If you are using Windows, you can use any editor that lets you work with plain text, such as NotePad or WordPad. Word processors, such as Microsoft Word or WordPerfect, typically do not work since they insert all sorts of behind-the-scenes information, although some allow you to save files as &quot;Text Only&quot;. You can also download text editors designed specifically for programming, such as Textpad ( &lt;a href=&quot;http://www.textpad.com/&quot;&gt;http://www.textpad.com/&lt;/a&gt; ) and UltraEdit ( &lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;http://www.ultraedit.com/&lt;/a&gt; ), among others.</source>
          <target state="translated">Si usa Windows, puede usar cualquier editor que le permita trabajar con texto sin formato, como NotePad o WordPad. Los procesadores de texto, como Microsoft Word o WordPerfect, normalmente no funcionan, ya que insertan todo tipo de informaci&amp;oacute;n detr&amp;aacute;s de escena, aunque algunos le permiten guardar archivos como &quot;S&amp;oacute;lo texto&quot;. Tambi&amp;eacute;n puedes descargar editores de texto dise&amp;ntilde;ados espec&amp;iacute;ficamente para programaci&amp;oacute;n, como Textpad ( &lt;a href=&quot;http://www.textpad.com/&quot;&gt;http://www.textpad.com/&lt;/a&gt; ) y UltraEdit ( &lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;http://www.ultraedit.com/&lt;/a&gt; ), entre otros.</target>
        </trans-unit>
        <trans-unit id="6e650787f6167c83d416119f9b787ce543fc56ec" translate="yes" xml:space="preserve">
          <source>If you are using Windows, you can use any editor that lets you work with plain text, such as NotePad or WordPad. Word processors, such as Microsoft Word or WordPerfect, typically do not work since they insert all sorts of behind-the-scenes information, although some allow you to save files as &quot;Text Only&quot;. You can also download text editors designed specifically for programming, such as Textpad ( &lt;a href=&quot;https://www.textpad.com/&quot;&gt;http://www.textpad.com/&lt;/a&gt; ) and UltraEdit ( &lt;a href=&quot;http://www.ultraedit.com/&quot;&gt;http://www.ultraedit.com/&lt;/a&gt; ), among others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b14c31c340803d7d1a8907e87c3b623cebca0d" translate="yes" xml:space="preserve">
          <source>If you are using a SOCKS firewall, you will need to compile perl and link it with the SOCKS library. This is what is normally called a 'socksified' perl. With this executable you will be able to connect to servers outside the firewall as if it were not there.</source>
          <target state="translated">Si estás usando un firewall SOCKS,necesitarás compilar perl y enlazarlo con la biblioteca SOCKS.Esto es lo que normalmente se llama un perl &quot;socksificado&quot;.Con este ejecutable podrás conectarte a los servidores fuera del cortafuegos como si no estuviera allí.</target>
        </trans-unit>
        <trans-unit id="52dddb8880620f072f3a58161e2e257e19923fa6" translate="yes" xml:space="preserve">
          <source>If you are using a module which returns something special on failure, then you can manually create hints for each of the desired subroutines. Once the hints are specified, they are available for all files and modules loaded thereafter, thus you can move this work into a module and it will still work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c561106308348f3755c72923d0a263a80ca5d3" translate="yes" xml:space="preserve">
          <source>If you are using a regex here, you have to use the quotes as shown or it won't work. Also note that regex handling is tricky even for the experienced. Use this feature with caution.</source>
          <target state="translated">Si estás usando un regex aquí,tienes que usar las comillas como se muestra o no funcionará.También tenga en cuenta que el manejo de la regex es difícil incluso para los experimentados.Use esta función con precaución.</target>
        </trans-unit>
        <trans-unit id="5a12a925a69a2c6041232d382cd6683ae36d2da6" translate="yes" xml:space="preserve">
          <source>If you are using a version of Perl earlier than 5.004_57, the tied array interface is quite limited. In the example script above &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; or determining the array length will not work with a tied array.</source>
          <target state="translated">Si est&amp;aacute; utilizando una versi&amp;oacute;n de Perl anterior a la 5.004_57, la interfaz de matriz vinculada es bastante limitada. En la secuencia de comandos de ejemplo anterior , &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; , hacer &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; cambio o determinar la longitud de la matriz no funcionar&amp;aacute; con una matriz vinculada.</target>
        </trans-unit>
        <trans-unit id="5e370f11050262a4d86dce72f35bfab79335c669" translate="yes" xml:space="preserve">
          <source>If you are using a version of Perl earlier than 5.004_57, the tied array interface is quite limited. In the example script above &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;shift&lt;/code&gt;, &lt;code&gt;unshift&lt;/code&gt; or determining the array length will not work with a tied array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02abd4a44d56e10cd1bbe5fedc62225b1b539860" translate="yes" xml:space="preserve">
          <source>If you are using any code that requires the execution of the global destruction phase for clean up (e.g., removing temp files), then do not use detached threads, but rather join all threads before exiting the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360a39abe6795afd63327f3e470a092ad595cbfe" translate="yes" xml:space="preserve">
          <source>If you are using cpan-mac, just drop the folder on the &lt;b&gt;installme&lt;/b&gt; droplet, and use the module.</source>
          <target state="translated">Si est&amp;aacute; usando cpan-mac, simplemente suelte la carpeta en el droplet &lt;b&gt;installme&lt;/b&gt; y use el m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="1fc1c37b5a3d2067860bd9ba4aa2038972693c34" translate="yes" xml:space="preserve">
          <source>If you are using gcc, just</source>
          <target state="translated">Si estás usando GCC,sólo</target>
        </trans-unit>
        <trans-unit id="8fd5d7695f8aa3649f7196f528604d5d3ae20e06" translate="yes" xml:space="preserve">
          <source>If you are using gcc, you would need to use -mcpu=v9 -m64 instead. This option is not yet supported as of gcc 2.95.2; from install/SPECIFIC in that release:</source>
          <target state="translated">Si está usando gcc,tendría que usar -mcpu=v9 -m64 en su lugar.Esta opción aún no está soportada a partir de gcc 2.95.2;desde install/SPECIFIC en esa versión:</target>
        </trans-unit>
        <trans-unit id="43b374ff761647040bfef238a2f344855f86b957" translate="yes" xml:space="preserve">
          <source>If you are using locale purely for its characteristics related to things like its numeric and time formatting (and not &lt;code&gt;LC_CTYPE&lt;/code&gt; ), consider using a restricted form of the locale pragma (see &lt;a href=&quot;perllocale#The-%22use-locale%22-pragma&quot;&gt;The use locale pragma in perllocale&lt;/a&gt;) like &quot;&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; &quot;.</source>
          <target state="translated">Si est&amp;aacute; usando la configuraci&amp;oacute;n regional &amp;uacute;nicamente por sus caracter&amp;iacute;sticas relacionadas con cosas como su formato num&amp;eacute;rico y de tiempo (y no &lt;code&gt;LC_CTYPE&lt;/code&gt; ), considere usar una forma restringida de la configuraci&amp;oacute;n regional pragma (consulte &lt;a href=&quot;perllocale#The-%22use-locale%22-pragma&quot;&gt;El uso de la configuraci&amp;oacute;n regional pragma en perllocale&lt;/a&gt; ) como &quot; &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="3f4713ad5807b5f7826ec2dd53e64e4312c481e4" translate="yes" xml:space="preserve">
          <source>If you are using locale purely for its characteristics related to things like its numeric and time formatting (and not &lt;code&gt;LC_CTYPE&lt;/code&gt;), consider using a restricted form of the locale pragma (see &lt;a href=&quot;perllocale#The-%22use-locale%22-pragma&quot;&gt;&quot;The &quot;use locale&quot; pragma&quot; in perllocale&lt;/a&gt;) like &quot;&lt;code&gt;use locale ':not_characters'&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7e18738b21f2b01d05483723778a511f7e8e06" translate="yes" xml:space="preserve">
          <source>If you are using the 'make' directly, it is the GNU make from the SDKs, and it will invoke the right make commands for the Windows emulator build and the Arm target builds ('thumb' by default) as necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c7cadf9ebf06d221687f1101781684817f90c8" translate="yes" xml:space="preserve">
          <source>If you are using the DB_RECNO interface and you intend making use of &lt;code&gt;bval&lt;/code&gt; , you should check out &lt;a href=&quot;#The-'bval'-Option&quot;&gt;The 'bval' Option&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; utilizando la interfaz DB_RECNO y tiene la intenci&amp;oacute;n de utilizar &lt;code&gt;bval&lt;/code&gt; , deber&amp;iacute;a consultar &lt;a href=&quot;#The-'bval'-Option&quot;&gt;la opci&amp;oacute;n 'bval'&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f6185500a12d4aa7861d0d23b58da2516585e5a" translate="yes" xml:space="preserve">
          <source>If you are using the DB_RECNO interface and you intend making use of &lt;code&gt;bval&lt;/code&gt;, you should check out &lt;a href=&quot;#The-%27bval%27-Option&quot;&gt;&quot;The 'bval' Option&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e34b95c988ef9ff5f011e4473a6842bbc8f305e" translate="yes" xml:space="preserve">
          <source>If you are using the Visual C compiler, you can get the C runtime's command line wildcard expansion built into perl binary. The resulting binary will always expand unquoted command lines, which may not be what you want if you use a shell that does that for you. The expansion done is also somewhat less powerful than the approach suggested above.</source>
          <target state="translated">Si utiliza el compilador de Visual C,puede obtener la expansión de comodines de la línea de comandos del tiempo de ejecución de C incorporada en el binario de perl.El binario resultante siempre expandirá las líneas de comando no citadas,lo cual puede no ser lo que usted desea si usa un shell que hace eso por usted.La expansión realizada es también algo menos potente que el enfoque sugerido anteriormente.</target>
        </trans-unit>
        <trans-unit id="7d685e73a12ad96dde7946d5ecb4aacf9b0497e1" translate="yes" xml:space="preserve">
          <source>If you are using the constant interface, be sure to include this code before you use any color constants (such as at the very top of your script), since this environment variable is only honored the first time a color constant is seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64d320b887e6639115cc4ac113f85e3f1804107" translate="yes" xml:space="preserve">
          <source>If you are using this in non-legacy code you may need to reconsider the course of your life, maybe a hermitage would suite you?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a368c00c8ef926e64658830003081d5eb361bb8d" translate="yes" xml:space="preserve">
          <source>If you are using zlib 1.2.0 or older, &lt;code&gt;zlibCompileFlags&lt;/code&gt; will return 0.</source>
          <target state="translated">Si est&amp;aacute; utilizando zlib 1.2.0 o una &lt;code&gt;zlibCompileFlags&lt;/code&gt; anterior, zlibCompileFlags devolver&amp;aacute; 0.</target>
        </trans-unit>
        <trans-unit id="9d19a794a39cad7420e5c34d0bb89a7b77ddba40" translate="yes" xml:space="preserve">
          <source>If you are willing to accept all the defaults run Configure with &lt;b&gt;-de&lt;/b&gt;. However, several useful customizations are available.</source>
          <target state="translated">Si est&amp;aacute; dispuesto a aceptar todos los valores predeterminados, ejecute Configurar con &lt;b&gt;-de&lt;/b&gt; . Sin embargo, hay varias personalizaciones &amp;uacute;tiles disponibles.</target>
        </trans-unit>
        <trans-unit id="fd5b1c2924a349d7291d8ad147e3c28043609419" translate="yes" xml:space="preserve">
          <source>If you are working with a git clone of the Perl repository, you will want to create a branch for your changes. This will make creating a proper patch much simpler. See the &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; for details on how to do this.</source>
          <target state="translated">Si est&amp;aacute; trabajando con un clon git del repositorio de Perl, querr&amp;aacute; crear una rama para sus cambios. Esto har&amp;aacute; que crear un parche adecuado sea mucho m&amp;aacute;s sencillo. Consulte el &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; para obtener detalles sobre c&amp;oacute;mo hacer esto.</target>
        </trans-unit>
        <trans-unit id="d3a5c5d66921962ee5d2f131da55a853da5b0930" translate="yes" xml:space="preserve">
          <source>If you are working with data you know to be valid, you can speed your code up by using the &quot;nocheck&quot; variants, &lt;code&gt;timelocal_nocheck()&lt;/code&gt; and &lt;code&gt;timegm_nocheck()&lt;/code&gt; . These variants must be explicitly imported.</source>
          <target state="translated">Si est&amp;aacute; trabajando con datos que sabe que son v&amp;aacute;lidos, puede acelerar su c&amp;oacute;digo utilizando las variantes &quot;nocheck&quot;, &lt;code&gt;timelocal_nocheck()&lt;/code&gt; y &lt;code&gt;timegm_nocheck()&lt;/code&gt; . Estas variantes deben importarse expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="44340ebb8cf0e2382c2ca3711523d41bd143a85f" translate="yes" xml:space="preserve">
          <source>If you are working with data you know to be valid, you can speed your code up by using the &quot;nocheck&quot; variants, &lt;code&gt;timelocal_nocheck()&lt;/code&gt; and &lt;code&gt;timegm_nocheck()&lt;/code&gt;. These variants must be explicitly imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fdba02c2ad23e42f49d14ef3350c451024e80f" translate="yes" xml:space="preserve">
          <source>If you are writing a module to expand an already existing set of modules, please coordinate with the author of the package. It helps if you follow the same naming scheme and module interaction scheme as the original author.</source>
          <target state="translated">Si está escribiendo un módulo para expandir un conjunto de módulos ya existentes,por favor coordine con el autor del paquete.Es útil que siga el mismo esquema de denominación e interacción de módulos que el autor original.</target>
        </trans-unit>
        <trans-unit id="1cd2c8d5447831e253b224430edc3070841bc27c" translate="yes" xml:space="preserve">
          <source>If you are writing a package that &lt;code&gt;AUTOLOAD&lt;/code&gt; s, consider forcing an &lt;code&gt;AUTOLOAD&lt;/code&gt; for any constants explicitly imported by other packages or which are usually used when your package is &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;d.</source>
          <target state="translated">Si est&amp;aacute; escribiendo un paquete que se &lt;code&gt;AUTOLOAD&lt;/code&gt; , considere forzar un &lt;code&gt;AUTOLOAD&lt;/code&gt; para cualquier constante importada expl&amp;iacute;citamente por otros paquetes o que generalmente se usan cuando su paquete se &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; d.</target>
        </trans-unit>
        <trans-unit id="008854f6c49a92df108a1a38fd8f1f0c1b757eb6" translate="yes" xml:space="preserve">
          <source>If you are writing a package that &lt;code&gt;AUTOLOAD&lt;/code&gt;s, consider forcing an &lt;code&gt;AUTOLOAD&lt;/code&gt; for any constants explicitly imported by other packages or which are usually used when your package is &lt;code&gt;use&lt;/code&gt;d.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5966f6f48bbef92de0797373659162ca479de0d" translate="yes" xml:space="preserve">
          <source>If you are writing new code, your first port of call should be one of the new &lt;code&gt;IO::Compress&lt;/code&gt; or &lt;code&gt;IO::Uncompress&lt;/code&gt; modules.</source>
          <target state="translated">Si est&amp;aacute; escribiendo c&amp;oacute;digo nuevo, su primer puerto de escala deber&amp;iacute;a ser uno de los nuevos m&amp;oacute;dulos &lt;code&gt;IO::Compress&lt;/code&gt; o &lt;code&gt;IO::Uncompress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d5955743a0fa060d529640f937e917d974a0fd9" translate="yes" xml:space="preserve">
          <source>If you ask for nothing in particular, you'll be asking for &lt;code&gt;less
'please'&lt;/code&gt; .</source>
          <target state="translated">Si no pide nada en particular, estar&amp;aacute; pidiendo &lt;code&gt;less 'please'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8027e6b734038f8b5eea431be412179b0c1aa993" translate="yes" xml:space="preserve">
          <source>If you ask for nothing in particular, you'll be asking for &lt;code&gt;less 'please'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d232183f686226b9e4d9f0a9749bb4ab75350724" translate="yes" xml:space="preserve">
          <source>If you ask it to unmemoize a function that was never memoized, it croaks.</source>
          <target state="translated">Si le pides que quite la memoria de una función que nunca fue memorizada,muere.</target>
        </trans-unit>
        <trans-unit id="5ac398bf0535c0d2bb95ebfd6fd6655ce0bd6b20" translate="yes" xml:space="preserve">
          <source>If you ask to override your chdir() built-in function,</source>
          <target state="translated">Si usted pide anular su función incorporada chdir(),</target>
        </trans-unit>
        <trans-unit id="aae82346550e5f30641b00cfb651b5e652048f2e" translate="yes" xml:space="preserve">
          <source>If you attempt to compile Perl with (POSIX) threads on an 11.X system and also link in the GDBM library, then Perl will immediately core dump when it starts up. The only workaround at this point is to relink the GDBM library under 11.X, then relink it into Perl.</source>
          <target state="translated">Si intentas compilar Perl con hilos (POSIX)en un sistema 11.X y también enlazarlo en la biblioteca GDBM,entonces Perl inmediatamente hará un volcado de núcleo cuando se inicie.La única solución en este punto es volver a enlazar la biblioteca GDBM bajo 11.X,y luego volver a enlazarla en Perl.</target>
        </trans-unit>
        <trans-unit id="372756b443de4017a28427029bf0d506d7081a2a" translate="yes" xml:space="preserve">
          <source>If you believe the scalar comes back as UTF-8, you will most likely want the UTF8 flag restored:</source>
          <target state="translated">Si cree que el escalar regresa como UTF-8,lo más probable es que quiera la bandera UTF8 restaurada:</target>
        </trans-unit>
        <trans-unit id="1489e0cb25a613554ca1fb1509eb4766e09aaf06" translate="yes" xml:space="preserve">
          <source>If you believe you have found a security vulnerability in Perl, please email perl5-security-report@perl.org with details. This points to a closed subscription, unarchived mailing list. Please only use this address for security issues in the Perl core, not for modules independently distributed on CPAN.</source>
          <target state="translated">Si cree que ha encontrado una vulnerabilidad de seguridad en Perl,por favor envíe un correo electrónico a perl5-security-report@perl.org con los detalles.Esto apunta a una suscripción cerrada,lista de correo no archivada.Por favor,utilice esta dirección sólo para problemas de seguridad en el núcleo de Perl,no para módulos distribuidos independientemente en el CPAN.</target>
        </trans-unit>
        <trans-unit id="74dfa21f751ce3fabe2deb1f0f641c590253ad7e" translate="yes" xml:space="preserve">
          <source>If you believe you have found a security vulnerability in Perl, please email the details to perl5-security-report@perl.org. This creates a new Request Tracker ticket in a special queue which isn't initially publicly accessible. The email will also be copied to a closed subscription unarchived mailing list which includes all the core committers, who will be able to help assess the impact of issues, figure out a resolution, and help co-ordinate the release of patches to mitigate or fix the problem across all platforms on which Perl is supported. Please only use this address for security issues in the Perl core, not for modules independently distributed on CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2508e4352c00aad2e5cda3b21b798f7f8735a139" translate="yes" xml:space="preserve">
          <source>If you build with Visual C++ 2013 then three tests currently may fail with Daylight Saving Time related problems:</source>
          <target state="translated">Si construyes con Visual C++2013 entonces tres pruebas actualmente pueden fallar con problemas relacionados con el horario de verano:</target>
        </trans-unit>
        <trans-unit id="a29ad197e59c85308f30e04c723a79c6188595db" translate="yes" xml:space="preserve">
          <source>If you build with Visual C++ 2015 or later then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc747a2308602b12226c600429d56710358ba8a4" translate="yes" xml:space="preserve">
          <source>If you build with certain versions (e.g. 4.8.1) of gcc from www.mingw.org then</source>
          <target state="translated">Si construyes con ciertas versiones (por ejemplo,4.8.1)de gcc de www.mingw.org entonces</target>
        </trans-unit>
        <trans-unit id="5d082c0ec07ad4429dea09b4d3b6034a0edf4cf9" translate="yes" xml:space="preserve">
          <source>If you built perl with dynamic loading capability then that would also be the way to build XS based extensions. However, if you built perl with the default static linking you can still build XS based extensions for OS/390 but you will need to follow the instructions in ExtUtils::MakeMaker for building statically linked perl binaries. In the simplest configurations building a static perl + XS extension boils down to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccb9cfffea038156e1e9bf29f1e74a06b7c692d" translate="yes" xml:space="preserve">
          <source>If you built perl with dynamic loading capability then that would also be the way to build xs based extensions. However, if you built perl with the default static linking you can still build xs based extensions for OS/390 but you will need to follow the instructions in ExtUtils::MakeMaker for building statically linked perl binaries. In the simplest configurations building a static perl + xs extension boils down to:</source>
          <target state="translated">Si construyes perl con capacidad de carga dinámica entonces esa sería también la forma de construir extensiones basadas en xs.Sin embargo,si construiste perl con el enlace estático por defecto,todavía puedes construir extensiones basadas en xs para OS/390 pero tendrás que seguir las instrucciones de ExtUtils::MakeMaker para construir binarios de perl enlazados estáticamente.En las configuraciones más simples,construir una extensión estática de perl+xs se reduce a:</target>
        </trans-unit>
        <trans-unit id="b4bbe3ec8c3dbb9079b54edeba88cab20e6c6b9a" translate="yes" xml:space="preserve">
          <source>If you call $lh-&amp;gt;maketext(</source>
          <target state="translated">Si llamas a $ lh-&amp;gt; maketext (</target>
        </trans-unit>
        <trans-unit id="b2b245ecec2ba731bc1217986ab8fe3ce3832fb6" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;plan()&lt;/code&gt; , don't call any of the other methods below.</source>
          <target state="translated">Si llama a &lt;code&gt;plan()&lt;/code&gt; , no llame a ninguno de los otros m&amp;eacute;todos a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1fcdeca5cd1457b673de047212c964254182c124" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;plan()&lt;/code&gt;, don't call any of the other methods below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29b01f558f5cc8e37b47ab816256a32df3eb207" translate="yes" xml:space="preserve">
          <source>If you call a method that doesn't exist in a class, Perl will throw an error. However, if that class or any of its parent classes defines an &lt;code&gt;AUTOLOAD&lt;/code&gt; method, that &lt;code&gt;AUTOLOAD&lt;/code&gt; method is called instead.</source>
          <target state="translated">Si llama a un m&amp;eacute;todo que no existe en una clase, Perl arrojar&amp;aacute; un error. Sin embargo, si esa clase o cualquiera de sus clases padre define un m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; , ese m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; se llama en su lugar.</target>
        </trans-unit>
        <trans-unit id="945646515b442a128e465225a1d325a7ca2f3625" translate="yes" xml:space="preserve">
          <source>If you call a subroutine that is undefined, you would ordinarily get an immediate, fatal error complaining that the subroutine doesn't exist. (Likewise for subroutines being used as methods, when the method doesn't exist in any base class of the class's package.) However, if an &lt;code&gt;AUTOLOAD&lt;/code&gt; subroutine is defined in the package or packages used to locate the original subroutine, then that &lt;code&gt;AUTOLOAD&lt;/code&gt; subroutine is called with the arguments that would have been passed to the original subroutine. The fully qualified name of the original subroutine magically appears in the global $AUTOLOAD variable of the same package as the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine. The name is not passed as an ordinary argument because, er, well, just because, that's why. (As an exception, a method call to a nonexistent &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;unimport&lt;/code&gt; method is just skipped instead. Also, if the AUTOLOAD subroutine is an XSUB, there are other ways to retrieve the subroutine name. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;Autoloading with XSUBs in perlguts&lt;/a&gt; for details.)</source>
          <target state="translated">Si llama a una subrutina que no est&amp;aacute; definida, normalmente obtendr&amp;aacute; un error fatal inmediato quej&amp;aacute;ndose de que la subrutina no existe. (Lo mismo ocurre con las subrutinas que se utilizan como m&amp;eacute;todos, cuando el m&amp;eacute;todo no existe en ninguna clase base del paquete de la clase). Sin embargo, si se define una subrutina &lt;code&gt;AUTOLOAD&lt;/code&gt; en el paquete o paquetes utilizados para localizar la subrutina original, entonces esa subrutina &lt;code&gt;AUTOLOAD&lt;/code&gt; se llama con los argumentos que se habr&amp;iacute;an pasado a la subrutina original. El nombre completo de la subrutina original aparece m&amp;aacute;gicamente en la variable global $ AUTOLOAD del mismo paquete que &lt;code&gt;AUTOLOAD&lt;/code&gt; rutina. El nombre no se pasa como un argumento ordinario porque, eh, bueno, solo porque, por eso. (Como excepci&amp;oacute;n, una llamada de m&amp;eacute;todo a un inexistente &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n o &lt;code&gt;unimport&lt;/code&gt; m&amp;eacute;todo solo se omite su lugar. Adem&amp;aacute;s, si la subrutina AUTOLOAD es un XSUB, hay otras maneras de recuperar el nombre de la subrutina. V&amp;eacute;ase &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;La carga autom&amp;aacute;tica con XSUBs en perlguts&lt;/a&gt; para m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="ae93390d7689eae59da77f05524628edc8a8e772" translate="yes" xml:space="preserve">
          <source>If you call a subroutine that is undefined, you would ordinarily get an immediate, fatal error complaining that the subroutine doesn't exist. (Likewise for subroutines being used as methods, when the method doesn't exist in any base class of the class's package.) However, if an &lt;code&gt;AUTOLOAD&lt;/code&gt; subroutine is defined in the package or packages used to locate the original subroutine, then that &lt;code&gt;AUTOLOAD&lt;/code&gt; subroutine is called with the arguments that would have been passed to the original subroutine. The fully qualified name of the original subroutine magically appears in the global $AUTOLOAD variable of the same package as the &lt;code&gt;AUTOLOAD&lt;/code&gt; routine. The name is not passed as an ordinary argument because, er, well, just because, that's why. (As an exception, a method call to a nonexistent &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;unimport&lt;/code&gt; method is just skipped instead. Also, if the AUTOLOAD subroutine is an XSUB, there are other ways to retrieve the subroutine name. See &lt;a href=&quot;perlguts#Autoloading-with-XSUBs&quot;&gt;&quot;Autoloading with XSUBs&quot; in perlguts&lt;/a&gt; for details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71cdebace5c6abb01b81af0b4383d9f3787c035" translate="yes" xml:space="preserve">
          <source>If you can arrange for everyone to deal with this through references, it's cleaner code, although not so nice to look at. Here's a function that takes two array references as arguments, returning the two array elements in order of how many elements they have in them:</source>
          <target state="translated">Si puedes hacer que todos se ocupen de esto a través de referencias,es un código más limpio,aunque no es tan agradable de mirar.Aquí hay una función que toma dos referencias de la matriz como argumentos,devolviendo los dos elementos de la matriz en orden de cuántos elementos tienen en ellos:</target>
        </trans-unit>
        <trans-unit id="3cb0b0acb5a45f37eacb24751a1ec1aefb74d989" translate="yes" xml:space="preserve">
          <source>If you can avoid it, don't, or if you can use a templating system, such as &lt;a href=&quot;Text::Template&quot;&gt;Text::Template&lt;/a&gt; or &lt;a href=&quot;template&quot;&gt;Template&lt;/a&gt; Toolkit, do that instead. You might even be able to get the job done with &lt;code&gt;sprintf&lt;/code&gt; or &lt;code&gt;printf&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b6ce07b51bd0ae187fbd5346ee2bf854f2bb10" translate="yes" xml:space="preserve">
          <source>If you can avoid it, don't, or if you can use a templating system, such as &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Template&quot;&gt;Text::Template&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Template&quot;&gt;Template&lt;/a&gt; Toolkit, do that instead. You might even be able to get the job done with &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Si puede evitarlo, no lo haga, o si puede usar un sistema de plantillas, como &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Template&quot;&gt;Text :: Template&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/perldoc/Template&quot;&gt;Template&lt;/a&gt; Toolkit, h&amp;aacute;galo en su lugar. Incluso podr&amp;iacute;as hacer el trabajo con &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f9556f6832194ce02eb38bf13ea3951955c6d164" translate="yes" xml:space="preserve">
          <source>If you can do these things, you've started on the long road to Perl porting. Thanks for wanting to help make Perl better - and happy hacking!</source>
          <target state="translated">Si puedes hacer estas cosas,has empezado el largo camino hacia el puerto de Perl.Gracias por querer ayudar a mejorar el Perl...¡y feliz pirateo!</target>
        </trans-unit>
        <trans-unit id="4e5e8e457d8aab789523193251b0cae471debcb4" translate="yes" xml:space="preserve">
          <source>If you can go through your firewall with e.g. lynx, presumably with a command such as</source>
          <target state="translated">Si puedes atravesar el cortafuegos con,por ejemplo,Lynx,presumiblemente con un comando como</target>
        </trans-unit>
        <trans-unit id="22d913b1c7a6af16ecff397b87485204b5a8ebbc" translate="yes" xml:space="preserve">
          <source>If you can not reach the author for some reason contact the PAUSE admins at modules@perl.org who may be able to help, but each case is treated separately.</source>
          <target state="translated">Si no puede contactar con el autor por alguna razón,contacte con los administradores de la PAUSA en modules@perl.org que pueden ayudarle,pero cada caso se trata por separado.</target>
        </trans-unit>
        <trans-unit id="e0ff87acae1d2fe61dfcf4190a982955e52a9134" translate="yes" xml:space="preserve">
          <source>If you can't configure &lt;code&gt;TAP::Harness&lt;/code&gt; to do exactly what you want, and writing a plugin isn't an option, consider extending it. It is designed to be (mostly) easy to subclass, though the cases when sub-classing is necessary should be few and far between.</source>
          <target state="translated">Si no puede configurar &lt;code&gt;TAP::Harness&lt;/code&gt; para que haga exactamente lo que desea y escribir un complemento no es una opci&amp;oacute;n, considere extenderlo. Est&amp;aacute; dise&amp;ntilde;ado para ser (en su mayor&amp;iacute;a) f&amp;aacute;cil de subclasificar, aunque los casos en los que la subclasificaci&amp;oacute;n es necesaria deben ser pocos y distantes entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="700d8f92e3038752feec96509274cbd7256d79dc" translate="yes" xml:space="preserve">
          <source>If you can't configure &lt;code&gt;TAP::Harness&lt;/code&gt; to do what you want, and you can't find an existing plugin, consider writing one.</source>
          <target state="translated">Si no puede configurar &lt;code&gt;TAP::Harness&lt;/code&gt; para que haga lo que desea y no puede encontrar un complemento existente, considere escribir uno.</target>
        </trans-unit>
        <trans-unit id="aab6be6829c9bde3ac67ace0b1b8f3a83861108b" translate="yes" xml:space="preserve">
          <source>If you can't use &lt;a href=&quot;File::Copy&quot;&gt;File::Copy&lt;/a&gt;, you'll have to do the work yourself: open the original file, open the destination file, then print to the destination file as you read the original. You also have to remember to copy the permissions, owner, and group to the new file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcd365c3753fb0814dbbf4b5f1da5978fabe2e0" translate="yes" xml:space="preserve">
          <source>If you can't use &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt;, you'll have to do the work yourself: open the original file, open the destination file, then print to the destination file as you read the original. You also have to remember to copy the permissions, owner, and group to the new file.</source>
          <target state="translated">Si no puede usar &lt;a href=&quot;file/copy&quot;&gt;Archivo :: Copiar&lt;/a&gt; , tendr&amp;aacute; que hacer el trabajo usted mismo: abra el archivo original, abra el archivo de destino y luego imprima en el archivo de destino mientras lee el original. Tambi&amp;eacute;n debe recordar copiar los permisos, el propietario y el grupo en el nuevo archivo.</target>
        </trans-unit>
        <trans-unit id="2431416836e7be159e91db05fdcbf62b13f365c1" translate="yes" xml:space="preserve">
          <source>If you cannot achieve the desired Makefile behaviour by specifying attributes you may define private subroutines in the Makefile.PL. Each subroutine returns the text it wishes to have written to the Makefile. To override a section of the Makefile you can either say:</source>
          <target state="translated">Si no puede lograr el comportamiento deseado del Makefile especificando atributos puede definir subrutinas privadas en el Makefile.PL.Cada subrutina devuelve al Makefile el texto que desea haber escrito.Para anular una sección del Makefile puede decir</target>
        </trans-unit>
        <trans-unit id="069db45c3cccee54b16dacbbc26ce2a59fc37a49" translate="yes" xml:space="preserve">
          <source>If you cannot upgrade your Perl to 5.8.0 or later, you can still do some Unicode processing by using the modules &lt;code&gt;Unicode::String&lt;/code&gt; , &lt;code&gt;Unicode::Map8&lt;/code&gt; , and &lt;code&gt;Unicode::Map&lt;/code&gt; , available from CPAN. If you have the GNU recode installed, you can also use the Perl front-end &lt;code&gt;Convert::Recode&lt;/code&gt; for character conversions.</source>
          <target state="translated">Si no puede actualizar su Perl a 5.8.0 o posterior, a&amp;uacute;n puede realizar alg&amp;uacute;n procesamiento Unicode utilizando los m&amp;oacute;dulos &lt;code&gt;Unicode::String&lt;/code&gt; , &lt;code&gt;Unicode::Map8&lt;/code&gt; y &lt;code&gt;Unicode::Map&lt;/code&gt; , disponibles en CPAN. Si tiene la recodificaci&amp;oacute;n GNU instalada, tambi&amp;eacute;n puede utilizar &lt;code&gt;Convert::Recode&lt;/code&gt; front-end de Perl para conversiones de caracteres.</target>
        </trans-unit>
        <trans-unit id="675032f69b34d194dcc7017e3c4c3044e3fbd01f" translate="yes" xml:space="preserve">
          <source>If you cannot upgrade your Perl to 5.8.0 or later, you can still do some Unicode processing by using the modules &lt;code&gt;Unicode::String&lt;/code&gt;, &lt;code&gt;Unicode::Map8&lt;/code&gt;, and &lt;code&gt;Unicode::Map&lt;/code&gt;, available from CPAN. If you have the GNU recode installed, you can also use the Perl front-end &lt;code&gt;Convert::Recode&lt;/code&gt; for character conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d66bfc35fac26ccfc5a2fc8cf1cd9923cd9f43b" translate="yes" xml:space="preserve">
          <source>If you cannot use &lt;a href=&quot;List::Util&quot;&gt;List::Util&lt;/a&gt;, you can make your own loop to do the same thing. Once you find the element, you stop the loop with last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f06f83624114fcf502e132fac57a686e4d7a4ee" translate="yes" xml:space="preserve">
          <source>If you cannot use &lt;a href=&quot;list/util&quot;&gt;List::Util&lt;/a&gt;, you can make your own loop to do the same thing. Once you find the element, you stop the loop with last.</source>
          <target state="translated">Si no puede usar &lt;a href=&quot;list/util&quot;&gt;List :: Util&lt;/a&gt; , puede crear su propio bucle para hacer lo mismo. Una vez que encuentre el elemento, detiene el ciclo con last.</target>
        </trans-unit>
        <trans-unit id="83e89259781d3b7bf972995b7c8dc74ef7aacff4" translate="yes" xml:space="preserve">
          <source>If you cannot use the git protocol for firewall reasons, you can also clone via http, though this is much slower:</source>
          <target state="translated">Si no puedes usar el protocolo git por razones de firewall,también puedes clonar vía http,aunque esto es mucho más lento:</target>
        </trans-unit>
        <trans-unit id="b117af02a8ee1b3faa8a2a2959074d94964f1bce" translate="yes" xml:space="preserve">
          <source>If you cannot use the git protocol for firewall reasons, you can also clone via http:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794395d65809aff375720f1da63fe61351840429" translate="yes" xml:space="preserve">
          <source>If you change &lt;code&gt;$pattern&lt;/code&gt; after the first substitution happens, Perl will ignore it. If you don't want any substitutions at all, use the special delimiter &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Si cambia &lt;code&gt;$pattern&lt;/code&gt; despu&amp;eacute;s de que ocurra la primera sustituci&amp;oacute;n, Perl lo ignorar&amp;aacute;. Si no desea ninguna sustituci&amp;oacute;n, use el delimitador especial &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5a64e176836406787422c8fb3c6947be0def6d35" translate="yes" xml:space="preserve">
          <source>If you change &lt;code&gt;$pattern&lt;/code&gt; after the first substitution happens, Perl will ignore it. If you don't want any substitutions at all, use the special delimiter &lt;code&gt;m''&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca560012b71cc8dce8e6a03ec54196daca3d350" translate="yes" xml:space="preserve">
          <source>If you check &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;, you'll see that several of the ways to call open() should do the trick. For example:</source>
          <target state="translated">Si marca &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; , ver&amp;aacute; que varias de las formas de llamar a open () deber&amp;iacute;an funcionar. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="65c2b7d80f9113d02d83f4af5a6da477cccfeb58" translate="yes" xml:space="preserve">
          <source>If you check &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt;, you'll see that several of the ways to call open() should do the trick. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dedfaceb9670f08b0798c739b80203032d536c" translate="yes" xml:space="preserve">
          <source>If you chomp a list, each element is chomped, and the total number of characters removed is returned.</source>
          <target state="translated">Si masticas una lista,cada elemento es masticado,y el número total de caracteres eliminados es devuelto.</target>
        </trans-unit>
        <trans-unit id="716512a060dd3d5999bac2b4045e2b9123dc9b1b" translate="yes" xml:space="preserve">
          <source>If you choose XL C/C++ V11 you need the April 2010 PTF (or newer) installed otherwise you will not get a working Perl version.</source>
          <target state="translated">Si eliges XL C/C++V11 necesitas tener instalado el PTF de abril de 2010 (o más reciente),de lo contrario no obtendrás una versión de Perl que funcione.</target>
        </trans-unit>
        <trans-unit id="c10052f207d29ada4465d2d73fcdfabf3621a0b6" translate="yes" xml:space="preserve">
          <source>If you choose XL C/C++ V9 you need APAR IZ35785 installed otherwise the integrated SDBM_File do not compile correctly due to an optimization bug. You can circumvent this problem by adding -qipa to the optimization flags (-Doptimize='-O -qipa'). The PTF for APAR IZ35785 which solves this problem is available from IBM (April 2009 PTF for XL C/C++ Enterprise Edition for AIX, V9.0).</source>
          <target state="translated">Si eliges XL C/C++V9 necesitas tener instalado APAR IZ35785,de lo contrario el SDBM_File integrado no se compila correctamente debido a un error de optimización.Puedes evitar este problema añadiendo -qipa a las banderas de optimización (-Doptimize='-O -qipa').El PTF para APAR IZ35785 que resuelve este problema está disponible en IBM (abril de 2009 PTF para XL C/C++Enterprise Edition para AIX,V9.0).</target>
        </trans-unit>
        <trans-unit id="fb54bcde599a5f03b31c1ac1b1fac745b31dc5b8" translate="yes" xml:space="preserve">
          <source>If you choose for the PTH package, use swinstall to install pth in the default location (/opt/pth), and then make symbolic links to the libraries from /usr/lib</source>
          <target state="translated">Si elige el paquete PTH,utilice swinstall para instalar pth en la ubicación predeterminada (/opt/pth),y luego haga enlaces simbólicos a las bibliotecas desde /usr/lib</target>
        </trans-unit>
        <trans-unit id="5ca7b309ef65dd317303754f8c4a5fd3689e4197" translate="yes" xml:space="preserve">
          <source>If you choose gcc to compile 64-bit Perl then you need to add the following option:</source>
          <target state="translated">Si eliges gcc para compilar Perl de 64 bits,entonces necesitas añadir la siguiente opción:</target>
        </trans-unit>
        <trans-unit id="043ebe155c68a02fa99782ad455e116e9535a4e8" translate="yes" xml:space="preserve">
          <source>If you chop a list, each element is chopped. Only the value of the last &lt;a href=&quot;#chop-VARIABLE&quot;&gt;&lt;code&gt;chop&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875c1fe2de9773e7e9366d0703f2a602deb9c197" translate="yes" xml:space="preserve">
          <source>If you chop a list, each element is chopped. Only the value of the last &lt;code&gt;&lt;a href=&quot;chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Si corta una lista, cada elemento se corta. Solo se devuelve el valor de la &amp;uacute;ltima &lt;code&gt;&lt;a href=&quot;chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03160d33f05c1b78628995f8692e16c5933ebe05" translate="yes" xml:space="preserve">
          <source>If you chop a list, each element is chopped. Only the value of the last &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">Si corta una lista, cada elemento se corta. Solo se devuelve el valor de la &amp;uacute;ltima &lt;code&gt;&lt;a href=&quot;functions/chop&quot;&gt;chop&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="caf1e734b10683713e7d496bb52630f5b34525d0" translate="yes" xml:space="preserve">
          <source>If you compile and run</source>
          <target state="translated">Si compilas y ejecutas</target>
        </trans-unit>
        <trans-unit id="4359b9f0177138527f6b61e374c639bb3caf7642" translate="yes" xml:space="preserve">
          <source>If you completely hide the short forms of the Perl public API, add -DPERL_NO_SHORT_NAMES to the compilation flags. This means that for example instead of writing</source>
          <target state="translated">Si ocultas completamente las formas cortas de la API pública de Perl,añade -DPERL_NO_SHORT_NAMES a las banderas de compilación.Esto significa que por ejemplo en lugar de escribir</target>
        </trans-unit>
        <trans-unit id="2026c5f1b05bc468fd9f9b21ddfe279181855850" translate="yes" xml:space="preserve">
          <source>If you constrain the portion of &lt;code&gt;pv&lt;/code&gt; that is looked at by this function (by passing a non-NULL &lt;code&gt;endptr&lt;/code&gt;), and if the intial bytes of that portion form a valid value, it will return TRUE, setting &lt;code&gt;*endptr&lt;/code&gt; to the byte following the final digit of the value. But if there is no constraint at what's looked at, all of &lt;code&gt;pv&lt;/code&gt; must be valid in order for TRUE to be returned. &lt;code&gt;*endptr&lt;/code&gt; is unchanged from its value on input if FALSE is returned;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e117fe20aeb505e6fb3bd26d20ee9983d45c623" translate="yes" xml:space="preserve">
          <source>If you consult &lt;code&gt;perldoc -f &lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; you will see that &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; will behave differently when given a bareword or a string.</source>
          <target state="translated">Si consulta &lt;code&gt;perldoc -f &lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; , ver&amp;aacute; que &lt;code&gt;&lt;a href=&quot;../functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; se comportar&amp;aacute; de manera diferente cuando se le proporcione una palabra clave o una cadena.</target>
        </trans-unit>
        <trans-unit id="675f3fe6a1b5c4eacc7781347f628b31f87a96c1" translate="yes" xml:space="preserve">
          <source>If you consult &lt;code&gt;perldoc -f require&lt;/code&gt; you will see that &lt;code&gt;require&lt;/code&gt; will behave differently when given a bareword or a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e933e27b4b6affb17bacc2be8545945df23e47f1" translate="yes" xml:space="preserve">
          <source>If you create interpreters in one thread and then proceed to call them in another, you need to make sure perl's own Thread Local Storage (TLS) slot is initialized correctly in each of those threads.</source>
          <target state="translated">Si se crean intérpretes en un hilo y luego se procede a llamarlos en otro,hay que asegurarse de que la ranura de Almacenamiento Local de Hilos (TLS)propia de Perl se inicialice correctamente en cada uno de esos hilos.</target>
        </trans-unit>
        <trans-unit id="4e50c2bd9e835a3a7f1961b7856f6dac61424cbe" translate="yes" xml:space="preserve">
          <source>If you decide to ignore this advice and use the GNU versions anyway, then be sure that they are relatively recent. Versions newer than 2.7 are apparently new enough. Older versions may have trouble with dynamic loading.</source>
          <target state="translated">Si decide ignorar este consejo y usar las versiones de GNU de todos modos,entonces asegúrese de que sean relativamente recientes.Las versiones más recientes que la 2.7 son aparentemente bastante nuevas.Las versiones más antiguas pueden tener problemas con la carga dinámica.</target>
        </trans-unit>
        <trans-unit id="ff55c7f7dfadd85537843d3b167612c0ffcaee31" translate="yes" xml:space="preserve">
          <source>If you decide to use a different version of the zlib library, you need to be aware of the following issues</source>
          <target state="translated">Si decide utilizar una versión diferente de la biblioteca zlib,debe tener en cuenta los siguientes aspectos</target>
        </trans-unit>
        <trans-unit id="dea32ebc2834b73dcbf2cbd2fdecffa9453ead2d" translate="yes" xml:space="preserve">
          <source>If you decide to use gcc, make sure your installation is recent and complete, and be sure to read the Perl INSTALL file for more gcc-specific details.</source>
          <target state="translated">Si decide utilizar gcc,asegúrese de que la instalación es reciente y completa,y asegúrese de leer el archivo Perl INSTALL para obtener más detalles específicos de gcc.</target>
        </trans-unit>
        <trans-unit id="275ebe9364d1067d763d9e8ee83a9ef9cef15d89" translate="yes" xml:space="preserve">
          <source>If you decide to use gcc, make sure your installation is recent and complete, and be sure to read the Perl INSTALL file for more gcc-specific details. Please report any hoops you had to jump through to the development team.</source>
          <target state="translated">Si decide utilizar gcc,asegúrese de que la instalación es reciente y completa,y asegúrese de leer el archivo Perl INSTALL para obtener más detalles específicos de gcc.Por favor,informe al equipo de desarrollo de cualquier armazón por el que haya tenido que pasar.</target>
        </trans-unit>
        <trans-unit id="129ecc12b1557dd3798539452dbf9b9ea8476c0d" translate="yes" xml:space="preserve">
          <source>If you define an &lt;code&gt;AUTOLOAD&lt;/code&gt; in your class, then Perl will call your &lt;code&gt;AUTOLOAD&lt;/code&gt; to handle the &lt;code&gt;DESTROY&lt;/code&gt; method. You can prevent this by defining an empty &lt;code&gt;DESTROY&lt;/code&gt; , like we did in the autoloading example. You can also check the value of &lt;code&gt;$AUTOLOAD&lt;/code&gt; and return without doing anything when called to handle &lt;code&gt;DESTROY&lt;/code&gt; .</source>
          <target state="translated">Si define un &lt;code&gt;AUTOLOAD&lt;/code&gt; en su clase, Perl llamar&amp;aacute; a su &lt;code&gt;AUTOLOAD&lt;/code&gt; para manejar el m&amp;eacute;todo &lt;code&gt;DESTROY&lt;/code&gt; . Puede evitar esto definiendo un &lt;code&gt;DESTROY&lt;/code&gt; vac&amp;iacute;o , como hicimos en el ejemplo de carga autom&amp;aacute;tica. Tambi&amp;eacute;n puede verificar el valor de &lt;code&gt;$AUTOLOAD&lt;/code&gt; y regresar sin hacer nada cuando sea llamado para manejar &lt;code&gt;DESTROY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="498a8ce676b34793704f21213180e13370975cc0" translate="yes" xml:space="preserve">
          <source>If you define an &lt;code&gt;AUTOLOAD&lt;/code&gt; in your class, then Perl will call your &lt;code&gt;AUTOLOAD&lt;/code&gt; to handle the &lt;code&gt;DESTROY&lt;/code&gt; method. You can prevent this by defining an empty &lt;code&gt;DESTROY&lt;/code&gt;, like we did in the autoloading example. You can also check the value of &lt;code&gt;$AUTOLOAD&lt;/code&gt; and return without doing anything when called to handle &lt;code&gt;DESTROY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eb8ac68c4fb558c46d1ee64b3833ca570000ed" translate="yes" xml:space="preserve">
          <source>If you define more than one name for the code point, it is indeterminate which one will be returned.</source>
          <target state="translated">Si se define más de un nombre para el punto de código,es indeterminado cuál será devuelto.</target>
        </trans-unit>
        <trans-unit id="49322aadfdd4f7ccdbc478f7d31a6ef35c74c780" translate="yes" xml:space="preserve">
          <source>If you desire complete control over SSL connections, the &lt;code&gt;SSL_options&lt;/code&gt; attribute lets you provide a hash reference that will be passed through to &lt;code&gt;IO::Socket::SSL::start_SSL()&lt;/code&gt;, overriding any options set by HTTP::Tiny. For example, to provide your own trusted CA file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b2ed76508ea6501a561cd368f25fd856dfc7e2" translate="yes" xml:space="preserve">
          <source>If you develop any useful expiration managers that you think should be distributed with Memoize, please let me know.</source>
          <target state="translated">Si desarrolla algún gestor de caducidad útil que crea que debería ser distribuido con Memoize,por favor hágamelo saber.</target>
        </trans-unit>
        <trans-unit id="2101fa1f88298b0b195dfaac7732fd2635cea835" translate="yes" xml:space="preserve">
          <source>If you didn't mean to use a Unicode property, escape the &lt;code&gt;\p&lt;/code&gt;, either by &lt;code&gt;\\p&lt;/code&gt; (just the &lt;code&gt;\p&lt;/code&gt;) or by &lt;code&gt;\Q\p&lt;/code&gt; (the rest of the string, or until &lt;code&gt;\E&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf4a8657eebfe97ba9c4e743bd983d09e5edaa6" translate="yes" xml:space="preserve">
          <source>If you didn't use &lt;code&gt;openlog()&lt;/code&gt; before using &lt;code&gt;syslog()&lt;/code&gt; , &lt;code&gt;syslog()&lt;/code&gt; will try to guess the &lt;code&gt;$ident&lt;/code&gt; by extracting the shortest prefix of &lt;code&gt;$format&lt;/code&gt; that ends in a &lt;code&gt;&quot;:&quot;&lt;/code&gt; .</source>
          <target state="translated">Si no us&amp;oacute; &lt;code&gt;openlog()&lt;/code&gt; antes de usar &lt;code&gt;syslog()&lt;/code&gt; , &lt;code&gt;syslog()&lt;/code&gt; intentar&amp;aacute; adivinar el &lt;code&gt;$ident&lt;/code&gt; extrayendo el prefijo m&amp;aacute;s corto del &lt;code&gt;$format&lt;/code&gt; que termina en &lt;code&gt;&quot;:&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2758eb43b68115ce83395ea254e99fa90136500" translate="yes" xml:space="preserve">
          <source>If you didn't use &lt;code&gt;openlog()&lt;/code&gt; before using &lt;code&gt;syslog()&lt;/code&gt;, &lt;code&gt;syslog()&lt;/code&gt; will try to guess the &lt;code&gt;$ident&lt;/code&gt; by extracting the shortest prefix of &lt;code&gt;$format&lt;/code&gt; that ends in a &lt;code&gt;&quot;:&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ed1961687b0abd10e165d61c48cda9ac3ae785" translate="yes" xml:space="preserve">
          <source>If you discover some glitches, move directories of problematic modules to a different location; if these modules are non-XS modules, you may just ignore them - they are already installed; the remaining, XS, modules you need to install manually one by one.</source>
          <target state="translated">Si descubres algunos fallos,mueve los directorios de los módulos problemáticos a un lugar diferente;si estos módulos no son XS,puedes simplemente ignorarlos-ya están instalados;el resto,XS,los módulos que necesitas instalar manualmente uno por uno.</target>
        </trans-unit>
        <trans-unit id="43d56dedc7192e637755e1fdcd48fbf68cbff70a" translate="yes" xml:space="preserve">
          <source>If you do</source>
          <target state="translated">Si lo haces...</target>
        </trans-unit>
        <trans-unit id="cb8667358646593d3b3e540e94dd3bddc5a68445" translate="yes" xml:space="preserve">
          <source>If you do need to sort non-alphabetically for whatever reasons, you can give a code reference (or a subroutine name) to &lt;code&gt;sort_by&lt;/code&gt;, then the argument will be passed to Perl's &lt;code&gt;sort&lt;/code&gt; built-in function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f303cdfeba4ec1c04b3ea76ad07c019d7ba1217e" translate="yes" xml:space="preserve">
          <source>If you do not do this, then tools you call that also check for a context will notice that the context they grabbed was created at the same stack depth, which will trigger protective measures that warn you and destroy the existing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ef7e6c621828b29eab79e96b5fb6269cd00a77" translate="yes" xml:space="preserve">
          <source>If you do not enter the shell, shell commands are available both as methods (&lt;code&gt;CPAN::Shell-&amp;gt;install(...)&lt;/code&gt; ) and as functions in the calling package (&lt;code&gt;install(...)&lt;/code&gt; ). Before calling low-level commands, it makes sense to initialize components of CPAN you need, e.g.:</source>
          <target state="translated">Si no ingresa al shell, los comandos del shell est&amp;aacute;n disponibles como m&amp;eacute;todos ( &lt;code&gt;CPAN::Shell-&amp;gt;install(...)&lt;/code&gt; ) y como funciones en el paquete de llamada ( &lt;code&gt;install(...)&lt;/code&gt; ). Antes de llamar a comandos de bajo nivel, tiene sentido inicializar los componentes de CPAN que necesita, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="bc816a9fd08d7a00464780adbf72cc89737d7fde" translate="yes" xml:space="preserve">
          <source>If you do not have</source>
          <target state="translated">Si no tienes</target>
        </trans-unit>
        <trans-unit id="69ced298dbf1c87fefd1662253cccc2e7a8bde7d" translate="yes" xml:space="preserve">
          <source>If you do not have a copy of the GNU General Public License write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</source>
          <target state="translated">Si no tiene una copia de la Licencia Pública General de GNU escriba a la Free Software Foundation,Inc.,675 Mass Ave,Cambridge,MA 02139,USA.</target>
        </trans-unit>
        <trans-unit id="ca85e836f91816edbc4e15e9107effedf45973f0" translate="yes" xml:space="preserve">
          <source>If you do not have that module, you can do the same thing with &lt;a href=&quot;File::Find&quot;&gt;File::Find&lt;/a&gt; which is part of the standard library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c124bac0783d0b5dcccc34a0dbf3566f426f11" translate="yes" xml:space="preserve">
          <source>If you do not have that module, you can do the same thing with &lt;a href=&quot;file/find&quot;&gt;File::Find&lt;/a&gt; which is part of the standard library:</source>
          <target state="translated">Si no tiene ese m&amp;oacute;dulo, puede hacer lo mismo con &lt;a href=&quot;file/find&quot;&gt;File :: Find,&lt;/a&gt; que es parte de la biblioteca est&amp;aacute;ndar:</target>
        </trans-unit>
        <trans-unit id="05c2496743b48fe9b410f73d7328bfcdc228baa8" translate="yes" xml:space="preserve">
          <source>If you do not have the SDK installed you must at least have abc-shell installed or some other suitable sh port. This is required to run external commands and should be available as 'sh' in your path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd07d5a5c26be6eca98f51764342db5783f35fa8" translate="yes" xml:space="preserve">
          <source>If you do not know what shell you have, consult your local helpdesk or the equivalent.</source>
          <target state="translated">Si no sabe qué casco tiene,consulte a su servicio de asistencia local o al equivalente.</target>
        </trans-unit>
        <trans-unit id="7e4c6cc6957c31110bb18e19744ff8957469df93" translate="yes" xml:space="preserve">
          <source>If you do not override this then the default implementation will attempt to generate facets from the legacy API. This generation is limited only to what the legacy API can provide. It is recommended that you override this method and write out explicit facet data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de6e3279f2bd155e7f8bf6759e637927cce20be" translate="yes" xml:space="preserve">
          <source>If you do not set this flag then it is</source>
          <target state="translated">Si no pones esta bandera entonces es</target>
        </trans-unit>
        <trans-unit id="926a166805dd3b0aef3dd1d472d192955fb1ec52" translate="yes" xml:space="preserve">
          <source>If you do not specify a package name, the variable is created in the current package.</source>
          <target state="translated">Si no se especifica un nombre de paquete,la variable se crea en el paquete actual.</target>
        </trans-unit>
        <trans-unit id="eb887a9c7d54012c86e6e1c5e9df47c38a1fd9a7" translate="yes" xml:space="preserve">
          <source>If you do not want to actually create a full blown version object, but would still like to verify that a given string meets the criteria to be parsed as a version, there are two helper functions that can be employed directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec84ed1a6f6d8da6377929662414a47b27976a2" translate="yes" xml:space="preserve">
          <source>If you do not want to call the package's &lt;a href=&quot;#import-LIST&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; method (for instance, to stop your namespace from being altered), explicitly supply the empty list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6ac2382b8b465b26d1901487c44646a3e50e04" translate="yes" xml:space="preserve">
          <source>If you do not want to call the package's &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; method (for instance, to stop your namespace from being altered), explicitly supply the empty list:</source>
          <target state="translated">Si no desea llamar al m&amp;eacute;todo de &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n del paquete (por ejemplo, para evitar que se modifique su espacio de nombres), proporcione expl&amp;iacute;citamente la lista vac&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="ea10c1ff3a243c28f284c149e22c1d185c65b318" translate="yes" xml:space="preserve">
          <source>If you do not want to call the package's &lt;code&gt;&lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; method (for instance, to stop your namespace from being altered), explicitly supply the empty list:</source>
          <target state="translated">Si no desea llamar al m&amp;eacute;todo de &lt;code&gt;&lt;a href=&quot;import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; aci&amp;oacute;n del paquete (por ejemplo, para evitar que se modifique su espacio de nombres), proporcione expl&amp;iacute;citamente la lista vac&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="8470234c0d68b289fd8da0f074a387fae1ae490f" translate="yes" xml:space="preserve">
          <source>If you do not want to use these defaults they can be overridden by explicitly setting the &lt;code&gt;Name&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; , &lt;code&gt;TextFlag&lt;/code&gt; , &lt;code&gt;ExtAttr&lt;/code&gt; , &lt;code&gt;exUnixN&lt;/code&gt; and &lt;code&gt;exTime&lt;/code&gt; options or by setting the &lt;code&gt;Minimal&lt;/code&gt; parameter.</source>
          <target state="translated">Si no desea utilizar estos valores predeterminados, puede &lt;code&gt;ExtAttr&lt;/code&gt; &lt;code&gt;exUnixN&lt;/code&gt; &lt;code&gt;exTime&lt;/code&gt; opciones &lt;code&gt;Name&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; , &lt;code&gt;TextFlag&lt;/code&gt; , ExtAttr , exUnixN y exTime o configurando el par&amp;aacute;metro &lt;code&gt;Minimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f15a287c32e6f66173e359fbddfbe362d18b693a" translate="yes" xml:space="preserve">
          <source>If you do not want to use these defaults they can be overridden by explicitly setting the &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Time&lt;/code&gt; options or by setting the &lt;code&gt;Minimal&lt;/code&gt; parameter.</source>
          <target state="translated">Si no desea utilizar estos valores predeterminados, puede anularlos configurando expl&amp;iacute;citamente las opciones de &lt;code&gt;Name&lt;/code&gt; y &lt;code&gt;Time&lt;/code&gt; o configurando el par&amp;aacute;metro &lt;code&gt;Minimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de7aec51016dff43e0ecf45d764d0cccf666e711" translate="yes" xml:space="preserve">
          <source>If you do not want to use these defaults they can be overridden by explicitly setting the &lt;code&gt;Name&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;TextFlag&lt;/code&gt;, &lt;code&gt;ExtAttr&lt;/code&gt;, &lt;code&gt;exUnixN&lt;/code&gt; and &lt;code&gt;exTime&lt;/code&gt; options or by setting the &lt;code&gt;Minimal&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c647e4788bb29e5dcf3d258b1e0dc34c9ef54f62" translate="yes" xml:space="preserve">
          <source>If you do not wish this to happen, you should provide an array reference, where all parts of your command are already separated out. Note however, if there are extra or spurious whitespaces in these parts, the parser or underlying code may not interpret it correctly, and cause an error.</source>
          <target state="translated">Si no desea que esto suceda,debe proporcionar una referencia de la matriz,donde todas las partes de su comando ya están separadas.Tenga en cuenta,sin embargo,que si hay espacios en blanco adicionales o falsos en estas partes,el analizador o el código subyacente puede no interpretarlo correctamente,y causar un error.</target>
        </trans-unit>
        <trans-unit id="459db29c5c8a7302439a70851525c81616dcc865" translate="yes" xml:space="preserve">
          <source>If you do not wish to install the &lt;a href=&quot;Module::Starter&quot;&gt;Module::Starter&lt;/a&gt; package from CPAN,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f09ee5e6b9af0c82c4326addc62e789f8443f5c" translate="yes" xml:space="preserve">
          <source>If you do not wish to install the &lt;a href=&quot;http://search.cpan.org/perldoc/Module::Starter&quot;&gt;Module::Starter&lt;/a&gt; package from CPAN,</source>
          <target state="translated">Si no desea instalar el paquete &lt;a href=&quot;http://search.cpan.org/perldoc/Module::Starter&quot;&gt;Module :: Starter&lt;/a&gt; de CPAN,</target>
        </trans-unit>
        <trans-unit id="484cd976813c85d85881ff70f66c34600b720c15" translate="yes" xml:space="preserve">
          <source>If you do set &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; to 0, you may notice an improvement in speed at the risk of not recursing into subdirectories if a filesystem doesn't populate &lt;code&gt;nlink&lt;/code&gt; as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0549310bae0dd74950be604da632c91876f7d8c0" translate="yes" xml:space="preserve">
          <source>If you do set &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; to 1, you will notice slow-downs.</source>
          <target state="translated">Si establece &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; en 1, notar&amp;aacute; ralentizaciones.</target>
        </trans-unit>
        <trans-unit id="feef0b7ae2868ad2a4e1f83d30c63fb0d93e6be4" translate="yes" xml:space="preserve">
          <source>If you do this in a binary operator, you will actually change one of the strings that came into the operator, and, while it shouldn't be noticeable by the end user, it can cause problems in deficient code.</source>
          <target state="translated">Si se hace esto en un operador binario,en realidad se cambiará una de las cadenas que entraron en el operador,y,aunque no debería ser perceptible para el usuario final,puede causar problemas en el código deficiente.</target>
        </trans-unit>
        <trans-unit id="32f0578310d415019b09f619288e373d3b705f8d" translate="yes" xml:space="preserve">
          <source>If you do want this subroutine to be a closure that reflects future changes to the variable that it closes over, add an explicit &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Si desea que esta subrutina sea un cierre que refleje los cambios futuros en la variable sobre la que se cierra, agregue una &lt;code&gt;&lt;a href=&quot;functions/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;cita :</target>
        </trans-unit>
        <trans-unit id="38c006c4445fbc760bcc20774ff0c404fc351e3b" translate="yes" xml:space="preserve">
          <source>If you do want this subroutine to be a closure that reflects future changes to the variable that it closes over, add an explicit &lt;code&gt;return&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7553259d39face4afb80ca316b04630713e25671" translate="yes" xml:space="preserve">
          <source>If you do want to work with large integers like under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; , try &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bigint;&lt;/code&gt; :</source>
          <target state="translated">Si desea trabajar con enteros grandes como under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; integer;&lt;/code&gt; , intente &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bigint;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b1975a786e24a8553b122ca84ecd2c75458bf60c" translate="yes" xml:space="preserve">
          <source>If you do want to work with large integers like under &lt;code&gt;use integer;&lt;/code&gt;, try &lt;code&gt;use bigint;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226407ccd685c51b95b1d8b7151f227bb1d0575c" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to be included in the AUTHORS file, just let us know. Otherwise we will take your submission of a patch as permission to credit you in the AUTHORS file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a338314884729930813df6e4dec44b70118fce2d" translate="yes" xml:space="preserve">
          <source>If you don't ask for any feature, you get the list of features that the user requested you to be nice to. This has the nice side effect that if you don't respect anything in particular then you can just ask for it and use it like a boolean.</source>
          <target state="translated">Si no pides ninguna característica,obtienes la lista de características que el usuario te pidió que fueras amable.Esto tiene el agradable efecto secundario de que si no respetas nada en particular,puedes pedirlo y usarlo como un booleano.</target>
        </trans-unit>
        <trans-unit id="d5b6d156d7cf6f2a797778536a48c223724f9360" translate="yes" xml:space="preserve">
          <source>If you don't care about the order of the elements, you could just create the hash then extract the keys. It's not important how you create that hash: just that you use &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; to get the unique elements.</source>
          <target state="translated">Si no le importa el orden de los elementos, puede crear el hash y luego extraer las claves. No es importante c&amp;oacute;mo creas ese hash: solo que uses &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; para obtener los elementos &amp;uacute;nicos.</target>
        </trans-unit>
        <trans-unit id="6ab466d2383fda10b330c50a2b963d3911043a02" translate="yes" xml:space="preserve">
          <source>If you don't care about the order of the elements, you could just create the hash then extract the keys. It's not important how you create that hash: just that you use &lt;code&gt;keys&lt;/code&gt; to get the unique elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21625178e6b6545fac5abe6f5027d91ef293d91" translate="yes" xml:space="preserve">
          <source>If you don't care about where digits and underscore sort to, you can do something like this</source>
          <target state="translated">Si no te importa dónde se ordenan los dígitos y el guión bajo,puedes hacer algo como esto</target>
        </trans-unit>
        <trans-unit id="f92e493c5048826b06ef70fc4669cac080dfe915" translate="yes" xml:space="preserve">
          <source>If you don't care that one hash overwrites keys and values from the other, you could just use a hash slice to add one hash to another. In this case, values from &lt;code&gt;%hash2&lt;/code&gt; replace values from &lt;code&gt;%hash1&lt;/code&gt; when they have keys in common:</source>
          <target state="translated">Si no le importa que un hash sobrescriba las claves y los valores del otro, puede usar un trozo de hash para agregar un hash a otro. En este caso, los valores de &lt;code&gt;%hash2&lt;/code&gt; reemplazan los valores de &lt;code&gt;%hash1&lt;/code&gt; cuando tienen claves en com&amp;uacute;n:</target>
        </trans-unit>
        <trans-unit id="c43d001ee345c63043409156142b64f915867634" translate="yes" xml:space="preserve">
          <source>If you don't get a paragraph or two of expanded discussion, it might not be perl's message.</source>
          <target state="translated">Si no recibes un párrafo o dos de discusión ampliada,puede que no sea el mensaje de Perl.</target>
        </trans-unit>
        <trans-unit id="7a12cb113cb2e2457200764dfd73d419fb8973d7" translate="yes" xml:space="preserve">
          <source>If you don't have File::Stream, you have to do a little more work.</source>
          <target state="translated">Si no tienes File::Stream,tienes que hacer un poco más de trabajo.</target>
        </trans-unit>
        <trans-unit id="ea4a8fbdbdee9b250414a6cc40a6c3e590cef92d" translate="yes" xml:space="preserve">
          <source>If you don't have data written with specific configuration of perl described above, then you do not and should not do anything. Don't set the flag - not only will Storable on an identically configured perl refuse to load them, but Storable a differently configured perl will load them believing them to be correct for it, and then may well fail or crash part way through reading them.</source>
          <target state="translated">Si no tienes datos escritos con la configuración específica de perl descrita anteriormente,entonces no haces ni debes hacer nada.No ponga la bandera-no sólo Storable en un perl de idéntica configuración se negará a cargarlos,sino que Storable en un perl de configuración diferente los cargará creyendo que son correctos para ello,y entonces puede muy bien fallar o estrellarse en parte al leerlos.</target>
        </trans-unit>
        <trans-unit id="670ababa1b4eae15ad2ad8b23b062bc17283021f" translate="yes" xml:space="preserve">
          <source>If you don't have the safe version of set-id scripts, all is not lost. Sometimes this kernel &quot;feature&quot; can be disabled, so that the kernel either doesn't run set-id scripts with the set-id or doesn't run them at all. Either way avoids the exploitability of the race condition, but doesn't help in actually running scripts set-id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34e9607e58d64a63d5aabb3955bab5ec740de09" translate="yes" xml:space="preserve">
          <source>If you don't have write access to the DBM file, you can only read hash variables, not set them. If you want to test whether you can write, either use file tests or try setting a dummy hash entry inside an &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; to trap the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36289d77701a121889713d6277f544f12a871bb4" translate="yes" xml:space="preserve">
          <source>If you don't have write access to the DBM file, you can only read hash variables, not set them. If you want to test whether you can write, either use file tests or try setting a dummy hash entry inside an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; to trap the error.</source>
          <target state="translated">Si no tiene acceso de escritura al archivo DBM, solo puede leer variables hash, no configurarlas. Si desea probar si puede escribir, use pruebas de archivo o intente configurar una entrada hash ficticia dentro de una &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n para atrapar el error.</target>
        </trans-unit>
        <trans-unit id="bdbbd37031df2f33535ed6549b499d32ea9aa9e5" translate="yes" xml:space="preserve">
          <source>If you don't have write access to the DBM file, you can only read hash variables, not set them. If you want to test whether you can write, either use file tests or try setting a dummy hash entry inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; to trap the error.</source>
          <target state="translated">Si no tiene acceso de escritura al archivo DBM, solo puede leer variables hash, no configurarlas. Si desea probar si puede escribir, use pruebas de archivo o intente configurar una entrada hash ficticia dentro de una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n para atrapar el error.</target>
        </trans-unit>
        <trans-unit id="8f4b767528b9f98c2858aad05fc8520eae2c1d33" translate="yes" xml:space="preserve">
          <source>If you don't import any of these functions, assume a &lt;code&gt;&amp;amp;I18N::LangTags::&lt;/code&gt; in front of all the function names in the following examples.</source>
          <target state="translated">Si no importa ninguna de estas funciones, asuma un &lt;code&gt;&amp;amp;I18N::LangTags::&lt;/code&gt; delante de todos los nombres de funci&amp;oacute;n en los siguientes ejemplos.</target>
        </trans-unit>
        <trans-unit id="107952179f7076da25aad77d14c209ced7df48df" translate="yes" xml:space="preserve">
          <source>If you don't know how many tests you're going to run, you can issue the plan when you're done running tests.</source>
          <target state="translated">Si no sabes cuántas pruebas vas a hacer,puedes emitir el plan cuando termines de hacer las pruebas.</target>
        </trans-unit>
        <trans-unit id="739739cb456280bdf258e73ad5d6021f89fcc54e" translate="yes" xml:space="preserve">
          <source>If you don't know if a string contains YAML or JSON, this method will use &lt;a href=&quot;Parse::CPAN::Meta&quot;&gt;Parse::CPAN::Meta&lt;/a&gt; to guess. In other respects it is identical to &lt;code&gt;load_file()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209c65929fc8bcea028a0c96cf1f684c89334602" translate="yes" xml:space="preserve">
          <source>If you don't know what license to use, dual licensing under the GPL and Artistic licenses (the same as Perl itself) is a good idea. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlgpl.html&quot;&gt;perlgpl&lt;/a&gt; and &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="translated">Si no sabe qu&amp;eacute; licencia usar, la licencia dual bajo la GPL y las licencias Art&amp;iacute;sticas (lo mismo que el propio Perl) es una buena idea. Ver &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlgpl.html&quot;&gt;perlgpl&lt;/a&gt; y &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;perlartistic&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed23e5a70f4d9c445aa4d9a13f1bd7f582002fa9" translate="yes" xml:space="preserve">
          <source>If you don't know what license to use, dual licensing under the GPL and Artistic licenses (the same as Perl itself) is a good idea. See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlgpl&quot;&gt;perlgpl&lt;/a&gt; and &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlartistic&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afa056a783c1ff17e6396cee6d067cb1e22c33a" translate="yes" xml:space="preserve">
          <source>If you don't know whether a string contains YAML or JSON data, this method will use some heuristics and guess. If it can't tell, it assumes YAML.</source>
          <target state="translated">Si no sabes si una cadena contiene datos de YAML o JSON,este método utilizará algunos heurísticos y adivinará.Si no puede decirlo,asume que es YAML.</target>
        </trans-unit>
        <trans-unit id="d34593d2a30bd46dc846ad60717c333d071ef181" translate="yes" xml:space="preserve">
          <source>If you don't mind shelling out, the &lt;code&gt;wc&lt;/code&gt; command is usually the fastest, even with the extra interprocess overhead. Ensure that you have an untainted filename though:</source>
          <target state="translated">Si no le importa gastar dinero, el comando &lt;code&gt;wc&lt;/code&gt; suele ser el m&amp;aacute;s r&amp;aacute;pido, incluso con la sobrecarga adicional entre procesos. Sin embargo, aseg&amp;uacute;rese de tener un nombre de archivo intacto:</target>
        </trans-unit>
        <trans-unit id="ab42639abd5abd9367c12d1d0ad1d1482fb0d4b6" translate="yes" xml:space="preserve">
          <source>If you don't need the existing content of the SV, you can avoid some copying with:</source>
          <target state="translated">Si no necesita el contenido existente de la SV,puede evitar que se copie con él:</target>
        </trans-unit>
        <trans-unit id="bd9e10a2452b68c075fcb32cabd703d0209267ed" translate="yes" xml:space="preserve">
          <source>If you don't need to know the name of the file, you can use &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in place of the file name. In Perl 5.8 or later, the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; function creates an anonymous temporary file:</source>
          <target state="translated">Si no necesita saber el nombre del archivo, puede usar &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; con &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; en lugar del nombre del archivo. En Perl 5.8 o posterior, la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; crea un archivo temporal an&amp;oacute;nimo:</target>
        </trans-unit>
        <trans-unit id="22928fef3e84c8263a53f0cfc23f1b5d448491ff" translate="yes" xml:space="preserve">
          <source>If you don't need to know the name of the file, you can use &lt;code&gt;open()&lt;/code&gt; with &lt;code&gt;undef&lt;/code&gt; in place of the file name. In Perl 5.8 or later, the &lt;code&gt;open()&lt;/code&gt; function creates an anonymous temporary file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b260604ab4c441d85ae092e22c063810eb4d30c0" translate="yes" xml:space="preserve">
          <source>If you don't provide an exact inverse transformation, you will find that code like this will not behave as you expect.</source>
          <target state="translated">Si no proporciona una transformación inversa exacta,encontrará que un código como este no se comportará como usted espera.</target>
        </trans-unit>
        <trans-unit id="da9f240e2e4669201b3520ed7f3f5a0edd014292" translate="yes" xml:space="preserve">
          <source>If you don't really want to execute the first argument, but want to lie to the program you are executing about its own name, you can specify the program you actually want to run as an &quot;indirect object&quot; (without a comma) in front of the LIST, as in &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; . (This always forces interpretation of the LIST as a multivalued list, even if there is only a single scalar in the list.) Example:</source>
          <target state="translated">Si realmente no desea ejecutar el primer argumento, pero quiere mentirle al programa que est&amp;aacute; ejecutando sobre su propio nombre, puede especificar el programa que realmente desea ejecutar como un &quot;objeto indirecto&quot; (sin una coma) en delante de la LISTA, como en la &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; &lt;a href=&quot;exec&quot;&gt;ejecutiva&lt;/a&gt; . (Esto siempre fuerza la interpretaci&amp;oacute;n de LIST como una lista de varios valores, incluso si solo hay un escalar en la lista). Ejemplo:</target>
        </trans-unit>
        <trans-unit id="90475a6e4998e8131a7d71a411d5204a133b0a81" translate="yes" xml:space="preserve">
          <source>If you don't really want to execute the first argument, but want to lie to the program you are executing about its own name, you can specify the program you actually want to run as an &quot;indirect object&quot; (without a comma) in front of the LIST, as in &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; . (This always forces interpretation of the LIST as a multivalued list, even if there is only a single scalar in the list.) Example:</source>
          <target state="translated">Si realmente no desea ejecutar el primer argumento, pero quiere mentirle al programa que est&amp;aacute; ejecutando sobre su propio nombre, puede especificar el programa que realmente desea ejecutar como un &quot;objeto indirecto&quot; (sin una coma) en delante de la LISTA, como en la &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; PROGRAM LIST&lt;/code&gt; &lt;a href=&quot;functions/exec&quot;&gt;ejecutiva&lt;/a&gt; . (Esto siempre fuerza la interpretaci&amp;oacute;n de LIST como una lista de varios valores, incluso si solo hay un escalar en la lista). Ejemplo:</target>
        </trans-unit>
        <trans-unit id="418ff649fbe756afaa4bfbbd2264a36cfbe884b8" translate="yes" xml:space="preserve">
          <source>If you don't really want to execute the first argument, but want to lie to the program you are executing about its own name, you can specify the program you actually want to run as an &quot;indirect object&quot; (without a comma) in front of the LIST, as in &lt;code&gt;exec PROGRAM LIST&lt;/code&gt;. (This always forces interpretation of the LIST as a multivalued list, even if there is only a single scalar in the list.) Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b9da8187ce4c2f915ec1ca4c659113a1fb93a3" translate="yes" xml:space="preserve">
          <source>If you don't run the full test suite, at least &lt;code&gt;make test_porting&lt;/code&gt;. This will run basic sanity checks. To see which sanity checks, have a look in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d09c87ff03423122d55e0fe04c7fdafafae320f" translate="yes" xml:space="preserve">
          <source>If you don't see an error message, you have the module. (If you do see an error message, it's still possible you have the module, but that it's not in your path, which you can display with &lt;code&gt;perl -e
&quot;print qq(@INC)&quot;&lt;/code&gt; .) For the remainder of this document, we'll assume that you really honestly truly lack an installed module, but have found it on the CPAN.</source>
          <target state="translated">Si no ve un mensaje de error, tiene el m&amp;oacute;dulo. (Si ve un mensaje de error, a&amp;uacute;n es posible que tenga el m&amp;oacute;dulo, pero que no est&amp;aacute; en su ruta, que puede mostrar con &lt;code&gt;perl -e &quot;print qq(@INC)&quot;&lt;/code&gt; .) Para el resto de este documento, asumiremos que realmente le falta un m&amp;oacute;dulo instalado, pero lo ha encontrado en el CPAN.</target>
        </trans-unit>
        <trans-unit id="eb0d75079c24e83da6fecb7132e9b60520bba455" translate="yes" xml:space="preserve">
          <source>If you don't see an error message, you have the module. (If you do see an error message, it's still possible you have the module, but that it's not in your path, which you can display with &lt;code&gt;perl -e &quot;print qq(@INC)&quot;&lt;/code&gt;.) For the remainder of this document, we'll assume that you really honestly truly lack an installed module, but have found it on the CPAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a71969f2b2e317963f5563c127a63079459334" translate="yes" xml:space="preserve">
          <source>If you don't specify a &lt;code&gt;dw_size&lt;/code&gt; , it defaults to the entire memory limit.</source>
          <target state="translated">Si no especifica un &lt;code&gt;dw_size&lt;/code&gt; , el valor predeterminado es el l&amp;iacute;mite de memoria completo.</target>
        </trans-unit>
        <trans-unit id="a1d09f5237198c8d539c87c541eb6e6b72285d75" translate="yes" xml:space="preserve">
          <source>If you don't specify a &lt;code&gt;dw_size&lt;/code&gt;, it defaults to the entire memory limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680f0cec0c96fdd6b5789593128bcc203ccf616d" translate="yes" xml:space="preserve">
          <source>If you don't specify a plan, &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; expects to see &lt;code&gt;done_testing()&lt;/code&gt; before your program exits. It will warn you if you forget it. You can give &lt;code&gt;done_testing()&lt;/code&gt; an optional number of tests you expected to run, and if the number ran differs, &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt; will give you another kind of warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d559d6056536d78595c17d437dfe78484f93f47a" translate="yes" xml:space="preserve">
          <source>If you don't understand this question, just press ENTER.</source>
          <target state="translated">Si no entiendes esta pregunta,simplemente pulsa ENTER.</target>
        </trans-unit>
        <trans-unit id="e1a9da1b5f8c61c5b3d264532c0386f7656b5414" translate="yes" xml:space="preserve">
          <source>If you don't want &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; to change your original variable you can use the non-destructive substitute modifier, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt;. This changes the behavior so that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt; returns the final substituted string (instead of the number of substitutions):</source>
          <target state="translated">Si no desea que &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; cambie su variable original, puede usar el modificador sustituto no destructivo, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt; . Esto cambia el comportamiento para que &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///r&lt;/a&gt;&lt;/code&gt; devuelva la cadena sustituida final (en lugar del n&amp;uacute;mero de sustituciones):</target>
        </trans-unit>
        <trans-unit id="b16ffc6d1bac1378ef5d03cf556d21c8b3e4f33f" translate="yes" xml:space="preserve">
          <source>If you don't want &lt;code&gt;s///&lt;/code&gt; to change your original variable you can use the non-destructive substitute modifier, &lt;code&gt;s///r&lt;/code&gt;. This changes the behavior so that &lt;code&gt;s///r&lt;/code&gt; returns the final substituted string (instead of the number of substitutions):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63f96d379f7a46f61c3872f0a57972ef07d6947" translate="yes" xml:space="preserve">
          <source>If you don't want any output should all modules be up to date, parse the output of above command for the regular expression &lt;code&gt;/modules are up to date/&lt;/code&gt; and decide to mail the output only if it doesn't match.</source>
          <target state="translated">Si no desea ninguna salida en caso de que todos los m&amp;oacute;dulos est&amp;eacute;n actualizados, analice la salida del comando anterior para la expresi&amp;oacute;n regular &lt;code&gt;/modules are up to date/&lt;/code&gt; y decida enviar la salida por correo solo si no coincide.</target>
        </trans-unit>
        <trans-unit id="717adb67f10193acb40c16a22305c4dc8ba0e791" translate="yes" xml:space="preserve">
          <source>If you don't want to create a new hash, you can still use this looping technique; just change the &lt;code&gt;%new_hash&lt;/code&gt; to &lt;code&gt;%hash1&lt;/code&gt; .</source>
          <target state="translated">Si no desea crear un nuevo hash, a&amp;uacute;n puede utilizar esta t&amp;eacute;cnica de bucle; simplemente cambie &lt;code&gt;%new_hash&lt;/code&gt; a &lt;code&gt;%hash1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="611b9b2078bc455fea7df0c75d337a1c6b770290" translate="yes" xml:space="preserve">
          <source>If you don't want to create a new hash, you can still use this looping technique; just change the &lt;code&gt;%new_hash&lt;/code&gt; to &lt;code&gt;%hash1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5861b9dcca59001a7ac94c68a3d243558acaf640" translate="yes" xml:space="preserve">
          <source>If you don't want to install the compiled Perl in AIX into /QOpenSys (for packaging it before copying it to PASE), you can use a Configure parameter: -Dinstallprefix=/tmp/QOpenSys/perl. This will cause the &quot;make install&quot; to install everything into that directory, while the installed files still think they are (will be) in /QOpenSys/perl.</source>
          <target state="translated">Si no quieres instalar el Perl compilado en AIX en /QOpenSys (para empaquetarlo antes de copiarlo a PASE),puedes usar un parámetro de configuración:-Dinstallprefix=/tmp/QOpenSys/perl.Esto hará que el &quot;make install&quot; instale todo en ese directorio,mientras que los archivos instalados siguen pensando que están (estarán)en /QOpenSys/perl.</target>
        </trans-unit>
        <trans-unit id="ebe8a5460a3cd2a89a4ca3fccf1f4c546c9647e5" translate="yes" xml:space="preserve">
          <source>If you don't want to keep the defaults for the INSTALL* macros, MakeMaker helps you to minimize the typing needed: the usual relationship between INSTALLPRIVLIB and INSTALLARCHLIB is determined by Configure at perl compilation time. MakeMaker supports the user who sets INSTALLPRIVLIB. If INSTALLPRIVLIB is set, but INSTALLARCHLIB not, then MakeMaker defaults the latter to be the same subdirectory of INSTALLPRIVLIB as Configure decided for the counterparts in %Config, otherwise it defaults to INSTALLPRIVLIB. The same relationship holds for INSTALLSITELIB and INSTALLSITEARCH.</source>
          <target state="translated">Si no quieres mantener los valores por defecto de las macros INSTALL*,MakeMaker te ayuda a minimizar la escritura necesaria:la relación habitual entre INSTALLPRIVLIB e INSTALLARCHLIB está determinada por Configurar en tiempo de compilación de perl.MakeMaker apoya al usuario que configura INSTALLPRIVLIB.Si se establece INSTALLPRIVLIB,pero no INSTALLARCHLIB,entonces MakeMaker establece por defecto que este último sea el mismo subdirectorio de INSTALLPRIVLIB que Configurar decidido para las contrapartes en %Config,de lo contrario se establece por defecto INSTALLPRIVLIB.La misma relación se mantiene para INSTALLSITELIB e INSTALLSITEARCH.</target>
        </trans-unit>
        <trans-unit id="5f0e1c4bb41a9dbee49413981e4f4536890ac2a6" translate="yes" xml:space="preserve">
          <source>If you don't want to modify your source code, but still have on-the-fly warnings, do this:</source>
          <target state="translated">Si no quieres modificar tu código fuente,pero aún así tienes advertencias sobre la marcha,hazlo:</target>
        </trans-unit>
        <trans-unit id="883af52a64cbec821f8f52f9cf06fce4facdd6ad" translate="yes" xml:space="preserve">
          <source>If you don't want to use the objects, you may import the &lt;code&gt;-&amp;gt;cando&lt;/code&gt; method into your namespace as a regular function called &lt;code&gt;stat_cando&lt;/code&gt; . This takes an arrayref containing the return values of &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; as its first argument, and interprets it for you.</source>
          <target state="translated">Si no desea utilizar los objetos, puede importar el m&amp;eacute;todo &lt;code&gt;-&amp;gt;cando&lt;/code&gt; en su espacio de nombres como una funci&amp;oacute;n normal llamada &lt;code&gt;stat_cando&lt;/code&gt; . Esto toma una referencia de matriz que contiene los valores de retorno de &lt;code&gt;&lt;a href=&quot;../functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; como su primer argumento y lo interpreta por usted.</target>
        </trans-unit>
        <trans-unit id="75651ef23090da325a0156abcf83a5415a24e8bd" translate="yes" xml:space="preserve">
          <source>If you don't want to use the objects, you may import the &lt;code&gt;-&amp;gt;cando&lt;/code&gt; method into your namespace as a regular function called &lt;code&gt;stat_cando&lt;/code&gt;. This takes an arrayref containing the return values of &lt;code&gt;stat&lt;/code&gt; or &lt;code&gt;lstat&lt;/code&gt; as its first argument, and interprets it for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca8817e625d3ffbecabec4b725646c93f6f8e36" translate="yes" xml:space="preserve">
          <source>If you don't wish to do this, set this variable to &lt;code&gt;false&lt;/code&gt; . Understand then that version comparisons are not possible, and Module::Load::Conditional can not tell you what module version you have installed. This may be desirable from a security or performance point of view. Note that &lt;code&gt;$FIND_VERSION&lt;/code&gt; code runs safely under &lt;code&gt;taint mode&lt;/code&gt; .</source>
          <target state="translated">Si no desea hacer esto, establezca esta variable en &lt;code&gt;false&lt;/code&gt; . Entienda entonces que las comparaciones de versiones no son posibles, y Module :: Load :: Conditional no puede decirle qu&amp;eacute; versi&amp;oacute;n del m&amp;oacute;dulo ha instalado. Esto puede ser deseable desde el punto de vista de la seguridad o el rendimiento. Tenga en cuenta que el c&amp;oacute;digo &lt;code&gt;$FIND_VERSION&lt;/code&gt; ejecuta de forma segura en el &lt;code&gt;taint mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de94190185ca2f3465ff49971ba654614381737e" translate="yes" xml:space="preserve">
          <source>If you don't wish to do this, set this variable to &lt;code&gt;false&lt;/code&gt;. Understand then that version comparisons are not possible, and Module::Load::Conditional can not tell you what module version you have installed. This may be desirable from a security or performance point of view. Note that &lt;code&gt;$FIND_VERSION&lt;/code&gt; code runs safely under &lt;code&gt;taint mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1341f2f78549b1827b1d11fb4b0cc0463ec09d6c" translate="yes" xml:space="preserve">
          <source>If you don't, you may experience strange build errors.</source>
          <target state="translated">Si no lo haces,puedes experimentar extraños errores de construcción.</target>
        </trans-unit>
        <trans-unit id="dae8c74471266a8218d010f2ece1eeec7e339df7" translate="yes" xml:space="preserve">
          <source>If you edit</source>
          <target state="translated">Si editas</target>
        </trans-unit>
        <trans-unit id="2fb01cc36906ab2ae202731906c27291970214ff" translate="yes" xml:space="preserve">
          <source>If you either have Perl 5.8.0 or later installed, or if you have Scalar-List-Utils 1.03 or later installed, you can say:</source>
          <target state="translated">Si tienes instalado Perl 5.8.0 o posterior,o si tienes instalado Scalar-List-Utils 1.03 o posterior,puedes decir:</target>
        </trans-unit>
        <trans-unit id="09872666932a845e43c465fbd124a59438a49096" translate="yes" xml:space="preserve">
          <source>If you evaluate a hash in scalar context, it returns a false value if the hash is empty. If there are any key/value pairs, it returns a true value. A more precise definition is version dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b892a658ce0764f4b064036e5d8f58bd78f5e370" translate="yes" xml:space="preserve">
          <source>If you evaluate a hash in scalar context, it returns false if the hash is empty. If there are any key/value pairs, it returns true; more precisely, the value returned is a string consisting of the number of used buckets and the number of allocated buckets, separated by a slash. This is pretty much useful only to find out whether Perl's internal hashing algorithm is performing poorly on your data set. For example, you stick 10,000 things in a hash, but evaluating %HASH in scalar context reveals &lt;code&gt;&quot;1/16&quot;&lt;/code&gt; , which means only one out of sixteen buckets has been touched, and presumably contains all 10,000 of your items. This isn't supposed to happen. If a tied hash is evaluated in scalar context, the &lt;code&gt;SCALAR&lt;/code&gt; method is called (with a fallback to &lt;code&gt;FIRSTKEY&lt;/code&gt; ).</source>
          <target state="translated">Si eval&amp;uacute;a un hash en contexto escalar, devuelve falso si el hash est&amp;aacute; vac&amp;iacute;o. Si hay pares clave / valor, devuelve verdadero; m&amp;aacute;s precisamente, el valor devuelto es una cadena que consta del n&amp;uacute;mero de dep&amp;oacute;sitos usados ​​y el n&amp;uacute;mero de dep&amp;oacute;sitos asignados, separados por una barra. Esto es bastante &amp;uacute;til solo para averiguar si el algoritmo de hash interno de Perl est&amp;aacute; funcionando mal en su conjunto de datos. Por ejemplo, coloca 10,000 cosas en un hash, pero la evaluaci&amp;oacute;n de% HASH en contexto escalar revela &lt;code&gt;&quot;1/16&quot;&lt;/code&gt; , lo que significa que solo se ha tocado uno de los diecis&amp;eacute;is cubos, y presumiblemente contiene los 10,000 de sus elementos. No se supone que esto suceda. Si se eval&amp;uacute;a un hash vinculado en un contexto escalar, se &lt;code&gt;SCALAR&lt;/code&gt; m&amp;eacute;todo SCALAR (con un retroceso a &lt;code&gt;FIRSTKEY&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8b7212a78497ddedc16438e486691b2144fe7186" translate="yes" xml:space="preserve">
          <source>If you evaluate an array in scalar context, it returns the length of the array. (Note that this is not true of lists, which return the last value, like the C comma operator, nor of built-in functions, which return whatever they feel like returning.) The following is always true:</source>
          <target state="translated">Si se evalúa una matriz en un contexto escalar,devuelve la longitud de la matriz.(Nótese que esto no es cierto para las listas,que devuelven el último valor,como el operador de coma C,ni para las funciones incorporadas,que devuelven lo que les apetezca devolver).Lo siguiente siempre es cierto:</target>
        </trans-unit>
        <trans-unit id="ae75f4b9e5f451131a1e22cec2a555eb5370ed40" translate="yes" xml:space="preserve">
          <source>If you ever see a string that looks like this, you'll know you printed out a reference by mistake.</source>
          <target state="translated">Si alguna vez ves una cadena como esta,sabrás que imprimiste una referencia por error.</target>
        </trans-unit>
        <trans-unit id="d2eae54bf1fbe9ae68c160098f500a78269b550c" translate="yes" xml:space="preserve">
          <source>If you execute the &lt;code&gt;T&lt;/code&gt; command from inside an active &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; statement, the backtrace will contain both a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; frame and an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; frame.</source>
          <target state="translated">Si ejecuta el comando &lt;code&gt;T&lt;/code&gt; desde dentro de una declaraci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; activa , el backtrace contendr&amp;aacute; tanto un marco &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; como un marco &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="091b3761ddd88c9d0dd9f58cc16fae998cfc428e" translate="yes" xml:space="preserve">
          <source>If you execute the &lt;code&gt;T&lt;/code&gt; command from inside an active &lt;code&gt;use&lt;/code&gt; statement, the backtrace will contain both a &lt;code&gt;require&lt;/code&gt; frame and an &lt;code&gt;eval&lt;/code&gt; frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fd5107f38bc928d4af20adedacdcf1cb44e019" translate="yes" xml:space="preserve">
          <source>If you expect characters to get to your device when you &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; them, you'll want to autoflush that filehandle. You can use &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;$|&lt;/code&gt; variable to control autoflushing (see</source>
          <target state="translated">Si espera que los caracteres lleguen a su dispositivo cuando los &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; , querr&amp;aacute; descargar autom&amp;aacute;ticamente ese identificador de archivo. Puede usar &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;$|&lt;/code&gt; variable para controlar el lavado autom&amp;aacute;tico (ver</target>
        </trans-unit>
        <trans-unit id="13366f7fd030f27f570c375099dc54189f595b15" translate="yes" xml:space="preserve">
          <source>If you expect characters to get to your device when you &lt;code&gt;print()&lt;/code&gt; them, you'll want to autoflush that filehandle. You can use &lt;code&gt;select()&lt;/code&gt; and the &lt;code&gt;$|&lt;/code&gt; variable to control autoflushing (see &lt;a href=&quot;perlvar#%24%7C&quot;&gt;&quot;$|&quot; in perlvar&lt;/a&gt; and &lt;a href=&quot;perlfunc#select&quot;&gt;&quot;select&quot; in perlfunc&lt;/a&gt;, or &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt;, &quot;How do I flush/unbuffer an output filehandle? Why must I do this?&quot;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65a4bc3927cbd6d7618d76eb545351eb5d8a945" translate="yes" xml:space="preserve">
          <source>If you expect to use both read and write operations on the device, you'll have to open it for update (see &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; for details). You may wish to open it without running the risk of blocking by using &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;O_RDWR|O_NDELAY|O_NOCTTY&lt;/code&gt; from the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module (part of the standard perl distribution). See &lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt; for more on this approach.</source>
          <target state="translated">Si espera usar operaciones de lectura y escritura en el dispositivo, tendr&amp;aacute; que abrirlo para actualizarlo (vea &lt;a href=&quot;functions/open&quot;&gt;abierto&lt;/a&gt; para m&amp;aacute;s detalles). Es posible que desee abrirlo sin correr el riesgo de bloqueo mediante &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;O_RDWR|O_NDELAY|O_NOCTTY&lt;/code&gt; del m&amp;oacute;dulo &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; (parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl). Consulte &lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre este enfoque.</target>
        </trans-unit>
        <trans-unit id="0c9408c9e8ecf3bf3ccb1ff9f6037ecd31cab34f" translate="yes" xml:space="preserve">
          <source>If you expect to use both read and write operations on the device, you'll have to open it for update (see &lt;a href=&quot;perlfunc#open&quot;&gt;&quot;open&quot; in perlfunc&lt;/a&gt; for details). You may wish to open it without running the risk of blocking by using &lt;code&gt;sysopen()&lt;/code&gt; and &lt;code&gt;O_RDWR|O_NDELAY|O_NOCTTY&lt;/code&gt; from the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module (part of the standard perl distribution). See &lt;a href=&quot;perlfunc#sysopen&quot;&gt;&quot;sysopen&quot; in perlfunc&lt;/a&gt; for more on this approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086943bc39b9078514791bccbde5ea2eddf63045" translate="yes" xml:space="preserve">
          <source>If you fail more than 254 tests, it will be reported as 254.</source>
          <target state="translated">Si fallas más de 254 pruebas,se reportará como 254.</target>
        </trans-unit>
        <trans-unit id="cba05a1f1e542bc35030ada7de3e6bf8ced79b98" translate="yes" xml:space="preserve">
          <source>If you feel strongly about disabling it, set this variable to &lt;code&gt;false&lt;/code&gt; . Note that you will then need &lt;code&gt;IO::String&lt;/code&gt; installed to support writing stringified archives.</source>
          <target state="translated">Si est&amp;aacute; convencido de deshabilitarlo, establezca esta variable en &lt;code&gt;false&lt;/code&gt; . Tenga en cuenta que entonces necesitar&amp;aacute; &lt;code&gt;IO::String&lt;/code&gt; instalado para admitir la escritura de archivos en cadena.</target>
        </trans-unit>
        <trans-unit id="0eb03812b9a06455d8a297e6d6e18c05b28becbc" translate="yes" xml:space="preserve">
          <source>If you feel strongly about disabling it, set this variable to &lt;code&gt;false&lt;/code&gt; . Note that you will then need &lt;code&gt;perlio&lt;/code&gt; support from your perl to be able to write stringified archives.</source>
          <target state="translated">Si est&amp;aacute; convencido de deshabilitarlo, establezca esta variable en &lt;code&gt;false&lt;/code&gt; . Tenga en cuenta que entonces necesitar&amp;aacute; el soporte de &lt;code&gt;perlio&lt;/code&gt; de su perl para poder escribir archivos en cadena.</target>
        </trans-unit>
        <trans-unit id="3a8a7ec77511b20c4509af066f4a3c986692847a" translate="yes" xml:space="preserve">
          <source>If you feel strongly about disabling it, set this variable to &lt;code&gt;false&lt;/code&gt;. Note that you will then need &lt;code&gt;IO::String&lt;/code&gt; installed to support writing stringified archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfe08a0cfcd839078102e8b91b9b69bb63aa64b" translate="yes" xml:space="preserve">
          <source>If you feel strongly about disabling it, set this variable to &lt;code&gt;false&lt;/code&gt;. Note that you will then need &lt;code&gt;perlio&lt;/code&gt; support from your perl to be able to write stringified archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b50f7e3c982f4c5e423c530952e3d4ee9e5c5f1" translate="yes" xml:space="preserve">
          <source>If you feel the urge to write Perl modules, &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt; will give you good advice.</source>
          <target state="translated">Si siente la necesidad de escribir m&amp;oacute;dulos Perl, &lt;a href=&quot;perlnewmod&quot;&gt;perlnewmod&lt;/a&gt; le dar&amp;aacute; un buen consejo.</target>
        </trans-unit>
        <trans-unit id="5e8118a36fba749a624194d24477115572a55b8e" translate="yes" xml:space="preserve">
          <source>If you feel you need to use one of these functions, first send email to &lt;a href=&quot;mailto:perl5-porters@perl.org&quot;&gt;perl5-porters@perl.org&lt;/a&gt;. It may be that there is a good reason for the function not being documented, and it should be removed from this list; or it may just be that no one has gotten around to documenting it. In the latter case, you will be asked to submit a patch to document the function. Once your patch is accepted, it will indicate that the interface is stable (unless it is explicitly marked otherwise) and usable by you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab4e553b43f57ec6c364e3642fd9276b76ed300" translate="yes" xml:space="preserve">
          <source>If you fill comfortable with</source>
          <target state="translated">Si te sientes cómodo con</target>
        </trans-unit>
        <trans-unit id="d37bfff208b4893c857f8a0e5567752243d86aa9" translate="yes" xml:space="preserve">
          <source>If you find any bugs, &lt;code&gt;Devel::PPPort&lt;/code&gt; doesn't seem to build on your system, or any of its tests fail, please file an issue here: &lt;a href=&quot;https://github.com/mhx/Devel-PPPort/issues/&quot;&gt;https://github.com/mhx/Devel-PPPort/issues/&lt;/a&gt;</source>
          <target state="translated">Si encuentra alg&amp;uacute;n error, &lt;code&gt;Devel::PPPort&lt;/code&gt; no parece basarse en su sistema, o alguna de sus pruebas falla, presente un problema aqu&amp;iacute;: &lt;a href=&quot;https://github.com/mhx/Devel-PPPort/issues/&quot;&gt;https://github.com/mhx/Devel-PPPort/issues/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55c31040a6a87b03d0eac44bd1c63f05031e2f01" translate="yes" xml:space="preserve">
          <source>If you find any bugs, &lt;code&gt;Devel::PPPort&lt;/code&gt; doesn't seem to build on your system, or any of its tests fail, please send a bug report to &lt;a href=&quot;https://github.com/Dual-Life/Devel-PPPort/issues/new&quot;&gt;https://github.com/Dual-Life/Devel-PPPort/issues/new&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f336ce8c57722e9cc0dd1c79931ced850c7378d" translate="yes" xml:space="preserve">
          <source>If you find any other limitations or bugs then let me know.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6e534aca61d370cf38f89adc29a8e3c3accf6a" translate="yes" xml:space="preserve">
          <source>If you find bugs in perl, you can report them to &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ef4696f943b05c3aef9d5f207bfe62cada2927" translate="yes" xml:space="preserve">
          <source>If you find bugs in perl, you can run &lt;code&gt;perlbug&lt;/code&gt; to create a bug report (you may have to send it manually if &lt;code&gt;perlbug&lt;/code&gt; cannot find a mailer on your system).</source>
          <target state="translated">Si encuentra errores en perl, puede ejecutar &lt;code&gt;perlbug&lt;/code&gt; para crear un informe de errores (puede que tenga que enviarlo manualmente si &lt;code&gt;perlbug&lt;/code&gt; no puede encontrar un correo en su sistema).</target>
        </trans-unit>
        <trans-unit id="549be5a33ff1eaf5b330339ea140d5f50a8a508b" translate="yes" xml:space="preserve">
          <source>If you find bugs or if it does not work at all on your device, send mail to the address below. Please report the details of your device (processor, ceversion, devicetype (hpc/palm/pocket)) and the date of the downloaded files.</source>
          <target state="translated">Si encuentra errores o si no funciona en absoluto en su dispositivo,envíe un correo a la dirección que figura a continuación.Por favor,informe los detalles de su dispositivo (procesador,ceversión,tipo de dispositivo (hpc/palm/pocket))y la fecha de los archivos descargados.</target>
        </trans-unit>
        <trans-unit id="ce181ab3a1836691a411c40b59cfd6c2a33af266" translate="yes" xml:space="preserve">
          <source>If you find instances of this in the Perl distribution itself, please let us know, so we can try to work around them.</source>
          <target state="translated">Si encuentra ejemplos de esto en la propia distribución de Perl,por favor háganoslo saber,para que podamos tratar de trabajar en torno a ellos.</target>
        </trans-unit>
        <trans-unit id="a35b038d2558b01a66b6ce215ee08874b540cf15" translate="yes" xml:space="preserve">
          <source>If you find that you do need to update the system Perl, one issue worth keeping in mind is the question of static vs. dynamic libraries. If you upgrade using the default static libperl, you will find that the dynamic libperl supplied by Apple will not be deleted. If both libraries are present when an application that links against libperl is built, ld will link against the dynamic library by default. So, if you need to replace Apple's dynamic libperl with a static libperl, you need to be sure to delete the older dynamic library after you've installed the update.</source>
          <target state="translated">Si usted encuentra que necesita actualizar el sistema Perl,una cuestión que vale la pena tener en cuenta es la cuestión de las bibliotecas estáticas frente a las dinámicas.Si actualizas usando la libperl estática predeterminada,verás que la libperl dinámica suministrada por Apple no será eliminada.Si ambas bibliotecas están presentes cuando se construye una aplicación que enlaza contra libperl,ld enlazará contra la biblioteca dinámica por defecto.Por lo tanto,si necesitas reemplazar la libperl dinámica de Apple por una libperl estática,debes asegurarte de eliminar la biblioteca dinámica más antigua después de instalar la actualización.</target>
        </trans-unit>
        <trans-unit id="8facfef28f917f827b51a8dc9cc5203934df7f46" translate="yes" xml:space="preserve">
          <source>If you find that you need to speed up a specific part of a Perl application (not something you often need) you may want to use C, but you can access this from your Perl code with &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;.</source>
          <target state="translated">Si encuentra que necesita acelerar una parte espec&amp;iacute;fica de una aplicaci&amp;oacute;n Perl (no es algo que necesite a menudo), es posible que desee usar C, pero puede acceder a esto desde su c&amp;oacute;digo Perl con &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d6f2d3762fd66cb49c45a26180601ab0ecbaf26" translate="yes" xml:space="preserve">
          <source>If you find the Calc module to slow, try to install any of the replacement modules and see if they help you.</source>
          <target state="translated">Si encuentras que el módulo Calc va más lento,intenta instalar cualquiera de los módulos de reemplazo y mira si te ayudan.</target>
        </trans-unit>
        <trans-unit id="9507dd44f0fdbd974fde8543eaceef56a9bf59da" translate="yes" xml:space="preserve">
          <source>If you find the implementation document unclear or not sufficient, look at the existing PerlIO layer implementations, which include:</source>
          <target state="translated">Si el documento de implementación no está claro o no es suficiente,mire las implementaciones de la capa de PerlIO existentes,que incluyen:</target>
        </trans-unit>
        <trans-unit id="bb1a29c843961bd016421afc69613b486ab41b5a" translate="yes" xml:space="preserve">
          <source>If you find this module useful, please consider rating it on the CPAN Ratings service at &lt;a href=&quot;http://cpanratings.perl.org/rate?distribution=autodie&quot;&gt;http://cpanratings.perl.org/rate?distribution=autodie&lt;/a&gt; .</source>
          <target state="translated">Si este m&amp;oacute;dulo le resulta &amp;uacute;til, considere calificarlo en el servicio de calificaciones de CPAN en &lt;a href=&quot;http://cpanratings.perl.org/rate?distribution=autodie&quot;&gt;http://cpanratings.perl.org/rate?distribution=autodie&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d0991b7062cd068d03525a35a6b09de37c1af1a" translate="yes" xml:space="preserve">
          <source>If you find this module useful, please consider rating it on the CPAN Ratings service at &lt;a href=&quot;https://cpanratings.perl.org/rate?distribution=autodie&quot;&gt;http://cpanratings.perl.org/rate?distribution=autodie&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8307a7110288b02faca83e75adb216a84beaca75" translate="yes" xml:space="preserve">
          <source>If you find you need to provide custom functionality (as you would have using &lt;a href=&quot;Test::Harness::Straps&quot;&gt;Test::Harness::Straps&lt;/a&gt;), you're in luck: &lt;code&gt;TAP::Parser&lt;/code&gt; and friends are designed to be easily plugged-into and/or subclassed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afed98244534d5e7bd9f07d6f953a138ea4f8e9" translate="yes" xml:space="preserve">
          <source>If you find you need to provide custom functionality (as you would have using &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::Straps&quot;&gt;Test::Harness::Straps&lt;/a&gt;), you're in luck: &lt;code&gt;TAP::Parser&lt;/code&gt; and friends are designed to be easily plugged-into and/or subclassed.</source>
          <target state="translated">Si encuentra que necesita proporcionar una funcionalidad personalizada (como lo har&amp;iacute;a con &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::Straps&quot;&gt;Test :: Harness :: Straps&lt;/a&gt; ), est&amp;aacute; de suerte: &lt;code&gt;TAP::Parser&lt;/code&gt; y sus amigos est&amp;aacute;n dise&amp;ntilde;ados para ser f&amp;aacute;cilmente conectados y / o subclasificados.</target>
        </trans-unit>
        <trans-unit id="e0f3870d3b01febf6f7490ea91b0d476cdafaf0c" translate="yes" xml:space="preserve">
          <source>If you find you really need to use your own iterator factory you can still do so without sub-classing &lt;code&gt;TAP::Parser&lt;/code&gt; by setting &lt;a href=&quot;#iterator_factory_class&quot;&gt;&quot;iterator_factory_class&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eaae25128643ba9a8e9cd9fd035b84dc1c8a6c4" translate="yes" xml:space="preserve">
          <source>If you find you really need to use your own iterator factory you can still do so without sub-classing &lt;code&gt;TAP::Parser&lt;/code&gt; by setting &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt;.</source>
          <target state="translated">Si encuentra que realmente necesita usar su propia f&amp;aacute;brica de iteradores, a&amp;uacute;n puede hacerlo sin subclasificar &lt;code&gt;TAP::Parser&lt;/code&gt; configurando &lt;a href=&quot;#iterator_factory_class&quot;&gt;iterator_factory_class&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef253d4b5355af7bdf0e5249c9becef0fb63f08e" translate="yes" xml:space="preserve">
          <source>If you for some reason (such as binary backward compatibility) really need to use perl's malloc, you can rebuild perl from the sources and Configure the build with</source>
          <target state="translated">Si por alguna razón (como la compatibilidad binaria inversa)realmente necesitas usar el malloc de perl,puedes reconstruir perl desde las fuentes y configurar la construcción con</target>
        </trans-unit>
        <trans-unit id="a38ea3094c2349d48a8464c8b2ede590e7cc8393" translate="yes" xml:space="preserve">
          <source>If you forget &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; , high bytes will be misunderstood as separate characters, and nothing will work right.</source>
          <target state="translated">Si olvida &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; , los bytes altos se malinterpretar&amp;aacute;n como caracteres separados y nada funcionar&amp;aacute; correctamente.</target>
        </trans-unit>
        <trans-unit id="1c95ef6991d8327e95ef74bf4e7dd1e20f49af62" translate="yes" xml:space="preserve">
          <source>If you forget &lt;code&gt;use utf8&lt;/code&gt;, high bytes will be misunderstood as separate characters, and nothing will work right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c73cb5a6222b98080e0788ac4c8f896039ff111" translate="yes" xml:space="preserve">
          <source>If you forget to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , you'll miss out entirely on the helpful diagnostic message:</source>
          <target state="translated">Si olvida &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; , se perder&amp;aacute; por completo el &amp;uacute;til mensaje de diagn&amp;oacute;stico:</target>
        </trans-unit>
        <trans-unit id="f4036448bea62235f8e0ea98c0684157616bfe9e" translate="yes" xml:space="preserve">
          <source>If you forget to &lt;code&gt;use warnings&lt;/code&gt;, you'll miss out entirely on the helpful diagnostic message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4db242421a858aa14b9bcaa4e5f3862b8a23c5" translate="yes" xml:space="preserve">
          <source>If you get a core dump (or equivalent), you may use a debugger (&lt;b&gt;dbx&lt;/b&gt;, &lt;b&gt;gdb&lt;/b&gt;, etc) to produce a stack trace to include in the bug report.</source>
          <target state="translated">Si obtiene un volcado del n&amp;uacute;cleo (o equivalente), puede usar un depurador ( &lt;b&gt;dbx&lt;/b&gt; , &lt;b&gt;gdb&lt;/b&gt; , etc.) para producir un seguimiento de la pila para incluirlo en el informe de error.</target>
        </trans-unit>
        <trans-unit id="722060cb13bfb62427a93bad15761822b6a7686d" translate="yes" xml:space="preserve">
          <source>If you get a message like &quot;perl: command not found&quot;, perl is not in your PATH, which might also mean that the location of perl is not where you expect it so you need to adjust your shebang line.</source>
          <target state="translated">Si recibes un mensaje como &quot;perl:comando no encontrado&quot;,perl no está en tu PATH,lo que también puede significar que la ubicación de perl no está donde esperas,por lo que necesitas ajustar tu línea de shebang.</target>
        </trans-unit>
        <trans-unit id="6bc5836fc16b720e6dc1a4fbf9bbeb14813f0dae" translate="yes" xml:space="preserve">
          <source>If you get an error like</source>
          <target state="translated">Si recibes un error como</target>
        </trans-unit>
        <trans-unit id="e71cc5ed2d43a688912302c22a7a0e3e08b5d7b1" translate="yes" xml:space="preserve">
          <source>If you get an error message</source>
          <target state="translated">Si recibes un mensaje de error</target>
        </trans-unit>
        <trans-unit id="8b6135f8eeab8f4ac6ffe0b88df52abad52ae3b4" translate="yes" xml:space="preserve">
          <source>If you get complaints about so_locations then search in the file hints/irix_6.sh for &quot;lddflags&quot; and do the suggested adjustments. (David Billinghurst &amp;lt;David.Billinghurst@riotinto.com.au&amp;gt;)</source>
          <target state="translated">Si recibe quejas acerca de so_locations, busque &quot;lddflags&quot; en el archivo hints / irix_6.sh y realice los ajustes sugeridos. (David Billinghurst &amp;lt;David.Billinghurst@riotinto.com.au&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="0d74278837310505aa97f12b787c58f0bb90e74c" translate="yes" xml:space="preserve">
          <source>If you get lots of errors of the form</source>
          <target state="translated">Si se producen muchos errores en el formulario</target>
        </trans-unit>
        <trans-unit id="0e2cd49639ef6344568879d541e1a269a34ede3d" translate="yes" xml:space="preserve">
          <source>If you get the error</source>
          <target state="translated">Si recibes el error</target>
        </trans-unit>
        <trans-unit id="39b025fcc6f0d1c529cf233b24ac57e017d8f611" translate="yes" xml:space="preserve">
          <source>If you get this message on SunOS or Solaris, and you're using gcc, it's probably the GNU as or GNU ld problem in the previous item &lt;a href=&quot;#GNU-as-and-GNU-ld&quot;&gt;&quot;GNU as and GNU ld&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91993b40c91822c3454671d4c8a24b32c3e646ba" translate="yes" xml:space="preserve">
          <source>If you get this message on SunOS or Solaris, and you're using gcc, it's probably the GNU as or GNU ld problem in the previous item &lt;a href=&quot;#GNU-as-and-GNU-ld&quot;&gt;GNU as and GNU ld&lt;/a&gt;.</source>
          <target state="translated">Si recibe este mensaje en SunOS o Solaris, y est&amp;aacute; usando gcc, probablemente sea el problema GNU as o GNU ld en el elemento anterior &lt;a href=&quot;#GNU-as-and-GNU-ld&quot;&gt;GNU as y GNU ld&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36f4dbd793640e550ca076d30024d627de795ab8" translate="yes" xml:space="preserve">
          <source>If you get tired of being subject to your platform's native integers, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bigint&lt;/code&gt; pragma neatly sidesteps the issue altogether:</source>
          <target state="translated">Si te cansas de estar sujeto a los enteros nativos de tu plataforma, el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bigint&lt;/code&gt; pragma evita el problema por completo:</target>
        </trans-unit>
        <trans-unit id="69ba4fd6db8745c64a8a60725ff36af2b0505794" translate="yes" xml:space="preserve">
          <source>If you get tired of being subject to your platform's native integers, the &lt;code&gt;use bigint&lt;/code&gt; pragma neatly sidesteps the issue altogether:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28e8a38182dc716f4c7bb3a2e2a63a098694e97" translate="yes" xml:space="preserve">
          <source>If you get tired of constantly saying &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; $lh-&amp;gt;maketext&lt;/code&gt; , consider making a functional wrapper for it, like so:</source>
          <target state="translated">Si te cansas de decir constantemente &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; $lh-&amp;gt;maketext&lt;/code&gt; , considera hacer una envoltura funcional para &amp;eacute;l, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f2e5f31a627306a3c5068e17e18a085ffc1169d9" translate="yes" xml:space="preserve">
          <source>If you get tired of constantly saying &lt;code&gt;print $lh-&amp;gt;maketext&lt;/code&gt;, consider making a functional wrapper for it, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572c0959177d510f33c38a6508a8f796163c8877" translate="yes" xml:space="preserve">
          <source>If you get tired of remembering which element of the return list contains which return value, by-name interfaces are provided in standard modules: &lt;a href=&quot;File::stat&quot;&gt;&lt;code&gt;File::stat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;Net::hostent&quot;&gt;&lt;code&gt;Net::hostent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;Net::netent&quot;&gt;&lt;code&gt;Net::netent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;Net::protoent&quot;&gt;&lt;code&gt;Net::protoent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;Net::servent&quot;&gt;&lt;code&gt;Net::servent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;Time::gmtime&quot;&gt;&lt;code&gt;Time::gmtime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;Time::localtime&quot;&gt;&lt;code&gt;Time::localtime&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;User::grent&quot;&gt;&lt;code&gt;User::grent&lt;/code&gt;&lt;/a&gt;. These override the normal built-ins, supplying versions that return objects with the appropriate names for each field. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693c393f75e992e3003bea94747936126a6b0327" translate="yes" xml:space="preserve">
          <source>If you get tired of remembering which element of the return list contains which return value, by-name interfaces are provided in standard modules: &lt;code&gt;File::stat&lt;/code&gt; , &lt;code&gt;Net::hostent&lt;/code&gt; , &lt;code&gt;Net::netent&lt;/code&gt; , &lt;code&gt;Net::protoent&lt;/code&gt; , &lt;code&gt;Net::servent&lt;/code&gt; , &lt;code&gt;Time::gmtime&lt;/code&gt; , &lt;code&gt;Time::localtime&lt;/code&gt; , and &lt;code&gt;User::grent&lt;/code&gt; . These override the normal built-ins, supplying versions that return objects with the appropriate names for each field. For example:</source>
          <target state="translated">Si se cansa de recordar qu&amp;eacute; elemento de la lista de retorno contiene qu&amp;eacute; valor de retorno, las interfaces por nombre se proporcionan en m&amp;oacute;dulos est&amp;aacute;ndar: &lt;code&gt;File::stat&lt;/code&gt; , &lt;code&gt;Net::hostent&lt;/code&gt; , &lt;code&gt;Net::netent&lt;/code&gt; , &lt;code&gt;Net::protoent&lt;/code&gt; , &lt;code&gt;Net::servent&lt;/code&gt; , &lt;code&gt;Time::gmtime&lt;/code&gt; , &lt;code&gt;Time::localtime&lt;/code&gt; y &lt;code&gt;User::grent&lt;/code&gt; . Estos anulan las incorporaciones normales, proporcionando versiones que devuelven objetos con los nombres apropiados para cada campo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b8e0fc194ad5e5c2cd16a3f242684fe425f3428b" translate="yes" xml:space="preserve">
          <source>If you get used to writing odd things like these:</source>
          <target state="translated">Si te acostumbras a escribir cosas raras como estas:</target>
        </trans-unit>
        <trans-unit id="0cd15dd92a142244892a9be7434b98670ff15dc6" translate="yes" xml:space="preserve">
          <source>If you had &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; %Foo::Bar::QUUX&lt;/code&gt; to check whether such a package variable exists then that's never really been reliable, and isn't a good way to enquire about the features of a package, or whether it's loaded, etc.</source>
          <target state="translated">Si ha &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt; %Foo::Bar::QUUX&lt;/code&gt; para comprobar si existe una variable de paquete de este tipo, entonces nunca ha sido realmente fiable y no es una buena forma de preguntar sobre las caracter&amp;iacute;sticas de un paquete, si est&amp;aacute; cargado, etc.</target>
        </trans-unit>
        <trans-unit id="3a8d785689c76bcc85c3a87585c7936ee4bbbc6c" translate="yes" xml:space="preserve">
          <source>If you had &lt;code&gt;defined %Foo::Bar::QUUX&lt;/code&gt; to check whether such a package variable exists then that's never really been reliable, and isn't a good way to enquire about the features of a package, or whether it's loaded, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef8417488b5df9f33f3d1b38e3847657756981c" translate="yes" xml:space="preserve">
          <source>If you had to get a variable through, you could do this:</source>
          <target state="translated">Si tuvieras que hacer pasar una variable,podrías hacer esto:</target>
        </trans-unit>
        <trans-unit id="67b4946ef744afdd9a1b21f685b5b8e140afa4b4" translate="yes" xml:space="preserve">
          <source>If you have</source>
          <target state="translated">Si tienes</target>
        </trans-unit>
        <trans-unit id="5887bd3238a6e02f0034680e74b35124b3f3183f" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;File::Stream&quot;&gt;File::Stream&lt;/a&gt;, this is easy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebe0c8d3505d2fdad4a2b644054c80705f47533" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;Term::ReadKey&quot;&gt;Term::ReadKey&lt;/a&gt; module installed from CPAN, you can use it to fetch the width and height in characters and in pixels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebbe151437cc5de6b126287c5035e996e85c741" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;http://search.cpan.org/perldoc/File::Stream&quot;&gt;File::Stream&lt;/a&gt;, this is easy.</source>
          <target state="translated">Si tiene &lt;a href=&quot;http://search.cpan.org/perldoc/File::Stream&quot;&gt;File :: Stream&lt;/a&gt; , esto es f&amp;aacute;cil.</target>
        </trans-unit>
        <trans-unit id="8477c0614e083a37a8e560c57638a0b5f36ef52b" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ReadKey&quot;&gt;Term::ReadKey&lt;/a&gt; module installed from CPAN, you can use it to fetch the width and height in characters and in pixels:</source>
          <target state="translated">Si tiene el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ReadKey&quot;&gt;Term :: ReadKey&lt;/a&gt; instalado desde CPAN, puede usarlo para obtener el ancho y el alto en caracteres y p&amp;iacute;xeles:</target>
        </trans-unit>
        <trans-unit id="7230ece2e031d91cec5a13b629b5ff58c45c8753" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;IPC::Run&lt;/code&gt; installed, and the variable &lt;code&gt;$IPC::Cmd::USE_IPC_RUN&lt;/code&gt; is set to true (See the &lt;a href=&quot;#Global-Variables&quot;&gt;&quot;Global Variables&quot;&lt;/a&gt; section) use that to execute the command. You will have the full output available in buffers, interactive commands are sure to work and you are guaranteed to have your verbosity settings honored cleanly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240e14e2dd47b4fb473147b6d297b2d7726b59cc" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;IPC::Run&lt;/code&gt; installed, and the variable &lt;code&gt;$IPC::Cmd::USE_IPC_RUN&lt;/code&gt; is set to true (See the &lt;a href=&quot;#Global-Variables&quot;&gt;Global Variables&lt;/a&gt; section) use that to execute the command. You will have the full output available in buffers, interactive commands are sure to work and you are guaranteed to have your verbosity settings honored cleanly.</source>
          <target state="translated">Si tiene &lt;code&gt;IPC::Run&lt;/code&gt; instalado y la variable &lt;code&gt;$IPC::Cmd::USE_IPC_RUN&lt;/code&gt; est&amp;aacute; configurada como verdadera (consulte la secci&amp;oacute;n &lt;a href=&quot;#Global-Variables&quot;&gt;Variables globales&lt;/a&gt; ), &amp;uacute;sela para ejecutar el comando. Tendr&amp;aacute; la salida completa disponible en b&amp;uacute;feres, los comandos interactivos seguramente funcionar&amp;aacute;n y se le garantiza que su configuraci&amp;oacute;n de verbosidad se respetar&amp;aacute; limpiamente.</target>
        </trans-unit>
        <trans-unit id="b8acd2601ad065393113859c8a7e3855297ce5ac" translate="yes" xml:space="preserve">
          <source>If you have &lt;code&gt;man&lt;/code&gt; installed on your system, and you installed perl manpages, use something like this:</source>
          <target state="translated">Si tiene &lt;code&gt;man&lt;/code&gt; instalado en su sistema e instal&amp;oacute; p&amp;aacute;ginas de manual de perl, use algo como esto:</target>
        </trans-unit>
        <trans-unit id="d6036be6bd4d2a23f70dfe8c9f989a5911198ccc" translate="yes" xml:space="preserve">
          <source>If you have Perl 5.10 or later, and you just want to store a value against the reference for lookup later, you can use the core Hash::Util::Fieldhash module. This will also handle renaming the keys if you use multiple threads (which causes all variables to be reallocated at new addresses, changing their stringification), and garbage-collecting the entries when the referenced variable goes out of scope.</source>
          <target state="translated">Si tienes Perl 5.10 o superior,y sólo quieres almacenar un valor contra la referencia para buscarlo más tarde,puedes usar el módulo central Hash::Util::Fieldhash.Este también se encargará de renombrar las claves si utiliza múltiples hilos (lo que hace que todas las variables se reasignen en nuevas direcciones,cambiando su stringificación),y de recoger las entradas cuando la variable referenciada se salga de su ámbito de aplicación.</target>
        </trans-unit>
        <trans-unit id="1ff5e330b4023d9ffe19df36972bfcc73814fd9b" translate="yes" xml:space="preserve">
          <source>If you have Perl 5.10 or later, this is almost trivial. You just smart match against an array of regular expression objects:</source>
          <target state="translated">Si tienes Perl 5.10 o más tarde,esto es casi trivial.Sólo tienes que compararlo con una serie de objetos de expresión regular:</target>
        </trans-unit>
        <trans-unit id="f112acda35554c21f927d9597b0b2023538c4e09" translate="yes" xml:space="preserve">
          <source>If you have Perl v5.16 or v5.18 and can't upgrade, you can use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe696e9056ea562cb89c9b2f102390c60db24f0" translate="yes" xml:space="preserve">
          <source>If you have Perl v5.16, the problems mentioned above go away if you use the &lt;code&gt;:not_characters&lt;/code&gt; parameter to the locale pragma (except for vendor bugs in the non-character portions). If you don't have v5.16, and you</source>
          <target state="translated">Si tiene Perl v5.16, los problemas mencionados anteriormente desaparecen si usa el par&amp;aacute;metro &lt;code&gt;:not_characters&lt;/code&gt; en el pragma de la configuraci&amp;oacute;n regional (excepto por los errores del proveedor en las partes sin caracteres). Si no tiene v5.16, y</target>
        </trans-unit>
        <trans-unit id="6642f62c4bfdebf5e62452d5d72c26f1bd89b8ec" translate="yes" xml:space="preserve">
          <source>If you have YAML.pm (or some other YAML module configured in &lt;code&gt;yaml_module&lt;/code&gt; ) installed, CPAN.pm collects a few statistical data about recent downloads. You can view the statistics with the &lt;code&gt;hosts&lt;/code&gt; command or inspect them directly by looking into the &lt;code&gt;FTPstats.yml&lt;/code&gt; file in your &lt;code&gt;cpan_home&lt;/code&gt; directory.</source>
          <target state="translated">Si tiene YAML.pm (o alg&amp;uacute;n otro m&amp;oacute;dulo YAML configurado en &lt;code&gt;yaml_module&lt;/code&gt; ) instalado, CPAN.pm recopila algunos datos estad&amp;iacute;sticos sobre descargas recientes. Puede ver las estad&amp;iacute;sticas con el comando &lt;code&gt;hosts&lt;/code&gt; o inspeccionarlas directamente buscando en el archivo &lt;code&gt;FTPstats.yml&lt;/code&gt; en su directorio &lt;code&gt;cpan_home&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="225c354ad980b0b7bb691380c5b2f0d3c2643a5a" translate="yes" xml:space="preserve">
          <source>If you have a ReadLine module installed, you can hit TAB at any point of the commandline and &lt;code&gt;o conf&lt;/code&gt; will offer you completion for the built-in subcommands and/or config variable names.</source>
          <target state="translated">Si tiene un m&amp;oacute;dulo ReadLine instalado, puede presionar TAB en cualquier punto de la l&amp;iacute;nea de comandos y &lt;code&gt;o conf&lt;/code&gt; le ofrecer&amp;aacute; la finalizaci&amp;oacute;n de los subcomandos integrados y / o nombres de variables de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="86d2e902132f610059a158729cf105aa2e1d4e91" translate="yes" xml:space="preserve">
          <source>If you have a buffer allocated with Newx() and want to set that as the SV's value, you can use sv_usepvn_flags(). That has some requirements if you want to avoid perl re-allocating the buffer to fit the trailing NUL:</source>
          <target state="translated">Si tiene un búfer asignado con Newx()y quiere establecerlo como valor del SV,puede usar sv_usepvn_flags().Eso tiene algunos requisitos si quieres evitar que Perl reasigne el buffer para que se ajuste al NUL posterior:</target>
        </trans-unit>
        <trans-unit id="28b93e0d6dcdb9743374e046e2c50f7ec24b530d" translate="yes" xml:space="preserve">
          <source>If you have a burning desire to tell the world about your release, post an announcement to the moderated &lt;code&gt;comp.lang.perl.announce&lt;/code&gt; newsgroup.</source>
          <target state="translated">Si tiene un deseo ardiente de contarle al mundo sobre su lanzamiento, publique un anuncio en el grupo de noticias moderado &lt;code&gt;comp.lang.perl.announce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ed22a427a030ed732816620f86f5c52ec466566" translate="yes" xml:space="preserve">
          <source>If you have a command-line program that does the job, you can call it in backticks to capture whatever it outputs so you can use it later:</source>
          <target state="translated">Si tienes un programa de línea de comandos que hace el trabajo,puedes llamarlo en backticks para capturar lo que sea que produzca y así poder usarlo más tarde:</target>
        </trans-unit>
        <trans-unit id="aabc7446c5d3e0c2ebc9233bf601a7899d673f9d" translate="yes" xml:space="preserve">
          <source>If you have a commit bit, please see &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; for more details on using git.</source>
          <target state="translated">Si tiene un bit de confirmaci&amp;oacute;n, consulte &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre el uso de git.</target>
        </trans-unit>
        <trans-unit id="392daf22cd236f28ba9ceee336856176b759059d" translate="yes" xml:space="preserve">
          <source>If you have a complicated function needed to pull out the part you want to sort on, then don't do it inside the sort function. Pull it out first, because the sort BLOCK can be called many times for the same element. Here's an example of how to pull out the first word after the first number on each item, and then sort those words case-insensitively.</source>
          <target state="translated">Si tienes una función complicada necesaria para sacar la parte que quieres clasificar,entonces no lo hagas dentro de la función de clasificación.Sácala primero,porque el ordenamiento BLOQUE puede ser llamado muchas veces para el mismo elemento.Aquí hay un ejemplo de cómo sacar la primera palabra después del primer número de cada elemento,y luego clasificar esas palabras sin tener en cuenta las mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="b0e6b3bda8c96c33f56e6b729af6c8286cbfdc17" translate="yes" xml:space="preserve">
          <source>If you have a legacy encoding, you can use the &lt;code&gt;:encoding(...)&lt;/code&gt; tag.</source>
          <target state="translated">Si tiene una codificaci&amp;oacute;n heredada, puede usar la etiqueta &lt;code&gt;:encoding(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01656c2b4f7ea5f69bae8d5caaac9ea48410bb3e" translate="yes" xml:space="preserve">
          <source>If you have a library that provides an API, you can make any component of it available as just another Perl function or variable using a Perl extension written in C or C++ and dynamically linked into your main perl interpreter. You can also go the other direction, and write your main program in C or C++, and then link in some Perl code on the fly, to create a powerful application. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Si tiene una biblioteca que proporciona una API, puede hacer que cualquier componente est&amp;eacute; disponible como otra funci&amp;oacute;n o variable de Perl usando una extensi&amp;oacute;n de Perl escrita en C o C ++ y vinculada din&amp;aacute;micamente a su int&amp;eacute;rprete de Perl principal. Tambi&amp;eacute;n puede ir en la otra direcci&amp;oacute;n y escribir su programa principal en C o C ++, y luego vincular algo de c&amp;oacute;digo Perl sobre la marcha, para crear una aplicaci&amp;oacute;n poderosa. Ver &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51f9e3f6122598346b767c490154d73f3d45b4f6" translate="yes" xml:space="preserve">
          <source>If you have a list of tests (or URLs, or anything else you want to test) in a file, you can add them to your tests by using a '-':</source>
          <target state="translated">Si tiene una lista de pruebas (o URLs,o cualquier otra cosa que quiera probar)en un archivo,puede añadirlas a sus pruebas usando un '-':</target>
        </trans-unit>
        <trans-unit id="a1add680b7e930dc8542127166a2c6922328bade" translate="yes" xml:space="preserve">
          <source>If you have a local mirror of CPAN and can access all files with &quot;file:&quot; URLs, then you only need a perl later than perl5.003 to run this module. Otherwise Net::FTP is strongly recommended. LWP may be required for non-UNIX systems, or if your nearest CPAN site is associated with a URL that is not &lt;code&gt;ftp:&lt;/code&gt; .</source>
          <target state="translated">Si tiene un espejo local de CPAN y puede acceder a todos los archivos con URL &quot;file:&quot;, entonces solo necesita un perl posterior a perl5.003 para ejecutar este m&amp;oacute;dulo. De lo contrario, se recomienda encarecidamente Net :: FTP. LWP puede ser necesaria para los sistemas no UNIX, o si su sitio CPAN m&amp;aacute;s cercana est&amp;aacute; asociado con una direcci&amp;oacute;n URL que no es &lt;code&gt;ftp:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc89a24f0e796df127e886da4fce9233949042a4" translate="yes" xml:space="preserve">
          <source>If you have a module that uses a decimal $VERSION (floating point), and you do not intend to ever change that, this module is not for you. There is nothing that version.pm gains you over a simple $VERSION assignment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d0404e38c1a8f4fe7f4884e84970ffe1a562e8" translate="yes" xml:space="preserve">
          <source>If you have a question you'd like to see added to the FAQ (whether or not you have the answer) please either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6b091f1c2f3916b6f982ec5d76127aba417742" translate="yes" xml:space="preserve">
          <source>If you have a question you'd like to see added to the FAQ (whether or not you have the answer) please send it to makemaker@perl.org.</source>
          <target state="translated">Si tiene una pregunta que le gustaría ver añadida a la FAQ (tenga o no la respuesta)por favor envíela a makemaker@perl.org.</target>
        </trans-unit>
        <trans-unit id="883ef441e28a9d839f80a61f11348168ebf17cd9" translate="yes" xml:space="preserve">
          <source>If you have a raw sequence of bytes that you know should be interpreted via a particular encoding, you can use &lt;code&gt;Encode&lt;/code&gt; :</source>
          <target state="translated">Si tiene una secuencia de bytes sin procesar que sabe que debe interpretarse a trav&amp;eacute;s de una codificaci&amp;oacute;n particular, puede usar &lt;code&gt;Encode&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5b4a02619440b043ea55b1e3e613964a4f9957c4" translate="yes" xml:space="preserve">
          <source>If you have a raw sequence of bytes that you know should be interpreted via a particular encoding, you can use &lt;code&gt;Encode&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4977b6a1b7796edc98abe66364bdbf5af8c6caa8" translate="yes" xml:space="preserve">
          <source>If you have a really hairy regular expression, use the &lt;code&gt;/x&lt;/code&gt; modifier and put in some whitespace to make it look a little less like line noise. Don't use slash as a delimiter when your regexp has slashes or backslashes.</source>
          <target state="translated">Si tiene una expresi&amp;oacute;n regular muy peluda, use el modificador &lt;code&gt;/x&lt;/code&gt; y ponga algunos espacios en blanco para que se vea un poco menos como ruido de l&amp;iacute;nea. No use barra inclinada como delimitador cuando su expresi&amp;oacute;n regular tiene barras inclinadas o barras invertidas.</target>
        </trans-unit>
        <trans-unit id="df35f05fcbbff85a11dabd04bca96051a29d5068" translate="yes" xml:space="preserve">
          <source>If you have a really hairy regular expression, use the &lt;code&gt;/x&lt;/code&gt; or &lt;code&gt;/xx&lt;/code&gt; modifiers and put in some whitespace to make it look a little less like line noise. Don't use slash as a delimiter when your regexp has slashes or backslashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4670adaa2657eda2badbded5180916956105a77" translate="yes" xml:space="preserve">
          <source>If you have a sequence of bytes you &lt;b&gt;know&lt;/b&gt; is valid UTF-8, but Perl doesn't know it yet, you can make Perl a believer, too:</source>
          <target state="translated">Si tiene una secuencia de bytes que &lt;b&gt;sabe que&lt;/b&gt; es UTF-8 v&amp;aacute;lido, pero Perl a&amp;uacute;n no lo sabe, tambi&amp;eacute;n puede hacer que Perl sea un creyente:</target>
        </trans-unit>
        <trans-unit id="9756e7acda84539ead2e5f85f560f283b75aed93" translate="yes" xml:space="preserve">
          <source>If you have a single string that you want to check for &quot;equality in locale&quot; against several others, you might think you could gain a little efficiency by using &lt;code&gt;POSIX::strxfrm()&lt;/code&gt; in conjunction with &lt;code&gt;eq&lt;/code&gt; :</source>
          <target state="translated">Si tiene una sola cadena en la que desea verificar la &quot;igualdad en la configuraci&amp;oacute;n regional&quot; con respecto a varias otras, podr&amp;iacute;a pensar que podr&amp;iacute;a ganar un poco de eficiencia usando &lt;code&gt;POSIX::strxfrm()&lt;/code&gt; junto con &lt;code&gt;eq&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f95d4b51e2c5877925e6bfc513dc2300a8f4721e" translate="yes" xml:space="preserve">
          <source>If you have a single string that you want to check for &quot;equality in locale&quot; against several others, you might think you could gain a little efficiency by using &lt;code&gt;POSIX::strxfrm()&lt;/code&gt; in conjunction with &lt;code&gt;eq&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f645dc4bb8034c3799b831d6996356797ca7be48" translate="yes" xml:space="preserve">
          <source>If you have a small patch to submit, please submit it via perlbug. You can also send email directly to perlbug@perl.org. Please note that messages sent to perlbug may be held in a moderation queue, so you won't receive a response immediately.</source>
          <target state="translated">Si tiene un pequeño parche para enviar,por favor envíelo por medio de un perlbug.También puede enviar un correo electrónico directamente a perlbug@perl.org.Por favor,ten en cuenta que los mensajes enviados a perlbug pueden estar en una cola de moderación,por lo que no recibirás una respuesta inmediatamente.</target>
        </trans-unit>
        <trans-unit id="6b5776918dce21a614ab7d2b6b104a983a49243a" translate="yes" xml:space="preserve">
          <source>If you have a small patch to submit, please submit it via the GitHub Pull Request workflow. You may also send patches to the p5p list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42845d8c8c875f89de9dd2d1b7586e0d3ad16bc8" translate="yes" xml:space="preserve">
          <source>If you have a specific romanization scheme in mind, use the specific module:</source>
          <target state="translated">Si tiene en mente un esquema específico de romanización,use el módulo específico:</target>
        </trans-unit>
        <trans-unit id="fb355db0f3f4b40524a1c3ff445d923be623d546" translate="yes" xml:space="preserve">
          <source>If you have a working &lt;code&gt;DynaLoader&lt;/code&gt; then there is rarely any need to statically link in any other extensions.</source>
          <target state="translated">Si tiene un &lt;code&gt;DynaLoader&lt;/code&gt; en funcionamiento, rara vez es necesario vincular est&amp;aacute;ticamente en otras extensiones.</target>
        </trans-unit>
        <trans-unit id="fd5f81af8a4a7363d6132316fb90657fc9d4e232" translate="yes" xml:space="preserve">
          <source>If you have a zip file that contains multiple members and want to read a specific member from the file, say &lt;code&gt;&quot;data1&quot;&lt;/code&gt; , use the &lt;code&gt;Name&lt;/code&gt; option</source>
          <target state="translated">Si tiene un archivo zip que contiene varios miembros y desea leer un miembro espec&amp;iacute;fico del archivo, diga &lt;code&gt;&quot;data1&quot;&lt;/code&gt; , use la opci&amp;oacute;n &lt;code&gt;Name&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6052cdbbf6fcaf2baac87ba7e1b86897c2e18ac9" translate="yes" xml:space="preserve">
          <source>If you have a zip file that contains multiple members and want to read a specific member from the file, say &lt;code&gt;&quot;data1&quot;&lt;/code&gt;, use the &lt;code&gt;Name&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e60773a7086adcadd9997f1e4e60bf13f42c27" translate="yes" xml:space="preserve">
          <source>If you have an FTP proxy firewall (&lt;b&gt;NOT&lt;/b&gt; an HTTP or SOCKS firewall) then this value should be set to the firewall hostname. If your firewall does not listen to port 21, then this value should be set to &lt;code&gt;&quot;hostname:port&quot;&lt;/code&gt; (eg &lt;code&gt;&quot;hostname:99&quot;&lt;/code&gt; )</source>
          <target state="translated">Si tiene un servidor de seguridad de proxy FTP ( &lt;b&gt;NO&lt;/b&gt; un servidor de seguridad HTTP o SOCKS), este valor debe establecerse en el nombre de host del servidor de seguridad. Si su firewall no escucha el puerto 21, este valor debe establecerse en &lt;code&gt;&quot;hostname:port&quot;&lt;/code&gt; (por ejemplo, &lt;code&gt;&quot;hostname:99&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3ebb071202346598d9545555072b8cd9d0e64671" translate="yes" xml:space="preserve">
          <source>If you have an FTP proxy firewall (&lt;b&gt;NOT&lt;/b&gt; an HTTP or SOCKS firewall) then this value should be set to the firewall hostname. If your firewall does not listen to port 21, then this value should be set to &lt;code&gt;&quot;hostname:port&quot;&lt;/code&gt; (eg &lt;code&gt;&quot;hostname:99&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a37d9c6262b12c7aa2b49bfbcebb4a375757d2e" translate="yes" xml:space="preserve">
          <source>If you have an SV and want to know what kind of data Perl thinks is stored in it, you can use the following macros to check the type of SV you have.</source>
          <target state="translated">Si tienes un SV y quieres saber qué tipo de datos cree Perl que están almacenados en él,puedes usar las siguientes macros para comprobar el tipo de SV que tienes.</target>
        </trans-unit>
        <trans-unit id="2bc4f67186bf30ca57f017f1cea8612b943dd146" translate="yes" xml:space="preserve">
          <source>If you have an array of &lt;code&gt;@string&lt;/code&gt; that should be concatenated and then normalized, you can do like this:</source>
          <target state="translated">Si tiene una matriz de &lt;code&gt;@string&lt;/code&gt; que debe concatenarse y luego normalizarse, puede hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="403ab04dd713d2cfe6f16d5487fb0193f691f18c" translate="yes" xml:space="preserve">
          <source>If you have an empty directory, you can use Perl's built-in &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt;. If the directory is not empty (so, no files or subdirectories), you either have to empty it yourself (a lot of work) or use a module to help you.</source>
          <target state="translated">Si tiene un directorio vac&amp;iacute;o, puede usar el &lt;code&gt;&lt;a href=&quot;functions/rmdir&quot;&gt;rmdir&lt;/a&gt;&lt;/code&gt; incorporado de Perl . Si el directorio no est&amp;aacute; vac&amp;iacute;o (por lo tanto, no hay archivos o subdirectorios), debe vaciarlo usted mismo (mucho trabajo) o usar un m&amp;oacute;dulo para ayudarlo.</target>
        </trans-unit>
        <trans-unit id="e617c76fa41bca088e2fe925791d55bef7f3208c" translate="yes" xml:space="preserve">
          <source>If you have an empty directory, you can use Perl's built-in &lt;code&gt;rmdir&lt;/code&gt;. If the directory is not empty (so, with files or subdirectories), you either have to empty it yourself (a lot of work) or use a module to help you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6898ea8c69aa4a0ff2b81092a3457a58f7bdc010" translate="yes" xml:space="preserve">
          <source>If you have an existing inside-out class, simply making all hashes field hashes with no other change should make no difference. Through the calls to &lt;code&gt;refaddr&lt;/code&gt; or equivalent, the field hashes never get to see a reference and work like normal hashes. Your DESTROY (and CLONE) methods are still needed.</source>
          <target state="translated">Si tiene una clase de adentro hacia afuera existente, simplemente hacer todos los hash de campo hash sin ning&amp;uacute;n otro cambio no deber&amp;iacute;a hacer ninguna diferencia. A trav&amp;eacute;s de las llamadas a &lt;code&gt;refaddr&lt;/code&gt; o equivalente, los hashes de campo nunca llegan a ver una referencia y funcionan como hashes normales. A&amp;uacute;n se necesitan sus m&amp;eacute;todos DESTROY (y CLONE).</target>
        </trans-unit>
        <trans-unit id="03fcf475306c60d974596613b76c03a9f344e66a" translate="yes" xml:space="preserve">
          <source>If you have an older version of Perl, the &lt;code&gt;$^W&lt;/code&gt; variable (documented in &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;) controls runtime warnings for a block:</source>
          <target state="translated">Si tiene una versi&amp;oacute;n anterior de Perl, la variable &lt;code&gt;$^W&lt;/code&gt; (documentada en &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; ) controla las advertencias en tiempo de ejecuci&amp;oacute;n para un bloque:</target>
        </trans-unit>
        <trans-unit id="55ec04844d40449455953b5a185c6050647bf370" translate="yes" xml:space="preserve">
          <source>If you have any other characters you need to escape, please install the &lt;code&gt;URI::Escape&lt;/code&gt; module from CPAN, and pre-encode your URI before passing it to &lt;code&gt;File::Fetch&lt;/code&gt; . You can read about the details of URIs and URI encoding here:</source>
          <target state="translated">Si tiene otros caracteres del que necesita escapar, instale el m&amp;oacute;dulo &lt;code&gt;URI::Escape&lt;/code&gt; de CPAN y precodifique su URI antes de pasarlo a &lt;code&gt;File::Fetch&lt;/code&gt; . Puede leer sobre los detalles de los URI y la codificaci&amp;oacute;n de URI aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="b3a311e2f3de5d8bd7b59c7e63cc0db7c3de9dbd" translate="yes" xml:space="preserve">
          <source>If you have any other characters you need to escape, please install the &lt;code&gt;URI::Escape&lt;/code&gt; module from CPAN, and pre-encode your URI before passing it to &lt;code&gt;File::Fetch&lt;/code&gt;. You can read about the details of URIs and URI encoding here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baafc393e6c194ed8ae0aabf8fee882236c21df9" translate="yes" xml:space="preserve">
          <source>If you have any suggested changes for this page, let me know. Please don't send me mail asking for help on how to install your modules. There are too many modules, and too few Orwants, for me to be able to answer or even acknowledge all your questions. Contact the module author instead, ask someone familiar with Perl on your operating system, or if all else fails, file a ticket at &lt;a href=&quot;https://rt.cpan.org/&quot;&gt;https://rt.cpan.org/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ef038a12de814aa0cdf806e88e5a326fdaf2d5" translate="yes" xml:space="preserve">
          <source>If you have any suggested changes for this page, let me know. Please don't send me mail asking for help on how to install your modules. There are too many modules, and too few Orwants, for me to be able to answer or even acknowledge all your questions. Contact the module author instead, or post to comp.lang.perl.modules, or ask someone familiar with Perl on your operating system.</source>
          <target state="translated">Si tiene alguna sugerencia de cambio para esta página,hágamelo saber.Por favor,no me envíes un correo pidiendo ayuda sobre cómo instalar tus módulos.Hay demasiados módulos,y muy pocos Orwants,para que yo pueda responder o incluso reconocer todas sus preguntas.Contacte con el autor del módulo en su lugar,o escriba a comp.lang.perl.modules,o pregunte a alguien familiarizado con Perl en su sistema operativo.</target>
        </trans-unit>
        <trans-unit id="e2545920681caa56966e901dca47f4688bdb95ac" translate="yes" xml:space="preserve">
          <source>If you have built this module with zlib &amp;gt;= 1.2.0, the &lt;code&gt;$eof&lt;/code&gt; parameter is ignored. You can still set it if you want, but it won't be used behind the scenes.</source>
          <target state="translated">Si ha creado este m&amp;oacute;dulo con zlib&amp;gt; = 1.2.0, se &lt;code&gt;$eof&lt;/code&gt; par&amp;aacute;metro $ eof . A&amp;uacute;n puede configurarlo si lo desea, pero no se usar&amp;aacute; detr&amp;aacute;s de escena.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
