<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="c2df33c30bd450c40b146c186ea09c6cab11e56c" translate="yes" xml:space="preserve">
          <source>TAP::Formatter::Session - Abstract base class for harness output delegate</source>
          <target state="translated">TAP::Formato::Sesión-Clase base de resumen para delegado de salida de arnés</target>
        </trans-unit>
        <trans-unit id="93ebad31adfaf596a987126afe3d7a3f18d93c05" translate="yes" xml:space="preserve">
          <source>TAP::Harness</source>
          <target state="translated">TAP::Harness</target>
        </trans-unit>
        <trans-unit id="b7d5d266f7a8edc064e0b8c710521d51a2bc894a" translate="yes" xml:space="preserve">
          <source>TAP::Harness - Run test scripts with statistics</source>
          <target state="translated">TAP::Arnés-Ejecutar guiones de prueba con estadísticas</target>
        </trans-unit>
        <trans-unit id="a28a3f4d3229f49494c71baca96520e2ecfb6ce6" translate="yes" xml:space="preserve">
          <source>TAP::Harness::Env</source>
          <target state="translated">TAP::Harness::Env</target>
        </trans-unit>
        <trans-unit id="91f28a5a62ef8f799cd7525ba0b5759ca2448d9c" translate="yes" xml:space="preserve">
          <source>TAP::Harness::Env - Parsing harness related environmental variables where appropriate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a70a46bfa38bc1216fe94cb04afcea34c7e8685" translate="yes" xml:space="preserve">
          <source>TAP::Object</source>
          <target state="translated">TAP::Object</target>
        </trans-unit>
        <trans-unit id="f09e3a92ac29a0ecd8a4f02097d67c9251bfb4fd" translate="yes" xml:space="preserve">
          <source>TAP::Object - Base class that provides common functionality to all &lt;code&gt;TAP::*&lt;/code&gt; modules</source>
          <target state="translated">TAP :: Object - Clase base que proporciona una funcionalidad com&amp;uacute;n a todos los m&amp;oacute;dulos &lt;code&gt;TAP::*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73c55e213830c688e72c24e7e2dc38927a8f526e" translate="yes" xml:space="preserve">
          <source>TAP::Parser</source>
          <target state="translated">TAP::Parser</target>
        </trans-unit>
        <trans-unit id="f762f998d40c617b51b08688208676705b948fa6" translate="yes" xml:space="preserve">
          <source>TAP::Parser - Parse &lt;a href=&quot;Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f07ed865105b4fe8e06f2ed0ef74d2249f0ce1b" translate="yes" xml:space="preserve">
          <source>TAP::Parser - Parse &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="translated">TAP :: Parser - Analizar salida &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="947140d84d6dc3586ce66227c8fbf3b5502269bb" translate="yes" xml:space="preserve">
          <source>TAP::Parser also supports callbacks; bailout, comment, plan, test, unknown, version and yaml are called for the corresponding TAP result types, ALL is called for all results, ELSE is called for all results for which a named callback is not installed and EOF is called once at the end of each TAP stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a216f40bfe5d8c4e9f480503b3353a997f25d9e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Aggregator</source>
          <target state="translated">TAP::Parser::Aggregator</target>
        </trans-unit>
        <trans-unit id="29967243373ff3c2847efa03292cf1394ade91bf" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Aggregator - Aggregate TAP::Parser results</source>
          <target state="translated">TAP::Parser::Agregador-Agregado TAP::Resultados del parser</target>
        </trans-unit>
        <trans-unit id="ea252a87adf45624e0915f082cf3a171691e2b87" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Grammar</source>
          <target state="translated">TAP::Parser::Grammar</target>
        </trans-unit>
        <trans-unit id="99d73c9149822b89f098465b0ef15b6e5e432ba4" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Grammar - A grammar for the Test Anything Protocol.</source>
          <target state="translated">TAP::Parser::Gramática-Una gramática para el protocolo Test Anything.</target>
        </trans-unit>
        <trans-unit id="f66dcc18cf605bab72f282216bf437fafae85c73" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator</source>
          <target state="translated">TAP::Parser::Iterator</target>
        </trans-unit>
        <trans-unit id="d222e4542e0f93a9f4cabc8a65b724fcc86515cd" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator - Base class for TAP source iterators</source>
          <target state="translated">TAP::Parser::Iterator-Clase base para los iteradores de la fuente TAP</target>
        </trans-unit>
        <trans-unit id="599e631b6f320b3fc47ee504d90a3e175b821f4e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Array</source>
          <target state="translated">TAP::Parser::Iterator::Array</target>
        </trans-unit>
        <trans-unit id="8849b72265bccd1154b20c5bcfd79b6177e1d979" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Array - Iterator for array-based TAP sources</source>
          <target state="translated">TAP::Parser::Iterator::Array-Iterador para fuentes TAP basadas en arrays</target>
        </trans-unit>
        <trans-unit id="8afb640018f748c7abac8e508f78557fe8689509" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Process</source>
          <target state="translated">TAP::Parser::Iterator::Process</target>
        </trans-unit>
        <trans-unit id="ef61fd1ef2ee2ba4a706833aed0bb08fe84a24ba" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Process - Iterator for process-based TAP sources</source>
          <target state="translated">TAP::Parser::Iterador::Proceso-Iterador para fuentes TAP basadas en procesos</target>
        </trans-unit>
        <trans-unit id="c97751b26f9e6df1ee3c0a7feabeda4e0d9102c3" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Stream</source>
          <target state="translated">TAP::Parser::Iterator::Stream</target>
        </trans-unit>
        <trans-unit id="be38f68275dc99a67c8ac1d8cfd48bb032de4d4a" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Iterator::Stream - Iterator for filehandle-based TAP sources</source>
          <target state="translated">TAP::Parser::Iterator::Stream-Iterador para fuentes TAP basadas en el manejo de archivos</target>
        </trans-unit>
        <trans-unit id="d89bed7b6f6d5d165f751cac2ac0a13e2dd7f697" translate="yes" xml:space="preserve">
          <source>TAP::Parser::IteratorFactory</source>
          <target state="translated">TAP::Parser::IteratorFactory</target>
        </trans-unit>
        <trans-unit id="8d39f8677b4d63ea3260e5507a930c994a438d70" translate="yes" xml:space="preserve">
          <source>TAP::Parser::IteratorFactory - Figures out which SourceHandler objects to use for a given Source</source>
          <target state="translated">TAP::Parser::IteratorFactory-Averigua qué objetos del Manejador de Fuentes se pueden usar para una Fuente dada</target>
        </trans-unit>
        <trans-unit id="6f50fafc730902e3aa24fa13c0c429b89a2cc1ff" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Multiplexer</source>
          <target state="translated">TAP::Parser::Multiplexer</target>
        </trans-unit>
        <trans-unit id="2da48d5d830b8cd9138d15d18237febc28e0b498" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Multiplexer - Multiplex multiple TAP::Parsers</source>
          <target state="translated">TAP::Parser::Multiplexor-Multiplex multiple TAP::Parsers</target>
        </trans-unit>
        <trans-unit id="3c077c3ce874909f47ae77cbcca2c04344198e5b" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result</source>
          <target state="translated">TAP::Parser::Result</target>
        </trans-unit>
        <trans-unit id="a422082a9e255b156b40569483bd6f50f2d5a284" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result - Base class for TAP::Parser output objects</source>
          <target state="translated">TAP::Parser::Resultado-Clase base para TAP::Parser objetos de salida</target>
        </trans-unit>
        <trans-unit id="03b8058105031bc1095218a7667a2ea1b2512b1e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Bailout</source>
          <target state="translated">TAP::Parser::Result::Bailout</target>
        </trans-unit>
        <trans-unit id="00f4b677e9dddb24581e9ed004b7470cf77a617e" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Bailout - Bailout result token.</source>
          <target state="translated">TAP::Parser::Result::Bailout-ficha de resultado de Bailout.</target>
        </trans-unit>
        <trans-unit id="afba56eaac641feaac3daf9f840411e87ecf1e14" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Comment</source>
          <target state="translated">TAP::Parser::Result::Comment</target>
        </trans-unit>
        <trans-unit id="15ac19d49aebc2fdbf7a430ac512a0c55bc03548" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Comment - Comment result token.</source>
          <target state="translated">TAP::Parser::Resultado::Comentario-Comentario resultado ficha.</target>
        </trans-unit>
        <trans-unit id="8028e0720d8ec37d7287bdb1bc7450078b0bf251" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Plan</source>
          <target state="translated">TAP::Parser::Result::Plan</target>
        </trans-unit>
        <trans-unit id="4383859286c921d76add9716628e055668e9e51d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Plan - Plan result token.</source>
          <target state="translated">TAP::Parser::Resultado::Plan-ficha de resultado del plan.</target>
        </trans-unit>
        <trans-unit id="f69e80305022a26d3e2f7acc2b0ed1b953372499" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Pragma</source>
          <target state="translated">TAP::Parser::Result::Pragma</target>
        </trans-unit>
        <trans-unit id="14e0c88ebea6563cf55ee8c08b3b9ed300f0d20c" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Pragma - TAP pragma token.</source>
          <target state="translated">TAP::Parser::Resultado::Pragma-TAP ficha de pragmatismo.</target>
        </trans-unit>
        <trans-unit id="2c91344b1f933a9487eebefc220df8812b008445" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Test</source>
          <target state="translated">TAP::Parser::Result::Test</target>
        </trans-unit>
        <trans-unit id="edc9dae5ee4fae6dd91f0295f192573a8fb6a01a" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Test - Test result token.</source>
          <target state="translated">TAP::Parser::Resultado::Prueba-ficha de resultado de la prueba.</target>
        </trans-unit>
        <trans-unit id="44c345b7d9dc9992b3e410debbb02b0d29d66e79" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Unknown</source>
          <target state="translated">TAP::Parser::Result::Unknown</target>
        </trans-unit>
        <trans-unit id="2943117d9510c588ee4451eb94edacf47000ab69" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Unknown - Unknown result token.</source>
          <target state="translated">TAP::Parser::Resultado::Desconocido-ficha de resultado desconocido.</target>
        </trans-unit>
        <trans-unit id="c6da177c03a14aa64f029674caca24adf3980051" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Version</source>
          <target state="translated">TAP::Parser::Result::Version</target>
        </trans-unit>
        <trans-unit id="57883e95518fac69c11831c9fff6d78815a22b85" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::Version - TAP syntax version token.</source>
          <target state="translated">TAP::Parser::Resultado::Versión-token de la versión de sintaxis TAP.</target>
        </trans-unit>
        <trans-unit id="0f318e8c966222dedab8b0415294cae97d5f4f64" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::YAML</source>
          <target state="translated">TAP::Parser::Result::YAML</target>
        </trans-unit>
        <trans-unit id="68efbf9d5d727c77c2280206016668c939f6f897" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Result::YAML - YAML result token.</source>
          <target state="translated">TAP::Parser::Resultado::YAML-ficha de resultado de YAML.</target>
        </trans-unit>
        <trans-unit id="1a3c6d732b12248b1b6d9e14cf320584eb0a7af0" translate="yes" xml:space="preserve">
          <source>TAP::Parser::ResultFactory</source>
          <target state="translated">TAP::Parser::ResultFactory</target>
        </trans-unit>
        <trans-unit id="4f51e316d0426f94634c75bc33e9099d8d304e39" translate="yes" xml:space="preserve">
          <source>TAP::Parser::ResultFactory - Factory for creating TAP::Parser output objects</source>
          <target state="translated">TAP::Parser::ResultFactory-Fábrica para crear objetos de salida TAP::Parser</target>
        </trans-unit>
        <trans-unit id="50d7a126914ae0138b7bdc512d9ccd5a5d77784d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler</source>
          <target state="translated">TAP::Parser::Scheduler</target>
        </trans-unit>
        <trans-unit id="6da57a5308e690ad2cdb39023741e3d016f8b96b" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler - Schedule tests during parallel testing</source>
          <target state="translated">TAP::Parser::Programador-Programe las pruebas durante las pruebas paralelas</target>
        </trans-unit>
        <trans-unit id="81a373608790f502b94224968ea5fc04bfbb7622" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Job</source>
          <target state="translated">TAP::Parser::Scheduler::Job</target>
        </trans-unit>
        <trans-unit id="657d2fb895dc4c666b37510d12e2199629196955" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Job - A single testing job.</source>
          <target state="translated">TAP::Parser::Scheduler::Job-Un solo trabajo de prueba.</target>
        </trans-unit>
        <trans-unit id="5f18e879edab289da9e626ab0da6617557a360e9" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Spinner</source>
          <target state="translated">TAP::Parser::Scheduler::Spinner</target>
        </trans-unit>
        <trans-unit id="73c0394de64be963748b5ce71edfd4ac21a6b40d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Scheduler::Spinner - A no-op job.</source>
          <target state="translated">TAP::Parser::Scheduler::Spinner-Un trabajo no operativo.</target>
        </trans-unit>
        <trans-unit id="223a37f35fb2a759c5993cb7f97ef9683ee5bef9" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Source</source>
          <target state="translated">TAP::Parser::Source</target>
        </trans-unit>
        <trans-unit id="ba1432bca02f36d9b7eb2dec89d208a92989961b" translate="yes" xml:space="preserve">
          <source>TAP::Parser::Source - a TAP source &amp;amp; meta data about it</source>
          <target state="translated">TAP :: Parser :: Source: una fuente de TAP y metadatos al respecto</target>
        </trans-unit>
        <trans-unit id="b88d422ffa232da21769ecf23f36c9215fb7316d" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler</source>
          <target state="translated">TAP::Parser::SourceHandler</target>
        </trans-unit>
        <trans-unit id="7a11e510cbf8229cb9deefa589961e1880c0ef0c" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler - Base class for different TAP source handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567fb9a0760765f024156fd52b7260852fb83a9f" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Executable</source>
          <target state="translated">TAP::Parser::SourceHandler::Executable</target>
        </trans-unit>
        <trans-unit id="def5a816ec0112a978d703f8596c8df1a84fd5e0" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Executable - Stream output from an executable TAP source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7855e6a236f3f1bba1561cccffbc0253a8b41c1a" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::File</source>
          <target state="translated">TAP::Parser::SourceHandler::File</target>
        </trans-unit>
        <trans-unit id="c84a46ff700384567f810cc0dbe5e4d5b91c8613" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::File - Stream TAP from a text file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75757e90ca350dfe386979f74159d3e72435290" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Handle</source>
          <target state="translated">TAP::Parser::SourceHandler::Handle</target>
        </trans-unit>
        <trans-unit id="b6f0bcffb30af38c06936b6bf1545dd5a83277c1" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Handle - Stream TAP from an IO::Handle or a GLOB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4545cce101afaf68b0bd75f8cbbb180c6b160964" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Perl</source>
          <target state="translated">TAP::Parser::SourceHandler::Perl</target>
        </trans-unit>
        <trans-unit id="04e054f8c028c674d2c9287cae69082bbf9ce520" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::Perl - Stream TAP from a Perl executable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849652a7b8f5b288e476708d89c71b634dc488c2" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::RawTAP</source>
          <target state="translated">TAP::Parser::SourceHandler::RawTAP</target>
        </trans-unit>
        <trans-unit id="7fe676e21d00db4b7e1f5adc9ab5a7fc5c10349f" translate="yes" xml:space="preserve">
          <source>TAP::Parser::SourceHandler::RawTAP - Stream output from raw TAP in a scalar/array ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75366f8757d0c89dc67745e9e30ae921835fc92" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Reader</source>
          <target state="translated">TAP::Parser::YAMLish::Reader</target>
        </trans-unit>
        <trans-unit id="92a795f40e2bb73376fc045a4635f6fcf7d6a7de" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Reader - Read YAMLish data from iterator</source>
          <target state="translated">TAP::Parser::YAMLish::Lector-Lee los datos de YAMLish del iterador</target>
        </trans-unit>
        <trans-unit id="08d78eef616ac71669e623449566134b1c6d4b77" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Writer</source>
          <target state="translated">TAP::Parser::YAMLish::Writer</target>
        </trans-unit>
        <trans-unit id="662f33223b14be1ce958a19abee31b207588ba54" translate="yes" xml:space="preserve">
          <source>TAP::Parser::YAMLish::Writer - Write YAMLish data</source>
          <target state="translated">TAP::Parser::YAMLish::Escritor-Escriba los datos de YAMLish</target>
        </trans-unit>
        <trans-unit id="5b754807c6604c3c6635f1f0f60d367a6cffd283" translate="yes" xml:space="preserve">
          <source>TAPx Developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4682dfeedc4e9ca5c57ef7dd969ecc22339454" translate="yes" xml:space="preserve">
          <source>TARG</source>
          <target state="translated">TARG</target>
        </trans-unit>
        <trans-unit id="f762108ca727f0bcd961fc7467c248887dfa70dc" translate="yes" xml:space="preserve">
          <source>TARGET</source>
          <target state="translated">TARGET</target>
        </trans-unit>
        <trans-unit id="07ebecac9b2b06cf07f96beb0d4f2199e5361e7a" translate="yes" xml:space="preserve">
          <source>TARGLEN</source>
          <target state="translated">TARGLEN</target>
        </trans-unit>
        <trans-unit id="2bf1079e4526d76e12b857a04bc0e88e77c1a56e" translate="yes" xml:space="preserve">
          <source>TARGOFF</source>
          <target state="translated">TARGOFF</target>
        </trans-unit>
        <trans-unit id="20a7b118ffa37d6b7bbce47ab0257aa206e6a7b5" translate="yes" xml:space="preserve">
          <source>TBC: Remove the stringified coderef; while it provides a 'cookie' for each function rendered, the cookies used should be 1,2,3.. not a random hex-address. It also complicates string comparison of two different trees.</source>
          <target state="translated">TBC:Elimina el codificador de cadenas;mientras que proporciona una &quot;cookie&quot; para cada función renderizada,las cookies utilizadas deben ser 1,2,3...no una dirección hexadecimal aleatoria.También complica la comparación de cadenas de dos árboles diferentes.</target>
        </trans-unit>
        <trans-unit id="75c76515695c04f9554f43d036ad1241bc04ca9e" translate="yes" xml:space="preserve">
          <source>TBC: a hookpoint (and an option to set it) for a user-supplied function to produce a banner appropriate for users needs. It's not ideal, because the rendering-state variables, which are a natural candidate for use in concise.t, are unavailable to the user.</source>
          <target state="translated">TBC:un punto de enganche (y una opción para configurarlo)para una función suministrada por el usuario para producir un banner apropiado para las necesidades de los usuarios.No es ideal,porque las variables de estado de representación,que son un candidato natural para su uso en concise.t,no están disponibles para el usuario.</target>
        </trans-unit>
        <trans-unit id="f544fb304c83e23652a63e1bb1b28f4fcc7f6ac0" translate="yes" xml:space="preserve">
          <source>TCP</source>
          <target state="translated">TCP</target>
        </trans-unit>
        <trans-unit id="ccb92559aac4354578ea22eca45f6544e0875e36" translate="yes" xml:space="preserve">
          <source>TCP Clients with IO::Socket</source>
          <target state="translated">Clientes TCP con IO::Socket</target>
        </trans-unit>
        <trans-unit id="90251fa6420d40cf40e1d413320c56543c05df3d" translate="yes" xml:space="preserve">
          <source>TCP Servers with IO::Socket</source>
          <target state="translated">Servidores TCP con IO::Socket</target>
        </trans-unit>
        <trans-unit id="5f3be0b4f564336745c1f56bb30fefa5d6b55f59" translate="yes" xml:space="preserve">
          <source>TCP32IP</source>
          <target state="translated">TCP32IP</target>
        </trans-unit>
        <trans-unit id="930107c72c67f45aa5652e4a9e00965774f7a294" translate="yes" xml:space="preserve">
          <source>TCP_CORK, TCP_KEEPALIVE, TCP_NODELAY, ...</source>
          <target state="translated">TCP_CORK,TCP_KEEPALIVE,TCP_NODELAY,...</target>
        </trans-unit>
        <trans-unit id="f903b5ea6b01e57df921d11ccc31344fae1a17ad" translate="yes" xml:space="preserve">
          <source>TECHNICAL NOTES</source>
          <target state="translated">NOTAS TÉCNICAS</target>
        </trans-unit>
        <trans-unit id="b91007f005fd5b0e0252dbeed42578d0d3ba8fe5" translate="yes" xml:space="preserve">
          <source>TELL this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a2096b23211f0508d184fe8003d9fb843bbdcd" translate="yes" xml:space="preserve">
          <source>TEMPLATE available since 0.23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9335e94443b7e72d405288dde6a7e324e2d4e0cd" translate="yes" xml:space="preserve">
          <source>TEMPLATE available since 0.23.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3db3af9a0e0243f28ed20fcc3b1d5d1faaafbb6" translate="yes" xml:space="preserve">
          <source>TERM</source>
          <target state="translated">TERM</target>
        </trans-unit>
        <trans-unit id="cfc996e2b0441d5f42e4bd8a622b4dd1b2f920a4" translate="yes" xml:space="preserve">
          <source>TERMCAP</source>
          <target state="translated">TERMCAP</target>
        </trans-unit>
        <trans-unit id="4baf6f46b36f22af80f6af8178fa1faa75a5a37d" translate="yes" xml:space="preserve">
          <source>TERMINOLOGY</source>
          <target state="translated">TERMINOLOGY</target>
        </trans-unit>
        <trans-unit id="201ab4b1fe261c4f44a8bfbbdafd62a7606acc46" translate="yes" xml:space="preserve">
          <source>TERMPATH</source>
          <target state="translated">TERMPATH</target>
        </trans-unit>
        <trans-unit id="feb84698a707a37aae3ea67dd9630a278a6ca8f5" translate="yes" xml:space="preserve">
          <source>TERTIARY METHODS</source>
          <target state="translated">MÉTODOS TERCIARIOS</target>
        </trans-unit>
        <trans-unit id="984816fd329622876e14907634264e6f332e9fb3" translate="yes" xml:space="preserve">
          <source>TEST</source>
          <target state="translated">TEST</target>
        </trans-unit>
        <trans-unit id="16731ae62f4aed11f4e128609c52499c94df9c78" translate="yes" xml:space="preserve">
          <source>TEST ON CYGWIN</source>
          <target state="translated">PRUEBA DE CYGWIN</target>
        </trans-unit>
        <trans-unit id="6fc222312636989b4f87037a3c04ed0cc832a677" translate="yes" xml:space="preserve">
          <source>TEST RESULTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01006d91764e5a9b5b7e2fa6b5505255129d446" translate="yes" xml:space="preserve">
          <source>TEST STATUS</source>
          <target state="translated">ESTADO DE LAS PRUEBAS</target>
        </trans-unit>
        <trans-unit id="1aafa503ed48d02972e5772184ca513598703dbe" translate="yes" xml:space="preserve">
          <source>TEST TYPES</source>
          <target state="translated">TIPOS DE PRUEBA</target>
        </trans-unit>
        <trans-unit id="0aec4d9bc52ab96e424cd057a59cc45eff314107" translate="yes" xml:space="preserve">
          <source>TEST2</source>
          <target state="translated">TEST2</target>
        </trans-unit>
        <trans-unit id="cb73eb0155af5a3da3bb4a63646b40201ab650c4" translate="yes" xml:space="preserve">
          <source>TESTING</source>
          <target state="translated">TESTING</target>
        </trans-unit>
        <trans-unit id="942de0a9a9abe9fb219e796c9c0f10b53d3c6b67" translate="yes" xml:space="preserve">
          <source>TESTING FRAMEWORKS</source>
          <target state="translated">MARCOS DE PRUEBAS</target>
        </trans-unit>
        <trans-unit id="0653969b83ac74a5d20cdc9c4494d4702f2fe66a" translate="yes" xml:space="preserve">
          <source>TESTING YOUR TOOLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bee02d2a52a6eefa52f8e6c1723494db5b275c5" translate="yes" xml:space="preserve">
          <source>TEST_REQUIRES</source>
          <target state="translated">TEST_REQUIRES</target>
        </trans-unit>
        <trans-unit id="04209ee7219637d26ee9cd4fa722493ca838116d" translate="yes" xml:space="preserve">
          <source>THANK YOU</source>
          <target state="translated">GRACIAS</target>
        </trans-unit>
        <trans-unit id="ffa4516bffdd79480b0ffbea2e99e02675eb3752" translate="yes" xml:space="preserve">
          <source>THANKS</source>
          <target state="translated">THANKS</target>
        </trans-unit>
        <trans-unit id="506d81bed6d3b4fa9b202f8f107ea34d18c6fadf" translate="yes" xml:space="preserve">
          <source>THE .netrc FILE</source>
          <target state="translated">EL ARCHIVO .netrc</target>
        </trans-unit>
        <trans-unit id="2462f7724da7788ea62fc114cce4eab4e3339b38" translate="yes" xml:space="preserve">
          <source>THE API INTERFACE</source>
          <target state="translated">LA INTERFAZ DE LA API</target>
        </trans-unit>
        <trans-unit id="eb466ef85e05d613480bb98bc1553047a2722184" translate="yes" xml:space="preserve">
          <source>THE CALL_ FUNCTIONS</source>
          <target state="translated">LAS FUNCIONES_DE_LLAMADO</target>
        </trans-unit>
        <trans-unit id="db00699a00a64bd8eb4f11307ac364af2186b3b7" translate="yes" xml:space="preserve">
          <source>THE Math::BigInt API</source>
          <target state="translated">Las matemáticas::BigInt API</target>
        </trans-unit>
        <trans-unit id="5bf87badf6e989985ca5cde31b10d699fd946122" translate="yes" xml:space="preserve">
          <source>THE PERL ENCODING API</source>
          <target state="translated">EL PERL QUE CODIFICA LA API</target>
        </trans-unit>
        <trans-unit id="2036c7632dcc8e78c342e25b215c2cd28f8d5b22" translate="yes" xml:space="preserve">
          <source>THE PERL MODULE LIBRARY</source>
          <target state="translated">LA BIBLIOTECA DEL MÓDULO DE PERL</target>
        </trans-unit>
        <trans-unit id="a1c725e21d784bf655d9ab26a4cdce89326e975c" translate="yes" xml:space="preserve">
          <source>THE QUESTIONS</source>
          <target state="translated">LAS PREGUNTAS.</target>
        </trans-unit>
        <trans-unit id="fb64ef2c36220a9cb84ef2e67b3a1343a0d67d4d" translate="yes" xml:space="preserve">
          <source>THE RULES OF SYS::SYSLOG</source>
          <target state="translated">LAS REGLAS DEL SYS::SYSLOG</target>
        </trans-unit>
        <trans-unit id="79e66f9682153b1fcc7f947e99f79c4de4e44b30" translate="yes" xml:space="preserve">
          <source>THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</source>
          <target state="translated">EL SOFTWARE SE PROPORCIONA &quot;TAL CUAL&quot;,SIN GARANTÍA DE NINGÚN TIPO,EXPRESA O IMPLÍCITA,INCLUIDAS,ENTRE OTRAS,LAS GARANTÍAS DE COMERCIABILIDAD,IDONEIDAD PARA UN FIN DETERMINADO Y NO INFRACCIÓN.EN NINGÚN CASO LOS AUTORES O LOS TITULARES DE LOS DERECHOS DE AUTOR SERÁN RESPONSABLES DE NINGUNA RECLAMACIÓN,DAÑO U OTRA RESPONSABILIDAD,YA SEA EN UNA ACCIÓN CONTRACTUAL,EXTRACONTRACTUAL O DE OTRO TIPO,QUE SURJA DE,EN O EN RELACIÓN CON EL SOFTWARE O EL USO U OTROS TRATOS EN EL SOFTWARE.</target>
        </trans-unit>
        <trans-unit id="6c98c15d2eefa5232f6a2b60310fc78bdae1017e" translate="yes" xml:space="preserve">
          <source>THE dataconn CLASS</source>
          <target state="translated">LA CLASE DE DATACONES</target>
        </trans-unit>
        <trans-unit id="472f09c67477280b91b7ae79efeb4fde13fbb523" translate="yes" xml:space="preserve">
          <source>THING</source>
          <target state="translated">THING</target>
        </trans-unit>
        <trans-unit id="07b9eb014428dfb38549744f146d6c3dde1b5ea1" translate="yes" xml:space="preserve">
          <source>THINGS THAT BREAK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2360380b4c35fa48f7e3a9f411a80f126b56989e" translate="yes" xml:space="preserve">
          <source>THINGS TO LOOK OUT FOR</source>
          <target state="translated">COSAS QUE HAY QUE TENER EN CUENTA</target>
        </trans-unit>
        <trans-unit id="89f30bff95de115f49eea92211c4131dff22eee2" translate="yes" xml:space="preserve">
          <source>THIRD PARTY META-DATA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d962f5bb90637331652bdd7361911bfa4f11ec" translate="yes" xml:space="preserve">
          <source>THIS</source>
          <target state="translated">THIS</target>
        </trans-unit>
        <trans-unit id="1e38c114990518154ef0cedaa35a5bd37c0b3725" translate="yes" xml:space="preserve">
          <source>THIS FUNCTION SHOULD BE USED IN ONLY VERY SPECIALIZED CIRCUMSTANCES.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584497c8a870243751bafe0429bbe1f5826e0915" translate="yes" xml:space="preserve">
          <source>THIS FUNCTION SHOULD BE USED IN ONLY VERY SPECIALIZED CIRCUMSTANCES. Instead, &lt;b&gt;Almost all code should use &lt;a href=&quot;#uvchr_to_utf8&quot;&gt;uvchr_to_utf8&lt;/a&gt; or &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="translated">ESTA FUNCI&amp;Oacute;N DEBE UTILIZARSE &amp;Uacute;NICAMENTE EN CIRCUNSTANCIAS MUY ESPECIALIZADAS. En su lugar, &lt;b&gt;casi todo el c&amp;oacute;digo deber&amp;iacute;a usar &lt;a href=&quot;#uvchr_to_utf8&quot;&gt;uvchr_to_utf8&lt;/a&gt; o &lt;a href=&quot;#uvchr_to_utf8_flags&quot;&gt;uvchr_to_utf8_flags&lt;/a&gt;&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="2fe768b556edf71a7a7285e6d6bd4d94874718c9" translate="yes" xml:space="preserve">
          <source>THIS FUNCTION SHOULD BE USED IN ONLY VERY SPECIALIZED CIRCUMSTANCES. Instead, &lt;b&gt;Almost all code should use &lt;a href=&quot;perlapi#uvchr_to_utf8&quot;&gt;&quot;uvchr_to_utf8&quot; in perlapi&lt;/a&gt; or &lt;a href=&quot;perlapi#uvchr_to_utf8_flags&quot;&gt;&quot;uvchr_to_utf8_flags&quot; in perlapi&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e7f9968d3c36f671d0b0a315ac2b0ae68ef3cb" translate="yes" xml:space="preserve">
          <source>THIS FUNCTION SHOULD BE USED IN ONLY VERY SPECIALIZED CIRCUMSTANCES. Most code should use &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;&quot;utf8_to_uvchr_buf&quot;&lt;/a&gt;() rather than call this directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331b8f63effc7e7d25ea524ca1aa92004125d86f" translate="yes" xml:space="preserve">
          <source>THIS FUNCTION SHOULD BE USED IN ONLY VERY SPECIALIZED CIRCUMSTANCES. Most code should use &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;utf8_to_uvchr_buf&lt;/a&gt;() rather than call this directly.</source>
          <target state="translated">ESTA FUNCI&amp;Oacute;N DEBE UTILIZARSE &amp;Uacute;NICAMENTE EN CIRCUNSTANCIAS MUY ESPECIALIZADAS. La mayor parte del c&amp;oacute;digo deber&amp;iacute;a usar &lt;a href=&quot;#utf8_to_uvchr_buf&quot;&gt;utf8_to_uvchr_buf&lt;/a&gt; () en lugar de llamarlo directamente.</target>
        </trans-unit>
        <trans-unit id="e500f259933ce04e81376b9418761e8b6b63ca4b" translate="yes" xml:space="preserve">
          <source>THIS IS A BUNDLED COPY OF HASHBASE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87fa10ba30f21359cbeb956cb3e89adeb5a0009" translate="yes" xml:space="preserve">
          <source>THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897ebd5219f0c5caa208699bd4713ae3b784c6e0" translate="yes" xml:space="preserve">
          <source>THREAD CONTEXT</source>
          <target state="translated">CONTEXTO DE HILO</target>
        </trans-unit>
        <trans-unit id="54e59b7bc3a2e96489d360a7b538367313e355dc" translate="yes" xml:space="preserve">
          <source>THREAD SIGNALLING</source>
          <target state="translated">SEÑALIZACIÓN DE HILOS</target>
        </trans-unit>
        <trans-unit id="60b08b8acc7a625b8f0d9d41c7e2c28fbb134428" translate="yes" xml:space="preserve">
          <source>THREAD STACK SIZE</source>
          <target state="translated">TAMAÑO DE LA PILA DE HILOS</target>
        </trans-unit>
        <trans-unit id="577fa2796ff34704e76d7424a53614775f345523" translate="yes" xml:space="preserve">
          <source>THREAD STATE</source>
          <target state="translated">ESTADO DEL HILO</target>
        </trans-unit>
        <trans-unit id="bf2767662599be6d02741631f5d4e162d0241086" translate="yes" xml:space="preserve">
          <source>THREAD SUPPORT</source>
          <target state="translated">SOPORTE DE HILO DE ROSCA</target>
        </trans-unit>
        <trans-unit id="f8c7150e13e8ea5e3603e546c189035146b726df" translate="yes" xml:space="preserve">
          <source>THREADS</source>
          <target state="translated">THREADS</target>
        </trans-unit>
        <trans-unit id="7c9dadbfc59d969a1799e6be175b4787667674b0" translate="yes" xml:space="preserve">
          <source>TIEARRAY classname, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f266b9c4765272a11c0ed3c20127bf1d201638dd" translate="yes" xml:space="preserve">
          <source>TIEHANDLE by Sven Verdoolaege &amp;lt;</source>
          <target state="translated">TIEHANDLE de Sven Verdoolaege &amp;lt;</target>
        </trans-unit>
        <trans-unit id="4347e3f18728473395d10013e97d93a913b225ef" translate="yes" xml:space="preserve">
          <source>TIEHANDLE classname, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d83af8a8f8d7e1fd18b5a0b52b5df410f197b9" translate="yes" xml:space="preserve">
          <source>TIEHASH</source>
          <target state="translated">TIEHASH</target>
        </trans-unit>
        <trans-unit id="114157a2500e26e12e9e4f96b1661f6f0fed2f32" translate="yes" xml:space="preserve">
          <source>TIEHASH classname, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5885b322f223d2e8e46e67617d8c4179f4469494" translate="yes" xml:space="preserve">
          <source>TIESCALAR classname, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64269f9bd268bf28815bb69e82601cd7e806a37b" translate="yes" xml:space="preserve">
          <source>TIME</source>
          <target state="translated">TIME</target>
        </trans-unit>
        <trans-unit id="6c2529a2a2e078590190100f8e1c4972e8846bc5" translate="yes" xml:space="preserve">
          <source>TIME is</source>
          <target state="translated">El tiempo es</target>
        </trans-unit>
        <trans-unit id="cb08f6ca3aa0ce4fb2da7065815536bc05346689" translate="yes" xml:space="preserve">
          <source>TITLE specifies an optional window title. The default is &quot;Perl&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6409a515d9fc80e579966498117e7281bd8b98a0" translate="yes" xml:space="preserve">
          <source>TMP or TEMP</source>
          <target state="translated">TMP o TEMP</target>
        </trans-unit>
        <trans-unit id="502251190f55377c3e1679cff641b5206ebe43aa" translate="yes" xml:space="preserve">
          <source>TMPDIR flag available since 0.19.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9767c08e2051436d891f79c96c59ac4496bdaece" translate="yes" xml:space="preserve">
          <source>TMTOWTDI</source>
          <target state="translated">TMTOWTDI</target>
        </trans-unit>
        <trans-unit id="47bd70df0e55aba216736b1db7710c6478ab9cbf" translate="yes" xml:space="preserve">
          <source>TO DO</source>
          <target state="translated">HACER</target>
        </trans-unit>
        <trans-unit id="f8953b7e0e4beba3861ba1d10ca937f8f20fdfee" translate="yes" xml:space="preserve">
          <source>TO DO (maybe)</source>
          <target state="translated">HACER (tal vez)</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="87460dd609011b471c790d7cefae22bfe0f0c49f" translate="yes" xml:space="preserve">
          <source>TODO TESTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14081c923a6df4129e72afd1550fb67ed4989fb1" translate="yes" xml:space="preserve">
          <source>TODO all (most?) accessorized methods</source>
          <target state="translated">TODOS (¿la mayoría?)los métodos accesorios</target>
        </trans-unit>
        <trans-unit id="a5b8170989f597b07b48f468f60223ae453a6cc5" translate="yes" xml:space="preserve">
          <source>TODO intro... mention that events are supplied for implicits, like for missing &amp;gt;'s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b8285ed97f054a4aab1877c59b31a331177c3b" translate="yes" xml:space="preserve">
          <source>TODO plans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac7481b99347a289b8d37ae17bf40d2f44f1514" translate="yes" xml:space="preserve">
          <source>TODO tests are designed for maintaining an &lt;b&gt;executable TODO list&lt;/b&gt;. These tests are</source>
          <target state="translated">Las pruebas TODO est&amp;aacute;n dise&amp;ntilde;adas para mantener una &lt;b&gt;lista de TODO ejecutable&lt;/b&gt; . Estas pruebas son</target>
        </trans-unit>
        <trans-unit id="fd32d0b7a9d317be835f0befd340eb49cf589cff" translate="yes" xml:space="preserve">
          <source>TODO, see &lt;a href=&quot;http://www.mail-archive.com/perl5-changes@perl.org/msg17328.html&quot;&gt;http://www.mail-archive.com/perl5-changes@perl.org/msg17328.html&lt;/a&gt;</source>
          <target state="translated">TODO, consulte &lt;a href=&quot;http://www.mail-archive.com/perl5-changes@perl.org/msg17328.html&quot;&gt;http://www.mail-archive.com/perl5-changes@perl.org/msg17328.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74f7cfa4b2cac04f938a7033d590acfea7e8506e" translate="yes" xml:space="preserve">
          <source>TODO, see &lt;a href=&quot;https://www.mail-archive.com/perl5-changes@perl.org/msg17328.html&quot;&gt;http://www.mail-archive.com/perl5-changes@perl.org/msg17328.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd529f1aacfef198f05ec640f141ac5fe8d0a0d0" translate="yes" xml:space="preserve">
          <source>TODO...</source>
          <target state="translated">TODO...</target>
        </trans-unit>
        <trans-unit id="643a0382045e00a908788587a0d4b6d602741dc9" translate="yes" xml:space="preserve">
          <source>TODO: An example or two of =extend, then point to Pod::Simple::Subclassing</source>
          <target state="translated">Un ejemplo o dos de =extender,luego apuntar a Pod::Simple::Subclasificación</target>
        </trans-unit>
        <trans-unit id="b95da2f919c7ccb270ebcfb13598d7d2d8b6a01a" translate="yes" xml:space="preserve">
          <source>TODO: Document this</source>
          <target state="translated">Documenta esto</target>
        </trans-unit>
        <trans-unit id="26dbb18df63ed25641cd65981a2bd8abf41c6420" translate="yes" xml:space="preserve">
          <source>TODO: Document those cases.</source>
          <target state="translated">Documenta esos casos.</target>
        </trans-unit>
        <trans-unit id="503edd260136cc51f7d583a68da986091421e06f" translate="yes" xml:space="preserve">
          <source>TODO: a corpus of sample Pod input and HTML output? Or common idioms?</source>
          <target state="translated">TODO:un corpus de muestra de entrada de Pod y salida de HTML? ¿O modismos comunes?</target>
        </trans-unit>
        <trans-unit id="2804185099bb0257ffff9bf0a6b003ba897a8c8c" translate="yes" xml:space="preserve">
          <source>TOGGLES</source>
          <target state="translated">TOGGLES</target>
        </trans-unit>
        <trans-unit id="fbc5612fa4f39d021c8212de6294e10fc0eb4c60" translate="yes" xml:space="preserve">
          <source>TOPMARK</source>
          <target state="translated">TOPMARK</target>
        </trans-unit>
        <trans-unit id="1b219778d2536bb7cb3443c1e48b1cdc6ec5bbcd" translate="yes" xml:space="preserve">
          <source>TOP_GV</source>
          <target state="translated">TOP_GV</target>
        </trans-unit>
        <trans-unit id="028dc78f2472e443fde9354a9093737ec708fdc1" translate="yes" xml:space="preserve">
          <source>TOP_NAME</source>
          <target state="translated">TOP_NAME</target>
        </trans-unit>
        <trans-unit id="767b9b1886f65db5d2c2efe4d311ec16282ddf3e" translate="yes" xml:space="preserve">
          <source>TOTAL RESULTS</source>
          <target state="translated">RESULTADOS TOTALES</target>
        </trans-unit>
        <trans-unit id="e69a3c58feb4943f28d4f3916d734de76e706681" translate="yes" xml:space="preserve">
          <source>TR16 implies a method to extend UTF-EBCDIC to encode points up through &lt;code&gt;2 ** 31 - 1&lt;/code&gt;. Perl uses this method for code points up through &lt;code&gt;2 ** 30 - 1&lt;/code&gt;, but uses an incompatible method for larger ones, to enable it to handle much larger code points than otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6168d5c87ca259972f2a01ffcfd10f094db6e548" translate="yes" xml:space="preserve">
          <source>TRANSFORMATION FORMATS</source>
          <target state="translated">FORMATOS DE TRANSFORMACIÓN</target>
        </trans-unit>
        <trans-unit id="08e80e877114a02316e2a85c727dc2ec2e8d050b" translate="yes" xml:space="preserve">
          <source>TRANSLATIONS</source>
          <target state="translated">TRANSLATIONS</target>
        </trans-unit>
        <trans-unit id="881efc13a4ce5c9b7f10acdee48bdf35dab16bcd" translate="yes" xml:space="preserve">
          <source>TREE-BASED PARSING</source>
          <target state="translated">ANÁLISIS DE LOS ÁRBOLES</target>
        </trans-unit>
        <trans-unit id="8c6a137afc05b19ebfa9464a819fe4c729451ba3" translate="yes" xml:space="preserve">
          <source>TRIEC</source>
          <target state="translated">TRIEC</target>
        </trans-unit>
        <trans-unit id="4c899cd91fe33df0b8e34be446bc5d1535c00392" translate="yes" xml:space="preserve">
          <source>TRIEE</source>
          <target state="translated">TRIEE</target>
        </trans-unit>
        <trans-unit id="4e29af22b66831d0809f9ed161ff9fdacd21c3da" translate="yes" xml:space="preserve">
          <source>TRIEM</source>
          <target state="translated">TRIEM</target>
        </trans-unit>
        <trans-unit id="55c5fdc09a5315c1ab2a4b0b8470a49a53936b60" translate="yes" xml:space="preserve">
          <source>TRIGONOMETRIC FUNCTIONS</source>
          <target state="translated">FUNCIONES TRIGONOMÉTRICAS</target>
        </trans-unit>
        <trans-unit id="fddf1df7c30cac7908d10246256efd264ce7aa32" translate="yes" xml:space="preserve">
          <source>TRUE</source>
          <target state="translated">TRUE</target>
        </trans-unit>
        <trans-unit id="d814d3e7d55ad64b9a68fdab60bd5741a6c86453" translate="yes" xml:space="preserve">
          <source>TUTORIAL</source>
          <target state="translated">TUTORIAL</target>
        </trans-unit>
        <trans-unit id="6e9816a8e9d0388eecdb52866188c04e75e4b1b3" translate="yes" xml:space="preserve">
          <source>TYPE</source>
          <target state="translated">TYPE</target>
        </trans-unit>
        <trans-unit id="fe62cb78f4ed9f61dd4406f0f3143d6f618cef25" translate="yes" xml:space="preserve">
          <source>TYPEMAPS</source>
          <target state="translated">TYPEMAPS</target>
        </trans-unit>
        <trans-unit id="40ea9041285003e004a8f6fe2dd14ebb07961af2" translate="yes" xml:space="preserve">
          <source>TYPES</source>
          <target state="translated">TYPES</target>
        </trans-unit>
        <trans-unit id="fcac4a88dd04636da037a74fcf1d813d6bb5c767" translate="yes" xml:space="preserve">
          <source>TYPES OF VERSION OBJECTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb5c671d380f7e563f1ea67cb13227761e097ff" translate="yes" xml:space="preserve">
          <source>T_ARRAY</source>
          <target state="translated">T_ARRAY</target>
        </trans-unit>
        <trans-unit id="5a44f0733ece8e94e30b4779d69997f4ee33c56f" translate="yes" xml:space="preserve">
          <source>T_AVREF</source>
          <target state="translated">T_AVREF</target>
        </trans-unit>
        <trans-unit id="20c8d07e48603a91f5ad0258a9d7260fecf703f4" translate="yes" xml:space="preserve">
          <source>T_AVREF_REFCOUNT_FIXED</source>
          <target state="translated">T_AVREF_REFCOUNT_FIXED</target>
        </trans-unit>
        <trans-unit id="441dcc9bf7c8874857cd2f07add2544a7aa18348" translate="yes" xml:space="preserve">
          <source>T_BOOL</source>
          <target state="translated">T_BOOL</target>
        </trans-unit>
        <trans-unit id="c96681120818e54685540689763746057da6c711" translate="yes" xml:space="preserve">
          <source>T_CALLBACK</source>
          <target state="translated">T_CALLBACK</target>
        </trans-unit>
        <trans-unit id="1d4f3aa1dcbc52712656445982d93cb57df8eefd" translate="yes" xml:space="preserve">
          <source>T_CHAR</source>
          <target state="translated">T_CHAR</target>
        </trans-unit>
        <trans-unit id="619c206b9e7e1179f8c572c2e0bbd5418dcbcd9c" translate="yes" xml:space="preserve">
          <source>T_CVREF</source>
          <target state="translated">T_CVREF</target>
        </trans-unit>
        <trans-unit id="6bf16578ac0037942fb294227b378783d6417250" translate="yes" xml:space="preserve">
          <source>T_CVREF_REFCOUNT_FIXED</source>
          <target state="translated">T_CVREF_REFCOUNT_FIXED</target>
        </trans-unit>
        <trans-unit id="ebd5f4b2b2cdf44ca91f90320178cc872c0e09c7" translate="yes" xml:space="preserve">
          <source>T_DATAUNIT</source>
          <target state="translated">T_DATAUNIT</target>
        </trans-unit>
        <trans-unit id="fe14988da15a2d4fcafb4d4c3fdba996b1d3919b" translate="yes" xml:space="preserve">
          <source>T_DOUBLE</source>
          <target state="translated">T_DOUBLE</target>
        </trans-unit>
        <trans-unit id="fc54a411f035f09e5b26e9d5967f486a6331f42c" translate="yes" xml:space="preserve">
          <source>T_ENUM</source>
          <target state="translated">T_ENUM</target>
        </trans-unit>
        <trans-unit id="d9144dfb59c0a6e098f071eb27226d345bb3b9a3" translate="yes" xml:space="preserve">
          <source>T_FLOAT</source>
          <target state="translated">T_FLOAT</target>
        </trans-unit>
        <trans-unit id="a488a491ef416eedb274173547cc94600a1c1be9" translate="yes" xml:space="preserve">
          <source>T_HVREF</source>
          <target state="translated">T_HVREF</target>
        </trans-unit>
        <trans-unit id="e9eb1cfbb5a736f4b47a7fce8d35e124bff4c588" translate="yes" xml:space="preserve">
          <source>T_HVREF_REFCOUNT_FIXED</source>
          <target state="translated">T_HVREF_REFCOUNT_FIXED</target>
        </trans-unit>
        <trans-unit id="4baf8db3b4ede993cae1ba43114ca8ba3f059451" translate="yes" xml:space="preserve">
          <source>T_IN</source>
          <target state="translated">T_IN</target>
        </trans-unit>
        <trans-unit id="0d34ad725c5d489d88c10068319bbe41b1372c3f" translate="yes" xml:space="preserve">
          <source>T_INOUT</source>
          <target state="translated">T_INOUT</target>
        </trans-unit>
        <trans-unit id="c9ac30f3bfe7d2f1be494ab16cbb62e6b0281825" translate="yes" xml:space="preserve">
          <source>T_INT</source>
          <target state="translated">T_INT</target>
        </trans-unit>
        <trans-unit id="71be7a946c6f9c8f878e909304790177b9d9322d" translate="yes" xml:space="preserve">
          <source>T_IV</source>
          <target state="translated">T_IV</target>
        </trans-unit>
        <trans-unit id="eaf82e3c7e0aec5ed4944f8734b7934b5d7a9464" translate="yes" xml:space="preserve">
          <source>T_LONG</source>
          <target state="translated">T_LONG</target>
        </trans-unit>
        <trans-unit id="5b8224b3c1fe92d5bae70adacc8eac05fd9a5fda" translate="yes" xml:space="preserve">
          <source>T_NV</source>
          <target state="translated">T_NV</target>
        </trans-unit>
        <trans-unit id="a6b2c10bebc0632668de5a633339c42212334462" translate="yes" xml:space="preserve">
          <source>T_OPAQUE</source>
          <target state="translated">T_OPAQUE</target>
        </trans-unit>
        <trans-unit id="3409e584f0822b2e9f6e17cf539649bef61e2695" translate="yes" xml:space="preserve">
          <source>T_OPAQUE supports input and output of simple types. T_OPAQUEPTR can be used to pass these bytes back into C if a pointer is acceptable.</source>
          <target state="translated">T_OPAQUE soporta la entrada y salida de tipos simples.T_OPAQUEPTR puede ser usado para pasar estos bytes de vuelta a C si un puntero es aceptable.</target>
        </trans-unit>
        <trans-unit id="4d81bbcffee2d4d53636e0cfc38c1802b032ce1e" translate="yes" xml:space="preserve">
          <source>T_OPAQUEPTR</source>
          <target state="translated">T_OPAQUEPTR</target>
        </trans-unit>
        <trans-unit id="94ed49f0fcb197292e8b44f17a54e91c96dfd034" translate="yes" xml:space="preserve">
          <source>T_OUT</source>
          <target state="translated">T_OUT</target>
        </trans-unit>
        <trans-unit id="2a34e55dba9603dc2ed22d9cbacb17ec8fa3b7aa" translate="yes" xml:space="preserve">
          <source>T_PACKED</source>
          <target state="translated">T_PACKED</target>
        </trans-unit>
        <trans-unit id="57d9968b716d10e58d7663155b60bcfe636fd9da" translate="yes" xml:space="preserve">
          <source>T_PACKEDARRAY</source>
          <target state="translated">T_PACKEDARRAY</target>
        </trans-unit>
        <trans-unit id="2acdc87aba62301b1c46833bbb0d8a2ab24b5d4c" translate="yes" xml:space="preserve">
          <source>T_PACKEDARRAY is similar to T_PACKED. In fact, the &lt;code&gt;INPUT&lt;/code&gt; (Perl to XSUB) typemap is identical, but the &lt;code&gt;OUTPUT&lt;/code&gt; typemap passes an additional argument to the &lt;code&gt;XS_pack_$ntype&lt;/code&gt; function. This third parameter indicates the number of elements in the output so that the function can handle C arrays sanely. The variable needs to be declared by the user and must have the name &lt;code&gt;count_$ntype&lt;/code&gt; where &lt;code&gt;$ntype&lt;/code&gt; is the normalized C type name as explained above. The signature of the function would be for the example above and &lt;code&gt;foo_t **&lt;/code&gt; :</source>
          <target state="translated">T_PACKEDARRAY es similar a T_PACKED. De hecho, el mapa de tipos &lt;code&gt;INPUT&lt;/code&gt; (Perl a XSUB) es id&amp;eacute;ntico, pero el mapa de tipos &lt;code&gt;OUTPUT&lt;/code&gt; pasa un argumento adicional a la funci&amp;oacute;n &lt;code&gt;XS_pack_$ntype&lt;/code&gt; . Este tercer par&amp;aacute;metro indica el n&amp;uacute;mero de elementos en la salida para que la funci&amp;oacute;n pueda manejar arreglos C con sensatez. La variable debe ser declarada por el usuario y debe tener el nombre &lt;code&gt;count_$ntype&lt;/code&gt; donde &lt;code&gt;$ntype&lt;/code&gt; es el nombre del tipo C normalizado como se explic&amp;oacute; anteriormente. La firma de la funci&amp;oacute;n ser&amp;iacute;a para el ejemplo anterior y &lt;code&gt;foo_t **&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1c906d78fc823a0e9f29368dd513ce8a5418cee5" translate="yes" xml:space="preserve">
          <source>T_PACKEDARRAY is similar to T_PACKED. In fact, the &lt;code&gt;INPUT&lt;/code&gt; (Perl to XSUB) typemap is identical, but the &lt;code&gt;OUTPUT&lt;/code&gt; typemap passes an additional argument to the &lt;code&gt;XS_pack_$ntype&lt;/code&gt; function. This third parameter indicates the number of elements in the output so that the function can handle C arrays sanely. The variable needs to be declared by the user and must have the name &lt;code&gt;count_$ntype&lt;/code&gt; where &lt;code&gt;$ntype&lt;/code&gt; is the normalized C type name as explained above. The signature of the function would be for the example above and &lt;code&gt;foo_t **&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e820d7c1bd9a291e980383d064a4e16d0aba0000" translate="yes" xml:space="preserve">
          <source>T_PTR</source>
          <target state="translated">T_PTR</target>
        </trans-unit>
        <trans-unit id="af1f6fafe92e003dd267b2be4f4b4ef95598f8ab" translate="yes" xml:space="preserve">
          <source>T_PTRDESC</source>
          <target state="translated">T_PTRDESC</target>
        </trans-unit>
        <trans-unit id="1dea827458dd7afc9afab55ca4ec0182c83a4fc4" translate="yes" xml:space="preserve">
          <source>T_PTROBJ</source>
          <target state="translated">T_PTROBJ</target>
        </trans-unit>
        <trans-unit id="1ee34e1644f9ab8be830a408f52ae4dc2849ef55" translate="yes" xml:space="preserve">
          <source>T_PTRREF</source>
          <target state="translated">T_PTRREF</target>
        </trans-unit>
        <trans-unit id="c8c1dc76ec8744f6cb9d9c795f9bfbc5484c1e4d" translate="yes" xml:space="preserve">
          <source>T_PV</source>
          <target state="translated">T_PV</target>
        </trans-unit>
        <trans-unit id="3a5d267dcac84a0b73c5ab78fe0237e26042a945" translate="yes" xml:space="preserve">
          <source>T_REFOBJ</source>
          <target state="translated">T_REFOBJ</target>
        </trans-unit>
        <trans-unit id="35b0d1f3ee1694c51f5d1834c393cb455273def0" translate="yes" xml:space="preserve">
          <source>T_REFREF</source>
          <target state="translated">T_REFREF</target>
        </trans-unit>
        <trans-unit id="784caeb6be6fa5307fa5f6a8479f73d2c2a7691b" translate="yes" xml:space="preserve">
          <source>T_REF_IV_PTR</source>
          <target state="translated">T_REF_IV_PTR</target>
        </trans-unit>
        <trans-unit id="b3253f9127be3bdfed118ec52937984abc7c698c" translate="yes" xml:space="preserve">
          <source>T_REF_IV_REF</source>
          <target state="translated">T_REF_IV_REF</target>
        </trans-unit>
        <trans-unit id="586e2f7a6caf54d31aba57fd6ffdf405333ef314" translate="yes" xml:space="preserve">
          <source>T_SHORT</source>
          <target state="translated">T_SHORT</target>
        </trans-unit>
        <trans-unit id="5e2b55747cebf0deadf14e37c20ac8ae0c863ea6" translate="yes" xml:space="preserve">
          <source>T_STDIO</source>
          <target state="translated">T_STDIO</target>
        </trans-unit>
        <trans-unit id="998ce6a132418997f012a8d95a08e955ec444167" translate="yes" xml:space="preserve">
          <source>T_SV</source>
          <target state="translated">T_SV</target>
        </trans-unit>
        <trans-unit id="f74fedb4d19c9aae5df1a9a2556f420561de423a" translate="yes" xml:space="preserve">
          <source>T_SVREF</source>
          <target state="translated">T_SVREF</target>
        </trans-unit>
        <trans-unit id="b31c4d98a369de70efd9e1e28b9897a696583da4" translate="yes" xml:space="preserve">
          <source>T_SVREF_FIXED</source>
          <target state="translated">T_SVREF_FIXED</target>
        </trans-unit>
        <trans-unit id="4512816ed0e7eedba9cb2a4f99052651f37fbd5b" translate="yes" xml:space="preserve">
          <source>T_SYSRET</source>
          <target state="translated">T_SYSRET</target>
        </trans-unit>
        <trans-unit id="fe86ffcf28dab8688bad0d5d6a6ff6be7af3bf8e" translate="yes" xml:space="preserve">
          <source>T_UV</source>
          <target state="translated">T_UV</target>
        </trans-unit>
        <trans-unit id="d8679fa31c93e6fb7cc082350054dc4f5ca62292" translate="yes" xml:space="preserve">
          <source>T_U_CHAR</source>
          <target state="translated">T_U_CHAR</target>
        </trans-unit>
        <trans-unit id="464c580d57f537b018efa810de5fcaf9cd86a995" translate="yes" xml:space="preserve">
          <source>T_U_INT</source>
          <target state="translated">T_U_INT</target>
        </trans-unit>
        <trans-unit id="1df30c0b01ecbd04a2bc7cb066c197a1ef8a203b" translate="yes" xml:space="preserve">
          <source>T_U_LONG</source>
          <target state="translated">T_U_LONG</target>
        </trans-unit>
        <trans-unit id="f31b217f3c82ab68ac7452146830667f22ddb6a9" translate="yes" xml:space="preserve">
          <source>T_U_LONG is used for type &lt;code&gt;U32&lt;/code&gt; in the standard typemap.</source>
          <target state="translated">T_U_LONG se utiliza para el tipo &lt;code&gt;U32&lt;/code&gt; en el typemap est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="11359764d9baa3629eadc5745b2516619c5dfc84" translate="yes" xml:space="preserve">
          <source>T_U_SHORT</source>
          <target state="translated">T_U_SHORT</target>
        </trans-unit>
        <trans-unit id="067c0c90742a514deacd491758ccd4ba0e1d9275" translate="yes" xml:space="preserve">
          <source>T_U_SHORT is used for type &lt;code&gt;U16&lt;/code&gt; in the standard typemap.</source>
          <target state="translated">T_U_SHORT se utiliza para el tipo &lt;code&gt;U16&lt;/code&gt; en el mapa de tipos est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="267d7ded4fb1f4fe830b757c69adcb120de3c36c" translate="yes" xml:space="preserve">
          <source>Table in hex, sorted in 1047 order</source>
          <target state="translated">Tabla en hexágono,ordenada en 1047</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">Índice</target>
        </trans-unit>
        <trans-unit id="f6f2ebfa1ea92516cffdbcabbc226ad6201fc14f" translate="yes" xml:space="preserve">
          <source>Tag Handling Utility Functions</source>
          <target state="translated">Funciones de la utilidad de manejo de etiquetas</target>
        </trans-unit>
        <trans-unit id="c4acb5d65a0f18ccc12ec4e74dc4599e0548b6c1" translate="yes" xml:space="preserve">
          <source>Tag that should prefix/identify the main text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6299767c14d608575e773d7c250b1dd1bef09f" translate="yes" xml:space="preserve">
          <source>Tags and names for human languages</source>
          <target state="translated">Etiquetas y nombres para los lenguajes humanos</target>
        </trans-unit>
        <trans-unit id="0caddaacf6ffdd3b4a1f2e6c28c9c60f84fe10e3" translate="yes" xml:space="preserve">
          <source>Tags for the Identification of Languages</source>
          <target state="translated">Etiquetas para la identificación de los idiomas</target>
        </trans-unit>
        <trans-unit id="3837bf859c22ab45640f5a47597c86d61ec1aac5" translate="yes" xml:space="preserve">
          <source>Tailoring is not maximum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd10fdbdba33897c84afb3ba431dd5441966417" translate="yes" xml:space="preserve">
          <source>Tailoring tags provided by &lt;code&gt;Unicode::Collate&lt;/code&gt; are allowed as long as they are not used for &lt;code&gt;locale&lt;/code&gt; support. Esp. the &lt;code&gt;table&lt;/code&gt; tag is always untailorable, since it is reserved for DUCET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a3c4882101734d96d5257d2a74ae5e78eaf3de" translate="yes" xml:space="preserve">
          <source>Taint Mode</source>
          <target state="translated">Modo de Mancha</target>
        </trans-unit>
        <trans-unit id="f63611c6fa286ffcd2142b28c1284de824194c00" translate="yes" xml:space="preserve">
          <source>Taint an SV. Use &lt;code&gt;SvTAINTED_on&lt;/code&gt; instead.</source>
          <target state="translated">Manchar un SV. Utilice &lt;code&gt;SvTAINTED_on&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="413e513edb03310442a1614d65a7d4ad85d457e0" translate="yes" xml:space="preserve">
          <source>Taint checking is most useful when although you trust yourself not to have written a program to give away the farm, you don't necessarily trust those who end up using it not to try to trick it into doing something bad. This is the kind of security checking that's useful for set-id programs and programs launched on someone else's behalf, like CGI programs.</source>
          <target state="translated">La comprobación de la contaminación es más útil cuando aunque confíes en ti mismo para no haber escrito un programa para regalar la granja,no necesariamente confías en aquellos que terminan usándolo para no tratar de engañarlo para hacer algo malo.Este es el tipo de control de seguridad que es útil para programas de identificación y programas lanzados en nombre de otra persona,como los programas CGI.</target>
        </trans-unit>
        <trans-unit id="88ab9771610a9a442e0329746e6647da7d9f316c" translate="yes" xml:space="preserve">
          <source>Taint mode</source>
          <target state="translated">El modo de contaminación...</target>
        </trans-unit>
        <trans-unit id="504eb6d55f3dd75624d53392fb2ec7ee299aa14f" translate="yes" xml:space="preserve">
          <source>Taint mode and @INC</source>
          <target state="translated">El modo de contaminación y el @INC</target>
        </trans-unit>
        <trans-unit id="ca7cdb9c133f6b8c9e0adf757dd404ca3a0059a6" translate="yes" xml:space="preserve">
          <source>Taint mode is a funny thing. It's the globalest of all global features. Once you turn it on, it affects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6624f88ac2856ed8ccebfe23a63eebf43e447bd" translate="yes" xml:space="preserve">
          <source>Tainting is also likely if the pattern is to be matched case-insensitively (via &lt;code&gt;/i&lt;/code&gt;). The exception is if all the code points to be matched this way are above 255 and do not have folds under Unicode rules to below 256. Tainting is not done for these because Perl only uses Unicode rules for such code points, and those rules are the same no matter what the current locale.</source>
          <target state="translated">La contaminaci&amp;oacute;n tambi&amp;eacute;n es probable si el patr&amp;oacute;n debe coincidir sin distinci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas (a trav&amp;eacute;s de &lt;code&gt;/i&lt;/code&gt; ). La excepci&amp;oacute;n es si todos los puntos de c&amp;oacute;digo que deben coincidir de esta manera est&amp;aacute;n por encima de 255 y no tienen pliegues bajo las reglas Unicode por debajo de 256. No se realiza la contaminaci&amp;oacute;n para estos porque Perl solo usa reglas Unicode para dichos puntos de c&amp;oacute;digo, y esas reglas son las lo mismo sin importar cu&amp;aacute;l sea la ubicaci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="b1e437790166193a4c207aa58d0fb3a4d2a31ed7" translate="yes" xml:space="preserve">
          <source>Taints an SV if tainting is enabled, and if some input to the current expression is tainted--usually a variable, but possibly also implicit inputs such as locale settings. &lt;code&gt;SvTAINT&lt;/code&gt; propagates that taintedness to the outputs of an expression in a pessimistic fashion; i.e., without paying attention to precisely which outputs are influenced by which inputs.</source>
          <target state="translated">Mancha un SV si la contaminaci&amp;oacute;n est&amp;aacute; habilitada, y si alguna entrada a la expresi&amp;oacute;n actual est&amp;aacute; contaminada, generalmente una variable, pero posiblemente tambi&amp;eacute;n entradas impl&amp;iacute;citas como la configuraci&amp;oacute;n regional. &lt;code&gt;SvTAINT&lt;/code&gt; propaga esa contaminaci&amp;oacute;n a las salidas de una expresi&amp;oacute;n de una manera pesimista; es decir, sin prestar atenci&amp;oacute;n precisamente a qu&amp;eacute; salidas est&amp;aacute;n influenciadas por qu&amp;eacute; entradas.</target>
        </trans-unit>
        <trans-unit id="094d515b3608fefc6759a36412cee467437417a5" translate="yes" xml:space="preserve">
          <source>Taiwan</source>
          <target state="translated">Taiwan</target>
        </trans-unit>
        <trans-unit id="750e96a06b9d3c66d6ca7a66a25a581164f0d409" translate="yes" xml:space="preserve">
          <source>Taiwan-based Chinese Encodings</source>
          <target state="translated">Codificaciones chinas con base en Taiwán</target>
        </trans-unit>
        <trans-unit id="721a6538b5b10ed9a1dc1b3ba2e846c06156cf4e" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;#Good-Practices&quot;&gt;&quot;Good Practices&quot;&lt;/a&gt; for some variants you will like to use in modern Perl code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5b403505c94cab4e9f224e4af932dc5aa9d4c7" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;#Good-Practices&quot;&gt;Good Practices&lt;/a&gt; for some variants you will like to use in modern Perl code.</source>
          <target state="translated">Eche un vistazo a las &lt;a href=&quot;#Good-Practices&quot;&gt;buenas pr&amp;aacute;cticas&lt;/a&gt; para ver algunas variantes que le gustar&amp;iacute;a usar en el c&amp;oacute;digo Perl moderno.</target>
        </trans-unit>
        <trans-unit id="ce0dca464ee27d4966793e761a9ad0e74805bf7a" translate="yes" xml:space="preserve">
          <source>Take a look at the line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faa440c7d98bab2d9d32df3b6d3a1c7c9671be2" translate="yes" xml:space="preserve">
          <source>Take a sprintf-style format pattern and argument list. These are used to generate a string message. If the message does not end with a newline, then it will be extended with some indication of the current location in the code, as described for &lt;a href=&quot;#mess_sv&quot;&gt;&quot;mess_sv&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2b74024aba36db1a23fa804fd1c560d6088d9a" translate="yes" xml:space="preserve">
          <source>Take a sprintf-style format pattern and argument list. These are used to generate a string message. If the message does not end with a newline, then it will be extended with some indication of the current location in the code, as described for &lt;a href=&quot;#mess_sv&quot;&gt;mess_sv&lt;/a&gt;.</source>
          <target state="translated">Tome un patr&amp;oacute;n de formato de estilo sprintf y una lista de argumentos. Se utilizan para generar un mensaje de cadena. Si el mensaje no termina con una nueva l&amp;iacute;nea, se extender&amp;aacute; con alguna indicaci&amp;oacute;n de la ubicaci&amp;oacute;n actual en el c&amp;oacute;digo, como se describe para &lt;a href=&quot;#mess_sv&quot;&gt;mess_sv&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb04817116fcc4f36afb8949c5edb0a2147a3489" translate="yes" xml:space="preserve">
          <source>Take care when changing a released module.</source>
          <target state="translated">Tenga cuidado cuando cambie un módulo liberado.</target>
        </trans-unit>
        <trans-unit id="fcbbed68b647be19cced53ca66bc41d5fb7b63bd" translate="yes" xml:space="preserve">
          <source>Take care when using this function simply as a truth test (such as in &lt;code&gt;&lt;a href=&quot;../functions/if&quot;&gt;if&lt;/a&gt;(blessed $ref)...&lt;/code&gt; ) because the package name &lt;code&gt;&quot;0&quot;&lt;/code&gt; is defined yet false.</source>
          <target state="translated">Tenga cuidado al usar esta funci&amp;oacute;n simplemente como una prueba de verdad (como en &lt;code&gt;&lt;a href=&quot;../functions/if&quot;&gt;if&lt;/a&gt;(blessed $ref)...&lt;/code&gt; ) porque el nombre del paquete &lt;code&gt;&quot;0&quot;&lt;/code&gt; est&amp;aacute; definido pero es falso.</target>
        </trans-unit>
        <trans-unit id="ef3657e7016525093062a8f4afb4bc9e87224179" translate="yes" xml:space="preserve">
          <source>Take care when using this function simply as a truth test (such as in &lt;code&gt;if(blessed $ref)...&lt;/code&gt;) because the package name &lt;code&gt;&quot;0&quot;&lt;/code&gt; is defined yet false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c196051206e9d1dadde68b1305cdecd7c48024" translate="yes" xml:space="preserve">
          <source>Take the example case of trying to split a string that is comma-separated into its different fields. You can't use &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split(/,/)&lt;/a&gt;&lt;/code&gt; because you shouldn't split if the comma is inside quotes. For example, take a data line like this:</source>
          <target state="translated">Tomemos el caso de ejemplo de intentar dividir una cadena separada por comas en sus diferentes campos. No puede usar &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split(/,/)&lt;/a&gt;&lt;/code&gt; porque no debe dividir si la coma est&amp;aacute; entre comillas. Por ejemplo, tome una l&amp;iacute;nea de datos como esta:</target>
        </trans-unit>
        <trans-unit id="5ea9de05e3ee1ea164412af8fdd54572b6cc0c61" translate="yes" xml:space="preserve">
          <source>Take the example case of trying to split a string that is comma-separated into its different fields. You can't use &lt;code&gt;split(/,/)&lt;/code&gt; because you shouldn't split if the comma is inside quotes. For example, take a data line like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4471e2b4acce8ca9f0f3bc156ed9ea2897b12f89" translate="yes" xml:space="preserve">
          <source>Take the opportunity to reconsider and redesign the interfaces.</source>
          <target state="translated">Aprovechen la oportunidad para reconsiderar y rediseñar las interfaces.</target>
        </trans-unit>
        <trans-unit id="38337f43effe3e61774eb1d00c750689a8d079b1" translate="yes" xml:space="preserve">
          <source>Taken all together, XS code to hook an op checker should typically look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9469ecd951c6dfc6bb0697f6f2439dea0638b6" translate="yes" xml:space="preserve">
          <source>Taken all together, XS code to install a keyword plugin should typically look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891afd1ff7caaa23526c0cd4250f4fb5063fe719" translate="yes" xml:space="preserve">
          <source>Taken together, these features go a long way towards making Perl's regular expressions more readable. Here's an example:</source>
          <target state="translated">En conjunto,estos rasgos contribuyen en gran medida a hacer más legibles las expresiones regulares de Perl.Aquí hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="4a4ea905801094be1d9ff65acd694844f81d1d62" translate="yes" xml:space="preserve">
          <source>Takes STRING and replaces all referenced environment variable names with their defined values. References to environment variables take the form &lt;code&gt;%VariableName%&lt;/code&gt;. Case is ignored when looking up the VariableName in the environment. If the variable is not found then the original &lt;code&gt;%VariableName%&lt;/code&gt; text is retained. Has the same effect as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4622f933170417209394d51b607728c20fb64f4" translate="yes" xml:space="preserve">
          <source>Takes a &lt;code&gt;sockaddr_in6&lt;/code&gt; structure. Returns a list of four elements: the port number, an opaque string representing the IPv6 address, the scope ID, and the flow label. (You can use inet_ntop() to convert the address to the usual string format). Will croak if the structure does not represent an &lt;code&gt;AF_INET6&lt;/code&gt; address.</source>
          <target state="translated">Toma una estructura &lt;code&gt;sockaddr_in6&lt;/code&gt; . Devuelve una lista de cuatro elementos: el n&amp;uacute;mero de puerto, una cadena opaca que representa la direcci&amp;oacute;n IPv6, el ID de alcance y la etiqueta de flujo. (Puede usar inet_ntop () para convertir la direcci&amp;oacute;n al formato de cadena habitual). Croar&amp;aacute; si la estructura no representa una direcci&amp;oacute;n &lt;code&gt;AF_INET6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ffd8f37fe17f4475f9ac3335803a5668dd9a5a9" translate="yes" xml:space="preserve">
          <source>Takes a &lt;code&gt;sockaddr_in&lt;/code&gt; structure (as returned by pack_sockaddr_in(), getpeername() or recv()). Returns a list of two elements: the port and an opaque string representing the IP address (you can use inet_ntoa() to convert the address to the four-dotted numeric format). Will croak if the structure does not represent an &lt;code&gt;AF_INET&lt;/code&gt; address.</source>
          <target state="translated">Toma una &lt;code&gt;sockaddr_in&lt;/code&gt; estructura (devuelto por pack_sockaddr_in (), getpeername () o recv ()). Devuelve una lista de dos elementos: el puerto y una cadena opaca que representa la direcci&amp;oacute;n IP (puede usar inet_ntoa () para convertir la direcci&amp;oacute;n al formato num&amp;eacute;rico de cuatro puntos). Croar&amp;aacute; si la estructura no representa una direcci&amp;oacute;n &lt;code&gt;AF_INET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d55a321d267dd95843d2a82446b8e074d9b4482" translate="yes" xml:space="preserve">
          <source>Takes a &lt;code&gt;sockaddr_un&lt;/code&gt; structure (as returned by pack_sockaddr_un(), getpeername() or recv()). Returns a list of one element: the pathname. Will croak if the structure does not represent an &lt;code&gt;AF_UNIX&lt;/code&gt; address.</source>
          <target state="translated">Toma una &lt;code&gt;sockaddr_un&lt;/code&gt; estructura (devuelto por pack_sockaddr_un (), getpeername () o recv ()). Devuelve una lista de un elemento: el nombre de la ruta. Croar&amp;aacute; si la estructura no representa una direcci&amp;oacute;n &lt;code&gt;AF_UNIX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b39b8aaa0796e13f2d536ba4ee5000dfd3368b8e" translate="yes" xml:space="preserve">
          <source>Takes a LIST of values and converts it into a string using the rules given by the TEMPLATE. The resulting string is the concatenation of the converted values. Typically, each converted value looks like its machine-level representation. For example, on 32-bit machines an integer may be represented by a sequence of 4 bytes, which will in Perl be presented as a string that's 4 characters long.</source>
          <target state="translated">Toma una LISTA de valores y la convierte en una cadena usando las reglas dadas por el PLANTILLA.La cadena resultante es la concatenación de los valores convertidos.Típicamente,cada valor convertido se parece a su representación a nivel de máquina.Por ejemplo,en las máquinas de 32 bits un entero puede ser representado por una secuencia de 4 bytes,que en Perl se presentará como una cadena de 4 caracteres de longitud.</target>
        </trans-unit>
        <trans-unit id="5d9e5ca84b2f91280b89e01ed94d448f6437f46f" translate="yes" xml:space="preserve">
          <source>Takes a Perl file handle [like &lt;code&gt;STDIN&lt;/code&gt;] and returns the Win32 native file handle associated with it. See &lt;code&gt;FdGetOsFHandle&lt;/code&gt; for more information about Win32 native file handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5777f296cd09b6af58dac04faade91e80e2f742c" translate="yes" xml:space="preserve">
          <source>Takes a UTILITY name as an argument, returns the first perl version by release date where that utility was removed from core. Returns undef if the given utility was never in core or remains in core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7b238435e86c0619ef99b46a51606dfb01c0fc" translate="yes" xml:space="preserve">
          <source>Takes a UTILITY name as an argument, returns the first perl version where that utility was removed from core. Returns undef if the given utility was never in core or remains in core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a15df0cc84f3e918f628b048394d65bbdcbb8c8" translate="yes" xml:space="preserve">
          <source>Takes a Win32 native file handle and returns a &lt;code&gt;FILE_TYPE_*&lt;/code&gt; constant indicating the type of the file opened on that handle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bea2fb93e96bf3299efd7e7cc45533fa8e0d5df" translate="yes" xml:space="preserve">
          <source>Takes a destination path and an optional base path and returns a relative path from the base path to the destination path:</source>
          <target state="translated">Toma un camino de destino y un camino base opcional y devuelve un camino relativo desde el camino base hasta el camino de destino:</target>
        </trans-unit>
        <trans-unit id="95774c404168139c6e80f1611020974553158f89" translate="yes" xml:space="preserve">
          <source>Takes a destination path and an optional base path returns a relative path from the base path to the destination path:</source>
          <target state="translated">Toma un camino de destino y un camino base opcional devuelve un camino relativo desde el camino base hasta el camino de destino:</target>
        </trans-unit>
        <trans-unit id="d94b0d11d4ec10ac5d773f5e69a50730359dca25" translate="yes" xml:space="preserve">
          <source>Takes a filename, a scalar full of data and optionally a reference to a hash with specific options.</source>
          <target state="translated">Toma un nombre de archivo,un escalar lleno de datos y opcionalmente una referencia a un hash con opciones específicas.</target>
        </trans-unit>
        <trans-unit id="ef9cdc80b0d99b082834a1fbb8d5a11a97402e97" translate="yes" xml:space="preserve">
          <source>Takes a list of capabilities as an argument and will croak if one is not found.</source>
          <target state="translated">Toma una lista de capacidades como argumento y se morirá si no se encuentra una.</target>
        </trans-unit>
        <trans-unit id="2eadd3f3ba856c4409ed2499d0a3d0b488f0dfce" translate="yes" xml:space="preserve">
          <source>Takes a list of filenames and adds them to the in-memory archive.</source>
          <target state="translated">Toma una lista de nombres de archivos y los añade al archivo en memoria.</target>
        </trans-unit>
        <trans-unit id="f1b41457fa3731d32047968d9b9c24bbf39e5764" translate="yes" xml:space="preserve">
          <source>Takes a module name as an argument, returns the first perl version by release date where that module was removed from core. Returns undef if the given module was never in core or remains in core.</source>
          <target state="translated">Toma un nombre de módulo como argumento,devuelve la primera versión de perl por la fecha de lanzamiento donde ese módulo fue eliminado del núcleo.Devuelve undef si el módulo dado nunca estuvo en el núcleo o permanece en el núcleo.</target>
        </trans-unit>
        <trans-unit id="f46e15336d9744fdb143311ac69c4190fa941309" translate="yes" xml:space="preserve">
          <source>Takes a module name as an argument, returns the first perl version where that module was removed from core. Returns undef if the given module was never in core or remains in core.</source>
          <target state="translated">Toma un nombre de módulo como argumento,devuelve la primera versión de perl donde ese módulo fue eliminado del núcleo.Devuelve undef si el módulo dado nunca estuvo en el núcleo o permanece en el núcleo.</target>
        </trans-unit>
        <trans-unit id="b0cf83e512f827739a6bf491886eab3446e0a621" translate="yes" xml:space="preserve">
          <source>Takes a number, the value of the array base $[. Cannot be non-zero on Perl 5.15.3 or later.</source>
          <target state="translated">Toma un número,el valor de la base de la matriz $[.No puede ser distinto de cero en Perl 5.15.3 o posterior.</target>
        </trans-unit>
        <trans-unit id="3cab02ff3e969b64dc6518292e8f9492855489a1" translate="yes" xml:space="preserve">
          <source>Takes a number, the value of the array base $[. Obsolete: cannot be non-zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4a8a89e95ecb8b9eb4bb3b63296961b32f06d1" translate="yes" xml:space="preserve">
          <source>Takes a numeric mode to apply to each created directory (not modified by the current &lt;code&gt;umask&lt;/code&gt;). If the directory already exists (and thus does not need to be created), the permissions will not be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5735d53ded3f64fc817f32e6801f9c3332c8c742" translate="yes" xml:space="preserve">
          <source>Takes a packed binary address structure such as returned by unpack_sockaddr_in() (or a v-string representing the four octets of the IPv4 address in network order) and translates it into a string of the form &lt;code&gt;d.d.d.d&lt;/code&gt; where the &lt;code&gt;d&lt;/code&gt; s are numbers less than 256 (the normal human-readable four dotted number notation for Internet addresses).</source>
          <target state="translated">Toma una estructura de direcci&amp;oacute;n binaria empaquetada como la que devuelve unpack_sockaddr_in () (o una cadena v que representa los cuatro octetos de la direcci&amp;oacute;n IPv4 en orden de red) y la traduce a una cadena de la forma &lt;code&gt;d.d.d.d&lt;/code&gt; donde &lt;code&gt;d&lt;/code&gt; s son n&amp;uacute;meros menores que 256 (la notaci&amp;oacute;n normal de cuatro n&amp;uacute;meros de puntos legible por humanos para direcciones de Internet).</target>
        </trans-unit>
        <trans-unit id="85cecd3a3130634b28d9c069ebd221905ff6684f" translate="yes" xml:space="preserve">
          <source>Takes a packed binary address structure such as returned by unpack_sockaddr_in() (or a v-string representing the four octets of the IPv4 address in network order) and translates it into a string of the form &lt;code&gt;d.d.d.d&lt;/code&gt; where the &lt;code&gt;d&lt;/code&gt;s are numbers less than 256 (the normal human-readable four dotted number notation for Internet addresses).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2abe4e916de97dcbd3a2d8761e95258307eb47" translate="yes" xml:space="preserve">
          <source>Takes a packed socket address (as returned by pack_sockaddr_in(), pack_sockaddr_un() or the perl builtin functions getsockname() and getpeername()). Returns the address family tag. This will be one of the &lt;code&gt;AF_*&lt;/code&gt; constants, such as &lt;code&gt;AF_INET&lt;/code&gt; for a &lt;code&gt;sockaddr_in&lt;/code&gt; addresses or &lt;code&gt;AF_UNIX&lt;/code&gt; for a &lt;code&gt;sockaddr_un&lt;/code&gt; . It can be used to figure out what unpack to use for a sockaddr of unknown type.</source>
          <target state="translated">Toma una direcci&amp;oacute;n de socket empaquetada (como la devuelven pack_sockaddr_in (), pack_sockaddr_un () o las funciones integradas de perl getsockname () y getpeername ()). Devuelve la etiqueta de la familia de direcciones. Este ser&amp;aacute; uno de los &lt;code&gt;AF_*&lt;/code&gt; constantes, tales como &lt;code&gt;AF_INET&lt;/code&gt; para un &lt;code&gt;sockaddr_in&lt;/code&gt; direcciones o &lt;code&gt;AF_UNIX&lt;/code&gt; para un &lt;code&gt;sockaddr_un&lt;/code&gt; . Se puede usar para averiguar qu&amp;eacute; desempaquetado usar para un sockaddr de tipo desconocido.</target>
        </trans-unit>
        <trans-unit id="00add5c8a4a149ed8051f75aa539f8eec919c737" translate="yes" xml:space="preserve">
          <source>Takes a packed socket address (as returned by pack_sockaddr_in(), pack_sockaddr_un() or the perl builtin functions getsockname() and getpeername()). Returns the address family tag. This will be one of the &lt;code&gt;AF_*&lt;/code&gt; constants, such as &lt;code&gt;AF_INET&lt;/code&gt; for a &lt;code&gt;sockaddr_in&lt;/code&gt; addresses or &lt;code&gt;AF_UNIX&lt;/code&gt; for a &lt;code&gt;sockaddr_un&lt;/code&gt;. It can be used to figure out what unpack to use for a sockaddr of unknown type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace3db72b47fd10c721426b5e390e2e0c6f992fc" translate="yes" xml:space="preserve">
          <source>Takes a partition type and returns whether that partition is a &quot;container&quot; partition that is supported under Win32, that is, whether it is an &quot;extended&quot; partition that can contain &quot;logical&quot; partitions. &lt;code&gt;$ivPartitonType&lt;/code&gt; is as for &lt;code&gt;IsRecognizedPartition&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d61f271c3866d065bf72b7810d6f1c5dfb4bf3f" translate="yes" xml:space="preserve">
          <source>Takes a partition type and returns whether that partition type is supported under Win32. &lt;code&gt;$ivPartitonType&lt;/code&gt; is an integer value as from the operating system byte of a hard disk's DOS-compatible partition table [that is, a partition table for x86-based Win32, not, for example, one used with Windows NT for Alpha processors]. For example, the &lt;code&gt;PartitionType&lt;/code&gt; member of the &lt;code&gt;PARTITION_INFORMATION&lt;/code&gt; structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fe4b00a1515bab6009cc465d438231923fa5fb" translate="yes" xml:space="preserve">
          <source>Takes a path string and returns an unsigned value with attribute flags. If it fails, it returns INVALID_FILE_ATTRIBUTES, otherwise it can be one or more of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13e8e801bfdc18ca93880299add6c6b51640d38" translate="yes" xml:space="preserve">
          <source>Takes a path to a file or dir and returns an empty string if we don't want to include this file in the library. Otherwise it returns the the $path unchanged.</source>
          <target state="translated">Toma una ruta a un archivo o dir y devuelve una cadena vacía si no queremos incluir este archivo en la biblioteca.De lo contrario,devuelve la ruta $ sin cambios.</target>
        </trans-unit>
        <trans-unit id="5857a3f9b8ca80529d602d68d365fa9061a89d78" translate="yes" xml:space="preserve">
          <source>Takes a perl version as an argument. Returns that perl version if it exists or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">Toma una versi&amp;oacute;n de Perl como argumento. Devuelve esa versi&amp;oacute;n de Perl si existe o no &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="3d9afb26d884d8b2dac4569e9ebf9cb1409e2dee" translate="yes" xml:space="preserve">
          <source>Takes a perl version as an argument. Upon successful completion, returns a reference to a hash. Each element of that hash has a key which is the name of a module (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ef5af0a7a23fbe908b8c6d6bfe7afebb158b73" translate="yes" xml:space="preserve">
          <source>Takes a quoted regular expression produced by &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, or a string representing a regular expression.</source>
          <target state="translated">Toma una expresi&amp;oacute;n regular entre comillas producida por &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; o una cadena que representa una expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="1da3bec748134b01442fc634b8967f8ffc71be4b" translate="yes" xml:space="preserve">
          <source>Takes a quoted regular expression produced by &lt;code&gt;qr//&lt;/code&gt;, or a string representing a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f021fc102096073a09c0f85c8e63b62bb7905ee" translate="yes" xml:space="preserve">
          <source>Takes a reference to any Perl value, and turns the referred-to value into an object in the appropriate B::OP-derived or B::SV-derived class. Apart from functions such as &lt;code&gt;main_root&lt;/code&gt; , this is the primary way to get an initial &quot;handle&quot; on an internal perl data structure which can then be followed with the other access methods.</source>
          <target state="translated">Toma una referencia a cualquier valor de Perl y convierte el valor al que se hace referencia en un objeto en la clase apropiada derivada de B :: OP o derivada de B :: SV. Aparte de funciones como &lt;code&gt;main_root&lt;/code&gt; , esta es la forma principal de obtener un &quot;identificador&quot; inicial en una estructura de datos interna de Perl que luego se puede seguir con los otros m&amp;eacute;todos de acceso.</target>
        </trans-unit>
        <trans-unit id="e9bcf1191796c7d482572c3d5fd8f112b75e9de7" translate="yes" xml:space="preserve">
          <source>Takes a reference to any Perl value, and turns the referred-to value into an object in the appropriate B::OP-derived or B::SV-derived class. Apart from functions such as &lt;code&gt;main_root&lt;/code&gt;, this is the primary way to get an initial &quot;handle&quot; on an internal perl data structure which can then be followed with the other access methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41f495e23e8b7129fbf9bc3a9bb6ededd8628d3" translate="yes" xml:space="preserve">
          <source>Takes a regex as an argument, returns a list of modules that match the regex given. If only a regex is provided applies to all modules in all perl versions. Optionally you may provide a list of perl versions to limit the regex search.</source>
          <target state="translated">Toma un regex como argumento,devuelve una lista de módulos que coinciden con el regex dado.Si sólo se proporciona una regex se aplica a todos los módulos en todas las versiones de perl.Opcionalmente se puede proporcionar una lista de versiones de perl para limitar la búsqueda de regex.</target>
        </trans-unit>
        <trans-unit id="4409b17c674e2781e58d19f638d2dce9b604b410" translate="yes" xml:space="preserve">
          <source>Takes a sprintf-style format pattern and conventional (non-SV) arguments and returns the formatted string.</source>
          <target state="translated">Toma un patrón de formato estilo sprint y argumentos convencionales (no SV)y devuelve la cadena formateada.</target>
        </trans-unit>
        <trans-unit id="33c7557687a090fd43bd56b07499b14fc80993e2" translate="yes" xml:space="preserve">
          <source>Takes a string giving the name of a host, or a textual representation of an IP address and translates that to an packed binary address structure suitable to pass to pack_sockaddr_in(). If passed a hostname that cannot be resolved, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. For multi-homed hosts (hosts with more than one address), the first address found is returned.</source>
          <target state="translated">Toma una cadena que da el nombre de un host, o una representaci&amp;oacute;n textual de una direcci&amp;oacute;n IP y la traduce a una estructura de direcci&amp;oacute;n binaria empaquetada adecuada para pasar a pack_sockaddr_in (). Si se le pasa un nombre de host que no se puede resolver, devuelve &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; . En el caso de los hosts de m&amp;uacute;ltiples hosts (hosts con m&amp;aacute;s de una direcci&amp;oacute;n), se devuelve la primera direcci&amp;oacute;n encontrada.</target>
        </trans-unit>
        <trans-unit id="a5e03d93715b3e17db35edf143d3a334a6aaebce" translate="yes" xml:space="preserve">
          <source>Takes a string giving the name of a host, or a textual representation of an IP address and translates that to an packed binary address structure suitable to pass to pack_sockaddr_in(). If passed a hostname that cannot be resolved, returns &lt;code&gt;undef&lt;/code&gt;. For multi-homed hosts (hosts with more than one address), the first address found is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223ad84fa206d265b475ea00fd86ad6d14a4bf08" translate="yes" xml:space="preserve">
          <source>Takes a string giving the path to the root directory of a file system [called a &quot;drive&quot; because every file system is assigned a &quot;drive letter&quot;] and returns an unsigned value indicating the type of drive the file system is on. The return value should be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f86839b95b2c7ce0cd8df0fd7189ee9fa362403" translate="yes" xml:space="preserve">
          <source>Takes a string, possibly containing a whitespace-separated list of values. The values &quot;all&quot; and &quot;none&quot; are special, again. It's also permissible to pass an array reference here.</source>
          <target state="translated">Toma una cadena,que posiblemente contenga una lista de valores separada por espacios en blanco.Los valores &quot;todos&quot; y &quot;ninguno&quot; son especiales,de nuevo.También se permite pasar una referencia de matriz aquí.</target>
        </trans-unit>
        <trans-unit id="4925dcea23e5ae74b5fce407317c9fa3709b6b25" translate="yes" xml:space="preserve">
          <source>Takes a string, possibly containing a whitespace-separated list of values. The values &quot;all&quot; and &quot;none&quot; are special. It's also permissible to pass an array reference here.</source>
          <target state="translated">Toma una cadena,que posiblemente contenga una lista de valores separada por espacios en blanco.Los valores &quot;todos&quot; y &quot;ninguno&quot; son especiales.También se permite pasar una referencia de matriz aquí.</target>
        </trans-unit>
        <trans-unit id="90662514b3c1c8b5cad150f77c448383f9911cee" translate="yes" xml:space="preserve">
          <source>Takes a string, possibly containing several values separated by whitespace. The special values &quot;all&quot; and &quot;none&quot; mean what you'd expect.</source>
          <target state="translated">Toma una cadena,posiblemente con varios valores separados por espacios en blanco.Los valores especiales &quot;todos&quot; y &quot;ninguno&quot; significan lo que se esperaría.</target>
        </trans-unit>
        <trans-unit id="8b8cbc4c6f861e88e0cc4c3970f3d7711c8f40ee" translate="yes" xml:space="preserve">
          <source>Takes an &lt;code&gt;ip_mreq&lt;/code&gt; structure. Returns a list of two elements; the IPv4 multicast address and interface address.</source>
          <target state="translated">Toma una estructura &lt;code&gt;ip_mreq&lt;/code&gt; . Devuelve una lista de dos elementos; la direcci&amp;oacute;n de multidifusi&amp;oacute;n IPv4 y la direcci&amp;oacute;n de interfaz.</target>
        </trans-unit>
        <trans-unit id="04696d2255aec363ebf123f1adcef127402d7fca" translate="yes" xml:space="preserve">
          <source>Takes an &lt;code&gt;ip_mreq_source&lt;/code&gt; structure. Returns a list of three elements; the IPv4 multicast address, source address and interface address.</source>
          <target state="translated">Toma una estructura &lt;code&gt;ip_mreq_source&lt;/code&gt; . Devuelve una lista de tres elementos; la direcci&amp;oacute;n de multidifusi&amp;oacute;n IPv4, la direcci&amp;oacute;n de origen y la direcci&amp;oacute;n de interfaz.</target>
        </trans-unit>
        <trans-unit id="8895fb55870fc5cb5b67d2b6b1ab10511fd087e6" translate="yes" xml:space="preserve">
          <source>Takes an &lt;code&gt;ipv6_mreq&lt;/code&gt; structure. Returns a list of two elements; the IPv6 address and an interface number.</source>
          <target state="translated">Toma una estructura &lt;code&gt;ipv6_mreq&lt;/code&gt; . Devuelve una lista de dos elementos; la direcci&amp;oacute;n IPv6 y un n&amp;uacute;mero de interfaz.</target>
        </trans-unit>
        <trans-unit id="ad12a7e2dccc21686af63739f893c4d2a53e4c04" translate="yes" xml:space="preserve">
          <source>Takes an IPv4 multicast address and optionally an interface address (or &lt;code&gt;INADDR_ANY&lt;/code&gt; ). Returns the &lt;code&gt;ip_mreq&lt;/code&gt; structure with those arguments packed in. Suitable for use with the &lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; and &lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; sockopts.</source>
          <target state="translated">Toma una direcci&amp;oacute;n de multidifusi&amp;oacute;n IPv4 y, opcionalmente, una direcci&amp;oacute;n de interfaz (o &lt;code&gt;INADDR_ANY&lt;/code&gt; ). Devuelve el &lt;code&gt;ip_mreq&lt;/code&gt; estructura con estos argumentos embalado en. Adecuado para uso con los &lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; y &lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; sockopts.</target>
        </trans-unit>
        <trans-unit id="daef79d0571cfe13a97a3c30841461dc9af70aa5" translate="yes" xml:space="preserve">
          <source>Takes an IPv4 multicast address and optionally an interface address (or &lt;code&gt;INADDR_ANY&lt;/code&gt;). Returns the &lt;code&gt;ip_mreq&lt;/code&gt; structure with those arguments packed in. Suitable for use with the &lt;code&gt;IP_ADD_MEMBERSHIP&lt;/code&gt; and &lt;code&gt;IP_DROP_MEMBERSHIP&lt;/code&gt; sockopts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80cd3ce1fd8acb10289fb4bd58c0849f55a8d71" translate="yes" xml:space="preserve">
          <source>Takes an IPv4 multicast address, source address, and optionally an interface address (or &lt;code&gt;INADDR_ANY&lt;/code&gt; ). Returns the &lt;code&gt;ip_mreq_source&lt;/code&gt; structure with those arguments packed in. Suitable for use with the &lt;code&gt;IP_ADD_SOURCE_MEMBERSHIP&lt;/code&gt; and &lt;code&gt;IP_DROP_SOURCE_MEMBERSHIP&lt;/code&gt; sockopts.</source>
          <target state="translated">Toma una direcci&amp;oacute;n de multidifusi&amp;oacute;n IPv4, una direcci&amp;oacute;n de origen y, opcionalmente, una direcci&amp;oacute;n de interfaz (o &lt;code&gt;INADDR_ANY&lt;/code&gt; ). Devuelve el &lt;code&gt;ip_mreq_source&lt;/code&gt; estructura con estos argumentos embalado en. Adecuado para uso con los &lt;code&gt;IP_ADD_SOURCE_MEMBERSHIP&lt;/code&gt; y &lt;code&gt;IP_DROP_SOURCE_MEMBERSHIP&lt;/code&gt; sockopts.</target>
        </trans-unit>
        <trans-unit id="0e03de7d098eab496f44ea7920e441314209dd86" translate="yes" xml:space="preserve">
          <source>Takes an IPv4 multicast address, source address, and optionally an interface address (or &lt;code&gt;INADDR_ANY&lt;/code&gt;). Returns the &lt;code&gt;ip_mreq_source&lt;/code&gt; structure with those arguments packed in. Suitable for use with the &lt;code&gt;IP_ADD_SOURCE_MEMBERSHIP&lt;/code&gt; and &lt;code&gt;IP_DROP_SOURCE_MEMBERSHIP&lt;/code&gt; sockopts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414f4fb4a3a1f32b47a120675c30046be162adca" translate="yes" xml:space="preserve">
          <source>Takes an IPv6 multicast address and an interface number. Returns the &lt;code&gt;ipv6_mreq&lt;/code&gt; structure with those arguments packed in. Suitable for use with the &lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; and &lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; sockopts.</source>
          <target state="translated">Toma una direcci&amp;oacute;n de multidifusi&amp;oacute;n IPv6 y un n&amp;uacute;mero de interfaz. Devuelve el &lt;code&gt;ipv6_mreq&lt;/code&gt; estructura con estos argumentos embalado en. Adecuado para uso con los &lt;code&gt;IPV6_ADD_MEMBERSHIP&lt;/code&gt; y &lt;code&gt;IPV6_DROP_MEMBERSHIP&lt;/code&gt; sockopts.</target>
        </trans-unit>
        <trans-unit id="84da4affe0802d1076fb7e8fa5b5ab6e38634ce8" translate="yes" xml:space="preserve">
          <source>Takes an address family (such as &lt;code&gt;AF_INET&lt;/code&gt; or &lt;code&gt;AF_INET6&lt;/code&gt; ) and a string containing a textual representation of an address in that family and translates that to an packed binary address structure.</source>
          <target state="translated">Toma una familia de direcciones (como &lt;code&gt;AF_INET&lt;/code&gt; o &lt;code&gt;AF_INET6&lt;/code&gt; ) y una cadena que contiene una representaci&amp;oacute;n textual de una direcci&amp;oacute;n en esa familia y la traduce a una estructura de direcci&amp;oacute;n binaria empaquetada.</target>
        </trans-unit>
        <trans-unit id="7c090993da78e7530e8d560d6312459708f8366d" translate="yes" xml:space="preserve">
          <source>Takes an address family (such as &lt;code&gt;AF_INET&lt;/code&gt; or &lt;code&gt;AF_INET6&lt;/code&gt;) and a string containing a textual representation of an address in that family and translates that to an packed binary address structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185fc4d2aaf4353f2b2708aa34a24508e0a971cd" translate="yes" xml:space="preserve">
          <source>Takes an address family and a packed binary address structure and translates it into a human-readable textual representation of the address; typically in &lt;code&gt;d.d.d.d&lt;/code&gt; form for &lt;code&gt;AF_INET&lt;/code&gt; or &lt;code&gt;hhhh:hhhh::hhhh&lt;/code&gt; form for &lt;code&gt;AF_INET6&lt;/code&gt; .</source>
          <target state="translated">Toma una familia de direcciones y una estructura de direcciones binarias empaquetadas y las traduce a una representaci&amp;oacute;n textual de la direcci&amp;oacute;n legible por humanos; normalmente en formato &lt;code&gt;d.d.d.d&lt;/code&gt; para &lt;code&gt;AF_INET&lt;/code&gt; o &lt;code&gt;hhhh:hhhh::hhhh&lt;/code&gt; forma &lt;code&gt;AF_INET6&lt;/code&gt; para AF_INET6 .</target>
        </trans-unit>
        <trans-unit id="67141b039613b21f893d0875c6a0c29a2e6abaca" translate="yes" xml:space="preserve">
          <source>Takes an address family and a packed binary address structure and translates it into a human-readable textual representation of the address; typically in &lt;code&gt;d.d.d.d&lt;/code&gt; form for &lt;code&gt;AF_INET&lt;/code&gt; or &lt;code&gt;hhhh:hhhh::hhhh&lt;/code&gt; form for &lt;code&gt;AF_INET6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e77ed8250b0ab9eed8ffd2c4c006ad06b6129f6" translate="yes" xml:space="preserve">
          <source>Takes an array of items and turns them into a well-formatted list of arguments. In most cases this is simply something like:</source>
          <target state="translated">Toma una serie de artículos y los convierte en una lista de argumentos bien formateados.En la mayoría de los casos esto es simplemente algo como:</target>
        </trans-unit>
        <trans-unit id="21d2a6e85e05ac293f43bf0aadd4c7b6d2f0e70c" translate="yes" xml:space="preserve">
          <source>Takes as argument a path and returns true if it is an absolute path.</source>
          <target state="translated">Toma como argumento un camino y vuelve verdadero si es un camino absoluto.</target>
        </trans-unit>
        <trans-unit id="6dc3e333ed2be58598d7c496ec3d73ebab444c2b" translate="yes" xml:space="preserve">
          <source>Takes as argument a path and returns true, if it is an absolute path. If the path has a leading &quot;:&quot;, it's a relative path. Otherwise, it's an absolute path, unless the path doesn't contain any colons, i.e. it's a name like &quot;a&quot;. In this particular case, the path is considered to be relative (i.e. it is considered to be a filename). Use &quot;:&quot; in the appropriate place in the path if you want to distinguish unambiguously. As a special case, the filename '' is always considered to be absolute. Note that with version 1.2 of File::Spec::Mac, this does no longer consult the local filesystem.</source>
          <target state="translated">Toma como argumento un camino y vuelve verdadero,si es un camino absoluto.Si el camino tiene un &quot;:&quot;,es un camino relativo.De lo contrario,es un camino absoluto,a menos que el camino no contenga ningún punto,es decir,es un nombre como &quot;a&quot;.En este caso particular,el sendero se considera relativo (es decir,se considera un nombre de archivo).Utilice &quot;:&quot; en el lugar apropiado del camino si quiere distinguir sin ambigüedades.Como caso especial,el nombre de archivo &quot;:&quot; se considera siempre absoluto.Tenga en cuenta que con la versión 1.2 de File::Spec::Mac,esto ya no consulta el sistema de archivos local.</target>
        </trans-unit>
        <trans-unit id="f927c21bb3e3c4ff729f953eef64006ef1f031a9" translate="yes" xml:space="preserve">
          <source>Takes as arguments a directory name and a regular expression. Returns all entries in the directory that match the regular expression.</source>
          <target state="translated">Toma como argumentos un nombre de directorio y una expresión regular.Devuelve todas las entradas del directorio que coincidan con la expresión regular.</target>
        </trans-unit>
        <trans-unit id="6047190e6cf9ba865c7d15a28d5823f107249805" translate="yes" xml:space="preserve">
          <source>Takes as its argument a path, and returns true if it is an absolute path.</source>
          <target state="translated">Toma como argumento un camino,y vuelve verdadero si es un camino absoluto.</target>
        </trans-unit>
        <trans-unit id="ff1dec49488d5f7d1892eedad0ad929bfc6263b5" translate="yes" xml:space="preserve">
          <source>Takes named parameters: If &lt;code&gt;shallow&lt;/code&gt; is true, the clone will share the actual individual type/input/outputmap objects, but not share their storage. Use with caution. Without &lt;code&gt;shallow&lt;/code&gt;, the clone will be fully independent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d3a8d482e59f44bd119209a124f4322f931d36" translate="yes" xml:space="preserve">
          <source>Takes no argument, returns the environment variable PATH as an array.</source>
          <target state="translated">No hay discusión,devuelve la variable de entorno PATH como una matriz.</target>
        </trans-unit>
        <trans-unit id="fabbbd7a986855e1324a147a7f7a2a0ae979a9a1" translate="yes" xml:space="preserve">
          <source>Takes no argument. Returns the environment variable &lt;code&gt;PATH&lt;/code&gt; (or the local platform's equivalent) as a list.</source>
          <target state="translated">No tiene discusi&amp;oacute;n. Devuelve la variable de entorno &lt;code&gt;PATH&lt;/code&gt; (o el equivalente de la plataforma local) como una lista.</target>
        </trans-unit>
        <trans-unit id="904758c12da1c3cf57f2a62e3976ec89f757603e" translate="yes" xml:space="preserve">
          <source>Takes one argument ( 'stdin' | 'stdout' | 'stderr' ) and returns true if the IoIFP of the object is equal to the handle whose name was passed as argument; i.e., $io-&amp;gt;IsSTD('stderr') is true if IoIFP($io) == PerlIO_stderr().</source>
          <target state="translated">Toma un argumento ('stdin' | 'stdout' | 'stderr') y devuelve verdadero si el IoIFP del objeto es igual al identificador cuyo nombre se pas&amp;oacute; como argumento; es decir, $ io-&amp;gt; IsSTD ('stderr') es verdadero si IoIFP ($ io) == PerlIO_stderr ().</target>
        </trans-unit>
        <trans-unit id="2250c086cb14652296208baa0752736a068d5cdd" translate="yes" xml:space="preserve">
          <source>Takes one argument, a file name, and returns the file name, if the argument is likely to be a perl script. On MM_Unix this is true for any ordinary, readable file.</source>
          <target state="translated">Toma un argumento,un nombre de archivo,y devuelve el nombre del archivo,si el argumento es probable que sea un guión de perl.En MM_Unix esto es cierto para cualquier archivo ordinario y legible.</target>
        </trans-unit>
        <trans-unit id="b67ed86e7a795bece24f2642cf574b99635c4b90" translate="yes" xml:space="preserve">
          <source>Takes one argument, a pathname. Returns the &lt;code&gt;sockaddr_un&lt;/code&gt; structure with that path packed in with &lt;code&gt;AF_UNIX&lt;/code&gt; filled in. For &lt;code&gt;PF_UNIX&lt;/code&gt; sockets, this structure is normally what you need for the arguments in bind(), connect(), and send().</source>
          <target state="translated">Toma un argumento, un nombre de ruta. Devuelve la estructura &lt;code&gt;sockaddr_un&lt;/code&gt; con esa ruta empaquetada con &lt;code&gt;AF_UNIX&lt;/code&gt; completado. Para los sockets &lt;code&gt;PF_UNIX&lt;/code&gt; , esta estructura es normalmente lo que necesita para los argumentos en bind (), connect () y send ().</target>
        </trans-unit>
        <trans-unit id="5460ec5112334feb4ac9398f4b8e6e656f42cd55" translate="yes" xml:space="preserve">
          <source>Takes one argument: &lt;code&gt;$type&lt;/code&gt; . Returns the class for this $type, or &lt;code&gt;croak&lt;/code&gt; s with an error.</source>
          <target state="translated">Toma un argumento: &lt;code&gt;$type&lt;/code&gt; . Devuelve la clase para este tipo $, o &lt;code&gt;croak&lt;/code&gt; s con un error.</target>
        </trans-unit>
        <trans-unit id="f924ea1eb572a2d6d41c219191b1f7ad36177be9" translate="yes" xml:space="preserve">
          <source>Takes one argument: &lt;code&gt;$type&lt;/code&gt;. Returns the class for this $type, or &lt;code&gt;croak&lt;/code&gt;s with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16af72bfdf1441df18765f4029d283a1f7f95693" translate="yes" xml:space="preserve">
          <source>Takes the name of a package, which may be a nested package, in the form 'Foo/Bar.pm' and replaces the slash with &lt;code&gt;::&lt;/code&gt; or something else safe for a man page file name. Returns the replacement.</source>
          <target state="translated">Toma el nombre de un paquete, que puede ser un paquete anidado, en la forma 'Foo / Bar.pm' y reemplaza la barra con &lt;code&gt;::&lt;/code&gt; o algo m&amp;aacute;s seguro para un nombre de archivo de p&amp;aacute;gina de manual. Devuelve el reemplazo.</target>
        </trans-unit>
        <trans-unit id="778216c494c51654f317b1afb524185f02d3ff50" translate="yes" xml:space="preserve">
          <source>Takes the necessary steps (cache invalidations, mostly) when the &lt;code&gt;@ISA&lt;/code&gt; of the given package has changed. Invoked by the &lt;code&gt;setisa&lt;/code&gt; magic, should not need to invoke directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0d6765017f7f35ad28bb62529040cd32d236cb" translate="yes" xml:space="preserve">
          <source>Takes the necessary steps (cache invalidations, mostly) when the @ISA of the given package has changed. Invoked by the &lt;code&gt;setisa&lt;/code&gt; magic, should not need to invoke directly.</source>
          <target state="translated">Toma los pasos necesarios (invalidaciones de cach&amp;eacute;, principalmente) cuando el @ISA del paquete dado ha cambiado. Invocado por la magia &lt;code&gt;setisa&lt;/code&gt; , no deber&amp;iacute;a ser necesario invocarlo directamente.</target>
        </trans-unit>
        <trans-unit id="1b306490f4adab44f2505affe31e89e35e98c934" translate="yes" xml:space="preserve">
          <source>Takes the object file as an argument, and returns the portion of compile command-line that will output to the specified object file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98237f7a990bc1f6af918e56a3b7b9f24407d459" translate="yes" xml:space="preserve">
          <source>Takes two arguments, a port number and an opaque string (as returned by inet_aton(), or a v-string). Returns the &lt;code&gt;sockaddr_in&lt;/code&gt; structure with those arguments packed in and &lt;code&gt;AF_INET&lt;/code&gt; filled in. For Internet domain sockets, this structure is normally what you need for the arguments in bind(), connect(), and send().</source>
          <target state="translated">Toma dos argumentos, un n&amp;uacute;mero de puerto y una cadena opaca (como lo devuelve inet_aton () o una cadena v). Devuelve la estructura &lt;code&gt;sockaddr_in&lt;/code&gt; con esos argumentos empaquetados y &lt;code&gt;AF_INET&lt;/code&gt; completado. Para sockets de dominio de Internet, esta estructura es normalmente lo que necesita para los argumentos en bind (), connect () y send ().</target>
        </trans-unit>
        <trans-unit id="b14fed1e8f7026c1b53ef7c0d55d1e273446b0ea" translate="yes" xml:space="preserve">
          <source>Takes two arguments: &lt;code&gt;$type&lt;/code&gt; , &lt;code&gt;$class&lt;/code&gt;</source>
          <target state="translated">Toma dos argumentos: &lt;code&gt;$type&lt;/code&gt; , &lt;code&gt;$class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55ed19e4eb2d24e5b863b8b237b5077e73ee7f56" translate="yes" xml:space="preserve">
          <source>Takes two arguments: &lt;code&gt;$type&lt;/code&gt;, &lt;code&gt;$class&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9f99285830e8621999fc816f54c6c6183fd552" translate="yes" xml:space="preserve">
          <source>Takes two to four arguments, a port number, an opaque string (as returned by inet_pton()), optionally a scope ID number, and optionally a flow label number. Returns the &lt;code&gt;sockaddr_in6&lt;/code&gt; structure with those arguments packed in and &lt;code&gt;AF_INET6&lt;/code&gt; filled in. IPv6 equivalent of pack_sockaddr_in().</source>
          <target state="translated">Toma de dos a cuatro argumentos, un n&amp;uacute;mero de puerto, una cadena opaca (como la devuelve inet_pton ()), opcionalmente un n&amp;uacute;mero de identificaci&amp;oacute;n de alcance y opcionalmente un n&amp;uacute;mero de etiqueta de flujo. Devuelve la estructura &lt;code&gt;sockaddr_in6&lt;/code&gt; con esos argumentos empaquetados y &lt;code&gt;AF_INET6&lt;/code&gt; completado. IPv6 equivalente a pack_sockaddr_in ().</target>
        </trans-unit>
        <trans-unit id="6768416e6b2dea0b5b355ce619b2d42c6c2f27cf" translate="yes" xml:space="preserve">
          <source>Takes volume, directory and file portions and returns an entire path. On Mac OS, $volume, $directory and $file are concatenated. A ':' is inserted if need be. You may pass an empty string for each portion. If all portions are empty, the empty string is returned. If $volume is empty, the result will be a relative path, beginning with a ':'. If $volume and $directory are empty, a leading &quot;:&quot; (if any) is removed form $file and the remainder is returned. If $file is empty, the resulting path will have a trailing ':'.</source>
          <target state="translated">Toma porciones de volumen,directorio y archivo y devuelve una ruta completa.En Mac OS,$volumen,$directorio y $archivo están concatenados.Se inserta un ':' si es necesario.Puedes pasar una cadena vacía para cada porción.Si todas las porciones están vacías,la cadena vacía es devuelta.Si $volumen está vacío,el resultado será un camino relativo,comenzando con un ':'.Si $volumen y $directorio están vacíos,se elimina un &quot;:&quot; (si existe)de $archivo y se devuelve el resto.Si $fichero está vacío,la ruta resultante tendrá un &quot;:&quot; final.</target>
        </trans-unit>
        <trans-unit id="03fb347623243a59c8c7215b498a631b05381519" translate="yes" xml:space="preserve">
          <source>Takes volume, directory and file portions and returns an entire path. Under Unix, $volume is ignored, and directory and file are concatenated. A '/' is inserted if needed (though if the directory portion doesn't start with '/' it is not added). On other OSs, $volume is significant.</source>
          <target state="translated">Toma porciones de volumen,directorio y archivo y devuelve una ruta completa.En Unix,$volumen es ignorado,y directorio y archivo son concatenados.Se inserta un '/' si es necesario (aunque si la porción de directorio no comienza con '/' no se agrega).En otros sistemas operativos,$volumen es significativo.</target>
        </trans-unit>
        <trans-unit id="9945bfbc052c2b04dca187c3550c5f1feee8878d" translate="yes" xml:space="preserve">
          <source>Takes volume, directory and file portions and returns an entire path. Under Unix, $volume is ignored, and this is just like catfile(). On other OSs, the $volume become significant.</source>
          <target state="translated">Toma porciones de volumen,directorio y archivo y devuelve una ruta completa.En Unix,$volumen es ignorado,y esto es como catfile().En otros sistemas operativos,el $volumen se vuelve significativo.</target>
        </trans-unit>
        <trans-unit id="972a64a368ed52f92018a4453bba5f6c8e73cecd" translate="yes" xml:space="preserve">
          <source>Takes volume, directory and file portions and returns an entire path. Under Unix, &lt;code&gt;$volume&lt;/code&gt; is ignored, and directory and file are concatenated. A '/' is inserted if need be. On other OSes, &lt;code&gt;$volume&lt;/code&gt; is significant.</source>
          <target state="translated">Toma porciones de volumen, directorio y archivo y devuelve una ruta completa. En Unix, &lt;code&gt;$volume&lt;/code&gt; se ignora y el directorio y el archivo se concatenan. Se inserta una '/' si es necesario. En otros sistemas operativos, &lt;code&gt;$volume&lt;/code&gt; es significativo.</target>
        </trans-unit>
        <trans-unit id="510dd54f6700e32b2e33a7ae6bf0b69436048e78" translate="yes" xml:space="preserve">
          <source>Taking a pattern, usually a &lt;b&gt;regular expression&lt;/b&gt;, and trying the pattern various ways on a string to see whether there&amp;rsquo;s any way to make it fit. Often used to pick interesting tidbits out of a file.</source>
          <target state="translated">Tomando un patr&amp;oacute;n, generalmente una &lt;b&gt;expresi&amp;oacute;n regular&lt;/b&gt; , y probando el patr&amp;oacute;n de varias formas en una cadena para ver si hay alguna forma de hacer que encaje. A menudo se utiliza para seleccionar datos interesantes de un archivo.</target>
        </trans-unit>
        <trans-unit id="71bab857be3a2f057d5a14d3b22be3dc59b9b4df" translate="yes" xml:space="preserve">
          <source>Taking a reference to an enumerated list is not the same as using square brackets--instead it's the same as creating a list of references!</source>
          <target state="translated">Tomar una referencia a una lista enumerada no es lo mismo que usar corchetes...¡en cambio es lo mismo que crear una lista de referencias!</target>
        </trans-unit>
        <trans-unit id="15f9cd429dc93becd860c5d004ae9bccaf0f7bef" translate="yes" xml:space="preserve">
          <source>Taking references to the elements of shared arrays and hashes does not autovivify the elements, and neither does slicing a shared array/hash over non-existent indices/keys autovivify the elements.</source>
          <target state="translated">Tomar referencias a los elementos de matrices y hashes compartidos no autoviven los elementos,y tampoco el rebanar una matriz/hash compartido sobre índices/claves inexistentes autoviven los elementos.</target>
        </trans-unit>
        <trans-unit id="4c38f4d8d122fb1493ff34d8747e9c4346d4b600" translate="yes" xml:space="preserve">
          <source>Tanenbaum, Andrew S. Distributed Operating Systems. Prentice Hall, 1995, ISBN 0-13-219908-4 (great textbook).</source>
          <target state="translated">Tanenbaum,Andrew S.Sistemas operativos distribuidos.Prentice Hall,1995,ISBN 0-13-219908-4 (gran libro de texto).</target>
        </trans-unit>
        <trans-unit id="1dc610a84e3953106d973aac027936828f4fd583" translate="yes" xml:space="preserve">
          <source>TangutSources.txt</source>
          <target state="translated">TangutSources.txt</target>
        </trans-unit>
        <trans-unit id="2c7e55c8c22c8578371b576097055d97d0b00faf" translate="yes" xml:space="preserve">
          <source>Tar</source>
          <target state="translated">Tar</target>
        </trans-unit>
        <trans-unit id="6fa1266b6a5ee03e688676077ed07cbe3831ca7d" translate="yes" xml:space="preserve">
          <source>Tar command verbosity level (none or v or vv)?</source>
          <target state="translated">¿Nivel de verbosidad del comando Tar (ninguno o v o vv)?</target>
        </trans-unit>
        <trans-unit id="ad911c00bd7a291ef3efa483132270f4863e5d78" translate="yes" xml:space="preserve">
          <source>Tar magic string -- not useful for most users</source>
          <target state="translated">Cadena mágica de alquitrán...no es útil para la mayoría de los usuarios</target>
        </trans-unit>
        <trans-unit id="6c049aa004ef5f9f848604b292466698be913578" translate="yes" xml:space="preserve">
          <source>Tar version string -- not useful for most users</source>
          <target state="translated">La cadena de la versión de alquitrán...no es útil para la mayoría de los usuarios</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="1826e633e69fd1415d51f9f2a918eb7307883a23" translate="yes" xml:space="preserve">
          <source>Target &lt;code&gt;dist&lt;/code&gt; prepares distribution file set. Target &lt;code&gt;zipdist&lt;/code&gt; performs same as &lt;code&gt;dist&lt;/code&gt; but additionally compresses distribution files into zip archive.</source>
          <target state="translated">Target &lt;code&gt;dist&lt;/code&gt; prepara el conjunto de archivos de distribuci&amp;oacute;n. Target &lt;code&gt;zipdist&lt;/code&gt; funciona igual que &lt;code&gt;dist&lt;/code&gt; , pero adem&amp;aacute;s comprime los archivos de distribuci&amp;oacute;n en un archivo zip.</target>
        </trans-unit>
        <trans-unit id="3775eca859de6dcfb4c426728c102c801b4a309a" translate="yes" xml:space="preserve">
          <source>Target of goto is too deeply nested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35260a00f655f27edcc35a7eb16da44a4f671a6" translate="yes" xml:space="preserve">
          <source>Targets</source>
          <target state="translated">Targets</target>
        </trans-unit>
        <trans-unit id="cb47f8fe09a055e30fa78d0ffd45295628f69b2c" translate="yes" xml:space="preserve">
          <source>Task-Oriented</source>
          <target state="translated">Task-Oriented</target>
        </trans-unit>
        <trans-unit id="a84eec2edc9ad24f299c8e16c921ff89b0a72d34" translate="yes" xml:space="preserve">
          <source>Tatsuhiko Miyagawa &amp;lt;miyagawa@bulknews.net&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184d6c1f032beb495ac0920ba867a330761f1d3a" translate="yes" xml:space="preserve">
          <source>Tautologous boolean operators are still going to be optimized away. Don't be tempted to write</source>
          <target state="translated">Los operadores booleanos tautológicos todavía van a ser optimizados lejos.No te sientas tentado a escribir</target>
        </trans-unit>
        <trans-unit id="b7381d80f99d092ee04058e78cf491f1a66d6d65" translate="yes" xml:space="preserve">
          <source>Technical note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3954704c666cb5b3d49966b92f96bca0955f9f5c" translate="yes" xml:space="preserve">
          <source>Technically speaking casting between function pointers and data pointers is unportable and undefined, but practically speaking it seems to work, but you should use the FPTR2DPTR() and DPTR2FPTR() macros. Sometimes you can also play games with unions.</source>
          <target state="translated">Técnicamente hablando,el casting entre los punteros de función y los punteros de datos no es portátil e indefinido,pero en la práctica parece funcionar,pero se deben utilizar las macros FPTR2DPTR()y DPTR2FPTR().A veces también se puede jugar con las uniones.</target>
        </trans-unit>
        <trans-unit id="789a9f1903bc34d24a4cbcecb6e7df34821ef6e1" translate="yes" xml:space="preserve">
          <source>Technically speaking, any extra semantics attached to a variable such as &lt;code&gt;$!&lt;/code&gt; , &lt;code&gt;$0&lt;/code&gt; , &lt;code&gt;%ENV&lt;/code&gt; , or &lt;code&gt;%SIG&lt;/code&gt; , or to any tied variable. Magical things happen when you diddle those variables.</source>
          <target state="translated">T&amp;eacute;cnicamente hablando, cualquier sem&amp;aacute;ntica adicional adjunta a una variable como &lt;code&gt;$!&lt;/code&gt; , &lt;code&gt;$0&lt;/code&gt; , &lt;code&gt;%ENV&lt;/code&gt; o &lt;code&gt;%SIG&lt;/code&gt; , o cualquier variable vinculada. Suceden cosas m&amp;aacute;gicas cuando manipulas esas variables.</target>
        </trans-unit>
        <trans-unit id="37c0cdada9acbef172bbad2abeee43e9c265bf5f" translate="yes" xml:space="preserve">
          <source>Technically speaking, any extra semantics attached to a variable such as &lt;code&gt;$!&lt;/code&gt;, &lt;code&gt;$0&lt;/code&gt;, &lt;code&gt;%ENV&lt;/code&gt;, or &lt;code&gt;%SIG&lt;/code&gt;, or to any tied variable. Magical things happen when you diddle those variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e2f047cca74ccc3c9d17a9bfaad25ab5dfd70e" translate="yes" xml:space="preserve">
          <source>Technically, or mathematically, speaking, a character set encoded in such a CES that maps character by character may form a CCS. EUC is such an example. The CES of EUC is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceeda0d1cb49658a382ae82742f6ea314f38047" translate="yes" xml:space="preserve">
          <source>Tell</source>
          <target state="translated">Tell</target>
        </trans-unit>
        <trans-unit id="36cdc28b89efb53a06a6917a07b767fb68103199" translate="yes" xml:space="preserve">
          <source>Tell all procs/threads it is time to be done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9278f94e7a82313efec40ca2dd22098d512b4425" translate="yes" xml:space="preserve">
          <source>Tell other processes and events that an event is pending. &lt;code&gt;$uniq_val&lt;/code&gt; should be a unique value no other thread/process will generate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dda96092209462b6b29c0664b9391938707a82" translate="yes" xml:space="preserve">
          <source>Tell other processes and threads there is a pending event. &lt;code&gt;$val&lt;/code&gt; should be a unique value no other thread/process will generate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fc1fc6f28fa057e70de617f17fd53df2eeea80" translate="yes" xml:space="preserve">
          <source>Tell the grammar which TAP syntax version to support. The lowest supported version is 12. Although 'TAP version' isn't valid version 12 syntax it is accepted so that higher version numbers may be parsed.</source>
          <target state="translated">Dile a la gramática qué versión de sintaxis TAP debe soportar.La versión más baja soportada es la 12.Aunque la 'versión TAP' no es válida con la sintaxis de la versión 12,se acepta para que se puedan analizar los números de versión más altos.</target>
        </trans-unit>
        <trans-unit id="bf7b0d797da557d31ab2a71f5864f39fe5a06aac" translate="yes" xml:space="preserve">
          <source>Tell the parser to ignore the exit status from the test when determining whether the test passed. Normally tests with non-zero exit status are considered to have failed even if all individual tests passed. In cases where it is not possible to control the exit value of the test script use this option to ignore it.</source>
          <target state="translated">Dile al analizador que ignore el estado de salida de la prueba cuando determine si la prueba fue aprobada.Normalmente se considera que las pruebas con estado de salida no nulo han fallado incluso si todas las pruebas individuales han pasado.En los casos en los que no es posible controlar el valor de salida del guión de la prueba,utilice esta opción para ignorarlo.</target>
        </trans-unit>
        <trans-unit id="bf2d615f3aae044f0b7af594b2368699ca553959" translate="yes" xml:space="preserve">
          <source>Tell the parser where should the output go. In this case it will be placed in the $html variable:</source>
          <target state="translated">Dile al analizador dónde debe ir la salida.En este caso se colocará en la variable $html:</target>
        </trans-unit>
        <trans-unit id="29533c09561de1801d031a71f8c7c8a01e5f03c1" translate="yes" xml:space="preserve">
          <source>Tell the remote server that I am not a user client, but probably another news server.</source>
          <target state="translated">Dile al servidor remoto que no soy un cliente de usuario,sino probablemente otro servidor de noticias.</target>
        </trans-unit>
        <trans-unit id="08608b0e566d4fb7e89ec44318b59ab07dde69d0" translate="yes" xml:space="preserve">
          <source>Tell the remote server the mail domain which you are in using the EHLO command (or HELO if EHLO fails). Since this method is invoked automatically when the Net::SMTP object is constructed the user should normally not have to call it manually.</source>
          <target state="translated">Dile al servidor remoto el dominio de correo en el que estás usando el comando EHLO (o HELO si EHLO falla).Como este método se invoca automáticamente cuando se construye el objeto Net::SMTP,el usuario normalmente no debería tener que llamarlo manualmente.</target>
        </trans-unit>
        <trans-unit id="1f6b5a09a58a8567f17dcd614ece669f9d14b0d0" translate="yes" xml:space="preserve">
          <source>Tell the server that we want to append some data to the end of a file called &lt;code&gt;FILE&lt;/code&gt; . If this file does not exist then create it.</source>
          <target state="translated">D&amp;iacute;gale al servidor que queremos agregar algunos datos al final de un archivo llamado &lt;code&gt;FILE&lt;/code&gt; . Si este archivo no existe, cr&amp;eacute;elo.</target>
        </trans-unit>
        <trans-unit id="8ff5b934cbf9d3fd05d80b879d5b2e694a3f82ae" translate="yes" xml:space="preserve">
          <source>Tell the server that we want to append some data to the end of a file called &lt;code&gt;FILE&lt;/code&gt;. If this file does not exist then create it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995cb880453aaa8bd60b7aae252f5462234be732" translate="yes" xml:space="preserve">
          <source>Tell the server that you are a reader and not another server.</source>
          <target state="translated">Dígale al servidor que usted es un lector y no otro servidor.</target>
        </trans-unit>
        <trans-unit id="055d9e27b5b7d5b8f2d504557166da8931089570" translate="yes" xml:space="preserve">
          <source>Tell the server that you wish to store a file. &lt;code&gt;FILE&lt;/code&gt; is the name of the new file that should be created.</source>
          <target state="translated">D&amp;iacute;gale al servidor que desea almacenar un archivo. &lt;code&gt;FILE&lt;/code&gt; es el nombre del nuevo archivo que se debe crear.</target>
        </trans-unit>
        <trans-unit id="9366b9a09ea150c339542dc64664840e4fc85da8" translate="yes" xml:space="preserve">
          <source>Tell the server to go into passive mode (&lt;code&gt;pasv&lt;/code&gt; for IPv4, &lt;code&gt;epsv&lt;/code&gt; for IPv6). Returns the text that represents the port on which the server is listening, this text is in a suitable form to send to another ftp server using the &lt;code&gt;port&lt;/code&gt; or &lt;code&gt;eprt&lt;/code&gt; method.</source>
          <target state="translated">D&amp;iacute;gale al servidor que entre en modo pasivo ( &lt;code&gt;pasv&lt;/code&gt; para IPv4, &lt;code&gt;epsv&lt;/code&gt; para IPv6). Devuelve el texto que representa el puerto en el que est&amp;aacute; escuchando el servidor, este texto est&amp;aacute; en una forma adecuada para enviar a otro servidor ftp usando el &lt;code&gt;port&lt;/code&gt; o el m&amp;eacute;todo &lt;code&gt;eprt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07221dbb3d1c9d6040ef943ff42c4107c54603a8" translate="yes" xml:space="preserve">
          <source>Telling &lt;a href=&quot;Email::Stuffer&quot;&gt;Email::Stuffer&lt;/a&gt; to use your transport is straightforward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d551aaf2266eb9d86adea81d4570cc191bb729" translate="yes" xml:space="preserve">
          <source>Telling &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Sender::Simple&quot;&gt;Email::Sender::Simple&lt;/a&gt; to use your transport is straightforward.</source>
          <target state="translated">Decirle al &lt;a href=&quot;http://search.cpan.org/perldoc/Email::Sender::Simple&quot;&gt;correo electr&amp;oacute;nico :: Remitente :: F&amp;aacute;cil&lt;/a&gt; de usar, su transporte es sencillo.</target>
        </trans-unit>
        <trans-unit id="dd2c3160deeb317e223ba57be41f996c28b1ec03" translate="yes" xml:space="preserve">
          <source>Tells Perl to &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the given string in scalar context and return an SV* result.</source>
          <target state="translated">Le dice a Perl que &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; &amp;uacute;e la cadena dada en contexto escalar y devuelva un resultado SV *.</target>
        </trans-unit>
        <trans-unit id="d9e092fa3e1e256147594ca30bda8c3f4672e0ee" translate="yes" xml:space="preserve">
          <source>Tells Perl to &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; the string in the SV. It supports the same flags as &lt;code&gt;call_sv&lt;/code&gt; , with the obvious exception of G_EVAL. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">Le dice a Perl que &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; &amp;uacute;e la cadena en el SV. Admite los mismos indicadores que &lt;code&gt;call_sv&lt;/code&gt; , con la obvia excepci&amp;oacute;n de G_EVAL. Ver &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a71daae5e0e57d93d6228536edc45b69ba84a875" translate="yes" xml:space="preserve">
          <source>Tells Perl to &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; the file named by the string argument. It is analogous to the Perl code &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;require '$file'&quot;&lt;/code&gt; . It's even implemented that way; consider using load_module instead.</source>
          <target state="translated">Le dice a Perl que &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; el archivo nombrado por el argumento de cadena. Es an&amp;aacute;logo al c&amp;oacute;digo Perl &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; &quot;require '$file'&quot;&lt;/code&gt; . Incluso se implementa de esa manera; considere usar load_module en su lugar.</target>
        </trans-unit>
        <trans-unit id="1b1b082272b9bd4181468eabc6b8e44fc8fe6c64" translate="yes" xml:space="preserve">
          <source>Tells Perl to &lt;code&gt;eval&lt;/code&gt; the given string in scalar context and return an SV* result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3df8e8a89eba38389eed572b608ff46f9135ee" translate="yes" xml:space="preserve">
          <source>Tells Perl to &lt;code&gt;eval&lt;/code&gt; the string in the SV. It supports the same flags as &lt;code&gt;call_sv&lt;/code&gt;, with the obvious exception of &lt;code&gt;G_EVAL&lt;/code&gt;. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ee5f386d4eccf5016f84f3d99b790dcda5f79" translate="yes" xml:space="preserve">
          <source>Tells Perl to &lt;code&gt;require&lt;/code&gt; the file named by the string argument. It is analogous to the Perl code &lt;code&gt;eval &quot;require '$file'&quot;&lt;/code&gt;. It's even implemented that way; consider using load_module instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bf556e6d9dede28e015a565e8d9027e099de7d" translate="yes" xml:space="preserve">
          <source>Tells Test::Builder what package you exported your functions to.</source>
          <target state="translated">Le dice a la prueba::Construye a qué paquete has exportado tus funciones.</target>
        </trans-unit>
        <trans-unit id="21d8020c0986f9af967d2434489f1dff7dddc2b6" translate="yes" xml:space="preserve">
          <source>Tells a Perl interpreter to parse a Perl script. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Le dice a un int&amp;eacute;rprete de Perl que analice un script de Perl. Ver &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fc8f2629186f20e45a65a6df178e8841854cf49" translate="yes" xml:space="preserve">
          <source>Tells a Perl interpreter to parse a Perl script. This performs most of the initialisation of a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; for a tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af02c41897ccb1ab6624206547ff7270321f616" translate="yes" xml:space="preserve">
          <source>Tells a Perl interpreter to run its main program. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; for a tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90de9fbbe619d0267fd7167e5dc1db64eb361247" translate="yes" xml:space="preserve">
          <source>Tells a Perl interpreter to run. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Le dice a un int&amp;eacute;rprete de Perl que se ejecute. Ver &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2794a27373eb4499d2dd0fc224b3c502ced9a12f" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is a double and disables all other OK bits.</source>
          <target state="translated">Le dice a un SV que es un doble y desactiva todos los demás bits OK.</target>
        </trans-unit>
        <trans-unit id="cde3486f8b34dcc836358775446f605a6e5f5219" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is a double.</source>
          <target state="translated">Le dice a un SV que es un doble.</target>
        </trans-unit>
        <trans-unit id="38d5abd50f24b07310ee29175bef33b4202c7809" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is a string and disables all other &lt;code&gt;OK&lt;/code&gt; bits, and leaves the UTF-8 status as it was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fe87231b97a4e4ddb62ec499c5ee8942eac05a" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is a string and disables all other &lt;code&gt;OK&lt;/code&gt; bits. Will also turn off the UTF-8 status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29a05e0eb81580dedcd3ec32c30e53e3f465ef8" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is a string and disables all other OK bits, and leaves the UTF-8 status as it was.</source>
          <target state="translated">Le dice a un SV que es una cadena y desactiva todos los demás bits de OK,y deja el estado UTF-8 como estaba.</target>
        </trans-unit>
        <trans-unit id="826cf5cb563ce76cd986386302e8a1a458503e48" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is a string and disables all other OK bits. Will also turn off the UTF-8 status.</source>
          <target state="translated">Le dice a un SV que es una cadena y desactiva todos los demás bits de OK.También desactivará el estado UTF-8.</target>
        </trans-unit>
        <trans-unit id="3a0e0af0ea20a9f25152c6d76518063affb1c7ae" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is a string.</source>
          <target state="translated">Le dice a un SV que es una cuerda.</target>
        </trans-unit>
        <trans-unit id="9359d018a66deddebc4670552c35dfa39c5db6a1" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is an RV.</source>
          <target state="translated">Le dice a un SV que es un RV.</target>
        </trans-unit>
        <trans-unit id="6c3d42b807cb60d5c1d3b6f5a5dbefd19d80f738" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is an integer and disables all other &lt;code&gt;OK&lt;/code&gt; bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ea638c533f4384730e93210ef4a899bb9d756b" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is an integer and disables all other OK bits.</source>
          <target state="translated">Le dice a un SV que es un número entero y desactiva todos los demás bits OK.</target>
        </trans-unit>
        <trans-unit id="6d0dafe3ace125974c920e3d5dd9ad0e37849cd8" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is an integer.</source>
          <target state="translated">Le dice a un SV que es un número entero.</target>
        </trans-unit>
        <trans-unit id="32b076858cb529d5d1d166704ef6d15c34643322" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is an unsigned integer and disables all other &lt;code&gt;OK&lt;/code&gt; bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b98f3f753198e2b29067e4cd07e7535b94339d" translate="yes" xml:space="preserve">
          <source>Tells an SV that it is an unsigned integer and disables all other OK bits.</source>
          <target state="translated">Le dice a un SV que es un entero sin signo y desactiva todos los demás bits OK.</target>
        </trans-unit>
        <trans-unit id="2f015ae08c2ba0f00c29151908ca6bc489974130" translate="yes" xml:space="preserve">
          <source>Tells an SV to use &lt;code&gt;ptr&lt;/code&gt; to find its string value. Implemented by calling &lt;code&gt;sv_usepvn_flags&lt;/code&gt; with &lt;code&gt;flags&lt;/code&gt; of 0, hence does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_usepvn_flags&quot;&gt;&quot;sv_usepvn_flags&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e3c3ca5f6df324b9d092553470d578100c40eb" translate="yes" xml:space="preserve">
          <source>Tells an SV to use &lt;code&gt;ptr&lt;/code&gt; to find its string value. Implemented by calling &lt;code&gt;sv_usepvn_flags&lt;/code&gt; with &lt;code&gt;flags&lt;/code&gt; of 0, hence does not handle 'set' magic. See &lt;code&gt;sv_usepvn_flags&lt;/code&gt; .</source>
          <target state="translated">Le dice a un SV que use &lt;code&gt;ptr&lt;/code&gt; para encontrar su valor de cadena. Implementado llamando a &lt;code&gt;sv_usepvn_flags&lt;/code&gt; con &lt;code&gt;flags&lt;/code&gt; de 0, por lo tanto, no maneja la magia 'set'. Consulte &lt;code&gt;sv_usepvn_flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f1684ac88b387a920693532449fce7adef04529" translate="yes" xml:space="preserve">
          <source>Tells an SV to use &lt;code&gt;ptr&lt;/code&gt; to find its string value. Normally the string is stored inside the SV, but sv_usepvn allows the SV to use an outside string. &lt;code&gt;ptr&lt;/code&gt; should point to memory that was allocated by &lt;a href=&quot;perlclib#Memory-Management-and-String-Handling&quot;&gt;&lt;code&gt;Newx&lt;/code&gt;&lt;/a&gt;. It must be the start of a &lt;code&gt;Newx&lt;/code&gt;-ed block of memory, and not a pointer to the middle of it (beware of &lt;a href=&quot;perlguts#Offsets&quot;&gt;&lt;code&gt;OOK&lt;/code&gt;&lt;/a&gt; and copy-on-write), and not be from a non-&lt;code&gt;Newx&lt;/code&gt; memory allocator like &lt;code&gt;malloc&lt;/code&gt;. The string length, &lt;code&gt;len&lt;/code&gt;, must be supplied. By default this function will &lt;code&gt;Renew&lt;/code&gt; (i.e. realloc, move) the memory pointed to by &lt;code&gt;ptr&lt;/code&gt;, so that pointer should not be freed or used by the programmer after giving it to &lt;code&gt;sv_usepvn&lt;/code&gt;, and neither should any pointers from &quot;behind&quot; that pointer (e.g. ptr + 1) be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898e0cc9cfb0dad2df7d68beacd47f39b7ca2406" translate="yes" xml:space="preserve">
          <source>Tells an SV to use &lt;code&gt;ptr&lt;/code&gt; to find its string value. Normally the string is stored inside the SV, but sv_usepvn allows the SV to use an outside string. The &lt;code&gt;ptr&lt;/code&gt; should point to memory that was allocated by &lt;a href=&quot;perlclib#Memory-Management-and-String-Handling&quot;&gt;Newx&lt;/a&gt;. It must be the start of a Newx-ed block of memory, and not a pointer to the middle of it (beware of &lt;a href=&quot;perlguts#Offsets&quot;&gt;OOK&lt;/a&gt; and copy-on-write), and not be from a non-Newx memory allocator like &lt;code&gt;malloc&lt;/code&gt; . The string length, &lt;code&gt;len&lt;/code&gt; , must be supplied. By default this function will &lt;code&gt;Renew&lt;/code&gt; (i.e. realloc, move) the memory pointed to by &lt;code&gt;ptr&lt;/code&gt; , so that pointer should not be freed or used by the programmer after giving it to sv_usepvn, and neither should any pointers from &quot;behind&quot; that pointer (e.g. ptr + 1) be used.</source>
          <target state="translated">Le dice a un SV que use &lt;code&gt;ptr&lt;/code&gt; para encontrar su valor de cadena. Normalmente, la cadena se almacena dentro del SV, pero sv_usepvn permite que el SV use una cadena externa. El &lt;code&gt;ptr&lt;/code&gt; debe apuntar a la memoria asignada por &lt;a href=&quot;perlclib#Memory-Management-and-String-Handling&quot;&gt;Newx&lt;/a&gt; . Debe ser el comienzo de un bloque de memoria Newx-ed, y no un puntero al medio (cuidado con &lt;a href=&quot;perlguts#Offsets&quot;&gt;OOK&lt;/a&gt; y copy-on-write), y no ser de un asignador de memoria que no sea Newx como &lt;code&gt;malloc&lt;/code&gt; . Debe indicarse la longitud de la cuerda, &lt;code&gt;len&lt;/code&gt; . Por defecto esta funci&amp;oacute;n &lt;code&gt;Renew&lt;/code&gt; (es decir realloc, mover) la memoria a la que apunta &lt;code&gt;ptr&lt;/code&gt; , por lo que el programador no debe liberar o usar el puntero despu&amp;eacute;s de d&amp;aacute;rselo a sv_usepvn, y tampoco debe usarse ning&amp;uacute;n puntero &quot;detr&amp;aacute;s&quot; de ese puntero (por ejemplo, ptr + 1).</target>
        </trans-unit>
        <trans-unit id="fa94c122bdfc00ca551536773f45fe7b4444a81f" translate="yes" xml:space="preserve">
          <source>Tells the debugger that we'll want to pause execution when we reach either the named function (but see &lt;a href=&quot;perlguts#Internal-Functions&quot;&gt;&quot;Internal Functions&quot; in perlguts&lt;/a&gt;!) or the given line in the named source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1983bb2952566f54d05f0ce7c7dc4c67383643" translate="yes" xml:space="preserve">
          <source>Tells the debugger that we'll want to pause execution when we reach either the named function (but see &lt;a href=&quot;perlguts#Internal-Functions&quot;&gt;Internal Functions in perlguts&lt;/a&gt;!) or the given line in the named source file.</source>
          <target state="translated">Le dice al depurador que queremos pausar la ejecuci&amp;oacute;n cuando lleguemos a la funci&amp;oacute;n nombrada (&amp;iexcl;pero vea &lt;a href=&quot;perlguts#Internal-Functions&quot;&gt;Funciones internas en perlguts&lt;/a&gt; !) O la l&amp;iacute;nea dada en el archivo fuente nombrado.</target>
        </trans-unit>
        <trans-unit id="d14b1bd32ddb84a178c8e757f0eede95fcc4f56d" translate="yes" xml:space="preserve">
          <source>Tells the split operator to split the target string on characters. The definition of character varies depending on if the target string is a UTF-8 string.</source>
          <target state="translated">Le dice al operador de la división que divida la cadena del objetivo en caracteres.La definición de carácter varía dependiendo de si la cadena de destino es una cadena UTF-8.</target>
        </trans-unit>
        <trans-unit id="184bc1d12ee8da813cda422d2ca1e00df540f884" translate="yes" xml:space="preserve">
          <source>Tells the split operator to split the target string on newlines (&lt;code&gt;\n&lt;/code&gt; ) without invoking the regex engine.</source>
          <target state="translated">Le dice al operador de divisi&amp;oacute;n que divida la cadena de destino en l&amp;iacute;neas nuevas ( &lt;code&gt;\n&lt;/code&gt; ) sin invocar el motor de expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="7add2a85af4113fd669c82c4ee4e7afc64bec786" translate="yes" xml:space="preserve">
          <source>Tells the split operator to split the target string on newlines (&lt;code&gt;\n&lt;/code&gt;) without invoking the regex engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48808542e716e16e3adb670d9889b9528897056" translate="yes" xml:space="preserve">
          <source>Tells the split operator to split the target string on whitespace without invoking the regex engine. The definition of whitespace varies depending on if the target string is a UTF-8 string and on if RXf_PMf_LOCALE is set.</source>
          <target state="translated">Le dice al operador de división que divida la cadena de objetivos en el espacio blanco sin invocar el motor regex.La definición de espacio en blanco varía dependiendo de si la cadena de destino es una cadena UTF-8 y de si se establece RXf_PMf_LOCALE.</target>
        </trans-unit>
        <trans-unit id="e150384486349cedc8729ff69a3903d6982a4a60" translate="yes" xml:space="preserve">
          <source>Tells whether the object is renewed (and how many times). Some modules emit &lt;code&gt;Use of uninitialized value in null operation&lt;/code&gt; warning unless the value is numeric so return 0 for false.</source>
          <target state="translated">Indica si el objeto se renueva (y cu&amp;aacute;ntas veces). Algunos m&amp;oacute;dulos emiten una advertencia &lt;code&gt;Use of uninitialized value in null operation&lt;/code&gt; menos que el valor sea num&amp;eacute;rico, por lo que devuelve 0 para falso.</target>
        </trans-unit>
        <trans-unit id="fe08a0c4d36ed96cbb4447cc6f3eff3004614a0a" translate="yes" xml:space="preserve">
          <source>Tels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt; 2001-2009.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7760f2328a8cb1216abc5d480c3f7c025535cee" translate="yes" xml:space="preserve">
          <source>Temp dir + Files concurrency model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="716ec42869a03408fcb77c9873e5ac4f7f2b0aad" translate="yes" xml:space="preserve">
          <source>Template Grouping</source>
          <target state="translated">Agrupación de plantillas</target>
        </trans-unit>
        <trans-unit id="c9f888d973643e39eea58ba0d4385df9a5d27ccf" translate="yes" xml:space="preserve">
          <source>Template code &lt;code&gt;P&lt;/code&gt; promises to pack a &quot;pointer to a fixed length string&quot;. Isn't this what we want? Let's try:</source>
          <target state="translated">El c&amp;oacute;digo de plantilla &lt;code&gt;P&lt;/code&gt; promete incluir un &quot;puntero a una cadena de longitud fija&quot;. &amp;iquest;No es esto lo que queremos? Intentemos:</target>
        </trans-unit>
        <trans-unit id="a108586754857c54e59b71ddb85b8b2a3279733a" translate="yes" xml:space="preserve">
          <source>Template is the same as that required by mkstemp().</source>
          <target state="translated">La plantilla es la misma que la requerida por mkstemp().</target>
        </trans-unit>
        <trans-unit id="3d3a072632618e86894944ff55a4538808fd8ea6" translate="yes" xml:space="preserve">
          <source>Temporaries Stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58aad47f3a12a51d4d52aa8432c69a9c8ebbb3e7" translate="yes" xml:space="preserve">
          <source>Temporarily disable a member of the XOP, by clearing the appropriate flag.</source>
          <target state="translated">Deshabilitar temporalmente a un miembro del XOP,despejando la bandera correspondiente.</target>
        </trans-unit>
        <trans-unit id="d80af7efaaaefafc73c5845cc5b267960e4626cc" translate="yes" xml:space="preserve">
          <source>Temporarily disable an entry in this BHK structure, by clearing the appropriate flag.</source>
          <target state="translated">Deshabilitar temporalmente una entrada en esta estructura de BHK,despejando la bandera correspondiente.</target>
        </trans-unit>
        <trans-unit id="e7f1b0942dc03abbb9406810a4ca16b57247a87e" translate="yes" xml:space="preserve">
          <source>Temporarily disable an entry in this BHK structure, by clearing the appropriate flag. &lt;code&gt;which&lt;/code&gt; is a preprocessor token indicating which entry to disable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3f1700e4dfa66cdfab75739db179821b620308" translate="yes" xml:space="preserve">
          <source>Temporarily fixing locale problems</source>
          <target state="translated">Arreglar temporalmente los problemas de localización</target>
        </trans-unit>
        <trans-unit id="48915beb5208adc13703e622845e9d9286a425c6" translate="yes" xml:space="preserve">
          <source>Temporarily override assorted &lt;code&gt;CPAN.pm&lt;/code&gt; configuration variables.</source>
          <target state="translated">&lt;code&gt;CPAN.pm&lt;/code&gt; temporalmente una variedad de variables de configuraci&amp;oacute;n CPAN.pm.</target>
        </trans-unit>
        <trans-unit id="8d8d27f44975a51a83ee576661872ef78010f131" translate="yes" xml:space="preserve">
          <source>Temporary (no file directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6563ecf47ef5662e753d4670106fb233c800e886" translate="yes" xml:space="preserve">
          <source>Temporary Values via local()</source>
          <target state="translated">Valores temporales a través de local()</target>
        </trans-unit>
        <trans-unit id="966d13f8587efdadd4d1a975aa3423e8769b72b3" translate="yes" xml:space="preserve">
          <source>Temporary delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6577ed3ab16dc6a0a24e8a29b8f2320a3f1bea" translate="yes" xml:space="preserve">
          <source>Temporary files and NFS</source>
          <target state="translated">Archivos temporales y NFS</target>
        </trans-unit>
        <trans-unit id="972e2ab11e7ed25c1af63f02f49c51ed09f64187" translate="yes" xml:space="preserve">
          <source>Tend to fail, not succeed.</source>
          <target state="translated">Tienden a fracasar,no a tener éxito.</target>
        </trans-unit>
        <trans-unit id="81ac69447a0c644cecd1c09f31f389b73f4febee" translate="yes" xml:space="preserve">
          <source>Tenon Machten</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038c9aeb7bb05d375a32b9ab2979691faa497330" translate="yes" xml:space="preserve">
          <source>Term used by language lawyers for a storage location you can assign a new &lt;b&gt;value&lt;/b&gt; to, such as a &lt;b&gt;variable&lt;/b&gt; or an element of an &lt;b&gt;array&lt;/b&gt;. The &amp;ldquo;l&amp;rdquo; is short for &amp;ldquo;left&amp;rdquo;, as in the left side of an assignment, a typical place for lvalues. An &lt;b&gt;lvaluable&lt;/b&gt; function or expression is one to which a value may be assigned, as in &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;($x) = 10&lt;/code&gt; .</source>
          <target state="translated">T&amp;eacute;rmino utilizado por los abogados de idiomas para una ubicaci&amp;oacute;n de almacenamiento a la que puede asignar un nuevo &lt;b&gt;valor&lt;/b&gt; , como una &lt;b&gt;variable&lt;/b&gt; o un elemento de una &lt;b&gt;matriz&lt;/b&gt; . La &quot;l&quot; es la abreviatura de &quot;izquierda&quot;, como en el lado izquierdo de una tarea, un lugar t&amp;iacute;pico para los valores l. Una funci&amp;oacute;n o expresi&amp;oacute;n &lt;b&gt;valiosa&lt;/b&gt; es aquella a la que se le puede asignar un valor, como en &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;($x) = 10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3570ded95db6a210fa183ad2282d08a349916fef" translate="yes" xml:space="preserve">
          <source>Term used by language lawyers for a storage location you can assign a new &lt;b&gt;value&lt;/b&gt; to, such as a &lt;b&gt;variable&lt;/b&gt; or an element of an &lt;b&gt;array&lt;/b&gt;. The &amp;ldquo;l&amp;rdquo; is short for &amp;ldquo;left&amp;rdquo;, as in the left side of an assignment, a typical place for lvalues. An &lt;b&gt;lvaluable&lt;/b&gt; function or expression is one to which a value may be assigned, as in &lt;code&gt;pos($x) = 10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0028d995c201a4db08a4f29da91c7c14dbfb31" translate="yes" xml:space="preserve">
          <source>Term::ANSIColor</source>
          <target state="translated">Term::ANSIColor</target>
        </trans-unit>
        <trans-unit id="a16dc007b248f41d8a8b48934fc42c79241aa183" translate="yes" xml:space="preserve">
          <source>Term::ANSIColor - Color screen output using ANSI escape sequences</source>
          <target state="translated">Término::ANSIColor-Salida de pantalla a color usando secuencias de escape ANSI</target>
        </trans-unit>
        <trans-unit id="db406ea9117455f0b666b6ba8f4edfbd34a6728b" translate="yes" xml:space="preserve">
          <source>Term::ANSIColor is used to get colors and therefore must be installed to use this module.</source>
          <target state="translated">Término::ANSIColor se usa para obtener colores y por lo tanto debe ser instalado para usar este módulo.</target>
        </trans-unit>
        <trans-unit id="f7bdc8f03c4b5d2f5d03a99d6b589da67ba2844c" translate="yes" xml:space="preserve">
          <source>Term::ANSIColor was first included with Perl in Perl 5.6.0.</source>
          <target state="translated">Término::ANSIColor se incluyó por primera vez con Perl en Perl 5.6.0.</target>
        </trans-unit>
        <trans-unit id="3973a6639b848462a9aba2fb3883fdeeeee93564" translate="yes" xml:space="preserve">
          <source>Term::Cap</source>
          <target state="translated">Term::Cap</target>
        </trans-unit>
        <trans-unit id="82cd629b4593ce6a72b220343056170a7eb3d545" translate="yes" xml:space="preserve">
          <source>Term::Cap - Perl termcap interface</source>
          <target state="translated">Término::Cap-Interfaz de termcap de Perl</target>
        </trans-unit>
        <trans-unit id="3d3bfe455e655790515f3b006edeb99748236633" translate="yes" xml:space="preserve">
          <source>Term::Complete</source>
          <target state="translated">Term::Complete</target>
        </trans-unit>
        <trans-unit id="6d23da7c53fbf0f4faebaefa6851bd7ad00eee31" translate="yes" xml:space="preserve">
          <source>Term::Complete - Perl word completion module</source>
          <target state="translated">Término::Completo-Módulo de terminación de palabras de Perl</target>
        </trans-unit>
        <trans-unit id="23ebd3bc9f5af49b1131c82bd5eefd1ac9f6bc11" translate="yes" xml:space="preserve">
          <source>Term::ReadLine</source>
          <target state="translated">Term::ReadLine</target>
        </trans-unit>
        <trans-unit id="bfadfd7a83f6920cfb9038f1942ac1ea2e3b25c1" translate="yes" xml:space="preserve">
          <source>Term::ReadLine - Perl interface to various &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; packages. If no real package is found, substitutes stubs instead of basic functions.</source>
          <target state="translated">Term :: ReadLine - Interfaz Perl para varios paquetes &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; . Si no se encuentra un paquete real, sustituye stubs en lugar de funciones b&amp;aacute;sicas.</target>
        </trans-unit>
        <trans-unit id="7113fd2a1763597777139799d4259876fd00d022" translate="yes" xml:space="preserve">
          <source>Term::ReadLine - Perl interface to various &lt;code&gt;readline&lt;/code&gt; packages. If no real package is found, substitutes stubs instead of basic functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b36cab4785101b615f79c20885ccd2eda2f048" translate="yes" xml:space="preserve">
          <source>Terminal emulators that support color divide into four types: ones that support only eight colors, ones that support sixteen, ones that support 256, and ones that support 24-bit color. This module provides the ANSI escape codes for all of them. These colors are referred to as ANSI colors 0 through 7 (normal), 8 through 15 (16-color), 16 through 255 (256-color), and true color (called direct-color by &lt;b&gt;xterm&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8379c22e18e11951de951761db8a9d7c5f2195" translate="yes" xml:space="preserve">
          <source>Terminal emulators that support color divide into two types: ones that support only eight colors, ones that support sixteen, and ones that support 256. This module provides the ANSI escape codes all of them. These colors are referred to as ANSI colors 0 through 7 (normal), 8 through 15 (16-color), and 16 through 255 (256-color).</source>
          <target state="translated">Los emuladores de terminales que soportan el color se dividen en dos tipos:los que soportan sólo ocho colores,los que soportan dieciséis y los que soportan 256.Este módulo proporciona los códigos de escape ANSI de todos ellos.Estos colores se denominan colores ANSI de 0 a 7 (normal),de 8 a 15 (16 colores)y de 16 a 255 (256 colores).</target>
        </trans-unit>
        <trans-unit id="06b99286ab352f9eeaab809a6a34ccd3528b3299" translate="yes" xml:space="preserve">
          <source>Terminal interface values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b13399f2e2e5cbdb3d2ac7675630b976b3e5443" translate="yes" xml:space="preserve">
          <source>Terminate use of a parser. Typically used and/or overridden in subclasses. The parser isn't destroyed as a result of this.</source>
          <target state="translated">Termine el uso de un analizador.Típicamente usado y/o anulado en subclases.El analizador no se destruye como resultado de esto.</target>
        </trans-unit>
        <trans-unit id="6b2081166b6ec9fa584db14b8bc64a4e53b287d9" translate="yes" xml:space="preserve">
          <source>Terminates the compressed data stream and flushes any pending compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">Termina el flujo de datos comprimidos y descarga los datos comprimidos pendientes en &lt;code&gt;$output&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2aa7fbea2d0e607309e315ba46eefb556163b2c8" translate="yes" xml:space="preserve">
          <source>Terminates the compressed data stream and flushes any pending compressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="2c65f89cb90bf010c5c15d59ad7362f6575faeff" translate="yes" xml:space="preserve">
          <source>Terms and List Operators (Leftward)</source>
          <target state="translated">Condiciones y lista de operadores (a la izquierda)</target>
        </trans-unit>
        <trans-unit id="aadfdbce37d51dbb8148884093a756d6e68d99bd" translate="yes" xml:space="preserve">
          <source>Termux</source>
          <target state="translated">Termux</target>
        </trans-unit>
        <trans-unit id="f7687808514bd6fdef254462f2ef21603ff94c5d" translate="yes" xml:space="preserve">
          <source>Ternary &lt;code&gt;&quot;?:&quot;&lt;/code&gt; is the conditional operator, just as in C. It works much like an if-then-else. If the argument before the &lt;code&gt;?&lt;/code&gt; is true, the argument before the &lt;code&gt;:&lt;/code&gt; is returned, otherwise the argument after the &lt;code&gt;:&lt;/code&gt; is returned. For example:</source>
          <target state="translated">El ternario &lt;code&gt;&quot;?:&quot;&lt;/code&gt; Es el operador condicional, al igual que en C. Funciona de forma muy similar a un if-then-else. Si el argumento antes del &lt;code&gt;?&lt;/code&gt; Es cierto, el argumento antes del &lt;code&gt;:&lt;/code&gt; se devuelve, de lo contrario el argumento despu&amp;eacute;s de la &lt;code&gt;:&lt;/code&gt; se devuelve. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="a606ccac095617dc9512d70db5efd42e7bb98a43" translate="yes" xml:space="preserve">
          <source>Test - provides a simple framework for writing test scripts</source>
          <target state="translated">Test-proporciona un marco simple para escribir guiones de prueba</target>
        </trans-unit>
        <trans-unit id="39cded9148b38cec922514bd35a2aef5469fc539" translate="yes" xml:space="preserve">
          <source>Test Status and Info</source>
          <target state="translated">Estado de la prueba e información</target>
        </trans-unit>
        <trans-unit id="0f42e18af9e42f65883381d95b6da9a9beb625ba" translate="yes" xml:space="preserve">
          <source>Test _all_ behaviors of a given operator, library, or function.</source>
          <target state="translated">Pruebe _todos_los comportamientos de un operador,biblioteca o función determinada.</target>
        </trans-unit>
        <trans-unit id="ccbf4ddf89827f1aef746e7810ae2a433cf06e90" translate="yes" xml:space="preserve">
          <source>Test all optional arguments.</source>
          <target state="translated">Pruebe todos los argumentos opcionales.</target>
        </trans-unit>
        <trans-unit id="ee2236a26189cf2bce4daa0c312f2ad998013277" translate="yes" xml:space="preserve">
          <source>Test an SV for taintedness. Use &lt;code&gt;SvTAINTED&lt;/code&gt; instead.</source>
          <target state="translated">Pruebe un SV para ver si est&amp;aacute; contaminado. Utilice &lt;code&gt;SvTAINTED&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="435f6b9009ca18e663fe202fc1240deccf2b918a" translate="yes" xml:space="preserve">
          <source>Test building utility methods</source>
          <target state="translated">Métodos de utilidad para la construcción de pruebas</target>
        </trans-unit>
        <trans-unit id="b4b87c6940ff3faed10366f7a463d3bfb89e71a4" translate="yes" xml:space="preserve">
          <source>Test control</source>
          <target state="translated">Control de la prueba</target>
        </trans-unit>
        <trans-unit id="5f7408dbafe0232db081d945ae171586f08aae05" translate="yes" xml:space="preserve">
          <source>Test files not found under</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d741ad5424269aabb883c550c337fb9f577347" translate="yes" xml:space="preserve">
          <source>Test for Memoize expiration semantics</source>
          <target state="translated">Prueba de la semántica de la caducidad de la memoria</target>
        </trans-unit>
        <trans-unit id="f76975f4d894de42ed86a6b96159814a64e69414" translate="yes" xml:space="preserve">
          <source>Test for end of file.</source>
          <target state="translated">Prueba para el final del archivo.</target>
        </trans-unit>
        <trans-unit id="79382a00ce637c0c3d356c1d16aa7f8ddce716b6" translate="yes" xml:space="preserve">
          <source>Test for the value of &amp;amp;Time::HiRes::d_hires_stat to find out whether the operating system supports subsecond file timestamps: a value larger than zero means yes. There are unfortunately no easy ways to find out whether the filesystem supports such timestamps. UNIX filesystems often do; NTFS does; FAT doesn't (FAT timestamp granularity is &lt;b&gt;two&lt;/b&gt; seconds).</source>
          <target state="translated">Pruebe el valor de &amp;amp; Time :: HiRes :: d_hires_stat para averiguar si el sistema operativo admite marcas de tiempo de archivo subsegundas: un valor mayor que cero significa que s&amp;iacute;. Desafortunadamente, no hay formas f&amp;aacute;ciles de averiguar si el sistema de archivos admite tales marcas de tiempo. Los sistemas de archivos UNIX a menudo lo hacen; NTFS lo hace; FAT no lo hace (la granularidad de la marca de tiempo FAT es de &lt;b&gt;dos&lt;/b&gt; segundos).</target>
        </trans-unit>
        <trans-unit id="feacda2f5709bb28aab0498393394934934708d7" translate="yes" xml:space="preserve">
          <source>Test for the value of &amp;amp;Time::HiRes::d_hires_utime to find out whether the operating system supports setting subsecond file timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d9cdf0f1500007619c451c5eaa7ecb15e59b66" translate="yes" xml:space="preserve">
          <source>Test if the content of an SV looks like a number (or is a number). &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;Infinity&lt;/code&gt; are treated as numbers (so will not issue a non-numeric warning), even if your &lt;code&gt;atof()&lt;/code&gt; doesn't grok them. Get-magic is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f831cc3a669b4e57bff2b2ef159b4ea5dded3cc" translate="yes" xml:space="preserve">
          <source>Test if the content of an SV looks like a number (or is a number). &lt;code&gt;Inf&lt;/code&gt; and &lt;code&gt;Infinity&lt;/code&gt; are treated as numbers (so will not issue a non-numeric warning), even if your atof() doesn't grok them. Get-magic is ignored.</source>
          <target state="translated">Pruebe si el contenido de un SV parece un n&amp;uacute;mero (o es un n&amp;uacute;mero). &lt;code&gt;Inf&lt;/code&gt; e &lt;code&gt;Infinity&lt;/code&gt; se tratan como n&amp;uacute;meros (por lo que no emitir&amp;aacute;n una advertencia no num&amp;eacute;rica), incluso si su atof () no los asimila. Get-magic se ignora.</target>
        </trans-unit>
        <trans-unit id="eff6484209621d4819416b73c20e645cef64569b" translate="yes" xml:space="preserve">
          <source>Test mode. Makes it possible to command perlbug from a pipe or file, for testing purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f13862d482c878134330e38991502bcc64e1f31" translate="yes" xml:space="preserve">
          <source>Test mode. The target address defaults to &lt;b&gt;perlbug-test@perl.org&lt;/b&gt;.</source>
          <target state="translated">Modo de prueba. La direcci&amp;oacute;n de destino predeterminada es &lt;b&gt;perlbug-test@perl.org&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="69080e5c49da5d3bba9b15a273b20b2df3903f2b" translate="yes" xml:space="preserve">
          <source>Test names</source>
          <target state="translated">Los nombres de las pruebas</target>
        </trans-unit>
        <trans-unit id="06b20000ce74a97fae877b75a137b770c99da787" translate="yes" xml:space="preserve">
          <source>Test numbers out of sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df0db78620ddd32bfd4efd442e6b3f36d8261a7" translate="yes" xml:space="preserve">
          <source>Test result token.</source>
          <target state="translated">Ficha de resultados de la prueba.</target>
        </trans-unit>
        <trans-unit id="ee151a1ef75c0ed5024755e133172ea9006bb555" translate="yes" xml:space="preserve">
          <source>Test results vary depending on your host system and your Cygwin configuration. If a test can pass in some Cygwin setup, it is always attempted and explainable test failures are documented. It is possible for Perl to pass all the tests, but it is more likely that some tests will fail for one of the reasons listed below.</source>
          <target state="translated">Los resultados de las pruebas varían dependiendo del sistema anfitrión y de la configuración de Cygwin.Si una prueba puede pasar en alguna configuración de Cygwin,siempre se intenta y se documentan los fallos explicables de la prueba.Es posible que Perl pase todas las pruebas,pero es más probable que algunas pruebas fallen por una de las razones que se enumeran a continuación.</target>
        </trans-unit>
        <trans-unit id="a10b429173c58a1c6dcb960c4e6c1c09b38479a1" translate="yes" xml:space="preserve">
          <source>Test results will be added to the supplied &lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;. &lt;code&gt;aggregate_tests&lt;/code&gt; may be called multiple times to run several sets of tests. Multiple &lt;code&gt;Test::Harness&lt;/code&gt; instances may be used to pass results to a single aggregator so that different parts of a complex test suite may be run using different &lt;code&gt;TAP::Harness&lt;/code&gt; settings. This is useful, for example, in the case where some tests should run in parallel but others are unsuitable for parallel execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aeb2301cd878b4bea322bf5867e98635082f17a" translate="yes" xml:space="preserve">
          <source>Test results will be added to the supplied &lt;a href=&quot;parser/aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;. &lt;code&gt;aggregate_tests&lt;/code&gt; may be called multiple times to run several sets of tests. Multiple &lt;code&gt;Test::Harness&lt;/code&gt; instances may be used to pass results to a single aggregator so that different parts of a complex test suite may be run using different &lt;code&gt;TAP::Harness&lt;/code&gt; settings. This is useful, for example, in the case where some tests should run in parallel but others are unsuitable for parallel execution.</source>
          <target state="translated">Los resultados de la prueba se agregar&amp;aacute;n al &lt;a href=&quot;parser/aggregator&quot;&gt;TAP :: Parser :: Aggregator proporcionado&lt;/a&gt; . &lt;code&gt;aggregate_tests&lt;/code&gt; se puede llamar varias veces para ejecutar varios conjuntos de pruebas. Se pueden usar varias instancias de &lt;code&gt;Test::Harness&lt;/code&gt; para pasar los resultados a un solo agregador, de modo que se puedan ejecutar diferentes partes de un conjunto de pruebas complejas usando diferentes configuraciones de &lt;code&gt;TAP::Harness&lt;/code&gt; . Esto es &amp;uacute;til, por ejemplo, en el caso de que algunas pruebas deban ejecutarse en paralelo pero otras no son adecuadas para la ejecuci&amp;oacute;n en paralelo.</target>
        </trans-unit>
        <trans-unit id="30bf8d2a1f537e3de40966fbaca2a259bafa1326" translate="yes" xml:space="preserve">
          <source>Test return values in various contexts (boolean, scalar, list, lvalue).</source>
          <target state="translated">Los valores de retorno de la prueba en varios contextos (booleano,escalar,lista,lvalor).</target>
        </trans-unit>
        <trans-unit id="87b25e7182a4957634bdf28eb60aa42f52a26bbf" translate="yes" xml:space="preserve">
          <source>Test style</source>
          <target state="translated">Estilo de prueba</target>
        </trans-unit>
        <trans-unit id="5f967f7d2e1f440aeb4c91e854d76b62157077cf" translate="yes" xml:space="preserve">
          <source>Test suite</source>
          <target state="translated">Conjunto de pruebas...</target>
        </trans-unit>
        <trans-unit id="26b3f7125d4977a4c818431649628fa0924ccde1" translate="yes" xml:space="preserve">
          <source>Test testsuites that have been built with</source>
          <target state="translated">Los testuites de prueba que han sido construidos con</target>
        </trans-unit>
        <trans-unit id="166736fddcc4133d965dff627cc8b8b46442426f" translate="yes" xml:space="preserve">
          <source>Test that a &lt;code&gt;long double&lt;/code&gt; is formatted correctly by &lt;code&gt;printf&lt;/code&gt;. Takes no arguments - the test value is hard-wired into the function (as &quot;7&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fd920652142c713f4086b5b623b0b9e9398272" translate="yes" xml:space="preserve">
          <source>Test that a double-precision floating point number is formatted correctly by &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8f9b4911bc55fcaaec09b2bda811ea7944f490" translate="yes" xml:space="preserve">
          <source>Test that a single-precision floating point number is formatted correctly by &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b615cea701e2b923c5f71779b58c9f119e965fa" translate="yes" xml:space="preserve">
          <source>Test that an &lt;code&gt;IV&lt;/code&gt; is formatted correctly by &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb28175623956ac2c7f684099558f1e73fc257b6" translate="yes" xml:space="preserve">
          <source>Test that an &lt;code&gt;NV&lt;/code&gt; is formatted correctly by &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb348ab3a2e878a4d2162fc950e38514289fa424" translate="yes" xml:space="preserve">
          <source>Test that an &lt;code&gt;UV&lt;/code&gt; is formatted correctly by &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62afa7b2c53f556142fec29768d4906ba6d2d520" translate="yes" xml:space="preserve">
          <source>Test that an &lt;code&gt;int&lt;/code&gt; is formatted correctly by &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3320bceb2035430c2e25314087b45b576a7104" translate="yes" xml:space="preserve">
          <source>Test that an &lt;code&gt;long&lt;/code&gt; is formatted correctly by &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8692c5f618e42142701d067170ebb338d0f048" translate="yes" xml:space="preserve">
          <source>Test that the given &lt;code&gt;pv&lt;/code&gt; (with length &lt;code&gt;len&lt;/code&gt;) doesn't contain any internal &lt;code&gt;NUL&lt;/code&gt; characters. If it does, set &lt;code&gt;errno&lt;/code&gt; to &lt;code&gt;ENOENT&lt;/code&gt;, optionally warn using the &lt;code&gt;syscalls&lt;/code&gt; category, and return FALSE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c743b9b50bdf1cbd4320751b7b3e3e77099e55b4" translate="yes" xml:space="preserve">
          <source>Test that the given &lt;code&gt;pv&lt;/code&gt; doesn't contain any internal &lt;code&gt;NUL&lt;/code&gt; characters. If it does, set &lt;code&gt;errno&lt;/code&gt; to ENOENT, optionally warn, and return FALSE.</source>
          <target state="translated">Pruebe que el &lt;code&gt;pv&lt;/code&gt; dado no contenga ning&amp;uacute;n &lt;code&gt;NUL&lt;/code&gt; interno NUL . Si es as&amp;iacute;, establezca &lt;code&gt;errno&lt;/code&gt; en ENOENT, opcionalmente advertir y devolver FALSE.</target>
        </trans-unit>
        <trans-unit id="935dc1f2c1449831bdafed1f538dec539127ac6a" translate="yes" xml:space="preserve">
          <source>Test the manual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e7a9e15ab34cf742c942e50d6aff3c06043d08" translate="yes" xml:space="preserve">
          <source>Test the perl C API</source>
          <target state="translated">Pruebe el perl C API</target>
        </trans-unit>
        <trans-unit id="1cda04f681171086e794af0b5d23d5d5ea0b6cdd" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if the first, &lt;code&gt;s1&lt;/code&gt;, is greater than or equal to the second, &lt;code&gt;s2&lt;/code&gt;. Returns true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a2e1515505333499048cba86227c80971a3aef" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if the first, &lt;code&gt;s1&lt;/code&gt;, is greater than the second, &lt;code&gt;s2&lt;/code&gt;. Returns true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7397a89d009fad58a08d3b40bff3d58047b11288" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if the first, &lt;code&gt;s1&lt;/code&gt;, is less than or equal to the second, &lt;code&gt;s2&lt;/code&gt;. Returns true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a4b766ad17990b550cf6d6e46e8c56bae5a196" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if the first, &lt;code&gt;s1&lt;/code&gt;, is less than the second, &lt;code&gt;s2&lt;/code&gt;. Returns true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67520e6cf1cb4f8414cc48c33fe0e43d736ba00" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if they are different. Returns true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07ce0712b3cc2e909c79e8b8e4be508ac97e959" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if they are different. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to compare. Returns true or false. (A wrapper for &lt;code&gt;strncmp&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0d79dd5feda7353def275a91909ef78bf53ffc" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if they are equal. Returns true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1fdf525381a678ac204c899e59ed1ee66b437b" translate="yes" xml:space="preserve">
          <source>Test two &lt;code&gt;NUL&lt;/code&gt;-terminated strings to see if they are equal. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to compare. Returns true or false. (A wrapper for &lt;code&gt;strncmp&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c712f8219cebd35791babf9ed3b703a8351ea8b" translate="yes" xml:space="preserve">
          <source>Test two buffers (which may contain embedded &lt;code&gt;NUL&lt;/code&gt; characters, to see if they are equal. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to compare. Returns zero if equal, or non-zero if non-equal.</source>
          <target state="translated">Pruebe dos b&amp;uacute;feres (que pueden contener caracteres &lt;code&gt;NUL&lt;/code&gt; incrustados , para ver si son iguales. El par&amp;aacute;metro &lt;code&gt;len&lt;/code&gt; indica el n&amp;uacute;mero de bytes a comparar. Devuelve cero si es igual o distinto de cero si no es igual).</target>
        </trans-unit>
        <trans-unit id="aa66181e4ff9ebce0ccdea0d81358cf4b122fa39" translate="yes" xml:space="preserve">
          <source>Test two buffers (which may contain embedded &lt;code&gt;NUL&lt;/code&gt; characters, to see if they are not equal. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to compare. Returns zero if non-equal, or non-zero if equal.</source>
          <target state="translated">Pruebe dos b&amp;uacute;feres (que pueden contener caracteres &lt;code&gt;NUL&lt;/code&gt; incrustados , para ver si no son iguales. El par&amp;aacute;metro &lt;code&gt;len&lt;/code&gt; indica el n&amp;uacute;mero de bytes a comparar. Devuelve cero si no es igual, o no cero si es igual).</target>
        </trans-unit>
        <trans-unit id="7588b6c061b826b0f7a0fe2738aa760c611f4b7d" translate="yes" xml:space="preserve">
          <source>Test two strings to see if the first, &lt;code&gt;s1&lt;/code&gt; , is greater than or equal to the second, &lt;code&gt;s2&lt;/code&gt; . Returns true or false.</source>
          <target state="translated">Pruebe dos cadenas para ver si la primera, &lt;code&gt;s1&lt;/code&gt; , es mayor o igual que la segunda, &lt;code&gt;s2&lt;/code&gt; . Devuelve verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="960024a856f809dce4509cd90004cd8da3ca6ba1" translate="yes" xml:space="preserve">
          <source>Test two strings to see if the first, &lt;code&gt;s1&lt;/code&gt; , is greater than the second, &lt;code&gt;s2&lt;/code&gt; . Returns true or false.</source>
          <target state="translated">Pruebe dos cadenas para ver si la primera, &lt;code&gt;s1&lt;/code&gt; , es mayor que la segunda, &lt;code&gt;s2&lt;/code&gt; . Devuelve verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="ee2367cd81142917d4f07c520dafb2f8d390eb84" translate="yes" xml:space="preserve">
          <source>Test two strings to see if the first, &lt;code&gt;s1&lt;/code&gt; , is less than or equal to the second, &lt;code&gt;s2&lt;/code&gt; . Returns true or false.</source>
          <target state="translated">Pruebe dos cadenas para ver si la primera, &lt;code&gt;s1&lt;/code&gt; , es menor o igual que la segunda, &lt;code&gt;s2&lt;/code&gt; . Devuelve verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="57ddc2e399365a286280a07fe9ed50d6bfa9604c" translate="yes" xml:space="preserve">
          <source>Test two strings to see if the first, &lt;code&gt;s1&lt;/code&gt; , is less than the second, &lt;code&gt;s2&lt;/code&gt; . Returns true or false.</source>
          <target state="translated">Pruebe dos cadenas para ver si la primera, &lt;code&gt;s1&lt;/code&gt; , es menor que la segunda, &lt;code&gt;s2&lt;/code&gt; . Devuelve verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="237ab8c0b99038db78a7c54fb0bfdbb2ab764cbb" translate="yes" xml:space="preserve">
          <source>Test two strings to see if they are different. Returns true or false.</source>
          <target state="translated">Pruebe dos cuerdas para ver si son diferentes.Devuelve verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="fb2934866aafd7ff65638c4caf1d299244cb4e65" translate="yes" xml:space="preserve">
          <source>Test two strings to see if they are different. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to compare. Returns true or false. (A wrapper for &lt;code&gt;strncmp&lt;/code&gt; ).</source>
          <target state="translated">Pruebe dos cadenas para ver si son diferentes. El par&amp;aacute;metro &lt;code&gt;len&lt;/code&gt; indica el n&amp;uacute;mero de bytes a comparar. Devuelve verdadero o falso. (Una envoltura para &lt;code&gt;strncmp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="44326cf741b4ea53c3861e1c04224785c2787564" translate="yes" xml:space="preserve">
          <source>Test two strings to see if they are equal. Returns true or false.</source>
          <target state="translated">Pruebe dos cuerdas para ver si son iguales.Devuelve verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="f0b60c1b2d7c48750566bd13231437cae4745024" translate="yes" xml:space="preserve">
          <source>Test two strings to see if they are equal. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to compare. Returns true or false. (A wrapper for &lt;code&gt;strncmp&lt;/code&gt; ).</source>
          <target state="translated">Prueba dos cadenas para ver si son iguales. El par&amp;aacute;metro &lt;code&gt;len&lt;/code&gt; indica el n&amp;uacute;mero de bytes a comparar. Devuelve verdadero o falso. (Una envoltura para &lt;code&gt;strncmp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5ea556cadafc54f605e5e63d55b8b6c8576ae334" translate="yes" xml:space="preserve">
          <source>Test your change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368b5822e8d2728701a3f8f8b37d0363f9573092" translate="yes" xml:space="preserve">
          <source>Test.pl</source>
          <target state="translated">Test.pl</target>
        </trans-unit>
        <trans-unit id="2b84f621c0fd4ba8bd514c5c43ab9a897c8c014e" translate="yes" xml:space="preserve">
          <source>Test2</source>
          <target state="translated">Test2</target>
        </trans-unit>
        <trans-unit id="eda8c363c27f97460f067dbb6abdfc09dc29c0c8" translate="yes" xml:space="preserve">
          <source>Test2 - Framework for writing test tools that all work together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7914da6063f1d3eee08e8be56ecff6a038d13b7" translate="yes" xml:space="preserve">
          <source>Test2 based tools produce events which get passed through a processing system before being output by a formatter. This event system allows for rich plugin and extension support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398a86dff1e296880e5d0b4d74bd2ff1122d7b20" translate="yes" xml:space="preserve">
          <source>Test2 is a new testing framework produced by forking &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt;, completely refactoring it, adding many new features and capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ec663be5e2702eeee07b6691bdb59dd7f152b6" translate="yes" xml:space="preserve">
          <source>Test2 support for forking and threading can be turned on using &lt;a href=&quot;Test2::IPC&quot;&gt;Test2::IPC&lt;/a&gt;. Once turned on threading and forking operate sanely and work as one would expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c00e9e770edcdcec782d15abea07abe8e90329" translate="yes" xml:space="preserve">
          <source>Test2 uses an &lt;a href=&quot;Test2::API::Context&quot;&gt;Test2::API::Context&lt;/a&gt; object to track filename, line number, and tool details. This object greatly simplifies tracking for where errors should be reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e285ff9d0222e729d45ac11b2fa114520dbd2f49" translate="yes" xml:space="preserve">
          <source>Test2::</source>
          <target state="translated">Test2::</target>
        </trans-unit>
        <trans-unit id="aed608f477d17069118048380cb834a46100702e" translate="yes" xml:space="preserve">
          <source>Test2::API</source>
          <target state="translated">Test2::API</target>
        </trans-unit>
        <trans-unit id="b64e44401f91aa4335033516e0e358ab2918bb91" translate="yes" xml:space="preserve">
          <source>Test2::API - Primary interface for writing Test2 based testing tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd3f4fa6597ae4905596818a71dd6f194f5a192" translate="yes" xml:space="preserve">
          <source>Test2::API::</source>
          <target state="translated">Test2::API::</target>
        </trans-unit>
        <trans-unit id="823aa9e1a97b79904e6a3b276b63d70ac1eaf933" translate="yes" xml:space="preserve">
          <source>Test2::API::Breakage</source>
          <target state="translated">Test2::API::Breakage</target>
        </trans-unit>
        <trans-unit id="0861d9570e8c51fbb90b7b320182f504e2357c33" translate="yes" xml:space="preserve">
          <source>Test2::API::Breakage - What breaks at what version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2ccf18a794e7b19dd498228e83500720827311" translate="yes" xml:space="preserve">
          <source>Test2::API::Context</source>
          <target state="translated">Test2::API::Context</target>
        </trans-unit>
        <trans-unit id="6392ed68dbc48f41c56e98e3b78066ea6fd6f6e7" translate="yes" xml:space="preserve">
          <source>Test2::API::Context - Object to represent a testing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8928930b42eb0f1f15f9f1786db57584d36450f7" translate="yes" xml:space="preserve">
          <source>Test2::API::Instance</source>
          <target state="translated">Test2::API::Instance</target>
        </trans-unit>
        <trans-unit id="e9d71ad619dcb1f03cb3d047e079b7b873049690" translate="yes" xml:space="preserve">
          <source>Test2::API::Instance - Object used by Test2::API under the hood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4ef69b915bbedef7a6aa2e3dfda1acb8e00023" translate="yes" xml:space="preserve">
          <source>Test2::API::Stack</source>
          <target state="translated">Test2::API::Stack</target>
        </trans-unit>
        <trans-unit id="db39e7f918f59026c6ba1b1479540073a74dbe65" translate="yes" xml:space="preserve">
          <source>Test2::API::Stack - Object to manage a stack of &lt;a href=&quot;Test2::Hub&quot;&gt;Test2::Hub&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4066ca94daf4532238cf36f016b1d069a5ab7793" translate="yes" xml:space="preserve">
          <source>Test2::Bundle::</source>
          <target state="translated">Test2::Bundle::</target>
        </trans-unit>
        <trans-unit id="f57cc1ec8f9d37fc1b16d1973aeb44165f00421d" translate="yes" xml:space="preserve">
          <source>Test2::Event</source>
          <target state="translated">Test2::Event</target>
        </trans-unit>
        <trans-unit id="c7ab55a64912c0845c79bb212cfd817d09025066" translate="yes" xml:space="preserve">
          <source>Test2::Event - Base class for events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a208964b54ed95543dd315c416ecedfe690fe40" translate="yes" xml:space="preserve">
          <source>Test2::Event::</source>
          <target state="translated">Test2::Event::</target>
        </trans-unit>
        <trans-unit id="222da9b43da2c10e075571dbaaecb7acb8971f5c" translate="yes" xml:space="preserve">
          <source>Test2::Event::Bail</source>
          <target state="translated">Test2::Event::Bail</target>
        </trans-unit>
        <trans-unit id="c6639f4ee1d50a38a83d0aa08dbfdceab90fd9da" translate="yes" xml:space="preserve">
          <source>Test2::Event::Bail - Bailout!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3e3ba5854331919870c8337d909e52e4a076b8" translate="yes" xml:space="preserve">
          <source>Test2::Event::Diag</source>
          <target state="translated">Test2::Event::Diag</target>
        </trans-unit>
        <trans-unit id="dccbb51341c8ea96ae5a977ee141eea8bc86dbe4" translate="yes" xml:space="preserve">
          <source>Test2::Event::Diag - Diag event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8ebae9408bcb7bc43915bb7a2b06de25a46dec" translate="yes" xml:space="preserve">
          <source>Test2::Event::Encoding</source>
          <target state="translated">Test2::Event::Encoding</target>
        </trans-unit>
        <trans-unit id="38074f2997521b7c59670e4af13f02f3260f0037" translate="yes" xml:space="preserve">
          <source>Test2::Event::Encoding - Set the encoding for the output stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cdd65e18d257d6b093ce75ab07ea83b0a1f0f3" translate="yes" xml:space="preserve">
          <source>Test2::Event::Exception</source>
          <target state="translated">Test2::Event::Exception</target>
        </trans-unit>
        <trans-unit id="4701028ce3df2eea964013cdb647d8bf16f01e39" translate="yes" xml:space="preserve">
          <source>Test2::Event::Exception - Exception event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213b2187e0041e341c0be41fb190191567647040" translate="yes" xml:space="preserve">
          <source>Test2::Event::Fail</source>
          <target state="translated">Test2::Event::Fail</target>
        </trans-unit>
        <trans-unit id="aa94f0e56a9c0ead034b1b33c0cc1605dfbd21ef" translate="yes" xml:space="preserve">
          <source>Test2::Event::Fail - Event for a simple failed assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe59b86d85778b040125f222a3d01e10a712a40" translate="yes" xml:space="preserve">
          <source>Test2::Event::Generic</source>
          <target state="translated">Test2::Event::Generic</target>
        </trans-unit>
        <trans-unit id="dd44b53a7b2f21504f4c3cdcdd24bf5b428034bb" translate="yes" xml:space="preserve">
          <source>Test2::Event::Generic - Generic event type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5232466de0a182c8ac4368fe4af490d4cec125c5" translate="yes" xml:space="preserve">
          <source>Test2::Event::Note</source>
          <target state="translated">Test2::Event::Note</target>
        </trans-unit>
        <trans-unit id="2110f8724d8546b8c1bc6d82d78c7a0be5217629" translate="yes" xml:space="preserve">
          <source>Test2::Event::Note - Note event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413b4924db2b9633fc53631d16b5f8d56d2a8ec5" translate="yes" xml:space="preserve">
          <source>Test2::Event::Ok</source>
          <target state="translated">Test2::Event::Ok</target>
        </trans-unit>
        <trans-unit id="d26917c93a4a1ca59d02bfdcd1ca1e882315f897" translate="yes" xml:space="preserve">
          <source>Test2::Event::Ok - Ok event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8166088489a5bc91739c87f976810c6ecf6646a" translate="yes" xml:space="preserve">
          <source>Test2::Event::Pass</source>
          <target state="translated">Test2::Event::Pass</target>
        </trans-unit>
        <trans-unit id="e2c3f6ccdfd606b354f26fb929f5aa4379851e17" translate="yes" xml:space="preserve">
          <source>Test2::Event::Pass - Event for a simple passing assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baa0f71c7bde397357a6a05ab0a4b2170b6e32a" translate="yes" xml:space="preserve">
          <source>Test2::Event::Plan</source>
          <target state="translated">Test2::Event::Plan</target>
        </trans-unit>
        <trans-unit id="333336f9de46850c8a8c5e170a7fcf9c57fb3486" translate="yes" xml:space="preserve">
          <source>Test2::Event::Plan - The event of a plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f279cfd9072e8f5890e09755a89a14ab46a9338" translate="yes" xml:space="preserve">
          <source>Test2::Event::Skip</source>
          <target state="translated">Test2::Event::Skip</target>
        </trans-unit>
        <trans-unit id="523d29ebe5be339549d30bbd996c98332c98058b" translate="yes" xml:space="preserve">
          <source>Test2::Event::Skip - Skip event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0daedf830e1bee09f664aaa317a6afed11518990" translate="yes" xml:space="preserve">
          <source>Test2::Event::Subtest</source>
          <target state="translated">Test2::Event::Subtest</target>
        </trans-unit>
        <trans-unit id="f8e158cbc6534e5249fe882a4e9a0da5cc30a140" translate="yes" xml:space="preserve">
          <source>Test2::Event::Subtest - Event for subtest types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb06c64fdc632db67dc9bffd6c588a6a624ce76a" translate="yes" xml:space="preserve">
          <source>Test2::Event::TAP::Version</source>
          <target state="translated">Test2::Event::TAP::Version</target>
        </trans-unit>
        <trans-unit id="1c62f8d2de6366a8d87dd20fc3501e28352856dd" translate="yes" xml:space="preserve">
          <source>Test2::Event::TAP::Version - Event for TAP version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbc479c6c5dbbd07debac51d2e47f71debe301b" translate="yes" xml:space="preserve">
          <source>Test2::Event::V2</source>
          <target state="translated">Test2::Event::V2</target>
        </trans-unit>
        <trans-unit id="5d24bd5feb73d8653a7b629d67988cafd589322b" translate="yes" xml:space="preserve">
          <source>Test2::Event::V2 - Second generation event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16dd367cf4872654a6dce5ce401595d087cd64a" translate="yes" xml:space="preserve">
          <source>Test2::Event::Waiting</source>
          <target state="translated">Test2::Event::Waiting</target>
        </trans-unit>
        <trans-unit id="db005487809f2d8acd788bd2d2dc8b6a91556697" translate="yes" xml:space="preserve">
          <source>Test2::Event::Waiting - Tell all procs/threads it is time to be done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43b423903d35c0f3149a55b5aa7482144c6e821" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet</source>
          <target state="translated">Test2::EventFacet</target>
        </trans-unit>
        <trans-unit id="c11dcded6ce506a6e2d04a5f680ab6b7c80a91eb" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet - Base class for all event facets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d94b66b18c3d8c49c0f173453f4e670dd80f895" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::About</source>
          <target state="translated">Test2::EventFacet::About</target>
        </trans-unit>
        <trans-unit id="a7424501dd01bcb804f3da012e536a50271a2499" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::About - Facet with event details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7721bca6966ae188d61ed02c3583a52be94f3308" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Amnesty</source>
          <target state="translated">Test2::EventFacet::Amnesty</target>
        </trans-unit>
        <trans-unit id="75a05106886d311b44b3bdfccd8778e0c3f3f498" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Amnesty - Facet for assertion amnesty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0d1e162c4b6553c9b71ed64f5b8b1f9ed0917c" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Assert</source>
          <target state="translated">Test2::EventFacet::Assert</target>
        </trans-unit>
        <trans-unit id="7920cf94c19ae0f16a489d74a6da88912a69561f" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Assert - Facet representing an assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0154d814220406d368d99e18a174a4dddfb3bcd5" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Control</source>
          <target state="translated">Test2::EventFacet::Control</target>
        </trans-unit>
        <trans-unit id="5bcc831f6a254f05cbb0f0fadb63ba1c90548e4a" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Control - Facet for hub actions and behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62ade42351eb9bb31e48e3b2e93713fe6baeef8" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Error</source>
          <target state="translated">Test2::EventFacet::Error</target>
        </trans-unit>
        <trans-unit id="94ed284eb9c51ff089cc0a134463bf0d7a5d9b9b" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Error - Facet for errors that need to be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0f76e55accd6e82edf385f2c62f6f3fe2ff466" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Hub</source>
          <target state="translated">Test2::EventFacet::Hub</target>
        </trans-unit>
        <trans-unit id="ccf5d98be7eb2630ce4c2c621f114c26ae3ab3b1" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Hub - Facet for the hubs an event passes through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ac4e48a99349567b0a89ac444d73d09d49cdd1" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Info</source>
          <target state="translated">Test2::EventFacet::Info</target>
        </trans-unit>
        <trans-unit id="531a04a3d9a3002254fb82228c4742a0058169ae" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Info - Facet for information a developer might care about.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7657cf6e0d3cbe826429bd19cce6329342e8371e" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Info::Table</source>
          <target state="translated">Test2::EventFacet::Info::Table</target>
        </trans-unit>
        <trans-unit id="919c466811c6c1ce82b3d1a77373a5994bc4ad1d" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Info::Table - Intermediary representation of a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e10762a18172dac09cb1485390bf5a8c468e654" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Meta</source>
          <target state="translated">Test2::EventFacet::Meta</target>
        </trans-unit>
        <trans-unit id="15764a4129b9ed520f0a3054a182ad077401eb37" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Meta - Facet for meta-data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ba28b1fef317b322342598dd7b5b1f2a0bfed2" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Parent</source>
          <target state="translated">Test2::EventFacet::Parent</target>
        </trans-unit>
        <trans-unit id="fc580dac3b702094a3a37054e781da56753a8202" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Parent - Facet for events contains other events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f017f4ef4b9f563bbf579d69dd0b07d01d083216" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Plan</source>
          <target state="translated">Test2::EventFacet::Plan</target>
        </trans-unit>
        <trans-unit id="1b853027bef935f244330f0dd4212616d550dd50" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Plan - Facet for setting the plan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5beff3ccc1dfe7e21a8d1577127506388549038" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Render</source>
          <target state="translated">Test2::EventFacet::Render</target>
        </trans-unit>
        <trans-unit id="8fdb0b599c005170ba486c3ab26ed301b039dad4" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Render - Facet that dictates how to render an event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f454a15df1938741674595a2355fd8747d3246c4" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Trace</source>
          <target state="translated">Test2::EventFacet::Trace</target>
        </trans-unit>
        <trans-unit id="68b35a88e0341af14e6394c735722451fceca859" translate="yes" xml:space="preserve">
          <source>Test2::EventFacet::Trace - Debug information for events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22810101357ee04450379aa51c30db96603d1bc0" translate="yes" xml:space="preserve">
          <source>Test2::Formatter</source>
          <target state="translated">Test2::Formatter</target>
        </trans-unit>
        <trans-unit id="24090f00c8f368b00c6a6e3049b282ad6483fd26" translate="yes" xml:space="preserve">
          <source>Test2::Formatter - Namespace for formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7ad9843e47802da1064f10a6ed0f941b4c6996" translate="yes" xml:space="preserve">
          <source>Test2::Formatter::</source>
          <target state="translated">Test2::Formatter::</target>
        </trans-unit>
        <trans-unit id="d8aebf053e28ed7412794daf98128ef12f654d34" translate="yes" xml:space="preserve">
          <source>Test2::Formatter::TAP</source>
          <target state="translated">Test2::Formatter::TAP</target>
        </trans-unit>
        <trans-unit id="46b4d5b6e41ec7c63f10f2b81b8d25b6ad48c467" translate="yes" xml:space="preserve">
          <source>Test2::Formatter::TAP - Standard TAP formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec1636c628a393391f1bd9b891d1aac73f6842e" translate="yes" xml:space="preserve">
          <source>Test2::Hub</source>
          <target state="translated">Test2::Hub</target>
        </trans-unit>
        <trans-unit id="9ef2e13502d5f0974e131f5f83a726361d1b54dd" translate="yes" xml:space="preserve">
          <source>Test2::Hub - The conduit through which all events flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e83b628262986793f10b10b71b5803fa827b55" translate="yes" xml:space="preserve">
          <source>Test2::Hub::</source>
          <target state="translated">Test2::Hub::</target>
        </trans-unit>
        <trans-unit id="d987d21918e08ef541654a1bdfad5ccaedf59e4f" translate="yes" xml:space="preserve">
          <source>Test2::Hub::Interceptor</source>
          <target state="translated">Test2::Hub::Interceptor</target>
        </trans-unit>
        <trans-unit id="259de78dc48b81a26c6c8f30e8cd739349d3c52a" translate="yes" xml:space="preserve">
          <source>Test2::Hub::Interceptor - Hub used by interceptor to grab results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfea7d0c04ab6a462bbac2592d6b16be7ef2d79" translate="yes" xml:space="preserve">
          <source>Test2::Hub::Interceptor::Terminator</source>
          <target state="translated">Test2::Hub::Interceptor::Terminator</target>
        </trans-unit>
        <trans-unit id="060da97eee8500d95c5711415f3dc7a4d015f4e9" translate="yes" xml:space="preserve">
          <source>Test2::Hub::Interceptor::Terminator - Exception class used by Test2::Hub::Interceptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3808bc674ba623811b11d43abef5d54200006dc8" translate="yes" xml:space="preserve">
          <source>Test2::Hub::Subtest</source>
          <target state="translated">Test2::Hub::Subtest</target>
        </trans-unit>
        <trans-unit id="daea2dc40ad5baee611aefac07d76a5653258a74" translate="yes" xml:space="preserve">
          <source>Test2::Hub::Subtest - Hub used by subtests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8f1da2d2d8e1dfdea6539c7c3b6cde2e255e80" translate="yes" xml:space="preserve">
          <source>Test2::IPC</source>
          <target state="translated">Test2::IPC</target>
        </trans-unit>
        <trans-unit id="259b7962c108b108b99848b7164604ace25b603c" translate="yes" xml:space="preserve">
          <source>Test2::IPC - Turn on IPC for threading or forking support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bae70236953a3ba88d368a2555897a3a683c900" translate="yes" xml:space="preserve">
          <source>Test2::IPC::</source>
          <target state="translated">Test2::IPC::</target>
        </trans-unit>
        <trans-unit id="2aa0e1ea9908aa1517ccfba9e9ebdec9f7fd42a9" translate="yes" xml:space="preserve">
          <source>Test2::IPC::Driver</source>
          <target state="translated">Test2::IPC::Driver</target>
        </trans-unit>
        <trans-unit id="e89eb8d9a5b88689747eb6772d8891a3419ee002" translate="yes" xml:space="preserve">
          <source>Test2::IPC::Driver - Base class for Test2 IPC drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa014e96987947baf8aa2b996530d5e78494607" translate="yes" xml:space="preserve">
          <source>Test2::IPC::Driver has an &lt;code&gt;import()&lt;/code&gt; method. All drivers inherit this import method. This import method registers the driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6247baaa37b5aa0c0b858ebf17f525faa50a3a74" translate="yes" xml:space="preserve">
          <source>Test2::IPC::Driver::</source>
          <target state="translated">Test2::IPC::Driver::</target>
        </trans-unit>
        <trans-unit id="df1632079981d93c731c27fbf0953b8c0110780f" translate="yes" xml:space="preserve">
          <source>Test2::IPC::Driver::Files</source>
          <target state="translated">Test2::IPC::Driver::Files</target>
        </trans-unit>
        <trans-unit id="d766b8fd7d9bfdba9a657a1322fd6250e8131728" translate="yes" xml:space="preserve">
          <source>Test2::IPC::Driver::Files - Temp dir + Files concurrency model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b37bcccaea4a2ac8fe8762dc5b314baa0c51f3" translate="yes" xml:space="preserve">
          <source>Test2::Plugin::</source>
          <target state="translated">Test2::Plugin::</target>
        </trans-unit>
        <trans-unit id="d68f31cbce13d814ae88248b74be13195971bcb1" translate="yes" xml:space="preserve">
          <source>Test2::Require::</source>
          <target state="translated">Test2::Require::</target>
        </trans-unit>
        <trans-unit id="92e3f4464ca08722bdba5e6448503ce92bb9a7b7" translate="yes" xml:space="preserve">
          <source>Test2::Tools::</source>
          <target state="translated">Test2::Tools::</target>
        </trans-unit>
        <trans-unit id="9f1a4ef48602a8e2128f3a0e8099a06fc4b66142" translate="yes" xml:space="preserve">
          <source>Test2::Tools::Tiny</source>
          <target state="translated">Test2::Tools::Tiny</target>
        </trans-unit>
        <trans-unit id="79dcd377299ffd1fe20b0bcd73f822a0e9ace962" translate="yes" xml:space="preserve">
          <source>Test2::Tools::Tiny - Tiny set of tools for unfortunate souls who cannot use &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e2aa276cb0ac9a0d3011cd620cb67dae65f37b" translate="yes" xml:space="preserve">
          <source>Test2::Transition</source>
          <target state="translated">Test2::Transition</target>
        </trans-unit>
        <trans-unit id="c87fd265441b37b65c97051a7a8d33c3d3df3323" translate="yes" xml:space="preserve">
          <source>Test2::Transition - Transition notes when upgrading to Test2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e290a0acf731a8e4ae28c48d463af20b82b5a396" translate="yes" xml:space="preserve">
          <source>Test2::Util</source>
          <target state="translated">Test2::Util</target>
        </trans-unit>
        <trans-unit id="9916e2fd617bea077d82a5dd41a45672a41cb8fe" translate="yes" xml:space="preserve">
          <source>Test2::Util - Tools used by Test2 and friends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6eb9596151fedd72d3d41a6e72618282af596f" translate="yes" xml:space="preserve">
          <source>Test2::Util::</source>
          <target state="translated">Test2::Util::</target>
        </trans-unit>
        <trans-unit id="d73a9b09244115670914ff2509686dc192be586b" translate="yes" xml:space="preserve">
          <source>Test2::Util::ExternalMeta</source>
          <target state="translated">Test2::Util::ExternalMeta</target>
        </trans-unit>
        <trans-unit id="4ce376298fd6e6528e5f02c77d1d3b4e0a46cece" translate="yes" xml:space="preserve">
          <source>Test2::Util::ExternalMeta - Allow third party tools to safely attach meta-data to your instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7604014ee8769c4f1c915fbdad0d5f25e9283637" translate="yes" xml:space="preserve">
          <source>Test2::Util::Facets2Legacy</source>
          <target state="translated">Test2::Util::Facets2Legacy</target>
        </trans-unit>
        <trans-unit id="8247e29b1a8250a4ea6c8a5f5a060d7f0399d878" translate="yes" xml:space="preserve">
          <source>Test2::Util::Facets2Legacy - Convert facet data to the legacy event API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0178a14e7a539df0e8eac67b9f265a91905f03e7" translate="yes" xml:space="preserve">
          <source>Test2::Util::HashBase</source>
          <target state="translated">Test2::Util::HashBase</target>
        </trans-unit>
        <trans-unit id="e3d53ed10a22c3962563aa98b744234fa941f302" translate="yes" xml:space="preserve">
          <source>Test2::Util::HashBase - Build hash based classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304c4e0ff5d5cb770757f774f08ee2ed78611096" translate="yes" xml:space="preserve">
          <source>Test2::Util::HashBase provides a function for retrieving a list of attributes for an Test2::Util::HashBase class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df7257ba0ff26dcc04c2983cb8974045fd2c82f" translate="yes" xml:space="preserve">
          <source>Test2::Util::Trace</source>
          <target state="translated">Test2::Util::Trace</target>
        </trans-unit>
        <trans-unit id="30e52b1d2e0031f38bdbbe2f1f65a20ef1bbc1b0" translate="yes" xml:space="preserve">
          <source>Test2::Util::Trace - Legacy wrapper fro &lt;a href=&quot;Test2::EventFacet::Trace&quot;&gt;Test2::EventFacet::Trace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2534f8dc09bc938850916623cc51a245fb3b04e8" translate="yes" xml:space="preserve">
          <source>Test::Able</source>
          <target state="translated">Test::Able</target>
        </trans-unit>
        <trans-unit id="1136a495270cb45dd3267352c039b37399d8bfdd" translate="yes" xml:space="preserve">
          <source>Test::Aggregate</source>
          <target state="translated">Test::Aggregate</target>
        </trans-unit>
        <trans-unit id="193904736b8940fdc2ba17861b0cc502cad2d12e" translate="yes" xml:space="preserve">
          <source>Test::Builder</source>
          <target state="translated">Test::Builder</target>
        </trans-unit>
        <trans-unit id="ab9974f668e2c6c0ffc2992746669dd361b94a4d" translate="yes" xml:space="preserve">
          <source>Test::Builder - Backend for building test libraries</source>
          <target state="translated">Test::Builder-Backend para la construcción de bibliotecas de prueba</target>
        </trans-unit>
        <trans-unit id="5111b242105d59084cb31e09df1b0f811c5f66e6" translate="yes" xml:space="preserve">
          <source>Test::Builder assumed everything would end up as TAP. Test2 makes no such assumption. Test2 provides ways for you to specify alternative and custom formatters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b54af1fc0cfa765b71e78e4e18039fd43150ca" translate="yes" xml:space="preserve">
          <source>Test::Builder is only thread-aware if threads.pm is loaded</source>
          <target state="translated">Prueba::El constructor sólo es consciente de los hilos si el threads.pm está cargado</target>
        </trans-unit>
        <trans-unit id="882498aa0deee0eaf2786e1c013e62fc64bca99d" translate="yes" xml:space="preserve">
          <source>Test::Builder only provided a handful of methods for generating lines of TAP. Test2 took inventory of everything people were doing with Test::Builder that required hacking it up. Test2 made public API functions for nearly all the desired functionality people didn't previously have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f281cea5cb958fbaba27c76fd1089904c4d2e8" translate="yes" xml:space="preserve">
          <source>Test::Builder subclass of Test2::Event::Diag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e1fd996c21804da41e7fd365d9b5baae50ea4e" translate="yes" xml:space="preserve">
          <source>Test::Builder subclass of Test2::Formatter::TAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49fdf2299317bf9d9dff7fce116cd0d0e8a3c2b" translate="yes" xml:space="preserve">
          <source>Test::Builder.</source>
          <target state="translated">Test::Builder.</target>
        </trans-unit>
        <trans-unit id="79c6ceab8e308a67e42d8cf4c5b83ab3491afc98" translate="yes" xml:space="preserve">
          <source>Test::Builder1.5/2 conditionals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b68144843ad4490acc1cceea81edee533ae15a" translate="yes" xml:space="preserve">
          <source>Test::Builder::Clutch</source>
          <target state="translated">Test::Builder::Clutch</target>
        </trans-unit>
        <trans-unit id="c2aadab602bd18d0f63c1096df14d2661c5c645e" translate="yes" xml:space="preserve">
          <source>Test::Builder::Formatter</source>
          <target state="translated">Test::Builder::Formatter</target>
        </trans-unit>
        <trans-unit id="b65d47cb23a2aae086b24a276b41605a5607bc8a" translate="yes" xml:space="preserve">
          <source>Test::Builder::Formatter - Test::Builder subclass of Test2::Formatter::TAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a921037b78151ec674b9e8b2042772f638e1ae3" translate="yes" xml:space="preserve">
          <source>Test::Builder::IO::Scalar</source>
          <target state="translated">Test::Builder::IO::Scalar</target>
        </trans-unit>
        <trans-unit id="8598b4873ed01a8a8a65021f790976f5909cde97" translate="yes" xml:space="preserve">
          <source>Test::Builder::IO::Scalar - A copy of IO::Scalar for Test::Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a007e7488b132a0e9d1aa8009a01ac991651ac14" translate="yes" xml:space="preserve">
          <source>Test::Builder::Module</source>
          <target state="translated">Test::Builder::Module</target>
        </trans-unit>
        <trans-unit id="3ed23c6a90bd99e62a3c52acce5c4439a1d74951" translate="yes" xml:space="preserve">
          <source>Test::Builder::Module - Base class for test modules</source>
          <target state="translated">Test::Constructor::Módulo-Clase base para módulos de prueba</target>
        </trans-unit>
        <trans-unit id="cc216e7a80df8491f0b761fca22c7d52cff231ca" translate="yes" xml:space="preserve">
          <source>Test::Builder::Module is a subclass of &lt;a href=&quot;../../exporter&quot;&gt;Exporter&lt;/a&gt; which means your module is also a subclass of Exporter. @EXPORT, @EXPORT_OK, etc... all act normally.</source>
          <target state="translated">Test :: Builder :: Module es una subclase de &lt;a href=&quot;../../exporter&quot;&gt;Exporter, lo&lt;/a&gt; que significa que su m&amp;oacute;dulo tambi&amp;eacute;n es una subclase de Exporter. @EXPORT, @EXPORT_OK, etc ... todos act&amp;uacute;an normalmente.</target>
        </trans-unit>
        <trans-unit id="beddeafc2200fcc739f218f443081251d72a00e9" translate="yes" xml:space="preserve">
          <source>Test::Builder::Module is a subclass of &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; which means your module is also a subclass of Exporter. @EXPORT, @EXPORT_OK, etc... all act normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c85c34391e2a59a9a1aebf543278d41eaede1e" translate="yes" xml:space="preserve">
          <source>Test::Builder::Module provides an &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; method which acts in the same basic way as &lt;a href=&quot;../more&quot;&gt;Test::More&lt;/a&gt;'s, setting the plan and controlling exporting of functions and variables. This allows your module to set the plan independent of &lt;a href=&quot;../more&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="translated">Test :: Builder :: Module proporciona un m&amp;eacute;todo &lt;code&gt;&lt;a href=&quot;../../functions/import&quot;&gt;import()&lt;/a&gt;&lt;/code&gt; que act&amp;uacute;a de la misma forma b&amp;aacute;sica que &lt;a href=&quot;../more&quot;&gt;Test :: More&lt;/a&gt; , configurando el plan y controlando la exportaci&amp;oacute;n de funciones y variables. Esto permite que su m&amp;oacute;dulo establezca el plan independientemente de &lt;a href=&quot;../more&quot;&gt;Test :: More&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f6c2ece6f56adee6a05f3b497d85cec7b976b9a" translate="yes" xml:space="preserve">
          <source>Test::Builder::Module provides an &lt;code&gt;import()&lt;/code&gt; method which acts in the same basic way as &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;'s, setting the plan and controlling exporting of functions and variables. This allows your module to set the plan independent of &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1860964402a6fbbf4a8ee83b8ff81c101e436168" translate="yes" xml:space="preserve">
          <source>Test::Builder::Module provides some methods of getting at the underlying Test::Builder object.</source>
          <target state="translated">Test::Builder::El módulo proporciona algunos métodos para llegar al objeto subyacente Test::Builder.</target>
        </trans-unit>
        <trans-unit id="dfe8750e469aab07b5d8dadae68c198e1a6ea505" translate="yes" xml:space="preserve">
          <source>Test::Builder::Tester</source>
          <target state="translated">Test::Builder::Tester</target>
        </trans-unit>
        <trans-unit id="99afed4f8190d67c7ca9fceff64feafac8a2c27f" translate="yes" xml:space="preserve">
          <source>Test::Builder::Tester - test testsuites that have been built with Test::Builder</source>
          <target state="translated">Test::Constructor::Probador-testuites de prueba que han sido construidos con Test::Constructor</target>
        </trans-unit>
        <trans-unit id="a5daa4b264c9be76b3e43bc5b6e1208a2a0f3088" translate="yes" xml:space="preserve">
          <source>Test::Builder::Tester does not handle plans well. It has never done anything special with plans. This means that plans from outside Test::Builder::Tester will effect Test::Builder::Tester, worse plans when using Test::Builder::Tester will effect overall testing. At this point there are no plans to fix this bug as people have come to depend on it, and Test::Builder::Tester is now discouraged in favor of &lt;code&gt;Test2::API::intercept()&lt;/code&gt;. See &lt;a href=&quot;https://github.com/Test-More/test-more/issues/667&quot;&gt;https://github.com/Test-More/test-more/issues/667&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b5ba34db69a6e0e7e2db842da88dc2874db319" translate="yes" xml:space="preserve">
          <source>Test::Builder::Tester::Color</source>
          <target state="translated">Test::Builder::Tester::Color</target>
        </trans-unit>
        <trans-unit id="2d500c7bf4e510506ebc84f5c768b05a6cccce1c" translate="yes" xml:space="preserve">
          <source>Test::Builder::Tester::Color - turn on colour in Test::Builder::Tester</source>
          <target state="translated">Prueba::Constructor::Probador::Color-enciende el color en Prueba::Constructor::Probador</target>
        </trans-unit>
        <trans-unit id="53667487e4c182cc6c194b110fdd4bf8602e9ca2" translate="yes" xml:space="preserve">
          <source>Test::Builder::TodoDiag</source>
          <target state="translated">Test::Builder::TodoDiag</target>
        </trans-unit>
        <trans-unit id="3002af054c03a9c23ba9d877d3c154ef71a2f214" translate="yes" xml:space="preserve">
          <source>Test::Builder::TodoDiag - Test::Builder subclass of Test2::Event::Diag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c62394a96db894e9826fa86cbfb9739d5ef32c0" translate="yes" xml:space="preserve">
          <source>Test::DBIx::Class::Schema</source>
          <target state="translated">Test::DBIx::Class::Schema</target>
        </trans-unit>
        <trans-unit id="5b5ccd27092122c879d215a96c52ebaf02aa4964" translate="yes" xml:space="preserve">
          <source>Test::Dist::VersionSync</source>
          <target state="translated">Test::Dist::VersionSync</target>
        </trans-unit>
        <trans-unit id="8c38eb7023c514bb86f58038021705c167c2100e" translate="yes" xml:space="preserve">
          <source>Test::Exception</source>
          <target state="translated">Test::Exception</target>
        </trans-unit>
        <trans-unit id="fa3770b25c372094da5ee1db5052ae09e83ef8c9" translate="yes" xml:space="preserve">
          <source>Test::FITesque</source>
          <target state="translated">Test::FITesque</target>
        </trans-unit>
        <trans-unit id="a7d826918b9640ee5aefda9817fc5812e0f756da" translate="yes" xml:space="preserve">
          <source>Test::Flatten</source>
          <target state="translated">Test::Flatten</target>
        </trans-unit>
        <trans-unit id="3a3efe85ae6b44923e15a1815a66c74e76451413" translate="yes" xml:space="preserve">
          <source>Test::Group</source>
          <target state="translated">Test::Group</target>
        </trans-unit>
        <trans-unit id="d22ac9fb1a5b65be8b995c5c95d6e3ef8ecf556f" translate="yes" xml:space="preserve">
          <source>Test::Harness</source>
          <target state="translated">Test::Harness</target>
        </trans-unit>
        <trans-unit id="999566fc7acbd2379a803a5571ff7ae9c8a53f12" translate="yes" xml:space="preserve">
          <source>Test::Harness - Run Perl standard test scripts with statistics</source>
          <target state="translated">Test::Arnés-Ejecute los scripts de prueba estándar de Perl con estadísticas</target>
        </trans-unit>
        <trans-unit id="468e0078216124f369b31903b11b8bc081cc36e2" translate="yes" xml:space="preserve">
          <source>Test::Harness is responsible for running test scripts, analysing their output and reporting success or failure. When I type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a7d2d4bb460e39ef11a61cdb53eb1618e9aac3" translate="yes" xml:space="preserve">
          <source>Test::Harness::Beyond</source>
          <target state="translated">Test::Harness::Beyond</target>
        </trans-unit>
        <trans-unit id="710da8f3b5001dc747ab1add20a7485f6580ee6f" translate="yes" xml:space="preserve">
          <source>Test::Harness::Beyond - Beyond make test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a575600ccb79ef75baad46fa5507b8a5c4e30ec7" translate="yes" xml:space="preserve">
          <source>Test::Kit</source>
          <target state="translated">Test::Kit</target>
        </trans-unit>
        <trans-unit id="e0d9d27235388a3f369fc7bba1f8eedaa8e97fe0" translate="yes" xml:space="preserve">
          <source>Test::Modern</source>
          <target state="translated">Test::Modern</target>
        </trans-unit>
        <trans-unit id="192bb93f9defdd2612446bcb1a3d05713afa6106" translate="yes" xml:space="preserve">
          <source>Test::Module::Used</source>
          <target state="translated">Test::Module::Used</target>
        </trans-unit>
        <trans-unit id="ba56db031e8622af899875ba4ed0dd10651ade7c" translate="yes" xml:space="preserve">
          <source>Test::Moose::More</source>
          <target state="translated">Test::Moose::More</target>
        </trans-unit>
        <trans-unit id="8bc418104ff43998dd3e36faf2584e579de681bc" translate="yes" xml:space="preserve">
          <source>Test::More</source>
          <target state="translated">Test::More</target>
        </trans-unit>
        <trans-unit id="6bfa9c991e549bd99bf8bd638cf1236dd03e5675" translate="yes" xml:space="preserve">
          <source>Test::More - yet another framework for writing test scripts</source>
          <target state="translated">Test::Más-otro marco de trabajo para escribir guiones de prueba</target>
        </trans-unit>
        <trans-unit id="09cadd12e0ce824bc15b5cc2302b3277911f9d5d" translate="yes" xml:space="preserve">
          <source>Test::More is loaded. This is ok:</source>
          <target state="translated">Prueba::Más está cargado.Esto está bien:</target>
        </trans-unit>
        <trans-unit id="298bd3075d22676dbcd8f6e949f1684dca1178d5" translate="yes" xml:space="preserve">
          <source>Test::More will only be aware of threads if &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; has been done</source>
          <target state="translated">Test :: M&amp;aacute;s s&amp;oacute;lo estar&amp;aacute; al tanto de las discusiones si &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; threads&lt;/code&gt; que se ha hecho</target>
        </trans-unit>
        <trans-unit id="196636e03a49e3d95a68eb5d1e772f5b446bf075" translate="yes" xml:space="preserve">
          <source>Test::More will only be aware of threads if &lt;code&gt;use threads&lt;/code&gt; has been done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a20537d51a274a0fa5bf1a1b0842f5d372eac9" translate="yes" xml:space="preserve">
          <source>Test::More works with Perls as old as 5.8.1.</source>
          <target state="translated">Prueba::More trabaja con Perls tan antiguo como 5.8.1.</target>
        </trans-unit>
        <trans-unit id="8218b4a58d60c04b93980b51121cc27fdf92c29b" translate="yes" xml:space="preserve">
          <source>Test::More::Prefix</source>
          <target state="translated">Test::More::Prefix</target>
        </trans-unit>
        <trans-unit id="ec61f56547ff7cd28c4fd12d8d489f875c46dac9" translate="yes" xml:space="preserve">
          <source>Test::ParallelSubtest</source>
          <target state="translated">Test::ParallelSubtest</target>
        </trans-unit>
        <trans-unit id="b9283666c0f7ee8bee524021520b4a58fc6faf53" translate="yes" xml:space="preserve">
          <source>Test::Pretty</source>
          <target state="translated">Test::Pretty</target>
        </trans-unit>
        <trans-unit id="6b788f39836a6b433e5df6d0783c10c859e93117" translate="yes" xml:space="preserve">
          <source>Test::SharedFork</source>
          <target state="translated">Test::SharedFork</target>
        </trans-unit>
        <trans-unit id="1daa106bfbe0f2bf149e9e695740563a8ed4ebb6" translate="yes" xml:space="preserve">
          <source>Test::Simple</source>
          <target state="translated">Test::Simple</target>
        </trans-unit>
        <trans-unit id="3b9ad9cea20f592f35fa16d26cd1276645b8b0c3" translate="yes" xml:space="preserve">
          <source>Test::Simple - Basic utilities for writing tests.</source>
          <target state="translated">Test::Simple-Utilidades básicas para los exámenes de escritura.</target>
        </trans-unit>
        <trans-unit id="475687d59b9799eb28a9bf920c296a61e431b89f" translate="yes" xml:space="preserve">
          <source>Test::Simple is &lt;b&gt;explicitly&lt;/b&gt; tested all the way back to perl 5.6.0.</source>
          <target state="translated">Test :: Simple se prueba &lt;b&gt;expl&amp;iacute;citamente&lt;/b&gt; desde perl 5.6.0.</target>
        </trans-unit>
        <trans-unit id="5f28cc996a292888e74e1d0b0e1cee8d8ca4199f" translate="yes" xml:space="preserve">
          <source>Test::Simple is thread-safe in perl 5.8.1 and up.</source>
          <target state="translated">Prueba::Simple es hilo seguro en perl 5.8.1 y superior.</target>
        </trans-unit>
        <trans-unit id="73bb7e431ecc9d090ef6327ee2db2dd9ad7a8638" translate="yes" xml:space="preserve">
          <source>Test::Simple will only report a maximum of 254 failures in its exit code. If this is a problem, you probably have a huge test script. Split it into multiple files. (Otherwise blame the Unix folks for using an unsigned short integer as the exit status).</source>
          <target state="translated">Prueba::Simple solo reportará un máximo de 254 fallas en su código de salida.Si esto es un problema,probablemente tengas un enorme guión de prueba.Dividirlo en múltiples archivos.(De lo contrario,culpar a la gente de Unix por usar un entero corto sin firmar como estado de salida).</target>
        </trans-unit>
        <trans-unit id="8aa960dec0e59265b42ae7c53ff6c2bb33cb537d" translate="yes" xml:space="preserve">
          <source>Test::Simple will start by printing number of tests run in the form &quot;1..M&quot; (so &quot;1..5&quot; means you're going to run 5 tests). This strange format lets &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; know how many tests you plan on running in case something goes horribly wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7410d0684050e7e2cf37f448e25d1181f683a339" translate="yes" xml:space="preserve">
          <source>Test::Simple will start by printing number of tests run in the form &quot;1..M&quot; (so &quot;1..5&quot; means you're going to run 5 tests). This strange format lets &lt;a href=&quot;harness&quot;&gt;Test::Harness&lt;/a&gt; know how many tests you plan on running in case something goes horribly wrong.</source>
          <target state="translated">Test :: Simple comenzar&amp;aacute; imprimiendo el n&amp;uacute;mero de pruebas ejecutadas en la forma &quot;1..M&quot; (por lo que &quot;1..5&quot; significa que va a ejecutar 5 pruebas). Este formato extra&amp;ntilde;o le permite a &lt;a href=&quot;harness&quot;&gt;Test :: Harness&lt;/a&gt; saber cu&amp;aacute;ntas pruebas planea ejecutar en caso de que algo salga terriblemente mal.</target>
        </trans-unit>
        <trans-unit id="dad41aad99148e817cb791ab1874c49f4dd7b526" translate="yes" xml:space="preserve">
          <source>Test::Tester</source>
          <target state="translated">Test::Tester</target>
        </trans-unit>
        <trans-unit id="8acb8c70dcb4cd96a3e80ad8c60dfdc954c732ae" translate="yes" xml:space="preserve">
          <source>Test::Tester - Ease testing test modules built with Test::Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c807179d1ac6c0d1012cd2c0455c92e0bc574a1" translate="yes" xml:space="preserve">
          <source>Test::Tester::Capture</source>
          <target state="translated">Test::Tester::Capture</target>
        </trans-unit>
        <trans-unit id="34d5b01db7ffd8049c2fce4af0432b62a248b560" translate="yes" xml:space="preserve">
          <source>Test::Tester::Capture - Help testing test modules built with Test::Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a458c6dc8e9ff30e8f733b126620031229080ac" translate="yes" xml:space="preserve">
          <source>Test::Tester::Capture is a cut down and hacked up version of Test::Builder. Test::Builder was written by chromatic &amp;lt;chromatic@wgz.org&amp;gt; and Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e02cff79037d04f0d5bb99326725d2ece3d0d2" translate="yes" xml:space="preserve">
          <source>Test::Tester::CaptureRunner</source>
          <target state="translated">Test::Tester::CaptureRunner</target>
        </trans-unit>
        <trans-unit id="91c101deb36c07d85cffc331897f08c9b07bf3e8" translate="yes" xml:space="preserve">
          <source>Test::Tester::CaptureRunner - Help testing test modules built with Test::Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26dc9e7487fca0c9f4cffd8168312e798d0afc9" translate="yes" xml:space="preserve">
          <source>Test::Tutorial</source>
          <target state="translated">Test::Tutorial</target>
        </trans-unit>
        <trans-unit id="02f397dd5054f86d8966d3c1290f138f6ebe0f4c" translate="yes" xml:space="preserve">
          <source>Test::Tutorial - A tutorial about writing really basic tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a895a2ec6601bf0432d22dd921492b16b90ab206" translate="yes" xml:space="preserve">
          <source>Test::UseAllModules</source>
          <target state="translated">Test::UseAllModules</target>
        </trans-unit>
        <trans-unit id="bf429510e44f5fd6da7cc7782aa21fed2fafa3e5" translate="yes" xml:space="preserve">
          <source>Test::Wrapper</source>
          <target state="translated">Test::Wrapper</target>
        </trans-unit>
        <trans-unit id="2041e8b48dd73d1c03506e63605772b484021ff1" translate="yes" xml:space="preserve">
          <source>Test::use::ok</source>
          <target state="translated">Test::use::ok</target>
        </trans-unit>
        <trans-unit id="85de35d70454052811bfbba08699cf789b433ab6" translate="yes" xml:space="preserve">
          <source>Test::use::ok - Alternative to Test::More::use_ok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="df0cbdcfcbefab8ee9cdb49385d677707edb64f0" translate="yes" xml:space="preserve">
          <source>Testing Anomalies with Perl on OS/390</source>
          <target state="translated">Prueba de anomalías con Perl en OS/390</target>
        </trans-unit>
        <trans-unit id="5570491e686f99f120f682632ae7878ad3d5e6f3" translate="yes" xml:space="preserve">
          <source>Testing Perl on AmigaOS</source>
          <target state="translated">Probando el Perl en el AmigaOS</target>
        </trans-unit>
        <trans-unit id="8fcfced2bef4012741d97c1ae50789df4c2ca1a7" translate="yes" xml:space="preserve">
          <source>Testing Perl on BS2000</source>
          <target state="translated">Probando el Perl en el BS2000</target>
        </trans-unit>
        <trans-unit id="d2f23703acfdab063aa7e2b458c49da1d7edf65c" translate="yes" xml:space="preserve">
          <source>Testing Perl on DOS</source>
          <target state="translated">Probando Perl en DOS</target>
        </trans-unit>
        <trans-unit id="06d9fe11979b660c9a4ee9181d453bdc4d62d418" translate="yes" xml:space="preserve">
          <source>Testing Perl on Tru64</source>
          <target state="translated">Probando Perl en Tru64</target>
        </trans-unit>
        <trans-unit id="ad2407f8ab58aad232d3d10c4a28600678ba9ac4" translate="yes" xml:space="preserve">
          <source>Testing Perl on Windows</source>
          <target state="translated">Probando Perl en Windows</target>
        </trans-unit>
        <trans-unit id="77bcc7871b8f58fd20b1c5a5350ee1211c163038" translate="yes" xml:space="preserve">
          <source>Testing for broken locales</source>
          <target state="translated">Pruebas para detectar locales rotos</target>
        </trans-unit>
        <trans-unit id="8a625de0654c02e74db29ae73bd5e3bde68f2ba9" translate="yes" xml:space="preserve">
          <source>Testing for exact floating-point equality or inequality is not a good idea. Here's a (relatively expensive) work-around to compare whether two floating-point numbers are equal to a particular number of decimal places. See Knuth, volume II, for a more robust treatment of this topic.</source>
          <target state="translated">La prueba de la igualdad o desigualdad exacta en punto flotante no es una buena idea.He aquí una solución (relativamente costosa)para comparar si dos números en coma flotante son iguales a un número determinado de decimales.Véase Knuth,volumen II,para un tratamiento más robusto de este tema.</target>
        </trans-unit>
        <trans-unit id="ce74fac01896559c610eb3a5a4dbe52a84d8dafc" translate="yes" xml:space="preserve">
          <source>Testing for operating systems or versions when should be testing for features</source>
          <target state="translated">Prueba de sistemas operativos o versiones cuando debería estar probando las características</target>
        </trans-unit>
        <trans-unit id="2d25b81a3e33ddcbb9c9dc8657d0fadaaa4f4848" translate="yes" xml:space="preserve">
          <source>Testing lots of values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e225b583da27a200eb4cb29e5d543c5d33dff11a" translate="yes" xml:space="preserve">
          <source>Testing results: &lt;a href=&quot;http://www.cpantesters.org/&quot;&gt;http://www.cpantesters.org/&lt;/a&gt;</source>
          <target state="translated">Resultados de las pruebas: &lt;a href=&quot;http://www.cpantesters.org/&quot;&gt;http://www.cpantesters.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fb7daa9466444fb2d40197eaff882519cbfe5af" translate="yes" xml:space="preserve">
          <source>Testing results: &lt;a href=&quot;https://www.cpantesters.org/&quot;&gt;https://www.cpantesters.org/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062a3b44009f84b9f2800778be4849f48c73f2e1" translate="yes" xml:space="preserve">
          <source>Testing the patch</source>
          <target state="translated">Probando el parche</target>
        </trans-unit>
        <trans-unit id="3d3998625037d01c3f0c18b46c8e2f6a0db08edf" translate="yes" xml:space="preserve">
          <source>Testing tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73860e29950984e7ebc73550412c5d939d1b2f02" translate="yes" xml:space="preserve">
          <source>Testing with taint mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="16d924262049c4868fcbd9b1e4dbe661fd3a3f60" translate="yes" xml:space="preserve">
          <source>Tests are run from the top level of your distribution. So inside a test you would refer to ./lib to enter the lib directory, for example.</source>
          <target state="translated">Las pruebas se realizan desde el nivel superior de su distribución.Así que dentro de una prueba te referirías a ./lib para entrar en el directorio lib,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="f8610f229cb8bffff5963f6ac85b8ed60c32307d" translate="yes" xml:space="preserve">
          <source>Tests break due to subtest indentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a6b8165e3eb024d50e4aac5941e40919fd1c85" translate="yes" xml:space="preserve">
          <source>Tests for basic control structures, &lt;code&gt;if/else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; , subroutines, etc.</source>
          <target state="translated">Pruebas para estructuras de control b&amp;aacute;sicas, &lt;code&gt;if/else&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , subrutinas, etc.</target>
        </trans-unit>
        <trans-unit id="43a6cf885d16a46b82e0be5400cae40cc21567ca" translate="yes" xml:space="preserve">
          <source>Tests for basic control structures, &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, subroutines, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23a0f9aaa05867bc6031160779c65549d0d4574" translate="yes" xml:space="preserve">
          <source>Tests for basic issues of how Perl parses and compiles itself.</source>
          <target state="translated">Pruebas para cuestiones básicas de cómo Perl se analiza y compila a sí mismo.</target>
        </trans-unit>
        <trans-unit id="308c251d349eaa69d0bf0cd8f27225db41d2132b" translate="yes" xml:space="preserve">
          <source>Tests for built-in IO functions, including command line arguments.</source>
          <target state="translated">Pruebas de funciones IO incorporadas,incluyendo argumentos de línea de comando.</target>
        </trans-unit>
        <trans-unit id="19b2942a8db27974454d5941c50ac27e7e57bf55" translate="yes" xml:space="preserve">
          <source>Tests for core modules in the</source>
          <target state="translated">Las pruebas de los módulos centrales en el</target>
        </trans-unit>
        <trans-unit id="b5bc9dd6c6b565df077d3e101f86339fa68c2de9" translate="yes" xml:space="preserve">
          <source>Tests for features of how perl actually runs, including exit codes and handling of PERL* environment variables.</source>
          <target state="translated">Pruebas de características de cómo funciona realmente el PERL,incluyendo códigos de salida y manejo de las variables de entorno del PERL*.</target>
        </trans-unit>
        <trans-unit id="3267c94afb370d057a2cbf7d80804c00a071b8c7" translate="yes" xml:space="preserve">
          <source>Tests for modules in</source>
          <target state="translated">Las pruebas de los módulos en</target>
        </trans-unit>
        <trans-unit id="546a42daa356e4d754d8415b0cf28f28144cb38f" translate="yes" xml:space="preserve">
          <source>Tests for perl's built in functions that don't fit into any of the other directories.</source>
          <target state="translated">Pruebas de funciones incorporadas de Perl que no encajan en ninguno de los otros directorios.</target>
        </trans-unit>
        <trans-unit id="7dde17b953b0dbe2392223a460035fd53ab6fcb8" translate="yes" xml:space="preserve">
          <source>Tests for perl's built in functions which, like those in</source>
          <target state="translated">Las pruebas para las funciones incorporadas de Perl que,como las de</target>
        </trans-unit>
        <trans-unit id="cee38a612a6bf39e0ad8abf7e176cb7eb3696a9c" translate="yes" xml:space="preserve">
          <source>Tests for perl's method resolution order implementations (see &lt;a href=&quot;mro&quot;&gt;mro&lt;/a&gt;).</source>
          <target state="translated">Pruebas para implementaciones de orden de resoluci&amp;oacute;n de m&amp;eacute;todos de perl (ver &lt;a href=&quot;mro&quot;&gt;mro&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="20b59967ab49cfe543876fa9d6d79f51e0848a3e" translate="yes" xml:space="preserve">
          <source>Tests for regex related functions or behaviour. (These used to live in t/op).</source>
          <target state="translated">Pruebas de las funciones o el comportamiento relacionados con la regex.(Estos solían vivir en t/op).</target>
        </trans-unit>
        <trans-unit id="9a9539800599d59b0f69e2e288d490ed3068858e" translate="yes" xml:space="preserve">
          <source>Tests for the absolute basic functionality of Perl. This includes &lt;code&gt;if&lt;/code&gt; , basic file reads and writes, simple regexes, etc. These are run first in the test suite and if any of them fail, something is</source>
          <target state="translated">Prueba la funcionalidad b&amp;aacute;sica absoluta de Perl. Esto incluye &lt;code&gt;if&lt;/code&gt; , lecturas y escrituras de archivos b&amp;aacute;sicos, expresiones regulares simples, etc. Estos se ejecutan primero en el conjunto de pruebas y si alguno de ellos falla, algo es</target>
        </trans-unit>
        <trans-unit id="8ad550acb94fcd95cceafdb6277d5fdd95b24d49" translate="yes" xml:space="preserve">
          <source>Tests for the absolute basic functionality of Perl. This includes &lt;code&gt;if&lt;/code&gt;, basic file reads and writes, simple regexes, etc. These are run first in the test suite and if any of them fail, something is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c72675b2d7c270a253600fe2e92bb83c326034f" translate="yes" xml:space="preserve">
          <source>Tests for the core support of Unicode.</source>
          <target state="translated">Pruebas para el soporte del núcleo de Unicode.</target>
        </trans-unit>
        <trans-unit id="5399480a16c4de144214dd4ce3a72127bb1a23c7" translate="yes" xml:space="preserve">
          <source>Tests for your modules go here. Each test filename ends with a .t. So</source>
          <target state="translated">Las pruebas para sus módulos van aquí.Cada nombre de archivo de prueba termina con un .t.Así que</target>
        </trans-unit>
        <trans-unit id="3b09fe0c89b9d62c4f3f3bd0ca9b2eec4dcf9e3b" translate="yes" xml:space="preserve">
          <source>Tests if a directory exists.</source>
          <target state="translated">Comprueba si existe un directorio.</target>
        </trans-unit>
        <trans-unit id="46dcf6b14fde2f007d3642aeb765c51b6d6d9ef7" translate="yes" xml:space="preserve">
          <source>Tests if a file exists and is not empty (size &amp;gt; 0).</source>
          <target state="translated">Comprueba si un archivo existe y no est&amp;aacute; vac&amp;iacute;o (tama&amp;ntilde;o&amp;gt; 0).</target>
        </trans-unit>
        <trans-unit id="6b574534ebbfa4f25620de8b753e474bc0774320" translate="yes" xml:space="preserve">
          <source>Tests if a file exists.</source>
          <target state="translated">Comprueba si existe un archivo.</target>
        </trans-unit>
        <trans-unit id="cbd83d5913990ad1027b8f9518f00ff7c97af8a7" translate="yes" xml:space="preserve">
          <source>Tests if some arbitrary number of bytes begins in a valid UTF-8 character. Note that an INVARIANT (i.e. ASCII on non-EBCDIC machines) character is a valid UTF-8 character. The actual number of bytes in the UTF-8 character will be returned if it is valid, otherwise 0.</source>
          <target state="translated">Comprueba si un número arbitrario de bytes comienza en un carácter UTF-8 válido.Observe que un carácter INVARIANTE (es decir,ASCII en máquinas no EBCDIC)es un carácter UTF-8 válido.El número real de bytes en el carácter UTF-8 será devuelto si es válido,de lo contrario 0.</target>
        </trans-unit>
        <trans-unit id="44e861c8808d6c4fdc4afa5679c3cee1a9b5d6ca" translate="yes" xml:space="preserve">
          <source>Tests if the SV is an RV.</source>
          <target state="translated">Comprueba si el SV es un RV.</target>
        </trans-unit>
        <trans-unit id="e941f360f3702d2e201c15e9113b9156e131c64f" translate="yes" xml:space="preserve">
          <source>Tests if the source file exists and is not empty (size &amp;gt; 0). If it is not empty it copies it to the given destination with the given permissions.</source>
          <target state="translated">Comprueba si el archivo de origen existe y no est&amp;aacute; vac&amp;iacute;o (tama&amp;ntilde;o&amp;gt; 0). Si no est&amp;aacute; vac&amp;iacute;o, lo copia al destino dado con los permisos dados.</target>
        </trans-unit>
        <trans-unit id="8add41d28c736769282eb5984bc3956add793925" translate="yes" xml:space="preserve">
          <source>Tests if two threads objects are the same thread or not. This is overloaded to the more natural forms:</source>
          <target state="translated">Comprueba si dos objetos de hilo son el mismo hilo o no.Esto se sobrecarga a las formas más naturales:</target>
        </trans-unit>
        <trans-unit id="374b92e6c8d9a3ee7da76fc28e0b35de614ef062" translate="yes" xml:space="preserve">
          <source>Tests that have never failed will not be selected. To run all tests with the most recently failed first use</source>
          <target state="translated">Las pruebas que nunca han fallado no serán seleccionadas.Para ejecutar todas las pruebas con las más recientemente falladas primero use</target>
        </trans-unit>
        <trans-unit id="0b32728377a8f935217ef765a504aecedda1d3ff" translate="yes" xml:space="preserve">
          <source>Tests the SigSet object to see if it contains a specific signal.</source>
          <target state="translated">Prueba el objeto SigSet para ver si contiene una señal específica.</target>
        </trans-unit>
        <trans-unit id="018f42b8eff88fccb00a8501792db561a99e45b3" translate="yes" xml:space="preserve">
          <source>Tests the state of the source tree for various common errors. For example, it tests that everyone who is listed in the git log has a corresponding entry in the</source>
          <target state="translated">Prueba el estado del árbol fuente para varios errores comunes.Por ejemplo,comprueba que todos los que figuran en el registro de git tienen una entrada correspondiente en el</target>
        </trans-unit>
        <trans-unit id="ea2ffd035ac28e433a00f696dde2f14824fdd414" translate="yes" xml:space="preserve">
          <source>Tests will be run in the order found.</source>
          <target state="translated">Las pruebas se harán en el orden en que se encuentren.</target>
        </trans-unit>
        <trans-unit id="98125dc77105eee722883e53962bb713d1532fbc" translate="yes" xml:space="preserve">
          <source>Texas</source>
          <target state="translated">Texas</target>
        </trans-unit>
        <trans-unit id="e7d8144d0e2f5125039e56e9f410b15ff3f27544" translate="yes" xml:space="preserve">
          <source>Texas Instruments</source>
          <target state="translated">Texas Instruments</target>
        </trans-unit>
        <trans-unit id="c1c3994d542e6e140e686559285de68d361dbc43" translate="yes" xml:space="preserve">
          <source>Text Fields</source>
          <target state="translated">Campos de texto</target>
        </trans-unit>
        <trans-unit id="5295b0156f97937927214f3e61425549fb5528ba" translate="yes" xml:space="preserve">
          <source>Text after __DATA__ may be read via the filehandle &lt;code&gt;PACKNAME::DATA&lt;/code&gt; , where &lt;code&gt;PACKNAME&lt;/code&gt; is the package that was current when the __DATA__ token was encountered. The filehandle is left open pointing to the line after __DATA__. The program should &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt; DATA&lt;/code&gt; when it is done reading from it. (Leaving it open leaks filehandles if the module is reloaded for any reason, so it's a safer practice to close it.) For compatibility with older scripts written before __DATA__ was introduced, __END__ behaves like __DATA__ in the top level script (but not in files loaded with &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt;) and leaves the remaining contents of the file accessible via &lt;code&gt;main::DATA&lt;/code&gt; .</source>
          <target state="translated">El texto despu&amp;eacute;s de __DATA__ se puede leer a trav&amp;eacute;s del &lt;code&gt;PACKNAME::DATA&lt;/code&gt; , donde &lt;code&gt;PACKNAME&lt;/code&gt; es el paquete que estaba vigente cuando se encontr&amp;oacute; el token __DATA__. El identificador de archivo se deja abierto apuntando a la l&amp;iacute;nea despu&amp;eacute;s de __DATA__. El programa deber&amp;iacute;a &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt; DATA&lt;/code&gt; cuando haya terminado de leerlo. (Dejarlo abierto filtra los identificadores de archivos si el m&amp;oacute;dulo se vuelve a cargar por cualquier motivo, por lo que es una pr&amp;aacute;ctica m&amp;aacute;s segura cerrarlo). Por compatibilidad con scripts m&amp;aacute;s antiguos escritos antes de que se introdujera __DATA__, __END__ se comporta como __DATA__ en el script de nivel superior (pero no en archivos cargado con &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; ) y deja el contenido restante del archivo accesible a trav&amp;eacute;s de &lt;code&gt;main::DATA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3842cca55ef2d8dd670adcc834aa3853a804149a" translate="yes" xml:space="preserve">
          <source>Text after __DATA__ may be read via the filehandle &lt;code&gt;PACKNAME::DATA&lt;/code&gt;, where &lt;code&gt;PACKNAME&lt;/code&gt; is the package that was current when the __DATA__ token was encountered. The filehandle is left open pointing to the line after __DATA__. The program should &lt;code&gt;close DATA&lt;/code&gt; when it is done reading from it. (Leaving it open leaks filehandles if the module is reloaded for any reason, so it's a safer practice to close it.) For compatibility with older scripts written before __DATA__ was introduced, __END__ behaves like __DATA__ in the top level script (but not in files loaded with &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;do&lt;/code&gt;) and leaves the remaining contents of the file accessible via &lt;code&gt;main::DATA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b961306ccde8b23c4b7e5620da4263be5fc453" translate="yes" xml:space="preserve">
          <source>Text from a &lt;code&gt;&quot;#&quot;&lt;/code&gt; character until the end of the line is a comment, and is ignored. Exceptions include &lt;code&gt;&quot;#&quot;&lt;/code&gt; inside a string or regular expression.</source>
          <target state="translated">El texto desde un car&amp;aacute;cter &lt;code&gt;&quot;#&quot;&lt;/code&gt; hasta el final de la l&amp;iacute;nea es un comentario y se ignora. Las excepciones incluyen &lt;code&gt;&quot;#&quot;&lt;/code&gt; dentro de una cadena o expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="612222022f1b46958ab65767470934164201705e" translate="yes" xml:space="preserve">
          <source>Text sorted by numeric codepoint follows no reasonable alphabetic order; use the UCA for sorting text.</source>
          <target state="translated">El texto clasificado por punto de código numérico no sigue un orden alfabético razonable;use la UCA para clasificar el texto.</target>
        </trans-unit>
        <trans-unit id="2c6fa58228dea3c204f1dbf0a6dfadcd17082dee" translate="yes" xml:space="preserve">
          <source>Text strings (character strings)</source>
          <target state="translated">Cadenas de texto (cadenas de caracteres)</target>
        </trans-unit>
        <trans-unit id="3b64142186315d3b56e626d60aec3cca8845fddf" translate="yes" xml:space="preserve">
          <source>Text-mode filehandles</source>
          <target state="translated">Manipulación de archivos en modo de texto</target>
        </trans-unit>
        <trans-unit id="5f66be9f33facdd2db9a099e59f4d627dc79cb6a" translate="yes" xml:space="preserve">
          <source>Text-tokens from Pod::Simple::PullParser</source>
          <target state="translated">Textos de la vaina::Simple::PullParser</target>
        </trans-unit>
        <trans-unit id="538841f5b8d0f8755431ba6c721b56da44fdedea" translate="yes" xml:space="preserve">
          <source>Text/Binary</source>
          <target state="translated">Text/Binary</target>
        </trans-unit>
        <trans-unit id="0ff712854e85b7ca719cd920d585fda4d395d5a6" translate="yes" xml:space="preserve">
          <source>Text/Soundex.pm</source>
          <target state="translated">Text/Soundex.pm</target>
        </trans-unit>
        <trans-unit id="e496659a9c65305c9d5cc245d38c0b1cea09e5cd" translate="yes" xml:space="preserve">
          <source>Text2</source>
          <target state="translated">Text2</target>
        </trans-unit>
        <trans-unit id="76fdd8573b883583b24f2ee565ca6b0eb2a5486b" translate="yes" xml:space="preserve">
          <source>Text::Abbrev</source>
          <target state="translated">Text::Abbrev</target>
        </trans-unit>
        <trans-unit id="2068aa4164bd7ee8a2ded8f7cd23b18d6c9d99cd" translate="yes" xml:space="preserve">
          <source>Text::Abbrev - abbrev - create an abbreviation table from a list</source>
          <target state="translated">Texto::Abreviatura-abreviatura-crear una tabla de abreviaturas a partir de una lista</target>
        </trans-unit>
        <trans-unit id="3fa2f6e623c8f3b7b036f20657d7a8f10bb6417e" translate="yes" xml:space="preserve">
          <source>Text::Balanced</source>
          <target state="translated">Text::Balanced</target>
        </trans-unit>
        <trans-unit id="ed925f6d474c4516a347932710d3ebe30e7e56cb" translate="yes" xml:space="preserve">
          <source>Text::Balanced - Extract delimited text sequences from strings.</source>
          <target state="translated">Texto::Equilibrado-Extraer secuencias de texto delimitadas de las cadenas.</target>
        </trans-unit>
        <trans-unit id="e4b49cafa2ac97b401d3d68d8bed306fe21eb79b" translate="yes" xml:space="preserve">
          <source>Text::ParseWords</source>
          <target state="translated">Text::ParseWords</target>
        </trans-unit>
        <trans-unit id="4524c2c613f4d738713e1d030d34e60049e80d95" translate="yes" xml:space="preserve">
          <source>Text::ParseWords - parse text into an array of tokens or array of arrays</source>
          <target state="translated">Texto::ParseWords-parsear el texto en una matriz de fichas o en una matriz de matrices</target>
        </trans-unit>
        <trans-unit id="bdadcd3fc912962eb41c1688bb499f95c2ac99b6" translate="yes" xml:space="preserve">
          <source>Text::Tabs</source>
          <target state="translated">Text::Tabs</target>
        </trans-unit>
        <trans-unit id="d895b382c2e881055f9eeb7a0411fad11058bd8a" translate="yes" xml:space="preserve">
          <source>Text::Tabs - expand and unexpand tabs like unix expand(1) and unexpand(1)</source>
          <target state="translated">Texto::Pestañas-expandir y expandir pestañas como unix expandir(1)y expandir(1)</target>
        </trans-unit>
        <trans-unit id="4b087dde2df1e77a15a3f15af552e2d614eda1ab" translate="yes" xml:space="preserve">
          <source>Text::Tabs does most of what the unix utilities expand(1) and unexpand(1) do. Given a line with tabs in it, &lt;code&gt;expand&lt;/code&gt; replaces those tabs with the appropriate number of spaces. Given a line with or without tabs in it, &lt;code&gt;unexpand&lt;/code&gt; adds tabs when it can save bytes by doing so, like the &lt;code&gt;unexpand -a&lt;/code&gt; command.</source>
          <target state="translated">Text :: Tabs hace la mayor parte de lo que hacen las utilidades de Unix expand (1) y no expandir (1). Dada una l&amp;iacute;nea con pesta&amp;ntilde;as, &lt;code&gt;expand&lt;/code&gt; ir reemplaza esas pesta&amp;ntilde;as con el n&amp;uacute;mero apropiado de espacios. Dada una l&amp;iacute;nea con o sin pesta&amp;ntilde;as, &lt;code&gt;unexpand&lt;/code&gt; agrega pesta&amp;ntilde;as cuando puede ahorrar bytes al hacerlo, como el comando &lt;code&gt;unexpand -a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f269210fd9d87098c23ad7f43c52bf42decefb07" translate="yes" xml:space="preserve">
          <source>Text::Tabs handles only tabs (&lt;code&gt;&quot;\t&quot;&lt;/code&gt; ) and combining characters (&lt;code&gt;/\pM/&lt;/code&gt; ). It doesn't count backwards for backspaces (&lt;code&gt;&quot;\t&quot;&lt;/code&gt; ), omit other non-printing control characters (&lt;code&gt;/\pC/&lt;/code&gt; ), or otherwise deal with any other zero-, half-, and full-width characters.</source>
          <target state="translated">Text :: Tabs maneja solo pesta&amp;ntilde;as ( &lt;code&gt;&quot;\t&quot;&lt;/code&gt; ) y combinaci&amp;oacute;n de caracteres ( &lt;code&gt;/\pM/&lt;/code&gt; ). No cuenta hacia atr&amp;aacute;s para los retrocesos ( &lt;code&gt;&quot;\t&quot;&lt;/code&gt; ), omite otros caracteres de control que no sean de impresi&amp;oacute;n ( &lt;code&gt;/\pC/&lt;/code&gt; ), ni trata con ning&amp;uacute;n otro car&amp;aacute;cter de ancho cero, medio o completo.</target>
        </trans-unit>
        <trans-unit id="b575607717c2ca75293a1a2f973ea2178607244e" translate="yes" xml:space="preserve">
          <source>Text::Tabs handles only tabs (&lt;code&gt;&quot;\t&quot;&lt;/code&gt;) and combining characters (&lt;code&gt;/\pM/&lt;/code&gt;). It doesn't count backwards for backspaces (&lt;code&gt;&quot;\t&quot;&lt;/code&gt;), omit other non-printing control characters (&lt;code&gt;/\pC/&lt;/code&gt;), or otherwise deal with any other zero-, half-, and full-width characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b226bf7a7ae42bd7cbd6a0b3ba78466abba19e61" translate="yes" xml:space="preserve">
          <source>Text::Wrap</source>
          <target state="translated">Text::Wrap</target>
        </trans-unit>
        <trans-unit id="8aabd1ad489c52bb200edd21bc6dce9b91083963" translate="yes" xml:space="preserve">
          <source>Text::Wrap - line wrapping to form simple paragraphs</source>
          <target state="translated">Texto::Envoltura-envoltura de línea para formar párrafos simples</target>
        </trans-unit>
        <trans-unit id="f934f68f6305075635ab21032f0c6eb35d0fa39c" translate="yes" xml:space="preserve">
          <source>Thai encoding TCVN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b50e31a7e1337db9ecb0e2fcb6e65ca27f57df5" translate="yes" xml:space="preserve">
          <source>Thank you</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e8cd6c504322691d26989da020afe0ebedb22f" translate="yes" xml:space="preserve">
          <source>Thank you to (in chronological order):</source>
          <target state="translated">Gracias a (en orden cronológico):</target>
        </trans-unit>
        <trans-unit id="b05872aaf946f643e0804715742f143fabda127d" translate="yes" xml:space="preserve">
          <source>Thanks (in no particular order) to Chaim Frenkel, Steve Fink, Gurusamy Sarathy, Ilya Zakharevich, Benjamin Sugars, J&amp;uuml;rgen Christoffel, Joshua Pritikin, and Alan Burlison, for their help in reality-checking and polishing this article. Big thanks to Tom Christiansen for his rewrite of the prime number generator.</source>
          <target state="translated">Gracias (sin ning&amp;uacute;n orden en particular) a Chaim Frenkel, Steve Fink, Gurusamy Sarathy, Ilya Zakharevich, Benjamin Sugars, J&amp;uuml;rgen Christoffel, Joshua Pritikin y Alan Burlison, por su ayuda para revisar y pulir este art&amp;iacute;culo. Muchas gracias a Tom Christiansen por su reescritura del generador de n&amp;uacute;meros primos.</target>
        </trans-unit>
        <trans-unit id="624dc0ad0c4a285c56d022996d1083a11fac8944" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;http://he.net/&quot;&gt;Hurricane Electric&lt;/a&gt; for permission to use its &lt;a href=&quot;http://man.he.net/&quot;&gt;Linux man pages online&lt;/a&gt; site for man page links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d197026943bb6167685c48d3d3074cfb2a40bd" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;http://search.cpan.org/&quot;&gt;search.cpan.org&lt;/a&gt; for permission to use the site for Perl module links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515198f3ec489e991661ee9be0d3531260928534" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fhe.net%2f&quot;&gt;Hurricane Electric&lt;/a&gt; for permission to use its &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fman.he.net%2f&quot;&gt;Linux man pages online&lt;/a&gt; site for man page links.</source>
          <target state="translated">Gracias a &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fhe.net%2f&quot;&gt;Hurricane Electric&lt;/a&gt; por su permiso para utilizar su sitio en &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fman.he.net%2f&quot;&gt;l&amp;iacute;nea de p&amp;aacute;ginas de manual de Linux&lt;/a&gt; para los enlaces de p&amp;aacute;ginas de manual.</target>
        </trans-unit>
        <trans-unit id="4a56281c4f40d78c915f83cd7dcb75140989545c" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org%2f&quot;&gt;search.cpan.org&lt;/a&gt; for permission to use the site for Perl module links.</source>
          <target state="translated">Gracias a &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fsearch.cpan.org%2f&quot;&gt;search.cpan.org&lt;/a&gt; por su permiso para utilizar el sitio para los enlaces del m&amp;oacute;dulo Perl.</target>
        </trans-unit>
        <trans-unit id="444d0503771db0d31f8257285cffffd1831b8683" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;https://he.net/&quot;&gt;Hurricane Electric&lt;/a&gt; for permission to use its &lt;a href=&quot;http://man.he.net/&quot;&gt;Linux man pages online&lt;/a&gt; site for man page links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf7d45d74afe72eed5d28a1078191c21d4ed94f" translate="yes" xml:space="preserve">
          <source>Thanks to Chia-Liang Kao for suggesting &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;loc_lang&lt;/code&gt; .</source>
          <target state="translated">Gracias a Chia-Liang Kao por sugerir &lt;code&gt;Path&lt;/code&gt; y &lt;code&gt;loc_lang&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1eb6da0d25f176736a52f5327efe1222256fcc7" translate="yes" xml:space="preserve">
          <source>Thanks to Chia-Liang Kao for suggesting &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;loc_lang&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28343241fc627e1ddfa37f27bcd25a3afbba56c2" translate="yes" xml:space="preserve">
          <source>Thanks to Gerard Goossen from TTY. His presentation &quot;UTF-8 in the wild&quot; (Dutch Perl Workshop 2006) inspired me to publish my thoughts and write this tutorial.</source>
          <target state="translated">Gracias a Gerard Goossen de TTY.Su presentación &quot;UTF-8 en la naturaleza&quot; (Taller de Perl Holandés 2006)me inspiró para publicar mis pensamientos y escribir este tutorial.</target>
        </trans-unit>
        <trans-unit id="eebcdc028466185c372d461642a6d1089c91d63f" translate="yes" xml:space="preserve">
          <source>Thanks to Graham Barr for contributing the following paragraphs about the interaction between perl, and various firewall configurations. For further information on firewalls, it is recommended to consult the documentation that comes with the</source>
          <target state="translated">Gracias a Graham Barr por contribuir con los siguientes párrafos sobre la interacción entre perl,y varias configuraciones de firewall.Para más información sobre los cortafuegos,se recomienda consultar la documentación que viene con el</target>
        </trans-unit>
        <trans-unit id="4ae64bcb3e2de31c99abdd50b43bda8476faf81d" translate="yes" xml:space="preserve">
          <source>Thanks to James Mastros and Martijn van der Streek for their help in getting &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; to behave nicely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d72a4f35680c5e9eebf1d781be27639e4c1c23" translate="yes" xml:space="preserve">
          <source>Thanks to James Mastros and Martijn van der Streek for their help in getting &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt; to behave nicely.</source>
          <target state="translated">Gracias a James Mastros y Martijn van der Streek por su ayuda para que &lt;a href=&quot;open3&quot;&gt;IPC :: Open3 se&lt;/a&gt; comporte bien.</target>
        </trans-unit>
        <trans-unit id="7dd46c60691bdec97830a740ba5397edf654eae8" translate="yes" xml:space="preserve">
          <source>Thanks to Johan Vromans from Squirrel Consultancy. His UTF-8 rants during the Amsterdam Perl Mongers meetings got me interested and determined to find out how to use character encodings in Perl in ways that don't break easily.</source>
          <target state="translated">Gracias a Johan Vromans de Squirrel Consultancy.Sus despotriques UTF-8 durante las reuniones de los Perl Mongers de Ámsterdam me interesaron y decidieron averiguar cómo usar las codificaciones de caracteres en Perl de manera que no se rompan fácilmente.</target>
        </trans-unit>
        <trans-unit id="6253d9253e0f2874bf9d499be7a8e0251aa0083e" translate="yes" xml:space="preserve">
          <source>Thanks to Jonas B. Nielsen for making explicit imports work.</source>
          <target state="translated">Gracias a Jonas B.Nielsen por hacer funcionar las importaciones explícitas.</target>
        </trans-unit>
        <trans-unit id="485f1de2dc0f3f17fa293a32651cd066b318634d" translate="yes" xml:space="preserve">
          <source>Thanks to Jos I. Boumans for suggesting this module to be written.</source>
          <target state="translated">Gracias a Jos I.Boumans por sugerir que este módulo sea escrito.</target>
        </trans-unit>
        <trans-unit id="5e83291fa2c7af3f2f4cad5da93414b81429569b" translate="yes" xml:space="preserve">
          <source>Thanks to Petya Kohts for the &lt;code&gt;run_forked&lt;/code&gt; code.</source>
          <target state="translated">Gracias a Petya Kohts por el c&amp;oacute;digo &lt;code&gt;run_forked&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c916a51d90472cf9a92ff461a1e0369e54a45763" translate="yes" xml:space="preserve">
          <source>Thanks to Richard Clamp &amp;lt;richardc@unixbeard.net&amp;gt; for letting me use his testing system to try this module out on.</source>
          <target state="translated">Gracias a Richard Clamp &amp;lt;richardc@unixbeard.net&amp;gt; por permitirme usar su sistema de prueba para probar este m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="d8791cdde7f82c928089217628fa54dbdfb5e400" translate="yes" xml:space="preserve">
          <source>Thanks to Richard Soderberg for his performance improvements.</source>
          <target state="translated">Gracias a Richard Soderberg por sus mejoras en el rendimiento.</target>
        </trans-unit>
        <trans-unit id="1d0320e05ae32871d886bed9f5bf625ba37f166b" translate="yes" xml:space="preserve">
          <source>Thanks to Sean Burke, Chris Nandor, Chip Salzenberg, Tim Heaney, Gisle Aas, Rainer Tammer and especially Andrew Savige for their help and suggestions.</source>
          <target state="translated">Gracias a Sean Burke,Chris Nandor,Chip Salzenberg,Tim Heaney,Gisle Aas,Rainer Tammer y especialmente a Andrew Savige por su ayuda y sugerencias.</target>
        </trans-unit>
        <trans-unit id="3c490099b710a18daaafdd3d9d34a147de5b78a3" translate="yes" xml:space="preserve">
          <source>Thanks to Tom Christiansen for suggesting that this module should be written and providing ideas for code improvements and security enhancements.</source>
          <target state="translated">Gracias a Tom Christiansen por sugerir que este módulo debería ser escrito y proporcionar ideas para mejorar el código y la seguridad.</target>
        </trans-unit>
        <trans-unit id="243da9ccc28383d127f497ef267f78f655f69ef4" translate="yes" xml:space="preserve">
          <source>Thanks to overloading, the handling of arithmetics with complex numbers is simple and almost transparent.</source>
          <target state="translated">Gracias a la sobrecarga,el manejo de aritmética con números complejos es simple y casi transparente.</target>
        </trans-unit>
        <trans-unit id="e1237be2e8e888521e762a958f2915acb036e56d" translate="yes" xml:space="preserve">
          <source>Thanks to the kind readers of the perl5-porters@perl.org, perl-unicode@perl.org, linux-utf8@nl.linux.org, and unicore@unicode.org mailing lists for their valuable feedback.</source>
          <target state="translated">Gracias a los amables lectores de las listas de correo perl5-porters@perl.org,perl-unicode@perl.org,linux-utf8@nl.linux.org y unicore@unicode.org por sus valiosos comentarios.</target>
        </trans-unit>
        <trans-unit id="895e96674a21c983f493504acc0807a09ac741d7" translate="yes" xml:space="preserve">
          <source>Thanks to the people who asked about this kind of stuff in several Perl IRC channels, and have constantly reminded me that a simpler explanation was needed.</source>
          <target state="translated">Gracias a la gente que ha preguntado sobre este tipo de cosas en varios canales IRC de Perl,y me han recordado constantemente que se necesitaba una explicación más simple.</target>
        </trans-unit>
        <trans-unit id="5daafe91df31a9585afc5052640e7074b414f20e" translate="yes" xml:space="preserve">
          <source>Thanks to the people who reviewed this document for me, before it went public. They are: Benjamin Smith, Jan-Pieter Cornet, Johan Vromans, Lukas Mai, Nathan Gray.</source>
          <target state="translated">Gracias a la gente que revisó este documento para mí,antes de que se hiciera público.Ellos son:Benjamin Smith,Jan-Pieter Cornet,Johan Vromans,Lukas Mai,Nathan Gray.</target>
        </trans-unit>
        <trans-unit id="e2ecff3d05e183be8e4afb3075781b60cf077a08" translate="yes" xml:space="preserve">
          <source>Thanks to these efforts most encodings that come with Encode support PerlIO but that still leaves following encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f69c9fb3b65301a9a56633220645f84a279dc1" translate="yes" xml:space="preserve">
          <source>That a certain field exists in a struct</source>
          <target state="translated">Que un cierto campo existe en una estructura</target>
        </trans-unit>
        <trans-unit id="13e180f49380db1e610eb63f2836d65fe6a7ff96" translate="yes" xml:space="preserve">
          <source>That a field is of certain signedness, sizeof, or type</source>
          <target state="translated">Que un campo es de cierta firma,tamaño o tipo</target>
        </trans-unit>
        <trans-unit id="ba8c7890c4018f7372ea3dd0b44efd4aac702fe3" translate="yes" xml:space="preserve">
          <source>That being said, there are several ways to approach this. If you are going to make this query many times over arbitrary string values, the fastest way is probably to invert the original array and maintain a hash whose keys are the first array's values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34dd8b430aa837e89a7b0c15eb719863c536f5a" translate="yes" xml:space="preserve">
          <source>That being said, there are several ways to approach this. In Perl 5.10 and later, you can use the smart match operator to check that an item is contained in an array or a hash:</source>
          <target state="translated">Dicho esto,hay varias maneras de abordar esto.En Perl 5.10 y posteriores,puedes usar el operador de cerillas para comprobar que un elemento está contenido en una matriz o un hash:</target>
        </trans-unit>
        <trans-unit id="0c260ee0a50dde66d3ef426f496fd0710d1eecdf" translate="yes" xml:space="preserve">
          <source>That being said, we value Perl's stability and security and have long had an unwritten covenant with the broader Perl community to support and maintain releases of Perl.</source>
          <target state="translated">Dicho esto,valoramos la estabilidad y la seguridad de Perl y desde hace mucho tiempo tenemos un pacto no escrito con la comunidad más amplia de Perl para apoyar y mantener las liberaciones de Perl.</target>
        </trans-unit>
        <trans-unit id="bbe53d4c6627e25c7f5c04a5ce2e7f7fde39b418" translate="yes" xml:space="preserve">
          <source>That block is a proper block like any other, so you can put more complicated code there. This sends the message out to one of two places:</source>
          <target state="translated">Ese bloque es un bloque apropiado como cualquier otro,así que puedes poner un código más complicado allí.Esto envía el mensaje a uno de dos lugares:</target>
        </trans-unit>
        <trans-unit id="b8b88815853e7b011e14c857de7c3f74f6afc9bd" translate="yes" xml:space="preserve">
          <source>That build was a portable hppa-1.1 multithread build that supports large files compiled with gcc-2.9-hppa-991112.</source>
          <target state="translated">Esa construcción fue una construcción multihilo hppa-1.1 portátil que soporta archivos grandes compilados con gcc-2.9-hppa-991112.</target>
        </trans-unit>
        <trans-unit id="a5173e93037f4e02bac658ae6058928a497347a4" translate="yes" xml:space="preserve">
          <source>That can be achieved by overriding &lt;code&gt;init&lt;/code&gt; in your class and working on the main lexicon with code like that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51461163b856a03794ba96810bf1373b9d61492c" translate="yes" xml:space="preserve">
          <source>That clarifies the situation with regards Berkeley DB itself. What about &lt;b&gt;DB_File&lt;/b&gt;? Well, the behavior defined in the quote above is quite useful, so &lt;b&gt;DB_File&lt;/b&gt; conforms to it.</source>
          <target state="translated">Eso aclara la situaci&amp;oacute;n con respecto a Berkeley DB en s&amp;iacute;. &amp;iquest;Qu&amp;eacute; pasa con &lt;b&gt;DB_File&lt;/b&gt; ? Bueno, el comportamiento definido en la cita anterior es bastante &amp;uacute;til, por lo que &lt;b&gt;DB_File se&lt;/b&gt; ajusta a &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="e4e253e3979e75b31e42c03e2604d27318e57461" translate="yes" xml:space="preserve">
          <source>That does the same thing as the previous code. &lt;code&gt;ok()&lt;/code&gt; is the backbone of Perl testing, and we'll be using it instead of roll-your-own from here on. If &lt;code&gt;ok()&lt;/code&gt; gets a true value, the test passes. False, it fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42854bfa17d6ca63556d6a3b16e69afee421b58e" translate="yes" xml:space="preserve">
          <source>That example prints something like &lt;code&gt;&quot;1314363215shiftbbb&quot;&lt;/code&gt; , because the &lt;code&gt;=&amp;gt;&lt;/code&gt; implicitly quotes the &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; immediately on its left, ignoring the fact that &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time.shift&lt;/a&gt;&lt;/code&gt; is the entire left operand.</source>
          <target state="translated">Ese ejemplo imprime algo como &lt;code&gt;&quot;1314363215shiftbbb&quot;&lt;/code&gt; , porque &lt;code&gt;=&amp;gt;&lt;/code&gt; impl&amp;iacute;citamente cita el &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; inmediatamente a su izquierda, ignorando el hecho de que &lt;code&gt;&lt;a href=&quot;functions/time&quot;&gt;time.shift&lt;/a&gt;&lt;/code&gt; es el operando izquierdo completo.</target>
        </trans-unit>
        <trans-unit id="159d20ef613406bd732f05ac0e1faa07f34a47ec" translate="yes" xml:space="preserve">
          <source>That example prints something like &lt;code&gt;&quot;1314363215shiftbbb&quot;&lt;/code&gt;, because the &lt;code&gt;=&amp;gt;&lt;/code&gt; implicitly quotes the &lt;code&gt;shift&lt;/code&gt; immediately on its left, ignoring the fact that &lt;code&gt;time.shift&lt;/code&gt; is the entire left operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435a3c58eaf95bd7ca9114e558f52a39c1b31273" translate="yes" xml:space="preserve">
          <source>That example will print &quot;I like dogs. I like cats&quot;. Notice the original &lt;code&gt;$x&lt;/code&gt; variable has not been affected. The overall result of the substitution is instead stored in &lt;code&gt;$y&lt;/code&gt; . If the substitution doesn't affect anything then the original string is returned:</source>
          <target state="translated">Ese ejemplo imprimir&amp;aacute; &quot;Me gustan los perros. Me gustan los gatos&quot;. Observe que la variable &lt;code&gt;$x&lt;/code&gt; original no se ha visto afectada. En cambio, el resultado general de la sustituci&amp;oacute;n se almacena en &lt;code&gt;$y&lt;/code&gt; . Si la sustituci&amp;oacute;n no afecta nada, se devuelve la cadena original:</target>
        </trans-unit>
        <trans-unit id="7278130041b031a5215a18d766074e98a320d921" translate="yes" xml:space="preserve">
          <source>That example will print &quot;I like dogs. I like cats&quot;. Notice the original &lt;code&gt;$x&lt;/code&gt; variable has not been affected. The overall result of the substitution is instead stored in &lt;code&gt;$y&lt;/code&gt;. If the substitution doesn't affect anything then the original string is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8395ebcf27841eba05938be973987efc8d458043" translate="yes" xml:space="preserve">
          <source>That explicit association is created by the built-in &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; function, which is typically used within the</source>
          <target state="translated">Esa asociaci&amp;oacute;n expl&amp;iacute;cita es creada por la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; incorporada, que se usa t&amp;iacute;picamente dentro de la</target>
        </trans-unit>
        <trans-unit id="27b1cd2c668785cd9bb2dd2e3093b4e98220cdc9" translate="yes" xml:space="preserve">
          <source>That explicit association is created by the built-in &lt;code&gt;bless&lt;/code&gt; function, which is typically used within the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ec0978d45de2f32fa9de32d3062c113e6a14e6" translate="yes" xml:space="preserve">
          <source>That extra space comes from the interpolation of the array. If you don't want to put anything between your array elements, don't use the array in double quotes. You can send it to print without them:</source>
          <target state="translated">Ese espacio extra proviene de la interpolación de la matriz.Si no quieres poner nada entre los elementos de la matriz,no uses la matriz entre comillas.Puedes enviarlo a imprimir sin ellas:</target>
        </trans-unit>
        <trans-unit id="9b298824efc1a224419fada1ed430ca9a977cee5" translate="yes" xml:space="preserve">
          <source>That function can be called with either of the following statements. Note the different argument lists.</source>
          <target state="translated">Esa función se puede llamar con cualquiera de las siguientes declaraciones.Observe las diferentes listas de argumentos.</target>
        </trans-unit>
        <trans-unit id="5a589d98a381dc121a0ca9e45213c36fe88d4b95" translate="yes" xml:space="preserve">
          <source>That gives you a parse-tree for each paragraph - so now all you need is an ordered list of paragraphs. You can maintain that yourself as a data element in the object/hash. The most straightforward way would be simply to use an array-ref, with the desired set of custom &quot;options&quot; for each invocation of &lt;b&gt;parse_text&lt;/b&gt;. Let's assume the desired option-set is given by the hash &lt;code&gt;%options&lt;/code&gt; . Then we might do something like the following:</source>
          <target state="translated">Eso le da un &amp;aacute;rbol de an&amp;aacute;lisis para cada p&amp;aacute;rrafo, por lo que ahora todo lo que necesita es una lista ordenada de p&amp;aacute;rrafos. Puede mantenerlo usted mismo como un elemento de datos en el objeto / hash. La forma m&amp;aacute;s sencilla ser&amp;iacute;a simplemente usar un array-ref, con el conjunto deseado de &quot;opciones&quot; personalizadas para cada invocaci&amp;oacute;n de &lt;b&gt;parse_text&lt;/b&gt; . Supongamos que el conjunto de opciones deseado viene dado por las &lt;code&gt;%options&lt;/code&gt; hash . Entonces podr&amp;iacute;amos hacer algo como lo siguiente:</target>
        </trans-unit>
        <trans-unit id="64f729272f1f6cba682dfada58129c0e19d1beec" translate="yes" xml:space="preserve">
          <source>That has historically been Perl's notion of UTF-8, as that is how UTF-8 was first conceived by Ken Thompson when he invented it. However, thanks to later revisions to the applicable standards, official UTF-8 is now rather stricter than that. For example, its range is much narrower (0 .. 0x10_FFFF to cover only 21 bits instead of 32 or 64 bits) and some sequences are not allowed, like those used in surrogate pairs, the 31 non-character code points 0xFDD0 .. 0xFDEF, the last two code points in</source>
          <target state="translated">Esa ha sido históricamente la noción de Perl sobre el UTF-8,ya que así fue como el UTF-8 fue concebido por primera vez por Ken Thompson cuando lo inventó.Sin embargo,gracias a las posteriores revisiones de las normas aplicables,el UTF-8 oficial es ahora bastante más estricto que eso.Por ejemplo,su rango es mucho más estrecho (0 ..0x10_FFFF para cubrir sólo 21 bits en lugar de 32 o 64 bits)y algunas secuencias no están permitidas,como las utilizadas en los pares de sustitución,los 31 puntos de código sin carácter 0xFDD0 ..0xFDEF,los dos últimos puntos de código en</target>
        </trans-unit>
        <trans-unit id="d65679687da0ceb818cf54be11aba010b00841bb" translate="yes" xml:space="preserve">
          <source>That has the same effect as</source>
          <target state="translated">Eso tiene el mismo efecto que</target>
        </trans-unit>
        <trans-unit id="70ca5d290cf7d16b2ad0d56ac0c8bb778d981254" translate="yes" xml:space="preserve">
          <source>That is C99 or C++. Perl is C89. Using the //-comments is silently allowed by many C compilers but cranking up the ANSI C89 strictness (which we like to do) causes the compilation to fail.</source>
          <target state="translated">Eso es C99 o C++.Perl es C89.El uso de los comentarios //está silenciosamente permitido por muchos compiladores de C,pero aumentar el rigor del ANSI C89 (lo que nos gusta hacer)hace que la compilación falle.</target>
        </trans-unit>
        <trans-unit id="fbc80ae07cc14a3e9ed515ddb417d3903b3e2d4c" translate="yes" xml:space="preserve">
          <source>That is C99 or C++. Some C compilers allow that, but you shouldn't.</source>
          <target state="translated">Eso es C99 o C++.Algunos compiladores de C permiten eso,pero no deberías.</target>
        </trans-unit>
        <trans-unit id="828feba24600ccd2337dfee90dbb710d49a4eff3" translate="yes" xml:space="preserve">
          <source>That is C99 or C++. While it would indeed be awfully nice to have that also in C89, to limit the scope of the loop variable, alas, we cannot.</source>
          <target state="translated">Eso es C99 o C++.Aunque sería muy bueno tener eso también en C89,para limitar el alcance de la variable de bucle,por desgracia,no podemos.</target>
        </trans-unit>
        <trans-unit id="7473aa8c2d92485250630b49f5d5752d8eea9b3d" translate="yes" xml:space="preserve">
          <source>That is all covered in the documentation for Locale::Maketext and the modules that come with it, available in CPAN. After having read this article, which covers the why's of Maketext, the documentation, which covers the how's of it, should be quite straightforward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c6f4c7bbbd6286d0fe21947d2ba8ade38beb92" translate="yes" xml:space="preserve">
          <source>That is because the translation from EBCDIC to ASCII is done by the web server in this case. Consult your web server's documentation for further details.</source>
          <target state="translated">Eso es porque la traducción de EBCDIC a ASCII es hecha por el servidor web en este caso.Consulte la documentación de su servidor web para más detalles.</target>
        </trans-unit>
        <trans-unit id="942bc883ec6c98a20c711318e17853f42162c195" translate="yes" xml:space="preserve">
          <source>That is exactly equivalent to</source>
          <target state="translated">Eso es exactamente equivalente a</target>
        </trans-unit>
        <trans-unit id="755dfd149254cee016be67859ecceb8b680f03fe" translate="yes" xml:space="preserve">
          <source>That is fine as far as it goes. The thing is, the Perl subroutine can be specified as only a string, however, Perl allows references to subroutines and anonymous subroutines. This is where</source>
          <target state="translated">Eso está bien en lo que respecta a esto.El asunto es que la subrutina Perl puede ser especificada sólo como una cadena,sin embargo,Perl permite referencias a subrutinas y subrutinas anónimas.Aquí es donde</target>
        </trans-unit>
        <trans-unit id="f6e51945777f4de56dfd6b06b12bc029f8de1ebc" translate="yes" xml:space="preserve">
          <source>That is just short for this:</source>
          <target state="translated">Es la abreviatura de esto:</target>
        </trans-unit>
        <trans-unit id="48a322119a3ce010a99cb16daaa24fe8a2a63a40" translate="yes" xml:space="preserve">
          <source>That is, a &quot;start&quot; character followed by any number of &quot;continue&quot; characters. Perl requires every character in an identifier to also match &lt;code&gt;\w&lt;/code&gt; (this prevents some problematic cases); and Perl additionally accepts identfier names beginning with an underscore.</source>
          <target state="translated">Es decir, un car&amp;aacute;cter de &quot;inicio&quot; seguido de cualquier n&amp;uacute;mero de caracteres de &quot;continuaci&amp;oacute;n&quot;. Perl requiere que todos los caracteres de un identificador coincidan tambi&amp;eacute;n con &lt;code&gt;\w&lt;/code&gt; (esto evita algunos casos problem&amp;aacute;ticos); y Perl acepta adem&amp;aacute;s nombres de identificador que comienzan con un gui&amp;oacute;n bajo.</target>
        </trans-unit>
        <trans-unit id="6558436d977d36dc225d2cf7090e600f732d6f4d" translate="yes" xml:space="preserve">
          <source>That is, a &lt;code&gt;'code...'&lt;/code&gt; filter</source>
          <target state="translated">Es decir, un filtro de &lt;code&gt;'code...'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f4f6b5b263faf39b0387453cc01be5508d1f769" translate="yes" xml:space="preserve">
          <source>That is, a complex number with the real part of approximately &lt;code&gt;1.571&lt;/code&gt; and the imaginary part of approximately &lt;code&gt;-1.317&lt;/code&gt; .</source>
          <target state="translated">Es decir, un n&amp;uacute;mero complejo con la parte real de aproximadamente &lt;code&gt;1.571&lt;/code&gt; y la parte imaginaria de aproximadamente &lt;code&gt;-1.317&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="482980394273a0467a584ab6d2a57dbf1c99aa5d" translate="yes" xml:space="preserve">
          <source>That is, a complex number with the real part of approximately &lt;code&gt;1.571&lt;/code&gt; and the imaginary part of approximately &lt;code&gt;-1.317&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeeaa892b3243ba38eb1a4d1d75a40e3e83e990" translate="yes" xml:space="preserve">
          <source>That is, any word character in the ASCII range, as long as the first character is not a digit.</source>
          <target state="translated">Es decir,cualquier carácter de la palabra en el rango ASCII,siempre y cuando el primer carácter no sea un dígito.</target>
        </trans-unit>
        <trans-unit id="36c759497b0b38fb79d0c364113b1512a2c43723" translate="yes" xml:space="preserve">
          <source>That is, both are like this:</source>
          <target state="translated">Es decir,ambos son así:</target>
        </trans-unit>
        <trans-unit id="cbeb96e56e49bccd6548d94f7137868a0f109bb7" translate="yes" xml:space="preserve">
          <source>That is, fetch the &lt;code&gt;a&lt;/code&gt; entry from the main symbol table, and then look at the scalar component of it: &lt;code&gt;gvsv&lt;/code&gt; (&lt;code&gt;pp_gvsv&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75581dadc9573c00040ace36ddd58570a8c1a03a" translate="yes" xml:space="preserve">
          <source>That is, fetch the &lt;code&gt;a&lt;/code&gt; entry from the main symbol table, and then look at the scalar component of it: &lt;code&gt;gvsv&lt;/code&gt; (&lt;code&gt;pp_gvsv&lt;/code&gt; into</source>
          <target state="translated">Es decir, ir a buscar la &lt;code&gt;a&lt;/code&gt; entrada de la tabla principal s&amp;iacute;mbolo, y luego buscar en el componente escalar de que: &lt;code&gt;gvsv&lt;/code&gt; ( &lt;code&gt;pp_gvsv&lt;/code&gt; en</target>
        </trans-unit>
        <trans-unit id="f3442fe5454be65a5f12295c4981af0a997452b8" translate="yes" xml:space="preserve">
          <source>That is, instead of writing this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7215514db7a28aa89b16be5f49f87245a3434d" translate="yes" xml:space="preserve">
          <source>That is, it creates a region consisting of a single paragraph; that paragraph is to be treated as a normal paragraph if &quot;formatname&quot; begins with a &quot;:&quot;; if &quot;formatname&quot;</source>
          <target state="translated">Es decir,crea una región que consiste en un solo párrafo;ese párrafo debe tratarse como un párrafo normal si &quot;nombre de formato&quot; comienza con un &quot;:&quot;;si &quot;nombre de formato&quot;</target>
        </trans-unit>
        <trans-unit id="7678e34c3ebdef14cc53701ea7fd891c9a91f614" translate="yes" xml:space="preserve">
          <source>That is, it runs a conversion with default options, for whatever inputdirs and output dir you specify.</source>
          <target state="translated">Es decir,ejecuta una conversión con opciones predeterminadas,para cualquier directorio de entrada y salida que especifique.</target>
        </trans-unit>
        <trans-unit id="27a7e3645a7eb93795bc368264f8f8cb79cd561d" translate="yes" xml:space="preserve">
          <source>That is, it treated both matches as undefined, and converted that to false (raising a warning on each). The first case is the expected result, but the second is likely counterintuitive: &quot;How could both be false when they are complements?&quot; Another problem was that the implementation optimized many Unicode property matches down to already existing simpler, faster operations, which don't raise the warning. We chose to not forgo those optimizations, which help the vast majority of matches, just to generate a warning for the unlikely event that an above-Unicode code point is being matched against.</source>
          <target state="translated">Es decir,trató ambas coincidencias como indefinidas,y las convirtió en falsas (levantando una advertencia en cada una).El primer caso es el resultado esperado,pero el segundo es probablemente contrario a la intuición:&quot;¿Cómo podrían ser falsos ambos cuando son complementos?&quot; Otro problema fue que la implementación optimizó muchas coincidencias de propiedades de Unicode con operaciones ya existentes más sencillas y rápidas,que no levantan la advertencia.Elegimos no renunciar a esas optimizaciones,que ayudan a la gran mayoría de las coincidencias,sólo para generar una advertencia para el improbable caso de que un punto de código por encima de Unicode esté siendo coincidente.</target>
        </trans-unit>
        <trans-unit id="b2448cc58794e445286f5f6bd3ff90ad3138eeba" translate="yes" xml:space="preserve">
          <source>That is, there should be (at least roughly) equal spacing between items as between paragraphs (although that spacing may well be less than the full height of a line of text). This leaves it to the reader to use (con)textual cues to figure out whether the &quot;Qui dolorem ipsum...&quot; paragraph applies to the &quot;Quisquam Est&quot; item or to all three items &quot;Neque&quot;, &quot;Porro&quot;, and &quot;Quisquam Est&quot;. While not an ideal situation, this is preferable to providing formatting cues that may be actually contrary to the author's intent.</source>
          <target state="translated">Es decir,debe haber (por lo menos aproximadamente)un espaciamiento igual entre los elementos como entre los párrafos (aunque ese espaciamiento bien puede ser menor que la altura total de una línea de texto).Esto deja al lector la posibilidad de utilizar claves (con)textuales para averiguar si el párrafo &quot;Qui dolorem ipsum...&quot; se aplica al artículo &quot;Quisquam Est&quot; o a los tres artículos &quot;Neque&quot;,&quot;Porro&quot; y &quot;Quisquam Est&quot;.Aunque no es una situación ideal,es preferible a dar pistas de formato que pueden ser realmente contrarias a la intención del autor.</target>
        </trans-unit>
        <trans-unit id="1e5a6f76070bd03364763274b3558ec3c231e14e" translate="yes" xml:space="preserve">
          <source>That is, they all produce the same event structure (for the most part), namely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a300a2c4d8d472deffaf92f425ba9342ddb708" translate="yes" xml:space="preserve">
          <source>That is, to get a number between 10 and 15, inclusive, you want a random number between 0 and 5 that you can then add to 10.</source>
          <target state="translated">Es decir,para obtener un número entre 10 y 15,inclusive,quieres un número aleatorio entre 0 y 5 que luego puedes sumar a 10.</target>
        </trans-unit>
        <trans-unit id="951f36d3e716f12408c22757558026bf31602523" translate="yes" xml:space="preserve">
          <source>That is, with &quot;=for&quot;, you can have only one paragraph's worth of text (i.e., the text in &quot;=foo targetname text...&quot;), but with &quot;=begin targetname&quot; ... &quot;=end targetname&quot;, you can have any amount of stuff in between. (Note that there still must be a blank line after the &quot;=begin&quot; command and a blank line before the &quot;=end&quot; command.)</source>
          <target state="translated">Es decir,con &quot;=para&quot;,puedes tener sólo un párrafo de texto (es decir,el texto en &quot;=foo targetname text...&quot;),pero con &quot;=begin targetname&quot;...&quot;=end targetname&quot;,puedes tener cualquier cantidad de cosas en medio.(Nótese que aún debe haber una línea en blanco después del comando &quot;=begin&quot; y una línea en blanco antes del comando &quot;=end&quot;).</target>
        </trans-unit>
        <trans-unit id="bc1a3360b8c34a0baef326cea1af80815467c26c" translate="yes" xml:space="preserve">
          <source>That last test line above should have the number '3' instead of '2'.</source>
          <target state="translated">La última línea de prueba de arriba debería tener el número &quot;3&quot; en lugar de &quot;2&quot;.</target>
        </trans-unit>
        <trans-unit id="c5a055a52b37b46f2d6c0e63eaf4e182af37b495" translate="yes" xml:space="preserve">
          <source>That looks a bit nicer; but we've got to take apart that weird template. Where did I pull that out of?</source>
          <target state="translated">Eso se ve un poco más bonito,pero tenemos que desmontar esa extraña plantilla.¿De dónde la saqué?</target>
        </trans-unit>
        <trans-unit id="61626fcd66a349166c06495de786a6747ef2482c" translate="yes" xml:space="preserve">
          <source>That may be what you want, but if what you really want is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c566d34d221f1316f52ee4a141ea9a232b591ec1" translate="yes" xml:space="preserve">
          <source>That means all the gzip support has to be done by hand - in this case by creating a tied filehandle to deal with creating the gzip header and trailer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5efec9cd6d8da4fb36301f3de63b6888e753f1" translate="yes" xml:space="preserve">
          <source>That means that the address comes back in binary for the host functions, and as a regular perl integer for the net ones. This seems a bug, but here's how to deal with it:</source>
          <target state="translated">Eso significa que la dirección vuelve en binario para las funciones del host,y como un entero perl regular para las de la red.Esto parece un error,pero aquí está cómo lidiar con él:</target>
        </trans-unit>
        <trans-unit id="f3988f8ba5df3605cc3a35c620ff3fb6ee001ddb" translate="yes" xml:space="preserve">
          <source>That means that the inheritance tree of the object is traversed breadth-first and the resulting order of classes is used as the sequence in which methods are called. However, that sequence is modified by imposing a rule that the appropriate method of a derived class must be called before the same method of any ancestral class. That's why, in the above example, &lt;code&gt;X::foo&lt;/code&gt; is called before &lt;code&gt;D::foo&lt;/code&gt; , even though &lt;code&gt;D&lt;/code&gt; comes before &lt;code&gt;X&lt;/code&gt; in &lt;code&gt;@B::ISA&lt;/code&gt; .</source>
          <target state="translated">Eso significa que el &amp;aacute;rbol de herencia del objeto se recorre primero en amplitud y el orden de clases resultante se usa como la secuencia en la que se llaman los m&amp;eacute;todos. Sin embargo, esa secuencia se modifica imponiendo una regla de que el m&amp;eacute;todo apropiado de una clase derivada debe llamarse antes que el mismo m&amp;eacute;todo de cualquier clase ancestral. Es por eso que, en el ejemplo anterior, &lt;code&gt;X::foo&lt;/code&gt; se llama antes que &lt;code&gt;D::foo&lt;/code&gt; , aunque &lt;code&gt;D&lt;/code&gt; viene antes que &lt;code&gt;X&lt;/code&gt; en &lt;code&gt;@B::ISA&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5e47decd3f17a0dbcacce7016d0aedaa3f7c7e2" translate="yes" xml:space="preserve">
          <source>That means that the inheritance tree of the object is traversed breadth-first and the resulting order of classes is used as the sequence in which methods are called. However, that sequence is modified by imposing a rule that the appropriate method of a derived class must be called before the same method of any ancestral class. That's why, in the above example, &lt;code&gt;X::foo&lt;/code&gt; is called before &lt;code&gt;D::foo&lt;/code&gt;, even though &lt;code&gt;D&lt;/code&gt; comes before &lt;code&gt;X&lt;/code&gt; in &lt;code&gt;@B::ISA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a75b8fa4871b84e34a76476fddd056744d525a" translate="yes" xml:space="preserve">
          <source>That means that you can specify other options (e.g. cachesize) and still have bval default to &lt;code&gt;&quot;\n&quot;&lt;/code&gt; for variable length records, and space for fixed length records.</source>
          <target state="translated">Eso significa que puede especificar otras opciones (por ejemplo, tama&amp;ntilde;o de cach&amp;eacute;) y a&amp;uacute;n tener bval predeterminado en &lt;code&gt;&quot;\n&quot;&lt;/code&gt; para registros de longitud variable y espacio para registros de longitud fija.</target>
        </trans-unit>
        <trans-unit id="7045c7edb73bdaec4db668503265f3c3aee4ce06" translate="yes" xml:space="preserve">
          <source>That means you can only use this function to look at or manipulate text before or after complete JSON objects, not while the parser is in the middle of parsing a JSON object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f3ac9162c57e4899c7d0b17b547a39f0dc6701" translate="yes" xml:space="preserve">
          <source>That means, for example, that you can freely add or remove white space adjacent to (but within) the braces and the colon or equal sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccd6e36decb0fa14e4cd9ccfdb15ab74bfe0e9c" translate="yes" xml:space="preserve">
          <source>That means, for example, that you can freely add or remove white space adjacent to (but within) the braces without affecting the meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef48d86c4cc8b17f43db860898bcc6635d718b02" translate="yes" xml:space="preserve">
          <source>That method may be best because otherwise you won't treat IEEE notations like &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;Infinity&lt;/code&gt; properly. At other times, you might prefer to determine whether string data can be used numerically by calling the POSIX::strtod() function or by inspecting your string with a regular expression (as documented in &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;).</source>
          <target state="translated">Ese m&amp;eacute;todo puede ser el mejor porque, de lo contrario, no tratar&amp;aacute; las notaciones IEEE como &lt;code&gt;NaN&lt;/code&gt; o &lt;code&gt;Infinity&lt;/code&gt; correctamente. En otras ocasiones, es posible que prefiera determinar si los datos de cadena se pueden usar num&amp;eacute;ricamente llamando a la funci&amp;oacute;n POSIX :: strtod () o inspeccionando su cadena con una expresi&amp;oacute;n regular (como se documenta en &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6fd672a313da74831278f92221ca3146d4b9f20c" translate="yes" xml:space="preserve">
          <source>That no other fields exist besides the ones you know of</source>
          <target state="translated">Que no existen otros campos aparte de los que conoces</target>
        </trans-unit>
        <trans-unit id="5527de36ef73a03f5b5a63ba8cbaf8b4f3a8fcb3" translate="yes" xml:space="preserve">
          <source>That now parses as you'd expect, but you still ought to get in the habit of using parentheses in that situation. For more on prototypes, see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Eso ahora se analiza como era de esperar, pero a&amp;uacute;n debe acostumbrarse a usar par&amp;eacute;ntesis en esa situaci&amp;oacute;n. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre prototipos, consulte &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c7cb196541b3b7a98e0a23cefd4f853e129fa465" translate="yes" xml:space="preserve">
          <source>That output isn't terribly descriptive, is it? When you have two tests you can figure out which one is #2, but what if you have 102 tests?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37fa65fedd67f278b74cbc5a381d76fb677b39a" translate="yes" xml:space="preserve">
          <source>That prints &lt;code&gt;&quot;unphooey&quot;&lt;/code&gt; . (Yes, there are still unresolved issues having to do with visibility of &lt;code&gt;@_&lt;/code&gt; . I'm ignoring that question for the moment. (But note that if we make &lt;code&gt;@_&lt;/code&gt; lexically scoped, those anonymous subroutines can act like closures... (Gee, is this sounding a little Lispish? (Never mind.))))</source>
          <target state="translated">Eso imprime &lt;code&gt;&quot;unphooey&quot;&lt;/code&gt; . (S&amp;iacute;, todav&amp;iacute;a hay problemas sin resolver que tienen que ver con la visibilidad de &lt;code&gt;@_&lt;/code&gt; . Estoy ignorando esa pregunta por el momento. (Pero tenga en cuenta que si hacemos &lt;code&gt;@_&lt;/code&gt; con alcance l&amp;eacute;xico, esas subrutinas an&amp;oacute;nimas pueden actuar como cierres ... ( Vaya, &amp;iquest;esto suena un poco Lispish? (No importa.))))</target>
        </trans-unit>
        <trans-unit id="b70a77bf7cab1beed053568dab5acfb8d2eb3eda" translate="yes" xml:space="preserve">
          <source>That prints &lt;code&gt;&quot;unphooey&quot;&lt;/code&gt;. (Yes, there are still unresolved issues having to do with visibility of &lt;code&gt;@_&lt;/code&gt;. I'm ignoring that question for the moment. (But note that if we make &lt;code&gt;@_&lt;/code&gt; lexically scoped, those anonymous subroutines can act like closures... (Gee, is this sounding a little Lispish? (Never mind.))))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f34b1d00199940c59db31a2c92190f8c2d18ac" translate="yes" xml:space="preserve">
          <source>That prints out: &lt;code&gt;&quot;The third fish is a red one.&quot;&lt;/code&gt; You can also use a repetition count and repeated pattern like this:</source>
          <target state="translated">Eso imprime: &lt;code&gt;&quot;The third fish is a red one.&quot;&lt;/code&gt; Tambi&amp;eacute;n puede usar un recuento de repeticiones y un patr&amp;oacute;n repetido como este:</target>
        </trans-unit>
        <trans-unit id="efe950f82cdddb13c9f97d9e858479f8a7148487" translate="yes" xml:space="preserve">
          <source>That problem is corrected by using the &lt;code&gt;&amp;amp;&lt;/code&gt; operator. The &lt;b&gt;xsubpp&lt;/b&gt; compiler will now turn this into code which calls &lt;code&gt;rpcb_gettime()&lt;/code&gt; correctly with parameters &lt;code&gt;(char *host, time_t *timep)&lt;/code&gt; . It does this by carrying the &lt;code&gt;&amp;amp;&lt;/code&gt; through, so the function call looks like &lt;code&gt;rpcb_gettime(host, &amp;amp;timep)&lt;/code&gt; .</source>
          <target state="translated">Ese problema se corrige utilizando el operador &lt;code&gt;&amp;amp;&lt;/code&gt; . El compilador &lt;b&gt;xsubpp&lt;/b&gt; ahora convertir&amp;aacute; esto en c&amp;oacute;digo que llame a &lt;code&gt;rpcb_gettime()&lt;/code&gt; correctamente con los par&amp;aacute;metros &lt;code&gt;(char *host, time_t *timep)&lt;/code&gt; . Lo hace llevando el &lt;code&gt;&amp;amp;&lt;/code&gt; a trav&amp;eacute;s, por lo que la llamada a la funci&amp;oacute;n se parece a &lt;code&gt;rpcb_gettime(host, &amp;amp;timep)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cdeebf2bdaf24e4c227b81d4e7ade3f1477fb5b" translate="yes" xml:space="preserve">
          <source>That problem is corrected by using the &lt;code&gt;&amp;amp;&lt;/code&gt; operator. The &lt;b&gt;xsubpp&lt;/b&gt; compiler will now turn this into code which calls &lt;code&gt;rpcb_gettime()&lt;/code&gt; correctly with parameters &lt;code&gt;(char *host, time_t *timep)&lt;/code&gt;. It does this by carrying the &lt;code&gt;&amp;amp;&lt;/code&gt; through, so the function call looks like &lt;code&gt;rpcb_gettime(host, &amp;amp;timep)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd92600acf1aacb4bb45d3c98acc1cde89639e0e" translate="yes" xml:space="preserve">
          <source>That produces a new perl binary in the current directory with all extensions linked in that can be found in INST_ARCHLIB, SITELIBEXP, and PERL_ARCHLIB. To do that, MakeMaker writes a new Makefile, on UNIX, this is called</source>
          <target state="translated">Eso produce un nuevo binario de perl en el directorio actual con todas las extensiones enlazadas que se pueden encontrar en INST_ARCHLIB,SITELIBEXP,y PERL_ARCHLIB.Para hacer eso,MakeMaker escribe un nuevo Makefile,en UNIX,este se llama</target>
        </trans-unit>
        <trans-unit id="4fc05162b844f86aa42257bcfb3642341ec2e119" translate="yes" xml:space="preserve">
          <source>That sadly does not (yet) work on QorIQ. At the moment of writing, the supported architectures are armv5, armv7, mipsel, wl500g, x86_32, and x86_64. Check &lt;a href=&quot;https://pkg.entware.net/binaries/&quot;&gt;here&lt;/a&gt; for supported platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2351c4ce268ed6ae21d8f1fadbceac3b965331bf" translate="yes" xml:space="preserve">
          <source>That said, &lt;code&gt;miniperl -Ilib -MConfig -we 1&lt;/code&gt; should report an error, because it can not find</source>
          <target state="translated">Dicho esto, &lt;code&gt;miniperl -Ilib -MConfig -we 1&lt;/code&gt; deber&amp;iacute;a informar de un error, porque no puede encontrar</target>
        </trans-unit>
        <trans-unit id="55a11affd308eca30c6c076da831e9e75ab6c62b" translate="yes" xml:space="preserve">
          <source>That said, be aware that Perl version 5.14 introduces an exception to the rule, for syntactic convenience. Experimental array and hash container function behavior allows array and hash references to be handled by Perl as if they had been explicitly syntactically dereferenced. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl5140delta.html#Syntactical-Enhancements&quot;&gt;Syntactical Enhancements in perl5140delta&lt;/a&gt; and &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for details.</source>
          <target state="translated">Dicho esto, tenga en cuenta que la versi&amp;oacute;n 5.14 de Perl introduce una excepci&amp;oacute;n a la regla, por conveniencia sint&amp;aacute;ctica. El comportamiento experimental de la funci&amp;oacute;n de contenedor de matriz y hash permite que Perl maneje las referencias de matriz y hash como si hubieran sido expl&amp;iacute;citamente desreferenciadas sint&amp;aacute;cticamente. Consulte &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl5140delta.html#Syntactical-Enhancements&quot;&gt;Mejoras sint&amp;aacute;cticas en perl5140delta&lt;/a&gt; y &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="dd96836988cad318a9323c182f881952adb3274c" translate="yes" xml:space="preserve">
          <source>That said, there are a number of steps that can be taken to make life difficult for the potential cracker. The most important: Write your decryption filter in C and statically link the decryption module into the Perl binary. For further tips to make life difficult for the potential cracker, see the file</source>
          <target state="translated">Dicho esto,hay una serie de medidas que pueden tomarse para hacer la vida difícil para el potencial cracker.El más importante:Escribir el filtro de desencriptación en C y enlazar estáticamente el módulo de desencriptación en el binario de Perl.Para más consejos para hacerle la vida difícil al potencial cracker,vea el archivo</target>
        </trans-unit>
        <trans-unit id="6ebc1959c7e697a446f0d0678eca3b28f8c37055" translate="yes" xml:space="preserve">
          <source>That said, there will always be small, focused, special-purpose languages dedicated to a specific problem domain that are simply more convenient for certain kinds of problems. Perl tries to be all things to all people, but nothing special to anyone. Examples of specialized languages that come to mind include prolog and matlab.</source>
          <target state="translated">Dicho esto,siempre habrá pequeños lenguajes enfocados y con propósitos especiales dedicados a un dominio de problemas específicos que son simplemente más convenientes para ciertos tipos de problemas.Perl trata de ser todo para todas las personas,pero nada especial para nadie.Algunos ejemplos de lenguajes especializados que me vienen a la mente son el prolog y el matlab.</target>
        </trans-unit>
        <trans-unit id="e78afc53e325aea84cf9c7e198003b89094d500a" translate="yes" xml:space="preserve">
          <source>That same loop could be replaced with a slice operation:</source>
          <target state="translated">Ese mismo lazo podría ser reemplazado con una operación de corte:</target>
        </trans-unit>
        <trans-unit id="c28091748ec2b3306715e341483bb158b9c0cd3f" translate="yes" xml:space="preserve">
          <source>That second argument may be either a &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt;'d regular expression (which is then used to match the terminator line), or a defined false value (which indicates that no terminator line should be looked for), or a reference to a hash (in which case the terminator is the value associated with the key &lt;code&gt;'terminator'&lt;/code&gt; .</source>
          <target state="translated">Ese segundo argumento puede ser una expresi&amp;oacute;n regular &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; 'd (que luego se usa para hacer coincidir la l&amp;iacute;nea de terminaci&amp;oacute;n), o un valor falso definido (que indica que no se debe buscar ninguna l&amp;iacute;nea de terminaci&amp;oacute;n), o una referencia a un hash (en cuyo caso el terminador es el valor asociado con la clave &lt;code&gt;'terminator'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75416fa5f847a38d5ad02218210c2358173e5f41" translate="yes" xml:space="preserve">
          <source>That second argument may be either a &lt;code&gt;qr&lt;/code&gt;'d regular expression (which is then used to match the terminator line), or a defined false value (which indicates that no terminator line should be looked for), or a reference to a hash (in which case the terminator is the value associated with the key &lt;code&gt;'terminator'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abf2ef0e2b7f166486ede4264164097c7510116" translate="yes" xml:space="preserve">
          <source>That should be written:</source>
          <target state="translated">Eso debería estar escrito:</target>
        </trans-unit>
        <trans-unit id="21e34acb57e36768d34631cec4d8c18d970f96ef" translate="yes" xml:space="preserve">
          <source>That should probably be written more simply as:</source>
          <target state="translated">Eso probablemente debería escribirse más simplemente como:</target>
        </trans-unit>
        <trans-unit id="6c2b874251fc59b8ebf4af56444c528d2be2ade1" translate="yes" xml:space="preserve">
          <source>That shows the &lt;code&gt;UTF8&lt;/code&gt; flag in FLAGS and both the UTF-8 bytes and Unicode characters in &lt;code&gt;PV&lt;/code&gt; . See also later in this document the discussion about the &lt;code&gt;utf8::is_utf8()&lt;/code&gt; function.</source>
          <target state="translated">Eso muestra la bandera &lt;code&gt;UTF8&lt;/code&gt; en FLAGS y tanto los bytes UTF-8 como los caracteres Unicode en &lt;code&gt;PV&lt;/code&gt; . Vea tambi&amp;eacute;n m&amp;aacute;s adelante en este documento la discusi&amp;oacute;n sobre la funci&amp;oacute;n &lt;code&gt;utf8::is_utf8()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85f3321460ffe7c824d8d5e2118a4e8f2a1ba235" translate="yes" xml:space="preserve">
          <source>That shows the &lt;code&gt;UTF8&lt;/code&gt; flag in FLAGS and both the UTF-8 bytes and Unicode characters in &lt;code&gt;PV&lt;/code&gt;. See also later in this document the discussion about the &lt;code&gt;utf8::is_utf8()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90310d92761cded68c459a20fa9fa044cf2b05ae" translate="yes" xml:space="preserve">
          <source>That speeds things up but I have to make a note of which tests are failing and make sure that I run those tests. Instead I can use prove's --state switch and have it keep track of failing tests for me. First I do a complete run of the test suite and tell prove to save the results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f7e088596d63a221ae18b14ab5e5b19e9feddc" translate="yes" xml:space="preserve">
          <source>That stores a machine readable summary of the test run in a file called '.prove' in the current directory. If I have failures I can then run just the failing scripts like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032b01f3384ab611cdf4fd40994fa76549ad8c4f" translate="yes" xml:space="preserve">
          <source>That syntax simply won't work. It sets just &lt;code&gt;@a&lt;/code&gt; or &lt;code&gt;%a&lt;/code&gt; and clears the &lt;code&gt;@b&lt;/code&gt; or &lt;code&gt;%b&lt;/code&gt; . Plus the function didn't get passed into two separate arrays or hashes: it got one long list in &lt;code&gt;@_&lt;/code&gt; , as always.</source>
          <target state="translated">Esa sintaxis simplemente no funcionar&amp;aacute;. Establece solo &lt;code&gt;@a&lt;/code&gt; o &lt;code&gt;%a&lt;/code&gt; y borra &lt;code&gt;@b&lt;/code&gt; o &lt;code&gt;%b&lt;/code&gt; . Adem&amp;aacute;s, la funci&amp;oacute;n no se pas&amp;oacute; a dos matrices o hashes separados: obtuvo una lista larga en &lt;code&gt;@_&lt;/code&gt; , como siempre.</target>
        </trans-unit>
        <trans-unit id="129289f49f37b2d5f60aa742ea447f8c63a26d22" translate="yes" xml:space="preserve">
          <source>That syntax simply won't work. It sets just &lt;code&gt;@a&lt;/code&gt; or &lt;code&gt;%a&lt;/code&gt; and clears the &lt;code&gt;@b&lt;/code&gt; or &lt;code&gt;%b&lt;/code&gt;. Plus the function didn't get passed into two separate arrays or hashes: it got one long list in &lt;code&gt;@_&lt;/code&gt;, as always.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7adc8c9bedd29857f8a7951c4ad397c707680f4" translate="yes" xml:space="preserve">
          <source>That temporarily undefs your record separator, and will automatically close the file at block exit. If the file is already open, just use this:</source>
          <target state="translated">Eso deshace temporalmente su separador de registros,y cerrará automáticamente el archivo a la salida del bloque.Si el archivo ya está abierto,sólo usa esto:</target>
        </trans-unit>
        <trans-unit id="e79dac633171d977159db125388db2bf16415ce0" translate="yes" xml:space="preserve">
          <source>That the fields are in a certain order</source>
          <target state="translated">Que los campos están en un cierto orden</target>
        </trans-unit>
        <trans-unit id="5adec0092e434c8b7770e6ed721609aafb6fb0d1" translate="yes" xml:space="preserve">
          <source>That the sizeof(struct) or the alignments are the same everywhere</source>
          <target state="translated">Que el tamaño de la estructura o las alineaciones son las mismas en todas partes</target>
        </trans-unit>
        <trans-unit id="ff9ccf09dc2dc150e284071ebd76e3a60583513f" translate="yes" xml:space="preserve">
          <source>That third argument tests the byte size of the data on the &lt;code&gt;$fh&lt;/code&gt; filehandle and reads that many bytes into the buffer &lt;code&gt;$var&lt;/code&gt; .</source>
          <target state="translated">Ese tercer argumento prueba el tama&amp;ntilde;o de bytes de los datos en el &lt;code&gt;$fh&lt;/code&gt; y lee esa cantidad de bytes en el b&amp;uacute;fer &lt;code&gt;$var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="949fbe166b991dbecc0e8400e8a8c343a056cb09" translate="yes" xml:space="preserve">
          <source>That third argument tests the byte size of the data on the &lt;code&gt;$fh&lt;/code&gt; filehandle and reads that many bytes into the buffer &lt;code&gt;$var&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38036119f27283dda19af4e5c3596941c97c5a13" translate="yes" xml:space="preserve">
          <source>That way, quant just has to chose which form it needs, without having to look up or generate anything. While possibly not optimal for Russian, this should work well for most other languages, where quantification is not as complicated an operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38824e1c7c399bcd876c5d796e89f3c65e609e8" translate="yes" xml:space="preserve">
          <source>That will efficiently match a nonempty group with matching parentheses two levels deep or less. However, if there is no such group, it will take virtually forever on a long string. That's because there are so many different ways to split a long string into several substrings. This is what &lt;code&gt;(.+)+&lt;/code&gt; is doing, and &lt;code&gt;(.+)+&lt;/code&gt; is similar to a subpattern of the above pattern. Consider how the pattern above detects no-match on &lt;code&gt;((()aaaaaaaaaaaaaaaaaa&lt;/code&gt; in several seconds, but that each extra letter doubles this time. This exponential performance will make it appear that your program has hung. However, a tiny change to this pattern</source>
          <target state="translated">Eso har&amp;aacute; coincidir eficientemente un grupo no vac&amp;iacute;o con par&amp;eacute;ntesis coincidentes de dos niveles de profundidad o menos. Sin embargo, si no existe tal grupo, tomar&amp;aacute; pr&amp;aacute;cticamente una eternidad en una cadena larga. Eso es porque hay muchas formas diferentes de dividir una cadena larga en varias subcadenas. Esto es lo que est&amp;aacute; haciendo &lt;code&gt;(.+)+&lt;/code&gt; , Y &lt;code&gt;(.+)+&lt;/code&gt; Es similar a un subpatr&amp;oacute;n del patr&amp;oacute;n anterior. Considere c&amp;oacute;mo el patr&amp;oacute;n anterior detecta datos que no concuerdan en &lt;code&gt;((()aaaaaaaaaaaaaaaaaa&lt;/code&gt; en varios segundos, pero que cada letra adicional duplica este momento. Esta evoluci&amp;oacute;n exponencial har&amp;aacute; que parezca que su programa ha colgado. Sin embargo, un peque&amp;ntilde;o cambio a este patr&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="d2c33811186783297750533407ae69a2c30dbe1c" translate="yes" xml:space="preserve">
          <source>That will print out &lt;code&gt;20&lt;/code&gt; and &lt;code&gt;10&lt;/code&gt; .</source>
          <target state="translated">Eso imprimir&amp;aacute; &lt;code&gt;20&lt;/code&gt; y &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e40934849066a98371a45c630d963f7be828b226" translate="yes" xml:space="preserve">
          <source>That will print out &lt;code&gt;20&lt;/code&gt; and &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844b1a95e3bd3c94e0935eae872c27cb6a3ae275" translate="yes" xml:space="preserve">
          <source>That will print out:</source>
          <target state="translated">Eso se imprimirá:</target>
        </trans-unit>
        <trans-unit id="05490647754607e7eecb9c45fdd4f2b090c65042" translate="yes" xml:space="preserve">
          <source>That will run all tests in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6db72df23e281596a803d5b93d6efaedb2438e" translate="yes" xml:space="preserve">
          <source>That will run the script &lt;b&gt;myprogram&lt;/b&gt; without human intervention, printing out the call tree with entry and exit points. Note that &lt;code&gt;NonStop=1 frame=2&lt;/code&gt; is equivalent to &lt;code&gt;N f=2&lt;/code&gt; , and that originally, options could be uniquely abbreviated by the first letter (modulo the &lt;code&gt;Dump*&lt;/code&gt; options). It is nevertheless recommended that you always spell them out in full for legibility and future compatibility.</source>
          <target state="translated">Eso ejecutar&amp;aacute; el script &lt;b&gt;myprogram&lt;/b&gt; sin intervenci&amp;oacute;n humana, imprimiendo el &amp;aacute;rbol de llamadas con puntos de entrada y salida. Tenga en cuenta que &lt;code&gt;NonStop=1 frame=2&lt;/code&gt; es equivalente a &lt;code&gt;N f=2&lt;/code&gt; , y que originalmente, las opciones pod&amp;iacute;an abreviarse de forma &amp;uacute;nica por la primera letra (m&amp;oacute;dulo las opciones &lt;code&gt;Dump*&lt;/code&gt; ). No obstante, se recomienda que siempre los deletree en su totalidad para que sean legibles y compatibles en el futuro.</target>
        </trans-unit>
        <trans-unit id="9b8798239553ae3afadcaa20b0a364d6ef25290e" translate="yes" xml:space="preserve">
          <source>That will run the script &lt;b&gt;myprogram&lt;/b&gt; without human intervention, printing out the call tree with entry and exit points. Note that &lt;code&gt;NonStop=1 frame=2&lt;/code&gt; is equivalent to &lt;code&gt;N f=2&lt;/code&gt;, and that originally, options could be uniquely abbreviated by the first letter (modulo the &lt;code&gt;Dump*&lt;/code&gt; options). It is nevertheless recommended that you always spell them out in full for legibility and future compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06ee710fae521075f5d16e4386c06facdb36dbc" translate="yes" xml:space="preserve">
          <source>That won't work at all, because &lt;code&gt;.*&lt;/code&gt; was greedy and gobbled up the whole string. As &lt;code&gt;\d*&lt;/code&gt; can match on an empty string the complete regular expression matched successfully.</source>
          <target state="translated">Eso no funcionar&amp;aacute; en absoluto, porque &lt;code&gt;.*&lt;/code&gt; Era codicioso y se trag&amp;oacute; todo el hilo. Como &lt;code&gt;\d*&lt;/code&gt; puede coincidir en una cadena vac&amp;iacute;a, la expresi&amp;oacute;n regular completa coincide correctamente.</target>
        </trans-unit>
        <trans-unit id="cf6d51f1f160810f3ac3cc94b21320c749d1f295" translate="yes" xml:space="preserve">
          <source>That'll get you scolded on perl5-porters, so don't do that. Be Awesome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025065d41f91f68021f87b4bc88af80b714297bb" translate="yes" xml:space="preserve">
          <source>That's a bit better, but we still have that last column which needs to be moved further over. There's an easy way to fix this up: unfortunately, we can't get &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; to right-justify our fields, but we can get &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; to do it:</source>
          <target state="translated">Eso es un poco mejor, pero todav&amp;iacute;a tenemos la &amp;uacute;ltima columna que debe moverse m&amp;aacute;s adelante. Hay una manera f&amp;aacute;cil de arreglar esto: desafortunadamente, no podemos hacer que el &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; justifique a la derecha nuestros campos, pero podemos hacer que &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; lo haga:</target>
        </trans-unit>
        <trans-unit id="28a77e110fbf943f3cd364152b5e3d00190d5f60" translate="yes" xml:space="preserve">
          <source>That's a bit better, but we still have that last column which needs to be moved further over. There's an easy way to fix this up: unfortunately, we can't get &lt;code&gt;pack&lt;/code&gt; to right-justify our fields, but we can get &lt;code&gt;sprintf&lt;/code&gt; to do it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ac81e130e91631a9d78d2d6a68196fcf7146e7" translate="yes" xml:space="preserve">
          <source>That's about all there is to it. Actually, it's more than all there is to it, because we've done a few nice things here for the sake of completeness, robustness, and general aesthetics. Simpler TIESCALAR classes are certainly possible.</source>
          <target state="translated">Eso es todo lo que hay.En realidad,es más que todo lo que hay,porque hemos hecho algunas cosas bonitas aquí por el bien de la integridad,la robustez y la estética general.Las clases de TIESCALAR más simples son ciertamente posibles.</target>
        </trans-unit>
        <trans-unit id="eb3acd01c2e3336fdfd272a108c9af206f049bc1" translate="yes" xml:space="preserve">
          <source>That's all that's strictly necessary. There's additional files you might want:</source>
          <target state="translated">Eso es todo lo que es estrictamente necesario.Hay archivos adicionales que puede querer:</target>
        </trans-unit>
        <trans-unit id="f4b60ee9e69236a73adb2c3c53252dab7254d2c9" translate="yes" xml:space="preserve">
          <source>That's all well and good for declaration of a fixed data structure, but what if you wanted to add new elements on the fly, or build it up entirely from scratch?</source>
          <target state="translated">Todo eso está muy bien para declarar una estructura de datos fija,pero ¿qué pasa si quieres añadir nuevos elementos sobre la marcha,o construirla completamente desde cero?</target>
        </trans-unit>
        <trans-unit id="10d195eb40678f2e435ff6368a25ea9770d7ae62" translate="yes" xml:space="preserve">
          <source>That's all you need to do on Unix systems with dynamic linking. Most Unix systems have dynamic linking. If yours doesn't, or if for another reason you have a statically-linked perl, &lt;b&gt;and&lt;/b&gt; the module requires compilation, you'll need to build a new Perl binary that includes the module. Again, you'll probably need to be root.</source>
          <target state="translated">Eso es todo lo que necesita hacer en sistemas Unix con enlaces din&amp;aacute;micos. La mayor&amp;iacute;a de los sistemas Unix tienen enlaces din&amp;aacute;micos. Si el suyo no lo tiene, o si por alguna otra raz&amp;oacute;n tiene un perl vinculado est&amp;aacute;ticamente &lt;b&gt;y&lt;/b&gt; el m&amp;oacute;dulo requiere compilaci&amp;oacute;n, deber&amp;aacute; crear un nuevo binario de Perl que incluya el m&amp;oacute;dulo. De nuevo, probablemente necesites ser root.</target>
        </trans-unit>
        <trans-unit id="a00ede3b70bdf4862c08ec2dce8548cbf40dc38c" translate="yes" xml:space="preserve">
          <source>That's all. Similarly for ncftp or ftp, you would configure something like</source>
          <target state="translated">Eso es todo.De manera similar para ncftp o ftp,configurarías algo como</target>
        </trans-unit>
        <trans-unit id="6a90902fefb78efc91bb4045efc7ccd96cd2b158" translate="yes" xml:space="preserve">
          <source>That's autovivification. You can get around this in a few ways. The easiest way is to just turn it off. The lexical &lt;code&gt;autovivification&lt;/code&gt; pragma is available on CPAN. Now you don't add to the hash:</source>
          <target state="translated">Eso es autovivificaci&amp;oacute;n. Puede evitar esto de varias maneras. La forma m&amp;aacute;s sencilla es simplemente apagarlo. El pragma de &lt;code&gt;autovivification&lt;/code&gt; l&amp;eacute;xica est&amp;aacute; disponible en CPAN. Ahora no agregas al hash:</target>
        </trans-unit>
        <trans-unit id="9f49d51a5d99f95a36f28eae4b0601a8a32ea05a" translate="yes" xml:space="preserve">
          <source>That's because &lt;code&gt;.*&lt;/code&gt; was greedy, so you get everything between the</source>
          <target state="translated">Eso es porque &lt;code&gt;.*&lt;/code&gt; Era codicioso, as&amp;iacute; que obtienes todo entre los</target>
        </trans-unit>
        <trans-unit id="1b898ba735cd15a6bd993ec3d75a6b0058359915" translate="yes" xml:space="preserve">
          <source>That's because Perl doesn't (ever) implicitly dereference your variables. If you want to get at the thing a reference is referring to, then you have to do this yourself using either prefix typing indicators, like &lt;code&gt;${$blah}&lt;/code&gt; , &lt;code&gt;@{$blah}&lt;/code&gt; , &lt;code&gt;@{$blah[$i]}&lt;/code&gt; , or else postfix pointer arrows, like &lt;code&gt;$a-&amp;gt;[3]&lt;/code&gt; , &lt;code&gt;$h-&amp;gt;{fred}&lt;/code&gt; , or even &lt;code&gt;$ob-&amp;gt;method()-&amp;gt;[3]&lt;/code&gt; .</source>
          <target state="translated">Eso es porque Perl no desreferencia impl&amp;iacute;citamente sus variables (nunca). Si quieres llegar a aquello a lo que se refiere una referencia, tienes que hacerlo t&amp;uacute; mismo usando indicadores de escritura de prefijo, como &lt;code&gt;${$blah}&lt;/code&gt; , &lt;code&gt;@{$blah}&lt;/code&gt; , &lt;code&gt;@{$blah[$i]}&lt;/code&gt; , o bien flechas de puntero postfijo, como &lt;code&gt;$a-&amp;gt;[3]&lt;/code&gt; , &lt;code&gt;$h-&amp;gt;{fred}&lt;/code&gt; , o incluso &lt;code&gt;$ob-&amp;gt;method()-&amp;gt;[3]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7a4a3776ff01d004644640252dd53fc3704e0e2" translate="yes" xml:space="preserve">
          <source>That's because Perl doesn't (ever) implicitly dereference your variables. If you want to get at the thing a reference is referring to, then you have to do this yourself using either prefix typing indicators, like &lt;code&gt;${$blah}&lt;/code&gt;, &lt;code&gt;@{$blah}&lt;/code&gt;, &lt;code&gt;@{$blah[$i]}&lt;/code&gt;, or else postfix pointer arrows, like &lt;code&gt;$a-&amp;gt;[3]&lt;/code&gt;, &lt;code&gt;$h-&amp;gt;{fred}&lt;/code&gt;, or even &lt;code&gt;$ob-&amp;gt;method()-&amp;gt;[3]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d4ba2bfdf5f5b21a00717fd39047d39da3c192" translate="yes" xml:space="preserve">
          <source>That's because Perl's precedence rules on its five prefix dereferencers (which look like someone swearing: &lt;code&gt;$ @ * % &amp;amp;&lt;/code&gt; ) make them bind more tightly than the postfix subscripting brackets or braces! This will no doubt come as a great shock to the C or C++ programmer, who is quite accustomed to using &lt;code&gt;*a[i]&lt;/code&gt; to mean what's pointed to by the</source>
          <target state="translated">Esto se debe a que las reglas de precedencia de Perl sobre sus cinco prefijos desreferenciadores (que se ven como si alguien jurara: &lt;code&gt;$ @ * % &amp;amp;&lt;/code&gt; ) hacen que se unan m&amp;aacute;s estrechamente que los corchetes o llaves de sub&amp;iacute;ndice de sufijo. Esto sin duda ser&amp;aacute; un gran shock para el programador de C o C ++, que est&amp;aacute; bastante acostumbrado a usar &lt;code&gt;*a[i]&lt;/code&gt; para referirse a lo que apunta el</target>
        </trans-unit>
        <trans-unit id="41187fe54a62e820e1df501181075a2f61202104" translate="yes" xml:space="preserve">
          <source>That's because Perl's precedence rules on its five prefix dereferencers (which look like someone swearing: &lt;code&gt;$ @ * % &amp;amp;&lt;/code&gt;) make them bind more tightly than the postfix subscripting brackets or braces! This will no doubt come as a great shock to the C or C++ programmer, who is quite accustomed to using &lt;code&gt;*a[i]&lt;/code&gt; to mean what's pointed to by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f393c4bb027f44afad135cf4530852dabaa1d38" translate="yes" xml:space="preserve">
          <source>That's because it treats &lt;code&gt;$fh&lt;/code&gt; as a string like &lt;code&gt;&quot;IO::Handle=GLOB(0x8039e0)&quot;&lt;/code&gt; , then pattern matches against that.</source>
          <target state="translated">Eso es porque trata &lt;code&gt;$fh&lt;/code&gt; como una cadena como &lt;code&gt;&quot;IO::Handle=GLOB(0x8039e0)&quot;&lt;/code&gt; , luego el patr&amp;oacute;n coincide con eso.</target>
        </trans-unit>
        <trans-unit id="e5243109f1982ab10b2f341fa04b05232d301e22" translate="yes" xml:space="preserve">
          <source>That's because it treats &lt;code&gt;$fh&lt;/code&gt; as a string like &lt;code&gt;&quot;IO::Handle=GLOB(0x8039e0)&quot;&lt;/code&gt;, then pattern matches against that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef987861945b1d2e7a185649ce3d062e04bb5bf" translate="yes" xml:space="preserve">
          <source>That's because my() is more of a run-time statement than it is a compile-time declaration</source>
          <target state="translated">Eso es porque mi()es más una declaración en tiempo de ejecución que una declaración en tiempo de compilación</target>
        </trans-unit>
        <trans-unit id="62587e053e8900b6dd6dfce6fa04010b4761573b" translate="yes" xml:space="preserve">
          <source>That's certainly better, but we still have to know how long all the integers are, and portability is far away. Rather than &lt;code&gt;2&lt;/code&gt; , for instance, we want to say &quot;however long a short is&quot;. But this can be done by enclosing the appropriate pack code in brackets: &lt;code&gt;[s]&lt;/code&gt;. So, here's the very best we can do:</source>
          <target state="translated">Eso es ciertamente mejor, pero a&amp;uacute;n tenemos que saber cu&amp;aacute;nto duran todos los n&amp;uacute;meros enteros, y la portabilidad est&amp;aacute; muy lejos. En lugar de &lt;code&gt;2&lt;/code&gt; , por ejemplo, queremos decir &quot;por muy largo que sea un corto&quot;. Pero esto se puede hacer encerrando el c&amp;oacute;digo de paquete apropiado entre par&amp;eacute;ntesis: &lt;code&gt;[s]&lt;/code&gt; . Entonces, esto es lo mejor que podemos hacer:</target>
        </trans-unit>
        <trans-unit id="d3165047d193a37d5ff71109d566914086cc04dd" translate="yes" xml:space="preserve">
          <source>That's certainly better, but we still have to know how long all the integers are, and portability is far away. Rather than &lt;code&gt;2&lt;/code&gt;, for instance, we want to say &quot;however long a short is&quot;. But this can be done by enclosing the appropriate pack code in brackets: &lt;code&gt;[s]&lt;/code&gt;. So, here's the very best we can do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0971c7f378d8883abc6949fc548118faa7827c21" translate="yes" xml:space="preserve">
          <source>That's faster, cleaner, and safer than the previous approach. Of course, you don't need to use a dollar sign. You could use your own scheme to make it less confusing, like bracketed percent symbols, etc.</source>
          <target state="translated">Eso es más rápido,más limpio y más seguro que el enfoque anterior.Por supuesto,no necesitas usar el signo de dólar.Puedes usar tu propio esquema para hacerlo menos confuso,como los símbolos de porcentaje entre corchetes,etc.</target>
        </trans-unit>
        <trans-unit id="c29a101730c3253b24f4d81e9d501b9e43d3a5b6" translate="yes" xml:space="preserve">
          <source>That's fine for Internet-domain clients and servers, but what about local communications? While you can use the same setup, sometimes you don't want to. Unix-domain sockets are local to the current host, and are often used internally to implement pipes. Unlike Internet domain sockets, Unix domain sockets can show up in the file system with an ls(1) listing.</source>
          <target state="translated">Eso está bien para los clientes y servidores del dominio de Internet,pero ¿qué pasa con las comunicaciones locales? Aunque puedes usar la misma configuración,a veces no quieres.Los sockets de los dominios Unix son locales para el host actual,y a menudo se usan internamente para implementar tuberías.A diferencia de los sockets de dominio de Internet,los sockets de dominio Unix pueden aparecer en el sistema de archivos con un listado ls(1).</target>
        </trans-unit>
        <trans-unit id="931aa8f88f4f387e1b11a09a91636eb5c2525c4d" translate="yes" xml:space="preserve">
          <source>That's how Perl parsed the program, from top to bottom:</source>
          <target state="translated">Así es como Perl analizó el programa,de arriba a abajo:</target>
        </trans-unit>
        <trans-unit id="8a9ad9d817fc65f643335d0c0e239182a33f908e" translate="yes" xml:space="preserve">
          <source>That's how it works. It's pretty simple; as with many Perl programs, the explanation is much longer than the program.</source>
          <target state="translated">Así es como funciona.Es bastante simple;como con muchos programas de Perl,la explicación es mucho más larga que la del programa.</target>
        </trans-unit>
        <trans-unit id="a4ec64876254c2b08386415f463aa4c3731a3571" translate="yes" xml:space="preserve">
          <source>That's how the &lt;code&gt;*PL_keyword_plugin&lt;/code&gt; function needs to behave overall. Conventionally, however, one does not completely replace the existing handler function. Instead, take a copy of &lt;code&gt;PL_keyword_plugin&lt;/code&gt; before assigning your own function pointer to it. Your handler function should look for keywords that it is interested in and handle those. Where it is not interested, it should call the saved plugin function, passing on the arguments it received. Thus &lt;code&gt;PL_keyword_plugin&lt;/code&gt; actually points at a chain of handler functions, all of which have an opportunity to handle keywords, and only the last function in the chain (built into the Perl core) will normally return &lt;code&gt;KEYWORD_PLUGIN_DECLINE&lt;/code&gt; .</source>
          <target state="translated">As&amp;iacute; es como debe comportarse la funci&amp;oacute;n &lt;code&gt;*PL_keyword_plugin&lt;/code&gt; en general. Sin embargo, convencionalmente no se reemplaza completamente la funci&amp;oacute;n de controlador existente. En su lugar, tome una copia de &lt;code&gt;PL_keyword_plugin&lt;/code&gt; antes de asignarle su propio puntero de funci&amp;oacute;n. Su funci&amp;oacute;n de controlador debe buscar las palabras clave que le interesan y manejarlas. Cuando no est&amp;eacute; interesado, debe llamar a la funci&amp;oacute;n del complemento guardado, transmitiendo los argumentos que recibi&amp;oacute;. Por &lt;code&gt;PL_keyword_plugin&lt;/code&gt; tanto, PL_keyword_plugin en realidad apunta a una cadena de funciones de controlador, todas las cuales tienen la oportunidad de manejar palabras clave, y solo la &amp;uacute;ltima funci&amp;oacute;n de la cadena (incorporada en el n&amp;uacute;cleo de Perl) normalmente devolver&amp;aacute; &lt;code&gt;KEYWORD_PLUGIN_DECLINE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b08fbd323cdcfc2a59e5f4cc2312d748230aa97" translate="yes" xml:space="preserve">
          <source>That's how the &lt;code&gt;*PL_keyword_plugin&lt;/code&gt; function needs to behave overall. Conventionally, however, one does not completely replace the existing handler function. Instead, take a copy of &lt;code&gt;PL_keyword_plugin&lt;/code&gt; before assigning your own function pointer to it. Your handler function should look for keywords that it is interested in and handle those. Where it is not interested, it should call the saved plugin function, passing on the arguments it received. Thus &lt;code&gt;PL_keyword_plugin&lt;/code&gt; actually points at a chain of handler functions, all of which have an opportunity to handle keywords, and only the last function in the chain (built into the Perl core) will normally return &lt;code&gt;KEYWORD_PLUGIN_DECLINE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417bb675fe45cc9c0d3fa87fb632598764e6a64d" translate="yes" xml:space="preserve">
          <source>That's it for creating references. By now you're probably dying to know how to use references to get back to your long-lost data. There are several basic methods.</source>
          <target state="translated">Eso es todo para crear referencias.A estas alturas,probablemente te mueras por saber cómo usar las referencias para volver a tus datos perdidos hace tiempo.Hay varios métodos básicos.</target>
        </trans-unit>
        <trans-unit id="e93f4cf2c16977aa0828b84202ee64df60519c65" translate="yes" xml:space="preserve">
          <source>That's it!</source>
          <target state="translated">¡Eso es!</target>
        </trans-unit>
        <trans-unit id="4ad43787f3a61735da906162ae4566f1716a8e9d" translate="yes" xml:space="preserve">
          <source>That's it, you're back on home turf again.</source>
          <target state="translated">Eso es todo,estás de vuelta en tu territorio otra vez.</target>
        </trans-unit>
        <trans-unit id="ad818b8edee0b9dd293a16c07bd537675f5226f7" translate="yes" xml:space="preserve">
          <source>That's just the simple case of assigning an array to a scalar and getting its element count. If that's what you really and truly want, then you might do well to consider being a tad more explicit about it, like this:</source>
          <target state="translated">Es el simple caso de asignar una matriz a un escalar y obtener su número de elementos.Si eso es lo que realmente quieres,entonces deberías considerar ser un poco más explícito al respecto,como esto:</target>
        </trans-unit>
        <trans-unit id="64d9d2742b71e9220af551f7c7046f7f081af6aa" translate="yes" xml:space="preserve">
          <source>That's not much help, a couple of welcomes in there, but no indication of which are keys, and which are values, it's just a listed array dump and, in this case, not particularly helpful. The trick here, is to use a &lt;b&gt;reference&lt;/b&gt; to the data structure:</source>
          <target state="translated">Eso no es de mucha ayuda, un par de bienvenidas all&amp;iacute;, pero no hay indicaci&amp;oacute;n de cu&amp;aacute;les son claves y cu&amp;aacute;les son valores, es solo un volcado de matriz enumerado y, en este caso, no es particularmente &amp;uacute;til. El truco aqu&amp;iacute; es usar una &lt;b&gt;referencia&lt;/b&gt; a la estructura de datos:</target>
        </trans-unit>
        <trans-unit id="33e7ab43a8b3ad63335115c42e08832229acf410" translate="yes" xml:space="preserve">
          <source>That's not particularly efficient. It would be more space-efficient to use:</source>
          <target state="translated">Eso no es particularmente eficiente.Sería más eficiente en el espacio:</target>
        </trans-unit>
        <trans-unit id="69885b7848b259e032939450164926f255956e80" translate="yes" xml:space="preserve">
          <source>That's pretty much it. Now write</source>
          <target state="translated">Eso es más o menos así.Ahora escribe</target>
        </trans-unit>
        <trans-unit id="0e0f898332e33495bcec31fc5e9658f137da2c67" translate="yes" xml:space="preserve">
          <source>That's probably because you forgot libraries, or library paths differ. You really should build the whole distribution on the machine it will eventually live on, and then type &lt;code&gt;make install&lt;/code&gt; . Most other approaches are doomed to failure.</source>
          <target state="translated">Probablemente se deba a que olvid&amp;oacute; las bibliotecas o las rutas de las bibliotecas difieren. Realmente deber&amp;iacute;a construir la distribuci&amp;oacute;n completa en la m&amp;aacute;quina en la que eventualmente vivir&amp;aacute;, y luego escribir &lt;code&gt;make install&lt;/code&gt; . La mayor&amp;iacute;a de los dem&amp;aacute;s enfoques est&amp;aacute;n condenados al fracaso.</target>
        </trans-unit>
        <trans-unit id="bd1f4414e3c5b98a871dc22bff9ce2a5552a8c42" translate="yes" xml:space="preserve">
          <source>That's probably because you forgot libraries, or library paths differ. You really should build the whole distribution on the machine it will eventually live on, and then type &lt;code&gt;make install&lt;/code&gt;. Most other approaches are doomed to failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f563351f204013afa271606ba9bd745aa56dda" translate="yes" xml:space="preserve">
          <source>That's shown below, in a program I'll call</source>
          <target state="translated">Eso se muestra a continuación,en un programa que llamaré</target>
        </trans-unit>
        <trans-unit id="651cfe39b8f69bca0fd98eae5d4edf4fd6370a67" translate="yes" xml:space="preserve">
          <source>That's where the glue code can be inserted to create the initial contact between Perl and linked C/C++ routines. Let's take a look some pieces of</source>
          <target state="translated">Ahí es donde se puede insertar el código del pegamento para crear el contacto inicial entre Perl y las rutinas enlazadas de C/C++.Echemos un vistazo a algunos trozos de</target>
        </trans-unit>
        <trans-unit id="9608b4f77e4cb870b25879f8aef6ee06bf6a1b9f" translate="yes" xml:space="preserve">
          <source>That's why &lt;code&gt;STORABLE_freeze&lt;/code&gt; lets you provide a list of references to serialize. The engine guarantees that those will be serialized in the same context as the other objects, and therefore that shared objects will stay shared.</source>
          <target state="translated">Es por eso que &lt;code&gt;STORABLE_freeze&lt;/code&gt; le permite proporcionar una lista de referencias para serializar. El motor garantiza que esos se serializar&amp;aacute;n en el mismo contexto que los otros objetos y, por lo tanto, los objetos compartidos permanecer&amp;aacute;n compartidos.</target>
        </trans-unit>
        <trans-unit id="735b594fd42209c8688db3bd34982beb910ab493" translate="yes" xml:space="preserve">
          <source>That's why they're called 'options'.</source>
          <target state="translated">Por eso se llaman &quot;opciones&quot;.</target>
        </trans-unit>
        <trans-unit id="8301b3f815f17c3dd7076e96039e1678841b82a4" translate="yes" xml:space="preserve">
          <source>Thatclassname</source>
          <target state="translated">Thatclassname</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="2ebc0d199c8eb44a7ac92ea22e10498f30092a55" translate="yes" xml:space="preserve">
          <source>The &quot;*&quot; above stands for some Unicode version number, such as &lt;code&gt;1.1&lt;/code&gt; or &lt;code&gt;12.0&lt;/code&gt;; or the &quot;*&quot; can also be &lt;code&gt;Unassigned&lt;/code&gt;. This property will match the code points whose final disposition has been settled as of the Unicode release given by the version number; &lt;code&gt;\p{Present_In: Unassigned}&lt;/code&gt; will match those code points whose meaning has yet to be assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f203dc849e9f4f723b6a77e413f463ccf14a492" translate="yes" xml:space="preserve">
          <source>The &quot;*&quot; above stands for some two digit Unicode version number, such as &lt;code&gt;1.1&lt;/code&gt; or &lt;code&gt;4.0&lt;/code&gt; ; or the &quot;*&quot; can also be &lt;code&gt;Unassigned&lt;/code&gt; . This property will match the code points whose final disposition has been settled as of the Unicode release given by the version number; &lt;code&gt;\p{Present_In: Unassigned}&lt;/code&gt; will match those code points whose meaning has yet to be assigned.</source>
          <target state="translated">El &quot;*&quot; anterior representa un n&amp;uacute;mero de versi&amp;oacute;n Unicode de dos d&amp;iacute;gitos, como &lt;code&gt;1.1&lt;/code&gt; o &lt;code&gt;4.0&lt;/code&gt; ; o el &quot;*&quot; tambi&amp;eacute;n puede ser Sin &lt;code&gt;Unassigned&lt;/code&gt; . Esta propiedad coincidir&amp;aacute; con los puntos de c&amp;oacute;digo cuya disposici&amp;oacute;n final se ha resuelto a partir de la versi&amp;oacute;n Unicode dada por el n&amp;uacute;mero de versi&amp;oacute;n; &lt;code&gt;\p{Present_In: Unassigned}&lt;/code&gt; coincidir&amp;aacute; con los puntos de c&amp;oacute;digo cuyo significado a&amp;uacute;n no se ha asignado.</target>
        </trans-unit>
        <trans-unit id="a22d3668e744bc1f40c2f7d6bd90a8803737c69c" translate="yes" xml:space="preserve">
          <source>The &quot;*&quot; character will be replaced with the complete input filename.</source>
          <target state="translated">El carácter &quot;*&quot; será reemplazado por el nombre completo del archivo de entrada.</target>
        </trans-unit>
        <trans-unit id="3b9595dacd7d80fdab60d4dc5871376b0675fb8c" translate="yes" xml:space="preserve">
          <source>The &quot;*&quot; quantifier is equivalent to &lt;code&gt;{0,}&lt;/code&gt; , the &quot;+&quot; quantifier to &lt;code&gt;{1,}&lt;/code&gt; , and the &quot;?&quot; quantifier to &lt;code&gt;{0,1}&lt;/code&gt; . n and m are limited to non-negative integral values less than a preset limit defined when perl is built. This is usually 32766 on the most common platforms. The actual limit can be seen in the error message generated by code such as this:</source>
          <target state="translated">El cuantificador &quot;*&quot; es equivalente a &lt;code&gt;{0,}&lt;/code&gt; , el cuantificador &quot;+&quot; a &lt;code&gt;{1,}&lt;/code&gt; y el &quot;?&quot; cuantificador a &lt;code&gt;{0,1}&lt;/code&gt; . nym est&amp;aacute;n limitados a valores integrales no negativos menores que un l&amp;iacute;mite preestablecido definido cuando se construye perl. Suele ser 32766 en las plataformas m&amp;aacute;s comunes. El l&amp;iacute;mite real se puede ver en el mensaje de error generado por un c&amp;oacute;digo como este:</target>
        </trans-unit>
        <trans-unit id="ef1a900f188939b7338bcc6047d7f99f423bcf86" translate="yes" xml:space="preserve">
          <source>The &quot;:&quot; on these identifiers means simply &quot;process this stuff normally, even though the result will be for some special target&quot;. I suggest that parser APIs report &quot;biblio&quot; as the target identifier, but also report that it had a &quot;:&quot; prefix. (And similarly, with the above &quot;html&quot;, report &quot;html&quot; as the target identifier, and note the</source>
          <target state="translated">El &quot;:&quot; en estos identificadores significa simplemente &quot;procesar este material normalmente,aunque el resultado será para algún objetivo especial&quot;.Sugiero que las API de parser informen &quot;biblio&quot; como el identificador del objetivo,pero también que informe de que tenía un prefijo &quot;:&quot;.(Y de manera similar,con el &quot;html&quot; anterior,informe &quot;html&quot; como el identificador de destino,y anote el</target>
        </trans-unit>
        <trans-unit id="64b5d9da126d3d99727eec1708f648b1bd4f7983" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;rules&lt;/code&gt; &quot; data structure is the the heart of the scheduler. It allows you to express simple rules like &quot;run all tests in sequence&quot; or &quot;run all tests in parallel except these five tests.&quot;. However, the rules structure also supports glob-style pattern matching and recursive definitions, so you can also express arbitarily complicated patterns.</source>
          <target state="translated">La estructura de datos &quot; &lt;code&gt;rules&lt;/code&gt; &quot; es el coraz&amp;oacute;n del planificador. Le permite expresar reglas simples como &quot;ejecutar todas las pruebas en secuencia&quot; o &quot;ejecutar todas las pruebas en paralelo excepto estas cinco pruebas&quot;. Sin embargo, la estructura de reglas tambi&amp;eacute;n admite la coincidencia de patrones de estilo global y las definiciones recursivas, por lo que tambi&amp;eacute;n puede expresar patrones arbitrariamente complicados.</target>
        </trans-unit>
        <trans-unit id="2ed0d091df98bc8db977a3f32a7cda06b5707b99" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;rules&lt;/code&gt;&quot; data structure is the the heart of the scheduler. It allows you to express simple rules like &quot;run all tests in sequence&quot; or &quot;run all tests in parallel except these five tests.&quot;. However, the rules structure also supports glob-style pattern matching and recursive definitions, so you can also express arbitarily complicated patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1074d5a9a7dcd2040a3f0c45e46a4676237c27c8" translate="yes" xml:space="preserve">
          <source>The &quot;=begin</source>
          <target state="translated">El &quot;=comenzó</target>
        </trans-unit>
        <trans-unit id="15a448a46373702e33d38bd4498490c44fd2b70f" translate="yes" xml:space="preserve">
          <source>The &quot;=item [text]&quot; paragraph should not match &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s+\d+\.?\s*\z/&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s+\*\s*\z/&lt;/a&gt;&lt;/code&gt;, nor should it match just &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s*\z/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">El p&amp;aacute;rrafo &quot;= elemento [texto]&quot; no debe coincidir con &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s+\d+\.?\s*\z/&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s+\*\s*\z/&lt;/a&gt;&lt;/code&gt; , ni deber&amp;iacute;a coincidir solo con &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A=item\s*\z/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb00107a8cd7306f310a4e41cd2188b092574511" translate="yes" xml:space="preserve">
          <source>The &quot;=item [text]&quot; paragraph should not match &lt;code&gt;m/\A=item\s+\d+\.?\s*\z/&lt;/code&gt; or &lt;code&gt;m/\A=item\s+\*\s*\z/&lt;/code&gt;, nor should it match just &lt;code&gt;m/\A=item\s*\z/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cea2af4ab6ab309f2a49ef717323c3929bef20" translate="yes" xml:space="preserve">
          <source>The &quot;=pod&quot; command by itself doesn't do much of anything, but it signals to Perl (and Pod formatters) that a Pod block starts here. A Pod block starts with</source>
          <target state="translated">El comando &quot;=pod&quot; por sí mismo no hace mucho de nada,pero indica a Perl (y a los formateadores de Pod)que un bloque de Pod empieza aquí.Un bloque de Pod empieza con</target>
        </trans-unit>
        <trans-unit id="45c9bcf242eeaf20585053facd6dddbfcd2e77f0" translate="yes" xml:space="preserve">
          <source>The &quot;English&quot; operators (&lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;xor&lt;/code&gt; , and &lt;code&gt;not&lt;/code&gt; ) deliberately have precedence lower than that of list operators for just such situations as the one above.</source>
          <target state="translated">Los operadores &quot;en ingl&amp;eacute;s&quot; ( &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;xor&lt;/code&gt; y &lt;code&gt;not&lt;/code&gt; ) deliberadamente tienen una precedencia menor que la de los operadores de lista para situaciones como la anterior.</target>
        </trans-unit>
        <trans-unit id="c776db1d67057122c329ee64bd76a151ecfea104" translate="yes" xml:space="preserve">
          <source>The &quot;English&quot; operators (&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;xor&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt;) deliberately have precedence lower than that of list operators for just such situations as the one above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c4bf3828130bdd16f6f681093f66656168cc64" translate="yes" xml:space="preserve">
          <source>The &quot;MIT&quot; License</source>
          <target state="translated">La licencia del &quot;MIT&quot;</target>
        </trans-unit>
        <trans-unit id="809b368cf33985ff1e068eaf70e57337041ab266" translate="yes" xml:space="preserve">
          <source>The &quot;Tree&quot; subsubsection in XML::Parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6804bf4d1b752ec09b4b554040a4294aa2c28e2" translate="yes" xml:space="preserve">
          <source>The &quot;U&quot; mode is modeled on Python's &quot;Universal Newlines&quot; concept, whereby DOS and Mac OS line terminators are converted internally to UNIX newlines before processing. This ensures consistent digest values when working simultaneously across multiple file systems. &lt;b&gt;The &quot;U&quot; mode influences only text files&lt;/b&gt;, namely those passing Perl's</source>
          <target state="translated">El modo &quot;U&quot; se basa en el concepto &quot;Universal Newlines&quot; de Python, mediante el cual los terminadores de l&amp;iacute;nea de DOS y Mac OS se convierten internamente en nuevas l&amp;iacute;neas de UNIX antes del procesamiento. Esto asegura valores de resumen consistentes cuando se trabaja simult&amp;aacute;neamente en varios sistemas de archivos. &lt;b&gt;El modo &quot;U&quot; solo influye en los archivos de texto&lt;/b&gt; , es decir, los que pasan los</target>
        </trans-unit>
        <trans-unit id="3825414166fcae7ca1f01fa808eb7b2edebcc1b6" translate="yes" xml:space="preserve">
          <source>The &quot;Unicode Bug&quot;</source>
          <target state="translated">El &quot;Bicho del Unicode&quot;</target>
        </trans-unit>
        <trans-unit id="0ec3a96aade5dbc6ee323c533eb4507821e58ebe" translate="yes" xml:space="preserve">
          <source>The &quot;access&quot; sub-pragma</source>
          <target state="translated">El subpragma del &quot;acceso&quot;</target>
        </trans-unit>
        <trans-unit id="c5bfb037ae6662a8b7a6614931ff100518e1954f" translate="yes" xml:space="preserve">
          <source>The &quot;bad interpreter&quot; message comes from the shell, not perl. The actual message may vary depending on your platform, shell, and locale settings.</source>
          <target state="translated">El mensaje de &quot;mal intérprete&quot; viene de la concha,no de Perl.El mensaje real puede variar dependiendo de la plataforma,el intérprete y la configuración del lugar.</target>
        </trans-unit>
        <trans-unit id="7324c65fe364cafe1f0b648f9b09ee839b62c197" translate="yes" xml:space="preserve">
          <source>The &quot;else if&quot; keyword is spelled &lt;code&gt;elsif&lt;/code&gt; in Perl. There's no &lt;code&gt;elif&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;else&quot;&gt;else&lt;/a&gt; &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt;&lt;/code&gt; either. It does parse &lt;code&gt;&lt;a href=&quot;elseif&quot;&gt;elseif&lt;/a&gt;&lt;/code&gt;, but only to warn you about not using it.</source>
          <target state="translated">La palabra clave &quot;else if&quot; se escribe &lt;code&gt;elsif&lt;/code&gt; en Perl. No hay &lt;code&gt;elif&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;else&quot;&gt;else&lt;/a&gt; &lt;a href=&quot;if&quot;&gt;if&lt;/a&gt;&lt;/code&gt; tampoco. Analiza &lt;code&gt;&lt;a href=&quot;elseif&quot;&gt;elseif&lt;/a&gt;&lt;/code&gt; , pero solo para advertirle que no lo use.</target>
        </trans-unit>
        <trans-unit id="dcec7b786aaf98a8eb4d77d89e7fe0ef405e7fc1" translate="yes" xml:space="preserve">
          <source>The &quot;else if&quot; keyword is spelled &lt;code&gt;elsif&lt;/code&gt; in Perl. There's no &lt;code&gt;elif&lt;/code&gt; or &lt;code&gt;else if&lt;/code&gt; either. It does parse &lt;code&gt;&lt;a href=&quot;functions/elseif&quot;&gt;elseif&lt;/a&gt;&lt;/code&gt;, but only to warn you about not using it.</source>
          <target state="translated">La palabra clave &quot;else if&quot; se escribe &lt;code&gt;elsif&lt;/code&gt; en Perl. No hay &lt;code&gt;elif&lt;/code&gt; o &lt;code&gt;else if&lt;/code&gt; tampoco. Analiza &lt;code&gt;&lt;a href=&quot;functions/elseif&quot;&gt;elseif&lt;/a&gt;&lt;/code&gt; , pero solo para advertirle que no lo use.</target>
        </trans-unit>
        <trans-unit id="376964f7b7dc051fc5e877b839e65e771ea6ae93" translate="yes" xml:space="preserve">
          <source>The &quot;else if&quot; keyword is spelled &lt;code&gt;elsif&lt;/code&gt; in Perl. There's no &lt;code&gt;elif&lt;/code&gt; or &lt;code&gt;else if&lt;/code&gt; either. It does parse &lt;code&gt;elseif&lt;/code&gt;, but only to warn you about not using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0a3bbed813bc00b5b829d702e3237f3e106a1b" translate="yes" xml:space="preserve">
          <source>The &quot;fail&quot; attribute can be accessed with the &lt;code&gt;fail_with&lt;/code&gt; method:</source>
          <target state="translated">Se puede acceder al atributo &quot;fail&quot; con el m&amp;eacute;todo &lt;code&gt;fail_with&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f145fe55bdca7d5323b2fa4d4c3d2d68727a4e71" translate="yes" xml:space="preserve">
          <source>The &quot;grab all you can, and do not give anything back&quot; semantic is desirable in many situations where on the first sight a simple &lt;code&gt;()*&lt;/code&gt; looks like the correct solution. Suppose we parse text with comments being delimited by &lt;code&gt;&quot;#&quot;&lt;/code&gt; followed by some optional (horizontal) whitespace. Contrary to its appearance, &lt;code&gt;#[ \t]*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfcc407b9b43637eb6bd977679586bbeebf2328" translate="yes" xml:space="preserve">
          <source>The &quot;grab all you can, and do not give anything back&quot; semantic is desirable in many situations where on the first sight a simple &lt;code&gt;()*&lt;/code&gt; looks like the correct solution. Suppose we parse text with comments being delimited by &lt;code&gt;#&lt;/code&gt; followed by some optional (horizontal) whitespace. Contrary to its appearance, &lt;code&gt;#[ \t]*&lt;/code&gt;</source>
          <target state="translated">La sem&amp;aacute;ntica &quot;agarre todo lo que pueda y no devuelva nada&quot; es deseable en muchas situaciones en las que a primera vista un simple &lt;code&gt;()*&lt;/code&gt; parece la soluci&amp;oacute;n correcta. Supongamos que analizamos el texto con comentarios delimitados por &lt;code&gt;#&lt;/code&gt; seguido de un espacio en blanco opcional (horizontal). Al contrario de su apariencia, &lt;code&gt;#[ \t]*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43c9200741055f798210ca5b9a02d181e70102c1" translate="yes" xml:space="preserve">
          <source>The &quot;in most cases&quot; hedge is because local TCP state machine behavior may depend on the peer's socket options. In particular, if the peer socket has &lt;code&gt;SO_LINGER&lt;/code&gt; enabled with a zero timeout, then the peer's &lt;code&gt;close&lt;/code&gt; will generate a &lt;code&gt;RST&lt;/code&gt; segment. Upon receipt of that segment, the local TCP transitions immediately to &lt;b&gt;CLOSED&lt;/b&gt;, and in that state, this method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64504831dda4d8442cac5969f1512970ea2ab8e" translate="yes" xml:space="preserve">
          <source>The &quot;in most cases&quot; hedge is because local TCP state machine behavior may depend on the peer's socket options. In particular, if the peer socket has SO_LINGER enabled with a zero timeout, then the peer's close() will generate a RST segment, upon receipt of which the local TCP transitions immediately to &lt;b&gt;CLOSED&lt;/b&gt;, and in that state, connected()</source>
          <target state="translated">La cobertura &quot;en la mayor&amp;iacute;a de los casos&quot; se debe a que el comportamiento de la m&amp;aacute;quina de estado TCP local puede depender de las opciones de socket del par. En particular, si el socket del par tiene SO_LINGER habilitado con un tiempo de espera cero, entonces el close () del par generar&amp;aacute; un segmento RST, al recibirlo, el TCP local pasa inmediatamente a &lt;b&gt;CERRADO&lt;/b&gt; , y en ese estado, conectado ()</target>
        </trans-unit>
        <trans-unit id="191bee2290fcd83ba60b79d930b2194e317ac84f" translate="yes" xml:space="preserve">
          <source>The &quot;inode change timestamp&quot; (the &lt;a href=&quot;perlfunc#-X-FILEHANDLE&quot;&gt;&lt;code&gt;-C&lt;/code&gt;&lt;/a&gt; filetest) may really be the &quot;creation timestamp&quot; (which it is not in Unix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ff934381d4470548d727908956bd70f3d20831" translate="yes" xml:space="preserve">
          <source>The &quot;inode change timestamp&quot; (the &lt;code&gt;-C&lt;/code&gt; filetest) may really be the &quot;creation timestamp&quot; (which it is not in Unix).</source>
          <target state="translated">La &quot;marca de tiempo de cambio de inodo&quot; (la prueba de archivo &lt;code&gt;-C&lt;/code&gt; ) puede ser realmente la &quot;marca de tiempo de creaci&amp;oacute;n&quot; (que no est&amp;aacute; en Unix).</target>
        </trans-unit>
        <trans-unit id="d5dae6e25029009f346d93a94005c0b2df86ea03" translate="yes" xml:space="preserve">
          <source>The &quot;interpreter-based threads&quot; provided by Perl are not the fast, lightweight system for multitasking that one might expect or hope for. Threads are implemented in a way that make them easy to misuse. Few people know how to use them correctly or will be able to provide help.</source>
          <target state="translated">Los &quot;hilos basados en la interpretación&quot; proporcionados por Perl no son el sistema rápido y ligero para la multitarea que uno podría esperar o desear.Los hilos se implementan de una manera que los hace fáciles de usar.Pocas personas saben cómo usarlos correctamente o pueden proporcionar ayuda.</target>
        </trans-unit>
        <trans-unit id="17303b20d10d9ca1d72a771659e0ed0ddf3d30b9" translate="yes" xml:space="preserve">
          <source>The &quot;interpreter-based threads&quot; provided by Perl are not the fast, lightweight system for multitasking that one might expect or hope for. Threads are implemented in a way that makes them easy to misuse. Few people know how to use them correctly or will be able to provide help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611cc4fe5613cabb6ac2b4cb6c84bf4897881a2a" translate="yes" xml:space="preserve">
          <source>The &quot;like&quot; code entry is not always an exact rendition. For example, the smartmatch operator short-circuits whenever possible, but &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; does not. Also, &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in scalar context returns the number of matches, but &lt;code&gt;~~&lt;/code&gt; returns only true or false.</source>
          <target state="translated">La entrada del c&amp;oacute;digo &quot;me gusta&quot; no siempre es una interpretaci&amp;oacute;n exacta. Por ejemplo, el operador de smartmatch cortocircuita siempre que sea posible, pero &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; no. Adem&amp;aacute;s, &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; en contexto escalar devuelve el n&amp;uacute;mero de coincidencias, pero &lt;code&gt;~~&lt;/code&gt; solo devuelve verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="6ea890b70f56a5f9e0d36cf926a8647084d27520" translate="yes" xml:space="preserve">
          <source>The &quot;like&quot; code entry is not always an exact rendition. For example, the smartmatch operator short-circuits whenever possible, but &lt;code&gt;grep&lt;/code&gt; does not. Also, &lt;code&gt;grep&lt;/code&gt; in scalar context returns the number of matches, but &lt;code&gt;~~&lt;/code&gt; returns only true or false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812d0b36924ed8327e26e7bd66db9f34693b1e0d" translate="yes" xml:space="preserve">
          <source>The &quot;locked&quot; attribute is deprecated, and has no effect in 5.10.0 and later. It was used as part of the now-removed &quot;Perl 5.005 threads&quot;.</source>
          <target state="translated">El atributo &quot;bloqueado&quot; está desactualizado,y no tiene efecto en 5.10.0 y posteriores.Se usaba como parte de los ahora eliminados &quot;Perl 5.005 hilos&quot;.</target>
        </trans-unit>
        <trans-unit id="9dcce4d393c04df7e129e843600a4cbb41352ba2" translate="yes" xml:space="preserve">
          <source>The &quot;make test&quot; step runs a Perl Verification Procedure, usually before installation. You might encounter STDERR messages even during a successful run of &quot;make test&quot;. Here is a guide to some of the more commonly seen anomalies:</source>
          <target state="translated">El paso de &quot;hacer la prueba&quot; ejecuta un procedimiento de verificación de Perl,normalmente antes de la instalación.Podrías encontrar mensajes STDERR incluso durante una ejecución exitosa de &quot;hacer la prueba&quot;.Aquí hay una guía de algunas de las anomalías más comunes:</target>
        </trans-unit>
        <trans-unit id="c90503a55170e15efc4d9ae431c0e36ee6a25e33" translate="yes" xml:space="preserve">
          <source>The &quot;maketext&quot; Method</source>
          <target state="translated">El método &quot;maketext&quot;</target>
        </trans-unit>
        <trans-unit id="7968697304f2035aa2639422d611288498d75cab" translate="yes" xml:space="preserve">
          <source>The &quot;mro&quot; namespace provides several utilities for dealing with method resolution order and method caching in general.</source>
          <target state="translated">El espacio de nombres &quot;mro&quot; proporciona varias utilidades para tratar el orden de resolución de los métodos y el almacenamiento en caché de los métodos en general.</target>
        </trans-unit>
        <trans-unit id="71bf414e13a483c3f8866e169ca7ae68644d2c78" translate="yes" xml:space="preserve">
          <source>The &quot;next&quot; pointers of all regops except &lt;code&gt;BRANCH&lt;/code&gt; implement concatenation; a &quot;next&quot; pointer with a &lt;code&gt;BRANCH&lt;/code&gt; on both ends of it is connecting two alternatives. [Here we have one of the subtle syntax dependencies: an individual &lt;code&gt;BRANCH&lt;/code&gt; (as opposed to a collection of them) is never concatenated with anything because of operator precedence.]</source>
          <target state="translated">Los punteros &quot;siguientes&quot; de todas las regops excepto &lt;code&gt;BRANCH&lt;/code&gt; implementan la concatenaci&amp;oacute;n; un puntero &quot;siguiente&quot; con una &lt;code&gt;BRANCH&lt;/code&gt; en ambos extremos conecta dos alternativas. [Aqu&amp;iacute; tenemos una de las dependencias de sintaxis sutiles: una &lt;code&gt;BRANCH&lt;/code&gt; individual (a diferencia de una colecci&amp;oacute;n de ellas) nunca se concatena con nada debido a la precedencia del operador].</target>
        </trans-unit>
        <trans-unit id="7475859558b8ac99b6dbae28949b5ee5991af403" translate="yes" xml:space="preserve">
          <source>The &quot;p&quot; mode differs from &quot;U&quot; only in that it treats &quot;\r\r\n&quot; as a single newline, a quirky feature designed to accommodate legacy applications that occasionally added an extra carriage return before DOS line terminators. The &quot;p&quot; mode will be phased out eventually in favor of the cleaner and more well-established Universal Newlines concept.</source>
          <target state="translated">El modo &quot;p&quot; difiere de la &quot;U&quot; sólo en que trata a &quot;\r\r\n&quot; como una sola línea nueva,una característica peculiar diseñada para acomodar aplicaciones heredadas que ocasionalmente añadían un retorno de carro extra antes de los terminadores de la línea DOS.El modo &quot;p&quot; será eliminado eventualmente a favor del concepto de Nuevas Líneas Universales más limpias y bien establecidas.</target>
        </trans-unit>
        <trans-unit id="21a4e20c8659f7cc84f2dc6e2b2235449667f421" translate="yes" xml:space="preserve">
          <source>The &quot;prototype&quot; attribute is an alternate means of specifying a prototype on a sub. The desired prototype is within the parens.</source>
          <target state="translated">El atributo &quot;prototipo&quot; es un medio alternativo para especificar un prototipo en un submarino.El prototipo deseado se encuentra dentro de los parens.</target>
        </trans-unit>
        <trans-unit id="dd5b998a91e6bf19722acfe03146f25538072352" translate="yes" xml:space="preserve">
          <source>The &quot;quality&quot; of a hash is defined as the total number of comparisons needed to access every element once, relative to the expected number needed for a random hash. The value can go over 100%.</source>
          <target state="translated">La &quot;calidad&quot; de un hash se define como el número total de comparaciones necesarias para acceder a cada elemento una vez,en relación con el número esperado necesario para un hash aleatorio.El valor puede superar el 100%.</target>
        </trans-unit>
        <trans-unit id="0fa71c4992e21ca9d0f8816931658731741f8823" translate="yes" xml:space="preserve">
          <source>The &quot;root&quot; of the namespace (i.e. &quot;main::&quot;) is changed to a different package and code evaluated in the compartment cannot refer to variables outside this namespace, even with run-time glob lookups and other tricks.</source>
          <target state="translated">La &quot;raíz&quot; del espacio de nombres (es decir,&quot;main::&quot;)se cambia por un paquete diferente y el código evaluado en el compartimento no puede referirse a variables fuera de este espacio de nombres,ni siquiera con búsquedas de globos en tiempo de ejecución y otros trucos.</target>
        </trans-unit>
        <trans-unit id="40e9eeb816659a4d78537c8ea14e7c775679daaf" translate="yes" xml:space="preserve">
          <source>The &quot;status value&quot; returned in &lt;code&gt;$?&lt;/code&gt; is synthesized from the actual exit status of the subprocess in a way that approximates POSIX wait(5) semantics, in order to allow Perl programs to portably test for successful completion of subprocesses. The low order 8 bits of &lt;code&gt;$?&lt;/code&gt; are always 0 under VMS, since the termination status of a process may or may not have been generated by an exception.</source>
          <target state="translated">&amp;iquest;El &quot;valor de estado&quot; devuelto en &lt;code&gt;$?&lt;/code&gt; se sintetiza a partir del estado de salida real del subproceso de una manera que se aproxima a la sem&amp;aacute;ntica de espera (5) de POSIX, con el fin de permitir que los programas Perl prueben de manera port&amp;aacute;til la finalizaci&amp;oacute;n exitosa de los subprocesos. &amp;iquest;Los 8 bits de orden inferior de &lt;code&gt;$?&lt;/code&gt; son siempre 0 en VMS, ya que el estado de terminaci&amp;oacute;n de un proceso puede o no haber sido generado por una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9220e93c05c2e58fcb6c44f1b19d591bad6f075c" translate="yes" xml:space="preserve">
          <source>The &quot;unique&quot; attribute is deprecated, and has no effect in 5.10.0 and later. It used to indicate that a single copy of an &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; variable was to be used by all interpreters should the program happen to be running in a multi-interpreter environment.</source>
          <target state="translated">El atributo &quot;&amp;uacute;nico&quot; est&amp;aacute; obsoleto y no tiene ning&amp;uacute;n efecto en 5.10.0 y posteriores. Sol&amp;iacute;a ​​indicar que todos los int&amp;eacute;rpretes deb&amp;iacute;an utilizar una &amp;uacute;nica copia de una variable &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; caso de que el programa se estuviera ejecutando en un entorno de m&amp;uacute;ltiples int&amp;eacute;rpretes.</target>
        </trans-unit>
        <trans-unit id="72e1eabd61e84fec8e9b71e8964b6733954ac85d" translate="yes" xml:space="preserve">
          <source>The &quot;use locale&quot; pragma</source>
          <target state="translated">El pragmatismo del &quot;uso del lugar&quot;</target>
        </trans-unit>
        <trans-unit id="ec6d1363cbbe06a4225f4f4c8cb504676b9d9ab8" translate="yes" xml:space="preserve">
          <source>The &quot;version&quot; key has a reference to an AV as its value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127c26381686cdc6cb6db8e06a75ac1b05a13d0e" translate="yes" xml:space="preserve">
          <source>The #endif and #else cannot portably have anything non-comment after them. If you want to document what is going (which is a good idea especially if the branches are long), use (C) comments:</source>
          <target state="translated">El #endif y el #else no pueden tener nada no comentado después de ellos.Si quieres documentar lo que va (lo cual es una buena idea especialmente si las ramas son largas),usa los comentarios (C):</target>
        </trans-unit>
        <trans-unit id="6d394482dea20b84087d97ed59f1a7ab0353698f" translate="yes" xml:space="preserve">
          <source>The $algorithm is a string like &quot;MD2&quot;, &quot;MD5&quot;, &quot;SHA-1&quot;, &quot;SHA-512&quot;. Additional arguments are passed to the constructor for the implementation of the given algorithm.</source>
          <target state="translated">El $algoritmo es una cadena como &quot;MD2&quot;,&quot;MD5&quot;,&quot;SHA-1&quot;,&quot;SHA-512&quot;.Se pasan argumentos adicionales al constructor para la implementación del algoritmo dado.</target>
        </trans-unit>
        <trans-unit id="060c7393d1a230b15152f168cb6702d886a2c8e8" translate="yes" xml:space="preserve">
          <source>The $always_copy parameter which when true causes files to be updated regardless as to whether they have changed, if it is defined but false then copies are made only if the files have changed, if it is undefined then the value of the environment variable EU_INSTALL_ALWAYS_COPY is used as default.</source>
          <target state="translated">El parámetro $always_copy que cuando es true hace que los archivos se actualicen independientemente de si han cambiado,si está definido pero es falso entonces se hacen copias sólo si los archivos han cambiado,si no está definido entonces se utiliza por defecto el valor de la variable de entorno EU_INSTALL_ALWAYS.</target>
        </trans-unit>
        <trans-unit id="2195889fc63370a441ff8bf1c8a9db960470ff14" translate="yes" xml:space="preserve">
          <source>The $buffer should be a Storable image or the first few bytes of it. If $buffer starts with a Storable header, then a hash describing the image is returned, otherwise &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">El $ buffer debe ser una imagen almacenable o los primeros bytes de la misma. Si $ buffer comienza con un encabezado &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; se devuelve un hash que describe la imagen; de lo contrario, se devuelve undef .</target>
        </trans-unit>
        <trans-unit id="78cacc3a4b41df98d6d490128b52baa4b5d2d0fc" translate="yes" xml:space="preserve">
          <source>The $buffer should be a Storable image or the first few bytes of it. If $buffer starts with a Storable header, then a hash describing the image is returned, otherwise &lt;code&gt;undef&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90557aa2dce112e348d655279a7a2af9b8d9198" translate="yes" xml:space="preserve">
          <source>The $chld_in filehandle will have autoflush turned on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f3f95232308dda6cf28aa29e85f72c7757c618" translate="yes" xml:space="preserve">
          <source>The $data provided as argument are appended to the message we calculate the digest for. The return value is the $md5 object itself.</source>
          <target state="translated">Los $datos proporcionados como argumento se añaden al mensaje para el que calculamos el resumen.El valor de retorno es el propio objeto $md5.</target>
        </trans-unit>
        <trans-unit id="0b852897867aa68fb0b59cef6457c36880f5fe89" translate="yes" xml:space="preserve">
          <source>The $f that has &quot;bar&quot; added to it three times should be a new &lt;code&gt;$f&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $f&lt;/code&gt; should create a new lexical variable each time through the loop. The expected output is:</source>
          <target state="translated">La $ f que tiene &quot;barra&quot; agregada tres veces deber&amp;iacute;a ser una nueva &lt;code&gt;$f&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $f&lt;/code&gt; deber&amp;iacute;a crear una nueva variable l&amp;eacute;xica cada vez que pasa por el ciclo. El resultado esperado es:</target>
        </trans-unit>
        <trans-unit id="9804e7c51be3b218136a0732d780cc554d28fa80" translate="yes" xml:space="preserve">
          <source>The $f that has &quot;bar&quot; added to it three times should be a new &lt;code&gt;$f&lt;/code&gt;&lt;code&gt;my $f&lt;/code&gt; should create a new lexical variable each time through the loop. The expected output is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1718e632a613e4c3f044b1d3a129d6229eab251a" translate="yes" xml:space="preserve">
          <source>The $filename parameter is used by Perl to identify the source file for the function if required by die(), caller() or the debugger. If $filename is not defined then &quot;DynaLoader&quot; will be used.</source>
          <target state="translated">El parámetro $filename es utilizado por Perl para identificar el archivo fuente de la función si es requerido por die(),caller()o el depurador.Si $nombre del archivo no está definido entonces se usará &quot;DynaLoader&quot;.</target>
        </trans-unit>
        <trans-unit id="84c0a13d8949255c1b3abd5830e5bb4ca9af26b0" translate="yes" xml:space="preserve">
          <source>The $flags argument to alters dl_load_file behaviour. Assigned bits:</source>
          <target state="translated">El argumento $flags para alterar el comportamiento del archivo dl_load_file.Bits asignados:</target>
        </trans-unit>
        <trans-unit id="533efbe36456ad5f0b2eb4a7940fb956d6dc8359" translate="yes" xml:space="preserve">
          <source>The $host argument can be omitted when specifying the &lt;code&gt;host&lt;/code&gt; option to new().</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
