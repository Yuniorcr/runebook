<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="453e08045c54cb8be51989088de3dde3aad22542" translate="yes" xml:space="preserve">
          <source>YAML, &lt;a href=&quot;http://www.yaml.org/&quot;&gt;http://www.yaml.org/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fff039853f5c2bbb8a28d056b579c7dcb7d137f" translate="yes" xml:space="preserve">
          <source>YES</source>
          <target state="translated">YES</target>
        </trans-unit>
        <trans-unit id="bf4ca579becca81a75bf09eee1a917765b24f975" translate="yes" xml:space="preserve">
          <source>YMMV.</source>
          <target state="translated">YMMV.</target>
        </trans-unit>
        <trans-unit id="f4577d4c77ab9c132acbb835cae3c75d2c81ffab" translate="yes" xml:space="preserve">
          <source>YOU HAVEN'T DISABLED SET-ID SCRIPTS IN THE KERNEL YET!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8fc610a3168e82e07390203ce40d7382c7da6f" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DDThh:mm:ss</source>
          <target state="translated">YYYY-MM-DDThh:mm:ss</target>
        </trans-unit>
        <trans-unit id="76ac22fb38468218ad6552d9043d5bb2c7920d48" translate="yes" xml:space="preserve">
          <source>Year Value Interpretation</source>
          <target state="translated">Año Valor Interpretación</target>
        </trans-unit>
        <trans-unit id="44f6289f7e3326b30824a187cdb204e4dc7264b2" translate="yes" xml:space="preserve">
          <source>Years greater than 999 are interpreted as being the actual year, rather than the offset from 1900. Thus, 1964 would indicate the year Martin Luther King won the Nobel prize, not the year 3864.</source>
          <target state="translated">Los años mayores de 999 se interpretan como el año real,en lugar de la compensación de 1900.Así,1964 indicaría el año en que Martin Luther King ganó el premio Nobel,no el año 3864.</target>
        </trans-unit>
        <trans-unit id="c9ec20e90ee8369d4a4738a1355fc718ca45a57e" translate="yes" xml:space="preserve">
          <source>Years in the range 0..99 are interpreted as shorthand for years in the rolling &quot;current century,&quot; defined as 50 years on either side of the current year. Thus, today, in 1999, 0 would refer to 2000, and 45 to 2045, but 55 would refer to 1955. Twenty years from now, 55 would instead refer to 2055. This is messy, but matches the way people currently think about two digit dates. Whenever possible, use an absolute four digit year instead.</source>
          <target state="translated">Los años en el rango 0..99 se interpretan como una abreviatura de los años en el &quot;siglo actual&quot; rodante,definido como 50 años a cada lado del año actual.Así,hoy en día,en 1999,0 se referiría a 2000,y 45 a 2045,pero 55 se referiría a 1955.Dentro de 20 años,55 se referiría al 2055.Esto es complicado,pero coincide con la forma en que la gente piensa actualmente sobre las fechas de dos dígitos.Siempre que sea posible,usa un año absoluto de cuatro dígitos en su lugar.</target>
        </trans-unit>
        <trans-unit id="862a9bbc8aa08db48d5ef905c8dc85be457e6ea8" translate="yes" xml:space="preserve">
          <source>Years in the range 100..999 are interpreted as offset from 1900, so that 112 indicates 2012. This rule also applies to years less than zero (but see note below regarding date range).</source>
          <target state="translated">Los años en el rango 100..999 se interpretan como compensados a partir de 1900,de modo que 112 indica 2012.Esta regla se aplica también a los años inferiores a cero (pero véase la nota que figura a continuación en relación con el intervalo de fechas).</target>
        </trans-unit>
        <trans-unit id="dfc439a506f8ca9ae872d5d02c2ad4c82b034c13" translate="yes" xml:space="preserve">
          <source>Yes it is, see previous answer. Since &lt;code&gt;Compress::Zlib&lt;/code&gt; and therefore &lt;code&gt;IO::Zlib&lt;/code&gt; doesn't support &lt;code&gt;&lt;a href=&quot;../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; on their filehandles, there is little choice but to read the archive into memory. This is ok if you want to do in-memory manipulation of the archive.</source>
          <target state="translated">S&amp;iacute; lo es, vea la respuesta anterior. Dado que &lt;code&gt;Compress::Zlib&lt;/code&gt; y, por lo tanto, &lt;code&gt;IO::Zlib&lt;/code&gt; no admiten la &lt;code&gt;&lt;a href=&quot;../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; en sus identificadores de archivos, no hay m&amp;aacute;s remedio que leer el archivo en la memoria. Esto est&amp;aacute; bien si desea realizar una manipulaci&amp;oacute;n en memoria del archivo.</target>
        </trans-unit>
        <trans-unit id="4a483b69465fec8d9ad0abf1cb110a3cd5a4d0a4" translate="yes" xml:space="preserve">
          <source>Yes it is, see previous answer. Since &lt;code&gt;Compress::Zlib&lt;/code&gt; and therefore &lt;code&gt;IO::Zlib&lt;/code&gt; doesn't support &lt;code&gt;seek&lt;/code&gt; on their filehandles, there is little choice but to read the archive into memory. This is ok if you want to do in-memory manipulation of the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb5099459bfa43931dd4b78a628e1d113168a69" translate="yes" xml:space="preserve">
          <source>Yes it is. It's pure perl, so it's a lot slower then your &lt;code&gt;/bin/tar&lt;/code&gt; However, it's very portable. If speed is an issue, consider using &lt;code&gt;/bin/tar&lt;/code&gt; instead.</source>
          <target state="translated">S&amp;iacute; lo es. Es perl puro, por lo que es mucho m&amp;aacute;s lento que su &lt;code&gt;/bin/tar&lt;/code&gt; . Sin embargo, es muy port&amp;aacute;til. Si la velocidad es un problema, considere usar &lt;code&gt;/bin/tar&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="bcbbf7da5377bd36deaae3d4c290fed0db7777c9" translate="yes" xml:space="preserve">
          <source>Yes, both the &lt;code&gt;IO-Compress-Zip&lt;/code&gt; and &lt;code&gt;IO-Uncompress-Unzip&lt;/code&gt; modules support the zip feature called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4107dbe8a030ec286ba38d4f763957128d667542" translate="yes" xml:space="preserve">
          <source>Yes, it does</source>
          <target state="translated">Sí,lo hace.</target>
        </trans-unit>
        <trans-unit id="3678471c058284ba4000bf6331c346c6bbd02a28" translate="yes" xml:space="preserve">
          <source>Yes, that's a lot of expansion.</source>
          <target state="translated">Sí,eso es mucha expansión.</target>
        </trans-unit>
        <trans-unit id="eb5a8cd62389870da5aba481f01f1a18a4a6e511" translate="yes" xml:space="preserve">
          <source>Yes, there's a lot of that :-) But more precisely, in UNIX systems there's a utility called &lt;code&gt;file&lt;/code&gt; , which recognizes data files based on their contents (usually their first few bytes). For this to work, a certain file called</source>
          <target state="translated">S&amp;iacute;, hay mucho de eso :-) Pero m&amp;aacute;s precisamente, en los sistemas UNIX hay una utilidad llamada &lt;code&gt;file&lt;/code&gt; , que reconoce los archivos de datos en funci&amp;oacute;n de su contenido (generalmente sus primeros bytes). Para que esto funcione, un determinado archivo llamado</target>
        </trans-unit>
        <trans-unit id="f71f9d886920a4f49da8093935995672de9199c3" translate="yes" xml:space="preserve">
          <source>Yes, there's a lot of that :-) But more precisely, in UNIX systems there's a utility called &lt;code&gt;file&lt;/code&gt;, which recognizes data files based on their contents (usually their first few bytes). For this to work, a certain file called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032ab970df677757a74b1c2b5fdbae010210746c" translate="yes" xml:space="preserve">
          <source>Yes, there's a mistake in the test suite. What! Me, contrived?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1e472e45c46619f7f9549ce98213f0173da937" translate="yes" xml:space="preserve">
          <source>Yes, you can do this by either using the &lt;code&gt;-T&lt;/code&gt; option, or by invoking the program as &lt;code&gt;perlthanks&lt;/code&gt; . Thank-you notes are good. It makes people smile.</source>
          <target state="translated">S&amp;iacute;, puede hacer esto usando la opci&amp;oacute;n &lt;code&gt;-T&lt;/code&gt; , o invocando el programa como &lt;code&gt;perlthanks&lt;/code&gt; . Las notas de agradecimiento son buenas. Hace sonre&amp;iacute;r a la gente.</target>
        </trans-unit>
        <trans-unit id="8987958587b6289e3623984d6459696a8ad818f9" translate="yes" xml:space="preserve">
          <source>Yes, you can do this by either using the &lt;code&gt;-T&lt;/code&gt; option, or by invoking the program as &lt;code&gt;perlthanks&lt;/code&gt;. Thank-you notes are good. It makes people smile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8d0f90fcceba5d3649946cef16ef6f0de57be0" translate="yes" xml:space="preserve">
          <source>Yes, you can! If your sources are UTF-8 encoded, you can indicate that with the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; pragma.</source>
          <target state="translated">&amp;iexcl;S&amp;iacute; tu puedes! Si sus fuentes son codificaci&amp;oacute;n UTF-8, puede indicar que con el &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; utf8&lt;/code&gt; pragma.</target>
        </trans-unit>
        <trans-unit id="77a1a43bdaae65a00429084f6cd8a3dc8163734c" translate="yes" xml:space="preserve">
          <source>Yes, you can! If your sources are UTF-8 encoded, you can indicate that with the &lt;code&gt;use utf8&lt;/code&gt; pragma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3c0b60626749e4fb04200f5ac37da9c3ba6f91" translate="yes" xml:space="preserve">
          <source>Yes, you could probably do the same thing with code like $token-&amp;gt;isa('Pod::Simple::PullParserEndToken'), but that's not so pretty as using just $token-&amp;gt;type, or even the following shortcuts:</source>
          <target state="translated">S&amp;iacute;, probablemente podr&amp;iacute;a hacer lo mismo con un c&amp;oacute;digo como $ token-&amp;gt; isa ('Pod :: Simple :: PullParserEndToken'), pero eso no es tan bonito como usar solo $ token-&amp;gt; type, o incluso los siguientes atajos:</target>
        </trans-unit>
        <trans-unit id="9ba10bd10462c10515a891999d5f144a0ef8db84" translate="yes" xml:space="preserve">
          <source>Yes. If you are building a web site with any level of interactivity (forms / users / databases), you will want to use a framework to make handling requests and responses easier.</source>
          <target state="translated">Sí.Si está construyendo un sitio web con cualquier nivel de interactividad (formularios/usuarios/bases de datos),querrá utilizar un marco para facilitar la tramitación de las solicitudes y las respuestas.</target>
        </trans-unit>
        <trans-unit id="4131deed69500e1ce76a1aa4746c5be5d04540cb" translate="yes" xml:space="preserve">
          <source>Yes. Perl's garbage collection system takes care of this so everything works out right.</source>
          <target state="translated">Sí.El sistema de recolección de basura de Perl se encarga de esto para que todo salga bien.</target>
        </trans-unit>
        <trans-unit id="3a7fae4176564291917eb6c0f952942b7ae63ec5" translate="yes" xml:space="preserve">
          <source>Yes. Read &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for more information. Some examples follow. (These assume standard Unix shell quoting rules.)</source>
          <target state="translated">Si. Lea &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n. A continuaci&amp;oacute;n se presentan algunos ejemplos. (Estos asumen las reglas de cotizaci&amp;oacute;n est&amp;aacute;ndar de shell de Unix)</target>
        </trans-unit>
        <trans-unit id="64a64c9d49bc7ff568ef5c62aefe6945eee0a81a" translate="yes" xml:space="preserve">
          <source>Yes. Zip64 allows this. See previous question.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85739d75a309637ea84dea150d48798fe5f385f6" translate="yes" xml:space="preserve">
          <source>Yet Another Compiler Compiler. A parser generator without which Perl probably would not have existed. See the file</source>
          <target state="translated">Otro compilador de compilación.Un generador de análisis sin el cual Perl probablemente no habría existido.Vea el archivo</target>
        </trans-unit>
        <trans-unit id="7fafe5e36aa3122413d32c6d4c8b4284bb245038" translate="yes" xml:space="preserve">
          <source>Yet another capturing group numbering technique (also as from Perl 5.10) deals with the problem of referring to groups within a set of alternatives. Consider a pattern for matching a time of the day, civil or military style:</source>
          <target state="translated">Otra técnica de numeración de grupos de captura (también a partir de Perl 5.10)se ocupa del problema de referirse a los grupos dentro de un conjunto de alternativas.Considere un patrón para hacer coincidir una hora del día,estilo civil o militar:</target>
        </trans-unit>
        <trans-unit id="a23e788a3e5975e13dc401fc7dc400a7d94469f5" translate="yes" xml:space="preserve">
          <source>Yet another framework for writing test scripts</source>
          <target state="translated">Otro marco más para escribir guiones de prueba</target>
        </trans-unit>
        <trans-unit id="1f545787fad8ec88f6418a5e7cfe487632178eef" translate="yes" xml:space="preserve">
          <source>Yet another pseudo-class that &lt;code&gt;NEXT&lt;/code&gt; provides is &lt;code&gt;EVERY&lt;/code&gt;. Its behaviour is considerably simpler than that of the &lt;code&gt;NEXT&lt;/code&gt; family. A call to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d7418e5885441f0de4ccbd54d601d8993cfb34" translate="yes" xml:space="preserve">
          <source>Yet another pseudo-class that NEXT.pm provides is &lt;code&gt;EVERY&lt;/code&gt; . Its behaviour is considerably simpler than that of the &lt;code&gt;NEXT&lt;/code&gt; family. A call to:</source>
          <target state="translated">Otra pseudoclase que proporciona NEXT.pm es &lt;code&gt;EVERY&lt;/code&gt; . Su comportamiento es considerablemente m&amp;aacute;s sencillo que el de la familia &lt;code&gt;NEXT&lt;/code&gt; . Una llamada a:</target>
        </trans-unit>
        <trans-unit id="807fa18eacfa8333a4615b7233d28577520ce46b" translate="yes" xml:space="preserve">
          <source>Yet another way is to assign to a &lt;code&gt;foreach&lt;/code&gt; loop</source>
          <target state="translated">Otra forma m&amp;aacute;s es asignar a un bucle &lt;code&gt;foreach&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb6a80ccd3cd48516fa10f2b5e43ec6135ec9451" translate="yes" xml:space="preserve">
          <source>Yet another way would be to use the Devel::Peek module:</source>
          <target state="translated">Otra forma sería usar el módulo Devel::Peek:</target>
        </trans-unit>
        <trans-unit id="8dd7850c540f0b2c7dd564faf5b435a82d533987" translate="yes" xml:space="preserve">
          <source>Yields the widest unsigned integer type on the platform, currently either &lt;code&gt;U32&lt;/code&gt; or &lt;code&gt;64&lt;/code&gt;. This can be used in declarations such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c970e3f1e790a2a4cd28b40401902501b9bc2d74" translate="yes" xml:space="preserve">
          <source>Yields:</source>
          <target state="translated">Yields:</target>
        </trans-unit>
        <trans-unit id="f551936e2c614f3a2dff9203d64b57c373086792" translate="yes" xml:space="preserve">
          <source>You &lt;b&gt;do not&lt;/b&gt; call &lt;code&gt;setlogsock&lt;/code&gt; .</source>
          <target state="translated">Usted &lt;b&gt;no&lt;/b&gt; llama &lt;code&gt;setlogsock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c41e00d12c2bf30eb5c57363d593eb5f296a4201" translate="yes" xml:space="preserve">
          <source>You &lt;b&gt;do not&lt;/b&gt; call &lt;code&gt;setlogsock&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83525859b43ad2ba983b59bc741a630d369a604" translate="yes" xml:space="preserve">
          <source>You &lt;b&gt;must not&lt;/b&gt; attempt to install by hand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc6962b12f722ff929475c965699bd91420b623" translate="yes" xml:space="preserve">
          <source>You &lt;b&gt;must&lt;/b&gt; convert characters to UVs using the above functions if you're ever in a situation where you have to match UTF-8 and non-UTF-8 characters. You may not skip over UTF-8 characters in this case. If you do this, you'll lose the ability to match hi-bit non-UTF-8 characters; for instance, if your UTF-8 string contains &lt;code&gt;v196.172&lt;/code&gt; , and you skip that character, you can never match a &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(200)&lt;/a&gt;&lt;/code&gt; in a non-UTF-8 string. So don't do that!</source>
          <target state="translated">Usted &lt;b&gt;debe&lt;/b&gt; convertir los caracteres a los UV utilizando las funciones anteriores si alguna vez en una situaci&amp;oacute;n en la que tiene que coincidir con UTF-8 y no UTF-8 caracteres. En este caso, no puede omitir los caracteres UTF-8. Si hace esto, perder&amp;aacute; la capacidad de hacer coincidir caracteres de alta bits que no sean UTF-8; por ejemplo, si su cadena UTF-8 contiene &lt;code&gt;v196.172&lt;/code&gt; y omite ese car&amp;aacute;cter, nunca podr&amp;aacute; hacer coincidir un &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(200)&lt;/a&gt;&lt;/code&gt; en una cadena que no sea UTF-8. &amp;iexcl;As&amp;iacute; que no hagas eso!</target>
        </trans-unit>
        <trans-unit id="fa9dba3c584a1276adf1e71be9d8031a3210c272" translate="yes" xml:space="preserve">
          <source>You &lt;b&gt;must&lt;/b&gt; convert characters to UVs using the above functions if you're ever in a situation where you have to match UTF-8 and non-UTF-8 characters. You may not skip over UTF-8 characters in this case. If you do this, you'll lose the ability to match hi-bit non-UTF-8 characters; for instance, if your UTF-8 string contains &lt;code&gt;v196.172&lt;/code&gt;, and you skip that character, you can never match a &lt;code&gt;chr(200)&lt;/code&gt; in a non-UTF-8 string. So don't do that!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f6ab55499a431ab963225e1b323e598c043cac" translate="yes" xml:space="preserve">
          <source>You &lt;b&gt;must&lt;/b&gt; have the BFD (-lbfd) library installed, otherwise &lt;code&gt;perl&lt;/code&gt; will fail to link. The BFD is usually distributed as part of the GNU binutils.</source>
          <target state="translated">Usted &lt;b&gt;debe&lt;/b&gt; tener la biblioteca de BFD (-lbfd) instalado, de lo contrario &lt;code&gt;perl&lt;/code&gt; dejar&amp;aacute; de enlace. El BFD generalmente se distribuye como parte de las binutils de GNU.</target>
        </trans-unit>
        <trans-unit id="b5fb57ccedc3fdf63890d16c6dbd3e60731ff70f" translate="yes" xml:space="preserve">
          <source>You CAN say</source>
          <target state="translated">Puedes decir</target>
        </trans-unit>
        <trans-unit id="53a5cd5fed7f629c72dba4cfdfde9a745c8113d5" translate="yes" xml:space="preserve">
          <source>You MUST NOT pass context objects around</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9893e3bf74f00c1d618d88219ad526fbac0c0c29" translate="yes" xml:space="preserve">
          <source>You MUST NOT store or cache a context for later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a142a3f1e08b559ac377684a245517410ece7ce4" translate="yes" xml:space="preserve">
          <source>You MUST always release the context when done with it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91a3f4c8d175f6cccdbd1ebd40641bce1aa24ca" translate="yes" xml:space="preserve">
          <source>You SHOULD obtain your context as soon as possible in a given tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ab9d853c38812e284656a7bf6f62a6214856cd" translate="yes" xml:space="preserve">
          <source>You already learned that a &lt;b&gt;method&lt;/b&gt; is a subroutine that operates on an object. You can think of a method as the things that an object can</source>
          <target state="translated">Ya aprendiste que un &lt;b&gt;m&amp;eacute;todo&lt;/b&gt; es una subrutina que opera sobre un objeto. Puedes pensar en un m&amp;eacute;todo como las cosas que un objeto puede</target>
        </trans-unit>
        <trans-unit id="9a0c2a8aac855d59d1e419df17c0d8362fab4ef6" translate="yes" xml:space="preserve">
          <source>You also cannot exit out of the sort block or subroutine using any of the loop control operators described in &lt;a href=&quot;../perlsyn&quot;&gt;perlsyn&lt;/a&gt; or with &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tampoco puede salir del bloque o subrutina de clasificaci&amp;oacute;n utilizando cualquiera de los operadores de control de bucle descritos en &lt;a href=&quot;../perlsyn&quot;&gt;perlsyn&lt;/a&gt; o con &lt;code&gt;&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f67f30786418f2d13fcf93e360206e73fbe2ba5c" translate="yes" xml:space="preserve">
          <source>You also cannot exit out of the sort block or subroutine using any of the loop control operators described in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; or with &lt;a href=&quot;#goto-LABEL&quot;&gt;&lt;code&gt;goto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce8f481cd5c5e068e4367b0b286efd66e3e8b5e" translate="yes" xml:space="preserve">
          <source>You also cannot exit out of the sort block or subroutine using any of the loop control operators described in &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; or with &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tampoco puede salir del bloque o subrutina de clasificaci&amp;oacute;n utilizando cualquiera de los operadores de control de bucle descritos en &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; o con &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6462e3c6fa18441789982aade2cc057d4a5754fa" translate="yes" xml:space="preserve">
          <source>You also don't have to use push(). You could just make a direct assignment if you knew where you wanted to put it:</source>
          <target state="translated">Tampoco tienes que usar el push().Podrías hacer una asignación directa si supieras dónde quieres ponerla:</target>
        </trans-unit>
        <trans-unit id="762d8de62e5184e1ddd3f7df62b51251838a45ad" translate="yes" xml:space="preserve">
          <source>You also have to be careful about context. You can assign an array to a scalar to get the number of elements in the array. This only works for arrays, though:</source>
          <target state="translated">También hay que tener cuidado con el contexto.Puedes asignar una matriz a un escalar para obtener el número de elementos de la matriz.Sin embargo,esto sólo funciona para las matrices:</target>
        </trans-unit>
        <trans-unit id="c94e331eac1a6006813ffea35d4a89a5abaa1704" translate="yes" xml:space="preserve">
          <source>You also need dmake or gmake. See &lt;a href=&quot;#Make&quot;&gt;&quot;Make&quot;&lt;/a&gt; above on how to get it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9900e6006f63d330e774e6c340305cdfb9e9fa2" translate="yes" xml:space="preserve">
          <source>You also need dmake. See &lt;a href=&quot;#Make&quot;&gt;Make&lt;/a&gt; above on how to get it.</source>
          <target state="translated">Tambi&amp;eacute;n necesitas dmake. Vea &lt;a href=&quot;#Make&quot;&gt;Make&lt;/a&gt; arriba sobre c&amp;oacute;mo obtenerlo.</target>
        </trans-unit>
        <trans-unit id="bae77dd846c87a6c6a294ef10cab8c218809dda8" translate="yes" xml:space="preserve">
          <source>You also need to take care with modules that enable warnings for you. A common example being Moose. In this example, warnings for the 'smartmatch' feature are first turned on by the warnings pragma, off by the experimental pragma and back on again by the Moose module (fix is to switch the last two lines):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f9457dec1ff1c62632c87a4b529a8a11409acd" translate="yes" xml:space="preserve">
          <source>You are &lt;b&gt;strongly&lt;/b&gt; encouraged to use these subs in any new code which uses this module. It will almost certainly make your code's behavior less surprising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4cae9e1d17ccae297619ff7a90fc58163adef4" translate="yes" xml:space="preserve">
          <source>You are allowed to use underscores (underbars) in numeric literals between digits for legibility (but not multiple underscores in a row: &lt;code&gt;23__500&lt;/code&gt; is not legal; &lt;code&gt;23_500&lt;/code&gt; is). You could, for example, group binary digits by threes (as for a Unix-style mode argument such as 0b110_100_100) or by fours (to represent nibbles, as in 0b1010_0110) or in other groups.</source>
          <target state="translated">Se le permite usar guiones bajos (subrayados) en literales num&amp;eacute;ricos entre d&amp;iacute;gitos para la legibilidad (pero no varios guiones bajos seguidos: &lt;code&gt;23__500&lt;/code&gt; no es legal; &lt;code&gt;23_500&lt;/code&gt; lo es). Puede, por ejemplo, agrupar d&amp;iacute;gitos binarios de tres en tres (como para un argumento de modo de estilo Unix como 0b110_100_100) o de cuatro (para representar nibbles, como en 0b1010_0110) o en otros grupos.</target>
        </trans-unit>
        <trans-unit id="e9086be8aa3acbf107ed69aa30ed1efd2e29806d" translate="yes" xml:space="preserve">
          <source>You are chdir()'d to &lt;code&gt;$File::Find::dir&lt;/code&gt; when the function is called, unless &lt;code&gt;no_chdir&lt;/code&gt; was specified. Note that when changing to directories is in effect the root directory (</source>
          <target state="translated">Usted es chdir () 'd para &lt;code&gt;$File::Find::dir&lt;/code&gt; cuando se llama a la funci&amp;oacute;n, a menos que &lt;code&gt;no_chdir&lt;/code&gt; se haya especificado no_chdir . Tenga en cuenta que cuando se cambia a directorios, el directorio ra&amp;iacute;z (</target>
        </trans-unit>
        <trans-unit id="3b7c887092493d390ff632279a2e09dfaf7f8868" translate="yes" xml:space="preserve">
          <source>You are chdir()'d to &lt;code&gt;$File::Find::dir&lt;/code&gt; when the function is called, unless &lt;code&gt;no_chdir&lt;/code&gt; was specified. Note that when changing to directories is in effect, the root directory (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765a24f0e7b225890131f993a03189d4db8249a5" translate="yes" xml:space="preserve">
          <source>You are either using a copy of zlib that is older than version 1.2.0 or you want your application code to be able to run with as many different versions of zlib as possible.</source>
          <target state="translated">O bien está usando una copia de zlib que es más antigua que la versión 1.2.0 o quiere que su código de aplicación sea capaz de funcionar con tantas versiones diferentes de zlib como sea posible.</target>
        </trans-unit>
        <trans-unit id="a13d801950c0dc8ed9906d27d14a9952af5a263a" translate="yes" xml:space="preserve">
          <source>You are encouraged to participate in the discussion and advocate for your patch. Sometimes your patch may get lost in the shuffle. It's appropriate to send a reminder email to p5p if no action has been taken in a month. Please remember that the Perl 5 developers are all volunteers, and be polite.</source>
          <target state="translated">Se le anima a participar en la discusión y a defender su parche.A veces tu parche puede perderse en la confusión.Es apropiado enviar un correo electrónico de recordatorio a p5p si no se ha tomado ninguna medida en un mes.Por favor,recuerden que los desarrolladores de Perl 5 son todos voluntarios,y sean educados.</target>
        </trans-unit>
        <trans-unit id="719d41b23df4f3bd674c48a03b68b419d4539869" translate="yes" xml:space="preserve">
          <source>You are encouraged to use &lt;code&gt;is()&lt;/code&gt; and &lt;code&gt;isnt()&lt;/code&gt; over &lt;code&gt;ok()&lt;/code&gt; where possible, however do not be tempted to use them to find out if something is true or false!</source>
          <target state="translated">Se le anima a utilizar &lt;code&gt;is()&lt;/code&gt; y &lt;code&gt;isnt()&lt;/code&gt; sobre &lt;code&gt;ok()&lt;/code&gt; siempre que sea posible, sin embargo, no se sienta tentado a utilizarlos para averiguar si algo es verdadero o falso.</target>
        </trans-unit>
        <trans-unit id="5f7051dcae7048dda5b89cea1569b5b5dced0666" translate="yes" xml:space="preserve">
          <source>You are encouraged to use the explicitly quoted form if you wish to use an empty line as the terminator of the here-document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7231b46f1cb348d100d3ac2d2fb73b6bf57d8066" translate="yes" xml:space="preserve">
          <source>You are guaranteed that &lt;code&gt;$dirs . $filename . $suffix&lt;/code&gt; will denote the same location as the original $path.</source>
          <target state="translated">Tiene garantizado que &lt;code&gt;$dirs . $filename . $suffix&lt;/code&gt; indicar&amp;aacute; la misma ubicaci&amp;oacute;n que la ruta $ original.</target>
        </trans-unit>
        <trans-unit id="845992c360c01c1fffb9e8ef6310e8cc47a34923" translate="yes" xml:space="preserve">
          <source>You are not supposed to modify arrays while they are being iterated over. For speed and efficiency reasons, Perl internally does not do full reference-counting of iterated items, hence deleting such an item in the middle of an iteration causes Perl to see a freed value.</source>
          <target state="translated">Se supone que no debes modificar los conjuntos mientras se están iterando.Por razones de velocidad y eficiencia,Perl internamente no hace un recuento de referencia completo de los elementos iterados,por lo que borrar un elemento de este tipo en medio de una iteración hace que Perl vea un valor liberado.</target>
        </trans-unit>
        <trans-unit id="c4250931e7c7965b87b322df0e377d3c209e4074" translate="yes" xml:space="preserve">
          <source>You are recommended to change your code to set &lt;code&gt;$/&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; explicitly if you wish to slurp the file. In future versions of Perl assigning a reference to will throw a fatal error.</source>
          <target state="translated">Se recomienda cambiar su c&amp;oacute;digo para establecer &lt;code&gt;$/&lt;/code&gt; como &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;citamente si desea sorber el archivo. En futuras versiones de Perl, asignar una referencia arrojar&amp;aacute; un error fatal.</target>
        </trans-unit>
        <trans-unit id="25b41e2d5bdfaa0dfc36f2b04421c00c9e912434" translate="yes" xml:space="preserve">
          <source>You are recommended to change your code to set &lt;code&gt;$/&lt;/code&gt; to &lt;code&gt;undef&lt;/code&gt; explicitly if you wish to slurp the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d012b1e71664ae83bcc78214d293fa6e2c91aff" translate="yes" xml:space="preserve">
          <source>You are recommended to change your code to set &lt;code&gt;$/&lt;/code&gt; to &lt;code&gt;undef&lt;/code&gt; explicitly if you wish to slurp the file. As of Perl 5.28 assigning &lt;code&gt;$/&lt;/code&gt; to a reference to an integer which isn't positive is a fatal error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65f3a3a78dc9835626ba2ec61976c50a4907da1" translate="yes" xml:space="preserve">
          <source>You are responsible for &lt;code&gt;SvREFCNT_inc()&lt;/code&gt; on the return value if you plan to store it anywhere semi-permanently (otherwise it might be deleted out from under you the next time the cache is invalidated).</source>
          <target state="translated">Usted es responsable de &lt;code&gt;SvREFCNT_inc()&lt;/code&gt; en el valor de retorno si planea almacenarlo en cualquier lugar de forma semipermanente (de lo contrario, podr&amp;iacute;a eliminarse debajo de usted la pr&amp;oacute;xima vez que se invalide la cach&amp;eacute;).</target>
        </trans-unit>
        <trans-unit id="d2b17aed1d92752587b50f28c3736df1d3cdfde7" translate="yes" xml:space="preserve">
          <source>You are responsible for setting the decoding layers on &lt;code&gt;$handle&lt;/code&gt; if required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda3d08b1d18c1ab40c3862a395af18d46e5f5cf" translate="yes" xml:space="preserve">
          <source>You are strongly discouraged from using this function directly. It is used by various core modules, like &lt;code&gt;Hash::Util&lt;/code&gt;, and the &lt;code&gt;constant&lt;/code&gt; pragma to implement higher-level behavior which should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e416f1d8fe7e351baa8b0e70e6dc37f69f6f41" translate="yes" xml:space="preserve">
          <source>You are strongly encouraged to implement methods below, at least either encode() or decode().</source>
          <target state="translated">Se le recomienda encarecidamente que implemente los métodos que se indican a continuación,por lo menos codificar()o decodificar().</target>
        </trans-unit>
        <trans-unit id="ff134e38e289cfa6f5f3d471d7e0e0fabcbe8c66" translate="yes" xml:space="preserve">
          <source>You are strongly encouraged to migrate any existing threaded code to the new model (i.e., use the &lt;code&gt;threads&lt;/code&gt; and &lt;code&gt;threads::shared&lt;/code&gt; modules) as soon as possible.</source>
          <target state="translated">Se le recomienda encarecidamente que migre cualquier c&amp;oacute;digo de subprocesos existente al nuevo modelo (es decir, utilice los &lt;code&gt;threads&lt;/code&gt; y &lt;code&gt;threads::shared&lt;/code&gt; m&amp;oacute;dulos compartidos ) lo antes posible.</target>
        </trans-unit>
        <trans-unit id="2a08b19fff728f8eb38fe62f343715380f316ef9" translate="yes" xml:space="preserve">
          <source>You aren't allowed to modify constants in this way, of course. If an argument were actually literal and you tried to change it, you'd take a (presumably fatal) exception. For example, this won't work:</source>
          <target state="translated">No se le permite modificar las constantes de esta manera,por supuesto.Si un argumento fuera realmente literal y tratara de cambiarlo,haría una excepción (presumiblemente fatal).Por ejemplo,esto no funcionará:</target>
        </trans-unit>
        <trans-unit id="2ed4e9f522b1893c218a4950d5f8fc9530c317f7" translate="yes" xml:space="preserve">
          <source>You aren't limited to just a single &lt;code&gt;&quot;|&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1e1241acbf20a33264ba47e94319bd2c6bf6a8" translate="yes" xml:space="preserve">
          <source>You assigned a reference to a scalar to &lt;code&gt;$/&lt;/code&gt; where the referenced item is not a positive integer. In older perls this &lt;b&gt;appeared&lt;/b&gt; to work the same as setting it to &lt;code&gt;undef&lt;/code&gt; but was in fact internally different, less efficient and with very bad luck could have resulted in your file being split by a stringified form of the reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1622820db3665cc19fb76f05a9e122011064bf68" translate="yes" xml:space="preserve">
          <source>You can &quot;make install&quot; already but you should test first.</source>
          <target state="translated">Ya puedes &quot;hacer la instalación&quot; pero deberías probar primero.</target>
        </trans-unit>
        <trans-unit id="441d296a1602f9e39d91a622912b032dea66e8b8" translate="yes" xml:space="preserve">
          <source>You can (and should) read more about references in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;. Briefly, references are rather like pointers that know what they point to. (Objects are also a kind of reference, but we won't be needing them right away--if ever.) This means that when you have something which looks to you like an access to a two-or-more-dimensional array and/or hash, what's really going on is that the base type is merely a one-dimensional entity that contains references to the next level. It's just that you can</source>
          <target state="translated">Puede (y debe) leer m&amp;aacute;s sobre las referencias en &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; . En resumen, las referencias son m&amp;aacute;s bien como punteros que saben a qu&amp;eacute; apuntan. (Los objetos tambi&amp;eacute;n son una especie de referencia, pero no los necesitaremos de inmediato, si es que alguna vez los necesitaremos). Esto significa que cuando tiene algo que le parece un acceso a una matriz bidimensional o m&amp;aacute;s / o hash, lo que realmente est&amp;aacute; sucediendo es que el tipo base es simplemente una entidad unidimensional que contiene referencias al siguiente nivel. Es solo que puedes</target>
        </trans-unit>
        <trans-unit id="4c8d7d3437af9191b3b2ecdbf2e0cc22d58ff901" translate="yes" xml:space="preserve">
          <source>You can &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;ize just one element of an aggregate. Usually this is done on dynamics:</source>
          <target state="translated">Puede &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; es ize s&amp;oacute;lo un elemento de un agregado. Por lo general, esto se hace en din&amp;aacute;mica:</target>
        </trans-unit>
        <trans-unit id="8ef093b34210f5147b5553d815c011dc81eff7de" translate="yes" xml:space="preserve">
          <source>You can &lt;code&gt;local&lt;/code&gt;ize just one element of an aggregate. Usually this is done on dynamics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3c57d183363a886eda26951cab8a3d873beb8e" translate="yes" xml:space="preserve">
          <source>You can access the first characters of a string with substr(). To get the first character, for example, start at position 0 and grab the string of length 1.</source>
          <target state="translated">Puedes acceder a los primeros caracteres de una cadena con substr().Para obtener el primer carácter,por ejemplo,comience en la posición 0 y tome la cadena de longitud 1.</target>
        </trans-unit>
        <trans-unit id="4b6168183223c539ff65f81f73941c2c4a8e59c2" translate="yes" xml:space="preserve">
          <source>You can actually chomp anything that's an lvalue, including an assignment:</source>
          <target state="translated">Puedes masticar cualquier cosa que sea un valor,incluyendo una tarea:</target>
        </trans-unit>
        <trans-unit id="ab3659f896bba38cbe056eb37538d331f15d2fcc" translate="yes" xml:space="preserve">
          <source>You can actually chop anything that's an lvalue, including an assignment.</source>
          <target state="translated">Puedes cortar cualquier cosa que sea un valor,incluyendo una tarea.</target>
        </trans-unit>
        <trans-unit id="06e51b7968687b9d39d3fba6b7611216b01c17eb" translate="yes" xml:space="preserve">
          <source>You can actually put an array or hash anywhere in the list, but the first one in the list will soak up all the values, and anything after it will become undefined. This may be useful in a my() or local().</source>
          <target state="translated">Puedes poner una matriz o un hash en cualquier parte de la lista,pero el primero de la lista absorberá todos los valores,y cualquier cosa después de él se volverá indefinido.Esto puede ser útil en un my()o local().</target>
        </trans-unit>
        <trans-unit id="532505c0e3919310f7105bcc98c9ca0331dbfd6d" translate="yes" xml:space="preserve">
          <source>You can actually take this one step further and test the manual itself. Have a look at &lt;a href=&quot;Test::Inline&quot;&gt;Test::Inline&lt;/a&gt; (formerly &lt;a href=&quot;Pod::Tests&quot;&gt;Pod::Tests&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcefecb0feb2b6d0223364636eebffcb896a89d" translate="yes" xml:space="preserve">
          <source>You can add customized aliases to standard (&lt;code&gt;:full&lt;/code&gt; ) Unicode naming conventions. The aliases override any standard definitions, so, if you're twisted enough, you can change &lt;code&gt;&quot;\N{LATIN CAPITAL LETTER A}&quot;&lt;/code&gt; to mean &lt;code&gt;&quot;B&quot;&lt;/code&gt; , etc.</source>
          <target state="translated">Puede agregar alias personalizados a convenciones de nomenclatura Unicode est&amp;aacute;ndar ( &lt;code&gt;:full&lt;/code&gt; ). Los alias anulan cualquier definici&amp;oacute;n est&amp;aacute;ndar, por lo que, si est&amp;aacute; lo suficientemente retorcido, puede cambiar &lt;code&gt;&quot;\N{LATIN CAPITAL LETTER A}&quot;&lt;/code&gt; para que signifique &lt;code&gt;&quot;B&quot;&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="665e29e63421d2fd846f895a1a1e9676c964ad4a" translate="yes" xml:space="preserve">
          <source>You can add customized aliases to standard (&lt;code&gt;:full&lt;/code&gt;) Unicode naming conventions. The aliases override any standard definitions, so, if you're twisted enough, you can change &lt;code&gt;&quot;\N{LATIN CAPITAL LETTER A}&quot;&lt;/code&gt; to mean &lt;code&gt;&quot;B&quot;&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422d4c1954392600b653163b725624c46d77f3f0" translate="yes" xml:space="preserve">
          <source>You can adjust the counter by assigning to &lt;code&gt;$.&lt;/code&gt; , but this will not actually move the seek pointer.</source>
          <target state="translated">Puede ajustar el contador asignando &lt;code&gt;$.&lt;/code&gt; , pero esto no mover&amp;aacute; el puntero de b&amp;uacute;squeda.</target>
        </trans-unit>
        <trans-unit id="1e12c1c150e8155af23e75fc04a29600af824216" translate="yes" xml:space="preserve">
          <source>You can adjust the counter by assigning to &lt;code&gt;$.&lt;/code&gt;, but this will not actually move the seek pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add234c624f206426ee8290a3ddfc9b8ceedcb89" translate="yes" xml:space="preserve">
          <source>You can also alter the way the output and logic of &lt;code&gt;Carp&lt;/code&gt; works, by changing some global variables in the &lt;code&gt;Carp&lt;/code&gt; namespace. See the section on &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; below.</source>
          <target state="translated">Tambi&amp;eacute;n puede alterar la forma en que funciona la salida y la l&amp;oacute;gica de &lt;code&gt;Carp&lt;/code&gt; , cambiando algunas variables globales en el espacio de nombres de &lt;code&gt;Carp&lt;/code&gt; . Consulte la secci&amp;oacute;n sobre &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="261bbd570ac37c0ad60f8d4ba64480f35ae30ac1" translate="yes" xml:space="preserve">
          <source>You can also call &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; with a reference argument, and if this is trapped within an &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt; contains that reference. This permits more elaborate exception handling using objects that maintain arbitrary state about the exception. Such a scheme is sometimes preferable to matching particular string values of &lt;a href=&quot;perlvar#%24%40&quot;&gt;&lt;code&gt;$@&lt;/code&gt;&lt;/a&gt; with regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d61dd797cd63f1042bbffa35621af46e71f5b31" translate="yes" xml:space="preserve">
          <source>You can also call &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; with a reference argument, and if this is trapped within an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;$@&lt;/code&gt; contains that reference. This permits more elaborate exception handling using objects that maintain arbitrary state about the exception. Such a scheme is sometimes preferable to matching particular string values of &lt;code&gt;$@&lt;/code&gt; with regular expressions. Because &lt;code&gt;$@&lt;/code&gt; is a global variable and &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; may be used within object implementations, be careful that analyzing the error object doesn't replace the reference in the global variable. It's easiest to make a local copy of the reference before any manipulations. Here's an example:</source>
          <target state="translated">Tambi&amp;eacute;n puede llamar a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; con un argumento de referencia, y si est&amp;aacute; atrapado dentro de una &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n , &lt;code&gt;$@&lt;/code&gt; contiene esa referencia. Esto permite un manejo de excepciones m&amp;aacute;s elaborado utilizando objetos que mantienen un estado arbitrario sobre la excepci&amp;oacute;n. A veces, este esquema es preferible a hacer coincidir valores de cadena particulares de &lt;code&gt;$@&lt;/code&gt; con expresiones regulares. Debido a que &lt;code&gt;$@&lt;/code&gt; es una variable global y &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; puede usarse dentro de implementaciones de objetos, tenga cuidado de que el an&amp;aacute;lisis del objeto de error no reemplace la referencia en la variable global. Es m&amp;aacute;s f&amp;aacute;cil hacer una copia local de la referencia antes de cualquier manipulaci&amp;oacute;n. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="151ae294544e5b15c198686df29c5202445b492a" translate="yes" xml:space="preserve">
          <source>You can also call &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; with a reference argument, and if this is trapped within an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;$@&lt;/code&gt; contains that reference. This permits more elaborate exception handling using objects that maintain arbitrary state about the exception. Such a scheme is sometimes preferable to matching particular string values of &lt;code&gt;$@&lt;/code&gt; with regular expressions. Because &lt;code&gt;$@&lt;/code&gt; is a global variable and &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; may be used within object implementations, be careful that analyzing the error object doesn't replace the reference in the global variable. It's easiest to make a local copy of the reference before any manipulations. Here's an example:</source>
          <target state="translated">Tambi&amp;eacute;n puede llamar a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; con un argumento de referencia, y si est&amp;aacute; atrapado dentro de una &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n , &lt;code&gt;$@&lt;/code&gt; contiene esa referencia. Esto permite un manejo de excepciones m&amp;aacute;s elaborado utilizando objetos que mantienen un estado arbitrario sobre la excepci&amp;oacute;n. A veces, este esquema es preferible a hacer coincidir valores de cadena particulares de &lt;code&gt;$@&lt;/code&gt; con expresiones regulares. Debido a que &lt;code&gt;$@&lt;/code&gt; es una variable global y &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; puede usarse dentro de implementaciones de objetos, tenga cuidado de que el an&amp;aacute;lisis del objeto de error no reemplace la referencia en la variable global. Es m&amp;aacute;s f&amp;aacute;cil hacer una copia local de la referencia antes de cualquier manipulaci&amp;oacute;n. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="9cdb85fa1e67a62d3e70dba3d5bf1c75c04f7e09" translate="yes" xml:space="preserve">
          <source>You can also call parse_lines() to parse an array of lines or parse_string_document() to parse a document already in memory. As with parse_file(), parse_lines() and parse_string_document() default to sending their output to &lt;code&gt;STDOUT&lt;/code&gt; unless changed with the output_fh() method.</source>
          <target state="translated">Tambi&amp;eacute;n puede llamar a parse_lines () para analizar una matriz de l&amp;iacute;neas o parse_string_document () para analizar un documento que ya est&amp;aacute; en la memoria. Al igual que con parse_file (), parse_lines () y parse_string_document () env&amp;iacute;an por defecto su salida a &lt;code&gt;STDOUT&lt;/code&gt; a menos que se modifiquen con el m&amp;eacute;todo output_fh ().</target>
        </trans-unit>
        <trans-unit id="792416647ce701349df829839ca082b8dd50a041" translate="yes" xml:space="preserve">
          <source>You can also call parse_lines() to parse an array of lines or parse_string_document() to parse a document already in memory. As with parse_file(), parse_lines() and parse_string_document() default to sending their output to &lt;code&gt;STDOUT&lt;/code&gt; unless changed with the output_fh() method. Be aware that parse_lines() and parse_string_document() both expect raw bytes, not decoded characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cf53df274337143d282caf711ce10831abe85c" translate="yes" xml:space="preserve">
          <source>You can also chain the calls like this, this first makes a copy and then multiply it by 2:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57fcafa1ea35942e9edb2cd8f5d66578716838d" translate="yes" xml:space="preserve">
          <source>You can also chain the calls like this, this will make first a copy and then multiply it by 2:</source>
          <target state="translated">También puedes encadenar las llamadas así,esto hará primero una copia y luego la multiplicará por 2:</target>
        </trans-unit>
        <trans-unit id="029fcbbc45bf12d25b834057d9395bba7ab192ae" translate="yes" xml:space="preserve">
          <source>You can also change the internal suspects list via &lt;code&gt;set_suspects&lt;/code&gt; method.</source>
          <target state="translated">Tambi&amp;eacute;n puede cambiar la lista de sospechosos internos mediante el m&amp;eacute;todo &lt;code&gt;set_suspects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c5a392365d6b99ba2358d8d79ba87643cdf832d" translate="yes" xml:space="preserve">
          <source>You can also cherry-pick commits from blead and another branch, by using the &lt;code&gt;git cherry-pick&lt;/code&gt; command. It is recommended to use the &lt;b&gt;-x&lt;/b&gt; option to &lt;code&gt;git cherry-pick&lt;/code&gt; in order to record the SHA1 of the original commit in the new commit message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a2e4e937f2dcf302981b9beceb35f4afd812bf" translate="yes" xml:space="preserve">
          <source>You can also choose to use rsync to get a copy of the current source tree for the bleadperl branch and all maintenance branches:</source>
          <target state="translated">También puedes elegir usar rsync para obtener una copia del árbol fuente actual para la rama bleadperl y todas las ramas de mantenimiento:</target>
        </trans-unit>
        <trans-unit id="06fef7ffb01d2e70116beb4b064bd4adf57f2910" translate="yes" xml:space="preserve">
          <source>You can also construct an empty set of prereqs with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69913c0f24daf22d2c432ea27b2a49c000488188" translate="yes" xml:space="preserve">
          <source>You can also control the 'hushed' flag at run-time, using the built-in routine vmsish::hushed(). Without argument, it returns the hushed status. Since vmsish::hushed is built-in, you do not need to &quot;use vmsish&quot; to call it.</source>
          <target state="translated">También puedes controlar la bandera &quot;silenciada&quot; en tiempo de ejecución,usando la rutina incorporada de vmsish::silenciado().Sin argumentos,devuelve el estado de silenciado.Ya que vmsish::hushed está incorporado,no necesitas &quot;usar vmsish&quot; para llamarlo.</target>
        </trans-unit>
        <trans-unit id="563cd6bbc176ecbc734b5b0b439a546964280899" translate="yes" xml:space="preserve">
          <source>You can also control the character encoding and entities. For example, if you're sure that the POD is properly encoded (using the &lt;code&gt;=encoding&lt;/code&gt; command), you can prevent high-bit characters from being encoded as HTML entities and declare the output character set as UTF-8 before parsing, like so:</source>
          <target state="translated">Tambi&amp;eacute;n puede controlar la codificaci&amp;oacute;n de caracteres y las entidades. Por ejemplo, si est&amp;aacute; seguro de que el POD est&amp;aacute; codificado correctamente (usando el comando &lt;code&gt;=encoding&lt;/code&gt; ), puede evitar que los caracteres de bits altos se codifiquen como entidades HTML y declarar el juego de caracteres de salida como UTF-8 antes del an&amp;aacute;lisis, as&amp;iacute; :</target>
        </trans-unit>
        <trans-unit id="ce7cb29295e37cbd29b717e64482225d4d4ba414" translate="yes" xml:space="preserve">
          <source>You can also control the shell that perl uses to run system() and backtick commands via PERL5SHELL. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede controlar el shell que usa perl para ejecutar system () y los comandos de comillas invertidas a trav&amp;eacute;s de PERL5SHELL. Ver &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b6274126a67429902f21b4ff102d4a5f157ec82" translate="yes" xml:space="preserve">
          <source>You can also create a circular reference with a single variable:</source>
          <target state="translated">También puede crear una referencia circular con una sola variable:</target>
        </trans-unit>
        <trans-unit id="fe319fa0895a7f47e55075d55fc2289e3b3f2bea" translate="yes" xml:space="preserve">
          <source>You can also do</source>
          <target state="translated">También puedes hacer</target>
        </trans-unit>
        <trans-unit id="9354065d75fb22856af80d6825be0de174fa14aa" translate="yes" xml:space="preserve">
          <source>You can also do the same things with the &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a5ee6a0a8ad7101d445832b3faf4f8db8fd92c" translate="yes" xml:space="preserve">
          <source>You can also do the same things with the &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; module:</source>
          <target state="translated">Tambi&amp;eacute;n puede hacer lo mismo con el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/DateTime&quot;&gt;DateTime&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="efdd9cfab2b6e73dabdc31999bde389ad6e9c40e" translate="yes" xml:space="preserve">
          <source>You can also do the wrapping explicitly by rad2rad(), deg2deg(), and grad2grad().</source>
          <target state="translated">También puedes hacer el envoltorio explícitamente por rad2rad(),deg2deg(),y grad2grad().</target>
        </trans-unit>
        <trans-unit id="e971cca5e90229321a699ea5b197dee6a304b5cb" translate="yes" xml:space="preserve">
          <source>You can also do this directly in the match operator using the &lt;code&gt;\Q&lt;/code&gt; and &lt;code&gt;\E&lt;/code&gt; sequences. The &lt;code&gt;\Q&lt;/code&gt; tells Perl where to start escaping special characters, and the &lt;code&gt;\E&lt;/code&gt; tells it where to stop (see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more details).</source>
          <target state="translated">Tambi&amp;eacute;n puede hacer esto directamente en el operador de coincidencia usando las secuencias &lt;code&gt;\Q&lt;/code&gt; y &lt;code&gt;\E&lt;/code&gt; La &lt;code&gt;\Q&lt;/code&gt; le dice a Perl d&amp;oacute;nde empezar a escapar de los caracteres especiales, y la &lt;code&gt;\E&lt;/code&gt; le dice d&amp;oacute;nde detenerse (ver &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; para m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="5646b0b75475a7d6e7784a71e7f3baa1d3885cbc" translate="yes" xml:space="preserve">
          <source>You can also do this for most systems using the &lt;a href=&quot;Term::ReadKey&quot;&gt;Term::ReadKey&lt;/a&gt; module from CPAN, which is easier to use and in theory more portable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2d0afbbbfb95dc9ef1705dc46b6eb4a3e77627" translate="yes" xml:space="preserve">
          <source>You can also do this for most systems using the &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ReadKey&quot;&gt;Term::ReadKey&lt;/a&gt; module from CPAN, which is easier to use and in theory more portable.</source>
          <target state="translated">Tambi&amp;eacute;n puede hacer esto para la mayor&amp;iacute;a de los sistemas utilizando el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ReadKey&quot;&gt;Term :: ReadKey&lt;/a&gt; de CPAN, que es m&amp;aacute;s f&amp;aacute;cil de usar y, en teor&amp;iacute;a, m&amp;aacute;s port&amp;aacute;til.</target>
        </trans-unit>
        <trans-unit id="f3337ad9bcb6d402cd92e0314d2032a9a8dc4c0a" translate="yes" xml:space="preserve">
          <source>You can also easily say to use all categories but one, by either, for example,</source>
          <target state="translated">También se puede decir fácilmente que hay que usar todas las categorías menos una,por ejemplo,por cualquiera de ellas,</target>
        </trans-unit>
        <trans-unit id="317bed7b561a99db6e7463d3bee761b35a18aa16" translate="yes" xml:space="preserve">
          <source>You can also embed newlines directly in your strings, i.e., they can end on a different line than they begin. This is nice, but if you forget your trailing quote, the error will not be reported until Perl finds another line containing the quote character, which may be much further on in the script. Variable substitution inside strings is limited to scalar variables, arrays, and array or hash slices. (In other words, names beginning with $ or @, followed by an optional bracketed expression as a subscript.) The following code segment prints out &quot;The price is $100.&quot;</source>
          <target state="translated">También puedes incrustar nuevas líneas directamente en tus cuerdas,es decir,pueden terminar en una línea diferente a la que empiezan.Esto está bien,pero si olvidas tu cita final,el error no será reportado hasta que Perl encuentre otra línea que contenga el carácter de la cita,que puede estar mucho más adelante en el guión.La sustitución de variables dentro de las cadenas se limita a variables escalares,matrices y cortes de matrices o hash.(En otras palabras,los nombres que comienzan con $ o @,seguidos de una expresión opcional entre corchetes como subíndice).El siguiente segmento de código imprime &quot;El precio es de $100&quot;.</target>
        </trans-unit>
        <trans-unit id="6dc98b973b8e3861953362cf4137bf9098b40a23" translate="yes" xml:space="preserve">
          <source>You can also explicitly indicate that a single handler is meant to be used for all types of referents like so:</source>
          <target state="translated">También se puede indicar explícitamente que un solo manipulador está destinado a ser utilizado para todo tipo de referentes como este:</target>
        </trans-unit>
        <trans-unit id="cc7d393dae203f89e29915d158bc84c0d091344a" translate="yes" xml:space="preserve">
          <source>You can also explicitly specify the argument number to use for the join string using something like &lt;code&gt;*2$v&lt;/code&gt;; for example:</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar expl&amp;iacute;citamente el n&amp;uacute;mero de argumento que se usar&amp;aacute; para la cadena de combinaci&amp;oacute;n usando algo como &lt;code&gt;*2$v&lt;/code&gt; ; por ejemplo:</target>
        </trans-unit>
        <trans-unit id="3c69b8b0664f8688a90139832b96e7b725fab5ec" translate="yes" xml:space="preserve">
          <source>You can also gain some minuscule measure of efficiency by pre-extending an array that is going to get big. You can also extend an array by assigning to an element that is off the end of the array. You can truncate an array down to nothing by assigning the null list () to it. The following are equivalent:</source>
          <target state="translated">También puedes ganar alguna minúscula medida de eficiencia al pre-extender una matriz que se va a hacer grande.También puedes extender una matriz asignando a un elemento que está fuera del extremo de la matriz.Puedes truncar una matriz a nada asignándole la lista nula ().Las siguientes son equivalentes:</target>
        </trans-unit>
        <trans-unit id="87f6d7508324248bf5fa6b6a6e4e9d73a898fe92" translate="yes" xml:space="preserve">
          <source>You can also get a pointer to the end of the string stored in the SV with the macro:</source>
          <target state="translated">También puedes obtener un puntero al final de la cadena almacenada en el SV con la macro:</target>
        </trans-unit>
        <trans-unit id="5c82629fae7a8fb986a942489f622aa4264ef7c4" translate="yes" xml:space="preserve">
          <source>You can also get differences with a subtraction, which returns a &lt;a href=&quot;Time::Seconds&quot;&gt;Time::Seconds&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843f7af3e5947338619464418b011d78b7714032" translate="yes" xml:space="preserve">
          <source>You can also get differences with a subtraction, which returns a &lt;a href=&quot;time/seconds&quot;&gt;Time::Seconds&lt;/a&gt; object:</source>
          <target state="translated">Tambi&amp;eacute;n puede obtener diferencias con una resta, que devuelve un objeto &lt;a href=&quot;time/seconds&quot;&gt;Time :: Seconds&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0da6f0ff3f9840990993a84402f300e13eb838e3" translate="yes" xml:space="preserve">
          <source>You can also get into subtle problems on those few operations in Perl that actually do care about the difference between a string and a number, such as the magical &lt;code&gt;++&lt;/code&gt; autoincrement operator or the syscall() function.</source>
          <target state="translated">Tambi&amp;eacute;n puede meterse en problemas sutiles en esas pocas operaciones en Perl que realmente se preocupan por la diferencia entre una cadena y un n&amp;uacute;mero, como el operador m&amp;aacute;gico &lt;code&gt;++&lt;/code&gt; de autoincremento o la funci&amp;oacute;n syscall ().</target>
        </trans-unit>
        <trans-unit id="b13a71a702d5f9f57f9b335ced17d27c5c8c8136" translate="yes" xml:space="preserve">
          <source>You can also get the precision from the next argument using &lt;code&gt;.*&lt;/code&gt;, or from a specified argument (e.g., with &lt;code&gt;.*2$&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7d480332101e4bfe5db6a1d74af4d69d28cfca" translate="yes" xml:space="preserve">
          <source>You can also get the precision from the next argument using &lt;code&gt;.*&lt;/code&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n puede obtener la precisi&amp;oacute;n del siguiente argumento usando &lt;code&gt;.*&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="31317a51fe6916c8950fb1738da08a3f662e794a" translate="yes" xml:space="preserve">
          <source>You can also go through each element and skip the ones you've seen before. Use a hash to keep track. The first time the loop sees an element, that element has no key in &lt;code&gt;%Seen&lt;/code&gt; . The &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; statement creates the key and immediately uses its value, which is &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, so the loop continues to the &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; and increments the value for that key. The next time the loop sees that same element, its key exists in the hash</source>
          <target state="translated">Tambi&amp;eacute;n puede revisar cada elemento y omitir los que ha visto antes. Utilice un hash para realizar un seguimiento. La primera vez que el bucle ve un elemento, ese elemento no tiene clave en &lt;code&gt;%Seen&lt;/code&gt; . La &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; declaraci&amp;oacute;n crea la clave y usa inmediatamente su valor, que es &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , por lo que el ciclo contin&amp;uacute;a con el &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; e incrementa el valor de esa clave. La pr&amp;oacute;xima vez que el bucle vea ese mismo elemento, su clave existe en el hash</target>
        </trans-unit>
        <trans-unit id="edcb0c6ef0708a661ee9e625297a07b8efd27958" translate="yes" xml:space="preserve">
          <source>You can also go through each element and skip the ones you've seen before. Use a hash to keep track. The first time the loop sees an element, that element has no key in &lt;code&gt;%Seen&lt;/code&gt;. The &lt;code&gt;next&lt;/code&gt; statement creates the key and immediately uses its value, which is &lt;code&gt;undef&lt;/code&gt;, so the loop continues to the &lt;code&gt;push&lt;/code&gt; and increments the value for that key. The next time the loop sees that same element, its key exists in the hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac992fa47e7fcb08307c37ff877628a10c26073" translate="yes" xml:space="preserve">
          <source>You can also import the symbolic &lt;code&gt;S_I*&lt;/code&gt; constants from the &lt;a href=&quot;fcntl&quot;&gt;&lt;code&gt;Fcntl&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7930ef83d4a331d3e89d11f276bc35572519ad08" translate="yes" xml:space="preserve">
          <source>You can also import the symbolic &lt;code&gt;S_I*&lt;/code&gt; constants from the &lt;code&gt;Fcntl&lt;/code&gt; module:</source>
          <target state="translated">Tambi&amp;eacute;n puede importar las constantes simb&amp;oacute;licas &lt;code&gt;S_I*&lt;/code&gt; desde el m&amp;oacute;dulo &lt;code&gt;Fcntl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="254f31569eb5ae2200e952d6645d10bd474402c9" translate="yes" xml:space="preserve">
          <source>You can also insert hooks into the file inclusion system by putting Perl code directly into &lt;code&gt;@INC&lt;/code&gt; . Those hooks may be subroutine references, array references or blessed objects. See &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; for details.</source>
          <target state="translated">Tambi&amp;eacute;n puede insertar enlaces en el sistema de inclusi&amp;oacute;n de archivos colocando el c&amp;oacute;digo Perl directamente en &lt;code&gt;@INC&lt;/code&gt; . Esos ganchos pueden ser referencias de subrutinas, referencias de matriz u objetos bendecidos. Consulte &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="0d00ca1cf68d3a16d0f398e68938a43a44653a67" translate="yes" xml:space="preserve">
          <source>You can also insert hooks into the file inclusion system by putting Perl code directly into &lt;code&gt;@INC&lt;/code&gt;. Those hooks may be subroutine references, array references or blessed objects. See &lt;a href=&quot;perlfunc#require&quot;&gt;&quot;require&quot; in perlfunc&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3bd593043bf11a275706b2d003ae9bc2607ea6" translate="yes" xml:space="preserve">
          <source>You can also insert hooks into the import facility by putting Perl code directly into the &lt;a href=&quot;perlvar#%40INC&quot;&gt;&lt;code&gt;@INC&lt;/code&gt;&lt;/a&gt; array. There are three forms of hooks: subroutine references, array references, and blessed objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3dcb264a37bf433b3f44d57e7b80c09701bead" translate="yes" xml:space="preserve">
          <source>You can also insert hooks into the import facility by putting Perl code directly into the @INC array. There are three forms of hooks: subroutine references, array references, and blessed objects.</source>
          <target state="translated">También puedes insertar ganchos en la instalación de importación poniendo el código Perl directamente en la matriz @INC.Hay tres formas de ganchos:referencias de subrutinas,referencias de matrices y objetos benditos.</target>
        </trans-unit>
        <trans-unit id="05e59c02014a1d5de9eba1297e8dbc08a175322a" translate="yes" xml:space="preserve">
          <source>You can also just quickly &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; on an undefined value this way:</source>
          <target state="translated">Tambi&amp;eacute;n puede &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; r&amp;aacute;pidamente con un valor indefinido de esta manera:</target>
        </trans-unit>
        <trans-unit id="d08d52cd53b0788f14ad13e65f62fc4176471f69" translate="yes" xml:space="preserve">
          <source>You can also just quickly &lt;code&gt;die&lt;/code&gt; on an undefined value this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af0b3086e446e033f6737e913de95b977971d84" translate="yes" xml:space="preserve">
          <source>You can also look for information at:</source>
          <target state="translated">También puedes buscar información en</target>
        </trans-unit>
        <trans-unit id="87644608210f2aa31bbb03fc62e8e9aeb59cfbac" translate="yes" xml:space="preserve">
          <source>You can also make the warnings fatal by importing this module as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c87e0f17edfeca7f9eb08d5d17c96c80da6a5f2" translate="yes" xml:space="preserve">
          <source>You can also organize your tests within subdirectories in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f3afa40db22b85e32dd734c2f80ac43010fee7" translate="yes" xml:space="preserve">
          <source>You can also override &lt;code&gt;DOES&lt;/code&gt; directly in your own classes. If you override this method, it should never throw an exception.</source>
          <target state="translated">Tambi&amp;eacute;n puede anular &lt;code&gt;DOES&lt;/code&gt; directamente en sus propias clases. Si anula este m&amp;eacute;todo, nunca deber&amp;iacute;a generar una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="95cd0a4f9ce9a6a1469a2469c1efc68cdb5fae5b" translate="yes" xml:space="preserve">
          <source>You can also pass &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; an explicit encoding to change it on the fly. This isn't exactly &quot;binary&quot; mode, but we still use &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; to do it:</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; una codificaci&amp;oacute;n expl&amp;iacute;cita para cambiarla sobre la marcha. Este no es exactamente el modo &quot;binario&quot;, pero todav&amp;iacute;a usamos &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; para hacerlo:</target>
        </trans-unit>
        <trans-unit id="0073e68ffe2cd9f7e4c5d59bc4ac83d3762723b7" translate="yes" xml:space="preserve">
          <source>You can also pass &lt;code&gt;binmode&lt;/code&gt; an explicit encoding to change it on the fly. This isn't exactly &quot;binary&quot; mode, but we still use &lt;code&gt;binmode&lt;/code&gt; to do it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90ccf1fd48c6dc4de43f56b2888c9c3134e2996" translate="yes" xml:space="preserve">
          <source>You can also pass a subroutine reference in order to determine and return the proper program to run based on a given test script. The subroutine reference should expect the TAP::Harness object itself as the first argument, and the file name as the second argument. It should return an array reference containing the command to be run and including the test file name. It can also simply return &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, in which case TAP::Harness will fall back on executing the test script in Perl:</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar una referencia de subrutina para determinar y devolver el programa adecuado para que se ejecute en funci&amp;oacute;n de un script de prueba determinado. La referencia de subrutina debe esperar el propio objeto TAP :: Harness como primer argumento y el nombre del archivo como segundo argumento. Debe devolver una referencia de matriz que contenga el comando que se ejecutar&amp;aacute; y que incluya el nombre del archivo de prueba. Tambi&amp;eacute;n puede simplemente devolver &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; , en cuyo caso TAP :: Harness recurrir&amp;aacute; a la ejecuci&amp;oacute;n del script de prueba en Perl:</target>
        </trans-unit>
        <trans-unit id="962bddff5bcc07f7f4968830992a0a3b3b51ad71" translate="yes" xml:space="preserve">
          <source>You can also pass a subroutine reference in order to determine and return the proper program to run based on a given test script. The subroutine reference should expect the TAP::Harness object itself as the first argument, and the file name as the second argument. It should return an array reference containing the command to be run and including the test file name. It can also simply return &lt;code&gt;undef&lt;/code&gt;, in which case TAP::Harness will fall back on executing the test script in Perl:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73ef4e3f69ff87027791a2bee2e957755bc2ee3" translate="yes" xml:space="preserve">
          <source>You can also read and execute Perl statements from a file while in the midst of your C program, by placing the filename in</source>
          <target state="translated">También puede leer y ejecutar declaraciones Perl desde un archivo mientras está en medio de su programa C,colocando el nombre del archivo en</target>
        </trans-unit>
        <trans-unit id="e9bed781c4a6044ffb67b23fe5c127e03e4dd1a1" translate="yes" xml:space="preserve">
          <source>You can also refer to capture groups relatively, by using a negative number, so that &lt;code&gt;\g-1&lt;/code&gt; and &lt;code&gt;\g{-1}&lt;/code&gt; both refer to the immediately preceding capture group, and &lt;code&gt;\g-2&lt;/code&gt; and &lt;code&gt;\g{-2}&lt;/code&gt; both refer to the group before it. For example:</source>
          <target state="translated">Tambi&amp;eacute;n puede referirse a los grupos de captura de forma relativa, utilizando un n&amp;uacute;mero negativo, de modo que &lt;code&gt;\g-1&lt;/code&gt; y &lt;code&gt;\g{-1}&lt;/code&gt; refieren al grupo de captura inmediatamente anterior, y &lt;code&gt;\g-2&lt;/code&gt; y &lt;code&gt;\g{-2}&lt;/code&gt; ambos consulte el grupo anterior. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="108a751b15dd5a65748cd5542a9f662a512fab15" translate="yes" xml:space="preserve">
          <source>You can also restrict names to a certain alphabet by specifying the &lt;a href=&quot;charnames&quot;&gt;charnames&lt;/a&gt; pragma:</source>
          <target state="translated">Tambi&amp;eacute;n puede restringir los nombres a un determinado alfabeto especificando el pragma de &lt;a href=&quot;charnames&quot;&gt;nombres de caracteres&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0b5023bd40fe3a7df91e6504812de04a002532fe" translate="yes" xml:space="preserve">
          <source>You can also see in that example that we use &lt;code&gt;utf8_to_uvchr_buf&lt;/code&gt; to get the value of the character; the inverse function &lt;code&gt;uvchr_to_utf8&lt;/code&gt; is available for putting a UV into UTF-8:</source>
          <target state="translated">Tambi&amp;eacute;n puede ver en ese ejemplo que usamos &lt;code&gt;utf8_to_uvchr_buf&lt;/code&gt; para obtener el valor del car&amp;aacute;cter; la funci&amp;oacute;n inversa &lt;code&gt;uvchr_to_utf8&lt;/code&gt; est&amp;aacute; disponible para poner un UV en UTF-8:</target>
        </trans-unit>
        <trans-unit id="2fae27cd653314395e221d45c5f75ed85eb09446" translate="yes" xml:space="preserve">
          <source>You can also send patch files to &lt;a href=&quot;mailto:perl5-porters@perl.org&quot;&gt;perl5-porters@perl.org&lt;/a&gt; directly if the patch is not ready to be applied, but intended for discussion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3be218b57aec1fe1552cf95cde772b459e8c4a" translate="yes" xml:space="preserve">
          <source>You can also send pull requests to the Github repository:</source>
          <target state="translated">También puedes enviar solicitudes de extracción al repositorio de Github:</target>
        </trans-unit>
        <trans-unit id="36456f92328715ac88fc0c97cb1b9c2205f52562" translate="yes" xml:space="preserve">
          <source>You can also set up your user name and e-mail address. Most people do this once globally in their</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4162cf16b37e0bb4e40d233ea23d3b932f7f0d" translate="yes" xml:space="preserve">
          <source>You can also specify the separator character using hexadecimal notation: &lt;b&gt;-0x&lt;i&gt;HHH...&lt;/i&gt;&lt;/b&gt;, where the &lt;code&gt;&lt;i&gt;H&lt;/i&gt;&lt;/code&gt; are valid hexadecimal digits. Unlike the octal form, this one may be used to specify any Unicode character, even those beyond 0xFF. So if you</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar el car&amp;aacute;cter separador usando notaci&amp;oacute;n hexadecimal: &lt;b&gt;-0x &lt;i&gt;HHH ...&lt;/i&gt;&lt;/b&gt; , donde la &lt;code&gt;&lt;i&gt;H&lt;/i&gt;&lt;/code&gt; son d&amp;iacute;gitos hexadecimales v&amp;aacute;lidos. A diferencia de la forma octal, esta puede usarse para especificar cualquier car&amp;aacute;cter Unicode, incluso aquellos m&amp;aacute;s all&amp;aacute; de 0xFF. As&amp;iacute; que si usted</target>
        </trans-unit>
        <trans-unit id="5708c7cba5f95ced05791bc1f781cc7e3ab698d2" translate="yes" xml:space="preserve">
          <source>You can also specify to NOT use something:</source>
          <target state="translated">También puede especificar que NO use algo:</target>
        </trans-unit>
        <trans-unit id="d0e21d8042eb943e53a763ac42b81475843fd69a" translate="yes" xml:space="preserve">
          <source>You can also store data in network order to allow easy sharing across multiple platforms, or when storing on a socket known to be remotely connected. The routines to call have an initial &lt;code&gt;n&lt;/code&gt; prefix for</source>
          <target state="translated">Tambi&amp;eacute;n puede almacenar datos en el orden de la red para permitir compartirlos f&amp;aacute;cilmente entre m&amp;uacute;ltiples plataformas, o cuando los almacena en un enchufe que se sabe que est&amp;aacute; conectado de forma remota. Las rutinas para llamar tienen un prefijo &lt;code&gt;n&lt;/code&gt; inicial para</target>
        </trans-unit>
        <trans-unit id="32a000612a53a9f73b8165e9ffd35ee663d455aa" translate="yes" xml:space="preserve">
          <source>You can also subscript a list to get a single element from it:</source>
          <target state="translated">También puedes suscribir una lista para obtener un solo elemento de ella:</target>
        </trans-unit>
        <trans-unit id="e308900a9f85413017177815b933ee92128f909d" translate="yes" xml:space="preserve">
          <source>You can also test a class, to make sure that it has the right ancestor:</source>
          <target state="translated">También puedes probar una clase,para asegurarte de que tiene el antepasado correcto:</target>
        </trans-unit>
        <trans-unit id="45cf05db45090a770c4e7c7739f97f42fdaa1b72" translate="yes" xml:space="preserve">
          <source>You can also test whether a version object is an alpha version, for example to prevent the use of some feature not present in the main release:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e940484c0812f3991ca3b5162180666fbbc774e9" translate="yes" xml:space="preserve">
          <source>You can also try &lt;code&gt;guess_encoding&lt;/code&gt; function which is exported by default. It takes $data to check and it also takes the list of suspects by option. The optional suspect list is</source>
          <target state="translated">Tambi&amp;eacute;n puede probar la funci&amp;oacute;n &lt;code&gt;guess_encoding&lt;/code&gt; , que se exporta de forma predeterminada. Se necesitan $ datos para verificar y tambi&amp;eacute;n toma la lista de sospechosos por opci&amp;oacute;n. La lista de sospechosos opcional es</target>
        </trans-unit>
        <trans-unit id="c6c2bb7263fcb86f56120bac5220dbcae10e778f" translate="yes" xml:space="preserve">
          <source>You can also try to include the module in a one-liner to see if perl finds it:</source>
          <target state="translated">También puedes intentar incluir el módulo en una línea para ver si Perl lo encuentra:</target>
        </trans-unit>
        <trans-unit id="b15c66e70792efbd27fd6c112e317c6eb54c5b69" translate="yes" xml:space="preserve">
          <source>You can also try using &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, as described in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; (although this is the same thing that many of the modules will do for you).</source>
          <target state="translated">Tambi&amp;eacute;n puede intentar usar &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , como se describe en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; (aunque esto es lo mismo que muchos de los m&amp;oacute;dulos har&amp;aacute;n por usted).</target>
        </trans-unit>
        <trans-unit id="74be7ad2f05258d57aeb18d3aea7623947196e74" translate="yes" xml:space="preserve">
          <source>You can also try using &lt;code&gt;fork&lt;/code&gt;, as described in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; (although this is the same thing that many of the modules will do for you).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d0b06ab6697336780029eb518e6cdd2c05382e" translate="yes" xml:space="preserve">
          <source>You can also use</source>
          <target state="translated">También puedes usar</target>
        </trans-unit>
        <trans-unit id="e0b40e46358631fd782ce6cd1e20ef0687b61198" translate="yes" xml:space="preserve">
          <source>You can also use 0x8e and 0x8f to indicate that the following sequence of characters belongs to yet another character set. To each following byte is added the value 0x80.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202f7bfbf8f49e8ba6c221c617da66be05b837aa" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;Class::Tiny::Antlers&quot;&gt;Class::Tiny::Antlers&lt;/a&gt; for &lt;code&gt;Moose&lt;/code&gt;-like syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da89dff1ecf2505f23c0fe06386fc84d5b6555f6" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;Devel::REPL&quot;&gt;Devel::REPL&lt;/a&gt; which is an interactive shell for Perl, commonly known as a REPL - Read, Evaluate, Print, Loop. It provides various handy features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05db0e88a7c897c6cc9fa696a780cde648824d4d" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;Tie::Cycle&quot;&gt;Tie::Cycle&lt;/a&gt; to use a scalar that always has the next element of the circular array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb4cba1a89412d983ef34b9565f67b33c11cb2b" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;Time::Piece&quot;&gt;Time::Piece&lt;/a&gt;, which comes with Perl and provides a &lt;code&gt;localtime&lt;/code&gt; that returns an object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0304b03ea61e4912a40d9a36c7c0d47306360a9" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny::Antlers&quot;&gt;Class::Tiny::Antlers&lt;/a&gt; for &lt;code&gt;Moose&lt;/code&gt; -like syntax.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/Class::Tiny::Antlers&quot;&gt;Class :: Tiny :: Antlers&lt;/a&gt; para una sintaxis similar a &lt;code&gt;Moose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37de0be164e83020017ecbe8445d1b73a8f2a1b8" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::REPL&quot;&gt;Devel::REPL&lt;/a&gt; which is an interactive shell for Perl, commonly known as a REPL - Read, Evaluate, Print, Loop. It provides various handy features.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/Devel::REPL&quot;&gt;Devel :: REPL,&lt;/a&gt; que es un shell interactivo para Perl, com&amp;uacute;nmente conocido como REPL - Leer, Evaluar, Imprimir, Loop. Proporciona varias funciones &amp;uacute;tiles.</target>
        </trans-unit>
        <trans-unit id="9013c35ad3298535ad5c8c74739a6a896be46939" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::Cycle&quot;&gt;Tie::Cycle&lt;/a&gt; to use a scalar that always has the next element of the circular array:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::Cycle&quot;&gt;Tie :: Cycle&lt;/a&gt; para usar un escalar que siempre tiene el siguiente elemento de la matriz circular:</target>
        </trans-unit>
        <trans-unit id="ed9079885add1db23c7b692dc26264a6c8112995" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local::lib&lt;/a&gt; to do much of the same thing. Install modules using &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local::lib&lt;/a&gt;'s settings then use the module in your program:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local :: lib&lt;/a&gt; para hacer casi lo mismo. Instale m&amp;oacute;dulos usando &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;la&lt;/a&gt; configuraci&amp;oacute;n de local :: lib y luego use el m&amp;oacute;dulo en su programa:</target>
        </trans-unit>
        <trans-unit id="cee36dc459570b6060c3229ade20676c1103dac6" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;local::lib&quot;&gt;local::lib&lt;/a&gt; to do much of the same thing. Install modules using &lt;a href=&quot;local::lib&quot;&gt;local::lib&lt;/a&gt;'s settings then use the module in your program:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38efc50c4c6a8567a3f07d734113580b8054b830" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;time/piece&quot;&gt;Time::Piece&lt;/a&gt;, which comes with Perl and provides a &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; that returns an object:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;time/piece&quot;&gt;Time :: Piece&lt;/a&gt; , que viene con Perl y proporciona una hora &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; que devuelve un objeto:</target>
        </trans-unit>
        <trans-unit id="fe8ff91507ad3e201158ab00126828440dda9b62" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;HANDLE-&amp;gt;input_line_number(EXPR)&lt;/code&gt; to access the line counter for a given filehandle without having to worry about which handle you last accessed.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;HANDLE-&amp;gt;input_line_number(EXPR)&lt;/code&gt; para acceder al contador de l&amp;iacute;neas para un identificador de archivo determinado sin tener que preocuparse por el identificador al que accedi&amp;oacute; por &amp;uacute;ltima vez.</target>
        </trans-unit>
        <trans-unit id="cfc194c704de65f5fa2e2dc7cdfca08cd861cafc" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;cpan&lt;/code&gt; 's &lt;code&gt;-a&lt;/code&gt; switch to create an autobundle file that &lt;code&gt;CPAN.pm&lt;/code&gt; understands and can use to re-install every module:</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar &lt;code&gt;cpan&lt;/code&gt; 's &lt;code&gt;-a&lt;/code&gt; interruptor para crear un archivo autobundle que &lt;code&gt;CPAN.pm&lt;/code&gt; entienda y pueda utilizar para volver a instalar todos los m&amp;oacute;dulos:</target>
        </trans-unit>
        <trans-unit id="c32a4a11aa3d97ad829511eee7c584cbf65b7424" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;cpan&lt;/code&gt;'s &lt;code&gt;-a&lt;/code&gt; switch to create an autobundle file that &lt;code&gt;CPAN.pm&lt;/code&gt; understands and can use to re-install every module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed04ee9d470ae5bb5ded41953f6884557aab9f4" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;while&lt;/code&gt; in a post-condition:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;while&lt;/code&gt; en una condici&amp;oacute;n posterior:</target>
        </trans-unit>
        <trans-unit id="d2490129a2ade6b9a949f50bed0b1d18208e8c0a" translate="yes" xml:space="preserve">
          <source>You can also use Perl one-liners to modify a file in-place. The following changes all 'Fred' to 'Barney' in</source>
          <target state="translated">También puedes usar Perl de una línea para modificar un archivo en el lugar.Lo siguiente cambia todo &quot;Fred&quot; por &quot;Barney&quot; en</target>
        </trans-unit>
        <trans-unit id="7bdc3a001959e967af8fbe560047483c608a1a86" translate="yes" xml:space="preserve">
          <source>You can also use PerlIO to convert larger amounts of data you don't want to bring into memory. For example, to convert between ISO-8859-1 (Latin 1) and UTF-8 (or UTF-EBCDIC in EBCDIC machines):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae806fe9a09487e09415c88d84054f11b5bab926" translate="yes" xml:space="preserve">
          <source>You can also use a commercial debugger such as Affrus (Mac OS X), Komodo from Activestate (Windows and Mac OS X), or EPIC (most platforms).</source>
          <target state="translated">También puedes usar un depurador comercial como Affrus (Mac OS X),Komodo de Activestate (Windows y Mac OS X),o EPIC (la mayoría de las plataformas).</target>
        </trans-unit>
        <trans-unit id="79babd18e608e40e4da78366242734a20c79cee2" translate="yes" xml:space="preserve">
          <source>You can also use a double fork. You immediately &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; for your first child, and the init daemon will &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; for your grandchild once it exits.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar un tenedor doble. Inmediatamente &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; a su primer hijo, y el demonio init &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait()&lt;/a&gt;&lt;/code&gt; a su nieto una vez que salga.</target>
        </trans-unit>
        <trans-unit id="d69e7ee5e4d94793bbffd2e90393fe6a378a73cd" translate="yes" xml:space="preserve">
          <source>You can also use a double fork. You immediately &lt;code&gt;wait()&lt;/code&gt; for your first child, and the init daemon will &lt;code&gt;wait()&lt;/code&gt; for your grandchild once it exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef85cce54fb95ce8f948edcebadc50c579e68d3" translate="yes" xml:space="preserve">
          <source>You can also use a list slice to select only the elements that you need:</source>
          <target state="translated">También puedes usar un trozo de lista para seleccionar sólo los elementos que necesitas:</target>
        </trans-unit>
        <trans-unit id="d760c6f0200ce645ec4271e39ed0780a635d6be2" translate="yes" xml:space="preserve">
          <source>You can also use a localized &lt;code&gt;@ARGV&lt;/code&gt; to eliminate the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar un &lt;code&gt;@ARGV&lt;/code&gt; localizado para eliminar el &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="52b5c5f91438f8f97a41eab3ee2f38fefeb189a7" translate="yes" xml:space="preserve">
          <source>You can also use a localized &lt;code&gt;@ARGV&lt;/code&gt; to eliminate the &lt;code&gt;open&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4613c51eb74aabc580ab960ede735ed7c5a84c03" translate="yes" xml:space="preserve">
          <source>You can also use a subroutine reference as a method:</source>
          <target state="translated">También puede utilizar una referencia de subrutina como método:</target>
        </trans-unit>
        <trans-unit id="55b643d1caec2f7008ddc9ff139f97c1c50f1aef" translate="yes" xml:space="preserve">
          <source>You can also use certain libraries like &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; conditionally, but be sure to skip the test gracefully if it's not there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a8095c707393fa806f56c74d791b44c5bdbd35" translate="yes" xml:space="preserve">
          <source>You can also use certain libraries like Config conditionally, but be sure to skip the test gracefully if it's not there.</source>
          <target state="translated">También puedes usar ciertas librerías como Config condicionalmente,pero asegúrate de saltarte la prueba con gracia si no está ahí.</target>
        </trans-unit>
        <trans-unit id="aee62fec81f8fc5af73b94cc4b6a4396ba0e2b3e" translate="yes" xml:space="preserve">
          <source>You can also use dmake to build using Visual C++; provided, however, you set OSRELEASE to &quot;microsft&quot; (or whatever the directory name under which the Visual C dmake configuration lives) in your environment and edit win32/config.vc to change &quot;make=nmake&quot; into &quot;make=dmake&quot;. The latter step is only essential if you want to use dmake as your default make for building extensions using MakeMaker.</source>
          <target state="translated">También puedes usar dmake para construir usando Visual C++;siempre y cuando,sin embargo,configures OSRELEASE a &quot;microsft&quot; (o cualquiera que sea el nombre del directorio bajo el cual vive la configuración de dmake de Visual C)en tu entorno y edites win32/config.vc para cambiar &quot;make=nmake&quot; por &quot;make=dmake&quot;.Este último paso sólo es esencial si quieres usar dmake como tu make predeterminado para crear extensiones con MakeMaker.</target>
        </trans-unit>
        <trans-unit id="4fabe958607319aed5413ce7d91aa1937c4486e1" translate="yes" xml:space="preserve">
          <source>You can also use file-descriptor redirection to make STDERR a duplicate of STDOUT:</source>
          <target state="translated">También puedes usar la redirección del descriptor de archivos para hacer de STDERR un duplicado de STDOUT:</target>
        </trans-unit>
        <trans-unit id="bb1f48473296bb1c89d7c3f43ff784b475814cae" translate="yes" xml:space="preserve">
          <source>You can also use negation in both &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt; by introducing a caret (&lt;code&gt;^&lt;/code&gt;) between the first brace and the property name: &lt;code&gt;\p{^Tamil}&lt;/code&gt; is equal to &lt;code&gt;\P{Tamil}&lt;/code&gt; .</source>
          <target state="translated">Tambi&amp;eacute;n puede usar la negaci&amp;oacute;n en &lt;code&gt;\p{}&lt;/code&gt; y &lt;code&gt;\P{}&lt;/code&gt; introduciendo un signo de intercalaci&amp;oacute;n ( &lt;code&gt;^&lt;/code&gt; ) entre la primera llave y el nombre de la propiedad: &lt;code&gt;\p{^Tamil}&lt;/code&gt; es igual a &lt;code&gt;\P{Tamil}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54d20874570939ffd2d092114e0b4e19463ff0b5" translate="yes" xml:space="preserve">
          <source>You can also use negation in both &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt; by introducing a caret (&lt;code&gt;^&lt;/code&gt;) between the first brace and the property name: &lt;code&gt;\p{^Tamil}&lt;/code&gt; is equal to &lt;code&gt;\P{Tamil}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6a71e5490894554dcf75a2f44b77577d1780db" translate="yes" xml:space="preserve">
          <source>You can also use substr() as an lvalue.</source>
          <target state="translated">También puedes usar substr()como un valor l.</target>
        </trans-unit>
        <trans-unit id="c8a027b09bbb1035f68edd31b3dac9da865767c1" translate="yes" xml:space="preserve">
          <source>You can also use the -Duse64bitint flag to Configure. Although there are some minor differences between compiling Perl with this flag versus the -Duse64bitall flag, they should not be noticeable from a Perl user's perspective. When configuring -Duse64bitint using a 64bit gcc on a pa-risc architecture, -Duse64bitint is silently promoted to -Duse64bitall.</source>
          <target state="translated">También puedes usar la bandera -Duse64bitint para configurar.Aunque hay algunas diferencias menores entre compilar Perl con esta bandera y la bandera -Duse64bitall,no deberían ser notorias desde la perspectiva de un usuario de Perl.Cuando se configura -Duse64bitint usando un gcc de 64 bits en una arquitectura pa-risc,-Duse64bitint es silenciosamente promovido a -Duse64bitall.</target>
        </trans-unit>
        <trans-unit id="b2a60dda9b88e0346f381f0e7d0f8c46c74bcfba" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;Date::Calc&quot;&gt;Date::Calc&lt;/a&gt; module using its &lt;code&gt;Today_and_Now&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a700e3ed5372f353d27ba3249155ac84ffdf5ae" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;Tie::File&quot;&gt;Tie::File&lt;/a&gt; module which lets you access the lines through a tied array. You can use normal array operations to modify your file, including setting the last index and using &lt;code&gt;splice&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f985bfd65126ce04f3352a8f1c24d2647a415c" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Calc&quot;&gt;Date::Calc&lt;/a&gt; module using its &lt;code&gt;Today_and_Now&lt;/code&gt; function.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Date::Calc&quot;&gt;Date :: Calc&lt;/a&gt; usando su funci&amp;oacute;n &lt;code&gt;Today_and_Now&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5948ec91fdfb792b5884ccadb56a91fc59d16359" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;tie/file&quot;&gt;Tie::File&lt;/a&gt; module which lets you access the lines through a tied array. You can use normal array operations to modify your file, including setting the last index and using &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;tie/file&quot;&gt;Tie :: File&lt;/a&gt; que le permite acceder a las l&amp;iacute;neas a trav&amp;eacute;s de una matriz vinculada. Puede usar las operaciones normales de matriz para modificar su archivo, incluida la configuraci&amp;oacute;n del &amp;uacute;ltimo &amp;iacute;ndice y el uso de &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea4cf5784aecf948d1c03056df0b1645df434de" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;**&lt;/code&gt; operator, see &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar el operador &lt;code&gt;**&lt;/code&gt; , consulte &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aca7a853e98fdbbaafd79c6bf0b9e3d107072aaf" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;\G&lt;/code&gt; anchor in scalar context. You still need the &lt;code&gt;g&lt;/code&gt; flag.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar el ancla &lt;code&gt;\G&lt;/code&gt; en contexto escalar. A&amp;uacute;n necesitas la bandera &lt;code&gt;g&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd0679d81994a6f99aa92d35f6d6b0e5281b7e9d" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;\G&lt;/code&gt; anchor in scalar context. You still need the &lt;code&gt;g&lt;/code&gt; modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6b2b4f9f728f0a8f747fc021c92ba0dae0be15" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;open3()&lt;/code&gt; function from &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt;. Benjamin Goldberg provides some sample code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d5ff0652d0a9cfb0d9a8028ed64cb97f87e026" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;open3()&lt;/code&gt; function from &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;. Benjamin Goldberg provides some sample code:</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar la funci&amp;oacute;n &lt;code&gt;open3()&lt;/code&gt; de &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; . Benjamin Goldberg proporciona un c&amp;oacute;digo de muestra:</target>
        </trans-unit>
        <trans-unit id="54c10825a7a9a0e79c4bc9a8acb25f8c895c8d2f" translate="yes" xml:space="preserve">
          <source>You can also use the Unix command mknod(1), or on some systems, mkfifo(1). These may not be in your normal path, though.</source>
          <target state="translated">También puedes usar el comando de Unix mknod(1),o en algunos sistemas,mkfifo(1).Sin embargo,puede que no estén en su ruta normal.</target>
        </trans-unit>
        <trans-unit id="d558c8753e7739908d901edc4316bd26afe6b26c" translate="yes" xml:space="preserve">
          <source>You can also use the complement of \b, \B, to specify that there should not be a word boundary.</source>
          <target state="translated">También puede utilizar el complemento de \b,\ ~-B,para especificar que no debe haber un límite de palabras.</target>
        </trans-unit>
        <trans-unit id="94817cf57f637575defe9d34927c35a3c77682d8" translate="yes" xml:space="preserve">
          <source>You can also use the following functions to extract the file header information from Storable images:</source>
          <target state="translated">También puede utilizar las siguientes funciones para extraer la información de la cabecera del archivo de las imágenes almacenadas:</target>
        </trans-unit>
        <trans-unit id="621c9d7b846400426f6a8d8885a28fc12414361e" translate="yes" xml:space="preserve">
          <source>You can also write that as a single substitution, although it turns out the combined statement is slower than the separate ones. That might not matter to you, though:</source>
          <target state="translated">También puedes escribirlo como una sustitución única,aunque resulta que la declaración combinada es más lenta que las separadas.Sin embargo,eso podría no importarte:</target>
        </trans-unit>
        <trans-unit id="6e736747d1920ca322bb92742d39b47addfde6fe" translate="yes" xml:space="preserve">
          <source>You can also:</source>
          <target state="translated">Tú también puedes:</target>
        </trans-unit>
        <trans-unit id="9a39342cae5acfdbd6b63da64d2d504d73f599e3" translate="yes" xml:space="preserve">
          <source>You can alter the global variable $Params::Check::NO_DUPLICATES to control whether the &lt;code&gt;store&lt;/code&gt; 'd key will still be present in your result set. See the &lt;a href=&quot;#Global-Variables&quot;&gt;Global Variables&lt;/a&gt; section below.</source>
          <target state="translated">Puede modificar la variable global $ Params :: Check :: NO_DUPLICATES para controlar si la clave d de la &lt;code&gt;store&lt;/code&gt; seguir&amp;aacute; presente en su conjunto de resultados. Consulte la secci&amp;oacute;n &lt;a href=&quot;#Global-Variables&quot;&gt;Variables globales a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6da0fead206bedaefe0c555de0dec9128299e2e3" translate="yes" xml:space="preserve">
          <source>You can alter the global variable $Params::Check::NO_DUPLICATES to control whether the &lt;code&gt;store&lt;/code&gt;'d key will still be present in your result set. See the &lt;a href=&quot;#Global-Variables&quot;&gt;&quot;Global Variables&quot;&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330192003f1fea8edf49c86f71523fd9c154de87" translate="yes" xml:space="preserve">
          <source>You can always check the value you're using by printing it in octal notation to ensure it matches what you think it should be. Print it in octal and decimal format:</source>
          <target state="translated">Siempre puedes comprobar el valor que estás usando imprimiéndolo en notación octal para asegurarte de que coincide con lo que crees que debería ser.Imprímelo en formato octal y decimal:</target>
        </trans-unit>
        <trans-unit id="ef6c5c0a821b62556c215147b73e29172a7eabfd" translate="yes" xml:space="preserve">
          <source>You can always use an array reference, in curly braces, in place of the name of an array. For example, &lt;code&gt;@{$aref}&lt;/code&gt; instead of &lt;code&gt;@array&lt;/code&gt; .</source>
          <target state="translated">Siempre puede usar una referencia de matriz, entre llaves, en lugar del nombre de una matriz. Por ejemplo, &lt;code&gt;@{$aref}&lt;/code&gt; lugar de &lt;code&gt;@array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="150541d09f643b30e2058d1e0bade9c15ba89324" translate="yes" xml:space="preserve">
          <source>You can always use an array reference, in curly braces, in place of the name of an array. For example, &lt;code&gt;@{$aref}&lt;/code&gt; instead of &lt;code&gt;@array&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7165a3ffe3314c6d01e5a6307c924382d3b64487" translate="yes" xml:space="preserve">
          <source>You can arrange for a callback to be run just before the &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; does its deed, by setting the &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;$SIG{__DIE__}&lt;/code&gt;&lt;/a&gt; hook. The associated handler is called with the exception as an argument, and can change the exception, if it sees fit, by calling &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; again. See &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&quot;%SIG&quot; in perlvar&lt;/a&gt; for details on setting &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;%SIG&lt;/code&gt;&lt;/a&gt; entries, and &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; for some examples. Although this feature was to be run only right before your program was to exit, this is not currently so: the &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;$SIG{__DIE__}&lt;/code&gt;&lt;/a&gt; hook is currently called even inside &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;ed blocks/strings! If one wants the hook to do nothing in such situations, put</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4754996a46b2974a193b45735bde04e1ddad5927" translate="yes" xml:space="preserve">
          <source>You can arrange for a callback to be run just before the &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; does its deed, by setting the &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; hook. The associated handler is called with the error text and can change the error message, if it sees fit, by calling &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again. See &lt;a href=&quot;../perlvar#%25SIG&quot;&gt;%SIG in perlvar&lt;/a&gt; for details on setting &lt;code&gt;%SIG&lt;/code&gt; entries, and &lt;a href=&quot;#eval-BLOCK&quot;&gt;eval BLOCK&lt;/a&gt; for some examples. Although this feature was to be run only right before your program was to exit, this is not currently so: the &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; hook is currently called even inside eval()ed blocks/strings! If one wants the hook to do nothing in such situations, put</source>
          <target state="translated">Puede hacer que se ejecute una devoluci&amp;oacute;n de llamada justo antes de que el &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; haga su efecto, configurando el gancho &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; . Se llama al controlador asociado con el texto de error y puede cambiar el mensaje de error, si lo considera oportuno, llamando a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; de nuevo. Consulte &lt;a href=&quot;../perlvar#%25SIG&quot;&gt;% SIG en perlvar&lt;/a&gt; para obtener detalles sobre la configuraci&amp;oacute;n de entradas &lt;code&gt;%SIG&lt;/code&gt; y &lt;a href=&quot;#eval-BLOCK&quot;&gt;eval BLOCK&lt;/a&gt; para ver algunos ejemplos. Aunque esta caracter&amp;iacute;stica deb&amp;iacute;a ejecutarse justo antes de que su programa &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; actualmente no es as&amp;iacute;: &amp;iexcl;el gancho $ SIG {__ DIE__} se llama actualmente incluso dentro de los bloques / cadenas de eval () ed! Si uno quiere que el anzuelo no haga nada en tales situaciones, coloque</target>
        </trans-unit>
        <trans-unit id="6d6ebe42604b8b630167882d7abe0a8f91ccbdb6" translate="yes" xml:space="preserve">
          <source>You can arrange for a callback to be run just before the &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; does its deed, by setting the &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; hook. The associated handler is called with the error text and can change the error message, if it sees fit, by calling &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again. See &lt;a href=&quot;perlvar#%25SIG&quot;&gt;%SIG in perlvar&lt;/a&gt; for details on setting &lt;code&gt;%SIG&lt;/code&gt; entries, and &lt;a href=&quot;#eval-BLOCK&quot;&gt;eval BLOCK&lt;/a&gt; for some examples. Although this feature was to be run only right before your program was to exit, this is not currently so: the &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; hook is currently called even inside eval()ed blocks/strings! If one wants the hook to do nothing in such situations, put</source>
          <target state="translated">Puede hacer que se ejecute una devoluci&amp;oacute;n de llamada justo antes de que el &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; haga su efecto, configurando el gancho &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; . Se llama al controlador asociado con el texto de error y puede cambiar el mensaje de error, si lo considera oportuno, llamando a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; de nuevo. Consulte &lt;a href=&quot;perlvar#%25SIG&quot;&gt;% SIG en perlvar&lt;/a&gt; para obtener detalles sobre la configuraci&amp;oacute;n de entradas &lt;code&gt;%SIG&lt;/code&gt; y &lt;a href=&quot;#eval-BLOCK&quot;&gt;eval BLOCK&lt;/a&gt; para ver algunos ejemplos. Aunque esta caracter&amp;iacute;stica deb&amp;iacute;a ejecutarse justo antes de que su programa &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; actualmente no es as&amp;iacute;: &amp;iexcl;el gancho $ SIG {__ DIE__} se llama actualmente incluso dentro de los bloques / cadenas de eval () ed! Si uno quiere que el anzuelo no haga nada en tales situaciones, coloque</target>
        </trans-unit>
        <trans-unit id="b111cf2dc7e21ab63d8886219ae9103dbe8e5745" translate="yes" xml:space="preserve">
          <source>You can ask &lt;code&gt;prove&lt;/code&gt; to remember the state of previous test runs and select and/or order the tests to be run based on that saved state.</source>
          <target state="translated">Puede pedir a &lt;code&gt;prove&lt;/code&gt; que recuerde el estado de ejecuciones de pruebas anteriores y seleccionar y / u ordenar que las pruebas se ejecuten en funci&amp;oacute;n de ese estado guardado.</target>
        </trans-unit>
        <trans-unit id="691310b760f2429354c31b938255b9b2f1fdb135" translate="yes" xml:space="preserve">
          <source>You can avoid this by using a bracketed character class in the lookbehind assertion, like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291f7b02019a89ab9c5bae1789127ea82bbc5201" translate="yes" xml:space="preserve">
          <source>You can break circular references by creating a &quot;weak reference&quot;. A weak reference does not increment the reference count for a variable, which means that the object can go out of scope and be destroyed. You can weaken a reference with the &lt;code&gt;weaken&lt;/code&gt; function exported by the &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be6ec0673c2462bb7fe8ce793fcded60eef0f18" translate="yes" xml:space="preserve">
          <source>You can break circular references by creating a &quot;weak reference&quot;. A weak reference does not increment the reference count for a variable, which means that the object can go out of scope and be destroyed. You can weaken a reference with the &lt;code&gt;weaken&lt;/code&gt; function exported by the &lt;a href=&quot;scalar/util&quot;&gt;Scalar::Util&lt;/a&gt; module.</source>
          <target state="translated">Puede romper referencias circulares creando una &quot;referencia d&amp;eacute;bil&quot;. Una referencia d&amp;eacute;bil no incrementa el recuento de referencias para una variable, lo que significa que el objeto puede salir del alcance y ser destruido. Puede debilitar una referencia con la funci&amp;oacute;n &lt;code&gt;weaken&lt;/code&gt; exportada por el m&amp;oacute;dulo &lt;a href=&quot;scalar/util&quot;&gt;Scalar :: Util&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b50c9286c4042666f0e26f5a3f4bc1fff06eaf5" translate="yes" xml:space="preserve">
          <source>You can call the perl visible subroutine something other than &lt;code&gt;constant&lt;/code&gt; if you give the parameter</source>
          <target state="translated">Puede llamar a la subrutina visible de perl algo diferente a &lt;code&gt;constant&lt;/code&gt; e si le da el par&amp;aacute;metro</target>
        </trans-unit>
        <trans-unit id="03c6b44929e8d300ef044fa7166e3c54539d868d" translate="yes" xml:space="preserve">
          <source>You can capture its numeric and string content using:</source>
          <target state="translated">Puedes capturar su contenido numérico y de cadena usando:</target>
        </trans-unit>
        <trans-unit id="596d44f0dc27aeca16b120bcaf752ef2dfa99248" translate="yes" xml:space="preserve">
          <source>You can categorize these CES by 3 criteria: size of each character, endianness, and Byte Order Mark.</source>
          <target state="translated">Puedes categorizar estos CES por 3 criterios:tamaño de cada personaje,endianidad,y Marca de Orden de Byte.</target>
        </trans-unit>
        <trans-unit id="4b8f84adbeec6314eab49fb83df65b6443839d6c" translate="yes" xml:space="preserve">
          <source>You can cause characters that normally function as metacharacters to be interpreted literally by prefixing them with a &lt;code&gt;&quot;\&quot;&lt;/code&gt;, just like the pattern's delimiter must be escaped if it also occurs within the pattern. Thus, &lt;code&gt;&quot;\.&quot;&lt;/code&gt; matches just a literal dot, &lt;code&gt;&quot;.&quot;&lt;/code&gt; instead of its normal meaning. This means that the backslash is also a metacharacter, so &lt;code&gt;&quot;\\&quot;&lt;/code&gt; matches a single &lt;code&gt;&quot;\&quot;&lt;/code&gt;. And a sequence that contains an escaped metacharacter matches the same sequence (but without the escape) in the target string. So, the pattern &lt;code&gt;/blur\\fl/&lt;/code&gt; would match any target string that contains the sequence &lt;code&gt;&quot;blur\fl&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b889973d01196115807ed3e24800abe92e6ed58" translate="yes" xml:space="preserve">
          <source>You can change an array element, but you can't change a list element:</source>
          <target state="translated">Puedes cambiar un elemento de la matriz,pero no puedes cambiar un elemento de la lista:</target>
        </trans-unit>
        <trans-unit id="d178a91245c223a6b3d558a26825e4086182ea75" translate="yes" xml:space="preserve">
          <source>You can change both the effective gid and the real gid at the same time by using &lt;code&gt;POSIX::setgid()&lt;/code&gt; (use only a single numeric argument). Changes to &lt;code&gt;$)&lt;/code&gt; require a check to &lt;code&gt;$!&lt;/code&gt; to detect any possible errors after an attempted change.</source>
          <target state="translated">Puede cambiar tanto el gid efectivo como el gid real al mismo tiempo usando &lt;code&gt;POSIX::setgid()&lt;/code&gt; (use solo un &amp;uacute;nico argumento num&amp;eacute;rico). &amp;iexcl;Los cambios a &lt;code&gt;$)&lt;/code&gt; requieren un cheque a &lt;code&gt;$!&lt;/code&gt; para detectar posibles errores despu&amp;eacute;s de un intento de cambio.</target>
        </trans-unit>
        <trans-unit id="59d9719ad7d1133b142fc0ce7a1557db385a25a2" translate="yes" xml:space="preserve">
          <source>You can change both the effective uid and the real uid at the same time by using &lt;code&gt;POSIX::setuid()&lt;/code&gt; . Changes to &lt;code&gt;$&amp;gt;&lt;/code&gt; require a check to &lt;code&gt;$!&lt;/code&gt; to detect any possible errors after an attempted change.</source>
          <target state="translated">Puede cambiar tanto el uid efectivo como el uid real al mismo tiempo usando &lt;code&gt;POSIX::setuid()&lt;/code&gt; . &amp;iexcl;Los cambios a &lt;code&gt;$&amp;gt;&lt;/code&gt; requieren un cheque a &lt;code&gt;$!&lt;/code&gt; para detectar posibles errores despu&amp;eacute;s de un intento de cambio.</target>
        </trans-unit>
        <trans-unit id="5c077fd437c354bc24be98de6cf2487d02c8a685" translate="yes" xml:space="preserve">
          <source>You can change both the effective uid and the real uid at the same time by using &lt;code&gt;POSIX::setuid()&lt;/code&gt;. Changes to &lt;code&gt;$&amp;gt;&lt;/code&gt; require a check to &lt;code&gt;$!&lt;/code&gt; to detect any possible errors after an attempted change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57121de58d74f1a64c5b126aeda69842259d90c4" translate="yes" xml:space="preserve">
          <source>You can change both the real gid and the effective gid at the same time by using &lt;code&gt;POSIX::setgid()&lt;/code&gt; . Changes to &lt;code&gt;$(&lt;/code&gt; require a check to &lt;code&gt;$!&lt;/code&gt; to detect any possible errors after an attempted change.</source>
          <target state="translated">Puede cambiar tanto el gid real como el efectivo al mismo tiempo usando &lt;code&gt;POSIX::setgid()&lt;/code&gt; . Cambios en &lt;code&gt;$(&lt;/code&gt; requiere una verificaci&amp;oacute;n en &lt;code&gt;$!&lt;/code&gt; Para detectar posibles errores despu&amp;eacute;s de un intento de cambio.</target>
        </trans-unit>
        <trans-unit id="11e8003bdfd58a10a9ce8d2ff75b8afc3ab5c059" translate="yes" xml:space="preserve">
          <source>You can change both the real gid and the effective gid at the same time by using &lt;code&gt;POSIX::setgid()&lt;/code&gt;. Changes to &lt;code&gt;$(&lt;/code&gt; require a check to &lt;code&gt;$!&lt;/code&gt; to detect any possible errors after an attempted change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09c5405e2b602271ef0ef2f3017aa480c6d1079" translate="yes" xml:space="preserve">
          <source>You can change options from</source>
          <target state="translated">Puedes cambiar las opciones de</target>
        </trans-unit>
        <trans-unit id="d6315b4e978f53eeff4964ee1909c618fbc90cfa" translate="yes" xml:space="preserve">
          <source>You can change the underlying module that does the low-level math operations by using:</source>
          <target state="translated">Puede cambiar el módulo subyacente que hace las operaciones matemáticas de bajo nivel usando:</target>
        </trans-unit>
        <trans-unit id="ac0967b2c568b641678650e45e2b539ad81b2c7d" translate="yes" xml:space="preserve">
          <source>You can change this backend library by using:</source>
          <target state="translated">Puedes cambiar esta biblioteca de fondo usando:</target>
        </trans-unit>
        <trans-unit id="e271d7bee0eb9af50859c996a87b147d97ca08b1" translate="yes" xml:space="preserve">
          <source>You can change this by using:</source>
          <target state="translated">Puedes cambiar esto usando:</target>
        </trans-unit>
        <trans-unit id="a8c0aadd56b5a3424b47f02ac266fd1fef206d7e" translate="yes" xml:space="preserve">
          <source>You can check the values of these variables on your system with</source>
          <target state="translated">Puedes comprobar los valores de estas variables en tu sistema con</target>
        </trans-unit>
        <trans-unit id="19186d4d2aa107ae87a9009974a30d3e15b94cd1" translate="yes" xml:space="preserve">
          <source>You can choose if you want to always install (yes), never install (no) or be always asked. In the latter case you can set the default answer for the question to yes (ask/yes) or no (ask/no).</source>
          <target state="translated">Puedes elegir si quieres instalar siempre (sí),nunca instalar (no)o que te pregunten siempre.En este último caso puedes establecer la respuesta por defecto para la pregunta en sí (ask/yes)o no (ask/no).</target>
        </trans-unit>
        <trans-unit id="432283768bc5fcc2cbc19482faa7326a0cb0200d" translate="yes" xml:space="preserve">
          <source>You can compare $s1 and $s2 above with</source>
          <target state="translated">Puedes comparar los $s1 y $s2 de arriba con</target>
        </trans-unit>
        <trans-unit id="5cd28c9babbe3b0c5cce52c7e8b6bd3de247f8a7" translate="yes" xml:space="preserve">
          <source>You can compile a special debugging version of Perl, which allows you to use the &lt;code&gt;-D&lt;/code&gt; option of Perl to tell more about what Perl is doing. But sometimes there is no alternative than to dive in with a debugger, either to see the stack trace of a core dump (very useful in a bug report), or trying to figure out what went wrong before the core dump happened, or how did we end up having wrong or unexpected results.</source>
          <target state="translated">Puede compilar una versi&amp;oacute;n de depuraci&amp;oacute;n especial de Perl, que le permite usar la opci&amp;oacute;n &lt;code&gt;-D&lt;/code&gt; de Perl para contar m&amp;aacute;s sobre lo que est&amp;aacute; haciendo Perl. Pero a veces no hay otra alternativa que sumergirse en un depurador, ya sea para ver el rastro de la pila de un volcado del n&amp;uacute;cleo (muy &amp;uacute;til en un informe de error), o tratando de averiguar qu&amp;eacute; sali&amp;oacute; mal antes de que ocurriera el volcado del n&amp;uacute;cleo, o c&amp;oacute;mo sucedi&amp;oacute; terminamos obteniendo resultados incorrectos o inesperados.</target>
        </trans-unit>
        <trans-unit id="87041007fca4b20217db14f0fb86e591cf75c1a4" translate="yes" xml:space="preserve">
          <source>You can compile perl as a universal binary (built for both ppc and intel). In Mac OS X 10.4 &quot;Tiger&quot;, you must export the 'u' variant of the SDK:</source>
          <target state="translated">Puedes compilar perl como un binario universal (construido tanto para ppc como para intel).En Mac OS X 10.4 &quot;Tiger&quot;,debes exportar la variante 'u' del SDK:</target>
        </trans-unit>
        <trans-unit id="fa58ab427e59cc304b800becf278713e2a473dc4" translate="yes" xml:space="preserve">
          <source>You can compute spherical distances, called &lt;b&gt;great circle distances&lt;/b&gt;, by importing the great_circle_distance() function:</source>
          <target state="translated">Puede calcular distancias esf&amp;eacute;ricas, llamadas distancias de &lt;b&gt;gran c&amp;iacute;rculo&lt;/b&gt; , importando la funci&amp;oacute;n great_circle_distance ():</target>
        </trans-unit>
        <trans-unit id="e0e56eaab18c95d9fc59dbbcb6020dceb739e042" translate="yes" xml:space="preserve">
          <source>You can configure &lt;code&gt;CPAN.pm&lt;/code&gt; to automatically use this option too:</source>
          <target state="translated">Puede configurar &lt;code&gt;CPAN.pm&lt;/code&gt; para usar autom&amp;aacute;ticamente esta opci&amp;oacute;n tambi&amp;eacute;n:</target>
        </trans-unit>
        <trans-unit id="0a61232f0a79e5aed1425905026fb34cb9f7fecb" translate="yes" xml:space="preserve">
          <source>You can consult &lt;a href=&quot;http://dev.perl.org/perl5&quot;&gt;releases&lt;/a&gt; to determine the current stable release of Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293714b103bfe6b9c84dcfd43aa3c2e3fb61cd9e" translate="yes" xml:space="preserve">
          <source>You can consult &lt;a href=&quot;https://dev.perl.org/perl5&quot;&gt;releases&lt;/a&gt; to determine the current stable release of Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1c9e7ff6eff00a8559dcb5573a19d0be7a958f" translate="yes" xml:space="preserve">
          <source>You can control the maximum array and hash recursion depths by modifying &lt;code&gt;$Storable::recursion_limit&lt;/code&gt; and &lt;code&gt;$Storable::recursion_limit_hash&lt;/code&gt; respectively. Either can be set to &lt;code&gt;-1&lt;/code&gt; to prevent any depth checks, though this isn't recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f34654d1547e79b58fc6ed76c2c867b2e4c13c5" translate="yes" xml:space="preserve">
          <source>You can control which DBM library you use by loading that library before you call &lt;a href=&quot;#dbmopen-HASH%2CDBNAME%2CMASK&quot;&gt;&lt;code&gt;dbmopen&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d461022ba384996bf77747145dbd16f78eb1d3d" translate="yes" xml:space="preserve">
          <source>You can control which DBM library you use by loading that library before you call dbmopen():</source>
          <target state="translated">Puedes controlar qué librería DBM usas cargando esa librería antes de llamar a dbmopen():</target>
        </trans-unit>
        <trans-unit id="b63a08beb712c643691cdd9c1e77329f30769a82" translate="yes" xml:space="preserve">
          <source>You can create endless loops if the things you serialize via freeze() (for instance) point back to the object we're trying to serialize in the hook.</source>
          <target state="translated">Puedes crear bucles interminables si las cosas que serializas a través de freeze()(por ejemplo)apuntan al objeto que estamos tratando de serializar en el gancho.</target>
        </trans-unit>
        <trans-unit id="adf4a1b481a315cc2b37fc68aeedf4fc3bec4612" translate="yes" xml:space="preserve">
          <source>You can create your own names for characters, and override official ones when using &lt;code&gt;\N{...}&lt;/code&gt;. See &lt;a href=&quot;charnames#CUSTOM-ALIASES&quot;&gt;&quot;CUSTOM ALIASES&quot; in charnames&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146fea6b6c62fcc84c6add6c6816ffff9347ea9e" translate="yes" xml:space="preserve">
          <source>You can define for all tie types an UNTIE method that will be called at untie(). See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&quot;The &lt;code&gt;untie&lt;/code&gt; Gotcha&quot;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc300aa058401f33bcdc1d74e140c0960d7fa90" translate="yes" xml:space="preserve">
          <source>You can define for all tie types an UNTIE method that will be called at untie(). See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below.</source>
          <target state="translated">Puede definir para todos los tipos de v&amp;iacute;nculos un m&amp;eacute;todo UNTIE que se llamar&amp;aacute; en untie (). Vea &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The Untie Gotcha a&lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cd22b39009d785c43f4f9453185f24b021494e27" translate="yes" xml:space="preserve">
          <source>You can define your own binary character properties by defining subroutines whose names begin with &lt;code&gt;&quot;In&quot;&lt;/code&gt; or &lt;code&gt;&quot;Is&quot;&lt;/code&gt; . (The experimental feature &lt;a href=&quot;perlre#(%3f%5b-%5d)&quot;&gt;(?[ ]) in perlre&lt;/a&gt; provides an alternative which allows more complex definitions.) The subroutines can be defined in any package. The user-defined properties can be used in the regular expression &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt; constructs; if you are using a user-defined property from a package other than the one you are in, you must specify its package in the &lt;code&gt;\p{}&lt;/code&gt; or &lt;code&gt;\P{}&lt;/code&gt; construct.</source>
          <target state="translated">Puede definir sus propias propiedades de car&amp;aacute;cter binario definiendo subrutinas cuyos nombres comiencen con &lt;code&gt;&quot;In&quot;&lt;/code&gt; o &lt;code&gt;&quot;Is&quot;&lt;/code&gt; . (La caracter&amp;iacute;stica experimental &lt;a href=&quot;perlre#(%3f%5b-%5d)&quot;&gt;(? []) En perlre&lt;/a&gt; proporciona una alternativa que permite definiciones m&amp;aacute;s complejas.) Las subrutinas se pueden definir en cualquier paquete. Las propiedades definidas por el usuario se pueden utilizar en las construcciones de expresi&amp;oacute;n regular &lt;code&gt;\p{}&lt;/code&gt; y &lt;code&gt;\P{}&lt;/code&gt; ; si est&amp;aacute; usando una propiedad definida por el usuario de un paquete diferente al que est&amp;aacute;, debe especificar su paquete en la construcci&amp;oacute;n &lt;code&gt;\p{}&lt;/code&gt; o &lt;code&gt;\P{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="581b021633b88b8ca77368d47883217c97fc358f" translate="yes" xml:space="preserve">
          <source>You can define your own binary character properties by defining subroutines whose names begin with &lt;code&gt;&quot;In&quot;&lt;/code&gt; or &lt;code&gt;&quot;Is&quot;&lt;/code&gt;. (The experimental feature &lt;a href=&quot;perlre#%28%3F%5B-%5D%29&quot;&gt;&quot;(?[ ])&quot; in perlre&lt;/a&gt; provides an alternative which allows more complex definitions.) The subroutines can be defined in any package. They override any Unicode properties expressed as the same names. The user-defined properties can be used in the regular expression &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt; constructs; if you are using a user-defined property from a package other than the one you are in, you must specify its package in the &lt;code&gt;\p{}&lt;/code&gt; or &lt;code&gt;\P{}&lt;/code&gt; construct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea972cce46eda2a3f1a7af312987a64fafa63f8" translate="yes" xml:space="preserve">
          <source>You can define your own character properties and use them in the regular expression with the &lt;code&gt;\p{}&lt;/code&gt; or &lt;code&gt;\P{}&lt;/code&gt; construct. See &lt;a href=&quot;#User-Defined-Character-Properties&quot;&gt;&quot;User-Defined Character Properties&quot;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107745b2e3d0c30dbe6a28beb79e3db6db75115c" translate="yes" xml:space="preserve">
          <source>You can define your own character properties and use them in the regular expression with the &lt;code&gt;\p{}&lt;/code&gt; or &lt;code&gt;\P{}&lt;/code&gt; construct. See &lt;a href=&quot;#User-Defined-Character-Properties&quot;&gt;User-Defined Character Properties&lt;/a&gt; for more details.</source>
          <target state="translated">Puede definir sus propias propiedades de car&amp;aacute;cter y usarlas en la expresi&amp;oacute;n regular con la construcci&amp;oacute;n &lt;code&gt;\p{}&lt;/code&gt; o &lt;code&gt;\P{}&lt;/code&gt; . Consulte &lt;a href=&quot;#User-Defined-Character-Properties&quot;&gt;Propiedades de caracteres definidas por el usuario&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="d07e5c5285c0856948c6976c6c8552f314a8bd96" translate="yes" xml:space="preserve">
          <source>You can define your own custom character classes, by putting into your pattern in the appropriate place(s), a list of all the characters you want in the set. You do this by enclosing the list within &lt;code&gt;[]&lt;/code&gt; bracket characters. These are called &quot;bracketed character classes&quot; when we are being precise, but often the word &quot;bracketed&quot; is dropped. (Dropping it usually doesn't cause confusion.) This means that the &lt;code&gt;&quot;[&quot;&lt;/code&gt; character is another metacharacter. It doesn't match anything just by itself; it is used only to tell Perl that what follows it is a bracketed character class. If you want to match a literal left square bracket, you must escape it, like &lt;code&gt;&quot;\[&quot;&lt;/code&gt;. The matching &lt;code&gt;&quot;]&quot;&lt;/code&gt; is also a metacharacter; again it doesn't match anything by itself, but just marks the end of your custom class to Perl. It is an example of a &quot;sometimes metacharacter&quot;. It isn't a metacharacter if there is no corresponding &lt;code&gt;&quot;[&quot;&lt;/code&gt;, and matches its literal self:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9472dcd36f94375050dea75545931297e23f500b" translate="yes" xml:space="preserve">
          <source>You can detect the OS mode using &quot;isainfo -v&quot;, e.g.</source>
          <target state="translated">Puedes detectar el modo OS usando &quot;isainfo -v&quot;,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="ac56709f3e046a38d3f4f58f4d03fe93d1a1a7f4" translate="yes" xml:space="preserve">
          <source>You can determine your system endianness with this incantation:</source>
          <target state="translated">Puedes determinar tu sistema de guarda con este conjuro:</target>
        </trans-unit>
        <trans-unit id="d720ebfa9c94db62cff235f1fc566ea523fe6220" translate="yes" xml:space="preserve">
          <source>You can directly disable thread support with one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e10ee4faf1824e9c84d1fdce76b93c2ae5f9fd0" translate="yes" xml:space="preserve">
          <source>You can disable &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; resets on fail with the &lt;code&gt;c&lt;/code&gt; flag, documented in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; and &lt;a href=&quot;perlreref&quot;&gt;perlreref&lt;/a&gt;. Subsequent matches start where the last successful match ended (the value of &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt;) even if a match on the same string has failed in the meantime. In this case, the match after the &lt;code&gt;while()&lt;/code&gt; loop starts at the &lt;code&gt;a&lt;/code&gt; (where the last match stopped), and since it does not use any anchor it can skip over the &lt;code&gt;a&lt;/code&gt; to find &lt;code&gt;44&lt;/code&gt; .</source>
          <target state="translated">Puede deshabilitar &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; restablece en caso de error con el indicador &lt;code&gt;c&lt;/code&gt; , documentado en &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; y &lt;a href=&quot;perlreref&quot;&gt;perlreref&lt;/a&gt; . Las coincidencias posteriores comienzan donde termin&amp;oacute; la &amp;uacute;ltima coincidencia exitosa (el valor de &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; ) incluso si una coincidencia en la misma cadena ha fallado mientras tanto. En este caso, la coincidencia despu&amp;eacute;s del bucle &lt;code&gt;while()&lt;/code&gt; comienza en &lt;code&gt;a&lt;/code&gt; (donde se detuvo la &amp;uacute;ltima coincidencia), y dado que no usa ning&amp;uacute;n ancla, puede omitir la &lt;code&gt;a&lt;/code&gt; para encontrar &lt;code&gt;44&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="762ba82b0f7c5bd42e2bb3f028578d05bfa6f570" translate="yes" xml:space="preserve">
          <source>You can disable &lt;code&gt;pos()&lt;/code&gt; resets on fail with the &lt;code&gt;c&lt;/code&gt; modifier, documented in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; and &lt;a href=&quot;perlreref&quot;&gt;perlreref&lt;/a&gt;. Subsequent matches start where the last successful match ended (the value of &lt;code&gt;pos()&lt;/code&gt;) even if a match on the same string has failed in the meantime. In this case, the match after the &lt;code&gt;while()&lt;/code&gt; loop starts at the &lt;code&gt;a&lt;/code&gt; (where the last match stopped), and since it does not use any anchor it can skip over the &lt;code&gt;a&lt;/code&gt; to find &lt;code&gt;44&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458912b1d0d0c5a77d13c3e7ffc4ddad22f59daf" translate="yes" xml:space="preserve">
          <source>You can dispense with numbers altogether and create named capture groups. The notation is &lt;code&gt;(?&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;...)&lt;/code&gt; to declare and &lt;code&gt;\g{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; to reference. (To be compatible with .Net regular expressions, &lt;code&gt;\g{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; may also be written as &lt;code&gt;\k{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt;, &lt;code&gt;\k&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;\k'&lt;i&gt;name&lt;/i&gt;'&lt;/code&gt;.)</source>
          <target state="translated">Puede prescindir de los n&amp;uacute;meros por completo y crear grupos de captura con nombre. La notaci&amp;oacute;n es &lt;code&gt;(?&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;...)&lt;/code&gt; para declarar y &lt;code&gt;\g{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; para hacer referencia. (Para ser compatible con las expresiones regulares .Net, &lt;code&gt;\g{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; tambi&amp;eacute;n puede escribirse como &lt;code&gt;\k{&lt;i&gt;name&lt;/i&gt;}&lt;/code&gt; , &lt;code&gt;\k&amp;lt;&lt;i&gt;name&lt;/i&gt;&amp;gt;&lt;/code&gt; o &lt;code&gt;\k'&lt;i&gt;name&lt;/i&gt;'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b18d3c8d444331784ad87d0c9066604ce83188e2" translate="yes" xml:space="preserve">
          <source>You can do a similar thing with the value of &lt;code&gt;$0&lt;/code&gt; , which holds the script name. That might hold a relative path, but &lt;code&gt;rel2abs&lt;/code&gt; can turn it into an absolute path. Once you have the</source>
          <target state="translated">Puede hacer algo similar con el valor de &lt;code&gt;$0&lt;/code&gt; , que contiene el nombre del script. Eso podr&amp;iacute;a contener una ruta relativa, pero &lt;code&gt;rel2abs&lt;/code&gt; puede convertirla en una ruta absoluta. Una vez que tenga el</target>
        </trans-unit>
        <trans-unit id="708b113fd606c824d990b531e5ec634fa7999b38" translate="yes" xml:space="preserve">
          <source>You can do a similar thing with the value of &lt;code&gt;$0&lt;/code&gt;, which holds the script name. That might hold a relative path, but &lt;code&gt;rel2abs&lt;/code&gt; can turn it into an absolute path. Once you have the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb0b5304ad3a2505b033f6205316fe91cd8667f" translate="yes" xml:space="preserve">
          <source>You can do it yourself:</source>
          <target state="translated">Puedes hacerlo tú mismo:</target>
        </trans-unit>
        <trans-unit id="3df3594ac830b3b367e2449531bc9481e6c2c743" translate="yes" xml:space="preserve">
          <source>You can do some customization by setting up a</source>
          <target state="translated">Puedes hacer alguna personalización configurando un</target>
        </trans-unit>
        <trans-unit id="e36b0a11441d7f370d1c8f3b9a2c5df0ed14fec0" translate="yes" xml:space="preserve">
          <source>You can do the same thing with foreach and a match using the c flag and the \G anchor, if you do not mind your entire file being in memory at the end.</source>
          <target state="translated">Puedes hacer lo mismo con el frente y el fósforo usando la bandera c y el ancla \G,si no te importa que todo tu archivo esté en la memoria al final.</target>
        </trans-unit>
        <trans-unit id="94475bd1aa00e25358f732725451e1c48c0023a3" translate="yes" xml:space="preserve">
          <source>You can do this by filtering a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects based on your criteria. For example, to extract only files that have the string &lt;code&gt;foo&lt;/code&gt; in their title, you would use:</source>
          <target state="translated">Puede hacer esto filtrando una lista de objetos &lt;code&gt;Archive::Tar::File&lt;/code&gt; seg&amp;uacute;n sus criterios. Por ejemplo, para extraer solo archivos que tengan la cadena &lt;code&gt;foo&lt;/code&gt; en su t&amp;iacute;tulo, usar&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="e3b58ea141bf0b2ab8308eba04e2fe1187709b38" translate="yes" xml:space="preserve">
          <source>You can do this in</source>
          <target state="translated">Puedes hacer esto en</target>
        </trans-unit>
        <trans-unit id="0e82d2d4c5fee3c3455ee13c93472ac8305c2886" translate="yes" xml:space="preserve">
          <source>You can do various useful things to lists:</source>
          <target state="translated">Puedes hacer varias cosas útiles con las listas:</target>
        </trans-unit>
        <trans-unit id="2293c83d7e9f41c388c0c9ef674c18441a39f91a" translate="yes" xml:space="preserve">
          <source>You can download the NDK from &lt;a href=&quot;http://developer.blackberry.com/native/downloads/&quot;&gt;http://developer.blackberry.com/native/downloads/&lt;/a&gt;.</source>
          <target state="translated">Puede descargar el NDK desde &lt;a href=&quot;http://developer.blackberry.com/native/downloads/&quot;&gt;http://developer.blackberry.com/native/downloads/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccab4c9ebd3c859889355271883dcf42caad69df" translate="yes" xml:space="preserve">
          <source>You can download the NDK from &lt;a href=&quot;https://developer.android.com/tools/sdk/ndk/index.html&quot;&gt;https://developer.android.com/tools/sdk/ndk/index.html&lt;/a&gt;. You'll want the normal, non-legacy version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34382fbd280654c58cbfc9d0110d2c77f2d872d7" translate="yes" xml:space="preserve">
          <source>You can easily do this yourself too by checking each level of the hash before you move onto the next level. This is essentially what &lt;a href=&quot;Data::Diver&quot;&gt;Data::Diver&lt;/a&gt; does for you:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2add1e5f384d4e366c7f0bda81dca221784f796a" translate="yes" xml:space="preserve">
          <source>You can easily do this yourself too by checking each level of the hash before you move onto the next level. This is essentially what &lt;a href=&quot;http://search.cpan.org/perldoc/Data::Diver&quot;&gt;Data::Diver&lt;/a&gt; does for you:</source>
          <target state="translated">Tambi&amp;eacute;n puede hacerlo usted mismo f&amp;aacute;cilmente verificando cada nivel del hash antes de pasar al siguiente nivel. Esto es esencialmente lo que &lt;a href=&quot;http://search.cpan.org/perldoc/Data::Diver&quot;&gt;Data :: Diver&lt;/a&gt; hace por usted:</target>
        </trans-unit>
        <trans-unit id="aca937c9b8249ef74f6bdd2a2c24ef2b2c942c33" translate="yes" xml:space="preserve">
          <source>You can effect a sleep of 250 milliseconds this way:</source>
          <target state="translated">De esta manera se puede lograr un sueño de 250 milisegundos:</target>
        </trans-unit>
        <trans-unit id="2cf03e7d8c028c108e1f07b9fdfd93ec5a0911cb" translate="yes" xml:space="preserve">
          <source>You can either get the latest perl-for-amiga source from Ninemoons and extract it with:</source>
          <target state="translated">Puedes obtener la última fuente de perl-por-amiga de Ninemoons y extraerla con:</target>
        </trans-unit>
        <trans-unit id="dc1b686bd86f9825c512e3b19e24ca27d9b0e88c" translate="yes" xml:space="preserve">
          <source>You can embed Pod documentation in your Perl modules and scripts. Start your documentation with an empty line, a &quot;=head1&quot; command at the beginning, and end it with a &quot;=cut&quot; command and an empty line. The &lt;b&gt;perl&lt;/b&gt; executable will ignore the Pod text. You can place a Pod statement where &lt;b&gt;perl&lt;/b&gt; expects the beginning of a new statement, but not within a statement, as that would result in an error. See any of the supplied library modules for examples.</source>
          <target state="translated">Puede incrustar la documentaci&amp;oacute;n de Pod en sus m&amp;oacute;dulos y scripts de Perl. Comience su documentaci&amp;oacute;n con una l&amp;iacute;nea vac&amp;iacute;a, un comando &quot;= head1&quot; al principio, y term&amp;iacute;nela con un comando &quot;= cut&quot; y una l&amp;iacute;nea vac&amp;iacute;a. El ejecutable de &lt;b&gt;perl&lt;/b&gt; ignorar&amp;aacute; el texto del Pod. Puede colocar una declaraci&amp;oacute;n de Pod donde &lt;b&gt;perl&lt;/b&gt; espera el comienzo de una nueva declaraci&amp;oacute;n, pero no dentro de una declaraci&amp;oacute;n, ya que eso resultar&amp;iacute;a en un error. Consulte cualquiera de los m&amp;oacute;dulos de biblioteca suministrados para ver ejemplos.</target>
        </trans-unit>
        <trans-unit id="4e8901a24d5203f278555dd6630e84e6495d5c32" translate="yes" xml:space="preserve">
          <source>You can enable automatic UTF-8-ification of your standard file handles, default &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; layer, and &lt;code&gt;@ARGV&lt;/code&gt; by using either the &lt;code&gt;-C&lt;/code&gt; command line switch or the &lt;code&gt;PERL_UNICODE&lt;/code&gt; environment variable, see &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for the documentation of the &lt;code&gt;-C&lt;/code&gt; switch.</source>
          <target state="translated">Puede habilitar la UTF-8-ificaci&amp;oacute;n autom&amp;aacute;tica de sus identificadores de archivo est&amp;aacute;ndar, la capa &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; predeterminada y &lt;code&gt;@ARGV&lt;/code&gt; utilizando el &lt;code&gt;PERL_UNICODE&lt;/code&gt; l&amp;iacute;nea de comandos &lt;code&gt;-C&lt;/code&gt; o la variable de entorno PERL_UNICODE ; consulte &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; para obtener la documentaci&amp;oacute;n del modificador &lt;code&gt;-C&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82c6bb69edc2a1dcc5ef223d908dad512d68780d" translate="yes" xml:space="preserve">
          <source>You can enable automatic UTF-8-ification of your standard file handles, default &lt;code&gt;open()&lt;/code&gt; layer, and &lt;code&gt;@ARGV&lt;/code&gt; by using either the &lt;code&gt;-C&lt;/code&gt; command line switch or the &lt;code&gt;PERL_UNICODE&lt;/code&gt; environment variable, see &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;perlrun&lt;/a&gt; for the documentation of the &lt;code&gt;-C&lt;/code&gt; switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7d65e57af61c849fd344c325e8ff8558b6ea76" translate="yes" xml:space="preserve">
          <source>You can enable this program wide by setting the package variable &lt;code&gt;$Params::Check::VERBOSE&lt;/code&gt; to a true value. For details, see the section on &lt;code&gt;Global Variables&lt;/code&gt; below.</source>
          <target state="translated">Puede habilitar este programa en todo el mundo estableciendo la variable de paquete &lt;code&gt;$Params::Check::VERBOSE&lt;/code&gt; en un valor verdadero. Para obtener m&amp;aacute;s detalles, consulte la secci&amp;oacute;n sobre &lt;code&gt;Global Variables&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bd9f5fdd175da39fdf1b2aee95117b6f24089729" translate="yes" xml:space="preserve">
          <source>You can even add a line to the beginning of a file, since the current line prints at the end of the loop:</source>
          <target state="translated">Incluso puedes añadir una línea al principio de un archivo,ya que la línea actual se imprime al final del bucle:</target>
        </trans-unit>
        <trans-unit id="469cbe63338eb0799dde10314ea7997fd8799ab7" translate="yes" xml:space="preserve">
          <source>You can even chain the operations together as usual:</source>
          <target state="translated">Incluso puedes encadenar las operaciones como siempre:</target>
        </trans-unit>
        <trans-unit id="2aadc431d196d9bef8923dcadb3a5f0c2d7f67b9" translate="yes" xml:space="preserve">
          <source>You can even set them to pipe commands. For example, this automatically filters compressed arguments through &lt;b&gt;gzip&lt;/b&gt;:</source>
          <target state="translated">Incluso puede configurarlos para canalizar comandos. Por ejemplo, esto filtra autom&amp;aacute;ticamente los argumentos comprimidos a trav&amp;eacute;s de &lt;b&gt;gzip&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="5959df3dd95aca5e6820f2cd7c4389121f214d69" translate="yes" xml:space="preserve">
          <source>You can examine the @INC variable from within a perl program to see the order in which Perl searches these directories.</source>
          <target state="translated">Puedes examinar la variable @INC desde un programa de perl para ver el orden en que Perl busca en estos directorios.</target>
        </trans-unit>
        <trans-unit id="b4227d7f6f90687ed1f952d3300efda038a669dd" translate="yes" xml:space="preserve">
          <source>You can examine your last commit with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b698e2e22416ac9eb31f0b1d16a0dd9b5e075ed0" translate="yes" xml:space="preserve">
          <source>You can expand the macros in a</source>
          <target state="translated">Puedes expandir las macros en un</target>
        </trans-unit>
        <trans-unit id="c6984ea0cc547a7d94d70f8b198039214ca8c15f" translate="yes" xml:space="preserve">
          <source>You can explore the endianness of your platform by unpacking a data structure packed in native format such as:</source>
          <target state="translated">Puede explorar la endianidad de su plataforma desempacando una estructura de datos empaquetada en formato nativo como:</target>
        </trans-unit>
        <trans-unit id="25084ad020c81115ae6c13e15f94c38c747b7c70" translate="yes" xml:space="preserve">
          <source>You can explore various information from the Unicode data files using the &lt;code&gt;Unicode::UCD&lt;/code&gt; module.</source>
          <target state="translated">Puede explorar diversa informaci&amp;oacute;n de los archivos de datos Unicode usando el m&amp;oacute;dulo &lt;code&gt;Unicode::UCD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="214226a1ed44146fabbcdf1d7ff955aea72e1c83" translate="yes" xml:space="preserve">
          <source>You can extend the data conversion shortcuts menu, so for example you can display an SV's IV value with one click, without doing any typing. To do that simply edit ~/.ddd/init file and add after:</source>
          <target state="translated">Puede ampliar el menú de atajos de conversión de datos,de modo que,por ejemplo,puede mostrar el valor IV de un SV con un solo clic,sin necesidad de escribir nada.Para ello,simplemente edite el archivo ~/.ddd/init y añada después:</target>
        </trans-unit>
        <trans-unit id="9f3b19dace5e1ee6e80db897c83810c886662b0c" translate="yes" xml:space="preserve">
          <source>You can fake a static variable by using a lexical variable which goes out of scope. In this example, you define the subroutine &lt;code&gt;counter&lt;/code&gt; , and it uses the lexical variable &lt;code&gt;$count&lt;/code&gt; . Since you wrap this in a BEGIN block, &lt;code&gt;$count&lt;/code&gt; is defined at compile-time, but also goes out of scope at the end of the BEGIN block. The BEGIN block also ensures that the subroutine and the value it uses is defined at compile-time so the subroutine is ready to use just like any other subroutine, and you can put this code in the same place as other subroutines in the program text (i.e. at the end of the code, typically). The subroutine &lt;code&gt;counter&lt;/code&gt; still has a reference to the data, and is the only way you can access the value (and each time you do, you increment the value). The data in chunk of memory defined by &lt;code&gt;$count&lt;/code&gt; is private to &lt;code&gt;counter&lt;/code&gt; .</source>
          <target state="translated">Puede falsificar una variable est&amp;aacute;tica mediante el uso de una variable l&amp;eacute;xica que sale de su alcance. En este ejemplo, usted define el &lt;code&gt;counter&lt;/code&gt; subrutina y usa la variable l&amp;eacute;xica &lt;code&gt;$count&lt;/code&gt; . Dado que envuelve esto en un bloque BEGIN, &lt;code&gt;$count&lt;/code&gt; se define en tiempo de compilaci&amp;oacute;n, pero tambi&amp;eacute;n sale del alcance al final del bloque BEGIN. El bloque BEGIN tambi&amp;eacute;n asegura que la subrutina y el valor que usa se definen en tiempo de compilaci&amp;oacute;n para que la subrutina est&amp;eacute; lista para usarse como cualquier otra subrutina, y puede poner este c&amp;oacute;digo en el mismo lugar que otras subrutinas en el texto del programa ( es decir, al final del c&amp;oacute;digo, normalmente). El &lt;code&gt;counter&lt;/code&gt; subrutinastodav&amp;iacute;a tiene una referencia a los datos, y es la &amp;uacute;nica forma en que puede acceder al valor (y cada vez que lo hace, incrementa el valor). Los datos en la porci&amp;oacute;n de memoria definida por &lt;code&gt;$count&lt;/code&gt; son privados para el &lt;code&gt;counter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d87a4ece96c240d1ec10cdcea1f450090af5432d" translate="yes" xml:space="preserve">
          <source>You can fake a static variable by using a lexical variable which goes out of scope. In this example, you define the subroutine &lt;code&gt;counter&lt;/code&gt;, and it uses the lexical variable &lt;code&gt;$count&lt;/code&gt;. Since you wrap this in a BEGIN block, &lt;code&gt;$count&lt;/code&gt; is defined at compile-time, but also goes out of scope at the end of the BEGIN block. The BEGIN block also ensures that the subroutine and the value it uses is defined at compile-time so the subroutine is ready to use just like any other subroutine, and you can put this code in the same place as other subroutines in the program text (i.e. at the end of the code, typically). The subroutine &lt;code&gt;counter&lt;/code&gt; still has a reference to the data, and is the only way you can access the value (and each time you do, you increment the value). The data in chunk of memory defined by &lt;code&gt;$count&lt;/code&gt; is private to &lt;code&gt;counter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bfa69a23c16121bcf7918a14cd66f9c3c6d27f" translate="yes" xml:space="preserve">
          <source>You can find documentation for this module with the perldoc command.</source>
          <target state="translated">Puede encontrar la documentación de este módulo con el comando perldoc.</target>
        </trans-unit>
        <trans-unit id="2ec893daacd3a612f16b5ff8e3b0ca737de8a9f5" translate="yes" xml:space="preserve">
          <source>You can find more info about Configure's command line switches in the</source>
          <target state="translated">Puedes encontrar más información sobre los interruptores de la línea de comando de Configurar en el</target>
        </trans-unit>
        <trans-unit id="60d30b2a5683150ee021b2d2efe823e684b28b49" translate="yes" xml:space="preserve">
          <source>You can find out whether Perl considers &quot;long double&quot; to be the default floating-point size to use on your platform via &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt;:</source>
          <target state="translated">Puede averiguar si Perl considera que &quot;doble largo&quot; es el tama&amp;ntilde;o de punto flotante predeterminado para usar en su plataforma a trav&amp;eacute;s de la &lt;a href=&quot;../config&quot;&gt;configuraci&amp;oacute;n&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0a14665644553d1c1ca40b3a369c0cfc1687919b" translate="yes" xml:space="preserve">
          <source>You can find out whether Perl considers &quot;long double&quot; to be the default floating-point size to use on your platform via &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt;:</source>
          <target state="translated">Puede averiguar si Perl considera que &quot;doble largo&quot; es el tama&amp;ntilde;o de punto flotante predeterminado para usar en su plataforma a trav&amp;eacute;s de la &lt;a href=&quot;config&quot;&gt;configuraci&amp;oacute;n&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a8c0376796b23fff5ec186fab67f5500801dd3ed" translate="yes" xml:space="preserve">
          <source>You can find out whether your Perl supports quads via &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt;:</source>
          <target state="translated">Puede averiguar si su Perl admite quads a trav&amp;eacute;s de &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="977c50ef8718482d8b17abe375d1697e8f9a2d66" translate="yes" xml:space="preserve">
          <source>You can find out whether your Perl supports quads via &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt;:</source>
          <target state="translated">Puede averiguar si su Perl admite quads a trav&amp;eacute;s de &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="58566ff87e227e47e0a6175cb880b0492ff07d0d" translate="yes" xml:space="preserve">
          <source>You can find the bytes that make up a UTF-8 sequence with</source>
          <target state="translated">Puedes encontrar los bytes que componen una secuencia UTF-8 con</target>
        </trans-unit>
        <trans-unit id="d66bda1e5630ce31a16d647268de04ca99f2d093" translate="yes" xml:space="preserve">
          <source>You can find the full DJGPP distribution on any of the mirrors listed here:</source>
          <target state="translated">Puedes encontrar la distribución completa de DJGPP en cualquiera de los espejos listados aquí:</target>
        </trans-unit>
        <trans-unit id="53a7bd12f9a84d4d155f8bc43066fe15624ba305" translate="yes" xml:space="preserve">
          <source>You can find them for example by</source>
          <target state="translated">Puede encontrarlos,por ejemplo,en</target>
        </trans-unit>
        <trans-unit id="abd3b038a5876faa8d912c01ba340b1b8ceaabfa" translate="yes" xml:space="preserve">
          <source>You can follow the formats with numbers to say how many characters should be affected by that format: &lt;code&gt;A12&lt;/code&gt; means &quot;take 12 characters&quot;; &lt;code&gt;x6&lt;/code&gt; means &quot;skip 6 bytes&quot; or &quot;character 0, 6 times&quot;.</source>
          <target state="translated">Puede seguir los formatos con n&amp;uacute;meros para decir cu&amp;aacute;ntos caracteres deber&amp;iacute;an verse afectados por ese formato: &lt;code&gt;A12&lt;/code&gt; significa &quot;tomar 12 caracteres&quot;; &lt;code&gt;x6&lt;/code&gt; significa &quot;saltar 6 bytes&quot; o &quot;car&amp;aacute;cter 0, 6 veces&quot;.</target>
        </trans-unit>
        <trans-unit id="3e5ffde15ed2080164a5592bd7bb881aeab7fa67" translate="yes" xml:space="preserve">
          <source>You can force Perl to interpret the bareword as a class name by appending &quot;::&quot; to it, like we saw earlier:</source>
          <target state="translated">Puedes forzar a Perl a interpretar el prólogo como un nombre de clase agregándole &quot;::&quot;,como vimos antes:</target>
        </trans-unit>
        <trans-unit id="6a0f7fd6c71d8ef00acad73e562310bfdc7188b5" translate="yes" xml:space="preserve">
          <source>You can force Perl to use the first interpretation (i.e. as a method call on the class named &quot;Class&quot;) in two ways. First, you can append a &lt;code&gt;::&lt;/code&gt; to the class name:</source>
          <target state="translated">Puede obligar a Perl a utilizar la primera interpretaci&amp;oacute;n (es decir, como una llamada a un m&amp;eacute;todo en la clase denominada &quot;Clase&quot;) de dos formas. Primero, puede agregar un &lt;code&gt;::&lt;/code&gt; al nombre de la clase:</target>
        </trans-unit>
        <trans-unit id="3683b364293548110b32df191aa4769c6b0d7861" translate="yes" xml:space="preserve">
          <source>You can force a backreference interpretation always by using the &lt;code&gt;\g{...}&lt;/code&gt; form. You can the force an octal interpretation always by using the &lt;code&gt;\o{...}&lt;/code&gt; form, or for numbers up through \077 (= 63 decimal), by using three digits, beginning with a &quot;0&quot;.</source>
          <target state="translated">Puede forzar una interpretaci&amp;oacute;n de referencia inversa siempre utilizando la forma &lt;code&gt;\g{...}&lt;/code&gt; . Puede forzar una interpretaci&amp;oacute;n octal siempre usando la forma &lt;code&gt;\o{...}&lt;/code&gt; , o para n&amp;uacute;meros hasta \ 077 (= 63 decimal), usando tres d&amp;iacute;gitos, comenzando con un &quot;0&quot;.</target>
        </trans-unit>
        <trans-unit id="b877192684c9091db1ed512a1471d2f292aa330b" translate="yes" xml:space="preserve">
          <source>You can force an SV to make its own copy of its string buffer by calling &lt;code&gt;sv_force_normal(sv)&lt;/code&gt; or SvPV_force_nolen(sv).</source>
          <target state="translated">Puede obligar a un SV a hacer su propia copia de su b&amp;uacute;fer de cadenas llamando a &lt;code&gt;sv_force_normal(sv)&lt;/code&gt; o SvPV_force_nolen (sv).</target>
        </trans-unit>
        <trans-unit id="17a663e3d7a25b5bda8c7ec8fa9aff0d95066f73" translate="yes" xml:space="preserve">
          <source>You can force the thread-safe locale operations to always be used (if available) by recompiling perl with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e323a2944066f4acfe2875190557e817154e971" translate="yes" xml:space="preserve">
          <source>You can force the type to be a JSON number by numifying it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a383c28a991c1f9ed0ee28b1f5306a152b1497" translate="yes" xml:space="preserve">
          <source>You can force the type to be a JSON string by stringifying it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bd5097130055276750c2a4628acf949f4c2e6b" translate="yes" xml:space="preserve">
          <source>You can get a precompiled version of gcc from &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt; or &lt;a href=&quot;http://www.blastwave.org/&quot;&gt;http://www.blastwave.org/&lt;/a&gt;. Make sure you pick up the package for your Solaris release.</source>
          <target state="translated">Puede obtener una versi&amp;oacute;n precompilada de gcc en &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt; o &lt;a href=&quot;http://www.blastwave.org/&quot;&gt;http://www.blastwave.org/&lt;/a&gt; . Aseg&amp;uacute;rese de recoger el paquete para su versi&amp;oacute;n de Solaris.</target>
        </trans-unit>
        <trans-unit id="6c43b7d416e3df44e0ee3889ce9e7a7e5b755245" translate="yes" xml:space="preserve">
          <source>You can get an overview of all the files with this command:</source>
          <target state="translated">Puedes obtener una visión general de todos los archivos con este comando:</target>
        </trans-unit>
        <trans-unit id="a325b2e4941194b844aaba1d34803d7f10c46f65" translate="yes" xml:space="preserve">
          <source>You can get and set the current length of the string stored in an SV with the following macros:</source>
          <target state="translated">Puede obtener y establecer la longitud actual de la cadena almacenada en un SV con las siguientes macros:</target>
        </trans-unit>
        <trans-unit id="498e28fc3884e7bafa55f40835a491ab14376104" translate="yes" xml:space="preserve">
          <source>You can get around this in several ways depending on our situation. First, if you don't want any of the characters in the string to be special, you can escape them with &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; before you use the string.</source>
          <target state="translated">Puede evitar esto de varias maneras dependiendo de nuestra situaci&amp;oacute;n. Primero, si no desea que ninguno de los caracteres de la cadena sea especial, puede escapar de ellos con &lt;code&gt;&lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt;&lt;/code&gt; antes de usar la cadena.</target>
        </trans-unit>
        <trans-unit id="907671da7c158c5e53cf7c4009f169bdae8b7e54" translate="yes" xml:space="preserve">
          <source>You can get around this in several ways depending on our situation. First, if you don't want any of the characters in the string to be special, you can escape them with &lt;code&gt;quotemeta&lt;/code&gt; before you use the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2880274dc7c0ec586da21bf05619e960d62718ce" translate="yes" xml:space="preserve">
          <source>You can get at any of these quantities from C very easily; just add &lt;code&gt;Sv&lt;/code&gt; to the name of the field shown in the snippet, and you've got a macro which will return the value: &lt;code&gt;SvCUR(sv)&lt;/code&gt; returns the current length of the string, &lt;code&gt;SvREFCOUNT(sv)&lt;/code&gt; returns the reference count, &lt;code&gt;SvPV(sv, len)&lt;/code&gt; returns the string itself with its length, and so on. More macros to manipulate these properties can be found in &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">Puede obtener cualquiera de estas cantidades de C muy f&amp;aacute;cilmente; simplemente agregue &lt;code&gt;Sv&lt;/code&gt; al nombre del campo que se muestra en el fragmento, y obtendr&amp;aacute; una macro que devolver&amp;aacute; el valor: &lt;code&gt;SvCUR(sv)&lt;/code&gt; devuelve la longitud actual de la cadena, &lt;code&gt;SvREFCOUNT(sv)&lt;/code&gt; devuelve el recuento de referencias, &lt;code&gt;SvPV(sv, len)&lt;/code&gt; devuelve la cadena con su longitud, y as&amp;iacute; sucesivamente. Se pueden encontrar m&amp;aacute;s macros para manipular estas propiedades en &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98610d953793b8d3a809dccac32eb0df790fe7b6" translate="yes" xml:space="preserve">
          <source>You can get at lists of keys and values with &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Puede obtener listas de claves y valores con &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfa837955bc2111631d4644a0aa1c41fcffdf11c" translate="yes" xml:space="preserve">
          <source>You can get at lists of keys and values with &lt;code&gt;keys()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a77b36211d3d02a45104bff8d76788cd986acc" translate="yes" xml:space="preserve">
          <source>You can get commercial support of Perl if you wish, although for most users the informal support will more than suffice. See the answer to &quot;Where can I buy a commercial version of Perl?&quot; for more information.</source>
          <target state="translated">Puede obtener apoyo comercial de Perl si lo desea,aunque para la mayoría de los usuarios el apoyo informal será más que suficiente.Vea la respuesta a &quot;¿Dónde puedo comprar una versión comercial de Perl?&quot; para más información.</target>
        </trans-unit>
        <trans-unit id="83877e131c38375e988c7edf4defa59ad28286ba" translate="yes" xml:space="preserve">
          <source>You can get gzip from &lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;</source>
          <target state="translated">Puede obtener gzip desde &lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cc7caff36ea8191fb948cb25382a0802d8b70e3" translate="yes" xml:space="preserve">
          <source>You can get gzip from &lt;a href=&quot;http://www.s390.ibm.com/products/oe/bpxqp1.html&quot;&gt;http://www.s390.ibm.com/products/oe/bpxqp1.html&lt;/a&gt;</source>
          <target state="translated">Puede obtener gzip en &lt;a href=&quot;http://www.s390.ibm.com/products/oe/bpxqp1.html&quot;&gt;http://www.s390.ibm.com/products/oe/bpxqp1.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ceb45063df183ed03ff063ebe2021495fbb9baff" translate="yes" xml:space="preserve">
          <source>You can get into trouble if you use constants in a context which automatically quotes barewords (as is true for any subroutine call). For example, you can't say &lt;code&gt;$hash{CONSTANT}&lt;/code&gt; because &lt;code&gt;CONSTANT&lt;/code&gt; will be interpreted as a string. Use &lt;code&gt;$hash{CONSTANT()}&lt;/code&gt; or &lt;code&gt;$hash{+CONSTANT}&lt;/code&gt; to prevent the bareword quoting mechanism from kicking in. Similarly, since the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator quotes a bareword immediately to its left, you have to say &lt;code&gt;CONSTANT() =&amp;gt; 'value'&lt;/code&gt; (or simply use a comma in place of the big arrow) instead of &lt;code&gt;CONSTANT =&amp;gt; 'value'&lt;/code&gt; .</source>
          <target state="translated">Puede meterse en problemas si usa constantes en un contexto que cita autom&amp;aacute;ticamente palabras clave (como ocurre con cualquier llamada de subrutina). Por ejemplo, no puede decir &lt;code&gt;$hash{CONSTANT}&lt;/code&gt; porque &lt;code&gt;CONSTANT&lt;/code&gt; se interpretar&amp;aacute; como una cadena. Use &lt;code&gt;$hash{CONSTANT()}&lt;/code&gt; o &lt;code&gt;$hash{+CONSTANT}&lt;/code&gt; para evitar que se active el mecanismo de citas de palabras sin formato . De manera similar, dado que el operador &lt;code&gt;=&amp;gt;&lt;/code&gt; cita una palabra sin palabras inmediatamente a su izquierda, debe decir &lt;code&gt;CONSTANT() =&amp;gt; 'value'&lt;/code&gt; (o simplemente use una coma en lugar de la flecha grande) en lugar de &lt;code&gt;CONSTANT =&amp;gt; 'value'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da2f7597146611c6fbedf52c5830c6aad8de3611" translate="yes" xml:space="preserve">
          <source>You can get into trouble if you use constants in a context which automatically quotes barewords (as is true for any subroutine call). For example, you can't say &lt;code&gt;$hash{CONSTANT}&lt;/code&gt; because &lt;code&gt;CONSTANT&lt;/code&gt; will be interpreted as a string. Use &lt;code&gt;$hash{CONSTANT()}&lt;/code&gt; or &lt;code&gt;$hash{+CONSTANT}&lt;/code&gt; to prevent the bareword quoting mechanism from kicking in. Similarly, since the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator quotes a bareword immediately to its left, you have to say &lt;code&gt;CONSTANT() =&amp;gt; 'value'&lt;/code&gt; (or simply use a comma in place of the big arrow) instead of &lt;code&gt;CONSTANT =&amp;gt; 'value'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6872803f70582536909b7aa8df4da94cd4d37a4" translate="yes" xml:space="preserve">
          <source>You can have an environment variable PERL_INSTALL_ROOT set which will be prepended as a directory to each installed file (and directory).</source>
          <target state="translated">Puede tener una variable de entorno PERL_INSTALL_ROOT establecida que se preparará como un directorio para cada archivo (y directorio)instalado.</target>
        </trans-unit>
        <trans-unit id="fa58ede728fa900b2be53c5925b3b4ff8069c044" translate="yes" xml:space="preserve">
          <source>You can ignore [pad]THXx when browsing the Perl headers/sources. Those are strictly for use within the core. Extensions and embedders need only be aware of [pad]THX.</source>
          <target state="translated">Puedes ignorar [pad]THXx al navegar por los encabezados/fuentes de Perl.Esos son estrictamente para uso dentro del núcleo.Las extensiones e incrustaciones sólo tienen que ser conscientes de [pad]THXx.</target>
        </trans-unit>
        <trans-unit id="f0a479cb9681a1cb4f6cbb2bcf71ac6471f5092e" translate="yes" xml:space="preserve">
          <source>You can imagine how bad things would be if, for example, the SYS$MANAGER or SYS$SYSTEM logical names were deleted.</source>
          <target state="translated">Puedes imaginar lo mal que estarían las cosas si,por ejemplo,los nombres lógicos de SYS$MANAGER o SYS$SYSTEM fueran borrados.</target>
        </trans-unit>
        <trans-unit id="2157dc8c06b7685edcc449748ab0e77243e5a157" translate="yes" xml:space="preserve">
          <source>You can immediately see a slightly different focus to the subroutine profiling modules, and we start to see exactly which line of code is taking the most time. That regex line is looking a bit suspicious, for example. Remember that these tools are supposed to be used together, there is no single best way to profile your code, you need to use the best tools for the job.</source>
          <target state="translated">Inmediatamente se puede ver un enfoque ligeramente diferente a los módulos de perfil de subrutinas,y empezamos a ver exactamente qué línea de código está tomando más tiempo.Esa línea regex se ve un poco sospechosa,por ejemplo.Recuerda que estas herramientas se supone que deben ser usadas juntas,no hay una única y mejor manera de perfilar tu código,necesitas usar las mejores herramientas para el trabajo.</target>
        </trans-unit>
        <trans-unit id="01ccbef4b59df5e513c51a0c19924a7a01e4981e" translate="yes" xml:space="preserve">
          <source>You can import &lt;code&gt;:pushpop&lt;/code&gt; and maintain a stack of colors using PUSHCOLOR, POPCOLOR, and LOCALCOLOR. PUSHCOLOR takes the attribute string that starts its argument and pushes it onto a stack of attributes. POPCOLOR removes the top of the stack and restores the previous attributes set by the argument of a prior PUSHCOLOR. LOCALCOLOR surrounds its argument in a PUSHCOLOR and POPCOLOR so that the color resets afterward.</source>
          <target state="translated">Puede importar &lt;code&gt;:pushpop&lt;/code&gt; y mantener una pila de colores usando PUSHCOLOR, POPCOLOR y LOCALCOLOR. PUSHCOLOR toma la cadena de atributos que inicia su argumento y la coloca en una pila de atributos. POPCOLOR elimina la parte superior de la pila y restaura los atributos anteriores establecidos por el argumento de un PUSHCOLOR anterior. LOCALCOLOR envuelve su argumento en un PUSHCOLOR y POPCOLOR para que el color se restablezca despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="7225c37bbdccefc8a70c019da87c9b8dea7a6b29" translate="yes" xml:space="preserve">
          <source>You can import all the great circle formulas by</source>
          <target state="translated">Puedes importar todas las fórmulas de los grandes círculos por</target>
        </trans-unit>
        <trans-unit id="6ccdd2eb8d7e6ad6ca52482a2893e8ad5920726c" translate="yes" xml:space="preserve">
          <source>You can import radial coordinate conversion functions by using the &lt;code&gt;:radial&lt;/code&gt; tag:</source>
          <target state="translated">Puede importar funciones de conversi&amp;oacute;n de coordenadas radiales utilizando la etiqueta: &lt;code&gt;:radial&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a747eb56defc25ea65ac8c773f590bb69f4cf6d4" translate="yes" xml:space="preserve">
          <source>You can import symbolic mode constants (&lt;code&gt;S_IF*&lt;/code&gt; ) and functions (&lt;code&gt;S_IS*&lt;/code&gt; ) from the Fcntl module:</source>
          <target state="translated">Puede importar constantes de modo simb&amp;oacute;lico ( &lt;code&gt;S_IF*&lt;/code&gt; ) y funciones ( &lt;code&gt;S_IS*&lt;/code&gt; ) desde el m&amp;oacute;dulo Fcntl:</target>
        </trans-unit>
        <trans-unit id="daf6e79cd146ad6c1ff8be35e0c5dd03545d96b4" translate="yes" xml:space="preserve">
          <source>You can import symbolic mode constants (&lt;code&gt;S_IF*&lt;/code&gt;) and functions (&lt;code&gt;S_IS*&lt;/code&gt;) from the &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c8f6c731717afeb2f914b548c9389d16df04b0" translate="yes" xml:space="preserve">
          <source>You can include one underscore between any two digits.</source>
          <target state="translated">Puedes incluir un guión bajo entre dos dígitos cualquiera.</target>
        </trans-unit>
        <trans-unit id="06780cff3747acdd27c6cb36674311a1b2286d47" translate="yes" xml:space="preserve">
          <source>You can instead write</source>
          <target state="translated">En lugar de eso,puedes escribir</target>
        </trans-unit>
        <trans-unit id="c4bd7d42db9b74a8aac6c0368becb036004d4652" translate="yes" xml:space="preserve">
          <source>You can intermix &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; matches with &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\G.../g&lt;/a&gt;&lt;/code&gt;, where &lt;code&gt;\G&lt;/code&gt; is a zero-width assertion that matches the exact position where the previous &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt;, if any, left off. Without the &lt;code&gt;/g&lt;/code&gt; modifier, the &lt;code&gt;\G&lt;/code&gt; assertion still anchors at &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; as it was at the start of the operation (see &lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;), but the match is of course only attempted once. Using &lt;code&gt;\G&lt;/code&gt; without &lt;code&gt;/g&lt;/code&gt; on a target string that has not previously had a &lt;code&gt;/g&lt;/code&gt; match applied to it is the same as using the &lt;code&gt;\A&lt;/code&gt; assertion to match the beginning of the string. Note also that, currently, &lt;code&gt;\G&lt;/code&gt; is only properly supported when anchored at the very beginning of the pattern.</source>
          <target state="translated">Puede entremezclar coincidencias de &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; con &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\G.../g&lt;/a&gt;&lt;/code&gt; , donde &lt;code&gt;\G&lt;/code&gt; es una aserci&amp;oacute;n de ancho cero que coincide con la posici&amp;oacute;n exacta donde qued&amp;oacute; el &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; , si lo hubiera. Sin el modificador &lt;code&gt;/g&lt;/code&gt; , la aserci&amp;oacute;n &lt;code&gt;\G&lt;/code&gt; todav&amp;iacute;a se ancla en &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; como estaba al comienzo de la operaci&amp;oacute;n (ver &lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt; ), pero la coincidencia, por supuesto, solo se intenta una vez. Usar &lt;code&gt;\G&lt;/code&gt; sin &lt;code&gt;/g&lt;/code&gt; en una cadena de destino a la que no se le ha aplicado previamente una coincidencia de &lt;code&gt;/g&lt;/code&gt; es lo mismo que usar la aserci&amp;oacute;n &lt;code&gt;\A&lt;/code&gt; para hacer coincidir el comienzo de la cadena. Tenga en cuenta tambi&amp;eacute;n que, actualmente, &lt;code&gt;\G&lt;/code&gt; solo se apoya correctamente cuando se ancla al principio del patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a2f99acf8ebf785cd6fcc65bebd6795b26da26f1" translate="yes" xml:space="preserve">
          <source>You can intermix &lt;code&gt;m//g&lt;/code&gt; matches with &lt;code&gt;m/\G.../g&lt;/code&gt;, where &lt;code&gt;\G&lt;/code&gt; is a zero-width assertion that matches the exact position where the previous &lt;code&gt;m//g&lt;/code&gt;, if any, left off. Without the &lt;code&gt;/g&lt;/code&gt; modifier, the &lt;code&gt;\G&lt;/code&gt; assertion still anchors at &lt;code&gt;pos()&lt;/code&gt; as it was at the start of the operation (see &lt;a href=&quot;perlfunc#pos&quot;&gt;&quot;pos&quot; in perlfunc&lt;/a&gt;), but the match is of course only attempted once. Using &lt;code&gt;\G&lt;/code&gt; without &lt;code&gt;/g&lt;/code&gt; on a target string that has not previously had a &lt;code&gt;/g&lt;/code&gt; match applied to it is the same as using the &lt;code&gt;\A&lt;/code&gt; assertion to match the beginning of the string. Note also that, currently, &lt;code&gt;\G&lt;/code&gt; is only properly supported when anchored at the very beginning of the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b86b2d839c827310b20f3c55919cf18f3acb03" translate="yes" xml:space="preserve">
          <source>You can inversely compute the destination if you know the starting point, direction, and distance:</source>
          <target state="translated">Puedes calcular el destino a la inversa si conoces el punto de partida,la dirección y la distancia:</target>
        </trans-unit>
        <trans-unit id="c770c9c675ab604224950a0310e7e3cbf6f8631c" translate="yes" xml:space="preserve">
          <source>You can list opcodes by names, or use a tag name; see &lt;a href=&quot;opcode#Predefined-Opcode-Tags&quot;&gt;&quot;Predefined Opcode Tags&quot; in Opcode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfc74f0d7463fa46580b22cd874ca59538b399a" translate="yes" xml:space="preserve">
          <source>You can list opcodes by names, or use a tag name; see &lt;a href=&quot;opcode#Predefined-Opcode-Tags&quot;&gt;Predefined Opcode Tags in Opcode&lt;/a&gt;.</source>
          <target state="translated">Puede enumerar los c&amp;oacute;digos de operaci&amp;oacute;n por nombre o usar un nombre de etiqueta; consulte &lt;a href=&quot;opcode#Predefined-Opcode-Tags&quot;&gt;Etiquetas de c&amp;oacute;digo de operaci&amp;oacute;n predefinidas en C&amp;oacute;digo de operaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f4c7db1d02ea8c4d5d73863315380fa405b9daa" translate="yes" xml:space="preserve">
          <source>You can load a custom &lt;a href=&quot;TAP::Parser::Formatter&quot;&gt;TAP::Parser::Formatter&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001468774175cba071073df8732faf49990cd65b" translate="yes" xml:space="preserve">
          <source>You can load a custom &lt;a href=&quot;http://search.cpan.org/perldoc/TAP::Parser::Formatter&quot;&gt;TAP::Parser::Formatter&lt;/a&gt;:</source>
          <target state="translated">Puede cargar un &lt;a href=&quot;http://search.cpan.org/perldoc/TAP::Parser::Formatter&quot;&gt;TAP :: Parser :: Formatter personalizado&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="922b68ea0df3880a69d6f0bb73214de0179f5c3f" translate="yes" xml:space="preserve">
          <source>You can load custom &lt;a href=&quot;TAP::Parser::SourceHandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s, to change the way the parser interprets particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97cc72d3ba21acacd11a8df6beb891397824853a" translate="yes" xml:space="preserve">
          <source>You can load custom &lt;a href=&quot;tap/parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt;s, to change the way the parser interprets particular</source>
          <target state="translated">Puede cargar &lt;a href=&quot;tap/parser/sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler personalizados&lt;/a&gt; , para cambiar la forma en que el analizador interpreta</target>
        </trans-unit>
        <trans-unit id="864c8cc598c8e4c08f636d6accb98e4216dd8dc6" translate="yes" xml:space="preserve">
          <source>You can log in to the bug tracking system and comment on existing bug reports. If you have additional information regarding an existing bug, please add it. This will help the porters fix the bug.</source>
          <target state="translated">Puede entrar en el sistema de seguimiento de errores y comentar los informes de errores existentes.Si tiene información adicional sobre un fallo existente,por favor,añádala.Esto ayudará a los porteros a arreglar el fallo.</target>
        </trans-unit>
        <trans-unit id="70b967da2737530b2ccb33fdb14ce4b355858a95" translate="yes" xml:space="preserve">
          <source>You can look into using the &lt;code&gt;DB_File&lt;/code&gt; module and &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;$DB_BTREE&lt;/code&gt; hash bindings as documented in &lt;a href=&quot;db_file#In-Memory-Databases&quot;&gt;In Memory Databases in DB_File&lt;/a&gt;. The &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::IxHash&quot;&gt;Tie::IxHash&lt;/a&gt; module from CPAN might also be instructive. Although this does keep your hash sorted, you might not like the slowdown you suffer from the tie interface. Are you sure you need to do this? :)</source>
          <target state="translated">Puede considerar el uso del m&amp;oacute;dulo &lt;code&gt;DB_File&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt; usando los enlaces hash &lt;code&gt;$DB_BTREE&lt;/code&gt; como se documenta en &lt;a href=&quot;db_file#In-Memory-Databases&quot;&gt;In Memory Databases en DB_File&lt;/a&gt; . El m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Tie::IxHash&quot;&gt;Tie :: IxHash&lt;/a&gt; de CPAN tambi&amp;eacute;n puede resultar instructivo. Aunque esto mantiene su hash ordenado, es posible que no le guste la ralentizaci&amp;oacute;n que sufre con la interfaz de enlace. &amp;iquest;Est&amp;aacute;s seguro de que necesitas hacer esto? :)</target>
        </trans-unit>
        <trans-unit id="7b312039abf365be7292ef1e18c22e425bf6aa57" translate="yes" xml:space="preserve">
          <source>You can look into using the &lt;code&gt;DB_File&lt;/code&gt; module and &lt;code&gt;tie()&lt;/code&gt; using the &lt;code&gt;$DB_BTREE&lt;/code&gt; hash bindings as documented in &lt;a href=&quot;db_file#In-Memory-Databases&quot;&gt;&quot;In Memory Databases&quot; in DB_File&lt;/a&gt;. The &lt;a href=&quot;Tie::IxHash&quot;&gt;Tie::IxHash&lt;/a&gt; module from CPAN might also be instructive. Although this does keep your hash sorted, you might not like the slowdown you suffer from the tie interface. Are you sure you need to do this? :)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9625d3e38b4c49498359b9273455de8f35f225d" translate="yes" xml:space="preserve">
          <source>You can make a read-only clone of the repository by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03c6c46e2fd91fc95b867e10fbdca9429550351" translate="yes" xml:space="preserve">
          <source>You can make references to anything, including scalars, functions, and other references.</source>
          <target state="translated">Puede hacer referencia a cualquier cosa,incluyendo escalas,funciones y otras referencias.</target>
        </trans-unit>
        <trans-unit id="f238aab29e64ee5c9b032d4d04c0ab30c79c6501" translate="yes" xml:space="preserve">
          <source>You can make the while loop a lot shorter with this suggestion from Benjamin Goldberg:</source>
          <target state="translated">Puedes hacer el bucle de tiempo mucho más corto con esta sugerencia de Benjamin Goldberg:</target>
        </trans-unit>
        <trans-unit id="0ec5f2b2db5f7957e7b186e607473a4a56ae2fd0" translate="yes" xml:space="preserve">
          <source>You can make your configuration changes permanent by calling the command &lt;code&gt;o conf commit&lt;/code&gt; . Alternatively set the &lt;code&gt;auto_commit&lt;/code&gt; variable to true by running &lt;code&gt;o conf init auto_commit&lt;/code&gt; and answering the following question with yes.</source>
          <target state="translated">Puede hacer que sus cambios de configuraci&amp;oacute;n sean permanentes llamando al comando &lt;code&gt;o conf commit&lt;/code&gt; . Alternativamente, establezca la variable &lt;code&gt;auto_commit&lt;/code&gt; en true ejecutando &lt;code&gt;o conf init auto_commit&lt;/code&gt; y respondiendo la siguiente pregunta con s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="2011dcb658fe55c431da3ed5067e6f4bf4528970" translate="yes" xml:space="preserve">
          <source>You can mimic class subtraction using lookahead. For example, what UTS#18 might write as</source>
          <target state="translated">Puedes imitar la sustracción de clases usando el lookahead.Por ejemplo,lo que la UTS#18 podría escribir como</target>
        </trans-unit>
        <trans-unit id="3461cd371c3715543776c435145f8478a0ac6ec8" translate="yes" xml:space="preserve">
          <source>You can mock TTY input to debugger by adding arbitrary commands to @DB::typeahead. For example, your</source>
          <target state="translated">Puedes simular la entrada TTY en el depurador añadiendo comandos arbitrarios a @DB::typeahead.Por ejemplo,su</target>
        </trans-unit>
        <trans-unit id="cf9cef6663d4cd69a19179eacb290a6dcc1e8352" translate="yes" xml:space="preserve">
          <source>You can modify &lt;code&gt;@ARGV&lt;/code&gt; before the first &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; as long as the array ends up containing the list of filenames you really want. Line numbers (&lt;code&gt;$.&lt;/code&gt; ) continue as though the input were one big happy file. See the example in &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt; for how to reset line numbers on each file.</source>
          <target state="translated">Puede modificar &lt;code&gt;@ARGV&lt;/code&gt; antes del primer &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; siempre que la matriz termine conteniendo la lista de nombres de archivo que realmente desea. Los n&amp;uacute;meros de l&amp;iacute;nea ( &lt;code&gt;$.&lt;/code&gt; ) Contin&amp;uacute;an como si la entrada fuera un gran archivo feliz. Vea el ejemplo en &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt; para saber c&amp;oacute;mo restablecer los n&amp;uacute;meros de l&amp;iacute;nea en cada archivo.</target>
        </trans-unit>
        <trans-unit id="fef203404e7c4e26b3201a37c63c3bf76f7a448a" translate="yes" xml:space="preserve">
          <source>You can modify &lt;code&gt;@ARGV&lt;/code&gt; before the first &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; as long as the array ends up containing the list of filenames you really want. Line numbers (&lt;code&gt;$.&lt;/code&gt;) continue as though the input were one big happy file. See the example in &lt;a href=&quot;perlfunc#eof&quot;&gt;&quot;eof&quot; in perlfunc&lt;/a&gt; for how to reset line numbers on each file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8a419c4027fffc2a00680692cdd50042e9d07e" translate="yes" xml:space="preserve">
          <source>You can modify the 'commands' for example to hardwire an absolute path by e.g.</source>
          <target state="translated">Puede modificar los &quot;comandos&quot; por ejemplo para cablear un camino absoluto,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="b4169d013aca1666238580a9fd59a4dae77a7deb" translate="yes" xml:space="preserve">
          <source>You can not currently force the type in other, less obscure, ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5494206985a4f40e7d6f949c9e6a6ea96245c15" translate="yes" xml:space="preserve">
          <source>You can now &lt;code&gt;use my::autodie&lt;/code&gt;, which will work just like the standard &lt;code&gt;autodie&lt;/code&gt;, but is now aware of any hints that you've set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de41be22b6a5efcacf396fbce08b0572f97fd60" translate="yes" xml:space="preserve">
          <source>You can only declare autoties for types &lt;code&gt;&quot;SCALAR&quot;&lt;/code&gt; , &lt;code&gt;&quot;ARRAY&quot;&lt;/code&gt; , and &lt;code&gt;&quot;HASH&quot;&lt;/code&gt; . They're the only things (apart from typeglobs -- which are not declarable) that Perl can tie.</source>
          <target state="translated">Solo puede declarar autoties para los tipos &lt;code&gt;&quot;SCALAR&quot;&lt;/code&gt; , &lt;code&gt;&quot;ARRAY&quot;&lt;/code&gt; y &lt;code&gt;&quot;HASH&quot;&lt;/code&gt; . Son las &amp;uacute;nicas cosas (aparte de typeglobs, que no se pueden declarar) que Perl puede vincular.</target>
        </trans-unit>
        <trans-unit id="d8980e8dd984a6627df441ec747331d50a1b07d8" translate="yes" xml:space="preserve">
          <source>You can only declare autoties for types &lt;code&gt;&quot;SCALAR&quot;&lt;/code&gt;, &lt;code&gt;&quot;ARRAY&quot;&lt;/code&gt;, and &lt;code&gt;&quot;HASH&quot;&lt;/code&gt;. They're the only things (apart from typeglobs -- which are not declarable) that Perl can tie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d6492d8d5c8ebf50c4b6f0278c97639e62301c" translate="yes" xml:space="preserve">
          <source>You can only obtain this using an alias, and Getopt::Long of at least version 2.13.</source>
          <target state="translated">Sólo puedes obtener esto usando un alias,y Getopt::Long de al menos la versión 2.13.</target>
        </trans-unit>
        <trans-unit id="d146ace3315d8b55185b8781aa6332aa44a31223" translate="yes" xml:space="preserve">
          <source>You can only use the elliptical statement to stand in for a complete statement. Syntactically, &quot;&lt;code&gt;...;&lt;/code&gt;&quot; is a complete statement, but, as with other kinds of semicolon-terminated statement, the semicolon may be omitted if &quot;&lt;code&gt;...&lt;/code&gt;&quot; appears immediately before a closing brace. These examples show how the ellipsis works:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce5924582aac2aa9ee7cd1ad99c9e8ff1e6ecea" translate="yes" xml:space="preserve">
          <source>You can only use the elliptical statement to stand in for a complete statement. These examples of how the ellipsis works:</source>
          <target state="translated">Sólo puede usar la declaración elíptica para sustituir una declaración completa.Estos ejemplos de cómo funciona la elipsis:</target>
        </trans-unit>
        <trans-unit id="9cae8654bfe063f888826b48470927a2c30f96cd" translate="yes" xml:space="preserve">
          <source>You can open a file for input or output using the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; function. It's documented in extravagant detail in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; and &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;, but in short:</source>
          <target state="translated">Puede abrir un archivo para entrada o salida usando la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; . Est&amp;aacute; documentado con detalles extravagantes en &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; y &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; , pero en resumen:</target>
        </trans-unit>
        <trans-unit id="318c92a1d982aec365969dbe006cbe697f2326c8" translate="yes" xml:space="preserve">
          <source>You can open a file for input or output using the &lt;code&gt;open()&lt;/code&gt; function. It's documented in extravagant detail in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; and &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;, but in short:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ba77a9bf1f3b31a9c843fd61b1d22b18753582" translate="yes" xml:space="preserve">
          <source>You can open filehandles directly to Perl scalars instead of a file or other resource external to the program. To do so, provide a reference to that scalar as the third argument to &lt;code&gt;open&lt;/code&gt;, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce96504bc4965bb9a6b5d98ed74131b7aef0ff79" translate="yes" xml:space="preserve">
          <source>You can override predefined aliases by simply applying define_alias(). The new alias is always evaluated first, and when necessary, define_alias() flushes the internal cache to make the new definition available.</source>
          <target state="translated">Puedes anular los alias predefinidos simplemente aplicando define_alias().El nuevo alias siempre se evalúa primero y,cuando es necesario,define_alias()vacía la caché interna para que la nueva definición esté disponible.</target>
        </trans-unit>
        <trans-unit id="ef785435f6086fb9fd6b00d9def6f92017001719" translate="yes" xml:space="preserve">
          <source>You can override the default and build a shared libperl if you wish (Configure ... -Duseshrplib).</source>
          <target state="translated">Puedes anular el valor por defecto y construir una liberta compartida si lo deseas (Configurar ...-Duseshrplib).</target>
        </trans-unit>
        <trans-unit id="97ed2e27db33bd8f090672fcd70380db3caec730" translate="yes" xml:space="preserve">
          <source>You can override this by giving extra arguments; see below.</source>
          <target state="translated">Puede anular esto dando argumentos adicionales;ver más abajo.</target>
        </trans-unit>
        <trans-unit id="73f74d7cb907a2b7504c7060b4ad0ec87a6506fe" translate="yes" xml:space="preserve">
          <source>You can override this by passing the desired rounding mode as parameter to &lt;code&gt;as_number()&lt;/code&gt; :</source>
          <target state="translated">Puede anular esto pasando el modo de redondeo deseado como par&amp;aacute;metro a &lt;code&gt;as_number()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="82587933cae4e9f30d2fe8c8c0c7863b53e2375e" translate="yes" xml:space="preserve">
          <source>You can override this by passing the desired rounding mode as parameter to &lt;code&gt;as_number()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7321ebb0b4eea0262a3b635a8b77554cb51e976a" translate="yes" xml:space="preserve">
          <source>You can override this default using the &lt;code&gt;T2_FORMATTER&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b4dbfc185a430ad159257351a9ef1b4f3e946a" translate="yes" xml:space="preserve">
          <source>You can pass an argument to your plugin by appending an &lt;code&gt;=&lt;/code&gt; after the plugin name, eg &lt;code&gt;-PMyPlugin=foo&lt;/code&gt; . You can pass multiple arguments using commas:</source>
          <target state="translated">Puede pasar un argumento a su complemento agregando un &lt;code&gt;=&lt;/code&gt; despu&amp;eacute;s del nombre del complemento, por ejemplo, &lt;code&gt;-PMyPlugin=foo&lt;/code&gt; . Puede pasar varios argumentos usando comas:</target>
        </trans-unit>
        <trans-unit id="2736e3b985373c7bf800fbac7652d16fb607a369" translate="yes" xml:space="preserve">
          <source>You can pass an argument to your plugin by appending an &lt;code&gt;=&lt;/code&gt; after the plugin name, eg &lt;code&gt;-PMyPlugin=foo&lt;/code&gt;. You can pass multiple arguments using commas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577ba47f8467272240629f611eeec9e04fdaf1e6" translate="yes" xml:space="preserve">
          <source>You can pass arguments to your plugin by appending &lt;code&gt;=arg1,arg2,etc&lt;/code&gt; to the plugin name:</source>
          <target state="translated">Puede pasar argumentos a su complemento agregando &lt;code&gt;=arg1,arg2,etc&lt;/code&gt; . al nombre del complemento:</target>
        </trans-unit>
        <trans-unit id="386308dc979139b37676d9287d489e82d9329ea5" translate="yes" xml:space="preserve">
          <source>You can pass in &lt;code&gt;&quot;?&quot;&lt;/code&gt; for &lt;code&gt;$svAccess&lt;/code&gt; to have an error message displayed summarizing its possible values. This is very handy when doing on-the-fly programming using the Perl debugger:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2015c5b11227b45450c075073adbe76ec83f58eb" translate="yes" xml:space="preserve">
          <source>You can peek into the bisecting process with &lt;code&gt;git bisect log&lt;/code&gt; and &lt;code&gt;git bisect visualize&lt;/code&gt;. &lt;code&gt;git bisect reset&lt;/code&gt; will get you out of bisect mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b26d7e57483cd1ed4bf2659755481a3ca93653" translate="yes" xml:space="preserve">
          <source>You can pick up prebuilt binaries for Solaris from &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt;, &lt;a href=&quot;http://www.blastwave.org&quot;&gt;http://www.blastwave.org&lt;/a&gt;, ActiveState &lt;a href=&quot;http://www.activestate.com/&quot;&gt;http://www.activestate.com/&lt;/a&gt;, and &lt;a href=&quot;http://www.perl.com/&quot;&gt;http://www.perl.com/&lt;/a&gt; under the Binaries list at the top of the page. There are probably other sources as well. Please note that these sites are under the control of their respective owners, not the perl developers.</source>
          <target state="translated">Puede obtener archivos binarios predise&amp;ntilde;ados para Solaris en &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt; , &lt;a href=&quot;http://www.blastwave.org&quot;&gt;http://www.blastwave.org&lt;/a&gt; , ActiveState &lt;a href=&quot;http://www.activestate.com/&quot;&gt;http://www.activestate.com/&lt;/a&gt; y &lt;a href=&quot;http://www.perl.com/&quot;&gt;http: //www.perl .com /&lt;/a&gt; en la lista de binarios en la parte superior de la p&amp;aacute;gina. Probablemente tambi&amp;eacute;n haya otras fuentes. Tenga en cuenta que estos sitios est&amp;aacute;n bajo el control de sus respectivos propietarios, no de los desarrolladores de perl.</target>
        </trans-unit>
        <trans-unit id="0069caf73fc0c3d54f9839e13d787a6c260b9f5e" translate="yes" xml:space="preserve">
          <source>You can pick up prebuilt binaries for Solaris from &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt;, &lt;a href=&quot;http://www.blastwave.org&quot;&gt;http://www.blastwave.org&lt;/a&gt;, ActiveState &lt;a href=&quot;https://www.activestate.com/&quot;&gt;http://www.activestate.com/&lt;/a&gt;, and &lt;a href=&quot;http://www.perl.com/&quot;&gt;http://www.perl.com/&lt;/a&gt; under the Binaries list at the top of the page. There are probably other sources as well. Please note that these sites are under the control of their respective owners, not the perl developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afad181efc494d271a3d1339fc4bea9100125dd3" translate="yes" xml:space="preserve">
          <source>You can preallocate space for a hash by assigning to the keys() function. This rounds up the allocated buckets to the next power of two:</source>
          <target state="translated">Puedes preasignar espacio para un hash asignando a la función keys().Esto redondea los cubos asignados a la siguiente potencia de dos:</target>
        </trans-unit>
        <trans-unit id="627b7e3f88900bea51795d1c0d405285e2cec7cd" translate="yes" xml:space="preserve">
          <source>You can prevent regeneration by adding the setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ece78405c91977c16dd3a742419b856c5fd5394" translate="yes" xml:space="preserve">
          <source>You can probably expect your users to be able to guess that they can request less CPU or memory or just &quot;less&quot; overall.</source>
          <target state="translated">Probablemente puedes esperar que tus usuarios sean capaces de adivinar que pueden pedir menos CPU o memoria o simplemente &quot;menos&quot; en general.</target>
        </trans-unit>
        <trans-unit id="02d6761deb2c7c6b18b97139af69b3430e2b5002" translate="yes" xml:space="preserve">
          <source>You can provide an argument, which will be available in the var &lt;code&gt;$REGMARK&lt;/code&gt; after the match completes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb56a3e59af78b8d5da4daff16effef12d060e2" translate="yes" xml:space="preserve">
          <source>You can provide this layer when &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;ing the file:</source>
          <target state="translated">Puede proporcionar esta capa al &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; el archivo:</target>
        </trans-unit>
        <trans-unit id="add06e5808df8acbd3f7d2e5d056882c7fd1db80" translate="yes" xml:space="preserve">
          <source>You can provide this layer when &lt;code&gt;open&lt;/code&gt;ing the file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d0d59bd2621cca1e6ec0d854420947ec5a4ec5" translate="yes" xml:space="preserve">
          <source>You can put a &lt;code&gt;+&lt;/code&gt; in front of the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; to indicate that you want both read and write access to the file; thus &lt;code&gt;+&amp;lt;&lt;/code&gt; is almost always preferred for read/write updates--the &lt;code&gt;+&amp;gt;&lt;/code&gt; mode would clobber the file first. You can't usually use either read-write mode for updating textfiles, since they have variable-length records. See the &lt;b&gt;-i&lt;/b&gt; switch in &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt; for a better approach. The file is created with permissions of &lt;code&gt;0666&lt;/code&gt; modified by the process's &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Puede poner un &lt;code&gt;+&lt;/code&gt; delante de &lt;code&gt;&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;&lt;/code&gt; para indicar que desea acceso de lectura y escritura al archivo; por lo tanto, &lt;code&gt;+&amp;lt;&lt;/code&gt; casi siempre se prefiere para las actualizaciones de lectura / escritura: el modo &lt;code&gt;+&amp;gt;&lt;/code&gt; golpear&amp;iacute;a el archivo primero. Por lo general, no puede usar ninguno de los modos de lectura y escritura para actualizar archivos de texto, ya que tienen registros de longitud variable. Vea el &lt;a href=&quot;../perlrun&quot;&gt;modificador &lt;/a&gt;&lt;b&gt;-i&lt;/b&gt; en perlrun para un mejor enfoque. El archivo se crea con permisos de &lt;code&gt;0666&lt;/code&gt; modificados por el valor de &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; del proceso .</target>
        </trans-unit>
        <trans-unit id="a5c78cfaaebb70f40ad0f93e0301fba4283c243b" translate="yes" xml:space="preserve">
          <source>You can put a &lt;code&gt;+&lt;/code&gt; in front of the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; to indicate that you want both read and write access to the file; thus &lt;code&gt;+&amp;lt;&lt;/code&gt; is almost always preferred for read/write updates--the &lt;code&gt;+&amp;gt;&lt;/code&gt; mode would clobber the file first. You can't usually use either read-write mode for updating textfiles, since they have variable-length records. See the &lt;b&gt;-i&lt;/b&gt; switch in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for a better approach. The file is created with permissions of &lt;code&gt;0666&lt;/code&gt; modified by the process's &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Puede poner un &lt;code&gt;+&lt;/code&gt; delante de &lt;code&gt;&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;&lt;/code&gt; para indicar que desea acceso de lectura y escritura al archivo; por lo tanto, &lt;code&gt;+&amp;lt;&lt;/code&gt; casi siempre se prefiere para las actualizaciones de lectura / escritura: el modo &lt;code&gt;+&amp;gt;&lt;/code&gt; golpear&amp;iacute;a el archivo primero. Por lo general, no puede usar ninguno de los modos de lectura y escritura para actualizar archivos de texto, ya que tienen registros de longitud variable. Vea el &lt;a href=&quot;perlrun&quot;&gt;modificador &lt;/a&gt;&lt;b&gt;-i&lt;/b&gt; en perlrun para un mejor enfoque. El archivo se crea con permisos de &lt;code&gt;0666&lt;/code&gt; modificados por el valor de &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; del proceso .</target>
        </trans-unit>
        <trans-unit id="764b0ecb923d2a9a161c6836b490b2d71dbd0c6c" translate="yes" xml:space="preserve">
          <source>You can put a &lt;code&gt;+&lt;/code&gt; in front of the &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;/code&gt; to indicate that you want both read and write access to the file; thus &lt;code&gt;+&amp;lt;&lt;/code&gt; is almost always preferred for read/write updates--the &lt;code&gt;+&amp;gt;&lt;/code&gt; mode would clobber the file first. You can't usually use either read-write mode for updating textfiles, since they have variable-length records. See the &lt;b&gt;-i&lt;/b&gt; switch in &lt;a href=&quot;perlrun#-i%5Bextension%5D&quot;&gt;perlrun&lt;/a&gt; for a better approach. The file is created with permissions of &lt;code&gt;0666&lt;/code&gt; modified by the process's &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8c4f9eec7c5f71cbfe88cf0f5ec847885d12d2" translate="yes" xml:space="preserve">
          <source>You can put any backslash sequence character class (with the exception of &lt;code&gt;\N&lt;/code&gt; and &lt;code&gt;\R&lt;/code&gt; ) inside a bracketed character class, and it will act just as if you had put all characters matched by the backslash sequence inside the character class. For instance, &lt;code&gt;[a-f\d]&lt;/code&gt; matches any decimal digit, or any of the lowercase letters between 'a' and 'f' inclusive.</source>
          <target state="translated">Puede poner cualquier clase de car&amp;aacute;cter de secuencia de barra invertida (con la excepci&amp;oacute;n de &lt;code&gt;\N&lt;/code&gt; y &lt;code&gt;\R&lt;/code&gt; ) dentro de una clase de car&amp;aacute;cter entre corchetes, y actuar&amp;aacute; como si hubiera puesto todos los caracteres que coinciden con la secuencia de barra invertida dentro de la clase de car&amp;aacute;cter. Por ejemplo, &lt;code&gt;[a-f\d]&lt;/code&gt; coincide con cualquier d&amp;iacute;gito decimal o cualquiera de las letras min&amp;uacute;sculas entre 'a' y 'f' inclusive.</target>
        </trans-unit>
        <trans-unit id="3f74a5262161afb2e7d36af12d2c0a5e7f5326b6" translate="yes" xml:space="preserve">
          <source>You can put any backslash sequence character class (with the exception of &lt;code&gt;\N&lt;/code&gt; and &lt;code&gt;\R&lt;/code&gt;) inside a bracketed character class, and it will act just as if you had put all characters matched by the backslash sequence inside the character class. For instance, &lt;code&gt;[a-f\d]&lt;/code&gt; matches any decimal digit, or any of the lowercase letters between 'a' and 'f' inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88a6953f485e8c5fc3aeb601fd219de754900f0" translate="yes" xml:space="preserve">
          <source>You can read from an open filehandle using the &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; operator. In scalar context it reads a single line from the filehandle, and in list context it reads the whole file in, assigning each line to an element of the list:</source>
          <target state="translated">Puede leer desde un identificador de archivo abierto utilizando el operador &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; . En contexto escalar, lee una sola l&amp;iacute;nea del identificador de archivo, y en el contexto de lista lee todo el archivo, asignando cada l&amp;iacute;nea a un elemento de la lista:</target>
        </trans-unit>
        <trans-unit id="91ab2ef6e453973e41443b71f9d3e34175e99630" translate="yes" xml:space="preserve">
          <source>You can read more about profiling in</source>
          <target state="translated">Puede leer más acerca de la elaboración de perfiles en</target>
        </trans-unit>
        <trans-unit id="00f2324bbf3536a80f241b597db331417bcbe8c1" translate="yes" xml:space="preserve">
          <source>You can redistribute and/or modify this document under the same terms as Perl itself.</source>
          <target state="translated">Puede redistribuir y/o modificar este documento bajo los mismos términos que el propio Perl.</target>
        </trans-unit>
        <trans-unit id="d7dc0e1fc9ad5b87e77bf63d3f4081648cdf49ca" translate="yes" xml:space="preserve">
          <source>You can request that the flock() constants (LOCK_SH, LOCK_EX, LOCK_NB and LOCK_UN) be provided by using the tag &lt;code&gt;:&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; . See &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt;.</source>
          <target state="translated">Puede solicitar que se proporcionen las constantes flock () (LOCK_SH, LOCK_EX, LOCK_NB y LOCK_UN) utilizando la etiqueta &lt;code&gt;:&lt;a href=&quot;functions/flock&quot;&gt;flock&lt;/a&gt;&lt;/code&gt; . Ver &lt;a href=&quot;exporter&quot;&gt;exportador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd402063fc23c838fdd082ec0039119a677f8477" translate="yes" xml:space="preserve">
          <source>You can request that the flock() constants (LOCK_SH, LOCK_EX, LOCK_NB and LOCK_UN) be provided by using the tag &lt;code&gt;:flock&lt;/code&gt;. See &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f4701466ab8780e7a2b0e9f2a17e8d0b7017d5" translate="yes" xml:space="preserve">
          <source>You can request that the old constants (FAPPEND, FASYNC, FCREAT, FDEFER, FEXCL, FNDELAY, FNONBLOCK, FSYNC, FTRUNC) be provided for compatibility reasons by using the tag &lt;code&gt;:Fcompat&lt;/code&gt; . For new applications the newer versions of these constants are suggested (O_APPEND, O_ASYNC, O_CREAT, O_DEFER, O_EXCL, O_NDELAY, O_NONBLOCK, O_SYNC, O_TRUNC).</source>
          <target state="translated">Puede solicitar que las constantes antiguas (FAPPEND, FASYNC, FCREAT, FDEFER, FEXCL, FNDELAY, FNONBLOCK, FSYNC, FTRUNC) se proporcionen por razones de compatibilidad utilizando la etiqueta &lt;code&gt;:Fcompat&lt;/code&gt; . Para aplicaciones nuevas, se sugieren las versiones m&amp;aacute;s recientes de estas constantes (O_APPEND, O_ASYNC, O_CREAT, O_DEFER, O_EXCL, O_NDELAY, O_NONBLOCK, O_SYNC, O_TRUNC).</target>
        </trans-unit>
        <trans-unit id="2443b5b8d3d70bb42e56fa3047f34fa5b05587ad" translate="yes" xml:space="preserve">
          <source>You can request that the old constants (FAPPEND, FASYNC, FCREAT, FDEFER, FEXCL, FNDELAY, FNONBLOCK, FSYNC, FTRUNC) be provided for compatibility reasons by using the tag &lt;code&gt;:Fcompat&lt;/code&gt;. For new applications the newer versions of these constants are suggested (O_APPEND, O_ASYNC, O_CREAT, O_DEFER, O_EXCL, O_NDELAY, O_NONBLOCK, O_SYNC, O_TRUNC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaaaed5194349d7e53889bf69ba7c88d167c7d9" translate="yes" xml:space="preserve">
          <source>You can reset this cache by assigning an empty hashref to it, or individually remove keys.</source>
          <target state="translated">Puedes reiniciar esta caché asignándole un hashref vacío,o eliminar las teclas individualmente.</target>
        </trans-unit>
        <trans-unit id="c4fc671bd928d082df8dcbc4d77c81ac14538200" translate="yes" xml:space="preserve">
          <source>You can retrieve the result via -&amp;gt;data but usually you don't have to because the stringify operator (&quot;&quot;) is overridden to do exactly that.</source>
          <target state="translated">Puede recuperar el resultado a trav&amp;eacute;s de -&amp;gt; datos, pero normalmente no es necesario porque el operador de cadena de caracteres (&quot;&quot;) se anula para hacer exactamente eso.</target>
        </trans-unit>
        <trans-unit id="1bc6861c31e761832a97f33e3f90e04d306eb3ee" translate="yes" xml:space="preserve">
          <source>You can return the</source>
          <target state="translated">Puedes devolver el</target>
        </trans-unit>
        <trans-unit id="c5203f3ceab8b6b9bc7b6ca2deddcda6d494d3e9" translate="yes" xml:space="preserve">
          <source>You can run a command in the background with:</source>
          <target state="translated">Puedes ejecutar un comando en el fondo con:</target>
        </trans-unit>
        <trans-unit id="c92356e98ca4379f9b92a2bcc41db6e953218853" translate="yes" xml:space="preserve">
          <source>You can run all the tests with the following commands:</source>
          <target state="translated">Puede ejecutar todas las pruebas con los siguientes comandos:</target>
        </trans-unit>
        <trans-unit id="dab3a450deb8a8c4cd405b2e23f88d23efbbf2ec" translate="yes" xml:space="preserve">
          <source>You can run an individual test by a command similar to</source>
          <target state="translated">Puedes hacer una prueba individual con un comando similar a</target>
        </trans-unit>
        <trans-unit id="7019e534322025bbdc3a56a0ada6decc0fac6688" translate="yes" xml:space="preserve">
          <source>You can run into similar problems when you store &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; or &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; into AVs or HVs. Trying to modify such elements will give you the following error:</source>
          <target state="translated">Puede encontrarse con problemas similares cuando almacena &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; o &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; en AV o HV. Intentar modificar dichos elementos le dar&amp;aacute; el siguiente error:</target>
        </trans-unit>
        <trans-unit id="48a3f2e45a171b8580b9277e027aa9cbf304aecf" translate="yes" xml:space="preserve">
          <source>You can run part of the test suite by hand by using one of the following commands from the</source>
          <target state="translated">Puede ejecutar parte del conjunto de pruebas a mano utilizando uno de los siguientes comandos del</target>
        </trans-unit>
        <trans-unit id="8428671802bcea1f2c15f381a5fa2ece33821ca0" translate="yes" xml:space="preserve">
          <source>You can safely ignore the line about &quot;prototyping behavior&quot; - it is explained in &lt;a href=&quot;perlxs#The-PROTOTYPES%3A-Keyword&quot;&gt;&quot;The PROTOTYPES: Keyword&quot; in perlxs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9677002a55994cfb79edd644465223dc6f275627" translate="yes" xml:space="preserve">
          <source>You can safely ignore the line about &quot;prototyping behavior&quot; - it is explained in &lt;a href=&quot;perlxs#The-PROTOTYPES%3a-Keyword&quot;&gt;The PROTOTYPES: Keyword in perlxs&lt;/a&gt;.</source>
          <target state="translated">Puede ignorar con seguridad la l&amp;iacute;nea sobre &quot;comportamiento de creaci&amp;oacute;n de prototipos&quot;; se explica en &lt;a href=&quot;perlxs#The-PROTOTYPES%3a-Keyword&quot;&gt;Los PROTOTIPOS: Palabra clave en perlxs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00bbb0e9f9b7d267fed175221358a00b2882f0e8" translate="yes" xml:space="preserve">
          <source>You can safely replace &lt;code&gt;isa&lt;/code&gt; with &lt;code&gt;DOES&lt;/code&gt; (although the converse is not true).</source>
          <target state="translated">Puede reemplazar con seguridad &lt;code&gt;isa&lt;/code&gt; con &lt;code&gt;DOES&lt;/code&gt; (aunque lo contrario no es cierto).</target>
        </trans-unit>
        <trans-unit id="f3c22b7008ae62adff98ca02982c07c25fd7ebcc" translate="yes" xml:space="preserve">
          <source>You can say &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; and &lt;code&gt;*foo{NAME}&lt;/code&gt; to find out what name and package the *foo symbol table entry comes from. This may be useful in a subroutine that gets passed typeglobs as arguments:</source>
          <target state="translated">Puede decir &lt;code&gt;*foo{PACKAGE}&lt;/code&gt; y &lt;code&gt;*foo{NAME}&lt;/code&gt; para averiguar de qu&amp;eacute; nombre y paquete proviene la entrada de la tabla de s&amp;iacute;mbolos * foo. Esto puede ser &amp;uacute;til en una subrutina que se pasa typeglobs como argumentos:</target>
        </trans-unit>
        <trans-unit id="1966e0b952d6a25db96c9f73b3f341a3e54cf712" translate="yes" xml:space="preserve">
          <source>You can say &lt;code&gt;BEGIN { $Exporter::Verbose=1 }&lt;/code&gt; to see how the specifications are being processed and what is actually being imported into modules.</source>
          <target state="translated">Puede decir &lt;code&gt;BEGIN { $Exporter::Verbose=1 }&lt;/code&gt; para ver c&amp;oacute;mo se procesan las especificaciones y qu&amp;eacute; se est&amp;aacute; importando realmente a los m&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="0ffa8d04bb2be838b7be17e141561b51ef27dbcb" translate="yes" xml:space="preserve">
          <source>You can search CPAN on &lt;a href=&quot;http://metacpan.org&quot;&gt;http://metacpan.org&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt;.</source>
          <target state="translated">Puede buscar CPAN en &lt;a href=&quot;http://metacpan.org&quot;&gt;http://metacpan.org&lt;/a&gt; o &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60a987a3bb2545fd9e1606745f4c8b7aa743cafc" translate="yes" xml:space="preserve">
          <source>You can search CPAN on &lt;a href=&quot;http://metacpan.org&quot;&gt;http://metacpan.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35edd1c5de5f9ad53d0b3f76129a1ba33239c166" translate="yes" xml:space="preserve">
          <source>You can search CPAN on &lt;a href=&quot;https://metacpan.org&quot;&gt;http://metacpan.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decda746759f350cc820cd1383e913824bf2e767" translate="yes" xml:space="preserve">
          <source>You can search for &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; related bug reports at &lt;a href=&quot;http://rt.cpan.org/Public/&quot;&gt;http://rt.cpan.org/Public/&lt;/a&gt;. If needed submit any new bugs, problems, patches, etc. to: &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=threads&quot;&gt;http://rt.cpan.org/Public/Dist/Display.html?Name=threads&lt;/a&gt;</source>
          <target state="translated">Puede buscar informes de errores relacionados con &lt;a href=&quot;threads&quot;&gt;hilos&lt;/a&gt; en &lt;a href=&quot;http://rt.cpan.org/Public/&quot;&gt;http://rt.cpan.org/Public/&lt;/a&gt; . Si es necesario, env&amp;iacute;e nuevos errores, problemas, parches, etc. a: &lt;a href=&quot;http://rt.cpan.org/Public/Dist/Display.html?Name=threads&quot;&gt;http://rt.cpan.org/Public/Dist/Display.html?Name=threads&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e97ec90c5b6d0afa6264e332a770f1df3b2195d9" translate="yes" xml:space="preserve">
          <source>You can search for &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; related bug reports at &lt;a href=&quot;https://rt.cpan.org/Public/&quot;&gt;https://rt.cpan.org/Public/&lt;/a&gt;. If needed submit any new bugs, problems, patches, etc. to: &lt;a href=&quot;https://rt.cpan.org/Public/Dist/Display.html?Name=threads&quot;&gt;https://rt.cpan.org/Public/Dist/Display.html?Name=threads&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802f6c1f9273b694e1c0cdbd6edb66de5f11d6b4" translate="yes" xml:space="preserve">
          <source>You can see from the above that the effect of &lt;code&gt;unicode_strings&lt;/code&gt; increased over several Perl releases. (And Perl's support for Unicode continues to improve; it's best to use the latest available release in order to get the most complete and accurate results possible.) Note that &lt;code&gt;unicode_strings&lt;/code&gt; is automatically chosen if you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; or higher.</source>
          <target state="translated">Puede ver en lo anterior que el efecto de &lt;code&gt;unicode_strings&lt;/code&gt; aument&amp;oacute; en varias versiones de Perl. (Y el soporte de Perl para Unicode contin&amp;uacute;a mejorando; es mejor usar la &amp;uacute;ltima versi&amp;oacute;n disponible para obtener los resultados m&amp;aacute;s completos y precisos posibles). Tenga en cuenta que &lt;code&gt;unicode_strings&lt;/code&gt; se elige autom&amp;aacute;ticamente si &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; o superior.</target>
        </trans-unit>
        <trans-unit id="46b2856a8d70679ee475ab545d871ca0c4c93809" translate="yes" xml:space="preserve">
          <source>You can see from the above that the effect of &lt;code&gt;unicode_strings&lt;/code&gt; increased over several Perl releases. (And Perl's support for Unicode continues to improve; it's best to use the latest available release in order to get the most complete and accurate results possible.) Note that &lt;code&gt;unicode_strings&lt;/code&gt; is automatically chosen if you &lt;code&gt;use 5.012&lt;/code&gt; or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3b0475986391ff28ff08c186138fbea404f4a4" translate="yes" xml:space="preserve">
          <source>You can see recent commits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169f5a8ded36f882f89340ed4481186781ecd0dd" translate="yes" xml:space="preserve">
          <source>You can see this with the following:</source>
          <target state="translated">Puedes ver esto con lo siguiente:</target>
        </trans-unit>
        <trans-unit id="f79ce90f40044bb7e9b04185de2c778bbed128b2" translate="yes" xml:space="preserve">
          <source>You can see what files are changed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30453af312489e18bd58825504c04b5c3c816c5" translate="yes" xml:space="preserve">
          <source>You can see whether your Perl was built with PerlIO by running &lt;code&gt;perl -V&lt;/code&gt; and looking for the &lt;code&gt;useperlio=&lt;/code&gt; line. If &lt;code&gt;useperlio&lt;/code&gt; is &lt;code&gt;define&lt;/code&gt; , you have PerlIO; otherwise you don't.</source>
          <target state="translated">Puede ver si su Perl fue construido con PerlIO ejecutando &lt;code&gt;perl -V&lt;/code&gt; y buscando la l&amp;iacute;nea &lt;code&gt;useperlio=&lt;/code&gt; . Si &lt;code&gt;useperlio&lt;/code&gt; est&amp;aacute; &lt;code&gt;define&lt;/code&gt; , tiene PerlIO; de lo contrario no lo hace.</target>
        </trans-unit>
        <trans-unit id="1d64238a1676682fd78cc68f5aa21599974d313a" translate="yes" xml:space="preserve">
          <source>You can see which (or neither) threading flavour you have by running &lt;code&gt;perl -V&lt;/code&gt; and looking at the &lt;code&gt;Platform&lt;/code&gt; section. If you have &lt;code&gt;useithreads=define&lt;/code&gt; you have ithreads, if you have &lt;code&gt;use5005threads=define&lt;/code&gt; you have 5.005 threads. If you have neither, you don't have any thread support built in. If you have both, you are in trouble.</source>
          <target state="translated">Puede ver qu&amp;eacute; tipo de subprocesos (o ninguno) tiene ejecutando &lt;code&gt;perl -V&lt;/code&gt; y mirando la secci&amp;oacute;n &lt;code&gt;Platform&lt;/code&gt; . Si tienes &lt;code&gt;useithreads=define&lt;/code&gt; tienes ithreads, si tienes &lt;code&gt;use5005threads=define&lt;/code&gt; tienes 5.005 hilos. Si no tiene ninguno, no tiene ning&amp;uacute;n soporte de subprocesos incorporado. Si tiene ambos, est&amp;aacute; en problemas.</target>
        </trans-unit>
        <trans-unit id="8dc1d6869249a32d7f829c0b3a5e051d9383488b" translate="yes" xml:space="preserve">
          <source>You can see why the arrows are important. Without them, we would have had to write &lt;code&gt;${$a[1]}[2]&lt;/code&gt; instead of &lt;code&gt;$a[1][2]&lt;/code&gt; . For three-dimensional arrays, they let us write &lt;code&gt;$x[2][3][5]&lt;/code&gt; instead of the unreadable &lt;code&gt;${${$x[2]}[3]}[5]&lt;/code&gt; .</source>
          <target state="translated">Puedes ver por qu&amp;eacute; las flechas son importantes. Sin ellos, habr&amp;iacute;amos tenido que escribir &lt;code&gt;${$a[1]}[2]&lt;/code&gt; lugar de &lt;code&gt;$a[1][2]&lt;/code&gt; . Para matrices tridimensionales, nos permiten escribir &lt;code&gt;$x[2][3][5]&lt;/code&gt; lugar del ilegible &lt;code&gt;${${$x[2]}[3]}[5]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="317655eca25364352776afb5bed80ace1fea4f49" translate="yes" xml:space="preserve">
          <source>You can see why the arrows are important. Without them, we would have had to write &lt;code&gt;${$a[1]}[2]&lt;/code&gt; instead of &lt;code&gt;$a[1][2]&lt;/code&gt;. For three-dimensional arrays, they let us write &lt;code&gt;$x[2][3][5]&lt;/code&gt; instead of the unreadable &lt;code&gt;${${$x[2]}[3]}[5]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46ad3852d414e337d72bbed36bfa27c57b29adc" translate="yes" xml:space="preserve">
          <source>You can set and query each of these options interactively in the cpan shell with the &lt;code&gt;o conf&lt;/code&gt; or the &lt;code&gt;o conf init&lt;/code&gt; command as specified below.</source>
          <target state="translated">Puede configurar y consultar cada una de estas opciones de forma interactiva en el shell cpan con el comando &lt;code&gt;o conf&lt;/code&gt; o &lt;code&gt;o conf init&lt;/code&gt; como se especifica a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="16508b3f102bc9307eda4b040c0235215ac4aad7" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; elements to set the POSIX realtime signal handlers, use &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; on the elements, and use &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; to find out how many POSIX realtime signals there are available &lt;code&gt;(SIGRTMAX - SIGRTMIN + 1&lt;/code&gt; , the &lt;code&gt;SIGRTMAX&lt;/code&gt; is a valid POSIX realtime signal).</source>
          <target state="translated">Puede configurar los elementos &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; para configurar los manejadores de se&amp;ntilde;ales POSIX en tiempo real, usar &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; en los elementos, y usar &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt;&lt;/code&gt; en &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; para averiguar cu&amp;aacute;ntas se&amp;ntilde;ales POSIX en tiempo real hay disponibles &lt;code&gt;(SIGRTMAX - SIGRTMIN + 1&lt;/code&gt; , el &lt;code&gt;SIGRTMAX&lt;/code&gt; es una se&amp;ntilde;al POSIX v&amp;aacute;lida en tiempo real).</target>
        </trans-unit>
        <trans-unit id="79ff7651cbb8cbdef1e9fddeb8df40c39df09e89" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; elements to set the POSIX realtime signal handlers, use &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;exists&lt;/code&gt; on the elements, and use &lt;code&gt;scalar&lt;/code&gt; on the &lt;code&gt;%POSIX::SIGRT&lt;/code&gt; to find out how many POSIX realtime signals there are available &lt;code&gt;(SIGRTMAX - SIGRTMIN + 1&lt;/code&gt;, the &lt;code&gt;SIGRTMAX&lt;/code&gt; is a valid POSIX realtime signal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6da332e187deef2beadbe770ab6beeaee593c3" translate="yes" xml:space="preserve">
          <source>You can set the values of the &lt;code&gt;%SIG&lt;/code&gt; hash to be the functions you want to handle the signal. After perl catches the signal, it looks in &lt;code&gt;%SIG&lt;/code&gt; for a key with the same name as the signal, then calls the subroutine value for that key.</source>
          <target state="translated">Puede establecer los valores del hash &lt;code&gt;%SIG&lt;/code&gt; para que sean las funciones que desea manejar la se&amp;ntilde;al. Despu&amp;eacute;s de que perl capta la se&amp;ntilde;al, busca en &lt;code&gt;%SIG&lt;/code&gt; una clave con el mismo nombre que la se&amp;ntilde;al, luego llama al valor de subrutina para esa clave.</target>
        </trans-unit>
        <trans-unit id="4b3c0110aa09f64da5c5df5eac7d33e443e6104d" translate="yes" xml:space="preserve">
          <source>You can set the variable &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; to 0 if you are sure the filesystem you are scanning reflects the number of subdirectories in the parent directory's &lt;code&gt;nlink&lt;/code&gt; count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee1469992dc1b9c8f0b603349904e7ab865deb8" translate="yes" xml:space="preserve">
          <source>You can set the variable &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; to 1, if you want to force File::Find to always stat directories. This was used for file systems that do not have an &lt;code&gt;nlink&lt;/code&gt; count matching the number of sub-directories. Examples are ISO-9660 (CD-ROM), AFS, HPFS (OS/2 file system), FAT (DOS file system) and a couple of others.</source>
          <target state="translated">Puede establecer la variable &lt;code&gt;$File::Find::dont_use_nlink&lt;/code&gt; en 1, si desea forzar File :: Find a directorios siempre estad&amp;iacute;sticos. Se utiliz&amp;oacute; para sistemas de archivos que no tienen un recuento de &lt;code&gt;nlink&lt;/code&gt; que coincida con el n&amp;uacute;mero de subdirectorios. Algunos ejemplos son ISO-9660 (CD-ROM), AFS, HPFS (sistema de archivos OS / 2), FAT (sistema de archivos DOS) y un par de otros.</target>
        </trans-unit>
        <trans-unit id="5472b025e4a5169aacbf87f4ca700aef907769b9" translate="yes" xml:space="preserve">
          <source>You can set these attributes on the parser object before you call &lt;code&gt;parse_file&lt;/code&gt; (or a similar method) on it:</source>
          <target state="translated">Puede establecer estos atributos en el objeto del analizador antes de llamar a &lt;code&gt;parse_file&lt;/code&gt; (o un m&amp;eacute;todo similar) en &amp;eacute;l:</target>
        </trans-unit>
        <trans-unit id="d11091c76638b6f543204cac0351812864021173" translate="yes" xml:space="preserve">
          <source>You can set these with cereg.exe, a (remote) registry editor or via the PerlIDE.</source>
          <target state="translated">Puede configurarlos con cereg.exe,un editor de registro (remoto)o a través del PerlIDE.</target>
        </trans-unit>
        <trans-unit id="a45d7d92f838159f25ad37c4eba92cfbf985fe7f" translate="yes" xml:space="preserve">
          <source>You can set this in your &lt;code&gt;CPAN.pm&lt;/code&gt; configuration so modules automatically install in your private library directory when you use the CPAN.pm shell:</source>
          <target state="translated">Puede establecer esto en su configuraci&amp;oacute;n de &lt;code&gt;CPAN.pm&lt;/code&gt; para que los m&amp;oacute;dulos se instalen autom&amp;aacute;ticamente en el directorio de su biblioteca privada cuando usa el shell CPAN.pm:</target>
        </trans-unit>
        <trans-unit id="30390221c1f07dd9de6ff3b92b3e83f72d1fc24c" translate="yes" xml:space="preserve">
          <source>You can sometimes</source>
          <target state="translated">A veces puedes</target>
        </trans-unit>
        <trans-unit id="7db7fa33c434550059625aa8e8d2392ae86f8c71" translate="yes" xml:space="preserve">
          <source>You can specify a character class, by enclosing a list of characters in &lt;code&gt;[]&lt;/code&gt; , which will match any character from the list. If the first character after the &quot;[&quot; is &quot;^&quot;, the class matches any character not in the list. Within a list, the &quot;-&quot; character specifies a range, so that &lt;code&gt;a-z&lt;/code&gt; represents all characters between &quot;a&quot; and &quot;z&quot;, inclusive. If you want either &quot;-&quot; or &quot;]&quot; itself to be a member of a class, put it at the start of the list (possibly after a &quot;^&quot;), or escape it with a backslash. &quot;-&quot; is also taken literally when it is at the end of the list, just before the closing &quot;]&quot;. (The following all specify the same class of three characters: &lt;code&gt;[-az]&lt;/code&gt; , &lt;code&gt;[az-]&lt;/code&gt; , and &lt;code&gt;[a\-z]&lt;/code&gt; . All are different from &lt;code&gt;[a-z]&lt;/code&gt; , which specifies a class containing twenty-six characters, even on EBCDIC-based character sets.) Also, if you try to use the character classes &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\S&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; , or &lt;code&gt;\D&lt;/code&gt; as endpoints of a range, the &quot;-&quot; is understood literally.</source>
          <target state="translated">Puede especificar una clase de car&amp;aacute;cter adjuntando una lista de caracteres en &lt;code&gt;[]&lt;/code&gt; , que coincidir&amp;aacute; con cualquier car&amp;aacute;cter de la lista. Si el primer car&amp;aacute;cter despu&amp;eacute;s de &quot;[&quot; es &quot;^&quot;, la clase coincide con cualquier car&amp;aacute;cter que no est&amp;eacute; en la lista. Dentro de una lista, el car&amp;aacute;cter &quot;-&quot; especifica un rango, de modo que &lt;code&gt;a-z&lt;/code&gt; representa todos los caracteres entre &quot;a&quot; y &quot;z&quot;, inclusive. Si desea que &quot;-&quot; o &quot;]&quot; sean miembros de una clase, col&amp;oacute;quelo al principio de la lista (posiblemente despu&amp;eacute;s de &quot;^&quot;), o elim&amp;iacute;nelo con una barra invertida. &quot;-&quot; tambi&amp;eacute;n se toma literalmente cuando est&amp;aacute; al final de la lista, justo antes del cierre &quot;]&quot;. (Todos los siguientes especifican la misma clase de tres caracteres: &lt;code&gt;[-az]&lt;/code&gt; , &lt;code&gt;[az-]&lt;/code&gt; ,y &lt;code&gt;[a\-z]&lt;/code&gt; . Todos son diferentes de &lt;code&gt;[a-z]&lt;/code&gt; , que especifica una clase que contiene veintis&amp;eacute;is caracteres, incluso en conjuntos de caracteres basados ​​en EBCDIC). Adem&amp;aacute;s, si intenta utilizar las clases de caracteres &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\W&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\S&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; o &lt;code&gt;\D&lt;/code&gt; como puntos finales de un rango, el &quot;-&quot; se entiende literalmente.</target>
        </trans-unit>
        <trans-unit id="26fab1522afd0e2727fdb333919185675d766a45" translate="yes" xml:space="preserve">
          <source>You can specify a precision (for numeric conversions) or a maximum width (for string conversions) by specifying a &lt;code&gt;.&lt;/code&gt; followed by a number. For floating-point formats except &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;G&lt;/code&gt; , this specifies how many places right of the decimal point to show (the default being 6). For example:</source>
          <target state="translated">Puede especificar una precisi&amp;oacute;n (para conversiones num&amp;eacute;ricas) o un ancho m&amp;aacute;ximo (para conversiones de cadenas) especificando un &lt;code&gt;.&lt;/code&gt; seguido de un n&amp;uacute;mero. Para los formatos de punto flotante, excepto &lt;code&gt;g&lt;/code&gt; y &lt;code&gt;G&lt;/code&gt; , especifica el n&amp;uacute;mero de lugares a la derecha del punto decimal para mostrar (por defecto es 6). Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="eb60daa97062d5b450232fe33f31d785b7b34956" translate="yes" xml:space="preserve">
          <source>You can specify a precision (for numeric conversions) or a maximum width (for string conversions) by specifying a &lt;code&gt;.&lt;/code&gt; followed by a number. For floating-point formats except &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;G&lt;/code&gt;, this specifies how many places right of the decimal point to show (the default being 6). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7117f36d5a9b63e0e2af83d4187313124e5bec9" translate="yes" xml:space="preserve">
          <source>You can specify a series of alternatives for a pattern using &quot;|&quot; to separate them, so that &lt;code&gt;fee|fie|foe&lt;/code&gt; will match any of &quot;fee&quot;, &quot;fie&quot;, or &quot;foe&quot; in the target string (as would &lt;code&gt;f(e|i|o)e&lt;/code&gt;). The first alternative includes everything from the last pattern delimiter (&quot;(&quot;, &quot;(?:&quot;, etc. or the beginning of the pattern) up to the first &quot;|&quot;, and the last alternative contains everything from the last &quot;|&quot; to the next closing pattern delimiter. That's why it's common practice to include alternatives in parentheses: to minimize confusion about where they start and end.</source>
          <target state="translated">Puede especificar una serie de alternativas para un patr&amp;oacute;n usando &quot;|&quot; para separarlos, de modo que &lt;code&gt;fee|fie|foe&lt;/code&gt; coincidir&amp;aacute; con cualquiera de &quot;fee&quot;, &quot;fie&quot; o &quot;foe&quot; en la cadena de destino (como lo har&amp;iacute;a &lt;code&gt;f(e|i|o)e&lt;/code&gt; ). La primera alternativa incluye todo desde el &amp;uacute;ltimo delimitador de patr&amp;oacute;n (&quot;(&quot;, &quot;(?:&quot;, Etc. o el comienzo del patr&amp;oacute;n) hasta el primer &quot;|&quot;, y la &amp;uacute;ltima alternativa contiene todo desde el &amp;uacute;ltimo &quot;|&quot; al siguiente delimitador de patr&amp;oacute;n de cierre. Por eso es una pr&amp;aacute;ctica com&amp;uacute;n incluir alternativas entre par&amp;eacute;ntesis: para minimizar la confusi&amp;oacute;n acerca de d&amp;oacute;nde comienzan y terminan.</target>
        </trans-unit>
        <trans-unit id="2c0acf2a3cfcada005163c068fb15aa1f1ca963b" translate="yes" xml:space="preserve">
          <source>You can specify several classes to try by joining them with commas or semicolons, as in &lt;code&gt;-MTk::SuperPod;Tk::Pod&lt;/code&gt; .</source>
          <target state="translated">Puede especificar varias clases para probar uni&amp;eacute;ndolas con comas o punto y coma, como en &lt;code&gt;-MTk::SuperPod;Tk::Pod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="641b8e676fa0d8d749c4f8fe7240158e55ec8e1b" translate="yes" xml:space="preserve">
          <source>You can specify several classes to try by joining them with commas or semicolons, as in &lt;code&gt;-MTk::SuperPod;Tk::Pod&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1590cfec6710042ae4b201c340cadca79997b8f8" translate="yes" xml:space="preserve">
          <source>You can stop using AutoLoader by simply</source>
          <target state="translated">Puedes dejar de usar el autocargador simplemente</target>
        </trans-unit>
        <trans-unit id="2a07cd3fd8cff327607dbfc5239cb17fe58be132" translate="yes" xml:space="preserve">
          <source>You can subclass an existing HashBase class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb2363990bc861a2294e72254c60f889449d2d6" translate="yes" xml:space="preserve">
          <source>You can switch encodings on an already opened stream by using &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt;; see &lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;.</source>
          <target state="translated">Puede cambiar las codificaciones en una secuencia ya abierta utilizando &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt; ; ver &lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="408bf98559257c5c2b42f635092e2cb73454caf6" translate="yes" xml:space="preserve">
          <source>You can switch encodings on an already opened stream by using &lt;code&gt;binmode()&lt;/code&gt;; see &lt;a href=&quot;perlfunc#binmode&quot;&gt;&quot;binmode&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4a77a592ef4f50bebb75551ecc777ec47349e4" translate="yes" xml:space="preserve">
          <source>You can switch locales as often as you wish at run time with the &lt;code&gt;POSIX::setlocale()&lt;/code&gt; function:</source>
          <target state="translated">Puede cambiar de configuraci&amp;oacute;n regional tantas veces como desee en tiempo de ejecuci&amp;oacute;n con la funci&amp;oacute;n &lt;code&gt;POSIX::setlocale()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4591a0f85fb87cbd2147c9e7634ca2d54faf481c" translate="yes" xml:space="preserve">
          <source>You can tell if using locales is safe on your system by looking at the read-only boolean variable &lt;code&gt;${^SAFE_LOCALES}&lt;/code&gt;. The value is 1 if the perl is not threaded, or if it is using thread-safe locale operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35fb0ec3f2c6e87bec34d10cff3e1fa0aa39f99" translate="yes" xml:space="preserve">
          <source>You can test for these with Perl's &lt;b&gt;-S&lt;/b&gt; file test:</source>
          <target state="translated">Puede probarlos con la prueba de archivo &lt;b&gt;-S&lt;/b&gt; de Perl :</target>
        </trans-unit>
        <trans-unit id="33cabbc3e6b78a04641195c801755295c5b1770a" translate="yes" xml:space="preserve">
          <source>You can test out changing these variables temporarily, and if the new settings seem to help, put those settings into your shell startup files. Consult your local documentation for the exact details. For Bourne-like shells (&lt;b&gt;sh&lt;/b&gt;, &lt;b&gt;ksh&lt;/b&gt;, &lt;b&gt;bash&lt;/b&gt;, &lt;b&gt;zsh&lt;/b&gt;):</source>
          <target state="translated">Puede probar el cambio de estas variables temporalmente, y si la nueva configuraci&amp;oacute;n parece ayudar, coloque esas configuraciones en sus archivos de inicio de shell. Consulte su documentaci&amp;oacute;n local para obtener los detalles exactos. Para shells tipo Bourne ( &lt;b&gt;sh&lt;/b&gt; , &lt;b&gt;ksh&lt;/b&gt; , &lt;b&gt;bash&lt;/b&gt; , &lt;b&gt;zsh&lt;/b&gt; ):</target>
        </trans-unit>
        <trans-unit id="9aef87ade0298c8e39a512c631e34755f8d99a1d" translate="yes" xml:space="preserve">
          <source>You can test whether an SV is using copy-on-write with &lt;code&gt;SvIsCOW(sv)&lt;/code&gt; .</source>
          <target state="translated">Puede probar si un SV est&amp;aacute; usando copia en escritura con &lt;code&gt;SvIsCOW(sv)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="397833f042c8b1f602c31dae872891a03b284f7c" translate="yes" xml:space="preserve">
          <source>You can test whether an SV is using copy-on-write with &lt;code&gt;SvIsCOW(sv)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7b765496cd5db87bb4e9bf905826761c1ac026" translate="yes" xml:space="preserve">
          <source>You can therefore save time by reusing this object as follows;</source>
          <target state="translated">Por lo tanto,puede ahorrar tiempo reutilizando este objeto de la siguiente manera;</target>
        </trans-unit>
        <trans-unit id="9025bea13f42c28d6d27d405ef555cfdfb67e0c5" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;typeof&lt;/code&gt; operator.</source>
          <target state="translated">Se puede pensar en &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;typeof&lt;/code&gt; operador.</target>
        </trans-unit>
        <trans-unit id="cf104869dd9c15f6376b764dcf7d585d45ca8039" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;typeof&lt;/code&gt; operator.</source>
          <target state="translated">Se puede pensar en &lt;code&gt;&lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; como &lt;code&gt;typeof&lt;/code&gt; operador.</target>
        </trans-unit>
        <trans-unit id="728882433c08d9f5799a415b920db42fb16d9b1c" translate="yes" xml:space="preserve">
          <source>You can think of a module as the fundamental unit of reusable Perl code; see &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for details. Whenever anyone creates a chunk of Perl code that they think will be useful to the world, they register as a Perl developer at &lt;a href=&quot;http://www.cpan.org/modules/04pause.html&quot;&gt;http://www.cpan.org/modules/04pause.html&lt;/a&gt; so that they can then upload their code to the CPAN. The CPAN is the Comprehensive Perl Archive Network and can be accessed at &lt;a href=&quot;http://www.cpan.org/&quot;&gt;http://www.cpan.org/&lt;/a&gt; , and searched at &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</source>
          <target state="translated">Puede pensar en un m&amp;oacute;dulo como la unidad fundamental del c&amp;oacute;digo Perl reutilizable; vea &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; para m&amp;aacute;s detalles. Siempre que alguien crea un fragmento de c&amp;oacute;digo Perl que crea que ser&amp;aacute; &amp;uacute;til para el mundo, se registra como desarrollador de Perl en &lt;a href=&quot;http://www.cpan.org/modules/04pause.html&quot;&gt;http://www.cpan.org/modules/04pause.html&lt;/a&gt; para luego cargar su c&amp;oacute;digo en el CPAN. CPAN es la Red Integral de Archivos de Perl y se puede acceder a ella en &lt;a href=&quot;http://www.cpan.org/&quot;&gt;http://www.cpan.org/&lt;/a&gt; y se puede buscar en &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f66f02858677c3e7654c4ad6291c3ba16be82841" translate="yes" xml:space="preserve">
          <source>You can think of a module as the fundamental unit of reusable Perl code; see &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for details. Whenever anyone creates a chunk of Perl code that they think will be useful to the world, they register as a Perl developer at &lt;a href=&quot;https://www.cpan.org/modules/04pause.html&quot;&gt;https://www.cpan.org/modules/04pause.html&lt;/a&gt; so that they can then upload their code to the CPAN. The CPAN is the Comprehensive Perl Archive Network and can be accessed at &lt;a href=&quot;https://www.cpan.org/&quot;&gt;https://www.cpan.org/&lt;/a&gt; , and searched at &lt;a href=&quot;https://metacpan.org/&quot;&gt;https://metacpan.org/&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969f96d8ec4df0c71d177e6b1625408e665ae979" translate="yes" xml:space="preserve">
          <source>You can tie the cache tables to any sort of tied hash that you want to, as long as it supports &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , and &lt;code&gt;EXISTS&lt;/code&gt; . For example,</source>
          <target state="translated">Puede vincular las tablas de cach&amp;eacute; a cualquier tipo de hash vinculado que desee, siempre que sea compatible con &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; y &lt;code&gt;EXISTS&lt;/code&gt; . Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="067fb5762580d2bd9d11414d9eb17e488c70c98d" translate="yes" xml:space="preserve">
          <source>You can tie the cache tables to any sort of tied hash that you want to, as long as it supports &lt;code&gt;TIEHASH&lt;/code&gt;, &lt;code&gt;FETCH&lt;/code&gt;, &lt;code&gt;STORE&lt;/code&gt;, and &lt;code&gt;EXISTS&lt;/code&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dff5882ff33a85a3a95fb0e709084606bfc8485" translate="yes" xml:space="preserve">
          <source>You can try using encryption via source filters (Filter::* from CPAN, or Filter::Util::Call and Filter::Simple since Perl 5.8). But crackers might be able to decrypt it. You can try using the byte code compiler and interpreter described below, but crackers might be able to de-compile it. You can try using the native-code compiler described below, but crackers might be able to disassemble it. These pose varying degrees of difficulty to people wanting to get at your code, but none can definitively conceal it (this is true of every language, not just Perl).</source>
          <target state="translated">Puedes intentar usar la encriptación a través de filtros de origen (Filter::*de CPAN,o Filter::Util::Call y Filter::Simple desde Perl 5.8).Pero los crackers podrían ser capaces de desencriptarlo.Puedes intentar usar el compilador e intérprete de código de bytes descrito a continuación,pero los crackers podrían ser capaces de descompilarlo.Puedes intentar usar el compilador de código nativo descrito a continuación,pero los crackers podrían ser capaces de desensamblarlo.Estos plantean diversos grados de dificultad a las personas que desean obtener su código,pero ninguno puede ocultarlo definitivamente (esto es cierto para todos los idiomas,no sólo para Perl).</target>
        </trans-unit>
        <trans-unit id="bd149095683892a2c8050e33a089a96e4ba58ba3" translate="yes" xml:space="preserve">
          <source>You can try using encryption via source filters (Starting from Perl 5.8 the Filter::Simple and Filter::Util::Call modules are included in the standard distribution), but any decent programmer will be able to decrypt it. You can try using the byte code compiler and interpreter described later in &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt;, but the curious might still be able to de-compile it. You can try using the native-code compiler described later, but crackers might be able to disassemble it. These pose varying degrees of difficulty to people wanting to get at your code, but none can definitively conceal it (true of every language, not just Perl).</source>
          <target state="translated">Puede intentar usar el cifrado a trav&amp;eacute;s de filtros de origen (a partir de Perl 5.8, los m&amp;oacute;dulos Filter :: Simple y Filter :: Util :: Call est&amp;aacute;n incluidos en la distribuci&amp;oacute;n est&amp;aacute;ndar), pero cualquier programador decente podr&amp;aacute; descifrarlo. Puede intentar usar el compilador e int&amp;eacute;rprete de c&amp;oacute;digo de bytes que se describen m&amp;aacute;s adelante en &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt; , pero los curiosos a&amp;uacute;n pueden descompilarlo . Puede intentar usar el compilador de c&amp;oacute;digo nativo que se describe m&amp;aacute;s adelante, pero los crackers podr&amp;iacute;an desensamblarlo. Estos plantean diversos grados de dificultad para las personas que desean acceder a su c&amp;oacute;digo, pero ninguno puede ocultarlo definitivamente (cierto en todos los idiomas, no solo en Perl).</target>
        </trans-unit>
        <trans-unit id="2b09b812e89e288611a3620bc913b5b1b0fe4650" translate="yes" xml:space="preserve">
          <source>You can turn off that eagerness-to-help by declaring an attribute handler with the keyword &lt;code&gt;RAWDATA&lt;/code&gt; . For example:</source>
          <target state="translated">Puede desactivar ese af&amp;aacute;n de ayudar declarando un controlador de atributos con la palabra clave &lt;code&gt;RAWDATA&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="411d0a05d6b5a0d470da1b804c20182fb7f3b7be" translate="yes" xml:space="preserve">
          <source>You can turn off that eagerness-to-help by declaring an attribute handler with the keyword &lt;code&gt;RAWDATA&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49d0ea6561f21345168a93b25795d827d9b3e56" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#%28%3F%23text%29&quot;&gt;&quot;(?#text)&quot;&lt;/a&gt; to create a comment that ends earlier than the end of the current line, but &lt;code&gt;text&lt;/code&gt; also can't contain the closing delimiter unless escaped with a backslash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5701868a13c5d43cf7a782ca599e3f4284f18bb" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#(%3f%23text)&quot;&gt;(?#text)&lt;/a&gt; to create a comment that ends earlier than the end of the current line, but &lt;code&gt;text&lt;/code&gt; also can't contain the closing delimiter unless escaped with a backslash.</source>
          <target state="translated">Puede usar &lt;a href=&quot;#(%3f%23text)&quot;&gt;(? #Text)&lt;/a&gt; para crear un comentario que termine antes del final de la l&amp;iacute;nea actual, pero el &lt;code&gt;text&lt;/code&gt; o tampoco puede contener el delimitador de cierre a menos que se escape con una barra invertida.</target>
        </trans-unit>
        <trans-unit id="46e1962292f1a1a38164468a62659371a7ced694" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#prop_values%28%29&quot;&gt;&quot;prop_values()&quot;&lt;/a&gt; to find out if a given property is one which has a restricted set of values, and if so, what those values are. But usually each value actually has several synonyms. For example, in Unicode binary properties,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d944fb3215d0dd16d4105b924d26c8f26a00944" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#prop_values()&quot;&gt;prop_values()&lt;/a&gt; to find out if a given property is one which has a restricted set of values, and if so, what those values are. But usually each value actually has several synonyms. For example, in Unicode binary properties,</source>
          <target state="translated">Puede usar &lt;a href=&quot;#prop_values()&quot;&gt;prop_values ​​()&lt;/a&gt; para averiguar si una propiedad dada es una que tiene un conjunto restringido de valores, y si es as&amp;iacute;, cu&amp;aacute;les son esos valores. Pero normalmente cada valor tiene varios sin&amp;oacute;nimos. Por ejemplo, en las propiedades binarias Unicode,</target>
        </trans-unit>
        <trans-unit id="53b328e86a1c8561fad7e05704d7dac310eecbe7" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;Number::Format&quot;&gt;Number::Format&lt;/a&gt; to separate places in a number. It handles locale information for those of you who want to insert full stops instead (or anything else that they want to use, really).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c9a75863cb6d9c190a426b8b3063cbac50315b" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;URI::Find&quot;&gt;URI::Find&lt;/a&gt; or &lt;a href=&quot;URL::Search&quot;&gt;URL::Search&lt;/a&gt; to extract URLs from an arbitrary text document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53d0563bc5da053955b9d3b7d437fbd188f8795" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://search.cpan.org/perldoc/Number::Format&quot;&gt;Number::Format&lt;/a&gt; to separate places in a number. It handles locale information for those of you who want to insert full stops instead (or anything else that they want to use, really).</source>
          <target state="translated">Puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/Number::Format&quot;&gt;Number :: Format&lt;/a&gt; para separar lugares en un n&amp;uacute;mero. Maneja la informaci&amp;oacute;n de la configuraci&amp;oacute;n regional para aquellos de ustedes que desean insertar puntos completos en su lugar (o cualquier otra cosa que quieran usar, realmente).</target>
        </trans-unit>
        <trans-unit id="49f5dd665c5e9d2b71ecb4caa05c28940c8fc3d9" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;http://search.cpan.org/perldoc/URI::Find&quot;&gt;URI::Find&lt;/a&gt; to extract URLs from an arbitrary text document.</source>
          <target state="translated">Puede usar &lt;a href=&quot;http://search.cpan.org/perldoc/URI::Find&quot;&gt;URI :: Find&lt;/a&gt; para extraer URL de un documento de texto arbitrario.</target>
        </trans-unit>
        <trans-unit id="7fe2956ea1b7c9e1e517ba013b7204dc28c702c8" translate="yes" xml:space="preserve">
          <source>You can use &lt;b&gt;-C0&lt;/b&gt; (or &lt;code&gt;&quot;0&quot;&lt;/code&gt; for &lt;code&gt;PERL_UNICODE&lt;/code&gt; ) to explicitly disable all the above Unicode features.</source>
          <target state="translated">Puede utilizar &lt;b&gt;-C0&lt;/b&gt; (o &lt;code&gt;&quot;0&quot;&lt;/code&gt; para &lt;code&gt;PERL_UNICODE&lt;/code&gt; ) para deshabilitar expl&amp;iacute;citamente todas las funciones Unicode anteriores.</target>
        </trans-unit>
        <trans-unit id="463dcf8fc0cca782c4e0e34c3ad93d1f8a2e69a8" translate="yes" xml:space="preserve">
          <source>You can use &lt;b&gt;-C0&lt;/b&gt; (or &lt;code&gt;&quot;0&quot;&lt;/code&gt; for &lt;code&gt;PERL_UNICODE&lt;/code&gt;) to explicitly disable all the above Unicode features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8820cb36e9b0a2ef9812096c3ae47e4337e70f22" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;-w optionname&lt;/code&gt; (without a value) as shorthand for &lt;code&gt;-w optionname:&lt;i&gt;TRUE&lt;/i&gt;&lt;/code&gt;. This is presumably useful in cases of on/off features like: &lt;code&gt;-w page_numbering&lt;/code&gt; .</source>
          <target state="translated">Puede usar &lt;code&gt;-w optionname&lt;/code&gt; (sin un valor) como abreviatura de &lt;code&gt;-w optionname:&lt;i&gt;TRUE&lt;/i&gt;&lt;/code&gt; . Es de suponer que esto es &amp;uacute;til en casos de funciones de activaci&amp;oacute;n / desactivaci&amp;oacute;n como: &lt;code&gt;-w page_numbering&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d92d50a80d7de3bbc1a703e905f54b306c769ca9" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;-w optionname&lt;/code&gt; (without a value) as shorthand for &lt;code&gt;-w optionname:&lt;i&gt;TRUE&lt;/i&gt;&lt;/code&gt;. This is presumably useful in cases of on/off features like: &lt;code&gt;-w page_numbering&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34722383d4a6c958172dfe61f02074274ede7a9" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; without parentheses to locate the end of each input file, in case you want to append to each file, or reset line numbering (see example in &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;).</source>
          <target state="translated">Puede usar &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; sin par&amp;eacute;ntesis para ubicar el final de cada archivo de entrada, en caso de que desee agregarlo a cada archivo, o restablecer la numeraci&amp;oacute;n de l&amp;iacute;neas (vea el ejemplo en &lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7509178f0cc142ffa6970d993aa78a311665535a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; if the columns are separated by whitespace or some other delimiter, as long as whitespace or the delimiter cannot appear as part of the data.</source>
          <target state="translated">Puede utilizar la &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; si las columnas est&amp;aacute;n separadas por espacios en blanco o alg&amp;uacute;n otro delimitador, siempre que los espacios en blanco o el delimitador no puedan aparecer como parte de los datos.</target>
        </trans-unit>
        <trans-unit id="6118fe862d5ba72dadefc97ab80da97946efe653" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;eof&lt;/code&gt; without parentheses to locate the end of each input file, in case you want to append to each file, or reset line numbering (see example in &lt;a href=&quot;perlfunc#eof&quot;&gt;&quot;eof&quot; in perlfunc&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9d607e237fddf53d59f7e552edb64a49ae50a5" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;no Test2::IPC;&lt;/code&gt; to disable IPC for good. You can also use the T2_NO_IPC env var.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daea58cf28c3fae97111d40d3f6273a0428003e" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;split&lt;/code&gt; if the columns are separated by whitespace or some other delimiter, as long as whitespace or the delimiter cannot appear as part of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207bd81996c41f563d70786505a61f566bf7c9d1" translate="yes" xml:space="preserve">
          <source>You can use Andreas Koenig's CPAN module ( &lt;a href=&quot;http://www.cpan.org/modules/by-module/CPAN&quot;&gt;http://www.cpan.org/modules/by-module/CPAN&lt;/a&gt; ) to automate the following steps, from DECOMPRESS through INSTALL.</source>
          <target state="translated">Puede utilizar el m&amp;oacute;dulo CPAN de Andreas Koenig ( &lt;a href=&quot;http://www.cpan.org/modules/by-module/CPAN&quot;&gt;http://www.cpan.org/modules/by-module/CPAN&lt;/a&gt; ) para automatizar los siguientes pasos, desde DESCOMPRIMIR hasta INSTALAR.</target>
        </trans-unit>
        <trans-unit id="e7b5250e276d656c30117b7ccc528681aa0fdc2f" translate="yes" xml:space="preserve">
          <source>You can use Andreas Koenig's CPAN module ( &lt;a href=&quot;https://metacpan.org/release/CPAN&quot;&gt;https://metacpan.org/release/CPAN&lt;/a&gt; ) to automate the following steps, from DECOMPRESS through INSTALL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4fa2e9a279c718478efb15dbd58f3963c395b2" translate="yes" xml:space="preserve">
          <source>You can use Perl's somewhat exotic &lt;code&gt;..&lt;/code&gt; operator (documented in &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt;):</source>
          <target state="translated">Puede utilizar el operador &lt;code&gt;..&lt;/code&gt; algo ex&amp;oacute;tico de Perl (documentado en &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="0352c7c82515615be31fde318d8a078c0a2c1a97" translate="yes" xml:space="preserve">
          <source>You can use a leading underscore to indicate that a variable or function should not be used outside the package that defined it.</source>
          <target state="translated">Puede utilizar un guión bajo para indicar que una variable o función no debe ser utilizada fuera del paquete que la definió.</target>
        </trans-unit>
        <trans-unit id="388231cbd33477282c1e5dc7ff7aa725ad26b114" translate="yes" xml:space="preserve">
          <source>You can use a string as if it were a reference. If you use the string &lt;code&gt;&quot;foo&quot;&lt;/code&gt; as an array reference, it's taken to be a reference to the array &lt;code&gt;@foo&lt;/code&gt; . This is called a</source>
          <target state="translated">Puede utilizar una cadena como si fuera una referencia. Si usa la cadena &lt;code&gt;&quot;foo&quot;&lt;/code&gt; como una referencia de matriz, se toma como una referencia a la matriz &lt;code&gt;@foo&lt;/code&gt; . Esto se llama</target>
        </trans-unit>
        <trans-unit id="f196929f5477404a496f1eb939b7d7fae56076c9" translate="yes" xml:space="preserve">
          <source>You can use a string as if it were a reference. If you use the string &lt;code&gt;&quot;foo&quot;&lt;/code&gt; as an array reference, it's taken to be a reference to the array &lt;code&gt;@foo&lt;/code&gt;. This is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc3bc3485dafe6de0835e8cb890731728d4f233" translate="yes" xml:space="preserve">
          <source>You can use an &quot;=&quot; instead of the &quot;:&quot;, as in: &lt;code&gt;-w textsize=15&lt;/code&gt; . This might be more (or less) convenient, depending on what shell you use.</source>
          <target state="translated">Puede utilizar un &quot;=&quot; en lugar de &quot;:&quot;, como en: &lt;code&gt;-w textsize=15&lt;/code&gt; . Esto puede ser m&amp;aacute;s (o menos) conveniente, dependiendo del shell que use.</target>
        </trans-unit>
        <trans-unit id="574332bc08377fe482a2062d389f5bfcb77e4baa" translate="yes" xml:space="preserve">
          <source>You can use an &quot;=&quot; instead of the &quot;:&quot;, as in: &lt;code&gt;-w textsize=15&lt;/code&gt;. This might be more (or less) convenient, depending on what shell you use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72421369c1a6f65beaf183288338ba69c655cf15" translate="yes" xml:space="preserve">
          <source>You can use an alternative library to drive Math::BigInt. See the section &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;&quot;MATH LIBRARY&quot;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659b448e1309e418ec405468f01e562189ac5581" translate="yes" xml:space="preserve">
          <source>You can use an alternative library to drive Math::BigInt. See the section &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;MATH LIBRARY&lt;/a&gt; for more information.</source>
          <target state="translated">Puede usar una biblioteca alternativa para manejar Math :: BigInt. Consulte la secci&amp;oacute;n &lt;a href=&quot;#MATH-LIBRARY&quot;&gt;BIBLIOTECA DE MATEM&amp;Aacute;TICAS&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f7c7a81f2a96d58e5477ffb42832551e4a65a1ae" translate="yes" xml:space="preserve">
          <source>You can use and redistribute this document under the same terms as Perl itself.</source>
          <target state="translated">Puede utilizar y redistribuir este documento bajo los mismos términos que el propio Perl.</target>
        </trans-unit>
        <trans-unit id="02346143e059d2c6966f5b1da988acae6f664ce7" translate="yes" xml:space="preserve">
          <source>You can use another collation element table if desired.</source>
          <target state="translated">Si lo desea,puede utilizar otra tabla de elementos de cotejo.</target>
        </trans-unit>
        <trans-unit id="80ffd7e86ab2f265c3b1b5af5301c88022dfacbd" translate="yes" xml:space="preserve">
          <source>You can use any combination of the methods from none to all four.</source>
          <target state="translated">Puedes usar cualquier combinación de los métodos,desde ninguno hasta los cuatro.</target>
        </trans-unit>
        <trans-unit id="727cc3b9105721ca57e170521deb86b9cfbaaa16" translate="yes" xml:space="preserve">
          <source>You can use any combination of the methods, from none, to all four.</source>
          <target state="translated">Puedes usar cualquier combinación de los métodos,desde ninguno,hasta los cuatro.</target>
        </trans-unit>
        <trans-unit id="d63724145019d1ea36fba22c0caf955250b6107a" translate="yes" xml:space="preserve">
          <source>You can use either &lt;code&gt;filter()&lt;/code&gt; or &lt;code&gt;pre_filter()&lt;/code&gt;, depending on your needs. Both have identical syntax, so only &lt;code&gt;filter()&lt;/code&gt; is shown here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf084acc213926a976c0b6e7b2d7ff58c8a1c98" translate="yes" xml:space="preserve">
          <source>You can use formatting codes in ordinary paragraphs, for &lt;b&gt;bold&lt;/b&gt;,</source>
          <target state="translated">Puede utilizar c&amp;oacute;digos de formato en p&amp;aacute;rrafos normales, para &lt;b&gt;negrita&lt;/b&gt; ,</target>
        </trans-unit>
        <trans-unit id="7b0f4d35c03dc40ee00f05e56f139894c4c251ca" translate="yes" xml:space="preserve">
          <source>You can use it as follows:</source>
          <target state="translated">Puedes usarlo de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="cfbc7862683635b53050e53b7defa0eddc13b749" translate="yes" xml:space="preserve">
          <source>You can use more than one source filter on a single file. Similarly, you can reuse the same filter in as many files as you like.</source>
          <target state="translated">Puedes usar más de un filtro de fuente en un solo archivo.Del mismo modo,puedes reutilizar el mismo filtro en tantos archivos como quieras.</target>
        </trans-unit>
        <trans-unit id="cb2c65d2dbc0740833a918a76d1bf6977975706a" translate="yes" xml:space="preserve">
          <source>You can use parentheses for functions' arguments or omit them according to your personal taste. They are only required occasionally to clarify issues of precedence.</source>
          <target state="translated">Puede usar paréntesis para los argumentos de las funciones u omitirlos según su gusto personal.Sólo se requieren ocasionalmente para aclarar cuestiones de precedencia.</target>
        </trans-unit>
        <trans-unit id="78045ec633e87e0c82678bcb8abea9b50b38e139" translate="yes" xml:space="preserve">
          <source>You can use that same structure to count the entries any way that you like. If you want the count of the keys with vowels in them, you just test for that instead:</source>
          <target state="translated">Puedes usar esa misma estructura para contar las entradas de la forma que quieras.Si quieres el recuento de las claves con vocales en ellas,sólo tienes que probarlo:</target>
        </trans-unit>
        <trans-unit id="1690d1523426f507501d7105b1df0c66115ba59a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;#substr-EXPR%2COFFSET%2CLENGTH%2CREPLACEMENT&quot;&gt;&lt;code&gt;substr&lt;/code&gt;&lt;/a&gt; function as an lvalue, in which case EXPR must itself be an lvalue. If you assign something shorter than LENGTH, the string will shrink, and if you assign something longer than LENGTH, the string will grow to accommodate it. To keep the string the same length, you may need to pad or chop your value using &lt;a href=&quot;#sprintf-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;sprintf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f3236da7ba1e40bfd7a845e9acaf4bc53886e9" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;File::Random&quot;&gt;File::Random&lt;/a&gt; module which provides a function for that algorithm:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ff1d721e6d422eb2eb3595a270ae28f16f631d" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;Term::ANSIScreen&quot;&gt;Term::ANSIScreen&lt;/a&gt; module to get the special sequence. Import the &lt;code&gt;cls&lt;/code&gt; function (or the &lt;code&gt;:screen&lt;/code&gt; tag):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6328463814d0d727ad78cc1185df620969d34550" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;Time::JulianDay&quot;&gt;Time::JulianDay&lt;/a&gt; module available on CPAN. Ensure that you really want to find a Julian day, though, as many people have different ideas about Julian days (see &lt;a href=&quot;http://www.hermetic.ch/cal_stud/jdn.htm&quot;&gt;http://www.hermetic.ch/cal_stud/jdn.htm&lt;/a&gt; for instance):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd3c53d8040ec103bb8a5c0b0a769aa081bccb4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;Time::Piece&quot;&gt;Time::Piece&lt;/a&gt; module, part of the Standard Library, which can convert a date/time to a Julian Day:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264d904732b18badb8f8af0ee614fe938cb62fd3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;http://search.cpan.org/perldoc/File::Random&quot;&gt;File::Random&lt;/a&gt; module which provides a function for that algorithm:</source>
          <target state="translated">Puede usar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/File::Random&quot;&gt;File :: Random&lt;/a&gt; que proporciona una funci&amp;oacute;n para ese algoritmo:</target>
        </trans-unit>
        <trans-unit id="12dc43addaceb3325735b42235a5db7b043fe8e8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ANSIScreen&quot;&gt;Term::ANSIScreen&lt;/a&gt; module to get the special sequence. Import the &lt;code&gt;cls&lt;/code&gt; function (or the &lt;code&gt;:screen&lt;/code&gt; tag):</source>
          <target state="translated">Puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Term::ANSIScreen&quot;&gt;Term :: ANSIScreen&lt;/a&gt; para obtener la secuencia especial. Importe la funci&amp;oacute;n &lt;code&gt;cls&lt;/code&gt; (o la etiqueta &lt;code&gt;:screen&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="5e45dc25f4fd438a13c8ce07a9424e43bd367039" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;http://search.cpan.org/perldoc/Time::JulianDay&quot;&gt;Time::JulianDay&lt;/a&gt; module available on CPAN. Ensure that you really want to find a Julian day, though, as many people have different ideas about Julian days (see &lt;a href=&quot;http://www.hermetic.ch/cal_stud/jdn.htm&quot;&gt;http://www.hermetic.ch/cal_stud/jdn.htm&lt;/a&gt; for instance):</source>
          <target state="translated">Puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;http://search.cpan.org/perldoc/Time::JulianDay&quot;&gt;Time :: JulianDay&lt;/a&gt; disponible en CPAN. Sin embargo, aseg&amp;uacute;rese de que realmente desea encontrar un d&amp;iacute;a juliano, ya que muchas personas tienen diferentes ideas sobre los d&amp;iacute;as julianos (consulte &lt;a href=&quot;http://www.hermetic.ch/cal_stud/jdn.htm&quot;&gt;http://www.hermetic.ch/cal_stud/jdn.htm,&lt;/a&gt; por ejemplo):</target>
        </trans-unit>
        <trans-unit id="ba1788ef1bedfa0514aebf9080742800f7823493" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;time/piece&quot;&gt;Time::Piece&lt;/a&gt; module, part of the Standard Library, which can convert a date/time to a Julian Day:</source>
          <target state="translated">Puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;time/piece&quot;&gt;Time :: Piece&lt;/a&gt; , parte de la biblioteca est&amp;aacute;ndar, que puede convertir una fecha / hora en un d&amp;iacute;a juliano:</target>
        </trans-unit>
        <trans-unit id="19bff3f43fe0160ae5712a54b49b7225e08cf437" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; variable to detect if you are currently in the global destruction phase:</source>
          <target state="translated">Puede usar la variable &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; para detectar si se encuentra actualmente en la fase de destrucci&amp;oacute;n global:</target>
        </trans-unit>
        <trans-unit id="c3b01f73c25a67d7de0988508e3d6a08d549191f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; keyword to fall through from one case to the next:</source>
          <target state="translated">Puede usar la palabra clave &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; para pasar de un caso al siguiente:</target>
        </trans-unit>
        <trans-unit id="0512ec103381f142d5cd53ad55c41fe8a57f36b8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $array[$idx]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $hash{key}&lt;/code&gt; constructs to delete a composite type entry for the current block and restore it when it ends. They return the array/hash value before the localization, which means that they are respectively equivalent to</source>
          <target state="translated">Puede usar el &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $array[$idx]&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt; &lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $hash{key}&lt;/code&gt; construcciones locales $ hash {key} para eliminar una entrada de tipo compuesto para el bloque actual y restaurarla cuando finalice. Devuelven el valor de matriz / hash antes de la localizaci&amp;oacute;n, lo que significa que son respectivamente equivalentes a</target>
        </trans-unit>
        <trans-unit id="e75c67446fa3d94c780e921da6acd4affb168a6f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; built-in function in scalar context to find out have many entries you have in a hash:</source>
          <target state="translated">Puede usar la funci&amp;oacute;n incorporada &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys()&lt;/a&gt;&lt;/code&gt; en un contexto escalar para averiguar si tiene muchas entradas en un hash:</target>
        </trans-unit>
        <trans-unit id="32a43fdc7d4ed02e813e0075b65927b5536f01d4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; functions to reset &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;. To simply reset the iterator used by &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; without doing anything else, use one of them in void context:</source>
          <target state="translated">Puede utilizar las funciones de &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; para restablecer &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; . Para simplemente restablecer el iterador usado por &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; sin hacer nada m&amp;aacute;s, use uno de ellos en contexto vac&amp;iacute;o:</target>
        </trans-unit>
        <trans-unit id="91d95a3ba11b677c44eabfc4c39139686174c03a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;END&lt;/code&gt; block to simulate &lt;code&gt;atexit()&lt;/code&gt; . Each package's &lt;code&gt;END&lt;/code&gt; block is called when the program or thread ends. See the &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; manpage for more details about &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="translated">Puede usar el bloque &lt;code&gt;END&lt;/code&gt; para simular &lt;code&gt;atexit()&lt;/code&gt; . El bloque &lt;code&gt;END&lt;/code&gt; de cada paquete se llama cuando finaliza el programa o el hilo. Consulte la p&amp;aacute;gina de &lt;a href=&quot;perlmod&quot;&gt;manual de perlmod&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre los bloques &lt;code&gt;END&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4356379b81876248477b6f357e68e2915cc3c4a7" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;END&lt;/code&gt; block to simulate &lt;code&gt;atexit()&lt;/code&gt;. Each package's &lt;code&gt;END&lt;/code&gt; block is called when the program or thread ends. See the &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; manpage for more details about &lt;code&gt;END&lt;/code&gt; blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf833c1822dba958c8327441530b019e90d9f3c" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;Text::Soundex&lt;/code&gt; module. If you want to do fuzzy or close matching, you might also try the &lt;a href=&quot;String::Approx&quot;&gt;String::Approx&lt;/a&gt;, and &lt;a href=&quot;Text::Metaphone&quot;&gt;Text::Metaphone&lt;/a&gt;, and &lt;a href=&quot;Text::DoubleMetaphone&quot;&gt;Text::DoubleMetaphone&lt;/a&gt; modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23320d34367d7c8e19c4f3b2648a39107aaceafc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;Text::Soundex&lt;/code&gt; module. If you want to do fuzzy or close matching, you might also try the &lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String::Approx&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Metaphone&quot;&gt;Text::Metaphone&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Text::DoubleMetaphone&quot;&gt;Text::DoubleMetaphone&lt;/a&gt; modules.</source>
          <target state="translated">Puede utilizar el m&amp;oacute;dulo &lt;code&gt;Text::Soundex&lt;/code&gt; . Si desea hacer una coincidencia aproximada o aproximada, tambi&amp;eacute;n puede probar los m&amp;oacute;dulos &lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String :: Approx&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Metaphone&quot;&gt;Text :: Metaphone&lt;/a&gt; y &lt;a href=&quot;http://search.cpan.org/perldoc/Text::DoubleMetaphone&quot;&gt;Text :: DoubleMetaphone&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="488d88c32abab4c7103bc8a9f7d995aca32467c4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;UNIVERSAL&lt;/code&gt; class (see &lt;a href=&quot;universal&quot;&gt;UNIVERSAL&lt;/a&gt;). However, please be very careful to consider the consequences of doing this: adding methods to every object is very likely to have unintended consequences. If possible, it would be better to have all your object inherit from some common base class, or to use an object system like Moose that supports roles.</source>
          <target state="translated">Puede utilizar la clase &lt;code&gt;UNIVERSAL&lt;/code&gt; (ver &lt;a href=&quot;universal&quot;&gt;UNIVERSAL&lt;/a&gt; ). Sin embargo, tenga mucho cuidado de considerar las consecuencias de hacer esto: agregar m&amp;eacute;todos a cada objeto es muy probable que tenga consecuencias no deseadas. Si es posible, ser&amp;iacute;a mejor que todo su objeto heredara de alguna clase base com&amp;uacute;n, o usar un sistema de objetos como Moose que admita roles.</target>
        </trans-unit>
        <trans-unit id="9e82c1f5d6a6827f8e16779cc47df9c04d7d8adc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;\[]&lt;/code&gt; backslash group notation to specify more than one allowed argument type. For example:</source>
          <target state="translated">Puede usar la notaci&amp;oacute;n de grupo de barra invertida &lt;code&gt;\[]&lt;/code&gt; para especificar m&amp;aacute;s de un tipo de argumento permitido. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="29a5b3337e458ba95bc1ff4b8a89d182c9528c72" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;break&lt;/code&gt; keyword to break out of the enclosing &lt;code&gt;given&lt;/code&gt; block. Every &lt;code&gt;when&lt;/code&gt; block is implicitly ended with a &lt;code&gt;break&lt;/code&gt; .</source>
          <target state="translated">Puede usar la palabra clave &lt;code&gt;break&lt;/code&gt; para salir del bloque &lt;code&gt;given&lt;/code&gt; encierra . Cada bloque de &lt;code&gt;when&lt;/code&gt; termina impl&amp;iacute;citamente con una &lt;code&gt;break&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bba1699dbcdd0690079aefe9fd9ab593286631dc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;break&lt;/code&gt; keyword to break out of the enclosing &lt;code&gt;given&lt;/code&gt; block. Every &lt;code&gt;when&lt;/code&gt; block is implicitly ended with a &lt;code&gt;break&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949c9a5e3f3716d2943d21cb6815e4a1eba07109" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;continue&lt;/code&gt; keyword to fall through from one case to the next immediate &lt;code&gt;when&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5ebdd2538225dc5126d819377dd6fa733157f0" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;delete local $array[$idx]&lt;/code&gt; and &lt;code&gt;delete local $hash{key}&lt;/code&gt; constructs to delete a composite type entry for the current block and restore it when it ends. They return the array/hash value before the localization, which means that they are respectively equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424781ac9f1048ec292a7a68c49b74676d773d63" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;keys()&lt;/code&gt; built-in function in scalar context to find out have many entries you have in a hash:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6ffcfb4d7d7a8b446a2b5b6c864d29b7abf92a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;keys&lt;/code&gt; or &lt;code&gt;values&lt;/code&gt; functions to reset &lt;code&gt;each&lt;/code&gt;. To simply reset the iterator used by &lt;code&gt;each&lt;/code&gt; without doing anything else, use one of them in void context:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e6268ce8a22314d30cc236ac406a7320d8f9ec" translate="yes" xml:space="preserve">
          <source>You can use the Configure script in non-interactive mode too. When I built my</source>
          <target state="translated">También puede utilizar el guión Configurar en modo no interactivo.Cuando construí mi</target>
        </trans-unit>
        <trans-unit id="a88ac92f15e86bfef2bc330f6e37cbdfaa5d2949" translate="yes" xml:space="preserve">
          <source>You can use the POSIX character class syntax &lt;code&gt;/[[:alpha:]]/&lt;/code&gt; documented in &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">Puede utilizar la sintaxis de clase de caracteres POSIX &lt;code&gt;/[[:alpha:]]/&lt;/code&gt; documentada en &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e278d58c9ab507fbb7f9453e431896c65ad5fd6f" translate="yes" xml:space="preserve">
          <source>You can use the SDK by exporting some additions to Perl's 'ccflags' and '..flags' config variables:</source>
          <target state="translated">Puedes usar el SDK exportando algunas adiciones a las variables de configuración de Perl 'ccflags' y '..flags':</target>
        </trans-unit>
        <trans-unit id="2cbe3a7e5b8b2c8d5af954d0911633deaa0d280d" translate="yes" xml:space="preserve">
          <source>You can use the WILDCARD option to enable the debugging output of this subpattern matching. Careful! This can lead to voluminous outputs, and it may not make much sense to you what and why Perl is doing what it is. But it may be helpful to you to see why things aren't going the way you expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcba1d434e18427e8484e54d9e14e5566e79c6d1" translate="yes" xml:space="preserve">
          <source>You can use the builtin &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; function for most filehandles, but it won't (easily) work on a terminal device. For STDIN, either use the Term::ReadKey module from CPAN or use the sample code in &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">Puede usar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; incorporada para la mayor&amp;iacute;a de los identificadores de archivos, pero no funcionar&amp;aacute; (f&amp;aacute;cilmente) en un dispositivo terminal. Para STDIN, use el m&amp;oacute;dulo Term :: ReadKey de CPAN o use el c&amp;oacute;digo de muestra en &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="576855da70920d778b0c9c1adac6f51a7f5843b4" translate="yes" xml:space="preserve">
          <source>You can use the builtin &lt;code&gt;getc()&lt;/code&gt; function for most filehandles, but it won't (easily) work on a terminal device. For STDIN, either use the Term::ReadKey module from CPAN or use the sample code in &lt;a href=&quot;perlfunc#getc&quot;&gt;&quot;getc&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad23301638fa59a074f7b5a830adc451b7882aec" translate="yes" xml:space="preserve">
          <source>You can use the debugger's &lt;code&gt;x&lt;/code&gt; command to dump out complex data structures. For example, given the assignment to $AoA above, here's the debugger output:</source>
          <target state="translated">Puede utilizar el comando &lt;code&gt;x&lt;/code&gt; del depurador para descargar estructuras de datos complejas. Por ejemplo, dada la asignaci&amp;oacute;n a $ AoA anterior, aqu&amp;iacute; est&amp;aacute; la salida del depurador:</target>
        </trans-unit>
        <trans-unit id="26aa247b07d1815cd4598322a5a4fc92732d8a40" translate="yes" xml:space="preserve">
          <source>You can use the file handle returned by &lt;code&gt;vmsopen&lt;/code&gt; just as you would any other Perl file handle. The class VMS::Stdio ISA IO::File, so you can call IO::File methods using the handle returned by &lt;code&gt;vmsopen&lt;/code&gt;. However, &lt;code&gt;use&lt;/code&gt;ing VMS::Stdio does not automatically &lt;code&gt;use&lt;/code&gt; IO::File; you must do so explicitly in your program if you want to call IO::File methods. This is done to avoid the overhead of initializing the IO::File package in programs which intend to use the handle returned by &lt;code&gt;vmsopen&lt;/code&gt; as a normal Perl file handle only. When the scalar containing a VMS::Stdio file handle is overwritten, &lt;code&gt;undef&lt;/code&gt;d, or goes out of scope, the associated file is closed automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95e7176a4cdb8eb19d859ce523240b91e0d516f" translate="yes" xml:space="preserve">
          <source>You can use the following types of values for allow:</source>
          <target state="translated">Puede utilizar los siguientes tipos de valores para permitir:</target>
        </trans-unit>
        <trans-unit id="3ce0a691bebd0b371247224bb7f78a55fdff48f0" translate="yes" xml:space="preserve">
          <source>You can use the four-argument form of sysread to continually add to a buffer. After you add to the buffer, you check if you have a complete line (using your regular expression).</source>
          <target state="translated">Puedes usar la forma de cuatro argumentos de sysread para añadir continuamente a un buffer.Después de añadir al buffer,comprueba si tienes una línea completa (usando tu expresión regular).</target>
        </trans-unit>
        <trans-unit id="68293f8666171fe0ed45f0e78671e51ac55dfe3d" translate="yes" xml:space="preserve">
          <source>You can use the open source 7-zip ( &lt;a href=&quot;https://www.7-zip.org/&quot;&gt;https://www.7-zip.org/&lt;/a&gt; ) or the shareware Winzip ( &lt;a href=&quot;https://www.winzip.com&quot;&gt;https://www.winzip.com&lt;/a&gt; ) to decompress and unpack modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da343e9c661b7d9b54a6aef1473ed8a755544823" translate="yes" xml:space="preserve">
          <source>You can use the shareware Winzip ( &lt;a href=&quot;http://www.winzip.com&quot;&gt;http://www.winzip.com&lt;/a&gt; ) to decompress and unpack modules.</source>
          <target state="translated">Puede utilizar el shareware Winzip ( &lt;a href=&quot;http://www.winzip.com&quot;&gt;http://www.winzip.com&lt;/a&gt; ) para descomprimir y descomprimir m&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="29131242da6a21b6f2efd67a20aaa973ec754794" translate="yes" xml:space="preserve">
          <source>You can use the substitution operator to find pairs of characters (or runs of characters) and replace them with a single instance. In this substitution, we find a character in &lt;code&gt;(.)&lt;/code&gt;. The memory parentheses store the matched character in the back-reference &lt;code&gt;\g1&lt;/code&gt; and we use that to require that the same thing immediately follow it. We replace that part of the string with the character in &lt;code&gt;$1&lt;/code&gt; .</source>
          <target state="translated">Puede utilizar el operador de sustituci&amp;oacute;n para buscar pares de caracteres (o series de caracteres) y reemplazarlos con una sola instancia. En esta sustituci&amp;oacute;n, encontramos un car&amp;aacute;cter en &lt;code&gt;(.)&lt;/code&gt; . Los par&amp;eacute;ntesis de memoria almacenan el car&amp;aacute;cter coincidente en la referencia &lt;code&gt;\g1&lt;/code&gt; y lo usamos para requerir que lo mismo siga inmediatamente. Reemplazamos esa parte de la cadena con el car&amp;aacute;cter en &lt;code&gt;$1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f3665d3fee5fef1523abafbe5cde6dfe44f5710" translate="yes" xml:space="preserve">
          <source>You can use the substitution operator to find pairs of characters (or runs of characters) and replace them with a single instance. In this substitution, we find a character in &lt;code&gt;(.)&lt;/code&gt;. The memory parentheses store the matched character in the back-reference &lt;code&gt;\g1&lt;/code&gt; and we use that to require that the same thing immediately follow it. We replace that part of the string with the character in &lt;code&gt;$1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56ec6ea26f22e6bec1d13c6dc597e46c1853d2d" translate="yes" xml:space="preserve">
          <source>You can use the substr() function as an lvalue, in which case EXPR must itself be an lvalue. If you assign something shorter than LENGTH, the string will shrink, and if you assign something longer than LENGTH, the string will grow to accommodate it. To keep the string the same length, you may need to pad or chop your value using &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Puede usar la funci&amp;oacute;n substr () como un lvalue, en cuyo caso EXPR debe ser un lvalue. Si asigna algo m&amp;aacute;s corto que LENGTH, la cadena se encoger&amp;aacute;, y si asigna algo m&amp;aacute;s largo que LENGTH, la cadena crecer&amp;aacute; para acomodarlo. Para mantener la cadena de la misma longitud, es posible que deba rellenar o cortar su valor usando &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5696279d1bd6b651a532c13cf176bc61670cde27" translate="yes" xml:space="preserve">
          <source>You can use the substr() function as an lvalue, in which case EXPR must itself be an lvalue. If you assign something shorter than LENGTH, the string will shrink, and if you assign something longer than LENGTH, the string will grow to accommodate it. To keep the string the same length, you may need to pad or chop your value using &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Puede usar la funci&amp;oacute;n substr () como un lvalue, en cuyo caso EXPR debe ser un lvalue. Si asigna algo m&amp;aacute;s corto que LENGTH, la cadena se encoger&amp;aacute;, y si asigna algo m&amp;aacute;s largo que LENGTH, la cadena crecer&amp;aacute; para acomodarlo. Para mantener la cadena de la misma longitud, es posible que deba rellenar o cortar su valor usando &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="370c9e4d882e8e3555298091312bb16cb7ba0b14" translate="yes" xml:space="preserve">
          <source>You can use the tainted() function of the Scalar::Util module, available from CPAN (or included with Perl since release 5.8.0). See also &lt;a href=&quot;perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;&quot;Laundering and Detecting Tainted Data&quot; in perlsec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeed36c7e84bfafbf0ea57f25867379b77f770c" translate="yes" xml:space="preserve">
          <source>You can use the tainted() function of the Scalar::Util module, available from CPAN (or included with Perl since release 5.8.0). See also &lt;a href=&quot;perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;Laundering and Detecting Tainted Data in perlsec&lt;/a&gt;.</source>
          <target state="translated">Puede utilizar la funci&amp;oacute;n tainted () del m&amp;oacute;dulo Scalar :: Util, disponible en CPAN (o incluido con Perl desde la versi&amp;oacute;n 5.8.0). Consulte tambi&amp;eacute;n &lt;a href=&quot;perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;Lavado y detecci&amp;oacute;n de datos contaminados en perlsec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67ef5a8d9d775587994b1c8525522dac443d6c25" translate="yes" xml:space="preserve">
          <source>You can use the three-argument form of open to specify I/O layers (sometimes referred to as &quot;disciplines&quot;) to apply to the new filehandle. These affect how the input and output are processed (see &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; for more details). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d2af0acba58841da7d114d861e093a90573f8a" translate="yes" xml:space="preserve">
          <source>You can use these macros if you call code that may croak, but you need to do some cleanup before giving control back to Perl. For example:</source>
          <target state="translated">Puedes usar estas macros si llamas a un código que puede fallar,pero necesitas hacer una limpieza antes de devolverle el control a Perl.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="8d60246dfc629fa2c767c2383b114af7d8fad4bc" translate="yes" xml:space="preserve">
          <source>You can use this as a shortcut to determine whether &lt;code&gt;Archive::Tar&lt;/code&gt; will do what you think before passing compressed archives to its &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">Puede usar esto como un atajo para determinar si &lt;code&gt;Archive::Tar&lt;/code&gt; har&amp;aacute; lo que piensa antes de pasar archivos comprimidos a su m&amp;eacute;todo de &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbd42e35c7b3f7dd461bd372dbf9f5578060d86f" translate="yes" xml:space="preserve">
          <source>You can use this as a shortcut to determine whether &lt;code&gt;Archive::Tar&lt;/code&gt; will do what you think before passing compressed archives to its &lt;code&gt;read&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2583bc76f12f41a833e44f457c707f446ecc90f" translate="yes" xml:space="preserve">
          <source>You can use this class as the base class for a Pod formatter/processor.</source>
          <target state="translated">Puedes usar esta clase como la clase base para un formateador/procesador de Pod.</target>
        </trans-unit>
        <trans-unit id="ddc269b809151a32259fd4bfb2f0eaf592a60142" translate="yes" xml:space="preserve">
          <source>You can use this subroutine to get and set the traversal mask for a specific hash. Setting the mask ensures that a given hash will produce the same key order. &lt;b&gt;Note&lt;/b&gt; that this does &lt;b&gt;not&lt;/b&gt; guarantee that &lt;b&gt;two&lt;/b&gt; hashes will produce the same key order for the same hash seed and traversal mask, items that collide into one bucket may have different orders regardless of this setting.</source>
          <target state="translated">Puede utilizar esta subrutina para obtener y establecer la m&amp;aacute;scara transversal para un hash espec&amp;iacute;fico. Establecer la m&amp;aacute;scara asegura que un hash dado producir&amp;aacute; el mismo orden de claves. &lt;b&gt;Tenga en cuenta&lt;/b&gt; que esto &lt;b&gt;no&lt;/b&gt; garantiza que &lt;b&gt;dos&lt;/b&gt; hashes producir&amp;aacute;n el mismo orden de clave para la misma semilla de hash y m&amp;aacute;scara transversal, los elementos que colisionan en un dep&amp;oacute;sito pueden tener &amp;oacute;rdenes diferentes independientemente de esta configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3cb82727ce61d8edf5281f6c0ba4e6a9919853bd" translate="yes" xml:space="preserve">
          <source>You can use this to concatenate two scalars:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e57a6a3e1ac0e576a34f1deb9cbe35e8438d88f" translate="yes" xml:space="preserve">
          <source>You can use this to find out whether two handles refer to the same underlying descriptor:</source>
          <target state="translated">Puedes usar esto para averiguar si dos mangos se refieren al mismo descriptor subyacente:</target>
        </trans-unit>
        <trans-unit id="e2f6df83e5ac1b378170dbde8b31e8b10cee41f6" translate="yes" xml:space="preserve">
          <source>You can use this to print out all the variables in a package, for instance. The standard but antiquated</source>
          <target state="translated">Puedes usar esto para imprimir todas las variables de un paquete,por ejemplo.El estándar pero anticuado</target>
        </trans-unit>
        <trans-unit id="2c064b95103461f4732f35fcd238f5be71635622" translate="yes" xml:space="preserve">
          <source>You can use this to record all events AFTER they have been sent to the formatter. No changes made here will be meaningful, except possibly to other listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973b86bb17e6d843653e8421a775f98d4d43a73b" translate="yes" xml:space="preserve">
          <source>You can use this to remove a listen callback. You must pass in the coderef returned by the &lt;code&gt;listen()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fe2602c37d36cd939b3f2966e9882c1457b54a" translate="yes" xml:space="preserve">
          <source>You can use whitespace and the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator to lay them out more nicely:</source>
          <target state="translated">Puede usar espacios en blanco y el operador &lt;code&gt;=&amp;gt;&lt;/code&gt; para distribuirlos mejor:</target>
        </trans-unit>
        <trans-unit id="2a2d95bc6981ab5724b117c21adf2c42ff1324ac" translate="yes" xml:space="preserve">
          <source>You can watch Perl's regular expression engine at work to verify for yourself if Perl is recompiling a regular expression. The &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re
'debug'&lt;/code&gt; pragma (comes with Perl 5.005 and later) shows the details. With Perls before 5.6, you should see &lt;code&gt;re&lt;/code&gt; reporting that its compiling the regular expression on each iteration. With Perl 5.6 or later, you should only see &lt;code&gt;re&lt;/code&gt; report that for the first iteration.</source>
          <target state="translated">Puede ver el motor de expresiones regulares de Perl en funcionamiento para verificar por s&amp;iacute; mismo si Perl est&amp;aacute; recompilando una expresi&amp;oacute;n regular. El pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; (viene con Perl 5.005 y posterior) muestra los detalles. Con Perls antes de 5.6, deber&amp;iacute;a ver &lt;code&gt;re&lt;/code&gt; informar que su compilaci&amp;oacute;n de la expresi&amp;oacute;n regular en cada iteraci&amp;oacute;n. Con Perl 5.6 o posterior, s&amp;oacute;lo se debe ver &lt;code&gt;re&lt;/code&gt; informe que para la primera iteraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="be5157e72fec47ccda29a3884d0d6aa69a038c22" translate="yes" xml:space="preserve">
          <source>You can watch Perl's regular expression engine at work to verify for yourself if Perl is recompiling a regular expression. The &lt;code&gt;use re 'debug'&lt;/code&gt; pragma (comes with Perl 5.005 and later) shows the details. With Perls before 5.6, you should see &lt;code&gt;re&lt;/code&gt; reporting that its compiling the regular expression on each iteration. With Perl 5.6 or later, you should only see &lt;code&gt;re&lt;/code&gt; report that for the first iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a7534126966a35fdb290a82cc3eb90110d990" translate="yes" xml:space="preserve">
          <source>You can work around the first case by using the fully qualified name (&lt;code&gt;$Package::FOO&lt;/code&gt; ) where you need a local value, or by overriding it by saying &lt;code&gt;*FOO = *Package::FOO&lt;/code&gt; in your script.</source>
          <target state="translated">Puede solucionar el primer caso utilizando el nombre completo ( &lt;code&gt;$Package::FOO&lt;/code&gt; ) donde necesita un valor local, o anul&amp;aacute;ndolo diciendo &lt;code&gt;*FOO = *Package::FOO&lt;/code&gt; en su script.</target>
        </trans-unit>
        <trans-unit id="5d9ed6d1d4bf51c3f2d48b808ade1c9eb6d3e68f" translate="yes" xml:space="preserve">
          <source>You can work around the first case by using the fully qualified name (&lt;code&gt;$Package::FOO&lt;/code&gt;) where you need a local value, or by overriding it by saying &lt;code&gt;*FOO = *Package::FOO&lt;/code&gt; in your script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74896a00006c71879750ed85d659cbff45ee1a05" translate="yes" xml:space="preserve">
          <source>You can write this by hand or generate it with 'make manifest'.</source>
          <target state="translated">Puedes escribir esto a mano o generarlo con &quot;manifestar&quot;.</target>
        </trans-unit>
        <trans-unit id="b1c2fce28dbd805f8d7a870a949b6c5834632bf2" translate="yes" xml:space="preserve">
          <source>You can write this more briefly using a grep, which does the same thing.</source>
          <target state="translated">Puedes escribir esto más brevemente usando un grep,que hace lo mismo.</target>
        </trans-unit>
        <trans-unit id="abb98a8eca7d1aa69e5a0eb195e9e9713bd18c72" translate="yes" xml:space="preserve">
          <source>You can write your regular expressions just like someone on an ASCII platform would do. But keep in mind that using octal or hex notation to specify a particular code point will give you the character that the EBCDIC code page natively maps to it. (This is also true of all double-quoted strings.) If you want to write portably, just use the &lt;code&gt;\N{U+...}&lt;/code&gt; notation everywhere where you would have used &lt;code&gt;\x{...}&lt;/code&gt; , and don't use octal notation at all.</source>
          <target state="translated">Puede escribir sus expresiones regulares como lo har&amp;iacute;a alguien en una plataforma ASCII. Pero tenga en cuenta que el uso de notaci&amp;oacute;n octal o hexadecimal para especificar un punto de c&amp;oacute;digo en particular le dar&amp;aacute; el car&amp;aacute;cter que la p&amp;aacute;gina de c&amp;oacute;digos EBCDIC le asigna de forma nativa. (Esto tambi&amp;eacute;n es cierto para todas las cadenas entre comillas dobles). Si desea escribir de manera port&amp;aacute;til, simplemente use la notaci&amp;oacute;n &lt;code&gt;\N{U+...}&lt;/code&gt; todos los lugares donde hubiera usado &lt;code&gt;\x{...}&lt;/code&gt; , y no lo haga use la notaci&amp;oacute;n octal en absoluto.</target>
        </trans-unit>
        <trans-unit id="7d266b91c488913460baf4dd560ddccb0fd29aed" translate="yes" xml:space="preserve">
          <source>You can write your regular expressions just like someone on an ASCII platform would do. But keep in mind that using octal or hex notation to specify a particular code point will give you the character that the EBCDIC code page natively maps to it. (This is also true of all double-quoted strings.) If you want to write portably, just use the &lt;code&gt;\N{U+...}&lt;/code&gt; notation everywhere where you would have used &lt;code&gt;\x{...}&lt;/code&gt;, and don't use octal notation at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c77e05c4dac877ccb1d3bc62136f650220cc0e0" translate="yes" xml:space="preserve">
          <source>You can't (directly) write a recursive lexical subroutine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94e5e7086b787cf553633de7398d82024090d60" translate="yes" xml:space="preserve">
          <source>You can't (easily) have any space in front of the tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62834a834066a3093a80c93ec315493101e7f82e" translate="yes" xml:space="preserve">
          <source>You can't disambiguate that by saying &lt;code&gt;\{1}000&lt;/code&gt; , whereas you can fix it with &lt;code&gt;${1}000&lt;/code&gt;. The operation of interpolation should not be confused with the operation of matching a backreference. Certainly they mean two different things on the</source>
          <target state="translated">No puede eliminar la ambig&amp;uuml;edad diciendo &lt;code&gt;\{1}000&lt;/code&gt; , mientras que puede solucionarlo con &lt;code&gt;${1}000&lt;/code&gt; . La operaci&amp;oacute;n de interpolaci&amp;oacute;n no debe confundirse con la operaci&amp;oacute;n de emparejar una referencia inversa. Ciertamente, significan dos cosas diferentes en el</target>
        </trans-unit>
        <trans-unit id="446ed284a8405938957f84b57096d4442d17377f" translate="yes" xml:space="preserve">
          <source>You can't disambiguate that by saying &lt;code&gt;\{1}000&lt;/code&gt;, whereas you can fix it with &lt;code&gt;${1}000&lt;/code&gt;. The operation of interpolation should not be confused with the operation of matching a backreference. Certainly they mean two different things on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020ca4e878548eed17ca845dc3179b69179a2006" translate="yes" xml:space="preserve">
          <source>You can't do this with the &lt;code&gt;if&lt;/code&gt; pragma; however, you can achieve exactly this effect, at compile time, with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026d053774b9559119bfc24f712c71285ffb2ad2" translate="yes" xml:space="preserve">
          <source>You can't have =items (as at line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18683b4b76072abbee71a6881cdb8bc575df90f" translate="yes" xml:space="preserve">
          <source>You can't have a hash whose values are arrays; hash values can only be scalars. We're stuck with that. But a single reference can refer to an entire array, and references are scalars, so you can have a hash of references to arrays, and it'll act a lot like a hash of arrays, and it'll be just as useful as a hash of arrays.</source>
          <target state="translated">No se puede tener un hash cuyos valores sean matrices;los valores de hash sólo pueden ser escalares.Estamos atascados con eso.Pero una sola referencia puede referirse a un array entero,y las referencias son escalares,así que puedes tener un hash de referencias a los arrays,y actuará de forma muy parecida a un hash de arrays,y será tan útil como un hash de arrays.</target>
        </trans-unit>
        <trans-unit id="d10d9e535268b6be7a5edad8c961bf0a3eba1a2f" translate="yes" xml:space="preserve">
          <source>You can't prevent people from sending your script bad data. Even if you add some client-side checks, people may disable them or bypass them completely. For instance, someone might use a module such as &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; to submit to your web site. If you want to prevent data that try to use SQL injection or other sorts of attacks (and you should want to), you have to not trust any data that enter your program.</source>
          <target state="translated">No puede evitar que las personas env&amp;iacute;en datos incorrectos a su script. Incluso si agrega algunas verificaciones del lado del cliente, las personas pueden desactivarlas o omitirlas por completo. Por ejemplo, alguien podr&amp;iacute;a usar un m&amp;oacute;dulo como &lt;a href=&quot;http://search.cpan.org/perldoc/LWP&quot;&gt;LWP&lt;/a&gt; para enviarlo a su sitio web. Si desea evitar datos que intenten usar inyecci&amp;oacute;n SQL u otro tipo de ataques (y deber&amp;iacute;a querer hacerlo), no debe confiar en ning&amp;uacute;n dato que ingrese a su programa.</target>
        </trans-unit>
        <trans-unit id="6424e72f031416bce90e6701fa0fc1986967103a" translate="yes" xml:space="preserve">
          <source>You can't prevent people from sending your script bad data. Even if you add some client-side checks, people may disable them or bypass them completely. For instance, someone might use a module such as &lt;a href=&quot;lwp&quot;&gt;LWP&lt;/a&gt; to submit to your web site. If you want to prevent data that try to use SQL injection or other sorts of attacks (and you should want to), you have to not trust any data that enter your program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8673b45bcf51a92e5bbd4f8ac4117b4afa807acf" translate="yes" xml:space="preserve">
          <source>You can't produce a tied constant by giving a tied scalar as the value. References to tied variables, however, can be used as constants without any problems.</source>
          <target state="translated">No se puede producir una constante ligada dando un escalar ligado como valor.Las referencias a las variables ligadas,sin embargo,pueden ser usadas como constantes sin ningún problema.</target>
        </trans-unit>
        <trans-unit id="37d171546c154312737dfd62e998eea96bcef04d" translate="yes" xml:space="preserve">
          <source>You can't store GLOB, FORMLINE, REGEXP, etc.... If you can define semantics for those operations, feel free to enhance Storable so that it can deal with them.</source>
          <target state="translated">No puedes almacenar GLOB,FORMLINE,REGEXP,etc...Si puedes definir la semántica de esas operaciones,siéntete libre de mejorar Storable para que pueda ocuparse de ellas.</target>
        </trans-unit>
        <trans-unit id="67bd9de8b466ae8269d533b74dcf8f4858db7b40" translate="yes" xml:space="preserve">
          <source>You can't store GLOB, FORMLINE, etc.... If you can define semantics for those operations, feel free to enhance Storable so that it can deal with them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c681bde3f10285d1065419cbcfdfe8d15a0638" translate="yes" xml:space="preserve">
          <source>You can't take the address of anything, although a similar operator in Perl is the backslash, which creates a reference.</source>
          <target state="translated">No se puede tomar la dirección de nada,aunque un operador similar en Perl es la barra invertida,que crea una referencia.</target>
        </trans-unit>
        <trans-unit id="3d03f47a54efdf6a567386eabfcea4dcbcebbcab" translate="yes" xml:space="preserve">
          <source>You can't use a reference to an array or hash in quite the same way that you would a real array or hash. For C or C++ programmers unused to distinguishing between arrays and pointers to the same, this can be confusing. If so, just think of it as the difference between a structure and a pointer to a structure.</source>
          <target state="translated">No puedes usar una referencia a una matriz o hash de la misma manera que lo harías con una matriz o hash real.Para los programadores de C o C++que no están acostumbrados a distinguir entre matrices y punteros a las mismas,esto puede ser confuso.Si es así,piensa en ello como la diferencia entre una estructura y un puntero a una estructura.</target>
        </trans-unit>
        <trans-unit id="f88b12efd9288b17ac8ba038151b3170bc987f73" translate="yes" xml:space="preserve">
          <source>You can't. Some use the UTF8 flag for this, but that's misuse, and makes well behaved modules like Data::Dumper look bad. The flag is useless for this purpose, because it's off when an 8 bit encoding (by default ISO-8859-1) is used to store the string.</source>
          <target state="translated">No puede.Algunos usan la bandera UTF8 para esto,pero eso es un mal uso,y hace que los módulos de buen comportamiento como Data::Dumper se vean mal.La bandera es inútil para este propósito,porque está apagada cuando se usa una codificación de 8 bits (por defecto ISO-8859-1)para almacenar la cadena.</target>
        </trans-unit>
        <trans-unit id="2fd8f1486a5edc4ee6dd1a50f986e5205ada1304" translate="yes" xml:space="preserve">
          <source>You can't. This is because UTF-8 data is stored in bytes just like non-UTF-8 data. The Unicode character 200, (&lt;code&gt;0xC8&lt;/code&gt; for you hex types) capital E with a grave accent, is represented by the two bytes &lt;code&gt;v196.172&lt;/code&gt; . Unfortunately, the non-Unicode string &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(196).chr(172)&lt;/a&gt;&lt;/code&gt; has that byte sequence as well. So you can't tell just by looking -- this is what makes Unicode input an interesting problem.</source>
          <target state="translated">No puedes. Esto se debe a que los datos UTF-8 se almacenan en bytes al igual que los datos que no son UTF-8. El car&amp;aacute;cter Unicode 200, ( &lt;code&gt;0xC8&lt;/code&gt; para los tipos hexadecimales) E may&amp;uacute;scula con acento grave, est&amp;aacute; representado por los dos bytes &lt;code&gt;v196.172&lt;/code&gt; . Desafortunadamente, la cadena no Unicode &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(196).chr(172)&lt;/a&gt;&lt;/code&gt; tiene esa secuencia de bytes. Por lo tanto, no se puede saber con solo mirar; esto es lo que hace que la entrada Unicode sea un problema interesante.</target>
        </trans-unit>
        <trans-unit id="7f972addc76fd0cd985b7d4af8bf74af7b31dec1" translate="yes" xml:space="preserve">
          <source>You can't. This is because UTF-8 data is stored in bytes just like non-UTF-8 data. The Unicode character 200, (&lt;code&gt;0xC8&lt;/code&gt; for you hex types) capital E with a grave accent, is represented by the two bytes &lt;code&gt;v196.172&lt;/code&gt;. Unfortunately, the non-Unicode string &lt;code&gt;chr(196).chr(172)&lt;/code&gt; has that byte sequence as well. So you can't tell just by looking -- this is what makes Unicode input an interesting problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a4ed4ed782a30731e5ac82f99a95d222b188b0" translate="yes" xml:space="preserve">
          <source>You can't. You need to imitate the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; call (see &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for sample code) and then have a signal handler for the INT signal that passes the signal on to the subprocess. Or you can check for it:</source>
          <target state="translated">No puedes. Necesita imitar la llamada &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; (vea el &lt;a href=&quot;perlipc&quot;&gt;c&amp;oacute;digo&lt;/a&gt; de muestra en perlipc ) y luego tener un manejador de se&amp;ntilde;al para la se&amp;ntilde;al INT que pasa la se&amp;ntilde;al al subproceso. O puede verificarlo:</target>
        </trans-unit>
        <trans-unit id="6e29577f40cc4b8214af8a5686eca5058c2c6b00" translate="yes" xml:space="preserve">
          <source>You can't. You need to imitate the &lt;code&gt;system()&lt;/code&gt; call (see &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for sample code) and then have a signal handler for the INT signal that passes the signal on to the subprocess. Or you can check for it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969f4cfd26924af3983dcc03e66552409285562e" translate="yes" xml:space="preserve">
          <source>You can, of course, declare separate handlers for these types as well (but you'll need to specify &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; warnings 'redefine'&lt;/code&gt; to do it quietly):</source>
          <target state="translated">Por supuesto, tambi&amp;eacute;n puede declarar controladores separados para estos tipos (pero deber&amp;aacute; especificar que &lt;code&gt;&lt;a href=&quot;../functions/no&quot;&gt;no&lt;/a&gt; warnings 'redefine'&lt;/code&gt; para hacerlo en silencio):</target>
        </trans-unit>
        <trans-unit id="9b9ddea33f9624effb8458a53428961e73756f4e" translate="yes" xml:space="preserve">
          <source>You can, of course, declare separate handlers for these types as well (but you'll need to specify &lt;code&gt;no warnings 'redefine'&lt;/code&gt; to do it quietly):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74374dec5e50007a2bb85f4a7c8771f4686fdade" translate="yes" xml:space="preserve">
          <source>You cannot Configure Perl to use long doubles unless you have at least Tru64 V5.0, the long double support simply wasn't functional enough before that. Perl's Configure will override attempts to use the long doubles (you can notice this by Configure finding out that the modfl() function does not work as it should).</source>
          <target state="translated">No puedes configurar Perl para usar dobles largos a menos que tengas al menos Tru64 V5.0,el soporte de dobles largos simplemente no era lo suficientemente funcional antes de eso.La configuración de Perl anulará los intentos de usar los dobles largos (puedes notarlo en Configurar descubriendo que la función modfl()no funciona como debería).</target>
        </trans-unit>
        <trans-unit id="9d01ce1702f639775b361fb520a4a77dd3873994" translate="yes" xml:space="preserve">
          <source>You cannot add a regular filter to a hub if the hub was created in another process or thread. You can always add a pre_filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d8ae48400ed6e2886a4d5be754a09a9e2677eb" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;format_formfeed()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bdeec288ef204b43d051952afe1296036c485c" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;format_formfeed()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">No puede llamar a &lt;code&gt;format_formfeed()&lt;/code&gt; en un identificador, solo como un m&amp;eacute;todo est&amp;aacute;tico. Consulte &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="886d6e7860352adfbf36238a2c3195543ecc4842" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;format_line_break_characters()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206c72a8b7cef7a32a6db021ff310a9ca6c22c22" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;format_line_break_characters()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">No puede llamar a &lt;code&gt;format_line_break_characters()&lt;/code&gt; en un identificador, solo como un m&amp;eacute;todo est&amp;aacute;tico. Consulte &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0ebaf2ed18c8c28bbb77a954b42ef5fea55a1b9" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;input_record_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be794aed40b9701358348d087034d06f390762c7" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;input_record_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">No puede llamar a &lt;code&gt;input_record_separator()&lt;/code&gt; en un identificador, solo como un m&amp;eacute;todo est&amp;aacute;tico. Consulte &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3fbf7abc01d969743407ff802897565a9f2a54c" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;output_field_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9632f1b73e717ca255777fe1c2f39799e45e4a" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;output_field_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">No puede llamar a &lt;code&gt;output_field_separator()&lt;/code&gt; en un identificador, solo como un m&amp;eacute;todo est&amp;aacute;tico. Consulte &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c8b5595acc49990fca235aed04153d4258b087b" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;output_record_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;IO::Handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f3ec65172d98e67d60dc40971034bddc7747e9" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;output_record_separator()&lt;/code&gt; on a handle, only as a static method. See &lt;a href=&quot;io/handle&quot;&gt;IO::Handle&lt;/a&gt;.</source>
          <target state="translated">No puede llamar a &lt;code&gt;output_record_separator()&lt;/code&gt; en un identificador, solo como un m&amp;eacute;todo est&amp;aacute;tico. Consulte &lt;a href=&quot;io/handle&quot;&gt;IO :: Handle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9134fa5f451fb01a8e6eeae9f39b7f5a89fc7ce" translate="yes" xml:space="preserve">
          <source>You cannot change the ordering once the database has been created. Thus you must use the same compare function every time you access the database.</source>
          <target state="translated">No se puede cambiar el orden una vez que se ha creado la base de datos.Por lo tanto,debe utilizar la misma función de comparación cada vez que acceda a la base de datos.</target>
        </trans-unit>
        <trans-unit id="9e33a69a0160e97c284c6f83bf69b3911fb50910" translate="yes" xml:space="preserve">
          <source>You cannot currently get the precision from a specified number, but it is intended that this will be possible in the future, for example using &lt;code&gt;.*2$&lt;/code&gt;:</source>
          <target state="translated">Actualmente no puede obtener la precisi&amp;oacute;n de un n&amp;uacute;mero espec&amp;iacute;fico, pero se pretende que esto sea posible en el futuro, por ejemplo, usando &lt;code&gt;.*2$&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a19723c24ab74fcf1cad038cc364f2eed15903b" translate="yes" xml:space="preserve">
          <source>You cannot discern from mere inspection which builtins are unary operators (like chop() and chdir()) and which are list operators (like print() and unlink()). (Unless prototyped, user-defined subroutines can &lt;b&gt;only&lt;/b&gt; be list operators, never unary ones.) See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; and &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">No se puede discernir a partir de una mera inspecci&amp;oacute;n qu&amp;eacute; elementos internos son operadores unarios (como chop () y chdir ()) y cu&amp;aacute;les son operadores de lista (como print () y unlink ()). (A menos que sean prototipos, las subrutinas definidas por el usuario &lt;b&gt;solo&lt;/b&gt; pueden ser operadores de lista, nunca unarios). Ver &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; y &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab137c3fb7d6e07844b33eb499911ea797677bd5" translate="yes" xml:space="preserve">
          <source>You cannot easily tie a multilevel data structure (such as a hash of hashes) to a dbm file. The first problem is that all but GDBM and Berkeley DB have size limitations, but beyond that, you also have problems with how references are to be represented on disk. One experimental module that does partially attempt to address this need is the MLDBM module. Check your nearest CPAN site as described in &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for source code to MLDBM.</source>
          <target state="translated">No puede vincular f&amp;aacute;cilmente una estructura de datos de varios niveles (como un hash de hashes) a un archivo dbm. El primer problema es que todos, excepto GDBM y Berkeley DB, tienen limitaciones de tama&amp;ntilde;o, pero m&amp;aacute;s all&amp;aacute; de eso, tambi&amp;eacute;n tiene problemas con la forma en que las referencias se deben representar en el disco. Un m&amp;oacute;dulo experimental que intenta parcialmente abordar esta necesidad es el m&amp;oacute;dulo MLDBM. Verifique su sitio CPAN m&amp;aacute;s cercano como se describe en &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; para obtener el c&amp;oacute;digo fuente de MLDBM.</target>
        </trans-unit>
        <trans-unit id="38213a95a75072574eb5ab9364f983653ee56ffc" translate="yes" xml:space="preserve">
          <source>You cannot easily tie a multilevel data structure (such as a hash of hashes) to a dbm file. The first problem is that all but GDBM and Berkeley DB have size limitations, but beyond that, you also have problems with how references are to be represented on disk. One module that does attempt to address this need is DBM::Deep. Check your nearest CPAN site as described in &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for source code. Note that despite its name, DBM::Deep does not use dbm. Another earlier attempt at solving the problem is MLDBM, which is also available on the CPAN, but which has some fairly serious limitations.</source>
          <target state="translated">No puede vincular f&amp;aacute;cilmente una estructura de datos de varios niveles (como un hash de hashes) a un archivo dbm. El primer problema es que todos, excepto GDBM y Berkeley DB, tienen limitaciones de tama&amp;ntilde;o, pero m&amp;aacute;s all&amp;aacute; de eso, tambi&amp;eacute;n tiene problemas con la forma en que las referencias se deben representar en el disco. Un m&amp;oacute;dulo que intenta abordar esta necesidad es DBM :: Deep. Verifique su sitio CPAN m&amp;aacute;s cercano como se describe en &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; para el c&amp;oacute;digo fuente. Tenga en cuenta que a pesar de su nombre, DBM :: Deep no usa dbm. Otro intento anterior de resolver el problema es MLDBM, que tambi&amp;eacute;n est&amp;aacute; disponible en CPAN, pero que tiene algunas limitaciones bastante serias.</target>
        </trans-unit>
        <trans-unit id="54808a204fe862b1dfa25e752a892b2a04ab63bf" translate="yes" xml:space="preserve">
          <source>You cannot get stack frame information or in any fashion debug functions that were not compiled by Perl, such as those from C or C++ extensions.</source>
          <target state="translated">No se puede obtener información del marco de la pila o de alguna función de depuración que no haya sido compilada por Perl,como las de las extensiones C o C++.</target>
        </trans-unit>
        <trans-unit id="b370a3f9299c4f8abb35adc5b9b2b86568a00bc8" translate="yes" xml:space="preserve">
          <source>You cannot lock the individual elements of a container variable:</source>
          <target state="translated">No se pueden bloquear los elementos individuales de una variable del contenedor:</target>
        </trans-unit>
        <trans-unit id="f2b8b7a26c050e538a292ea22f61da0581625210" translate="yes" xml:space="preserve">
          <source>You cannot portably &quot;stack&quot; cpp directives. For example in the above you need two separate BURGLE() #defines, one for each #ifdef branch.</source>
          <target state="translated">No se puede &quot;apilar&quot; portabiliariamente directivas de cpp.Por ejemplo,en lo anterior necesitas dos BURGLE()#defines separadas,una para cada rama #ifdef.</target>
        </trans-unit>
        <trans-unit id="b918f134e01ab04a493d865bacd0ad2555d6eed0" translate="yes" xml:space="preserve">
          <source>You cannot set $RS to a pattern, only a string.</source>
          <target state="translated">No se puede establecer un patrón de $RS,sólo una cadena.</target>
        </trans-unit>
        <trans-unit id="891970fccef081510b98291902ea82121168e7ae" translate="yes" xml:space="preserve">
          <source>You cannot tie this routine directly to an option, e.g.:</source>
          <target state="translated">No puedes vincular esta rutina directamente a una opción,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2d9b5eae243979aa930fce2644c85c94e98e03e5" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;b&gt;-i&lt;/b&gt; to create directories or to strip extensions from files.</source>
          <target state="translated">No puede usar &lt;b&gt;-i&lt;/b&gt; para crear directorios o quitar extensiones de archivos.</target>
        </trans-unit>
        <trans-unit id="3d40633e0023663f60f6c6868c36efce9e85c50a" translate="yes" xml:space="preserve">
          <source>You compare the sort keys using a binary comparison and get the result of the comparison of the strings using UCA.</source>
          <target state="translated">Comparas las claves de clasificación usando una comparación binaria y obtienes el resultado de la comparación de las cadenas usando UCA.</target>
        </trans-unit>
        <trans-unit id="794fe9a7963db4b15645c3e75175ca30a42e7c02" translate="yes" xml:space="preserve">
          <source>You could also exclude &lt;code&gt;LC_NUMERIC&lt;/code&gt; , if you don't need it, by</source>
          <target state="translated">Tambi&amp;eacute;n puede excluir &lt;code&gt;LC_NUMERIC&lt;/code&gt; , si no lo necesita, por</target>
        </trans-unit>
        <trans-unit id="7f8b90476595b6a38493d09d09f4d09a3ee84510" translate="yes" xml:space="preserve">
          <source>You could also exclude &lt;code&gt;LC_NUMERIC&lt;/code&gt;, if you don't need it, by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63946de92748533808fd29d4342bd54a0ec7a953" translate="yes" xml:space="preserve">
          <source>You could also have used the existing block property names:</source>
          <target state="translated">También podrías haber usado los nombres de las propiedades de los bloques existentes:</target>
        </trans-unit>
        <trans-unit id="eaa54d59d0ed5e55dbc530f16d131415959a1711" translate="yes" xml:space="preserve">
          <source>You could also investigate the can() method in the UNIVERSAL class (part of the standard perl distribution).</source>
          <target state="translated">También podrías investigar el método can()en la clase UNIVERSAL (parte de la distribución estándar de perl).</target>
        </trans-unit>
        <trans-unit id="802dff37470d190b2a864a13c708bc5907b98d91" translate="yes" xml:space="preserve">
          <source>You could also just know all the perl errors, and although there are some people who may know all of them, you probably don't. However, they all should be in the &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; manpage. If you don't find the error in there, it probably isn't a perl error.</source>
          <target state="translated">Tambi&amp;eacute;n podr&amp;iacute;a conocer todos los errores de Perl, y aunque hay algunas personas que pueden conocerlos todos, probablemente usted no. Sin embargo, todos deber&amp;iacute;an estar en la p&amp;aacute;gina de &lt;a href=&quot;perldiag&quot;&gt;manual de perldiag&lt;/a&gt; . Si no encuentra el error all&amp;iacute;, probablemente no sea un error de Perl.</target>
        </trans-unit>
        <trans-unit id="80d2dd3ba7c4c2069cf58261b6aaeb6dcd467d24" translate="yes" xml:space="preserve">
          <source>You could also write a single get/set method using an optional argument:</source>
          <target state="translated">También podrías escribir un único método get/set usando un argumento opcional:</target>
        </trans-unit>
        <trans-unit id="8444b9fc7a3ed8d2fa7659ffde996510ee7f1f46" translate="yes" xml:space="preserve">
          <source>You could build a web site using &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; and your own code, but for anything other than a very basic web site, using a web framework (that uses &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt;) is a better option.</source>
          <target state="translated">Puede crear un sitio web utilizando &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; y su propio c&amp;oacute;digo, pero para cualquier otra cosa que no sea un sitio web muy b&amp;aacute;sico, utilizar un marco web (que utilice &lt;a href=&quot;http://search.cpan.org/perldoc/Plack&quot;&gt;Plack&lt;/a&gt; ) es una mejor opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5c2c9c77f0aed52ec579ee2ac823c3d0735f4eb0" translate="yes" xml:space="preserve">
          <source>You could build a web site using &lt;a href=&quot;plack&quot;&gt;Plack&lt;/a&gt; and your own code, but for anything other than a very basic web site, using a web framework (that uses &lt;a href=&quot;https://plackperl.org&quot;&gt;https://plackperl.org&lt;/a&gt;) is a better option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2158ae7a8b9ea3f34a07fb0e90c3b98892665dc8" translate="yes" xml:space="preserve">
          <source>You could conceivably do both.</source>
          <target state="translated">Podrías hacer ambas cosas.</target>
        </trans-unit>
        <trans-unit id="49073618f97078f446e251732bebc1a46a9b86b9" translate="yes" xml:space="preserve">
          <source>You could do the memoization yourself, by rewriting the function, like this:</source>
          <target state="translated">Podrías hacer la memorización tú mismo,reescribiendo la función,así:</target>
        </trans-unit>
        <trans-unit id="958608f6d5208c278d0f2a3422ee32f9617b3a57" translate="yes" xml:space="preserve">
          <source>You could do this through opening an ordinary filehandle into each of those files, gradually building up an in-memory array of all the file contents you load this way, and finally sorting and filtering that array when you've run out of files to load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bc28868b949ea5a73ffcd10a5a6d7af5c6ab02" translate="yes" xml:space="preserve">
          <source>You could do this:</source>
          <target state="translated">Podrías hacer esto:</target>
        </trans-unit>
        <trans-unit id="9e128ecfca5b0e265baad327ad431d782e5e7ffc" translate="yes" xml:space="preserve">
          <source>You could edit that header yourself to remove that last '/', or you might note that Language Environment (LE) APAR PQ39997 describes the problem and PTF's UQ46272 and UQ46271 are the (R8 at least) fixes and apply them. If left unattended that syntax error will turn up as an inability for Perl to build its &quot;Socket&quot; extension.</source>
          <target state="translated">Podrías editar ese encabezado tú mismo para eliminar ese último '/',o podrías notar que el Entorno de Lenguaje (LE)APAR PQ39997 describe el problema y que el UQ46272 y el UQ46271 del PTF son los (R8 por lo menos)arreglos y los aplican.Si se deja desatendido,ese error de sintaxis aparecerá como una incapacidad para que Perl construya su extensión &quot;Socket&quot;.</target>
        </trans-unit>
        <trans-unit id="3e7ad6be7d9fb2b01433fa3be5444bc3be8a1d7d" translate="yes" xml:space="preserve">
          <source>You could instead do lookups on $wanted with:</source>
          <target state="translated">Podrías en cambio hacer búsquedas en &quot;Se busca con&quot;:</target>
        </trans-unit>
        <trans-unit id="457f8e624ad1da28bfb9cf34b1f79dc6623d16da" translate="yes" xml:space="preserve">
          <source>You could just store all your dates as a number and then subtract. Life isn't always that simple though.</source>
          <target state="translated">Podrías almacenar todas tus fechas como un número y luego restarlas.La vida no siempre es tan simple.</target>
        </trans-unit>
        <trans-unit id="c19f6ab6291cf9eaf2e211ed563b35ea9ac437b5" translate="yes" xml:space="preserve">
          <source>You could open the document in a web browser, and change the character set or character encoding until you can visually confirm that all characters look the way they should.</source>
          <target state="translated">Podrías abrir el documento en un navegador web y cambiar el conjunto de caracteres o la codificación de los mismos hasta que puedas confirmar visualmente que todos los caracteres tienen el aspecto que deberían tener.</target>
        </trans-unit>
        <trans-unit id="6bbc1dc32472d30736fd70aa0522d187dae0801f" translate="yes" xml:space="preserve">
          <source>You could tell make to run tests in both of those directories with the following directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a20c232c667e613d02f2b4874878f40bc6c28f2" translate="yes" xml:space="preserve">
          <source>You could write the last two using the &lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; operators. Commonly available &lt;code&gt;S_IF*&lt;/code&gt; constants are:</source>
          <target state="translated">Puede escribir los dos &amp;uacute;ltimos usando los operadores &lt;code&gt;-u&lt;/code&gt; y &lt;code&gt;-d&lt;/code&gt; . Las constantes &lt;code&gt;S_IF*&lt;/code&gt; com&amp;uacute;nmente disponibles son:</target>
        </trans-unit>
        <trans-unit id="2516f9cbf3f3333565923611bf8e4c6225451c64" translate="yes" xml:space="preserve">
          <source>You create the queue with &lt;code&gt;Thread::Queue-&amp;gt;new()&lt;/code&gt; . Then you can add lists of scalars onto the end with &lt;code&gt;enqueue()&lt;/code&gt; , and pop scalars off the front of it with &lt;code&gt;dequeue()&lt;/code&gt; . A queue has no fixed size, and can grow as needed to hold everything pushed on to it.</source>
          <target state="translated">Creas la cola con &lt;code&gt;Thread::Queue-&amp;gt;new()&lt;/code&gt; . Luego, puede agregar listas de escalares al final con &lt;code&gt;enqueue()&lt;/code&gt; , y sacar los escalares del frente con &lt;code&gt;dequeue()&lt;/code&gt; . Una cola no tiene un tama&amp;ntilde;o fijo y puede crecer seg&amp;uacute;n sea necesario para contener todo lo que se le empuja.</target>
        </trans-unit>
        <trans-unit id="c19ccf2bc39b48b6ea782f37420e2fd0ec94934e" translate="yes" xml:space="preserve">
          <source>You create the queue with &lt;code&gt;Thread::Queue-&amp;gt;new()&lt;/code&gt;. Then you can add lists of scalars onto the end with &lt;code&gt;enqueue()&lt;/code&gt;, and pop scalars off the front of it with &lt;code&gt;dequeue()&lt;/code&gt;. A queue has no fixed size, and can grow as needed to hold everything pushed on to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dede4110b8ccb447bd7101130015f76cda530da1" translate="yes" xml:space="preserve">
          <source>You currently don't need to instantiate a factory in order to use it.</source>
          <target state="translated">Actualmente no es necesario instanciar una fábrica para poder usarla.</target>
        </trans-unit>
        <trans-unit id="94aa24e74566493da77121fdf1cf79a43455f271" translate="yes" xml:space="preserve">
          <source>You did not run &lt;code&gt;omflibs&lt;/code&gt; . See &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">No ejecut&amp;oacute; &lt;code&gt;omflibs&lt;/code&gt; . Consulte los &lt;a href=&quot;#Prerequisites&quot;&gt;requisitos previos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="520c8e979cd55500908dc61d154b50983c533336" translate="yes" xml:space="preserve">
          <source>You did not run &lt;code&gt;omflibs&lt;/code&gt;. See &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351e72fc696e530c4b98b81dced35a153aee9b73" translate="yes" xml:space="preserve">
          <source>You did try the &lt;b&gt;-w&lt;/b&gt; switch, didn't you?</source>
          <target state="translated">Usted hizo probar el &lt;b&gt;-w&lt;/b&gt; interruptor, &amp;iquest;verdad?</target>
        </trans-unit>
        <trans-unit id="4eedca5e5af0ab78e40eb2863f783568ef2a973d" translate="yes" xml:space="preserve">
          <source>You do have &lt;code&gt;use strict&lt;/code&gt; and &lt;code&gt;use warnings&lt;/code&gt; enabled, don't you?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ae653a2469feaccaacebc0c4775e33fd1da464" translate="yes" xml:space="preserve">
          <source>You do need to be careful with the logical names representing process-permanent files, such as &lt;code&gt;SYS$INPUT&lt;/code&gt; and &lt;code&gt;SYS$OUTPUT&lt;/code&gt; . The translations for these logical names are prepended with a two-byte binary value (0x1B 0x00) that needs to be stripped off if you want to use it. (In previous versions of Perl it wasn't possible to get the values of these logical names, as the null byte acted as an end-of-string marker)</source>
          <target state="translated">Debe tener cuidado con los nombres l&amp;oacute;gicos que representan archivos permanentes del proceso, como &lt;code&gt;SYS$INPUT&lt;/code&gt; y &lt;code&gt;SYS$OUTPUT&lt;/code&gt; . Las traducciones de estos nombres l&amp;oacute;gicos van precedidas de un valor binario de dos bytes (0x1B 0x00) que debe eliminarse si desea utilizarlo. (En versiones anteriores de Perl no era posible obtener los valores de estos nombres l&amp;oacute;gicos, ya que el byte nulo actuaba como un marcador de fin de cadena)</target>
        </trans-unit>
        <trans-unit id="50985c33eacad99671dfcb8dd8006db36d362e65" translate="yes" xml:space="preserve">
          <source>You do need to be careful with the logical names representing process-permanent files, such as &lt;code&gt;SYS$INPUT&lt;/code&gt; and &lt;code&gt;SYS$OUTPUT&lt;/code&gt;. The translations for these logical names are prepended with a two-byte binary value (0x1B 0x00) that needs to be stripped off if you want to use it. (In previous versions of Perl it wasn't possible to get the values of these logical names, as the null byte acted as an end-of-string marker)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058b0924bf8d4ec16b563bbf0577363645a7bf62" translate="yes" xml:space="preserve">
          <source>You do not call &lt;code&gt;setlogsock&lt;/code&gt; .</source>
          <target state="translated">No llamas a &lt;code&gt;setlogsock&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66b3b57985e95259e75aa2f231d8ac7e67d53cd1" translate="yes" xml:space="preserve">
          <source>You do not call &lt;code&gt;setlogsock&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0688f744612cb917b09a1848a221dbc87e7927a1" translate="yes" xml:space="preserve">
          <source>You do not have MT-safe</source>
          <target state="translated">No tienes el MT-safe</target>
        </trans-unit>
        <trans-unit id="2e1ca2f68a9ba2ef298384c1d65396bc3e584c1e" translate="yes" xml:space="preserve">
          <source>You do not have to override methods shown below unless you have to.</source>
          <target state="translated">No es necesario anular los métodos que se muestran a continuación a menos que sea necesario.</target>
        </trans-unit>
        <trans-unit id="fb758f283ea1827a0e24eaa44c4a0b710b292031" translate="yes" xml:space="preserve">
          <source>You do not need to use this directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d463f5c40ea27790902d715d5582fd331f2a8862" translate="yes" xml:space="preserve">
          <source>You do this by using &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; and replacing your &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;s with &lt;code&gt;carp&lt;/code&gt; s. If you need to &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, say &lt;code&gt;croak&lt;/code&gt; instead. However, keep &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; in place for your sanity checks - where it really is your module at fault.</source>
          <target state="translated">Para ello, utilice &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; y reemplace sus &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; por &lt;code&gt;carp&lt;/code&gt; as . Si necesitas &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , di &lt;code&gt;croak&lt;/code&gt; lugar. Sin embargo, mantenga la &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; en su lugar para sus controles de cordura, donde realmente es su m&amp;oacute;dulo el culpable.</target>
        </trans-unit>
        <trans-unit id="113f89135b9f076e711872b293b64852cb136b98" translate="yes" xml:space="preserve">
          <source>You do this by using &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; and replacing your &lt;code&gt;warn&lt;/code&gt;s with &lt;code&gt;carp&lt;/code&gt;s. If you need to &lt;code&gt;die&lt;/code&gt;, say &lt;code&gt;croak&lt;/code&gt; instead. However, keep &lt;code&gt;warn&lt;/code&gt; and &lt;code&gt;die&lt;/code&gt; in place for your sanity checks - where it really is your module at fault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005e9bdc4a22cadca7bbf603665f85ba87cfef2b" translate="yes" xml:space="preserve">
          <source>You don't actually</source>
          <target state="translated">En realidad no</target>
        </trans-unit>
        <trans-unit id="5d5d63d2e431a9c6b982f4e636021ca69ef4faa3" translate="yes" xml:space="preserve">
          <source>You don't actually &quot;trap&quot; a control character. Instead, that character generates a signal which is sent to your terminal's currently foregrounded process group, which you then trap in your process. Signals are documented in &lt;a href=&quot;perlipc#Signals&quot;&gt;&quot;Signals&quot; in perlipc&lt;/a&gt; and the section on &quot;Signals&quot; in the Camel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b09323fd0303316a1e04f47208b954d9880846" translate="yes" xml:space="preserve">
          <source>You don't actually &quot;trap&quot; a control character. Instead, that character generates a signal which is sent to your terminal's currently foregrounded process group, which you then trap in your process. Signals are documented in &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; and the section on &quot;Signals&quot; in the Camel.</source>
          <target state="translated">En realidad, no &quot;atrapas&quot; a un personaje de control. En cambio, ese car&amp;aacute;cter genera una se&amp;ntilde;al que se env&amp;iacute;a al grupo de procesos actualmente en primer plano de su terminal, que luego atrapa en su proceso. Las se&amp;ntilde;ales est&amp;aacute;n documentadas en &lt;a href=&quot;perlipc#Signals&quot;&gt;Se&amp;ntilde;ales en perlipc&lt;/a&gt; y en el apartado de &quot;Se&amp;ntilde;ales&quot; en el Camel.</target>
        </trans-unit>
        <trans-unit id="43005f5be66bea21174dcb83ad3e5e91f2ebadaa" translate="yes" xml:space="preserve">
          <source>You don't have to check for &lt;a href=&quot;#defined-EXPR&quot;&gt;&lt;code&gt;defined&lt;/code&gt;&lt;/a&gt; on the return from &lt;a href=&quot;#fcntl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt;&lt;/a&gt;. Like &lt;a href=&quot;#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt;, it maps a &lt;code&gt;0&lt;/code&gt; return from the system call into &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; in Perl. This string is true in boolean context and &lt;code&gt;0&lt;/code&gt; in numeric context. It is also exempt from the normal &lt;a href=&quot;perldiag#Argument-%22%25s%22-isn%27t-numeric%25s&quot;&gt;&lt;code&gt;Argument &quot;...&quot; isn't numeric&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; on improper numeric conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1e2e036145d009e379c1e58f4e8404e4bb7c5f" translate="yes" xml:space="preserve">
          <source>You don't have to check for &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; on the return from &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;. Like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, it maps a &lt;code&gt;0&lt;/code&gt; return from the system call into &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; in Perl. This string is true in boolean context and &lt;code&gt;0&lt;/code&gt; in numeric context. It is also exempt from the normal &lt;b&gt;-w&lt;/b&gt; warnings on improper numeric conversions.</source>
          <target state="translated">No tiene que verificar si est&amp;aacute; &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; en la devoluci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; . Como &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , asigna un retorno &lt;code&gt;0&lt;/code&gt; de la llamada al sistema en &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; en Perl. Esta cadena es verdadera en contexto booleano y &lt;code&gt;0&lt;/code&gt; en contexto num&amp;eacute;rico. Tambi&amp;eacute;n est&amp;aacute; exento de las advertencias normales &lt;b&gt;-w&lt;/b&gt; sobre conversiones num&amp;eacute;ricas incorrectas.</target>
        </trans-unit>
        <trans-unit id="91e28b8dde4eef2778828dc13bbb504ddd8429b3" translate="yes" xml:space="preserve">
          <source>You don't have to check for &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; on the return from &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt;. Like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;, it maps a &lt;code&gt;0&lt;/code&gt; return from the system call into &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; in Perl. This string is true in boolean context and &lt;code&gt;0&lt;/code&gt; in numeric context. It is also exempt from the normal &lt;b&gt;-w&lt;/b&gt; warnings on improper numeric conversions.</source>
          <target state="translated">No tiene que verificar si est&amp;aacute; &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; en la devoluci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;functions/fcntl&quot;&gt;fcntl&lt;/a&gt;&lt;/code&gt; . Como &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; , asigna un retorno &lt;code&gt;0&lt;/code&gt; de la llamada al sistema en &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; en Perl. Esta cadena es verdadera en contexto booleano y &lt;code&gt;0&lt;/code&gt; en contexto num&amp;eacute;rico. Tambi&amp;eacute;n est&amp;aacute; exento de las advertencias normales &lt;b&gt;-w&lt;/b&gt; sobre conversiones num&amp;eacute;ricas incorrectas.</target>
        </trans-unit>
        <trans-unit id="b28935e71a19f281a841ddb06e95aa9113f5e9af" translate="yes" xml:space="preserve">
          <source>You don't have to close FILEHANDLE if you are immediately going to do another &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; on it, because &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; closes it for you. (See &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;.) However, an explicit &lt;a href=&quot;#close-FILEHANDLE&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on an input file resets the line counter (&lt;a href=&quot;perlvar#%24.&quot;&gt;&lt;code&gt;$.&lt;/code&gt;&lt;/a&gt;), while the implicit close done by &lt;a href=&quot;#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3317a455934bcb4f5310b2ce1e13684a7b6884c6" translate="yes" xml:space="preserve">
          <source>You don't have to close FILEHANDLE if you are immediately going to do another &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; on it, because &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; closes it for you. (See &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;open&lt;/a&gt;.) However, an explicit &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on an input file resets the line counter (&lt;code&gt;$.&lt;/code&gt; ), while the implicit close done by &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; does not.</source>
          <target state="translated">No tiene que cerrar FILEHANDLE si va a &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; inmediatamente otra vez, porque &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; lo cierra por usted. (Ver &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;open&lt;/a&gt; .) Sin embargo, un &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;cito en un archivo de entrada restablece el contador de l&amp;iacute;nea ( &lt;code&gt;$.&lt;/code&gt; ), Mientras que el cierre impl&amp;iacute;cito realizado por &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; no lo hace.</target>
        </trans-unit>
        <trans-unit id="d144697260e1beed6903444902a55fc7aceb423c" translate="yes" xml:space="preserve">
          <source>You don't have to close FILEHANDLE if you are immediately going to do another &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; on it, because &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; closes it for you. (See &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;open&lt;/a&gt;.) However, an explicit &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; on an input file resets the line counter (&lt;code&gt;$.&lt;/code&gt; ), while the implicit close done by &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; does not.</source>
          <target state="translated">No tiene que cerrar FILEHANDLE si va a &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; inmediatamente otra vez, porque &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; lo cierra por usted. (Ver &lt;a href=&quot;#open-FILEHANDLE&quot;&gt;open&lt;/a&gt; .) Sin embargo, un &lt;code&gt;&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; expl&amp;iacute;cito en un archivo de entrada restablece el contador de l&amp;iacute;nea ( &lt;code&gt;$.&lt;/code&gt; ), Mientras que el cierre impl&amp;iacute;cito realizado por &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; no lo hace.</target>
        </trans-unit>
        <trans-unit id="ada37b6245f195e4fcd7aa6724d9b314782b9989" translate="yes" xml:space="preserve">
          <source>You don't have to do anything new in your extension to get this; since the Perl library provides Perl_get_context(), it will all just work.</source>
          <target state="translated">No tienes que hacer nada nuevo en tu extensión para conseguir esto;ya que la librería Perl provee Perl_get_context(),todo funcionará.</target>
        </trans-unit>
        <trans-unit id="0afa6281a85d9c8f0451db68d3408cd7d6bba6a9" translate="yes" xml:space="preserve">
          <source>You don't have to do this all on the command line, though, there are a few GUI options out there. The nice thing about these is you can wave a mouse over a variable and a dump of its data will appear in an appropriate window, or in a popup balloon, no more tiresome typing of 'x $varname' :-)</source>
          <target state="translated">No tienes que hacer todo esto en la línea de comandos,sin embargo,hay algunas opciones de interfaz gráfica de usuario por ahí.Lo bueno de estas es que puedes pasar el ratón por encima de una variable y aparecerá un volcado de sus datos en una ventana apropiada,o en un globo emergente,sin necesidad de escribir 'x $varname' :-)</target>
        </trans-unit>
        <trans-unit id="bc3f5455b30ee7863f96aa530c94393c0cafca20" translate="yes" xml:space="preserve">
          <source>You don't have to enclose POSIX class names inside double brackets, hence both of the following work:</source>
          <target state="translated">No tienes que encerrar los nombres de las clases de POSIX entre dobles corchetes,de ahí los dos trabajos siguientes:</target>
        </trans-unit>
        <trans-unit id="229ae092ed53a2ce77c4892afb43389969fbd9bc" translate="yes" xml:space="preserve">
          <source>You don't have to use \b to match words though. You can look for non-word characters surrounded by word characters. These strings match the pattern /\b'\b/.</source>
          <target state="translated">Aunque no tienes que usar \b para emparejar las palabras.Puedes buscar caracteres que no sean palabras rodeados de caracteres de palabras.Estas cuerdas coinciden con el patrón /b'\b/.</target>
        </trans-unit>
        <trans-unit id="21cad750fa1f143b35b4124baa7518d27d8319c9" translate="yes" xml:space="preserve">
          <source>You don't have to worry about finding or paying for Perl; it's freely available and several popular operating systems come with Perl. Community support in places such as Perlmonks ( &lt;a href=&quot;http://www.perlmonks.com&quot;&gt;http://www.perlmonks.com&lt;/a&gt; ) and the various Perl mailing lists ( &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt; ) means that you can usually get quick answers to your problems.</source>
          <target state="translated">No tiene que preocuparse por encontrar o pagar Perl; est&amp;aacute; disponible gratuitamente y varios sistemas operativos populares vienen con Perl. El apoyo de la comunidad en lugares como Perlmonks ( &lt;a href=&quot;http://www.perlmonks.com&quot;&gt;http://www.perlmonks.com&lt;/a&gt; ) y las diversas listas de correo de Perl ( &lt;a href=&quot;http://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt; ) significa que normalmente puede obtener respuestas r&amp;aacute;pidas a sus problemas.</target>
        </trans-unit>
        <trans-unit id="501ab5b5165360c76f2b2837c480ad612db2bc73" translate="yes" xml:space="preserve">
          <source>You don't have to worry about finding or paying for Perl; it's freely available and several popular operating systems come with Perl. Community support in places such as Perlmonks ( &lt;a href=&quot;http://www.perlmonks.com&quot;&gt;http://www.perlmonks.com&lt;/a&gt; ) and the various Perl mailing lists ( &lt;a href=&quot;https://lists.perl.org&quot;&gt;http://lists.perl.org&lt;/a&gt; ) means that you can usually get quick answers to your problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8365eeff3d04c895cb1076cf6e1217da1d00d04f" translate="yes" xml:space="preserve">
          <source>You don't just have to match on fixed strings. In fact, you can match on just about anything you could dream of by using more complex regular expressions. These are documented at great length in &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, but for the meantime, here's a quick cheat sheet:</source>
          <target state="translated">No solo tiene que hacer coincidir cadenas fijas. De hecho, puede hacer coincidir casi cualquier cosa con la que pueda so&amp;ntilde;ar utilizando expresiones regulares m&amp;aacute;s complejas. Estos est&amp;aacute;n documentados con gran detalle en &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; , pero mientras tanto, aqu&amp;iacute; hay una hoja de trucos r&amp;aacute;pida:</target>
        </trans-unit>
        <trans-unit id="6fa3f4f65b9497a1fe4774a26aaf551f58ec3c5f" translate="yes" xml:space="preserve">
          <source>You don't need to have /usr/ucb/ in your PATH to build perl. If you want /usr/ucb/ in your PATH anyway, make sure that /usr/ucb/ is NOT in your PATH before the directory containing the right C compiler.</source>
          <target state="translated">No es necesario que tengas /usr/ucb/en tu PATH para construir perl.Si quieres tener /usr/ucb/en tu PATH de todos modos,asegúrate de que /usr/ucb/NO esté en tu PATH antes del directorio que contiene el compilador de C correcto.</target>
        </trans-unit>
        <trans-unit id="fb446a8ceff857b0d30326b022d90618c379b51d" translate="yes" xml:space="preserve">
          <source>You don't need to specify wildcards if you only want to test within specific subdirectories. The following example will only run tests in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40dd09143f7def3dc81d2ff9344d2600d1d1ae7" translate="yes" xml:space="preserve">
          <source>You don't really have to count them yourself, though, since Perl already does that with the &lt;code&gt;$.&lt;/code&gt; variable, which is the current line number from the last filehandle read:</source>
          <target state="translated">Sin embargo, no es necesario que los cuente usted mismo, ya que Perl ya lo hace con &lt;code&gt;$.&lt;/code&gt; variable, que es el n&amp;uacute;mero de l&amp;iacute;nea actual del &amp;uacute;ltimo identificador de archivo le&amp;iacute;do:</target>
        </trans-unit>
        <trans-unit id="b24e0508e2da733e0f794e663fee88bb39a1e25a" translate="yes" xml:space="preserve">
          <source>You don't skip tests which are failing because there's a bug in your program, or for which you don't yet have code written. For that you use TODO. Read on.</source>
          <target state="translated">No te saltas las pruebas que están fallando porque hay un error en tu programa,o para el que aún no tienes el código escrito.Para eso usas TODO.Sigue leyendo.</target>
        </trans-unit>
        <trans-unit id="eebc556ad68a7f00f0136b389c1fbe429ec9a58f" translate="yes" xml:space="preserve">
          <source>You first enter in bisect mode with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdc25fa644377770199aae18193b3eaaa7f502c" translate="yes" xml:space="preserve">
          <source>You forgot a '=back' before '=head</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93562b7ff5c979fa6f4e89c93b44f448f3599aca" translate="yes" xml:space="preserve">
          <source>You forgot a '=back' before '=head3'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710a0707d7d6991623d26d4226d9c4d860f3f7d5" translate="yes" xml:space="preserve">
          <source>You forgot to check &lt;code&gt;$?&lt;/code&gt; to see whether the program even ran correctly. Even if you wrote</source>
          <target state="translated">&amp;iquest;Olvidaste comprobar &lt;code&gt;$?&lt;/code&gt; para ver si el programa se ejecut&amp;oacute; correctamente. Incluso si escribiste</target>
        </trans-unit>
        <trans-unit id="fc90d9f18467dae7f984c44b04f6fed62e49d3b4" translate="yes" xml:space="preserve">
          <source>You get two references to the same array. If you modify &lt;code&gt;$aref1-&amp;gt;[23]&lt;/code&gt; and then look at &lt;code&gt;$aref2-&amp;gt;[23]&lt;/code&gt; you'll see the change.</source>
          <target state="translated">Obtienes dos referencias a la misma matriz. Si modifica &lt;code&gt;$aref1-&amp;gt;[23]&lt;/code&gt; y luego mira &lt;code&gt;$aref2-&amp;gt;[23]&lt;/code&gt; ver&amp;aacute; el cambio.</target>
        </trans-unit>
        <trans-unit id="bc28177c520a27689ee52401d7752fede6fec23d" translate="yes" xml:space="preserve">
          <source>You have '=item x' instead of the expected '=item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e5e5638bed24bad2d4ab312bfe1360cb8707ce" translate="yes" xml:space="preserve">
          <source>You have a data file that expresses greetings in different languages. Its format is &quot;[language tag]=[how to say 'Hello']&quot;, like:</source>
          <target state="translated">Tienes un archivo de datos que expresa saludos en diferentes idiomas.Su formato es &quot;[etiqueta de idioma]=[cómo decir 'Hola']&quot;,como:</target>
        </trans-unit>
        <trans-unit id="afbb6b8d64f8b4b3f378ab57026bdb8753122fdc" translate="yes" xml:space="preserve">
          <source>You have a piece of data on which many different operations are applied.</source>
          <target state="translated">Tienes un dato sobre el que se aplican muchas operaciones diferentes.</target>
        </trans-unit>
        <trans-unit id="63d97bb84f94237f7e4b056d5ae5d88b12cd254c" translate="yes" xml:space="preserve">
          <source>You have a very old pdksh. See &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8eed8b91591afe605349a4edd81010c1b4133d5" translate="yes" xml:space="preserve">
          <source>You have a very old pdksh. See &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">Tienes un pdksh muy antiguo. Consulte los &lt;a href=&quot;#Prerequisites&quot;&gt;requisitos previos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0763fc81d3cd7a4189100a79a22596558a167896" translate="yes" xml:space="preserve">
          <source>You have an older version of</source>
          <target state="translated">Tienes una versión más antigua de</target>
        </trans-unit>
        <trans-unit id="e430c6e7f2999710866cf3f6291d3dd58341a4a4" translate="yes" xml:space="preserve">
          <source>You have been warned already in &lt;a href=&quot;#Selecting-What-to-Export&quot;&gt;&quot;Selecting What to Export&quot;&lt;/a&gt; to not export:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b9024251b30a14c45724d6bbd90abab3f232a3" translate="yes" xml:space="preserve">
          <source>You have been warned already in &lt;a href=&quot;#Selecting-What-to-Export&quot;&gt;Selecting What to Export&lt;/a&gt; to not export:</source>
          <target state="translated">Ya se le advirti&amp;oacute; al &lt;a href=&quot;#Selecting-What-to-Export&quot;&gt;seleccionar Qu&amp;eacute; exportar&lt;/a&gt; para no exportar:</target>
        </trans-unit>
        <trans-unit id="43dfe62727996603d47468da8d91c958abc24b74" translate="yes" xml:space="preserve">
          <source>You have created an XSUB interface to an application's C API.</source>
          <target state="translated">Has creado una interfaz XSUB para la API C de una aplicación.</target>
        </trans-unit>
        <trans-unit id="c236e9b8bd9523c45d8e12fd36ee9331405ecbff" translate="yes" xml:space="preserve">
          <source>You have defined an END handler for an attribute that is being applied to a lexical variable. Since the variable may not be available during END this won't happen.</source>
          <target state="translated">Has definido un manejador END para un atributo que se aplica a una variable léxica.Dado que la variable puede no estar disponible durante END esto no sucederá.</target>
        </trans-unit>
        <trans-unit id="717f15e5bfd4a04630296d7e18d1dc4a8563c670" translate="yes" xml:space="preserve">
          <source>You have set the &lt;code&gt;WindowBits&lt;/code&gt; parameter to &lt;code&gt;-MAX_WBITS&lt;/code&gt; in the constructor for this object, i.e. you are uncompressing a raw deflated data stream (RFC 1951).</source>
          <target state="translated">Ha configurado el &lt;code&gt;WindowBits&lt;/code&gt; par&amp;aacute;metro para &lt;code&gt;-MAX_WBITS&lt;/code&gt; en el constructor para este objeto, es decir, que est&amp;aacute;n descomprimir un flujo de datos en bruto desinflado (RFC 1951).</target>
        </trans-unit>
        <trans-unit id="522d08a79de6280adc20232939d047a4cc891b57" translate="yes" xml:space="preserve">
          <source>You have the choice to set the config variable &lt;code&gt;scan_cache&lt;/code&gt; to &lt;code&gt;never&lt;/code&gt; . Then you must clean it up yourself. The other possible values, &lt;code&gt;atstart&lt;/code&gt; and &lt;code&gt;atexit&lt;/code&gt; clean up the build directory when you start (or more precisely, after the first extraction into the build directory) or exit the CPAN shell, respectively. If you never start up the CPAN shell, you probably also have to clean up the build directory yourself.</source>
          <target state="translated">Tiene la opci&amp;oacute;n de establecer la variable de configuraci&amp;oacute;n &lt;code&gt;scan_cache&lt;/code&gt; en &lt;code&gt;never&lt;/code&gt; . Entonces debes limpiarlo t&amp;uacute; mismo. Los otros valores posibles, &lt;code&gt;atstart&lt;/code&gt; y &lt;code&gt;atexit&lt;/code&gt; limpian el directorio de compilaci&amp;oacute;n cuando inicia (o m&amp;aacute;s precisamente, despu&amp;eacute;s de la primera extracci&amp;oacute;n en el directorio de compilaci&amp;oacute;n) o sale del shell de CPAN, respectivamente. Si nunca inicia el shell de CPAN, probablemente tambi&amp;eacute;n tenga que limpiar el directorio de compilaci&amp;oacute;n usted mismo.</target>
        </trans-unit>
        <trans-unit id="d43912cc9e84a61faff2f02f26a4d03134058ada" translate="yes" xml:space="preserve">
          <source>You have the same problem with &lt;a href=&quot;Time::Local&quot;&gt;Time::Local&lt;/a&gt;, which will give the wrong answer for those same special cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2deb6a8cd98a82f2aaaef2ec6bec5741ef832ea" translate="yes" xml:space="preserve">
          <source>You have the same problem with &lt;a href=&quot;time/local&quot;&gt;Time::Local&lt;/a&gt;, which will give the wrong answer for those same special cases:</source>
          <target state="translated">Tiene el mismo problema con &lt;a href=&quot;time/local&quot;&gt;Time :: Local&lt;/a&gt; , que dar&amp;aacute; una respuesta incorrecta para esos mismos casos especiales:</target>
        </trans-unit>
        <trans-unit id="d93e439cde6acc82e52bf85fad48553b810a706b" translate="yes" xml:space="preserve">
          <source>You have to be prepared to &quot;reap&quot; the child process when it finishes.</source>
          <target state="translated">Tienes que estar preparado para &quot;cosechar&quot; el proceso del niño cuando termine.</target>
        </trans-unit>
        <trans-unit id="7bc9963f1adfa43aa2eba732c53b836ac12c4562" translate="yes" xml:space="preserve">
          <source>You have to decide whether you want to use string or numeric comparisons.</source>
          <target state="translated">Tienes que decidir si quieres usar comparaciones de cadenas o numéricas.</target>
        </trans-unit>
        <trans-unit id="4cf51b08c425e59c5631231a092f6037897d07c7" translate="yes" xml:space="preserve">
          <source>You have to decide whether your array has numeric or string indices.</source>
          <target state="translated">Tienes que decidir si tu matriz tiene índices numéricos o de cadena.</target>
        </trans-unit>
        <trans-unit id="a73461591d1d0c0412d08a5e1e1cc7e69b28c7fe" translate="yes" xml:space="preserve">
          <source>You have to have Pod::Simple::RTF installed (from the Pod::Simple dist), or this module won't work.</source>
          <target state="translated">Tienes que tener instalado el Pod::Simple::RTF (del Pod::Simple dist),o este módulo no funcionará.</target>
        </trans-unit>
        <trans-unit id="58b51a173ef28ef95718c75aa4bacf0fb0ef7258" translate="yes" xml:space="preserve">
          <source>You have to have installed Pod::Simple::XMLOutStream (from the Pod::Simple dist), or this class won't work.</source>
          <target state="translated">Tienes que tener instalado el Pod::Simple::XMLOutStream (del Pod::Simple dist),o esta clase no funcionará.</target>
        </trans-unit>
        <trans-unit id="f9f9dbede53dcc87c8a6c2c35d9ae17a92119e03" translate="yes" xml:space="preserve">
          <source>You have to have installed Tk::Pod first, or this class won't load.</source>
          <target state="translated">Tienes que tener instalado Tk::Pod primero,o esta clase no se cargará.</target>
        </trans-unit>
        <trans-unit id="95bfc19d25cce1034c6f167e8df494025bec3f1c" translate="yes" xml:space="preserve">
          <source>You have to have two hex digits after a braceless &lt;code&gt;\x&lt;/code&gt; (use a leading zero to make two). These restrictions are to lower the incidence of typos causing the class to not match what you thought it would.</source>
          <target state="translated">Debes tener dos d&amp;iacute;gitos hexadecimales despu&amp;eacute;s de &lt;code&gt;\x&lt;/code&gt; llaves (usa un cero a la izquierda para hacer dos). Estas restricciones tienen como objetivo reducir la incidencia de errores tipogr&amp;aacute;ficos que provocan que la clase no coincida con lo que pensaba.</target>
        </trans-unit>
        <trans-unit id="c268b51167b66309dd9d49ba2a2c249b1b287fa0" translate="yes" xml:space="preserve">
          <source>You have to keep track of N yourself. For example, let's say you want to change the fifth occurrence of &lt;code&gt;&quot;whoever&quot;&lt;/code&gt; or &lt;code&gt;&quot;whomever&quot;&lt;/code&gt; into &lt;code&gt;&quot;whosoever&quot;&lt;/code&gt; or &lt;code&gt;&quot;whomsoever&quot;&lt;/code&gt; , case insensitively. These all assume that $_ contains the string to be altered.</source>
          <target state="translated">Tienes que realizar un seguimiento de N t&amp;uacute; mismo. Por ejemplo, digamos que desea cambiar la quinta aparici&amp;oacute;n de &lt;code&gt;&quot;whoever&quot;&lt;/code&gt; o &lt;code&gt;&quot;whomever&quot;&lt;/code&gt; en &lt;code&gt;&quot;whosoever&quot;&lt;/code&gt; o &lt;code&gt;&quot;whomsoever&quot;&lt;/code&gt; , sin distinci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas. Todos ellos asumen que $ _ contiene la cadena que se va a modificar.</target>
        </trans-unit>
        <trans-unit id="8f497ff3dd0b8c02bb7f0cfe45277ba739785588" translate="yes" xml:space="preserve">
          <source>You have to keep track of N yourself. For example, let's say you want to change the fifth occurrence of &lt;code&gt;&quot;whoever&quot;&lt;/code&gt; or &lt;code&gt;&quot;whomever&quot;&lt;/code&gt; into &lt;code&gt;&quot;whosoever&quot;&lt;/code&gt; or &lt;code&gt;&quot;whomsoever&quot;&lt;/code&gt;, case insensitively. These all assume that $_ contains the string to be altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac02203046e578344330c6d8542449742080d451" translate="yes" xml:space="preserve">
          <source>You have to run this program by hand; it's not run as part of the Perl installation.</source>
          <target state="translated">Tienes que ejecutar este programa a mano;no se ejecuta como parte de la instalación de Perl.</target>
        </trans-unit>
        <trans-unit id="64c3798560849a7dba79bf1106dd1dedfd652114" translate="yes" xml:space="preserve">
          <source>You have tried to use one of the &lt;code&gt;-rwxRWX&lt;/code&gt; filetests with &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt;
filetest 'access'&lt;/code&gt; in effect. &lt;code&gt;File::stat&lt;/code&gt; will ignore the pragma, and just use the information in the &lt;code&gt;mode&lt;/code&gt; member as usual.</source>
          <target state="translated">Ha intentado utilizar una de las &lt;code&gt;-rwxRWX&lt;/code&gt; de archivo -rwxRWX con &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; filetest 'access'&lt;/code&gt; en efecto. &lt;code&gt;File::stat&lt;/code&gt; ignorar&amp;aacute; el pragma y solo usar&amp;aacute; la informaci&amp;oacute;n en el miembro del &lt;code&gt;mode&lt;/code&gt; como de costumbre.</target>
        </trans-unit>
        <trans-unit id="619430200c4656ad3bc2866c9b899c95858a7c7b" translate="yes" xml:space="preserve">
          <source>You have tried to use one of the &lt;code&gt;-rwxRWX&lt;/code&gt; filetests with &lt;code&gt;use filetest 'access'&lt;/code&gt; in effect. &lt;code&gt;File::stat&lt;/code&gt; will ignore the pragma, and just use the information in the &lt;code&gt;mode&lt;/code&gt; member as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f298d6edd85361a4fe69a118c738c5c6d1ac6519" translate="yes" xml:space="preserve">
          <source>You just can't, okay? Instead, put all the specifications together with commas between them in a single &lt;code&gt;ATTR(&lt;i&gt;specification&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="translated">No puedes, &amp;iquest;de acuerdo? En su lugar, coloque todas las especificaciones junto con comas entre ellas en un solo &lt;code&gt;ATTR(&lt;i&gt;specification&lt;/i&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2ae4f730c89fd94f9c70ee5552ee3019cb5e33a" translate="yes" xml:space="preserve">
          <source>You like this port? See &lt;a href=&quot;http://www.broad.ology.org.uk/amiga/&quot;&gt;http://www.broad.ology.org.uk/amiga/&lt;/a&gt; for how you can help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbf451f9422303960f49b456d9bb760406138be" translate="yes" xml:space="preserve">
          <source>You likely need to figure out how this multi-byte character got mixed up with your single-byte locale (or perhaps you thought you had a UTF-8 locale, but Perl disagrees).</source>
          <target state="translated">Es probable que tengas que averiguar cómo se mezcló este personaje de varios bytes con tu local de un solo byte (o tal vez pensaste que tenías un local de UTF-8,pero Perl no está de acuerdo).</target>
        </trans-unit>
        <trans-unit id="b36efc02e455a878d40bce54d0800047ed5ce051" translate="yes" xml:space="preserve">
          <source>You may (and usually should) use the three-argument form of open to specify I/O layers (sometimes referred to as &quot;disciplines&quot;) to apply to the handle that affect how the input and output are processed (see &lt;a href=&quot;../open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;../perlio&quot;&gt;PerlIO&lt;/a&gt; for more details). For example:</source>
          <target state="translated">Puede (y generalmente deber&amp;iacute;a) usar la forma de tres argumentos de open para especificar capas de E / S (a veces denominadas &quot;disciplinas&quot;) para aplicar al identificador que afectan la forma en que se procesan la entrada y la salida (consulte &lt;a href=&quot;../open&quot;&gt;open&lt;/a&gt; y &lt;a href=&quot;../perlio&quot;&gt;PerlIO&lt;/a&gt; para m&amp;aacute;s detalles). Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f4242caecdd2a41134c434e48293066c09a61129" translate="yes" xml:space="preserve">
          <source>You may (and usually should) use the three-argument form of open to specify I/O layers (sometimes referred to as &quot;disciplines&quot;) to apply to the handle that affect how the input and output are processed (see &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; and &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; for more details). For example:</source>
          <target state="translated">Puede (y generalmente deber&amp;iacute;a) usar la forma de tres argumentos de open para especificar capas de E / S (a veces denominadas &quot;disciplinas&quot;) para aplicar al identificador que afectan la forma en que se procesan la entrada y la salida (consulte &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; y &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; para m&amp;aacute;s detalles). Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9e56389d96587e792278e4c558eb5807976007cf" translate="yes" xml:space="preserve">
          <source>You may access the repository over the web. This allows you to browse the tree, see recent commits, subscribe to RSS feeds for the changes, search for particular commits and more. You may access it at &lt;a href=&quot;http://perl5.git.perl.org/perl.git&quot;&gt;http://perl5.git.perl.org/perl.git&lt;/a&gt;. A mirror of the repository is found at &lt;a href=&quot;https://github.com/Perl/perl5&quot;&gt;https://github.com/Perl/perl5&lt;/a&gt;.</source>
          <target state="translated">Puede acceder al repositorio a trav&amp;eacute;s de la web. Esto le permite navegar por el &amp;aacute;rbol, ver confirmaciones recientes, suscribirse a fuentes RSS para los cambios, buscar confirmaciones particulares y m&amp;aacute;s. Puede acceder a &amp;eacute;l en &lt;a href=&quot;http://perl5.git.perl.org/perl.git&quot;&gt;http://perl5.git.perl.org/perl.git&lt;/a&gt; . Se encuentra un espejo del repositorio en &lt;a href=&quot;https://github.com/Perl/perl5&quot;&gt;https://github.com/Perl/perl5&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="880fe17e1513224bf25aeb9d0faccae93b9cb553" translate="yes" xml:space="preserve">
          <source>You may access the repository over the web. This allows you to browse the tree, see recent commits, subscribe to repository notifications, search for particular commits and more. You may access it at &lt;a href=&quot;https://github.com/Perl/perl5&quot;&gt;https://github.com/Perl/perl5&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d839e720ae2e7bff2fab5b0520b346cd44ca6b4d" translate="yes" xml:space="preserve">
          <source>You may add other methods to the UNIVERSAL class via Perl or XS code. You do not need to &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; UNIVERSAL&lt;/code&gt; to make these methods available to your program (and you should not do so).</source>
          <target state="translated">Puede agregar otros m&amp;eacute;todos a la clase UNIVERSAL a trav&amp;eacute;s de c&amp;oacute;digo Perl o XS. No es necesario que &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; UNIVERSAL&lt;/code&gt; para que estos m&amp;eacute;todos est&amp;eacute;n disponibles para su programa (y no deber&amp;iacute;a hacerlo).</target>
        </trans-unit>
        <trans-unit id="224f5909daef0b34d22040e764c9911e7daddf8b" translate="yes" xml:space="preserve">
          <source>You may add other methods to the UNIVERSAL class via Perl or XS code. You do not need to &lt;code&gt;use UNIVERSAL&lt;/code&gt; to make these methods available to your program (and you should not do so).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100a6f059c39fc4530e46957891e388f20cf1052" translate="yes" xml:space="preserve">
          <source>You may also choose to assign the strings &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; or &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; as the handler, in which case Perl will try to discard the signal or do the default thing.</source>
          <target state="translated">Tambi&amp;eacute;n puede optar por asignar las cadenas &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; o &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; como controlador, en cuyo caso Perl intentar&amp;aacute; descartar la se&amp;ntilde;al o hacer lo predeterminado.</target>
        </trans-unit>
        <trans-unit id="daa282ce292ff54483ba2ce846a92dc96f9168dc" translate="yes" xml:space="preserve">
          <source>You may also examine the &quot;safe&quot; flag on the output action object which is filled in when given as the third parameter to &lt;code&gt;POSIX::sigaction()&lt;/code&gt; :</source>
          <target state="translated">Tambi&amp;eacute;n puede examinar el indicador &quot;seguro&quot; en el objeto de acci&amp;oacute;n de salida que se completa cuando se le da como tercer par&amp;aacute;metro a &lt;code&gt;POSIX::sigaction()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="423918885baf5f3a8b58d2fd022436e7d14efbab" translate="yes" xml:space="preserve">
          <source>You may also examine the &quot;safe&quot; flag on the output action object which is filled in when given as the third parameter to &lt;code&gt;POSIX::sigaction()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6858c6ae6b5f95e06bfedeb3afc148cdf748f135" translate="yes" xml:space="preserve">
          <source>You may also have found out by now why 7bit ISO-2022 cannot comprise a CCS. If you look at a byte sequence \x21\x21, you can't tell if it is two !'s or IDEOGRAPHIC SPACE. EUC maps the latter to \xA1\xA1 so you have no trouble differentiating between &quot;!!&quot;. and &quot; &quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c5b9373dd2d19d42f55fdae95d97ea20dd07a1" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;gr_&lt;/code&gt; . Thus, &lt;code&gt;$group_obj-&amp;gt;gid()&lt;/code&gt; corresponds to $gr_gid if you import the fields. Array references are available as regular array variables, so &lt;code&gt;@{ $group_obj-&amp;gt;members() }&lt;/code&gt; would be simply @gr_members.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto todav&amp;iacute;a anula sus funciones principales). Acceda a estos campos como variables nombradas con un &lt;code&gt;gr_&lt;/code&gt; precedente . Por lo tanto, &lt;code&gt;$group_obj-&amp;gt;gid()&lt;/code&gt; corresponde a $ gr_gid si importa los campos. Las referencias de matriz est&amp;aacute;n disponibles como variables de matriz regulares, por lo que &lt;code&gt;@{ $group_obj-&amp;gt;members() }&lt;/code&gt; ser&amp;iacute;a simplemente @gr_members.</target>
        </trans-unit>
        <trans-unit id="caae676e8fb92488f8f5b8dcd2e680cb050048ef" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;gr_&lt;/code&gt;. Thus, &lt;code&gt;$group_obj-&amp;gt;gid()&lt;/code&gt; corresponds to $gr_gid if you import the fields. Array references are available as regular array variables, so &lt;code&gt;@{ $group_obj-&amp;gt;members() }&lt;/code&gt; would be simply @gr_members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4935199f235ba2f0cd0a1d49e3ac1a3bbd011f" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;h_&lt;/code&gt; . Thus, &lt;code&gt;$host_obj-&amp;gt;name()&lt;/code&gt; corresponds to $h_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $host_obj-&amp;gt;aliases()
}&lt;/code&gt; would be simply @h_aliases.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto todav&amp;iacute;a anula sus funciones principales). Acceda a estos campos como variables nombradas con una &lt;code&gt;h_&lt;/code&gt; precedente . Por lo tanto, &lt;code&gt;$host_obj-&amp;gt;name()&lt;/code&gt; corresponde a $ h_name si importa los campos. Las referencias de matriz est&amp;aacute;n disponibles como variables de matriz regulares, por lo que, por ejemplo, &lt;code&gt;@{ $host_obj-&amp;gt;aliases() }&lt;/code&gt; ser&amp;iacute;a simplemente @h_aliases.</target>
        </trans-unit>
        <trans-unit id="da401673f6af44a50993b3561d0579f99e07eee9" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;h_&lt;/code&gt;. Thus, &lt;code&gt;$host_obj-&amp;gt;name()&lt;/code&gt; corresponds to $h_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $host_obj-&amp;gt;aliases() }&lt;/code&gt; would be simply @h_aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ec160f76fcfc38cc73d96c90a7ce874d6384c9" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;n_&lt;/code&gt; . Thus, &lt;code&gt;$net_obj-&amp;gt;name()&lt;/code&gt; corresponds to $n_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $net_obj-&amp;gt;aliases()
}&lt;/code&gt; would be simply @n_aliases.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto todav&amp;iacute;a anula sus funciones principales). Acceda a estos campos como variables nombradas con una &lt;code&gt;n_&lt;/code&gt; precedente . Por lo tanto, &lt;code&gt;$net_obj-&amp;gt;name()&lt;/code&gt; corresponde a $ n_name si importa los campos. Las referencias de matriz est&amp;aacute;n disponibles como variables de matriz regulares, por lo que, por ejemplo, &lt;code&gt;@{ $net_obj-&amp;gt;aliases() }&lt;/code&gt; ser&amp;iacute;a simplemente @n_aliases.</target>
        </trans-unit>
        <trans-unit id="19db00abebd3ac2639c39bd38da2d23c013b0474" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;n_&lt;/code&gt;. Thus, &lt;code&gt;$net_obj-&amp;gt;name()&lt;/code&gt; corresponds to $n_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $net_obj-&amp;gt;aliases() }&lt;/code&gt; would be simply @n_aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8189e5c613aac0e23d3c0670ed3ce2f5ae13db" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;p_&lt;/code&gt; . Thus, &lt;code&gt;$proto_obj-&amp;gt;name()&lt;/code&gt; corresponds to $p_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $proto_obj-&amp;gt;aliases()
}&lt;/code&gt; would be simply @p_aliases.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto todav&amp;iacute;a anula sus funciones principales). Acceda a estos campos como variables nombradas con una &lt;code&gt;p_&lt;/code&gt; precedente . Por lo tanto, &lt;code&gt;$proto_obj-&amp;gt;name()&lt;/code&gt; corresponde a $ p_name si importa los campos. Las referencias de matriz est&amp;aacute;n disponibles como variables de matriz regulares, por lo que, por ejemplo, &lt;code&gt;@{ $proto_obj-&amp;gt;aliases() }&lt;/code&gt; ser&amp;iacute;a simplemente @p_aliases.</target>
        </trans-unit>
        <trans-unit id="59c78f0961227d9eef360c4cd0d66deb00f372b4" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;p_&lt;/code&gt;. Thus, &lt;code&gt;$proto_obj-&amp;gt;name()&lt;/code&gt; corresponds to $p_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $proto_obj-&amp;gt;aliases() }&lt;/code&gt; would be simply @p_aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ca76eb17a2cf86a0c57fdc15c696e88b6cf4c9" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;pw_&lt;/code&gt; in front their method names. Thus, &lt;code&gt;$passwd_obj-&amp;gt;shell&lt;/code&gt; corresponds to $pw_shell if you import the fields.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto todav&amp;iacute;a anula sus funciones principales). Acceda a estos campos como variables nombradas con un &lt;code&gt;pw_&lt;/code&gt; delante de sus nombres de m&amp;eacute;todo. Por lo tanto, &lt;code&gt;$passwd_obj-&amp;gt;shell&lt;/code&gt; corresponde a $ pw_shell si importa los campos.</target>
        </trans-unit>
        <trans-unit id="274d859e81c068db4c48efa8f50c77493ca5cdbd" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;s_&lt;/code&gt; . Thus, &lt;code&gt;$serv_obj-&amp;gt;name()&lt;/code&gt; corresponds to $s_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $serv_obj-&amp;gt;aliases()}&lt;/code&gt; would be simply @s_aliases.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto todav&amp;iacute;a anula sus funciones principales). Acceda a estos campos como variables nombradas con una &lt;code&gt;s_&lt;/code&gt; precedente . Por tanto, &lt;code&gt;$serv_obj-&amp;gt;name()&lt;/code&gt; corresponde a $ s_name si importa los campos. Las referencias de matriz est&amp;aacute;n disponibles como variables de matriz regulares, por lo que, por ejemplo, &lt;code&gt;@{ $serv_obj-&amp;gt;aliases()}&lt;/code&gt; ser&amp;iacute;a simplemente @s_aliases.</target>
        </trans-unit>
        <trans-unit id="18fe09aa2549872796afb74f39ab43e75ad25ff1" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;s_&lt;/code&gt;. Thus, &lt;code&gt;$serv_obj-&amp;gt;name()&lt;/code&gt; corresponds to $s_name if you import the fields. Array references are available as regular array variables, so for example &lt;code&gt;@{ $serv_obj-&amp;gt;aliases()}&lt;/code&gt; would be simply @s_aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447198c5b98b7b54155b70c415358589d509c62e" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your core functions.) Access these fields as variables named with a preceding &lt;code&gt;tm_&lt;/code&gt; in front their method names. Thus, &lt;code&gt;$tm_obj-&amp;gt;mday()&lt;/code&gt; corresponds to $tm_mday if you import the fields.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto todav&amp;iacute;a anula sus funciones principales). Acceda a estos campos como variables nombradas con un &lt;code&gt;tm_&lt;/code&gt; antes del nombre de sus m&amp;eacute;todos. Por lo tanto, &lt;code&gt;$tm_obj-&amp;gt;mday()&lt;/code&gt; corresponde a $ tm_mday si importa los campos.</target>
        </trans-unit>
        <trans-unit id="5c856054dbb9356054cca7ccfef163a998ceb55f" translate="yes" xml:space="preserve">
          <source>You may also import all the structure fields directly into your namespace as regular variables using the :FIELDS import tag. (Note that this still overrides your stat() and lstat() functions.) Access these fields as variables named with a preceding &lt;code&gt;st_&lt;/code&gt; in front their method names. Thus, &lt;code&gt;$stat_obj-&amp;gt;dev()&lt;/code&gt; corresponds to $st_dev if you import the fields.</source>
          <target state="translated">Tambi&amp;eacute;n puede importar todos los campos de estructura directamente en su espacio de nombres como variables regulares usando la etiqueta de importaci&amp;oacute;n: FIELDS. (Tenga en cuenta que esto a&amp;uacute;n anula sus funciones stat () y lstat ().) Acceda a estos campos como variables nombradas con un &lt;code&gt;st_&lt;/code&gt; delante de sus nombres de m&amp;eacute;todo. Por lo tanto, &lt;code&gt;$stat_obj-&amp;gt;dev()&lt;/code&gt; corresponde a $ st_dev si importa los campos.</target>
        </trans-unit>
        <trans-unit id="a6b6b26fcc9879eca82e69c4a67570540fca4ae9" translate="yes" xml:space="preserve">
          <source>You may also need to apply the patches supplied with the binary distribution of perl. It also makes sense to look on the perl5-porters mailing list for the latest OS/2-related patches (see &lt;a href=&quot;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&quot;&gt;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&lt;/a&gt;). Such patches usually contain strings &lt;code&gt;/os2/&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt; , so it makes sense looking for these strings.</source>
          <target state="translated">Es posible que tambi&amp;eacute;n deba aplicar los parches suministrados con la distribuci&amp;oacute;n binaria de perl. Tambi&amp;eacute;n tiene sentido buscar en la lista de correo de perl5-porters los &amp;uacute;ltimos parches relacionados con OS / 2 (consulte &lt;a href=&quot;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&quot;&gt;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&lt;/a&gt; ). Estos parches suelen contener cadenas &lt;code&gt;/os2/&lt;/code&gt; y &lt;code&gt;patch&lt;/code&gt; , por lo que tiene sentido buscar estas cadenas.</target>
        </trans-unit>
        <trans-unit id="8e4529b370379079adb0c3991b105507c8bdaf29" translate="yes" xml:space="preserve">
          <source>You may also need to apply the patches supplied with the binary distribution of perl. It also makes sense to look on the perl5-porters mailing list for the latest OS/2-related patches (see &lt;a href=&quot;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&quot;&gt;http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/&lt;/a&gt;). Such patches usually contain strings &lt;code&gt;/os2/&lt;/code&gt; and &lt;code&gt;patch&lt;/code&gt;, so it makes sense looking for these strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa8495c9efa1eb6aea78e6cd751529d33d7b29e" translate="yes" xml:space="preserve">
          <source>You may also need to comment out the &lt;code&gt;DELAYLOAD = ...&lt;/code&gt; line in the Makefile if you're using VC++ 6.0 without the latest service pack and the linker reports an internal error.</source>
          <target state="translated">Es posible que tambi&amp;eacute;n deba comentar la l&amp;iacute;nea &lt;code&gt;DELAYLOAD = ...&lt;/code&gt; en el Makefile si est&amp;aacute; utilizando VC ++ 6.0 sin el &amp;uacute;ltimo paquete de servicios y el vinculador informa un error interno.</target>
        </trans-unit>
        <trans-unit id="069c796ed1b4791a2efc8028daa2cfe58429ceb7" translate="yes" xml:space="preserve">
          <source>You may also refer to a distribution in the form A/AU/AUTHORID/TARBALL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c64c3fbfbcaace5918da128791239c43cdf19d2" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; to check whether subroutine &lt;code&gt;&amp;amp;func&lt;/code&gt; has ever been defined. The return value is unaffected by any forward declarations of &lt;code&gt;&amp;amp;func&lt;/code&gt; . A subroutine that is not defined may still be callable: its package may have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method that makes it spring into existence the first time that it is called; see &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;&lt;a href=&quot;defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; para comprobar si alguna vez se ha definido la subrutina &lt;code&gt;&amp;amp;func&lt;/code&gt; . El valor de retorno no se ve afectado por ninguna declaraci&amp;oacute;n anticipada de &lt;code&gt;&amp;amp;func&lt;/code&gt; . Una subrutina que no est&amp;aacute; definida a&amp;uacute;n puede ser invocable: su paquete puede tener un m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; que lo hace aparecer la primera vez que se llama; ver &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="172f346295165efa4fd86444269a98fd3b778c01" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; to check whether subroutine &lt;code&gt;&amp;amp;func&lt;/code&gt; has ever been defined. The return value is unaffected by any forward declarations of &lt;code&gt;&amp;amp;func&lt;/code&gt; . A subroutine that is not defined may still be callable: its package may have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method that makes it spring into existence the first time that it is called; see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined(&amp;amp;func)&lt;/a&gt;&lt;/code&gt; para comprobar si alguna vez se ha definido la subrutina &lt;code&gt;&amp;amp;func&lt;/code&gt; . El valor de retorno no se ve afectado por ninguna declaraci&amp;oacute;n anticipada de &lt;code&gt;&amp;amp;func&lt;/code&gt; . Una subrutina que no est&amp;aacute; definida a&amp;uacute;n puede ser invocable: su paquete puede tener un m&amp;eacute;todo &lt;code&gt;AUTOLOAD&lt;/code&gt; que lo hace aparecer la primera vez que se llama; ver &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b8d15f86aa40a5b71c22fd3f0132310f48b5d79" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;defined(&amp;amp;func)&lt;/code&gt; to check whether subroutine &lt;code&gt;func&lt;/code&gt; has ever been defined. The return value is unaffected by any forward declarations of &lt;code&gt;func&lt;/code&gt;. A subroutine that is not defined may still be callable: its package may have an &lt;code&gt;AUTOLOAD&lt;/code&gt; method that makes it spring into existence the first time that it is called; see &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5f7479dd4b17df91be39e0264b553fbc922288" translate="yes" xml:space="preserve">
          <source>You may also use backticks to invoke a DCL subprocess, whose output is used as the return value of the expression. The string between the backticks is handled as if it were the argument to the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; operator (see below). In this case, Perl will wait for the subprocess to complete before continuing.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar comillas invertidas para invocar un subproceso DCL, cuya salida se utiliza como valor de retorno de la expresi&amp;oacute;n. La cadena entre las comillas inversas se maneja como si fuera el argumento para el operador del &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; (ver m&amp;aacute;s abajo). En este caso, Perl esperar&amp;aacute; a que se complete el subproceso antes de continuar.</target>
        </trans-unit>
        <trans-unit id="4106bc4cad7712056a35b119b25c2a2d70a97ddc" translate="yes" xml:space="preserve">
          <source>You may also use backticks to invoke a DCL subprocess, whose output is used as the return value of the expression. The string between the backticks is handled as if it were the argument to the &lt;code&gt;system&lt;/code&gt; operator (see below). In this case, Perl will wait for the subprocess to complete before continuing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbaa1ecf2a2a16f0a8eda0bda48b0855b6af1d1c" translate="yes" xml:space="preserve">
          <source>You may also use dmake or gmake. See &lt;a href=&quot;#Make&quot;&gt;&quot;Make&quot;&lt;/a&gt; above on how to get it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5448f65c98891197c6cecbe08ead986b82724f17" translate="yes" xml:space="preserve">
          <source>You may also use dmake. See &lt;a href=&quot;#Make&quot;&gt;Make&lt;/a&gt; above on how to get it.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar dmake. Vea &lt;a href=&quot;#Make&quot;&gt;Make&lt;/a&gt; arriba sobre c&amp;oacute;mo obtenerlo.</target>
        </trans-unit>
        <trans-unit id="6a9260264524823855ded5315edf6f0c9bddfa48" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt; module (part of the standard perl distribution), but be warned that it has a different order of arguments from &lt;a href=&quot;IPC::Open2&quot;&gt;IPC::Open2&lt;/a&gt; (see &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3196fa8d2ff4d6ac1033b15a7916441466060e42" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt; module (part of the standard perl distribution), but be warned that it has a different order of arguments from &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt; (see &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;).</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar el m&amp;oacute;dulo &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; (parte de la distribuci&amp;oacute;n est&amp;aacute;ndar de Perl), pero tenga en cuenta que tiene un orden de argumentos diferente al de &lt;a href=&quot;ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt; (consulte &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="71182d3aa143564846d6bda380e37d7713401c83" translate="yes" xml:space="preserve">
          <source>You may also use the operators &amp;lt; (less than), &amp;lt;= (less than or equal), &amp;gt; (greater than), &amp;gt;= (greater than or equal), == (equal), and != (not equal). For example, the specification &lt;code&gt;&amp;lt; 2.0&lt;/code&gt; means that any version of the prerequisite less than 2.0 is suitable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7ef88e606ea55cb21f76eea0e0de1fb7b9db2f" translate="yes" xml:space="preserve">
          <source>You may also want to look at one other option for building a perl that will work on Windows: the README.cygwin file, which give a different set of rules to build a perl for Windows. This method will probably enable you to build a more Unix-compatible perl, but you will also need to download and use various other build-time and run-time support software described in that file.</source>
          <target state="translated">También puede que quieras mirar otra opción para construir un perl que funcione en Windows:el archivo README.cygwin,que da un conjunto diferente de reglas para construir un perl para Windows.Este método probablemente le permitirá construir un perl más compatible con Unix,pero también tendrá que descargar y utilizar otros programas de soporte de tiempo de construcción y de ejecución descritos en ese archivo.</target>
        </trans-unit>
        <trans-unit id="47d8e5afa5f51ce60391c15623a30d357b47dac4" translate="yes" xml:space="preserve">
          <source>You may also want to override the &lt;b&gt;begin_input()&lt;/b&gt; and &lt;b&gt;end_input()&lt;/b&gt; methods for your subclass (to perform any needed per-file and/or per-document initialization or cleanup).</source>
          <target state="translated">Tambi&amp;eacute;n puede querer anular los m&amp;eacute;todos &lt;b&gt;begin_input ()&lt;/b&gt; y &lt;b&gt;end_input ()&lt;/b&gt; para su subclase (para realizar cualquier inicializaci&amp;oacute;n o limpieza por archivo y / o por documento).</target>
        </trans-unit>
        <trans-unit id="fad70035f3a1b89b3667a331878011a9d50cf74f" translate="yes" xml:space="preserve">
          <source>You may also want to read over the source for &lt;code&gt;File::Findgrep&lt;/code&gt; and its constituent modules -- they are a complete (if small) example application that uses Maketext.</source>
          <target state="translated">Es posible que tambi&amp;eacute;n desee leer el c&amp;oacute;digo fuente de &lt;code&gt;File::Findgrep&lt;/code&gt; y sus m&amp;oacute;dulos constituyentes; son una aplicaci&amp;oacute;n de ejemplo completa (aunque peque&amp;ntilde;a) que usa Maketext.</target>
        </trans-unit>
        <trans-unit id="32c591edfbc105cf26f618c0c72cc57761fceff2" translate="yes" xml:space="preserve">
          <source>You may also wish to discuss with the translators the question of how to relate different subforms of the same language tag, considering how this reacts with &lt;code&gt;get_handle&lt;/code&gt; 's treatment of these. For example, if a user accepts interfaces in &quot;en, fr&quot;, and you have interfaces available in &quot;en-US&quot; and &quot;fr&quot;, what should they get? You may wish to resolve this by establishing that &quot;en&quot; and &quot;en-US&quot; are effectively synonymous, by having one class zero-derive from the other.</source>
          <target state="translated">Tambi&amp;eacute;n es posible que desee discutir con los traductores la cuesti&amp;oacute;n de c&amp;oacute;mo relacionar diferentes subformularios de la misma etiqueta de idioma, considerando c&amp;oacute;mo reacciona esto con el tratamiento de &lt;code&gt;get_handle&lt;/code&gt; de estos. Por ejemplo, si un usuario acepta interfaces en &quot;en, fr&quot; y usted tiene interfaces disponibles en &quot;en-US&quot; y &quot;fr&quot;, &amp;iquest;qu&amp;eacute; deber&amp;iacute;an obtener? Es posible que desee resolver esto estableciendo que &quot;en&quot; y &quot;en-US&quot; son efectivamente sin&amp;oacute;nimos, al tener una clase derivada de cero de la otra.</target>
        </trans-unit>
        <trans-unit id="91e1b897633821a7c3b5243be65043e6b7b07517" translate="yes" xml:space="preserve">
          <source>You may also wish to discuss with the translators the question of how to relate different subforms of the same language tag, considering how this reacts with &lt;code&gt;get_handle&lt;/code&gt;'s treatment of these. For example, if a user accepts interfaces in &quot;en, fr&quot;, and you have interfaces available in &quot;en-US&quot; and &quot;fr&quot;, what should they get? You may wish to resolve this by establishing that &quot;en&quot; and &quot;en-US&quot; are effectively synonymous, by having one class zero-derive from the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05003e2911012bca46d826b18714273b702cbb78" translate="yes" xml:space="preserve">
          <source>You may also, in the Bourne shell tradition, specify an EXPR beginning with &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;, in which case the rest of the string is interpreted as the name of a filehandle (or file descriptor, if numeric) to be duped (as &lt;code&gt;dup(2)&lt;/code&gt; ) and opened. You may use &lt;code&gt;&amp;amp;&lt;/code&gt; after &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;+&amp;gt;&lt;/code&gt;, &lt;code&gt;+&amp;gt;&amp;gt;&lt;/code&gt; , and &lt;code&gt;+&amp;lt;&lt;/code&gt; . The mode you specify should match the mode of the original filehandle. (Duping a filehandle does not take into account any existing contents of IO buffers.) If you use the three-argument form, then you can pass either a number, the name of a filehandle, or the normal &quot;reference to a glob&quot;.</source>
          <target state="translated">Tambi&amp;eacute;n puede, en la tradici&amp;oacute;n del shell Bourne, especificar un EXPR que comience con &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt; , en cuyo caso el resto de la cadena se interpreta como el nombre de un identificador de archivo (o descriptor de archivo, si es num&amp;eacute;rico) para ser enga&amp;ntilde;ado (como &lt;code&gt;dup(2)&lt;/code&gt; ) y abierto. Puede usar &lt;code&gt;&amp;amp;&lt;/code&gt; after &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;+&amp;gt;&lt;/code&gt; , &lt;code&gt;+&amp;gt;&amp;gt;&lt;/code&gt; y &lt;code&gt;+&amp;lt;&lt;/code&gt; . El modo que especifique debe coincidir con el modo del identificador de archivo original. (La duplicaci&amp;oacute;n de un identificador de archivo no tiene en cuenta ning&amp;uacute;n contenido existente de b&amp;uacute;feres de E / S.) Si utiliza la forma de tres argumentos, puede pasar un n&amp;uacute;mero, el nombre de un identificador de archivo o la &quot;referencia a un glob&quot; normal.</target>
        </trans-unit>
        <trans-unit id="36b7c7ac25178c324a91d61c24d7fde286a14a90" translate="yes" xml:space="preserve">
          <source>You may also, in the Bourne shell tradition, specify an EXPR beginning with &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;, in which case the rest of the string is interpreted as the name of a filehandle (or file descriptor, if numeric) to be duped (as in &lt;a href=&quot;http://man.he.net/man2/dup&quot;&gt;dup(2)&lt;/a&gt;) and opened. You may use &lt;code&gt;&amp;amp;&lt;/code&gt; after &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;+&amp;gt;&lt;/code&gt;, &lt;code&gt;+&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;+&amp;lt;&lt;/code&gt;. The mode you specify should match the mode of the original filehandle. (Duping a filehandle does not take into account any existing contents of IO buffers.) If you use the three-argument form, then you can pass either a number, the name of a filehandle, or the normal &quot;reference to a glob&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5fc563eb0d1fd26ae839cfa02427332324573f" translate="yes" xml:space="preserve">
          <source>You may ask whether one of these was implemented on the system Perl was built on by asking the importable &lt;code&gt;pw_has&lt;/code&gt; function about them. This function returns true if all parameters are supported fields on the build platform, false if one or more were not, and raises an exception if you asked about a field that Perl never knows how to provide. Parameters may be in a space-separated string, or as separate arguments. If you pass no parameters, the function returns the list of &lt;code&gt;struct pwd&lt;/code&gt; fields supported by your build platform's C library, as a list in list context, or a space-separated string in scalar context. Note that just because your C library had a field doesn't necessarily mean that it's fully implemented on that system.</source>
          <target state="translated">Puede preguntar si uno de estos se implement&amp;oacute; en el sistema en el que se construy&amp;oacute; Perl preguntando a la funci&amp;oacute;n importable &lt;code&gt;pw_has&lt;/code&gt; sobre ellos. Esta funci&amp;oacute;n devuelve verdadero si todos los par&amp;aacute;metros son campos admitidos en la plataforma de compilaci&amp;oacute;n, falso si uno o m&amp;aacute;s no lo fueron, y genera una excepci&amp;oacute;n si pregunta sobre un campo que Perl nunca sabe c&amp;oacute;mo proporcionar. Los par&amp;aacute;metros pueden estar en una cadena separada por espacios o como argumentos separados. Si no pasa ning&amp;uacute;n par&amp;aacute;metro, la funci&amp;oacute;n devuelve la lista de campos &lt;code&gt;struct pwd&lt;/code&gt; admitidos por la biblioteca C de su plataforma de compilaci&amp;oacute;n, como una lista en el contexto de lista o una cadena separada por espacios en el contexto escalar. Tenga en cuenta que el hecho de que su biblioteca C tenga un campo no significa necesariamente que est&amp;eacute; completamente implementado en ese sistema.</target>
        </trans-unit>
        <trans-unit id="56003b76083072e5d28f4c38591744948d360c03" translate="yes" xml:space="preserve">
          <source>You may at this point want to consider whether your base class (Projname::L10N), from which all lexicons inherit from (Projname::L10N::en, Projname::L10N::es, etc.), should be an _AUTO lexicon. It may be true that in theory, all needed messages will be in each language class; but in the presumably unlikely or &quot;impossible&quot; case of lookup failure, you should consider whether your program should throw an exception, emit text in English (or whatever your project's first language is), or some more complex solution as described in the section &quot;Controlling Lookup Failure&quot;, above.</source>
          <target state="translated">En este punto puede que quieras considerar si tu clase base (Projname::L10N),de la cual todos los léxicos heredan de (Projname::L10N::en,Projname::L10N::es,etc.),debería ser un léxico _AUTO.Puede ser cierto que,en teoría,todos los mensajes necesarios estarán en cada clase de idioma;pero en el caso presumiblemente improbable o &quot;imposible&quot; de fallo de búsqueda,debe considerar si su programa debe lanzar una excepción,emitir texto en inglés (o cualquiera que sea el primer idioma de su proyecto),o alguna solución más compleja como se describe en la sección &quot;Control del fallo de búsqueda&quot;,más arriba.</target>
        </trans-unit>
        <trans-unit id="00dd50349ec2812a0e8ba87a508b17b844d30458" translate="yes" xml:space="preserve">
          <source>You may be able to figure out what's going wrong using the Perl debugger. For information about how to use the debugger &lt;b&gt;perldoc&lt;/b&gt;&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;.</source>
          <target state="translated">Es posible que pueda averiguar qu&amp;eacute; va mal utilizando el depurador de Perl. Para obtener informaci&amp;oacute;n sobre c&amp;oacute;mo utilizar el depurador &lt;b&gt;perldoc &lt;/b&gt;&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14e829b9ba39410c7fdd62b2c0459a78db997545" translate="yes" xml:space="preserve">
          <source>You may be able to get the CCTools app, which is free. Keep in mind that you want a full toolchain; some apps tend to default to installing only a barebones version without some important utilities, like ar or nm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538c1768e7dd08c154327dd9d81d8469210ac3b8" translate="yes" xml:space="preserve">
          <source>You may be mixing the Tru64 cc/ar/ld with the GNU gcc/ar/ld. That may work, but sometimes it doesn't (your gcc or GNU utils may have been compiled for an incompatible OS release).</source>
          <target state="translated">Puede que estés mezclando el cc/ar/ld Tru64 con el gcc/ar/ld GNU.Eso puede funcionar,pero a veces no (sus utilidades gcc o GNU pueden haber sido compiladas para una versión de sistema operativo incompatible).</target>
        </trans-unit>
        <trans-unit id="569474da0977b8a6d57c606d4bf816045d439deb" translate="yes" xml:space="preserve">
          <source>You may be more comfortable with the Perl version of that:</source>
          <target state="translated">Puede que te sientas más cómodo con la versión Perl de eso:</target>
        </trans-unit>
        <trans-unit id="55841621afe9413e5a4d96acdf404652aff0ba71" translate="yes" xml:space="preserve">
          <source>You may be presented with strings in any of these equivalent forms. There is currently nothing in Perl 5 that ignores the differences. So you'll have to specially handle it. The usual advice is to convert your inputs to &lt;code&gt;NFD&lt;/code&gt; before processing further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c2934cf1eab265e83a97c11bed16b38a8b5801" translate="yes" xml:space="preserve">
          <source>You may be presented with strings in any of these equivalent forms. There is currently nothing in Perl 5 that ignores the differences. So you'll have to specially hanlde it. The usual advice is to convert your inputs to &lt;code&gt;NFD&lt;/code&gt; before processing further.</source>
          <target state="translated">Es posible que se le presenten cadenas en cualquiera de estas formas equivalentes. Actualmente no hay nada en Perl 5 que ignore las diferencias. As&amp;iacute; que tendr&amp;aacute;s que manejarlo especialmente. El consejo habitual es convertir sus entradas a &lt;code&gt;NFD&lt;/code&gt; antes de seguir procesando.</target>
        </trans-unit>
        <trans-unit id="58f64d73709bb7f46995ccc9ddf584cf761fc186" translate="yes" xml:space="preserve">
          <source>You may call &lt;code&gt;can&lt;/code&gt; as a class (static) method or an object method.</source>
          <target state="translated">Puede llamar a &lt;code&gt;can&lt;/code&gt; como un m&amp;eacute;todo de clase (est&amp;aacute;tico) o un m&amp;eacute;todo de objeto.</target>
        </trans-unit>
        <trans-unit id="8cf034da6832021586a2104fbbd0c08a1605f5bc" translate="yes" xml:space="preserve">
          <source>You may call &lt;code&gt;hv_delete&lt;/code&gt; or &lt;code&gt;hv_delete_ent&lt;/code&gt; on the hash entry that the iterator currently points to, without losing your place or invalidating your iterator. Note that in this case the current entry is deleted from the hash with your iterator holding the last reference to it. Your iterator is flagged to free the entry on the next call to &lt;code&gt;hv_iternext&lt;/code&gt; , so you must not discard your iterator immediately else the entry will leak - call &lt;code&gt;hv_iternext&lt;/code&gt; to trigger the resource deallocation.</source>
          <target state="translated">Puede llamar a &lt;code&gt;hv_delete&lt;/code&gt; o &lt;code&gt;hv_delete_ent&lt;/code&gt; en la entrada hash a la que apunta actualmente el iterador, sin perder su lugar ni invalidar su iterador. Tenga en cuenta que, en este caso, la entrada actual se elimina del hash y su iterador mantiene la &amp;uacute;ltima referencia a ella. Su iterador est&amp;aacute; marcado para liberar la entrada en la pr&amp;oacute;xima llamada a &lt;code&gt;hv_iternext&lt;/code&gt; , por lo que no debe descartar su iterador inmediatamente; de ​​lo contrario, la entrada se filtrar&amp;aacute;; llame a &lt;code&gt;hv_iternext&lt;/code&gt; para activar la desasignaci&amp;oacute;n de recursos.</target>
        </trans-unit>
        <trans-unit id="224612e001a662c3d4076adbf22c1ddb33c4fc09" translate="yes" xml:space="preserve">
          <source>You may call &lt;code&gt;hv_delete&lt;/code&gt; or &lt;code&gt;hv_delete_ent&lt;/code&gt; on the hash entry that the iterator currently points to, without losing your place or invalidating your iterator. Note that in this case the current entry is deleted from the hash with your iterator holding the last reference to it. Your iterator is flagged to free the entry on the next call to &lt;code&gt;hv_iternext&lt;/code&gt;, so you must not discard your iterator immediately else the entry will leak - call &lt;code&gt;hv_iternext&lt;/code&gt; to trigger the resource deallocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be40ceb1a7306a76b520e9584d2eca0a12452f8" translate="yes" xml:space="preserve">
          <source>You may change the pager which is used via &lt;code&gt;o pager=...&lt;/code&gt; command.</source>
          <target state="translated">Puede cambiar el buscapersonas que se utiliza mediante el comando &lt;code&gt;o pager=...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d0d219cb50b9b95de99bdba2a6790e3027b1988" translate="yes" xml:space="preserve">
          <source>You may choose one of six different protocols to use for the ping. The &quot;tcp&quot; protocol is the default. Note that a live remote host may still fail to be pingable by one or more of these protocols. For example, www.microsoft.com is generally alive but not &quot;icmp&quot; pingable.</source>
          <target state="translated">Puede elegir uno de los seis protocolos diferentes para usar el ping.El protocolo &quot;tcp&quot; es el predeterminado.Tenga en cuenta que un servidor remoto en vivo puede no ser capaz de realizar un ping con uno o más de estos protocolos.Por ejemplo,www.microsoft.com está generalmente vivo pero no es &quot;icmp&quot; pingable.</target>
        </trans-unit>
        <trans-unit id="5b9386b09cdd1212e7410c2ab62737e2149c7f2b" translate="yes" xml:space="preserve">
          <source>You may create a shared library that refers to another library, which may be either an archive library or a shared library. If this second library is a shared library, this is called a &quot;dependent library&quot;. The dependent library's name is recorded in the main shared library, but it is not linked into the shared library. Instead, it is loaded when the main shared library is loaded. This can cause problems if you build an extension on one system and move it to another system where the libraries may not be located in the same place as on the first system.</source>
          <target state="translated">Puede crear una biblioteca compartida que haga referencia a otra biblioteca,que puede ser una biblioteca de archivo o una biblioteca compartida.Si esta segunda biblioteca es una biblioteca compartida,se denomina &quot;biblioteca dependiente&quot;.El nombre de la biblioteca dependiente se registra en la biblioteca compartida principal,pero no está vinculada a la biblioteca compartida.En su lugar,se carga cuando se carga la biblioteca compartida principal.Esto puede causar problemas si construye una extensión en un sistema y la mueve a otro sistema donde las bibliotecas pueden no estar ubicadas en el mismo lugar que en el primer sistema.</target>
        </trans-unit>
        <trans-unit id="9c69978ae72909c6a0d4c9ce7bda602f4029ade9" translate="yes" xml:space="preserve">
          <source>You may declare &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables at the outermost scope of a file to hide any such identifiers from the world outside that file. This is similar in spirit to C's static variables when they are used at the file level. To do this with a subroutine requires the use of a closure (an anonymous function that accesses enclosing lexicals). If you want to create a private subroutine that cannot be called from outside that block, it can declare a lexical variable containing an anonymous sub reference:</source>
          <target state="translated">Puede declarar &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables en el &amp;aacute;mbito m&amp;aacute;s externo de un archivo para ocultar dichos identificadores del mundo fuera de ese archivo. Esto es similar en esp&amp;iacute;ritu a las variables est&amp;aacute;ticas de C cuando se usan a nivel de archivo. Hacer esto con una subrutina requiere el uso de una clausura (una funci&amp;oacute;n an&amp;oacute;nima que accede a los l&amp;eacute;xicos adjuntos). Si desea crear una subrutina privada que no se pueda llamar desde fuera de ese bloque, puede declarar una variable l&amp;eacute;xica que contenga una subreferencia an&amp;oacute;nima:</target>
        </trans-unit>
        <trans-unit id="876f17265dbc24f5deeea94b0b905e8da6c53d61" translate="yes" xml:space="preserve">
          <source>You may declare &lt;code&gt;my&lt;/code&gt; variables at the outermost scope of a file to hide any such identifiers from the world outside that file. This is similar in spirit to C's static variables when they are used at the file level. To do this with a subroutine requires the use of a closure (an anonymous function that accesses enclosing lexicals). If you want to create a private subroutine that cannot be called from outside that block, it can declare a lexical variable containing an anonymous sub reference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c485e566982c516f185802a5bb8005684c87aaf" translate="yes" xml:space="preserve">
          <source>You may do &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads qw(yield)&lt;/code&gt; , and then just use &lt;code&gt;yield()&lt;/code&gt; in your code.</source>
          <target state="translated">Puede &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; threads qw(yield)&lt;/code&gt; y luego simplemente usar &lt;code&gt;yield()&lt;/code&gt; en su c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="f4966f6d04fe64b0eb4295da47dec6c27a2bd019" translate="yes" xml:space="preserve">
          <source>You may do &lt;code&gt;use threads qw(yield)&lt;/code&gt;, and then just use &lt;code&gt;yield()&lt;/code&gt; in your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dafa2436cf995ba75a2bba335e0ce68071a9ad" translate="yes" xml:space="preserve">
          <source>You may downgrade strings with &lt;code&gt;Encode::encode&lt;/code&gt; and &lt;code&gt;utf8::encode&lt;/code&gt;. See &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt; and &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad59ee540ee6c5334c4114152f24df062a49e4a1" translate="yes" xml:space="preserve">
          <source>You may encounter the following warning message at Perl startup:</source>
          <target state="translated">Es posible que encuentre el siguiente mensaje de advertencia en el inicio de Perl:</target>
        </trans-unit>
        <trans-unit id="294037a277c0cf3bb9e6ace3733986ce5d32b057" translate="yes" xml:space="preserve">
          <source>You may find it helpful to have a &quot;macro dictionary&quot;, which you can produce by saying &lt;code&gt;cpp -dM perl.c | &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; . Even then,</source>
          <target state="translated">Puede resultarle &amp;uacute;til tener un &quot;diccionario de macros&quot;, que puede producir diciendo &lt;code&gt;cpp -dM perl.c | &lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; . Incluso entonces,</target>
        </trans-unit>
        <trans-unit id="299fa4ce881470b697321e68c7758eae9bf1d1cf" translate="yes" xml:space="preserve">
          <source>You may find it helpful to have a &quot;macro dictionary&quot;, which you can produce by saying &lt;code&gt;cpp -dM perl.c | sort&lt;/code&gt;. Even then,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972b606b3734fb1680ed24e777ce569b72a6f320" translate="yes" xml:space="preserve">
          <source>You may find it helpful to use letter case to indicate the scope or nature of a variable. For example:</source>
          <target state="translated">Puede resultar útil utilizar el caso de las letras para indicar el alcance o la naturaleza de una variable.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c25f48a1ca763d34150d8bac8dc30aeefcd980b5" translate="yes" xml:space="preserve">
          <source>You may get a bus error core dump from the op/pwent or op/grent tests. If compiled with -g you will see a stack trace much like the following:</source>
          <target state="translated">Puede que se produzca un error de bus en el núcleo de las pruebas op/pwent o op/grent.Si se compila con -g verás un rastro de pila muy parecido a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="108b6e50ab8abc6a709ca1e727e6115ff077c1f8" translate="yes" xml:space="preserve">
          <source>You may get a warning when doing a threaded build:</source>
          <target state="translated">Puede que recibas una advertencia cuando hagas una construcción con hilos:</target>
        </trans-unit>
        <trans-unit id="22f1e826336ce72e185bd16ea03c1b6430323fa0" translate="yes" xml:space="preserve">
          <source>You may have an optional comma before the closing parenthesis of a list literal, so that you can say:</source>
          <target state="translated">Puede tener una coma opcional antes del paréntesis de cierre de una lista literal,para que pueda decir:</target>
        </trans-unit>
        <trans-unit id="94ced856f582ad7ad5a45cb74870b4f4ae27ed8b" translate="yes" xml:space="preserve">
          <source>You may have to add extra libraries as well. Which ones? Perhaps those printed by</source>
          <target state="translated">Puede que tengas que añadir bibliotecas adicionales también.¿Cuáles? Tal vez las impresas por</target>
        </trans-unit>
        <trans-unit id="adc5eceb43ab39f0721310d8a087b92c4cf96e19" translate="yes" xml:space="preserve">
          <source>You may have to re-read this entire section a few times...</source>
          <target state="translated">Puede que tengas que releer toda esta sección unas cuantas veces...</target>
        </trans-unit>
        <trans-unit id="9e568be51255384d52fb1c41217e7d274f15f0ca" translate="yes" xml:space="preserve">
          <source>You may ignore the error message for the first element of the archive (this doesn't look like a tar archive / skipping to next file...), it's only the directory which will be created automatically anyway.</source>
          <target state="translated">Puedes ignorar el mensaje de error para el primer elemento del archivo (esto no parece un archivo tar/salto al siguiente archivo...),es sólo el directorio que se creará automáticamente de todos modos.</target>
        </trans-unit>
        <trans-unit id="927c6b1abd9425ad341215fb99d87b72f734b089" translate="yes" xml:space="preserve">
          <source>You may intersperse documentation and Perl code within the .pm file. In fact, if you want to use method autoloading, you must do this, as the comment inside the .pm file explains.</source>
          <target state="translated">Puedes intercalar documentación y código Perl en el archivo .pm.De hecho,si quieres usar el método de auto-carga,debes hacerlo,como explica el comentario dentro del archivo .pm.</target>
        </trans-unit>
        <trans-unit id="b911c24edf96323dfee0b5a16ac2655f93ba03e8" translate="yes" xml:space="preserve">
          <source>You may lock arrays and hashes as well as scalars. Locking an array, though, will not block subsequent locks on array elements, just lock attempts on the array itself.</source>
          <target state="translated">Puedes bloquear matrices y hachas así como escalas.Pero bloquear una matriz no bloqueará los bloqueos posteriores de los elementos de la matriz,sólo los intentos de bloqueo de la propia matriz.</target>
        </trans-unit>
        <trans-unit id="00344360ec287bdb5274fbd2e88953a8065f329a" translate="yes" xml:space="preserve">
          <source>You may look into the file</source>
          <target state="translated">Puede mirar en el archivo</target>
        </trans-unit>
        <trans-unit id="9516dc740ae77942efcf6e8fd80e5504a8b1fd26" translate="yes" xml:space="preserve">
          <source>You may mail your bug reports (be sure to include full configuration information as output by the myconfig program in the perl source tree, or by &lt;code&gt;perl -V&lt;/code&gt; ) to perlbug@perl.org . If you've succeeded in compiling perl, the &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; script in the</source>
          <target state="translated">Puede enviar sus informes de errores (aseg&amp;uacute;rese de incluir la informaci&amp;oacute;n de configuraci&amp;oacute;n completa como resultado del programa myconfig en el &amp;aacute;rbol de fuentes de perl, o por &lt;code&gt;perl -V&lt;/code&gt; ) a perlbug@perl.org. Si ha logrado compilar perl, el script &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; en el</target>
        </trans-unit>
        <trans-unit id="9b598b6ebd49a9a2c8435acfea60cd639dc39cf9" translate="yes" xml:space="preserve">
          <source>You may need the following GNU programs in order to install perl:</source>
          <target state="translated">Puede que necesites los siguientes programas GNU para instalar Perl:</target>
        </trans-unit>
        <trans-unit id="65000230f7491853635f8932fbc750e90e8f3c2d" translate="yes" xml:space="preserve">
          <source>You may need to be</source>
          <target state="translated">Es posible que tenga que ser</target>
        </trans-unit>
        <trans-unit id="64a7e3cbbe6d605d5c662e6d4594cef6c6e25ffe" translate="yes" xml:space="preserve">
          <source>You may need to carry out some system configuration tasks before running the Configure script for Perl.</source>
          <target state="translated">Es posible que tenga que llevar a cabo algunas tareas de configuración del sistema antes de ejecutar el script de configuración para Perl.</target>
        </trans-unit>
        <trans-unit id="b5c6282830e01b5eeb55fdff2a78b2efbd4e43e4" translate="yes" xml:space="preserve">
          <source>You may need to examine the test results in a more flexible way, for example, the diagnostic output may be quite long or complex or it may involve something that you cannot predict in advance like a timestamp. In this case you can get direct access to the test results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10056deec90cd668c3f12e0f304b01dde73621d" translate="yes" xml:space="preserve">
          <source>You may need to make this change to scripts written for a Unix system which expect that after a call to &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt;, no files with the names passed to &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will exist. (Note: This can be changed at compile time; if you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; and &lt;code&gt;$Config{'d_unlink_all_versions'}&lt;/code&gt; is &lt;code&gt;define&lt;/code&gt; , then &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; will delete all versions of a file on the first call.)</source>
          <target state="translated">Es posible que deba realizar este cambio en los scripts escritos para un sistema Unix que espera que despu&amp;eacute;s de una llamada para &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; , no exista ning&amp;uacute;n archivo con los nombres pasados ​​para &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; . (Nota: esto se puede cambiar en el momento de la compilaci&amp;oacute;n; si &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Config&lt;/code&gt; y &lt;code&gt;$Config{'d_unlink_all_versions'}&lt;/code&gt; est&amp;aacute; &lt;code&gt;define&lt;/code&gt; , entonces &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; eliminar&amp;aacute; todas las versiones de un archivo en la primera llamada).</target>
        </trans-unit>
        <trans-unit id="1ff29c0121a8a089447657f7329f05cee5d1935c" translate="yes" xml:space="preserve">
          <source>You may need to make this change to scripts written for a Unix system which expect that after a call to &lt;code&gt;unlink&lt;/code&gt;, no files with the names passed to &lt;code&gt;unlink&lt;/code&gt; will exist. (Note: This can be changed at compile time; if you &lt;code&gt;use Config&lt;/code&gt; and &lt;code&gt;$Config{'d_unlink_all_versions'}&lt;/code&gt; is &lt;code&gt;define&lt;/code&gt;, then &lt;code&gt;unlink&lt;/code&gt; will delete all versions of a file on the first call.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec14405f03df7cdb78bb123848d4a14d07a8d45" translate="yes" xml:space="preserve">
          <source>You may not (usefully) use a reference as the key to a hash. It will be converted into a string:</source>
          <target state="translated">No se puede (útilmente)utilizar una referencia como la clave de un hash.Se convertirá en una cadena:</target>
        </trans-unit>
        <trans-unit id="d8a434e0ce88a99bf8a5488e4b0fad4981c52cd7" translate="yes" xml:space="preserve">
          <source>You may not even need to write the module. Check whether it's already been done in Perl, and avoid re-inventing the wheel unless you have a good reason.</source>
          <target state="translated">Puede que ni siquiera necesites escribir el módulo.Comprueba si ya está hecho en Perl,y evita reinventar la rueda a menos que tengas una buena razón.</target>
        </trans-unit>
        <trans-unit id="936986b9e470ced1f7fdf65dd9ad838a32d13386" translate="yes" xml:space="preserve">
          <source>You may not use data derived from outside your program to affect something else outside your program--at least, not by accident. All command line arguments, environment variables, locale information (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), results of certain system calls (&lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink()&lt;/a&gt;&lt;/code&gt;, the variable of &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread()&lt;/a&gt;&lt;/code&gt;, the messages returned by &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv()&lt;/a&gt;&lt;/code&gt;, the password, gcos and shell fields returned by the &lt;code&gt;getpwxxx()&lt;/code&gt; calls), and all file input are marked as &quot;tainted&quot;. Tainted data may not be used directly or indirectly in any command that invokes a sub-shell, nor in any command that modifies files, directories, or processes, &lt;b&gt;with the following exceptions&lt;/b&gt;:</source>
          <target state="translated">No puede utilizar datos derivados de fuera de su programa para afectar a otra cosa fuera de su programa, al menos, no por accidente. Todos los argumentos de la l&amp;iacute;nea de comandos, variables de entorno, informaci&amp;oacute;n de configuraci&amp;oacute;n regional (ver &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; ), resultados de ciertas llamadas al sistema ( &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readlink&quot;&gt;readlink()&lt;/a&gt;&lt;/code&gt; , la variable de &lt;code&gt;&lt;a href=&quot;functions/shmread&quot;&gt;shmread()&lt;/a&gt;&lt;/code&gt; , los mensajes devueltos por &lt;code&gt;&lt;a href=&quot;functions/msgrcv&quot;&gt;msgrcv()&lt;/a&gt;&lt;/code&gt; , la contrase&amp;ntilde;a, gcos y shell campos devueltos por las llamadas &lt;code&gt;getpwxxx()&lt;/code&gt; ), y toda la entrada del archivo se marca como &quot;contaminada&quot;. Los datos contaminados no pueden usarse directa o indirectamente en ning&amp;uacute;n comando que invoque un sub-shell, ni en ning&amp;uacute;n comando que modifique archivos, directorios o procesos, &lt;b&gt;con las siguientes excepciones&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="dd3902074b205dce05c67740cc2649d8a39ee898" translate="yes" xml:space="preserve">
          <source>You may not use data derived from outside your program to affect something else outside your program--at least, not by accident. All command line arguments, environment variables, locale information (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;), results of certain system calls (&lt;code&gt;readdir()&lt;/code&gt;, &lt;code&gt;readlink()&lt;/code&gt;, the variable of &lt;code&gt;shmread()&lt;/code&gt;, the messages returned by &lt;code&gt;msgrcv()&lt;/code&gt;, the password, gcos and shell fields returned by the &lt;code&gt;getpwxxx()&lt;/code&gt; calls), and all file input are marked as &quot;tainted&quot;. Tainted data may not be used directly or indirectly in any command that invokes a sub-shell, nor in any command that modifies files, directories, or processes, &lt;b&gt;with the following exceptions&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591a9362d10f62521cdde4ccfa89567d331e2d8b" translate="yes" xml:space="preserve">
          <source>You may notice that &lt;code&gt;PL_FILES&lt;/code&gt; is not specified above, since the default of mapping each .PL file to its basename works well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656cab64db0943d80c2c347bdd21c8a07c645dc2" translate="yes" xml:space="preserve">
          <source>You may once in a while try a &quot;make microperl&quot; to see whether we can still compile Perl with just the bare minimum of interfaces. (See README.micro.)</source>
          <target state="translated">De vez en cuando puedes probar un &quot;make microperl&quot; para ver si todavía podemos compilar Perl con el mínimo de interfaces.(Ver README.micro.)</target>
        </trans-unit>
        <trans-unit id="67acb9777380059ff280be22d8c3f8940dae8cc7" translate="yes" xml:space="preserve">
          <source>You may or may not choose to follow this usage. But never write &quot;PERL&quot;, because perl is not an acronym.</source>
          <target state="translated">Usted puede o no puede elegir seguir este uso.Pero nunca escriba &quot;PERL&quot;,porque perl no es un acrónimo.</target>
        </trans-unit>
        <trans-unit id="613fbbe8af8f9b1517992c7dc5a2a0283f5a8c13" translate="yes" xml:space="preserve">
          <source>You may override this as you like; Maketext doesn't use it for anything.</source>
          <target state="translated">Puedes anular esto como quieras;Maketext no lo usa para nada.</target>
        </trans-unit>
        <trans-unit id="402c7a6c9e9b95e1569244e1df01e166ced2b5b5" translate="yes" xml:space="preserve">
          <source>You may redistribute this under the same terms as Perl itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c300617b79443af38e0fcd704c86c317dd858ef3" translate="yes" xml:space="preserve">
          <source>You may report corrections, additions, and suggestions on the CPAN Request Tracker at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471b54cb9da3fd2429477493f77011df7439603d" translate="yes" xml:space="preserve">
          <source>You may run into memory limits, in which case you should use the -Xmx option:</source>
          <target state="translated">Puede que te encuentres con límites de memoria,en cuyo caso debes usar la opción -Xmx:</target>
        </trans-unit>
        <trans-unit id="2b87668ec2b109de55eff18c1a93548bfc928cdb" translate="yes" xml:space="preserve">
          <source>You may see a message about errors while extracting</source>
          <target state="translated">Puede que vea un mensaje sobre errores al extraer</target>
        </trans-unit>
        <trans-unit id="567b2cee3d4edcc53c5dd10d0ae801a480e80721" translate="yes" xml:space="preserve">
          <source>You may see some messages during Configure that seem suspicious.</source>
          <target state="translated">Es posible que vea algunos mensajes durante la configuración que parezcan sospechosos.</target>
        </trans-unit>
        <trans-unit id="6272ef61085d34f4e76b635ae7f550e4bd67beb6" translate="yes" xml:space="preserve">
          <source>You may see the term &quot;invariant&quot; character or code point. This simply means that the character has the same numeric value and representation when encoded in UTF-8 (or UTF-EBCDIC) as when not. (Note that this is a very different concept from &lt;a href=&quot;#The-13-variant-characters&quot;&gt;&quot;The 13 variant characters&quot;&lt;/a&gt; mentioned above. Careful prose will use the term &quot;UTF-8 invariant&quot; instead of just &quot;invariant&quot;, but most often you'll see just &quot;invariant&quot;.) For example, the ordinal value of &quot;A&quot; is 193 in most EBCDIC code pages, and also is 193 when encoded in UTF-EBCDIC. All UTF-8 (or UTF-EBCDIC) variant code points occupy at least two bytes when encoded in UTF-8 (or UTF-EBCDIC); by definition, the UTF-8 (or UTF-EBCDIC) invariant code points are exactly one byte whether encoded in UTF-8 (or UTF-EBCDIC), or not. (By now you see why people typically just say &quot;UTF-8&quot; when they also mean &quot;UTF-EBCDIC&quot;. For the rest of this document, we'll mostly be casual about it too.) In ASCII UTF-8, the code points corresponding to the lowest 128 ordinal numbers (0 - 127: the ASCII characters) are invariant. In UTF-EBCDIC, there are 160 invariant characters. (If you care, the EBCDIC invariants are those characters which have ASCII equivalents, plus those that correspond to the C1 controls (128 - 159 on ASCII platforms).)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d40b88fd93e71db6719630cc623bcd6de5e08cd" translate="yes" xml:space="preserve">
          <source>You may see the term &quot;invariant&quot; character or code point. This simply means that the character has the same numeric value and representation when encoded in UTF-8 (or UTF-EBCDIC) as when not. (Note that this is a very different concept from &lt;a href=&quot;#The-13-variant-characters&quot;&gt;The 13 variant characters&lt;/a&gt; mentioned above. Careful prose will use the term &quot;UTF-8 invariant&quot; instead of just &quot;invariant&quot;, but most often you'll see just &quot;invariant&quot;.) For example, the ordinal value of &quot;A&quot; is 193 in most EBCDIC code pages, and also is 193 when encoded in UTF-EBCDIC. All UTF-8 (or UTF-EBCDIC) variant code points occupy at least two bytes when encoded in UTF-8 (or UTF-EBCDIC); by definition, the UTF-8 (or UTF-EBCDIC) invariant code points are exactly one byte whether encoded in UTF-8 (or UTF-EBCDIC), or not. (By now you see why people typically just say &quot;UTF-8&quot; when they also mean &quot;UTF-EBCDIC&quot;. For the rest of this document, we'll mostly be casual about it too.) In ASCII UTF-8, the code points corresponding to the lowest 128 ordinal numbers (0 - 127: the ASCII characters) are invariant. In UTF-EBCDIC, there are 160 invariant characters. (If you care, the EBCDIC invariants are those characters which have ASCII equivalents, plus those that correspond to the C1 controls (128 - 159 on ASCII platforms).)</source>
          <target state="translated">Puede ver el t&amp;eacute;rmino car&amp;aacute;cter &quot;invariante&quot; o punto de c&amp;oacute;digo. Esto simplemente significa que el car&amp;aacute;cter tiene el mismo valor num&amp;eacute;rico y representaci&amp;oacute;n cuando est&amp;aacute; codificado en UTF-8 (o UTF-EBCDIC) que cuando no lo est&amp;aacute;. (Tenga en cuenta que este es un concepto muy diferente de &lt;a href=&quot;#The-13-variant-characters&quot;&gt;Los 13 personajes variantes&lt;/a&gt;mencionado anteriormente. La prosa cuidadosa utilizar&amp;aacute; el t&amp;eacute;rmino &quot;UTF-8 invariante&quot; en lugar de solo &quot;invariante&quot;, pero la mayor&amp;iacute;a de las veces ver&amp;aacute; solo &quot;invariante&quot;). Por ejemplo, el valor ordinal de &quot;A&quot; es 193 en la mayor&amp;iacute;a de las p&amp;aacute;ginas de c&amp;oacute;digos EBCDIC, y tambi&amp;eacute;n es 193 cuando se codifica en UTF-EBCDIC. Todos los puntos de c&amp;oacute;digo de variante UTF-8 (o UTF-EBCDIC) ocupan al menos dos bytes cuando se codifican en UTF-8 (o UTF-EBCDIC); por definici&amp;oacute;n, los puntos de c&amp;oacute;digo invariantes UTF-8 (o UTF-EBCDIC) son exactamente un byte, est&amp;eacute;n codificados en UTF-8 (o UTF-EBCDIC) o no. (A estas alturas, ver&amp;aacute; por qu&amp;eacute; la gente suele decir &quot;UTF-8&quot; cuando tambi&amp;eacute;n quiere decir &quot;UTF-EBCDIC&quot;. En el resto de este documento, tambi&amp;eacute;n seremos casuales al respecto). En ASCII UTF-8, los puntos de c&amp;oacute;digo correspondientes a los 128 n&amp;uacute;meros ordinales m&amp;aacute;s bajos (0 - 127: los caracteres ASCII) son invariantes.En UTF-EBCDIC, hay 160 caracteres invariables. (Si le importa, los invariantes EBCDIC son aquellos caracteres que tienen equivalentes ASCII, m&amp;aacute;s los que corresponden a los controles C1 (128-159 en plataformas ASCII)).</target>
        </trans-unit>
        <trans-unit id="79733aabc84104a70d6cbcc3a880d8aa4897ea07" translate="yes" xml:space="preserve">
          <source>You may sense that a lexicon (to use a non-committal catch-all term for a collection of things you know how to say, regardless of whether they're phrases or words) consisting of functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa093d809cde8bd253ba564171319f316c1ecb65" translate="yes" xml:space="preserve">
          <source>You may set the &lt;code&gt;dw_size&lt;/code&gt; option to limit the amount of data that can be saved in the deferred write buffer. This limit may not exceed the total memory limit. For example, if you set &lt;code&gt;dw_size&lt;/code&gt; to 1000 and &lt;code&gt;memory&lt;/code&gt; to 2500, that means that no more than 1000 bytes of deferred writes will be saved up. The space available for the read cache will vary, but it will always be at least 1500 bytes (if the deferred write buffer is full) and it could grow as large as 2500 bytes (if the deferred write buffer is empty.)</source>
          <target state="translated">Puede configurar la opci&amp;oacute;n &lt;code&gt;dw_size&lt;/code&gt; para limitar la cantidad de datos que se pueden guardar en el b&amp;uacute;fer de escritura diferida. Este l&amp;iacute;mite no puede exceder el l&amp;iacute;mite de memoria total. Por ejemplo, si establece &lt;code&gt;dw_size&lt;/code&gt; en 1000 y la &lt;code&gt;memory&lt;/code&gt; en 2500, eso significa que no se guardar&amp;aacute;n m&amp;aacute;s de 1000 bytes de escrituras diferidas. El espacio disponible para el cach&amp;eacute; de lectura variar&amp;aacute;, pero siempre ser&amp;aacute; de al menos 1500 bytes (si el b&amp;uacute;fer de escritura diferida est&amp;aacute; lleno) y podr&amp;iacute;a crecer hasta 2500 bytes (si el b&amp;uacute;fer de escritura diferida est&amp;aacute; vac&amp;iacute;o).</target>
        </trans-unit>
        <trans-unit id="e3ef89e73cb3013d59d9c9121bbae022ae6a75e6" translate="yes" xml:space="preserve">
          <source>You may submit your bug reports (be sure to include full configuration information as output by the myconfig program in the perl source tree, or by &lt;code&gt;perl -V&lt;/code&gt;) to &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe802847d2e9437afa3772a7f3ed12ac0cb75f5" translate="yes" xml:space="preserve">
          <source>You may use any combination of these three values 'SUCCESS','FAILURE','DELAY' in the anonymous array reference as defined by RFC3461 (see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3461.txt&quot;&gt;http://www.ietf.org/rfc/rfc3461.txt&lt;/a&gt; for more information. Note: quotations in this topic from same.).</source>
          <target state="translated">Puede utilizar cualquier combinaci&amp;oacute;n de estos tres valores 'SUCCESS', 'FAILURE', 'DELAY' en la referencia de matriz an&amp;oacute;nima seg&amp;uacute;n lo define RFC3461 (consulte &lt;a href=&quot;http://www.ietf.org/rfc/rfc3461.txt&quot;&gt;http://www.ietf.org/rfc/rfc3461.txt&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n. Nota: citas en este tema del mismo).</target>
        </trans-unit>
        <trans-unit id="36629e1d8b3fb0403dc71736a38b10adc1877865" translate="yes" xml:space="preserve">
          <source>You may use any combination of these three values 'SUCCESS','FAILURE','DELAY' in the anonymous array reference as defined by RFC3461 (see http://www.ietf.org/rfc/rfc3461.txt for more information. Note: quotations in this topic from same.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3726ab64bc777be024735266d80e288f34e7bd83" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;mv&lt;/code&gt; alias for this function in the same way that you may use the &lt;code&gt;cp&lt;/code&gt; alias for &lt;code&gt;copy&lt;/code&gt; .</source>
          <target state="translated">Puede usar el alias &lt;code&gt;mv&lt;/code&gt; para esta funci&amp;oacute;n de la misma manera que puede usar el alias &lt;code&gt;cp&lt;/code&gt; para &lt;code&gt;copy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb0e3799f2ec470ffb4ae33dcfe538e7d9e90c15" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;mv&lt;/code&gt; alias for this function in the same way that you may use the &lt;code&gt;cp&lt;/code&gt; alias for &lt;code&gt;copy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9368b724095114d596f9a9bbd047855f785492a1" translate="yes" xml:space="preserve">
          <source>You may use the syntax &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; File::Copy &quot;cp&quot;&lt;/code&gt; to get at the &lt;code&gt;cp&lt;/code&gt; alias for this function. The syntax is</source>
          <target state="translated">Es posible utilizar la sintaxis &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; File::Copy &quot;cp&quot;&lt;/code&gt; para llegar a la &lt;code&gt;cp&lt;/code&gt; alias para esta funci&amp;oacute;n. La sintaxis es</target>
        </trans-unit>
        <trans-unit id="2cddc64528e49f0c1ae7766ec48b73a37ff2e0c8" translate="yes" xml:space="preserve">
          <source>You may use the syntax &lt;code&gt;use File::Copy &quot;cp&quot;&lt;/code&gt; to get at the &lt;code&gt;cp&lt;/code&gt; alias for this function. The syntax is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354ed25e81c6f68b0172423d879862310feed1c5" translate="yes" xml:space="preserve">
          <source>You may very well want to see how your subpattern gets compiled, but it is likely of less use to you to see how Perl matches that against all the legal possibilities, as that is under control of Perl, not you. Therefore, the debugging information of the compilation portion is as specified by the other options, but the debugging output of the matching portion is normally suppressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef4fe61a399da32f9cc97283defa049459439a2" translate="yes" xml:space="preserve">
          <source>You may want to configure something like</source>
          <target state="translated">Puede que quieras configurar algo como</target>
        </trans-unit>
        <trans-unit id="a188842328fc3a53256335dbb97698cdb0d7e65f" translate="yes" xml:space="preserve">
          <source>You may want to create the destination directory and give it the right permissions before installing, thus eliminating the need to build Perl as a super user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274166c866cd17a4a70da3e9dd16359e3df50e0e" translate="yes" xml:space="preserve">
          <source>You may want to use the &lt;code&gt;&lt;a href=&quot;perlrecharclass#Digits&quot;&gt;/\d/&lt;/a&gt;&lt;/code&gt; construct instead.</source>
          <target state="translated">Es posible que desee utilizar la construcci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;perlrecharclass#Digits&quot;&gt;/\d/&lt;/a&gt;&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="3d3a0b34238678a39ac71745f1262bf0f4700e24" translate="yes" xml:space="preserve">
          <source>You may want to use the &lt;code&gt;&lt;a href=&quot;perlrecharclass#Whitespace&quot;&gt;/\s/&lt;/a&gt;&lt;/code&gt; construct instead.</source>
          <target state="translated">Es posible que desee utilizar la construcci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;perlrecharclass#Whitespace&quot;&gt;/\s/&lt;/a&gt;&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="30ce0fc76dee65d768e8b8edbb86d17b3ec69cef" translate="yes" xml:space="preserve">
          <source>You may want to use the &lt;code&gt;&lt;a href=&quot;perlrecharclass#Word-characters&quot;&gt;/\w/&lt;/a&gt;&lt;/code&gt; construct instead.</source>
          <target state="translated">Es posible que desee utilizar la construcci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;perlrecharclass#Word-characters&quot;&gt;/\w/&lt;/a&gt;&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="599db7e90374e2462ae43e1deb74b5ede6e00ac9" translate="yes" xml:space="preserve">
          <source>You may wish to put your version of perl in the PATH of all users by changing the link</source>
          <target state="translated">Tal vez desee poner su versión de perl en el SENDERO de todos los usuarios cambiando el enlace</target>
        </trans-unit>
        <trans-unit id="a667970ef9d2de2018d0cc9d89b6040168c92e68" translate="yes" xml:space="preserve">
          <source>You might also be interested in using the &lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt; to measure and compare code snippets.</source>
          <target state="translated">Es posible que tambi&amp;eacute;n le interese utilizar &lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt; para medir y comparar fragmentos de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="e19209d2418cb6070db23de3b3f291f912738061" translate="yes" xml:space="preserve">
          <source>You might also find it more fun to use the standard &lt;a href=&quot;Tie::File&quot;&gt;Tie::File&lt;/a&gt; module, or the &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; module's &lt;code&gt;$DB_RECNO&lt;/code&gt; bindings, which allow you to tie an array to a file so that accessing an element of the array actually accesses the corresponding line in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fb8d4423459616a83c78e11c0c6368281abff5" translate="yes" xml:space="preserve">
          <source>You might also find it more fun to use the standard &lt;a href=&quot;tie/file&quot;&gt;Tie::File&lt;/a&gt; module, or the &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; module's &lt;code&gt;$DB_RECNO&lt;/code&gt; bindings, which allow you to tie an array to a file so that accessing an element of the array actually accesses the corresponding line in the file.</source>
          <target state="translated">Tambi&amp;eacute;n puede que le resulte m&amp;aacute;s divertido usar el m&amp;oacute;dulo est&amp;aacute;ndar &lt;a href=&quot;tie/file&quot;&gt;Tie :: File&lt;/a&gt; , o los &lt;a href=&quot;db_file&quot;&gt;enlaces &lt;/a&gt; &lt;code&gt;$DB_RECNO&lt;/code&gt; del m&amp;oacute;dulo DB_File , que le permiten vincular una matriz a un archivo para que al acceder a un elemento de la matriz acceda realmente a la l&amp;iacute;nea correspondiente en el archivo. expediente.</target>
        </trans-unit>
        <trans-unit id="e08469744ffe89846f236eef2581143171c3fbcd" translate="yes" xml:space="preserve">
          <source>You might also have loaded that from a function:</source>
          <target state="translated">También podrías haber cargado eso desde una función:</target>
        </trans-unit>
        <trans-unit id="95a16ffa9a148d97aba69dab68818a05442a9c0f" translate="yes" xml:space="preserve">
          <source>You might also see the terms &lt;b&gt;getter&lt;/b&gt; and &lt;b&gt;setter&lt;/b&gt;. These are two types of accessors. A getter gets the attribute's value, while a setter sets it. Another term for a setter is &lt;b&gt;mutator&lt;/b&gt;</source>
          <target state="translated">Tambi&amp;eacute;n puede ver los t&amp;eacute;rminos &lt;b&gt;getter&lt;/b&gt; y &lt;b&gt;setter&lt;/b&gt; . Estos son dos tipos de descriptores de acceso. Un captador obtiene el valor del atributo, mientras que un definidor lo establece. Otro t&amp;eacute;rmino para un setter es &lt;b&gt;mutante&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a6f4008d05ac5a7684642f452fcea99bbe63649d" translate="yes" xml:space="preserve">
          <source>You might also think of closure as a way to write a subroutine template without using eval(). Here's a small example of how closures work:</source>
          <target state="translated">También podrías pensar en el cierre como una forma de escribir una plantilla de subrutinas sin usar eval().Aquí hay un pequeño ejemplo de cómo funcionan los cierres:</target>
        </trans-unit>
        <trans-unit id="adab95dd47c51cc1af72771a0152072872dcbaaf" translate="yes" xml:space="preserve">
          <source>You might also want to check out &lt;a href=&quot;perlfaq8#How-do-I-keep-my-own-module%2Flibrary-directory%3F&quot;&gt;&quot;How do I keep my own module/library directory?&quot; in perlfaq8&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07a183cbfa7c2c5ada23e1358bb836c0036ff82" translate="yes" xml:space="preserve">
          <source>You might also want to check out &lt;a href=&quot;perlfaq8#How-do-I-keep-my-own-module%2flibrary-directory%3f&quot;&gt;How do I keep my own module/library directory? in perlfaq8&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede consultar &lt;a href=&quot;perlfaq8#How-do-I-keep-my-own-module%2flibrary-directory%3f&quot;&gt;&amp;iquest;C&amp;oacute;mo mantengo mi propio directorio de m&amp;oacute;dulos / bibliotecas? en perlfaq8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9d50c5088a6a6db1dd16f71b5a0b7ad311259d2" translate="yes" xml:space="preserve">
          <source>You might also want to employ anonymous functions for simple signal handlers:</source>
          <target state="translated">También es posible que quieras emplear funciones anónimas para simples manejadores de señales:</target>
        </trans-unit>
        <trans-unit id="c4f0a4c3456aabab2b8397ba18c3d239195efdd9" translate="yes" xml:space="preserve">
          <source>You might also want to have GNU groff for OS/390 installed before running the &quot;make install&quot; step for Perl.</source>
          <target state="translated">También puede que quieras tener instalado GNU groff para OS/390 antes de ejecutar el paso &quot;make install&quot; para Perl.</target>
        </trans-unit>
        <trans-unit id="2fa0f7304d269ada4e265c5dcd91a35489923597" translate="yes" xml:space="preserve">
          <source>You might also want to trap any errors by wrapping an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; block around the whole thing.</source>
          <target state="translated">Tambi&amp;eacute;n es posible que desee atrapar cualquier error envolviendo un bloque de &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; uaci&amp;oacute;n alrededor de todo.</target>
        </trans-unit>
        <trans-unit id="f194f9c87c4be6e7a8b64a94f082480b14ad7510" translate="yes" xml:space="preserve">
          <source>You might also want to trap any errors by wrapping an &lt;code&gt;eval&lt;/code&gt; block around the whole thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae14caefeb104abfd32e1ac4b08ddaa6c43442c2" translate="yes" xml:space="preserve">
          <source>You might be tempted to think that deferred writing is like transactions, with &lt;code&gt;flush&lt;/code&gt; as &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;discard&lt;/code&gt; as &lt;code&gt;rollback&lt;/code&gt; , but it isn't, so don't.</source>
          <target state="translated">Es posible que tenga la tentaci&amp;oacute;n de pensar que la escritura diferida es como transacciones, con &lt;code&gt;flush&lt;/code&gt; como &lt;code&gt;commit&lt;/code&gt; y &lt;code&gt;discard&lt;/code&gt; como &lt;code&gt;rollback&lt;/code&gt; , pero no lo es, as&amp;iacute; que no lo haga.</target>
        </trans-unit>
        <trans-unit id="1c6b7aa981d94fea5d2afafa18044a92955cf0dc" translate="yes" xml:space="preserve">
          <source>You might be tempted to think that deferred writing is like transactions, with &lt;code&gt;flush&lt;/code&gt; as &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;discard&lt;/code&gt; as &lt;code&gt;rollback&lt;/code&gt;, but it isn't, so don't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadb7f27713b1af6126dec14d8fa3f25be31b545" translate="yes" xml:space="preserve">
          <source>You might be tempted to use &lt;code&gt;$#array + 1&lt;/code&gt; to tell you how many items there are in an array. Don't bother. As it happens, using &lt;code&gt;@array&lt;/code&gt; where Perl expects to find a scalar value (&quot;in scalar context&quot;) will give you the number of elements in the array:</source>
          <target state="translated">Es posible que tenga la tentaci&amp;oacute;n de usar &lt;code&gt;$#array + 1&lt;/code&gt; para decirle cu&amp;aacute;ntos elementos hay en una matriz. No se moleste. &lt;code&gt;@array&lt;/code&gt; casualidad que usar @array donde Perl espera encontrar un valor escalar (&quot;en contexto escalar&quot;) le dar&amp;aacute; el n&amp;uacute;mero de elementos en la matriz:</target>
        </trans-unit>
        <trans-unit id="cdd5e43c44200a95eaa3aa45d374b3ef4d1b96c7" translate="yes" xml:space="preserve">
          <source>You might consider using just Math::BigInt or Math::BigFloat, since they allow you finer control over what get's done in which module/space. For instance, simple loop counters will be Math::BigInts under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bignum;&lt;/code&gt; and this is slower than keeping them as Perl scalars:</source>
          <target state="translated">Puede considerar usar solo Math :: BigInt o Math :: BigFloat, ya que le permiten un control m&amp;aacute;s preciso sobre lo que se hace en qu&amp;eacute; m&amp;oacute;dulo / espacio. Por ejemplo, los contadores de bucles simples ser&amp;aacute;n Math :: BigInts under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bignum;&lt;/code&gt; y esto es m&amp;aacute;s lento que mantenerlos como escalares de Perl:</target>
        </trans-unit>
        <trans-unit id="30c848bd997fa1fb77285aa03d0d04fc4d8a21e7" translate="yes" xml:space="preserve">
          <source>You might consider using just Math::BigInt or Math::BigFloat, since they allow you finer control over what get's done in which module/space. For instance, simple loop counters will be Math::BigInts under &lt;code&gt;use bignum;&lt;/code&gt; and this is slower than keeping them as Perl scalars:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602086881bebd3c9c81540dfd1686b9dc1e9a7c1" translate="yes" xml:space="preserve">
          <source>You might expect this to output &quot;12&quot;. In fact, it prints &quot;&amp;lt;&quot;: the ASCII result of treating &quot;|&quot; as a bitwise string operator - that is, the result of treating the operands as the strings &quot;4&quot; and &quot;8&quot; rather than numbers. The fact that numify (&lt;code&gt;0+&lt;/code&gt; ) is implemented but stringify (&lt;code&gt;&quot;&quot;&lt;/code&gt; ) isn't makes no difference since the latter is simply autogenerated from the former.</source>
          <target state="translated">Es de esperar que esto genere &quot;12&quot;. De hecho, imprime &quot;&amp;lt;&quot;: el resultado ASCII de tratar &quot;|&quot; como un operador de cadena de bits, es decir, el resultado de tratar los operandos como cadenas &quot;4&quot; y &quot;8&quot; en lugar de n&amp;uacute;meros. El hecho de que numify ( &lt;code&gt;0+&lt;/code&gt; ) est&amp;eacute; implementado pero stringify ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ) no hace ninguna diferencia, ya que este &amp;uacute;ltimo simplemente se genera autom&amp;aacute;ticamente a partir del primero.</target>
        </trans-unit>
        <trans-unit id="aba6c51d79ac08de8cd8c4628728aebfc81fc52e" translate="yes" xml:space="preserve">
          <source>You might expect this to output &quot;12&quot;. In fact, it prints &quot;&amp;lt;&quot;: the ASCII result of treating &quot;|&quot; as a bitwise string operator - that is, the result of treating the operands as the strings &quot;4&quot; and &quot;8&quot; rather than numbers. The fact that numify (&lt;code&gt;0+&lt;/code&gt;) is implemented but stringify (&lt;code&gt;&quot;&quot;&lt;/code&gt;) isn't makes no difference since the latter is simply autogenerated from the former.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2b6e72cccd9ea401a92e1c584d3ce729f0ed23" translate="yes" xml:space="preserve">
          <source>You might find these links useful:</source>
          <target state="translated">Puede que estos enlaces le resulten útiles:</target>
        </trans-unit>
        <trans-unit id="7041884103fb3be2206f9857bdd3e655cde0bf34" translate="yes" xml:space="preserve">
          <source>You might have expected test 3 to fail because it seems to a more general purpose version of test 1. The important difference between them is that test 3 contains a quantifier (&lt;code&gt;\D*&lt;/code&gt; ) and so can use backtracking, whereas test 1 will not. What's happening is that you've asked &quot;Is it true that at the start of $x, following 0 or more non-digits, you have something that's not 123?&quot; If the pattern matcher had let &lt;code&gt;\D*&lt;/code&gt; expand to &quot;ABC&quot;, this would have caused the whole pattern to fail.</source>
          <target state="translated">Es posible que esperara que la prueba 3 fallara porque parece una versi&amp;oacute;n de prop&amp;oacute;sito m&amp;aacute;s general de la prueba 1. La diferencia importante entre ellas es que la prueba 3 contiene un cuantificador ( &lt;code&gt;\D*&lt;/code&gt; ) y, por lo tanto, puede usar retroceso, mientras que la prueba 1 no lo har&amp;aacute;. Lo que est&amp;aacute; sucediendo es que ha preguntado &quot;&amp;iquest;Es cierto que al comienzo de $ x, despu&amp;eacute;s de 0 o m&amp;aacute;s no d&amp;iacute;gitos, tiene algo que no es 123?&quot; Si el comparador de patrones hubiera dejado que &lt;code&gt;\D*&lt;/code&gt; expandiera a &quot;ABC&quot;, esto habr&amp;iacute;a causado que todo el patr&amp;oacute;n fallara.</target>
        </trans-unit>
        <trans-unit id="8d27aa5c6286c0d9603c5055be14cd21bce623ba" translate="yes" xml:space="preserve">
          <source>You might have expected test 3 to fail because it seems to a more general purpose version of test 1. The important difference between them is that test 3 contains a quantifier (&lt;code&gt;\D*&lt;/code&gt;) and so can use backtracking, whereas test 1 will not. What's happening is that you've asked &quot;Is it true that at the start of &lt;code&gt;$x&lt;/code&gt;, following 0 or more non-digits, you have something that's not 123?&quot; If the pattern matcher had let &lt;code&gt;\D*&lt;/code&gt; expand to &quot;ABC&quot;, this would have caused the whole pattern to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bd0f9bdd3b3f8f6c3d7920cb7c553cce6d6284" translate="yes" xml:space="preserve">
          <source>You might like to read Mark Jason Dominus's &quot;Suffering From Buffering&quot; at &lt;a href=&quot;http://perl.plover.com/FAQs/Buffering.html&quot;&gt;http://perl.plover.com/FAQs/Buffering.html&lt;/a&gt; .</source>
          <target state="translated">Puede que le guste leer &quot;Suffering From Buffering&quot; de Mark Jason Dominus en &lt;a href=&quot;http://perl.plover.com/FAQs/Buffering.html&quot;&gt;http://perl.plover.com/FAQs/Buffering.html&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46f43a5be926bef744cfabc91aaec25e6a108f46" translate="yes" xml:space="preserve">
          <source>You might like to use &lt;a href=&quot;#do-EXPR&quot;&gt;&lt;code&gt;do&lt;/code&gt;&lt;/a&gt; to read in a program configuration file. Manual error checking can be done this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e0af742e5a24576127c7192de3da3f64667af3" translate="yes" xml:space="preserve">
          <source>You might like to use &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; to read in a program configuration file. Manual error checking can be done this way:</source>
          <target state="translated">Es posible que desee utilizar &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; para leer en un archivo de configuraci&amp;oacute;n de programa. La verificaci&amp;oacute;n manual de errores se puede realizar de esta manera:</target>
        </trans-unit>
        <trans-unit id="ea3e43e35b42104c2dfdbbb81763643be691010c" translate="yes" xml:space="preserve">
          <source>You might like to use &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; to read in a program configuration file. Manual error checking can be done this way:</source>
          <target state="translated">Es posible que desee utilizar &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; para leer en un archivo de configuraci&amp;oacute;n de programa. La verificaci&amp;oacute;n manual de errores se puede realizar de esta manera:</target>
        </trans-unit>
        <trans-unit id="2bd0dacd69a7ed36257e893211378330acac2cba" translate="yes" xml:space="preserve">
          <source>You might love it. You might feel that everyone else needs it. But there might not actually be any real demand for it out there. If you're unsure about the demand your module will have, consider asking the &lt;code&gt;module-authors@perl.org&lt;/code&gt; mailing list (send an email to &lt;code&gt;module-authors-subscribe@perl.org&lt;/code&gt; to subscribe; see &lt;a href=&quot;https://lists.perl.org/list/module-authors.html&quot;&gt;https://lists.perl.org/list/module-authors.html&lt;/a&gt; for more information and a link to the archives).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052100b20ac103ab19054e70ed9a9d17e374ebf5" translate="yes" xml:space="preserve">
          <source>You might love it. You might feel that everyone else needs it. But there might not actually be any real demand for it out there. If you're unsure about the demand your module will have, consider sending out feelers on the &lt;code&gt;comp.lang.perl.modules&lt;/code&gt; newsgroup, or as a last resort, ask the modules list at &lt;code&gt;modules@perl.org&lt;/code&gt; . Remember that this is a closed list with a very long turn-around time - be prepared to wait a good while for a response from them.</source>
          <target state="translated">Puede que te guste. Puede sentir que todos los dem&amp;aacute;s lo necesitan. Pero es posible que en realidad no haya una demanda real por ah&amp;iacute;. Si no est&amp;aacute; seguro de la demanda que tendr&amp;aacute; su m&amp;oacute;dulo, considere enviar sensores en el grupo de noticias &lt;code&gt;comp.lang.perl.modules&lt;/code&gt; , o como &amp;uacute;ltimo recurso, pregunte a la lista de m&amp;oacute;dulos en &lt;code&gt;modules@perl.org&lt;/code&gt; . Recuerde que esta es una lista cerrada con un tiempo de respuesta muy largo; prep&amp;aacute;rese para esperar un buen rato para recibir una respuesta.</target>
        </trans-unit>
        <trans-unit id="635f4d083c94bfb096f7bc0bc442f402e843c1a1" translate="yes" xml:space="preserve">
          <source>You might mistakenly think that &lt;code&gt;len&lt;/code&gt; is the number of bytes to add to the existing size, but instead it is the total size &lt;code&gt;sv&lt;/code&gt; should be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169bde04d58834aed9e29a6302664c4d13ccbcd6" translate="yes" xml:space="preserve">
          <source>You might not need all the power of XS. The Inline::C module lets you put C code directly in your Perl source. It handles all the magic to make it work. You still have to learn at least some of the perl API but you won't have to deal with the complexity of the XS support files.</source>
          <target state="translated">Puede que no necesites todo el poder del XS.El módulo Inline::C te permite poner el código C directamente en tu fuente de Perl.Maneja toda la magia para que funcione.Aún tienes que aprender al menos algo del API de Perl pero no tendrás que lidiar con la complejidad de los archivos de soporte de XS.</target>
        </trans-unit>
        <trans-unit id="3b031c43f33840adc70b02de47a8fd1daefabaa6" translate="yes" xml:space="preserve">
          <source>You might notice several familiar Perl concepts in this collection of ACM columns from Jon Bentley. The similarity to the title of the major Perl book (which came later) is not completely accidental:</source>
          <target state="translated">Podrías notar varios conceptos familiares de Perl en esta colección de columnas ACM de Jon Bentley.La similitud con el título del libro principal de Perl (que vino después)no es completamente accidental:</target>
        </trans-unit>
        <trans-unit id="66fdf1bb9d02362c3ab6fa3feaa38bdbfcec77f8" translate="yes" xml:space="preserve">
          <source>You might notice that you could use backticks for much the same effect as opening a pipe for reading:</source>
          <target state="translated">Podrías notar que podrías usar los palos traseros para el mismo efecto que abrir una pipa para leer:</target>
        </trans-unit>
        <trans-unit id="42704287df9412e9063781246ba069342cd72b32" translate="yes" xml:space="preserve">
          <source>You might notice this when each of the elements of &lt;code&gt;@array&lt;/code&gt; end with a newline. You expect to print one element per line, but notice that every line after the first is indented:</source>
          <target state="translated">Puede notar esto cuando cada uno de los elementos de &lt;code&gt;@array&lt;/code&gt; termina con una nueva l&amp;iacute;nea. Espera imprimir un elemento por l&amp;iacute;nea, pero observe que cada l&amp;iacute;nea despu&amp;eacute;s de la primera tiene sangr&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="e3ccde21cef99ed04d4c1fb15da658aad8223bd5" translate="yes" xml:space="preserve">
          <source>You might prefer to go on to &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; instead of &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;; it discusses lists of lists and multidimensional arrays in detail. After that, you should move on to &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt;; it's a Data Structure Cookbook that shows recipes for using and printing out arrays of hashes, hashes of arrays, and other kinds of data.</source>
          <target state="translated">Es posible que prefiera &lt;a href=&quot;perllol&quot;&gt;utilizar perllol en&lt;/a&gt; lugar de &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; ; analiza en detalle listas de listas y matrices multidimensionales. Despu&amp;eacute;s de eso, deber&amp;iacute;a pasar a &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; ; es un libro de recetas de estructura de datos que muestra recetas para usar e imprimir matrices de hashes, hashes de matrices y otros tipos de datos.</target>
        </trans-unit>
        <trans-unit id="a6310ecb45c68b753610be852acb876a80aa3c10" translate="yes" xml:space="preserve">
          <source>You might relate this to a fictional 'Translate' module:</source>
          <target state="translated">Podrías relacionar esto con un módulo ficticio de &quot;Traducir&quot;:</target>
        </trans-unit>
        <trans-unit id="13ab2e65d93fb0059f6f55ed6a75f22913178d96" translate="yes" xml:space="preserve">
          <source>You might remember &lt;code&gt;ok() or diag()&lt;/code&gt; with the mnemonic &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;() or
&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;()&lt;/code&gt; .</source>
          <target state="translated">Quiz&amp;aacute;s recuerde &lt;code&gt;ok() or diag()&lt;/code&gt; con el mnem&amp;oacute;nico &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;() or &lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88eec674517534aa08403d748f3a5041ffce6d87" translate="yes" xml:space="preserve">
          <source>You might remember &lt;code&gt;ok() or diag()&lt;/code&gt; with the mnemonic &lt;code&gt;open() or die()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c266ee238a4776706bced7eb857615f2dea1e3c" translate="yes" xml:space="preserve">
          <source>You might sometimes find that the original author has edited the branch's history. There are lots of good reasons for this. Sometimes, an author might simply be rebasing the branch onto a newer source point. Sometimes, an author might have found an error in an early commit which they wanted to fix before merging the branch to blead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d4864369383102be2440cd5c5cb4b7987e528b" translate="yes" xml:space="preserve">
          <source>You might sometimes see reference to Rule 1 and Rule 2. Larry's power as Supreme Court is expressed in The Rules:</source>
          <target state="translated">A veces se puede ver la referencia a la Regla 1 y la Regla 2.El poder de Larry como Corte Suprema se expresa en las Reglas:</target>
        </trans-unit>
        <trans-unit id="8dd311a23537c2ad8611321313121285ae51f8bb" translate="yes" xml:space="preserve">
          <source>You might try &lt;a href=&quot;Encode::Guess&quot;&gt;Encode::Guess&lt;/a&gt;, but it has a number of limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b7d1197bc89948add2ed3f352d319d84d2e28b" translate="yes" xml:space="preserve">
          <source>You might try &lt;a href=&quot;encode/guess&quot;&gt;Encode::Guess&lt;/a&gt;, but it has a number of limitations.</source>
          <target state="translated">Puede probar &lt;a href=&quot;encode/guess&quot;&gt;Encode :: Guess&lt;/a&gt; , pero tiene una serie de limitaciones.</target>
        </trans-unit>
        <trans-unit id="193b85d5b4fe0e90a0d9c66d7d0b78036e923063" translate="yes" xml:space="preserve">
          <source>You might want to do the same thing for expressing key bindings or the like (since hardwiring &quot;q&quot; as the binding for the function that quits a screen/menu/program is useful only if your language happens to associate &quot;q&quot; with &quot;quit&quot;!)</source>
          <target state="translated">Puede que quieras hacer lo mismo para expresar los enlaces de teclas o similares (ya que el cableado &quot;q&quot; como enlace de la función que abandona una pantalla/menú/programa sólo es útil si tu idioma asocia &quot;q&quot; con &quot;quit&quot;).</target>
        </trans-unit>
        <trans-unit id="b5d495d915ce638287be04e211dc9e03d5ac46bf" translate="yes" xml:space="preserve">
          <source>You might want to keep these desktop references close by your keyboard:</source>
          <target state="translated">Tal vez quieras mantener estas referencias de escritorio cerca de tu teclado:</target>
        </trans-unit>
        <trans-unit id="d8a5e7dd7b9870679e3daf8f99524f8e40f1a078" translate="yes" xml:space="preserve">
          <source>You might want to use &lt;a href=&quot;#accuracy%28%29&quot;&gt;&quot;accuracy()&quot;&lt;/a&gt; instead. With &lt;a href=&quot;#accuracy%28%29&quot;&gt;&quot;accuracy()&quot;&lt;/a&gt; you set the number of digits each result should have, with &lt;a href=&quot;#precision%28%29&quot;&gt;&quot;precision()&quot;&lt;/a&gt; you set the place where to round.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1eb54f95a4e04b463b84dfe6de9e8067695824" translate="yes" xml:space="preserve">
          <source>You might wonder why &lt;code&gt;'.'&lt;/code&gt; matches everything but &lt;code&gt;&quot;\n&quot;&lt;/code&gt; - why not every character? The reason is that often one is matching against lines and would like to ignore the newline characters. For instance, while the string &lt;code&gt;&quot;\n&quot;&lt;/code&gt; represents one line, we would like to think of it as empty. Then</source>
          <target state="translated">Quiz&amp;aacute;s se pregunte por qu&amp;eacute; &lt;code&gt;'.'&lt;/code&gt; coincide con todo menos &lt;code&gt;&quot;\n&quot;&lt;/code&gt; - &amp;iquest;por qu&amp;eacute; no todos los caracteres? La raz&amp;oacute;n es que a menudo uno est&amp;aacute; haciendo coincidir las l&amp;iacute;neas y le gustar&amp;iacute;a ignorar los caracteres de nueva l&amp;iacute;nea. Por ejemplo, mientras que la cadena &lt;code&gt;&quot;\n&quot;&lt;/code&gt; representa una l&amp;iacute;nea, nos gustar&amp;iacute;a pensar en ella como vac&amp;iacute;a. Luego</target>
        </trans-unit>
        <trans-unit id="e851d081cca3db1538b95133dfa4e2591e66b038" translate="yes" xml:space="preserve">
          <source>You must Configure perl with</source>
          <target state="translated">Debes configurar perl con</target>
        </trans-unit>
        <trans-unit id="2b0e2052701354699753b2ee60dea4ed06963928" translate="yes" xml:space="preserve">
          <source>You must be triply conscious of cross-platform concerns. This usually boils down to using &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;, avoiding things like &lt;code&gt;fork()&lt;/code&gt; and &lt;code&gt;system()&lt;/code&gt; unless absolutely necessary, and not assuming that a given character has a particular ordinal value (code point) or that its UTF-8 representation is composed of particular bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18657846c86f19718177ea80036f400e403ff68" translate="yes" xml:space="preserve">
          <source>You must be triply conscious of cross-platform concerns. This usually boils down to using &lt;a href=&quot;file/spec&quot;&gt;File::Spec&lt;/a&gt;, avoiding things like &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; unless absolutely necessary, and not assuming that a given character has a particular ordinal value (code point) or that its UTF-8 representation is composed of particular bytes.</source>
          <target state="translated">Debe ser triplemente consciente de las preocupaciones entre plataformas. Esto generalmente se reduce a usar &lt;a href=&quot;file/spec&quot;&gt;File :: Spec&lt;/a&gt; , evitando cosas como &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; menos que sea absolutamente necesario, y sin asumir que un car&amp;aacute;cter dado tiene un valor ordinal particular (punto de c&amp;oacute;digo) o que su representaci&amp;oacute;n UTF-8 est&amp;aacute; compuesta de bytes particulares.</target>
        </trans-unit>
        <trans-unit id="8daf2a31e4062052794994fb1a77c6bf915b4376" translate="yes" xml:space="preserve">
          <source>You must call &lt;code&gt;plan(...)&lt;/code&gt; once and only once. You should call it in a &lt;code&gt;BEGIN {...}&lt;/code&gt; block, like so:</source>
          <target state="translated">Debe llamar al &lt;code&gt;plan(...)&lt;/code&gt; una vez y solo una vez. Deber&amp;iacute;as llamarlo en un bloque &lt;code&gt;BEGIN {...}&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="ec48be76fb2e44c8427a737bacd675c106899a43" translate="yes" xml:space="preserve">
          <source>You must convert your non-ASCII, non-UTF-8 Perl scripts to be UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9b102a51e636379025c1716da72ec7158d144f" translate="yes" xml:space="preserve">
          <source>You must have a plan.</source>
          <target state="translated">Debes tener un plan.</target>
        </trans-unit>
        <trans-unit id="f323bd128da70502b49397ad0f7c4f483197be9e" translate="yes" xml:space="preserve">
          <source>You must have a project base class, which you load, and which you then use as the first argument in the call to YourProjClass-&amp;gt;get_handle(...). It should derive (whether directly or indirectly) from Locale::Maketext. It &lt;b&gt;doesn't matter&lt;/b&gt; how you name this class, although assuming this is the localization component of your Super Mega Program, good names for your project class might be SuperMegaProgram::Localization, SuperMegaProgram::L10N, SuperMegaProgram::I18N, SuperMegaProgram::International, or even SuperMegaProgram::Languages or SuperMegaProgram::Messages.</source>
          <target state="translated">Debe tener una clase base de proyecto, que carga y que luego usa como primer argumento en la llamada a YourProjClass-&amp;gt; get_handle (...). Debe derivar (ya sea directa o indirectamente) de Locale :: Maketext. No &lt;b&gt;importa&lt;/b&gt; c&amp;oacute;mo nombre esta clase, aunque asumiendo que este es el componente de localizaci&amp;oacute;n de su Super Mega Program, los buenos nombres para su clase de proyecto podr&amp;iacute;an ser SuperMegaProgram :: Localization, SuperMegaProgram :: L10N, SuperMegaProgram :: I18N, SuperMegaProgram :: Internacional, o incluso SuperMegaProgram :: Idiomas o SuperMegaProgram :: Mensajes.</target>
        </trans-unit>
        <trans-unit id="739cc975a787be41633b91aa5de71e36b127ddec" translate="yes" xml:space="preserve">
          <source>You must install the &lt;code&gt;Expect&lt;/code&gt; module to use &lt;code&gt;eexpect&lt;/code&gt; . CPAN.pm does not install it for you.</source>
          <target state="translated">Debe instalar el m&amp;oacute;dulo &lt;code&gt;Expect&lt;/code&gt; para usar &lt;code&gt;eexpect&lt;/code&gt; . CPAN.pm no lo instala por usted.</target>
        </trans-unit>
        <trans-unit id="72fde4fbc93c4a749f9096aea6d3bd9a70e80b1d" translate="yes" xml:space="preserve">
          <source>You must install the &lt;code&gt;Expect&lt;/code&gt; module to use &lt;code&gt;expect&lt;/code&gt; . CPAN.pm does not install it for you.</source>
          <target state="translated">Debes instalar el m&amp;oacute;dulo &lt;code&gt;Expect&lt;/code&gt; para usar &lt;code&gt;expect&lt;/code&gt; . CPAN.pm no lo instala por usted.</target>
        </trans-unit>
        <trans-unit id="4490a879ca5d596cdf1f67e2681afb5d54f17c52" translate="yes" xml:space="preserve">
          <source>You must make sure that any paths and path components are properly surrounded with double-quotes if they contain spaces. For example, &lt;code&gt;$potential_libs&lt;/code&gt; could be (literally):</source>
          <target state="translated">Debe asegurarse de que las rutas y los componentes de la ruta est&amp;eacute;n correctamente entre comillas dobles si contienen espacios. Por ejemplo, &lt;code&gt;$potential_libs&lt;/code&gt; podr&amp;iacute;a ser (literalmente):</target>
        </trans-unit>
        <trans-unit id="30c4fd5a99a25cad991844e3c5c4f7509fd399a0" translate="yes" xml:space="preserve">
          <source>You must open your files before you print to them.</source>
          <target state="translated">Debes abrir tus archivos antes de imprimirlos.</target>
        </trans-unit>
        <trans-unit id="45897939488bd63d927112e2ca64e2fec16238a0" translate="yes" xml:space="preserve">
          <source>You must override the abstract methods as noted above.</source>
          <target state="translated">Debe anular los métodos abstractos como se ha indicado anteriormente.</target>
        </trans-unit>
        <trans-unit id="2aa81922480ed45c435c4cf0c99c4c4aba3634fc" translate="yes" xml:space="preserve">
          <source>You must use &lt;code&gt;elsif&lt;/code&gt; rather than &lt;code&gt;else if&lt;/code&gt; .</source>
          <target state="translated">Debe utilizar &lt;code&gt;elsif&lt;/code&gt; en lugar de &lt;code&gt;else if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5226624761673c1e1cddc0c742247733ee03083" translate="yes" xml:space="preserve">
          <source>You must use &lt;code&gt;elsif&lt;/code&gt; rather than &lt;code&gt;else if&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c7a78d87a43f543e7180d2370d441ee16c546b" translate="yes" xml:space="preserve">
          <source>You must use an ANSI C compiler to build perl. Perl can be compiled with either Sun's add-on C compiler or with gcc. The C compiler that shipped with SunOS4 will not do.</source>
          <target state="translated">Debes usar un compilador ANSI C para construir perl.Perl puede ser compilado con el compilador C de Sun o con gcc.El compilador de C que se envió con SunOS4 no servirá.</target>
        </trans-unit>
        <trans-unit id="ac16e240bd822406d6dbb8a20f6f3e5d780cc6b4" translate="yes" xml:space="preserve">
          <source>You must use the cmd.exe, the Cygwin shell will not work. The PATH must include the SDK tools, including a Perl, which should be the case under cmd.exe. If you do not have that, see the end of symbian\sdk.pl for notes of how your environment should be set up for Symbian compiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c168b8ed4e8b351eba14fd33d598861cf2969e22" translate="yes" xml:space="preserve">
          <source>You must yourself do any alignment or padding by inserting, for example, enough &lt;code&gt;&quot;x&quot;&lt;/code&gt; es while packing. There is no way for pack() and unpack() to know where characters are going to or coming from, so they handle their output and input as flat sequences of characters.</source>
          <target state="translated">Usted mismo debe hacer cualquier alineaci&amp;oacute;n o relleno insertando, por ejemplo, suficientes &lt;code&gt;&quot;x&quot;&lt;/code&gt; mientras empaca. No hay forma de que pack () y unpack () sepan de d&amp;oacute;nde van o vienen los personajes, por lo que manejan su salida y entrada como secuencias planas de caracteres.</target>
        </trans-unit>
        <trans-unit id="da2b6f4499c28ef8f95dd1270da02ad4217bd0a5" translate="yes" xml:space="preserve">
          <source>You must yourself do any alignment or padding by inserting, for example, enough &lt;code&gt;&quot;x&quot;&lt;/code&gt;es while packing. There is no way for &lt;a href=&quot;#pack-TEMPLATE%2CLIST&quot;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unpack-TEMPLATE%2CEXPR&quot;&gt;&lt;code&gt;unpack&lt;/code&gt;&lt;/a&gt; to know where characters are going to or coming from, so they handle their output and input as flat sequences of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495ba80801ecf71f6944f8f06ac3f6b0ec33f568" translate="yes" xml:space="preserve">
          <source>You need a &quot;make&quot; program to build the sources. If you are using Visual C++ or the Windows SDK tools, nmake will work. Builds using the gcc need dmake.</source>
          <target state="translated">Necesitas un programa &quot;make&quot; para construir las fuentes.Si usas Visual C++o las herramientas del SDK de Windows,nmake funcionará.Las construcciones que usan el gcc necesitan dmake.</target>
        </trans-unit>
        <trans-unit id="6e03410c2453434206af384ed70ad4bb1fdfc03a" translate="yes" xml:space="preserve">
          <source>You need a &quot;make&quot; program to build the sources. If you are using Visual C++ or the Windows SDK tools, you can use nmake supplied with Visual C++ or Windows SDK. You may also use, for Visual C++ or Windows SDK, dmake or gmake instead of nmake. dmake is open source software, but is not included with Visual C++ or Windows SDK. Builds using gcc need dmake or gmake. nmake is not supported for gcc builds. Parallel building is only supported with dmake and gmake, not nmake. When using dmake it is recommended to use dmake 4.13 or newer for parallel building. Older dmakes, in parallel mode, have very high CPU usage and pound the disk/filing system with duplicate I/O calls in an aggressive polling loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384c0cf5619a59f9ce19e0cd720b3f9bfb700b5a" translate="yes" xml:space="preserve">
          <source>You need a separate perl executable</source>
          <target state="translated">Necesitas un ejecutable de perl separado</target>
        </trans-unit>
        <trans-unit id="aa34c474feea2ebcd51fe52bc61e21c7aa534d7c" translate="yes" xml:space="preserve">
          <source>You need an installed and working gccsdk cross compiler &lt;a href=&quot;http://gccsdk.riscos.info/&quot;&gt;http://gccsdk.riscos.info/&lt;/a&gt; and REXEN &lt;a href=&quot;http://www.cp15.org/programming/&quot;&gt;http://www.cp15.org/programming/&lt;/a&gt;</source>
          <target state="translated">Necesita un compilador cruzado gccsdk instalado y funcional &lt;a href=&quot;http://gccsdk.riscos.info/&quot;&gt;http://gccsdk.riscos.info/&lt;/a&gt; y REXEN &lt;a href=&quot;http://www.cp15.org/programming/&quot;&gt;http://www.cp15.org/programming/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4caefc1d4e2631b1200ec354d43fce32735ee7c7" translate="yes" xml:space="preserve">
          <source>You need at the very least AmigaOS version 2.0. Recommended is version 3.1.</source>
          <target state="translated">Necesitas al menos la versión 2.0 de AmigaOS.Se recomienda la versión 3.1.</target>
        </trans-unit>
        <trans-unit id="5333f88ac5bf8fd24e224f0d8051b5fec4dfc6b5" translate="yes" xml:space="preserve">
          <source>You need the Unix emulation for AmigaOS, whose most important part is &lt;b&gt;ixemul.library&lt;/b&gt;. For a minimum setup, get the latest versions of the following packages from the Aminet archives ( &lt;a href=&quot;http://www.aminet.net/~aminet/&quot;&gt;http://www.aminet.net/~aminet/&lt;/a&gt; ):</source>
          <target state="translated">Necesitas la emulaci&amp;oacute;n Unix para AmigaOS, cuya parte m&amp;aacute;s importante es &lt;b&gt;ixemul.library&lt;/b&gt; . Para una configuraci&amp;oacute;n m&amp;iacute;nima, obtenga las &amp;uacute;ltimas versiones de los siguientes paquetes de los archivos de Aminet ( &lt;a href=&quot;http://www.aminet.net/~aminet/&quot;&gt;http://www.aminet.net/~aminet/&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="46e89c73cbc6b5dd39fd756e0f6110a1446e5be5" translate="yes" xml:space="preserve">
          <source>You need the following files to build perl (or add new modules):</source>
          <target state="translated">Necesitas los siguientes archivos para construir perl (o añadir nuevos módulos):</target>
        </trans-unit>
        <trans-unit id="9f9c012bcf4380f633cf4f7379c24b96c60ecb4b" translate="yes" xml:space="preserve">
          <source>You need to add either braces or blanks to disambiguate.</source>
          <target state="translated">Necesitas añadir refuerzos o espacios en blanco para desambiguar.</target>
        </trans-unit>
        <trans-unit id="cd33ddce78ff1c7340f83b621a3b3b7072ee0d07" translate="yes" xml:space="preserve">
          <source>You need to apply the patches in</source>
          <target state="translated">Necesitas aplicar los parches en</target>
        </trans-unit>
        <trans-unit id="1e3349f1cb25ac13b86ae16e145a0b5decd29f3c" translate="yes" xml:space="preserve">
          <source>You need to correct all the entries which look like file paths (they currently start with &lt;code&gt;f:/&lt;/code&gt;).</source>
          <target state="translated">Debe corregir todas las entradas que parecen rutas de archivo (actualmente comienzan con &lt;code&gt;f:/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ac623d9d2638d8e7b4db69f0dfe7d1ff10e6b5e8" translate="yes" xml:space="preserve">
          <source>You need to create a local file or directory handle or a local function.</source>
          <target state="translated">Necesitas crear un archivo local o un directorio o una función local.</target>
        </trans-unit>
        <trans-unit id="f1f5eb114f0c20a6807ea82566cc5f87d3a50a5b" translate="yes" xml:space="preserve">
          <source>You need to fetch the latest perl source (including developers releases). With some probability it is located in</source>
          <target state="translated">Necesitas buscar la última fuente de perl (incluyendo las versiones de los desarrolladores).Con alguna probabilidad se encuentra en</target>
        </trans-unit>
        <trans-unit id="965f03aeeab996c747b3c012ec9e65e74625b61a" translate="yes" xml:space="preserve">
          <source>You need to give a global variable a temporary value, especially $_.</source>
          <target state="translated">Necesitas darle a una variable global un valor temporal,especialmente $_.</target>
        </trans-unit>
        <trans-unit id="4566431899ec1f0737bac24e93a9db0aa49d528e" translate="yes" xml:space="preserve">
          <source>You need to have the latest &lt;b&gt;ixemul&lt;/b&gt; (Unix emulation for Amiga) from Aminet.</source>
          <target state="translated">Necesita tener la &amp;uacute;ltima &lt;b&gt;ixemul&lt;/b&gt; (emulaci&amp;oacute;n Unix para Amiga) de Aminet.</target>
        </trans-unit>
        <trans-unit id="a7ac6e008f84ae7c7059b678b8182fe611763a32" translate="yes" xml:space="preserve">
          <source>You need to have the latest EMX development environment, the full GNU tool suite (gawk renamed to awk, and GNU</source>
          <target state="translated">Necesitas tener el último entorno de desarrollo EMX,el conjunto de herramientas GNU completo (gawk renombrado a awk,y GNU</target>
        </trans-unit>
        <trans-unit id="f0226c50fdff6c76ac2211b429b8387e73ade57a" translate="yes" xml:space="preserve">
          <source>You need to have zlib 1.2.1 or better if you want to use the &lt;code&gt;-Merge&lt;/code&gt; option with &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; , &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; and &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; .</source>
          <target state="translated">Necesita tener zlib 1.2.1 o mejor si desea utilizar la opci&amp;oacute;n &lt;code&gt;-Merge&lt;/code&gt; con &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; , &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; e &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="873959dbb9bde44be24f12aa34b3eef434338c60" translate="yes" xml:space="preserve">
          <source>You need to have zlib 1.2.1 or better if you want to use the &lt;code&gt;-Merge&lt;/code&gt; option with &lt;code&gt;IO::Compress::Gzip&lt;/code&gt;, &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; and &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe783f272c0192721f39d883cea6a7e6d87c384" translate="yes" xml:space="preserve">
          <source>You need to indent a strictly positive number of spaces, not 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d2bb828dde58ca4350b2c6d38a82848f926212" translate="yes" xml:space="preserve">
          <source>You need to make sure your script is executable, is accessible by the user CGI is running the script under (which is probably not the user account you tested it under), does not rely on any environment variables (like PATH) from the user it isn't running under, and isn't in a location where the CGI server can't find it, basically, more or less. Please see the following for more information:</source>
          <target state="translated">Necesitas asegurarte de que tu script es ejecutable,es accesible por el usuario bajo el cual el CGI está ejecutando el script (que probablemente no es la cuenta de usuario bajo la cual lo probaste),no depende de ninguna variable de entorno (como PATH)del usuario bajo el cual no se está ejecutando,y no está en una ubicación donde el servidor CGI no pueda encontrarlo,básicamente,más o menos.Para más información,véase lo siguiente:</target>
        </trans-unit>
        <trans-unit id="5378dd6faea905708bfdb72023c895700d44361d" translate="yes" xml:space="preserve">
          <source>You need to pass references to these objects. See &lt;a href=&quot;perlsub#Pass-by-Reference&quot;&gt;&quot;Pass by Reference&quot; in perlsub&lt;/a&gt; for this particular question, and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for information on references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dffbeaeb79cbefc3a6182c3945facf9e0c58d9" translate="yes" xml:space="preserve">
          <source>You need to pass references to these objects. See &lt;a href=&quot;perlsub#Pass-by-Reference&quot;&gt;Pass by Reference in perlsub&lt;/a&gt; for this particular question, and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for information on references.</source>
          <target state="translated">Debe pasar referencias a estos objetos. Consulte &lt;a href=&quot;perlsub#Pass-by-Reference&quot;&gt;Pasar por referencia en perlsub&lt;/a&gt; para esta pregunta en particular y &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; para obtener informaci&amp;oacute;n sobre las referencias.</target>
        </trans-unit>
        <trans-unit id="f3725b76142cf0ba93578fc0f4b37b143a50c105" translate="yes" xml:space="preserve">
          <source>You need to perform the same general operations on related types of data, but with slight variations depending on the specific type of data the operations are applied to.</source>
          <target state="translated">Es necesario realizar las mismas operaciones generales sobre tipos de datos conexos,pero con ligeras variaciones en función del tipo específico de datos a los que se aplican las operaciones.</target>
        </trans-unit>
        <trans-unit id="97ad81b34d40212b78af8fc083ac0854544a24a5" translate="yes" xml:space="preserve">
          <source>You need to quote &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520b001573d6d14aabe35562ee4099fd076b8bd4" translate="yes" xml:space="preserve">
          <source>You need to use &lt;code&gt;sv_magicext&lt;/code&gt; to add magic to &lt;code&gt;SvREADONLY&lt;/code&gt; SVs and also to add more than one instance of the same &lt;code&gt;how&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca7b2277d21c0c8eb2a5172b673ea24b48da4eb" translate="yes" xml:space="preserve">
          <source>You need to use &lt;code&gt;sv_magicext&lt;/code&gt; to add magic to SvREADONLY SVs and also to add more than one instance of the same 'how'.</source>
          <target state="translated">Necesita usar &lt;code&gt;sv_magicext&lt;/code&gt; para agregar magia a SvREADONLY SVs y tambi&amp;eacute;n para agregar m&amp;aacute;s de una instancia del mismo 'c&amp;oacute;mo'.</target>
        </trans-unit>
        <trans-unit id="87282945868227dd2bfe22d624f87b781030217d" translate="yes" xml:space="preserve">
          <source>You never know what tools you call from within your own tool will need a context. Obtaining the context early ensures that nested tools can find the context you want them to find.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a3262ccbefb20acd592d55306e17827a38c688" translate="yes" xml:space="preserve">
          <source>You now have better understanding of what a source filter is, and you might even have a possible use for them. If you feel like playing with source filters but need a bit of inspiration, here are some extra features you could add to the Debug filter.</source>
          <target state="translated">Ahora entiendes mejor lo que es un filtro de fuente,e incluso podrías tener un posible uso para ellos.Si te apetece jugar con los filtros de origen pero necesitas un poco de inspiración,aquí tienes algunas características adicionales que podrías añadir al filtro de depuración.</target>
        </trans-unit>
        <trans-unit id="73cbac231eb90b456375cc000b5becdd4bf8f684" translate="yes" xml:space="preserve">
          <source>You probably cannot fix the thing that runs perl, but you can change how perl outputs its warnings by defining a custom warning and die functions.</source>
          <target state="translated">Probablemente no puedas arreglar la cosa que hace funcionar a perl,pero puedes cambiar la forma en que perl emite sus advertencias definiendo una advertencia personalizada y las funciones del dado.</target>
        </trans-unit>
        <trans-unit id="c7c0603ac9ce1e85817396d548da858cc92fd4cc" translate="yes" xml:space="preserve">
          <source>You probably cannot mix &lt;a href=&quot;#alarm-SECONDS&quot;&gt;&lt;code&gt;alarm&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#sleep-EXPR&quot;&gt;&lt;code&gt;sleep&lt;/code&gt;&lt;/a&gt; calls, because &lt;a href=&quot;#sleep-EXPR&quot;&gt;&lt;code&gt;sleep&lt;/code&gt;&lt;/a&gt; is often implemented using &lt;a href=&quot;#alarm-SECONDS&quot;&gt;&lt;code&gt;alarm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42726aad22724c022f0c559e39f4d6e8477c11a" translate="yes" xml:space="preserve">
          <source>You probably cannot mix &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; calls, because &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; is often implemented using &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Probablemente no pueda combinar la &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a y las llamadas para &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , porque el &lt;code&gt;&lt;a href=&quot;sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; menudo se implementa mediante la &lt;code&gt;&lt;a href=&quot;alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="15661abf22e3cef9f933847127ca80cfb4161e88" translate="yes" xml:space="preserve">
          <source>You probably cannot mix &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; calls, because &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; is often implemented using &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Probablemente no pueda combinar la &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a y las llamadas para &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; , porque el &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; menudo se implementa mediante la &lt;code&gt;&lt;a href=&quot;functions/alarm&quot;&gt;alarm&lt;/a&gt;&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="c6ea02ffa42491538c740d65bba124e60d5ff937" translate="yes" xml:space="preserve">
          <source>You probably expect this code to print the equivalent of</source>
          <target state="translated">Probablemente esperas que este código imprima el equivalente a</target>
        </trans-unit>
        <trans-unit id="d62ac8cab5911278724664b4481b34fb6ef41dfa" translate="yes" xml:space="preserve">
          <source>You probably meant to use &lt;code&gt;$]&lt;/code&gt; instead. &lt;code&gt;$[&lt;/code&gt; is the base for indexing arrays. &lt;code&gt;$]&lt;/code&gt; is the Perl version number in decimal.</source>
          <target state="translated">Probablemente quisiste usar &lt;code&gt;$]&lt;/code&gt; en su lugar. &lt;code&gt;$[&lt;/code&gt; es la base para indexar matrices. &lt;code&gt;$]&lt;/code&gt; es el n&amp;uacute;mero de versi&amp;oacute;n de Perl en decimal.</target>
        </trans-unit>
        <trans-unit id="fd777891ad8556771da5ce520e6dfb0017006c11" translate="yes" xml:space="preserve">
          <source>You probably shouldn't rely upon the &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; being podded out forever. Not all pod translators are well-behaved in this regard, and perhaps the compiler will become pickier.</source>
          <target state="translated">Probablemente no deber&amp;iacute;a confiar en que el &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn()&lt;/a&gt;&lt;/code&gt; se va a eliminar para siempre. No todos los traductores de pod se comportan bien a este respecto, y quiz&amp;aacute;s el compilador se vuelva m&amp;aacute;s exigente.</target>
        </trans-unit>
        <trans-unit id="fdea4fb0b549076471da0ef11cc5591c5ad20b5e" translate="yes" xml:space="preserve">
          <source>You probably shouldn't rely upon the &lt;code&gt;warn()&lt;/code&gt; being podded out forever. Not all pod translators are well-behaved in this regard, and perhaps the compiler will become pickier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e43d034a25f1af2139047ca7966917ab4cd1dd" translate="yes" xml:space="preserve">
          <source>You probably want to use one of the assortment of wrappers, such as &lt;code&gt;SvSetSV&lt;/code&gt; , &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , &lt;code&gt;SvSetMagicSV&lt;/code&gt; and &lt;code&gt;SvSetMagicSV_nosteal&lt;/code&gt; .</source>
          <target state="translated">Probablemente desee utilizar uno de la variedad de envoltorios, como &lt;code&gt;SvSetSV&lt;/code&gt; , &lt;code&gt;SvSetSV_nosteal&lt;/code&gt; , &lt;code&gt;SvSetMagicSV&lt;/code&gt; y &lt;code&gt;SvSetMagicSV_nosteal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26d6df5a722c4587c10d1e33caf64417a111e3b7" translate="yes" xml:space="preserve">
          <source>You probably want to use one of the assortment of wrappers, such as &lt;code&gt;SvSetSV&lt;/code&gt;, &lt;code&gt;SvSetSV_nosteal&lt;/code&gt;, &lt;code&gt;SvSetMagicSV&lt;/code&gt; and &lt;code&gt;SvSetMagicSV_nosteal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6ef8cdce7f3fb77e02bca3307aceacf65c4aa9" translate="yes" xml:space="preserve">
          <source>You probably wrote something like this:</source>
          <target state="translated">Probablemente escribiste algo como esto:</target>
        </trans-unit>
        <trans-unit id="39ad4b4dd2e75230f3579c0483b312257f0274c5" translate="yes" xml:space="preserve">
          <source>You really need GNU make to compile this. GNU make ships by default with QNX 4.23, but you can get it from quics for earlier versions.</source>
          <target state="translated">Realmente necesitas GNU make para compilar esto.GNU make se entrega por defecto con QNX 4.23,pero puede obtenerlo de quics para versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="f29c66ebc5c2830e25ec34ca0ddd3f809b29ffce" translate="yes" xml:space="preserve">
          <source>You really probably want to be using &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt; instead, because &lt;a href=&quot;#local-EXPR&quot;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/a&gt; isn't what most people think of as &quot;local&quot;. See &lt;a href=&quot;perlsub#Private-Variables-via-my%28%29&quot;&gt;&quot;Private Variables via my()&quot; in perlsub&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91eff73482d2359765ffe5506e4ead5d70a7574" translate="yes" xml:space="preserve">
          <source>You really probably want to be using &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; instead, because &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; isn't what most people think of as &quot;local&quot;. See &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">Probablemente quieras usar &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; en su lugar, porque &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; no es lo que la mayor&amp;iacute;a de la gente considera &quot;local&quot;. Consulte &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Variables privadas a trav&amp;eacute;s de my () en perlsub&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="ab88c992626b72f6894fc343016d386fe947c5ce" translate="yes" xml:space="preserve">
          <source>You really probably want to be using &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; instead, because &lt;code&gt;&lt;a href=&quot;local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; isn't what most people think of as &quot;local&quot;. See &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">Probablemente quieras usar &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; en su lugar, porque &lt;code&gt;&lt;a href=&quot;local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; no es lo que la mayor&amp;iacute;a de la gente considera &quot;local&quot;. Consulte &lt;a href=&quot;../perlsub#Private-Variables-via-my()&quot;&gt;Variables privadas a trav&amp;eacute;s de my () en perlsub&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="d15f62d6aa63d728245cd3284fc083f9f68cff93" translate="yes" xml:space="preserve">
          <source>You see, if you call pstruct by its other incybernation, c2ph, you have a code generator that translates C code into perl code! Well, structure and union declarations at least, but that's quite a bit.</source>
          <target state="translated">Verás,si llamas a pstruct por su otra incybernación,c2ph,tienes un generador de código que traduce el código C en código perl! Bueno,estructura y declaraciones de unión al menos,pero eso es bastante.</target>
        </trans-unit>
        <trans-unit id="e40f965e1563da6a69b2b3cefacc4ba6dd9ef204" translate="yes" xml:space="preserve">
          <source>You should &lt;code&gt;use Test2::IPC;&lt;/code&gt; as early as possible in your test file. If you import this module after API initialization it will attempt to retrofit IPC onto the existing hubs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f74aa64cd2ea580871d2847f70b2776302bedc" translate="yes" xml:space="preserve">
          <source>You should also &quot;register&quot; your op with the Perl interpreter so that it can produce sensible error and warning messages. Since it is possible to have multiple custom ops within the one &quot;logical&quot; op type &lt;code&gt;OP_CUSTOM&lt;/code&gt; , Perl uses the value of &lt;code&gt;o-&amp;gt;op_ppaddr&lt;/code&gt; to determine which custom op it is dealing with. You should create an &lt;code&gt;XOP&lt;/code&gt; structure for each ppaddr you use, set the properties of the custom op with &lt;code&gt;XopENTRY_set&lt;/code&gt; , and register the structure against the ppaddr using &lt;code&gt;Perl_custom_op_register&lt;/code&gt; . A trivial example might look like:</source>
          <target state="translated">Tambi&amp;eacute;n debe &quot;registrar&quot; su operaci&amp;oacute;n con el int&amp;eacute;rprete de Perl para que pueda producir mensajes sensibles de error y advertencia. Dado que es posible tener m&amp;uacute;ltiples operaciones personalizadas dentro del tipo de &lt;code&gt;OP_CUSTOM&lt;/code&gt; &quot;l&amp;oacute;gica&quot; OP_CUSTOM , Perl usa el valor de &lt;code&gt;o-&amp;gt;op_ppaddr&lt;/code&gt; para determinar con qu&amp;eacute; operaci&amp;oacute;n personalizada se est&amp;aacute; tratando. Debe crear una estructura &lt;code&gt;XOP&lt;/code&gt; para cada ppaddr que use, establecer las propiedades de la &lt;code&gt;XopENTRY_set&lt;/code&gt; personalizada con XopENTRY_set y registrar la estructura contra el ppaddr usando &lt;code&gt;Perl_custom_op_register&lt;/code&gt; . Un ejemplo trivial podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a859b2e7cc53302cdc693e11c15d6ffe18891b34" translate="yes" xml:space="preserve">
          <source>You should also &quot;register&quot; your op with the Perl interpreter so that it can produce sensible error and warning messages. Since it is possible to have multiple custom ops within the one &quot;logical&quot; op type &lt;code&gt;OP_CUSTOM&lt;/code&gt;, Perl uses the value of &lt;code&gt;o-&amp;gt;op_ppaddr&lt;/code&gt; to determine which custom op it is dealing with. You should create an &lt;code&gt;XOP&lt;/code&gt; structure for each ppaddr you use, set the properties of the custom op with &lt;code&gt;XopENTRY_set&lt;/code&gt;, and register the structure against the ppaddr using &lt;code&gt;Perl_custom_op_register&lt;/code&gt;. A trivial example might look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd501f21ed6c5e9d05fc6e18329636984dc10c8" translate="yes" xml:space="preserve">
          <source>You should also check out the Frequently Asked Questions list in comp.unix.* for things like this: the answer is essentially the same. It's very system-dependent. Here's one solution that works on BSD systems:</source>
          <target state="translated">También deberías revisar la lista de preguntas frecuentes en comp.unix.*para cosas como esta:la respuesta es esencialmente la misma.Es muy dependiente del sistema.Aquí hay una solución que funciona en sistemas BSD:</target>
        </trans-unit>
        <trans-unit id="f04dff0eea092cd0ec8988c859db7bf95d5caa53" translate="yes" xml:space="preserve">
          <source>You should also check your modules, and upgrade them if necessary. For example, HTML::Entities requires version &amp;gt;= 1.32 to function correctly, even though the changelog is silent about this.</source>
          <target state="translated">Tambi&amp;eacute;n debe verificar sus m&amp;oacute;dulos y actualizarlos si es necesario. Por ejemplo, HTML :: Entities requiere la versi&amp;oacute;n&amp;gt; = 1.32 para funcionar correctamente, aunque el registro de cambios no dice nada al respecto.</target>
        </trans-unit>
        <trans-unit id="216e237825c211374fe3090940c41c56504f6ae4" translate="yes" xml:space="preserve">
          <source>You should also have received a copy of the GNU General Public License along with this program in the file named &quot;Copying&quot;. If not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA or visit their web page on the internet at &lt;a href=&quot;http://www.gnu.org/copyleft/gpl.html&quot;&gt;http://www.gnu.org/copyleft/gpl.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57da7d33591eaab9726081a507bb062ecb473b51" translate="yes" xml:space="preserve">
          <source>You should also have received a copy of the GNU General Public License along with this program in the file named &quot;Copying&quot;. If not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA or visit their web page on the internet at &lt;a href=&quot;https://www.gnu.org/copyleft/gpl.html&quot;&gt;http://www.gnu.org/copyleft/gpl.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf271b2d5721f863cabe314c6f3ea53dab9ccef" translate="yes" xml:space="preserve">
          <source>You should also look at &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n deber&amp;iacute;a mirar &lt;a href=&quot;perlfaq9&quot;&gt;perlfaq9&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2a8e7bc27f2427aec43e373a1d93fb28c7dab24" translate="yes" xml:space="preserve">
          <source>You should also take a look at &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt; for best practices in making a module.</source>
          <target state="translated">Tambi&amp;eacute;n deber&amp;iacute;a echar un vistazo a &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt; para conocer las mejores pr&amp;aacute;cticas para hacer un m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="50caca8ed03bfd57a516ccc3b6dfa215ef520713" translate="yes" xml:space="preserve">
          <source>You should also try to get feedback from people who are already familiar with the module's application domain and the CPAN naming system. Authors of similar modules, or modules with similar names, may be a good place to start, as are community sites like &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org&quot;&gt;Perl Monks&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n debe intentar obtener comentarios de personas que ya est&amp;eacute;n familiarizadas con el dominio de la aplicaci&amp;oacute;n del m&amp;oacute;dulo y el sistema de nombres CPAN. Los autores de m&amp;oacute;dulos similares, o m&amp;oacute;dulos con nombres similares, pueden ser un buen lugar para comenzar, al igual que los sitios comunitarios como &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org&quot;&gt;Perl Monks&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95145fec9529b3152d5a5f6f32c276f625174f2b" translate="yes" xml:space="preserve">
          <source>You should also try to get feedback from people who are already familiar with the module's application domain and the CPAN naming system. Authors of similar modules, or modules with similar names, may be a good place to start, as are community sites like &lt;a href=&quot;https://www.perlmonks.org&quot;&gt;Perl Monks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6748d5917300372787fdc7a9ff0a6b3a57b1d0d9" translate="yes" xml:space="preserve">
          <source>You should always support a &lt;code&gt;HASH&lt;/code&gt; argument to &lt;code&gt;TIEHASH&lt;/code&gt; that ties the underlying cache so that the user can specify that the cache is also persistent or that it has some other interesting semantics. The example above demonstrates how to do this, as does &lt;code&gt;Memoize::Expire&lt;/code&gt; .</source>
          <target state="translated">Siempre debe admitir un argumento &lt;code&gt;HASH&lt;/code&gt; para &lt;code&gt;TIEHASH&lt;/code&gt; que vincule la cach&amp;eacute; subyacente para que el usuario pueda especificar que la cach&amp;eacute; tambi&amp;eacute;n es persistente o que tiene alguna otra sem&amp;aacute;ntica interesante. El ejemplo anterior demuestra c&amp;oacute;mo hacer esto, al igual que &lt;code&gt;Memoize::Expire&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1e2e0b2bc7e86a2fa76d37f5310a663f4f81bdc" translate="yes" xml:space="preserve">
          <source>You should always support a &lt;code&gt;HASH&lt;/code&gt; argument to &lt;code&gt;TIEHASH&lt;/code&gt; that ties the underlying cache so that the user can specify that the cache is also persistent or that it has some other interesting semantics. The example above demonstrates how to do this, as does &lt;code&gt;Memoize::Expire&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be69763ec9a168e71d6a325f5feb839520bece8" translate="yes" xml:space="preserve">
          <source>You should attempt older code to fully use</source>
          <target state="translated">Deberías intentar usar un código más antiguo para usar completamente</target>
        </trans-unit>
        <trans-unit id="035ccc9a9d5711f4af1f69c6423f5fd457c6beb5" translate="yes" xml:space="preserve">
          <source>You should attempt to get older code to fully use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa5702baea4b6cbbf8baf7ed5e04e20725d5137" translate="yes" xml:space="preserve">
          <source>You should be aware that it is unsupported, and is not claimed to be fit for any purpose. If your system allows installation of arbitrary locales, you may find the definitions useful as they are, or as a basis for the development of your own locales.</source>
          <target state="translated">Debe ser consciente de que no está respaldada y no se afirma que sea apta para ningún propósito.Si su sistema permite la instalación de locales arbitrarios,puede que las definiciones le resulten útiles tal como están,o como base para el desarrollo de sus propios locales.</target>
        </trans-unit>
        <trans-unit id="e3162405a76386caaa175c4a5b3c2a85402c9c86" translate="yes" xml:space="preserve">
          <source>You should be careful about creating mortal variables. Strange things can happen if you make the same value mortal within multiple contexts, or if you make a variable mortal multiple times. Thinking of &quot;Mortalization&quot; as deferred &lt;code&gt;SvREFCNT_dec&lt;/code&gt; should help to minimize such problems. For example if you are passing an SV which you</source>
          <target state="translated">Debe tener cuidado al crear variables mortales. Pueden suceder cosas extra&amp;ntilde;as si convierte el mismo valor en mortal en varios contextos, o si convierte una variable en mortal varias veces. Pensar en &quot;Mortalizaci&amp;oacute;n&quot; como &lt;code&gt;SvREFCNT_dec&lt;/code&gt; diferido deber&amp;iacute;a ayudar a minimizar estos problemas. Por ejemplo, si est&amp;aacute; pasando un SV que</target>
        </trans-unit>
        <trans-unit id="9ad5df3f66f5b17aedb15ffe31f22d342f4b8c8e" translate="yes" xml:space="preserve">
          <source>You should be especially careful to remember what's being looked at when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2612532f10e360a543e4698a0462860c195cea00" translate="yes" xml:space="preserve">
          <source>You should be using two different symbols instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75000df91bba9bce6bbc0dce623bb898fe50b2f" translate="yes" xml:space="preserve">
          <source>You should be very careful when modifying the default values of most special variables described in this document. In most cases you want to localize these variables before changing them, since if you don't, the change may affect other modules which rely on the default values of the special variables that you have changed. This is one of the correct ways to read the whole file at once:</source>
          <target state="translated">Debe tener mucho cuidado al modificar los valores por defecto de la mayoría de las variables especiales descritas en este documento.En la mayoría de los casos,querrá localizar estas variables antes de cambiarlas,ya que si no lo hace,el cambio puede afectar a otros módulos que dependen de los valores por defecto de las variables especiales que ha cambiado.Esta es una de las formas correctas de leer todo el archivo de una sola vez:</target>
        </trans-unit>
        <trans-unit id="949c1f70059f0d92507bf8500b354d7dab533cd7" translate="yes" xml:space="preserve">
          <source>You should by now have had a look at &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, which tells you about Perl's internal variable types: SVs, HVs, AVs and the rest. If not, do that now.</source>
          <target state="translated">Ya deber&amp;iacute;a haber &lt;a href=&quot;perlguts&quot;&gt;echado&lt;/a&gt; un vistazo a perlguts , que le informa sobre los tipos de variables internas de Perl: SV, HV, AV y el resto. Si no, hazlo ahora.</target>
        </trans-unit>
        <trans-unit id="8dc43c8dd65f9ea8dbe3744e02b3f2e2bf6fd033" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the Artistic License with this Kit, in the file named &quot;Artistic&quot;. If not, I'll be glad to provide one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de8c82aa4b462c346cc4f7308a916f25f4fef57" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU General Public License along with this library program; it should be in the file &lt;code&gt;COPYING&lt;/code&gt; . If not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA</source>
          <target state="translated">Deber&amp;iacute;a haber recibido una copia de la Licencia P&amp;uacute;blica General GNU junto con este programa de biblioteca; deber&amp;iacute;a estar en el archivo &lt;code&gt;COPYING&lt;/code&gt; . De lo contrario, escriba a Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, EE. UU.</target>
        </trans-unit>
        <trans-unit id="89d4940a32ed3ab90e1b7165c58f90ef387f0c29" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU General Public License along with this library program; it should be in the file &lt;code&gt;COPYING&lt;/code&gt;. If not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47e81623eb986394886e54e85f1183c3a98df4e" translate="yes" xml:space="preserve">
          <source>You should in general be leery of using functions that could potentially return lists in scalar context without explicitly stating such. This would be clearer to the casual reader:</source>
          <target state="translated">En general,se debe ser cauteloso al utilizar funciones que podrían devolver listas en un contexto escalar sin indicarlas explícitamente.Esto sería más claro para el lector casual:</target>
        </trans-unit>
        <trans-unit id="f07911b4c8d126039388d13cb35130da1027b105" translate="yes" xml:space="preserve">
          <source>You should make a module out of any code that you think is going to be useful to others. Anything that's likely to fill a hole in the communal library and which someone else can slot directly into their program. Any part of your code which you can isolate and extract and plug into something else is a likely candidate.</source>
          <target state="translated">Deberías hacer un módulo con cualquier código que creas que va a ser útil para los demás.Cualquier cosa que sea probable que llene un hueco en la biblioteca comunal y que alguien más pueda encajar directamente en su programa.Cualquier parte de tu código que puedas aislar y extraer y conectar a otra cosa es un candidato probable.</target>
        </trans-unit>
        <trans-unit id="040633d0da585780031086722446751b04946152" translate="yes" xml:space="preserve">
          <source>You should neither care about nor depend on the internal representation; it might change without notice. Use &lt;b&gt;ONLY&lt;/b&gt; method calls like &lt;code&gt;$x-&amp;gt;sign();&lt;/code&gt; instead relying on the internal representation.</source>
          <target state="translated">No debe preocuparse ni depender de la representaci&amp;oacute;n interna; puede cambiar sin previo aviso. Utilice &lt;b&gt;&amp;Uacute;NICAMENTE&lt;/b&gt; llamadas a m&amp;eacute;todos como &lt;code&gt;$x-&amp;gt;sign();&lt;/code&gt; en lugar de apoyarse en la representaci&amp;oacute;n interna.</target>
        </trans-unit>
        <trans-unit id="8e48507edb3519e34f20c7e3d955b48a4ed82ad2" translate="yes" xml:space="preserve">
          <source>You should normally only add directories to @INC. If you need to delete directories from @INC take care to only delete those which you added yourself or which you are certain are not needed by other modules in your script. Other modules may have added directories which they need for correct operation.</source>
          <target state="translated">Normalmente sólo deberías añadir directorios al @INC.Si necesita eliminar directorios de @INC,tenga cuidado de borrar sólo aquellos que usted mismo haya añadido o que esté seguro de que no son necesarios para otros módulos de su script.Otros módulos pueden haber añadido directorios que necesitan para su correcto funcionamiento.</target>
        </trans-unit>
        <trans-unit id="693cc772a08fe2cee68cbfc24c2a6625d73c01c6" translate="yes" xml:space="preserve">
          <source>You should not depend on the internal format, all accesses must go through accessor methods. E.g. looking at $x-&amp;gt;{sign} is not a bright idea since there is no guaranty that the object in question has such a hashkey, nor is a hash underneath at all.</source>
          <target state="translated">No debe depender del formato interno, todos los accesos deben pasar por m&amp;eacute;todos de acceso. Por ejemplo, mirar $ x -&amp;gt; {signo} no es una idea brillante, ya que no hay garant&amp;iacute;a de que el objeto en cuesti&amp;oacute;n tenga tal clave, ni tampoco un hash debajo.</target>
        </trans-unit>
        <trans-unit id="d13d5397797f2275509831750bfac02171b7d4f3" translate="yes" xml:space="preserve">
          <source>You should not depend on the internal format, all accesses must go through accessor methods. E.g. looking at $x-&amp;gt;{sign} is not a good idea since there is no guaranty that the object in question has such a hash key, nor is a hash underneath at all.</source>
          <target state="translated">No debe depender del formato interno, todos los accesos deben pasar por m&amp;eacute;todos de acceso. Por ejemplo, mirar $ x -&amp;gt; {signo} no es una buena idea ya que no hay garant&amp;iacute;a de que el objeto en cuesti&amp;oacute;n tenga tal clave hash, ni tampoco un hash debajo.</target>
        </trans-unit>
        <trans-unit id="6e8d21cc64f2bc1e9d1ef661a62db1a121e53da8" translate="yes" xml:space="preserve">
          <source>You should not even &lt;b&gt;want&lt;/b&gt; to use</source>
          <target state="translated">Ni siquiera deber&amp;iacute;as &lt;b&gt;querer&lt;/b&gt; usar</target>
        </trans-unit>
        <trans-unit id="675338533405ed3338eef5ef4ee169f82f2ec7e6" translate="yes" xml:space="preserve">
          <source>You should not use perl's malloc if you are building with gcc. There are reports of core dumps, especially in the PDL module. The problem appears to go away under -DDEBUGGING, so it has been difficult to track down. Sun's compiler appears to be okay with or without perl's malloc. [XXX further investigation is needed here.]</source>
          <target state="translated">No deberías usar la mallocación de Perl si estás construyendo con GCC.Hay informes de volcados de núcleo,especialmente en el módulo PDL.El problema parece desaparecer bajo -DDEBUGGING,por lo que ha sido difícil de rastrear.El compilador de Sun parece estar bien con o sin el malloqueo de Perl.[Se necesita una investigación más profunda aquí.]</target>
        </trans-unit>
        <trans-unit id="13af3135f590e4077444d490629ef8daddd658bc" translate="yes" xml:space="preserve">
          <source>You should note that, if it is necessary to store the SV (&lt;code&gt;name&lt;/code&gt; in the example above) which corresponds to the Perl subroutine so that it can be used later in the program, it not enough just to store a copy of the pointer to the SV. Say the code above had been like this:</source>
          <target state="translated">Debe tener en cuenta que, si es necesario almacenar el SV ( &lt;code&gt;name&lt;/code&gt; en el ejemplo anterior) que corresponde a la subrutina Perl para poder usarlo m&amp;aacute;s tarde en el programa, no es suficiente con almacenar una copia del puntero al SV. Digamos que el c&amp;oacute;digo anterior hab&amp;iacute;a sido as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="be707fb5b1867bc329a5a5a540fc202148f2df94" translate="yes" xml:space="preserve">
          <source>You should now build perl and test your (merged) changes one last time (ideally run the whole test suite, but failing that at least run the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b47aa7e3c4b13e3ddb21243f2aa9c3c7a0d993" translate="yes" xml:space="preserve">
          <source>You should now submit a Pull Request (PR) on GitHub from the new branch to blead. For more information, see the GitHub documentation at &lt;a href=&quot;https://help.github.com/en/articles/creating-a-pull-request-from-a-fork&quot;&gt;https://help.github.com/en/articles/creating-a-pull-request-from-a-fork&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d554ccba9c0cacff167113e9e842dbb2b577730c" translate="yes" xml:space="preserve">
          <source>You should only need to use this option if you want the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d7be701b66af4a13ce23ca4f4637ef46685c93" translate="yes" xml:space="preserve">
          <source>You should probably be using lexical variables anyway, although the issue is the same here:</source>
          <target state="translated">Probablemente deberías usar variables léxicas de todos modos,aunque la cuestión es la misma aquí:</target>
        </trans-unit>
        <trans-unit id="8df19768141a29740332079971ccdd9d5ccbe578" translate="yes" xml:space="preserve">
          <source>You should really look at &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt;. This package is some very basic essential tools implemented using &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. This exists only so that &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt; and other tools required by &lt;a href=&quot;Test2::Suite&quot;&gt;Test2::Suite&lt;/a&gt; can be tested. This is the package &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt; uses to test itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54112594f7721aec0b526a825c8c553a794597d2" translate="yes" xml:space="preserve">
          <source>You should say</source>
          <target state="translated">Deberías decir</target>
        </trans-unit>
        <trans-unit id="669aa98258ce9656dc2f7e8465e9a97f44e937fd" translate="yes" xml:space="preserve">
          <source>You should seldom if ever use &lt;code&gt;0644&lt;/code&gt; as argument to &lt;a href=&quot;#sysopen-FILEHANDLE%2CFILENAME%2CMODE&quot;&gt;&lt;code&gt;sysopen&lt;/code&gt;&lt;/a&gt;, because that takes away the user's option to have a more permissive umask. Better to omit it. See &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt; for more on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae04df28b1ca8233ad4f14017b75003d4a4c0fc" translate="yes" xml:space="preserve">
          <source>You should seldom if ever use &lt;code&gt;0644&lt;/code&gt; as argument to &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, because that takes away the user's option to have a more permissive umask. Better to omit it. See the perlfunc(1) entry on &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; for more on this.</source>
          <target state="translated">Rara vez deber&amp;iacute;a usar &lt;code&gt;0644&lt;/code&gt; como argumento para &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , porque eso elimina la opci&amp;oacute;n del usuario de tener una m&amp;aacute;scara de usuario m&amp;aacute;s permisiva. Mejor omitirlo. Consulte la entrada perlfunc (1) en &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre esto.</target>
        </trans-unit>
        <trans-unit id="a5da0398cef906098b3aedb900161f9013fc9dbe" translate="yes" xml:space="preserve">
          <source>You should seldom if ever use &lt;code&gt;0644&lt;/code&gt; as argument to &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, because that takes away the user's option to have a more permissive umask. Better to omit it. See the perlfunc(1) entry on &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; for more on this.</source>
          <target state="translated">Rara vez deber&amp;iacute;a usar &lt;code&gt;0644&lt;/code&gt; como argumento para &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; , porque eso elimina la opci&amp;oacute;n del usuario de tener una m&amp;aacute;scara de usuario m&amp;aacute;s permisiva. Mejor omitirlo. Consulte la entrada perlfunc (1) en &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre esto.</target>
        </trans-unit>
        <trans-unit id="93291955e6753d9b28d9290f1f843ab314e860d1" translate="yes" xml:space="preserve">
          <source>You should take great pains to try to pass the function the type of variable it wants, when possible. It will save you a lot of trouble in the long run.</source>
          <target state="translated">Debes esforzarte mucho en intentar pasar la función el tipo de variable que quiere,cuando sea posible.Te ahorrará muchos problemas a largo plazo.</target>
        </trans-unit>
        <trans-unit id="12e9cbf7ef859529e7aa6ad559377e6f6b1073a2" translate="yes" xml:space="preserve">
          <source>You should think long and hard about why you need everything loaded at once. It's just not a scalable solution.</source>
          <target state="translated">Deberías pensar mucho sobre por qué necesitas cargar todo de una vez.No es una solución escalable.</target>
        </trans-unit>
        <trans-unit id="60692fdbea6181558282af5a09ad1a91226b0568" translate="yes" xml:space="preserve">
          <source>You should use</source>
          <target state="translated">Deberías usar</target>
        </trans-unit>
        <trans-unit id="6151ee9c13ae718ea297cb2924721c23869b50eb" translate="yes" xml:space="preserve">
          <source>You should use the &lt;b&gt;-T&lt;/b&gt; flag to enable taint checking (see &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;) even if we aren't running setuid or setgid. This is always a good idea for servers or any program run on behalf of someone else (like CGI scripts), because it lessens the chances that people from the outside will be able to compromise your system.</source>
          <target state="translated">Debe usar la bandera &lt;b&gt;-T&lt;/b&gt; para habilitar la comprobaci&amp;oacute;n de &lt;a href=&quot;perlsec&quot;&gt;taint&lt;/a&gt; (ver perlsec ) incluso si no estamos ejecutando setuid o setgid. Esta es siempre una buena idea para servidores o cualquier programa que se ejecute en nombre de otra persona (como los scripts CGI), porque reduce las posibilidades de que personas externas puedan comprometer su sistema.</target>
        </trans-unit>
        <trans-unit id="c6b52a2caf001c41f2fbe0900c81a2862fac3a04" translate="yes" xml:space="preserve">
          <source>You should use this</source>
          <target state="translated">Deberías usar esto</target>
        </trans-unit>
        <trans-unit id="f980030e1ddd6415377ab007be132a7835310a08" translate="yes" xml:space="preserve">
          <source>You should use this option if you are using UTF-16 and others which linefeed is not $/.</source>
          <target state="translated">Debes usar esta opción si usas UTF-16 y otros cuyo salto de línea no es $/.</target>
        </trans-unit>
        <trans-unit id="db384f65b44d08a41642068cf25462a07360e950" translate="yes" xml:space="preserve">
          <source>You should usually be able to ignore this and just use the module without thinking about deferring. However, special applications may require fine control over which writes are deferred, or may require that all writes be immediate. To disable the autodeferment feature, use</source>
          <target state="translated">Por lo general,debería ser capaz de ignorar esto y usar el módulo sin pensar en aplazarlo.Sin embargo,las aplicaciones especiales pueden requerir un control fino sobre qué escrituras se aplazan,o pueden requerir que todas las escrituras sean inmediatas.Para desactivar la función de aplazamiento automático,utilice</target>
        </trans-unit>
        <trans-unit id="962a252e8053766a043aa7e45b2c62a450a0683c" translate="yes" xml:space="preserve">
          <source>You shouldn't have to care. But you may if your Perl is before 5.14.0 or you haven't specified &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
5.012&lt;/code&gt; (or higher) because otherwise the rules for the code points in the range 128 to 255 are different depending on whether the string they are contained within is in Unicode or not. (See &lt;a href=&quot;perlunicode#When-Unicode-Does-Not-Happen&quot;&gt;When Unicode Does Not Happen in perlunicode&lt;/a&gt;.)</source>
          <target state="translated">No deber&amp;iacute;a tener que preocuparse. Pero puede hacerlo si su Perl es anterior a 5.14.0 o no ha especificado &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.012&lt;/code&gt; (o superior) porque, de lo contrario, las reglas para los puntos de c&amp;oacute;digo en el rango de 128 a 255 son diferentes dependiendo de si la cadena est&amp;aacute;n contenidos en Unicode o no. (Consulte &lt;a href=&quot;perlunicode#When-Unicode-Does-Not-Happen&quot;&gt;Cu&amp;aacute;ndo no sucede Unicode en perlunicode&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9aa9430e0cc51b74e3ef5d34b9f38ebd3c03a610" translate="yes" xml:space="preserve">
          <source>You shouldn't have to care. But you may if your Perl is before 5.14.0 or you haven't specified &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt; or &lt;code&gt;use 5.012&lt;/code&gt; (or higher) because otherwise the rules for the code points in the range 128 to 255 are different depending on whether the string they are contained within is in Unicode or not. (See &lt;a href=&quot;perlunicode#When-Unicode-Does-Not-Happen&quot;&gt;&quot;When Unicode Does Not Happen&quot; in perlunicode&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8856a657ecb3d97a5c46abba56a556f46cc66ed" translate="yes" xml:space="preserve">
          <source>You shouldn't need to set this variable, since File::Find should now detect such file systems on-the-fly and switch itself to using stat. This works even for parts of your file system, like a mounted CD-ROM.</source>
          <target state="translated">No debería ser necesario establecer esta variable,ya que File::Find debería ahora detectar tales sistemas de archivos sobre la marcha y pasar a usar stat.Esto funciona incluso para partes de su sistema de archivos,como un CD-ROM montado.</target>
        </trans-unit>
        <trans-unit id="07632dfd399f0ee08d2dcc1bc356caea0fb1fc3a" translate="yes" xml:space="preserve">
          <source>You shouldn't worry about what this format is, because conversion is automatically done when you decode or encode.</source>
          <target state="translated">No deberías preocuparte por el formato,porque la conversión se hace automáticamente cuando decodificas o codificas.</target>
        </trans-unit>
        <trans-unit id="1bf2aae490ef3108185dddeac7ace7d36d9b8359" translate="yes" xml:space="preserve">
          <source>You specified a character that has the given plainer way of writing it, and which is also portable to platforms running with different character sets.</source>
          <target state="translated">Especificaste un personaje que tiene la forma más sencilla de escribirlo,y que también es portable a plataformas que funcionan con diferentes conjuntos de caracteres.</target>
        </trans-unit>
        <trans-unit id="ba1446898cf703a433f10e50053c48b7c4bd65ea" translate="yes" xml:space="preserve">
          <source>You specify the parameters that will be passed into the XSUB on the line(s) after you declare the function's return value and name. Each input parameter line starts with optional whitespace, and may have an optional terminating semicolon.</source>
          <target state="translated">Se especifican los parámetros que se pasarán al XSUB en la(s)línea(s)después de declarar el valor de retorno y el nombre de la función.Cada línea de parámetros de entrada comienza con un espacio en blanco opcional,y puede tener un punto y coma opcional de terminación.</target>
        </trans-unit>
        <trans-unit id="5e23d741eb164f1a1d95de07ecc25c6899dd796b" translate="yes" xml:space="preserve">
          <source>You spend lots and lots of money on dedicated hardware, but this is bound to get you talked about.</source>
          <target state="translated">Gastas mucho,mucho dinero en hardware dedicado,pero esto hará que se hable de ello.</target>
        </trans-unit>
        <trans-unit id="e47578a3d656799aa6fd209dfd66ed644e50edb2" translate="yes" xml:space="preserve">
          <source>You then can run the test(s) from your test suite that call &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;. At this point the output of &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; is safely captured by &lt;a href=&quot;tester&quot;&gt;Test::Builder::Tester&lt;/a&gt; rather than being interpreted as real test output.</source>
          <target state="translated">Luego puede ejecutar la (s) prueba (s) desde su suite de pruebas que llaman a &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; . En este punto, la salida de &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; es capturada de forma segura por &lt;a href=&quot;tester&quot;&gt;Test :: Builder :: Tester en&lt;/a&gt; lugar de ser interpretada como una salida de prueba real.</target>
        </trans-unit>
        <trans-unit id="27cca9133f1312a001d7fe1a85c24e4f576073c8" translate="yes" xml:space="preserve">
          <source>You then can run the test(s) from your test suite that call &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt;. At this point the output of &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; is safely captured by &lt;a href=&quot;Test::Builder::Tester&quot;&gt;Test::Builder::Tester&lt;/a&gt; rather than being interpreted as real test output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677380f0fc96290216b3b386e909881a38477756" translate="yes" xml:space="preserve">
          <source>You think about that, and realize that it doesn't even work right for English, as it can produce this output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f392c3f60b78b930a2c99b682f5745b402f97b" translate="yes" xml:space="preserve">
          <source>You tried to use a negative time argument.</source>
          <target state="translated">Intentaste usar un argumento de tiempo negativo.</target>
        </trans-unit>
        <trans-unit id="d0e63499831fb2a66fb9056cf426d7e6b0b72f22" translate="yes" xml:space="preserve">
          <source>You use an old version of GNU make. See &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215da501a4d763185822fdec5710086fea4dd9c5" translate="yes" xml:space="preserve">
          <source>You use an old version of GNU make. See &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;.</source>
          <target state="translated">Utiliza una versi&amp;oacute;n antigua de GNU make. Consulte los &lt;a href=&quot;#Prerequisites&quot;&gt;requisitos previos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="220275358a49875c3abbea24e2340553d9cb4444" translate="yes" xml:space="preserve">
          <source>You use the &lt;code&gt;\G&lt;/code&gt; anchor to start the next match on the same string where the last match left off. The regular expression engine cannot skip over any characters to find the next match with this anchor, so &lt;code&gt;\G&lt;/code&gt; is similar to the beginning of string anchor, &lt;code&gt;^&lt;/code&gt;. The &lt;code&gt;\G&lt;/code&gt; anchor is typically used with the &lt;code&gt;g&lt;/code&gt; flag. It uses the value of &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; as the position to start the next match. As the match operator makes successive matches, it updates &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; with the position of the next character past the last match (or the first character of the next match, depending on how you like to look at it). Each string has its own &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Utiliza el ancla &lt;code&gt;\G&lt;/code&gt; para iniciar la siguiente coincidencia en la misma cadena donde termin&amp;oacute; la &amp;uacute;ltima coincidencia. El motor de expresiones regulares no puede omitir ning&amp;uacute;n car&amp;aacute;cter para encontrar la siguiente coincidencia con este ancla, por lo que &lt;code&gt;\G&lt;/code&gt; es similar al comienzo del ancla de cadena, &lt;code&gt;^&lt;/code&gt; . El ancla &lt;code&gt;\G&lt;/code&gt; se usa t&amp;iacute;picamente con la bandera &lt;code&gt;g&lt;/code&gt; . Utiliza el valor de &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; como la posici&amp;oacute;n para iniciar la siguiente partida. A medida que el operador de coincidencias realiza coincidencias sucesivas, actualiza &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; con la posici&amp;oacute;n del siguiente car&amp;aacute;cter despu&amp;eacute;s de la &amp;uacute;ltima coincidencia (o el primer car&amp;aacute;cter de la siguiente coincidencia, dependiendo de c&amp;oacute;mo le guste verlo). Cada cadena tiene su propio valor &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e5946dcfcf3479db4ae2e5695fe6c76f97743a7" translate="yes" xml:space="preserve">
          <source>You use the &lt;code&gt;\G&lt;/code&gt; anchor to start the next match on the same string where the last match left off. The regular expression engine cannot skip over any characters to find the next match with this anchor, so &lt;code&gt;\G&lt;/code&gt; is similar to the beginning of string anchor, &lt;code&gt;^&lt;/code&gt;. The &lt;code&gt;\G&lt;/code&gt; anchor is typically used with the &lt;code&gt;g&lt;/code&gt; modifier. It uses the value of &lt;code&gt;pos()&lt;/code&gt; as the position to start the next match. As the match operator makes successive matches, it updates &lt;code&gt;pos()&lt;/code&gt; with the position of the next character past the last match (or the first character of the next match, depending on how you like to look at it). Each string has its own &lt;code&gt;pos()&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc28690a1164ffed63384fc9d48573f0201b1c8c" translate="yes" xml:space="preserve">
          <source>You use the utime() function documented in &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt;. By way of example, here's a little program that copies the read and write times from its first argument to all the rest of them.</source>
          <target state="translated">Utiliza la funci&amp;oacute;n utime () documentada en &lt;a href=&quot;functions/utime&quot;&gt;utime&lt;/a&gt; . A modo de ejemplo, aqu&amp;iacute; hay un peque&amp;ntilde;o programa que copia los tiempos de lectura y escritura desde su primer argumento a todos los dem&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="9d5d257c0d5834299b68e1d80c48e829b8bcc94a" translate="yes" xml:space="preserve">
          <source>You use the utime() function documented in &lt;a href=&quot;perlfunc#utime&quot;&gt;&quot;utime&quot; in perlfunc&lt;/a&gt;. By way of example, here's a little program that copies the read and write times from its first argument to all the rest of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6636b861a3b2aa1c111b3f0b60ae946532727186" translate="yes" xml:space="preserve">
          <source>You usually can use the value of &lt;code&gt;$^X&lt;/code&gt; to re-invoke an independent copy of the same perl that is currently running, e.g.,</source>
          <target state="translated">Por lo general, puede usar el valor de &lt;code&gt;$^X&lt;/code&gt; para volver a invocar una copia independiente del mismo Perl que se est&amp;aacute; ejecutando actualmente, por ejemplo,</target>
        </trans-unit>
        <trans-unit id="aa6e6cfea08fbea7a5de694a45b0570deb9eda14" translate="yes" xml:space="preserve">
          <source>You usually can't. Memory allocated to lexicals (i.e. my() variables) cannot be reclaimed or reused even if they go out of scope. It is reserved in case the variables come back into scope. Memory allocated to global variables can be reused (within your program) by using undef() and/or delete().</source>
          <target state="translated">Normalmente no puedes.La memoria asignada a los léxicos (es decir,mis()variables)no puede ser reclamada o reutilizada incluso si se salen de su ámbito.Se reserva en caso de que las variables vuelvan a entrar en el ámbito de aplicación.La memoria asignada a las variables globales puede ser reutilizada (dentro de su programa)usando undef()y/o delete().</target>
        </trans-unit>
        <trans-unit id="654d5925759821a41f7b319f6f5acce1580b7e6a" translate="yes" xml:space="preserve">
          <source>You want to temporarily change just one element of an array or hash.</source>
          <target state="translated">Quieres cambiar temporalmente sólo un elemento de una matriz o hash.</target>
        </trans-unit>
        <trans-unit id="d06ad7bf53cef6bd6922e06d9d929dd05f8dbea0" translate="yes" xml:space="preserve">
          <source>You will almost certainly be better off using the &lt;code&gt;PL_FILES&lt;/code&gt; system, instead. See above, or the &lt;a href=&quot;ExtUtils::MakeMaker::FAQ&quot;&gt;ExtUtils::MakeMaker::FAQ&lt;/a&gt; entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba6881210a4041e425c0b40054f89e605a3c752" translate="yes" xml:space="preserve">
          <source>You will also need to be able to connect over the Internet to the public key servers, like pgp.mit.edu, and their port 11731 (the HKP protocol).</source>
          <target state="translated">También deberá poder conectarse a través de Internet a los servidores de clave pública,como pgp.mit.edu,y a su puerto 11731 (el protocolo HKP).</target>
        </trans-unit>
        <trans-unit id="c62030728cb5bac5bc525932491c14ac0a7adf6d" translate="yes" xml:space="preserve">
          <source>You will also need to download the &quot;Platform SDK&quot; (the &quot;Core SDK&quot; and &quot;MDAC SDK&quot; components are required) for header files, libraries and rc.exe, and &quot;.NET Framework SDK&quot; for more libraries and nmake.exe. Note that the latter (which also includes the free compiler and linker) requires the &quot;.NET Framework Redistributable&quot; to be installed first. This can be downloaded and installed separately, but is included in the &quot;Visual C++ Toolkit 2003&quot; anyway.</source>
          <target state="translated">También necesitará descargar el &quot;Platform SDK&quot; (se requieren los componentes &quot;Core SDK&quot; y &quot;MDAC SDK&quot;)para los archivos de encabezado,bibliotecas y rc.exe,y &quot;.NET Framework SDK&quot; para más bibliotecas y nmake.exe.Tenga en cuenta que este último (que también incluye el compilador y enlazador gratuito)requiere que se instale primero el &quot;.NET Framework Redistributable&quot;.Este puede descargarse e instalarse por separado,pero de todas formas está incluido en el &quot;Visual C++Toolkit 2003&quot;.</target>
        </trans-unit>
        <trans-unit id="356f5d0daa70748f28cbf7166d4f341295254619" translate="yes" xml:space="preserve">
          <source>You will also need to download the &quot;Windows SDK&quot; (the &quot;Core SDK&quot; and &quot;MDAC SDK&quot; components are required) for more header files and libraries.</source>
          <target state="translated">También necesitará descargar el &quot;Windows SDK&quot; (se requieren los componentes &quot;Core SDK&quot; y &quot;MDAC SDK&quot;)para obtener más archivos de encabezado y bibliotecas.</target>
        </trans-unit>
        <trans-unit id="a1a5cfadaa899360662110efdf3739aae4dbc6c1" translate="yes" xml:space="preserve">
          <source>You will encounter this particular error message when you have the &lt;code&gt;strict 'subs'&lt;/code&gt; pragma (or the full strict pragma) in your script. Consider this script:</source>
          <target state="translated">Encontrar&amp;aacute; este mensaje de error en particular cuando tenga el pragma &lt;code&gt;strict 'subs'&lt;/code&gt; (o el pragma estricto completo) en su script. Considere este gui&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="23e29e8947be99b87040c3c4a0668f86aaf880a4" translate="yes" xml:space="preserve">
          <source>You will find brief info on &lt;code&gt;EUC-CN&lt;/code&gt;, &lt;code&gt;GBK&lt;/code&gt; and mostly on &lt;code&gt;GB 18030&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d527eca4336857f6af5af5d0a105cad653a71a0" translate="yes" xml:space="preserve">
          <source>You will find this behavior is slightly different from that of &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;$SIG{__DIE__}&lt;/code&gt;&lt;/a&gt; handlers (which don't suppress the error text, but can instead call &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; again to change it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef82421bf1d6104efddfdc8565b14c0ddc86aec" translate="yes" xml:space="preserve">
          <source>You will find this behavior is slightly different from that of &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handlers (which don't suppress the error text, but can instead call &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again to change it).</source>
          <target state="translated">Encontrar&amp;aacute; que este comportamiento es ligeramente diferente al de los controladores &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; (que no suprimen el texto de error, sino que pueden volver a llamar a &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; para cambiarlo).</target>
        </trans-unit>
        <trans-unit id="7d85e118af6c81732006143a60990cead4fa03d5" translate="yes" xml:space="preserve">
          <source>You will find this behavior is slightly different from that of &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; handlers (which don't suppress the error text, but can instead call &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; again to change it).</source>
          <target state="translated">Encontrar&amp;aacute; que este comportamiento es ligeramente diferente al de los controladores &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; (que no suprimen el texto de error, sino que pueden volver a llamar a &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; para cambiarlo).</target>
        </trans-unit>
        <trans-unit id="c01bddfdbad27a7674a351ac148e02cb61a266a6" translate="yes" xml:space="preserve">
          <source>You will get this error message when one of the parameters in the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call is wrong. Unfortunately there are quite a few parameters to get wrong, so it can be difficult to figure out which one it is.</source>
          <target state="translated">Recibir&amp;aacute; este mensaje de error cuando uno de los par&amp;aacute;metros de la llamada de &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; sea ​​incorrecto. Desafortunadamente, hay bastantes par&amp;aacute;metros que pueden equivocarse, por lo que puede ser dif&amp;iacute;cil determinar cu&amp;aacute;l es.</target>
        </trans-unit>
        <trans-unit id="6f39ce5468b191fe767e35548ddecfe66b13656d" translate="yes" xml:space="preserve">
          <source>You will get this error message when one of the parameters in the &lt;code&gt;tie&lt;/code&gt; call is wrong. Unfortunately there are quite a few parameters to get wrong, so it can be difficult to figure out which one it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b306755ccc7dd24d9d304eb11d95322f9c7d1c36" translate="yes" xml:space="preserve">
          <source>You will have to make sure that CCTYPE is set correctly and that CCHOME points to wherever you installed your compiler.</source>
          <target state="translated">Tendrás que asegurarte de que CCTYPE esté configurado correctamente y que CCHOME apunte a donde hayas instalado tu compilador.</target>
        </trans-unit>
        <trans-unit id="5a37a6f06ca5d5f038a38f2ddd94e62c35c0fb8e" translate="yes" xml:space="preserve">
          <source>You will have to make sure that CCTYPE is set correctly and that CCHOME points to wherever you installed your compiler. For GCC this should be the directory that contains the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d67b6a7548006b180c9c0aa7f1777391e8e3f6" translate="yes" xml:space="preserve">
          <source>You will need a copy of Git for your computer. You can fetch a copy of the repository using the git protocol:</source>
          <target state="translated">Necesitarás una copia de Git para tu ordenador.Puedes obtener una copia del repositorio usando el protocolo de Git:</target>
        </trans-unit>
        <trans-unit id="7a0e1442c7d674a64133a4ac5cbad0b8f84016fe" translate="yes" xml:space="preserve">
          <source>You will need perl version 5.005_03 or newer.</source>
          <target state="translated">Necesitarás la versión 5.005_03 de Perl o más reciente.</target>
        </trans-unit>
        <trans-unit id="c20642cf215c3811e3976c0a074a0bc8e167607f" translate="yes" xml:space="preserve">
          <source>You will need the packages mentioned in</source>
          <target state="translated">Necesitará los paquetes mencionados en</target>
        </trans-unit>
        <trans-unit id="125a7a338622da6411e41d9bf9ce7dc1495ae8ff" translate="yes" xml:space="preserve">
          <source>You will need to have Module::Signature installed, which in turn requires that you have at least one of Crypt::OpenPGP module or the command-line</source>
          <target state="translated">Necesitará tener instalado el módulo::Signature,que a su vez requiere que tenga al menos un módulo Crypt::OpenPGP o la línea de comandos</target>
        </trans-unit>
        <trans-unit id="26225667638a5ef1fac02d60146f2f3c0e15d299" translate="yes" xml:space="preserve">
          <source>You will need to open every other filehandle on your own. Although there are many variants, the most common way to call Perl's open() function is with three arguments and one return value:</source>
          <target state="translated">Tendrás que abrir todos los demás archivadores por tu cuenta.Aunque hay muchas variantes,la forma más común de llamar a la función open()de Perl es con tres argumentos y un valor de retorno:</target>
        </trans-unit>
        <trans-unit id="e7fe6fd13dad565a05157034d79dc2c0ed04e368" translate="yes" xml:space="preserve">
          <source>You will probably find these modifiers even more useful if you have to deal with big- or little-endian C structures. Be sure to read &lt;a href=&quot;#Packing-and-Unpacking-C-Structures&quot;&gt;&quot;Packing and Unpacking C Structures&quot;&lt;/a&gt; for more on that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced186b3bff5ac2b886750a50b53e155abe57dbc" translate="yes" xml:space="preserve">
          <source>You will probably find these modifiers even more useful if you have to deal with big- or little-endian C structures. Be sure to read &lt;a href=&quot;#Packing-and-Unpacking-C-Structures&quot;&gt;Packing and Unpacking C Structures&lt;/a&gt; for more on that.</source>
          <target state="translated">Probablemente encontrar&amp;aacute; estos modificadores a&amp;uacute;n m&amp;aacute;s &amp;uacute;tiles si tiene que lidiar con estructuras C big o little-endian. Aseg&amp;uacute;rese de leer &lt;a href=&quot;#Packing-and-Unpacking-C-Structures&quot;&gt;Empaquetado y desempaquetado de estructuras C&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n al respecto.</target>
        </trans-unit>
        <trans-unit id="299bf5b3f1c12a5c613500fd1bf200a8e448ae9f" translate="yes" xml:space="preserve">
          <source>You will see a message about errors while extracting</source>
          <target state="translated">Verá un mensaje sobre errores al extraer</target>
        </trans-unit>
        <trans-unit id="5094570ece83ba87b116e497a48639d59ad16c42" translate="yes" xml:space="preserve">
          <source>You will see your commits being re-applied, and you will then be able to push safely. More information about rebasing can be found in the documentation for the git-rebase(1) command.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
